
FWCP_MK2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000244  00800100  00006870  00006904  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006870  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000478  00800344  00800344  00006b48  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00006b48  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000428  00000000  00000000  00006ba4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000966f  00000000  00000000  00006fcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000193a  00000000  00000000  0001063b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000380e  00000000  00000000  00011f75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00001060  00000000  00000000  00015784  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000136e  00000000  00000000  000167e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000070fc  00000000  00000000  00017b52  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000400  00000000  00000000  0001ec4e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	d0 c2       	rjmp	.+1440   	; 0x5a2 <__dtors_end>
       2:	00 00       	nop
       4:	fd c2       	rjmp	.+1530   	; 0x600 <__bad_interrupt>
       6:	00 00       	nop
       8:	fb c2       	rjmp	.+1526   	; 0x600 <__bad_interrupt>
       a:	00 00       	nop
       c:	f9 c2       	rjmp	.+1522   	; 0x600 <__bad_interrupt>
       e:	00 00       	nop
      10:	f7 c2       	rjmp	.+1518   	; 0x600 <__bad_interrupt>
      12:	00 00       	nop
      14:	f5 c2       	rjmp	.+1514   	; 0x600 <__bad_interrupt>
      16:	00 00       	nop
      18:	f3 c2       	rjmp	.+1510   	; 0x600 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f1 c2       	rjmp	.+1506   	; 0x600 <__bad_interrupt>
      1e:	00 00       	nop
      20:	ef c2       	rjmp	.+1502   	; 0x600 <__bad_interrupt>
      22:	00 00       	nop
      24:	ed c2       	rjmp	.+1498   	; 0x600 <__bad_interrupt>
      26:	00 00       	nop
      28:	eb c2       	rjmp	.+1494   	; 0x600 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0c 94 a3 1a 	jmp	0x3546	; 0x3546 <__vector_11>
      30:	e7 c2       	rjmp	.+1486   	; 0x600 <__bad_interrupt>
      32:	00 00       	nop
      34:	e5 c2       	rjmp	.+1482   	; 0x600 <__bad_interrupt>
      36:	00 00       	nop
      38:	e3 c2       	rjmp	.+1478   	; 0x600 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	e1 c2       	rjmp	.+1474   	; 0x600 <__bad_interrupt>
      3e:	00 00       	nop
      40:	df c2       	rjmp	.+1470   	; 0x600 <__bad_interrupt>
      42:	00 00       	nop
      44:	dd c2       	rjmp	.+1466   	; 0x600 <__bad_interrupt>
      46:	00 00       	nop
      48:	db c2       	rjmp	.+1462   	; 0x600 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	d9 c2       	rjmp	.+1458   	; 0x600 <__bad_interrupt>
      4e:	00 00       	nop
      50:	d7 c2       	rjmp	.+1454   	; 0x600 <__bad_interrupt>
      52:	00 00       	nop
      54:	d5 c2       	rjmp	.+1450   	; 0x600 <__bad_interrupt>
      56:	00 00       	nop
      58:	d3 c2       	rjmp	.+1446   	; 0x600 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d1 c2       	rjmp	.+1442   	; 0x600 <__bad_interrupt>
      5e:	00 00       	nop
      60:	cf c2       	rjmp	.+1438   	; 0x600 <__bad_interrupt>
      62:	00 00       	nop
      64:	cd c2       	rjmp	.+1434   	; 0x600 <__bad_interrupt>
      66:	00 00       	nop
      68:	cb c2       	rjmp	.+1430   	; 0x600 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	c9 c2       	rjmp	.+1426   	; 0x600 <__bad_interrupt>
      6e:	00 00       	nop
      70:	c7 c2       	rjmp	.+1422   	; 0x600 <__bad_interrupt>
      72:	00 00       	nop
      74:	c5 c2       	rjmp	.+1418   	; 0x600 <__bad_interrupt>
      76:	00 00       	nop
      78:	c3 c2       	rjmp	.+1414   	; 0x600 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c1 c2       	rjmp	.+1410   	; 0x600 <__bad_interrupt>
      7e:	00 00       	nop
      80:	bf c2       	rjmp	.+1406   	; 0x600 <__bad_interrupt>
      82:	00 00       	nop
      84:	bd c2       	rjmp	.+1402   	; 0x600 <__bad_interrupt>
      86:	00 00       	nop
      88:	bb c2       	rjmp	.+1398   	; 0x600 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	f4 17       	cp	r31, r20
      8e:	1c 18       	sub	r1, r12
      90:	46 18       	sub	r4, r6
      92:	71 18       	sub	r7, r1
      94:	9b 18       	sub	r9, r11
      96:	c4 18       	sub	r12, r4
      98:	ec 18       	sub	r14, r12
      9a:	15 19       	sub	r17, r5
      9c:	8d 19       	sub	r24, r13
      9e:	b8 19       	sub	r27, r8
      a0:	7f 1e       	adc	r7, r31
      a2:	8a 1e       	adc	r8, r26
      a4:	90 1e       	adc	r9, r16
      a6:	96 1e       	adc	r9, r22
      a8:	9d 1e       	adc	r9, r29
      aa:	a3 1e       	adc	r10, r19
      ac:	b1 1e       	adc	r11, r17
      ae:	40 1f       	adc	r20, r16
      b0:	46 1f       	adc	r20, r22
      b2:	4c 1f       	adc	r20, r28
      b4:	52 1f       	adc	r21, r18
      b6:	58 1f       	adc	r21, r24
      b8:	5e 1f       	adc	r21, r30
      ba:	64 1f       	adc	r22, r20
      bc:	6a 1f       	adc	r22, r26
      be:	08 4a       	sbci	r16, 0xA8	; 168
      c0:	d7 3b       	cpi	r29, 0xB7	; 183
      c2:	3b ce       	rjmp	.-906    	; 0xfffffd3a <__eeprom_end+0xff7efd3a>
      c4:	01 6e       	ori	r16, 0xE1	; 225
      c6:	84 bc       	out	0x24, r8	; 36
      c8:	bf fd       	.word	0xfdbf	; ????
      ca:	c1 2f       	mov	r28, r17
      cc:	3d 6c       	ori	r19, 0xCD	; 205
      ce:	74 31       	cpi	r23, 0x14	; 20
      d0:	9a bd       	out	0x2a, r25	; 42
      d2:	56 83       	std	Z+6, r21	; 0x06
      d4:	3d da       	rcall	.-2950   	; 0xfffff550 <__eeprom_end+0xff7ef550>
      d6:	3d 00       	.word	0x003d	; ????
      d8:	c7 7f       	andi	r28, 0xF7	; 247
      da:	11 be       	out	0x31, r1	; 49
      dc:	d9 e4       	ldi	r29, 0x49	; 73
      de:	bb 4c       	sbci	r27, 0xCB	; 203
      e0:	3e 91       	ld	r19, -X
      e2:	6b aa       	std	Y+51, r6	; 0x33
      e4:	aa be       	out	0x3a, r10	; 58
      e6:	00 00       	nop
      e8:	00 80       	ld	r0, Z
      ea:	3f 05       	cpc	r19, r15
      ec:	a8 4c       	sbci	r26, 0xC8	; 200
      ee:	cd b2       	in	r12, 0x1d	; 29
      f0:	d4 4e       	sbci	r29, 0xE4	; 228
      f2:	b9 38       	cpi	r27, 0x89	; 137
      f4:	36 a9       	ldd	r19, Z+54	; 0x36
      f6:	02 0c       	add	r0, r2
      f8:	50 b9       	out	0x00, r21	; 0
      fa:	91 86       	std	Z+9, r9	; 0x09
      fc:	88 08       	sbc	r8, r8
      fe:	3c a6       	std	Y+44, r3	; 0x2c
     100:	aa aa       	std	Y+50, r10	; 0x32
     102:	2a be       	out	0x3a, r2	; 58
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	3f 08       	sbc	r3, r15
     10a:	00 00       	nop
     10c:	00 be       	out	0x30, r0	; 48
     10e:	92 24       	eor	r9, r2
     110:	49 12       	cpse	r4, r25
     112:	3e ab       	std	Y+54, r19	; 0x36
     114:	aa aa       	std	Y+50, r10	; 0x32
     116:	2a be       	out	0x3a, r2	; 58
     118:	cd cc       	rjmp	.-1638   	; 0xfffffab4 <__eeprom_end+0xff7efab4>
     11a:	cc 4c       	sbci	r28, 0xCC	; 204
     11c:	3e 00       	.word	0x003e	; ????
     11e:	00 00       	nop
     120:	80 be       	out	0x30, r8	; 48
     122:	ab aa       	std	Y+51, r10	; 0x33
     124:	aa aa       	std	Y+50, r10	; 0x32
     126:	3e 00       	.word	0x003e	; ????
     128:	00 00       	nop
     12a:	00 bf       	out	0x30, r16	; 48
     12c:	00 00       	nop
     12e:	00 80       	ld	r0, Z
     130:	3f 00       	.word	0x003f	; ????
     132:	00 00       	nop
     134:	00 00       	nop
     136:	08 41       	sbci	r16, 0x18	; 24
     138:	78 d3       	rcall	.+1776   	; 0x82a <_ZN7Display9draw_lineEhhhf+0x1e>
     13a:	bb 43       	sbci	r27, 0x3B	; 59
     13c:	87 d1       	rcall	.+782    	; 0x44c <_ZL7font5x8+0x186>
     13e:	13 3d       	cpi	r17, 0xD3	; 211
     140:	19 0e       	add	r1, r25
     142:	3c c3       	rjmp	.+1656   	; 0x7bc <_ZN7Display9drawPixelEhhh+0x24>
     144:	bd 42       	sbci	r27, 0x2D	; 45
     146:	82 ad       	ldd	r24, Z+58	; 0x3a
     148:	2b 3e       	cpi	r18, 0xEB	; 235
     14a:	68 ec       	ldi	r22, 0xC8	; 200
     14c:	82 76       	andi	r24, 0x62	; 98
     14e:	be d9       	rcall	.-3204   	; 0xfffff4cc <__eeprom_end+0xff7ef4cc>
     150:	8f e1       	ldi	r24, 0x1F	; 31
     152:	a9 3e       	cpi	r26, 0xE9	; 233
     154:	4c 80       	ldd	r4, Y+4	; 0x04
     156:	ef ff       	.word	0xffef	; ????
     158:	be 01       	movw	r22, r28
     15a:	c4 ff       	sbrs	r28, 4
     15c:	7f 3f       	cpi	r23, 0xFF	; 255
     15e:	00 00       	nop
     160:	00 00       	nop
     162:	00 06       	cpc	r0, r16
     164:	64 ec       	ldi	r22, 0xC4	; 196
     166:	1b 3c       	cpi	r17, 0xCB	; 203
     168:	04 bc       	out	0x24, r0	; 36
     16a:	16 3e       	cpi	r17, 0xE6	; 230
     16c:	3b e5       	ldi	r19, 0x5B	; 91
     16e:	b9 3c       	cpi	r27, 0xC9	; 201
     170:	c9 3c       	cpi	r28, 0xC9	; 201
     172:	37 c2       	rjmp	.+1134   	; 0x5e2 <__do_global_ctors+0xa>
     174:	9e 5a       	subi	r25, 0xAE	; 174
     176:	3d 66       	ori	r19, 0x6D	; 109
     178:	04 98       	cbi	0x00, 4	; 0
     17a:	08 3e       	cpi	r16, 0xE8	; 232
     17c:	ea 69       	ori	r30, 0x9A	; 154
     17e:	aa aa       	std	Y+50, r10	; 0x32
     180:	3e 00       	.word	0x003e	; ????
     182:	00 00       	nop
     184:	80 3f       	cpi	r24, 0xF0	; 240

00000186 <__trampolines_end>:
     186:	00 e0       	ldi	r16, 0x00	; 0
     188:	f8 fc       	.word	0xfcf8	; ????
     18a:	fe 1e       	adc	r15, r30
     18c:	07 07       	cpc	r16, r23
     18e:	07 07       	cpc	r16, r23
     190:	1e fe       	.word	0xfe1e	; ????
     192:	fc f8       	.word	0xf8fc	; ????
     194:	f0 00       	.word	0x00f0	; ????
     196:	00 07       	cpc	r16, r16
     198:	0f 3f       	cpi	r16, 0xFF	; 255
     19a:	3f 7c       	andi	r19, 0xCF	; 207
     19c:	70 70       	andi	r23, 0x00	; 0
     19e:	70 70       	andi	r23, 0x00	; 0
     1a0:	7c 3f       	cpi	r23, 0xFC	; 252
     1a2:	1f 1f       	adc	r17, r31
     1a4:	07 00       	.word	0x0007	; ????
     1a6:	00 00       	nop
     1a8:	00 06       	cpc	r0, r16
     1aa:	07 07       	cpc	r16, r23
     1ac:	ff ff       	.word	0xffff	; ????
     1ae:	ff ff       	.word	0xffff	; ????
	...
     1bc:	7f 7f       	andi	r23, 0xFF	; 255
     1be:	7f 7f       	andi	r23, 0xFF	; 255
     1c0:	00 00       	nop
     1c2:	00 00       	nop
     1c4:	00 00       	nop
     1c6:	00 38       	cpi	r16, 0x80	; 128
     1c8:	3c 3e       	cpi	r19, 0xEC	; 236
     1ca:	3e 0f       	add	r19, r30
     1cc:	07 07       	cpc	r16, r23
     1ce:	07 cf       	rjmp	.-498    	; 0xffffffde <__eeprom_end+0xff7effde>
     1d0:	ff fe       	.word	0xfeff	; ????
     1d2:	fe 38       	cpi	r31, 0x8E	; 142
     1d4:	00 00       	nop
     1d6:	00 40       	sbci	r16, 0x00	; 0
     1d8:	40 60       	ori	r20, 0x00	; 0
     1da:	70 78       	andi	r23, 0x80	; 128
     1dc:	7c 7e       	andi	r23, 0xEC	; 236
     1de:	7f 77       	andi	r23, 0x7F	; 127
     1e0:	73 71       	andi	r23, 0x13	; 19
     1e2:	70 70       	andi	r23, 0x00	; 0
     1e4:	00 00       	nop
     1e6:	00 18       	sub	r0, r0
     1e8:	1c 1e       	adc	r1, r28
     1ea:	1e 0f       	add	r17, r30
     1ec:	c7 c7       	rjmp	.+3982   	; 0x117c <_ZN7Display6analogEhhhh+0x464>
     1ee:	e7 ff       	sbrs	r30, 7
     1f0:	fe be       	out	0x3e, r15	; 62
     1f2:	9c 00       	.word	0x009c	; ????
     1f4:	00 00       	nop
     1f6:	00 0c       	add	r0, r0
     1f8:	1c 3c       	cpi	r17, 0xCC	; 204
     1fa:	3c 78       	andi	r19, 0x8C	; 140
     1fc:	70 70       	andi	r23, 0x00	; 0
     1fe:	70 79       	andi	r23, 0x90	; 144
     200:	7f 3f       	cpi	r23, 0xFF	; 255
     202:	1f 0f       	add	r17, r31
     204:	00 00       	nop
     206:	00 00       	nop
     208:	80 c0       	rjmp	.+256    	; 0x30a <_ZL7font5x8+0x44>
     20a:	e0 70       	andi	r30, 0x00	; 0
     20c:	38 1c       	adc	r3, r8
     20e:	1e ff       	.word	0xff1e	; ????
     210:	ff ff       	.word	0xffff	; ????
     212:	ff 00       	.word	0x00ff	; ????
     214:	00 00       	nop
     216:	06 07       	cpc	r16, r22
     218:	07 07       	cpc	r16, r23
     21a:	06 06       	cpc	r0, r22
     21c:	06 06       	cpc	r0, r22
     21e:	06 7f       	andi	r16, 0xF6	; 246
     220:	7f 7f       	andi	r23, 0xFF	; 255
     222:	7f 06       	cpc	r7, r31
     224:	06 00       	.word	0x0006	; ????
     226:	00 00       	nop
     228:	00 00       	nop
     22a:	f0 ff       	sbrs	r31, 0
     22c:	ff ff       	.word	0xffff	; ????
     22e:	e7 e7       	ldi	r30, 0x77	; 119
     230:	e7 e7       	ldi	r30, 0x77	; 119
     232:	c7 87       	std	Z+15, r28	; 0x0f
     234:	00 00       	nop
     236:	00 00       	nop
     238:	38 78       	andi	r19, 0x88	; 136
     23a:	71 70       	andi	r23, 0x01	; 1
     23c:	70 70       	andi	r23, 0x00	; 0
     23e:	70 70       	andi	r23, 0x00	; 0
     240:	39 3f       	cpi	r19, 0xF9	; 249
     242:	3f 1f       	adc	r19, r31
     244:	0f 00       	.word	0x000f	; ????
     246:	00 80       	ld	r0, Z
     248:	e0 f0       	brcs	.+56     	; 0x282 <__trampolines_end+0xfc>
     24a:	f8 fc       	.word	0xfcf8	; ????
     24c:	7f 7f       	andi	r23, 0xFF	; 255
     24e:	6f 67       	ori	r22, 0x7F	; 127
     250:	e1 e1       	ldi	r30, 0x11	; 17
     252:	c0 80       	ld	r12, Z
     254:	00 00       	nop
     256:	00 0f       	add	r16, r16
     258:	1f 3f       	cpi	r17, 0xFF	; 255
     25a:	3f 78       	andi	r19, 0x8F	; 143
     25c:	70 70       	andi	r23, 0x00	; 0
     25e:	70 70       	andi	r23, 0x00	; 0
     260:	78 3f       	cpi	r23, 0xF8	; 248
     262:	3f 1f       	adc	r19, r31
     264:	0f 00       	.word	0x000f	; ????
     266:	00 07       	cpc	r16, r16
     268:	07 07       	cpc	r16, r23
     26a:	07 07       	cpc	r16, r23
     26c:	c7 e7       	ldi	r28, 0x77	; 119
     26e:	f7 ff       	sbrs	r31, 7
     270:	7f 3f       	cpi	r23, 0xFF	; 255
     272:	1f 07       	cpc	r17, r31
     274:	03 01       	movw	r0, r6
     276:	00 20       	and	r0, r0
     278:	38 7c       	andi	r19, 0xC8	; 200
     27a:	7e 3f       	cpi	r23, 0xFE	; 254
     27c:	0f 07       	cpc	r16, r31
     27e:	03 00       	.word	0x0003	; ????
	...
     288:	00 1c       	adc	r0, r0
     28a:	be fe       	.word	0xfebe	; ????
     28c:	ff e7       	ldi	r31, 0x7F	; 127
     28e:	c3 c3       	rjmp	.+1926   	; 0xa16 <_ZN7Display13draw_triangleEhhhff+0xc6>
     290:	e7 ff       	sbrs	r30, 7
     292:	fe be       	out	0x3e, r15	; 62
     294:	1c 00       	.word	0x001c	; ????
     296:	00 00       	nop
     298:	0e 3f       	cpi	r16, 0xFE	; 254
     29a:	3f 7f       	andi	r19, 0xFF	; 255
     29c:	71 60       	ori	r23, 0x01	; 1
     29e:	60 60       	ori	r22, 0x00	; 0
     2a0:	71 7f       	andi	r23, 0xF1	; 241
     2a2:	3f 3f       	cpi	r19, 0xFF	; 255
     2a4:	0f 00       	.word	0x000f	; ????
     2a6:	00 78       	andi	r16, 0x80	; 128
     2a8:	fc fe       	.word	0xfefc	; ????
     2aa:	fe 8f       	std	Y+30, r31	; 0x1e
     2ac:	07 07       	cpc	r16, r23
     2ae:	07 07       	cpc	r16, r23
     2b0:	8f fe       	.word	0xfe8f	; ????
     2b2:	fe fc       	.word	0xfcfe	; ????
     2b4:	f8 00       	.word	0x00f8	; ????
     2b6:	00 00       	nop
     2b8:	00 01       	movw	r0, r0
     2ba:	43 43       	sbci	r20, 0x33	; 51
     2bc:	73 7b       	andi	r23, 0xB3	; 179
     2be:	7f 7f       	andi	r23, 0xFF	; 255
     2c0:	1f 0f       	add	r17, r31
     2c2:	07 03       	mulsu	r16, r23
	...

000002c6 <_ZL7font5x8>:
     2c6:	00 00 5f 00 00 00 07 00 07 00 14 7f 14 7f 14 24     .._............$
     2d6:	2a 7f 2a 12 23 13 08 64 62 36 49 55 22 50 00 05     *.*.#..db6IU"P..
     2e6:	03 00 00 00 1c 22 41 00 00 41 22 1c 00 14 08 3e     ....."A..A"....>
     2f6:	08 14 08 08 3e 08 08 00 50 30 00 00 08 08 08 08     ....>...P0......
     306:	08 00 60 60 00 00 20 10 08 04 02 3e 51 49 45 3e     ..``.. ....>QIE>
     316:	00 42 7f 40 00 42 61 51 49 46 21 41 45 4b 31 18     .B.@.BaQIF!AEK1.
     326:	14 12 7f 10 27 45 45 45 39 3c 4a 49 49 30 01 71     ....'EEE9<JII0.q
     336:	09 05 03 36 49 49 49 36 06 49 49 29 1e 00 36 36     ...6III6.II)..66
     346:	00 00 00 56 36 00 00 08 14 22 41 00 14 14 14 14     ...V6...."A.....
     356:	14 00 41 22 14 08 02 01 51 09 06 32 49 79 41 3e     ..A"....Q..2IyA>
     366:	7e 11 11 11 7e 7f 49 49 49 36 3e 41 41 41 22 7f     ~...~.III6>AAA".
     376:	41 41 22 1c 7f 49 49 49 41 7f 09 09 09 01 3e 41     AA"..IIIA.....>A
     386:	49 49 7a 7f 08 08 08 7f 00 41 7f 41 00 20 40 41     IIz......A.A. @A
     396:	3f 01 7f 08 14 22 41 7f 40 40 40 40 7f 02 0c 02     ?...."A.@@@@....
     3a6:	7f 7f 04 08 10 7f 3e 41 41 41 3e 7f 09 09 09 06     ......>AAA>.....
     3b6:	3e 41 51 21 5e 7f 09 19 29 46 46 49 49 49 31 01     >AQ!^...)FFIII1.
     3c6:	01 7f 01 01 3f 40 40 40 3f 1f 20 40 20 1f 3f 40     ....?@@@?. @ .?@
     3d6:	38 40 3f 63 14 08 14 63 07 08 70 08 07 61 51 49     8@?c...c..p..aQI
     3e6:	45 43 00 7f 41 41 00 02 04 08 10 20 00 41 41 7f     EC..AA..... .AA.
     3f6:	00 04 02 01 02 04 40 40 40 40 40 00 01 02 04 00     ......@@@@@.....
     406:	20 54 54 54 78 7f 48 44 44 38 38 44 44 44 20 38      TTTx.HDD88DDD 8
     416:	44 44 48 7f 38 54 54 54 18 08 7e 09 01 02 0c 52     DDH.8TTT..~....R
     426:	52 52 3e 7f 08 04 04 78 00 44 7d 40 00 20 40 44     RR>....x.D}@. @D
     436:	3d 00 7f 10 28 44 00 00 41 7f 40 00 7c 04 18 04     =...(D..A.@.|...
     446:	78 7c 08 04 04 78 38 44 44 44 38 7c 14 14 14 08     x|...x8DDD8|....
     456:	08 14 14 18 7c 7c 08 04 04 08 48 54 54 54 20 04     ....||....HTTT .
     466:	3f 44 40 20 3c 40 40 20 7c 1c 20 40 20 1c 3c 40     ?D@ <@@ |. @ .<@
     476:	30 40 3c 44 28 10 28 44 0c 50 50 50 3c 44 64 54     0@<D(.(D.PPP<DdT
     486:	4c 44 00 08 36 41 00 00 00 7f 00 00 00 41 36 08     LD..6A.......A6.
     496:	00 10 08 08 10 08                                   ......

0000049c <__c.2161>:
     49c:	6e 61 6e 00                                         nan.

000004a0 <__c.2159>:
     4a0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     4b0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     4c0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     4d0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     4e0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     4f0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     500:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     510:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     520:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     530:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     540:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     550:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     560:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     570:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     580:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     590:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000059e <__ctors_start>:
     59e:	5f 22       	and	r5, r31

000005a0 <__ctors_end>:
     5a0:	88 22       	and	r8, r24

000005a2 <__dtors_end>:
     5a2:	11 24       	eor	r1, r1
     5a4:	1f be       	out	0x3f, r1	; 63
     5a6:	cf ef       	ldi	r28, 0xFF	; 255
     5a8:	d0 e4       	ldi	r29, 0x40	; 64
     5aa:	de bf       	out	0x3e, r29	; 62
     5ac:	cd bf       	out	0x3d, r28	; 61

000005ae <__do_copy_data>:
     5ae:	13 e0       	ldi	r17, 0x03	; 3
     5b0:	a0 e0       	ldi	r26, 0x00	; 0
     5b2:	b1 e0       	ldi	r27, 0x01	; 1
     5b4:	e0 e7       	ldi	r30, 0x70	; 112
     5b6:	f8 e6       	ldi	r31, 0x68	; 104
     5b8:	00 e0       	ldi	r16, 0x00	; 0
     5ba:	0b bf       	out	0x3b, r16	; 59
     5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <__do_copy_data+0x14>
     5be:	07 90       	elpm	r0, Z+
     5c0:	0d 92       	st	X+, r0
     5c2:	a4 34       	cpi	r26, 0x44	; 68
     5c4:	b1 07       	cpc	r27, r17
     5c6:	d9 f7       	brne	.-10     	; 0x5be <__do_copy_data+0x10>

000005c8 <__do_clear_bss>:
     5c8:	27 e0       	ldi	r18, 0x07	; 7
     5ca:	a4 e4       	ldi	r26, 0x44	; 68
     5cc:	b3 e0       	ldi	r27, 0x03	; 3
     5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <.do_clear_bss_start>

000005d0 <.do_clear_bss_loop>:
     5d0:	1d 92       	st	X+, r1

000005d2 <.do_clear_bss_start>:
     5d2:	ac 3b       	cpi	r26, 0xBC	; 188
     5d4:	b2 07       	cpc	r27, r18
     5d6:	e1 f7       	brne	.-8      	; 0x5d0 <.do_clear_bss_loop>

000005d8 <__do_global_ctors>:
     5d8:	15 e0       	ldi	r17, 0x05	; 5
     5da:	c0 ea       	ldi	r28, 0xA0	; 160
     5dc:	d5 e0       	ldi	r29, 0x05	; 5
     5de:	00 e0       	ldi	r16, 0x00	; 0
     5e0:	06 c0       	rjmp	.+12     	; 0x5ee <__do_global_ctors+0x16>
     5e2:	22 97       	sbiw	r28, 0x02	; 2
     5e4:	01 09       	sbc	r16, r1
     5e6:	fe 01       	movw	r30, r28
     5e8:	0b bf       	out	0x3b, r16	; 59
     5ea:	0e 94 77 32 	call	0x64ee	; 0x64ee <__tablejump_elpm__>
     5ee:	ce 39       	cpi	r28, 0x9E	; 158
     5f0:	d1 07       	cpc	r29, r17
     5f2:	80 e0       	ldi	r24, 0x00	; 0
     5f4:	08 07       	cpc	r16, r24
     5f6:	a9 f7       	brne	.-22     	; 0x5e2 <__do_global_ctors+0xa>
     5f8:	0e 94 57 22 	call	0x44ae	; 0x44ae <main>
     5fc:	0c 94 27 34 	jmp	0x684e	; 0x684e <__do_global_dtors>

00000600 <__bad_interrupt>:
     600:	ff cc       	rjmp	.-1538   	; 0x0 <__vectors>

00000602 <_ZN7DisplayD1Ev>:
		for (uint8_t j = 0;j<64;j++)
		{
			Displayframe[i*SSD1306_WIDTH+j]=pgm_read_byte(&Glurak[i][j]);
		}
	}
}
     602:	9c 5f       	subi	r25, 0xFC	; 252
     604:	0c 94 ac 22 	jmp	0x4558	; 0x4558 <_ZN3I2CD1Ev>
     608:	08 95       	ret

0000060a <_ZN7Display10clearFrameEv>:
     60a:	fc 01       	movw	r30, r24
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	11 92       	st	Z+, r1
     612:	2f 5f       	subi	r18, 0xFF	; 255
     614:	3f 4f       	sbci	r19, 0xFF	; 255
     616:	21 15       	cp	r18, r1
     618:	84 e0       	ldi	r24, 0x04	; 4
     61a:	38 07       	cpc	r19, r24
     61c:	c9 f7       	brne	.-14     	; 0x610 <_ZN7Display10clearFrameEv+0x6>
     61e:	08 95       	ret

00000620 <_ZN7Display15ssd1306_commandEh>:
     620:	1f 93       	push	r17
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	16 2f       	mov	r17, r22
     628:	ec 01       	movw	r28, r24
     62a:	dc 5f       	subi	r29, 0xFC	; 252
     62c:	ce 01       	movw	r24, r28
     62e:	0e 94 ad 22 	call	0x455a	; 0x455a <_ZN3I2C9twi_startEv>
     632:	68 e7       	ldi	r22, 0x78	; 120
     634:	ce 01       	movw	r24, r28
     636:	0e 94 b5 22 	call	0x456a	; 0x456a <_ZN3I2C9twi_writeEh>
     63a:	60 e0       	ldi	r22, 0x00	; 0
     63c:	ce 01       	movw	r24, r28
     63e:	0e 94 b5 22 	call	0x456a	; 0x456a <_ZN3I2C9twi_writeEh>
     642:	61 2f       	mov	r22, r17
     644:	ce 01       	movw	r24, r28
     646:	0e 94 b5 22 	call	0x456a	; 0x456a <_ZN3I2C9twi_writeEh>
     64a:	ce 01       	movw	r24, r28
     64c:	0e 94 b1 22 	call	0x4562	; 0x4562 <_ZN3I2C8twi_stopEv>
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	08 95       	ret

00000658 <_ZN7Display17InitializeDisplayEv>:
     658:	cf 93       	push	r28
     65a:	df 93       	push	r29
     65c:	ec 01       	movw	r28, r24
     65e:	6e ea       	ldi	r22, 0xAE	; 174
     660:	df df       	rcall	.-66     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     662:	65 ed       	ldi	r22, 0xD5	; 213
     664:	ce 01       	movw	r24, r28
     666:	dc df       	rcall	.-72     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     668:	60 e8       	ldi	r22, 0x80	; 128
     66a:	ce 01       	movw	r24, r28
     66c:	d9 df       	rcall	.-78     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     66e:	68 ea       	ldi	r22, 0xA8	; 168
     670:	ce 01       	movw	r24, r28
     672:	d6 df       	rcall	.-84     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     674:	6f e3       	ldi	r22, 0x3F	; 63
     676:	ce 01       	movw	r24, r28
     678:	d3 df       	rcall	.-90     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     67a:	63 ed       	ldi	r22, 0xD3	; 211
     67c:	ce 01       	movw	r24, r28
     67e:	d0 df       	rcall	.-96     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	ce 01       	movw	r24, r28
     684:	cd df       	rcall	.-102    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     686:	60 e4       	ldi	r22, 0x40	; 64
     688:	ce 01       	movw	r24, r28
     68a:	ca df       	rcall	.-108    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     68c:	6d e8       	ldi	r22, 0x8D	; 141
     68e:	ce 01       	movw	r24, r28
     690:	c7 df       	rcall	.-114    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     692:	64 e1       	ldi	r22, 0x14	; 20
     694:	ce 01       	movw	r24, r28
     696:	c4 df       	rcall	.-120    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     698:	60 e2       	ldi	r22, 0x20	; 32
     69a:	ce 01       	movw	r24, r28
     69c:	c1 df       	rcall	.-126    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	ce 01       	movw	r24, r28
     6a2:	be df       	rcall	.-132    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6a4:	61 ea       	ldi	r22, 0xA1	; 161
     6a6:	ce 01       	movw	r24, r28
     6a8:	bb df       	rcall	.-138    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6aa:	68 ec       	ldi	r22, 0xC8	; 200
     6ac:	ce 01       	movw	r24, r28
     6ae:	b8 df       	rcall	.-144    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6b0:	6a ed       	ldi	r22, 0xDA	; 218
     6b2:	ce 01       	movw	r24, r28
     6b4:	b5 df       	rcall	.-150    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6b6:	62 e1       	ldi	r22, 0x12	; 18
     6b8:	ce 01       	movw	r24, r28
     6ba:	b2 df       	rcall	.-156    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6bc:	61 e8       	ldi	r22, 0x81	; 129
     6be:	ce 01       	movw	r24, r28
     6c0:	af df       	rcall	.-162    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6c2:	6f ec       	ldi	r22, 0xCF	; 207
     6c4:	ce 01       	movw	r24, r28
     6c6:	ac df       	rcall	.-168    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6c8:	69 ed       	ldi	r22, 0xD9	; 217
     6ca:	ce 01       	movw	r24, r28
     6cc:	a9 df       	rcall	.-174    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6ce:	61 ef       	ldi	r22, 0xF1	; 241
     6d0:	ce 01       	movw	r24, r28
     6d2:	a6 df       	rcall	.-180    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6d4:	6b ed       	ldi	r22, 0xDB	; 219
     6d6:	ce 01       	movw	r24, r28
     6d8:	a3 df       	rcall	.-186    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6da:	60 e4       	ldi	r22, 0x40	; 64
     6dc:	ce 01       	movw	r24, r28
     6de:	a0 df       	rcall	.-192    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6e0:	64 ea       	ldi	r22, 0xA4	; 164
     6e2:	ce 01       	movw	r24, r28
     6e4:	9d df       	rcall	.-198    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6e6:	66 ea       	ldi	r22, 0xA6	; 166
     6e8:	ce 01       	movw	r24, r28
     6ea:	9a df       	rcall	.-204    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6ec:	6f ea       	ldi	r22, 0xAF	; 175
     6ee:	ce 01       	movw	r24, r28
     6f0:	97 df       	rcall	.-210    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <_ZN7DisplayC1Ev>:
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	ec 01       	movw	r28, r24
     6fe:	9c 5f       	subi	r25, 0xFC	; 252
     700:	0e 94 a8 22 	call	0x4550	; 0x4550 <_ZN3I2CC1Ev>
     704:	ce 01       	movw	r24, r28
     706:	a8 df       	rcall	.-176    	; 0x658 <_ZN7Display17InitializeDisplayEv>
     708:	df 91       	pop	r29
     70a:	cf 91       	pop	r28
     70c:	08 95       	ret

0000070e <_ZN7Display6invertEh>:
     70e:	66 23       	and	r22, r22
     710:	19 f0       	breq	.+6      	; 0x718 <_ZN7Display6invertEh+0xa>
     712:	67 ea       	ldi	r22, 0xA7	; 167
     714:	85 cf       	rjmp	.-246    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     716:	08 95       	ret
     718:	66 ea       	ldi	r22, 0xA6	; 166
     71a:	82 cf       	rjmp	.-252    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     71c:	08 95       	ret

0000071e <_ZN7Display9sendFrameEv>:
     71e:	ef 92       	push	r14
     720:	ff 92       	push	r15
     722:	0f 93       	push	r16
     724:	1f 93       	push	r17
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	8c 01       	movw	r16, r24
     72c:	61 e2       	ldi	r22, 0x21	; 33
     72e:	78 df       	rcall	.-272    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     730:	60 e0       	ldi	r22, 0x00	; 0
     732:	c8 01       	movw	r24, r16
     734:	75 df       	rcall	.-278    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     736:	6f e7       	ldi	r22, 0x7F	; 127
     738:	c8 01       	movw	r24, r16
     73a:	72 df       	rcall	.-284    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     73c:	62 e2       	ldi	r22, 0x22	; 34
     73e:	c8 01       	movw	r24, r16
     740:	6f df       	rcall	.-290    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	c8 01       	movw	r24, r16
     746:	6c df       	rcall	.-296    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     748:	67 e0       	ldi	r22, 0x07	; 7
     74a:	c8 01       	movw	r24, r16
     74c:	69 df       	rcall	.-302    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     74e:	78 01       	movw	r14, r16
     750:	8c ef       	ldi	r24, 0xFC	; 252
     752:	f8 1a       	sub	r15, r24
     754:	c7 01       	movw	r24, r14
     756:	0e 94 ad 22 	call	0x455a	; 0x455a <_ZN3I2C9twi_startEv>
     75a:	68 e7       	ldi	r22, 0x78	; 120
     75c:	c7 01       	movw	r24, r14
     75e:	0e 94 b5 22 	call	0x456a	; 0x456a <_ZN3I2C9twi_writeEh>
     762:	60 e4       	ldi	r22, 0x40	; 64
     764:	c7 01       	movw	r24, r14
     766:	0e 94 b5 22 	call	0x456a	; 0x456a <_ZN3I2C9twi_writeEh>
     76a:	c0 e0       	ldi	r28, 0x00	; 0
     76c:	d0 e0       	ldi	r29, 0x00	; 0
     76e:	f8 01       	movw	r30, r16
     770:	61 91       	ld	r22, Z+
     772:	8f 01       	movw	r16, r30
     774:	c7 01       	movw	r24, r14
     776:	0e 94 b5 22 	call	0x456a	; 0x456a <_ZN3I2C9twi_writeEh>
     77a:	21 96       	adiw	r28, 0x01	; 1
     77c:	c1 15       	cp	r28, r1
     77e:	f4 e0       	ldi	r31, 0x04	; 4
     780:	df 07       	cpc	r29, r31
     782:	a9 f7       	brne	.-22     	; 0x76e <_ZN7Display9sendFrameEv+0x50>
     784:	c7 01       	movw	r24, r14
     786:	0e 94 b1 22 	call	0x4562	; 0x4562 <_ZN3I2C8twi_stopEv>
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	1f 91       	pop	r17
     790:	0f 91       	pop	r16
     792:	ff 90       	pop	r15
     794:	ef 90       	pop	r14
     796:	08 95       	ret

00000798 <_ZN7Display9drawPixelEhhh>:
     798:	66 23       	and	r22, r22
     79a:	bc f1       	brlt	.+110    	; 0x80a <_ZN7Display9drawPixelEhhh+0x72>
     79c:	40 34       	cpi	r20, 0x40	; 64
     79e:	a8 f5       	brcc	.+106    	; 0x80a <_ZN7Display9drawPixelEhhh+0x72>
     7a0:	21 11       	cpse	r18, r1
     7a2:	19 c0       	rjmp	.+50     	; 0x7d6 <_ZN7Display9drawPixelEhhh+0x3e>
     7a4:	e4 2f       	mov	r30, r20
     7a6:	e6 95       	lsr	r30
     7a8:	e6 95       	lsr	r30
     7aa:	e6 95       	lsr	r30
     7ac:	20 e8       	ldi	r18, 0x80	; 128
     7ae:	e2 9f       	mul	r30, r18
     7b0:	f0 01       	movw	r30, r0
     7b2:	11 24       	eor	r1, r1
     7b4:	e6 0f       	add	r30, r22
     7b6:	f1 1d       	adc	r31, r1
     7b8:	e8 0f       	add	r30, r24
     7ba:	f9 1f       	adc	r31, r25
     7bc:	47 70       	andi	r20, 0x07	; 7
     7be:	21 e0       	ldi	r18, 0x01	; 1
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	c9 01       	movw	r24, r18
     7c4:	02 c0       	rjmp	.+4      	; 0x7ca <_ZN7Display9drawPixelEhhh+0x32>
     7c6:	88 0f       	add	r24, r24
     7c8:	99 1f       	adc	r25, r25
     7ca:	4a 95       	dec	r20
     7cc:	e2 f7       	brpl	.-8      	; 0x7c6 <_ZN7Display9drawPixelEhhh+0x2e>
     7ce:	90 81       	ld	r25, Z
     7d0:	89 2b       	or	r24, r25
     7d2:	80 83       	st	Z, r24
     7d4:	08 95       	ret
     7d6:	e4 2f       	mov	r30, r20
     7d8:	e6 95       	lsr	r30
     7da:	e6 95       	lsr	r30
     7dc:	e6 95       	lsr	r30
     7de:	30 e8       	ldi	r19, 0x80	; 128
     7e0:	e3 9f       	mul	r30, r19
     7e2:	f0 01       	movw	r30, r0
     7e4:	11 24       	eor	r1, r1
     7e6:	e6 0f       	add	r30, r22
     7e8:	f1 1d       	adc	r31, r1
     7ea:	e8 0f       	add	r30, r24
     7ec:	f9 1f       	adc	r31, r25
     7ee:	47 70       	andi	r20, 0x07	; 7
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	9c 01       	movw	r18, r24
     7f6:	02 c0       	rjmp	.+4      	; 0x7fc <_ZN7Display9drawPixelEhhh+0x64>
     7f8:	22 0f       	add	r18, r18
     7fa:	33 1f       	adc	r19, r19
     7fc:	4a 95       	dec	r20
     7fe:	e2 f7       	brpl	.-8      	; 0x7f8 <_ZN7Display9drawPixelEhhh+0x60>
     800:	a9 01       	movw	r20, r18
     802:	40 95       	com	r20
     804:	80 81       	ld	r24, Z
     806:	48 23       	and	r20, r24
     808:	40 83       	st	Z, r20
     80a:	08 95       	ret

0000080c <_ZN7Display9draw_lineEhhhf>:
     80c:	2f 92       	push	r2
     80e:	3f 92       	push	r3
     810:	4f 92       	push	r4
     812:	5f 92       	push	r5
     814:	6f 92       	push	r6
     816:	7f 92       	push	r7
     818:	8f 92       	push	r8
     81a:	9f 92       	push	r9
     81c:	af 92       	push	r10
     81e:	bf 92       	push	r11
     820:	cf 92       	push	r12
     822:	df 92       	push	r13
     824:	ef 92       	push	r14
     826:	ff 92       	push	r15
     828:	0f 93       	push	r16
     82a:	1f 93       	push	r17
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	cd b7       	in	r28, 0x3d	; 61
     832:	de b7       	in	r29, 0x3e	; 62
     834:	2b 97       	sbiw	r28, 0x0b	; 11
     836:	0f b6       	in	r0, 0x3f	; 63
     838:	f8 94       	cli
     83a:	de bf       	out	0x3e, r29	; 62
     83c:	0f be       	out	0x3f, r0	; 63
     83e:	cd bf       	out	0x3d, r28	; 61
     840:	1c 01       	movw	r2, r24
     842:	d6 2e       	mov	r13, r22
     844:	c4 2e       	mov	r12, r20
     846:	29 83       	std	Y+1, r18	; 0x01
     848:	22 23       	and	r18, r18
     84a:	09 f4       	brne	.+2      	; 0x84e <_ZN7Display9draw_lineEhhhf+0x42>
     84c:	68 c0       	rjmp	.+208    	; 0x91e <_ZN7Display9draw_lineEhhhf+0x112>
     84e:	c8 01       	movw	r24, r16
     850:	b7 01       	movw	r22, r14
     852:	0e 94 0d 2c 	call	0x581a	; 0x581a <cos>
     856:	2b 01       	movw	r4, r22
     858:	3c 01       	movw	r6, r24
     85a:	c8 01       	movw	r24, r16
     85c:	b7 01       	movw	r22, r14
     85e:	0e 94 6c 2e 	call	0x5cd8	; 0x5cd8 <sin>
     862:	4b 01       	movw	r8, r22
     864:	5c 01       	movw	r10, r24
     866:	1b 86       	std	Y+11, r1	; 0x0b
     868:	1a 86       	std	Y+10, r1	; 0x0a
     86a:	8c 2d       	mov	r24, r12
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	a0 e0       	ldi	r26, 0x00	; 0
     870:	b0 e0       	ldi	r27, 0x00	; 0
     872:	8a 83       	std	Y+2, r24	; 0x02
     874:	9b 83       	std	Y+3, r25	; 0x03
     876:	ac 83       	std	Y+4, r26	; 0x04
     878:	bd 83       	std	Y+5, r27	; 0x05
     87a:	8d 2d       	mov	r24, r13
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	a0 e0       	ldi	r26, 0x00	; 0
     880:	b0 e0       	ldi	r27, 0x00	; 0
     882:	8e 83       	std	Y+6, r24	; 0x06
     884:	9f 83       	std	Y+7, r25	; 0x07
     886:	a8 87       	std	Y+8, r26	; 0x08
     888:	b9 87       	std	Y+9, r27	; 0x09
     88a:	aa 85       	ldd	r26, Y+10	; 0x0a
     88c:	bb 85       	ldd	r27, Y+11	; 0x0b
     88e:	bd 01       	movw	r22, r26
     890:	88 27       	eor	r24, r24
     892:	77 fd       	sbrc	r23, 7
     894:	80 95       	com	r24
     896:	98 2f       	mov	r25, r24
     898:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     89c:	a5 01       	movw	r20, r10
     89e:	94 01       	movw	r18, r8
     8a0:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     8a4:	6b 01       	movw	r12, r22
     8a6:	7c 01       	movw	r14, r24
     8a8:	6a 81       	ldd	r22, Y+2	; 0x02
     8aa:	7b 81       	ldd	r23, Y+3	; 0x03
     8ac:	8c 81       	ldd	r24, Y+4	; 0x04
     8ae:	9d 81       	ldd	r25, Y+5	; 0x05
     8b0:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     8b4:	9b 01       	movw	r18, r22
     8b6:	ac 01       	movw	r20, r24
     8b8:	c7 01       	movw	r24, r14
     8ba:	b6 01       	movw	r22, r12
     8bc:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     8c0:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
     8c4:	16 2f       	mov	r17, r22
     8c6:	6a 85       	ldd	r22, Y+10	; 0x0a
     8c8:	7b 85       	ldd	r23, Y+11	; 0x0b
     8ca:	71 95       	neg	r23
     8cc:	61 95       	neg	r22
     8ce:	71 09       	sbc	r23, r1
     8d0:	88 27       	eor	r24, r24
     8d2:	77 fd       	sbrc	r23, 7
     8d4:	80 95       	com	r24
     8d6:	98 2f       	mov	r25, r24
     8d8:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     8dc:	a3 01       	movw	r20, r6
     8de:	92 01       	movw	r18, r4
     8e0:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     8e4:	6b 01       	movw	r12, r22
     8e6:	7c 01       	movw	r14, r24
     8e8:	6e 81       	ldd	r22, Y+6	; 0x06
     8ea:	7f 81       	ldd	r23, Y+7	; 0x07
     8ec:	88 85       	ldd	r24, Y+8	; 0x08
     8ee:	99 85       	ldd	r25, Y+9	; 0x09
     8f0:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     8f4:	9b 01       	movw	r18, r22
     8f6:	ac 01       	movw	r20, r24
     8f8:	c7 01       	movw	r24, r14
     8fa:	b6 01       	movw	r22, r12
     8fc:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     900:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
     904:	20 e0       	ldi	r18, 0x00	; 0
     906:	41 2f       	mov	r20, r17
     908:	c1 01       	movw	r24, r2
     90a:	46 df       	rcall	.-372    	; 0x798 <_ZN7Display9drawPixelEhhh>
     90c:	ea 85       	ldd	r30, Y+10	; 0x0a
     90e:	fb 85       	ldd	r31, Y+11	; 0x0b
     910:	31 96       	adiw	r30, 0x01	; 1
     912:	fb 87       	std	Y+11, r31	; 0x0b
     914:	ea 87       	std	Y+10, r30	; 0x0a
     916:	f9 81       	ldd	r31, Y+1	; 0x01
     918:	ef 17       	cp	r30, r31
     91a:	08 f4       	brcc	.+2      	; 0x91e <_ZN7Display9draw_lineEhhhf+0x112>
     91c:	b6 cf       	rjmp	.-148    	; 0x88a <_ZN7Display9draw_lineEhhhf+0x7e>
     91e:	2b 96       	adiw	r28, 0x0b	; 11
     920:	0f b6       	in	r0, 0x3f	; 63
     922:	f8 94       	cli
     924:	de bf       	out	0x3e, r29	; 62
     926:	0f be       	out	0x3f, r0	; 63
     928:	cd bf       	out	0x3d, r28	; 61
     92a:	df 91       	pop	r29
     92c:	cf 91       	pop	r28
     92e:	1f 91       	pop	r17
     930:	0f 91       	pop	r16
     932:	ff 90       	pop	r15
     934:	ef 90       	pop	r14
     936:	df 90       	pop	r13
     938:	cf 90       	pop	r12
     93a:	bf 90       	pop	r11
     93c:	af 90       	pop	r10
     93e:	9f 90       	pop	r9
     940:	8f 90       	pop	r8
     942:	7f 90       	pop	r7
     944:	6f 90       	pop	r6
     946:	5f 90       	pop	r5
     948:	4f 90       	pop	r4
     94a:	3f 90       	pop	r3
     94c:	2f 90       	pop	r2
     94e:	08 95       	ret

00000950 <_ZN7Display13draw_triangleEhhhff>:
     950:	2f 92       	push	r2
     952:	3f 92       	push	r3
     954:	4f 92       	push	r4
     956:	5f 92       	push	r5
     958:	6f 92       	push	r6
     95a:	7f 92       	push	r7
     95c:	8f 92       	push	r8
     95e:	9f 92       	push	r9
     960:	af 92       	push	r10
     962:	bf 92       	push	r11
     964:	cf 92       	push	r12
     966:	df 92       	push	r13
     968:	ef 92       	push	r14
     96a:	ff 92       	push	r15
     96c:	0f 93       	push	r16
     96e:	1f 93       	push	r17
     970:	cf 93       	push	r28
     972:	df 93       	push	r29
     974:	cd b7       	in	r28, 0x3d	; 61
     976:	de b7       	in	r29, 0x3e	; 62
     978:	60 97       	sbiw	r28, 0x10	; 16
     97a:	0f b6       	in	r0, 0x3f	; 63
     97c:	f8 94       	cli
     97e:	de bf       	out	0x3e, r29	; 62
     980:	0f be       	out	0x3f, r0	; 63
     982:	cd bf       	out	0x3d, r28	; 61
     984:	1c 01       	movw	r2, r24
     986:	6f 87       	std	Y+15, r22	; 0x0f
     988:	4d 83       	std	Y+5, r20	; 0x05
     98a:	29 83       	std	Y+1, r18	; 0x01
     98c:	c6 01       	movw	r24, r12
     98e:	b5 01       	movw	r22, r10
     990:	25 e3       	ldi	r18, 0x35	; 53
     992:	3a ef       	ldi	r19, 0xFA	; 250
     994:	4e e8       	ldi	r20, 0x8E	; 142
     996:	5c e3       	ldi	r21, 0x3C	; 60
     998:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     99c:	4b 01       	movw	r8, r22
     99e:	5c 01       	movw	r10, r24
     9a0:	25 e3       	ldi	r18, 0x35	; 53
     9a2:	3a ef       	ldi	r19, 0xFA	; 250
     9a4:	4e e8       	ldi	r20, 0x8E	; 142
     9a6:	5c e3       	ldi	r21, 0x3C	; 60
     9a8:	c8 01       	movw	r24, r16
     9aa:	b7 01       	movw	r22, r14
     9ac:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     9b0:	6e 83       	std	Y+6, r22	; 0x06
     9b2:	7f 83       	std	Y+7, r23	; 0x07
     9b4:	88 87       	std	Y+8, r24	; 0x08
     9b6:	99 87       	std	Y+9, r25	; 0x09
     9b8:	79 80       	ldd	r7, Y+1	; 0x01
     9ba:	76 94       	lsr	r7
     9bc:	85 01       	movw	r16, r10
     9be:	74 01       	movw	r14, r8
     9c0:	27 2d       	mov	r18, r7
     9c2:	4d 81       	ldd	r20, Y+5	; 0x05
     9c4:	6f 85       	ldd	r22, Y+15	; 0x0f
     9c6:	c1 01       	movw	r24, r2
     9c8:	21 df       	rcall	.-446    	; 0x80c <_ZN7Display9draw_lineEhhhf>
     9ca:	2b ed       	ldi	r18, 0xDB	; 219
     9cc:	3f e0       	ldi	r19, 0x0F	; 15
     9ce:	49 e4       	ldi	r20, 0x49	; 73
     9d0:	50 e4       	ldi	r21, 0x40	; 64
     9d2:	c5 01       	movw	r24, r10
     9d4:	b4 01       	movw	r22, r8
     9d6:	0e 94 42 2b 	call	0x5684	; 0x5684 <__subsf3>
     9da:	7b 01       	movw	r14, r22
     9dc:	8c 01       	movw	r16, r24
     9de:	27 2d       	mov	r18, r7
     9e0:	4d 81       	ldd	r20, Y+5	; 0x05
     9e2:	6f 85       	ldd	r22, Y+15	; 0x0f
     9e4:	c1 01       	movw	r24, r2
     9e6:	12 df       	rcall	.-476    	; 0x80c <_ZN7Display9draw_lineEhhhf>
     9e8:	6e 81       	ldd	r22, Y+6	; 0x06
     9ea:	7f 81       	ldd	r23, Y+7	; 0x07
     9ec:	88 85       	ldd	r24, Y+8	; 0x08
     9ee:	99 85       	ldd	r25, Y+9	; 0x09
     9f0:	0e 94 75 2e 	call	0x5cea	; 0x5cea <tan>
     9f4:	6b 01       	movw	r12, r22
     9f6:	7c 01       	movw	r14, r24
     9f8:	67 2d       	mov	r22, r7
     9fa:	70 e0       	ldi	r23, 0x00	; 0
     9fc:	80 e0       	ldi	r24, 0x00	; 0
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     a04:	a7 01       	movw	r20, r14
     a06:	96 01       	movw	r18, r12
     a08:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     a0c:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
     a10:	68 8b       	std	Y+16, r22	; 0x10
     a12:	2b ed       	ldi	r18, 0xDB	; 219
     a14:	3f e0       	ldi	r19, 0x0F	; 15
     a16:	49 ec       	ldi	r20, 0xC9	; 201
     a18:	5f e3       	ldi	r21, 0x3F	; 63
     a1a:	c5 01       	movw	r24, r10
     a1c:	b4 01       	movw	r22, r8
     a1e:	0e 94 42 2b 	call	0x5684	; 0x5684 <__subsf3>
     a22:	6a 87       	std	Y+10, r22	; 0x0a
     a24:	7b 87       	std	Y+11, r23	; 0x0b
     a26:	8c 87       	std	Y+12, r24	; 0x0c
     a28:	9d 87       	std	Y+13, r25	; 0x0d
     a2a:	7b 01       	movw	r14, r22
     a2c:	8c 01       	movw	r16, r24
     a2e:	28 89       	ldd	r18, Y+16	; 0x10
     a30:	4d 81       	ldd	r20, Y+5	; 0x05
     a32:	6f 85       	ldd	r22, Y+15	; 0x0f
     a34:	c1 01       	movw	r24, r2
     a36:	ea de       	rcall	.-556    	; 0x80c <_ZN7Display9draw_lineEhhhf>
     a38:	6e 81       	ldd	r22, Y+6	; 0x06
     a3a:	7f 81       	ldd	r23, Y+7	; 0x07
     a3c:	88 85       	ldd	r24, Y+8	; 0x08
     a3e:	99 85       	ldd	r25, Y+9	; 0x09
     a40:	0e 94 0d 2c 	call	0x581a	; 0x581a <cos>
     a44:	6b 01       	movw	r12, r22
     a46:	7c 01       	movw	r14, r24
     a48:	29 81       	ldd	r18, Y+1	; 0x01
     a4a:	62 2f       	mov	r22, r18
     a4c:	70 e0       	ldi	r23, 0x00	; 0
     a4e:	80 e0       	ldi	r24, 0x00	; 0
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     a56:	2b 01       	movw	r4, r22
     a58:	3c 01       	movw	r6, r24
     a5a:	a7 01       	movw	r20, r14
     a5c:	96 01       	movw	r18, r12
     a5e:	c7 01       	movw	r24, r14
     a60:	b6 01       	movw	r22, r12
     a62:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     a66:	9b 01       	movw	r18, r22
     a68:	ac 01       	movw	r20, r24
     a6a:	c3 01       	movw	r24, r6
     a6c:	b2 01       	movw	r22, r4
     a6e:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
     a72:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
     a76:	6e 87       	std	Y+14, r22	; 0x0e
     a78:	e8 89       	ldd	r30, Y+16	; 0x10
     a7a:	6e 2f       	mov	r22, r30
     a7c:	70 e0       	ldi	r23, 0x00	; 0
     a7e:	80 e0       	ldi	r24, 0x00	; 0
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     a86:	69 83       	std	Y+1, r22	; 0x01
     a88:	7a 83       	std	Y+2, r23	; 0x02
     a8a:	8b 83       	std	Y+3, r24	; 0x03
     a8c:	9c 83       	std	Y+4, r25	; 0x04
     a8e:	6a 85       	ldd	r22, Y+10	; 0x0a
     a90:	7b 85       	ldd	r23, Y+11	; 0x0b
     a92:	8c 85       	ldd	r24, Y+12	; 0x0c
     a94:	9d 85       	ldd	r25, Y+13	; 0x0d
     a96:	0e 94 0d 2c 	call	0x581a	; 0x581a <cos>
     a9a:	6b 01       	movw	r12, r22
     a9c:	7c 01       	movw	r14, r24
     a9e:	ff 85       	ldd	r31, Y+15	; 0x0f
     aa0:	6f 2f       	mov	r22, r31
     aa2:	70 e0       	ldi	r23, 0x00	; 0
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     aac:	2b 01       	movw	r4, r22
     aae:	3c 01       	movw	r6, r24
     ab0:	a7 01       	movw	r20, r14
     ab2:	96 01       	movw	r18, r12
     ab4:	69 81       	ldd	r22, Y+1	; 0x01
     ab6:	7a 81       	ldd	r23, Y+2	; 0x02
     ab8:	8b 81       	ldd	r24, Y+3	; 0x03
     aba:	9c 81       	ldd	r25, Y+4	; 0x04
     abc:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     ac0:	9b 01       	movw	r18, r22
     ac2:	ac 01       	movw	r20, r24
     ac4:	c3 01       	movw	r24, r6
     ac6:	b2 01       	movw	r22, r4
     ac8:	0e 94 42 2b 	call	0x5684	; 0x5684 <__subsf3>
     acc:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
     ad0:	6f 87       	std	Y+15, r22	; 0x0f
     ad2:	6a 85       	ldd	r22, Y+10	; 0x0a
     ad4:	7b 85       	ldd	r23, Y+11	; 0x0b
     ad6:	8c 85       	ldd	r24, Y+12	; 0x0c
     ad8:	9d 85       	ldd	r25, Y+13	; 0x0d
     ada:	0e 94 6c 2e 	call	0x5cd8	; 0x5cd8 <sin>
     ade:	6b 01       	movw	r12, r22
     ae0:	7c 01       	movw	r14, r24
     ae2:	2d 81       	ldd	r18, Y+5	; 0x05
     ae4:	62 2f       	mov	r22, r18
     ae6:	70 e0       	ldi	r23, 0x00	; 0
     ae8:	80 e0       	ldi	r24, 0x00	; 0
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     af0:	2b 01       	movw	r4, r22
     af2:	3c 01       	movw	r6, r24
     af4:	a7 01       	movw	r20, r14
     af6:	96 01       	movw	r18, r12
     af8:	69 81       	ldd	r22, Y+1	; 0x01
     afa:	7a 81       	ldd	r23, Y+2	; 0x02
     afc:	8b 81       	ldd	r24, Y+3	; 0x03
     afe:	9c 81       	ldd	r25, Y+4	; 0x04
     b00:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     b04:	9b 01       	movw	r18, r22
     b06:	ac 01       	movw	r20, r24
     b08:	c3 01       	movw	r24, r6
     b0a:	b2 01       	movw	r22, r4
     b0c:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     b10:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
     b14:	d6 2e       	mov	r13, r22
     b16:	a5 01       	movw	r20, r10
     b18:	94 01       	movw	r18, r8
     b1a:	6e 81       	ldd	r22, Y+6	; 0x06
     b1c:	7f 81       	ldd	r23, Y+7	; 0x07
     b1e:	88 85       	ldd	r24, Y+8	; 0x08
     b20:	99 85       	ldd	r25, Y+9	; 0x09
     b22:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     b26:	7b 01       	movw	r14, r22
     b28:	8c 01       	movw	r16, r24
     b2a:	2e 85       	ldd	r18, Y+14	; 0x0e
     b2c:	4d 2d       	mov	r20, r13
     b2e:	6f 85       	ldd	r22, Y+15	; 0x0f
     b30:	c1 01       	movw	r24, r2
     b32:	6c de       	rcall	.-808    	; 0x80c <_ZN7Display9draw_lineEhhhf>
     b34:	2e 81       	ldd	r18, Y+6	; 0x06
     b36:	3f 81       	ldd	r19, Y+7	; 0x07
     b38:	48 85       	ldd	r20, Y+8	; 0x08
     b3a:	59 85       	ldd	r21, Y+9	; 0x09
     b3c:	c5 01       	movw	r24, r10
     b3e:	b4 01       	movw	r22, r8
     b40:	0e 94 42 2b 	call	0x5684	; 0x5684 <__subsf3>
     b44:	2b ed       	ldi	r18, 0xDB	; 219
     b46:	3f e0       	ldi	r19, 0x0F	; 15
     b48:	49 e4       	ldi	r20, 0x49	; 73
     b4a:	50 e4       	ldi	r21, 0x40	; 64
     b4c:	0e 94 42 2b 	call	0x5684	; 0x5684 <__subsf3>
     b50:	7b 01       	movw	r14, r22
     b52:	8c 01       	movw	r16, r24
     b54:	2e 85       	ldd	r18, Y+14	; 0x0e
     b56:	4d 2d       	mov	r20, r13
     b58:	6f 85       	ldd	r22, Y+15	; 0x0f
     b5a:	c1 01       	movw	r24, r2
     b5c:	57 de       	rcall	.-850    	; 0x80c <_ZN7Display9draw_lineEhhhf>
     b5e:	60 96       	adiw	r28, 0x10	; 16
     b60:	0f b6       	in	r0, 0x3f	; 63
     b62:	f8 94       	cli
     b64:	de bf       	out	0x3e, r29	; 62
     b66:	0f be       	out	0x3f, r0	; 63
     b68:	cd bf       	out	0x3d, r28	; 61
     b6a:	df 91       	pop	r29
     b6c:	cf 91       	pop	r28
     b6e:	1f 91       	pop	r17
     b70:	0f 91       	pop	r16
     b72:	ff 90       	pop	r15
     b74:	ef 90       	pop	r14
     b76:	df 90       	pop	r13
     b78:	cf 90       	pop	r12
     b7a:	bf 90       	pop	r11
     b7c:	af 90       	pop	r10
     b7e:	9f 90       	pop	r9
     b80:	8f 90       	pop	r8
     b82:	7f 90       	pop	r7
     b84:	6f 90       	pop	r6
     b86:	5f 90       	pop	r5
     b88:	4f 90       	pop	r4
     b8a:	3f 90       	pop	r3
     b8c:	2f 90       	pop	r2
     b8e:	08 95       	ret

00000b90 <_ZN7Display9draw_ASCIEhhh>:
     b90:	0f 93       	push	r16
     b92:	1f 93       	push	r17
     b94:	cf 93       	push	r28
     b96:	df 93       	push	r29
     b98:	61 32       	cpi	r22, 0x21	; 33
     b9a:	08 f4       	brcc	.+2      	; 0xb9e <_ZN7Display9draw_ASCIEhhh+0xe>
     b9c:	42 c0       	rjmp	.+132    	; 0xc22 <_ZN7Display9draw_ASCIEhhh+0x92>
     b9e:	a4 2f       	mov	r26, r20
     ba0:	b0 e0       	ldi	r27, 0x00	; 0
     ba2:	02 2f       	mov	r16, r18
     ba4:	06 95       	lsr	r16
     ba6:	06 95       	lsr	r16
     ba8:	06 95       	lsr	r16
     baa:	30 e8       	ldi	r19, 0x80	; 128
     bac:	03 9f       	mul	r16, r19
     bae:	80 01       	movw	r16, r0
     bb0:	11 24       	eor	r1, r1
     bb2:	ed 01       	movw	r28, r26
     bb4:	c0 0f       	add	r28, r16
     bb6:	d1 1f       	adc	r29, r17
     bb8:	00 58       	subi	r16, 0x80	; 128
     bba:	1f 4f       	sbci	r17, 0xFF	; 255
     bbc:	0a 0f       	add	r16, r26
     bbe:	1b 1f       	adc	r17, r27
     bc0:	61 52       	subi	r22, 0x21	; 33
     bc2:	46 2f       	mov	r20, r22
     bc4:	50 e0       	ldi	r21, 0x00	; 0
     bc6:	fa 01       	movw	r30, r20
     bc8:	ee 0f       	add	r30, r30
     bca:	ff 1f       	adc	r31, r31
     bcc:	ee 0f       	add	r30, r30
     bce:	ff 1f       	adc	r31, r31
     bd0:	e4 0f       	add	r30, r20
     bd2:	f5 1f       	adc	r31, r21
     bd4:	ea 53       	subi	r30, 0x3A	; 58
     bd6:	fd 4f       	sbci	r31, 0xFD	; 253
     bd8:	dc 01       	movw	r26, r24
     bda:	ac 0f       	add	r26, r28
     bdc:	bd 1f       	adc	r27, r29
     bde:	ae 01       	movw	r20, r28
     be0:	05 96       	adiw	r24, 0x05	; 5
     be2:	8c 0f       	add	r24, r28
     be4:	9d 1f       	adc	r25, r29
     be6:	27 70       	andi	r18, 0x07	; 7
     be8:	64 91       	lpm	r22, Z
     bea:	70 e0       	ldi	r23, 0x00	; 0
     bec:	02 2e       	mov	r0, r18
     bee:	02 c0       	rjmp	.+4      	; 0xbf4 <_ZN7Display9draw_ASCIEhhh+0x64>
     bf0:	66 0f       	add	r22, r22
     bf2:	77 1f       	adc	r23, r23
     bf4:	0a 94       	dec	r0
     bf6:	e2 f7       	brpl	.-8      	; 0xbf0 <_ZN7Display9draw_ASCIEhhh+0x60>
     bf8:	3c 91       	ld	r19, X
     bfa:	36 2b       	or	r19, r22
     bfc:	3c 93       	st	X, r19
     bfe:	67 2f       	mov	r22, r23
     c00:	77 27       	eor	r23, r23
     c02:	61 15       	cp	r22, r1
     c04:	71 05       	cpc	r23, r1
     c06:	41 f0       	breq	.+16     	; 0xc18 <_ZN7Display9draw_ASCIEhhh+0x88>
     c08:	ed 01       	movw	r28, r26
     c0a:	c4 1b       	sub	r28, r20
     c0c:	d5 0b       	sbc	r29, r21
     c0e:	c0 0f       	add	r28, r16
     c10:	d1 1f       	adc	r29, r17
     c12:	38 81       	ld	r19, Y
     c14:	63 2b       	or	r22, r19
     c16:	68 83       	st	Y, r22
     c18:	31 96       	adiw	r30, 0x01	; 1
     c1a:	11 96       	adiw	r26, 0x01	; 1
     c1c:	a8 17       	cp	r26, r24
     c1e:	b9 07       	cpc	r27, r25
     c20:	19 f7       	brne	.-58     	; 0xbe8 <_ZN7Display9draw_ASCIEhhh+0x58>
     c22:	df 91       	pop	r29
     c24:	cf 91       	pop	r28
     c26:	1f 91       	pop	r17
     c28:	0f 91       	pop	r16
     c2a:	08 95       	ret

00000c2c <_ZN7Display16draw_number16x16Ehhh>:

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
     c2c:	ef 92       	push	r14
     c2e:	ff 92       	push	r15
     c30:	0f 93       	push	r16
     c32:	1f 93       	push	r17
     c34:	cf 93       	push	r28
     c36:	df 93       	push	r29
	uint16_t symbol;
	if(number>=0 && number<10){
     c38:	6a 30       	cpi	r22, 0x0A	; 10
     c3a:	08 f0       	brcs	.+2      	; 0xc3e <_ZN7Display16draw_number16x16Ehhh+0x12>
     c3c:	66 c0       	rjmp	.+204    	; 0xd0a <_ZN7Display16draw_number16x16Ehhh+0xde>
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     c3e:	50 e0       	ldi	r21, 0x00	; 0
     c40:	02 2f       	mov	r16, r18
     c42:	06 95       	lsr	r16
     c44:	06 95       	lsr	r16
     c46:	06 95       	lsr	r16
     c48:	10 e0       	ldi	r17, 0x00	; 0
     c4a:	d8 01       	movw	r26, r16
     c4c:	b6 95       	lsr	r27
     c4e:	ba 2f       	mov	r27, r26
     c50:	aa 27       	eor	r26, r26
     c52:	b7 95       	ror	r27
     c54:	a7 95       	ror	r26
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     c56:	0f 5f       	subi	r16, 0xFF	; 255
     c58:	1f 4f       	sbci	r17, 0xFF	; 255
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     c5a:	16 95       	lsr	r17
     c5c:	10 2f       	mov	r17, r16
     c5e:	00 27       	eor	r16, r16
     c60:	17 95       	ror	r17
     c62:	07 95       	ror	r16
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     c64:	7d 01       	movw	r14, r26
     c66:	30 e8       	ldi	r19, 0x80	; 128
     c68:	e3 0e       	add	r14, r19
     c6a:	f1 1c       	adc	r15, r1
     c6c:	e4 0e       	add	r14, r20
     c6e:	f5 1e       	adc	r15, r21
     c70:	e8 0e       	add	r14, r24
     c72:	f9 1e       	adc	r15, r25
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     c74:	ea 01       	movw	r28, r20
     c76:	c0 0f       	add	r28, r16
     c78:	d1 1f       	adc	r29, r17
     c7a:	60 97       	sbiw	r28, 0x10	; 16
     c7c:	c8 0f       	add	r28, r24
     c7e:	d9 1f       	adc	r29, r25
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     c80:	04 0f       	add	r16, r20
     c82:	15 1f       	adc	r17, r21
     c84:	00 59       	subi	r16, 0x90	; 144
     c86:	1f 4f       	sbci	r17, 0xFF	; 255
     c88:	08 0f       	add	r16, r24
     c8a:	19 1f       	adc	r17, r25
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     c8c:	a4 0f       	add	r26, r20
     c8e:	b5 1f       	adc	r27, r21
     c90:	a8 0f       	add	r26, r24
     c92:	b9 1f       	adc	r27, r25
     c94:	e0 e2       	ldi	r30, 0x20	; 32
     c96:	6e 9f       	mul	r22, r30
     c98:	c0 01       	movw	r24, r0
     c9a:	11 24       	eor	r1, r1
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     c9c:	40 e0       	ldi	r20, 0x00	; 0
     c9e:	50 e0       	ldi	r21, 0x00	; 0
     ca0:	8a 57       	subi	r24, 0x7A	; 122
     ca2:	9e 4f       	sbci	r25, 0xFE	; 254
void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
     ca4:	27 70       	andi	r18, 0x07	; 7
     ca6:	fc 01       	movw	r30, r24
     ca8:	e4 0f       	add	r30, r20
     caa:	f5 1f       	adc	r31, r21

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
     cac:	e4 91       	lpm	r30, Z
     cae:	f0 e0       	ldi	r31, 0x00	; 0
			symbol = symbol << y%8;
     cb0:	02 2e       	mov	r0, r18
     cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <_ZN7Display16draw_number16x16Ehhh+0x8c>
     cb4:	ee 0f       	add	r30, r30
     cb6:	ff 1f       	adc	r31, r31
     cb8:	0a 94       	dec	r0
     cba:	e2 f7       	brpl	.-8      	; 0xcb4 <_ZN7Display16draw_number16x16Ehhh+0x88>
			if(i<16){
     cbc:	40 31       	cpi	r20, 0x10	; 16
     cbe:	68 f4       	brcc	.+26     	; 0xcda <_ZN7Display16draw_number16x16Ehhh+0xae>
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     cc0:	3c 91       	ld	r19, X
     cc2:	3e 2b       	or	r19, r30
     cc4:	3c 93       	st	X, r19
				if(((symbol&0xFF00)>>8)==0){
     cc6:	6f 2f       	mov	r22, r31
     cc8:	77 27       	eor	r23, r23
     cca:	61 15       	cp	r22, r1
     ccc:	71 05       	cpc	r23, r1
     cce:	89 f0       	breq	.+34     	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     cd0:	f7 01       	movw	r30, r14
     cd2:	30 81       	ld	r19, Z
     cd4:	36 2b       	or	r19, r22
     cd6:	30 83       	st	Z, r19
     cd8:	0c c0       	rjmp	.+24     	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh+0xc6>
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     cda:	38 81       	ld	r19, Y
     cdc:	3e 2b       	or	r19, r30
     cde:	38 83       	st	Y, r19
				if(((symbol&0xFF00)>>8)==0){
     ce0:	6f 2f       	mov	r22, r31
     ce2:	77 27       	eor	r23, r23
     ce4:	61 15       	cp	r22, r1
     ce6:	71 05       	cpc	r23, r1
     ce8:	21 f0       	breq	.+8      	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     cea:	f8 01       	movw	r30, r16
     cec:	30 81       	ld	r19, Z
     cee:	36 2b       	or	r19, r22
     cf0:	30 83       	st	Z, r19
     cf2:	4f 5f       	subi	r20, 0xFF	; 255
     cf4:	5f 4f       	sbci	r21, 0xFF	; 255
     cf6:	ff ef       	ldi	r31, 0xFF	; 255
     cf8:	ef 1a       	sub	r14, r31
     cfa:	ff 0a       	sbc	r15, r31
     cfc:	21 96       	adiw	r28, 0x01	; 1
     cfe:	0f 5f       	subi	r16, 0xFF	; 255
     d00:	1f 4f       	sbci	r17, 0xFF	; 255
     d02:	11 96       	adiw	r26, 0x01	; 1
}

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
     d04:	40 32       	cpi	r20, 0x20	; 32
     d06:	51 05       	cpc	r21, r1
     d08:	71 f6       	brne	.-100    	; 0xca6 <_ZN7Display16draw_number16x16Ehhh+0x7a>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
				}
			}
		}
	}
}
     d0a:	df 91       	pop	r29
     d0c:	cf 91       	pop	r28
     d0e:	1f 91       	pop	r17
     d10:	0f 91       	pop	r16
     d12:	ff 90       	pop	r15
     d14:	ef 90       	pop	r14
     d16:	08 95       	ret

00000d18 <_ZN7Display6analogEhhhh>:

void Display::analog(uint8_t stunde, uint8_t minute, uint8_t sekunde, uint8_t sekanzeige){
     d18:	2f 92       	push	r2
     d1a:	3f 92       	push	r3
     d1c:	4f 92       	push	r4
     d1e:	5f 92       	push	r5
     d20:	6f 92       	push	r6
     d22:	7f 92       	push	r7
     d24:	8f 92       	push	r8
     d26:	9f 92       	push	r9
     d28:	af 92       	push	r10
     d2a:	bf 92       	push	r11
     d2c:	cf 92       	push	r12
     d2e:	df 92       	push	r13
     d30:	ef 92       	push	r14
     d32:	ff 92       	push	r15
     d34:	0f 93       	push	r16
     d36:	1f 93       	push	r17
     d38:	cf 93       	push	r28
     d3a:	df 93       	push	r29
     d3c:	cd b7       	in	r28, 0x3d	; 61
     d3e:	de b7       	in	r29, 0x3e	; 62
     d40:	27 97       	sbiw	r28, 0x07	; 7
     d42:	0f b6       	in	r0, 0x3f	; 63
     d44:	f8 94       	cli
     d46:	de bf       	out	0x3e, r29	; 62
     d48:	0f be       	out	0x3f, r0	; 63
     d4a:	cd bf       	out	0x3d, r28	; 61
     d4c:	9f 83       	std	Y+7, r25	; 0x07
     d4e:	8e 83       	std	Y+6, r24	; 0x06
     d50:	6d 83       	std	Y+5, r22	; 0x05
     d52:	34 2e       	mov	r3, r20
	uint8_t Px=32-1;
	uint8_t Py=32-1;
	uint8_t x=0,y=0;
	float winkel=0;
	
	if (sekanzeige)
     d54:	00 23       	and	r16, r16
     d56:	09 f4       	brne	.+2      	; 0xd5a <_ZN7Display6analogEhhhh+0x42>
     d58:	26 c1       	rjmp	.+588    	; 0xfa6 <_ZN7Display6analogEhhhh+0x28e>
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
     d5a:	62 2f       	mov	r22, r18
     d5c:	70 e0       	ldi	r23, 0x00	; 0
     d5e:	80 e0       	ldi	r24, 0x00	; 0
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     d66:	20 e0       	ldi	r18, 0x00	; 0
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	40 ec       	ldi	r20, 0xC0	; 192
     d6c:	50 e4       	ldi	r21, 0x40	; 64
     d6e:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     d72:	2b ed       	ldi	r18, 0xDB	; 219
     d74:	3f e0       	ldi	r19, 0x0F	; 15
     d76:	49 e4       	ldi	r20, 0x49	; 73
     d78:	50 e4       	ldi	r21, 0x40	; 64
     d7a:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     d7e:	20 e0       	ldi	r18, 0x00	; 0
     d80:	30 e0       	ldi	r19, 0x00	; 0
     d82:	44 e3       	ldi	r20, 0x34	; 52
     d84:	53 e4       	ldi	r21, 0x43	; 67
     d86:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
     d8a:	2b ed       	ldi	r18, 0xDB	; 219
     d8c:	3f e0       	ldi	r19, 0x0F	; 15
     d8e:	49 ec       	ldi	r20, 0xC9	; 201
     d90:	5f e3       	ldi	r21, 0x3F	; 63
     d92:	0e 94 42 2b 	call	0x5684	; 0x5684 <__subsf3>
     d96:	6b 01       	movw	r12, r22
     d98:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     d9a:	0e 94 0d 2c 	call	0x581a	; 0x581a <cos>
     d9e:	2b 01       	movw	r4, r22
     da0:	3c 01       	movw	r6, r24
			y=(uint8_t) i*sin(winkel)+Py;
     da2:	c7 01       	movw	r24, r14
     da4:	b6 01       	movw	r22, r12
     da6:	0e 94 6c 2e 	call	0x5cd8	; 0x5cd8 <sin>
     daa:	4b 01       	movw	r8, r22
     dac:	5c 01       	movw	r10, r24
     dae:	00 e0       	ldi	r16, 0x00	; 0
     db0:	10 e0       	ldi	r17, 0x00	; 0
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     db2:	b8 01       	movw	r22, r16
     db4:	88 27       	eor	r24, r24
     db6:	77 fd       	sbrc	r23, 7
     db8:	80 95       	com	r24
     dba:	98 2f       	mov	r25, r24
     dbc:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     dc0:	6b 01       	movw	r12, r22
     dc2:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     dc4:	a5 01       	movw	r20, r10
     dc6:	94 01       	movw	r18, r8
     dc8:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     dcc:	20 e0       	ldi	r18, 0x00	; 0
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	48 ef       	ldi	r20, 0xF8	; 248
     dd2:	51 e4       	ldi	r21, 0x41	; 65
     dd4:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     dd8:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
     ddc:	26 2e       	mov	r2, r22
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     dde:	a3 01       	movw	r20, r6
     de0:	92 01       	movw	r18, r4
     de2:	c7 01       	movw	r24, r14
     de4:	b6 01       	movw	r22, r12
     de6:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     dea:	20 e0       	ldi	r18, 0x00	; 0
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	48 ef       	ldi	r20, 0xF8	; 248
     df0:	51 e4       	ldi	r21, 0x41	; 65
     df2:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     df6:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     dfa:	20 e0       	ldi	r18, 0x00	; 0
     dfc:	42 2d       	mov	r20, r2
     dfe:	8e 81       	ldd	r24, Y+6	; 0x06
     e00:	9f 81       	ldd	r25, Y+7	; 0x07
     e02:	ca dc       	rcall	.-1644   	; 0x798 <_ZN7Display9drawPixelEhhh>
     e04:	0f 5f       	subi	r16, 0xFF	; 255
     e06:	1f 4f       	sbci	r17, 0xFF	; 255
	float winkel=0;
	
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
     e08:	09 31       	cpi	r16, 0x19	; 25
     e0a:	11 05       	cpc	r17, r1
     e0c:	91 f6       	brne	.-92     	; 0xdb2 <_ZN7Display6analogEhhhh+0x9a>
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
     e0e:	63 2d       	mov	r22, r3
     e10:	70 e0       	ldi	r23, 0x00	; 0
     e12:	80 e0       	ldi	r24, 0x00	; 0
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     e1a:	69 83       	std	Y+1, r22	; 0x01
     e1c:	7a 83       	std	Y+2, r23	; 0x02
     e1e:	8b 83       	std	Y+3, r24	; 0x03
     e20:	9c 83       	std	Y+4, r25	; 0x04
     e22:	20 e0       	ldi	r18, 0x00	; 0
     e24:	30 e0       	ldi	r19, 0x00	; 0
     e26:	40 ec       	ldi	r20, 0xC0	; 192
     e28:	50 e4       	ldi	r21, 0x40	; 64
     e2a:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     e2e:	2b ed       	ldi	r18, 0xDB	; 219
     e30:	3f e0       	ldi	r19, 0x0F	; 15
     e32:	49 e4       	ldi	r20, 0x49	; 73
     e34:	50 e4       	ldi	r21, 0x40	; 64
     e36:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     e3a:	20 e0       	ldi	r18, 0x00	; 0
     e3c:	30 e0       	ldi	r19, 0x00	; 0
     e3e:	44 e3       	ldi	r20, 0x34	; 52
     e40:	53 e4       	ldi	r21, 0x43	; 67
     e42:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
     e46:	2b ed       	ldi	r18, 0xDB	; 219
     e48:	3f e0       	ldi	r19, 0x0F	; 15
     e4a:	49 ec       	ldi	r20, 0xC9	; 201
     e4c:	5f e3       	ldi	r21, 0x3F	; 63
     e4e:	0e 94 42 2b 	call	0x5684	; 0x5684 <__subsf3>
     e52:	6b 01       	movw	r12, r22
     e54:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     e56:	0e 94 0d 2c 	call	0x581a	; 0x581a <cos>
     e5a:	4b 01       	movw	r8, r22
     e5c:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e5e:	c7 01       	movw	r24, r14
     e60:	b6 01       	movw	r22, r12
     e62:	0e 94 6c 2e 	call	0x5cd8	; 0x5cd8 <sin>
     e66:	2b 01       	movw	r4, r22
     e68:	3c 01       	movw	r6, r24
     e6a:	00 e0       	ldi	r16, 0x00	; 0
     e6c:	10 e0       	ldi	r17, 0x00	; 0

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e6e:	b8 01       	movw	r22, r16
     e70:	88 27       	eor	r24, r24
     e72:	77 fd       	sbrc	r23, 7
     e74:	80 95       	com	r24
     e76:	98 2f       	mov	r25, r24
     e78:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     e7c:	6b 01       	movw	r12, r22
     e7e:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e80:	a3 01       	movw	r20, r6
     e82:	92 01       	movw	r18, r4
     e84:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	48 ef       	ldi	r20, 0xF8	; 248
     e8e:	51 e4       	ldi	r21, 0x41	; 65
     e90:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     e94:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
     e98:	36 2e       	mov	r3, r22

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e9a:	a5 01       	movw	r20, r10
     e9c:	94 01       	movw	r18, r8
     e9e:	c7 01       	movw	r24, r14
     ea0:	b6 01       	movw	r22, r12
     ea2:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     ea6:	20 e0       	ldi	r18, 0x00	; 0
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	48 ef       	ldi	r20, 0xF8	; 248
     eac:	51 e4       	ldi	r21, 0x41	; 65
     eae:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     eb2:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     eb6:	20 e0       	ldi	r18, 0x00	; 0
     eb8:	43 2d       	mov	r20, r3
     eba:	8e 81       	ldd	r24, Y+6	; 0x06
     ebc:	9f 81       	ldd	r25, Y+7	; 0x07
     ebe:	6c dc       	rcall	.-1832   	; 0x798 <_ZN7Display9drawPixelEhhh>
     ec0:	0f 5f       	subi	r16, 0xFF	; 255
     ec2:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
     ec4:	05 31       	cpi	r16, 0x15	; 21
     ec6:	11 05       	cpc	r17, r1
     ec8:	91 f6       	brne	.-92     	; 0xe6e <_ZN7Display6analogEhhhh+0x156>
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
     eca:	2d 81       	ldd	r18, Y+5	; 0x05
     ecc:	62 2f       	mov	r22, r18
     ece:	70 e0       	ldi	r23, 0x00	; 0
     ed0:	80 e0       	ldi	r24, 0x00	; 0
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     ed8:	20 e0       	ldi	r18, 0x00	; 0
     eda:	30 e0       	ldi	r19, 0x00	; 0
     edc:	40 ef       	ldi	r20, 0xF0	; 240
     ede:	51 e4       	ldi	r21, 0x41	; 65
     ee0:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     ee4:	6b 01       	movw	r12, r22
     ee6:	7c 01       	movw	r14, r24
     ee8:	20 e0       	ldi	r18, 0x00	; 0
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	40 e0       	ldi	r20, 0x00	; 0
     eee:	5f e3       	ldi	r21, 0x3F	; 63
     ef0:	69 81       	ldd	r22, Y+1	; 0x01
     ef2:	7a 81       	ldd	r23, Y+2	; 0x02
     ef4:	8b 81       	ldd	r24, Y+3	; 0x03
     ef6:	9c 81       	ldd	r25, Y+4	; 0x04
     ef8:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     efc:	9b 01       	movw	r18, r22
     efe:	ac 01       	movw	r20, r24
     f00:	c7 01       	movw	r24, r14
     f02:	b6 01       	movw	r22, r12
     f04:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     f08:	2b ed       	ldi	r18, 0xDB	; 219
     f0a:	3f e0       	ldi	r19, 0x0F	; 15
     f0c:	49 e4       	ldi	r20, 0x49	; 73
     f0e:	50 e4       	ldi	r21, 0x40	; 64
     f10:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     f14:	20 e0       	ldi	r18, 0x00	; 0
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	44 e3       	ldi	r20, 0x34	; 52
     f1a:	53 e4       	ldi	r21, 0x43	; 67
     f1c:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
     f20:	2b ed       	ldi	r18, 0xDB	; 219
     f22:	3f e0       	ldi	r19, 0x0F	; 15
     f24:	49 ec       	ldi	r20, 0xC9	; 201
     f26:	5f e3       	ldi	r21, 0x3F	; 63
     f28:	0e 94 42 2b 	call	0x5684	; 0x5684 <__subsf3>
     f2c:	6b 01       	movw	r12, r22
     f2e:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
     f30:	0e 94 0d 2c 	call	0x581a	; 0x581a <cos>
     f34:	2b 01       	movw	r4, r22
     f36:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
     f38:	c7 01       	movw	r24, r14
     f3a:	b6 01       	movw	r22, r12
     f3c:	0e 94 6c 2e 	call	0x5cd8	; 0x5cd8 <sin>
     f40:	4b 01       	movw	r8, r22
     f42:	5c 01       	movw	r10, r24
     f44:	00 e0       	ldi	r16, 0x00	; 0
     f46:	10 e0       	ldi	r17, 0x00	; 0

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
     f48:	b8 01       	movw	r22, r16
     f4a:	88 27       	eor	r24, r24
     f4c:	77 fd       	sbrc	r23, 7
     f4e:	80 95       	com	r24
     f50:	98 2f       	mov	r25, r24
     f52:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     f56:	6b 01       	movw	r12, r22
     f58:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
     f5a:	a5 01       	movw	r20, r10
     f5c:	94 01       	movw	r18, r8
     f5e:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     f62:	20 e0       	ldi	r18, 0x00	; 0
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	48 ef       	ldi	r20, 0xF8	; 248
     f68:	51 e4       	ldi	r21, 0x41	; 65
     f6a:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     f6e:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
     f72:	36 2e       	mov	r3, r22

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
     f74:	a3 01       	movw	r20, r6
     f76:	92 01       	movw	r18, r4
     f78:	c7 01       	movw	r24, r14
     f7a:	b6 01       	movw	r22, r12
     f7c:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     f80:	20 e0       	ldi	r18, 0x00	; 0
     f82:	30 e0       	ldi	r19, 0x00	; 0
     f84:	48 ef       	ldi	r20, 0xF8	; 248
     f86:	51 e4       	ldi	r21, 0x41	; 65
     f88:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
     f8c:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
     f90:	20 e0       	ldi	r18, 0x00	; 0
     f92:	43 2d       	mov	r20, r3
     f94:	8e 81       	ldd	r24, Y+6	; 0x06
     f96:	9f 81       	ldd	r25, Y+7	; 0x07
     f98:	ff db       	rcall	.-2050   	; 0x798 <_ZN7Display9drawPixelEhhh>
     f9a:	0f 5f       	subi	r16, 0xFF	; 255
     f9c:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
     f9e:	0d 30       	cpi	r16, 0x0D	; 13
     fa0:	11 05       	cpc	r17, r1
     fa2:	91 f6       	brne	.-92     	; 0xf48 <_ZN7Display6analogEhhhh+0x230>
     fa4:	cb c0       	rjmp	.+406    	; 0x113c <_ZN7Display6analogEhhhh+0x424>
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
     fa6:	64 2f       	mov	r22, r20
     fa8:	70 e0       	ldi	r23, 0x00	; 0
     faa:	80 e0       	ldi	r24, 0x00	; 0
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
     fb2:	69 83       	std	Y+1, r22	; 0x01
     fb4:	7a 83       	std	Y+2, r23	; 0x02
     fb6:	8b 83       	std	Y+3, r24	; 0x03
     fb8:	9c 83       	std	Y+4, r25	; 0x04
     fba:	20 e0       	ldi	r18, 0x00	; 0
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	40 ec       	ldi	r20, 0xC0	; 192
     fc0:	50 e4       	ldi	r21, 0x40	; 64
     fc2:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     fc6:	2b ed       	ldi	r18, 0xDB	; 219
     fc8:	3f e0       	ldi	r19, 0x0F	; 15
     fca:	49 e4       	ldi	r20, 0x49	; 73
     fcc:	50 e4       	ldi	r21, 0x40	; 64
     fce:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
     fd2:	20 e0       	ldi	r18, 0x00	; 0
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	44 e3       	ldi	r20, 0x34	; 52
     fd8:	53 e4       	ldi	r21, 0x43	; 67
     fda:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
     fde:	2b ed       	ldi	r18, 0xDB	; 219
     fe0:	3f e0       	ldi	r19, 0x0F	; 15
     fe2:	49 ec       	ldi	r20, 0xC9	; 201
     fe4:	5f e3       	ldi	r21, 0x3F	; 63
     fe6:	0e 94 42 2b 	call	0x5684	; 0x5684 <__subsf3>
     fea:	6b 01       	movw	r12, r22
     fec:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     fee:	0e 94 0d 2c 	call	0x581a	; 0x581a <cos>
     ff2:	4b 01       	movw	r8, r22
     ff4:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
     ff6:	c7 01       	movw	r24, r14
     ff8:	b6 01       	movw	r22, r12
     ffa:	0e 94 6c 2e 	call	0x5cd8	; 0x5cd8 <sin>
     ffe:	2b 01       	movw	r4, r22
    1000:	3c 01       	movw	r6, r24
    1002:	00 e0       	ldi	r16, 0x00	; 0
    1004:	10 e0       	ldi	r17, 0x00	; 0
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    1006:	b8 01       	movw	r22, r16
    1008:	88 27       	eor	r24, r24
    100a:	77 fd       	sbrc	r23, 7
    100c:	80 95       	com	r24
    100e:	98 2f       	mov	r25, r24
    1010:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
    1014:	6b 01       	movw	r12, r22
    1016:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
    1018:	a3 01       	movw	r20, r6
    101a:	92 01       	movw	r18, r4
    101c:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    1020:	20 e0       	ldi	r18, 0x00	; 0
    1022:	30 e0       	ldi	r19, 0x00	; 0
    1024:	48 ef       	ldi	r20, 0xF8	; 248
    1026:	51 e4       	ldi	r21, 0x41	; 65
    1028:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
    102c:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
    1030:	36 2e       	mov	r3, r22
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    1032:	a5 01       	movw	r20, r10
    1034:	94 01       	movw	r18, r8
    1036:	c7 01       	movw	r24, r14
    1038:	b6 01       	movw	r22, r12
    103a:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	48 ef       	ldi	r20, 0xF8	; 248
    1044:	51 e4       	ldi	r21, 0x41	; 65
    1046:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
    104a:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
    104e:	20 e0       	ldi	r18, 0x00	; 0
    1050:	43 2d       	mov	r20, r3
    1052:	8e 81       	ldd	r24, Y+6	; 0x06
    1054:	9f 81       	ldd	r25, Y+7	; 0x07
    1056:	a0 db       	rcall	.-2240   	; 0x798 <_ZN7Display9drawPixelEhhh>
    1058:	0f 5f       	subi	r16, 0xFF	; 255
    105a:	1f 4f       	sbci	r17, 0xFF	; 255
		}
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
    105c:	09 31       	cpi	r16, 0x19	; 25
    105e:	11 05       	cpc	r17, r1
    1060:	91 f6       	brne	.-92     	; 0x1006 <_ZN7Display6analogEhhhh+0x2ee>
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
    1062:	ed 81       	ldd	r30, Y+5	; 0x05
    1064:	6e 2f       	mov	r22, r30
    1066:	70 e0       	ldi	r23, 0x00	; 0
    1068:	80 e0       	ldi	r24, 0x00	; 0
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
    1070:	20 e0       	ldi	r18, 0x00	; 0
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	40 ef       	ldi	r20, 0xF0	; 240
    1076:	51 e4       	ldi	r21, 0x41	; 65
    1078:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    107c:	6b 01       	movw	r12, r22
    107e:	7c 01       	movw	r14, r24
    1080:	20 e0       	ldi	r18, 0x00	; 0
    1082:	30 e0       	ldi	r19, 0x00	; 0
    1084:	40 e0       	ldi	r20, 0x00	; 0
    1086:	5f e3       	ldi	r21, 0x3F	; 63
    1088:	69 81       	ldd	r22, Y+1	; 0x01
    108a:	7a 81       	ldd	r23, Y+2	; 0x02
    108c:	8b 81       	ldd	r24, Y+3	; 0x03
    108e:	9c 81       	ldd	r25, Y+4	; 0x04
    1090:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    1094:	9b 01       	movw	r18, r22
    1096:	ac 01       	movw	r20, r24
    1098:	c7 01       	movw	r24, r14
    109a:	b6 01       	movw	r22, r12
    109c:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
    10a0:	2b ed       	ldi	r18, 0xDB	; 219
    10a2:	3f e0       	ldi	r19, 0x0F	; 15
    10a4:	49 e4       	ldi	r20, 0x49	; 73
    10a6:	50 e4       	ldi	r21, 0x40	; 64
    10a8:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    10ac:	20 e0       	ldi	r18, 0x00	; 0
    10ae:	30 e0       	ldi	r19, 0x00	; 0
    10b0:	44 e3       	ldi	r20, 0x34	; 52
    10b2:	53 e4       	ldi	r21, 0x43	; 67
    10b4:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
    10b8:	2b ed       	ldi	r18, 0xDB	; 219
    10ba:	3f e0       	ldi	r19, 0x0F	; 15
    10bc:	49 ec       	ldi	r20, 0xC9	; 201
    10be:	5f e3       	ldi	r21, 0x3F	; 63
    10c0:	0e 94 42 2b 	call	0x5684	; 0x5684 <__subsf3>
    10c4:	6b 01       	movw	r12, r22
    10c6:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
    10c8:	0e 94 0d 2c 	call	0x581a	; 0x581a <cos>
    10cc:	2b 01       	movw	r4, r22
    10ce:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
    10d0:	c7 01       	movw	r24, r14
    10d2:	b6 01       	movw	r22, r12
    10d4:	0e 94 6c 2e 	call	0x5cd8	; 0x5cd8 <sin>
    10d8:	4b 01       	movw	r8, r22
    10da:	5c 01       	movw	r10, r24
    10dc:	00 e0       	ldi	r16, 0x00	; 0
    10de:	10 e0       	ldi	r17, 0x00	; 0

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    10e0:	b8 01       	movw	r22, r16
    10e2:	88 27       	eor	r24, r24
    10e4:	77 fd       	sbrc	r23, 7
    10e6:	80 95       	com	r24
    10e8:	98 2f       	mov	r25, r24
    10ea:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
    10ee:	6b 01       	movw	r12, r22
    10f0:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    10f2:	a5 01       	movw	r20, r10
    10f4:	94 01       	movw	r18, r8
    10f6:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    10fa:	20 e0       	ldi	r18, 0x00	; 0
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	48 ef       	ldi	r20, 0xF8	; 248
    1100:	51 e4       	ldi	r21, 0x41	; 65
    1102:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
    1106:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
    110a:	36 2e       	mov	r3, r22

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    110c:	a3 01       	movw	r20, r6
    110e:	92 01       	movw	r18, r4
    1110:	c7 01       	movw	r24, r14
    1112:	b6 01       	movw	r22, r12
    1114:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    1118:	20 e0       	ldi	r18, 0x00	; 0
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	48 ef       	ldi	r20, 0xF8	; 248
    111e:	51 e4       	ldi	r21, 0x41	; 65
    1120:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
    1124:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    1128:	20 e0       	ldi	r18, 0x00	; 0
    112a:	43 2d       	mov	r20, r3
    112c:	8e 81       	ldd	r24, Y+6	; 0x06
    112e:	9f 81       	ldd	r25, Y+7	; 0x07
    1130:	33 db       	rcall	.-2458   	; 0x798 <_ZN7Display9drawPixelEhhh>
    1132:	0f 5f       	subi	r16, 0xFF	; 255
    1134:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    1136:	01 31       	cpi	r16, 0x11	; 17
    1138:	11 05       	cpc	r17, r1
    113a:	91 f6       	brne	.-92     	; 0x10e0 <_ZN7Display6analogEhhhh+0x3c8>
		}
	}
	

	//Anzeige der Zahlen
	draw_ASCI('1',32-charsize,0);
    113c:	20 e0       	ldi	r18, 0x00	; 0
    113e:	4a e1       	ldi	r20, 0x1A	; 26
    1140:	61 e3       	ldi	r22, 0x31	; 49
    1142:	8e 81       	ldd	r24, Y+6	; 0x06
    1144:	9f 81       	ldd	r25, Y+7	; 0x07
    1146:	24 dd       	rcall	.-1464   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('2',32,0);
    1148:	20 e0       	ldi	r18, 0x00	; 0
    114a:	40 e2       	ldi	r20, 0x20	; 32
    114c:	62 e3       	ldi	r22, 0x32	; 50
    114e:	8e 81       	ldd	r24, Y+6	; 0x06
    1150:	9f 81       	ldd	r25, Y+7	; 0x07
    1152:	1e dd       	rcall	.-1476   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('3',64-charsize,4*charhighte-charhighte/2);
    1154:	2c e1       	ldi	r18, 0x1C	; 28
    1156:	4a e3       	ldi	r20, 0x3A	; 58
    1158:	63 e3       	ldi	r22, 0x33	; 51
    115a:	8e 81       	ldd	r24, Y+6	; 0x06
    115c:	9f 81       	ldd	r25, Y+7	; 0x07
    115e:	18 dd       	rcall	.-1488   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('6',32-charsize/2,7*charhighte);
    1160:	28 e3       	ldi	r18, 0x38	; 56
    1162:	4d e1       	ldi	r20, 0x1D	; 29
    1164:	66 e3       	ldi	r22, 0x36	; 54
    1166:	8e 81       	ldd	r24, Y+6	; 0x06
    1168:	9f 81       	ldd	r25, Y+7	; 0x07
    116a:	12 dd       	rcall	.-1500   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('9',0,4*charhighte-charhighte/2);
    116c:	2c e1       	ldi	r18, 0x1C	; 28
    116e:	40 e0       	ldi	r20, 0x00	; 0
    1170:	69 e3       	ldi	r22, 0x39	; 57
    1172:	8e 81       	ldd	r24, Y+6	; 0x06
    1174:	9f 81       	ldd	r25, Y+7	; 0x07
    1176:	0c dd       	rcall	.-1512   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>

	//anzeige des Rings fuer die Restlichen Stunden Zahlen
	//1
	drawPixel(26*cos((30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1178:	20 e0       	ldi	r18, 0x00	; 0
    117a:	48 e0       	ldi	r20, 0x08	; 8
    117c:	6c e2       	ldi	r22, 0x2C	; 44
    117e:	8e 81       	ldd	r24, Y+6	; 0x06
    1180:	9f 81       	ldd	r25, Y+7	; 0x07
    1182:	0a db       	rcall	.-2540   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//2
	drawPixel(26*cos((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1184:	20 e0       	ldi	r18, 0x00	; 0
    1186:	42 e1       	ldi	r20, 0x12	; 18
    1188:	65 e3       	ldi	r22, 0x35	; 53
    118a:	8e 81       	ldd	r24, Y+6	; 0x06
    118c:	9f 81       	ldd	r25, Y+7	; 0x07
    118e:	04 db       	rcall	.-2552   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//4
	drawPixel(26*cos((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1190:	20 e0       	ldi	r18, 0x00	; 0
    1192:	4c e2       	ldi	r20, 0x2C	; 44
    1194:	65 e3       	ldi	r22, 0x35	; 53
    1196:	8e 81       	ldd	r24, Y+6	; 0x06
    1198:	9f 81       	ldd	r25, Y+7	; 0x07
    119a:	fe da       	rcall	.-2564   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//5
	drawPixel(26*cos((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    119c:	20 e0       	ldi	r18, 0x00	; 0
    119e:	45 e3       	ldi	r20, 0x35	; 53
    11a0:	6b e2       	ldi	r22, 0x2B	; 43
    11a2:	8e 81       	ldd	r24, Y+6	; 0x06
    11a4:	9f 81       	ldd	r25, Y+7	; 0x07
    11a6:	f8 da       	rcall	.-2576   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//7
	drawPixel(26*cos((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11a8:	20 e0       	ldi	r18, 0x00	; 0
    11aa:	45 e3       	ldi	r20, 0x35	; 53
    11ac:	61 e1       	ldi	r22, 0x11	; 17
    11ae:	8e 81       	ldd	r24, Y+6	; 0x06
    11b0:	9f 81       	ldd	r25, Y+7	; 0x07
    11b2:	f2 da       	rcall	.-2588   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//8
	drawPixel(26*cos((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11b4:	20 e0       	ldi	r18, 0x00	; 0
    11b6:	4c e2       	ldi	r20, 0x2C	; 44
    11b8:	68 e0       	ldi	r22, 0x08	; 8
    11ba:	8e 81       	ldd	r24, Y+6	; 0x06
    11bc:	9f 81       	ldd	r25, Y+7	; 0x07
    11be:	ec da       	rcall	.-2600   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//10
	drawPixel(26*cos((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11c0:	20 e0       	ldi	r18, 0x00	; 0
    11c2:	41 e1       	ldi	r20, 0x11	; 17
    11c4:	68 e0       	ldi	r22, 0x08	; 8
    11c6:	8e 81       	ldd	r24, Y+6	; 0x06
    11c8:	9f 81       	ldd	r25, Y+7	; 0x07
    11ca:	e6 da       	rcall	.-2612   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//11
	drawPixel(26*cos((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11cc:	20 e0       	ldi	r18, 0x00	; 0
    11ce:	48 e0       	ldi	r20, 0x08	; 8
    11d0:	62 e1       	ldi	r22, 0x12	; 18
    11d2:	8e 81       	ldd	r24, Y+6	; 0x06
    11d4:	9f 81       	ldd	r25, Y+7	; 0x07
    11d6:	e0 da       	rcall	.-2624   	; 0x798 <_ZN7Display9drawPixelEhhh>
}
    11d8:	27 96       	adiw	r28, 0x07	; 7
    11da:	0f b6       	in	r0, 0x3f	; 63
    11dc:	f8 94       	cli
    11de:	de bf       	out	0x3e, r29	; 62
    11e0:	0f be       	out	0x3f, r0	; 63
    11e2:	cd bf       	out	0x3d, r28	; 61
    11e4:	df 91       	pop	r29
    11e6:	cf 91       	pop	r28
    11e8:	1f 91       	pop	r17
    11ea:	0f 91       	pop	r16
    11ec:	ff 90       	pop	r15
    11ee:	ef 90       	pop	r14
    11f0:	df 90       	pop	r13
    11f2:	cf 90       	pop	r12
    11f4:	bf 90       	pop	r11
    11f6:	af 90       	pop	r10
    11f8:	9f 90       	pop	r9
    11fa:	8f 90       	pop	r8
    11fc:	7f 90       	pop	r7
    11fe:	6f 90       	pop	r6
    1200:	5f 90       	pop	r5
    1202:	4f 90       	pop	r4
    1204:	3f 90       	pop	r3
    1206:	2f 90       	pop	r2
    1208:	08 95       	ret

0000120a <_Z8ADC_Readh>:
		oled.draw_pikachu();
		break;
	default:
		break;
	}
}
    120a:	ec e7       	ldi	r30, 0x7C	; 124
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	90 81       	ld	r25, Z
    1210:	8f 71       	andi	r24, 0x1F	; 31
    1212:	90 7e       	andi	r25, 0xE0	; 224
    1214:	98 2b       	or	r25, r24
    1216:	90 83       	st	Z, r25
    1218:	ea e7       	ldi	r30, 0x7A	; 122
    121a:	f0 e0       	ldi	r31, 0x00	; 0
    121c:	80 81       	ld	r24, Z
    121e:	80 64       	ori	r24, 0x40	; 64
    1220:	80 83       	st	Z, r24
    1222:	80 81       	ld	r24, Z
    1224:	86 fd       	sbrc	r24, 6
    1226:	fd cf       	rjmp	.-6      	; 0x1222 <_Z8ADC_Readh+0x18>
    1228:	80 91 78 00 	lds	r24, 0x0078
    122c:	90 91 79 00 	lds	r25, 0x0079
    1230:	08 95       	ret

00001232 <_Z14Batteriestatusv>:
    1232:	cf 92       	push	r12
    1234:	df 92       	push	r13
    1236:	ef 92       	push	r14
    1238:	ff 92       	push	r15
    123a:	80 e0       	ldi	r24, 0x00	; 0
    123c:	e6 df       	rcall	.-52     	; 0x120a <_Z8ADC_Readh>
    123e:	bc 01       	movw	r22, r24
    1240:	80 e0       	ldi	r24, 0x00	; 0
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	0e 94 a9 2c 	call	0x5952	; 0x5952 <__floatunsisf>
    1248:	20 e0       	ldi	r18, 0x00	; 0
    124a:	30 ec       	ldi	r19, 0xC0	; 192
    124c:	4f e7       	ldi	r20, 0x7F	; 127
    124e:	54 e4       	ldi	r21, 0x44	; 68
    1250:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
    1254:	2c e5       	ldi	r18, 0x5C	; 92
    1256:	3f e8       	ldi	r19, 0x8F	; 143
    1258:	42 e5       	ldi	r20, 0x52	; 82
    125a:	50 e4       	ldi	r21, 0x40	; 64
    125c:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    1260:	2d e0       	ldi	r18, 0x0D	; 13
    1262:	31 e7       	ldi	r19, 0x71	; 113
    1264:	40 e0       	ldi	r20, 0x00	; 0
    1266:	50 e4       	ldi	r21, 0x40	; 64
    1268:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    126c:	60 93 57 03 	sts	0x0357, r22
    1270:	70 93 58 03 	sts	0x0358, r23
    1274:	80 93 59 03 	sts	0x0359, r24
    1278:	90 93 5a 03 	sts	0x035A, r25
    127c:	20 e0       	ldi	r18, 0x00	; 0
    127e:	30 e0       	ldi	r19, 0x00	; 0
    1280:	40 e4       	ldi	r20, 0x40	; 64
    1282:	50 e4       	ldi	r21, 0x40	; 64
    1284:	0e 94 42 2b 	call	0x5684	; 0x5684 <__subsf3>
    1288:	28 e9       	ldi	r18, 0x98	; 152
    128a:	39 e9       	ldi	r19, 0x99	; 153
    128c:	49 e9       	ldi	r20, 0x99	; 153
    128e:	5f e3       	ldi	r21, 0x3F	; 63
    1290:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
    1294:	20 e0       	ldi	r18, 0x00	; 0
    1296:	30 e0       	ldi	r19, 0x00	; 0
    1298:	48 ec       	ldi	r20, 0xC8	; 200
    129a:	52 e4       	ldi	r21, 0x42	; 66
    129c:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    12a0:	6b 01       	movw	r12, r22
    12a2:	7c 01       	movw	r14, r24
    12a4:	20 e0       	ldi	r18, 0x00	; 0
    12a6:	30 e0       	ldi	r19, 0x00	; 0
    12a8:	40 e2       	ldi	r20, 0x20	; 32
    12aa:	51 e4       	ldi	r21, 0x41	; 65
    12ac:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    12b0:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
    12b4:	8d ec       	ldi	r24, 0xCD	; 205
    12b6:	68 9f       	mul	r22, r24
    12b8:	81 2d       	mov	r24, r1
    12ba:	11 24       	eor	r1, r1
    12bc:	86 95       	lsr	r24
    12be:	86 95       	lsr	r24
    12c0:	86 95       	lsr	r24
    12c2:	88 0f       	add	r24, r24
    12c4:	98 2f       	mov	r25, r24
    12c6:	99 0f       	add	r25, r25
    12c8:	99 0f       	add	r25, r25
    12ca:	89 0f       	add	r24, r25
    12cc:	68 1b       	sub	r22, r24
    12ce:	65 30       	cpi	r22, 0x05	; 5
    12d0:	70 f0       	brcs	.+28     	; 0x12ee <_Z14Batteriestatusv+0xbc>
    12d2:	c7 01       	movw	r24, r14
    12d4:	b6 01       	movw	r22, r12
    12d6:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
    12da:	70 e0       	ldi	r23, 0x00	; 0
    12dc:	6f 5f       	subi	r22, 0xFF	; 255
    12de:	7f 4f       	sbci	r23, 0xFF	; 255
    12e0:	88 27       	eor	r24, r24
    12e2:	77 fd       	sbrc	r23, 7
    12e4:	80 95       	com	r24
    12e6:	98 2f       	mov	r25, r24
    12e8:	0e 94 ab 2c 	call	0x5956	; 0x5956 <__floatsisf>
    12ec:	09 c0       	rjmp	.+18     	; 0x1300 <_Z14Batteriestatusv+0xce>
    12ee:	c7 01       	movw	r24, r14
    12f0:	b6 01       	movw	r22, r12
    12f2:	0e 94 7d 2c 	call	0x58fa	; 0x58fa <__fixunssfsi>
    12f6:	70 e0       	ldi	r23, 0x00	; 0
    12f8:	80 e0       	ldi	r24, 0x00	; 0
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	0e 94 a9 2c 	call	0x5952	; 0x5952 <__floatunsisf>
    1300:	0e 94 78 2c 	call	0x58f0	; 0x58f0 <__fixsfsi>
    1304:	86 2f       	mov	r24, r22
    1306:	ff 90       	pop	r15
    1308:	ef 90       	pop	r14
    130a:	df 90       	pop	r13
    130c:	cf 90       	pop	r12
    130e:	08 95       	ret

00001310 <_Z14willkommenpagev>:
    1310:	cf 92       	push	r12
    1312:	df 92       	push	r13
    1314:	ef 92       	push	r14
    1316:	ff 92       	push	r15
    1318:	0f 93       	push	r16
    131a:	1f 93       	push	r17
    131c:	cf 93       	push	r28
    131e:	df 93       	push	r29
    1320:	cd b7       	in	r28, 0x3d	; 61
    1322:	de b7       	in	r29, 0x3e	; 62
    1324:	64 97       	sbiw	r28, 0x14	; 20
    1326:	0f b6       	in	r0, 0x3f	; 63
    1328:	f8 94       	cli
    132a:	de bf       	out	0x3e, r29	; 62
    132c:	0f be       	out	0x3f, r0	; 63
    132e:	cd bf       	out	0x3d, r28	; 61
    1330:	83 e8       	ldi	r24, 0x83	; 131
    1332:	93 e0       	ldi	r25, 0x03	; 3
    1334:	6a d9       	rcall	.-3372   	; 0x60a <_ZN7Display10clearFrameEv>
    1336:	8f e0       	ldi	r24, 0x0F	; 15
    1338:	e0 e0       	ldi	r30, 0x00	; 0
    133a:	f1 e0       	ldi	r31, 0x01	; 1
    133c:	8e 01       	movw	r16, r28
    133e:	0f 5f       	subi	r16, 0xFF	; 255
    1340:	1f 4f       	sbci	r17, 0xFF	; 255
    1342:	d8 01       	movw	r26, r16
    1344:	01 90       	ld	r0, Z+
    1346:	0d 92       	st	X+, r0
    1348:	8a 95       	dec	r24
    134a:	e1 f7       	brne	.-8      	; 0x1344 <_Z14willkommenpagev+0x34>
    134c:	c0 2e       	mov	r12, r16
    134e:	d1 2e       	mov	r13, r17
    1350:	78 01       	movw	r14, r16
    1352:	10 e0       	ldi	r17, 0x00	; 0
    1354:	f7 01       	movw	r30, r14
    1356:	61 91       	ld	r22, Z+
    1358:	7f 01       	movw	r14, r30
    135a:	20 e0       	ldi	r18, 0x00	; 0
    135c:	41 2f       	mov	r20, r17
    135e:	83 e8       	ldi	r24, 0x83	; 131
    1360:	93 e0       	ldi	r25, 0x03	; 3
    1362:	16 dc       	rcall	.-2004   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1364:	1a 5f       	subi	r17, 0xFA	; 250
    1366:	14 35       	cpi	r17, 0x54	; 84
    1368:	a9 f7       	brne	.-22     	; 0x1354 <_Z14willkommenpagev+0x44>
    136a:	8f e0       	ldi	r24, 0x0F	; 15
    136c:	ef e0       	ldi	r30, 0x0F	; 15
    136e:	f1 e0       	ldi	r31, 0x01	; 1
    1370:	de 01       	movw	r26, r28
    1372:	11 96       	adiw	r26, 0x01	; 1
    1374:	01 90       	ld	r0, Z+
    1376:	0d 92       	st	X+, r0
    1378:	8a 95       	dec	r24
    137a:	e1 f7       	brne	.-8      	; 0x1374 <_Z14willkommenpagev+0x64>
    137c:	ec 2c       	mov	r14, r12
    137e:	fd 2c       	mov	r15, r13
    1380:	10 e0       	ldi	r17, 0x00	; 0
    1382:	f7 01       	movw	r30, r14
    1384:	61 91       	ld	r22, Z+
    1386:	7f 01       	movw	r14, r30
    1388:	28 e0       	ldi	r18, 0x08	; 8
    138a:	41 2f       	mov	r20, r17
    138c:	83 e8       	ldi	r24, 0x83	; 131
    138e:	93 e0       	ldi	r25, 0x03	; 3
    1390:	ff db       	rcall	.-2050   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1392:	1a 5f       	subi	r17, 0xFA	; 250
    1394:	14 35       	cpi	r17, 0x54	; 84
    1396:	a9 f7       	brne	.-22     	; 0x1382 <_Z14willkommenpagev+0x72>
    1398:	80 e4       	ldi	r24, 0x40	; 64
    139a:	8f 93       	push	r24
    139c:	1f 92       	push	r1
    139e:	1f 92       	push	r1
    13a0:	1f 92       	push	r1
    13a2:	8e e1       	ldi	r24, 0x1E	; 30
    13a4:	91 e0       	ldi	r25, 0x01	; 1
    13a6:	9f 93       	push	r25
    13a8:	8f 93       	push	r24
    13aa:	ce 01       	movw	r24, r28
    13ac:	01 96       	adiw	r24, 0x01	; 1
    13ae:	9f 93       	push	r25
    13b0:	8f 93       	push	r24
    13b2:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    13b6:	0f b6       	in	r0, 0x3f	; 63
    13b8:	f8 94       	cli
    13ba:	de bf       	out	0x3e, r29	; 62
    13bc:	0f be       	out	0x3f, r0	; 63
    13be:	cd bf       	out	0x3d, r28	; 61
    13c0:	88 23       	and	r24, r24
    13c2:	c9 f0       	breq	.+50     	; 0x13f6 <_Z14willkommenpagev+0xe6>
    13c4:	81 50       	subi	r24, 0x01	; 1
    13c6:	68 94       	set
    13c8:	ee 24       	eor	r14, r14
    13ca:	e1 f8       	bld	r14, 1
    13cc:	f1 2c       	mov	r15, r1
    13ce:	ec 0e       	add	r14, r28
    13d0:	fd 1e       	adc	r15, r29
    13d2:	e8 0e       	add	r14, r24
    13d4:	f1 1c       	adc	r15, r1
    13d6:	0c 2d       	mov	r16, r12
    13d8:	1d 2d       	mov	r17, r13
    13da:	d1 2c       	mov	r13, r1
    13dc:	f8 01       	movw	r30, r16
    13de:	61 91       	ld	r22, Z+
    13e0:	8f 01       	movw	r16, r30
    13e2:	20 e2       	ldi	r18, 0x20	; 32
    13e4:	4d 2d       	mov	r20, r13
    13e6:	83 e8       	ldi	r24, 0x83	; 131
    13e8:	93 e0       	ldi	r25, 0x03	; 3
    13ea:	d2 db       	rcall	.-2140   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    13ec:	f6 e0       	ldi	r31, 0x06	; 6
    13ee:	df 0e       	add	r13, r31
    13f0:	0e 15       	cp	r16, r14
    13f2:	1f 05       	cpc	r17, r15
    13f4:	99 f7       	brne	.-26     	; 0x13dc <_Z14willkommenpagev+0xcc>
    13f6:	83 e8       	ldi	r24, 0x83	; 131
    13f8:	93 e0       	ldi	r25, 0x03	; 3
    13fa:	91 d9       	rcall	.-3294   	; 0x71e <_ZN7Display9sendFrameEv>
    13fc:	83 e8       	ldi	r24, 0x83	; 131
    13fe:	93 e0       	ldi	r25, 0x03	; 3
    1400:	04 d9       	rcall	.-3576   	; 0x60a <_ZN7Display10clearFrameEv>
    1402:	85 e0       	ldi	r24, 0x05	; 5
    1404:	2f e7       	ldi	r18, 0x7F	; 127
    1406:	38 e3       	ldi	r19, 0x38	; 56
    1408:	91 e0       	ldi	r25, 0x01	; 1
    140a:	21 50       	subi	r18, 0x01	; 1
    140c:	30 40       	sbci	r19, 0x00	; 0
    140e:	90 40       	sbci	r25, 0x00	; 0
    1410:	e1 f7       	brne	.-8      	; 0x140a <_Z14willkommenpagev+0xfa>
    1412:	00 c0       	rjmp	.+0      	; 0x1414 <_Z14willkommenpagev+0x104>
    1414:	00 00       	nop
    1416:	ef e7       	ldi	r30, 0x7F	; 127
    1418:	f8 e3       	ldi	r31, 0x38	; 56
    141a:	21 e0       	ldi	r18, 0x01	; 1
    141c:	e1 50       	subi	r30, 0x01	; 1
    141e:	f0 40       	sbci	r31, 0x00	; 0
    1420:	20 40       	sbci	r18, 0x00	; 0
    1422:	e1 f7       	brne	.-8      	; 0x141c <_Z14willkommenpagev+0x10c>
    1424:	00 c0       	rjmp	.+0      	; 0x1426 <_Z14willkommenpagev+0x116>
    1426:	00 00       	nop
    1428:	81 50       	subi	r24, 0x01	; 1
    142a:	61 f7       	brne	.-40     	; 0x1404 <_Z14willkommenpagev+0xf4>
    142c:	64 96       	adiw	r28, 0x14	; 20
    142e:	0f b6       	in	r0, 0x3f	; 63
    1430:	f8 94       	cli
    1432:	de bf       	out	0x3e, r29	; 62
    1434:	0f be       	out	0x3f, r0	; 63
    1436:	cd bf       	out	0x3d, r28	; 61
    1438:	df 91       	pop	r29
    143a:	cf 91       	pop	r28
    143c:	1f 91       	pop	r17
    143e:	0f 91       	pop	r16
    1440:	ff 90       	pop	r15
    1442:	ef 90       	pop	r14
    1444:	df 90       	pop	r13
    1446:	cf 90       	pop	r12
    1448:	08 95       	ret

0000144a <_Z6headerh>:
    144a:	ef 92       	push	r14
    144c:	ff 92       	push	r15
    144e:	0f 93       	push	r16
    1450:	1f 93       	push	r17
    1452:	cf 93       	push	r28
    1454:	df 93       	push	r29
    1456:	cd b7       	in	r28, 0x3d	; 61
    1458:	de b7       	in	r29, 0x3e	; 62
    145a:	64 97       	sbiw	r28, 0x14	; 20
    145c:	0f b6       	in	r0, 0x3f	; 63
    145e:	f8 94       	cli
    1460:	de bf       	out	0x3e, r29	; 62
    1462:	0f be       	out	0x3f, r0	; 63
    1464:	cd bf       	out	0x3d, r28	; 61
    1466:	81 30       	cpi	r24, 0x01	; 1
    1468:	09 f4       	brne	.+2      	; 0x146c <_Z6headerh+0x22>
    146a:	51 c0       	rjmp	.+162    	; 0x150e <_Z6headerh+0xc4>
    146c:	20 f0       	brcs	.+8      	; 0x1476 <_Z6headerh+0x2c>
    146e:	82 30       	cpi	r24, 0x02	; 2
    1470:	09 f4       	brne	.+2      	; 0x1474 <_Z6headerh+0x2a>
    1472:	87 c0       	rjmp	.+270    	; 0x1582 <_Z6headerh+0x138>
    1474:	be c0       	rjmp	.+380    	; 0x15f2 <_Z6headerh+0x1a8>
    1476:	0f 2e       	mov	r0, r31
    1478:	f4 e8       	ldi	r31, 0x84	; 132
    147a:	ef 2e       	mov	r14, r31
    147c:	f7 e0       	ldi	r31, 0x07	; 7
    147e:	ff 2e       	mov	r15, r31
    1480:	f0 2d       	mov	r31, r0
    1482:	10 e0       	ldi	r17, 0x00	; 0
    1484:	f7 01       	movw	r30, r14
    1486:	61 91       	ld	r22, Z+
    1488:	7f 01       	movw	r14, r30
    148a:	20 e0       	ldi	r18, 0x00	; 0
    148c:	41 2f       	mov	r20, r17
    148e:	83 e8       	ldi	r24, 0x83	; 131
    1490:	93 e0       	ldi	r25, 0x03	; 3
    1492:	7e db       	rcall	.-2308   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1494:	1a 5f       	subi	r17, 0xFA	; 250
    1496:	10 33       	cpi	r17, 0x30	; 48
    1498:	a9 f7       	brne	.-22     	; 0x1484 <_Z6headerh+0x3a>
    149a:	cb de       	rcall	.-618    	; 0x1232 <_Z14Batteriestatusv>
    149c:	28 2f       	mov	r18, r24
    149e:	33 27       	eor	r19, r19
    14a0:	27 fd       	sbrc	r18, 7
    14a2:	30 95       	com	r19
    14a4:	3f 93       	push	r19
    14a6:	8f 93       	push	r24
    14a8:	8c e2       	ldi	r24, 0x2C	; 44
    14aa:	91 e0       	ldi	r25, 0x01	; 1
    14ac:	9f 93       	push	r25
    14ae:	8f 93       	push	r24
    14b0:	ce 01       	movw	r24, r28
    14b2:	01 96       	adiw	r24, 0x01	; 1
    14b4:	9f 93       	push	r25
    14b6:	8f 93       	push	r24
    14b8:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    14bc:	25 e1       	ldi	r18, 0x15	; 21
    14be:	f2 2e       	mov	r15, r18
    14c0:	f8 1a       	sub	r15, r24
    14c2:	0f 90       	pop	r0
    14c4:	0f 90       	pop	r0
    14c6:	0f 90       	pop	r0
    14c8:	0f 90       	pop	r0
    14ca:	0f 90       	pop	r0
    14cc:	0f 90       	pop	r0
    14ce:	f4 e1       	ldi	r31, 0x14	; 20
    14d0:	ff 15       	cp	r31, r15
    14d2:	08 f4       	brcc	.+2      	; 0x14d6 <_Z6headerh+0x8c>
    14d4:	8e c0       	rjmp	.+284    	; 0x15f2 <_Z6headerh+0x1a8>
    14d6:	ef 2c       	mov	r14, r15
    14d8:	ee 0c       	add	r14, r14
    14da:	ef 0c       	add	r14, r15
    14dc:	ee 0c       	add	r14, r14
    14de:	8c 01       	movw	r16, r24
    14e0:	11 27       	eor	r17, r17
    14e2:	e1 e0       	ldi	r30, 0x01	; 1
    14e4:	f0 e0       	ldi	r31, 0x00	; 0
    14e6:	ec 0f       	add	r30, r28
    14e8:	fd 1f       	adc	r31, r29
    14ea:	ef 0d       	add	r30, r15
    14ec:	f1 1d       	adc	r31, r1
    14ee:	e0 0f       	add	r30, r16
    14f0:	f1 1f       	adc	r31, r17
    14f2:	75 97       	sbiw	r30, 0x15	; 21
    14f4:	20 e0       	ldi	r18, 0x00	; 0
    14f6:	4e 2d       	mov	r20, r14
    14f8:	60 81       	ld	r22, Z
    14fa:	83 e8       	ldi	r24, 0x83	; 131
    14fc:	93 e0       	ldi	r25, 0x03	; 3
    14fe:	48 db       	rcall	.-2416   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1500:	f3 94       	inc	r15
    1502:	26 e0       	ldi	r18, 0x06	; 6
    1504:	e2 0e       	add	r14, r18
    1506:	85 e1       	ldi	r24, 0x15	; 21
    1508:	f8 12       	cpse	r15, r24
    150a:	eb cf       	rjmp	.-42     	; 0x14e2 <_Z6headerh+0x98>
    150c:	72 c0       	rjmp	.+228    	; 0x15f2 <_Z6headerh+0x1a8>
    150e:	91 de       	rcall	.-734    	; 0x1232 <_Z14Batteriestatusv>
    1510:	28 2f       	mov	r18, r24
    1512:	33 27       	eor	r19, r19
    1514:	27 fd       	sbrc	r18, 7
    1516:	30 95       	com	r19
    1518:	3f 93       	push	r19
    151a:	8f 93       	push	r24
    151c:	8c e2       	ldi	r24, 0x2C	; 44
    151e:	91 e0       	ldi	r25, 0x01	; 1
    1520:	9f 93       	push	r25
    1522:	8f 93       	push	r24
    1524:	ce 01       	movw	r24, r28
    1526:	01 96       	adiw	r24, 0x01	; 1
    1528:	9f 93       	push	r25
    152a:	8f 93       	push	r24
    152c:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    1530:	25 e1       	ldi	r18, 0x15	; 21
    1532:	f2 2e       	mov	r15, r18
    1534:	f8 1a       	sub	r15, r24
    1536:	0f 90       	pop	r0
    1538:	0f 90       	pop	r0
    153a:	0f 90       	pop	r0
    153c:	0f 90       	pop	r0
    153e:	0f 90       	pop	r0
    1540:	0f 90       	pop	r0
    1542:	e4 e1       	ldi	r30, 0x14	; 20
    1544:	ef 15       	cp	r30, r15
    1546:	08 f4       	brcc	.+2      	; 0x154a <_Z6headerh+0x100>
    1548:	54 c0       	rjmp	.+168    	; 0x15f2 <_Z6headerh+0x1a8>
    154a:	ef 2c       	mov	r14, r15
    154c:	ee 0c       	add	r14, r14
    154e:	ef 0c       	add	r14, r15
    1550:	ee 0c       	add	r14, r14
    1552:	8c 01       	movw	r16, r24
    1554:	11 27       	eor	r17, r17
    1556:	e1 e0       	ldi	r30, 0x01	; 1
    1558:	f0 e0       	ldi	r31, 0x00	; 0
    155a:	ec 0f       	add	r30, r28
    155c:	fd 1f       	adc	r31, r29
    155e:	ef 0d       	add	r30, r15
    1560:	f1 1d       	adc	r31, r1
    1562:	e0 0f       	add	r30, r16
    1564:	f1 1f       	adc	r31, r17
    1566:	75 97       	sbiw	r30, 0x15	; 21
    1568:	20 e0       	ldi	r18, 0x00	; 0
    156a:	4e 2d       	mov	r20, r14
    156c:	60 81       	ld	r22, Z
    156e:	83 e8       	ldi	r24, 0x83	; 131
    1570:	93 e0       	ldi	r25, 0x03	; 3
    1572:	0e db       	rcall	.-2532   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1574:	f3 94       	inc	r15
    1576:	f6 e0       	ldi	r31, 0x06	; 6
    1578:	ef 0e       	add	r14, r31
    157a:	25 e1       	ldi	r18, 0x15	; 21
    157c:	f2 12       	cpse	r15, r18
    157e:	eb cf       	rjmp	.-42     	; 0x1556 <_Z6headerh+0x10c>
    1580:	38 c0       	rjmp	.+112    	; 0x15f2 <_Z6headerh+0x1a8>
    1582:	57 de       	rcall	.-850    	; 0x1232 <_Z14Batteriestatusv>
    1584:	28 2f       	mov	r18, r24
    1586:	33 27       	eor	r19, r19
    1588:	27 fd       	sbrc	r18, 7
    158a:	30 95       	com	r19
    158c:	3f 93       	push	r19
    158e:	8f 93       	push	r24
    1590:	81 e3       	ldi	r24, 0x31	; 49
    1592:	91 e0       	ldi	r25, 0x01	; 1
    1594:	9f 93       	push	r25
    1596:	8f 93       	push	r24
    1598:	ce 01       	movw	r24, r28
    159a:	01 96       	adiw	r24, 0x01	; 1
    159c:	9f 93       	push	r25
    159e:	8f 93       	push	r24
    15a0:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    15a4:	25 e1       	ldi	r18, 0x15	; 21
    15a6:	f2 2e       	mov	r15, r18
    15a8:	f8 1a       	sub	r15, r24
    15aa:	0f 90       	pop	r0
    15ac:	0f 90       	pop	r0
    15ae:	0f 90       	pop	r0
    15b0:	0f 90       	pop	r0
    15b2:	0f 90       	pop	r0
    15b4:	0f 90       	pop	r0
    15b6:	e4 e1       	ldi	r30, 0x14	; 20
    15b8:	ef 15       	cp	r30, r15
    15ba:	d8 f0       	brcs	.+54     	; 0x15f2 <_Z6headerh+0x1a8>
    15bc:	ef 2c       	mov	r14, r15
    15be:	ee 0c       	add	r14, r14
    15c0:	ef 0c       	add	r14, r15
    15c2:	ee 0c       	add	r14, r14
    15c4:	8c 01       	movw	r16, r24
    15c6:	11 27       	eor	r17, r17
    15c8:	e1 e0       	ldi	r30, 0x01	; 1
    15ca:	f0 e0       	ldi	r31, 0x00	; 0
    15cc:	ec 0f       	add	r30, r28
    15ce:	fd 1f       	adc	r31, r29
    15d0:	ef 0d       	add	r30, r15
    15d2:	f1 1d       	adc	r31, r1
    15d4:	e0 0f       	add	r30, r16
    15d6:	f1 1f       	adc	r31, r17
    15d8:	75 97       	sbiw	r30, 0x15	; 21
    15da:	20 e0       	ldi	r18, 0x00	; 0
    15dc:	4e 2d       	mov	r20, r14
    15de:	60 81       	ld	r22, Z
    15e0:	83 e8       	ldi	r24, 0x83	; 131
    15e2:	93 e0       	ldi	r25, 0x03	; 3
    15e4:	d5 da       	rcall	.-2646   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    15e6:	f3 94       	inc	r15
    15e8:	f6 e0       	ldi	r31, 0x06	; 6
    15ea:	ef 0e       	add	r14, r31
    15ec:	25 e1       	ldi	r18, 0x15	; 21
    15ee:	f2 12       	cpse	r15, r18
    15f0:	eb cf       	rjmp	.-42     	; 0x15c8 <_Z6headerh+0x17e>
    15f2:	64 96       	adiw	r28, 0x14	; 20
    15f4:	0f b6       	in	r0, 0x3f	; 63
    15f6:	f8 94       	cli
    15f8:	de bf       	out	0x3e, r29	; 62
    15fa:	0f be       	out	0x3f, r0	; 63
    15fc:	cd bf       	out	0x3d, r28	; 61
    15fe:	df 91       	pop	r29
    1600:	cf 91       	pop	r28
    1602:	1f 91       	pop	r17
    1604:	0f 91       	pop	r16
    1606:	ff 90       	pop	r15
    1608:	ef 90       	pop	r14
    160a:	08 95       	ret

0000160c <_Z6bottomh>:
    160c:	1f 93       	push	r17
    160e:	cf 93       	push	r28
    1610:	df 93       	push	r29
    1612:	88 23       	and	r24, r24
    1614:	19 f0       	breq	.+6      	; 0x161c <_Z6bottomh+0x10>
    1616:	81 30       	cpi	r24, 0x01	; 1
    1618:	71 f0       	breq	.+28     	; 0x1636 <_Z6bottomh+0x2a>
    161a:	19 c0       	rjmp	.+50     	; 0x164e <_Z6bottomh+0x42>
    161c:	cc e8       	ldi	r28, 0x8C	; 140
    161e:	d7 e0       	ldi	r29, 0x07	; 7
    1620:	10 e5       	ldi	r17, 0x50	; 80
    1622:	69 91       	ld	r22, Y+
    1624:	28 e3       	ldi	r18, 0x38	; 56
    1626:	41 2f       	mov	r20, r17
    1628:	83 e8       	ldi	r24, 0x83	; 131
    162a:	93 e0       	ldi	r25, 0x03	; 3
    162c:	b1 da       	rcall	.-2718   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    162e:	1a 5f       	subi	r17, 0xFA	; 250
    1630:	10 38       	cpi	r17, 0x80	; 128
    1632:	b9 f7       	brne	.-18     	; 0x1622 <_Z6bottomh+0x16>
    1634:	0c c0       	rjmp	.+24     	; 0x164e <_Z6bottomh+0x42>
    1636:	cc e8       	ldi	r28, 0x8C	; 140
    1638:	d7 e0       	ldi	r29, 0x07	; 7
    163a:	15 e0       	ldi	r17, 0x05	; 5
    163c:	69 91       	ld	r22, Y+
    163e:	28 e3       	ldi	r18, 0x38	; 56
    1640:	41 2f       	mov	r20, r17
    1642:	83 e8       	ldi	r24, 0x83	; 131
    1644:	93 e0       	ldi	r25, 0x03	; 3
    1646:	a4 da       	rcall	.-2744   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1648:	1a 5f       	subi	r17, 0xFA	; 250
    164a:	15 33       	cpi	r17, 0x35	; 53
    164c:	b9 f7       	brne	.-18     	; 0x163c <_Z6bottomh+0x30>
    164e:	df 91       	pop	r29
    1650:	cf 91       	pop	r28
    1652:	1f 91       	pop	r17
    1654:	08 95       	ret

00001656 <_Z16anzeige_richtungf>:
    1656:	cf 92       	push	r12
    1658:	df 92       	push	r13
    165a:	ef 92       	push	r14
    165c:	ff 92       	push	r15
    165e:	6b 01       	movw	r12, r22
    1660:	7c 01       	movw	r14, r24
    1662:	20 e0       	ldi	r18, 0x00	; 0
    1664:	30 e0       	ldi	r19, 0x00	; 0
    1666:	40 eb       	ldi	r20, 0xB0	; 176
    1668:	51 e4       	ldi	r21, 0x41	; 65
    166a:	0e 94 09 2c 	call	0x5812	; 0x5812 <__cmpsf2>
    166e:	88 23       	and	r24, r24
    1670:	54 f0       	brlt	.+20     	; 0x1686 <_Z16anzeige_richtungf+0x30>
    1672:	20 e0       	ldi	r18, 0x00	; 0
    1674:	30 e0       	ldi	r19, 0x00	; 0
    1676:	49 ea       	ldi	r20, 0xA9	; 169
    1678:	53 e4       	ldi	r21, 0x43	; 67
    167a:	c7 01       	movw	r24, r14
    167c:	b6 01       	movw	r22, r12
    167e:	0e 94 b9 2d 	call	0x5b72	; 0x5b72 <__gesf2>
    1682:	88 23       	and	r24, r24
    1684:	3c f0       	brlt	.+14     	; 0x1694 <_Z16anzeige_richtungf+0x3e>
    1686:	2c e1       	ldi	r18, 0x1C	; 28
    1688:	40 e5       	ldi	r20, 0x50	; 80
    168a:	6e e4       	ldi	r22, 0x4E	; 78
    168c:	83 e8       	ldi	r24, 0x83	; 131
    168e:	93 e0       	ldi	r25, 0x03	; 3
    1690:	7f da       	rcall	.-2818   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1692:	8e c0       	rjmp	.+284    	; 0x17b0 <_Z16anzeige_richtungf+0x15a>
    1694:	20 e0       	ldi	r18, 0x00	; 0
    1696:	30 e0       	ldi	r19, 0x00	; 0
    1698:	48 e8       	ldi	r20, 0x88	; 136
    169a:	52 e4       	ldi	r21, 0x42	; 66
    169c:	c7 01       	movw	r24, r14
    169e:	b6 01       	movw	r22, r12
    16a0:	0e 94 09 2c 	call	0x5812	; 0x5812 <__cmpsf2>
    16a4:	88 23       	and	r24, r24
    16a6:	6c f4       	brge	.+26     	; 0x16c2 <_Z16anzeige_richtungf+0x6c>
    16a8:	2c e1       	ldi	r18, 0x1C	; 28
    16aa:	4d e4       	ldi	r20, 0x4D	; 77
    16ac:	6e e4       	ldi	r22, 0x4E	; 78
    16ae:	83 e8       	ldi	r24, 0x83	; 131
    16b0:	93 e0       	ldi	r25, 0x03	; 3
    16b2:	6e da       	rcall	.-2852   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    16b4:	2c e1       	ldi	r18, 0x1C	; 28
    16b6:	43 e5       	ldi	r20, 0x53	; 83
    16b8:	6f e4       	ldi	r22, 0x4F	; 79
    16ba:	83 e8       	ldi	r24, 0x83	; 131
    16bc:	93 e0       	ldi	r25, 0x03	; 3
    16be:	68 da       	rcall	.-2864   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    16c0:	77 c0       	rjmp	.+238    	; 0x17b0 <_Z16anzeige_richtungf+0x15a>
    16c2:	20 e0       	ldi	r18, 0x00	; 0
    16c4:	30 e0       	ldi	r19, 0x00	; 0
    16c6:	42 ee       	ldi	r20, 0xE2	; 226
    16c8:	52 e4       	ldi	r21, 0x42	; 66
    16ca:	c7 01       	movw	r24, r14
    16cc:	b6 01       	movw	r22, r12
    16ce:	0e 94 09 2c 	call	0x5812	; 0x5812 <__cmpsf2>
    16d2:	88 23       	and	r24, r24
    16d4:	3c f4       	brge	.+14     	; 0x16e4 <_Z16anzeige_richtungf+0x8e>
    16d6:	2c e1       	ldi	r18, 0x1C	; 28
    16d8:	40 e5       	ldi	r20, 0x50	; 80
    16da:	6f e4       	ldi	r22, 0x4F	; 79
    16dc:	83 e8       	ldi	r24, 0x83	; 131
    16de:	93 e0       	ldi	r25, 0x03	; 3
    16e0:	57 da       	rcall	.-2898   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    16e2:	66 c0       	rjmp	.+204    	; 0x17b0 <_Z16anzeige_richtungf+0x15a>
    16e4:	20 e0       	ldi	r18, 0x00	; 0
    16e6:	30 e0       	ldi	r19, 0x00	; 0
    16e8:	4e e1       	ldi	r20, 0x1E	; 30
    16ea:	53 e4       	ldi	r21, 0x43	; 67
    16ec:	c7 01       	movw	r24, r14
    16ee:	b6 01       	movw	r22, r12
    16f0:	0e 94 09 2c 	call	0x5812	; 0x5812 <__cmpsf2>
    16f4:	88 23       	and	r24, r24
    16f6:	6c f4       	brge	.+26     	; 0x1712 <_Z16anzeige_richtungf+0xbc>
    16f8:	2c e1       	ldi	r18, 0x1C	; 28
    16fa:	4d e4       	ldi	r20, 0x4D	; 77
    16fc:	63 e5       	ldi	r22, 0x53	; 83
    16fe:	83 e8       	ldi	r24, 0x83	; 131
    1700:	93 e0       	ldi	r25, 0x03	; 3
    1702:	46 da       	rcall	.-2932   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1704:	2c e1       	ldi	r18, 0x1C	; 28
    1706:	43 e5       	ldi	r20, 0x53	; 83
    1708:	6f e4       	ldi	r22, 0x4F	; 79
    170a:	83 e8       	ldi	r24, 0x83	; 131
    170c:	93 e0       	ldi	r25, 0x03	; 3
    170e:	40 da       	rcall	.-2944   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1710:	4f c0       	rjmp	.+158    	; 0x17b0 <_Z16anzeige_richtungf+0x15a>
    1712:	20 e0       	ldi	r18, 0x00	; 0
    1714:	30 e0       	ldi	r19, 0x00	; 0
    1716:	4b e4       	ldi	r20, 0x4B	; 75
    1718:	53 e4       	ldi	r21, 0x43	; 67
    171a:	c7 01       	movw	r24, r14
    171c:	b6 01       	movw	r22, r12
    171e:	0e 94 09 2c 	call	0x5812	; 0x5812 <__cmpsf2>
    1722:	88 23       	and	r24, r24
    1724:	3c f4       	brge	.+14     	; 0x1734 <_Z16anzeige_richtungf+0xde>
    1726:	2c e1       	ldi	r18, 0x1C	; 28
    1728:	40 e5       	ldi	r20, 0x50	; 80
    172a:	63 e5       	ldi	r22, 0x53	; 83
    172c:	83 e8       	ldi	r24, 0x83	; 131
    172e:	93 e0       	ldi	r25, 0x03	; 3
    1730:	2f da       	rcall	.-2978   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1732:	3e c0       	rjmp	.+124    	; 0x17b0 <_Z16anzeige_richtungf+0x15a>
    1734:	20 e0       	ldi	r18, 0x00	; 0
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	48 e7       	ldi	r20, 0x78	; 120
    173a:	53 e4       	ldi	r21, 0x43	; 67
    173c:	c7 01       	movw	r24, r14
    173e:	b6 01       	movw	r22, r12
    1740:	0e 94 09 2c 	call	0x5812	; 0x5812 <__cmpsf2>
    1744:	88 23       	and	r24, r24
    1746:	6c f4       	brge	.+26     	; 0x1762 <_Z16anzeige_richtungf+0x10c>
    1748:	2c e1       	ldi	r18, 0x1C	; 28
    174a:	4d e4       	ldi	r20, 0x4D	; 77
    174c:	63 e5       	ldi	r22, 0x53	; 83
    174e:	83 e8       	ldi	r24, 0x83	; 131
    1750:	93 e0       	ldi	r25, 0x03	; 3
    1752:	1e da       	rcall	.-3012   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1754:	2c e1       	ldi	r18, 0x1C	; 28
    1756:	43 e5       	ldi	r20, 0x53	; 83
    1758:	67 e5       	ldi	r22, 0x57	; 87
    175a:	83 e8       	ldi	r24, 0x83	; 131
    175c:	93 e0       	ldi	r25, 0x03	; 3
    175e:	18 da       	rcall	.-3024   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1760:	27 c0       	rjmp	.+78     	; 0x17b0 <_Z16anzeige_richtungf+0x15a>
    1762:	20 e0       	ldi	r18, 0x00	; 0
    1764:	30 e8       	ldi	r19, 0x80	; 128
    1766:	42 e9       	ldi	r20, 0x92	; 146
    1768:	53 e4       	ldi	r21, 0x43	; 67
    176a:	c7 01       	movw	r24, r14
    176c:	b6 01       	movw	r22, r12
    176e:	0e 94 09 2c 	call	0x5812	; 0x5812 <__cmpsf2>
    1772:	88 23       	and	r24, r24
    1774:	3c f4       	brge	.+14     	; 0x1784 <_Z16anzeige_richtungf+0x12e>
    1776:	2c e1       	ldi	r18, 0x1C	; 28
    1778:	40 e5       	ldi	r20, 0x50	; 80
    177a:	67 e5       	ldi	r22, 0x57	; 87
    177c:	83 e8       	ldi	r24, 0x83	; 131
    177e:	93 e0       	ldi	r25, 0x03	; 3
    1780:	07 da       	rcall	.-3058   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1782:	16 c0       	rjmp	.+44     	; 0x17b0 <_Z16anzeige_richtungf+0x15a>
    1784:	20 e0       	ldi	r18, 0x00	; 0
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	49 ea       	ldi	r20, 0xA9	; 169
    178a:	53 e4       	ldi	r21, 0x43	; 67
    178c:	c7 01       	movw	r24, r14
    178e:	b6 01       	movw	r22, r12
    1790:	0e 94 09 2c 	call	0x5812	; 0x5812 <__cmpsf2>
    1794:	88 23       	and	r24, r24
    1796:	64 f4       	brge	.+24     	; 0x17b0 <_Z16anzeige_richtungf+0x15a>
    1798:	2c e1       	ldi	r18, 0x1C	; 28
    179a:	4d e4       	ldi	r20, 0x4D	; 77
    179c:	6e e4       	ldi	r22, 0x4E	; 78
    179e:	83 e8       	ldi	r24, 0x83	; 131
    17a0:	93 e0       	ldi	r25, 0x03	; 3
    17a2:	f6 d9       	rcall	.-3092   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    17a4:	2c e1       	ldi	r18, 0x1C	; 28
    17a6:	43 e5       	ldi	r20, 0x53	; 83
    17a8:	67 e5       	ldi	r22, 0x57	; 87
    17aa:	83 e8       	ldi	r24, 0x83	; 131
    17ac:	93 e0       	ldi	r25, 0x03	; 3
    17ae:	f0 d9       	rcall	.-3104   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    17b0:	ff 90       	pop	r15
    17b2:	ef 90       	pop	r14
    17b4:	df 90       	pop	r13
    17b6:	cf 90       	pop	r12
    17b8:	08 95       	ret

000017ba <_Z13anzeige_nadelhhf>:
    17ba:	af 92       	push	r10
    17bc:	bf 92       	push	r11
    17be:	cf 92       	push	r12
    17c0:	df 92       	push	r13
    17c2:	ef 92       	push	r14
    17c4:	ff 92       	push	r15
    17c6:	0f 93       	push	r16
    17c8:	1f 93       	push	r17
    17ca:	59 01       	movw	r10, r18
    17cc:	6a 01       	movw	r12, r20
    17ce:	e1 2c       	mov	r14, r1
    17d0:	f1 2c       	mov	r15, r1
    17d2:	0c e8       	ldi	r16, 0x8C	; 140
    17d4:	12 e4       	ldi	r17, 0x42	; 66
    17d6:	24 e1       	ldi	r18, 0x14	; 20
    17d8:	46 2f       	mov	r20, r22
    17da:	68 2f       	mov	r22, r24
    17dc:	83 e8       	ldi	r24, 0x83	; 131
    17de:	93 e0       	ldi	r25, 0x03	; 3
    17e0:	b7 d8       	rcall	.-3730   	; 0x950 <_ZN7Display13draw_triangleEhhhff>
    17e2:	1f 91       	pop	r17
    17e4:	0f 91       	pop	r16
    17e6:	ff 90       	pop	r15
    17e8:	ef 90       	pop	r14
    17ea:	df 90       	pop	r13
    17ec:	cf 90       	pop	r12
    17ee:	bf 90       	pop	r11
    17f0:	af 90       	pop	r10
    17f2:	08 95       	ret

000017f4 <_Z19anzeige_kleinenadelhhf>:
    17f4:	af 92       	push	r10
    17f6:	bf 92       	push	r11
    17f8:	cf 92       	push	r12
    17fa:	df 92       	push	r13
    17fc:	ef 92       	push	r14
    17fe:	ff 92       	push	r15
    1800:	0f 93       	push	r16
    1802:	1f 93       	push	r17
    1804:	59 01       	movw	r10, r18
    1806:	6a 01       	movw	r12, r20
    1808:	e1 2c       	mov	r14, r1
    180a:	f1 2c       	mov	r15, r1
    180c:	0c e8       	ldi	r16, 0x8C	; 140
    180e:	12 e4       	ldi	r17, 0x42	; 66
    1810:	2a e0       	ldi	r18, 0x0A	; 10
    1812:	46 2f       	mov	r20, r22
    1814:	68 2f       	mov	r22, r24
    1816:	83 e8       	ldi	r24, 0x83	; 131
    1818:	93 e0       	ldi	r25, 0x03	; 3
    181a:	9a d8       	rcall	.-3788   	; 0x950 <_ZN7Display13draw_triangleEhhhff>
    181c:	1f 91       	pop	r17
    181e:	0f 91       	pop	r16
    1820:	ff 90       	pop	r15
    1822:	ef 90       	pop	r14
    1824:	df 90       	pop	r13
    1826:	cf 90       	pop	r12
    1828:	bf 90       	pop	r11
    182a:	af 90       	pop	r10
    182c:	08 95       	ret

0000182e <_Z11menue_hauptv>:
    182e:	cf 92       	push	r12
    1830:	df 92       	push	r13
    1832:	ef 92       	push	r14
    1834:	ff 92       	push	r15
    1836:	0f 93       	push	r16
    1838:	1f 93       	push	r17
    183a:	cf 93       	push	r28
    183c:	df 93       	push	r29
    183e:	cd b7       	in	r28, 0x3d	; 61
    1840:	de b7       	in	r29, 0x3e	; 62
    1842:	64 97       	sbiw	r28, 0x14	; 20
    1844:	0f b6       	in	r0, 0x3f	; 63
    1846:	f8 94       	cli
    1848:	de bf       	out	0x3e, r29	; 62
    184a:	0f be       	out	0x3f, r0	; 63
    184c:	cd bf       	out	0x3d, r28	; 61
    184e:	83 e8       	ldi	r24, 0x83	; 131
    1850:	93 e0       	ldi	r25, 0x03	; 3
    1852:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1856:	80 e1       	ldi	r24, 0x10	; 16
    1858:	e6 e3       	ldi	r30, 0x36	; 54
    185a:	f1 e0       	ldi	r31, 0x01	; 1
    185c:	8e 01       	movw	r16, r28
    185e:	0f 5f       	subi	r16, 0xFF	; 255
    1860:	1f 4f       	sbci	r17, 0xFF	; 255
    1862:	d8 01       	movw	r26, r16
    1864:	01 90       	ld	r0, Z+
    1866:	0d 92       	st	X+, r0
    1868:	8a 95       	dec	r24
    186a:	e1 f7       	brne	.-8      	; 0x1864 <_Z11menue_hauptv+0x36>
    186c:	e0 2e       	mov	r14, r16
    186e:	f1 2e       	mov	r15, r17
    1870:	68 01       	movw	r12, r16
    1872:	10 e0       	ldi	r17, 0x00	; 0
    1874:	f6 01       	movw	r30, r12
    1876:	61 91       	ld	r22, Z+
    1878:	6f 01       	movw	r12, r30
    187a:	20 e0       	ldi	r18, 0x00	; 0
    187c:	41 2f       	mov	r20, r17
    187e:	83 e8       	ldi	r24, 0x83	; 131
    1880:	93 e0       	ldi	r25, 0x03	; 3
    1882:	86 d9       	rcall	.-3316   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1884:	1a 5f       	subi	r17, 0xFA	; 250
    1886:	1a 35       	cpi	r17, 0x5A	; 90
    1888:	a9 f7       	brne	.-22     	; 0x1874 <_Z11menue_hauptv+0x46>
    188a:	81 e1       	ldi	r24, 0x11	; 17
    188c:	e6 e4       	ldi	r30, 0x46	; 70
    188e:	f1 e0       	ldi	r31, 0x01	; 1
    1890:	de 01       	movw	r26, r28
    1892:	11 96       	adiw	r26, 0x01	; 1
    1894:	01 90       	ld	r0, Z+
    1896:	0d 92       	st	X+, r0
    1898:	8a 95       	dec	r24
    189a:	e1 f7       	brne	.-8      	; 0x1894 <_Z11menue_hauptv+0x66>
    189c:	ce 2c       	mov	r12, r14
    189e:	df 2c       	mov	r13, r15
    18a0:	10 e0       	ldi	r17, 0x00	; 0
    18a2:	f6 01       	movw	r30, r12
    18a4:	61 91       	ld	r22, Z+
    18a6:	6f 01       	movw	r12, r30
    18a8:	28 e0       	ldi	r18, 0x08	; 8
    18aa:	41 2f       	mov	r20, r17
    18ac:	83 e8       	ldi	r24, 0x83	; 131
    18ae:	93 e0       	ldi	r25, 0x03	; 3
    18b0:	6f d9       	rcall	.-3362   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    18b2:	1a 5f       	subi	r17, 0xFA	; 250
    18b4:	10 36       	cpi	r17, 0x60	; 96
    18b6:	a9 f7       	brne	.-22     	; 0x18a2 <_Z11menue_hauptv+0x74>
    18b8:	8a e0       	ldi	r24, 0x0A	; 10
    18ba:	e7 e5       	ldi	r30, 0x57	; 87
    18bc:	f1 e0       	ldi	r31, 0x01	; 1
    18be:	de 01       	movw	r26, r28
    18c0:	11 96       	adiw	r26, 0x01	; 1
    18c2:	01 90       	ld	r0, Z+
    18c4:	0d 92       	st	X+, r0
    18c6:	8a 95       	dec	r24
    18c8:	e1 f7       	brne	.-8      	; 0x18c2 <_Z11menue_hauptv+0x94>
    18ca:	ce 2c       	mov	r12, r14
    18cc:	df 2c       	mov	r13, r15
    18ce:	10 e0       	ldi	r17, 0x00	; 0
    18d0:	f6 01       	movw	r30, r12
    18d2:	61 91       	ld	r22, Z+
    18d4:	6f 01       	movw	r12, r30
    18d6:	20 e1       	ldi	r18, 0x10	; 16
    18d8:	41 2f       	mov	r20, r17
    18da:	83 e8       	ldi	r24, 0x83	; 131
    18dc:	93 e0       	ldi	r25, 0x03	; 3
    18de:	58 d9       	rcall	.-3408   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    18e0:	1a 5f       	subi	r17, 0xFA	; 250
    18e2:	16 33       	cpi	r17, 0x36	; 54
    18e4:	a9 f7       	brne	.-22     	; 0x18d0 <_Z11menue_hauptv+0xa2>
    18e6:	8b e0       	ldi	r24, 0x0B	; 11
    18e8:	e1 e6       	ldi	r30, 0x61	; 97
    18ea:	f1 e0       	ldi	r31, 0x01	; 1
    18ec:	de 01       	movw	r26, r28
    18ee:	11 96       	adiw	r26, 0x01	; 1
    18f0:	01 90       	ld	r0, Z+
    18f2:	0d 92       	st	X+, r0
    18f4:	8a 95       	dec	r24
    18f6:	e1 f7       	brne	.-8      	; 0x18f0 <_Z11menue_hauptv+0xc2>
    18f8:	ce 2c       	mov	r12, r14
    18fa:	df 2c       	mov	r13, r15
    18fc:	10 e0       	ldi	r17, 0x00	; 0
    18fe:	f6 01       	movw	r30, r12
    1900:	61 91       	ld	r22, Z+
    1902:	6f 01       	movw	r12, r30
    1904:	28 e1       	ldi	r18, 0x18	; 24
    1906:	41 2f       	mov	r20, r17
    1908:	83 e8       	ldi	r24, 0x83	; 131
    190a:	93 e0       	ldi	r25, 0x03	; 3
    190c:	41 d9       	rcall	.-3454   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    190e:	1a 5f       	subi	r17, 0xFA	; 250
    1910:	1c 33       	cpi	r17, 0x3C	; 60
    1912:	a9 f7       	brne	.-22     	; 0x18fe <_Z11menue_hauptv+0xd0>
    1914:	80 e1       	ldi	r24, 0x10	; 16
    1916:	ec e6       	ldi	r30, 0x6C	; 108
    1918:	f1 e0       	ldi	r31, 0x01	; 1
    191a:	de 01       	movw	r26, r28
    191c:	11 96       	adiw	r26, 0x01	; 1
    191e:	01 90       	ld	r0, Z+
    1920:	0d 92       	st	X+, r0
    1922:	8a 95       	dec	r24
    1924:	e1 f7       	brne	.-8      	; 0x191e <_Z11menue_hauptv+0xf0>
    1926:	ce 2c       	mov	r12, r14
    1928:	df 2c       	mov	r13, r15
    192a:	10 e0       	ldi	r17, 0x00	; 0
    192c:	f6 01       	movw	r30, r12
    192e:	61 91       	ld	r22, Z+
    1930:	6f 01       	movw	r12, r30
    1932:	20 e2       	ldi	r18, 0x20	; 32
    1934:	41 2f       	mov	r20, r17
    1936:	83 e8       	ldi	r24, 0x83	; 131
    1938:	93 e0       	ldi	r25, 0x03	; 3
    193a:	2a d9       	rcall	.-3500   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    193c:	1a 5f       	subi	r17, 0xFA	; 250
    193e:	1a 35       	cpi	r17, 0x5A	; 90
    1940:	a9 f7       	brne	.-22     	; 0x192c <_Z11menue_hauptv+0xfe>
    1942:	8e e0       	ldi	r24, 0x0E	; 14
    1944:	ec e7       	ldi	r30, 0x7C	; 124
    1946:	f1 e0       	ldi	r31, 0x01	; 1
    1948:	de 01       	movw	r26, r28
    194a:	11 96       	adiw	r26, 0x01	; 1
    194c:	01 90       	ld	r0, Z+
    194e:	0d 92       	st	X+, r0
    1950:	8a 95       	dec	r24
    1952:	e1 f7       	brne	.-8      	; 0x194c <_Z11menue_hauptv+0x11e>
    1954:	ce 2c       	mov	r12, r14
    1956:	df 2c       	mov	r13, r15
    1958:	10 e0       	ldi	r17, 0x00	; 0
    195a:	f6 01       	movw	r30, r12
    195c:	61 91       	ld	r22, Z+
    195e:	6f 01       	movw	r12, r30
    1960:	28 e2       	ldi	r18, 0x28	; 40
    1962:	41 2f       	mov	r20, r17
    1964:	83 e8       	ldi	r24, 0x83	; 131
    1966:	93 e0       	ldi	r25, 0x03	; 3
    1968:	13 d9       	rcall	.-3546   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    196a:	1a 5f       	subi	r17, 0xFA	; 250
    196c:	1e 34       	cpi	r17, 0x4E	; 78
    196e:	a9 f7       	brne	.-22     	; 0x195a <_Z11menue_hauptv+0x12c>
    1970:	8e e0       	ldi	r24, 0x0E	; 14
    1972:	ea e8       	ldi	r30, 0x8A	; 138
    1974:	f1 e0       	ldi	r31, 0x01	; 1
    1976:	de 01       	movw	r26, r28
    1978:	11 96       	adiw	r26, 0x01	; 1
    197a:	01 90       	ld	r0, Z+
    197c:	0d 92       	st	X+, r0
    197e:	8a 95       	dec	r24
    1980:	e1 f7       	brne	.-8      	; 0x197a <_Z11menue_hauptv+0x14c>
    1982:	ce 2c       	mov	r12, r14
    1984:	df 2c       	mov	r13, r15
    1986:	10 e0       	ldi	r17, 0x00	; 0
    1988:	f6 01       	movw	r30, r12
    198a:	61 91       	ld	r22, Z+
    198c:	6f 01       	movw	r12, r30
    198e:	20 e3       	ldi	r18, 0x30	; 48
    1990:	41 2f       	mov	r20, r17
    1992:	83 e8       	ldi	r24, 0x83	; 131
    1994:	93 e0       	ldi	r25, 0x03	; 3
    1996:	fc d8       	rcall	.-3592   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1998:	1a 5f       	subi	r17, 0xFA	; 250
    199a:	1e 34       	cpi	r17, 0x4E	; 78
    199c:	a9 f7       	brne	.-22     	; 0x1988 <_Z11menue_hauptv+0x15a>
    199e:	64 96       	adiw	r28, 0x14	; 20
    19a0:	0f b6       	in	r0, 0x3f	; 63
    19a2:	f8 94       	cli
    19a4:	de bf       	out	0x3e, r29	; 62
    19a6:	0f be       	out	0x3f, r0	; 63
    19a8:	cd bf       	out	0x3d, r28	; 61
    19aa:	df 91       	pop	r29
    19ac:	cf 91       	pop	r28
    19ae:	1f 91       	pop	r17
    19b0:	0f 91       	pop	r16
    19b2:	ff 90       	pop	r15
    19b4:	ef 90       	pop	r14
    19b6:	df 90       	pop	r13
    19b8:	cf 90       	pop	r12
    19ba:	08 95       	ret

000019bc <_Z11menue_einstv>:
    19bc:	af 92       	push	r10
    19be:	bf 92       	push	r11
    19c0:	df 92       	push	r13
    19c2:	ef 92       	push	r14
    19c4:	0f 93       	push	r16
    19c6:	1f 93       	push	r17
    19c8:	cf 93       	push	r28
    19ca:	df 93       	push	r29
    19cc:	cd b7       	in	r28, 0x3d	; 61
    19ce:	de b7       	in	r29, 0x3e	; 62
    19d0:	64 97       	sbiw	r28, 0x14	; 20
    19d2:	0f b6       	in	r0, 0x3f	; 63
    19d4:	f8 94       	cli
    19d6:	de bf       	out	0x3e, r29	; 62
    19d8:	0f be       	out	0x3f, r0	; 63
    19da:	cd bf       	out	0x3d, r28	; 61
    19dc:	83 e8       	ldi	r24, 0x83	; 131
    19de:	93 e0       	ldi	r25, 0x03	; 3
    19e0:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    19e4:	81 e1       	ldi	r24, 0x11	; 17
    19e6:	e8 e9       	ldi	r30, 0x98	; 152
    19e8:	f1 e0       	ldi	r31, 0x01	; 1
    19ea:	8e 01       	movw	r16, r28
    19ec:	0f 5f       	subi	r16, 0xFF	; 255
    19ee:	1f 4f       	sbci	r17, 0xFF	; 255
    19f0:	d8 01       	movw	r26, r16
    19f2:	01 90       	ld	r0, Z+
    19f4:	0d 92       	st	X+, r0
    19f6:	8a 95       	dec	r24
    19f8:	e1 f7       	brne	.-8      	; 0x19f2 <_Z11menue_einstv+0x36>
    19fa:	d0 2e       	mov	r13, r16
    19fc:	e1 2e       	mov	r14, r17
    19fe:	58 01       	movw	r10, r16
    1a00:	10 e0       	ldi	r17, 0x00	; 0
    1a02:	f5 01       	movw	r30, r10
    1a04:	61 91       	ld	r22, Z+
    1a06:	5f 01       	movw	r10, r30
    1a08:	20 e0       	ldi	r18, 0x00	; 0
    1a0a:	41 2f       	mov	r20, r17
    1a0c:	83 e8       	ldi	r24, 0x83	; 131
    1a0e:	93 e0       	ldi	r25, 0x03	; 3
    1a10:	bf d8       	rcall	.-3714   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1a12:	1a 5f       	subi	r17, 0xFA	; 250
    1a14:	10 36       	cpi	r17, 0x60	; 96
    1a16:	a9 f7       	brne	.-22     	; 0x1a02 <_Z11menue_einstv+0x46>
    1a18:	86 e1       	ldi	r24, 0x16	; 22
    1a1a:	e9 ea       	ldi	r30, 0xA9	; 169
    1a1c:	f1 e0       	ldi	r31, 0x01	; 1
    1a1e:	de 01       	movw	r26, r28
    1a20:	11 96       	adiw	r26, 0x01	; 1
    1a22:	01 90       	ld	r0, Z+
    1a24:	0d 92       	st	X+, r0
    1a26:	8a 95       	dec	r24
    1a28:	e1 f7       	brne	.-8      	; 0x1a22 <_Z11menue_einstv+0x66>
    1a2a:	ad 2c       	mov	r10, r13
    1a2c:	be 2c       	mov	r11, r14
    1a2e:	10 e0       	ldi	r17, 0x00	; 0
    1a30:	f5 01       	movw	r30, r10
    1a32:	61 91       	ld	r22, Z+
    1a34:	5f 01       	movw	r10, r30
    1a36:	28 e0       	ldi	r18, 0x08	; 8
    1a38:	41 2f       	mov	r20, r17
    1a3a:	83 e8       	ldi	r24, 0x83	; 131
    1a3c:	93 e0       	ldi	r25, 0x03	; 3
    1a3e:	a8 d8       	rcall	.-3760   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1a40:	1a 5f       	subi	r17, 0xFA	; 250
    1a42:	1e 37       	cpi	r17, 0x7E	; 126
    1a44:	a9 f7       	brne	.-22     	; 0x1a30 <_Z11menue_einstv+0x74>
    1a46:	81 e1       	ldi	r24, 0x11	; 17
    1a48:	ef eb       	ldi	r30, 0xBF	; 191
    1a4a:	f1 e0       	ldi	r31, 0x01	; 1
    1a4c:	de 01       	movw	r26, r28
    1a4e:	11 96       	adiw	r26, 0x01	; 1
    1a50:	01 90       	ld	r0, Z+
    1a52:	0d 92       	st	X+, r0
    1a54:	8a 95       	dec	r24
    1a56:	e1 f7       	brne	.-8      	; 0x1a50 <_Z11menue_einstv+0x94>
    1a58:	ad 2c       	mov	r10, r13
    1a5a:	be 2c       	mov	r11, r14
    1a5c:	10 e0       	ldi	r17, 0x00	; 0
    1a5e:	f5 01       	movw	r30, r10
    1a60:	61 91       	ld	r22, Z+
    1a62:	5f 01       	movw	r10, r30
    1a64:	20 e1       	ldi	r18, 0x10	; 16
    1a66:	41 2f       	mov	r20, r17
    1a68:	83 e8       	ldi	r24, 0x83	; 131
    1a6a:	93 e0       	ldi	r25, 0x03	; 3
    1a6c:	91 d8       	rcall	.-3806   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1a6e:	1a 5f       	subi	r17, 0xFA	; 250
    1a70:	10 36       	cpi	r17, 0x60	; 96
    1a72:	a9 f7       	brne	.-22     	; 0x1a5e <_Z11menue_einstv+0xa2>
    1a74:	83 e1       	ldi	r24, 0x13	; 19
    1a76:	e0 ed       	ldi	r30, 0xD0	; 208
    1a78:	f1 e0       	ldi	r31, 0x01	; 1
    1a7a:	de 01       	movw	r26, r28
    1a7c:	11 96       	adiw	r26, 0x01	; 1
    1a7e:	01 90       	ld	r0, Z+
    1a80:	0d 92       	st	X+, r0
    1a82:	8a 95       	dec	r24
    1a84:	e1 f7       	brne	.-8      	; 0x1a7e <_Z11menue_einstv+0xc2>
    1a86:	ad 2c       	mov	r10, r13
    1a88:	be 2c       	mov	r11, r14
    1a8a:	10 e0       	ldi	r17, 0x00	; 0
    1a8c:	f5 01       	movw	r30, r10
    1a8e:	61 91       	ld	r22, Z+
    1a90:	5f 01       	movw	r10, r30
    1a92:	28 e1       	ldi	r18, 0x18	; 24
    1a94:	41 2f       	mov	r20, r17
    1a96:	83 e8       	ldi	r24, 0x83	; 131
    1a98:	93 e0       	ldi	r25, 0x03	; 3
    1a9a:	7a d8       	rcall	.-3852   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1a9c:	1a 5f       	subi	r17, 0xFA	; 250
    1a9e:	1c 36       	cpi	r17, 0x6C	; 108
    1aa0:	a9 f7       	brne	.-22     	; 0x1a8c <_Z11menue_einstv+0xd0>
    1aa2:	64 96       	adiw	r28, 0x14	; 20
    1aa4:	0f b6       	in	r0, 0x3f	; 63
    1aa6:	f8 94       	cli
    1aa8:	de bf       	out	0x3e, r29	; 62
    1aaa:	0f be       	out	0x3f, r0	; 63
    1aac:	cd bf       	out	0x3d, r28	; 61
    1aae:	df 91       	pop	r29
    1ab0:	cf 91       	pop	r28
    1ab2:	1f 91       	pop	r17
    1ab4:	0f 91       	pop	r16
    1ab6:	ef 90       	pop	r14
    1ab8:	df 90       	pop	r13
    1aba:	bf 90       	pop	r11
    1abc:	af 90       	pop	r10
    1abe:	08 95       	ret

00001ac0 <_Z9menue_uhrv>:
    1ac0:	cf 92       	push	r12
    1ac2:	df 92       	push	r13
    1ac4:	ef 92       	push	r14
    1ac6:	ff 92       	push	r15
    1ac8:	0f 93       	push	r16
    1aca:	1f 93       	push	r17
    1acc:	cf 93       	push	r28
    1ace:	df 93       	push	r29
    1ad0:	cd b7       	in	r28, 0x3d	; 61
    1ad2:	de b7       	in	r29, 0x3e	; 62
    1ad4:	64 97       	sbiw	r28, 0x14	; 20
    1ad6:	0f b6       	in	r0, 0x3f	; 63
    1ad8:	f8 94       	cli
    1ada:	de bf       	out	0x3e, r29	; 62
    1adc:	0f be       	out	0x3f, r0	; 63
    1ade:	cd bf       	out	0x3d, r28	; 61
    1ae0:	83 e8       	ldi	r24, 0x83	; 131
    1ae2:	93 e0       	ldi	r25, 0x03	; 3
    1ae4:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1ae8:	86 e0       	ldi	r24, 0x06	; 6
    1aea:	e3 ee       	ldi	r30, 0xE3	; 227
    1aec:	f1 e0       	ldi	r31, 0x01	; 1
    1aee:	8e 01       	movw	r16, r28
    1af0:	0f 5f       	subi	r16, 0xFF	; 255
    1af2:	1f 4f       	sbci	r17, 0xFF	; 255
    1af4:	d8 01       	movw	r26, r16
    1af6:	01 90       	ld	r0, Z+
    1af8:	0d 92       	st	X+, r0
    1afa:	8a 95       	dec	r24
    1afc:	e1 f7       	brne	.-8      	; 0x1af6 <_Z9menue_uhrv+0x36>
    1afe:	e0 2e       	mov	r14, r16
    1b00:	f1 2e       	mov	r15, r17
    1b02:	68 01       	movw	r12, r16
    1b04:	10 e0       	ldi	r17, 0x00	; 0
    1b06:	f6 01       	movw	r30, r12
    1b08:	61 91       	ld	r22, Z+
    1b0a:	6f 01       	movw	r12, r30
    1b0c:	20 e0       	ldi	r18, 0x00	; 0
    1b0e:	41 2f       	mov	r20, r17
    1b10:	83 e8       	ldi	r24, 0x83	; 131
    1b12:	93 e0       	ldi	r25, 0x03	; 3
    1b14:	3d d8       	rcall	.-3974   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1b16:	1a 5f       	subi	r17, 0xFA	; 250
    1b18:	1e 31       	cpi	r17, 0x1E	; 30
    1b1a:	a9 f7       	brne	.-22     	; 0x1b06 <_Z9menue_uhrv+0x46>
    1b1c:	8b e0       	ldi	r24, 0x0B	; 11
    1b1e:	e9 ee       	ldi	r30, 0xE9	; 233
    1b20:	f1 e0       	ldi	r31, 0x01	; 1
    1b22:	de 01       	movw	r26, r28
    1b24:	11 96       	adiw	r26, 0x01	; 1
    1b26:	01 90       	ld	r0, Z+
    1b28:	0d 92       	st	X+, r0
    1b2a:	8a 95       	dec	r24
    1b2c:	e1 f7       	brne	.-8      	; 0x1b26 <_Z9menue_uhrv+0x66>
    1b2e:	ce 2c       	mov	r12, r14
    1b30:	df 2c       	mov	r13, r15
    1b32:	10 e0       	ldi	r17, 0x00	; 0
    1b34:	f6 01       	movw	r30, r12
    1b36:	61 91       	ld	r22, Z+
    1b38:	6f 01       	movw	r12, r30
    1b3a:	28 e0       	ldi	r18, 0x08	; 8
    1b3c:	41 2f       	mov	r20, r17
    1b3e:	83 e8       	ldi	r24, 0x83	; 131
    1b40:	93 e0       	ldi	r25, 0x03	; 3
    1b42:	26 d8       	rcall	.-4020   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1b44:	1a 5f       	subi	r17, 0xFA	; 250
    1b46:	1c 33       	cpi	r17, 0x3C	; 60
    1b48:	a9 f7       	brne	.-22     	; 0x1b34 <_Z9menue_uhrv+0x74>
    1b4a:	88 e0       	ldi	r24, 0x08	; 8
    1b4c:	e4 ef       	ldi	r30, 0xF4	; 244
    1b4e:	f1 e0       	ldi	r31, 0x01	; 1
    1b50:	de 01       	movw	r26, r28
    1b52:	11 96       	adiw	r26, 0x01	; 1
    1b54:	01 90       	ld	r0, Z+
    1b56:	0d 92       	st	X+, r0
    1b58:	8a 95       	dec	r24
    1b5a:	e1 f7       	brne	.-8      	; 0x1b54 <_Z9menue_uhrv+0x94>
    1b5c:	ce 2c       	mov	r12, r14
    1b5e:	df 2c       	mov	r13, r15
    1b60:	10 e0       	ldi	r17, 0x00	; 0
    1b62:	f6 01       	movw	r30, r12
    1b64:	61 91       	ld	r22, Z+
    1b66:	6f 01       	movw	r12, r30
    1b68:	20 e1       	ldi	r18, 0x10	; 16
    1b6a:	41 2f       	mov	r20, r17
    1b6c:	83 e8       	ldi	r24, 0x83	; 131
    1b6e:	93 e0       	ldi	r25, 0x03	; 3
    1b70:	0f d8       	rcall	.-4066   	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1b72:	1a 5f       	subi	r17, 0xFA	; 250
    1b74:	1a 32       	cpi	r17, 0x2A	; 42
    1b76:	a9 f7       	brne	.-22     	; 0x1b62 <_Z9menue_uhrv+0xa2>
    1b78:	88 e0       	ldi	r24, 0x08	; 8
    1b7a:	ec ef       	ldi	r30, 0xFC	; 252
    1b7c:	f1 e0       	ldi	r31, 0x01	; 1
    1b7e:	de 01       	movw	r26, r28
    1b80:	11 96       	adiw	r26, 0x01	; 1
    1b82:	01 90       	ld	r0, Z+
    1b84:	0d 92       	st	X+, r0
    1b86:	8a 95       	dec	r24
    1b88:	e1 f7       	brne	.-8      	; 0x1b82 <_Z9menue_uhrv+0xc2>
    1b8a:	ce 2c       	mov	r12, r14
    1b8c:	df 2c       	mov	r13, r15
    1b8e:	10 e0       	ldi	r17, 0x00	; 0
    1b90:	f6 01       	movw	r30, r12
    1b92:	61 91       	ld	r22, Z+
    1b94:	6f 01       	movw	r12, r30
    1b96:	28 e1       	ldi	r18, 0x18	; 24
    1b98:	41 2f       	mov	r20, r17
    1b9a:	83 e8       	ldi	r24, 0x83	; 131
    1b9c:	93 e0       	ldi	r25, 0x03	; 3
    1b9e:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1ba2:	1a 5f       	subi	r17, 0xFA	; 250
    1ba4:	1a 32       	cpi	r17, 0x2A	; 42
    1ba6:	a1 f7       	brne	.-24     	; 0x1b90 <_Z9menue_uhrv+0xd0>
    1ba8:	8c e0       	ldi	r24, 0x0C	; 12
    1baa:	e4 e0       	ldi	r30, 0x04	; 4
    1bac:	f2 e0       	ldi	r31, 0x02	; 2
    1bae:	de 01       	movw	r26, r28
    1bb0:	11 96       	adiw	r26, 0x01	; 1
    1bb2:	01 90       	ld	r0, Z+
    1bb4:	0d 92       	st	X+, r0
    1bb6:	8a 95       	dec	r24
    1bb8:	e1 f7       	brne	.-8      	; 0x1bb2 <_Z9menue_uhrv+0xf2>
    1bba:	ce 2c       	mov	r12, r14
    1bbc:	df 2c       	mov	r13, r15
    1bbe:	10 e0       	ldi	r17, 0x00	; 0
    1bc0:	f6 01       	movw	r30, r12
    1bc2:	61 91       	ld	r22, Z+
    1bc4:	6f 01       	movw	r12, r30
    1bc6:	20 e2       	ldi	r18, 0x20	; 32
    1bc8:	41 2f       	mov	r20, r17
    1bca:	83 e8       	ldi	r24, 0x83	; 131
    1bcc:	93 e0       	ldi	r25, 0x03	; 3
    1bce:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1bd2:	1a 5f       	subi	r17, 0xFA	; 250
    1bd4:	12 34       	cpi	r17, 0x42	; 66
    1bd6:	a1 f7       	brne	.-24     	; 0x1bc0 <_Z9menue_uhrv+0x100>
    1bd8:	89 e0       	ldi	r24, 0x09	; 9
    1bda:	e0 e1       	ldi	r30, 0x10	; 16
    1bdc:	f2 e0       	ldi	r31, 0x02	; 2
    1bde:	de 01       	movw	r26, r28
    1be0:	11 96       	adiw	r26, 0x01	; 1
    1be2:	01 90       	ld	r0, Z+
    1be4:	0d 92       	st	X+, r0
    1be6:	8a 95       	dec	r24
    1be8:	e1 f7       	brne	.-8      	; 0x1be2 <_Z9menue_uhrv+0x122>
    1bea:	ce 2c       	mov	r12, r14
    1bec:	df 2c       	mov	r13, r15
    1bee:	10 e0       	ldi	r17, 0x00	; 0
    1bf0:	f6 01       	movw	r30, r12
    1bf2:	61 91       	ld	r22, Z+
    1bf4:	6f 01       	movw	r12, r30
    1bf6:	28 e2       	ldi	r18, 0x28	; 40
    1bf8:	41 2f       	mov	r20, r17
    1bfa:	83 e8       	ldi	r24, 0x83	; 131
    1bfc:	93 e0       	ldi	r25, 0x03	; 3
    1bfe:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1c02:	1a 5f       	subi	r17, 0xFA	; 250
    1c04:	10 33       	cpi	r17, 0x30	; 48
    1c06:	a1 f7       	brne	.-24     	; 0x1bf0 <_Z9menue_uhrv+0x130>
    1c08:	64 96       	adiw	r28, 0x14	; 20
    1c0a:	0f b6       	in	r0, 0x3f	; 63
    1c0c:	f8 94       	cli
    1c0e:	de bf       	out	0x3e, r29	; 62
    1c10:	0f be       	out	0x3f, r0	; 63
    1c12:	cd bf       	out	0x3d, r28	; 61
    1c14:	df 91       	pop	r29
    1c16:	cf 91       	pop	r28
    1c18:	1f 91       	pop	r17
    1c1a:	0f 91       	pop	r16
    1c1c:	ff 90       	pop	r15
    1c1e:	ef 90       	pop	r14
    1c20:	df 90       	pop	r13
    1c22:	cf 90       	pop	r12
    1c24:	08 95       	ret

00001c26 <_Z11uhranzeigenv>:
    1c26:	df 92       	push	r13
    1c28:	ef 92       	push	r14
    1c2a:	ff 92       	push	r15
    1c2c:	0f 93       	push	r16
    1c2e:	1f 93       	push	r17
    1c30:	cf 93       	push	r28
    1c32:	df 93       	push	r29
    1c34:	cd b7       	in	r28, 0x3d	; 61
    1c36:	de b7       	in	r29, 0x3e	; 62
    1c38:	64 97       	sbiw	r28, 0x14	; 20
    1c3a:	0f b6       	in	r0, 0x3f	; 63
    1c3c:	f8 94       	cli
    1c3e:	de bf       	out	0x3e, r29	; 62
    1c40:	0f be       	out	0x3f, r0	; 63
    1c42:	cd bf       	out	0x3d, r28	; 61
    1c44:	8c e6       	ldi	r24, 0x6C	; 108
    1c46:	93 e0       	ldi	r25, 0x03	; 3
    1c48:	0e 94 41 29 	call	0x5282	; 0x5282 <_ZN8Pressure16READ_TemperatureEv>
    1c4c:	83 e8       	ldi	r24, 0x83	; 131
    1c4e:	93 e0       	ldi	r25, 0x03	; 3
    1c50:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1c54:	01 e0       	ldi	r16, 0x01	; 1
    1c56:	20 91 96 07 	lds	r18, 0x0796
    1c5a:	40 91 95 07 	lds	r20, 0x0795
    1c5e:	60 91 94 07 	lds	r22, 0x0794
    1c62:	83 e8       	ldi	r24, 0x83	; 131
    1c64:	93 e0       	ldi	r25, 0x03	; 3
    1c66:	58 d8       	rcall	.-3920   	; 0xd18 <_ZN7Display6analogEhhhh>
    1c68:	0f 2e       	mov	r0, r31
    1c6a:	f4 e8       	ldi	r31, 0x84	; 132
    1c6c:	ef 2e       	mov	r14, r31
    1c6e:	f7 e0       	ldi	r31, 0x07	; 7
    1c70:	ff 2e       	mov	r15, r31
    1c72:	f0 2d       	mov	r31, r0
    1c74:	11 e4       	ldi	r17, 0x41	; 65
    1c76:	f7 01       	movw	r30, r14
    1c78:	61 91       	ld	r22, Z+
    1c7a:	7f 01       	movw	r14, r30
    1c7c:	20 e0       	ldi	r18, 0x00	; 0
    1c7e:	41 2f       	mov	r20, r17
    1c80:	83 e8       	ldi	r24, 0x83	; 131
    1c82:	93 e0       	ldi	r25, 0x03	; 3
    1c84:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1c88:	1a 5f       	subi	r17, 0xFA	; 250
    1c8a:	11 37       	cpi	r17, 0x71	; 113
    1c8c:	a1 f7       	brne	.-24     	; 0x1c76 <_Z11uhranzeigenv+0x50>
    1c8e:	0f 2e       	mov	r0, r31
    1c90:	fc e8       	ldi	r31, 0x8C	; 140
    1c92:	ef 2e       	mov	r14, r31
    1c94:	f7 e0       	ldi	r31, 0x07	; 7
    1c96:	ff 2e       	mov	r15, r31
    1c98:	f0 2d       	mov	r31, r0
    1c9a:	11 e4       	ldi	r17, 0x41	; 65
    1c9c:	f7 01       	movw	r30, r14
    1c9e:	61 91       	ld	r22, Z+
    1ca0:	7f 01       	movw	r14, r30
    1ca2:	28 e3       	ldi	r18, 0x38	; 56
    1ca4:	41 2f       	mov	r20, r17
    1ca6:	83 e8       	ldi	r24, 0x83	; 131
    1ca8:	93 e0       	ldi	r25, 0x03	; 3
    1caa:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1cae:	1a 5f       	subi	r17, 0xFA	; 250
    1cb0:	11 37       	cpi	r17, 0x71	; 113
    1cb2:	a1 f7       	brne	.-24     	; 0x1c9c <_Z11uhranzeigenv+0x76>
    1cb4:	be da       	rcall	.-2692   	; 0x1232 <_Z14Batteriestatusv>
    1cb6:	28 2f       	mov	r18, r24
    1cb8:	33 27       	eor	r19, r19
    1cba:	27 fd       	sbrc	r18, 7
    1cbc:	30 95       	com	r19
    1cbe:	3f 93       	push	r19
    1cc0:	8f 93       	push	r24
    1cc2:	81 e3       	ldi	r24, 0x31	; 49
    1cc4:	91 e0       	ldi	r25, 0x01	; 1
    1cc6:	9f 93       	push	r25
    1cc8:	8f 93       	push	r24
    1cca:	ce 01       	movw	r24, r28
    1ccc:	01 96       	adiw	r24, 0x01	; 1
    1cce:	9f 93       	push	r25
    1cd0:	8f 93       	push	r24
    1cd2:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    1cd6:	0f 90       	pop	r0
    1cd8:	0f 90       	pop	r0
    1cda:	0f 90       	pop	r0
    1cdc:	0f 90       	pop	r0
    1cde:	0f 90       	pop	r0
    1ce0:	0f 90       	pop	r0
    1ce2:	88 23       	and	r24, r24
    1ce4:	59 f1       	breq	.+86     	; 0x1d3c <_Z11uhranzeigenv+0x116>
    1ce6:	8e 01       	movw	r16, r28
    1ce8:	0f 5f       	subi	r16, 0xFF	; 255
    1cea:	1f 4f       	sbci	r17, 0xFF	; 255
    1cec:	81 50       	subi	r24, 0x01	; 1
    1cee:	68 94       	set
    1cf0:	ee 24       	eor	r14, r14
    1cf2:	e1 f8       	bld	r14, 1
    1cf4:	f1 2c       	mov	r15, r1
    1cf6:	ec 0e       	add	r14, r28
    1cf8:	fd 1e       	adc	r15, r29
    1cfa:	e8 0e       	add	r14, r24
    1cfc:	f1 1c       	adc	r15, r1
    1cfe:	0f 2e       	mov	r0, r31
    1d00:	f9 e4       	ldi	r31, 0x49	; 73
    1d02:	df 2e       	mov	r13, r31
    1d04:	f0 2d       	mov	r31, r0
    1d06:	f8 01       	movw	r30, r16
    1d08:	61 91       	ld	r22, Z+
    1d0a:	8f 01       	movw	r16, r30
    1d0c:	86 2f       	mov	r24, r22
    1d0e:	87 7f       	andi	r24, 0xF7	; 247
    1d10:	85 32       	cpi	r24, 0x25	; 37
    1d12:	39 f4       	brne	.+14     	; 0x1d22 <_Z11uhranzeigenv+0xfc>
    1d14:	28 e1       	ldi	r18, 0x18	; 24
    1d16:	4d 2d       	mov	r20, r13
    1d18:	83 e8       	ldi	r24, 0x83	; 131
    1d1a:	93 e0       	ldi	r25, 0x03	; 3
    1d1c:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1d20:	08 c0       	rjmp	.+16     	; 0x1d32 <_Z11uhranzeigenv+0x10c>
    1d22:	60 53       	subi	r22, 0x30	; 48
    1d24:	24 e1       	ldi	r18, 0x14	; 20
    1d26:	4d ef       	ldi	r20, 0xFD	; 253
    1d28:	4d 0d       	add	r20, r13
    1d2a:	83 e8       	ldi	r24, 0x83	; 131
    1d2c:	93 e0       	ldi	r25, 0x03	; 3
    1d2e:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1d32:	f0 e1       	ldi	r31, 0x10	; 16
    1d34:	df 0e       	add	r13, r31
    1d36:	0e 15       	cp	r16, r14
    1d38:	1f 05       	cpc	r17, r15
    1d3a:	29 f7       	brne	.-54     	; 0x1d06 <_Z11uhranzeigenv+0xe0>
    1d3c:	e0 e7       	ldi	r30, 0x70	; 112
    1d3e:	f3 e0       	ldi	r31, 0x03	; 3
    1d40:	83 81       	ldd	r24, Z+3	; 0x03
    1d42:	8f 93       	push	r24
    1d44:	82 81       	ldd	r24, Z+2	; 0x02
    1d46:	8f 93       	push	r24
    1d48:	81 81       	ldd	r24, Z+1	; 0x01
    1d4a:	8f 93       	push	r24
    1d4c:	80 81       	ld	r24, Z
    1d4e:	8f 93       	push	r24
    1d50:	89 e1       	ldi	r24, 0x19	; 25
    1d52:	92 e0       	ldi	r25, 0x02	; 2
    1d54:	9f 93       	push	r25
    1d56:	8f 93       	push	r24
    1d58:	ce 01       	movw	r24, r28
    1d5a:	01 96       	adiw	r24, 0x01	; 1
    1d5c:	9f 93       	push	r25
    1d5e:	8f 93       	push	r24
    1d60:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    1d64:	0f b6       	in	r0, 0x3f	; 63
    1d66:	f8 94       	cli
    1d68:	de bf       	out	0x3e, r29	; 62
    1d6a:	0f be       	out	0x3f, r0	; 63
    1d6c:	cd bf       	out	0x3d, r28	; 61
    1d6e:	88 23       	and	r24, r24
    1d70:	f1 f0       	breq	.+60     	; 0x1dae <_Z11uhranzeigenv+0x188>
    1d72:	8e 01       	movw	r16, r28
    1d74:	0f 5f       	subi	r16, 0xFF	; 255
    1d76:	1f 4f       	sbci	r17, 0xFF	; 255
    1d78:	81 50       	subi	r24, 0x01	; 1
    1d7a:	68 94       	set
    1d7c:	ee 24       	eor	r14, r14
    1d7e:	e1 f8       	bld	r14, 1
    1d80:	f1 2c       	mov	r15, r1
    1d82:	ec 0e       	add	r14, r28
    1d84:	fd 1e       	adc	r15, r29
    1d86:	e8 0e       	add	r14, r24
    1d88:	f1 1c       	adc	r15, r1
    1d8a:	0f 2e       	mov	r0, r31
    1d8c:	f6 e4       	ldi	r31, 0x46	; 70
    1d8e:	df 2e       	mov	r13, r31
    1d90:	f0 2d       	mov	r31, r0
    1d92:	f8 01       	movw	r30, r16
    1d94:	61 91       	ld	r22, Z+
    1d96:	8f 01       	movw	r16, r30
    1d98:	28 e2       	ldi	r18, 0x28	; 40
    1d9a:	4d 2d       	mov	r20, r13
    1d9c:	83 e8       	ldi	r24, 0x83	; 131
    1d9e:	93 e0       	ldi	r25, 0x03	; 3
    1da0:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1da4:	f6 e0       	ldi	r31, 0x06	; 6
    1da6:	df 0e       	add	r13, r31
    1da8:	0e 15       	cp	r16, r14
    1daa:	1f 05       	cpc	r17, r15
    1dac:	91 f7       	brne	.-28     	; 0x1d92 <_Z11uhranzeigenv+0x16c>
    1dae:	64 96       	adiw	r28, 0x14	; 20
    1db0:	0f b6       	in	r0, 0x3f	; 63
    1db2:	f8 94       	cli
    1db4:	de bf       	out	0x3e, r29	; 62
    1db6:	0f be       	out	0x3f, r0	; 63
    1db8:	cd bf       	out	0x3d, r28	; 61
    1dba:	df 91       	pop	r29
    1dbc:	cf 91       	pop	r28
    1dbe:	1f 91       	pop	r17
    1dc0:	0f 91       	pop	r16
    1dc2:	ff 90       	pop	r15
    1dc4:	ef 90       	pop	r14
    1dc6:	df 90       	pop	r13
    1dc8:	08 95       	ret

00001dca <_Z14uhranzeigenminv>:
    1dca:	0f 93       	push	r16
    1dcc:	1f 93       	push	r17
    1dce:	cf 93       	push	r28
    1dd0:	df 93       	push	r29
    1dd2:	83 e8       	ldi	r24, 0x83	; 131
    1dd4:	93 e0       	ldi	r25, 0x03	; 3
    1dd6:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1dda:	82 e0       	ldi	r24, 0x02	; 2
    1ddc:	36 db       	rcall	.-2452   	; 0x144a <_Z6headerh>
    1dde:	00 e0       	ldi	r16, 0x00	; 0
    1de0:	20 91 96 07 	lds	r18, 0x0796
    1de4:	40 91 95 07 	lds	r20, 0x0795
    1de8:	60 91 94 07 	lds	r22, 0x0794
    1dec:	83 e8       	ldi	r24, 0x83	; 131
    1dee:	93 e0       	ldi	r25, 0x03	; 3
    1df0:	0e 94 8c 06 	call	0xd18	; 0xd18 <_ZN7Display6analogEhhhh>
    1df4:	c4 e8       	ldi	r28, 0x84	; 132
    1df6:	d7 e0       	ldi	r29, 0x07	; 7
    1df8:	11 e4       	ldi	r17, 0x41	; 65
    1dfa:	69 91       	ld	r22, Y+
    1dfc:	20 e0       	ldi	r18, 0x00	; 0
    1dfe:	41 2f       	mov	r20, r17
    1e00:	83 e8       	ldi	r24, 0x83	; 131
    1e02:	93 e0       	ldi	r25, 0x03	; 3
    1e04:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1e08:	1a 5f       	subi	r17, 0xFA	; 250
    1e0a:	1f 35       	cpi	r17, 0x5F	; 95
    1e0c:	b1 f7       	brne	.-20     	; 0x1dfa <_Z14uhranzeigenminv+0x30>
    1e0e:	cc e8       	ldi	r28, 0x8C	; 140
    1e10:	d7 e0       	ldi	r29, 0x07	; 7
    1e12:	11 e4       	ldi	r17, 0x41	; 65
    1e14:	69 91       	ld	r22, Y+
    1e16:	28 e3       	ldi	r18, 0x38	; 56
    1e18:	41 2f       	mov	r20, r17
    1e1a:	83 e8       	ldi	r24, 0x83	; 131
    1e1c:	93 e0       	ldi	r25, 0x03	; 3
    1e1e:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1e22:	1a 5f       	subi	r17, 0xFA	; 250
    1e24:	11 37       	cpi	r17, 0x71	; 113
    1e26:	b1 f7       	brne	.-20     	; 0x1e14 <_Z14uhranzeigenminv+0x4a>
    1e28:	60 91 84 07 	lds	r22, 0x0784
    1e2c:	60 53       	subi	r22, 0x30	; 48
    1e2e:	2d e0       	ldi	r18, 0x0D	; 13
    1e30:	46 e4       	ldi	r20, 0x46	; 70
    1e32:	83 e8       	ldi	r24, 0x83	; 131
    1e34:	93 e0       	ldi	r25, 0x03	; 3
    1e36:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1e3a:	60 91 85 07 	lds	r22, 0x0785
    1e3e:	60 53       	subi	r22, 0x30	; 48
    1e40:	2d e0       	ldi	r18, 0x0D	; 13
    1e42:	46 e5       	ldi	r20, 0x56	; 86
    1e44:	83 e8       	ldi	r24, 0x83	; 131
    1e46:	93 e0       	ldi	r25, 0x03	; 3
    1e48:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1e4c:	60 91 87 07 	lds	r22, 0x0787
    1e50:	60 53       	subi	r22, 0x30	; 48
    1e52:	22 e2       	ldi	r18, 0x22	; 34
    1e54:	46 e4       	ldi	r20, 0x46	; 70
    1e56:	83 e8       	ldi	r24, 0x83	; 131
    1e58:	93 e0       	ldi	r25, 0x03	; 3
    1e5a:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1e5e:	60 91 88 07 	lds	r22, 0x0788
    1e62:	60 53       	subi	r22, 0x30	; 48
    1e64:	22 e2       	ldi	r18, 0x22	; 34
    1e66:	46 e5       	ldi	r20, 0x56	; 86
    1e68:	83 e8       	ldi	r24, 0x83	; 131
    1e6a:	93 e0       	ldi	r25, 0x03	; 3
    1e6c:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1e70:	df 91       	pop	r29
    1e72:	cf 91       	pop	r28
    1e74:	1f 91       	pop	r17
    1e76:	0f 91       	pop	r16
    1e78:	08 95       	ret

00001e7a <_Z13Weckeranzeigev>:
    1e7a:	1f 93       	push	r17
    1e7c:	cf 93       	push	r28
    1e7e:	df 93       	push	r29
    1e80:	83 e8       	ldi	r24, 0x83	; 131
    1e82:	93 e0       	ldi	r25, 0x03	; 3
    1e84:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1e88:	81 e0       	ldi	r24, 0x01	; 1
    1e8a:	c0 db       	rcall	.-2176   	; 0x160c <_Z6bottomh>
    1e8c:	81 e0       	ldi	r24, 0x01	; 1
    1e8e:	dd da       	rcall	.-2630   	; 0x144a <_Z6headerh>
    1e90:	60 91 84 07 	lds	r22, 0x0784
    1e94:	60 53       	subi	r22, 0x30	; 48
    1e96:	2d e0       	ldi	r18, 0x0D	; 13
    1e98:	45 e0       	ldi	r20, 0x05	; 5
    1e9a:	83 e8       	ldi	r24, 0x83	; 131
    1e9c:	93 e0       	ldi	r25, 0x03	; 3
    1e9e:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1ea2:	60 91 85 07 	lds	r22, 0x0785
    1ea6:	60 53       	subi	r22, 0x30	; 48
    1ea8:	2d e0       	ldi	r18, 0x0D	; 13
    1eaa:	45 e1       	ldi	r20, 0x15	; 21
    1eac:	83 e8       	ldi	r24, 0x83	; 131
    1eae:	93 e0       	ldi	r25, 0x03	; 3
    1eb0:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1eb4:	60 91 87 07 	lds	r22, 0x0787
    1eb8:	60 53       	subi	r22, 0x30	; 48
    1eba:	22 e2       	ldi	r18, 0x22	; 34
    1ebc:	45 e0       	ldi	r20, 0x05	; 5
    1ebe:	83 e8       	ldi	r24, 0x83	; 131
    1ec0:	93 e0       	ldi	r25, 0x03	; 3
    1ec2:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1ec6:	60 91 88 07 	lds	r22, 0x0788
    1eca:	60 53       	subi	r22, 0x30	; 48
    1ecc:	22 e2       	ldi	r18, 0x22	; 34
    1ece:	45 e1       	ldi	r20, 0x15	; 21
    1ed0:	83 e8       	ldi	r24, 0x83	; 131
    1ed2:	93 e0       	ldi	r25, 0x03	; 3
    1ed4:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1ed8:	ce e9       	ldi	r28, 0x9E	; 158
    1eda:	d7 e0       	ldi	r29, 0x07	; 7
    1edc:	68 81       	ld	r22, Y
    1ede:	1d ec       	ldi	r17, 0xCD	; 205
    1ee0:	61 9f       	mul	r22, r17
    1ee2:	61 2d       	mov	r22, r1
    1ee4:	11 24       	eor	r1, r1
    1ee6:	66 95       	lsr	r22
    1ee8:	66 95       	lsr	r22
    1eea:	66 95       	lsr	r22
    1eec:	2d e0       	ldi	r18, 0x0D	; 13
    1eee:	46 e4       	ldi	r20, 0x46	; 70
    1ef0:	83 e8       	ldi	r24, 0x83	; 131
    1ef2:	93 e0       	ldi	r25, 0x03	; 3
    1ef4:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1ef8:	68 81       	ld	r22, Y
    1efa:	61 9f       	mul	r22, r17
    1efc:	81 2d       	mov	r24, r1
    1efe:	11 24       	eor	r1, r1
    1f00:	86 95       	lsr	r24
    1f02:	86 95       	lsr	r24
    1f04:	86 95       	lsr	r24
    1f06:	88 0f       	add	r24, r24
    1f08:	98 2f       	mov	r25, r24
    1f0a:	99 0f       	add	r25, r25
    1f0c:	99 0f       	add	r25, r25
    1f0e:	89 0f       	add	r24, r25
    1f10:	68 1b       	sub	r22, r24
    1f12:	2d e0       	ldi	r18, 0x0D	; 13
    1f14:	46 e5       	ldi	r20, 0x56	; 86
    1f16:	83 e8       	ldi	r24, 0x83	; 131
    1f18:	93 e0       	ldi	r25, 0x03	; 3
    1f1a:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1f1e:	cd e9       	ldi	r28, 0x9D	; 157
    1f20:	d7 e0       	ldi	r29, 0x07	; 7
    1f22:	68 81       	ld	r22, Y
    1f24:	61 9f       	mul	r22, r17
    1f26:	61 2d       	mov	r22, r1
    1f28:	11 24       	eor	r1, r1
    1f2a:	66 95       	lsr	r22
    1f2c:	66 95       	lsr	r22
    1f2e:	66 95       	lsr	r22
    1f30:	22 e2       	ldi	r18, 0x22	; 34
    1f32:	46 e4       	ldi	r20, 0x46	; 70
    1f34:	83 e8       	ldi	r24, 0x83	; 131
    1f36:	93 e0       	ldi	r25, 0x03	; 3
    1f38:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1f3c:	68 81       	ld	r22, Y
    1f3e:	61 9f       	mul	r22, r17
    1f40:	11 2d       	mov	r17, r1
    1f42:	11 24       	eor	r1, r1
    1f44:	16 95       	lsr	r17
    1f46:	16 95       	lsr	r17
    1f48:	16 95       	lsr	r17
    1f4a:	11 0f       	add	r17, r17
    1f4c:	81 2f       	mov	r24, r17
    1f4e:	88 0f       	add	r24, r24
    1f50:	88 0f       	add	r24, r24
    1f52:	18 0f       	add	r17, r24
    1f54:	61 1b       	sub	r22, r17
    1f56:	22 e2       	ldi	r18, 0x22	; 34
    1f58:	46 e5       	ldi	r20, 0x56	; 86
    1f5a:	83 e8       	ldi	r24, 0x83	; 131
    1f5c:	93 e0       	ldi	r25, 0x03	; 3
    1f5e:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    1f62:	80 91 9c 07 	lds	r24, 0x079C
    1f66:	83 ff       	sbrs	r24, 3
    1f68:	07 c0       	rjmp	.+14     	; 0x1f78 <_Z13Weckeranzeigev+0xfe>
    1f6a:	20 e0       	ldi	r18, 0x00	; 0
    1f6c:	40 e0       	ldi	r20, 0x00	; 0
    1f6e:	6f e6       	ldi	r22, 0x6F	; 111
    1f70:	83 e8       	ldi	r24, 0x83	; 131
    1f72:	93 e0       	ldi	r25, 0x03	; 3
    1f74:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1f78:	80 91 55 03 	lds	r24, 0x0355
    1f7c:	90 91 56 03 	lds	r25, 0x0356
    1f80:	94 ff       	sbrs	r25, 4
    1f82:	09 c0       	rjmp	.+18     	; 0x1f96 <_Z13Weckeranzeigev+0x11c>
    1f84:	60 91 54 03 	lds	r22, 0x0354
    1f88:	60 5d       	subi	r22, 0xD0	; 208
    1f8a:	20 e0       	ldi	r18, 0x00	; 0
    1f8c:	46 e0       	ldi	r20, 0x06	; 6
    1f8e:	83 e8       	ldi	r24, 0x83	; 131
    1f90:	93 e0       	ldi	r25, 0x03	; 3
    1f92:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    1f96:	df 91       	pop	r29
    1f98:	cf 91       	pop	r28
    1f9a:	1f 91       	pop	r17
    1f9c:	08 95       	ret

00001f9e <_Z12fahradschirmddddm>:
    1f9e:	2f 92       	push	r2
    1fa0:	3f 92       	push	r3
    1fa2:	4f 92       	push	r4
    1fa4:	5f 92       	push	r5
    1fa6:	6f 92       	push	r6
    1fa8:	7f 92       	push	r7
    1faa:	8f 92       	push	r8
    1fac:	9f 92       	push	r9
    1fae:	af 92       	push	r10
    1fb0:	bf 92       	push	r11
    1fb2:	cf 92       	push	r12
    1fb4:	df 92       	push	r13
    1fb6:	ef 92       	push	r14
    1fb8:	ff 92       	push	r15
    1fba:	0f 93       	push	r16
    1fbc:	1f 93       	push	r17
    1fbe:	cf 93       	push	r28
    1fc0:	df 93       	push	r29
    1fc2:	cd b7       	in	r28, 0x3d	; 61
    1fc4:	de b7       	in	r29, 0x3e	; 62
    1fc6:	60 97       	sbiw	r28, 0x10	; 16
    1fc8:	0f b6       	in	r0, 0x3f	; 63
    1fca:	f8 94       	cli
    1fcc:	de bf       	out	0x3e, r29	; 62
    1fce:	0f be       	out	0x3f, r0	; 63
    1fd0:	cd bf       	out	0x3d, r28	; 61
    1fd2:	96 2e       	mov	r9, r22
    1fd4:	27 2e       	mov	r2, r23
    1fd6:	88 2e       	mov	r8, r24
    1fd8:	39 2e       	mov	r3, r25
    1fda:	29 01       	movw	r4, r18
    1fdc:	3a 01       	movw	r6, r20
    1fde:	0b 87       	std	Y+11, r16	; 0x0b
    1fe0:	1c 87       	std	Y+12, r17	; 0x0c
    1fe2:	2d a1       	ldd	r18, Y+37	; 0x25
    1fe4:	2d 87       	std	Y+13, r18	; 0x0d
    1fe6:	3e a1       	ldd	r19, Y+38	; 0x26
    1fe8:	3e 87       	std	Y+14, r19	; 0x0e
    1fea:	8f a1       	ldd	r24, Y+39	; 0x27
    1fec:	8f 87       	std	Y+15, r24	; 0x0f
    1fee:	98 a5       	ldd	r25, Y+40	; 0x28
    1ff0:	98 8b       	std	Y+16, r25	; 0x10
    1ff2:	83 e8       	ldi	r24, 0x83	; 131
    1ff4:	93 e0       	ldi	r25, 0x03	; 3
    1ff6:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1ffa:	81 e0       	ldi	r24, 0x01	; 1
    1ffc:	26 da       	rcall	.-2996   	; 0x144a <_Z6headerh>
    1ffe:	80 e0       	ldi	r24, 0x00	; 0
    2000:	05 db       	rcall	.-2550   	; 0x160c <_Z6bottomh>
    2002:	60 91 84 07 	lds	r22, 0x0784
    2006:	60 53       	subi	r22, 0x30	; 48
    2008:	20 e0       	ldi	r18, 0x00	; 0
    200a:	40 e0       	ldi	r20, 0x00	; 0
    200c:	83 e8       	ldi	r24, 0x83	; 131
    200e:	93 e0       	ldi	r25, 0x03	; 3
    2010:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    2014:	60 91 85 07 	lds	r22, 0x0785
    2018:	60 53       	subi	r22, 0x30	; 48
    201a:	20 e0       	ldi	r18, 0x00	; 0
    201c:	40 e1       	ldi	r20, 0x10	; 16
    201e:	83 e8       	ldi	r24, 0x83	; 131
    2020:	93 e0       	ldi	r25, 0x03	; 3
    2022:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    2026:	60 91 87 07 	lds	r22, 0x0787
    202a:	60 53       	subi	r22, 0x30	; 48
    202c:	20 e0       	ldi	r18, 0x00	; 0
    202e:	45 e2       	ldi	r20, 0x25	; 37
    2030:	83 e8       	ldi	r24, 0x83	; 131
    2032:	93 e0       	ldi	r25, 0x03	; 3
    2034:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    2038:	60 91 88 07 	lds	r22, 0x0788
    203c:	60 53       	subi	r22, 0x30	; 48
    203e:	20 e0       	ldi	r18, 0x00	; 0
    2040:	45 e3       	ldi	r20, 0x35	; 53
    2042:	83 e8       	ldi	r24, 0x83	; 131
    2044:	93 e0       	ldi	r25, 0x03	; 3
    2046:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    204a:	3f 92       	push	r3
    204c:	8f 92       	push	r8
    204e:	2f 92       	push	r2
    2050:	9f 92       	push	r9
    2052:	80 e2       	ldi	r24, 0x20	; 32
    2054:	92 e0       	ldi	r25, 0x02	; 2
    2056:	9f 93       	push	r25
    2058:	8f 93       	push	r24
    205a:	ce 01       	movw	r24, r28
    205c:	01 96       	adiw	r24, 0x01	; 1
    205e:	9f 93       	push	r25
    2060:	8f 93       	push	r24
    2062:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    2066:	27 e0       	ldi	r18, 0x07	; 7
    2068:	02 2f       	mov	r16, r18
    206a:	08 1b       	sub	r16, r24
    206c:	0f b6       	in	r0, 0x3f	; 63
    206e:	f8 94       	cli
    2070:	de bf       	out	0x3e, r29	; 62
    2072:	0f be       	out	0x3f, r0	; 63
    2074:	cd bf       	out	0x3d, r28	; 61
    2076:	07 30       	cpi	r16, 0x07	; 7
    2078:	18 f5       	brcc	.+70     	; 0x20c0 <_Z12fahradschirmddddm+0x122>
    207a:	10 2f       	mov	r17, r16
    207c:	12 95       	swap	r17
    207e:	10 7f       	andi	r17, 0xF0	; 240
    2080:	4c 01       	movw	r8, r24
    2082:	99 24       	eor	r9, r9
    2084:	e1 e0       	ldi	r30, 0x01	; 1
    2086:	f0 e0       	ldi	r31, 0x00	; 0
    2088:	ec 0f       	add	r30, r28
    208a:	fd 1f       	adc	r31, r29
    208c:	e0 0f       	add	r30, r16
    208e:	f1 1d       	adc	r31, r1
    2090:	e8 0d       	add	r30, r8
    2092:	f9 1d       	adc	r31, r9
    2094:	37 97       	sbiw	r30, 0x07	; 7
    2096:	60 81       	ld	r22, Z
    2098:	6e 32       	cpi	r22, 0x2E	; 46
    209a:	39 f4       	brne	.+14     	; 0x20aa <_Z12fahradschirmddddm+0x10c>
    209c:	20 e2       	ldi	r18, 0x20	; 32
    209e:	41 2f       	mov	r20, r17
    20a0:	83 e8       	ldi	r24, 0x83	; 131
    20a2:	93 e0       	ldi	r25, 0x03	; 3
    20a4:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    20a8:	07 c0       	rjmp	.+14     	; 0x20b8 <_Z12fahradschirmddddm+0x11a>
    20aa:	60 53       	subi	r22, 0x30	; 48
    20ac:	28 e1       	ldi	r18, 0x18	; 24
    20ae:	41 2f       	mov	r20, r17
    20b0:	83 e8       	ldi	r24, 0x83	; 131
    20b2:	93 e0       	ldi	r25, 0x03	; 3
    20b4:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    20b8:	0f 5f       	subi	r16, 0xFF	; 255
    20ba:	10 5f       	subi	r17, 0xF0	; 240
    20bc:	07 30       	cpi	r16, 0x07	; 7
    20be:	11 f7       	brne	.-60     	; 0x2084 <_Z12fahradschirmddddm+0xe6>
    20c0:	28 e1       	ldi	r18, 0x18	; 24
    20c2:	42 e7       	ldi	r20, 0x72	; 114
    20c4:	6b e6       	ldi	r22, 0x6B	; 107
    20c6:	83 e8       	ldi	r24, 0x83	; 131
    20c8:	93 e0       	ldi	r25, 0x03	; 3
    20ca:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    20ce:	28 e1       	ldi	r18, 0x18	; 24
    20d0:	48 e7       	ldi	r20, 0x78	; 120
    20d2:	6d e6       	ldi	r22, 0x6D	; 109
    20d4:	83 e8       	ldi	r24, 0x83	; 131
    20d6:	93 e0       	ldi	r25, 0x03	; 3
    20d8:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    20dc:	20 e2       	ldi	r18, 0x20	; 32
    20de:	42 e7       	ldi	r20, 0x72	; 114
    20e0:	68 e6       	ldi	r22, 0x68	; 104
    20e2:	83 e8       	ldi	r24, 0x83	; 131
    20e4:	93 e0       	ldi	r25, 0x03	; 3
    20e6:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    20ea:	a3 01       	movw	r20, r6
    20ec:	92 01       	movw	r18, r4
    20ee:	67 e2       	ldi	r22, 0x27	; 39
    20f0:	8f e1       	ldi	r24, 0x1F	; 31
    20f2:	80 db       	rcall	.-2304   	; 0x17f4 <_Z19anzeige_kleinenadelhhf>
    20f4:	fc 85       	ldd	r31, Y+12	; 0x0c
    20f6:	ff 93       	push	r31
    20f8:	2b 85       	ldd	r18, Y+11	; 0x0b
    20fa:	2f 93       	push	r18
    20fc:	ff 92       	push	r15
    20fe:	ef 92       	push	r14
    2100:	86 e2       	ldi	r24, 0x26	; 38
    2102:	92 e0       	ldi	r25, 0x02	; 2
    2104:	9f 93       	push	r25
    2106:	8f 93       	push	r24
    2108:	ce 01       	movw	r24, r28
    210a:	01 96       	adiw	r24, 0x01	; 1
    210c:	9f 93       	push	r25
    210e:	8f 93       	push	r24
    2110:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    2114:	88 2e       	mov	r8, r24
    2116:	0f b6       	in	r0, 0x3f	; 63
    2118:	f8 94       	cli
    211a:	de bf       	out	0x3e, r29	; 62
    211c:	0f be       	out	0x3f, r0	; 63
    211e:	cd bf       	out	0x3d, r28	; 61
    2120:	88 20       	and	r8, r8
    2122:	b9 f0       	breq	.+46     	; 0x2152 <_Z12fahradschirmddddm+0x1b4>
    2124:	fe 01       	movw	r30, r28
    2126:	31 96       	adiw	r30, 0x01	; 1
    2128:	7f 01       	movw	r14, r30
    212a:	8f 01       	movw	r16, r30
    212c:	0f 2e       	mov	r0, r31
    212e:	f6 e4       	ldi	r31, 0x46	; 70
    2130:	9f 2e       	mov	r9, r31
    2132:	f0 2d       	mov	r31, r0
    2134:	f8 01       	movw	r30, r16
    2136:	61 91       	ld	r22, Z+
    2138:	8f 01       	movw	r16, r30
    213a:	20 e1       	ldi	r18, 0x10	; 16
    213c:	49 2d       	mov	r20, r9
    213e:	83 e8       	ldi	r24, 0x83	; 131
    2140:	93 e0       	ldi	r25, 0x03	; 3
    2142:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2146:	f6 e0       	ldi	r31, 0x06	; 6
    2148:	9f 0e       	add	r9, r31
    214a:	90 2f       	mov	r25, r16
    214c:	9e 19       	sub	r25, r14
    214e:	98 15       	cp	r25, r8
    2150:	88 f3       	brcs	.-30     	; 0x2134 <_Z12fahradschirmddddm+0x196>
    2152:	df 92       	push	r13
    2154:	cf 92       	push	r12
    2156:	bf 92       	push	r11
    2158:	af 92       	push	r10
    215a:	8c e2       	ldi	r24, 0x2C	; 44
    215c:	92 e0       	ldi	r25, 0x02	; 2
    215e:	9f 93       	push	r25
    2160:	8f 93       	push	r24
    2162:	ce 01       	movw	r24, r28
    2164:	01 96       	adiw	r24, 0x01	; 1
    2166:	9f 93       	push	r25
    2168:	8f 93       	push	r24
    216a:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    216e:	c8 2e       	mov	r12, r24
    2170:	0f b6       	in	r0, 0x3f	; 63
    2172:	f8 94       	cli
    2174:	de bf       	out	0x3e, r29	; 62
    2176:	0f be       	out	0x3f, r0	; 63
    2178:	cd bf       	out	0x3d, r28	; 61
    217a:	88 23       	and	r24, r24
    217c:	b9 f0       	breq	.+46     	; 0x21ac <_Z12fahradschirmddddm+0x20e>
    217e:	ce 01       	movw	r24, r28
    2180:	01 96       	adiw	r24, 0x01	; 1
    2182:	7c 01       	movw	r14, r24
    2184:	8c 01       	movw	r16, r24
    2186:	0f 2e       	mov	r0, r31
    2188:	f6 e4       	ldi	r31, 0x46	; 70
    218a:	df 2e       	mov	r13, r31
    218c:	f0 2d       	mov	r31, r0
    218e:	f8 01       	movw	r30, r16
    2190:	61 91       	ld	r22, Z+
    2192:	8f 01       	movw	r16, r30
    2194:	28 e2       	ldi	r18, 0x28	; 40
    2196:	4d 2d       	mov	r20, r13
    2198:	83 e8       	ldi	r24, 0x83	; 131
    219a:	93 e0       	ldi	r25, 0x03	; 3
    219c:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    21a0:	f6 e0       	ldi	r31, 0x06	; 6
    21a2:	df 0e       	add	r13, r31
    21a4:	90 2f       	mov	r25, r16
    21a6:	9e 19       	sub	r25, r14
    21a8:	9c 15       	cp	r25, r12
    21aa:	88 f3       	brcs	.-30     	; 0x218e <_Z12fahradschirmddddm+0x1f0>
    21ac:	28 89       	ldd	r18, Y+16	; 0x10
    21ae:	2f 93       	push	r18
    21b0:	3f 85       	ldd	r19, Y+15	; 0x0f
    21b2:	3f 93       	push	r19
    21b4:	8e 85       	ldd	r24, Y+14	; 0x0e
    21b6:	8f 93       	push	r24
    21b8:	9d 85       	ldd	r25, Y+13	; 0x0d
    21ba:	9f 93       	push	r25
    21bc:	85 e3       	ldi	r24, 0x35	; 53
    21be:	92 e0       	ldi	r25, 0x02	; 2
    21c0:	9f 93       	push	r25
    21c2:	8f 93       	push	r24
    21c4:	ce 01       	movw	r24, r28
    21c6:	01 96       	adiw	r24, 0x01	; 1
    21c8:	9f 93       	push	r25
    21ca:	8f 93       	push	r24
    21cc:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    21d0:	c8 2e       	mov	r12, r24
    21d2:	0f b6       	in	r0, 0x3f	; 63
    21d4:	f8 94       	cli
    21d6:	de bf       	out	0x3e, r29	; 62
    21d8:	0f be       	out	0x3f, r0	; 63
    21da:	cd bf       	out	0x3d, r28	; 61
    21dc:	88 23       	and	r24, r24
    21de:	c1 f0       	breq	.+48     	; 0x2210 <_Z12fahradschirmddddm+0x272>
    21e0:	9e 01       	movw	r18, r28
    21e2:	2f 5f       	subi	r18, 0xFF	; 255
    21e4:	3f 4f       	sbci	r19, 0xFF	; 255
    21e6:	79 01       	movw	r14, r18
    21e8:	89 01       	movw	r16, r18
    21ea:	0f 2e       	mov	r0, r31
    21ec:	f6 e4       	ldi	r31, 0x46	; 70
    21ee:	df 2e       	mov	r13, r31
    21f0:	f0 2d       	mov	r31, r0
    21f2:	f8 01       	movw	r30, r16
    21f4:	61 91       	ld	r22, Z+
    21f6:	8f 01       	movw	r16, r30
    21f8:	20 e3       	ldi	r18, 0x30	; 48
    21fa:	4d 2d       	mov	r20, r13
    21fc:	83 e8       	ldi	r24, 0x83	; 131
    21fe:	93 e0       	ldi	r25, 0x03	; 3
    2200:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2204:	f6 e0       	ldi	r31, 0x06	; 6
    2206:	df 0e       	add	r13, r31
    2208:	90 2f       	mov	r25, r16
    220a:	9e 19       	sub	r25, r14
    220c:	9c 15       	cp	r25, r12
    220e:	88 f3       	brcs	.-30     	; 0x21f2 <_Z12fahradschirmddddm+0x254>
    2210:	60 96       	adiw	r28, 0x10	; 16
    2212:	0f b6       	in	r0, 0x3f	; 63
    2214:	f8 94       	cli
    2216:	de bf       	out	0x3e, r29	; 62
    2218:	0f be       	out	0x3f, r0	; 63
    221a:	cd bf       	out	0x3d, r28	; 61
    221c:	df 91       	pop	r29
    221e:	cf 91       	pop	r28
    2220:	1f 91       	pop	r17
    2222:	0f 91       	pop	r16
    2224:	ff 90       	pop	r15
    2226:	ef 90       	pop	r14
    2228:	df 90       	pop	r13
    222a:	cf 90       	pop	r12
    222c:	bf 90       	pop	r11
    222e:	af 90       	pop	r10
    2230:	9f 90       	pop	r9
    2232:	8f 90       	pop	r8
    2234:	7f 90       	pop	r7
    2236:	6f 90       	pop	r6
    2238:	5f 90       	pop	r5
    223a:	4f 90       	pop	r4
    223c:	3f 90       	pop	r3
    223e:	2f 90       	pop	r2
    2240:	08 95       	ret

00002242 <_Z14Gaineinstellenv>:
    2242:	cf 92       	push	r12
    2244:	df 92       	push	r13
    2246:	ef 92       	push	r14
    2248:	ff 92       	push	r15
    224a:	0f 93       	push	r16
    224c:	1f 93       	push	r17
    224e:	cf 93       	push	r28
    2250:	df 93       	push	r29
    2252:	cd b7       	in	r28, 0x3d	; 61
    2254:	de b7       	in	r29, 0x3e	; 62
    2256:	64 97       	sbiw	r28, 0x14	; 20
    2258:	0f b6       	in	r0, 0x3f	; 63
    225a:	f8 94       	cli
    225c:	de bf       	out	0x3e, r29	; 62
    225e:	0f be       	out	0x3f, r0	; 63
    2260:	cd bf       	out	0x3d, r28	; 61
    2262:	83 e8       	ldi	r24, 0x83	; 131
    2264:	93 e0       	ldi	r25, 0x03	; 3
    2266:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    226a:	88 e0       	ldi	r24, 0x08	; 8
    226c:	ea e3       	ldi	r30, 0x3A	; 58
    226e:	f2 e0       	ldi	r31, 0x02	; 2
    2270:	8e 01       	movw	r16, r28
    2272:	0f 5f       	subi	r16, 0xFF	; 255
    2274:	1f 4f       	sbci	r17, 0xFF	; 255
    2276:	d8 01       	movw	r26, r16
    2278:	01 90       	ld	r0, Z+
    227a:	0d 92       	st	X+, r0
    227c:	8a 95       	dec	r24
    227e:	e1 f7       	brne	.-8      	; 0x2278 <_Z14Gaineinstellenv+0x36>
    2280:	e0 2e       	mov	r14, r16
    2282:	f1 2e       	mov	r15, r17
    2284:	68 01       	movw	r12, r16
    2286:	10 e0       	ldi	r17, 0x00	; 0
    2288:	f6 01       	movw	r30, r12
    228a:	61 91       	ld	r22, Z+
    228c:	6f 01       	movw	r12, r30
    228e:	20 e0       	ldi	r18, 0x00	; 0
    2290:	41 2f       	mov	r20, r17
    2292:	83 e8       	ldi	r24, 0x83	; 131
    2294:	93 e0       	ldi	r25, 0x03	; 3
    2296:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    229a:	1a 5f       	subi	r17, 0xFA	; 250
    229c:	1a 32       	cpi	r17, 0x2A	; 42
    229e:	a1 f7       	brne	.-24     	; 0x2288 <_Z14Gaineinstellenv+0x46>
    22a0:	88 e0       	ldi	r24, 0x08	; 8
    22a2:	e2 e4       	ldi	r30, 0x42	; 66
    22a4:	f2 e0       	ldi	r31, 0x02	; 2
    22a6:	de 01       	movw	r26, r28
    22a8:	11 96       	adiw	r26, 0x01	; 1
    22aa:	01 90       	ld	r0, Z+
    22ac:	0d 92       	st	X+, r0
    22ae:	8a 95       	dec	r24
    22b0:	e1 f7       	brne	.-8      	; 0x22aa <_Z14Gaineinstellenv+0x68>
    22b2:	ce 2c       	mov	r12, r14
    22b4:	df 2c       	mov	r13, r15
    22b6:	10 e0       	ldi	r17, 0x00	; 0
    22b8:	f6 01       	movw	r30, r12
    22ba:	61 91       	ld	r22, Z+
    22bc:	6f 01       	movw	r12, r30
    22be:	28 e0       	ldi	r18, 0x08	; 8
    22c0:	41 2f       	mov	r20, r17
    22c2:	83 e8       	ldi	r24, 0x83	; 131
    22c4:	93 e0       	ldi	r25, 0x03	; 3
    22c6:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    22ca:	1a 5f       	subi	r17, 0xFA	; 250
    22cc:	1a 32       	cpi	r17, 0x2A	; 42
    22ce:	a1 f7       	brne	.-24     	; 0x22b8 <_Z14Gaineinstellenv+0x76>
    22d0:	88 e0       	ldi	r24, 0x08	; 8
    22d2:	ea e4       	ldi	r30, 0x4A	; 74
    22d4:	f2 e0       	ldi	r31, 0x02	; 2
    22d6:	de 01       	movw	r26, r28
    22d8:	11 96       	adiw	r26, 0x01	; 1
    22da:	01 90       	ld	r0, Z+
    22dc:	0d 92       	st	X+, r0
    22de:	8a 95       	dec	r24
    22e0:	e1 f7       	brne	.-8      	; 0x22da <_Z14Gaineinstellenv+0x98>
    22e2:	ce 2c       	mov	r12, r14
    22e4:	df 2c       	mov	r13, r15
    22e6:	10 e0       	ldi	r17, 0x00	; 0
    22e8:	f6 01       	movw	r30, r12
    22ea:	61 91       	ld	r22, Z+
    22ec:	6f 01       	movw	r12, r30
    22ee:	20 e1       	ldi	r18, 0x10	; 16
    22f0:	41 2f       	mov	r20, r17
    22f2:	83 e8       	ldi	r24, 0x83	; 131
    22f4:	93 e0       	ldi	r25, 0x03	; 3
    22f6:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    22fa:	1a 5f       	subi	r17, 0xFA	; 250
    22fc:	1a 32       	cpi	r17, 0x2A	; 42
    22fe:	a1 f7       	brne	.-24     	; 0x22e8 <_Z14Gaineinstellenv+0xa6>
    2300:	88 e0       	ldi	r24, 0x08	; 8
    2302:	e2 e5       	ldi	r30, 0x52	; 82
    2304:	f2 e0       	ldi	r31, 0x02	; 2
    2306:	de 01       	movw	r26, r28
    2308:	11 96       	adiw	r26, 0x01	; 1
    230a:	01 90       	ld	r0, Z+
    230c:	0d 92       	st	X+, r0
    230e:	8a 95       	dec	r24
    2310:	e1 f7       	brne	.-8      	; 0x230a <_Z14Gaineinstellenv+0xc8>
    2312:	ce 2c       	mov	r12, r14
    2314:	df 2c       	mov	r13, r15
    2316:	10 e0       	ldi	r17, 0x00	; 0
    2318:	f6 01       	movw	r30, r12
    231a:	61 91       	ld	r22, Z+
    231c:	6f 01       	movw	r12, r30
    231e:	28 e1       	ldi	r18, 0x18	; 24
    2320:	41 2f       	mov	r20, r17
    2322:	83 e8       	ldi	r24, 0x83	; 131
    2324:	93 e0       	ldi	r25, 0x03	; 3
    2326:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    232a:	1a 5f       	subi	r17, 0xFA	; 250
    232c:	1a 32       	cpi	r17, 0x2A	; 42
    232e:	a1 f7       	brne	.-24     	; 0x2318 <_Z14Gaineinstellenv+0xd6>
    2330:	88 e0       	ldi	r24, 0x08	; 8
    2332:	ea e5       	ldi	r30, 0x5A	; 90
    2334:	f2 e0       	ldi	r31, 0x02	; 2
    2336:	de 01       	movw	r26, r28
    2338:	11 96       	adiw	r26, 0x01	; 1
    233a:	01 90       	ld	r0, Z+
    233c:	0d 92       	st	X+, r0
    233e:	8a 95       	dec	r24
    2340:	e1 f7       	brne	.-8      	; 0x233a <_Z14Gaineinstellenv+0xf8>
    2342:	ce 2c       	mov	r12, r14
    2344:	df 2c       	mov	r13, r15
    2346:	10 e0       	ldi	r17, 0x00	; 0
    2348:	f6 01       	movw	r30, r12
    234a:	61 91       	ld	r22, Z+
    234c:	6f 01       	movw	r12, r30
    234e:	20 e2       	ldi	r18, 0x20	; 32
    2350:	41 2f       	mov	r20, r17
    2352:	83 e8       	ldi	r24, 0x83	; 131
    2354:	93 e0       	ldi	r25, 0x03	; 3
    2356:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    235a:	1a 5f       	subi	r17, 0xFA	; 250
    235c:	1a 32       	cpi	r17, 0x2A	; 42
    235e:	a1 f7       	brne	.-24     	; 0x2348 <_Z14Gaineinstellenv+0x106>
    2360:	88 e0       	ldi	r24, 0x08	; 8
    2362:	e2 e6       	ldi	r30, 0x62	; 98
    2364:	f2 e0       	ldi	r31, 0x02	; 2
    2366:	de 01       	movw	r26, r28
    2368:	11 96       	adiw	r26, 0x01	; 1
    236a:	01 90       	ld	r0, Z+
    236c:	0d 92       	st	X+, r0
    236e:	8a 95       	dec	r24
    2370:	e1 f7       	brne	.-8      	; 0x236a <_Z14Gaineinstellenv+0x128>
    2372:	ce 2c       	mov	r12, r14
    2374:	df 2c       	mov	r13, r15
    2376:	10 e0       	ldi	r17, 0x00	; 0
    2378:	f6 01       	movw	r30, r12
    237a:	61 91       	ld	r22, Z+
    237c:	6f 01       	movw	r12, r30
    237e:	28 e2       	ldi	r18, 0x28	; 40
    2380:	41 2f       	mov	r20, r17
    2382:	83 e8       	ldi	r24, 0x83	; 131
    2384:	93 e0       	ldi	r25, 0x03	; 3
    2386:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    238a:	1a 5f       	subi	r17, 0xFA	; 250
    238c:	1a 32       	cpi	r17, 0x2A	; 42
    238e:	a1 f7       	brne	.-24     	; 0x2378 <_Z14Gaineinstellenv+0x136>
    2390:	88 e0       	ldi	r24, 0x08	; 8
    2392:	ea e6       	ldi	r30, 0x6A	; 106
    2394:	f2 e0       	ldi	r31, 0x02	; 2
    2396:	de 01       	movw	r26, r28
    2398:	11 96       	adiw	r26, 0x01	; 1
    239a:	01 90       	ld	r0, Z+
    239c:	0d 92       	st	X+, r0
    239e:	8a 95       	dec	r24
    23a0:	e1 f7       	brne	.-8      	; 0x239a <_Z14Gaineinstellenv+0x158>
    23a2:	ce 2c       	mov	r12, r14
    23a4:	df 2c       	mov	r13, r15
    23a6:	10 e0       	ldi	r17, 0x00	; 0
    23a8:	f6 01       	movw	r30, r12
    23aa:	61 91       	ld	r22, Z+
    23ac:	6f 01       	movw	r12, r30
    23ae:	20 e3       	ldi	r18, 0x30	; 48
    23b0:	41 2f       	mov	r20, r17
    23b2:	83 e8       	ldi	r24, 0x83	; 131
    23b4:	93 e0       	ldi	r25, 0x03	; 3
    23b6:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    23ba:	1a 5f       	subi	r17, 0xFA	; 250
    23bc:	1a 32       	cpi	r17, 0x2A	; 42
    23be:	a1 f7       	brne	.-24     	; 0x23a8 <_Z14Gaineinstellenv+0x166>
    23c0:	88 e0       	ldi	r24, 0x08	; 8
    23c2:	e2 e7       	ldi	r30, 0x72	; 114
    23c4:	f2 e0       	ldi	r31, 0x02	; 2
    23c6:	de 01       	movw	r26, r28
    23c8:	11 96       	adiw	r26, 0x01	; 1
    23ca:	01 90       	ld	r0, Z+
    23cc:	0d 92       	st	X+, r0
    23ce:	8a 95       	dec	r24
    23d0:	e1 f7       	brne	.-8      	; 0x23ca <_Z14Gaineinstellenv+0x188>
    23d2:	ce 2c       	mov	r12, r14
    23d4:	df 2c       	mov	r13, r15
    23d6:	10 e0       	ldi	r17, 0x00	; 0
    23d8:	f6 01       	movw	r30, r12
    23da:	61 91       	ld	r22, Z+
    23dc:	6f 01       	movw	r12, r30
    23de:	28 e3       	ldi	r18, 0x38	; 56
    23e0:	41 2f       	mov	r20, r17
    23e2:	83 e8       	ldi	r24, 0x83	; 131
    23e4:	93 e0       	ldi	r25, 0x03	; 3
    23e6:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    23ea:	1a 5f       	subi	r17, 0xFA	; 250
    23ec:	1a 32       	cpi	r17, 0x2A	; 42
    23ee:	a1 f7       	brne	.-24     	; 0x23d8 <_Z14Gaineinstellenv+0x196>
    23f0:	64 96       	adiw	r28, 0x14	; 20
    23f2:	0f b6       	in	r0, 0x3f	; 63
    23f4:	f8 94       	cli
    23f6:	de bf       	out	0x3e, r29	; 62
    23f8:	0f be       	out	0x3f, r0	; 63
    23fa:	cd bf       	out	0x3d, r28	; 61
    23fc:	df 91       	pop	r29
    23fe:	cf 91       	pop	r28
    2400:	1f 91       	pop	r17
    2402:	0f 91       	pop	r16
    2404:	ff 90       	pop	r15
    2406:	ef 90       	pop	r14
    2408:	df 90       	pop	r13
    240a:	cf 90       	pop	r12
    240c:	08 95       	ret

0000240e <_Z15anzeige_kompassd>:
    240e:	9f 92       	push	r9
    2410:	af 92       	push	r10
    2412:	bf 92       	push	r11
    2414:	cf 92       	push	r12
    2416:	df 92       	push	r13
    2418:	ef 92       	push	r14
    241a:	ff 92       	push	r15
    241c:	0f 93       	push	r16
    241e:	1f 93       	push	r17
    2420:	cf 93       	push	r28
    2422:	df 93       	push	r29
    2424:	cd b7       	in	r28, 0x3d	; 61
    2426:	de b7       	in	r29, 0x3e	; 62
    2428:	64 97       	sbiw	r28, 0x14	; 20
    242a:	0f b6       	in	r0, 0x3f	; 63
    242c:	f8 94       	cli
    242e:	de bf       	out	0x3e, r29	; 62
    2430:	0f be       	out	0x3f, r0	; 63
    2432:	cd bf       	out	0x3d, r28	; 61
    2434:	c6 2e       	mov	r12, r22
    2436:	d7 2e       	mov	r13, r23
    2438:	e8 2e       	mov	r14, r24
    243a:	f9 2e       	mov	r15, r25
    243c:	8c e6       	ldi	r24, 0x6C	; 108
    243e:	93 e0       	ldi	r25, 0x03	; 3
    2440:	0e 94 c9 28 	call	0x5192	; 0x5192 <_ZN8Pressure18READ_Pressure_onceEv>
    2444:	8c e6       	ldi	r24, 0x6C	; 108
    2446:	93 e0       	ldi	r25, 0x03	; 3
    2448:	0e 94 41 29 	call	0x5282	; 0x5282 <_ZN8Pressure16READ_TemperatureEv>
    244c:	83 e8       	ldi	r24, 0x83	; 131
    244e:	93 e0       	ldi	r25, 0x03	; 3
    2450:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2454:	0f 2e       	mov	r0, r31
    2456:	f4 e8       	ldi	r31, 0x84	; 132
    2458:	af 2e       	mov	r10, r31
    245a:	f7 e0       	ldi	r31, 0x07	; 7
    245c:	bf 2e       	mov	r11, r31
    245e:	f0 2d       	mov	r31, r0
    2460:	11 e4       	ldi	r17, 0x41	; 65
    2462:	f5 01       	movw	r30, r10
    2464:	61 91       	ld	r22, Z+
    2466:	5f 01       	movw	r10, r30
    2468:	20 e0       	ldi	r18, 0x00	; 0
    246a:	41 2f       	mov	r20, r17
    246c:	83 e8       	ldi	r24, 0x83	; 131
    246e:	93 e0       	ldi	r25, 0x03	; 3
    2470:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2474:	1a 5f       	subi	r17, 0xFA	; 250
    2476:	11 37       	cpi	r17, 0x71	; 113
    2478:	a1 f7       	brne	.-24     	; 0x2462 <_Z15anzeige_kompassd+0x54>
    247a:	0f 2e       	mov	r0, r31
    247c:	fc e8       	ldi	r31, 0x8C	; 140
    247e:	af 2e       	mov	r10, r31
    2480:	f7 e0       	ldi	r31, 0x07	; 7
    2482:	bf 2e       	mov	r11, r31
    2484:	f0 2d       	mov	r31, r0
    2486:	11 e4       	ldi	r17, 0x41	; 65
    2488:	f5 01       	movw	r30, r10
    248a:	61 91       	ld	r22, Z+
    248c:	5f 01       	movw	r10, r30
    248e:	28 e3       	ldi	r18, 0x38	; 56
    2490:	41 2f       	mov	r20, r17
    2492:	83 e8       	ldi	r24, 0x83	; 131
    2494:	93 e0       	ldi	r25, 0x03	; 3
    2496:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    249a:	1a 5f       	subi	r17, 0xFA	; 250
    249c:	11 37       	cpi	r17, 0x71	; 113
    249e:	a1 f7       	brne	.-24     	; 0x2488 <_Z15anzeige_kompassd+0x7a>
    24a0:	40 91 6c 03 	lds	r20, 0x036C
    24a4:	50 91 6d 03 	lds	r21, 0x036D
    24a8:	60 91 6e 03 	lds	r22, 0x036E
    24ac:	70 91 6f 03 	lds	r23, 0x036F
    24b0:	8c e6       	ldi	r24, 0x6C	; 108
    24b2:	93 e0       	ldi	r25, 0x03	; 3
    24b4:	0e 94 b1 29 	call	0x5362	; 0x5362 <_ZN8Pressure8altitudeEd>
    24b8:	9f 93       	push	r25
    24ba:	8f 93       	push	r24
    24bc:	7f 93       	push	r23
    24be:	6f 93       	push	r22
    24c0:	8a e7       	ldi	r24, 0x7A	; 122
    24c2:	92 e0       	ldi	r25, 0x02	; 2
    24c4:	9f 93       	push	r25
    24c6:	8f 93       	push	r24
    24c8:	ce 01       	movw	r24, r28
    24ca:	01 96       	adiw	r24, 0x01	; 1
    24cc:	9f 93       	push	r25
    24ce:	8f 93       	push	r24
    24d0:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    24d4:	0f b6       	in	r0, 0x3f	; 63
    24d6:	f8 94       	cli
    24d8:	de bf       	out	0x3e, r29	; 62
    24da:	0f be       	out	0x3f, r0	; 63
    24dc:	cd bf       	out	0x3d, r28	; 61
    24de:	88 23       	and	r24, r24
    24e0:	f1 f0       	breq	.+60     	; 0x251e <_Z15anzeige_kompassd+0x110>
    24e2:	8e 01       	movw	r16, r28
    24e4:	0f 5f       	subi	r16, 0xFF	; 255
    24e6:	1f 4f       	sbci	r17, 0xFF	; 255
    24e8:	81 50       	subi	r24, 0x01	; 1
    24ea:	68 94       	set
    24ec:	aa 24       	eor	r10, r10
    24ee:	a1 f8       	bld	r10, 1
    24f0:	b1 2c       	mov	r11, r1
    24f2:	ac 0e       	add	r10, r28
    24f4:	bd 1e       	adc	r11, r29
    24f6:	a8 0e       	add	r10, r24
    24f8:	b1 1c       	adc	r11, r1
    24fa:	0f 2e       	mov	r0, r31
    24fc:	f1 e4       	ldi	r31, 0x41	; 65
    24fe:	9f 2e       	mov	r9, r31
    2500:	f0 2d       	mov	r31, r0
    2502:	f8 01       	movw	r30, r16
    2504:	61 91       	ld	r22, Z+
    2506:	8f 01       	movw	r16, r30
    2508:	2a e0       	ldi	r18, 0x0A	; 10
    250a:	49 2d       	mov	r20, r9
    250c:	83 e8       	ldi	r24, 0x83	; 131
    250e:	93 e0       	ldi	r25, 0x03	; 3
    2510:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2514:	f6 e0       	ldi	r31, 0x06	; 6
    2516:	9f 0e       	add	r9, r31
    2518:	0a 15       	cp	r16, r10
    251a:	1b 05       	cpc	r17, r11
    251c:	91 f7       	brne	.-28     	; 0x2502 <_Z15anzeige_kompassd+0xf4>
    251e:	e0 e7       	ldi	r30, 0x70	; 112
    2520:	f3 e0       	ldi	r31, 0x03	; 3
    2522:	83 81       	ldd	r24, Z+3	; 0x03
    2524:	8f 93       	push	r24
    2526:	82 81       	ldd	r24, Z+2	; 0x02
    2528:	8f 93       	push	r24
    252a:	81 81       	ldd	r24, Z+1	; 0x01
    252c:	8f 93       	push	r24
    252e:	80 81       	ld	r24, Z
    2530:	8f 93       	push	r24
    2532:	89 e1       	ldi	r24, 0x19	; 25
    2534:	92 e0       	ldi	r25, 0x02	; 2
    2536:	9f 93       	push	r25
    2538:	8f 93       	push	r24
    253a:	ce 01       	movw	r24, r28
    253c:	01 96       	adiw	r24, 0x01	; 1
    253e:	9f 93       	push	r25
    2540:	8f 93       	push	r24
    2542:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    2546:	0f b6       	in	r0, 0x3f	; 63
    2548:	f8 94       	cli
    254a:	de bf       	out	0x3e, r29	; 62
    254c:	0f be       	out	0x3f, r0	; 63
    254e:	cd bf       	out	0x3d, r28	; 61
    2550:	88 23       	and	r24, r24
    2552:	f1 f0       	breq	.+60     	; 0x2590 <_Z15anzeige_kompassd+0x182>
    2554:	8e 01       	movw	r16, r28
    2556:	0f 5f       	subi	r16, 0xFF	; 255
    2558:	1f 4f       	sbci	r17, 0xFF	; 255
    255a:	81 50       	subi	r24, 0x01	; 1
    255c:	68 94       	set
    255e:	aa 24       	eor	r10, r10
    2560:	a1 f8       	bld	r10, 1
    2562:	b1 2c       	mov	r11, r1
    2564:	ac 0e       	add	r10, r28
    2566:	bd 1e       	adc	r11, r29
    2568:	a8 0e       	add	r10, r24
    256a:	b1 1c       	adc	r11, r1
    256c:	0f 2e       	mov	r0, r31
    256e:	f1 e4       	ldi	r31, 0x41	; 65
    2570:	9f 2e       	mov	r9, r31
    2572:	f0 2d       	mov	r31, r0
    2574:	f8 01       	movw	r30, r16
    2576:	61 91       	ld	r22, Z+
    2578:	8f 01       	movw	r16, r30
    257a:	28 e2       	ldi	r18, 0x28	; 40
    257c:	49 2d       	mov	r20, r9
    257e:	83 e8       	ldi	r24, 0x83	; 131
    2580:	93 e0       	ldi	r25, 0x03	; 3
    2582:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2586:	f6 e0       	ldi	r31, 0x06	; 6
    2588:	9f 0e       	add	r9, r31
    258a:	0a 15       	cp	r16, r10
    258c:	1b 05       	cpc	r17, r11
    258e:	91 f7       	brne	.-28     	; 0x2574 <_Z15anzeige_kompassd+0x166>
    2590:	ff 92       	push	r15
    2592:	ef 92       	push	r14
    2594:	df 92       	push	r13
    2596:	cf 92       	push	r12
    2598:	84 e8       	ldi	r24, 0x84	; 132
    259a:	92 e0       	ldi	r25, 0x02	; 2
    259c:	9f 93       	push	r25
    259e:	8f 93       	push	r24
    25a0:	ce 01       	movw	r24, r28
    25a2:	01 96       	adiw	r24, 0x01	; 1
    25a4:	9f 93       	push	r25
    25a6:	8f 93       	push	r24
    25a8:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    25ac:	0f b6       	in	r0, 0x3f	; 63
    25ae:	f8 94       	cli
    25b0:	de bf       	out	0x3e, r29	; 62
    25b2:	0f be       	out	0x3f, r0	; 63
    25b4:	cd bf       	out	0x3d, r28	; 61
    25b6:	88 23       	and	r24, r24
    25b8:	f1 f0       	breq	.+60     	; 0x25f6 <_Z15anzeige_kompassd+0x1e8>
    25ba:	8e 01       	movw	r16, r28
    25bc:	0f 5f       	subi	r16, 0xFF	; 255
    25be:	1f 4f       	sbci	r17, 0xFF	; 255
    25c0:	81 50       	subi	r24, 0x01	; 1
    25c2:	68 94       	set
    25c4:	aa 24       	eor	r10, r10
    25c6:	a1 f8       	bld	r10, 1
    25c8:	b1 2c       	mov	r11, r1
    25ca:	ac 0e       	add	r10, r28
    25cc:	bd 1e       	adc	r11, r29
    25ce:	a8 0e       	add	r10, r24
    25d0:	b1 1c       	adc	r11, r1
    25d2:	0f 2e       	mov	r0, r31
    25d4:	f1 e4       	ldi	r31, 0x41	; 65
    25d6:	9f 2e       	mov	r9, r31
    25d8:	f0 2d       	mov	r31, r0
    25da:	f8 01       	movw	r30, r16
    25dc:	61 91       	ld	r22, Z+
    25de:	8f 01       	movw	r16, r30
    25e0:	20 e3       	ldi	r18, 0x30	; 48
    25e2:	49 2d       	mov	r20, r9
    25e4:	83 e8       	ldi	r24, 0x83	; 131
    25e6:	93 e0       	ldi	r25, 0x03	; 3
    25e8:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    25ec:	f6 e0       	ldi	r31, 0x06	; 6
    25ee:	9f 0e       	add	r9, r31
    25f0:	0a 15       	cp	r16, r10
    25f2:	1b 05       	cpc	r17, r11
    25f4:	91 f7       	brne	.-28     	; 0x25da <_Z15anzeige_kompassd+0x1cc>
    25f6:	2c 2d       	mov	r18, r12
    25f8:	3d 2d       	mov	r19, r13
    25fa:	4e 2d       	mov	r20, r14
    25fc:	5f 2d       	mov	r21, r15
    25fe:	6f e1       	ldi	r22, 0x1F	; 31
    2600:	8f e1       	ldi	r24, 0x1F	; 31
    2602:	db d8       	rcall	.-3658   	; 0x17ba <_Z13anzeige_nadelhhf>
    2604:	6c 2d       	mov	r22, r12
    2606:	7d 2d       	mov	r23, r13
    2608:	8e 2d       	mov	r24, r14
    260a:	9f 2d       	mov	r25, r15
    260c:	24 d8       	rcall	.-4024   	; 0x1656 <_Z16anzeige_richtungf>
    260e:	64 96       	adiw	r28, 0x14	; 20
    2610:	0f b6       	in	r0, 0x3f	; 63
    2612:	f8 94       	cli
    2614:	de bf       	out	0x3e, r29	; 62
    2616:	0f be       	out	0x3f, r0	; 63
    2618:	cd bf       	out	0x3d, r28	; 61
    261a:	df 91       	pop	r29
    261c:	cf 91       	pop	r28
    261e:	1f 91       	pop	r17
    2620:	0f 91       	pop	r16
    2622:	ff 90       	pop	r15
    2624:	ef 90       	pop	r14
    2626:	df 90       	pop	r13
    2628:	cf 90       	pop	r12
    262a:	bf 90       	pop	r11
    262c:	af 90       	pop	r10
    262e:	9f 90       	pop	r9
    2630:	08 95       	ret

00002632 <_Z10timerseitev>:
    2632:	cf 92       	push	r12
    2634:	df 92       	push	r13
    2636:	ef 92       	push	r14
    2638:	ff 92       	push	r15
    263a:	0f 93       	push	r16
    263c:	1f 93       	push	r17
    263e:	cf 93       	push	r28
    2640:	df 93       	push	r29
    2642:	cd b7       	in	r28, 0x3d	; 61
    2644:	de b7       	in	r29, 0x3e	; 62
    2646:	64 97       	sbiw	r28, 0x14	; 20
    2648:	0f b6       	in	r0, 0x3f	; 63
    264a:	f8 94       	cli
    264c:	de bf       	out	0x3e, r29	; 62
    264e:	0f be       	out	0x3f, r0	; 63
    2650:	cd bf       	out	0x3d, r28	; 61
    2652:	83 e8       	ldi	r24, 0x83	; 131
    2654:	93 e0       	ldi	r25, 0x03	; 3
    2656:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    265a:	88 e0       	ldi	r24, 0x08	; 8
    265c:	ef e8       	ldi	r30, 0x8F	; 143
    265e:	f2 e0       	ldi	r31, 0x02	; 2
    2660:	8e 01       	movw	r16, r28
    2662:	0f 5f       	subi	r16, 0xFF	; 255
    2664:	1f 4f       	sbci	r17, 0xFF	; 255
    2666:	d8 01       	movw	r26, r16
    2668:	01 90       	ld	r0, Z+
    266a:	0d 92       	st	X+, r0
    266c:	8a 95       	dec	r24
    266e:	e1 f7       	brne	.-8      	; 0x2668 <_Z10timerseitev+0x36>
    2670:	c0 2e       	mov	r12, r16
    2672:	d1 2e       	mov	r13, r17
    2674:	78 01       	movw	r14, r16
    2676:	10 e0       	ldi	r17, 0x00	; 0
    2678:	f7 01       	movw	r30, r14
    267a:	61 91       	ld	r22, Z+
    267c:	7f 01       	movw	r14, r30
    267e:	20 e0       	ldi	r18, 0x00	; 0
    2680:	41 2f       	mov	r20, r17
    2682:	83 e8       	ldi	r24, 0x83	; 131
    2684:	93 e0       	ldi	r25, 0x03	; 3
    2686:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    268a:	1a 5f       	subi	r17, 0xFA	; 250
    268c:	1a 32       	cpi	r17, 0x2A	; 42
    268e:	a1 f7       	brne	.-24     	; 0x2678 <_Z10timerseitev+0x46>
    2690:	60 91 54 03 	lds	r22, 0x0354
    2694:	66 23       	and	r22, r22
    2696:	39 f0       	breq	.+14     	; 0x26a6 <_Z10timerseitev+0x74>
    2698:	60 5d       	subi	r22, 0xD0	; 208
    269a:	20 e0       	ldi	r18, 0x00	; 0
    269c:	4a e2       	ldi	r20, 0x2A	; 42
    269e:	83 e8       	ldi	r24, 0x83	; 131
    26a0:	93 e0       	ldi	r25, 0x03	; 3
    26a2:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    26a6:	e0 91 9f 07 	lds	r30, 0x079F
    26aa:	f0 91 a0 07 	lds	r31, 0x07A0
    26ae:	0f 2e       	mov	r0, r31
    26b0:	f0 e1       	ldi	r31, 0x10	; 16
    26b2:	ef 2e       	mov	r14, r31
    26b4:	fe e0       	ldi	r31, 0x0E	; 14
    26b6:	ff 2e       	mov	r15, r31
    26b8:	f0 2d       	mov	r31, r0
    26ba:	cf 01       	movw	r24, r30
    26bc:	b7 01       	movw	r22, r14
    26be:	0e 94 3b 32 	call	0x6476	; 0x6476 <__udivmodhi4>
    26c2:	ab 01       	movw	r20, r22
    26c4:	9c 01       	movw	r18, r24
    26c6:	a9 e8       	ldi	r26, 0x89	; 137
    26c8:	b8 e8       	ldi	r27, 0x88	; 136
    26ca:	0e 94 68 32 	call	0x64d0	; 0x64d0 <__umulhisi3>
    26ce:	8c 01       	movw	r16, r24
    26d0:	16 95       	lsr	r17
    26d2:	07 95       	ror	r16
    26d4:	12 95       	swap	r17
    26d6:	02 95       	swap	r16
    26d8:	0f 70       	andi	r16, 0x0F	; 15
    26da:	01 27       	eor	r16, r17
    26dc:	1f 70       	andi	r17, 0x0F	; 15
    26de:	01 27       	eor	r16, r17
    26e0:	9f 01       	movw	r18, r30
    26e2:	0e 94 68 32 	call	0x64d0	; 0x64d0 <__umulhisi3>
    26e6:	96 95       	lsr	r25
    26e8:	87 95       	ror	r24
    26ea:	92 95       	swap	r25
    26ec:	82 95       	swap	r24
    26ee:	8f 70       	andi	r24, 0x0F	; 15
    26f0:	89 27       	eor	r24, r25
    26f2:	9f 70       	andi	r25, 0x0F	; 15
    26f4:	89 27       	eor	r24, r25
    26f6:	6c e3       	ldi	r22, 0x3C	; 60
    26f8:	68 9f       	mul	r22, r24
    26fa:	90 01       	movw	r18, r0
    26fc:	69 9f       	mul	r22, r25
    26fe:	30 0d       	add	r19, r0
    2700:	11 24       	eor	r1, r1
    2702:	e2 1b       	sub	r30, r18
    2704:	f3 0b       	sbc	r31, r19
    2706:	ca 01       	movw	r24, r20
    2708:	99 27       	eor	r25, r25
    270a:	91 95       	neg	r25
    270c:	81 95       	neg	r24
    270e:	91 09       	sbc	r25, r1
    2710:	b7 01       	movw	r22, r14
    2712:	0e 94 4f 32 	call	0x649e	; 0x649e <__divmodhi4>
    2716:	cb 01       	movw	r24, r22
    2718:	6a e0       	ldi	r22, 0x0A	; 10
    271a:	70 e0       	ldi	r23, 0x00	; 0
    271c:	0e 94 4f 32 	call	0x649e	; 0x649e <__divmodhi4>
    2720:	69 83       	std	Y+1, r22	; 0x01
    2722:	8d ec       	ldi	r24, 0xCD	; 205
    2724:	48 9f       	mul	r20, r24
    2726:	91 2d       	mov	r25, r1
    2728:	11 24       	eor	r1, r1
    272a:	96 95       	lsr	r25
    272c:	96 95       	lsr	r25
    272e:	96 95       	lsr	r25
    2730:	99 0f       	add	r25, r25
    2732:	29 2f       	mov	r18, r25
    2734:	22 0f       	add	r18, r18
    2736:	22 0f       	add	r18, r18
    2738:	92 0f       	add	r25, r18
    273a:	49 1b       	sub	r20, r25
    273c:	4a 83       	std	Y+2, r20	; 0x02
    273e:	9a e3       	ldi	r25, 0x3A	; 58
    2740:	9b 83       	std	Y+3, r25	; 0x03
    2742:	08 9f       	mul	r16, r24
    2744:	21 2d       	mov	r18, r1
    2746:	11 24       	eor	r1, r1
    2748:	26 95       	lsr	r18
    274a:	26 95       	lsr	r18
    274c:	26 95       	lsr	r18
    274e:	2c 83       	std	Y+4, r18	; 0x04
    2750:	22 0f       	add	r18, r18
    2752:	32 2f       	mov	r19, r18
    2754:	33 0f       	add	r19, r19
    2756:	33 0f       	add	r19, r19
    2758:	23 0f       	add	r18, r19
    275a:	02 1b       	sub	r16, r18
    275c:	0d 83       	std	Y+5, r16	; 0x05
    275e:	9e 83       	std	Y+6, r25	; 0x06
    2760:	e8 9f       	mul	r30, r24
    2762:	81 2d       	mov	r24, r1
    2764:	11 24       	eor	r1, r1
    2766:	86 95       	lsr	r24
    2768:	86 95       	lsr	r24
    276a:	86 95       	lsr	r24
    276c:	8f 83       	std	Y+7, r24	; 0x07
    276e:	88 0f       	add	r24, r24
    2770:	98 2f       	mov	r25, r24
    2772:	99 0f       	add	r25, r25
    2774:	99 0f       	add	r25, r25
    2776:	89 0f       	add	r24, r25
    2778:	e8 1b       	sub	r30, r24
    277a:	e8 87       	std	Y+8, r30	; 0x08
    277c:	ec 2c       	mov	r14, r12
    277e:	fd 2c       	mov	r15, r13
    2780:	10 e0       	ldi	r17, 0x00	; 0
    2782:	f7 01       	movw	r30, r14
    2784:	61 91       	ld	r22, Z+
    2786:	7f 01       	movw	r14, r30
    2788:	6a 33       	cpi	r22, 0x3A	; 58
    278a:	39 f4       	brne	.+14     	; 0x279a <_Z10timerseitev+0x168>
    278c:	24 e1       	ldi	r18, 0x14	; 20
    278e:	41 2f       	mov	r20, r17
    2790:	83 e8       	ldi	r24, 0x83	; 131
    2792:	93 e0       	ldi	r25, 0x03	; 3
    2794:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2798:	06 c0       	rjmp	.+12     	; 0x27a6 <_Z10timerseitev+0x174>
    279a:	20 e1       	ldi	r18, 0x10	; 16
    279c:	41 2f       	mov	r20, r17
    279e:	83 e8       	ldi	r24, 0x83	; 131
    27a0:	93 e0       	ldi	r25, 0x03	; 3
    27a2:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    27a6:	10 5f       	subi	r17, 0xF0	; 240
    27a8:	10 38       	cpi	r17, 0x80	; 128
    27aa:	59 f7       	brne	.-42     	; 0x2782 <_Z10timerseitev+0x150>
    27ac:	64 96       	adiw	r28, 0x14	; 20
    27ae:	0f b6       	in	r0, 0x3f	; 63
    27b0:	f8 94       	cli
    27b2:	de bf       	out	0x3e, r29	; 62
    27b4:	0f be       	out	0x3f, r0	; 63
    27b6:	cd bf       	out	0x3d, r28	; 61
    27b8:	df 91       	pop	r29
    27ba:	cf 91       	pop	r28
    27bc:	1f 91       	pop	r17
    27be:	0f 91       	pop	r16
    27c0:	ff 90       	pop	r15
    27c2:	ef 90       	pop	r14
    27c4:	df 90       	pop	r13
    27c6:	cf 90       	pop	r12
    27c8:	08 95       	ret

000027ca <_Z13Stoppuhrseitev>:
    27ca:	cf 92       	push	r12
    27cc:	df 92       	push	r13
    27ce:	ef 92       	push	r14
    27d0:	ff 92       	push	r15
    27d2:	0f 93       	push	r16
    27d4:	1f 93       	push	r17
    27d6:	cf 93       	push	r28
    27d8:	df 93       	push	r29
    27da:	cd b7       	in	r28, 0x3d	; 61
    27dc:	de b7       	in	r29, 0x3e	; 62
    27de:	64 97       	sbiw	r28, 0x14	; 20
    27e0:	0f b6       	in	r0, 0x3f	; 63
    27e2:	f8 94       	cli
    27e4:	de bf       	out	0x3e, r29	; 62
    27e6:	0f be       	out	0x3f, r0	; 63
    27e8:	cd bf       	out	0x3d, r28	; 61
    27ea:	83 e8       	ldi	r24, 0x83	; 131
    27ec:	93 e0       	ldi	r25, 0x03	; 3
    27ee:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    27f2:	8b e0       	ldi	r24, 0x0B	; 11
    27f4:	e7 e9       	ldi	r30, 0x97	; 151
    27f6:	f2 e0       	ldi	r31, 0x02	; 2
    27f8:	8e 01       	movw	r16, r28
    27fa:	0f 5f       	subi	r16, 0xFF	; 255
    27fc:	1f 4f       	sbci	r17, 0xFF	; 255
    27fe:	d8 01       	movw	r26, r16
    2800:	01 90       	ld	r0, Z+
    2802:	0d 92       	st	X+, r0
    2804:	8a 95       	dec	r24
    2806:	e1 f7       	brne	.-8      	; 0x2800 <_Z13Stoppuhrseitev+0x36>
    2808:	c0 2e       	mov	r12, r16
    280a:	d1 2e       	mov	r13, r17
    280c:	78 01       	movw	r14, r16
    280e:	10 e0       	ldi	r17, 0x00	; 0
    2810:	f7 01       	movw	r30, r14
    2812:	61 91       	ld	r22, Z+
    2814:	7f 01       	movw	r14, r30
    2816:	20 e0       	ldi	r18, 0x00	; 0
    2818:	41 2f       	mov	r20, r17
    281a:	83 e8       	ldi	r24, 0x83	; 131
    281c:	93 e0       	ldi	r25, 0x03	; 3
    281e:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2822:	1a 5f       	subi	r17, 0xFA	; 250
    2824:	1c 33       	cpi	r17, 0x3C	; 60
    2826:	a1 f7       	brne	.-24     	; 0x2810 <_Z13Stoppuhrseitev+0x46>
    2828:	e0 91 a1 07 	lds	r30, 0x07A1
    282c:	f0 91 a2 07 	lds	r31, 0x07A2
    2830:	0f 2e       	mov	r0, r31
    2832:	f0 e1       	ldi	r31, 0x10	; 16
    2834:	ef 2e       	mov	r14, r31
    2836:	fe e0       	ldi	r31, 0x0E	; 14
    2838:	ff 2e       	mov	r15, r31
    283a:	f0 2d       	mov	r31, r0
    283c:	cf 01       	movw	r24, r30
    283e:	b7 01       	movw	r22, r14
    2840:	0e 94 3b 32 	call	0x6476	; 0x6476 <__udivmodhi4>
    2844:	ab 01       	movw	r20, r22
    2846:	9c 01       	movw	r18, r24
    2848:	a9 e8       	ldi	r26, 0x89	; 137
    284a:	b8 e8       	ldi	r27, 0x88	; 136
    284c:	0e 94 68 32 	call	0x64d0	; 0x64d0 <__umulhisi3>
    2850:	8c 01       	movw	r16, r24
    2852:	16 95       	lsr	r17
    2854:	07 95       	ror	r16
    2856:	12 95       	swap	r17
    2858:	02 95       	swap	r16
    285a:	0f 70       	andi	r16, 0x0F	; 15
    285c:	01 27       	eor	r16, r17
    285e:	1f 70       	andi	r17, 0x0F	; 15
    2860:	01 27       	eor	r16, r17
    2862:	9f 01       	movw	r18, r30
    2864:	0e 94 68 32 	call	0x64d0	; 0x64d0 <__umulhisi3>
    2868:	96 95       	lsr	r25
    286a:	87 95       	ror	r24
    286c:	92 95       	swap	r25
    286e:	82 95       	swap	r24
    2870:	8f 70       	andi	r24, 0x0F	; 15
    2872:	89 27       	eor	r24, r25
    2874:	9f 70       	andi	r25, 0x0F	; 15
    2876:	89 27       	eor	r24, r25
    2878:	6c e3       	ldi	r22, 0x3C	; 60
    287a:	68 9f       	mul	r22, r24
    287c:	90 01       	movw	r18, r0
    287e:	69 9f       	mul	r22, r25
    2880:	30 0d       	add	r19, r0
    2882:	11 24       	eor	r1, r1
    2884:	e2 1b       	sub	r30, r18
    2886:	f3 0b       	sbc	r31, r19
    2888:	ca 01       	movw	r24, r20
    288a:	99 27       	eor	r25, r25
    288c:	91 95       	neg	r25
    288e:	81 95       	neg	r24
    2890:	91 09       	sbc	r25, r1
    2892:	b7 01       	movw	r22, r14
    2894:	0e 94 4f 32 	call	0x649e	; 0x649e <__divmodhi4>
    2898:	cb 01       	movw	r24, r22
    289a:	6a e0       	ldi	r22, 0x0A	; 10
    289c:	70 e0       	ldi	r23, 0x00	; 0
    289e:	0e 94 4f 32 	call	0x649e	; 0x649e <__divmodhi4>
    28a2:	69 83       	std	Y+1, r22	; 0x01
    28a4:	8d ec       	ldi	r24, 0xCD	; 205
    28a6:	48 9f       	mul	r20, r24
    28a8:	91 2d       	mov	r25, r1
    28aa:	11 24       	eor	r1, r1
    28ac:	96 95       	lsr	r25
    28ae:	96 95       	lsr	r25
    28b0:	96 95       	lsr	r25
    28b2:	99 0f       	add	r25, r25
    28b4:	29 2f       	mov	r18, r25
    28b6:	22 0f       	add	r18, r18
    28b8:	22 0f       	add	r18, r18
    28ba:	92 0f       	add	r25, r18
    28bc:	49 1b       	sub	r20, r25
    28be:	4a 83       	std	Y+2, r20	; 0x02
    28c0:	9a e3       	ldi	r25, 0x3A	; 58
    28c2:	9b 83       	std	Y+3, r25	; 0x03
    28c4:	08 9f       	mul	r16, r24
    28c6:	21 2d       	mov	r18, r1
    28c8:	11 24       	eor	r1, r1
    28ca:	26 95       	lsr	r18
    28cc:	26 95       	lsr	r18
    28ce:	26 95       	lsr	r18
    28d0:	2c 83       	std	Y+4, r18	; 0x04
    28d2:	22 0f       	add	r18, r18
    28d4:	32 2f       	mov	r19, r18
    28d6:	33 0f       	add	r19, r19
    28d8:	33 0f       	add	r19, r19
    28da:	23 0f       	add	r18, r19
    28dc:	02 1b       	sub	r16, r18
    28de:	0d 83       	std	Y+5, r16	; 0x05
    28e0:	9e 83       	std	Y+6, r25	; 0x06
    28e2:	e8 9f       	mul	r30, r24
    28e4:	81 2d       	mov	r24, r1
    28e6:	11 24       	eor	r1, r1
    28e8:	86 95       	lsr	r24
    28ea:	86 95       	lsr	r24
    28ec:	86 95       	lsr	r24
    28ee:	8f 83       	std	Y+7, r24	; 0x07
    28f0:	88 0f       	add	r24, r24
    28f2:	98 2f       	mov	r25, r24
    28f4:	99 0f       	add	r25, r25
    28f6:	99 0f       	add	r25, r25
    28f8:	89 0f       	add	r24, r25
    28fa:	e8 1b       	sub	r30, r24
    28fc:	e8 87       	std	Y+8, r30	; 0x08
    28fe:	ec 2c       	mov	r14, r12
    2900:	fd 2c       	mov	r15, r13
    2902:	10 e0       	ldi	r17, 0x00	; 0
    2904:	f7 01       	movw	r30, r14
    2906:	61 91       	ld	r22, Z+
    2908:	7f 01       	movw	r14, r30
    290a:	6a 33       	cpi	r22, 0x3A	; 58
    290c:	39 f4       	brne	.+14     	; 0x291c <_Z13Stoppuhrseitev+0x152>
    290e:	24 e1       	ldi	r18, 0x14	; 20
    2910:	41 2f       	mov	r20, r17
    2912:	83 e8       	ldi	r24, 0x83	; 131
    2914:	93 e0       	ldi	r25, 0x03	; 3
    2916:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    291a:	06 c0       	rjmp	.+12     	; 0x2928 <_Z13Stoppuhrseitev+0x15e>
    291c:	20 e1       	ldi	r18, 0x10	; 16
    291e:	41 2f       	mov	r20, r17
    2920:	83 e8       	ldi	r24, 0x83	; 131
    2922:	93 e0       	ldi	r25, 0x03	; 3
    2924:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    2928:	10 5f       	subi	r17, 0xF0	; 240
    292a:	10 38       	cpi	r17, 0x80	; 128
    292c:	59 f7       	brne	.-42     	; 0x2904 <_Z13Stoppuhrseitev+0x13a>
    292e:	64 96       	adiw	r28, 0x14	; 20
    2930:	0f b6       	in	r0, 0x3f	; 63
    2932:	f8 94       	cli
    2934:	de bf       	out	0x3e, r29	; 62
    2936:	0f be       	out	0x3f, r0	; 63
    2938:	cd bf       	out	0x3d, r28	; 61
    293a:	df 91       	pop	r29
    293c:	cf 91       	pop	r28
    293e:	1f 91       	pop	r17
    2940:	0f 91       	pop	r16
    2942:	ff 90       	pop	r15
    2944:	ef 90       	pop	r14
    2946:	df 90       	pop	r13
    2948:	cf 90       	pop	r12
    294a:	08 95       	ret

0000294c <_Z14Pressuresensorv>:
    294c:	bf 92       	push	r11
    294e:	cf 92       	push	r12
    2950:	df 92       	push	r13
    2952:	ef 92       	push	r14
    2954:	ff 92       	push	r15
    2956:	0f 93       	push	r16
    2958:	1f 93       	push	r17
    295a:	cf 93       	push	r28
    295c:	df 93       	push	r29
    295e:	cd b7       	in	r28, 0x3d	; 61
    2960:	de b7       	in	r29, 0x3e	; 62
    2962:	64 97       	sbiw	r28, 0x14	; 20
    2964:	0f b6       	in	r0, 0x3f	; 63
    2966:	f8 94       	cli
    2968:	de bf       	out	0x3e, r29	; 62
    296a:	0f be       	out	0x3f, r0	; 63
    296c:	cd bf       	out	0x3d, r28	; 61
    296e:	8c e6       	ldi	r24, 0x6C	; 108
    2970:	93 e0       	ldi	r25, 0x03	; 3
    2972:	0e 94 c9 28 	call	0x5192	; 0x5192 <_ZN8Pressure18READ_Pressure_onceEv>
    2976:	8c e6       	ldi	r24, 0x6C	; 108
    2978:	93 e0       	ldi	r25, 0x03	; 3
    297a:	0e 94 41 29 	call	0x5282	; 0x5282 <_ZN8Pressure16READ_TemperatureEv>
    297e:	83 e8       	ldi	r24, 0x83	; 131
    2980:	93 e0       	ldi	r25, 0x03	; 3
    2982:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2986:	80 e0       	ldi	r24, 0x00	; 0
    2988:	0e 94 25 0a 	call	0x144a	; 0x144a <_Z6headerh>
    298c:	80 e0       	ldi	r24, 0x00	; 0
    298e:	0e 94 06 0b 	call	0x160c	; 0x160c <_Z6bottomh>
    2992:	8e e0       	ldi	r24, 0x0E	; 14
    2994:	e2 ea       	ldi	r30, 0xA2	; 162
    2996:	f2 e0       	ldi	r31, 0x02	; 2
    2998:	8e 01       	movw	r16, r28
    299a:	0f 5f       	subi	r16, 0xFF	; 255
    299c:	1f 4f       	sbci	r17, 0xFF	; 255
    299e:	d8 01       	movw	r26, r16
    29a0:	01 90       	ld	r0, Z+
    29a2:	0d 92       	st	X+, r0
    29a4:	8a 95       	dec	r24
    29a6:	e1 f7       	brne	.-8      	; 0x29a0 <_Z14Pressuresensorv+0x54>
    29a8:	c0 2e       	mov	r12, r16
    29aa:	d1 2e       	mov	r13, r17
    29ac:	78 01       	movw	r14, r16
    29ae:	10 e0       	ldi	r17, 0x00	; 0
    29b0:	f7 01       	movw	r30, r14
    29b2:	61 91       	ld	r22, Z+
    29b4:	7f 01       	movw	r14, r30
    29b6:	20 e1       	ldi	r18, 0x10	; 16
    29b8:	41 2f       	mov	r20, r17
    29ba:	83 e8       	ldi	r24, 0x83	; 131
    29bc:	93 e0       	ldi	r25, 0x03	; 3
    29be:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    29c2:	1a 5f       	subi	r17, 0xFA	; 250
    29c4:	1e 34       	cpi	r17, 0x4E	; 78
    29c6:	a1 f7       	brne	.-24     	; 0x29b0 <_Z14Pressuresensorv+0x64>
    29c8:	ec e6       	ldi	r30, 0x6C	; 108
    29ca:	f3 e0       	ldi	r31, 0x03	; 3
    29cc:	83 81       	ldd	r24, Z+3	; 0x03
    29ce:	8f 93       	push	r24
    29d0:	82 81       	ldd	r24, Z+2	; 0x02
    29d2:	8f 93       	push	r24
    29d4:	81 81       	ldd	r24, Z+1	; 0x01
    29d6:	8f 93       	push	r24
    29d8:	80 81       	ld	r24, Z
    29da:	8f 93       	push	r24
    29dc:	80 eb       	ldi	r24, 0xB0	; 176
    29de:	92 e0       	ldi	r25, 0x02	; 2
    29e0:	9f 93       	push	r25
    29e2:	8f 93       	push	r24
    29e4:	ce 01       	movw	r24, r28
    29e6:	01 96       	adiw	r24, 0x01	; 1
    29e8:	9f 93       	push	r25
    29ea:	8f 93       	push	r24
    29ec:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    29f0:	0f b6       	in	r0, 0x3f	; 63
    29f2:	f8 94       	cli
    29f4:	de bf       	out	0x3e, r29	; 62
    29f6:	0f be       	out	0x3f, r0	; 63
    29f8:	cd bf       	out	0x3d, r28	; 61
    29fa:	88 23       	and	r24, r24
    29fc:	d1 f0       	breq	.+52     	; 0x2a32 <_Z14Pressuresensorv+0xe6>
    29fe:	81 50       	subi	r24, 0x01	; 1
    2a00:	68 94       	set
    2a02:	ee 24       	eor	r14, r14
    2a04:	e1 f8       	bld	r14, 1
    2a06:	f1 2c       	mov	r15, r1
    2a08:	ec 0e       	add	r14, r28
    2a0a:	fd 1e       	adc	r15, r29
    2a0c:	e8 0e       	add	r14, r24
    2a0e:	f1 1c       	adc	r15, r1
    2a10:	0c 2d       	mov	r16, r12
    2a12:	1d 2d       	mov	r17, r13
    2a14:	b1 2c       	mov	r11, r1
    2a16:	f8 01       	movw	r30, r16
    2a18:	61 91       	ld	r22, Z+
    2a1a:	8f 01       	movw	r16, r30
    2a1c:	28 e1       	ldi	r18, 0x18	; 24
    2a1e:	4b 2d       	mov	r20, r11
    2a20:	83 e8       	ldi	r24, 0x83	; 131
    2a22:	93 e0       	ldi	r25, 0x03	; 3
    2a24:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2a28:	f6 e0       	ldi	r31, 0x06	; 6
    2a2a:	bf 0e       	add	r11, r31
    2a2c:	0e 15       	cp	r16, r14
    2a2e:	1f 05       	cpc	r17, r15
    2a30:	91 f7       	brne	.-28     	; 0x2a16 <_Z14Pressuresensorv+0xca>
    2a32:	40 91 6c 03 	lds	r20, 0x036C
    2a36:	50 91 6d 03 	lds	r21, 0x036D
    2a3a:	60 91 6e 03 	lds	r22, 0x036E
    2a3e:	70 91 6f 03 	lds	r23, 0x036F
    2a42:	8c e6       	ldi	r24, 0x6C	; 108
    2a44:	93 e0       	ldi	r25, 0x03	; 3
    2a46:	0e 94 b1 29 	call	0x5362	; 0x5362 <_ZN8Pressure8altitudeEd>
    2a4a:	9f 93       	push	r25
    2a4c:	8f 93       	push	r24
    2a4e:	7f 93       	push	r23
    2a50:	6f 93       	push	r22
    2a52:	89 eb       	ldi	r24, 0xB9	; 185
    2a54:	92 e0       	ldi	r25, 0x02	; 2
    2a56:	9f 93       	push	r25
    2a58:	8f 93       	push	r24
    2a5a:	ce 01       	movw	r24, r28
    2a5c:	01 96       	adiw	r24, 0x01	; 1
    2a5e:	9f 93       	push	r25
    2a60:	8f 93       	push	r24
    2a62:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    2a66:	0f b6       	in	r0, 0x3f	; 63
    2a68:	f8 94       	cli
    2a6a:	de bf       	out	0x3e, r29	; 62
    2a6c:	0f be       	out	0x3f, r0	; 63
    2a6e:	cd bf       	out	0x3d, r28	; 61
    2a70:	88 23       	and	r24, r24
    2a72:	d1 f0       	breq	.+52     	; 0x2aa8 <_Z14Pressuresensorv+0x15c>
    2a74:	81 50       	subi	r24, 0x01	; 1
    2a76:	68 94       	set
    2a78:	ee 24       	eor	r14, r14
    2a7a:	e1 f8       	bld	r14, 1
    2a7c:	f1 2c       	mov	r15, r1
    2a7e:	ec 0e       	add	r14, r28
    2a80:	fd 1e       	adc	r15, r29
    2a82:	e8 0e       	add	r14, r24
    2a84:	f1 1c       	adc	r15, r1
    2a86:	0c 2d       	mov	r16, r12
    2a88:	1d 2d       	mov	r17, r13
    2a8a:	b1 2c       	mov	r11, r1
    2a8c:	f8 01       	movw	r30, r16
    2a8e:	61 91       	ld	r22, Z+
    2a90:	8f 01       	movw	r16, r30
    2a92:	20 e2       	ldi	r18, 0x20	; 32
    2a94:	4b 2d       	mov	r20, r11
    2a96:	83 e8       	ldi	r24, 0x83	; 131
    2a98:	93 e0       	ldi	r25, 0x03	; 3
    2a9a:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2a9e:	f6 e0       	ldi	r31, 0x06	; 6
    2aa0:	bf 0e       	add	r11, r31
    2aa2:	0e 15       	cp	r16, r14
    2aa4:	1f 05       	cpc	r17, r15
    2aa6:	91 f7       	brne	.-28     	; 0x2a8c <_Z14Pressuresensorv+0x140>
    2aa8:	e0 e7       	ldi	r30, 0x70	; 112
    2aaa:	f3 e0       	ldi	r31, 0x03	; 3
    2aac:	83 81       	ldd	r24, Z+3	; 0x03
    2aae:	8f 93       	push	r24
    2ab0:	82 81       	ldd	r24, Z+2	; 0x02
    2ab2:	8f 93       	push	r24
    2ab4:	81 81       	ldd	r24, Z+1	; 0x01
    2ab6:	8f 93       	push	r24
    2ab8:	80 81       	ld	r24, Z
    2aba:	8f 93       	push	r24
    2abc:	89 e1       	ldi	r24, 0x19	; 25
    2abe:	92 e0       	ldi	r25, 0x02	; 2
    2ac0:	9f 93       	push	r25
    2ac2:	8f 93       	push	r24
    2ac4:	ce 01       	movw	r24, r28
    2ac6:	01 96       	adiw	r24, 0x01	; 1
    2ac8:	9f 93       	push	r25
    2aca:	8f 93       	push	r24
    2acc:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
    2ad0:	0f b6       	in	r0, 0x3f	; 63
    2ad2:	f8 94       	cli
    2ad4:	de bf       	out	0x3e, r29	; 62
    2ad6:	0f be       	out	0x3f, r0	; 63
    2ad8:	cd bf       	out	0x3d, r28	; 61
    2ada:	88 23       	and	r24, r24
    2adc:	d1 f0       	breq	.+52     	; 0x2b12 <_Z14Pressuresensorv+0x1c6>
    2ade:	81 50       	subi	r24, 0x01	; 1
    2ae0:	68 94       	set
    2ae2:	ee 24       	eor	r14, r14
    2ae4:	e1 f8       	bld	r14, 1
    2ae6:	f1 2c       	mov	r15, r1
    2ae8:	ec 0e       	add	r14, r28
    2aea:	fd 1e       	adc	r15, r29
    2aec:	e8 0e       	add	r14, r24
    2aee:	f1 1c       	adc	r15, r1
    2af0:	0c 2d       	mov	r16, r12
    2af2:	1d 2d       	mov	r17, r13
    2af4:	d1 2c       	mov	r13, r1
    2af6:	f8 01       	movw	r30, r16
    2af8:	61 91       	ld	r22, Z+
    2afa:	8f 01       	movw	r16, r30
    2afc:	20 e3       	ldi	r18, 0x30	; 48
    2afe:	4d 2d       	mov	r20, r13
    2b00:	83 e8       	ldi	r24, 0x83	; 131
    2b02:	93 e0       	ldi	r25, 0x03	; 3
    2b04:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2b08:	f6 e0       	ldi	r31, 0x06	; 6
    2b0a:	df 0e       	add	r13, r31
    2b0c:	0e 15       	cp	r16, r14
    2b0e:	1f 05       	cpc	r17, r15
    2b10:	91 f7       	brne	.-28     	; 0x2af6 <_Z14Pressuresensorv+0x1aa>
    2b12:	64 96       	adiw	r28, 0x14	; 20
    2b14:	0f b6       	in	r0, 0x3f	; 63
    2b16:	f8 94       	cli
    2b18:	de bf       	out	0x3e, r29	; 62
    2b1a:	0f be       	out	0x3f, r0	; 63
    2b1c:	cd bf       	out	0x3d, r28	; 61
    2b1e:	df 91       	pop	r29
    2b20:	cf 91       	pop	r28
    2b22:	1f 91       	pop	r17
    2b24:	0f 91       	pop	r16
    2b26:	ff 90       	pop	r15
    2b28:	ef 90       	pop	r14
    2b2a:	df 90       	pop	r13
    2b2c:	cf 90       	pop	r12
    2b2e:	bf 90       	pop	r11
    2b30:	08 95       	ret

00002b32 <_Z11Wanderseitev>:

void Wanderseite(){
    2b32:	bf 92       	push	r11
    2b34:	cf 92       	push	r12
    2b36:	df 92       	push	r13
    2b38:	ef 92       	push	r14
    2b3a:	ff 92       	push	r15
    2b3c:	0f 93       	push	r16
    2b3e:	1f 93       	push	r17
    2b40:	cf 93       	push	r28
    2b42:	df 93       	push	r29
    2b44:	cd b7       	in	r28, 0x3d	; 61
    2b46:	de b7       	in	r29, 0x3e	; 62
    2b48:	64 97       	sbiw	r28, 0x14	; 20
    2b4a:	0f b6       	in	r0, 0x3f	; 63
    2b4c:	f8 94       	cli
    2b4e:	de bf       	out	0x3e, r29	; 62
    2b50:	0f be       	out	0x3f, r0	; 63
    2b52:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	uint8_t buffersize=0;
	oled.clearFrame();
    2b54:	83 e8       	ldi	r24, 0x83	; 131
    2b56:	93 e0       	ldi	r25, 0x03	; 3
    2b58:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	header(0);
    2b5c:	80 e0       	ldi	r24, 0x00	; 0
    2b5e:	0e 94 25 0a 	call	0x144a	; 0x144a <_Z6headerh>
	bottom(0);
    2b62:	80 e0       	ldi	r24, 0x00	; 0
    2b64:	0e 94 06 0b 	call	0x160c	; 0x160c <_Z6bottomh>
	
	Accelerometer.readtempera();
    2b68:	8b e5       	ldi	r24, 0x5B	; 91
    2b6a:	93 e0       	ldi	r25, 0x03	; 3
    2b6c:	0e 94 7a 26 	call	0x4cf4	; 0x4cf4 <_ZN7LSM303D11readtemperaEv>
	Accelerometer.readacc();
    2b70:	8b e5       	ldi	r24, 0x5B	; 91
    2b72:	93 e0       	ldi	r25, 0x03	; 3
    2b74:	0e 94 dd 25 	call	0x4bba	; 0x4bba <_ZN7LSM303D7readaccEv>
	
	buffersize=sprintf(buffer,"LSM303D Daten:");
    2b78:	8f e0       	ldi	r24, 0x0F	; 15
    2b7a:	e7 ec       	ldi	r30, 0xC7	; 199
    2b7c:	f2 e0       	ldi	r31, 0x02	; 2
    2b7e:	8e 01       	movw	r16, r28
    2b80:	0f 5f       	subi	r16, 0xFF	; 255
    2b82:	1f 4f       	sbci	r17, 0xFF	; 255
    2b84:	d8 01       	movw	r26, r16
    2b86:	01 90       	ld	r0, Z+
    2b88:	0d 92       	st	X+, r0
    2b8a:	8a 95       	dec	r24
    2b8c:	e1 f7       	brne	.-8      	; 0x2b86 <_Z11Wanderseitev+0x54>
    2b8e:	e0 2e       	mov	r14, r16
    2b90:	f1 2e       	mov	r15, r17
    2b92:	68 01       	movw	r12, r16
    2b94:	10 e0       	ldi	r17, 0x00	; 0
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,1*charhighte);}
    2b96:	f6 01       	movw	r30, r12
    2b98:	61 91       	ld	r22, Z+
    2b9a:	6f 01       	movw	r12, r30
    2b9c:	28 e0       	ldi	r18, 0x08	; 8
    2b9e:	41 2f       	mov	r20, r17
    2ba0:	83 e8       	ldi	r24, 0x83	; 131
    2ba2:	93 e0       	ldi	r25, 0x03	; 3
    2ba4:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2ba8:	1a 5f       	subi	r17, 0xFA	; 250
    2baa:	14 35       	cpi	r17, 0x54	; 84
    2bac:	a1 f7       	brne	.-24     	; 0x2b96 <_Z11Wanderseitev+0x64>
	buffersize=sprintf(buffer,"X: %.1f",Accelerometer.roll*180.0/M_PI);
    2bae:	20 e0       	ldi	r18, 0x00	; 0
    2bb0:	30 e0       	ldi	r19, 0x00	; 0
    2bb2:	44 e3       	ldi	r20, 0x34	; 52
    2bb4:	53 e4       	ldi	r21, 0x43	; 67
    2bb6:	60 91 63 03 	lds	r22, 0x0363
    2bba:	70 91 64 03 	lds	r23, 0x0364
    2bbe:	80 91 65 03 	lds	r24, 0x0365
    2bc2:	90 91 66 03 	lds	r25, 0x0366
    2bc6:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    2bca:	2b ed       	ldi	r18, 0xDB	; 219
    2bcc:	3f e0       	ldi	r19, 0x0F	; 15
    2bce:	49 e4       	ldi	r20, 0x49	; 73
    2bd0:	50 e4       	ldi	r21, 0x40	; 64
    2bd2:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
    2bd6:	9f 93       	push	r25
    2bd8:	8f 93       	push	r24
    2bda:	7f 93       	push	r23
    2bdc:	6f 93       	push	r22
    2bde:	86 ed       	ldi	r24, 0xD6	; 214
    2be0:	92 e0       	ldi	r25, 0x02	; 2
    2be2:	9f 93       	push	r25
    2be4:	8f 93       	push	r24
    2be6:	ce 01       	movw	r24, r28
    2be8:	01 96       	adiw	r24, 0x01	; 1
    2bea:	9f 93       	push	r25
    2bec:	8f 93       	push	r24
    2bee:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
    2bf2:	0f b6       	in	r0, 0x3f	; 63
    2bf4:	f8 94       	cli
    2bf6:	de bf       	out	0x3e, r29	; 62
    2bf8:	0f be       	out	0x3f, r0	; 63
    2bfa:	cd bf       	out	0x3d, r28	; 61
    2bfc:	88 23       	and	r24, r24
    2bfe:	d1 f0       	breq	.+52     	; 0x2c34 <_Z11Wanderseitev+0x102>
    2c00:	81 50       	subi	r24, 0x01	; 1
    2c02:	68 94       	set
    2c04:	cc 24       	eor	r12, r12
    2c06:	c1 f8       	bld	r12, 1
    2c08:	d1 2c       	mov	r13, r1
    2c0a:	cc 0e       	add	r12, r28
    2c0c:	dd 1e       	adc	r13, r29
    2c0e:	c8 0e       	add	r12, r24
    2c10:	d1 1c       	adc	r13, r1
    2c12:	0e 2d       	mov	r16, r14
    2c14:	1f 2d       	mov	r17, r15
    2c16:	b1 2c       	mov	r11, r1
    2c18:	f8 01       	movw	r30, r16
    2c1a:	61 91       	ld	r22, Z+
    2c1c:	8f 01       	movw	r16, r30
    2c1e:	28 e1       	ldi	r18, 0x18	; 24
    2c20:	4b 2d       	mov	r20, r11
    2c22:	83 e8       	ldi	r24, 0x83	; 131
    2c24:	93 e0       	ldi	r25, 0x03	; 3
    2c26:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2c2a:	f6 e0       	ldi	r31, 0x06	; 6
    2c2c:	bf 0e       	add	r11, r31
    2c2e:	0c 15       	cp	r16, r12
    2c30:	1d 05       	cpc	r17, r13
    2c32:	91 f7       	brne	.-28     	; 0x2c18 <_Z11Wanderseitev+0xe6>
	buffersize=sprintf(buffer,"Y: %.1f",Accelerometer.pitch*180.0/M_PI);
    2c34:	20 e0       	ldi	r18, 0x00	; 0
    2c36:	30 e0       	ldi	r19, 0x00	; 0
    2c38:	44 e3       	ldi	r20, 0x34	; 52
    2c3a:	53 e4       	ldi	r21, 0x43	; 67
    2c3c:	60 91 67 03 	lds	r22, 0x0367
    2c40:	70 91 68 03 	lds	r23, 0x0368
    2c44:	80 91 69 03 	lds	r24, 0x0369
    2c48:	90 91 6a 03 	lds	r25, 0x036A
    2c4c:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    2c50:	2b ed       	ldi	r18, 0xDB	; 219
    2c52:	3f e0       	ldi	r19, 0x0F	; 15
    2c54:	49 e4       	ldi	r20, 0x49	; 73
    2c56:	50 e4       	ldi	r21, 0x40	; 64
    2c58:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
    2c5c:	9f 93       	push	r25
    2c5e:	8f 93       	push	r24
    2c60:	7f 93       	push	r23
    2c62:	6f 93       	push	r22
    2c64:	8e ed       	ldi	r24, 0xDE	; 222
    2c66:	92 e0       	ldi	r25, 0x02	; 2
    2c68:	9f 93       	push	r25
    2c6a:	8f 93       	push	r24
    2c6c:	ce 01       	movw	r24, r28
    2c6e:	01 96       	adiw	r24, 0x01	; 1
    2c70:	9f 93       	push	r25
    2c72:	8f 93       	push	r24
    2c74:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,4*charhighte);}
    2c78:	0f b6       	in	r0, 0x3f	; 63
    2c7a:	f8 94       	cli
    2c7c:	de bf       	out	0x3e, r29	; 62
    2c7e:	0f be       	out	0x3f, r0	; 63
    2c80:	cd bf       	out	0x3d, r28	; 61
    2c82:	88 23       	and	r24, r24
    2c84:	d1 f0       	breq	.+52     	; 0x2cba <_Z11Wanderseitev+0x188>
    2c86:	81 50       	subi	r24, 0x01	; 1
    2c88:	68 94       	set
    2c8a:	cc 24       	eor	r12, r12
    2c8c:	c1 f8       	bld	r12, 1
    2c8e:	d1 2c       	mov	r13, r1
    2c90:	cc 0e       	add	r12, r28
    2c92:	dd 1e       	adc	r13, r29
    2c94:	c8 0e       	add	r12, r24
    2c96:	d1 1c       	adc	r13, r1
    2c98:	0e 2d       	mov	r16, r14
    2c9a:	1f 2d       	mov	r17, r15
    2c9c:	b1 2c       	mov	r11, r1
    2c9e:	f8 01       	movw	r30, r16
    2ca0:	61 91       	ld	r22, Z+
    2ca2:	8f 01       	movw	r16, r30
    2ca4:	20 e2       	ldi	r18, 0x20	; 32
    2ca6:	4b 2d       	mov	r20, r11
    2ca8:	83 e8       	ldi	r24, 0x83	; 131
    2caa:	93 e0       	ldi	r25, 0x03	; 3
    2cac:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2cb0:	f6 e0       	ldi	r31, 0x06	; 6
    2cb2:	bf 0e       	add	r11, r31
    2cb4:	0c 15       	cp	r16, r12
    2cb6:	1d 05       	cpc	r17, r13
    2cb8:	91 f7       	brne	.-28     	; 0x2c9e <_Z11Wanderseitev+0x16c>
	buffersize=sprintf(buffer,"Z: %.1i",Accelerometer.achsen_A[2]);
    2cba:	ef e5       	ldi	r30, 0x5F	; 95
    2cbc:	f3 e0       	ldi	r31, 0x03	; 3
    2cbe:	81 81       	ldd	r24, Z+1	; 0x01
    2cc0:	8f 93       	push	r24
    2cc2:	80 81       	ld	r24, Z
    2cc4:	8f 93       	push	r24
    2cc6:	86 ee       	ldi	r24, 0xE6	; 230
    2cc8:	92 e0       	ldi	r25, 0x02	; 2
    2cca:	9f 93       	push	r25
    2ccc:	8f 93       	push	r24
    2cce:	ce 01       	movw	r24, r28
    2cd0:	01 96       	adiw	r24, 0x01	; 1
    2cd2:	9f 93       	push	r25
    2cd4:	8f 93       	push	r24
    2cd6:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,5*charhighte);}	
    2cda:	0f 90       	pop	r0
    2cdc:	0f 90       	pop	r0
    2cde:	0f 90       	pop	r0
    2ce0:	0f 90       	pop	r0
    2ce2:	0f 90       	pop	r0
    2ce4:	0f 90       	pop	r0
    2ce6:	88 23       	and	r24, r24
    2ce8:	d1 f0       	breq	.+52     	; 0x2d1e <_Z11Wanderseitev+0x1ec>
    2cea:	81 50       	subi	r24, 0x01	; 1
    2cec:	68 94       	set
    2cee:	cc 24       	eor	r12, r12
    2cf0:	c1 f8       	bld	r12, 1
    2cf2:	d1 2c       	mov	r13, r1
    2cf4:	cc 0e       	add	r12, r28
    2cf6:	dd 1e       	adc	r13, r29
    2cf8:	c8 0e       	add	r12, r24
    2cfa:	d1 1c       	adc	r13, r1
    2cfc:	0e 2d       	mov	r16, r14
    2cfe:	1f 2d       	mov	r17, r15
    2d00:	b1 2c       	mov	r11, r1
    2d02:	f8 01       	movw	r30, r16
    2d04:	61 91       	ld	r22, Z+
    2d06:	8f 01       	movw	r16, r30
    2d08:	28 e2       	ldi	r18, 0x28	; 40
    2d0a:	4b 2d       	mov	r20, r11
    2d0c:	83 e8       	ldi	r24, 0x83	; 131
    2d0e:	93 e0       	ldi	r25, 0x03	; 3
    2d10:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2d14:	f6 e0       	ldi	r31, 0x06	; 6
    2d16:	bf 0e       	add	r11, r31
    2d18:	0c 15       	cp	r16, r12
    2d1a:	1d 05       	cpc	r17, r13
    2d1c:	91 f7       	brne	.-28     	; 0x2d02 <_Z11Wanderseitev+0x1d0>
		
	buffersize=sprintf(buffer,"%i C",Accelerometer.Tempera);
    2d1e:	e1 e6       	ldi	r30, 0x61	; 97
    2d20:	f3 e0       	ldi	r31, 0x03	; 3
    2d22:	81 81       	ldd	r24, Z+1	; 0x01
    2d24:	8f 93       	push	r24
    2d26:	80 81       	ld	r24, Z
    2d28:	8f 93       	push	r24
    2d2a:	8e ee       	ldi	r24, 0xEE	; 238
    2d2c:	92 e0       	ldi	r25, 0x02	; 2
    2d2e:	9f 93       	push	r25
    2d30:	8f 93       	push	r24
    2d32:	ce 01       	movw	r24, r28
    2d34:	01 96       	adiw	r24, 0x01	; 1
    2d36:	9f 93       	push	r25
    2d38:	8f 93       	push	r24
    2d3a:	0e 94 9b 33 	call	0x6736	; 0x6736 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,6*charhighte);}
    2d3e:	0f 90       	pop	r0
    2d40:	0f 90       	pop	r0
    2d42:	0f 90       	pop	r0
    2d44:	0f 90       	pop	r0
    2d46:	0f 90       	pop	r0
    2d48:	0f 90       	pop	r0
    2d4a:	88 23       	and	r24, r24
    2d4c:	d1 f0       	breq	.+52     	; 0x2d82 <_Z11Wanderseitev+0x250>
    2d4e:	81 50       	subi	r24, 0x01	; 1
    2d50:	68 94       	set
    2d52:	cc 24       	eor	r12, r12
    2d54:	c1 f8       	bld	r12, 1
    2d56:	d1 2c       	mov	r13, r1
    2d58:	cc 0e       	add	r12, r28
    2d5a:	dd 1e       	adc	r13, r29
    2d5c:	c8 0e       	add	r12, r24
    2d5e:	d1 1c       	adc	r13, r1
    2d60:	0e 2d       	mov	r16, r14
    2d62:	1f 2d       	mov	r17, r15
    2d64:	f1 2c       	mov	r15, r1
    2d66:	f8 01       	movw	r30, r16
    2d68:	61 91       	ld	r22, Z+
    2d6a:	8f 01       	movw	r16, r30
    2d6c:	20 e3       	ldi	r18, 0x30	; 48
    2d6e:	4f 2d       	mov	r20, r15
    2d70:	83 e8       	ldi	r24, 0x83	; 131
    2d72:	93 e0       	ldi	r25, 0x03	; 3
    2d74:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2d78:	f6 e0       	ldi	r31, 0x06	; 6
    2d7a:	ff 0e       	add	r15, r31
    2d7c:	0c 15       	cp	r16, r12
    2d7e:	1d 05       	cpc	r17, r13
    2d80:	91 f7       	brne	.-28     	; 0x2d66 <_Z11Wanderseitev+0x234>
	
}
    2d82:	64 96       	adiw	r28, 0x14	; 20
    2d84:	0f b6       	in	r0, 0x3f	; 63
    2d86:	f8 94       	cli
    2d88:	de bf       	out	0x3e, r29	; 62
    2d8a:	0f be       	out	0x3f, r0	; 63
    2d8c:	cd bf       	out	0x3d, r28	; 61
    2d8e:	df 91       	pop	r29
    2d90:	cf 91       	pop	r28
    2d92:	1f 91       	pop	r17
    2d94:	0f 91       	pop	r16
    2d96:	ff 90       	pop	r15
    2d98:	ef 90       	pop	r14
    2d9a:	df 90       	pop	r13
    2d9c:	cf 90       	pop	r12
    2d9e:	bf 90       	pop	r11
    2da0:	08 95       	ret

00002da2 <_Z13uhreinstellenv>:

void uhreinstellen(){
    2da2:	2f 92       	push	r2
    2da4:	3f 92       	push	r3
    2da6:	4f 92       	push	r4
    2da8:	5f 92       	push	r5
    2daa:	6f 92       	push	r6
    2dac:	7f 92       	push	r7
    2dae:	8f 92       	push	r8
    2db0:	9f 92       	push	r9
    2db2:	af 92       	push	r10
    2db4:	bf 92       	push	r11
    2db6:	cf 92       	push	r12
    2db8:	df 92       	push	r13
    2dba:	ef 92       	push	r14
    2dbc:	ff 92       	push	r15
    2dbe:	0f 93       	push	r16
    2dc0:	1f 93       	push	r17
    2dc2:	cf 93       	push	r28
    2dc4:	df 93       	push	r29
    2dc6:	cd b7       	in	r28, 0x3d	; 61
    2dc8:	de b7       	in	r29, 0x3e	; 62
    2dca:	66 97       	sbiw	r28, 0x16	; 22
    2dcc:	0f b6       	in	r0, 0x3f	; 63
    2dce:	f8 94       	cli
    2dd0:	de bf       	out	0x3e, r29	; 62
    2dd2:	0f be       	out	0x3f, r0	; 63
    2dd4:	cd bf       	out	0x3d, r28	; 61
	rtc.RTCstop();
    2dd6:	84 e8       	ldi	r24, 0x84	; 132
    2dd8:	97 e0       	ldi	r25, 0x07	; 7
    2dda:	0e 94 3c 2b 	call	0x5678	; 0x5678 <_ZN3RTC7RTCstopEv>
	
	oled.clearFrame();
    2dde:	83 e8       	ldi	r24, 0x83	; 131
    2de0:	93 e0       	ldi	r25, 0x03	; 3
    2de2:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
    2de6:	91 2c       	mov	r9, r1
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2de8:	0f 2e       	mov	r0, r31
    2dea:	ff e0       	ldi	r31, 0x0F	; 15
    2dec:	6f 2e       	mov	r6, r31
    2dee:	f0 2d       	mov	r31, r0
    2df0:	ce 01       	movw	r24, r28
    2df2:	01 96       	adiw	r24, 0x01	; 1
    2df4:	7c 01       	movw	r14, r24
    2df6:	78 2e       	mov	r7, r24
    2df8:	8f 2c       	mov	r8, r15
    2dfa:	b1 2c       	mov	r11, r1
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2dfc:	8d 8b       	std	Y+21, r24	; 0x15
    2dfe:	fe 8a       	std	Y+22, r15	; 0x16
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2e00:	0f 2e       	mov	r0, r31
    2e02:	fd ec       	ldi	r31, 0xCD	; 205
    2e04:	af 2e       	mov	r10, r31
    2e06:	f0 2d       	mov	r31, r0
		buffer[1]=rtc.Stunden%10;
		buffer[2]=':';
		buffer[3]=rtc.Minuten/10;
		buffer[4]=rtc.Minuten%10;
		buffer[5]=' ';
		buffer[6]=rtc.Tag/10;
    2e08:	0f 2e       	mov	r0, r31
    2e0a:	f8 e9       	ldi	r31, 0x98	; 152
    2e0c:	4f 2e       	mov	r4, r31
    2e0e:	f7 e0       	ldi	r31, 0x07	; 7
    2e10:	5f 2e       	mov	r5, r31
    2e12:	f0 2d       	mov	r31, r0
		buffer[7]=rtc.Tag%10;
		buffer[8]='.';
		buffer[9]=rtc.Monat/10;
    2e14:	0f 2e       	mov	r0, r31
    2e16:	fa e9       	ldi	r31, 0x9A	; 154
    2e18:	cf 2e       	mov	r12, r31
    2e1a:	f7 e0       	ldi	r31, 0x07	; 7
    2e1c:	df 2e       	mov	r13, r31
    2e1e:	f0 2d       	mov	r31, r0
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2e20:	e3 ef       	ldi	r30, 0xF3	; 243
    2e22:	f2 e0       	ldi	r31, 0x02	; 2
    2e24:	a7 2d       	mov	r26, r7
    2e26:	b8 2d       	mov	r27, r8
    2e28:	86 2d       	mov	r24, r6
    2e2a:	01 90       	ld	r0, Z+
    2e2c:	0d 92       	st	X+, r0
    2e2e:	8a 95       	dec	r24
    2e30:	e1 f7       	brne	.-8      	; 0x2e2a <_Z13uhreinstellenv+0x88>
    2e32:	27 2c       	mov	r2, r7
    2e34:	38 2c       	mov	r3, r8
    2e36:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
    2e38:	f1 01       	movw	r30, r2
    2e3a:	61 91       	ld	r22, Z+
    2e3c:	1f 01       	movw	r2, r30
    2e3e:	2b 2d       	mov	r18, r11
    2e40:	41 2f       	mov	r20, r17
    2e42:	83 e8       	ldi	r24, 0x83	; 131
    2e44:	93 e0       	ldi	r25, 0x03	; 3
    2e46:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2e4a:	1a 5f       	subi	r17, 0xFA	; 250
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
    2e4c:	14 35       	cpi	r17, 0x54	; 84
    2e4e:	a1 f7       	brne	.-24     	; 0x2e38 <_Z13uhreinstellenv+0x96>
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2e50:	ef e0       	ldi	r30, 0x0F	; 15
    2e52:	f1 e0       	ldi	r31, 0x01	; 1
    2e54:	a7 2d       	mov	r26, r7
    2e56:	b8 2d       	mov	r27, r8
    2e58:	86 2d       	mov	r24, r6
    2e5a:	01 90       	ld	r0, Z+
    2e5c:	0d 92       	st	X+, r0
    2e5e:	8a 95       	dec	r24
    2e60:	e1 f7       	brne	.-8      	; 0x2e5a <_Z13uhreinstellenv+0xb8>
    2e62:	2d 88       	ldd	r2, Y+21	; 0x15
    2e64:	3e 88       	ldd	r3, Y+22	; 0x16
    2e66:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
    2e68:	f1 01       	movw	r30, r2
    2e6a:	61 91       	ld	r22, Z+
    2e6c:	1f 01       	movw	r2, r30
    2e6e:	28 e0       	ldi	r18, 0x08	; 8
    2e70:	41 2f       	mov	r20, r17
    2e72:	83 e8       	ldi	r24, 0x83	; 131
    2e74:	93 e0       	ldi	r25, 0x03	; 3
    2e76:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2e7a:	1a 5f       	subi	r17, 0xFA	; 250
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
		for(uint8_t i = 0; i<buffersize;i++){
    2e7c:	14 35       	cpi	r17, 0x54	; 84
    2e7e:	a1 f7       	brne	.-24     	; 0x2e68 <_Z13uhreinstellenv+0xc6>
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2e80:	e4 e9       	ldi	r30, 0x94	; 148
    2e82:	f7 e0       	ldi	r31, 0x07	; 7
    2e84:	80 81       	ld	r24, Z
    2e86:	8a 9d       	mul	r24, r10
    2e88:	91 2d       	mov	r25, r1
    2e8a:	11 24       	eor	r1, r1
    2e8c:	96 95       	lsr	r25
    2e8e:	96 95       	lsr	r25
    2e90:	96 95       	lsr	r25
    2e92:	99 83       	std	Y+1, r25	; 0x01
		buffer[1]=rtc.Stunden%10;
    2e94:	99 0f       	add	r25, r25
    2e96:	29 2f       	mov	r18, r25
    2e98:	22 0f       	add	r18, r18
    2e9a:	22 0f       	add	r18, r18
    2e9c:	92 0f       	add	r25, r18
    2e9e:	89 1b       	sub	r24, r25
    2ea0:	8a 83       	std	Y+2, r24	; 0x02
		buffer[2]=':';
    2ea2:	fa e3       	ldi	r31, 0x3A	; 58
    2ea4:	fb 83       	std	Y+3, r31	; 0x03
		buffer[3]=rtc.Minuten/10;
    2ea6:	e5 e9       	ldi	r30, 0x95	; 149
    2ea8:	f7 e0       	ldi	r31, 0x07	; 7
    2eaa:	80 81       	ld	r24, Z
    2eac:	8a 9d       	mul	r24, r10
    2eae:	91 2d       	mov	r25, r1
    2eb0:	11 24       	eor	r1, r1
    2eb2:	96 95       	lsr	r25
    2eb4:	96 95       	lsr	r25
    2eb6:	96 95       	lsr	r25
    2eb8:	9c 83       	std	Y+4, r25	; 0x04
		buffer[4]=rtc.Minuten%10;
    2eba:	99 0f       	add	r25, r25
    2ebc:	29 2f       	mov	r18, r25
    2ebe:	22 0f       	add	r18, r18
    2ec0:	22 0f       	add	r18, r18
    2ec2:	92 0f       	add	r25, r18
    2ec4:	89 1b       	sub	r24, r25
    2ec6:	8d 83       	std	Y+5, r24	; 0x05
		buffer[5]=' ';
    2ec8:	80 e2       	ldi	r24, 0x20	; 32
    2eca:	8e 83       	std	Y+6, r24	; 0x06
		buffer[6]=rtc.Tag/10;
    2ecc:	f2 01       	movw	r30, r4
    2ece:	80 81       	ld	r24, Z
    2ed0:	8a 9d       	mul	r24, r10
    2ed2:	91 2d       	mov	r25, r1
    2ed4:	11 24       	eor	r1, r1
    2ed6:	96 95       	lsr	r25
    2ed8:	96 95       	lsr	r25
    2eda:	96 95       	lsr	r25
    2edc:	9f 83       	std	Y+7, r25	; 0x07
		buffer[7]=rtc.Tag%10;
    2ede:	99 0f       	add	r25, r25
    2ee0:	29 2f       	mov	r18, r25
    2ee2:	22 0f       	add	r18, r18
    2ee4:	22 0f       	add	r18, r18
    2ee6:	92 0f       	add	r25, r18
    2ee8:	89 1b       	sub	r24, r25
    2eea:	88 87       	std	Y+8, r24	; 0x08
		buffer[8]='.';
    2eec:	8e e2       	ldi	r24, 0x2E	; 46
    2eee:	89 87       	std	Y+9, r24	; 0x09
		buffer[9]=rtc.Monat/10;
    2ef0:	f6 01       	movw	r30, r12
    2ef2:	90 81       	ld	r25, Z
    2ef4:	9a 9d       	mul	r25, r10
    2ef6:	21 2d       	mov	r18, r1
    2ef8:	11 24       	eor	r1, r1
    2efa:	26 95       	lsr	r18
    2efc:	26 95       	lsr	r18
    2efe:	26 95       	lsr	r18
    2f00:	2a 87       	std	Y+10, r18	; 0x0a
		buffer[10]=rtc.Monat%10;
    2f02:	22 0f       	add	r18, r18
    2f04:	32 2f       	mov	r19, r18
    2f06:	33 0f       	add	r19, r19
    2f08:	33 0f       	add	r19, r19
    2f0a:	23 0f       	add	r18, r19
    2f0c:	92 1b       	sub	r25, r18
    2f0e:	9b 87       	std	Y+11, r25	; 0x0b
		buffer[11]='.';
    2f10:	8c 87       	std	Y+12, r24	; 0x0c
		buffer[12]=rtc.Jahr/10;
    2f12:	eb e9       	ldi	r30, 0x9B	; 155
    2f14:	f7 e0       	ldi	r31, 0x07	; 7
    2f16:	80 81       	ld	r24, Z
    2f18:	8a 9d       	mul	r24, r10
    2f1a:	91 2d       	mov	r25, r1
    2f1c:	11 24       	eor	r1, r1
    2f1e:	96 95       	lsr	r25
    2f20:	96 95       	lsr	r25
    2f22:	96 95       	lsr	r25
    2f24:	9d 87       	std	Y+13, r25	; 0x0d
		buffer[13]=rtc.Jahr%10;
    2f26:	99 0f       	add	r25, r25
    2f28:	29 2f       	mov	r18, r25
    2f2a:	22 0f       	add	r18, r18
    2f2c:	22 0f       	add	r18, r18
    2f2e:	92 0f       	add	r25, r18
    2f30:	89 1b       	sub	r24, r25
    2f32:	8e 87       	std	Y+14, r24	; 0x0e
    2f34:	3b 2c       	mov	r3, r11
    2f36:	01 e0       	ldi	r16, 0x01	; 1
    2f38:	1b 2d       	mov	r17, r11
    2f3a:	04 c0       	rjmp	.+8      	; 0x2f44 <_Z13uhreinstellenv+0x1a2>
    2f3c:	1f 5f       	subi	r17, 0xFF	; 255
    2f3e:	0f 5f       	subi	r16, 0xFF	; 255
    2f40:	f0 e1       	ldi	r31, 0x10	; 16
    2f42:	3f 0e       	add	r3, r31
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
			if(i!=2){
    2f44:	12 30       	cpi	r17, 0x02	; 2
    2f46:	69 f0       	breq	.+26     	; 0x2f62 <_Z13uhreinstellenv+0x1c0>
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
    2f48:	20 e1       	ldi	r18, 0x10	; 16
    2f4a:	43 2d       	mov	r20, r3
    2f4c:	f7 01       	movw	r30, r14
    2f4e:	e1 0f       	add	r30, r17
    2f50:	f1 1d       	adc	r31, r1
    2f52:	60 81       	ld	r22, Z
    2f54:	83 e8       	ldi	r24, 0x83	; 131
    2f56:	93 e0       	ldi	r25, 0x03	; 3
    2f58:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    2f5c:	05 30       	cpi	r16, 0x05	; 5
    2f5e:	70 f3       	brcs	.-36     	; 0x2f3c <_Z13uhreinstellenv+0x19a>
    2f60:	08 c0       	rjmp	.+16     	; 0x2f72 <_Z13uhreinstellenv+0x1d0>
			if(i!=2){
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
    2f62:	24 e1       	ldi	r18, 0x14	; 20
    2f64:	48 e2       	ldi	r20, 0x28	; 40
    2f66:	6b 81       	ldd	r22, Y+3	; 0x03
    2f68:	83 e8       	ldi	r24, 0x83	; 131
    2f6a:	93 e0       	ldi	r25, 0x03	; 3
    2f6c:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    2f70:	e5 cf       	rjmp	.-54     	; 0x2f3c <_Z13uhreinstellenv+0x19a>
    2f72:	8e 01       	movw	r16, r28
    2f74:	09 5f       	subi	r16, 0xF9	; 249
    2f76:	1f 4f       	sbci	r17, 0xFF	; 255
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    2f78:	2b 2c       	mov	r2, r11
    2f7a:	0f 2e       	mov	r0, r31
    2f7c:	f6 e0       	ldi	r31, 0x06	; 6
    2f7e:	3f 2e       	mov	r3, r31
    2f80:	f0 2d       	mov	r31, r0
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
			if(i!=8 && i!=11){
    2f82:	88 e0       	ldi	r24, 0x08	; 8
    2f84:	38 16       	cp	r3, r24
    2f86:	61 f0       	breq	.+24     	; 0x2fa0 <_Z13uhreinstellenv+0x1fe>
    2f88:	9b e0       	ldi	r25, 0x0B	; 11
    2f8a:	39 16       	cp	r3, r25
    2f8c:	49 f0       	breq	.+18     	; 0x2fa0 <_Z13uhreinstellenv+0x1fe>
				oled.draw_number16x16(buffer[i],i*numbersmalsize-6*numbersmalsize,4*charhighte);
    2f8e:	20 e2       	ldi	r18, 0x20	; 32
    2f90:	42 2d       	mov	r20, r2
    2f92:	f8 01       	movw	r30, r16
    2f94:	60 81       	ld	r22, Z
    2f96:	83 e8       	ldi	r24, 0x83	; 131
    2f98:	93 e0       	ldi	r25, 0x03	; 3
    2f9a:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZN7Display16draw_number16x16Ehhh>
    2f9e:	09 c0       	rjmp	.+18     	; 0x2fb2 <_Z13uhreinstellenv+0x210>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
    2fa0:	28 e2       	ldi	r18, 0x28	; 40
    2fa2:	48 e0       	ldi	r20, 0x08	; 8
    2fa4:	42 0d       	add	r20, r2
    2fa6:	f8 01       	movw	r30, r16
    2fa8:	60 81       	ld	r22, Z
    2faa:	83 e8       	ldi	r24, 0x83	; 131
    2fac:	93 e0       	ldi	r25, 0x03	; 3
    2fae:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
    2fb2:	33 94       	inc	r3
    2fb4:	0f 5f       	subi	r16, 0xFF	; 255
    2fb6:	1f 4f       	sbci	r17, 0xFF	; 255
    2fb8:	f0 e1       	ldi	r31, 0x10	; 16
    2fba:	2f 0e       	add	r2, r31
    2fbc:	8e e0       	ldi	r24, 0x0E	; 14
    2fbe:	38 12       	cpse	r3, r24
    2fc0:	e0 cf       	rjmp	.-64     	; 0x2f82 <_Z13uhreinstellenv+0x1e0>
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
			}
		}

		oled.sendFrame();
    2fc2:	83 e8       	ldi	r24, 0x83	; 131
    2fc4:	93 e0       	ldi	r25, 0x03	; 3
    2fc6:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN7Display9sendFrameEv>
		oled.clearFrame();
    2fca:	83 e8       	ldi	r24, 0x83	; 131
    2fcc:	93 e0       	ldi	r25, 0x03	; 3
    2fce:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
		switch (pos) {
    2fd2:	89 2d       	mov	r24, r9
    2fd4:	90 e0       	ldi	r25, 0x00	; 0
    2fd6:	8a 30       	cpi	r24, 0x0A	; 10
    2fd8:	91 05       	cpc	r25, r1
    2fda:	08 f0       	brcs	.+2      	; 0x2fde <_Z13uhreinstellenv+0x23c>
    2fdc:	47 c2       	rjmp	.+1166   	; 0x346c <_Z13uhreinstellenv+0x6ca>
    2fde:	fc 01       	movw	r30, r24
    2fe0:	ea 5b       	subi	r30, 0xBA	; 186
    2fe2:	ff 4f       	sbci	r31, 0xFF	; 255
    2fe4:	0c 94 62 32 	jmp	0x64c4	; 0x64c4 <__tablejump2__>
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    2fe8:	82 e8       	ldi	r24, 0x82	; 130
    2fea:	93 e0       	ldi	r25, 0x03	; 3
    2fec:	0e 94 98 23 	call	0x4730	; 0x4730 <_ZN9Interface17ZahlenausTastaturEv>
    2ff0:	88 0f       	add	r24, r24
    2ff2:	98 2f       	mov	r25, r24
    2ff4:	99 0f       	add	r25, r25
    2ff6:	99 0f       	add	r25, r25
    2ff8:	89 0f       	add	r24, r25
				if(rtc.Stunden>=24){
    2ffa:	88 31       	cpi	r24, 0x18	; 24
    2ffc:	08 f4       	brcc	.+2      	; 0x3000 <_Z13uhreinstellenv+0x25e>
    2ffe:	51 c2       	rjmp	.+1186   	; 0x34a2 <_Z13uhreinstellenv+0x700>
					rtc.Stunden=0;
    3000:	e4 e9       	ldi	r30, 0x94	; 148
    3002:	f7 e0       	ldi	r31, 0x07	; 7
    3004:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    3006:	e2 e0       	ldi	r30, 0x02	; 2
    3008:	f3 e0       	ldi	r31, 0x03	; 3
    300a:	a7 2d       	mov	r26, r7
    300c:	b8 2d       	mov	r27, r8
    300e:	86 2d       	mov	r24, r6
    3010:	01 90       	ld	r0, Z+
    3012:	0d 92       	st	X+, r0
    3014:	8a 95       	dec	r24
    3016:	e1 f7       	brne	.-8      	; 0x3010 <_Z13uhreinstellenv+0x26e>
    3018:	2d 88       	ldd	r2, Y+21	; 0x15
    301a:	3e 88       	ldd	r3, Y+22	; 0x16
    301c:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    301e:	f1 01       	movw	r30, r2
    3020:	61 91       	ld	r22, Z+
    3022:	1f 01       	movw	r2, r30
    3024:	28 e3       	ldi	r18, 0x38	; 56
    3026:	41 2f       	mov	r20, r17
    3028:	83 e8       	ldi	r24, 0x83	; 131
    302a:	93 e0       	ldi	r25, 0x03	; 3
    302c:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    3030:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3032:	14 35       	cpi	r17, 0x54	; 84
    3034:	a1 f7       	brne	.-24     	; 0x301e <_Z13uhreinstellenv+0x27c>
    3036:	39 c2       	rjmp	.+1138   	; 0x34aa <_Z13uhreinstellenv+0x708>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    3038:	82 e8       	ldi	r24, 0x82	; 130
    303a:	93 e0       	ldi	r25, 0x03	; 3
    303c:	0e 94 98 23 	call	0x4730	; 0x4730 <_ZN9Interface17ZahlenausTastaturEv>
    3040:	e4 e9       	ldi	r30, 0x94	; 148
    3042:	f7 e0       	ldi	r31, 0x07	; 7
    3044:	20 81       	ld	r18, Z
    3046:	90 e0       	ldi	r25, 0x00	; 0
    3048:	82 0f       	add	r24, r18
    304a:	91 1d       	adc	r25, r1
				if(rtc.Stunden>=24){
    304c:	88 31       	cpi	r24, 0x18	; 24
    304e:	10 f4       	brcc	.+4      	; 0x3054 <_Z13uhreinstellenv+0x2b2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    3050:	80 83       	st	Z, r24
    3052:	5e c2       	rjmp	.+1212   	; 0x3510 <_Z13uhreinstellenv+0x76e>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
    3054:	e4 e9       	ldi	r30, 0x94	; 148
    3056:	f7 e0       	ldi	r31, 0x07	; 7
    3058:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    305a:	e2 e0       	ldi	r30, 0x02	; 2
    305c:	f3 e0       	ldi	r31, 0x03	; 3
    305e:	a7 2d       	mov	r26, r7
    3060:	b8 2d       	mov	r27, r8
    3062:	86 2d       	mov	r24, r6
    3064:	01 90       	ld	r0, Z+
    3066:	0d 92       	st	X+, r0
    3068:	8a 95       	dec	r24
    306a:	e1 f7       	brne	.-8      	; 0x3064 <_Z13uhreinstellenv+0x2c2>
    306c:	2d 88       	ldd	r2, Y+21	; 0x15
    306e:	3e 88       	ldd	r3, Y+22	; 0x16
    3070:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3072:	f1 01       	movw	r30, r2
    3074:	61 91       	ld	r22, Z+
    3076:	1f 01       	movw	r2, r30
    3078:	28 e3       	ldi	r18, 0x38	; 56
    307a:	41 2f       	mov	r20, r17
    307c:	83 e8       	ldi	r24, 0x83	; 131
    307e:	93 e0       	ldi	r25, 0x03	; 3
    3080:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    3084:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3086:	14 35       	cpi	r17, 0x54	; 84
    3088:	a1 f7       	brne	.-24     	; 0x3072 <_Z13uhreinstellenv+0x2d0>
    308a:	12 c2       	rjmp	.+1060   	; 0x34b0 <_Z13uhreinstellenv+0x70e>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    308c:	82 e8       	ldi	r24, 0x82	; 130
    308e:	93 e0       	ldi	r25, 0x03	; 3
    3090:	0e 94 98 23 	call	0x4730	; 0x4730 <_ZN9Interface17ZahlenausTastaturEv>
    3094:	88 0f       	add	r24, r24
    3096:	98 2f       	mov	r25, r24
    3098:	99 0f       	add	r25, r25
    309a:	99 0f       	add	r25, r25
    309c:	89 0f       	add	r24, r25
				if(rtc.Minuten>=60){
    309e:	8c 33       	cpi	r24, 0x3C	; 60
    30a0:	20 f4       	brcc	.+8      	; 0x30aa <_Z13uhreinstellenv+0x308>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    30a2:	e5 e9       	ldi	r30, 0x95	; 149
    30a4:	f7 e0       	ldi	r31, 0x07	; 7
    30a6:	80 83       	st	Z, r24
    30a8:	33 c2       	rjmp	.+1126   	; 0x3510 <_Z13uhreinstellenv+0x76e>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    30aa:	e5 e9       	ldi	r30, 0x95	; 149
    30ac:	f7 e0       	ldi	r31, 0x07	; 7
    30ae:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    30b0:	e1 e1       	ldi	r30, 0x11	; 17
    30b2:	f3 e0       	ldi	r31, 0x03	; 3
    30b4:	a7 2d       	mov	r26, r7
    30b6:	b8 2d       	mov	r27, r8
    30b8:	86 2d       	mov	r24, r6
    30ba:	01 90       	ld	r0, Z+
    30bc:	0d 92       	st	X+, r0
    30be:	8a 95       	dec	r24
    30c0:	e1 f7       	brne	.-8      	; 0x30ba <_Z13uhreinstellenv+0x318>
    30c2:	2d 88       	ldd	r2, Y+21	; 0x15
    30c4:	3e 88       	ldd	r3, Y+22	; 0x16
    30c6:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    30c8:	f1 01       	movw	r30, r2
    30ca:	61 91       	ld	r22, Z+
    30cc:	1f 01       	movw	r2, r30
    30ce:	28 e3       	ldi	r18, 0x38	; 56
    30d0:	41 2f       	mov	r20, r17
    30d2:	83 e8       	ldi	r24, 0x83	; 131
    30d4:	93 e0       	ldi	r25, 0x03	; 3
    30d6:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    30da:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    30dc:	14 35       	cpi	r17, 0x54	; 84
    30de:	a1 f7       	brne	.-24     	; 0x30c8 <_Z13uhreinstellenv+0x326>
    30e0:	ea c1       	rjmp	.+980    	; 0x34b6 <_Z13uhreinstellenv+0x714>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    30e2:	82 e8       	ldi	r24, 0x82	; 130
    30e4:	93 e0       	ldi	r25, 0x03	; 3
    30e6:	0e 94 98 23 	call	0x4730	; 0x4730 <_ZN9Interface17ZahlenausTastaturEv>
    30ea:	e5 e9       	ldi	r30, 0x95	; 149
    30ec:	f7 e0       	ldi	r31, 0x07	; 7
    30ee:	20 81       	ld	r18, Z
    30f0:	90 e0       	ldi	r25, 0x00	; 0
    30f2:	82 0f       	add	r24, r18
    30f4:	91 1d       	adc	r25, r1
				if(rtc.Minuten>=60){
    30f6:	8c 33       	cpi	r24, 0x3C	; 60
    30f8:	10 f4       	brcc	.+4      	; 0x30fe <_Z13uhreinstellenv+0x35c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    30fa:	80 83       	st	Z, r24
    30fc:	09 c2       	rjmp	.+1042   	; 0x3510 <_Z13uhreinstellenv+0x76e>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    30fe:	e5 e9       	ldi	r30, 0x95	; 149
    3100:	f7 e0       	ldi	r31, 0x07	; 7
    3102:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    3104:	e1 e1       	ldi	r30, 0x11	; 17
    3106:	f3 e0       	ldi	r31, 0x03	; 3
    3108:	a7 2d       	mov	r26, r7
    310a:	b8 2d       	mov	r27, r8
    310c:	86 2d       	mov	r24, r6
    310e:	01 90       	ld	r0, Z+
    3110:	0d 92       	st	X+, r0
    3112:	8a 95       	dec	r24
    3114:	e1 f7       	brne	.-8      	; 0x310e <_Z13uhreinstellenv+0x36c>
    3116:	2d 88       	ldd	r2, Y+21	; 0x15
    3118:	3e 88       	ldd	r3, Y+22	; 0x16
    311a:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    311c:	f1 01       	movw	r30, r2
    311e:	61 91       	ld	r22, Z+
    3120:	1f 01       	movw	r2, r30
    3122:	28 e3       	ldi	r18, 0x38	; 56
    3124:	41 2f       	mov	r20, r17
    3126:	83 e8       	ldi	r24, 0x83	; 131
    3128:	93 e0       	ldi	r25, 0x03	; 3
    312a:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    312e:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3130:	14 35       	cpi	r17, 0x54	; 84
    3132:	a1 f7       	brne	.-24     	; 0x311c <_Z13uhreinstellenv+0x37a>
    3134:	c3 c1       	rjmp	.+902    	; 0x34bc <_Z13uhreinstellenv+0x71a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    3136:	82 e8       	ldi	r24, 0x82	; 130
    3138:	93 e0       	ldi	r25, 0x03	; 3
    313a:	0e 94 98 23 	call	0x4730	; 0x4730 <_ZN9Interface17ZahlenausTastaturEv>
    313e:	88 0f       	add	r24, r24
    3140:	98 2f       	mov	r25, r24
    3142:	99 0f       	add	r25, r25
    3144:	99 0f       	add	r25, r25
    3146:	89 0f       	add	r24, r25
				if(rtc.Tag>=32){
    3148:	80 32       	cpi	r24, 0x20	; 32
    314a:	18 f4       	brcc	.+6      	; 0x3152 <_Z13uhreinstellenv+0x3b0>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    314c:	f2 01       	movw	r30, r4
    314e:	80 83       	st	Z, r24
    3150:	df c1       	rjmp	.+958    	; 0x3510 <_Z13uhreinstellenv+0x76e>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    3152:	f2 01       	movw	r30, r4
    3154:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    3156:	8b e0       	ldi	r24, 0x0B	; 11
    3158:	e0 e2       	ldi	r30, 0x20	; 32
    315a:	f3 e0       	ldi	r31, 0x03	; 3
    315c:	a7 2d       	mov	r26, r7
    315e:	b8 2d       	mov	r27, r8
    3160:	01 90       	ld	r0, Z+
    3162:	0d 92       	st	X+, r0
    3164:	8a 95       	dec	r24
    3166:	e1 f7       	brne	.-8      	; 0x3160 <_Z13uhreinstellenv+0x3be>
    3168:	2d 88       	ldd	r2, Y+21	; 0x15
    316a:	3e 88       	ldd	r3, Y+22	; 0x16
    316c:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    316e:	f1 01       	movw	r30, r2
    3170:	61 91       	ld	r22, Z+
    3172:	1f 01       	movw	r2, r30
    3174:	28 e3       	ldi	r18, 0x38	; 56
    3176:	41 2f       	mov	r20, r17
    3178:	83 e8       	ldi	r24, 0x83	; 131
    317a:	93 e0       	ldi	r25, 0x03	; 3
    317c:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    3180:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3182:	1c 33       	cpi	r17, 0x3C	; 60
    3184:	a1 f7       	brne	.-24     	; 0x316e <_Z13uhreinstellenv+0x3cc>
    3186:	9d c1       	rjmp	.+826    	; 0x34c2 <_Z13uhreinstellenv+0x720>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    3188:	82 e8       	ldi	r24, 0x82	; 130
    318a:	93 e0       	ldi	r25, 0x03	; 3
    318c:	0e 94 98 23 	call	0x4730	; 0x4730 <_ZN9Interface17ZahlenausTastaturEv>
    3190:	f2 01       	movw	r30, r4
    3192:	20 81       	ld	r18, Z
    3194:	90 e0       	ldi	r25, 0x00	; 0
    3196:	82 0f       	add	r24, r18
    3198:	91 1d       	adc	r25, r1
				if(rtc.Tag>=32){
    319a:	80 32       	cpi	r24, 0x20	; 32
    319c:	10 f4       	brcc	.+4      	; 0x31a2 <_Z13uhreinstellenv+0x400>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    319e:	80 83       	st	Z, r24
    31a0:	b7 c1       	rjmp	.+878    	; 0x3510 <_Z13uhreinstellenv+0x76e>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    31a2:	f2 01       	movw	r30, r4
    31a4:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    31a6:	8b e0       	ldi	r24, 0x0B	; 11
    31a8:	e0 e2       	ldi	r30, 0x20	; 32
    31aa:	f3 e0       	ldi	r31, 0x03	; 3
    31ac:	a7 2d       	mov	r26, r7
    31ae:	b8 2d       	mov	r27, r8
    31b0:	01 90       	ld	r0, Z+
    31b2:	0d 92       	st	X+, r0
    31b4:	8a 95       	dec	r24
    31b6:	e1 f7       	brne	.-8      	; 0x31b0 <_Z13uhreinstellenv+0x40e>
    31b8:	2d 88       	ldd	r2, Y+21	; 0x15
    31ba:	3e 88       	ldd	r3, Y+22	; 0x16
    31bc:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    31be:	f1 01       	movw	r30, r2
    31c0:	61 91       	ld	r22, Z+
    31c2:	1f 01       	movw	r2, r30
    31c4:	28 e3       	ldi	r18, 0x38	; 56
    31c6:	41 2f       	mov	r20, r17
    31c8:	83 e8       	ldi	r24, 0x83	; 131
    31ca:	93 e0       	ldi	r25, 0x03	; 3
    31cc:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    31d0:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    31d2:	1c 33       	cpi	r17, 0x3C	; 60
    31d4:	a1 f7       	brne	.-24     	; 0x31be <_Z13uhreinstellenv+0x41c>
    31d6:	7a c1       	rjmp	.+756    	; 0x34cc <_Z13uhreinstellenv+0x72a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    31d8:	82 e8       	ldi	r24, 0x82	; 130
    31da:	93 e0       	ldi	r25, 0x03	; 3
    31dc:	0e 94 98 23 	call	0x4730	; 0x4730 <_ZN9Interface17ZahlenausTastaturEv>
    31e0:	88 0f       	add	r24, r24
    31e2:	98 2f       	mov	r25, r24
    31e4:	99 0f       	add	r25, r25
    31e6:	99 0f       	add	r25, r25
    31e8:	89 0f       	add	r24, r25
				if(rtc.Monat>=13){
    31ea:	8d 30       	cpi	r24, 0x0D	; 13
    31ec:	18 f4       	brcc	.+6      	; 0x31f4 <_Z13uhreinstellenv+0x452>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    31ee:	f6 01       	movw	r30, r12
    31f0:	80 83       	st	Z, r24
    31f2:	8e c1       	rjmp	.+796    	; 0x3510 <_Z13uhreinstellenv+0x76e>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    31f4:	f6 01       	movw	r30, r12
    31f6:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    31f8:	8d e0       	ldi	r24, 0x0D	; 13
    31fa:	eb e2       	ldi	r30, 0x2B	; 43
    31fc:	f3 e0       	ldi	r31, 0x03	; 3
    31fe:	a7 2d       	mov	r26, r7
    3200:	b8 2d       	mov	r27, r8
    3202:	01 90       	ld	r0, Z+
    3204:	0d 92       	st	X+, r0
    3206:	8a 95       	dec	r24
    3208:	e1 f7       	brne	.-8      	; 0x3202 <_Z13uhreinstellenv+0x460>
    320a:	2d 88       	ldd	r2, Y+21	; 0x15
    320c:	3e 88       	ldd	r3, Y+22	; 0x16
    320e:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3210:	f1 01       	movw	r30, r2
    3212:	61 91       	ld	r22, Z+
    3214:	1f 01       	movw	r2, r30
    3216:	28 e3       	ldi	r18, 0x38	; 56
    3218:	41 2f       	mov	r20, r17
    321a:	83 e8       	ldi	r24, 0x83	; 131
    321c:	93 e0       	ldi	r25, 0x03	; 3
    321e:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    3222:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3224:	18 34       	cpi	r17, 0x48	; 72
    3226:	a1 f7       	brne	.-24     	; 0x3210 <_Z13uhreinstellenv+0x46e>
    3228:	56 c1       	rjmp	.+684    	; 0x34d6 <_Z13uhreinstellenv+0x734>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    322a:	82 e8       	ldi	r24, 0x82	; 130
    322c:	93 e0       	ldi	r25, 0x03	; 3
    322e:	0e 94 98 23 	call	0x4730	; 0x4730 <_ZN9Interface17ZahlenausTastaturEv>
    3232:	f6 01       	movw	r30, r12
    3234:	20 81       	ld	r18, Z
    3236:	90 e0       	ldi	r25, 0x00	; 0
    3238:	82 0f       	add	r24, r18
    323a:	91 1d       	adc	r25, r1
				if(rtc.Monat>=13){
    323c:	8d 30       	cpi	r24, 0x0D	; 13
    323e:	10 f4       	brcc	.+4      	; 0x3244 <_Z13uhreinstellenv+0x4a2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    3240:	80 83       	st	Z, r24
    3242:	1e c0       	rjmp	.+60     	; 0x3280 <_Z13uhreinstellenv+0x4de>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    3244:	f6 01       	movw	r30, r12
    3246:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    3248:	8d e0       	ldi	r24, 0x0D	; 13
    324a:	eb e2       	ldi	r30, 0x2B	; 43
    324c:	f3 e0       	ldi	r31, 0x03	; 3
    324e:	a7 2d       	mov	r26, r7
    3250:	b8 2d       	mov	r27, r8
    3252:	01 90       	ld	r0, Z+
    3254:	0d 92       	st	X+, r0
    3256:	8a 95       	dec	r24
    3258:	e1 f7       	brne	.-8      	; 0x3252 <_Z13uhreinstellenv+0x4b0>
    325a:	2d 88       	ldd	r2, Y+21	; 0x15
    325c:	3e 88       	ldd	r3, Y+22	; 0x16
    325e:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3260:	f1 01       	movw	r30, r2
    3262:	61 91       	ld	r22, Z+
    3264:	1f 01       	movw	r2, r30
    3266:	28 e3       	ldi	r18, 0x38	; 56
    3268:	41 2f       	mov	r20, r17
    326a:	83 e8       	ldi	r24, 0x83	; 131
    326c:	93 e0       	ldi	r25, 0x03	; 3
    326e:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    3272:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3274:	18 34       	cpi	r17, 0x48	; 72
    3276:	a1 f7       	brne	.-24     	; 0x3260 <_Z13uhreinstellenv+0x4be>
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    3278:	0f 2e       	mov	r0, r31
    327a:	f5 e0       	ldi	r31, 0x05	; 5
    327c:	9f 2e       	mov	r9, r31
    327e:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
    3280:	f6 01       	movw	r30, r12
    3282:	90 81       	ld	r25, Z
    3284:	89 2f       	mov	r24, r25
    3286:	8d 7f       	andi	r24, 0xFD	; 253
    3288:	84 30       	cpi	r24, 0x04	; 4
    328a:	11 f0       	breq	.+4      	; 0x3290 <_Z13uhreinstellenv+0x4ee>
    328c:	89 30       	cpi	r24, 0x09	; 9
    328e:	09 f5       	brne	.+66     	; 0x32d2 <_Z13uhreinstellenv+0x530>
					if(rtc.Tag>=31){
    3290:	f2 01       	movw	r30, r4
    3292:	80 81       	ld	r24, Z
    3294:	8f 31       	cpi	r24, 0x1F	; 31
    3296:	08 f4       	brcc	.+2      	; 0x329a <_Z13uhreinstellenv+0x4f8>
    3298:	ea c0       	rjmp	.+468    	; 0x346e <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    329a:	10 82       	st	Z, r1
						rtc.Monat=0;
    329c:	f6 01       	movw	r30, r12
    329e:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    32a0:	8b e0       	ldi	r24, 0x0B	; 11
    32a2:	e0 e2       	ldi	r30, 0x20	; 32
    32a4:	f3 e0       	ldi	r31, 0x03	; 3
    32a6:	a7 2d       	mov	r26, r7
    32a8:	b8 2d       	mov	r27, r8
    32aa:	01 90       	ld	r0, Z+
    32ac:	0d 92       	st	X+, r0
    32ae:	8a 95       	dec	r24
    32b0:	e1 f7       	brne	.-8      	; 0x32aa <_Z13uhreinstellenv+0x508>
    32b2:	2d 88       	ldd	r2, Y+21	; 0x15
    32b4:	3e 88       	ldd	r3, Y+22	; 0x16
    32b6:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    32b8:	f1 01       	movw	r30, r2
    32ba:	61 91       	ld	r22, Z+
    32bc:	1f 01       	movw	r2, r30
    32be:	28 e3       	ldi	r18, 0x38	; 56
    32c0:	41 2f       	mov	r20, r17
    32c2:	83 e8       	ldi	r24, 0x83	; 131
    32c4:	93 e0       	ldi	r25, 0x03	; 3
    32c6:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    32ca:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    32cc:	1c 33       	cpi	r17, 0x3C	; 60
    32ce:	a1 f7       	brne	.-24     	; 0x32b8 <_Z13uhreinstellenv+0x516>
    32d0:	07 c1       	rjmp	.+526    	; 0x34e0 <_Z13uhreinstellenv+0x73e>
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
						}
					}
				}
				else if(rtc.Monat==2){
    32d2:	92 30       	cpi	r25, 0x02	; 2
    32d4:	09 f0       	breq	.+2      	; 0x32d8 <_Z13uhreinstellenv+0x536>
    32d6:	cb c0       	rjmp	.+406    	; 0x346e <_Z13uhreinstellenv+0x6cc>
					if(rtc.Tag>=30){
    32d8:	f2 01       	movw	r30, r4
    32da:	80 81       	ld	r24, Z
    32dc:	8e 31       	cpi	r24, 0x1E	; 30
    32de:	08 f4       	brcc	.+2      	; 0x32e2 <_Z13uhreinstellenv+0x540>
    32e0:	c6 c0       	rjmp	.+396    	; 0x346e <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    32e2:	10 82       	st	Z, r1
						rtc.Monat=0;
    32e4:	f6 01       	movw	r30, r12
    32e6:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    32e8:	8b e0       	ldi	r24, 0x0B	; 11
    32ea:	e0 e2       	ldi	r30, 0x20	; 32
    32ec:	f3 e0       	ldi	r31, 0x03	; 3
    32ee:	a7 2d       	mov	r26, r7
    32f0:	b8 2d       	mov	r27, r8
    32f2:	01 90       	ld	r0, Z+
    32f4:	0d 92       	st	X+, r0
    32f6:	8a 95       	dec	r24
    32f8:	e1 f7       	brne	.-8      	; 0x32f2 <_Z13uhreinstellenv+0x550>
    32fa:	2d 88       	ldd	r2, Y+21	; 0x15
    32fc:	3e 88       	ldd	r3, Y+22	; 0x16
    32fe:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3300:	f1 01       	movw	r30, r2
    3302:	61 91       	ld	r22, Z+
    3304:	1f 01       	movw	r2, r30
    3306:	28 e3       	ldi	r18, 0x38	; 56
    3308:	41 2f       	mov	r20, r17
    330a:	83 e8       	ldi	r24, 0x83	; 131
    330c:	93 e0       	ldi	r25, 0x03	; 3
    330e:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    3312:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    3314:	1c 33       	cpi	r17, 0x3C	; 60
    3316:	a1 f7       	brne	.-24     	; 0x3300 <_Z13uhreinstellenv+0x55e>
    3318:	e8 c0       	rjmp	.+464    	; 0x34ea <_Z13uhreinstellenv+0x748>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    331a:	82 e8       	ldi	r24, 0x82	; 130
    331c:	93 e0       	ldi	r25, 0x03	; 3
    331e:	0e 94 98 23 	call	0x4730	; 0x4730 <_ZN9Interface17ZahlenausTastaturEv>
    3322:	88 0f       	add	r24, r24
    3324:	98 2f       	mov	r25, r24
    3326:	99 0f       	add	r25, r25
    3328:	99 0f       	add	r25, r25
    332a:	89 0f       	add	r24, r25
				if(rtc.Jahr>=50){
    332c:	82 33       	cpi	r24, 0x32	; 50
    332e:	20 f4       	brcc	.+8      	; 0x3338 <_Z13uhreinstellenv+0x596>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    3330:	eb e9       	ldi	r30, 0x9B	; 155
    3332:	f7 e0       	ldi	r31, 0x07	; 7
    3334:	80 83       	st	Z, r24
    3336:	ec c0       	rjmp	.+472    	; 0x3510 <_Z13uhreinstellenv+0x76e>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    3338:	eb e9       	ldi	r30, 0x9B	; 155
    333a:	f7 e0       	ldi	r31, 0x07	; 7
    333c:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    333e:	8c e0       	ldi	r24, 0x0C	; 12
    3340:	e8 e3       	ldi	r30, 0x38	; 56
    3342:	f3 e0       	ldi	r31, 0x03	; 3
    3344:	a7 2d       	mov	r26, r7
    3346:	b8 2d       	mov	r27, r8
    3348:	01 90       	ld	r0, Z+
    334a:	0d 92       	st	X+, r0
    334c:	8a 95       	dec	r24
    334e:	e1 f7       	brne	.-8      	; 0x3348 <_Z13uhreinstellenv+0x5a6>
    3350:	2d 88       	ldd	r2, Y+21	; 0x15
    3352:	3e 88       	ldd	r3, Y+22	; 0x16
    3354:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3356:	f1 01       	movw	r30, r2
    3358:	61 91       	ld	r22, Z+
    335a:	1f 01       	movw	r2, r30
    335c:	28 e3       	ldi	r18, 0x38	; 56
    335e:	41 2f       	mov	r20, r17
    3360:	83 e8       	ldi	r24, 0x83	; 131
    3362:	93 e0       	ldi	r25, 0x03	; 3
    3364:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    3368:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    336a:	12 34       	cpi	r17, 0x42	; 66
    336c:	a1 f7       	brne	.-24     	; 0x3356 <_Z13uhreinstellenv+0x5b4>
    336e:	c2 c0       	rjmp	.+388    	; 0x34f4 <_Z13uhreinstellenv+0x752>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    3370:	82 e8       	ldi	r24, 0x82	; 130
    3372:	93 e0       	ldi	r25, 0x03	; 3
    3374:	0e 94 98 23 	call	0x4730	; 0x4730 <_ZN9Interface17ZahlenausTastaturEv>
    3378:	eb e9       	ldi	r30, 0x9B	; 155
    337a:	f7 e0       	ldi	r31, 0x07	; 7
    337c:	20 81       	ld	r18, Z
    337e:	90 e0       	ldi	r25, 0x00	; 0
    3380:	82 0f       	add	r24, r18
    3382:	91 1d       	adc	r25, r1
				if(rtc.Jahr>=50){
    3384:	82 33       	cpi	r24, 0x32	; 50
    3386:	10 f4       	brcc	.+4      	; 0x338c <_Z13uhreinstellenv+0x5ea>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    3388:	80 83       	st	Z, r24
    338a:	1f c0       	rjmp	.+62     	; 0x33ca <_Z13uhreinstellenv+0x628>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    338c:	eb e9       	ldi	r30, 0x9B	; 155
    338e:	f7 e0       	ldi	r31, 0x07	; 7
    3390:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    3392:	8c e0       	ldi	r24, 0x0C	; 12
    3394:	e8 e3       	ldi	r30, 0x38	; 56
    3396:	f3 e0       	ldi	r31, 0x03	; 3
    3398:	a7 2d       	mov	r26, r7
    339a:	b8 2d       	mov	r27, r8
    339c:	01 90       	ld	r0, Z+
    339e:	0d 92       	st	X+, r0
    33a0:	8a 95       	dec	r24
    33a2:	e1 f7       	brne	.-8      	; 0x339c <_Z13uhreinstellenv+0x5fa>
    33a4:	2d 88       	ldd	r2, Y+21	; 0x15
    33a6:	3e 88       	ldd	r3, Y+22	; 0x16
    33a8:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    33aa:	f1 01       	movw	r30, r2
    33ac:	61 91       	ld	r22, Z+
    33ae:	1f 01       	movw	r2, r30
    33b0:	28 e3       	ldi	r18, 0x38	; 56
    33b2:	41 2f       	mov	r20, r17
    33b4:	83 e8       	ldi	r24, 0x83	; 131
    33b6:	93 e0       	ldi	r25, 0x03	; 3
    33b8:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    33bc:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    33be:	12 34       	cpi	r17, 0x42	; 66
    33c0:	a1 f7       	brne	.-24     	; 0x33aa <_Z13uhreinstellenv+0x608>
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    33c2:	0f 2e       	mov	r0, r31
    33c4:	f7 e0       	ldi	r31, 0x07	; 7
    33c6:	9f 2e       	mov	r9, r31
    33c8:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==2){
    33ca:	f6 01       	movw	r30, r12
    33cc:	80 81       	ld	r24, Z
    33ce:	82 30       	cpi	r24, 0x02	; 2
    33d0:	09 f0       	breq	.+2      	; 0x33d4 <_Z13uhreinstellenv+0x632>
    33d2:	4d c0       	rjmp	.+154    	; 0x346e <_Z13uhreinstellenv+0x6cc>
					if(rtc.Jahr%4==0){
    33d4:	eb e9       	ldi	r30, 0x9B	; 155
    33d6:	f7 e0       	ldi	r31, 0x07	; 7
    33d8:	80 81       	ld	r24, Z
    33da:	83 70       	andi	r24, 0x03	; 3
    33dc:	21 f5       	brne	.+72     	; 0x3426 <_Z13uhreinstellenv+0x684>
						if (rtc.Tag>=30)
    33de:	f2 01       	movw	r30, r4
    33e0:	80 81       	ld	r24, Z
    33e2:	8e 31       	cpi	r24, 0x1E	; 30
    33e4:	08 f4       	brcc	.+2      	; 0x33e8 <_Z13uhreinstellenv+0x646>
    33e6:	43 c0       	rjmp	.+134    	; 0x346e <_Z13uhreinstellenv+0x6cc>
						{
							rtc.Tag=0;
    33e8:	10 82       	st	Z, r1
							rtc.Monat=0;
    33ea:	f6 01       	movw	r30, r12
    33ec:	10 82       	st	Z, r1
							rtc.Jahr=0;
    33ee:	eb e9       	ldi	r30, 0x9B	; 155
    33f0:	f7 e0       	ldi	r31, 0x07	; 7
    33f2:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    33f4:	8b e0       	ldi	r24, 0x0B	; 11
    33f6:	e0 e2       	ldi	r30, 0x20	; 32
    33f8:	f3 e0       	ldi	r31, 0x03	; 3
    33fa:	a7 2d       	mov	r26, r7
    33fc:	b8 2d       	mov	r27, r8
    33fe:	01 90       	ld	r0, Z+
    3400:	0d 92       	st	X+, r0
    3402:	8a 95       	dec	r24
    3404:	e1 f7       	brne	.-8      	; 0x33fe <_Z13uhreinstellenv+0x65c>
    3406:	2d 88       	ldd	r2, Y+21	; 0x15
    3408:	3e 88       	ldd	r3, Y+22	; 0x16
    340a:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    340c:	f1 01       	movw	r30, r2
    340e:	61 91       	ld	r22, Z+
    3410:	1f 01       	movw	r2, r30
    3412:	28 e3       	ldi	r18, 0x38	; 56
    3414:	41 2f       	mov	r20, r17
    3416:	83 e8       	ldi	r24, 0x83	; 131
    3418:	93 e0       	ldi	r25, 0x03	; 3
    341a:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    341e:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    3420:	1c 33       	cpi	r17, 0x3C	; 60
    3422:	a1 f7       	brne	.-24     	; 0x340c <_Z13uhreinstellenv+0x66a>
    3424:	6c c0       	rjmp	.+216    	; 0x34fe <_Z13uhreinstellenv+0x75c>
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
							}
						}
					}
					else{
						if(rtc.Tag>=29){
    3426:	f2 01       	movw	r30, r4
    3428:	80 81       	ld	r24, Z
    342a:	8d 31       	cpi	r24, 0x1D	; 29
    342c:	00 f1       	brcs	.+64     	; 0x346e <_Z13uhreinstellenv+0x6cc>
							rtc.Tag=0;
    342e:	10 82       	st	Z, r1
							rtc.Monat=0;
    3430:	f6 01       	movw	r30, r12
    3432:	10 82       	st	Z, r1
							rtc.Jahr=0;
    3434:	eb e9       	ldi	r30, 0x9B	; 155
    3436:	f7 e0       	ldi	r31, 0x07	; 7
    3438:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    343a:	8b e0       	ldi	r24, 0x0B	; 11
    343c:	e0 e2       	ldi	r30, 0x20	; 32
    343e:	f3 e0       	ldi	r31, 0x03	; 3
    3440:	a7 2d       	mov	r26, r7
    3442:	b8 2d       	mov	r27, r8
    3444:	01 90       	ld	r0, Z+
    3446:	0d 92       	st	X+, r0
    3448:	8a 95       	dec	r24
    344a:	e1 f7       	brne	.-8      	; 0x3444 <_Z13uhreinstellenv+0x6a2>
    344c:	2d 88       	ldd	r2, Y+21	; 0x15
    344e:	3e 88       	ldd	r3, Y+22	; 0x16
    3450:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3452:	f1 01       	movw	r30, r2
    3454:	61 91       	ld	r22, Z+
    3456:	1f 01       	movw	r2, r30
    3458:	28 e3       	ldi	r18, 0x38	; 56
    345a:	41 2f       	mov	r20, r17
    345c:	83 e8       	ldi	r24, 0x83	; 131
    345e:	93 e0       	ldi	r25, 0x03	; 3
    3460:	0e 94 c8 05 	call	0xb90	; 0xb90 <_ZN7Display9draw_ASCIEhhh>
    3464:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    3466:	1c 33       	cpi	r17, 0x3C	; 60
    3468:	a1 f7       	brne	.-24     	; 0x3452 <_Z13uhreinstellenv+0x6b0>
    346a:	4e c0       	rjmp	.+156    	; 0x3508 <_Z13uhreinstellenv+0x766>
						}
					}
				}
				break;
			default:
				pos++;
    346c:	93 94       	inc	r9
				break;
		}
		pos++;
    346e:	93 94       	inc	r9
	
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
    3470:	fa e0       	ldi	r31, 0x0A	; 10
    3472:	f9 15       	cp	r31, r9
    3474:	08 f0       	brcs	.+2      	; 0x3478 <_Z13uhreinstellenv+0x6d6>
    3476:	d4 cc       	rjmp	.-1624   	; 0x2e20 <_Z13uhreinstellenv+0x7e>
				break;
		}
		pos++;
	}
	
	rtc.Sekunden		= 0;
    3478:	10 92 96 07 	sts	0x0796, r1
	rtc.HundSekunden	= 0;
    347c:	10 92 97 07 	sts	0x0797, r1
	oled.clearFrame();
    3480:	83 e8       	ldi	r24, 0x83	; 131
    3482:	93 e0       	ldi	r25, 0x03	; 3
    3484:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	rtc.ausgabedatumneu();
    3488:	84 e8       	ldi	r24, 0x84	; 132
    348a:	97 e0       	ldi	r25, 0x07	; 7
    348c:	0e 94 2f 2a 	call	0x545e	; 0x545e <_ZN3RTC15ausgabedatumneuEv>
	rtc.ausgabezeitneu();
    3490:	84 e8       	ldi	r24, 0x84	; 132
    3492:	97 e0       	ldi	r25, 0x07	; 7
    3494:	0e 94 f6 29 	call	0x53ec	; 0x53ec <_ZN3RTC14ausgabezeitneuEv>
	rtc.RTCstart();
    3498:	84 e8       	ldi	r24, 0x84	; 132
    349a:	97 e0       	ldi	r25, 0x07	; 7
    349c:	0e 94 23 2b 	call	0x5646	; 0x5646 <_ZN3RTC8RTCstartEv>
    34a0:	39 c0       	rjmp	.+114    	; 0x3514 <_Z13uhreinstellenv+0x772>

		oled.sendFrame();
		oled.clearFrame();
		switch (pos) {
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    34a2:	e4 e9       	ldi	r30, 0x94	; 148
    34a4:	f7 e0       	ldi	r31, 0x07	; 7
    34a6:	80 83       	st	Z, r24
    34a8:	33 c0       	rjmp	.+102    	; 0x3510 <_Z13uhreinstellenv+0x76e>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    34aa:	99 24       	eor	r9, r9
    34ac:	9a 94       	dec	r9
    34ae:	30 c0       	rjmp	.+96     	; 0x3510 <_Z13uhreinstellenv+0x76e>
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    34b0:	99 24       	eor	r9, r9
    34b2:	9a 94       	dec	r9
    34b4:	2d c0       	rjmp	.+90     	; 0x3510 <_Z13uhreinstellenv+0x76e>
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    34b6:	99 24       	eor	r9, r9
    34b8:	93 94       	inc	r9
    34ba:	2a c0       	rjmp	.+84     	; 0x3510 <_Z13uhreinstellenv+0x76e>
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    34bc:	99 24       	eor	r9, r9
    34be:	93 94       	inc	r9
    34c0:	27 c0       	rjmp	.+78     	; 0x3510 <_Z13uhreinstellenv+0x76e>
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    34c2:	0f 2e       	mov	r0, r31
    34c4:	f3 e0       	ldi	r31, 0x03	; 3
    34c6:	9f 2e       	mov	r9, r31
    34c8:	f0 2d       	mov	r31, r0
    34ca:	22 c0       	rjmp	.+68     	; 0x3510 <_Z13uhreinstellenv+0x76e>
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    34cc:	0f 2e       	mov	r0, r31
    34ce:	f3 e0       	ldi	r31, 0x03	; 3
    34d0:	9f 2e       	mov	r9, r31
    34d2:	f0 2d       	mov	r31, r0
    34d4:	1d c0       	rjmp	.+58     	; 0x3510 <_Z13uhreinstellenv+0x76e>
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    34d6:	0f 2e       	mov	r0, r31
    34d8:	f5 e0       	ldi	r31, 0x05	; 5
    34da:	9f 2e       	mov	r9, r31
    34dc:	f0 2d       	mov	r31, r0
    34de:	18 c0       	rjmp	.+48     	; 0x3510 <_Z13uhreinstellenv+0x76e>
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    34e0:	0f 2e       	mov	r0, r31
    34e2:	f3 e0       	ldi	r31, 0x03	; 3
    34e4:	9f 2e       	mov	r9, r31
    34e6:	f0 2d       	mov	r31, r0
    34e8:	13 c0       	rjmp	.+38     	; 0x3510 <_Z13uhreinstellenv+0x76e>
				}
				else if(rtc.Monat==2){
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    34ea:	0f 2e       	mov	r0, r31
    34ec:	f3 e0       	ldi	r31, 0x03	; 3
    34ee:	9f 2e       	mov	r9, r31
    34f0:	f0 2d       	mov	r31, r0
    34f2:	0e c0       	rjmp	.+28     	; 0x3510 <_Z13uhreinstellenv+0x76e>
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    34f4:	0f 2e       	mov	r0, r31
    34f6:	f7 e0       	ldi	r31, 0x07	; 7
    34f8:	9f 2e       	mov	r9, r31
    34fa:	f0 2d       	mov	r31, r0
    34fc:	09 c0       	rjmp	.+18     	; 0x3510 <_Z13uhreinstellenv+0x76e>
						if (rtc.Tag>=30)
						{
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    34fe:	0f 2e       	mov	r0, r31
    3500:	f3 e0       	ldi	r31, 0x03	; 3
    3502:	9f 2e       	mov	r9, r31
    3504:	f0 2d       	mov	r31, r0
    3506:	04 c0       	rjmp	.+8      	; 0x3510 <_Z13uhreinstellenv+0x76e>
					else{
						if(rtc.Tag>=29){
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    3508:	0f 2e       	mov	r0, r31
    350a:	f3 e0       	ldi	r31, 0x03	; 3
    350c:	9f 2e       	mov	r9, r31
    350e:	f0 2d       	mov	r31, r0
				break;
			default:
				pos++;
				break;
		}
		pos++;
    3510:	93 94       	inc	r9
    3512:	86 cc       	rjmp	.-1780   	; 0x2e20 <_Z13uhreinstellenv+0x7e>
	rtc.HundSekunden	= 0;
	oled.clearFrame();
	rtc.ausgabedatumneu();
	rtc.ausgabezeitneu();
	rtc.RTCstart();
}
    3514:	66 96       	adiw	r28, 0x16	; 22
    3516:	0f b6       	in	r0, 0x3f	; 63
    3518:	f8 94       	cli
    351a:	de bf       	out	0x3e, r29	; 62
    351c:	0f be       	out	0x3f, r0	; 63
    351e:	cd bf       	out	0x3d, r28	; 61
    3520:	df 91       	pop	r29
    3522:	cf 91       	pop	r28
    3524:	1f 91       	pop	r17
    3526:	0f 91       	pop	r16
    3528:	ff 90       	pop	r15
    352a:	ef 90       	pop	r14
    352c:	df 90       	pop	r13
    352e:	cf 90       	pop	r12
    3530:	bf 90       	pop	r11
    3532:	af 90       	pop	r10
    3534:	9f 90       	pop	r9
    3536:	8f 90       	pop	r8
    3538:	7f 90       	pop	r7
    353a:	6f 90       	pop	r6
    353c:	5f 90       	pop	r5
    353e:	4f 90       	pop	r4
    3540:	3f 90       	pop	r3
    3542:	2f 90       	pop	r2
    3544:	08 95       	ret

00003546 <__vector_11>:
uint8_t pos;		//Handler fuer die Einganbe von Zahlen

//Ausgelagerte Sammlung der einzelnen Seitenlayouts
#include "Seiten.h"

ISR(TIMER2_OVF_vect){	//Vektor fuer die RTC
    3546:	1f 92       	push	r1
    3548:	0f 92       	push	r0
    354a:	0f b6       	in	r0, 0x3f	; 63
    354c:	0f 92       	push	r0
    354e:	11 24       	eor	r1, r1
    3550:	0b b6       	in	r0, 0x3b	; 59
    3552:	0f 92       	push	r0
    3554:	8f 93       	push	r24
    3556:	ef 93       	push	r30
    3558:	ff 93       	push	r31
	TCNT2=TIMER2RTCTIME;
    355a:	10 92 b2 00 	sts	0x00B2, r1
	rtc.Sekunden++;
    355e:	e6 e9       	ldi	r30, 0x96	; 150
    3560:	f7 e0       	ldi	r31, 0x07	; 7
    3562:	80 81       	ld	r24, Z
    3564:	8f 5f       	subi	r24, 0xFF	; 255
    3566:	80 83       	st	Z, r24
	rtc.interupts|= (1<<sekundeninterupt);
    3568:	ec e9       	ldi	r30, 0x9C	; 156
    356a:	f7 e0       	ldi	r31, 0x07	; 7
    356c:	80 81       	ld	r24, Z
    356e:	82 60       	ori	r24, 0x02	; 2
    3570:	80 83       	st	Z, r24
}
    3572:	ff 91       	pop	r31
    3574:	ef 91       	pop	r30
    3576:	8f 91       	pop	r24
    3578:	0f 90       	pop	r0
    357a:	0b be       	out	0x3b, r0	; 59
    357c:	0f 90       	pop	r0
    357e:	0f be       	out	0x3f, r0	; 63
    3580:	0f 90       	pop	r0
    3582:	1f 90       	pop	r1
    3584:	18 95       	reti

00003586 <_Z15geschwindigkeitf>:

double geschw;
double strecke;
double maxgeschw;
uint32_t Fahrtzeit;
void geschwindigkeit(float durch){
    3586:	cf 92       	push	r12
    3588:	df 92       	push	r13
    358a:	ef 92       	push	r14
    358c:	ff 92       	push	r15
    358e:	cf 93       	push	r28
    3590:	df 93       	push	r29
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
    3592:	e4 e8       	ldi	r30, 0x84	; 132
    3594:	f0 e0       	ldi	r31, 0x00	; 0
    3596:	c0 81       	ld	r28, Z
    3598:	d1 81       	ldd	r29, Z+1	; 0x01
	TCNT1 = 0;
    359a:	11 82       	std	Z+1, r1	; 0x01
    359c:	10 82       	st	Z, r1
	//Berechnung
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
    359e:	2b ed       	ldi	r18, 0xDB	; 219
    35a0:	3f e0       	ldi	r19, 0x0F	; 15
    35a2:	49 e4       	ldi	r20, 0x49	; 73
    35a4:	50 e4       	ldi	r21, 0x40	; 64
    35a6:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    35aa:	26 e6       	ldi	r18, 0x66	; 102
    35ac:	36 e6       	ldi	r19, 0x66	; 102
    35ae:	46 e6       	ldi	r20, 0x66	; 102
    35b0:	50 e4       	ldi	r21, 0x40	; 64
    35b2:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    35b6:	6b 01       	movw	r12, r22
    35b8:	7c 01       	movw	r14, r24
void geschwindigkeit(float durch){
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
	TCNT1 = 0;
	//Berechnung
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
    35ba:	be 01       	movw	r22, r28
    35bc:	80 e0       	ldi	r24, 0x00	; 0
    35be:	90 e0       	ldi	r25, 0x00	; 0
    35c0:	0e 94 a9 2c 	call	0x5952	; 0x5952 <__floatunsisf>
    35c4:	20 e0       	ldi	r18, 0x00	; 0
    35c6:	30 e0       	ldi	r19, 0x00	; 0
    35c8:	40 e0       	ldi	r20, 0x00	; 0
    35ca:	5e e3       	ldi	r21, 0x3E	; 62
    35cc:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    35d0:	2d eb       	ldi	r18, 0xBD	; 189
    35d2:	37 e3       	ldi	r19, 0x37	; 55
    35d4:	46 e8       	ldi	r20, 0x86	; 134
    35d6:	5a e3       	ldi	r21, 0x3A	; 58
    35d8:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    35dc:	2a e0       	ldi	r18, 0x0A	; 10
    35de:	37 ed       	ldi	r19, 0xD7	; 215
    35e0:	43 ea       	ldi	r20, 0xA3	; 163
    35e2:	5b e3       	ldi	r21, 0x3B	; 59
    35e4:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
    35e8:	9b 01       	movw	r18, r22
    35ea:	ac 01       	movw	r20, r24
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
    35ec:	c7 01       	movw	r24, r14
    35ee:	b6 01       	movw	r22, r12
    35f0:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
    35f4:	6b 01       	movw	r12, r22
    35f6:	7c 01       	movw	r14, r24
	if (geschw >=160)
    35f8:	20 e0       	ldi	r18, 0x00	; 0
    35fa:	30 e0       	ldi	r19, 0x00	; 0
    35fc:	40 e2       	ldi	r20, 0x20	; 32
    35fe:	53 e4       	ldi	r21, 0x43	; 67
    3600:	0e 94 b9 2d 	call	0x5b72	; 0x5b72 <__gesf2>
    3604:	88 23       	and	r24, r24
    3606:	4c f4       	brge	.+18     	; 0x361a <_Z15geschwindigkeitf+0x94>
	uint16_t zaehlungen = TCNT1;
	TCNT1 = 0;
	//Berechnung
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
    3608:	c0 92 50 03 	sts	0x0350, r12
    360c:	d0 92 51 03 	sts	0x0351, r13
    3610:	e0 92 52 03 	sts	0x0352, r14
    3614:	f0 92 53 03 	sts	0x0353, r15
    3618:	08 c0       	rjmp	.+16     	; 0x362a <_Z15geschwindigkeitf+0xa4>
	if (geschw >=160)
	{
		geschw=0;
    361a:	10 92 50 03 	sts	0x0350, r1
    361e:	10 92 51 03 	sts	0x0351, r1
    3622:	10 92 52 03 	sts	0x0352, r1
    3626:	10 92 53 03 	sts	0x0353, r1
	}
}
    362a:	df 91       	pop	r29
    362c:	cf 91       	pop	r28
    362e:	ff 90       	pop	r15
    3630:	ef 90       	pop	r14
    3632:	df 90       	pop	r13
    3634:	cf 90       	pop	r12
    3636:	08 95       	ret

00003638 <_Z13reed_debouncePVhh>:

uint8_t reed_debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( (*port & (1 << pin)) )
    3638:	fc 01       	movw	r30, r24
    363a:	20 81       	ld	r18, Z
    363c:	30 e0       	ldi	r19, 0x00	; 0
    363e:	06 2e       	mov	r0, r22
    3640:	02 c0       	rjmp	.+4      	; 0x3646 <_Z13reed_debouncePVhh+0xe>
    3642:	35 95       	asr	r19
    3644:	27 95       	ror	r18
    3646:	0a 94       	dec	r0
    3648:	e2 f7       	brpl	.-8      	; 0x3642 <_Z13reed_debouncePVhh+0xa>
    364a:	20 ff       	sbrs	r18, 0
    364c:	17 c0       	rjmp	.+46     	; 0x367c <_Z13reed_debouncePVhh+0x44>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    364e:	ef e0       	ldi	r30, 0x0F	; 15
    3650:	f7 e2       	ldi	r31, 0x27	; 39
    3652:	31 97       	sbiw	r30, 0x01	; 1
    3654:	f1 f7       	brne	.-4      	; 0x3652 <_Z13reed_debouncePVhh+0x1a>
    3656:	00 c0       	rjmp	.+0      	; 0x3658 <_Z13reed_debouncePVhh+0x20>
    3658:	00 00       	nop
	{
		/* Pin wurde auf Masse gezogen, ms warten   */
		_delay_ms(REEDMS);
		if ( !(*port & (1 << pin)) )
    365a:	fc 01       	movw	r30, r24
    365c:	80 81       	ld	r24, Z
    365e:	90 e0       	ldi	r25, 0x00	; 0
    3660:	9c 01       	movw	r18, r24
    3662:	02 c0       	rjmp	.+4      	; 0x3668 <_Z13reed_debouncePVhh+0x30>
    3664:	35 95       	asr	r19
    3666:	27 95       	ror	r18
    3668:	6a 95       	dec	r22
    366a:	e2 f7       	brpl	.-8      	; 0x3664 <_Z13reed_debouncePVhh+0x2c>
    366c:	20 fd       	sbrc	r18, 0
    366e:	08 c0       	rjmp	.+16     	; 0x3680 <_Z13reed_debouncePVhh+0x48>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3670:	32 e0       	ldi	r19, 0x02	; 2
    3672:	3a 95       	dec	r19
    3674:	f1 f7       	brne	.-4      	; 0x3672 <_Z13reed_debouncePVhh+0x3a>
    3676:	00 c0       	rjmp	.+0      	; 0x3678 <_Z13reed_debouncePVhh+0x40>
		{
			/* Anwender Zeit zum Loslassen des Tasters geben */
			_delay_us(1);
			return 1;
    3678:	81 e0       	ldi	r24, 0x01	; 1
    367a:	08 95       	ret
		}
	}
	return 0;
    367c:	80 e0       	ldi	r24, 0x00	; 0
    367e:	08 95       	ret
    3680:	80 e0       	ldi	r24, 0x00	; 0
}
    3682:	08 95       	ret

00003684 <_Z15initialisierungv>:
    }
}

void initialisierung(){
	//nullen der Flagregister
	rtc.interupts=0;
    3684:	10 92 9c 07 	sts	0x079C, r1
	anzeige=0;
    3688:	10 92 56 03 	sts	0x0356, r1
    368c:	10 92 55 03 	sts	0x0355, r1
	pos=0;
    3690:	10 92 54 03 	sts	0x0354, r1
	//initialisieren des Zaehler fuer die Winkelgeschw sowie den Timer
	geschw=0;
    3694:	10 92 50 03 	sts	0x0350, r1
    3698:	10 92 51 03 	sts	0x0351, r1
    369c:	10 92 52 03 	sts	0x0352, r1
    36a0:	10 92 53 03 	sts	0x0353, r1
	strecke = 0;
    36a4:	10 92 4c 03 	sts	0x034C, r1
    36a8:	10 92 4d 03 	sts	0x034D, r1
    36ac:	10 92 4e 03 	sts	0x034E, r1
    36b0:	10 92 4f 03 	sts	0x034F, r1
	maxgeschw = 0;
    36b4:	10 92 48 03 	sts	0x0348, r1
    36b8:	10 92 49 03 	sts	0x0349, r1
    36bc:	10 92 4a 03 	sts	0x034A, r1
    36c0:	10 92 4b 03 	sts	0x034B, r1
	Fahrtzeit = 0;
    36c4:	10 92 44 03 	sts	0x0344, r1
    36c8:	10 92 45 03 	sts	0x0345, r1
    36cc:	10 92 46 03 	sts	0x0346, r1
    36d0:	10 92 47 03 	sts	0x0347, r1
	TCNT1=0;
    36d4:	10 92 85 00 	sts	0x0085, r1
    36d8:	10 92 84 00 	sts	0x0084, r1
	//Tastatur inm Contruktor initialisiert
	//Eingang fuer den Reedkontak schalten mit internem Pullup
	DDRA |= ((1<<PORTA6));
    36dc:	0e 9a       	sbi	0x01, 6	; 1
	PORTA |= (1<<PORTA6);
    36de:	16 9a       	sbi	0x02, 6	; 2
	//Display
	oled.InitializeDisplay();
    36e0:	83 e8       	ldi	r24, 0x83	; 131
    36e2:	93 e0       	ldi	r25, 0x03	; 3
    36e4:	0e 94 2c 03 	call	0x658	; 0x658 <_ZN7Display17InitializeDisplayEv>
	//initialisierung wird im konstruktor vorgenommen
	oled.clearFrame();
    36e8:	83 e8       	ldi	r24, 0x83	; 131
    36ea:	93 e0       	ldi	r25, 0x03	; 3
    36ec:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	//HMC5883L initialisieren
	//kompass.initialize_HMC5883L();
	//initialisierung wird im Konstruktor erledigt
	
	//ADC Initialisieren auf CH0
	ADMUX = (1<<REFS0);
    36f0:	80 e4       	ldi	r24, 0x40	; 64
    36f2:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
    36f6:	ea e7       	ldi	r30, 0x7A	; 122
    36f8:	f0 e0       	ldi	r31, 0x00	; 0
    36fa:	83 e0       	ldi	r24, 0x03	; 3
    36fc:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN);
    36fe:	80 81       	ld	r24, Z
    3700:	80 68       	ori	r24, 0x80	; 128
    3702:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
    3704:	80 81       	ld	r24, Z
    3706:	80 64       	ori	r24, 0x40	; 64
    3708:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC) ) {}
    370a:	80 81       	ld	r24, Z
    370c:	86 fd       	sbrc	r24, 6
    370e:	fd cf       	rjmp	.-6      	; 0x370a <_Z15initialisierungv+0x86>
	(void) ADCW;
    3710:	80 91 78 00 	lds	r24, 0x0078
    3714:	90 91 79 00 	lds	r25, 0x0079
	//Wilkommensanzeige
	willkommenpage();
    3718:	0e 94 88 09 	call	0x1310	; 0x1310 <_Z14willkommenpagev>
	//Uhreinstellungen
	//uhreinstellen();
	//*************************************************
	//Nur Test, damit es schneller geht beim Start
	rtc.dummyeinst();
    371c:	84 e8       	ldi	r24, 0x84	; 132
    371e:	97 e0       	ldi	r25, 0x07	; 7
    3720:	0e 94 0f 2b 	call	0x561e	; 0x561e <_ZN3RTC10dummyeinstEv>
	//*********************************
	rtc.RTCstart();
    3724:	84 e8       	ldi	r24, 0x84	; 132
    3726:	97 e0       	ldi	r25, 0x07	; 7
    3728:	0e 94 23 2b 	call	0x5646	; 0x5646 <_ZN3RTC8RTCstartEv>
	//ausgabe starten
	anzeige|=(1<<Kompasflag);
    372c:	80 91 55 03 	lds	r24, 0x0355
    3730:	90 91 56 03 	lds	r25, 0x0356
    3734:	80 68       	ori	r24, 0x80	; 128
    3736:	90 93 56 03 	sts	0x0356, r25
    373a:	80 93 55 03 	sts	0x0355, r24
	sei();
    373e:	78 94       	sei
    3740:	08 95       	ret

00003742 <_Z19maininterupthandlerv>:
	//interupt dierekt aus der rtc
	//if((rtc.interupts & (1<<hundinterupt))){
	//rtc.zeit();
	//rtc.interupts&=~(1<<hundinterupt);
	//}
	if ((anzeige&(1<<Fahradflag)))
    3742:	80 91 55 03 	lds	r24, 0x0355
    3746:	80 ff       	sbrs	r24, 0
    3748:	0b c0       	rjmp	.+22     	; 0x3760 <_Z19maininterupthandlerv+0x1e>
	{
		//debounce Funktion fuer den Reedswitch
		if (reed_debounce(&PINA,PINA7))
    374a:	67 e0       	ldi	r22, 0x07	; 7
    374c:	80 e2       	ldi	r24, 0x20	; 32
    374e:	90 e0       	ldi	r25, 0x00	; 0
    3750:	73 df       	rcall	.-282    	; 0x3638 <_Z13reed_debouncePVhh>
    3752:	88 23       	and	r24, r24
    3754:	29 f0       	breq	.+10     	; 0x3760 <_Z19maininterupthandlerv+0x1e>
		{
			//Durchmesser ist 28 Zoll
			geschwindigkeit(28.0*2.54/100.0);
    3756:	63 e3       	ldi	r22, 0x33	; 51
    3758:	71 e1       	ldi	r23, 0x11	; 17
    375a:	86 e3       	ldi	r24, 0x36	; 54
    375c:	9f e3       	ldi	r25, 0x3F	; 63
    375e:	13 df       	rcall	.-474    	; 0x3586 <_Z15geschwindigkeitf>
		}
	}
	if ((rtc.interupts&(1<<Weckeractiv)))
    3760:	20 91 9c 07 	lds	r18, 0x079C
    3764:	82 2f       	mov	r24, r18
    3766:	88 71       	andi	r24, 0x18	; 24
	{
		if ((rtc.interupts&(1<<Weckerein)))
    3768:	88 31       	cpi	r24, 0x18	; 24
    376a:	61 f4       	brne	.+24     	; 0x3784 <_Z19maininterupthandlerv+0x42>
		{
			anzeige |= (1<<blinkflag) | (1<<refreshdisplay);
    376c:	80 91 55 03 	lds	r24, 0x0355
    3770:	90 91 56 03 	lds	r25, 0x0356
    3774:	90 6c       	ori	r25, 0xC0	; 192
    3776:	90 93 56 03 	sts	0x0356, r25
    377a:	80 93 55 03 	sts	0x0355, r24
			rtc.interupts &= ~(1<<Weckerein);
    377e:	27 7f       	andi	r18, 0xF7	; 247
    3780:	20 93 9c 07 	sts	0x079C, r18
    3784:	08 95       	ret

00003786 <_Z14anzeigehandlerv>:
		}
	}
}

void anzeigehandler(){
    3786:	4f 92       	push	r4
    3788:	5f 92       	push	r5
    378a:	6f 92       	push	r6
    378c:	7f 92       	push	r7
    378e:	af 92       	push	r10
    3790:	bf 92       	push	r11
    3792:	cf 92       	push	r12
    3794:	df 92       	push	r13
    3796:	ef 92       	push	r14
    3798:	ff 92       	push	r15
    379a:	0f 93       	push	r16
    379c:	1f 93       	push	r17
    379e:	cf 93       	push	r28
    37a0:	df 93       	push	r29
	//Handler fuer 1Hz Flag
	if ((rtc.interupts & (1<<sekundeninterupt)))
    37a2:	80 91 9c 07 	lds	r24, 0x079C
    37a6:	81 ff       	sbrs	r24, 1
    37a8:	9c c1       	rjmp	.+824    	; 0x3ae2 <_Z14anzeigehandlerv+0x35c>
	{
		rtc.zeit();
    37aa:	84 e8       	ldi	r24, 0x84	; 132
    37ac:	97 e0       	ldi	r25, 0x07	; 7
    37ae:	0e 94 d5 2a 	call	0x55aa	; 0x55aa <_ZN3RTC4zeitEv>
		//Handler fuer die Anzeige der Seiten
		//Die einzelnen Funktionen beschreiben nur den Framebuffer und nicht dierekt das Display
		if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))
    37b2:	80 91 55 03 	lds	r24, 0x0355
    37b6:	90 91 56 03 	lds	r25, 0x0356
    37ba:	9c 01       	movw	r18, r24
    37bc:	22 70       	andi	r18, 0x02	; 2
    37be:	30 72       	andi	r19, 0x20	; 32
    37c0:	22 30       	cpi	r18, 0x02	; 2
    37c2:	30 42       	sbci	r19, 0x20	; 32
    37c4:	61 f4       	brne	.+24     	; 0x37de <_Z14anzeigehandlerv+0x58>
		{
			menue_uhr();
    37c6:	0e 94 60 0d 	call	0x1ac0	; 0x1ac0 <_Z9menue_uhrv>
			anzeige|=(1<<refreshdisplay);
    37ca:	80 91 55 03 	lds	r24, 0x0355
    37ce:	90 91 56 03 	lds	r25, 0x0356
    37d2:	90 68       	ori	r25, 0x80	; 128
    37d4:	90 93 56 03 	sts	0x0356, r25
    37d8:	80 93 55 03 	sts	0x0355, r24
    37dc:	68 c1       	rjmp	.+720    	; 0x3aae <_Z14anzeigehandlerv+0x328>
    37de:	9c 01       	movw	r18, r24
    37e0:	22 27       	eor	r18, r18
    37e2:	30 73       	andi	r19, 0x30	; 48
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))
    37e4:	21 15       	cp	r18, r1
    37e6:	30 43       	sbci	r19, 0x30	; 48
    37e8:	61 f4       	brne	.+24     	; 0x3802 <_Z14anzeigehandlerv+0x7c>
		{
			menue_einst();
    37ea:	0e 94 de 0c 	call	0x19bc	; 0x19bc <_Z11menue_einstv>
			anzeige|=(1<<refreshdisplay);
    37ee:	80 91 55 03 	lds	r24, 0x0355
    37f2:	90 91 56 03 	lds	r25, 0x0356
    37f6:	90 68       	ori	r25, 0x80	; 128
    37f8:	90 93 56 03 	sts	0x0356, r25
    37fc:	80 93 55 03 	sts	0x0355, r24
    3800:	56 c1       	rjmp	.+684    	; 0x3aae <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<menueflag)))
    3802:	95 ff       	sbrs	r25, 5
    3804:	0c c0       	rjmp	.+24     	; 0x381e <_Z14anzeigehandlerv+0x98>
		{
			menue_haupt();
    3806:	0e 94 17 0c 	call	0x182e	; 0x182e <_Z11menue_hauptv>
			anzeige|=(1<<refreshdisplay);
    380a:	80 91 55 03 	lds	r24, 0x0355
    380e:	90 91 56 03 	lds	r25, 0x0356
    3812:	90 68       	ori	r25, 0x80	; 128
    3814:	90 93 56 03 	sts	0x0356, r25
    3818:	80 93 55 03 	sts	0x0355, r24
    381c:	48 c1       	rjmp	.+656    	; 0x3aae <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    381e:	91 ff       	sbrs	r25, 1
    3820:	0c c0       	rjmp	.+24     	; 0x383a <_Z14anzeigehandlerv+0xb4>
		{
			Gaineinstellen();
    3822:	0e 94 21 11 	call	0x2242	; 0x2242 <_Z14Gaineinstellenv>
			anzeige|=(1<<refreshdisplay);
    3826:	80 91 55 03 	lds	r24, 0x0355
    382a:	90 91 56 03 	lds	r25, 0x0356
    382e:	90 68       	ori	r25, 0x80	; 128
    3830:	90 93 56 03 	sts	0x0356, r25
    3834:	80 93 55 03 	sts	0x0355, r24
    3838:	3a c1       	rjmp	.+628    	; 0x3aae <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Uhrflag)))
    383a:	81 ff       	sbrs	r24, 1
    383c:	0c c0       	rjmp	.+24     	; 0x3856 <_Z14anzeigehandlerv+0xd0>
		{
			uhranzeigen();
    383e:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <_Z11uhranzeigenv>
			anzeige|=(1<<refreshdisplay);
    3842:	80 91 55 03 	lds	r24, 0x0355
    3846:	90 91 56 03 	lds	r25, 0x0356
    384a:	90 68       	ori	r25, 0x80	; 128
    384c:	90 93 56 03 	sts	0x0356, r25
    3850:	80 93 55 03 	sts	0x0355, r24
    3854:	2c c1       	rjmp	.+600    	; 0x3aae <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Kompasflag)))
    3856:	87 ff       	sbrs	r24, 7
    3858:	24 c0       	rjmp	.+72     	; 0x38a2 <_Z14anzeigehandlerv+0x11c>
		{
			Accelerometer.readacc();
    385a:	8b e5       	ldi	r24, 0x5B	; 91
    385c:	93 e0       	ldi	r25, 0x03	; 3
    385e:	0e 94 dd 25 	call	0x4bba	; 0x4bba <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    3862:	00 91 67 03 	lds	r16, 0x0367
    3866:	10 91 68 03 	lds	r17, 0x0368
    386a:	20 91 69 03 	lds	r18, 0x0369
    386e:	30 91 6a 03 	lds	r19, 0x036A
    3872:	40 91 63 03 	lds	r20, 0x0363
    3876:	50 91 64 03 	lds	r21, 0x0364
    387a:	60 91 65 03 	lds	r22, 0x0365
    387e:	70 91 66 03 	lds	r23, 0x0366
    3882:	83 ea       	ldi	r24, 0xA3	; 163
    3884:	97 e0       	ldi	r25, 0x07	; 7
    3886:	0e 94 98 24 	call	0x4930	; 0x4930 <_ZN7Kompass5angleEdd>
    388a:	0e 94 07 12 	call	0x240e	; 0x240e <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    388e:	80 91 55 03 	lds	r24, 0x0355
    3892:	90 91 56 03 	lds	r25, 0x0356
    3896:	90 68       	ori	r25, 0x80	; 128
    3898:	90 93 56 03 	sts	0x0356, r25
    389c:	80 93 55 03 	sts	0x0355, r24
    38a0:	06 c1       	rjmp	.+524    	; 0x3aae <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Fahradflag)))
    38a2:	80 ff       	sbrs	r24, 0
    38a4:	b1 c0       	rjmp	.+354    	; 0x3a08 <_Z14anzeigehandlerv+0x282>
		{
			//fahradschirm(12.3,kompass.angle());
			if (geschw>maxgeschw)
    38a6:	c0 90 50 03 	lds	r12, 0x0350
    38aa:	d0 90 51 03 	lds	r13, 0x0351
    38ae:	e0 90 52 03 	lds	r14, 0x0352
    38b2:	f0 90 53 03 	lds	r15, 0x0353
    38b6:	20 91 48 03 	lds	r18, 0x0348
    38ba:	30 91 49 03 	lds	r19, 0x0349
    38be:	40 91 4a 03 	lds	r20, 0x034A
    38c2:	50 91 4b 03 	lds	r21, 0x034B
    38c6:	c7 01       	movw	r24, r14
    38c8:	b6 01       	movw	r22, r12
    38ca:	0e 94 b9 2d 	call	0x5b72	; 0x5b72 <__gesf2>
    38ce:	18 16       	cp	r1, r24
    38d0:	44 f4       	brge	.+16     	; 0x38e2 <_Z14anzeigehandlerv+0x15c>
			{
				maxgeschw=geschw;
    38d2:	c0 92 48 03 	sts	0x0348, r12
    38d6:	d0 92 49 03 	sts	0x0349, r13
    38da:	e0 92 4a 03 	sts	0x034A, r14
    38de:	f0 92 4b 03 	sts	0x034B, r15
			}
			if (geschw != 0)
    38e2:	20 e0       	ldi	r18, 0x00	; 0
    38e4:	30 e0       	ldi	r19, 0x00	; 0
    38e6:	a9 01       	movw	r20, r18
    38e8:	c7 01       	movw	r24, r14
    38ea:	b6 01       	movw	r22, r12
    38ec:	0e 94 09 2c 	call	0x5812	; 0x5812 <__cmpsf2>
    38f0:	88 23       	and	r24, r24
    38f2:	99 f0       	breq	.+38     	; 0x391a <_Z14anzeigehandlerv+0x194>
			{
				Fahrtzeit++;
    38f4:	80 91 44 03 	lds	r24, 0x0344
    38f8:	90 91 45 03 	lds	r25, 0x0345
    38fc:	a0 91 46 03 	lds	r26, 0x0346
    3900:	b0 91 47 03 	lds	r27, 0x0347
    3904:	01 96       	adiw	r24, 0x01	; 1
    3906:	a1 1d       	adc	r26, r1
    3908:	b1 1d       	adc	r27, r1
    390a:	80 93 44 03 	sts	0x0344, r24
    390e:	90 93 45 03 	sts	0x0345, r25
    3912:	a0 93 46 03 	sts	0x0346, r26
    3916:	b0 93 47 03 	sts	0x0347, r27
			}
			strecke+=geschw/3.6;
    391a:	26 e6       	ldi	r18, 0x66	; 102
    391c:	36 e6       	ldi	r19, 0x66	; 102
    391e:	46 e6       	ldi	r20, 0x66	; 102
    3920:	50 e4       	ldi	r21, 0x40	; 64
    3922:	c7 01       	movw	r24, r14
    3924:	b6 01       	movw	r22, r12
    3926:	0e 94 10 2c 	call	0x5820	; 0x5820 <__divsf3>
    392a:	9b 01       	movw	r18, r22
    392c:	ac 01       	movw	r20, r24
    392e:	60 91 4c 03 	lds	r22, 0x034C
    3932:	70 91 4d 03 	lds	r23, 0x034D
    3936:	80 91 4e 03 	lds	r24, 0x034E
    393a:	90 91 4f 03 	lds	r25, 0x034F
    393e:	0e 94 43 2b 	call	0x5686	; 0x5686 <__addsf3>
    3942:	60 93 4c 03 	sts	0x034C, r22
    3946:	70 93 4d 03 	sts	0x034D, r23
    394a:	80 93 4e 03 	sts	0x034E, r24
    394e:	90 93 4f 03 	sts	0x034F, r25
			Accelerometer.readacc();
    3952:	8b e5       	ldi	r24, 0x5B	; 91
    3954:	93 e0       	ldi	r25, 0x03	; 3
    3956:	0e 94 dd 25 	call	0x4bba	; 0x4bba <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    395a:	e0 90 44 03 	lds	r14, 0x0344
    395e:	f0 90 45 03 	lds	r15, 0x0345
    3962:	c0 91 46 03 	lds	r28, 0x0346
    3966:	d0 91 47 03 	lds	r29, 0x0347
    396a:	a0 90 48 03 	lds	r10, 0x0348
    396e:	b0 90 49 03 	lds	r11, 0x0349
    3972:	c0 90 4a 03 	lds	r12, 0x034A
    3976:	d0 90 4b 03 	lds	r13, 0x034B
    397a:	40 90 4c 03 	lds	r4, 0x034C
    397e:	50 90 4d 03 	lds	r5, 0x034D
    3982:	60 90 4e 03 	lds	r6, 0x034E
    3986:	70 90 4f 03 	lds	r7, 0x034F
    398a:	00 91 67 03 	lds	r16, 0x0367
    398e:	10 91 68 03 	lds	r17, 0x0368
    3992:	20 91 69 03 	lds	r18, 0x0369
    3996:	30 91 6a 03 	lds	r19, 0x036A
    399a:	40 91 63 03 	lds	r20, 0x0363
    399e:	50 91 64 03 	lds	r21, 0x0364
    39a2:	60 91 65 03 	lds	r22, 0x0365
    39a6:	70 91 66 03 	lds	r23, 0x0366
    39aa:	83 ea       	ldi	r24, 0xA3	; 163
    39ac:	97 e0       	ldi	r25, 0x07	; 7
    39ae:	c0 d7       	rcall	.+3968   	; 0x4930 <_ZN7Kompass5angleEdd>
    39b0:	9b 01       	movw	r18, r22
    39b2:	ac 01       	movw	r20, r24
    39b4:	60 91 50 03 	lds	r22, 0x0350
    39b8:	70 91 51 03 	lds	r23, 0x0351
    39bc:	80 91 52 03 	lds	r24, 0x0352
    39c0:	90 91 53 03 	lds	r25, 0x0353
    39c4:	df 93       	push	r29
    39c6:	cf 93       	push	r28
    39c8:	ff 92       	push	r15
    39ca:	ef 92       	push	r14
    39cc:	83 01       	movw	r16, r6
    39ce:	72 01       	movw	r14, r4
    39d0:	0e 94 cf 0f 	call	0x1f9e	; 0x1f9e <_Z12fahradschirmddddm>
			if (rtc.Sekunden%2)
    39d4:	80 91 96 07 	lds	r24, 0x0796
    39d8:	0f 90       	pop	r0
    39da:	0f 90       	pop	r0
    39dc:	0f 90       	pop	r0
    39de:	0f 90       	pop	r0
    39e0:	80 ff       	sbrs	r24, 0
    39e2:	08 c0       	rjmp	.+16     	; 0x39f4 <_Z14anzeigehandlerv+0x26e>
			{
				geschw=0;
    39e4:	10 92 50 03 	sts	0x0350, r1
    39e8:	10 92 51 03 	sts	0x0351, r1
    39ec:	10 92 52 03 	sts	0x0352, r1
    39f0:	10 92 53 03 	sts	0x0353, r1
			}
			anzeige|=(1<<refreshdisplay);
    39f4:	80 91 55 03 	lds	r24, 0x0355
    39f8:	90 91 56 03 	lds	r25, 0x0356
    39fc:	90 68       	ori	r25, 0x80	; 128
    39fe:	90 93 56 03 	sts	0x0356, r25
    3a02:	80 93 55 03 	sts	0x0355, r24
    3a06:	53 c0       	rjmp	.+166    	; 0x3aae <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    3a08:	83 ff       	sbrs	r24, 3
    3a0a:	0c c0       	rjmp	.+24     	; 0x3a24 <_Z14anzeigehandlerv+0x29e>
		{
			Stoppuhrseite();
    3a0c:	0e 94 e5 13 	call	0x27ca	; 0x27ca <_Z13Stoppuhrseitev>
			anzeige|=(1<<refreshdisplay);
    3a10:	80 91 55 03 	lds	r24, 0x0355
    3a14:	90 91 56 03 	lds	r25, 0x0356
    3a18:	90 68       	ori	r25, 0x80	; 128
    3a1a:	90 93 56 03 	sts	0x0356, r25
    3a1e:	80 93 55 03 	sts	0x0355, r24
    3a22:	45 c0       	rjmp	.+138    	; 0x3aae <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Timerflag)))
    3a24:	82 ff       	sbrs	r24, 2
    3a26:	18 c0       	rjmp	.+48     	; 0x3a58 <_Z14anzeigehandlerv+0x2d2>
		{
			if (rtc.interupts&(1<<Alarm))
    3a28:	20 91 9c 07 	lds	r18, 0x079C
    3a2c:	20 ff       	sbrs	r18, 0
    3a2e:	08 c0       	rjmp	.+16     	; 0x3a40 <_Z14anzeigehandlerv+0x2ba>
			{
				anzeige |= (1<<blinkflag);
    3a30:	90 64       	ori	r25, 0x40	; 64
    3a32:	90 93 56 03 	sts	0x0356, r25
    3a36:	80 93 55 03 	sts	0x0355, r24
				rtc.interupts &= ~(1<<Alarm);
    3a3a:	2e 7f       	andi	r18, 0xFE	; 254
    3a3c:	20 93 9c 07 	sts	0x079C, r18
			}
			timerseite();
    3a40:	0e 94 19 13 	call	0x2632	; 0x2632 <_Z10timerseitev>
			anzeige|=(1<<refreshdisplay);
    3a44:	80 91 55 03 	lds	r24, 0x0355
    3a48:	90 91 56 03 	lds	r25, 0x0356
    3a4c:	90 68       	ori	r25, 0x80	; 128
    3a4e:	90 93 56 03 	sts	0x0356, r25
    3a52:	80 93 55 03 	sts	0x0355, r24
    3a56:	2b c0       	rjmp	.+86     	; 0x3aae <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Druckflag)))
    3a58:	92 ff       	sbrs	r25, 2
    3a5a:	0c c0       	rjmp	.+24     	; 0x3a74 <_Z14anzeigehandlerv+0x2ee>
		{
			Pressuresensor();
    3a5c:	0e 94 a6 14 	call	0x294c	; 0x294c <_Z14Pressuresensorv>
			anzeige |= (1<<refreshdisplay);
    3a60:	80 91 55 03 	lds	r24, 0x0355
    3a64:	90 91 56 03 	lds	r25, 0x0356
    3a68:	90 68       	ori	r25, 0x80	; 128
    3a6a:	90 93 56 03 	sts	0x0356, r25
    3a6e:	80 93 55 03 	sts	0x0355, r24
    3a72:	1d c0       	rjmp	.+58     	; 0x3aae <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Wanderflag)))
    3a74:	93 ff       	sbrs	r25, 3
    3a76:	0b c0       	rjmp	.+22     	; 0x3a8e <_Z14anzeigehandlerv+0x308>
		{
			Wanderseite();
    3a78:	5c d8       	rcall	.-3912   	; 0x2b32 <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    3a7a:	80 91 55 03 	lds	r24, 0x0355
    3a7e:	90 91 56 03 	lds	r25, 0x0356
    3a82:	90 68       	ori	r25, 0x80	; 128
    3a84:	90 93 56 03 	sts	0x0356, r25
    3a88:	80 93 55 03 	sts	0x0355, r24
    3a8c:	10 c0       	rjmp	.+32     	; 0x3aae <_Z14anzeigehandlerv+0x328>
    3a8e:	80 74       	andi	r24, 0x40	; 64
    3a90:	90 71       	andi	r25, 0x10	; 16
		}
		else if ((anzeige&(1<<Weckeranzeigeflag))&&(anzeige&(1<<Einstellungsflag)))
    3a92:	80 34       	cpi	r24, 0x40	; 64
    3a94:	90 41       	sbci	r25, 0x10	; 16
    3a96:	59 f4       	brne	.+22     	; 0x3aae <_Z14anzeigehandlerv+0x328>
		{
			Weckeranzeige();
    3a98:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3a9c:	80 91 55 03 	lds	r24, 0x0355
    3aa0:	90 91 56 03 	lds	r25, 0x0356
    3aa4:	90 68       	ori	r25, 0x80	; 128
    3aa6:	90 93 56 03 	sts	0x0356, r25
    3aaa:	80 93 55 03 	sts	0x0355, r24
		}
		if ((anzeige&(1<<blinkflag)))
    3aae:	80 91 55 03 	lds	r24, 0x0355
    3ab2:	90 91 56 03 	lds	r25, 0x0356
    3ab6:	96 ff       	sbrs	r25, 6
    3ab8:	0f c0       	rjmp	.+30     	; 0x3ad8 <_Z14anzeigehandlerv+0x352>
		{
			oled.invert(rtc.Sekunden%2);
    3aba:	60 91 96 07 	lds	r22, 0x0796
    3abe:	61 70       	andi	r22, 0x01	; 1
    3ac0:	83 e8       	ldi	r24, 0x83	; 131
    3ac2:	93 e0       	ldi	r25, 0x03	; 3
    3ac4:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
			LED.toggle();
    3ac8:	80 e8       	ldi	r24, 0x80	; 128
    3aca:	93 e0       	ldi	r25, 0x03	; 3
    3acc:	0e 94 32 28 	call	0x5064	; 0x5064 <_ZN6Output6toggleEv>
			Vibrationsmotor.on();
    3ad0:	8e e7       	ldi	r24, 0x7E	; 126
    3ad2:	93 e0       	ldi	r25, 0x03	; 3
    3ad4:	0e 94 59 27 	call	0x4eb2	; 0x4eb2 <_ZN6Output2onEv>
		}
		rtc.interupts&=~(1<<sekundeninterupt);
    3ad8:	ec e9       	ldi	r30, 0x9C	; 156
    3ada:	f7 e0       	ldi	r31, 0x07	; 7
    3adc:	80 81       	ld	r24, Z
    3ade:	8d 7f       	andi	r24, 0xFD	; 253
    3ae0:	80 83       	st	Z, r24
	}
	//Minuteninterrupt
	if ((rtc.interupts&(1<<minuteninterupt)))
    3ae2:	80 91 9c 07 	lds	r24, 0x079C
    3ae6:	82 ff       	sbrs	r24, 2
    3ae8:	22 c0       	rjmp	.+68     	; 0x3b2e <_Z14anzeigehandlerv+0x3a8>
	{
		if ((anzeige&(1<<Uhrflaggross)))
    3aea:	80 91 55 03 	lds	r24, 0x0355
    3aee:	85 ff       	sbrs	r24, 5
    3af0:	0c c0       	rjmp	.+24     	; 0x3b0a <_Z14anzeigehandlerv+0x384>
		{
			uhranzeigenmin();
    3af2:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <_Z14uhranzeigenminv>
			anzeige|=(1<<refreshdisplay);
    3af6:	80 91 55 03 	lds	r24, 0x0355
    3afa:	90 91 56 03 	lds	r25, 0x0356
    3afe:	90 68       	ori	r25, 0x80	; 128
    3b00:	90 93 56 03 	sts	0x0356, r25
    3b04:	80 93 55 03 	sts	0x0355, r24
    3b08:	0d c0       	rjmp	.+26     	; 0x3b24 <_Z14anzeigehandlerv+0x39e>
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    3b0a:	86 ff       	sbrs	r24, 6
    3b0c:	0b c0       	rjmp	.+22     	; 0x3b24 <_Z14anzeigehandlerv+0x39e>
		{
			Weckeranzeige();
    3b0e:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3b12:	80 91 55 03 	lds	r24, 0x0355
    3b16:	90 91 56 03 	lds	r25, 0x0356
    3b1a:	90 68       	ori	r25, 0x80	; 128
    3b1c:	90 93 56 03 	sts	0x0356, r25
    3b20:	80 93 55 03 	sts	0x0355, r24
		}
		rtc.interupts&=~(1<<minuteninterupt);
    3b24:	ec e9       	ldi	r30, 0x9C	; 156
    3b26:	f7 e0       	ldi	r31, 0x07	; 7
    3b28:	80 81       	ld	r24, Z
    3b2a:	8b 7f       	andi	r24, 0xFB	; 251
    3b2c:	80 83       	st	Z, r24
	}
	//neuen Framebuffer an das Dispay senden
	if ((anzeige&(1<<refreshdisplay)))
    3b2e:	80 91 55 03 	lds	r24, 0x0355
    3b32:	90 91 56 03 	lds	r25, 0x0356
    3b36:	99 23       	and	r25, r25
    3b38:	6c f4       	brge	.+26     	; 0x3b54 <_Z14anzeigehandlerv+0x3ce>
	{
		oled.sendFrame();
    3b3a:	83 e8       	ldi	r24, 0x83	; 131
    3b3c:	93 e0       	ldi	r25, 0x03	; 3
    3b3e:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN7Display9sendFrameEv>
		anzeige&=~(1<<refreshdisplay);
    3b42:	80 91 55 03 	lds	r24, 0x0355
    3b46:	90 91 56 03 	lds	r25, 0x0356
    3b4a:	9f 77       	andi	r25, 0x7F	; 127
    3b4c:	90 93 56 03 	sts	0x0356, r25
    3b50:	80 93 55 03 	sts	0x0355, r24
	}
}
    3b54:	df 91       	pop	r29
    3b56:	cf 91       	pop	r28
    3b58:	1f 91       	pop	r17
    3b5a:	0f 91       	pop	r16
    3b5c:	ff 90       	pop	r15
    3b5e:	ef 90       	pop	r14
    3b60:	df 90       	pop	r13
    3b62:	cf 90       	pop	r12
    3b64:	bf 90       	pop	r11
    3b66:	af 90       	pop	r10
    3b68:	7f 90       	pop	r7
    3b6a:	6f 90       	pop	r6
    3b6c:	5f 90       	pop	r5
    3b6e:	4f 90       	pop	r4
    3b70:	08 95       	ret

00003b72 <_Z14eingabehandlerh>:

void eingabehandler(uint8_t taste){
	if (taste!='A')
    3b72:	81 34       	cpi	r24, 0x41	; 65
    3b74:	09 f4       	brne	.+2      	; 0x3b78 <_Z14eingabehandlerh+0x6>
    3b76:	9a c4       	rjmp	.+2356   	; 0x44ac <__stack+0x3ad>
	{
		rtc.interupts |= (1<<sekundeninterupt);
    3b78:	ec e9       	ldi	r30, 0x9C	; 156
    3b7a:	f7 e0       	ldi	r31, 0x07	; 7
    3b7c:	90 81       	ld	r25, Z
    3b7e:	29 2f       	mov	r18, r25
    3b80:	22 60       	ori	r18, 0x02	; 2
    3b82:	20 83       	st	Z, r18
		if (anzeige==255)
    3b84:	20 91 55 03 	lds	r18, 0x0355
    3b88:	30 91 56 03 	lds	r19, 0x0356
    3b8c:	2f 3f       	cpi	r18, 0xFF	; 255
    3b8e:	31 05       	cpc	r19, r1
    3b90:	61 f4       	brne	.+24     	; 0x3baa <_Z14eingabehandlerh+0x38>
		{
			oled.ssd1306_command(SSD1306_DISPLAYON);
    3b92:	6f ea       	ldi	r22, 0xAF	; 175
    3b94:	83 e8       	ldi	r24, 0x83	; 131
    3b96:	93 e0       	ldi	r25, 0x03	; 3
    3b98:	0e 94 10 03 	call	0x620	; 0x620 <_ZN7Display15ssd1306_commandEh>
			//entweder display aus oder das Menue starten
			anzeige=(1<<menueflag);
    3b9c:	80 e0       	ldi	r24, 0x00	; 0
    3b9e:	90 e2       	ldi	r25, 0x20	; 32
    3ba0:	90 93 56 03 	sts	0x0356, r25
    3ba4:	80 93 55 03 	sts	0x0355, r24
    3ba8:	08 95       	ret
    3baa:	a9 01       	movw	r20, r18
    3bac:	42 70       	andi	r20, 0x02	; 2
    3bae:	50 72       	andi	r21, 0x20	; 32
		}
		//gleicher Handler wie oben, aber hier speziell fuer die Bearbeitung von Tastereingaben mit switch fuer die Tasten
		//es sind einfach so viele Tasten moeglich
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))	//Menue der Uhr
    3bb0:	42 30       	cpi	r20, 0x02	; 2
    3bb2:	50 42       	sbci	r21, 0x20	; 32
    3bb4:	09 f0       	breq	.+2      	; 0x3bb8 <_Z14eingabehandlerh+0x46>
    3bb6:	50 c0       	rjmp	.+160    	; 0x3c58 <_Z14eingabehandlerh+0xe6>
		{
			anzeige&=~((1<<menueflag)|(1<<Uhrflag));
    3bb8:	2d 7f       	andi	r18, 0xFD	; 253
    3bba:	3f 7d       	andi	r19, 0xDF	; 223
    3bbc:	30 93 56 03 	sts	0x0356, r19
    3bc0:	20 93 55 03 	sts	0x0355, r18
			switch (taste)
    3bc4:	83 33       	cpi	r24, 0x33	; 51
    3bc6:	c9 f0       	breq	.+50     	; 0x3bfa <_Z14eingabehandlerh+0x88>
    3bc8:	28 f4       	brcc	.+10     	; 0x3bd4 <_Z14eingabehandlerh+0x62>
    3bca:	81 33       	cpi	r24, 0x31	; 49
    3bcc:	49 f0       	breq	.+18     	; 0x3be0 <_Z14eingabehandlerh+0x6e>
    3bce:	82 33       	cpi	r24, 0x32	; 50
    3bd0:	69 f0       	breq	.+26     	; 0x3bec <_Z14eingabehandlerh+0x7a>
    3bd2:	3b c0       	rjmp	.+118    	; 0x3c4a <_Z14eingabehandlerh+0xd8>
    3bd4:	85 33       	cpi	r24, 0x35	; 53
    3bd6:	31 f1       	breq	.+76     	; 0x3c24 <_Z14eingabehandlerh+0xb2>
    3bd8:	b8 f0       	brcs	.+46     	; 0x3c08 <_Z14eingabehandlerh+0x96>
    3bda:	86 33       	cpi	r24, 0x36	; 54
    3bdc:	69 f1       	breq	.+90     	; 0x3c38 <_Z14eingabehandlerh+0xc6>
    3bde:	35 c0       	rjmp	.+106    	; 0x3c4a <_Z14eingabehandlerh+0xd8>
			{
				case '1':
				//Wechseln auf die Uhr
				anzeige|=(1<<Uhrflag);
    3be0:	22 60       	ori	r18, 0x02	; 2
    3be2:	30 93 56 03 	sts	0x0356, r19
    3be6:	20 93 55 03 	sts	0x0355, r18
				break;
    3bea:	08 95       	ret
				
				case '2':
				//starten der Stoppuhr APP
				anzeige|=(1<<refreshdisplay) | (1<<Stoppuhrflag);
    3bec:	28 60       	ori	r18, 0x08	; 8
    3bee:	30 68       	ori	r19, 0x80	; 128
    3bf0:	30 93 56 03 	sts	0x0356, r19
    3bf4:	20 93 55 03 	sts	0x0355, r18
				break;
    3bf8:	08 95       	ret
				
				case '3':
				//Starten der Timer APP	
				anzeige|=(1<<Timerflag) | (1<<Einstellungsflag);
    3bfa:	24 60       	ori	r18, 0x04	; 4
    3bfc:	30 61       	ori	r19, 0x10	; 16
    3bfe:	30 93 56 03 	sts	0x0356, r19
    3c02:	20 93 55 03 	sts	0x0355, r18
				break;
    3c06:	08 95       	ret
				
				case '4':
				//Starten der Alarmapp, momentan nicht implementiert
				oled.clearFrame();
    3c08:	83 e8       	ldi	r24, 0x83	; 131
    3c0a:	93 e0       	ldi	r25, 0x03	; 3
    3c0c:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
				anzeige|=(1<<refreshdisplay);
    3c10:	80 91 55 03 	lds	r24, 0x0355
    3c14:	90 91 56 03 	lds	r25, 0x0356
    3c18:	90 68       	ori	r25, 0x80	; 128
    3c1a:	90 93 56 03 	sts	0x0356, r25
    3c1e:	80 93 55 03 	sts	0x0355, r24
				break;
    3c22:	08 95       	ret
				
				case '5':
				//Wechseln auf grosse Uhr
				rtc.interupts |=(1<<minuteninterupt);
    3c24:	96 60       	ori	r25, 0x06	; 6
    3c26:	90 93 9c 07 	sts	0x079C, r25
				anzeige |=(1<<Uhrflaggross) | (1<<refreshdisplay);
    3c2a:	20 62       	ori	r18, 0x20	; 32
    3c2c:	30 68       	ori	r19, 0x80	; 128
    3c2e:	30 93 56 03 	sts	0x0356, r19
    3c32:	20 93 55 03 	sts	0x0355, r18
				break;
    3c36:	08 95       	ret
				case '6':
				rtc.interupts |=(1<<minuteninterupt);
    3c38:	96 60       	ori	r25, 0x06	; 6
    3c3a:	90 93 9c 07 	sts	0x079C, r25
				anzeige |= (1<<Weckeranzeigeflag);
    3c3e:	20 64       	ori	r18, 0x40	; 64
    3c40:	30 93 56 03 	sts	0x0356, r19
    3c44:	20 93 55 03 	sts	0x0355, r18
				break;
    3c48:	08 95       	ret
				default:
				//menueflag erneu setzen
				anzeige|=(1<<menueflag)|(1<<Uhrflag);
    3c4a:	22 60       	ori	r18, 0x02	; 2
    3c4c:	30 62       	ori	r19, 0x20	; 32
    3c4e:	30 93 56 03 	sts	0x0356, r19
    3c52:	20 93 55 03 	sts	0x0355, r18
				break;
    3c56:	00 c4       	rjmp	.+2048   	; 0x4458 <__stack+0x359>
    3c58:	a9 01       	movw	r20, r18
    3c5a:	44 27       	eor	r20, r20
    3c5c:	50 73       	andi	r21, 0x30	; 48
			}
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))	//Menue der Einstellungen
    3c5e:	41 15       	cp	r20, r1
    3c60:	50 43       	sbci	r21, 0x30	; 48
    3c62:	d9 f5       	brne	.+118    	; 0x3cda <_Z14eingabehandlerh+0x168>
		{
			anzeige&=~((1<<menueflag)|(1<<Einstellungsflag));
    3c64:	3f 7c       	andi	r19, 0xCF	; 207
    3c66:	30 93 56 03 	sts	0x0356, r19
    3c6a:	20 93 55 03 	sts	0x0355, r18
			switch (taste)
    3c6e:	82 33       	cpi	r24, 0x32	; 50
    3c70:	b1 f0       	breq	.+44     	; 0x3c9e <_Z14eingabehandlerh+0x12c>
    3c72:	18 f4       	brcc	.+6      	; 0x3c7a <_Z14eingabehandlerh+0x108>
    3c74:	81 33       	cpi	r24, 0x31	; 49
    3c76:	31 f0       	breq	.+12     	; 0x3c84 <_Z14eingabehandlerh+0x112>
    3c78:	2a c0       	rjmp	.+84     	; 0x3cce <_Z14eingabehandlerh+0x15c>
    3c7a:	83 33       	cpi	r24, 0x33	; 51
    3c7c:	b1 f0       	breq	.+44     	; 0x3caa <_Z14eingabehandlerh+0x138>
    3c7e:	84 33       	cpi	r24, 0x34	; 52
    3c80:	f9 f0       	breq	.+62     	; 0x3cc0 <_Z14eingabehandlerh+0x14e>
    3c82:	25 c0       	rjmp	.+74     	; 0x3cce <_Z14eingabehandlerh+0x15c>
			{
				case '1':
				//zuruecksetzen der Kalibrierung, da passive Kallibrierung eingebaut
				kompass.kallibrierung_ruecksetzen();
    3c84:	83 ea       	ldi	r24, 0xA3	; 163
    3c86:	97 e0       	ldi	r25, 0x07	; 7
    3c88:	81 d7       	rcall	.+3842   	; 0x4b8c <_ZN7Kompass25kallibrierung_ruecksetzenEv>
				anzeige|=(1<<Kompasflag);
    3c8a:	80 91 55 03 	lds	r24, 0x0355
    3c8e:	90 91 56 03 	lds	r25, 0x0356
    3c92:	80 68       	ori	r24, 0x80	; 128
    3c94:	90 93 56 03 	sts	0x0356, r25
    3c98:	80 93 55 03 	sts	0x0355, r24
				break;
    3c9c:	08 95       	ret
				case '2':
				//Gaineinstellung fuer den Kompass
				anzeige|=(1<<Kompasgaineinstellenflag);
    3c9e:	32 60       	ori	r19, 0x02	; 2
    3ca0:	30 93 56 03 	sts	0x0356, r19
    3ca4:	20 93 55 03 	sts	0x0355, r18
				break;
    3ca8:	08 95       	ret
				case '3':
				//dies ist eine der wenigen Funktinen, die die Handler Strucktur nicht anwenden, da sie die rtc anhaellt
				uhreinstellen();
    3caa:	7b d8       	rcall	.-3850   	; 0x2da2 <_Z13uhreinstellenv>
				anzeige|=(1<<Uhrflag);
    3cac:	80 91 55 03 	lds	r24, 0x0355
    3cb0:	90 91 56 03 	lds	r25, 0x0356
    3cb4:	82 60       	ori	r24, 0x02	; 2
    3cb6:	90 93 56 03 	sts	0x0356, r25
    3cba:	80 93 55 03 	sts	0x0355, r24
				break;
    3cbe:	08 95       	ret
				case '4':
				anzeige |= (1<<Einstellungsflag) | (1<<Weckeranzeigeflag);
    3cc0:	20 64       	ori	r18, 0x40	; 64
    3cc2:	30 61       	ori	r19, 0x10	; 16
    3cc4:	30 93 56 03 	sts	0x0356, r19
    3cc8:	20 93 55 03 	sts	0x0355, r18
				break;
    3ccc:	08 95       	ret
				default:
				//Menueflag neu setzten
				anzeige|=(1<<menueflag)|(1<<Einstellungsflag);
    3cce:	30 63       	ori	r19, 0x30	; 48
    3cd0:	30 93 56 03 	sts	0x0356, r19
    3cd4:	20 93 55 03 	sts	0x0355, r18
				break;
    3cd8:	bf c3       	rjmp	.+1918   	; 0x4458 <__stack+0x359>
			}
		}
		else if ((anzeige&(1<<menueflag)))	//nur das grosse menue
    3cda:	35 ff       	sbrs	r19, 5
    3cdc:	4e c0       	rjmp	.+156    	; 0x3d7a <_Z14eingabehandlerh+0x208>
		{
			anzeige&=~(1<<menueflag);
    3cde:	3f 7d       	andi	r19, 0xDF	; 223
    3ce0:	30 93 56 03 	sts	0x0356, r19
    3ce4:	20 93 55 03 	sts	0x0355, r18
			switch (taste)
    3ce8:	48 2f       	mov	r20, r24
    3cea:	50 e0       	ldi	r21, 0x00	; 0
    3cec:	fa 01       	movw	r30, r20
    3cee:	f1 97       	sbiw	r30, 0x31	; 49
    3cf0:	e7 30       	cpi	r30, 0x07	; 7
    3cf2:	f1 05       	cpc	r31, r1
    3cf4:	e0 f5       	brcc	.+120    	; 0x3d6e <_Z14eingabehandlerh+0x1fc>
    3cf6:	e0 5b       	subi	r30, 0xB0	; 176
    3cf8:	ff 4f       	sbci	r31, 0xFF	; 255
    3cfa:	0c 94 62 32 	jmp	0x64c4	; 0x64c4 <__tablejump2__>
			{
				case '1':
				anzeige|=(1<<Fahradflag);
    3cfe:	21 60       	ori	r18, 0x01	; 1
    3d00:	30 93 56 03 	sts	0x0356, r19
    3d04:	20 93 55 03 	sts	0x0355, r18
				//starten des Timers fuer die geschwindigkeit
				TCCR1B |= ((1<<CS12) | (1<<CS10));
    3d08:	e1 e8       	ldi	r30, 0x81	; 129
    3d0a:	f0 e0       	ldi	r31, 0x00	; 0
    3d0c:	80 81       	ld	r24, Z
    3d0e:	85 60       	ori	r24, 0x05	; 5
    3d10:	80 83       	st	Z, r24
				break;
    3d12:	08 95       	ret
				
				case '2':
				//Wanderanzeige schalten
				anzeige|=(1<<refreshdisplay) | (1<<Wanderflag);
    3d14:	38 68       	ori	r19, 0x88	; 136
    3d16:	30 93 56 03 	sts	0x0356, r19
    3d1a:	20 93 55 03 	sts	0x0355, r18
				break;
    3d1e:	08 95       	ret
				
				case '3':
				anzeige|=(1<<Kompasflag);
    3d20:	20 68       	ori	r18, 0x80	; 128
    3d22:	30 93 56 03 	sts	0x0356, r19
    3d26:	20 93 55 03 	sts	0x0355, r18
				break;
    3d2a:	08 95       	ret
				
				case '4':
				//Menue der Uhr
				anzeige|=(1<<menueflag) | (1<<Uhrflag);
    3d2c:	22 60       	ori	r18, 0x02	; 2
    3d2e:	30 62       	ori	r19, 0x20	; 32
    3d30:	30 93 56 03 	sts	0x0356, r19
    3d34:	20 93 55 03 	sts	0x0355, r18
				break;
    3d38:	08 95       	ret
				
				case '5':
				//menue der Einstellungen
				anzeige|=(1<<menueflag) | (1<<Einstellungsflag);
    3d3a:	30 63       	ori	r19, 0x30	; 48
    3d3c:	30 93 56 03 	sts	0x0356, r19
    3d40:	20 93 55 03 	sts	0x0355, r18
				break;
    3d44:	08 95       	ret
				
				case '6':
				//Display ausschalten
				//anzeige=255;
				oled.clearFrame();
    3d46:	83 e8       	ldi	r24, 0x83	; 131
    3d48:	93 e0       	ldi	r25, 0x03	; 3
    3d4a:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
				anzeige|=(1<<refreshdisplay);
    3d4e:	80 91 55 03 	lds	r24, 0x0355
    3d52:	90 91 56 03 	lds	r25, 0x0356
    3d56:	90 68       	ori	r25, 0x80	; 128
    3d58:	90 93 56 03 	sts	0x0356, r25
    3d5c:	80 93 55 03 	sts	0x0355, r24
				break;
    3d60:	08 95       	ret
				case '7':
				anzeige |= (1<<Druckflag);
    3d62:	34 60       	ori	r19, 0x04	; 4
    3d64:	30 93 56 03 	sts	0x0356, r19
    3d68:	20 93 55 03 	sts	0x0355, r18
				break;
    3d6c:	08 95       	ret
				default:
				//menueflag erneut setzen um abschalten zu verhindern
				anzeige|=(1<<menueflag);
    3d6e:	30 62       	ori	r19, 0x20	; 32
    3d70:	30 93 56 03 	sts	0x0356, r19
    3d74:	20 93 55 03 	sts	0x0355, r18
				break;
    3d78:	6f c3       	rjmp	.+1758   	; 0x4458 <__stack+0x359>
    3d7a:	a9 01       	movw	r20, r18
    3d7c:	40 74       	andi	r20, 0x40	; 64
    3d7e:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag))&&(anzeige&(1<<Weckeranzeigeflag)))
    3d80:	40 34       	cpi	r20, 0x40	; 64
    3d82:	50 41       	sbci	r21, 0x10	; 16
    3d84:	09 f0       	breq	.+2      	; 0x3d88 <_Z14eingabehandlerh+0x216>
    3d86:	68 c0       	rjmp	.+208    	; 0x3e58 <_Z14eingabehandlerh+0x2e6>
		{
			switch (pos)
    3d88:	40 91 54 03 	lds	r20, 0x0354
    3d8c:	41 30       	cpi	r20, 0x01	; 1
    3d8e:	11 f1       	breq	.+68     	; 0x3dd4 <_Z14eingabehandlerh+0x262>
    3d90:	30 f0       	brcs	.+12     	; 0x3d9e <_Z14eingabehandlerh+0x22c>
    3d92:	42 30       	cpi	r20, 0x02	; 2
    3d94:	79 f1       	breq	.+94     	; 0x3df4 <_Z14eingabehandlerh+0x282>
    3d96:	43 30       	cpi	r20, 0x03	; 3
    3d98:	09 f4       	brne	.+2      	; 0x3d9c <_Z14eingabehandlerh+0x22a>
    3d9a:	3f c0       	rjmp	.+126    	; 0x3e1a <_Z14eingabehandlerh+0x2a8>
    3d9c:	5d c3       	rjmp	.+1722   	; 0x4458 <__stack+0x359>
			{
				case 0:
				rtc.WStunden=0;
    3d9e:	10 92 9e 07 	sts	0x079E, r1
				rtc.WMinuten=0;
    3da2:	10 92 9d 07 	sts	0x079D, r1
				rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
    3da6:	97 7e       	andi	r25, 0xE7	; 231
    3da8:	92 60       	ori	r25, 0x02	; 2
    3daa:	90 93 9c 07 	sts	0x079C, r25
				switch (taste)
    3dae:	83 32       	cpi	r24, 0x23	; 35
    3db0:	09 f4       	brne	.+2      	; 0x3db4 <_Z14eingabehandlerh+0x242>
    3db2:	52 c3       	rjmp	.+1700   	; 0x4458 <__stack+0x359>
    3db4:	8a 32       	cpi	r24, 0x2A	; 42
    3db6:	09 f4       	brne	.+2      	; 0x3dba <_Z14eingabehandlerh+0x248>
    3db8:	4f c3       	rjmp	.+1694   	; 0x4458 <__stack+0x359>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden=(taste-'0')*10;
    3dba:	98 2f       	mov	r25, r24
    3dbc:	99 0f       	add	r25, r25
    3dbe:	90 56       	subi	r25, 0x60	; 96
    3dc0:	29 2f       	mov	r18, r25
    3dc2:	22 0f       	add	r18, r18
    3dc4:	22 0f       	add	r18, r18
    3dc6:	92 0f       	add	r25, r18
    3dc8:	90 93 9e 07 	sts	0x079E, r25
					pos++;
    3dcc:	91 e0       	ldi	r25, 0x01	; 1
    3dce:	90 93 54 03 	sts	0x0354, r25
					break;
    3dd2:	42 c3       	rjmp	.+1668   	; 0x4458 <__stack+0x359>
				}
				break;
				case 1:
				switch (taste)
    3dd4:	83 32       	cpi	r24, 0x23	; 35
    3dd6:	09 f4       	brne	.+2      	; 0x3dda <_Z14eingabehandlerh+0x268>
    3dd8:	3f c3       	rjmp	.+1662   	; 0x4458 <__stack+0x359>
    3dda:	8a 32       	cpi	r24, 0x2A	; 42
    3ddc:	09 f4       	brne	.+2      	; 0x3de0 <_Z14eingabehandlerh+0x26e>
    3dde:	3c c3       	rjmp	.+1656   	; 0x4458 <__stack+0x359>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden+=(taste-'0');
    3de0:	ee e9       	ldi	r30, 0x9E	; 158
    3de2:	f7 e0       	ldi	r31, 0x07	; 7
    3de4:	90 81       	ld	r25, Z
    3de6:	90 53       	subi	r25, 0x30	; 48
    3de8:	98 0f       	add	r25, r24
    3dea:	90 83       	st	Z, r25
					pos++;
    3dec:	92 e0       	ldi	r25, 0x02	; 2
    3dee:	90 93 54 03 	sts	0x0354, r25
					break;
    3df2:	32 c3       	rjmp	.+1636   	; 0x4458 <__stack+0x359>
				}
				break;
				case 2:
				switch (taste)
    3df4:	83 32       	cpi	r24, 0x23	; 35
    3df6:	09 f4       	brne	.+2      	; 0x3dfa <_Z14eingabehandlerh+0x288>
    3df8:	2f c3       	rjmp	.+1630   	; 0x4458 <__stack+0x359>
    3dfa:	8a 32       	cpi	r24, 0x2A	; 42
    3dfc:	09 f4       	brne	.+2      	; 0x3e00 <_Z14eingabehandlerh+0x28e>
    3dfe:	2c c3       	rjmp	.+1624   	; 0x4458 <__stack+0x359>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten=(taste-'0')*10;
    3e00:	98 2f       	mov	r25, r24
    3e02:	99 0f       	add	r25, r25
    3e04:	90 56       	subi	r25, 0x60	; 96
    3e06:	29 2f       	mov	r18, r25
    3e08:	22 0f       	add	r18, r18
    3e0a:	22 0f       	add	r18, r18
    3e0c:	92 0f       	add	r25, r18
    3e0e:	90 93 9d 07 	sts	0x079D, r25
					pos++;
    3e12:	93 e0       	ldi	r25, 0x03	; 3
    3e14:	90 93 54 03 	sts	0x0354, r25
					break;
    3e18:	1f c3       	rjmp	.+1598   	; 0x4458 <__stack+0x359>
				}
				break;
				case 3:
				switch (taste)
    3e1a:	83 32       	cpi	r24, 0x23	; 35
    3e1c:	41 f0       	breq	.+16     	; 0x3e2e <_Z14eingabehandlerh+0x2bc>
    3e1e:	8a 32       	cpi	r24, 0x2A	; 42
    3e20:	31 f0       	breq	.+12     	; 0x3e2e <_Z14eingabehandlerh+0x2bc>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten+=(taste-'0');
    3e22:	ed e9       	ldi	r30, 0x9D	; 157
    3e24:	f7 e0       	ldi	r31, 0x07	; 7
    3e26:	40 81       	ld	r20, Z
    3e28:	40 53       	subi	r20, 0x30	; 48
    3e2a:	48 0f       	add	r20, r24
    3e2c:	40 83       	st	Z, r20
					pos++;
					break;
				}
				pos=0;
    3e2e:	10 92 54 03 	sts	0x0354, r1
				if (!(rtc.WStunden>=24) && !(rtc.WMinuten>=60))
    3e32:	40 91 9e 07 	lds	r20, 0x079E
    3e36:	48 31       	cpi	r20, 0x18	; 24
    3e38:	08 f0       	brcs	.+2      	; 0x3e3c <_Z14eingabehandlerh+0x2ca>
    3e3a:	0e c3       	rjmp	.+1564   	; 0x4458 <__stack+0x359>
    3e3c:	40 91 9d 07 	lds	r20, 0x079D
    3e40:	4c 33       	cpi	r20, 0x3C	; 60
    3e42:	08 f0       	brcs	.+2      	; 0x3e46 <_Z14eingabehandlerh+0x2d4>
    3e44:	09 c3       	rjmp	.+1554   	; 0x4458 <__stack+0x359>
				{
					anzeige&=~(1<<Einstellungsflag);
    3e46:	3f 7e       	andi	r19, 0xEF	; 239
    3e48:	30 93 56 03 	sts	0x0356, r19
    3e4c:	20 93 55 03 	sts	0x0355, r18
					rtc.interupts|=(1<<Weckerein);
					rtc.interupts|=(1<<minuteninterupt);
    3e50:	9e 60       	ori	r25, 0x0E	; 14
    3e52:	90 93 9c 07 	sts	0x079C, r25
    3e56:	00 c3       	rjmp	.+1536   	; 0x4458 <__stack+0x359>
				}
				break;
			}
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3e58:	31 ff       	sbrs	r19, 1
    3e5a:	4a c0       	rjmp	.+148    	; 0x3ef0 <_Z14eingabehandlerh+0x37e>
		{
			anzeige&=~(1<<Kompasgaineinstellenflag);
    3e5c:	a9 01       	movw	r20, r18
    3e5e:	5d 7f       	andi	r21, 0xFD	; 253
			anzeige|=(1<<Kompasflag);
    3e60:	40 68       	ori	r20, 0x80	; 128
    3e62:	50 93 56 03 	sts	0x0356, r21
    3e66:	40 93 55 03 	sts	0x0355, r20
			switch (taste) {
    3e6a:	48 2f       	mov	r20, r24
    3e6c:	50 e0       	ldi	r21, 0x00	; 0
    3e6e:	fa 01       	movw	r30, r20
    3e70:	f1 97       	sbiw	r30, 0x31	; 49
    3e72:	e8 30       	cpi	r30, 0x08	; 8
    3e74:	f1 05       	cpc	r31, r1
    3e76:	a0 f5       	brcc	.+104    	; 0x3ee0 <_Z14eingabehandlerh+0x36e>
    3e78:	e9 5a       	subi	r30, 0xA9	; 169
    3e7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e7c:	0c 94 62 32 	jmp	0x64c4	; 0x64c4 <__tablejump2__>
				case '1':
				kompass.HMC5883L_command(0x01,HMCGAIN1370);
    3e80:	40 e0       	ldi	r20, 0x00	; 0
    3e82:	61 e0       	ldi	r22, 0x01	; 1
    3e84:	83 ea       	ldi	r24, 0xA3	; 163
    3e86:	97 e0       	ldi	r25, 0x07	; 7
    3e88:	61 c4       	rjmp	.+2242   	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3e8a:	08 95       	ret
				case '2':
				kompass.HMC5883L_command(0x01,HMCGAIN1090);
    3e8c:	40 e2       	ldi	r20, 0x20	; 32
    3e8e:	61 e0       	ldi	r22, 0x01	; 1
    3e90:	83 ea       	ldi	r24, 0xA3	; 163
    3e92:	97 e0       	ldi	r25, 0x07	; 7
    3e94:	5b c4       	rjmp	.+2230   	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3e96:	08 95       	ret
				case '3':
				kompass.HMC5883L_command(0x01,HMCGAIN820);
    3e98:	40 e4       	ldi	r20, 0x40	; 64
    3e9a:	61 e0       	ldi	r22, 0x01	; 1
    3e9c:	83 ea       	ldi	r24, 0xA3	; 163
    3e9e:	97 e0       	ldi	r25, 0x07	; 7
    3ea0:	55 c4       	rjmp	.+2218   	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3ea2:	08 95       	ret
				case '4':
				kompass.HMC5883L_command(0x01,HMCGAIN660);
    3ea4:	40 e6       	ldi	r20, 0x60	; 96
    3ea6:	61 e0       	ldi	r22, 0x01	; 1
    3ea8:	83 ea       	ldi	r24, 0xA3	; 163
    3eaa:	97 e0       	ldi	r25, 0x07	; 7
    3eac:	4f c4       	rjmp	.+2206   	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3eae:	08 95       	ret
				case '5':
				kompass.HMC5883L_command(0x01,HMCGAIN440);
    3eb0:	40 e8       	ldi	r20, 0x80	; 128
    3eb2:	61 e0       	ldi	r22, 0x01	; 1
    3eb4:	83 ea       	ldi	r24, 0xA3	; 163
    3eb6:	97 e0       	ldi	r25, 0x07	; 7
    3eb8:	49 c4       	rjmp	.+2194   	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3eba:	08 95       	ret
				case '6':
				kompass.HMC5883L_command(0x01,HMCGAIN390);
    3ebc:	40 ea       	ldi	r20, 0xA0	; 160
    3ebe:	61 e0       	ldi	r22, 0x01	; 1
    3ec0:	83 ea       	ldi	r24, 0xA3	; 163
    3ec2:	97 e0       	ldi	r25, 0x07	; 7
    3ec4:	43 c4       	rjmp	.+2182   	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3ec6:	08 95       	ret
				case '7':
				kompass.HMC5883L_command(0x01,HMCGAIN330);
    3ec8:	40 ec       	ldi	r20, 0xC0	; 192
    3eca:	61 e0       	ldi	r22, 0x01	; 1
    3ecc:	83 ea       	ldi	r24, 0xA3	; 163
    3ece:	97 e0       	ldi	r25, 0x07	; 7
    3ed0:	3d c4       	rjmp	.+2170   	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3ed2:	08 95       	ret
				case '8':
				kompass.HMC5883L_command(0x01,HMCGAIN230);
    3ed4:	40 ee       	ldi	r20, 0xE0	; 224
    3ed6:	61 e0       	ldi	r22, 0x01	; 1
    3ed8:	83 ea       	ldi	r24, 0xA3	; 163
    3eda:	97 e0       	ldi	r25, 0x07	; 7
    3edc:	37 c4       	rjmp	.+2158   	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3ede:	08 95       	ret
				default:
				anzeige &=~(1<<Kompasflag);
    3ee0:	2f 77       	andi	r18, 0x7F	; 127
    3ee2:	3d 7f       	andi	r19, 0xFD	; 253
				anzeige|=(1<<Kompasgaineinstellenflag);
    3ee4:	32 60       	ori	r19, 0x02	; 2
    3ee6:	30 93 56 03 	sts	0x0356, r19
    3eea:	20 93 55 03 	sts	0x0355, r18
				break;
    3eee:	b4 c2       	rjmp	.+1384   	; 0x4458 <__stack+0x359>
    3ef0:	a9 01       	movw	r20, r18
    3ef2:	44 70       	andi	r20, 0x04	; 4
    3ef4:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag)) && (anzeige&(1<<Timerflag)))
    3ef6:	44 30       	cpi	r20, 0x04	; 4
    3ef8:	50 41       	sbci	r21, 0x10	; 16
    3efa:	09 f0       	breq	.+2      	; 0x3efe <_Z14eingabehandlerh+0x38c>
    3efc:	60 c1       	rjmp	.+704    	; 0x41be <__stack+0xbf>
		{
			switch (pos)
    3efe:	40 91 54 03 	lds	r20, 0x0354
    3f02:	42 30       	cpi	r20, 0x02	; 2
    3f04:	09 f4       	brne	.+2      	; 0x3f08 <_Z14eingabehandlerh+0x396>
    3f06:	6d c0       	rjmp	.+218    	; 0x3fe2 <_Z14eingabehandlerh+0x470>
    3f08:	28 f4       	brcc	.+10     	; 0x3f14 <_Z14eingabehandlerh+0x3a2>
    3f0a:	44 23       	and	r20, r20
    3f0c:	61 f0       	breq	.+24     	; 0x3f26 <_Z14eingabehandlerh+0x3b4>
    3f0e:	41 30       	cpi	r20, 0x01	; 1
    3f10:	d9 f1       	breq	.+118    	; 0x3f88 <_Z14eingabehandlerh+0x416>
    3f12:	a2 c2       	rjmp	.+1348   	; 0x4458 <__stack+0x359>
    3f14:	44 30       	cpi	r20, 0x04	; 4
    3f16:	09 f4       	brne	.+2      	; 0x3f1a <_Z14eingabehandlerh+0x3a8>
    3f18:	d1 c0       	rjmp	.+418    	; 0x40bc <_Z14eingabehandlerh+0x54a>
    3f1a:	08 f4       	brcc	.+2      	; 0x3f1e <_Z14eingabehandlerh+0x3ac>
    3f1c:	9a c0       	rjmp	.+308    	; 0x4052 <_Z14eingabehandlerh+0x4e0>
    3f1e:	45 30       	cpi	r20, 0x05	; 5
    3f20:	09 f4       	brne	.+2      	; 0x3f24 <_Z14eingabehandlerh+0x3b2>
    3f22:	04 c1       	rjmp	.+520    	; 0x412c <__stack+0x2d>
    3f24:	99 c2       	rjmp	.+1330   	; 0x4458 <__stack+0x359>
			{
				case 0:
					switch (taste)
    3f26:	83 32       	cpi	r24, 0x23	; 35
    3f28:	19 f0       	breq	.+6      	; 0x3f30 <_Z14eingabehandlerh+0x3be>
    3f2a:	8a 32       	cpi	r24, 0x2A	; 42
    3f2c:	41 f0       	breq	.+16     	; 0x3f3e <_Z14eingabehandlerh+0x3cc>
    3f2e:	1a c0       	rjmp	.+52     	; 0x3f64 <_Z14eingabehandlerh+0x3f2>
					{
						case '#':
							pos=0;
    3f30:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    3f34:	10 92 a0 07 	sts	0x07A0, r1
    3f38:	10 92 9f 07 	sts	0x079F, r1
							break;
    3f3c:	08 95       	ret
						case '*':
							pos=0;
    3f3e:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    3f42:	ef e9       	ldi	r30, 0x9F	; 159
    3f44:	f7 e0       	ldi	r31, 0x07	; 7
    3f46:	40 81       	ld	r20, Z
    3f48:	51 81       	ldd	r21, Z+1	; 0x01
    3f4a:	4f 5f       	subi	r20, 0xFF	; 255
    3f4c:	5f 4f       	sbci	r21, 0xFF	; 255
    3f4e:	51 83       	std	Z+1, r21	; 0x01
    3f50:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    3f52:	3f 7e       	andi	r19, 0xEF	; 239
    3f54:	30 93 56 03 	sts	0x0356, r19
    3f58:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    3f5c:	92 62       	ori	r25, 0x22	; 34
    3f5e:	90 93 9c 07 	sts	0x079C, r25
							break;
    3f62:	9e c2       	rjmp	.+1340   	; 0x44a0 <__stack+0x3a1>
						default:
						rtc.Timerzahler=(taste-'0')*10;
    3f64:	48 2f       	mov	r20, r24
    3f66:	50 e0       	ldi	r21, 0x00	; 0
    3f68:	40 53       	subi	r20, 0x30	; 48
    3f6a:	51 09       	sbc	r21, r1
    3f6c:	9a e0       	ldi	r25, 0x0A	; 10
    3f6e:	94 9f       	mul	r25, r20
    3f70:	90 01       	movw	r18, r0
    3f72:	95 9f       	mul	r25, r21
    3f74:	30 0d       	add	r19, r0
    3f76:	11 24       	eor	r1, r1
    3f78:	30 93 a0 07 	sts	0x07A0, r19
    3f7c:	20 93 9f 07 	sts	0x079F, r18
						pos++;
    3f80:	91 e0       	ldi	r25, 0x01	; 1
    3f82:	90 93 54 03 	sts	0x0354, r25
						break;
    3f86:	68 c2       	rjmp	.+1232   	; 0x4458 <__stack+0x359>
					}
					break;
				case 1:
					switch (taste)
    3f88:	83 32       	cpi	r24, 0x23	; 35
    3f8a:	19 f0       	breq	.+6      	; 0x3f92 <_Z14eingabehandlerh+0x420>
    3f8c:	8a 32       	cpi	r24, 0x2A	; 42
    3f8e:	41 f0       	breq	.+16     	; 0x3fa0 <_Z14eingabehandlerh+0x42e>
    3f90:	1a c0       	rjmp	.+52     	; 0x3fc6 <_Z14eingabehandlerh+0x454>
					{
						case '#':
							pos=0;
    3f92:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    3f96:	10 92 a0 07 	sts	0x07A0, r1
    3f9a:	10 92 9f 07 	sts	0x079F, r1
							break;
    3f9e:	08 95       	ret
						case '*':
							pos=0;
    3fa0:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    3fa4:	ef e9       	ldi	r30, 0x9F	; 159
    3fa6:	f7 e0       	ldi	r31, 0x07	; 7
    3fa8:	40 81       	ld	r20, Z
    3faa:	51 81       	ldd	r21, Z+1	; 0x01
    3fac:	4f 5f       	subi	r20, 0xFF	; 255
    3fae:	5f 4f       	sbci	r21, 0xFF	; 255
    3fb0:	51 83       	std	Z+1, r21	; 0x01
    3fb2:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    3fb4:	3f 7e       	andi	r19, 0xEF	; 239
    3fb6:	30 93 56 03 	sts	0x0356, r19
    3fba:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    3fbe:	92 62       	ori	r25, 0x22	; 34
    3fc0:	90 93 9c 07 	sts	0x079C, r25
							break;
    3fc4:	6d c2       	rjmp	.+1242   	; 0x44a0 <__stack+0x3a1>
						default:
						rtc.Timerzahler+=(taste-'0');
    3fc6:	ef e9       	ldi	r30, 0x9F	; 159
    3fc8:	f7 e0       	ldi	r31, 0x07	; 7
    3fca:	20 81       	ld	r18, Z
    3fcc:	31 81       	ldd	r19, Z+1	; 0x01
    3fce:	20 53       	subi	r18, 0x30	; 48
    3fd0:	31 09       	sbc	r19, r1
    3fd2:	28 0f       	add	r18, r24
    3fd4:	31 1d       	adc	r19, r1
    3fd6:	31 83       	std	Z+1, r19	; 0x01
    3fd8:	20 83       	st	Z, r18
						pos++;
    3fda:	92 e0       	ldi	r25, 0x02	; 2
    3fdc:	90 93 54 03 	sts	0x0354, r25
						break;
    3fe0:	3b c2       	rjmp	.+1142   	; 0x4458 <__stack+0x359>
					}
					break;
				case 2:
					switch (taste)
    3fe2:	83 32       	cpi	r24, 0x23	; 35
    3fe4:	19 f0       	breq	.+6      	; 0x3fec <_Z14eingabehandlerh+0x47a>
    3fe6:	8a 32       	cpi	r24, 0x2A	; 42
    3fe8:	41 f0       	breq	.+16     	; 0x3ffa <_Z14eingabehandlerh+0x488>
    3fea:	1a c0       	rjmp	.+52     	; 0x4020 <_Z14eingabehandlerh+0x4ae>
					{
						case '#':
							pos=0;
    3fec:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    3ff0:	10 92 a0 07 	sts	0x07A0, r1
    3ff4:	10 92 9f 07 	sts	0x079F, r1
							break;
    3ff8:	08 95       	ret
						case '*':
							pos=0;
    3ffa:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    3ffe:	ef e9       	ldi	r30, 0x9F	; 159
    4000:	f7 e0       	ldi	r31, 0x07	; 7
    4002:	40 81       	ld	r20, Z
    4004:	51 81       	ldd	r21, Z+1	; 0x01
    4006:	4f 5f       	subi	r20, 0xFF	; 255
    4008:	5f 4f       	sbci	r21, 0xFF	; 255
    400a:	51 83       	std	Z+1, r21	; 0x01
    400c:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    400e:	3f 7e       	andi	r19, 0xEF	; 239
    4010:	30 93 56 03 	sts	0x0356, r19
    4014:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);;
    4018:	92 62       	ori	r25, 0x22	; 34
    401a:	90 93 9c 07 	sts	0x079C, r25
							break;
    401e:	40 c2       	rjmp	.+1152   	; 0x44a0 <__stack+0x3a1>
						default:
						rtc.Timerzahler+=(taste-'0')*10*60;
    4020:	ef e9       	ldi	r30, 0x9F	; 159
    4022:	f7 e0       	ldi	r31, 0x07	; 7
    4024:	68 2f       	mov	r22, r24
    4026:	70 e0       	ldi	r23, 0x00	; 0
    4028:	60 53       	subi	r22, 0x30	; 48
    402a:	71 09       	sbc	r23, r1
    402c:	28 e5       	ldi	r18, 0x58	; 88
    402e:	32 e0       	ldi	r19, 0x02	; 2
    4030:	62 9f       	mul	r22, r18
    4032:	a0 01       	movw	r20, r0
    4034:	63 9f       	mul	r22, r19
    4036:	50 0d       	add	r21, r0
    4038:	72 9f       	mul	r23, r18
    403a:	50 0d       	add	r21, r0
    403c:	11 24       	eor	r1, r1
    403e:	20 81       	ld	r18, Z
    4040:	31 81       	ldd	r19, Z+1	; 0x01
    4042:	24 0f       	add	r18, r20
    4044:	35 1f       	adc	r19, r21
    4046:	31 83       	std	Z+1, r19	; 0x01
    4048:	20 83       	st	Z, r18
						pos++;
    404a:	93 e0       	ldi	r25, 0x03	; 3
    404c:	90 93 54 03 	sts	0x0354, r25
						break;
    4050:	03 c2       	rjmp	.+1030   	; 0x4458 <__stack+0x359>
					}
					break;
				case 3:
					switch (taste)
    4052:	83 32       	cpi	r24, 0x23	; 35
    4054:	19 f0       	breq	.+6      	; 0x405c <_Z14eingabehandlerh+0x4ea>
    4056:	8a 32       	cpi	r24, 0x2A	; 42
    4058:	41 f0       	breq	.+16     	; 0x406a <_Z14eingabehandlerh+0x4f8>
    405a:	1a c0       	rjmp	.+52     	; 0x4090 <_Z14eingabehandlerh+0x51e>
					{
						case '#':
							pos=0;
    405c:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    4060:	10 92 a0 07 	sts	0x07A0, r1
    4064:	10 92 9f 07 	sts	0x079F, r1
							break;
    4068:	08 95       	ret
						case '*':
							pos=0;
    406a:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    406e:	ef e9       	ldi	r30, 0x9F	; 159
    4070:	f7 e0       	ldi	r31, 0x07	; 7
    4072:	40 81       	ld	r20, Z
    4074:	51 81       	ldd	r21, Z+1	; 0x01
    4076:	4f 5f       	subi	r20, 0xFF	; 255
    4078:	5f 4f       	sbci	r21, 0xFF	; 255
    407a:	51 83       	std	Z+1, r21	; 0x01
    407c:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    407e:	3f 7e       	andi	r19, 0xEF	; 239
    4080:	30 93 56 03 	sts	0x0356, r19
    4084:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    4088:	92 62       	ori	r25, 0x22	; 34
    408a:	90 93 9c 07 	sts	0x079C, r25
							break;
    408e:	08 c2       	rjmp	.+1040   	; 0x44a0 <__stack+0x3a1>
						default:
						rtc.Timerzahler+=(taste-'0')*60;
    4090:	ef e9       	ldi	r30, 0x9F	; 159
    4092:	f7 e0       	ldi	r31, 0x07	; 7
    4094:	28 2f       	mov	r18, r24
    4096:	30 e0       	ldi	r19, 0x00	; 0
    4098:	20 53       	subi	r18, 0x30	; 48
    409a:	31 09       	sbc	r19, r1
    409c:	9c e3       	ldi	r25, 0x3C	; 60
    409e:	92 9f       	mul	r25, r18
    40a0:	a0 01       	movw	r20, r0
    40a2:	93 9f       	mul	r25, r19
    40a4:	50 0d       	add	r21, r0
    40a6:	11 24       	eor	r1, r1
    40a8:	20 81       	ld	r18, Z
    40aa:	31 81       	ldd	r19, Z+1	; 0x01
    40ac:	24 0f       	add	r18, r20
    40ae:	35 1f       	adc	r19, r21
    40b0:	31 83       	std	Z+1, r19	; 0x01
    40b2:	20 83       	st	Z, r18
						pos++;
    40b4:	94 e0       	ldi	r25, 0x04	; 4
    40b6:	90 93 54 03 	sts	0x0354, r25
						break;
    40ba:	ce c1       	rjmp	.+924    	; 0x4458 <__stack+0x359>
					}
					break;
				case 4:
					switch (taste)
    40bc:	83 32       	cpi	r24, 0x23	; 35
    40be:	19 f0       	breq	.+6      	; 0x40c6 <_Z14eingabehandlerh+0x554>
    40c0:	8a 32       	cpi	r24, 0x2A	; 42
    40c2:	41 f0       	breq	.+16     	; 0x40d4 <_Z14eingabehandlerh+0x562>
    40c4:	1a c0       	rjmp	.+52     	; 0x40fa <_Z14eingabehandlerh+0x588>
					{
						case '#':
							pos=0;
    40c6:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    40ca:	10 92 a0 07 	sts	0x07A0, r1
    40ce:	10 92 9f 07 	sts	0x079F, r1
							break;
    40d2:	08 95       	ret
						case '*':
							pos=0;
    40d4:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    40d8:	ef e9       	ldi	r30, 0x9F	; 159
    40da:	f7 e0       	ldi	r31, 0x07	; 7
    40dc:	40 81       	ld	r20, Z
    40de:	51 81       	ldd	r21, Z+1	; 0x01
    40e0:	4f 5f       	subi	r20, 0xFF	; 255
    40e2:	5f 4f       	sbci	r21, 0xFF	; 255
    40e4:	51 83       	std	Z+1, r21	; 0x01
    40e6:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    40e8:	3f 7e       	andi	r19, 0xEF	; 239
    40ea:	30 93 56 03 	sts	0x0356, r19
    40ee:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    40f2:	92 62       	ori	r25, 0x22	; 34
    40f4:	90 93 9c 07 	sts	0x079C, r25
							break;
    40f8:	d3 c1       	rjmp	.+934    	; 0x44a0 <__stack+0x3a1>
						default:
						rtc.Timerzahler+=(taste-'0')*10*3600;
    40fa:	ef e9       	ldi	r30, 0x9F	; 159
    40fc:	f7 e0       	ldi	r31, 0x07	; 7
    40fe:	68 2f       	mov	r22, r24
    4100:	70 e0       	ldi	r23, 0x00	; 0
    4102:	60 53       	subi	r22, 0x30	; 48
    4104:	71 09       	sbc	r23, r1
    4106:	20 ea       	ldi	r18, 0xA0	; 160
    4108:	3c e8       	ldi	r19, 0x8C	; 140
    410a:	62 9f       	mul	r22, r18
    410c:	a0 01       	movw	r20, r0
    410e:	63 9f       	mul	r22, r19
    4110:	50 0d       	add	r21, r0
    4112:	72 9f       	mul	r23, r18
    4114:	50 0d       	add	r21, r0
    4116:	11 24       	eor	r1, r1
    4118:	20 81       	ld	r18, Z
    411a:	31 81       	ldd	r19, Z+1	; 0x01
    411c:	24 0f       	add	r18, r20
    411e:	35 1f       	adc	r19, r21
    4120:	31 83       	std	Z+1, r19	; 0x01
    4122:	20 83       	st	Z, r18
						pos++;
    4124:	95 e0       	ldi	r25, 0x05	; 5
    4126:	90 93 54 03 	sts	0x0354, r25
						break;
    412a:	96 c1       	rjmp	.+812    	; 0x4458 <__stack+0x359>
					}
					break;
				case 5:
					switch (taste)
    412c:	83 32       	cpi	r24, 0x23	; 35
    412e:	19 f0       	breq	.+6      	; 0x4136 <__stack+0x37>
    4130:	8a 32       	cpi	r24, 0x2A	; 42
    4132:	31 f0       	breq	.+12     	; 0x4140 <__stack+0x41>
    4134:	16 c0       	rjmp	.+44     	; 0x4162 <__stack+0x63>
					{
						case '#':
							pos=0;
							rtc.Timerzahler=0;
    4136:	10 92 a0 07 	sts	0x07A0, r1
    413a:	10 92 9f 07 	sts	0x079F, r1
							break;
    413e:	26 c0       	rjmp	.+76     	; 0x418c <__stack+0x8d>
						case '*':
							pos=0;
							rtc.Timerzahler++;
    4140:	ef e9       	ldi	r30, 0x9F	; 159
    4142:	f7 e0       	ldi	r31, 0x07	; 7
    4144:	40 81       	ld	r20, Z
    4146:	51 81       	ldd	r21, Z+1	; 0x01
    4148:	4f 5f       	subi	r20, 0xFF	; 255
    414a:	5f 4f       	sbci	r21, 0xFF	; 255
    414c:	51 83       	std	Z+1, r21	; 0x01
    414e:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    4150:	3f 7e       	andi	r19, 0xEF	; 239
    4152:	30 93 56 03 	sts	0x0356, r19
    4156:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    415a:	92 62       	ori	r25, 0x22	; 34
    415c:	90 93 9c 07 	sts	0x079C, r25
							break;
    4160:	15 c0       	rjmp	.+42     	; 0x418c <__stack+0x8d>
						default:
						rtc.Timerzahler+=(taste-'0')*3600;
    4162:	ef e9       	ldi	r30, 0x9F	; 159
    4164:	f7 e0       	ldi	r31, 0x07	; 7
    4166:	68 2f       	mov	r22, r24
    4168:	70 e0       	ldi	r23, 0x00	; 0
    416a:	60 53       	subi	r22, 0x30	; 48
    416c:	71 09       	sbc	r23, r1
    416e:	20 e1       	ldi	r18, 0x10	; 16
    4170:	3e e0       	ldi	r19, 0x0E	; 14
    4172:	62 9f       	mul	r22, r18
    4174:	a0 01       	movw	r20, r0
    4176:	63 9f       	mul	r22, r19
    4178:	50 0d       	add	r21, r0
    417a:	72 9f       	mul	r23, r18
    417c:	50 0d       	add	r21, r0
    417e:	11 24       	eor	r1, r1
    4180:	20 81       	ld	r18, Z
    4182:	31 81       	ldd	r19, Z+1	; 0x01
    4184:	24 0f       	add	r18, r20
    4186:	35 1f       	adc	r19, r21
    4188:	31 83       	std	Z+1, r19	; 0x01
    418a:	20 83       	st	Z, r18
						pos++;
						break;
					}
					pos=0;
    418c:	10 92 54 03 	sts	0x0354, r1
					rtc.Timerzahler++;
    4190:	ef e9       	ldi	r30, 0x9F	; 159
    4192:	f7 e0       	ldi	r31, 0x07	; 7
    4194:	20 81       	ld	r18, Z
    4196:	31 81       	ldd	r19, Z+1	; 0x01
    4198:	2f 5f       	subi	r18, 0xFF	; 255
    419a:	3f 4f       	sbci	r19, 0xFF	; 255
    419c:	31 83       	std	Z+1, r19	; 0x01
    419e:	20 83       	st	Z, r18
					anzeige&=~(1<<Einstellungsflag);
    41a0:	20 91 55 03 	lds	r18, 0x0355
    41a4:	30 91 56 03 	lds	r19, 0x0356
    41a8:	3f 7e       	andi	r19, 0xEF	; 239
    41aa:	30 93 56 03 	sts	0x0356, r19
    41ae:	20 93 55 03 	sts	0x0355, r18
					rtc.interupts|=(1<<Timerlauft);
    41b2:	ec e9       	ldi	r30, 0x9C	; 156
    41b4:	f7 e0       	ldi	r31, 0x07	; 7
    41b6:	90 81       	ld	r25, Z
    41b8:	90 62       	ori	r25, 0x20	; 32
    41ba:	90 83       	st	Z, r25
					break;
    41bc:	4d c1       	rjmp	.+666    	; 0x4458 <__stack+0x359>
				default:
					break;
			}
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    41be:	23 ff       	sbrs	r18, 3
    41c0:	22 c0       	rjmp	.+68     	; 0x4206 <__stack+0x107>
		{
			if (taste=='*')
    41c2:	8a 32       	cpi	r24, 0x2A	; 42
    41c4:	59 f4       	brne	.+22     	; 0x41dc <__stack+0xdd>
			{
				if ((rtc.interupts&(1<<Stoppuhrlauft)))
    41c6:	96 ff       	sbrs	r25, 6
    41c8:	05 c0       	rjmp	.+10     	; 0x41d4 <__stack+0xd5>
				{
					rtc.interupts&=~(1<<Stoppuhrlauft);
    41ca:	9f 7b       	andi	r25, 0xBF	; 191
    41cc:	92 60       	ori	r25, 0x02	; 2
    41ce:	90 93 9c 07 	sts	0x079C, r25
    41d2:	66 c1       	rjmp	.+716    	; 0x44a0 <__stack+0x3a1>
				}
				else{
					rtc.interupts|=(1<<Stoppuhrlauft);
    41d4:	92 64       	ori	r25, 0x42	; 66
    41d6:	90 93 9c 07 	sts	0x079C, r25
    41da:	62 c1       	rjmp	.+708    	; 0x44a0 <__stack+0x3a1>
				}
			}
			else if (taste=='0')
    41dc:	80 33       	cpi	r24, 0x30	; 48
    41de:	29 f4       	brne	.+10     	; 0x41ea <__stack+0xeb>
			{
				rtc.Stoppuhrzahler=0;
    41e0:	10 92 a2 07 	sts	0x07A2, r1
    41e4:	10 92 a1 07 	sts	0x07A1, r1
    41e8:	08 95       	ret
			}
			else if (taste=='#')
    41ea:	83 32       	cpi	r24, 0x23	; 35
    41ec:	09 f0       	breq	.+2      	; 0x41f0 <__stack+0xf1>
    41ee:	5e c1       	rjmp	.+700    	; 0x44ac <__stack+0x3ad>
			{
				anzeige&=~((1<<Stoppuhrflag));
				rtc.interupts&=~(1<<Stoppuhrlauft);
    41f0:	9f 7b       	andi	r25, 0xBF	; 191
    41f2:	92 60       	ori	r25, 0x02	; 2
    41f4:	90 93 9c 07 	sts	0x079C, r25
			{
				rtc.Stoppuhrzahler=0;
			}
			else if (taste=='#')
			{
				anzeige&=~((1<<Stoppuhrflag));
    41f8:	27 7f       	andi	r18, 0xF7	; 247
				rtc.interupts&=~(1<<Stoppuhrlauft);
				anzeige|=(1<<menueflag);
    41fa:	30 62       	ori	r19, 0x20	; 32
    41fc:	30 93 56 03 	sts	0x0356, r19
    4200:	20 93 55 03 	sts	0x0355, r18
    4204:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflag)))
    4206:	21 ff       	sbrs	r18, 1
    4208:	26 c0       	rjmp	.+76     	; 0x4256 <__stack+0x157>
		{
			if (taste=='#')
    420a:	83 32       	cpi	r24, 0x23	; 35
    420c:	49 f4       	brne	.+18     	; 0x4220 <__stack+0x121>
			{
				pos=0;
    420e:	10 92 54 03 	sts	0x0354, r1
				anzeige&=~(1<<Uhrflag);
    4212:	2d 7f       	andi	r18, 0xFD	; 253
				anzeige|=(1<<menueflag);
    4214:	30 62       	ori	r19, 0x20	; 32
    4216:	30 93 56 03 	sts	0x0356, r19
    421a:	20 93 55 03 	sts	0x0355, r18
    421e:	08 95       	ret
			}
			else if (taste=='*')
    4220:	8a 32       	cpi	r24, 0x2A	; 42
    4222:	49 f4       	brne	.+18     	; 0x4236 <__stack+0x137>
			{
				pos++;
    4224:	80 91 54 03 	lds	r24, 0x0354
    4228:	8f 5f       	subi	r24, 0xFF	; 255
				if (pos>1)
    422a:	82 30       	cpi	r24, 0x02	; 2
    422c:	08 f4       	brcc	.+2      	; 0x4230 <__stack+0x131>
    422e:	36 c1       	rjmp	.+620    	; 0x449c <__stack+0x39d>
				{
					pos=0;
    4230:	10 92 54 03 	sts	0x0354, r1
    4234:	35 c1       	rjmp	.+618    	; 0x44a0 <__stack+0x3a1>
				}
			}
			else if (taste=='0')
    4236:	80 33       	cpi	r24, 0x30	; 48
    4238:	09 f0       	breq	.+2      	; 0x423c <__stack+0x13d>
    423a:	38 c1       	rjmp	.+624    	; 0x44ac <__stack+0x3ad>
			{
				if (LED.ison())
    423c:	80 e8       	ldi	r24, 0x80	; 128
    423e:	93 e0       	ldi	r25, 0x03	; 3
    4240:	81 d6       	rcall	.+3330   	; 0x4f44 <_ZN6Output4isonEv>
    4242:	88 23       	and	r24, r24
    4244:	21 f0       	breq	.+8      	; 0x424e <__stack+0x14f>
				{
					LED.off();
    4246:	80 e8       	ldi	r24, 0x80	; 128
    4248:	93 e0       	ldi	r25, 0x03	; 3
    424a:	bf c6       	rjmp	.+3454   	; 0x4fca <_ZN6Output3offEv>
    424c:	08 95       	ret
				}
				else{
					LED.on();
    424e:	80 e8       	ldi	r24, 0x80	; 128
    4250:	93 e0       	ldi	r25, 0x03	; 3
    4252:	2f c6       	rjmp	.+3166   	; 0x4eb2 <_ZN6Output2onEv>
    4254:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Kompasflag)))
    4256:	27 ff       	sbrs	r18, 7
    4258:	1a c0       	rjmp	.+52     	; 0x428e <__stack+0x18f>
		{
			if (taste=='#')
    425a:	83 32       	cpi	r24, 0x23	; 35
    425c:	41 f4       	brne	.+16     	; 0x426e <__stack+0x16f>
			{
				anzeige&=~(1<<Kompasflag);
    425e:	c9 01       	movw	r24, r18
    4260:	8f 77       	andi	r24, 0x7F	; 127
				anzeige|=(1<<menueflag);
    4262:	90 62       	ori	r25, 0x20	; 32
    4264:	90 93 56 03 	sts	0x0356, r25
    4268:	80 93 55 03 	sts	0x0355, r24
    426c:	08 95       	ret
			}
			else if (taste=='0')
    426e:	80 33       	cpi	r24, 0x30	; 48
    4270:	09 f0       	breq	.+2      	; 0x4274 <__stack+0x175>
    4272:	f2 c0       	rjmp	.+484    	; 0x4458 <__stack+0x359>
			{
				if (LED.ison())
    4274:	80 e8       	ldi	r24, 0x80	; 128
    4276:	93 e0       	ldi	r25, 0x03	; 3
    4278:	65 d6       	rcall	.+3274   	; 0x4f44 <_ZN6Output4isonEv>
    427a:	88 23       	and	r24, r24
    427c:	21 f0       	breq	.+8      	; 0x4286 <__stack+0x187>
				{
					LED.off();
    427e:	80 e8       	ldi	r24, 0x80	; 128
    4280:	93 e0       	ldi	r25, 0x03	; 3
    4282:	a3 c6       	rjmp	.+3398   	; 0x4fca <_ZN6Output3offEv>
    4284:	08 95       	ret
				}
				else{
					LED.on();
    4286:	80 e8       	ldi	r24, 0x80	; 128
    4288:	93 e0       	ldi	r25, 0x03	; 3
    428a:	13 c6       	rjmp	.+3110   	; 0x4eb2 <_ZN6Output2onEv>
    428c:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Fahradflag)))
    428e:	20 ff       	sbrs	r18, 0
    4290:	3a c0       	rjmp	.+116    	; 0x4306 <__stack+0x207>
		{
			if (taste=='#')
    4292:	83 32       	cpi	r24, 0x23	; 35
    4294:	69 f4       	brne	.+26     	; 0x42b0 <__stack+0x1b1>
			{
				anzeige&=~(1<<Fahradflag);
    4296:	c9 01       	movw	r24, r18
    4298:	8e 7f       	andi	r24, 0xFE	; 254
				anzeige|=(1<<menueflag);
    429a:	90 62       	ori	r25, 0x20	; 32
    429c:	90 93 56 03 	sts	0x0356, r25
    42a0:	80 93 55 03 	sts	0x0355, r24
				TCCR1B &= ~((1<<CS12) | (1<<CS10));
    42a4:	e1 e8       	ldi	r30, 0x81	; 129
    42a6:	f0 e0       	ldi	r31, 0x00	; 0
    42a8:	80 81       	ld	r24, Z
    42aa:	8a 7f       	andi	r24, 0xFA	; 250
    42ac:	80 83       	st	Z, r24
    42ae:	08 95       	ret
			}
			else if (taste=='*')
    42b0:	8a 32       	cpi	r24, 0x2A	; 42
    42b2:	c9 f4       	brne	.+50     	; 0x42e6 <__stack+0x1e7>
			{
				maxgeschw = 0;
    42b4:	10 92 48 03 	sts	0x0348, r1
    42b8:	10 92 49 03 	sts	0x0349, r1
    42bc:	10 92 4a 03 	sts	0x034A, r1
    42c0:	10 92 4b 03 	sts	0x034B, r1
				strecke = 0;
    42c4:	10 92 4c 03 	sts	0x034C, r1
    42c8:	10 92 4d 03 	sts	0x034D, r1
    42cc:	10 92 4e 03 	sts	0x034E, r1
    42d0:	10 92 4f 03 	sts	0x034F, r1
				Fahrtzeit = 0;
    42d4:	10 92 44 03 	sts	0x0344, r1
    42d8:	10 92 45 03 	sts	0x0345, r1
    42dc:	10 92 46 03 	sts	0x0346, r1
    42e0:	10 92 47 03 	sts	0x0347, r1
    42e4:	dd c0       	rjmp	.+442    	; 0x44a0 <__stack+0x3a1>
			}
			else if (taste=='0')
    42e6:	80 33       	cpi	r24, 0x30	; 48
    42e8:	09 f0       	breq	.+2      	; 0x42ec <__stack+0x1ed>
    42ea:	e0 c0       	rjmp	.+448    	; 0x44ac <__stack+0x3ad>
			{
				if (LED.ison())
    42ec:	80 e8       	ldi	r24, 0x80	; 128
    42ee:	93 e0       	ldi	r25, 0x03	; 3
    42f0:	29 d6       	rcall	.+3154   	; 0x4f44 <_ZN6Output4isonEv>
    42f2:	88 23       	and	r24, r24
    42f4:	21 f0       	breq	.+8      	; 0x42fe <__stack+0x1ff>
				{
					LED.off();
    42f6:	80 e8       	ldi	r24, 0x80	; 128
    42f8:	93 e0       	ldi	r25, 0x03	; 3
    42fa:	67 c6       	rjmp	.+3278   	; 0x4fca <_ZN6Output3offEv>
    42fc:	08 95       	ret
				}
				else{
					LED.on();
    42fe:	80 e8       	ldi	r24, 0x80	; 128
    4300:	93 e0       	ldi	r25, 0x03	; 3
    4302:	d7 c5       	rjmp	.+2990   	; 0x4eb2 <_ZN6Output2onEv>
    4304:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Druckflag)))
    4306:	32 ff       	sbrs	r19, 2
    4308:	29 c0       	rjmp	.+82     	; 0x435c <__stack+0x25d>
		{
			if (taste=='#')
    430a:	83 32       	cpi	r24, 0x23	; 35
    430c:	41 f4       	brne	.+16     	; 0x431e <__stack+0x21f>
			{
				anzeige&=~(1<<Druckflag);
    430e:	c9 01       	movw	r24, r18
    4310:	9b 7f       	andi	r25, 0xFB	; 251
				anzeige|=(1<<menueflag);
    4312:	90 62       	ori	r25, 0x20	; 32
    4314:	90 93 56 03 	sts	0x0356, r25
    4318:	80 93 55 03 	sts	0x0355, r24
    431c:	08 95       	ret
			}
			else if (taste=='*')
    431e:	8a 32       	cpi	r24, 0x2A	; 42
    4320:	69 f4       	brne	.+26     	; 0x433c <__stack+0x23d>
			{
				Baro.set_Pressure0(Baro.Press);
    4322:	40 91 6c 03 	lds	r20, 0x036C
    4326:	50 91 6d 03 	lds	r21, 0x036D
    432a:	60 91 6e 03 	lds	r22, 0x036E
    432e:	70 91 6f 03 	lds	r23, 0x036F
    4332:	8c e6       	ldi	r24, 0x6C	; 108
    4334:	93 e0       	ldi	r25, 0x03	; 3
    4336:	0e 94 de 29 	call	0x53bc	; 0x53bc <_ZN8Pressure13set_Pressure0Ed>
    433a:	b2 c0       	rjmp	.+356    	; 0x44a0 <__stack+0x3a1>
			}
			else if (taste=='0')
    433c:	80 33       	cpi	r24, 0x30	; 48
    433e:	09 f0       	breq	.+2      	; 0x4342 <__stack+0x243>
    4340:	b5 c0       	rjmp	.+362    	; 0x44ac <__stack+0x3ad>
			{
				if (LED.ison())
    4342:	80 e8       	ldi	r24, 0x80	; 128
    4344:	93 e0       	ldi	r25, 0x03	; 3
    4346:	fe d5       	rcall	.+3068   	; 0x4f44 <_ZN6Output4isonEv>
    4348:	88 23       	and	r24, r24
    434a:	21 f0       	breq	.+8      	; 0x4354 <__stack+0x255>
				{
					LED.off();
    434c:	80 e8       	ldi	r24, 0x80	; 128
    434e:	93 e0       	ldi	r25, 0x03	; 3
    4350:	3c c6       	rjmp	.+3192   	; 0x4fca <_ZN6Output3offEv>
    4352:	08 95       	ret
				}
				else{
					LED.on();
    4354:	80 e8       	ldi	r24, 0x80	; 128
    4356:	93 e0       	ldi	r25, 0x03	; 3
    4358:	ac c5       	rjmp	.+2904   	; 0x4eb2 <_ZN6Output2onEv>
    435a:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Timerflag)))
    435c:	22 ff       	sbrs	r18, 2
    435e:	23 c0       	rjmp	.+70     	; 0x43a6 <__stack+0x2a7>
		{
			if (taste=='#')
    4360:	83 32       	cpi	r24, 0x23	; 35
    4362:	09 f0       	breq	.+2      	; 0x4366 <__stack+0x267>
    4364:	79 c0       	rjmp	.+242    	; 0x4458 <__stack+0x359>
			{
				anzeige&=~((1<<Timerflag)|(1<<blinkflag));
    4366:	2b 7f       	andi	r18, 0xFB	; 251
    4368:	3f 7b       	andi	r19, 0xBF	; 191
    436a:	30 93 56 03 	sts	0x0356, r19
    436e:	20 93 55 03 	sts	0x0355, r18
				rtc.interupts&=~((1<<Timerlauft)|(1<<Alarm));
    4372:	89 2f       	mov	r24, r25
    4374:	8e 7d       	andi	r24, 0xDE	; 222
    4376:	82 60       	ori	r24, 0x02	; 2
    4378:	80 93 9c 07 	sts	0x079C, r24
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    437c:	60 e0       	ldi	r22, 0x00	; 0
    437e:	83 e8       	ldi	r24, 0x83	; 131
    4380:	93 e0       	ldi	r25, 0x03	; 3
    4382:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
				LED.off();
    4386:	80 e8       	ldi	r24, 0x80	; 128
    4388:	93 e0       	ldi	r25, 0x03	; 3
    438a:	1f d6       	rcall	.+3134   	; 0x4fca <_ZN6Output3offEv>
				Vibrationsmotor.off();
    438c:	8e e7       	ldi	r24, 0x7E	; 126
    438e:	93 e0       	ldi	r25, 0x03	; 3
    4390:	1c d6       	rcall	.+3128   	; 0x4fca <_ZN6Output3offEv>
				
				anzeige|=(1<<menueflag);
    4392:	80 91 55 03 	lds	r24, 0x0355
    4396:	90 91 56 03 	lds	r25, 0x0356
    439a:	90 62       	ori	r25, 0x20	; 32
    439c:	90 93 56 03 	sts	0x0356, r25
    43a0:	80 93 55 03 	sts	0x0355, r24
    43a4:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflaggross)))
    43a6:	25 ff       	sbrs	r18, 5
    43a8:	1a c0       	rjmp	.+52     	; 0x43de <__stack+0x2df>
		{
			if (taste=='#')
    43aa:	83 32       	cpi	r24, 0x23	; 35
    43ac:	41 f4       	brne	.+16     	; 0x43be <__stack+0x2bf>
			{
				anzeige&=~(1<<Uhrflaggross);
    43ae:	c9 01       	movw	r24, r18
    43b0:	8f 7d       	andi	r24, 0xDF	; 223
				anzeige|=(1<<menueflag);
    43b2:	90 62       	ori	r25, 0x20	; 32
    43b4:	90 93 56 03 	sts	0x0356, r25
    43b8:	80 93 55 03 	sts	0x0355, r24
    43bc:	08 95       	ret
			}
			else if (taste=='0')
    43be:	80 33       	cpi	r24, 0x30	; 48
    43c0:	09 f0       	breq	.+2      	; 0x43c4 <__stack+0x2c5>
    43c2:	4a c0       	rjmp	.+148    	; 0x4458 <__stack+0x359>
			{
				if (LED.ison())
    43c4:	80 e8       	ldi	r24, 0x80	; 128
    43c6:	93 e0       	ldi	r25, 0x03	; 3
    43c8:	bd d5       	rcall	.+2938   	; 0x4f44 <_ZN6Output4isonEv>
    43ca:	88 23       	and	r24, r24
    43cc:	21 f0       	breq	.+8      	; 0x43d6 <__stack+0x2d7>
				{
					LED.off();
    43ce:	80 e8       	ldi	r24, 0x80	; 128
    43d0:	93 e0       	ldi	r25, 0x03	; 3
    43d2:	fb c5       	rjmp	.+3062   	; 0x4fca <_ZN6Output3offEv>
    43d4:	08 95       	ret
				}
				else{
					LED.on();
    43d6:	80 e8       	ldi	r24, 0x80	; 128
    43d8:	93 e0       	ldi	r25, 0x03	; 3
    43da:	6b c5       	rjmp	.+2774   	; 0x4eb2 <_ZN6Output2onEv>
    43dc:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Wanderflag)))
    43de:	33 ff       	sbrs	r19, 3
    43e0:	0a c0       	rjmp	.+20     	; 0x43f6 <__stack+0x2f7>
		{
			if (taste=='#')
    43e2:	83 32       	cpi	r24, 0x23	; 35
    43e4:	c9 f5       	brne	.+114    	; 0x4458 <__stack+0x359>
			{
				anzeige &= ~(1<<Wanderflag);
    43e6:	c9 01       	movw	r24, r18
    43e8:	97 7f       	andi	r25, 0xF7	; 247
				anzeige |= (1<<menueflag);
    43ea:	90 62       	ori	r25, 0x20	; 32
    43ec:	90 93 56 03 	sts	0x0356, r25
    43f0:	80 93 55 03 	sts	0x0355, r24
    43f4:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    43f6:	26 ff       	sbrs	r18, 6
    43f8:	26 c0       	rjmp	.+76     	; 0x4446 <__stack+0x347>
		{
			if (taste=='#')
    43fa:	83 32       	cpi	r24, 0x23	; 35
    43fc:	41 f4       	brne	.+16     	; 0x440e <__stack+0x30f>
			{
				anzeige&=~(1<<Weckeranzeigeflag);
    43fe:	c9 01       	movw	r24, r18
    4400:	8f 7b       	andi	r24, 0xBF	; 191
				anzeige|=(1<<menueflag);
    4402:	90 62       	ori	r25, 0x20	; 32
    4404:	90 93 56 03 	sts	0x0356, r25
    4408:	80 93 55 03 	sts	0x0355, r24
    440c:	08 95       	ret
			}
			if (taste=='*')
    440e:	8a 32       	cpi	r24, 0x2A	; 42
    4410:	09 f0       	breq	.+2      	; 0x4414 <__stack+0x315>
    4412:	4c c0       	rjmp	.+152    	; 0x44ac <__stack+0x3ad>
			{
				if (rtc.interupts&(1<<Weckeractiv))
    4414:	94 ff       	sbrs	r25, 4
    4416:	06 c0       	rjmp	.+12     	; 0x4424 <__stack+0x325>
				{
					rtc.interupts &= ~((1<<Weckerein) | (1<<Weckeractiv));
    4418:	89 2f       	mov	r24, r25
    441a:	87 7e       	andi	r24, 0xE7	; 231
    441c:	82 60       	ori	r24, 0x02	; 2
    441e:	80 93 9c 07 	sts	0x079C, r24
    4422:	0b c0       	rjmp	.+22     	; 0x443a <__stack+0x33b>
				}
				else if ((rtc.interupts&(1<<Weckerein)))
    4424:	93 ff       	sbrs	r25, 3
    4426:	06 c0       	rjmp	.+12     	; 0x4434 <__stack+0x335>
				{
					rtc.interupts &= ~(1<<Weckerein);
    4428:	89 2f       	mov	r24, r25
    442a:	87 7f       	andi	r24, 0xF7	; 247
    442c:	82 60       	ori	r24, 0x02	; 2
    442e:	80 93 9c 07 	sts	0x079C, r24
    4432:	03 c0       	rjmp	.+6      	; 0x443a <__stack+0x33b>
				}
				else{
					rtc.interupts |= (1<<Weckerein);
    4434:	9a 60       	ori	r25, 0x0A	; 10
    4436:	90 93 9c 07 	sts	0x079C, r25
				}
				rtc.interupts|=(1<<minuteninterupt);
    443a:	ec e9       	ldi	r30, 0x9C	; 156
    443c:	f7 e0       	ldi	r31, 0x07	; 7
    443e:	80 81       	ld	r24, Z
    4440:	84 60       	ori	r24, 0x04	; 4
    4442:	80 83       	st	Z, r24
    4444:	2d c0       	rjmp	.+90     	; 0x44a0 <__stack+0x3a1>
			}
		}
		else if (anzeige==0)
    4446:	23 2b       	or	r18, r19
    4448:	39 f4       	brne	.+14     	; 0x4458 <__stack+0x359>
		{
			anzeige|=(1<<menueflag);
    444a:	80 e0       	ldi	r24, 0x00	; 0
    444c:	90 e2       	ldi	r25, 0x20	; 32
    444e:	90 93 56 03 	sts	0x0356, r25
    4452:	80 93 55 03 	sts	0x0355, r24
    4456:	08 95       	ret
		}
		if ((anzeige&(1<<blinkflag)))
    4458:	20 91 55 03 	lds	r18, 0x0355
    445c:	30 91 56 03 	lds	r19, 0x0356
    4460:	36 ff       	sbrs	r19, 6
    4462:	24 c0       	rjmp	.+72     	; 0x44ac <__stack+0x3ad>
		{
			if (taste=='*')
    4464:	8a 32       	cpi	r24, 0x2A	; 42
    4466:	11 f5       	brne	.+68     	; 0x44ac <__stack+0x3ad>
			{
				anzeige &=~(1<<blinkflag);
    4468:	3f 7b       	andi	r19, 0xBF	; 191
    446a:	30 93 56 03 	sts	0x0356, r19
    446e:	20 93 55 03 	sts	0x0355, r18
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    4472:	60 e0       	ldi	r22, 0x00	; 0
    4474:	83 e8       	ldi	r24, 0x83	; 131
    4476:	93 e0       	ldi	r25, 0x03	; 3
    4478:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
				LED.off();
    447c:	80 e8       	ldi	r24, 0x80	; 128
    447e:	93 e0       	ldi	r25, 0x03	; 3
    4480:	a4 d5       	rcall	.+2888   	; 0x4fca <_ZN6Output3offEv>
				Vibrationsmotor.off();
    4482:	8e e7       	ldi	r24, 0x7E	; 126
    4484:	93 e0       	ldi	r25, 0x03	; 3
    4486:	a1 d5       	rcall	.+2882   	; 0x4fca <_ZN6Output3offEv>
				if ((rtc.interupts&(1<<Weckeractiv)))
    4488:	80 91 9c 07 	lds	r24, 0x079C
    448c:	98 2f       	mov	r25, r24
    448e:	98 71       	andi	r25, 0x18	; 24
				{
					if ((rtc.interupts&(1<<Weckerein)))
    4490:	98 31       	cpi	r25, 0x18	; 24
    4492:	61 f4       	brne	.+24     	; 0x44ac <__stack+0x3ad>
					{
						rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
						rtc.interupts &= ~(1<<Alarm);
    4494:	86 7e       	andi	r24, 0xE6	; 230
    4496:	80 93 9c 07 	sts	0x079C, r24
    449a:	08 95       	ret
				anzeige&=~(1<<Uhrflag);
				anzeige|=(1<<menueflag);
			}
			else if (taste=='*')
			{
				pos++;
    449c:	80 93 54 03 	sts	0x0354, r24
		}
		else if (anzeige==0)
		{
			anzeige|=(1<<menueflag);
		}
		if ((anzeige&(1<<blinkflag)))
    44a0:	20 91 55 03 	lds	r18, 0x0355
    44a4:	30 91 56 03 	lds	r19, 0x0356
    44a8:	36 fd       	sbrc	r19, 6
    44aa:	de cf       	rjmp	.-68     	; 0x4468 <__stack+0x369>
    44ac:	08 95       	ret

000044ae <main>:
void eingabehandler(uint8_t taste);

int main(void)
{
	//initialisierung
	initialisierung();
    44ae:	ea d8       	rcall	.-3628   	; 0x3684 <_Z15initialisierungv>
    while(1)
    {
         //Steuerung der interupts durch Handler
         maininterupthandler();
    44b0:	48 d9       	rcall	.-3440   	; 0x3742 <_Z19maininterupthandlerv>
         //Steuerung der Anzeige alle Sekunde zur aktualisierung maximale Aktulisierungsrate ist 1Hz
         anzeigehandler();
    44b2:	69 d9       	rcall	.-3374   	; 0x3786 <_Z14anzeigehandlerv>
         //Tasthandler
         eingabehandler(Tastatur.Taster());
    44b4:	82 e8       	ldi	r24, 0x82	; 130
    44b6:	93 e0       	ldi	r25, 0x03	; 3
    44b8:	ad d0       	rcall	.+346    	; 0x4614 <_ZN9Interface6TasterEv>
    44ba:	5b db       	rcall	.-2378   	; 0x3b72 <_Z14eingabehandlerh>
    44bc:	f9 cf       	rjmp	.-14     	; 0x44b0 <main+0x2>

000044be <_GLOBAL__sub_I_kompass>:
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    44be:	83 ea       	ldi	r24, 0xA3	; 163
    44c0:	97 e0       	ldi	r25, 0x07	; 7
    44c2:	5e d1       	rcall	.+700    	; 0x4780 <_ZN7KompassC1Ev>

#include "RTC.h"
RTC rtc;
    44c4:	84 e8       	ldi	r24, 0x84	; 132
    44c6:	97 e0       	ldi	r25, 0x07	; 7
    44c8:	0e 94 68 2a 	call	0x54d0	; 0x54d0 <_ZN3RTCC1Ev>

#include "Display.h"
Display oled;
    44cc:	83 e8       	ldi	r24, 0x83	; 131
    44ce:	93 e0       	ldi	r25, 0x03	; 3
    44d0:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <_ZN7DisplayC1Ev>

#include "Interface.h"
Interface Tastatur;
    44d4:	82 e8       	ldi	r24, 0x82	; 130
    44d6:	93 e0       	ldi	r25, 0x03	; 3
    44d8:	69 d0       	rcall	.+210    	; 0x45ac <_ZN9InterfaceC1Ev>

#include "Output.h"
Output LED('B',PORTB1);
    44da:	41 e0       	ldi	r20, 0x01	; 1
    44dc:	62 e4       	ldi	r22, 0x42	; 66
    44de:	80 e8       	ldi	r24, 0x80	; 128
    44e0:	93 e0       	ldi	r25, 0x03	; 3
    44e2:	a4 d4       	rcall	.+2376   	; 0x4e2c <_ZN6OutputC1Ehh>
Output Vibrationsmotor('B',PORTB2);
    44e4:	42 e0       	ldi	r20, 0x02	; 2
    44e6:	62 e4       	ldi	r22, 0x42	; 66
    44e8:	8e e7       	ldi	r24, 0x7E	; 126
    44ea:	93 e0       	ldi	r25, 0x03	; 3
    44ec:	9f d4       	rcall	.+2366   	; 0x4e2c <_ZN6OutputC1Ehh>
Output IRLED('D',PORTD7);
    44ee:	47 e0       	ldi	r20, 0x07	; 7
    44f0:	64 e4       	ldi	r22, 0x44	; 68
    44f2:	8c e7       	ldi	r24, 0x7C	; 124
    44f4:	93 e0       	ldi	r25, 0x03	; 3
    44f6:	9a d4       	rcall	.+2356   	; 0x4e2c <_ZN6OutputC1Ehh>
Output Sound('B',PORTB3);
    44f8:	43 e0       	ldi	r20, 0x03	; 3
    44fa:	62 e4       	ldi	r22, 0x42	; 66
    44fc:	8a e7       	ldi	r24, 0x7A	; 122
    44fe:	93 e0       	ldi	r25, 0x03	; 3
    4500:	95 d4       	rcall	.+2346   	; 0x4e2c <_ZN6OutputC1Ehh>

#include "Pressure.h"
Pressure Baro;
    4502:	8c e6       	ldi	r24, 0x6C	; 108
    4504:	93 e0       	ldi	r25, 0x03	; 3
    4506:	29 d6       	rcall	.+3154   	; 0x515a <_ZN8PressureC1Ev>

#include "LSM303D.h"
LSM303D Accelerometer;
    4508:	8b e5       	ldi	r24, 0x5B	; 91
    450a:	93 e0       	ldi	r25, 0x03	; 3
    450c:	75 c4       	rjmp	.+2282   	; 0x4df8 <_ZN7LSM303DC1Ev>
    450e:	08 95       	ret

00004510 <_GLOBAL__sub_D_kompass>:
    4510:	8b e5       	ldi	r24, 0x5B	; 91
    4512:	93 e0       	ldi	r25, 0x03	; 3
    4514:	4f d3       	rcall	.+1694   	; 0x4bb4 <_ZN7LSM303DD1Ev>
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);

#include "Pressure.h"
Pressure Baro;
    4516:	8c e6       	ldi	r24, 0x6C	; 108
    4518:	93 e0       	ldi	r25, 0x03	; 3
    451a:	ed d5       	rcall	.+3034   	; 0x50f6 <_ZN8PressureD1Ev>

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);
    451c:	8a e7       	ldi	r24, 0x7A	; 122
    451e:	93 e0       	ldi	r25, 0x03	; 3
    4520:	c7 d4       	rcall	.+2446   	; 0x4eb0 <_ZN6OutputD1Ev>
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
    4522:	8c e7       	ldi	r24, 0x7C	; 124
    4524:	93 e0       	ldi	r25, 0x03	; 3
    4526:	c4 d4       	rcall	.+2440   	; 0x4eb0 <_ZN6OutputD1Ev>
#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
    4528:	8e e7       	ldi	r24, 0x7E	; 126
    452a:	93 e0       	ldi	r25, 0x03	; 3
    452c:	c1 d4       	rcall	.+2434   	; 0x4eb0 <_ZN6OutputD1Ev>

#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
    452e:	80 e8       	ldi	r24, 0x80	; 128
    4530:	93 e0       	ldi	r25, 0x03	; 3
    4532:	be d4       	rcall	.+2428   	; 0x4eb0 <_ZN6OutputD1Ev>

#include "Display.h"
Display oled;

#include "Interface.h"
Interface Tastatur;
    4534:	82 e8       	ldi	r24, 0x82	; 130
    4536:	93 e0       	ldi	r25, 0x03	; 3
    4538:	46 d0       	rcall	.+140    	; 0x45c6 <_ZN9InterfaceD1Ev>

#include "RTC.h"
RTC rtc;

#include "Display.h"
Display oled;
    453a:	83 e8       	ldi	r24, 0x83	; 131
    453c:	93 e0       	ldi	r25, 0x03	; 3
    453e:	0e 94 01 03 	call	0x602	; 0x602 <_ZN7DisplayD1Ev>

#include "Kompass.h"
Kompass kompass;

#include "RTC.h"
RTC rtc;
    4542:	84 e8       	ldi	r24, 0x84	; 132
    4544:	97 e0       	ldi	r25, 0x07	; 7
    4546:	40 d7       	rcall	.+3712   	; 0x53c8 <_ZN3RTCD1Ev>
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    4548:	83 ea       	ldi	r24, 0xA3	; 163
    454a:	97 e0       	ldi	r25, 0x07	; 7
    454c:	fc c0       	rjmp	.+504    	; 0x4746 <_ZN7KompassD1Ev>
    454e:	08 95       	ret

00004550 <_ZN3I2CC1Ev>:
void I2C::twi_ack(){
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
}
void I2C::twi_nack(){
	TWCR = (1<<TWINT) | (1<<TWEN);
	TWCR &= ~(1<<TWEA);
    4550:	82 e0       	ldi	r24, 0x02	; 2
    4552:	80 93 b8 00 	sts	0x00B8, r24
    4556:	08 95       	ret

00004558 <_ZN3I2CD1Ev>:
    4558:	08 95       	ret

0000455a <_ZN3I2C9twi_startEv>:
    455a:	84 ea       	ldi	r24, 0xA4	; 164
    455c:	80 93 bc 00 	sts	0x00BC, r24
    4560:	08 95       	ret

00004562 <_ZN3I2C8twi_stopEv>:
    4562:	84 e9       	ldi	r24, 0x94	; 148
    4564:	80 93 bc 00 	sts	0x00BC, r24
    4568:	08 95       	ret

0000456a <_ZN3I2C9twi_writeEh>:
}

void I2C::twi_write(uint8_t data){
	while(!(TWCR & (1<<TWINT)));
    456a:	ec eb       	ldi	r30, 0xBC	; 188
    456c:	f0 e0       	ldi	r31, 0x00	; 0
    456e:	80 81       	ld	r24, Z
    4570:	88 23       	and	r24, r24
    4572:	ec f7       	brge	.-6      	; 0x456e <_ZN3I2C9twi_writeEh+0x4>
	TWDR = data;
    4574:	60 93 bb 00 	sts	0x00BB, r22
	TWCR = (1<<TWINT) | (1<<TWEN);
    4578:	84 e8       	ldi	r24, 0x84	; 132
    457a:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    457e:	ec eb       	ldi	r30, 0xBC	; 188
    4580:	f0 e0       	ldi	r31, 0x00	; 0
    4582:	80 81       	ld	r24, Z
    4584:	88 23       	and	r24, r24
    4586:	ec f7       	brge	.-6      	; 0x4582 <_ZN3I2C9twi_writeEh+0x18>
}
    4588:	08 95       	ret

0000458a <_ZN3I2C8twi_readEh>:

uint8_t I2C::twi_read(uint8_t ack){
	if (ack)
    458a:	66 23       	and	r22, r22
    458c:	21 f0       	breq	.+8      	; 0x4596 <_ZN3I2C8twi_readEh+0xc>
	{
		TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    458e:	84 ec       	ldi	r24, 0xC4	; 196
    4590:	80 93 bc 00 	sts	0x00BC, r24
    4594:	03 c0       	rjmp	.+6      	; 0x459c <_ZN3I2C8twi_readEh+0x12>
	}
	else{
		TWCR = (1<<TWINT) | (1<<TWEN);
    4596:	84 e8       	ldi	r24, 0x84	; 132
    4598:	80 93 bc 00 	sts	0x00BC, r24
	}
	
	while(!(TWCR & (1<<TWINT)));
    459c:	ec eb       	ldi	r30, 0xBC	; 188
    459e:	f0 e0       	ldi	r31, 0x00	; 0
    45a0:	80 81       	ld	r24, Z
    45a2:	88 23       	and	r24, r24
    45a4:	ec f7       	brge	.-6      	; 0x45a0 <_ZN3I2C8twi_readEh+0x16>
	return TWDR;
    45a6:	80 91 bb 00 	lds	r24, 0x00BB
    45aa:	08 95       	ret

000045ac <_ZN9InterfaceC1Ev>:
		default:
		abfrage = 0;
		break;
	}
	return abfrage;
}
    45ac:	8a b1       	in	r24, 0x0a	; 10
    45ae:	80 66       	ori	r24, 0x60	; 96
    45b0:	8a b9       	out	0x0a, r24	; 10
    45b2:	88 b1       	in	r24, 0x08	; 8
    45b4:	83 7f       	andi	r24, 0xF3	; 243
    45b6:	88 b9       	out	0x08, r24	; 8
    45b8:	87 b1       	in	r24, 0x07	; 7
    45ba:	8c 60       	ori	r24, 0x0C	; 12
    45bc:	87 b9       	out	0x07, r24	; 7
    45be:	8a b1       	in	r24, 0x0a	; 10
    45c0:	83 7e       	andi	r24, 0xE3	; 227
    45c2:	8a b9       	out	0x0a, r24	; 10
    45c4:	08 95       	ret

000045c6 <_ZN9InterfaceD1Ev>:
    45c6:	08 95       	ret

000045c8 <_ZN9Interface8debounceEPVhh>:
    45c8:	fb 01       	movw	r30, r22
    45ca:	80 81       	ld	r24, Z
    45cc:	90 e0       	ldi	r25, 0x00	; 0
    45ce:	04 2e       	mov	r0, r20
    45d0:	02 c0       	rjmp	.+4      	; 0x45d6 <_ZN9Interface8debounceEPVhh+0xe>
    45d2:	95 95       	asr	r25
    45d4:	87 95       	ror	r24
    45d6:	0a 94       	dec	r0
    45d8:	e2 f7       	brpl	.-8      	; 0x45d2 <_ZN9Interface8debounceEPVhh+0xa>
    45da:	80 ff       	sbrs	r24, 0
    45dc:	17 c0       	rjmp	.+46     	; 0x460c <_ZN9Interface8debounceEPVhh+0x44>
    45de:	8f ec       	ldi	r24, 0xCF	; 207
    45e0:	97 e0       	ldi	r25, 0x07	; 7
    45e2:	01 97       	sbiw	r24, 0x01	; 1
    45e4:	f1 f7       	brne	.-4      	; 0x45e2 <_ZN9Interface8debounceEPVhh+0x1a>
    45e6:	00 c0       	rjmp	.+0      	; 0x45e8 <_ZN9Interface8debounceEPVhh+0x20>
    45e8:	00 00       	nop
    45ea:	fb 01       	movw	r30, r22
    45ec:	80 81       	ld	r24, Z
    45ee:	90 e0       	ldi	r25, 0x00	; 0
    45f0:	9c 01       	movw	r18, r24
    45f2:	02 c0       	rjmp	.+4      	; 0x45f8 <_ZN9Interface8debounceEPVhh+0x30>
    45f4:	35 95       	asr	r19
    45f6:	27 95       	ror	r18
    45f8:	4a 95       	dec	r20
    45fa:	e2 f7       	brpl	.-8      	; 0x45f4 <_ZN9Interface8debounceEPVhh+0x2c>
    45fc:	20 fd       	sbrc	r18, 0
    45fe:	08 c0       	rjmp	.+16     	; 0x4610 <_ZN9Interface8debounceEPVhh+0x48>
    4600:	3a e1       	ldi	r19, 0x1A	; 26
    4602:	3a 95       	dec	r19
    4604:	f1 f7       	brne	.-4      	; 0x4602 <_ZN9Interface8debounceEPVhh+0x3a>
    4606:	00 c0       	rjmp	.+0      	; 0x4608 <_ZN9Interface8debounceEPVhh+0x40>
    4608:	81 e0       	ldi	r24, 0x01	; 1
    460a:	08 95       	ret
    460c:	80 e0       	ldi	r24, 0x00	; 0
    460e:	08 95       	ret
    4610:	80 e0       	ldi	r24, 0x00	; 0
    4612:	08 95       	ret

00004614 <_ZN9Interface6TasterEv>:

uint8_t Interface::Taster(){
    4614:	1f 93       	push	r17
    4616:	cf 93       	push	r28
    4618:	df 93       	push	r29
    461a:	ec 01       	movw	r28, r24
	uint8_t taste = 'A';
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
    461c:	43 9a       	sbi	0x08, 3	; 8
    461e:	82 e0       	ldi	r24, 0x02	; 2
    4620:	8a 95       	dec	r24
    4622:	f1 f7       	brne	.-4      	; 0x4620 <_ZN9Interface6TasterEv+0xc>
    4624:	00 c0       	rjmp	.+0      	; 0x4626 <_ZN9Interface6TasterEv+0x12>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    4626:	44 e0       	ldi	r20, 0x04	; 4
    4628:	69 e2       	ldi	r22, 0x29	; 41
    462a:	70 e0       	ldi	r23, 0x00	; 0
    462c:	ce 01       	movw	r24, r28
    462e:	cc df       	rcall	.-104    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    4630:	81 11       	cpse	r24, r1
    4632:	10 c0       	rjmp	.+32     	; 0x4654 <_ZN9Interface6TasterEv+0x40>
		taste = '3';
	}
	else if (debounce(&PIND,PIND3))
    4634:	43 e0       	ldi	r20, 0x03	; 3
    4636:	69 e2       	ldi	r22, 0x29	; 41
    4638:	70 e0       	ldi	r23, 0x00	; 0
    463a:	ce 01       	movw	r24, r28
    463c:	c5 df       	rcall	.-118    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    463e:	81 11       	cpse	r24, r1
    4640:	0b c0       	rjmp	.+22     	; 0x4658 <_ZN9Interface6TasterEv+0x44>
	{
		taste = '2';
	}
	else if (debounce(&PIND,PIND2))
    4642:	42 e0       	ldi	r20, 0x02	; 2
    4644:	69 e2       	ldi	r22, 0x29	; 41
    4646:	70 e0       	ldi	r23, 0x00	; 0
    4648:	ce 01       	movw	r24, r28
    464a:	be df       	rcall	.-132    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    464c:	81 11       	cpse	r24, r1
    464e:	06 c0       	rjmp	.+12     	; 0x465c <_ZN9Interface6TasterEv+0x48>
	}
	return abfrage;
}

uint8_t Interface::Taster(){
	uint8_t taste = 'A';
    4650:	11 e4       	ldi	r17, 0x41	; 65
    4652:	05 c0       	rjmp	.+10     	; 0x465e <_ZN9Interface6TasterEv+0x4a>
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '3';
    4654:	13 e3       	ldi	r17, 0x33	; 51
    4656:	03 c0       	rjmp	.+6      	; 0x465e <_ZN9Interface6TasterEv+0x4a>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '2';
    4658:	12 e3       	ldi	r17, 0x32	; 50
    465a:	01 c0       	rjmp	.+2      	; 0x465e <_ZN9Interface6TasterEv+0x4a>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '1';
    465c:	11 e3       	ldi	r17, 0x31	; 49
	}
	PORTC &= ~(1<<PORTC3);
    465e:	43 98       	cbi	0x08, 3	; 8
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
    4660:	42 9a       	sbi	0x08, 2	; 8
    4662:	82 e0       	ldi	r24, 0x02	; 2
    4664:	8a 95       	dec	r24
    4666:	f1 f7       	brne	.-4      	; 0x4664 <_ZN9Interface6TasterEv+0x50>
    4668:	00 c0       	rjmp	.+0      	; 0x466a <_ZN9Interface6TasterEv+0x56>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    466a:	44 e0       	ldi	r20, 0x04	; 4
    466c:	69 e2       	ldi	r22, 0x29	; 41
    466e:	70 e0       	ldi	r23, 0x00	; 0
    4670:	ce 01       	movw	r24, r28
    4672:	aa df       	rcall	.-172    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    4674:	81 11       	cpse	r24, r1
    4676:	0f c0       	rjmp	.+30     	; 0x4696 <_ZN9Interface6TasterEv+0x82>
		taste = '6';
	}
	else if (debounce(&PIND,PIND3))
    4678:	43 e0       	ldi	r20, 0x03	; 3
    467a:	69 e2       	ldi	r22, 0x29	; 41
    467c:	70 e0       	ldi	r23, 0x00	; 0
    467e:	ce 01       	movw	r24, r28
    4680:	a3 df       	rcall	.-186    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    4682:	81 11       	cpse	r24, r1
    4684:	0a c0       	rjmp	.+20     	; 0x469a <_ZN9Interface6TasterEv+0x86>
	{
		taste = '5';
	}
	else if (debounce(&PIND,PIND2))
    4686:	42 e0       	ldi	r20, 0x02	; 2
    4688:	69 e2       	ldi	r22, 0x29	; 41
    468a:	70 e0       	ldi	r23, 0x00	; 0
    468c:	ce 01       	movw	r24, r28
    468e:	9c df       	rcall	.-200    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    4690:	81 11       	cpse	r24, r1
    4692:	05 c0       	rjmp	.+10     	; 0x469e <_ZN9Interface6TasterEv+0x8a>
    4694:	05 c0       	rjmp	.+10     	; 0x46a0 <_ZN9Interface6TasterEv+0x8c>
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '6';
    4696:	16 e3       	ldi	r17, 0x36	; 54
    4698:	03 c0       	rjmp	.+6      	; 0x46a0 <_ZN9Interface6TasterEv+0x8c>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '5';
    469a:	15 e3       	ldi	r17, 0x35	; 53
    469c:	01 c0       	rjmp	.+2      	; 0x46a0 <_ZN9Interface6TasterEv+0x8c>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '4';
    469e:	14 e3       	ldi	r17, 0x34	; 52
	}
	PORTC &= ~(1<<PORTC2);
    46a0:	42 98       	cbi	0x08, 2	; 8
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
    46a2:	5e 9a       	sbi	0x0b, 6	; 11
    46a4:	82 e0       	ldi	r24, 0x02	; 2
    46a6:	8a 95       	dec	r24
    46a8:	f1 f7       	brne	.-4      	; 0x46a6 <_ZN9Interface6TasterEv+0x92>
    46aa:	00 c0       	rjmp	.+0      	; 0x46ac <_ZN9Interface6TasterEv+0x98>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    46ac:	44 e0       	ldi	r20, 0x04	; 4
    46ae:	69 e2       	ldi	r22, 0x29	; 41
    46b0:	70 e0       	ldi	r23, 0x00	; 0
    46b2:	ce 01       	movw	r24, r28
    46b4:	89 df       	rcall	.-238    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    46b6:	81 11       	cpse	r24, r1
    46b8:	0f c0       	rjmp	.+30     	; 0x46d8 <_ZN9Interface6TasterEv+0xc4>
		taste = '9';
	}
	else if (debounce(&PIND,PIND3))
    46ba:	43 e0       	ldi	r20, 0x03	; 3
    46bc:	69 e2       	ldi	r22, 0x29	; 41
    46be:	70 e0       	ldi	r23, 0x00	; 0
    46c0:	ce 01       	movw	r24, r28
    46c2:	82 df       	rcall	.-252    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    46c4:	81 11       	cpse	r24, r1
    46c6:	0a c0       	rjmp	.+20     	; 0x46dc <_ZN9Interface6TasterEv+0xc8>
	{
		taste = '8';
	}
	else if (debounce(&PIND,PIND2))
    46c8:	42 e0       	ldi	r20, 0x02	; 2
    46ca:	69 e2       	ldi	r22, 0x29	; 41
    46cc:	70 e0       	ldi	r23, 0x00	; 0
    46ce:	ce 01       	movw	r24, r28
    46d0:	7b df       	rcall	.-266    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    46d2:	81 11       	cpse	r24, r1
    46d4:	05 c0       	rjmp	.+10     	; 0x46e0 <_ZN9Interface6TasterEv+0xcc>
    46d6:	05 c0       	rjmp	.+10     	; 0x46e2 <_ZN9Interface6TasterEv+0xce>
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '9';
    46d8:	19 e3       	ldi	r17, 0x39	; 57
    46da:	03 c0       	rjmp	.+6      	; 0x46e2 <_ZN9Interface6TasterEv+0xce>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '8';
    46dc:	18 e3       	ldi	r17, 0x38	; 56
    46de:	01 c0       	rjmp	.+2      	; 0x46e2 <_ZN9Interface6TasterEv+0xce>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '7';
    46e0:	17 e3       	ldi	r17, 0x37	; 55
	}
	PORTD &= ~(1<<PORTD6);
    46e2:	5e 98       	cbi	0x0b, 6	; 11
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
    46e4:	5d 9a       	sbi	0x0b, 5	; 11
    46e6:	82 e0       	ldi	r24, 0x02	; 2
    46e8:	8a 95       	dec	r24
    46ea:	f1 f7       	brne	.-4      	; 0x46e8 <_ZN9Interface6TasterEv+0xd4>
    46ec:	00 c0       	rjmp	.+0      	; 0x46ee <_ZN9Interface6TasterEv+0xda>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    46ee:	44 e0       	ldi	r20, 0x04	; 4
    46f0:	69 e2       	ldi	r22, 0x29	; 41
    46f2:	70 e0       	ldi	r23, 0x00	; 0
    46f4:	ce 01       	movw	r24, r28
    46f6:	68 df       	rcall	.-304    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    46f8:	81 11       	cpse	r24, r1
    46fa:	0f c0       	rjmp	.+30     	; 0x471a <_ZN9Interface6TasterEv+0x106>
		taste = '#';
	}
	else if (debounce(&PIND,PIND3))
    46fc:	43 e0       	ldi	r20, 0x03	; 3
    46fe:	69 e2       	ldi	r22, 0x29	; 41
    4700:	70 e0       	ldi	r23, 0x00	; 0
    4702:	ce 01       	movw	r24, r28
    4704:	61 df       	rcall	.-318    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    4706:	81 11       	cpse	r24, r1
    4708:	0a c0       	rjmp	.+20     	; 0x471e <_ZN9Interface6TasterEv+0x10a>
	{
		taste = '0';
	}
	else if (debounce(&PIND,PIND2))
    470a:	42 e0       	ldi	r20, 0x02	; 2
    470c:	69 e2       	ldi	r22, 0x29	; 41
    470e:	70 e0       	ldi	r23, 0x00	; 0
    4710:	ce 01       	movw	r24, r28
    4712:	5a df       	rcall	.-332    	; 0x45c8 <_ZN9Interface8debounceEPVhh>
    4714:	81 11       	cpse	r24, r1
    4716:	05 c0       	rjmp	.+10     	; 0x4722 <_ZN9Interface6TasterEv+0x10e>
    4718:	05 c0       	rjmp	.+10     	; 0x4724 <_ZN9Interface6TasterEv+0x110>
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '#';
    471a:	13 e2       	ldi	r17, 0x23	; 35
    471c:	03 c0       	rjmp	.+6      	; 0x4724 <_ZN9Interface6TasterEv+0x110>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '0';
    471e:	10 e3       	ldi	r17, 0x30	; 48
    4720:	01 c0       	rjmp	.+2      	; 0x4724 <_ZN9Interface6TasterEv+0x110>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '*';
    4722:	1a e2       	ldi	r17, 0x2A	; 42
	}
	PORTD &= ~(1<<PORTD5);
    4724:	5d 98       	cbi	0x0b, 5	; 11
	
	return taste;
}
    4726:	81 2f       	mov	r24, r17
    4728:	df 91       	pop	r29
    472a:	cf 91       	pop	r28
    472c:	1f 91       	pop	r17
    472e:	08 95       	ret

00004730 <_ZN9Interface17ZahlenausTastaturEv>:

uint8_t Interface::ZahlenausTastatur(){
    4730:	cf 93       	push	r28
    4732:	df 93       	push	r29
    4734:	ec 01       	movw	r28, r24
	while(true){
		uint8_t taste = Taster();
    4736:	ce 01       	movw	r24, r28
    4738:	6d df       	rcall	.-294    	; 0x4614 <_ZN9Interface6TasterEv>
		if(taste>='0' && taste<='9'){
    473a:	80 53       	subi	r24, 0x30	; 48
    473c:	8a 30       	cpi	r24, 0x0A	; 10
    473e:	d8 f7       	brcc	.-10     	; 0x4736 <_ZN9Interface17ZahlenausTastaturEv+0x6>
			return taste - '0';
		}
	}
}
    4740:	df 91       	pop	r29
    4742:	cf 91       	pop	r28
    4744:	08 95       	ret

00004746 <_ZN7KompassD1Ev>:
	for (uint8_t i=0;i<3;i++)
	{
		achsen[i]=0;
		offset[i]=0;
	}
}
    4746:	06 96       	adiw	r24, 0x06	; 6
    4748:	07 cf       	rjmp	.-498    	; 0x4558 <_ZN3I2CD1Ev>
    474a:	08 95       	ret

0000474c <_ZN7Kompass16HMC5883L_commandEhh>:
    474c:	0f 93       	push	r16
    474e:	1f 93       	push	r17
    4750:	cf 93       	push	r28
    4752:	df 93       	push	r29
    4754:	06 2f       	mov	r16, r22
    4756:	14 2f       	mov	r17, r20
    4758:	ec 01       	movw	r28, r24
    475a:	26 96       	adiw	r28, 0x06	; 6
    475c:	ce 01       	movw	r24, r28
    475e:	fd de       	rcall	.-518    	; 0x455a <_ZN3I2C9twi_startEv>
    4760:	6c e3       	ldi	r22, 0x3C	; 60
    4762:	ce 01       	movw	r24, r28
    4764:	02 df       	rcall	.-508    	; 0x456a <_ZN3I2C9twi_writeEh>
    4766:	60 2f       	mov	r22, r16
    4768:	ce 01       	movw	r24, r28
    476a:	ff de       	rcall	.-514    	; 0x456a <_ZN3I2C9twi_writeEh>
    476c:	61 2f       	mov	r22, r17
    476e:	ce 01       	movw	r24, r28
    4770:	fc de       	rcall	.-520    	; 0x456a <_ZN3I2C9twi_writeEh>
    4772:	ce 01       	movw	r24, r28
    4774:	f6 de       	rcall	.-532    	; 0x4562 <_ZN3I2C8twi_stopEv>
    4776:	df 91       	pop	r29
    4778:	cf 91       	pop	r28
    477a:	1f 91       	pop	r17
    477c:	0f 91       	pop	r16
    477e:	08 95       	ret

00004780 <_ZN7KompassC1Ev>:
    4780:	cf 93       	push	r28
    4782:	df 93       	push	r29
    4784:	ec 01       	movw	r28, r24
    4786:	06 96       	adiw	r24, 0x06	; 6
    4788:	e3 de       	rcall	.-570    	; 0x4550 <_ZN3I2CC1Ev>
    478a:	40 e7       	ldi	r20, 0x70	; 112
    478c:	60 e0       	ldi	r22, 0x00	; 0
    478e:	ce 01       	movw	r24, r28
    4790:	dd df       	rcall	.-70     	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
    4792:	40 e2       	ldi	r20, 0x20	; 32
    4794:	61 e0       	ldi	r22, 0x01	; 1
    4796:	ce 01       	movw	r24, r28
    4798:	d9 df       	rcall	.-78     	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
    479a:	41 e0       	ldi	r20, 0x01	; 1
    479c:	62 e0       	ldi	r22, 0x02	; 2
    479e:	ce 01       	movw	r24, r28
    47a0:	d5 df       	rcall	.-86     	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
    47a2:	19 82       	std	Y+1, r1	; 0x01
    47a4:	18 82       	st	Y, r1
    47a6:	18 86       	std	Y+8, r1	; 0x08
    47a8:	1f 82       	std	Y+7, r1	; 0x07
    47aa:	1b 82       	std	Y+3, r1	; 0x03
    47ac:	1a 82       	std	Y+2, r1	; 0x02
    47ae:	1a 86       	std	Y+10, r1	; 0x0a
    47b0:	19 86       	std	Y+9, r1	; 0x09
    47b2:	1d 82       	std	Y+5, r1	; 0x05
    47b4:	1c 82       	std	Y+4, r1	; 0x04
    47b6:	1c 86       	std	Y+12, r1	; 0x0c
    47b8:	1b 86       	std	Y+11, r1	; 0x0b
    47ba:	df 91       	pop	r29
    47bc:	cf 91       	pop	r28
    47be:	08 95       	ret

000047c0 <_ZN7Kompass20HMC5883L_readHeadingEv>:

uint8_t Kompass::HMC5883L_readHeading(){
    47c0:	bf 92       	push	r11
    47c2:	cf 92       	push	r12
    47c4:	df 92       	push	r13
    47c6:	ef 92       	push	r14
    47c8:	ff 92       	push	r15
    47ca:	0f 93       	push	r16
    47cc:	1f 93       	push	r17
    47ce:	cf 93       	push	r28
    47d0:	df 93       	push	r29
    47d2:	00 d0       	rcall	.+0      	; 0x47d4 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14>
    47d4:	00 d0       	rcall	.+0      	; 0x47d6 <_ZN7Kompass20HMC5883L_readHeadingEv+0x16>
    47d6:	00 d0       	rcall	.+0      	; 0x47d8 <_ZN7Kompass20HMC5883L_readHeadingEv+0x18>
    47d8:	cd b7       	in	r28, 0x3d	; 61
    47da:	de b7       	in	r29, 0x3e	; 62
    47dc:	6c 01       	movw	r12, r24
	cli();
    47de:	f8 94       	cli
	uint8_t heading[6];
	i2c.twi_start();
    47e0:	7c 01       	movw	r14, r24
    47e2:	26 e0       	ldi	r18, 0x06	; 6
    47e4:	e2 0e       	add	r14, r18
    47e6:	f1 1c       	adc	r15, r1
    47e8:	c7 01       	movw	r24, r14
    47ea:	b7 de       	rcall	.-658    	; 0x455a <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCWRITEADRESSE);
    47ec:	6c e3       	ldi	r22, 0x3C	; 60
    47ee:	c7 01       	movw	r24, r14
    47f0:	bc de       	rcall	.-648    	; 0x456a <_ZN3I2C9twi_writeEh>
	i2c.twi_write(0x03);
    47f2:	63 e0       	ldi	r22, 0x03	; 3
    47f4:	c7 01       	movw	r24, r14
    47f6:	b9 de       	rcall	.-654    	; 0x456a <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    47f8:	c7 01       	movw	r24, r14
    47fa:	af de       	rcall	.-674    	; 0x455a <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCREADADRESSE);
    47fc:	6d e3       	ldi	r22, 0x3D	; 61
    47fe:	c7 01       	movw	r24, r14
    4800:	b4 de       	rcall	.-664    	; 0x456a <_ZN3I2C9twi_writeEh>
    4802:	8e 01       	movw	r16, r28
    4804:	0f 5f       	subi	r16, 0xFF	; 255
    4806:	1f 4f       	sbci	r17, 0xFF	; 255
	
	for(uint8_t i=0; i<6;i++){
    4808:	b1 2c       	mov	r11, r1
		if (i<5)
    480a:	84 e0       	ldi	r24, 0x04	; 4
    480c:	8b 15       	cp	r24, r11
    480e:	30 f0       	brcs	.+12     	; 0x481c <_ZN7Kompass20HMC5883L_readHeadingEv+0x5c>
		{
			heading[i]=i2c.twi_read(1);
    4810:	61 e0       	ldi	r22, 0x01	; 1
    4812:	c7 01       	movw	r24, r14
    4814:	ba de       	rcall	.-652    	; 0x458a <_ZN3I2C8twi_readEh>
    4816:	f8 01       	movw	r30, r16
    4818:	80 83       	st	Z, r24
    481a:	05 c0       	rjmp	.+10     	; 0x4826 <_ZN7Kompass20HMC5883L_readHeadingEv+0x66>
		}
		else
		{
			heading[i]=i2c.twi_read(0);
    481c:	60 e0       	ldi	r22, 0x00	; 0
    481e:	c7 01       	movw	r24, r14
    4820:	b4 de       	rcall	.-664    	; 0x458a <_ZN3I2C8twi_readEh>
    4822:	f8 01       	movw	r30, r16
    4824:	80 83       	st	Z, r24
	i2c.twi_write(HMCWRITEADRESSE);
	i2c.twi_write(0x03);
	i2c.twi_start();
	i2c.twi_write(HMCREADADRESSE);
	
	for(uint8_t i=0; i<6;i++){
    4826:	b3 94       	inc	r11
    4828:	0f 5f       	subi	r16, 0xFF	; 255
    482a:	1f 4f       	sbci	r17, 0xFF	; 255
    482c:	f6 e0       	ldi	r31, 0x06	; 6
    482e:	bf 12       	cpse	r11, r31
    4830:	ec cf       	rjmp	.-40     	; 0x480a <_ZN7Kompass20HMC5883L_readHeadingEv+0x4a>
		{
			heading[i]=i2c.twi_read(0);
		}
		
	}
	i2c.twi_stop();
    4832:	c7 01       	movw	r24, r14
    4834:	96 de       	rcall	.-724    	; 0x4562 <_ZN3I2C8twi_stopEv>
	achsen[0] =(int16_t) (heading[1] | (heading[0] << 8));
    4836:	89 81       	ldd	r24, Y+1	; 0x01
    4838:	90 e0       	ldi	r25, 0x00	; 0
    483a:	98 2f       	mov	r25, r24
    483c:	88 27       	eor	r24, r24
    483e:	2a 81       	ldd	r18, Y+2	; 0x02
    4840:	82 2b       	or	r24, r18
    4842:	f6 01       	movw	r30, r12
    4844:	91 83       	std	Z+1, r25	; 0x01
    4846:	80 83       	st	Z, r24
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
    4848:	8b 81       	ldd	r24, Y+3	; 0x03
    484a:	90 e0       	ldi	r25, 0x00	; 0
    484c:	98 2f       	mov	r25, r24
    484e:	88 27       	eor	r24, r24
    4850:	2c 81       	ldd	r18, Y+4	; 0x04
    4852:	82 2b       	or	r24, r18
    4854:	93 83       	std	Z+3, r25	; 0x03
    4856:	82 83       	std	Z+2, r24	; 0x02
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
    4858:	8d 81       	ldd	r24, Y+5	; 0x05
    485a:	90 e0       	ldi	r25, 0x00	; 0
    485c:	98 2f       	mov	r25, r24
    485e:	88 27       	eor	r24, r24
    4860:	2e 81       	ldd	r18, Y+6	; 0x06
    4862:	82 2b       	or	r24, r18
    4864:	95 83       	std	Z+5, r25	; 0x05
    4866:	84 83       	std	Z+4, r24	; 0x04
	sei();
    4868:	78 94       	sei
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
    486a:	f6 01       	movw	r30, r12
    486c:	80 81       	ld	r24, Z
    486e:	91 81       	ldd	r25, Z+1	; 0x01
    4870:	81 15       	cp	r24, r1
    4872:	90 4f       	sbci	r25, 0xF0	; 240
    4874:	09 f4       	brne	.+2      	; 0x4878 <_ZN7Kompass20HMC5883L_readHeadingEv+0xb8>
    4876:	47 c0       	rjmp	.+142    	; 0x4906 <_ZN7Kompass20HMC5883L_readHeadingEv+0x146>
    4878:	f6 01       	movw	r30, r12
    487a:	82 81       	ldd	r24, Z+2	; 0x02
    487c:	93 81       	ldd	r25, Z+3	; 0x03
    487e:	81 15       	cp	r24, r1
    4880:	90 4f       	sbci	r25, 0xF0	; 240
    4882:	09 f4       	brne	.+2      	; 0x4886 <_ZN7Kompass20HMC5883L_readHeadingEv+0xc6>
    4884:	42 c0       	rjmp	.+132    	; 0x490a <_ZN7Kompass20HMC5883L_readHeadingEv+0x14a>
    4886:	f6 01       	movw	r30, r12
    4888:	84 81       	ldd	r24, Z+4	; 0x04
    488a:	95 81       	ldd	r25, Z+5	; 0x05
    488c:	81 15       	cp	r24, r1
    488e:	90 4f       	sbci	r25, 0xF0	; 240
    4890:	f1 f1       	breq	.+124    	; 0x490e <_ZN7Kompass20HMC5883L_readHeadingEv+0x14e>
    4892:	f6 01       	movw	r30, r12
    4894:	83 e0       	ldi	r24, 0x03	; 3
    4896:	df 01       	movw	r26, r30
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
			if(achsen[i]>max[i]){
    4898:	20 81       	ld	r18, Z
    489a:	31 81       	ldd	r19, Z+1	; 0x01
    489c:	45 85       	ldd	r20, Z+13	; 0x0d
    489e:	56 85       	ldd	r21, Z+14	; 0x0e
    48a0:	42 17       	cp	r20, r18
    48a2:	53 07       	cpc	r21, r19
    48a4:	8c f4       	brge	.+34     	; 0x48c8 <_ZN7Kompass20HMC5883L_readHeadingEv+0x108>
				max[i]=achsen[i];
    48a6:	36 87       	std	Z+14, r19	; 0x0e
    48a8:	25 87       	std	Z+13, r18	; 0x0d
				offset[i]=(max[i]+min[i])/2;
    48aa:	43 89       	ldd	r20, Z+19	; 0x13
    48ac:	54 89       	ldd	r21, Z+20	; 0x14
    48ae:	24 0f       	add	r18, r20
    48b0:	35 1f       	adc	r19, r21
    48b2:	33 23       	and	r19, r19
    48b4:	14 f4       	brge	.+4      	; 0x48ba <_ZN7Kompass20HMC5883L_readHeadingEv+0xfa>
    48b6:	2f 5f       	subi	r18, 0xFF	; 255
    48b8:	3f 4f       	sbci	r19, 0xFF	; 255
    48ba:	35 95       	asr	r19
    48bc:	27 95       	ror	r18
    48be:	18 96       	adiw	r26, 0x08	; 8
    48c0:	3c 93       	st	X, r19
    48c2:	2e 93       	st	-X, r18
    48c4:	17 97       	sbiw	r26, 0x07	; 7
    48c6:	1a c0       	rjmp	.+52     	; 0x48fc <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else if(achsen[i]<min[i]){
    48c8:	63 89       	ldd	r22, Z+19	; 0x13
    48ca:	74 89       	ldd	r23, Z+20	; 0x14
    48cc:	26 17       	cp	r18, r22
    48ce:	37 07       	cpc	r19, r23
    48d0:	7c f4       	brge	.+30     	; 0x48f0 <_ZN7Kompass20HMC5883L_readHeadingEv+0x130>
				min[i]=achsen[i];
    48d2:	34 8b       	std	Z+20, r19	; 0x14
    48d4:	23 8b       	std	Z+19, r18	; 0x13
				offset[i]=(max[i]+min[i])/2;
    48d6:	24 0f       	add	r18, r20
    48d8:	35 1f       	adc	r19, r21
    48da:	33 23       	and	r19, r19
    48dc:	14 f4       	brge	.+4      	; 0x48e2 <_ZN7Kompass20HMC5883L_readHeadingEv+0x122>
    48de:	2f 5f       	subi	r18, 0xFF	; 255
    48e0:	3f 4f       	sbci	r19, 0xFF	; 255
    48e2:	35 95       	asr	r19
    48e4:	27 95       	ror	r18
    48e6:	18 96       	adiw	r26, 0x08	; 8
    48e8:	3c 93       	st	X, r19
    48ea:	2e 93       	st	-X, r18
    48ec:	17 97       	sbiw	r26, 0x07	; 7
    48ee:	06 c0       	rjmp	.+12     	; 0x48fc <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else {
				achsen[i]-=offset[i];
    48f0:	47 81       	ldd	r20, Z+7	; 0x07
    48f2:	50 85       	ldd	r21, Z+8	; 0x08
    48f4:	24 1b       	sub	r18, r20
    48f6:	35 0b       	sbc	r19, r21
    48f8:	31 83       	std	Z+1, r19	; 0x01
    48fa:	20 83       	st	Z, r18
    48fc:	81 50       	subi	r24, 0x01	; 1
    48fe:	32 96       	adiw	r30, 0x02	; 2
		return 1;
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
    4900:	81 11       	cpse	r24, r1
    4902:	c9 cf       	rjmp	.-110    	; 0x4896 <_ZN7Kompass20HMC5883L_readHeadingEv+0xd6>
    4904:	05 c0       	rjmp	.+10     	; 0x4910 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
	sei();
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
	{
		return 1;
    4906:	81 e0       	ldi	r24, 0x01	; 1
    4908:	03 c0       	rjmp	.+6      	; 0x4910 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    490a:	81 e0       	ldi	r24, 0x01	; 1
    490c:	01 c0       	rjmp	.+2      	; 0x4910 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    490e:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	
	return 0;
}
    4910:	26 96       	adiw	r28, 0x06	; 6
    4912:	0f b6       	in	r0, 0x3f	; 63
    4914:	f8 94       	cli
    4916:	de bf       	out	0x3e, r29	; 62
    4918:	0f be       	out	0x3f, r0	; 63
    491a:	cd bf       	out	0x3d, r28	; 61
    491c:	df 91       	pop	r29
    491e:	cf 91       	pop	r28
    4920:	1f 91       	pop	r17
    4922:	0f 91       	pop	r16
    4924:	ff 90       	pop	r15
    4926:	ef 90       	pop	r14
    4928:	df 90       	pop	r13
    492a:	cf 90       	pop	r12
    492c:	bf 90       	pop	r11
    492e:	08 95       	ret

00004930 <_ZN7Kompass5angleEdd>:

double Kompass::angle(double roll, double pitch){
    4930:	2f 92       	push	r2
    4932:	3f 92       	push	r3
    4934:	4f 92       	push	r4
    4936:	5f 92       	push	r5
    4938:	6f 92       	push	r6
    493a:	7f 92       	push	r7
    493c:	8f 92       	push	r8
    493e:	9f 92       	push	r9
    4940:	af 92       	push	r10
    4942:	bf 92       	push	r11
    4944:	cf 92       	push	r12
    4946:	df 92       	push	r13
    4948:	ef 92       	push	r14
    494a:	ff 92       	push	r15
    494c:	0f 93       	push	r16
    494e:	1f 93       	push	r17
    4950:	cf 93       	push	r28
    4952:	df 93       	push	r29
    4954:	cd b7       	in	r28, 0x3d	; 61
    4956:	de b7       	in	r29, 0x3e	; 62
    4958:	64 97       	sbiw	r28, 0x14	; 20
    495a:	0f b6       	in	r0, 0x3f	; 63
    495c:	f8 94       	cli
    495e:	de bf       	out	0x3e, r29	; 62
    4960:	0f be       	out	0x3f, r0	; 63
    4962:	cd bf       	out	0x3d, r28	; 61
    4964:	1c 01       	movw	r2, r24
    4966:	4a 01       	movw	r8, r20
    4968:	5b 01       	movw	r10, r22
    496a:	68 01       	movw	r12, r16
    496c:	79 01       	movw	r14, r18
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
    496e:	28 df       	rcall	.-432    	; 0x47c0 <_ZN7Kompass20HMC5883L_readHeadingEv>
    4970:	81 11       	cpse	r24, r1
    4972:	e5 c0       	rjmp	.+458    	; 0x4b3e <_ZN7Kompass5angleEdd+0x20e>
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4974:	c7 01       	movw	r24, r14
    4976:	b6 01       	movw	r22, r12
    4978:	50 d7       	rcall	.+3744   	; 0x581a <cos>
    497a:	69 83       	std	Y+1, r22	; 0x01
    497c:	7a 83       	std	Y+2, r23	; 0x02
    497e:	8b 83       	std	Y+3, r24	; 0x03
    4980:	9c 83       	std	Y+4, r25	; 0x04
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4982:	f1 01       	movw	r30, r2
    4984:	62 81       	ldd	r22, Z+2	; 0x02
    4986:	73 81       	ldd	r23, Z+3	; 0x03
    4988:	88 27       	eor	r24, r24
    498a:	77 fd       	sbrc	r23, 7
    498c:	80 95       	com	r24
    498e:	98 2f       	mov	r25, r24
    4990:	e2 d7       	rcall	.+4036   	; 0x5956 <__floatsisf>
    4992:	2b 01       	movw	r4, r22
    4994:	3c 01       	movw	r6, r24
    4996:	c5 01       	movw	r24, r10
    4998:	b4 01       	movw	r22, r8
    499a:	0e 94 6c 2e 	call	0x5cd8	; 0x5cd8 <sin>
    499e:	6d 83       	std	Y+5, r22	; 0x05
    49a0:	7e 83       	std	Y+6, r23	; 0x06
    49a2:	8f 83       	std	Y+7, r24	; 0x07
    49a4:	98 87       	std	Y+8, r25	; 0x08
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    49a6:	f1 01       	movw	r30, r2
    49a8:	64 81       	ldd	r22, Z+4	; 0x04
    49aa:	75 81       	ldd	r23, Z+5	; 0x05
    49ac:	88 27       	eor	r24, r24
    49ae:	77 fd       	sbrc	r23, 7
    49b0:	80 95       	com	r24
    49b2:	98 2f       	mov	r25, r24
    49b4:	d0 d7       	rcall	.+4000   	; 0x5956 <__floatsisf>
    49b6:	69 87       	std	Y+9, r22	; 0x09
    49b8:	7a 87       	std	Y+10, r23	; 0x0a
    49ba:	8b 87       	std	Y+11, r24	; 0x0b
    49bc:	9c 87       	std	Y+12, r25	; 0x0c
    49be:	c5 01       	movw	r24, r10
    49c0:	b4 01       	movw	r22, r8
    49c2:	2b d7       	rcall	.+3670   	; 0x581a <cos>
    49c4:	4b 01       	movw	r8, r22
    49c6:	5c 01       	movw	r10, r24
    49c8:	c7 01       	movw	r24, r14
    49ca:	b6 01       	movw	r22, r12
    49cc:	0e 94 6c 2e 	call	0x5cd8	; 0x5cd8 <sin>
    49d0:	6d 87       	std	Y+13, r22	; 0x0d
    49d2:	7e 87       	std	Y+14, r23	; 0x0e
    49d4:	8f 87       	std	Y+15, r24	; 0x0f
    49d6:	98 8b       	std	Y+16, r25	; 0x10
		temp_M[1] = achsen[1]*cos(roll);
    49d8:	a5 01       	movw	r20, r10
    49da:	94 01       	movw	r18, r8
    49dc:	c3 01       	movw	r24, r6
    49de:	b2 01       	movw	r22, r4
    49e0:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    49e4:	85 d7       	rcall	.+3850   	; 0x58f0 <__fixsfsi>
		temp_M[1]+= achsen[2]*sin(roll);
    49e6:	88 27       	eor	r24, r24
    49e8:	77 fd       	sbrc	r23, 7
    49ea:	80 95       	com	r24
    49ec:	98 2f       	mov	r25, r24
    49ee:	b3 d7       	rcall	.+3942   	; 0x5956 <__floatsisf>
    49f0:	6b 01       	movw	r12, r22
    49f2:	7c 01       	movw	r14, r24
    49f4:	29 85       	ldd	r18, Y+9	; 0x09
    49f6:	3a 85       	ldd	r19, Y+10	; 0x0a
    49f8:	4b 85       	ldd	r20, Y+11	; 0x0b
    49fa:	5c 85       	ldd	r21, Y+12	; 0x0c
    49fc:	6d 81       	ldd	r22, Y+5	; 0x05
    49fe:	7e 81       	ldd	r23, Y+6	; 0x06
    4a00:	8f 81       	ldd	r24, Y+7	; 0x07
    4a02:	98 85       	ldd	r25, Y+8	; 0x08
    4a04:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    4a08:	9b 01       	movw	r18, r22
    4a0a:	ac 01       	movw	r20, r24
    4a0c:	c7 01       	movw	r24, r14
    4a0e:	b6 01       	movw	r22, r12
    4a10:	3a d6       	rcall	.+3188   	; 0x5686 <__addsf3>
    4a12:	6e d7       	rcall	.+3804   	; 0x58f0 <__fixsfsi>
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4a14:	88 27       	eor	r24, r24
    4a16:	77 fd       	sbrc	r23, 7
    4a18:	80 95       	com	r24
    4a1a:	98 2f       	mov	r25, r24
    4a1c:	9c d7       	rcall	.+3896   	; 0x5956 <__floatsisf>
    4a1e:	69 8b       	std	Y+17, r22	; 0x11
    4a20:	7a 8b       	std	Y+18, r23	; 0x12
    4a22:	8b 8b       	std	Y+19, r24	; 0x13
    4a24:	9c 8b       	std	Y+20, r25	; 0x14
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4a26:	f1 01       	movw	r30, r2
    4a28:	60 81       	ld	r22, Z
    4a2a:	71 81       	ldd	r23, Z+1	; 0x01
    4a2c:	88 27       	eor	r24, r24
    4a2e:	77 fd       	sbrc	r23, 7
    4a30:	80 95       	com	r24
    4a32:	98 2f       	mov	r25, r24
    4a34:	90 d7       	rcall	.+3872   	; 0x5956 <__floatsisf>
    4a36:	29 81       	ldd	r18, Y+1	; 0x01
    4a38:	3a 81       	ldd	r19, Y+2	; 0x02
    4a3a:	4b 81       	ldd	r20, Y+3	; 0x03
    4a3c:	5c 81       	ldd	r21, Y+4	; 0x04
    4a3e:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    4a42:	56 d7       	rcall	.+3756   	; 0x58f0 <__fixsfsi>
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4a44:	88 27       	eor	r24, r24
    4a46:	77 fd       	sbrc	r23, 7
    4a48:	80 95       	com	r24
    4a4a:	98 2f       	mov	r25, r24
    4a4c:	84 d7       	rcall	.+3848   	; 0x5956 <__floatsisf>
    4a4e:	6b 01       	movw	r12, r22
    4a50:	7c 01       	movw	r14, r24
    4a52:	2d 81       	ldd	r18, Y+5	; 0x05
    4a54:	3e 81       	ldd	r19, Y+6	; 0x06
    4a56:	4f 81       	ldd	r20, Y+7	; 0x07
    4a58:	58 85       	ldd	r21, Y+8	; 0x08
    4a5a:	c3 01       	movw	r24, r6
    4a5c:	b2 01       	movw	r22, r4
    4a5e:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    4a62:	9b 01       	movw	r18, r22
    4a64:	ac 01       	movw	r20, r24
    4a66:	69 81       	ldd	r22, Y+1	; 0x01
    4a68:	7a 81       	ldd	r23, Y+2	; 0x02
    4a6a:	8b 81       	ldd	r24, Y+3	; 0x03
    4a6c:	9c 81       	ldd	r25, Y+4	; 0x04
    4a6e:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    4a72:	9b 01       	movw	r18, r22
    4a74:	ac 01       	movw	r20, r24
    4a76:	c7 01       	movw	r24, r14
    4a78:	b6 01       	movw	r22, r12
    4a7a:	05 d6       	rcall	.+3082   	; 0x5686 <__addsf3>
    4a7c:	39 d7       	rcall	.+3698   	; 0x58f0 <__fixsfsi>
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    4a7e:	88 27       	eor	r24, r24
    4a80:	77 fd       	sbrc	r23, 7
    4a82:	80 95       	com	r24
    4a84:	98 2f       	mov	r25, r24
    4a86:	67 d7       	rcall	.+3790   	; 0x5956 <__floatsisf>
    4a88:	6b 01       	movw	r12, r22
    4a8a:	7c 01       	movw	r14, r24
    4a8c:	a5 01       	movw	r20, r10
    4a8e:	94 01       	movw	r18, r8
    4a90:	69 85       	ldd	r22, Y+9	; 0x09
    4a92:	7a 85       	ldd	r23, Y+10	; 0x0a
    4a94:	8b 85       	ldd	r24, Y+11	; 0x0b
    4a96:	9c 85       	ldd	r25, Y+12	; 0x0c
    4a98:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    4a9c:	2d 85       	ldd	r18, Y+13	; 0x0d
    4a9e:	3e 85       	ldd	r19, Y+14	; 0x0e
    4aa0:	4f 85       	ldd	r20, Y+15	; 0x0f
    4aa2:	58 89       	ldd	r21, Y+16	; 0x10
    4aa4:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    4aa8:	9b 01       	movw	r18, r22
    4aaa:	ac 01       	movw	r20, r24
    4aac:	c7 01       	movw	r24, r14
    4aae:	b6 01       	movw	r22, r12
    4ab0:	ea d5       	rcall	.+3028   	; 0x5686 <__addsf3>
    4ab2:	1e d7       	rcall	.+3644   	; 0x58f0 <__fixsfsi>
		temp_M[1] = achsen[1]*cos(roll);
		temp_M[1]+= achsen[2]*sin(roll);
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4ab4:	88 27       	eor	r24, r24
    4ab6:	77 fd       	sbrc	r23, 7
    4ab8:	80 95       	com	r24
    4aba:	98 2f       	mov	r25, r24
    4abc:	4c d7       	rcall	.+3736   	; 0x5956 <__floatsisf>
    4abe:	29 89       	ldd	r18, Y+17	; 0x11
    4ac0:	3a 89       	ldd	r19, Y+18	; 0x12
    4ac2:	4b 89       	ldd	r20, Y+19	; 0x13
    4ac4:	5c 89       	ldd	r21, Y+20	; 0x14
    4ac6:	52 d6       	rcall	.+3236   	; 0x576c <atan2>
    4ac8:	20 e0       	ldi	r18, 0x00	; 0
    4aca:	30 e0       	ldi	r19, 0x00	; 0
    4acc:	44 e3       	ldi	r20, 0x34	; 52
    4ace:	53 e4       	ldi	r21, 0x43	; 67
    4ad0:	0e 94 09 2e 	call	0x5c12	; 0x5c12 <__mulsf3>
    4ad4:	2b ed       	ldi	r18, 0xDB	; 219
    4ad6:	3f e0       	ldi	r19, 0x0F	; 15
    4ad8:	49 e4       	ldi	r20, 0x49	; 73
    4ada:	50 e4       	ldi	r21, 0x40	; 64
    4adc:	a1 d6       	rcall	.+3394   	; 0x5820 <__divsf3>
    4ade:	20 e0       	ldi	r18, 0x00	; 0
    4ae0:	30 e0       	ldi	r19, 0x00	; 0
    4ae2:	44 e3       	ldi	r20, 0x34	; 52
    4ae4:	53 e4       	ldi	r21, 0x43	; 67
    4ae6:	cf d5       	rcall	.+2974   	; 0x5686 <__addsf3>
		//Tilt kompensation
		//deklination
		angle+=2.35;
    4ae8:	26 e6       	ldi	r18, 0x66	; 102
    4aea:	36 e6       	ldi	r19, 0x66	; 102
    4aec:	46 e1       	ldi	r20, 0x16	; 22
    4aee:	50 e4       	ldi	r21, 0x40	; 64
    4af0:	ca d5       	rcall	.+2964   	; 0x5686 <__addsf3>
    4af2:	6b 01       	movw	r12, r22
    4af4:	7c 01       	movw	r14, r24
		//Normierung auf %360
		if (angle>=360)
    4af6:	20 e0       	ldi	r18, 0x00	; 0
    4af8:	30 e0       	ldi	r19, 0x00	; 0
    4afa:	44 eb       	ldi	r20, 0xB4	; 180
    4afc:	53 e4       	ldi	r21, 0x43	; 67
    4afe:	0e 94 b9 2d 	call	0x5b72	; 0x5b72 <__gesf2>
    4b02:	88 23       	and	r24, r24
    4b04:	54 f0       	brlt	.+20     	; 0x4b1a <_ZN7Kompass5angleEdd+0x1ea>
		{
			angle-=360;
    4b06:	20 e0       	ldi	r18, 0x00	; 0
    4b08:	30 e0       	ldi	r19, 0x00	; 0
    4b0a:	44 eb       	ldi	r20, 0xB4	; 180
    4b0c:	53 e4       	ldi	r21, 0x43	; 67
    4b0e:	c7 01       	movw	r24, r14
    4b10:	b6 01       	movw	r22, r12
    4b12:	b8 d5       	rcall	.+2928   	; 0x5684 <__subsf3>
    4b14:	6b 01       	movw	r12, r22
    4b16:	7c 01       	movw	r14, r24
    4b18:	1a c0       	rjmp	.+52     	; 0x4b4e <_ZN7Kompass5angleEdd+0x21e>
		}
		else if (angle < 0)
    4b1a:	20 e0       	ldi	r18, 0x00	; 0
    4b1c:	30 e0       	ldi	r19, 0x00	; 0
    4b1e:	a9 01       	movw	r20, r18
    4b20:	c7 01       	movw	r24, r14
    4b22:	b6 01       	movw	r22, r12
    4b24:	76 d6       	rcall	.+3308   	; 0x5812 <__cmpsf2>
    4b26:	88 23       	and	r24, r24
    4b28:	94 f4       	brge	.+36     	; 0x4b4e <_ZN7Kompass5angleEdd+0x21e>
		{
			angle+=360;
    4b2a:	20 e0       	ldi	r18, 0x00	; 0
    4b2c:	30 e0       	ldi	r19, 0x00	; 0
    4b2e:	44 eb       	ldi	r20, 0xB4	; 180
    4b30:	53 e4       	ldi	r21, 0x43	; 67
    4b32:	c7 01       	movw	r24, r14
    4b34:	b6 01       	movw	r22, r12
    4b36:	a7 d5       	rcall	.+2894   	; 0x5686 <__addsf3>
    4b38:	6b 01       	movw	r12, r22
    4b3a:	7c 01       	movw	r14, r24
    4b3c:	08 c0       	rjmp	.+16     	; 0x4b4e <_ZN7Kompass5angleEdd+0x21e>
double Kompass::angle(double roll, double pitch){
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
    4b3e:	0f 2e       	mov	r0, r31
    4b40:	c1 2c       	mov	r12, r1
    4b42:	d1 2c       	mov	r13, r1
    4b44:	f0 e8       	ldi	r31, 0x80	; 128
    4b46:	ef 2e       	mov	r14, r31
    4b48:	ff eb       	ldi	r31, 0xBF	; 191
    4b4a:	ff 2e       	mov	r15, r31
    4b4c:	f0 2d       	mov	r31, r0
		{
			angle+=360;
		}
	}
	
	HMC5883L_command(0x02,HMCSIGLEMODE);
    4b4e:	41 e0       	ldi	r20, 0x01	; 1
    4b50:	62 e0       	ldi	r22, 0x02	; 2
    4b52:	c1 01       	movw	r24, r2
    4b54:	fb dd       	rcall	.-1034   	; 0x474c <_ZN7Kompass16HMC5883L_commandEhh>
	return angle;
}
    4b56:	c7 01       	movw	r24, r14
    4b58:	b6 01       	movw	r22, r12
    4b5a:	64 96       	adiw	r28, 0x14	; 20
    4b5c:	0f b6       	in	r0, 0x3f	; 63
    4b5e:	f8 94       	cli
    4b60:	de bf       	out	0x3e, r29	; 62
    4b62:	0f be       	out	0x3f, r0	; 63
    4b64:	cd bf       	out	0x3d, r28	; 61
    4b66:	df 91       	pop	r29
    4b68:	cf 91       	pop	r28
    4b6a:	1f 91       	pop	r17
    4b6c:	0f 91       	pop	r16
    4b6e:	ff 90       	pop	r15
    4b70:	ef 90       	pop	r14
    4b72:	df 90       	pop	r13
    4b74:	cf 90       	pop	r12
    4b76:	bf 90       	pop	r11
    4b78:	af 90       	pop	r10
    4b7a:	9f 90       	pop	r9
    4b7c:	8f 90       	pop	r8
    4b7e:	7f 90       	pop	r7
    4b80:	6f 90       	pop	r6
    4b82:	5f 90       	pop	r5
    4b84:	4f 90       	pop	r4
    4b86:	3f 90       	pop	r3
    4b88:	2f 90       	pop	r2
    4b8a:	08 95       	ret

00004b8c <_ZN7Kompass25kallibrierung_ruecksetzenEv>:

void Kompass::kallibrierung_ruecksetzen(){
    4b8c:	fc 01       	movw	r30, r24
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4b8e:	16 86       	std	Z+14, r1	; 0x0e
    4b90:	15 86       	std	Z+13, r1	; 0x0d
		min[i]=0;
    4b92:	14 8a       	std	Z+20, r1	; 0x14
    4b94:	13 8a       	std	Z+19, r1	; 0x13
		offset[i]=0;
    4b96:	10 86       	std	Z+8, r1	; 0x08
    4b98:	17 82       	std	Z+7, r1	; 0x07
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4b9a:	10 8a       	std	Z+16, r1	; 0x10
    4b9c:	17 86       	std	Z+15, r1	; 0x0f
		min[i]=0;
    4b9e:	16 8a       	std	Z+22, r1	; 0x16
    4ba0:	15 8a       	std	Z+21, r1	; 0x15
		offset[i]=0;
    4ba2:	12 86       	std	Z+10, r1	; 0x0a
    4ba4:	11 86       	std	Z+9, r1	; 0x09
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4ba6:	12 8a       	std	Z+18, r1	; 0x12
    4ba8:	11 8a       	std	Z+17, r1	; 0x11
		min[i]=0;
    4baa:	10 8e       	std	Z+24, r1	; 0x18
    4bac:	17 8a       	std	Z+23, r1	; 0x17
		offset[i]=0;
    4bae:	14 86       	std	Z+12, r1	; 0x0c
    4bb0:	13 86       	std	Z+11, r1	; 0x0b
    4bb2:	08 95       	ret

00004bb4 <_ZN7LSM303DD1Ev>:
	//FIFO Bypass Mode
	ACCBypassmode();
}

void LSM303D::ACCStreammode(){
	LSM303_command(FIFO_CTRL,(1<<FM1));
    4bb4:	40 96       	adiw	r24, 0x10	; 16
    4bb6:	d0 cc       	rjmp	.-1632   	; 0x4558 <_ZN3I2CD1Ev>
    4bb8:	08 95       	ret

00004bba <_ZN7LSM303D7readaccEv>:
    4bba:	6f 92       	push	r6
    4bbc:	7f 92       	push	r7
    4bbe:	8f 92       	push	r8
    4bc0:	9f 92       	push	r9
    4bc2:	af 92       	push	r10
    4bc4:	bf 92       	push	r11
    4bc6:	cf 92       	push	r12
    4bc8:	df 92       	push	r13
    4bca:	ef 92       	push	r14
    4bcc:	ff 92       	push	r15
    4bce:	1f 93       	push	r17
    4bd0:	cf 93       	push	r28
    4bd2:	df 93       	push	r29
    4bd4:	00 d0       	rcall	.+0      	; 0x4bd6 <_ZN7LSM303D7readaccEv+0x1c>
    4bd6:	00 d0       	rcall	.+0      	; 0x4bd8 <_ZN7LSM303D7readaccEv+0x1e>
    4bd8:	00 d0       	rcall	.+0      	; 0x4bda <_ZN7LSM303D7readaccEv+0x20>
    4bda:	cd b7       	in	r28, 0x3d	; 61
    4bdc:	de b7       	in	r29, 0x3e	; 62
    4bde:	3c 01       	movw	r6, r24
    4be0:	f8 94       	cli
    4be2:	6c 01       	movw	r12, r24
    4be4:	80 e1       	ldi	r24, 0x10	; 16
    4be6:	c8 0e       	add	r12, r24
    4be8:	d1 1c       	adc	r13, r1
    4bea:	c6 01       	movw	r24, r12
    4bec:	b6 dc       	rcall	.-1684   	; 0x455a <_ZN3I2C9twi_startEv>
    4bee:	6a e3       	ldi	r22, 0x3A	; 58
    4bf0:	c6 01       	movw	r24, r12
    4bf2:	bb dc       	rcall	.-1674   	; 0x456a <_ZN3I2C9twi_writeEh>
    4bf4:	68 ea       	ldi	r22, 0xA8	; 168
    4bf6:	c6 01       	movw	r24, r12
    4bf8:	b8 dc       	rcall	.-1680   	; 0x456a <_ZN3I2C9twi_writeEh>
    4bfa:	c6 01       	movw	r24, r12
    4bfc:	ae dc       	rcall	.-1700   	; 0x455a <_ZN3I2C9twi_startEv>
    4bfe:	6b e3       	ldi	r22, 0x3B	; 59
    4c00:	c6 01       	movw	r24, r12
    4c02:	b3 dc       	rcall	.-1690   	; 0x456a <_ZN3I2C9twi_writeEh>
    4c04:	fe 01       	movw	r30, r28
    4c06:	31 96       	adiw	r30, 0x01	; 1
    4c08:	7f 01       	movw	r14, r30
    4c0a:	10 e0       	ldi	r17, 0x00	; 0
    4c0c:	15 30       	cpi	r17, 0x05	; 5
    4c0e:	30 f4       	brcc	.+12     	; 0x4c1c <_ZN7LSM303D7readaccEv+0x62>
    4c10:	61 e0       	ldi	r22, 0x01	; 1
    4c12:	c6 01       	movw	r24, r12
    4c14:	ba dc       	rcall	.-1676   	; 0x458a <_ZN3I2C8twi_readEh>
    4c16:	f7 01       	movw	r30, r14
    4c18:	80 83       	st	Z, r24
    4c1a:	05 c0       	rjmp	.+10     	; 0x4c26 <_ZN7LSM303D7readaccEv+0x6c>
    4c1c:	60 e0       	ldi	r22, 0x00	; 0
    4c1e:	c6 01       	movw	r24, r12
    4c20:	b4 dc       	rcall	.-1688   	; 0x458a <_ZN3I2C8twi_readEh>
    4c22:	f7 01       	movw	r30, r14
    4c24:	80 83       	st	Z, r24
    4c26:	1f 5f       	subi	r17, 0xFF	; 255
    4c28:	ff ef       	ldi	r31, 0xFF	; 255
    4c2a:	ef 1a       	sub	r14, r31
    4c2c:	ff 0a       	sbc	r15, r31
    4c2e:	16 30       	cpi	r17, 0x06	; 6
    4c30:	69 f7       	brne	.-38     	; 0x4c0c <_ZN7LSM303D7readaccEv+0x52>
    4c32:	c6 01       	movw	r24, r12
    4c34:	96 dc       	rcall	.-1748   	; 0x4562 <_ZN3I2C8twi_stopEv>
    4c36:	6a 81       	ldd	r22, Y+2	; 0x02
    4c38:	70 e0       	ldi	r23, 0x00	; 0
    4c3a:	76 2f       	mov	r23, r22
    4c3c:	66 27       	eor	r22, r22
    4c3e:	89 81       	ldd	r24, Y+1	; 0x01
    4c40:	68 2b       	or	r22, r24
    4c42:	f3 01       	movw	r30, r6
    4c44:	75 83       	std	Z+5, r23	; 0x05
    4c46:	64 83       	std	Z+4, r22	; 0x04
    4c48:	ac 80       	ldd	r10, Y+4	; 0x04
    4c4a:	b1 2c       	mov	r11, r1
    4c4c:	ba 2c       	mov	r11, r10
    4c4e:	aa 24       	eor	r10, r10
    4c50:	8b 81       	ldd	r24, Y+3	; 0x03
    4c52:	a8 2a       	or	r10, r24
    4c54:	b1 82       	std	Z+1, r11	; 0x01
    4c56:	a0 82       	st	Z, r10
    4c58:	8e 80       	ldd	r8, Y+6	; 0x06
    4c5a:	91 2c       	mov	r9, r1
    4c5c:	98 2c       	mov	r9, r8
    4c5e:	88 24       	eor	r8, r8
    4c60:	8d 81       	ldd	r24, Y+5	; 0x05
    4c62:	88 2a       	or	r8, r24
    4c64:	93 82       	std	Z+3, r9	; 0x03
    4c66:	82 82       	std	Z+2, r8	; 0x02
    4c68:	88 27       	eor	r24, r24
    4c6a:	77 fd       	sbrc	r23, 7
    4c6c:	80 95       	com	r24
    4c6e:	98 2f       	mov	r25, r24
    4c70:	72 d6       	rcall	.+3300   	; 0x5956 <__floatsisf>
    4c72:	6b 01       	movw	r12, r22
    4c74:	7c 01       	movw	r14, r24
    4c76:	b4 01       	movw	r22, r8
    4c78:	88 27       	eor	r24, r24
    4c7a:	77 fd       	sbrc	r23, 7
    4c7c:	80 95       	com	r24
    4c7e:	98 2f       	mov	r25, r24
    4c80:	6a d6       	rcall	.+3284   	; 0x5956 <__floatsisf>
    4c82:	9b 01       	movw	r18, r22
    4c84:	ac 01       	movw	r20, r24
    4c86:	c7 01       	movw	r24, r14
    4c88:	b6 01       	movw	r22, r12
    4c8a:	70 d5       	rcall	.+2784   	; 0x576c <atan2>
    4c8c:	2b ed       	ldi	r18, 0xDB	; 219
    4c8e:	3f e0       	ldi	r19, 0x0F	; 15
    4c90:	49 ec       	ldi	r20, 0xC9	; 201
    4c92:	5f e3       	ldi	r21, 0x3F	; 63
    4c94:	f7 d4       	rcall	.+2542   	; 0x5684 <__subsf3>
    4c96:	f3 01       	movw	r30, r6
    4c98:	64 87       	std	Z+12, r22	; 0x0c
    4c9a:	75 87       	std	Z+13, r23	; 0x0d
    4c9c:	86 87       	std	Z+14, r24	; 0x0e
    4c9e:	97 87       	std	Z+15, r25	; 0x0f
    4ca0:	b5 01       	movw	r22, r10
    4ca2:	88 27       	eor	r24, r24
    4ca4:	77 fd       	sbrc	r23, 7
    4ca6:	80 95       	com	r24
    4ca8:	98 2f       	mov	r25, r24
    4caa:	55 d6       	rcall	.+3242   	; 0x5956 <__floatsisf>
    4cac:	9b 01       	movw	r18, r22
    4cae:	ac 01       	movw	r20, r24
    4cb0:	c7 01       	movw	r24, r14
    4cb2:	b6 01       	movw	r22, r12
    4cb4:	5b d5       	rcall	.+2742   	; 0x576c <atan2>
    4cb6:	2b ed       	ldi	r18, 0xDB	; 219
    4cb8:	3f e0       	ldi	r19, 0x0F	; 15
    4cba:	49 ec       	ldi	r20, 0xC9	; 201
    4cbc:	5f e3       	ldi	r21, 0x3F	; 63
    4cbe:	e2 d4       	rcall	.+2500   	; 0x5684 <__subsf3>
    4cc0:	f3 01       	movw	r30, r6
    4cc2:	60 87       	std	Z+8, r22	; 0x08
    4cc4:	71 87       	std	Z+9, r23	; 0x09
    4cc6:	82 87       	std	Z+10, r24	; 0x0a
    4cc8:	93 87       	std	Z+11, r25	; 0x0b
    4cca:	78 94       	sei
    4ccc:	26 96       	adiw	r28, 0x06	; 6
    4cce:	0f b6       	in	r0, 0x3f	; 63
    4cd0:	f8 94       	cli
    4cd2:	de bf       	out	0x3e, r29	; 62
    4cd4:	0f be       	out	0x3f, r0	; 63
    4cd6:	cd bf       	out	0x3d, r28	; 61
    4cd8:	df 91       	pop	r29
    4cda:	cf 91       	pop	r28
    4cdc:	1f 91       	pop	r17
    4cde:	ff 90       	pop	r15
    4ce0:	ef 90       	pop	r14
    4ce2:	df 90       	pop	r13
    4ce4:	cf 90       	pop	r12
    4ce6:	bf 90       	pop	r11
    4ce8:	af 90       	pop	r10
    4cea:	9f 90       	pop	r9
    4cec:	8f 90       	pop	r8
    4cee:	7f 90       	pop	r7
    4cf0:	6f 90       	pop	r6
    4cf2:	08 95       	ret

00004cf4 <_ZN7LSM303D11readtemperaEv>:
    4cf4:	cf 92       	push	r12
    4cf6:	df 92       	push	r13
    4cf8:	ef 92       	push	r14
    4cfa:	ff 92       	push	r15
    4cfc:	0f 93       	push	r16
    4cfe:	1f 93       	push	r17
    4d00:	cf 93       	push	r28
    4d02:	df 93       	push	r29
    4d04:	00 d0       	rcall	.+0      	; 0x4d06 <_ZN7LSM303D11readtemperaEv+0x12>
    4d06:	cd b7       	in	r28, 0x3d	; 61
    4d08:	de b7       	in	r29, 0x3e	; 62
    4d0a:	7c 01       	movw	r14, r24
    4d0c:	f8 94       	cli
    4d0e:	8c 01       	movw	r16, r24
    4d10:	00 5f       	subi	r16, 0xF0	; 240
    4d12:	1f 4f       	sbci	r17, 0xFF	; 255
    4d14:	c8 01       	movw	r24, r16
    4d16:	21 dc       	rcall	.-1982   	; 0x455a <_ZN3I2C9twi_startEv>
    4d18:	6a e3       	ldi	r22, 0x3A	; 58
    4d1a:	c8 01       	movw	r24, r16
    4d1c:	26 dc       	rcall	.-1972   	; 0x456a <_ZN3I2C9twi_writeEh>
    4d1e:	65 e8       	ldi	r22, 0x85	; 133
    4d20:	c8 01       	movw	r24, r16
    4d22:	23 dc       	rcall	.-1978   	; 0x456a <_ZN3I2C9twi_writeEh>
    4d24:	c8 01       	movw	r24, r16
    4d26:	19 dc       	rcall	.-1998   	; 0x455a <_ZN3I2C9twi_startEv>
    4d28:	6b e3       	ldi	r22, 0x3B	; 59
    4d2a:	c8 01       	movw	r24, r16
    4d2c:	1e dc       	rcall	.-1988   	; 0x456a <_ZN3I2C9twi_writeEh>
    4d2e:	cc 24       	eor	r12, r12
    4d30:	c3 94       	inc	r12
    4d32:	d1 2c       	mov	r13, r1
    4d34:	02 c0       	rjmp	.+4      	; 0x4d3a <_ZN7LSM303D11readtemperaEv+0x46>
    4d36:	d3 94       	inc	r13
    4d38:	c3 94       	inc	r12
    4d3a:	d1 10       	cpse	r13, r1
    4d3c:	05 c0       	rjmp	.+10     	; 0x4d48 <_ZN7LSM303D11readtemperaEv+0x54>
    4d3e:	61 e0       	ldi	r22, 0x01	; 1
    4d40:	c8 01       	movw	r24, r16
    4d42:	23 dc       	rcall	.-1978   	; 0x458a <_ZN3I2C8twi_readEh>
    4d44:	89 83       	std	Y+1, r24	; 0x01
    4d46:	f7 cf       	rjmp	.-18     	; 0x4d36 <_ZN7LSM303D11readtemperaEv+0x42>
    4d48:	60 e0       	ldi	r22, 0x00	; 0
    4d4a:	c8 01       	movw	r24, r16
    4d4c:	1e dc       	rcall	.-1988   	; 0x458a <_ZN3I2C8twi_readEh>
    4d4e:	e1 e0       	ldi	r30, 0x01	; 1
    4d50:	f0 e0       	ldi	r31, 0x00	; 0
    4d52:	ec 0f       	add	r30, r28
    4d54:	fd 1f       	adc	r31, r29
    4d56:	ed 0d       	add	r30, r13
    4d58:	f1 1d       	adc	r31, r1
    4d5a:	80 83       	st	Z, r24
    4d5c:	81 e0       	ldi	r24, 0x01	; 1
    4d5e:	8c 15       	cp	r24, r12
    4d60:	50 f7       	brcc	.-44     	; 0x4d36 <_ZN7LSM303D11readtemperaEv+0x42>
    4d62:	c8 01       	movw	r24, r16
    4d64:	fe db       	rcall	.-2052   	; 0x4562 <_ZN3I2C8twi_stopEv>
    4d66:	8a 81       	ldd	r24, Y+2	; 0x02
    4d68:	90 e0       	ldi	r25, 0x00	; 0
    4d6a:	98 2f       	mov	r25, r24
    4d6c:	88 27       	eor	r24, r24
    4d6e:	29 81       	ldd	r18, Y+1	; 0x01
    4d70:	82 2b       	or	r24, r18
    4d72:	91 95       	neg	r25
    4d74:	81 95       	neg	r24
    4d76:	91 09       	sbc	r25, r1
    4d78:	f7 01       	movw	r30, r14
    4d7a:	97 83       	std	Z+7, r25	; 0x07
    4d7c:	86 83       	std	Z+6, r24	; 0x06
    4d7e:	78 94       	sei
    4d80:	0f 90       	pop	r0
    4d82:	0f 90       	pop	r0
    4d84:	df 91       	pop	r29
    4d86:	cf 91       	pop	r28
    4d88:	1f 91       	pop	r17
    4d8a:	0f 91       	pop	r16
    4d8c:	ff 90       	pop	r15
    4d8e:	ef 90       	pop	r14
    4d90:	df 90       	pop	r13
    4d92:	cf 90       	pop	r12
    4d94:	08 95       	ret

00004d96 <_ZN7LSM303D14LSM303_commandEhh>:
    4d96:	0f 93       	push	r16
    4d98:	1f 93       	push	r17
    4d9a:	cf 93       	push	r28
    4d9c:	df 93       	push	r29
    4d9e:	06 2f       	mov	r16, r22
    4da0:	14 2f       	mov	r17, r20
    4da2:	ec 01       	movw	r28, r24
    4da4:	60 96       	adiw	r28, 0x10	; 16
    4da6:	ce 01       	movw	r24, r28
    4da8:	d8 db       	rcall	.-2128   	; 0x455a <_ZN3I2C9twi_startEv>
    4daa:	6a e3       	ldi	r22, 0x3A	; 58
    4dac:	ce 01       	movw	r24, r28
    4dae:	dd db       	rcall	.-2118   	; 0x456a <_ZN3I2C9twi_writeEh>
    4db0:	60 2f       	mov	r22, r16
    4db2:	ce 01       	movw	r24, r28
    4db4:	da db       	rcall	.-2124   	; 0x456a <_ZN3I2C9twi_writeEh>
    4db6:	61 2f       	mov	r22, r17
    4db8:	ce 01       	movw	r24, r28
    4dba:	d7 db       	rcall	.-2130   	; 0x456a <_ZN3I2C9twi_writeEh>
    4dbc:	ce 01       	movw	r24, r28
    4dbe:	d1 db       	rcall	.-2142   	; 0x4562 <_ZN3I2C8twi_stopEv>
    4dc0:	df 91       	pop	r29
    4dc2:	cf 91       	pop	r28
    4dc4:	1f 91       	pop	r17
    4dc6:	0f 91       	pop	r16
    4dc8:	08 95       	ret

00004dca <_ZN7LSM303D13ACCBypassmodeEv>:
}

void LSM303D::ACCBypassmode(){
	LSM303_command(FIFO_CTRL,0x00);
    4dca:	40 e0       	ldi	r20, 0x00	; 0
    4dcc:	6e e2       	ldi	r22, 0x2E	; 46
    4dce:	e3 cf       	rjmp	.-58     	; 0x4d96 <_ZN7LSM303D14LSM303_commandEhh>
    4dd0:	08 95       	ret

00004dd2 <_ZN7LSM303D9acce_initEv>:
// default destructor
LSM303D::~LSM303D()
{
} //~LSM303D

void LSM303D::acce_init(){
    4dd2:	cf 93       	push	r28
    4dd4:	df 93       	push	r29
    4dd6:	ec 01       	movw	r28, r24
	//ACC Activ und 25Hz ohne Block dataread
	LSM303_command(CTRL1,(1<<AXEN)|(1<<AYEN)|(1<<AZEN)|(1<<AODR2));
    4dd8:	47 e4       	ldi	r20, 0x47	; 71
    4dda:	60 e2       	ldi	r22, 0x20	; 32
    4ddc:	dc df       	rcall	.-72     	; 0x4d96 <_ZN7LSM303D14LSM303_commandEhh>
	
	//ACC fuer +-2g
	LSM303_command(CTRL2,0x00);
    4dde:	40 e0       	ldi	r20, 0x00	; 0
    4de0:	61 e2       	ldi	r22, 0x21	; 33
    4de2:	ce 01       	movw	r24, r28
    4de4:	d8 df       	rcall	.-80     	; 0x4d96 <_ZN7LSM303D14LSM303_commandEhh>
	
	//Temperatursensor an
	LSM303_command(CTRL5,(1<<TEMP_EN));
    4de6:	40 e8       	ldi	r20, 0x80	; 128
    4de8:	64 e2       	ldi	r22, 0x24	; 36
    4dea:	ce 01       	movw	r24, r28
    4dec:	d4 df       	rcall	.-88     	; 0x4d96 <_ZN7LSM303D14LSM303_commandEhh>
	
	//FIFO Bypass Mode
	ACCBypassmode();
    4dee:	ce 01       	movw	r24, r28
    4df0:	ec df       	rcall	.-40     	; 0x4dca <_ZN7LSM303D13ACCBypassmodeEv>
}
    4df2:	df 91       	pop	r29
    4df4:	cf 91       	pop	r28
    4df6:	08 95       	ret

00004df8 <_ZN7LSM303DC1Ev>:


#include "LSM303D.h"

// default constructor
LSM303D::LSM303D()
    4df8:	cf 93       	push	r28
    4dfa:	df 93       	push	r29
    4dfc:	ec 01       	movw	r28, r24
    4dfe:	40 96       	adiw	r24, 0x10	; 16
    4e00:	a7 db       	rcall	.-2226   	; 0x4550 <_ZN3I2CC1Ev>
{
	//Variablen initialisieren
	Tempera=0;
    4e02:	1f 82       	std	Y+7, r1	; 0x07
    4e04:	1e 82       	std	Y+6, r1	; 0x06
	roll=0.0;
    4e06:	18 86       	std	Y+8, r1	; 0x08
    4e08:	19 86       	std	Y+9, r1	; 0x09
    4e0a:	1a 86       	std	Y+10, r1	; 0x0a
    4e0c:	1b 86       	std	Y+11, r1	; 0x0b
	pitch=0.0;
    4e0e:	1c 86       	std	Y+12, r1	; 0x0c
    4e10:	1d 86       	std	Y+13, r1	; 0x0d
    4e12:	1e 86       	std	Y+14, r1	; 0x0e
    4e14:	1f 86       	std	Y+15, r1	; 0x0f
	for (uint8_t i=0;i<3;i++)
	{
		achsen_A[i]=0;
    4e16:	19 82       	std	Y+1, r1	; 0x01
    4e18:	18 82       	st	Y, r1
    4e1a:	1b 82       	std	Y+3, r1	; 0x03
    4e1c:	1a 82       	std	Y+2, r1	; 0x02
    4e1e:	1d 82       	std	Y+5, r1	; 0x05
    4e20:	1c 82       	std	Y+4, r1	; 0x04
	}
	
	//ACC init
	acce_init();
    4e22:	ce 01       	movw	r24, r28
    4e24:	d6 df       	rcall	.-84     	; 0x4dd2 <_ZN7LSM303D9acce_initEv>
} //LSM303D
    4e26:	df 91       	pop	r29
    4e28:	cf 91       	pop	r28
    4e2a:	08 95       	ret

00004e2c <_ZN6OutputC1Ehh>:
#include "Output.h"

// default constructor
Output::Output(uint8_t Portpraefix, uint8_t Pinnumber)
{
	Pin=Pinnumber;
    4e2c:	fc 01       	movw	r30, r24
    4e2e:	41 83       	std	Z+1, r20	; 0x01
	Port=Portpraefix;
    4e30:	60 83       	st	Z, r22
	switch (Portpraefix)
    4e32:	62 34       	cpi	r22, 0x42	; 66
    4e34:	b1 f0       	breq	.+44     	; 0x4e62 <_ZN6OutputC1Ehh+0x36>
    4e36:	18 f4       	brcc	.+6      	; 0x4e3e <_ZN6OutputC1Ehh+0x12>
    4e38:	61 34       	cpi	r22, 0x41	; 65
    4e3a:	31 f0       	breq	.+12     	; 0x4e48 <_ZN6OutputC1Ehh+0x1c>
    4e3c:	08 95       	ret
    4e3e:	63 34       	cpi	r22, 0x43	; 67
    4e40:	e9 f0       	breq	.+58     	; 0x4e7c <_ZN6OutputC1Ehh+0x50>
    4e42:	64 34       	cpi	r22, 0x44	; 68
    4e44:	41 f1       	breq	.+80     	; 0x4e96 <_ZN6OutputC1Ehh+0x6a>
    4e46:	08 95       	ret
	{
		case 'A':
			DDRA |= (1<<Pin);
    4e48:	21 b1       	in	r18, 0x01	; 1
    4e4a:	81 e0       	ldi	r24, 0x01	; 1
    4e4c:	90 e0       	ldi	r25, 0x00	; 0
    4e4e:	bc 01       	movw	r22, r24
    4e50:	02 c0       	rjmp	.+4      	; 0x4e56 <_ZN6OutputC1Ehh+0x2a>
    4e52:	66 0f       	add	r22, r22
    4e54:	77 1f       	adc	r23, r23
    4e56:	4a 95       	dec	r20
    4e58:	e2 f7       	brpl	.-8      	; 0x4e52 <_ZN6OutputC1Ehh+0x26>
    4e5a:	ab 01       	movw	r20, r22
    4e5c:	42 2b       	or	r20, r18
    4e5e:	41 b9       	out	0x01, r20	; 1
			break;
    4e60:	08 95       	ret
		case 'B':
			DDRB |= (1<<Pin);
    4e62:	24 b1       	in	r18, 0x04	; 4
    4e64:	81 e0       	ldi	r24, 0x01	; 1
    4e66:	90 e0       	ldi	r25, 0x00	; 0
    4e68:	fc 01       	movw	r30, r24
    4e6a:	02 c0       	rjmp	.+4      	; 0x4e70 <_ZN6OutputC1Ehh+0x44>
    4e6c:	ee 0f       	add	r30, r30
    4e6e:	ff 1f       	adc	r31, r31
    4e70:	4a 95       	dec	r20
    4e72:	e2 f7       	brpl	.-8      	; 0x4e6c <_ZN6OutputC1Ehh+0x40>
    4e74:	af 01       	movw	r20, r30
    4e76:	42 2b       	or	r20, r18
    4e78:	44 b9       	out	0x04, r20	; 4
			break;
    4e7a:	08 95       	ret
		case 'C':
			DDRC |= (1<<Pin);
    4e7c:	27 b1       	in	r18, 0x07	; 7
    4e7e:	81 e0       	ldi	r24, 0x01	; 1
    4e80:	90 e0       	ldi	r25, 0x00	; 0
    4e82:	bc 01       	movw	r22, r24
    4e84:	02 c0       	rjmp	.+4      	; 0x4e8a <_ZN6OutputC1Ehh+0x5e>
    4e86:	66 0f       	add	r22, r22
    4e88:	77 1f       	adc	r23, r23
    4e8a:	4a 95       	dec	r20
    4e8c:	e2 f7       	brpl	.-8      	; 0x4e86 <_ZN6OutputC1Ehh+0x5a>
    4e8e:	ab 01       	movw	r20, r22
    4e90:	42 2b       	or	r20, r18
    4e92:	47 b9       	out	0x07, r20	; 7
			break;
    4e94:	08 95       	ret
		case 'D':
			DDRD |= (1<<Pin);
    4e96:	2a b1       	in	r18, 0x0a	; 10
    4e98:	81 e0       	ldi	r24, 0x01	; 1
    4e9a:	90 e0       	ldi	r25, 0x00	; 0
    4e9c:	fc 01       	movw	r30, r24
    4e9e:	02 c0       	rjmp	.+4      	; 0x4ea4 <_ZN6OutputC1Ehh+0x78>
    4ea0:	ee 0f       	add	r30, r30
    4ea2:	ff 1f       	adc	r31, r31
    4ea4:	4a 95       	dec	r20
    4ea6:	e2 f7       	brpl	.-8      	; 0x4ea0 <_ZN6OutputC1Ehh+0x74>
    4ea8:	af 01       	movw	r20, r30
    4eaa:	42 2b       	or	r20, r18
    4eac:	4a b9       	out	0x0a, r20	; 10
    4eae:	08 95       	ret

00004eb0 <_ZN6OutputD1Ev>:
			break;
	}
} //Output

// default destructor
Output::~Output()
    4eb0:	08 95       	ret

00004eb2 <_ZN6Output2onEv>:
{
} //~Output

void Output::on(){
	switch (Port)
    4eb2:	fc 01       	movw	r30, r24
    4eb4:	20 81       	ld	r18, Z
    4eb6:	22 34       	cpi	r18, 0x42	; 66
    4eb8:	c1 f0       	breq	.+48     	; 0x4eea <_ZN6Output2onEv+0x38>
    4eba:	18 f4       	brcc	.+6      	; 0x4ec2 <_ZN6Output2onEv+0x10>
    4ebc:	21 34       	cpi	r18, 0x41	; 65
    4ebe:	31 f0       	breq	.+12     	; 0x4ecc <_ZN6Output2onEv+0x1a>
    4ec0:	08 95       	ret
    4ec2:	23 34       	cpi	r18, 0x43	; 67
    4ec4:	09 f1       	breq	.+66     	; 0x4f08 <_ZN6Output2onEv+0x56>
    4ec6:	24 34       	cpi	r18, 0x44	; 68
    4ec8:	71 f1       	breq	.+92     	; 0x4f26 <_ZN6Output2onEv+0x74>
    4eca:	08 95       	ret
	{
		case 'A':
			PORTA |= (1<<Pin);
    4ecc:	42 b1       	in	r20, 0x02	; 2
    4ece:	21 e0       	ldi	r18, 0x01	; 1
    4ed0:	30 e0       	ldi	r19, 0x00	; 0
    4ed2:	b9 01       	movw	r22, r18
    4ed4:	fc 01       	movw	r30, r24
    4ed6:	01 80       	ldd	r0, Z+1	; 0x01
    4ed8:	02 c0       	rjmp	.+4      	; 0x4ede <_ZN6Output2onEv+0x2c>
    4eda:	66 0f       	add	r22, r22
    4edc:	77 1f       	adc	r23, r23
    4ede:	0a 94       	dec	r0
    4ee0:	e2 f7       	brpl	.-8      	; 0x4eda <_ZN6Output2onEv+0x28>
    4ee2:	cb 01       	movw	r24, r22
    4ee4:	84 2b       	or	r24, r20
    4ee6:	82 b9       	out	0x02, r24	; 2
			break;
    4ee8:	08 95       	ret
		case 'B':
			PORTB |= (1<<Pin);
    4eea:	45 b1       	in	r20, 0x05	; 5
    4eec:	21 e0       	ldi	r18, 0x01	; 1
    4eee:	30 e0       	ldi	r19, 0x00	; 0
    4ef0:	b9 01       	movw	r22, r18
    4ef2:	fc 01       	movw	r30, r24
    4ef4:	01 80       	ldd	r0, Z+1	; 0x01
    4ef6:	02 c0       	rjmp	.+4      	; 0x4efc <_ZN6Output2onEv+0x4a>
    4ef8:	66 0f       	add	r22, r22
    4efa:	77 1f       	adc	r23, r23
    4efc:	0a 94       	dec	r0
    4efe:	e2 f7       	brpl	.-8      	; 0x4ef8 <_ZN6Output2onEv+0x46>
    4f00:	cb 01       	movw	r24, r22
    4f02:	84 2b       	or	r24, r20
    4f04:	85 b9       	out	0x05, r24	; 5
			break;
    4f06:	08 95       	ret
		case 'C':
			PORTC |= (1<<Pin);
    4f08:	48 b1       	in	r20, 0x08	; 8
    4f0a:	21 e0       	ldi	r18, 0x01	; 1
    4f0c:	30 e0       	ldi	r19, 0x00	; 0
    4f0e:	b9 01       	movw	r22, r18
    4f10:	fc 01       	movw	r30, r24
    4f12:	01 80       	ldd	r0, Z+1	; 0x01
    4f14:	02 c0       	rjmp	.+4      	; 0x4f1a <_ZN6Output2onEv+0x68>
    4f16:	66 0f       	add	r22, r22
    4f18:	77 1f       	adc	r23, r23
    4f1a:	0a 94       	dec	r0
    4f1c:	e2 f7       	brpl	.-8      	; 0x4f16 <_ZN6Output2onEv+0x64>
    4f1e:	cb 01       	movw	r24, r22
    4f20:	84 2b       	or	r24, r20
    4f22:	88 b9       	out	0x08, r24	; 8
			break;
    4f24:	08 95       	ret
		case 'D':
			PORTD |= (1<<Pin);
    4f26:	4b b1       	in	r20, 0x0b	; 11
    4f28:	21 e0       	ldi	r18, 0x01	; 1
    4f2a:	30 e0       	ldi	r19, 0x00	; 0
    4f2c:	b9 01       	movw	r22, r18
    4f2e:	fc 01       	movw	r30, r24
    4f30:	01 80       	ldd	r0, Z+1	; 0x01
    4f32:	02 c0       	rjmp	.+4      	; 0x4f38 <_ZN6Output2onEv+0x86>
    4f34:	66 0f       	add	r22, r22
    4f36:	77 1f       	adc	r23, r23
    4f38:	0a 94       	dec	r0
    4f3a:	e2 f7       	brpl	.-8      	; 0x4f34 <_ZN6Output2onEv+0x82>
    4f3c:	cb 01       	movw	r24, r22
    4f3e:	84 2b       	or	r24, r20
    4f40:	8b b9       	out	0x0b, r24	; 11
    4f42:	08 95       	ret

00004f44 <_ZN6Output4isonEv>:
	}
}

uint8_t Output::ison(){
	uint8_t returnparam=0;
	switch (Port)
    4f44:	fc 01       	movw	r30, r24
    4f46:	20 81       	ld	r18, Z
    4f48:	22 34       	cpi	r18, 0x42	; 66
    4f4a:	b1 f0       	breq	.+44     	; 0x4f78 <_ZN6Output4isonEv+0x34>
    4f4c:	18 f4       	brcc	.+6      	; 0x4f54 <_ZN6Output4isonEv+0x10>
    4f4e:	21 34       	cpi	r18, 0x41	; 65
    4f50:	31 f0       	breq	.+12     	; 0x4f5e <_ZN6Output4isonEv+0x1a>
    4f52:	39 c0       	rjmp	.+114    	; 0x4fc6 <_ZN6Output4isonEv+0x82>
    4f54:	23 34       	cpi	r18, 0x43	; 67
    4f56:	e9 f0       	breq	.+58     	; 0x4f92 <_ZN6Output4isonEv+0x4e>
    4f58:	24 34       	cpi	r18, 0x44	; 68
    4f5a:	41 f1       	breq	.+80     	; 0x4fac <_ZN6Output4isonEv+0x68>
    4f5c:	34 c0       	rjmp	.+104    	; 0x4fc6 <_ZN6Output4isonEv+0x82>
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    4f5e:	22 b1       	in	r18, 0x02	; 2
    4f60:	30 e0       	ldi	r19, 0x00	; 0
    4f62:	a9 01       	movw	r20, r18
    4f64:	fc 01       	movw	r30, r24
    4f66:	01 80       	ldd	r0, Z+1	; 0x01
    4f68:	02 c0       	rjmp	.+4      	; 0x4f6e <_ZN6Output4isonEv+0x2a>
    4f6a:	55 95       	asr	r21
    4f6c:	47 95       	ror	r20
    4f6e:	0a 94       	dec	r0
    4f70:	e2 f7       	brpl	.-8      	; 0x4f6a <_ZN6Output4isonEv+0x26>
    4f72:	ca 01       	movw	r24, r20
    4f74:	81 70       	andi	r24, 0x01	; 1
    4f76:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    4f78:	25 b1       	in	r18, 0x05	; 5
    4f7a:	30 e0       	ldi	r19, 0x00	; 0
    4f7c:	a9 01       	movw	r20, r18
    4f7e:	fc 01       	movw	r30, r24
    4f80:	01 80       	ldd	r0, Z+1	; 0x01
    4f82:	02 c0       	rjmp	.+4      	; 0x4f88 <_ZN6Output4isonEv+0x44>
    4f84:	55 95       	asr	r21
    4f86:	47 95       	ror	r20
    4f88:	0a 94       	dec	r0
    4f8a:	e2 f7       	brpl	.-8      	; 0x4f84 <_ZN6Output4isonEv+0x40>
    4f8c:	ca 01       	movw	r24, r20
    4f8e:	81 70       	andi	r24, 0x01	; 1
    4f90:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    4f92:	28 b1       	in	r18, 0x08	; 8
    4f94:	30 e0       	ldi	r19, 0x00	; 0
    4f96:	a9 01       	movw	r20, r18
    4f98:	fc 01       	movw	r30, r24
    4f9a:	01 80       	ldd	r0, Z+1	; 0x01
    4f9c:	02 c0       	rjmp	.+4      	; 0x4fa2 <_ZN6Output4isonEv+0x5e>
    4f9e:	55 95       	asr	r21
    4fa0:	47 95       	ror	r20
    4fa2:	0a 94       	dec	r0
    4fa4:	e2 f7       	brpl	.-8      	; 0x4f9e <_ZN6Output4isonEv+0x5a>
    4fa6:	ca 01       	movw	r24, r20
    4fa8:	81 70       	andi	r24, 0x01	; 1
    4faa:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    4fac:	2b b1       	in	r18, 0x0b	; 11
    4fae:	30 e0       	ldi	r19, 0x00	; 0
    4fb0:	a9 01       	movw	r20, r18
    4fb2:	fc 01       	movw	r30, r24
    4fb4:	01 80       	ldd	r0, Z+1	; 0x01
    4fb6:	02 c0       	rjmp	.+4      	; 0x4fbc <_ZN6Output4isonEv+0x78>
    4fb8:	55 95       	asr	r21
    4fba:	47 95       	ror	r20
    4fbc:	0a 94       	dec	r0
    4fbe:	e2 f7       	brpl	.-8      	; 0x4fb8 <_ZN6Output4isonEv+0x74>
    4fc0:	ca 01       	movw	r24, r20
    4fc2:	81 70       	andi	r24, 0x01	; 1
    4fc4:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		default:
		returnparam = 2;
    4fc6:	82 e0       	ldi	r24, 0x02	; 2
			break;
	}
	return returnparam;
}
    4fc8:	08 95       	ret

00004fca <_ZN6Output3offEv>:

void Output::off(){
	switch (Port)
    4fca:	fc 01       	movw	r30, r24
    4fcc:	20 81       	ld	r18, Z
    4fce:	22 34       	cpi	r18, 0x42	; 66
    4fd0:	c9 f0       	breq	.+50     	; 0x5004 <_ZN6Output3offEv+0x3a>
    4fd2:	18 f4       	brcc	.+6      	; 0x4fda <_ZN6Output3offEv+0x10>
    4fd4:	21 34       	cpi	r18, 0x41	; 65
    4fd6:	31 f0       	breq	.+12     	; 0x4fe4 <_ZN6Output3offEv+0x1a>
    4fd8:	08 95       	ret
    4fda:	23 34       	cpi	r18, 0x43	; 67
    4fdc:	19 f1       	breq	.+70     	; 0x5024 <_ZN6Output3offEv+0x5a>
    4fde:	24 34       	cpi	r18, 0x44	; 68
    4fe0:	89 f1       	breq	.+98     	; 0x5044 <_ZN6Output3offEv+0x7a>
    4fe2:	08 95       	ret
	{
		case 'A':
			PORTA &= ~(1<<Pin);
    4fe4:	42 b1       	in	r20, 0x02	; 2
    4fe6:	21 e0       	ldi	r18, 0x01	; 1
    4fe8:	30 e0       	ldi	r19, 0x00	; 0
    4fea:	b9 01       	movw	r22, r18
    4fec:	fc 01       	movw	r30, r24
    4fee:	01 80       	ldd	r0, Z+1	; 0x01
    4ff0:	02 c0       	rjmp	.+4      	; 0x4ff6 <_ZN6Output3offEv+0x2c>
    4ff2:	66 0f       	add	r22, r22
    4ff4:	77 1f       	adc	r23, r23
    4ff6:	0a 94       	dec	r0
    4ff8:	e2 f7       	brpl	.-8      	; 0x4ff2 <_ZN6Output3offEv+0x28>
    4ffa:	cb 01       	movw	r24, r22
    4ffc:	80 95       	com	r24
    4ffe:	84 23       	and	r24, r20
    5000:	82 b9       	out	0x02, r24	; 2
			break;
    5002:	08 95       	ret
		case 'B':
			PORTB &= ~(1<<Pin);
    5004:	45 b1       	in	r20, 0x05	; 5
    5006:	21 e0       	ldi	r18, 0x01	; 1
    5008:	30 e0       	ldi	r19, 0x00	; 0
    500a:	b9 01       	movw	r22, r18
    500c:	fc 01       	movw	r30, r24
    500e:	01 80       	ldd	r0, Z+1	; 0x01
    5010:	02 c0       	rjmp	.+4      	; 0x5016 <_ZN6Output3offEv+0x4c>
    5012:	66 0f       	add	r22, r22
    5014:	77 1f       	adc	r23, r23
    5016:	0a 94       	dec	r0
    5018:	e2 f7       	brpl	.-8      	; 0x5012 <_ZN6Output3offEv+0x48>
    501a:	cb 01       	movw	r24, r22
    501c:	80 95       	com	r24
    501e:	84 23       	and	r24, r20
    5020:	85 b9       	out	0x05, r24	; 5
			break;
    5022:	08 95       	ret
		case 'C':
			PORTC &= ~(1<<Pin);
    5024:	48 b1       	in	r20, 0x08	; 8
    5026:	21 e0       	ldi	r18, 0x01	; 1
    5028:	30 e0       	ldi	r19, 0x00	; 0
    502a:	b9 01       	movw	r22, r18
    502c:	fc 01       	movw	r30, r24
    502e:	01 80       	ldd	r0, Z+1	; 0x01
    5030:	02 c0       	rjmp	.+4      	; 0x5036 <_ZN6Output3offEv+0x6c>
    5032:	66 0f       	add	r22, r22
    5034:	77 1f       	adc	r23, r23
    5036:	0a 94       	dec	r0
    5038:	e2 f7       	brpl	.-8      	; 0x5032 <_ZN6Output3offEv+0x68>
    503a:	cb 01       	movw	r24, r22
    503c:	80 95       	com	r24
    503e:	84 23       	and	r24, r20
    5040:	88 b9       	out	0x08, r24	; 8
			break;
    5042:	08 95       	ret
		case 'D':
			PORTD &= ~(1<<Pin);
    5044:	4b b1       	in	r20, 0x0b	; 11
    5046:	21 e0       	ldi	r18, 0x01	; 1
    5048:	30 e0       	ldi	r19, 0x00	; 0
    504a:	b9 01       	movw	r22, r18
    504c:	fc 01       	movw	r30, r24
    504e:	01 80       	ldd	r0, Z+1	; 0x01
    5050:	02 c0       	rjmp	.+4      	; 0x5056 <_ZN6Output3offEv+0x8c>
    5052:	66 0f       	add	r22, r22
    5054:	77 1f       	adc	r23, r23
    5056:	0a 94       	dec	r0
    5058:	e2 f7       	brpl	.-8      	; 0x5052 <_ZN6Output3offEv+0x88>
    505a:	cb 01       	movw	r24, r22
    505c:	80 95       	com	r24
    505e:	84 23       	and	r24, r20
    5060:	8b b9       	out	0x0b, r24	; 11
    5062:	08 95       	ret

00005064 <_ZN6Output6toggleEv>:
			break;
	}
}

void Output::toggle(){
	switch (Port)
    5064:	fc 01       	movw	r30, r24
    5066:	20 81       	ld	r18, Z
    5068:	22 34       	cpi	r18, 0x42	; 66
    506a:	c1 f0       	breq	.+48     	; 0x509c <_ZN6Output6toggleEv+0x38>
    506c:	18 f4       	brcc	.+6      	; 0x5074 <_ZN6Output6toggleEv+0x10>
    506e:	21 34       	cpi	r18, 0x41	; 65
    5070:	31 f0       	breq	.+12     	; 0x507e <_ZN6Output6toggleEv+0x1a>
    5072:	08 95       	ret
    5074:	23 34       	cpi	r18, 0x43	; 67
    5076:	09 f1       	breq	.+66     	; 0x50ba <_ZN6Output6toggleEv+0x56>
    5078:	24 34       	cpi	r18, 0x44	; 68
    507a:	71 f1       	breq	.+92     	; 0x50d8 <_ZN6Output6toggleEv+0x74>
    507c:	08 95       	ret
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    507e:	22 b1       	in	r18, 0x02	; 2
    5080:	30 e0       	ldi	r19, 0x00	; 0
    5082:	fc 01       	movw	r30, r24
    5084:	01 80       	ldd	r0, Z+1	; 0x01
    5086:	02 c0       	rjmp	.+4      	; 0x508c <_ZN6Output6toggleEv+0x28>
    5088:	35 95       	asr	r19
    508a:	27 95       	ror	r18
    508c:	0a 94       	dec	r0
    508e:	e2 f7       	brpl	.-8      	; 0x5088 <_ZN6Output6toggleEv+0x24>
    5090:	20 ff       	sbrs	r18, 0
    5092:	02 c0       	rjmp	.+4      	; 0x5098 <_ZN6Output6toggleEv+0x34>
			{
				off();
    5094:	9a cf       	rjmp	.-204    	; 0x4fca <_ZN6Output3offEv>
    5096:	08 95       	ret
			}
			else{
				on();
    5098:	0c cf       	rjmp	.-488    	; 0x4eb2 <_ZN6Output2onEv>
    509a:	08 95       	ret
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    509c:	25 b1       	in	r18, 0x05	; 5
    509e:	30 e0       	ldi	r19, 0x00	; 0
    50a0:	fc 01       	movw	r30, r24
    50a2:	01 80       	ldd	r0, Z+1	; 0x01
    50a4:	02 c0       	rjmp	.+4      	; 0x50aa <_ZN6Output6toggleEv+0x46>
    50a6:	35 95       	asr	r19
    50a8:	27 95       	ror	r18
    50aa:	0a 94       	dec	r0
    50ac:	e2 f7       	brpl	.-8      	; 0x50a6 <_ZN6Output6toggleEv+0x42>
    50ae:	20 ff       	sbrs	r18, 0
    50b0:	02 c0       	rjmp	.+4      	; 0x50b6 <_ZN6Output6toggleEv+0x52>
			{
				off();
    50b2:	8b cf       	rjmp	.-234    	; 0x4fca <_ZN6Output3offEv>
    50b4:	08 95       	ret
			}
			else{
				on();
    50b6:	fd ce       	rjmp	.-518    	; 0x4eb2 <_ZN6Output2onEv>
    50b8:	08 95       	ret
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    50ba:	28 b1       	in	r18, 0x08	; 8
    50bc:	30 e0       	ldi	r19, 0x00	; 0
    50be:	fc 01       	movw	r30, r24
    50c0:	01 80       	ldd	r0, Z+1	; 0x01
    50c2:	02 c0       	rjmp	.+4      	; 0x50c8 <_ZN6Output6toggleEv+0x64>
    50c4:	35 95       	asr	r19
    50c6:	27 95       	ror	r18
    50c8:	0a 94       	dec	r0
    50ca:	e2 f7       	brpl	.-8      	; 0x50c4 <_ZN6Output6toggleEv+0x60>
    50cc:	20 ff       	sbrs	r18, 0
    50ce:	02 c0       	rjmp	.+4      	; 0x50d4 <_ZN6Output6toggleEv+0x70>
			{
				off();
    50d0:	7c cf       	rjmp	.-264    	; 0x4fca <_ZN6Output3offEv>
    50d2:	08 95       	ret
			}
			else{
				on();
    50d4:	ee ce       	rjmp	.-548    	; 0x4eb2 <_ZN6Output2onEv>
    50d6:	08 95       	ret
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    50d8:	2b b1       	in	r18, 0x0b	; 11
    50da:	30 e0       	ldi	r19, 0x00	; 0
    50dc:	fc 01       	movw	r30, r24
    50de:	01 80       	ldd	r0, Z+1	; 0x01
    50e0:	02 c0       	rjmp	.+4      	; 0x50e6 <_ZN6Output6toggleEv+0x82>
    50e2:	35 95       	asr	r19
    50e4:	27 95       	ror	r18
    50e6:	0a 94       	dec	r0
    50e8:	e2 f7       	brpl	.-8      	; 0x50e2 <_ZN6Output6toggleEv+0x7e>
    50ea:	20 ff       	sbrs	r18, 0
    50ec:	02 c0       	rjmp	.+4      	; 0x50f2 <_ZN6Output6toggleEv+0x8e>
			{
				off();
    50ee:	6d cf       	rjmp	.-294    	; 0x4fca <_ZN6Output3offEv>
    50f0:	08 95       	ret
			}
			else{
				on();
    50f2:	df ce       	rjmp	.-578    	; 0x4eb2 <_ZN6Output2onEv>
    50f4:	08 95       	ret

000050f6 <_ZN8PressureD1Ev>:
	Pressure0=1;
	LPS25H_initialize();
} //Pressure

// default destructor
Pressure::~Pressure()
    50f6:	0d 96       	adiw	r24, 0x0d	; 13
    50f8:	2f ca       	rjmp	.-2978   	; 0x4558 <_ZN3I2CD1Ev>
    50fa:	08 95       	ret

000050fc <_ZN8Pressure14LPS25H_commandEhh>:
{
} //~Pressure

void Pressure::LPS25H_command(uint8_t add, uint8_t command){
    50fc:	0f 93       	push	r16
    50fe:	1f 93       	push	r17
    5100:	cf 93       	push	r28
    5102:	df 93       	push	r29
    5104:	06 2f       	mov	r16, r22
    5106:	14 2f       	mov	r17, r20
	i2c.twi_start();
    5108:	ec 01       	movw	r28, r24
    510a:	2d 96       	adiw	r28, 0x0d	; 13
    510c:	ce 01       	movw	r24, r28
    510e:	25 da       	rcall	.-2998   	; 0x455a <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    5110:	6a eb       	ldi	r22, 0xBA	; 186
    5112:	ce 01       	movw	r24, r28
    5114:	2a da       	rcall	.-2988   	; 0x456a <_ZN3I2C9twi_writeEh>
	i2c.twi_write(add);
    5116:	60 2f       	mov	r22, r16
    5118:	ce 01       	movw	r24, r28
    511a:	27 da       	rcall	.-2994   	; 0x456a <_ZN3I2C9twi_writeEh>
	i2c.twi_write(command);
    511c:	61 2f       	mov	r22, r17
    511e:	ce 01       	movw	r24, r28
    5120:	24 da       	rcall	.-3000   	; 0x456a <_ZN3I2C9twi_writeEh>
	i2c.twi_stop();
    5122:	ce 01       	movw	r24, r28
    5124:	1e da       	rcall	.-3012   	; 0x4562 <_ZN3I2C8twi_stopEv>
}
    5126:	df 91       	pop	r29
    5128:	cf 91       	pop	r28
    512a:	1f 91       	pop	r17
    512c:	0f 91       	pop	r16
    512e:	08 95       	ret

00005130 <_ZN8Pressure17LPS25H_initializeEv>:

void Pressure::LPS25H_initialize(){
    5130:	cf 93       	push	r28
    5132:	df 93       	push	r29
    5134:	ec 01       	movw	r28, r24
	uint8_t temp=0;
	//internal averages Pressure and Temperature (both 8)
	temp &= ~((1<<AVGT1) | (1<<AVGT0) | (1<<AVGP1) | (1<<AVGP0)); 
	LPS25H_command(RES_CONF,temp);
    5136:	40 e0       	ldi	r20, 0x00	; 0
    5138:	60 e1       	ldi	r22, 0x10	; 16
    513a:	e0 df       	rcall	.-64     	; 0x50fc <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//Enable device and set a single shot as well as Lock while reading
	temp |= (1<<PD) | (1<<BDU) | (1<<ODR1);
	LPS25H_command(CTRL_REG1,temp);
    513c:	44 ea       	ldi	r20, 0xA4	; 164
    513e:	60 e2       	ldi	r22, 0x20	; 32
    5140:	ce 01       	movw	r24, r28
    5142:	dc df       	rcall	.-72     	; 0x50fc <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//FIFO on, no watermark no reset, reboot memory content, FIFO MEAN Mode
	temp |= (1<<BOOT) | (1<<FIFO_EN) | (1<<FIFO_MEAN_DEC);
	LPS25H_command(CTRL_REG2,temp);
    5144:	40 ed       	ldi	r20, 0xD0	; 208
    5146:	61 e2       	ldi	r22, 0x21	; 33
    5148:	ce 01       	movw	r24, r28
    514a:	d8 df       	rcall	.-80     	; 0x50fc <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//FIFO Controll register for MEAN Mode und 8 moving averages
	temp|=(1<<F_MODE2) | (1<<F_MODE1) | (1<<WTM_POINT0) | (1<<WTM_POINT1) | (1<<WTM_POINT2);
	LPS25H_command(FIFO_CTRL,temp);
    514c:	47 ec       	ldi	r20, 0xC7	; 199
    514e:	6e e2       	ldi	r22, 0x2E	; 46
    5150:	ce 01       	movw	r24, r28
    5152:	d4 df       	rcall	.-88     	; 0x50fc <_ZN8Pressure14LPS25H_commandEhh>
	//CTRL_REG4 not set
	//INTERRUPT_CFG not set
	//no threshold used
	//no Pressure offset used
	
}
    5154:	df 91       	pop	r29
    5156:	cf 91       	pop	r28
    5158:	08 95       	ret

0000515a <_ZN8PressureC1Ev>:


#include "Pressure.h"

// default constructor
Pressure::Pressure()
    515a:	cf 93       	push	r28
    515c:	df 93       	push	r29
    515e:	ec 01       	movw	r28, r24
    5160:	0d 96       	adiw	r24, 0x0d	; 13
    5162:	f6 d9       	rcall	.-3092   	; 0x4550 <_ZN3I2CC1Ev>
{
	Press = 0;
    5164:	18 82       	st	Y, r1
    5166:	19 82       	std	Y+1, r1	; 0x01
    5168:	1a 82       	std	Y+2, r1	; 0x02
    516a:	1b 82       	std	Y+3, r1	; 0x03
	Tempera = 0;
    516c:	1c 82       	std	Y+4, r1	; 0x04
    516e:	1d 82       	std	Y+5, r1	; 0x05
    5170:	1e 82       	std	Y+6, r1	; 0x06
    5172:	1f 82       	std	Y+7, r1	; 0x07
	Tempoffset = -4;	//Aus Erfahrung
    5174:	8c ef       	ldi	r24, 0xFC	; 252
    5176:	88 87       	std	Y+8, r24	; 0x08
	Pressure0=1;
    5178:	40 e0       	ldi	r20, 0x00	; 0
    517a:	50 e0       	ldi	r21, 0x00	; 0
    517c:	60 e8       	ldi	r22, 0x80	; 128
    517e:	7f e3       	ldi	r23, 0x3F	; 63
    5180:	49 87       	std	Y+9, r20	; 0x09
    5182:	5a 87       	std	Y+10, r21	; 0x0a
    5184:	6b 87       	std	Y+11, r22	; 0x0b
    5186:	7c 87       	std	Y+12, r23	; 0x0c
	LPS25H_initialize();
    5188:	ce 01       	movw	r24, r28
    518a:	d2 df       	rcall	.-92     	; 0x5130 <_ZN8Pressure17LPS25H_initializeEv>
} //Pressure
    518c:	df 91       	pop	r29
    518e:	cf 91       	pop	r28
    5190:	08 95       	ret

00005192 <_ZN8Pressure18READ_Pressure_onceEv>:
	//no threshold used
	//no Pressure offset used
	
}

void Pressure::READ_Pressure_once(){
    5192:	af 92       	push	r10
    5194:	bf 92       	push	r11
    5196:	cf 92       	push	r12
    5198:	df 92       	push	r13
    519a:	ef 92       	push	r14
    519c:	ff 92       	push	r15
    519e:	1f 93       	push	r17
    51a0:	cf 93       	push	r28
    51a2:	df 93       	push	r29
    51a4:	00 d0       	rcall	.+0      	; 0x51a6 <_ZN8Pressure18READ_Pressure_onceEv+0x14>
    51a6:	1f 92       	push	r1
    51a8:	cd b7       	in	r28, 0x3d	; 61
    51aa:	de b7       	in	r29, 0x3e	; 62
    51ac:	5c 01       	movw	r10, r24
	uint8_t Wertedruck[3];
	cli();
    51ae:	f8 94       	cli
	i2c.twi_start();
    51b0:	7c 01       	movw	r14, r24
    51b2:	8d e0       	ldi	r24, 0x0D	; 13
    51b4:	e8 0e       	add	r14, r24
    51b6:	f1 1c       	adc	r15, r1
    51b8:	c7 01       	movw	r24, r14
    51ba:	cf d9       	rcall	.-3170   	; 0x455a <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    51bc:	6a eb       	ldi	r22, 0xBA	; 186
    51be:	c7 01       	movw	r24, r14
    51c0:	d4 d9       	rcall	.-3160   	; 0x456a <_ZN3I2C9twi_writeEh>
	i2c.twi_write(PRESS_OUT_XL|(1<<autoincrement));
    51c2:	68 ea       	ldi	r22, 0xA8	; 168
    51c4:	c7 01       	movw	r24, r14
    51c6:	d1 d9       	rcall	.-3166   	; 0x456a <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    51c8:	c7 01       	movw	r24, r14
    51ca:	c7 d9       	rcall	.-3186   	; 0x455a <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_READ);
    51cc:	6b eb       	ldi	r22, 0xBB	; 187
    51ce:	c7 01       	movw	r24, r14
    51d0:	cc d9       	rcall	.-3176   	; 0x456a <_ZN3I2C9twi_writeEh>
    51d2:	fe 01       	movw	r30, r28
    51d4:	31 96       	adiw	r30, 0x01	; 1
    51d6:	6f 01       	movw	r12, r30
	for (uint8_t i=0;i<3;i++)
    51d8:	10 e0       	ldi	r17, 0x00	; 0
	{
		if (i<2)
    51da:	12 30       	cpi	r17, 0x02	; 2
    51dc:	30 f4       	brcc	.+12     	; 0x51ea <_ZN8Pressure18READ_Pressure_onceEv+0x58>
		{
			Wertedruck[i] = i2c.twi_read(1);
    51de:	61 e0       	ldi	r22, 0x01	; 1
    51e0:	c7 01       	movw	r24, r14
    51e2:	d3 d9       	rcall	.-3162   	; 0x458a <_ZN3I2C8twi_readEh>
    51e4:	f6 01       	movw	r30, r12
    51e6:	80 83       	st	Z, r24
    51e8:	05 c0       	rjmp	.+10     	; 0x51f4 <_ZN8Pressure18READ_Pressure_onceEv+0x62>
		}
		else{
			Wertedruck[i] = i2c.twi_read(0);
    51ea:	60 e0       	ldi	r22, 0x00	; 0
    51ec:	c7 01       	movw	r24, r14
    51ee:	cd d9       	rcall	.-3174   	; 0x458a <_ZN3I2C8twi_readEh>
    51f0:	f6 01       	movw	r30, r12
    51f2:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_Write);
	i2c.twi_write(PRESS_OUT_XL|(1<<autoincrement));
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_READ);
	for (uint8_t i=0;i<3;i++)
    51f4:	1f 5f       	subi	r17, 0xFF	; 255
    51f6:	ff ef       	ldi	r31, 0xFF	; 255
    51f8:	cf 1a       	sub	r12, r31
    51fa:	df 0a       	sbc	r13, r31
    51fc:	13 30       	cpi	r17, 0x03	; 3
    51fe:	69 f7       	brne	.-38     	; 0x51da <_ZN8Pressure18READ_Pressure_onceEv+0x48>
		}
		else{
			Wertedruck[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    5200:	c7 01       	movw	r24, r14
    5202:	af d9       	rcall	.-3234   	; 0x4562 <_ZN3I2C8twi_stopEv>
	Press = ((double)Wertedruck[2]*65536);
    5204:	6b 81       	ldd	r22, Y+3	; 0x03
    5206:	70 e0       	ldi	r23, 0x00	; 0
    5208:	80 e0       	ldi	r24, 0x00	; 0
    520a:	90 e0       	ldi	r25, 0x00	; 0
    520c:	a2 d3       	rcall	.+1860   	; 0x5952 <__floatunsisf>
    520e:	20 e0       	ldi	r18, 0x00	; 0
    5210:	30 e0       	ldi	r19, 0x00	; 0
    5212:	40 e8       	ldi	r20, 0x80	; 128
    5214:	57 e4       	ldi	r21, 0x47	; 71
    5216:	fd d4       	rcall	.+2554   	; 0x5c12 <__mulsf3>
    5218:	6b 01       	movw	r12, r22
    521a:	7c 01       	movw	r14, r24
	Press += ((double)Wertedruck[1]*256);
    521c:	6a 81       	ldd	r22, Y+2	; 0x02
    521e:	70 e0       	ldi	r23, 0x00	; 0
    5220:	80 e0       	ldi	r24, 0x00	; 0
    5222:	90 e0       	ldi	r25, 0x00	; 0
    5224:	96 d3       	rcall	.+1836   	; 0x5952 <__floatunsisf>
    5226:	20 e0       	ldi	r18, 0x00	; 0
    5228:	30 e0       	ldi	r19, 0x00	; 0
    522a:	40 e8       	ldi	r20, 0x80	; 128
    522c:	53 e4       	ldi	r21, 0x43	; 67
    522e:	f1 d4       	rcall	.+2530   	; 0x5c12 <__mulsf3>
    5230:	9b 01       	movw	r18, r22
    5232:	ac 01       	movw	r20, r24
    5234:	c7 01       	movw	r24, r14
    5236:	b6 01       	movw	r22, r12
    5238:	26 d2       	rcall	.+1100   	; 0x5686 <__addsf3>
    523a:	6b 01       	movw	r12, r22
    523c:	7c 01       	movw	r14, r24
	Press += (double)Wertedruck[0];
    523e:	69 81       	ldd	r22, Y+1	; 0x01
    5240:	70 e0       	ldi	r23, 0x00	; 0
    5242:	80 e0       	ldi	r24, 0x00	; 0
    5244:	90 e0       	ldi	r25, 0x00	; 0
    5246:	85 d3       	rcall	.+1802   	; 0x5952 <__floatunsisf>
    5248:	9b 01       	movw	r18, r22
    524a:	ac 01       	movw	r20, r24
    524c:	c7 01       	movw	r24, r14
    524e:	b6 01       	movw	r22, r12
    5250:	1a d2       	rcall	.+1076   	; 0x5686 <__addsf3>
	//Press = (Wertedruck[0] + (Wertedruck[1]*256) + (Wertedruck[2]*65536));
	Press/=4096.0;
    5252:	20 e0       	ldi	r18, 0x00	; 0
    5254:	30 e0       	ldi	r19, 0x00	; 0
    5256:	40 e8       	ldi	r20, 0x80	; 128
    5258:	59 e3       	ldi	r21, 0x39	; 57
    525a:	db d4       	rcall	.+2486   	; 0x5c12 <__mulsf3>
    525c:	f5 01       	movw	r30, r10
    525e:	60 83       	st	Z, r22
    5260:	71 83       	std	Z+1, r23	; 0x01
    5262:	82 83       	std	Z+2, r24	; 0x02
    5264:	93 83       	std	Z+3, r25	; 0x03
	sei();
    5266:	78 94       	sei
}
    5268:	0f 90       	pop	r0
    526a:	0f 90       	pop	r0
    526c:	0f 90       	pop	r0
    526e:	df 91       	pop	r29
    5270:	cf 91       	pop	r28
    5272:	1f 91       	pop	r17
    5274:	ff 90       	pop	r15
    5276:	ef 90       	pop	r14
    5278:	df 90       	pop	r13
    527a:	cf 90       	pop	r12
    527c:	bf 90       	pop	r11
    527e:	af 90       	pop	r10
    5280:	08 95       	ret

00005282 <_ZN8Pressure16READ_TemperatureEv>:

void Pressure::READ_Temperature(){
    5282:	cf 92       	push	r12
    5284:	df 92       	push	r13
    5286:	ef 92       	push	r14
    5288:	ff 92       	push	r15
    528a:	0f 93       	push	r16
    528c:	1f 93       	push	r17
    528e:	cf 93       	push	r28
    5290:	df 93       	push	r29
    5292:	00 d0       	rcall	.+0      	; 0x5294 <_ZN8Pressure16READ_TemperatureEv+0x12>
    5294:	cd b7       	in	r28, 0x3d	; 61
    5296:	de b7       	in	r29, 0x3e	; 62
    5298:	8c 01       	movw	r16, r24
	cli();
    529a:	f8 94       	cli
	uint8_t Wert[2];
	i2c.twi_start();
    529c:	7c 01       	movw	r14, r24
    529e:	8d e0       	ldi	r24, 0x0D	; 13
    52a0:	e8 0e       	add	r14, r24
    52a2:	f1 1c       	adc	r15, r1
    52a4:	c7 01       	movw	r24, r14
    52a6:	59 d9       	rcall	.-3406   	; 0x455a <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    52a8:	6a eb       	ldi	r22, 0xBA	; 186
    52aa:	c7 01       	movw	r24, r14
    52ac:	5e d9       	rcall	.-3396   	; 0x456a <_ZN3I2C9twi_writeEh>
	i2c.twi_write(TEMP_OUT_L|(1<<autoincrement));
    52ae:	6b ea       	ldi	r22, 0xAB	; 171
    52b0:	c7 01       	movw	r24, r14
    52b2:	5b d9       	rcall	.-3402   	; 0x456a <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    52b4:	c7 01       	movw	r24, r14
    52b6:	51 d9       	rcall	.-3422   	; 0x455a <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_READ);
    52b8:	6b eb       	ldi	r22, 0xBB	; 187
    52ba:	c7 01       	movw	r24, r14
    52bc:	56 d9       	rcall	.-3412   	; 0x456a <_ZN3I2C9twi_writeEh>
    52be:	cc 24       	eor	r12, r12
    52c0:	c3 94       	inc	r12
    52c2:	d1 2c       	mov	r13, r1
    52c4:	02 c0       	rjmp	.+4      	; 0x52ca <_ZN8Pressure16READ_TemperatureEv+0x48>
    52c6:	d3 94       	inc	r13
    52c8:	c3 94       	inc	r12
	for (uint8_t i=0;i<2;i++)
	{
		if (i<1)
    52ca:	d1 10       	cpse	r13, r1
    52cc:	05 c0       	rjmp	.+10     	; 0x52d8 <_ZN8Pressure16READ_TemperatureEv+0x56>
		{
			Wert[i] = i2c.twi_read(1);
    52ce:	61 e0       	ldi	r22, 0x01	; 1
    52d0:	c7 01       	movw	r24, r14
    52d2:	5b d9       	rcall	.-3402   	; 0x458a <_ZN3I2C8twi_readEh>
    52d4:	89 83       	std	Y+1, r24	; 0x01
    52d6:	f7 cf       	rjmp	.-18     	; 0x52c6 <_ZN8Pressure16READ_TemperatureEv+0x44>
		}
		else{
			Wert[i] = i2c.twi_read(0);
    52d8:	60 e0       	ldi	r22, 0x00	; 0
    52da:	c7 01       	movw	r24, r14
    52dc:	56 d9       	rcall	.-3412   	; 0x458a <_ZN3I2C8twi_readEh>
    52de:	e1 e0       	ldi	r30, 0x01	; 1
    52e0:	f0 e0       	ldi	r31, 0x00	; 0
    52e2:	ec 0f       	add	r30, r28
    52e4:	fd 1f       	adc	r31, r29
    52e6:	ed 0d       	add	r30, r13
    52e8:	f1 1d       	adc	r31, r1
    52ea:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_Write);
	i2c.twi_write(TEMP_OUT_L|(1<<autoincrement));
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_READ);
	for (uint8_t i=0;i<2;i++)
    52ec:	e1 e0       	ldi	r30, 0x01	; 1
    52ee:	ec 15       	cp	r30, r12
    52f0:	50 f7       	brcc	.-44     	; 0x52c6 <_ZN8Pressure16READ_TemperatureEv+0x44>
		}
		else{
			Wert[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    52f2:	c7 01       	movw	r24, r14
    52f4:	36 d9       	rcall	.-3476   	; 0x4562 <_ZN3I2C8twi_stopEv>
	Tempera = ((int16_t)(Wert[0]+(Wert[1]<<8)))/480.0;
    52f6:	89 81       	ldd	r24, Y+1	; 0x01
    52f8:	6a 81       	ldd	r22, Y+2	; 0x02
    52fa:	70 e0       	ldi	r23, 0x00	; 0
    52fc:	76 2f       	mov	r23, r22
    52fe:	66 27       	eor	r22, r22
    5300:	68 0f       	add	r22, r24
    5302:	71 1d       	adc	r23, r1
    5304:	88 27       	eor	r24, r24
    5306:	77 fd       	sbrc	r23, 7
    5308:	80 95       	com	r24
    530a:	98 2f       	mov	r25, r24
    530c:	24 d3       	rcall	.+1608   	; 0x5956 <__floatsisf>
    530e:	20 e0       	ldi	r18, 0x00	; 0
    5310:	30 e0       	ldi	r19, 0x00	; 0
    5312:	40 ef       	ldi	r20, 0xF0	; 240
    5314:	53 e4       	ldi	r21, 0x43	; 67
    5316:	84 d2       	rcall	.+1288   	; 0x5820 <__divsf3>
    5318:	6b 01       	movw	r12, r22
    531a:	7c 01       	movw	r14, r24
	Tempera+=42.5+Tempoffset;
    531c:	f8 01       	movw	r30, r16
    531e:	60 85       	ldd	r22, Z+8	; 0x08
    5320:	77 27       	eor	r23, r23
    5322:	67 fd       	sbrc	r22, 7
    5324:	70 95       	com	r23
    5326:	87 2f       	mov	r24, r23
    5328:	97 2f       	mov	r25, r23
    532a:	15 d3       	rcall	.+1578   	; 0x5956 <__floatsisf>
    532c:	20 e0       	ldi	r18, 0x00	; 0
    532e:	30 e0       	ldi	r19, 0x00	; 0
    5330:	4a e2       	ldi	r20, 0x2A	; 42
    5332:	52 e4       	ldi	r21, 0x42	; 66
    5334:	a8 d1       	rcall	.+848    	; 0x5686 <__addsf3>
    5336:	9b 01       	movw	r18, r22
    5338:	ac 01       	movw	r20, r24
    533a:	c7 01       	movw	r24, r14
    533c:	b6 01       	movw	r22, r12
    533e:	a3 d1       	rcall	.+838    	; 0x5686 <__addsf3>
    5340:	f8 01       	movw	r30, r16
    5342:	64 83       	std	Z+4, r22	; 0x04
    5344:	75 83       	std	Z+5, r23	; 0x05
    5346:	86 83       	std	Z+6, r24	; 0x06
    5348:	97 83       	std	Z+7, r25	; 0x07
	sei();
    534a:	78 94       	sei
}
    534c:	0f 90       	pop	r0
    534e:	0f 90       	pop	r0
    5350:	df 91       	pop	r29
    5352:	cf 91       	pop	r28
    5354:	1f 91       	pop	r17
    5356:	0f 91       	pop	r16
    5358:	ff 90       	pop	r15
    535a:	ef 90       	pop	r14
    535c:	df 90       	pop	r13
    535e:	cf 90       	pop	r12
    5360:	08 95       	ret

00005362 <_ZN8Pressure8altitudeEd>:

double Pressure::altitude(double Pressurevalue){
    5362:	8f 92       	push	r8
    5364:	9f 92       	push	r9
    5366:	af 92       	push	r10
    5368:	bf 92       	push	r11
    536a:	cf 92       	push	r12
    536c:	df 92       	push	r13
    536e:	ef 92       	push	r14
    5370:	ff 92       	push	r15
	return (Pressure0*100*log(Pressure0/Pressurevalue)/(1.2041*9.81));
    5372:	fc 01       	movw	r30, r24
    5374:	c1 84       	ldd	r12, Z+9	; 0x09
    5376:	d2 84       	ldd	r13, Z+10	; 0x0a
    5378:	e3 84       	ldd	r14, Z+11	; 0x0b
    537a:	f4 84       	ldd	r15, Z+12	; 0x0c
    537c:	9a 01       	movw	r18, r20
    537e:	ab 01       	movw	r20, r22
    5380:	c7 01       	movw	r24, r14
    5382:	b6 01       	movw	r22, r12
    5384:	4d d2       	rcall	.+1178   	; 0x5820 <__divsf3>
    5386:	05 d4       	rcall	.+2058   	; 0x5b92 <log>
    5388:	4b 01       	movw	r8, r22
    538a:	5c 01       	movw	r10, r24
    538c:	20 e0       	ldi	r18, 0x00	; 0
    538e:	30 e0       	ldi	r19, 0x00	; 0
    5390:	48 ec       	ldi	r20, 0xC8	; 200
    5392:	52 e4       	ldi	r21, 0x42	; 66
    5394:	c7 01       	movw	r24, r14
    5396:	b6 01       	movw	r22, r12
    5398:	3c d4       	rcall	.+2168   	; 0x5c12 <__mulsf3>
    539a:	a5 01       	movw	r20, r10
    539c:	94 01       	movw	r18, r8
    539e:	39 d4       	rcall	.+2162   	; 0x5c12 <__mulsf3>
    53a0:	2c ed       	ldi	r18, 0xDC	; 220
    53a2:	3e ef       	ldi	r19, 0xFE	; 254
    53a4:	4c e3       	ldi	r20, 0x3C	; 60
    53a6:	51 e4       	ldi	r21, 0x41	; 65
    53a8:	3b d2       	rcall	.+1142   	; 0x5820 <__divsf3>
}
    53aa:	ff 90       	pop	r15
    53ac:	ef 90       	pop	r14
    53ae:	df 90       	pop	r13
    53b0:	cf 90       	pop	r12
    53b2:	bf 90       	pop	r11
    53b4:	af 90       	pop	r10
    53b6:	9f 90       	pop	r9
    53b8:	8f 90       	pop	r8
    53ba:	08 95       	ret

000053bc <_ZN8Pressure13set_Pressure0Ed>:
void Pressure::set_Pressure0(double Pressurevalue){
	Pressure0=Pressurevalue;
    53bc:	fc 01       	movw	r30, r24
    53be:	41 87       	std	Z+9, r20	; 0x09
    53c0:	52 87       	std	Z+10, r21	; 0x0a
    53c2:	63 87       	std	Z+11, r22	; 0x0b
    53c4:	74 87       	std	Z+12, r23	; 0x0c
    53c6:	08 95       	ret

000053c8 <_ZN3RTCD1Ev>:
		}
		Wecker();
	}
	ausgabezeitneu();
	return 0;
}
    53c8:	08 95       	ret

000053ca <_ZN3RTC6WeckerEv>:
    53ca:	fc 01       	movw	r30, r24
    53cc:	80 8d       	ldd	r24, Z+24	; 0x18
    53ce:	83 ff       	sbrs	r24, 3
    53d0:	0c c0       	rjmp	.+24     	; 0x53ea <_ZN3RTC6WeckerEv+0x20>
    53d2:	84 fd       	sbrc	r24, 4
    53d4:	0a c0       	rjmp	.+20     	; 0x53ea <_ZN3RTC6WeckerEv+0x20>
    53d6:	22 8d       	ldd	r18, Z+26	; 0x1a
    53d8:	90 89       	ldd	r25, Z+16	; 0x10
    53da:	29 13       	cpse	r18, r25
    53dc:	06 c0       	rjmp	.+12     	; 0x53ea <_ZN3RTC6WeckerEv+0x20>
    53de:	21 8d       	ldd	r18, Z+25	; 0x19
    53e0:	91 89       	ldd	r25, Z+17	; 0x11
    53e2:	29 13       	cpse	r18, r25
    53e4:	02 c0       	rjmp	.+4      	; 0x53ea <_ZN3RTC6WeckerEv+0x20>
    53e6:	80 61       	ori	r24, 0x10	; 16
    53e8:	80 8f       	std	Z+24, r24	; 0x18
    53ea:	08 95       	ret

000053ec <_ZN3RTC14ausgabezeitneuEv>:
    53ec:	fc 01       	movw	r30, r24
    53ee:	90 89       	ldd	r25, Z+16	; 0x10
    53f0:	8d ec       	ldi	r24, 0xCD	; 205
    53f2:	98 9f       	mul	r25, r24
    53f4:	21 2d       	mov	r18, r1
    53f6:	11 24       	eor	r1, r1
    53f8:	26 95       	lsr	r18
    53fa:	26 95       	lsr	r18
    53fc:	26 95       	lsr	r18
    53fe:	30 e3       	ldi	r19, 0x30	; 48
    5400:	32 0f       	add	r19, r18
    5402:	30 83       	st	Z, r19
    5404:	22 0f       	add	r18, r18
    5406:	32 2f       	mov	r19, r18
    5408:	33 0f       	add	r19, r19
    540a:	33 0f       	add	r19, r19
    540c:	23 0f       	add	r18, r19
    540e:	92 1b       	sub	r25, r18
    5410:	90 5d       	subi	r25, 0xD0	; 208
    5412:	91 83       	std	Z+1, r25	; 0x01
    5414:	91 89       	ldd	r25, Z+17	; 0x11
    5416:	98 9f       	mul	r25, r24
    5418:	21 2d       	mov	r18, r1
    541a:	11 24       	eor	r1, r1
    541c:	26 95       	lsr	r18
    541e:	26 95       	lsr	r18
    5420:	26 95       	lsr	r18
    5422:	30 e3       	ldi	r19, 0x30	; 48
    5424:	32 0f       	add	r19, r18
    5426:	33 83       	std	Z+3, r19	; 0x03
    5428:	22 0f       	add	r18, r18
    542a:	32 2f       	mov	r19, r18
    542c:	33 0f       	add	r19, r19
    542e:	33 0f       	add	r19, r19
    5430:	23 0f       	add	r18, r19
    5432:	92 1b       	sub	r25, r18
    5434:	90 5d       	subi	r25, 0xD0	; 208
    5436:	94 83       	std	Z+4, r25	; 0x04
    5438:	92 89       	ldd	r25, Z+18	; 0x12
    543a:	98 9f       	mul	r25, r24
    543c:	81 2d       	mov	r24, r1
    543e:	11 24       	eor	r1, r1
    5440:	86 95       	lsr	r24
    5442:	86 95       	lsr	r24
    5444:	86 95       	lsr	r24
    5446:	20 e3       	ldi	r18, 0x30	; 48
    5448:	28 0f       	add	r18, r24
    544a:	26 83       	std	Z+6, r18	; 0x06
    544c:	88 0f       	add	r24, r24
    544e:	28 2f       	mov	r18, r24
    5450:	22 0f       	add	r18, r18
    5452:	22 0f       	add	r18, r18
    5454:	82 0f       	add	r24, r18
    5456:	98 1b       	sub	r25, r24
    5458:	90 5d       	subi	r25, 0xD0	; 208
    545a:	97 83       	std	Z+7, r25	; 0x07
    545c:	08 95       	ret

0000545e <_ZN3RTC15ausgabedatumneuEv>:
    545e:	fc 01       	movw	r30, r24
    5460:	94 89       	ldd	r25, Z+20	; 0x14
    5462:	8d ec       	ldi	r24, 0xCD	; 205
    5464:	98 9f       	mul	r25, r24
    5466:	21 2d       	mov	r18, r1
    5468:	11 24       	eor	r1, r1
    546a:	26 95       	lsr	r18
    546c:	26 95       	lsr	r18
    546e:	26 95       	lsr	r18
    5470:	30 e3       	ldi	r19, 0x30	; 48
    5472:	32 0f       	add	r19, r18
    5474:	30 87       	std	Z+8, r19	; 0x08
    5476:	22 0f       	add	r18, r18
    5478:	32 2f       	mov	r19, r18
    547a:	33 0f       	add	r19, r19
    547c:	33 0f       	add	r19, r19
    547e:	23 0f       	add	r18, r19
    5480:	92 1b       	sub	r25, r18
    5482:	90 5d       	subi	r25, 0xD0	; 208
    5484:	91 87       	std	Z+9, r25	; 0x09
    5486:	96 89       	ldd	r25, Z+22	; 0x16
    5488:	98 9f       	mul	r25, r24
    548a:	21 2d       	mov	r18, r1
    548c:	11 24       	eor	r1, r1
    548e:	26 95       	lsr	r18
    5490:	26 95       	lsr	r18
    5492:	26 95       	lsr	r18
    5494:	30 e3       	ldi	r19, 0x30	; 48
    5496:	32 0f       	add	r19, r18
    5498:	33 87       	std	Z+11, r19	; 0x0b
    549a:	22 0f       	add	r18, r18
    549c:	32 2f       	mov	r19, r18
    549e:	33 0f       	add	r19, r19
    54a0:	33 0f       	add	r19, r19
    54a2:	23 0f       	add	r18, r19
    54a4:	92 1b       	sub	r25, r18
    54a6:	90 5d       	subi	r25, 0xD0	; 208
    54a8:	94 87       	std	Z+12, r25	; 0x0c
    54aa:	97 89       	ldd	r25, Z+23	; 0x17
    54ac:	98 9f       	mul	r25, r24
    54ae:	81 2d       	mov	r24, r1
    54b0:	11 24       	eor	r1, r1
    54b2:	86 95       	lsr	r24
    54b4:	86 95       	lsr	r24
    54b6:	86 95       	lsr	r24
    54b8:	20 e3       	ldi	r18, 0x30	; 48
    54ba:	28 0f       	add	r18, r24
    54bc:	26 87       	std	Z+14, r18	; 0x0e
    54be:	88 0f       	add	r24, r24
    54c0:	28 2f       	mov	r18, r24
    54c2:	22 0f       	add	r18, r18
    54c4:	22 0f       	add	r18, r18
    54c6:	82 0f       	add	r24, r18
    54c8:	98 1b       	sub	r25, r24
    54ca:	90 5d       	subi	r25, 0xD0	; 208
    54cc:	97 87       	std	Z+15, r25	; 0x0f
    54ce:	08 95       	ret

000054d0 <_ZN3RTCC1Ev>:
    54d0:	cf 93       	push	r28
    54d2:	df 93       	push	r29
    54d4:	ec 01       	movw	r28, r24
    54d6:	1a 8a       	std	Y+18, r1	; 0x12
    54d8:	1b 8a       	std	Y+19, r1	; 0x13
    54da:	19 8a       	std	Y+17, r1	; 0x11
    54dc:	18 8a       	std	Y+16, r1	; 0x10
    54de:	1c 8a       	std	Y+20, r1	; 0x14
    54e0:	1e 8a       	std	Y+22, r1	; 0x16
    54e2:	1f 8a       	std	Y+23, r1	; 0x17
    54e4:	1d 8a       	std	Y+21, r1	; 0x15
    54e6:	88 e2       	ldi	r24, 0x28	; 40
    54e8:	89 8f       	std	Y+25, r24	; 0x19
    54ea:	8a e0       	ldi	r24, 0x0A	; 10
    54ec:	8a 8f       	std	Y+26, r24	; 0x1a
    54ee:	1c 8e       	std	Y+28, r1	; 0x1c
    54f0:	1b 8e       	std	Y+27, r1	; 0x1b
    54f2:	1e 8e       	std	Y+30, r1	; 0x1e
    54f4:	1d 8e       	std	Y+29, r1	; 0x1d
    54f6:	de 01       	movw	r26, r28
    54f8:	fe 01       	movw	r30, r28
    54fa:	38 96       	adiw	r30, 0x08	; 8
    54fc:	80 e0       	ldi	r24, 0x00	; 0
    54fe:	1d 92       	st	X+, r1
    5500:	11 92       	st	Z+, r1
    5502:	8f 5f       	subi	r24, 0xFF	; 255
    5504:	88 30       	cpi	r24, 0x08	; 8
    5506:	d9 f7       	brne	.-10     	; 0x54fe <_ZN3RTCC1Ev+0x2e>
    5508:	8a e3       	ldi	r24, 0x3A	; 58
    550a:	8a 83       	std	Y+2, r24	; 0x02
    550c:	8d 83       	std	Y+5, r24	; 0x05
    550e:	8e e2       	ldi	r24, 0x2E	; 46
    5510:	8a 87       	std	Y+10, r24	; 0x0a
    5512:	8d 87       	std	Y+13, r24	; 0x0d
    5514:	ce 01       	movw	r24, r28
    5516:	6a df       	rcall	.-300    	; 0x53ec <_ZN3RTC14ausgabezeitneuEv>
    5518:	ce 01       	movw	r24, r28
    551a:	a1 df       	rcall	.-190    	; 0x545e <_ZN3RTC15ausgabedatumneuEv>
    551c:	df 91       	pop	r29
    551e:	cf 91       	pop	r28
    5520:	08 95       	ret

00005522 <_ZN3RTC8kalenderEv>:
    5522:	fc 01       	movw	r30, r24
    5524:	26 89       	ldd	r18, Z+22	; 0x16
    5526:	32 2f       	mov	r19, r18
    5528:	3d 7f       	andi	r19, 0xFD	; 253
    552a:	34 30       	cpi	r19, 0x04	; 4
    552c:	11 f0       	breq	.+4      	; 0x5532 <_ZN3RTC8kalenderEv+0x10>
    552e:	39 30       	cpi	r19, 0x09	; 9
    5530:	91 f4       	brne	.+36     	; 0x5556 <_ZN3RTC8kalenderEv+0x34>
    5532:	fc 01       	movw	r30, r24
    5534:	34 89       	ldd	r19, Z+20	; 0x14
    5536:	3f 31       	cpi	r19, 0x1F	; 31
    5538:	b0 f1       	brcs	.+108    	; 0x55a6 <_ZN3RTC8kalenderEv+0x84>
    553a:	31 e0       	ldi	r19, 0x01	; 1
    553c:	34 8b       	std	Z+20, r19	; 0x14
    553e:	2f 5f       	subi	r18, 0xFF	; 255
    5540:	2d 30       	cpi	r18, 0x0D	; 13
    5542:	10 f4       	brcc	.+4      	; 0x5548 <_ZN3RTC8kalenderEv+0x26>
    5544:	26 8b       	std	Z+22, r18	; 0x16
    5546:	2f c0       	rjmp	.+94     	; 0x55a6 <_ZN3RTC8kalenderEv+0x84>
    5548:	21 e0       	ldi	r18, 0x01	; 1
    554a:	fc 01       	movw	r30, r24
    554c:	26 8b       	std	Z+22, r18	; 0x16
    554e:	27 89       	ldd	r18, Z+23	; 0x17
    5550:	2f 5f       	subi	r18, 0xFF	; 255
    5552:	27 8b       	std	Z+23, r18	; 0x17
    5554:	28 c0       	rjmp	.+80     	; 0x55a6 <_ZN3RTC8kalenderEv+0x84>
    5556:	22 30       	cpi	r18, 0x02	; 2
    5558:	a9 f4       	brne	.+42     	; 0x5584 <_ZN3RTC8kalenderEv+0x62>
    555a:	fc 01       	movw	r30, r24
    555c:	27 89       	ldd	r18, Z+23	; 0x17
    555e:	23 70       	andi	r18, 0x03	; 3
    5560:	41 f4       	brne	.+16     	; 0x5572 <_ZN3RTC8kalenderEv+0x50>
    5562:	24 89       	ldd	r18, Z+20	; 0x14
    5564:	2e 31       	cpi	r18, 0x1E	; 30
    5566:	f8 f0       	brcs	.+62     	; 0x55a6 <_ZN3RTC8kalenderEv+0x84>
    5568:	21 e0       	ldi	r18, 0x01	; 1
    556a:	24 8b       	std	Z+20, r18	; 0x14
    556c:	23 e0       	ldi	r18, 0x03	; 3
    556e:	26 8b       	std	Z+22, r18	; 0x16
    5570:	1a c0       	rjmp	.+52     	; 0x55a6 <_ZN3RTC8kalenderEv+0x84>
    5572:	fc 01       	movw	r30, r24
    5574:	24 89       	ldd	r18, Z+20	; 0x14
    5576:	2d 31       	cpi	r18, 0x1D	; 29
    5578:	b0 f0       	brcs	.+44     	; 0x55a6 <_ZN3RTC8kalenderEv+0x84>
    557a:	21 e0       	ldi	r18, 0x01	; 1
    557c:	24 8b       	std	Z+20, r18	; 0x14
    557e:	23 e0       	ldi	r18, 0x03	; 3
    5580:	26 8b       	std	Z+22, r18	; 0x16
    5582:	11 c0       	rjmp	.+34     	; 0x55a6 <_ZN3RTC8kalenderEv+0x84>
    5584:	fc 01       	movw	r30, r24
    5586:	34 89       	ldd	r19, Z+20	; 0x14
    5588:	30 32       	cpi	r19, 0x20	; 32
    558a:	68 f0       	brcs	.+26     	; 0x55a6 <_ZN3RTC8kalenderEv+0x84>
    558c:	31 e0       	ldi	r19, 0x01	; 1
    558e:	34 8b       	std	Z+20, r19	; 0x14
    5590:	2f 5f       	subi	r18, 0xFF	; 255
    5592:	2d 30       	cpi	r18, 0x0D	; 13
    5594:	10 f4       	brcc	.+4      	; 0x559a <_ZN3RTC8kalenderEv+0x78>
    5596:	26 8b       	std	Z+22, r18	; 0x16
    5598:	06 c0       	rjmp	.+12     	; 0x55a6 <_ZN3RTC8kalenderEv+0x84>
    559a:	21 e0       	ldi	r18, 0x01	; 1
    559c:	fc 01       	movw	r30, r24
    559e:	26 8b       	std	Z+22, r18	; 0x16
    55a0:	27 89       	ldd	r18, Z+23	; 0x17
    55a2:	2f 5f       	subi	r18, 0xFF	; 255
    55a4:	27 8b       	std	Z+23, r18	; 0x17
    55a6:	5b cf       	rjmp	.-330    	; 0x545e <_ZN3RTC15ausgabedatumneuEv>
    55a8:	08 95       	ret

000055aa <_ZN3RTC4zeitEv>:

uint8_t RTC::zeit(){
    55aa:	cf 93       	push	r28
    55ac:	df 93       	push	r29
    55ae:	ec 01       	movw	r28, r24
	//Sekunden++; sitzt im Vektor um Taster besser entprellen zu koennen
	if (Sekunden >= 60 && Sekunden <=200){
    55b0:	8a 89       	ldd	r24, Y+18	; 0x12
    55b2:	8c 53       	subi	r24, 0x3C	; 60
    55b4:	8d 38       	cpi	r24, 0x8D	; 141
    55b6:	c0 f4       	brcc	.+48     	; 0x55e8 <_ZN3RTC4zeitEv+0x3e>
		Sekunden = 0;
    55b8:	1a 8a       	std	Y+18, r1	; 0x12
		Minuten++;
    55ba:	89 89       	ldd	r24, Y+17	; 0x11
    55bc:	8f 5f       	subi	r24, 0xFF	; 255
    55be:	89 8b       	std	Y+17, r24	; 0x11
		interupts |= (1<<minuteninterupt);
    55c0:	98 8d       	ldd	r25, Y+24	; 0x18
    55c2:	94 60       	ori	r25, 0x04	; 4
    55c4:	98 8f       	std	Y+24, r25	; 0x18
		if(Minuten >= 60){
    55c6:	8c 33       	cpi	r24, 0x3C	; 60
    55c8:	68 f0       	brcs	.+26     	; 0x55e4 <_ZN3RTC4zeitEv+0x3a>
			Minuten = 0;
    55ca:	19 8a       	std	Y+17, r1	; 0x11
			Stunden++;
    55cc:	88 89       	ldd	r24, Y+16	; 0x10
    55ce:	8f 5f       	subi	r24, 0xFF	; 255
			if(Stunden >= 24){
    55d0:	88 31       	cpi	r24, 0x18	; 24
    55d2:	10 f4       	brcc	.+4      	; 0x55d8 <_ZN3RTC4zeitEv+0x2e>
		Sekunden = 0;
		Minuten++;
		interupts |= (1<<minuteninterupt);
		if(Minuten >= 60){
			Minuten = 0;
			Stunden++;
    55d4:	88 8b       	std	Y+16, r24	; 0x10
    55d6:	06 c0       	rjmp	.+12     	; 0x55e4 <_ZN3RTC4zeitEv+0x3a>
			if(Stunden >= 24){
				Stunden = 0;
    55d8:	18 8a       	std	Y+16, r1	; 0x10
				Tag++;
    55da:	8c 89       	ldd	r24, Y+20	; 0x14
    55dc:	8f 5f       	subi	r24, 0xFF	; 255
    55de:	8c 8b       	std	Y+20, r24	; 0x14
				kalender();
    55e0:	ce 01       	movw	r24, r28
    55e2:	9f df       	rcall	.-194    	; 0x5522 <_ZN3RTC8kalenderEv>
			}
		}
		Wecker();
    55e4:	ce 01       	movw	r24, r28
    55e6:	f1 de       	rcall	.-542    	; 0x53ca <_ZN3RTC6WeckerEv>
	}
	ausgabezeitneu();
    55e8:	ce 01       	movw	r24, r28
    55ea:	00 df       	rcall	.-512    	; 0x53ec <_ZN3RTC14ausgabezeitneuEv>
	if (interupts&(1<<Timerlauft))
    55ec:	28 8d       	ldd	r18, Y+24	; 0x18
    55ee:	25 ff       	sbrs	r18, 5
    55f0:	0a c0       	rjmp	.+20     	; 0x5606 <_ZN3RTC4zeitEv+0x5c>
	{
		Timerzahler--;
    55f2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    55f4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    55f6:	01 97       	sbiw	r24, 0x01	; 1
    55f8:	9c 8f       	std	Y+28, r25	; 0x1c
    55fa:	8b 8f       	std	Y+27, r24	; 0x1b
		if (Timerzahler<=0)
    55fc:	89 2b       	or	r24, r25
    55fe:	19 f4       	brne	.+6      	; 0x5606 <_ZN3RTC4zeitEv+0x5c>
		{
			interupts|=(1<<Alarm);
			interupts&=~(1<<Timerlauft);
    5600:	2f 7d       	andi	r18, 0xDF	; 223
    5602:	21 60       	ori	r18, 0x01	; 1
    5604:	28 8f       	std	Y+24, r18	; 0x18
		}
	}
	if (interupts&(1<<Stoppuhrlauft))
    5606:	88 8d       	ldd	r24, Y+24	; 0x18
    5608:	86 ff       	sbrs	r24, 6
    560a:	05 c0       	rjmp	.+10     	; 0x5616 <_ZN3RTC4zeitEv+0x6c>
	{
		Stoppuhrzahler++;
    560c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    560e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5610:	01 96       	adiw	r24, 0x01	; 1
    5612:	9e 8f       	std	Y+30, r25	; 0x1e
    5614:	8d 8f       	std	Y+29, r24	; 0x1d
	}
	return 0;
}
    5616:	80 e0       	ldi	r24, 0x00	; 0
    5618:	df 91       	pop	r29
    561a:	cf 91       	pop	r28
    561c:	08 95       	ret

0000561e <_ZN3RTC10dummyeinstEv>:
	msg_dat[4]='0'+Monat%10;
	msg_dat[6]='0'+Jahr/10;
	msg_dat[7]='0'+Jahr%10;
}

void RTC::dummyeinst(){
    561e:	cf 93       	push	r28
    5620:	df 93       	push	r29
    5622:	ec 01       	movw	r28, r24
	Stunden=10;
    5624:	8a e0       	ldi	r24, 0x0A	; 10
    5626:	88 8b       	std	Y+16, r24	; 0x10
	Minuten=30;
    5628:	8e e1       	ldi	r24, 0x1E	; 30
    562a:	89 8b       	std	Y+17, r24	; 0x11
	Tag=7;
    562c:	87 e0       	ldi	r24, 0x07	; 7
    562e:	8c 8b       	std	Y+20, r24	; 0x14
	Monat=9;
    5630:	89 e0       	ldi	r24, 0x09	; 9
    5632:	8e 8b       	std	Y+22, r24	; 0x16
	Jahr=15;
    5634:	8f e0       	ldi	r24, 0x0F	; 15
    5636:	8f 8b       	std	Y+23, r24	; 0x17
	ausgabedatumneu();
    5638:	ce 01       	movw	r24, r28
    563a:	11 df       	rcall	.-478    	; 0x545e <_ZN3RTC15ausgabedatumneuEv>
	ausgabezeitneu();
    563c:	ce 01       	movw	r24, r28
    563e:	d6 de       	rcall	.-596    	; 0x53ec <_ZN3RTC14ausgabezeitneuEv>
}
    5640:	df 91       	pop	r29
    5642:	cf 91       	pop	r28
    5644:	08 95       	ret

00005646 <_ZN3RTC8RTCstartEv>:

void RTC::RTCstart(){
    5646:	fc 01       	movw	r30, r24
	//Einstellungen des Ausgabebuffers
	msg_uhr[0]='0';
    5648:	80 e3       	ldi	r24, 0x30	; 48
    564a:	80 83       	st	Z, r24
	msg_uhr[1]='0';
    564c:	81 83       	std	Z+1, r24	; 0x01
	msg_uhr[2]=':';
    564e:	9a e3       	ldi	r25, 0x3A	; 58
    5650:	92 83       	std	Z+2, r25	; 0x02
	msg_uhr[3]='0';
    5652:	83 83       	std	Z+3, r24	; 0x03
	msg_uhr[4]='0';
    5654:	84 83       	std	Z+4, r24	; 0x04
	msg_uhr[5]=':';
    5656:	95 83       	std	Z+5, r25	; 0x05
	msg_uhr[6]='0';
    5658:	86 83       	std	Z+6, r24	; 0x06
	msg_uhr[7]='0';
    565a:	87 83       	std	Z+7, r24	; 0x07
	//Timer2 als 1ms Timer fuer die RTC
	//asynchron mit 32.768 kHz (noch synchrom)
	TCNT2 = TIMER2RTCTIME;
    565c:	10 92 b2 00 	sts	0x00B2, r1
	ASSR |= (1<<AS2);
    5660:	e6 eb       	ldi	r30, 0xB6	; 182
    5662:	f0 e0       	ldi	r31, 0x00	; 0
    5664:	80 81       	ld	r24, Z
    5666:	80 62       	ori	r24, 0x20	; 32
    5668:	80 83       	st	Z, r24
	TIMSK2 = (1<<TOIE2);
    566a:	81 e0       	ldi	r24, 0x01	; 1
    566c:	80 93 70 00 	sts	0x0070, r24
	TCCR2B = (1<<CS22) | (1<<CS20);		//Vorteiler 256
    5670:	85 e0       	ldi	r24, 0x05	; 5
    5672:	80 93 b1 00 	sts	0x00B1, r24
    5676:	08 95       	ret

00005678 <_ZN3RTC7RTCstopEv>:
}

void RTC::RTCstop(){
	TCCR2B &= ~((1<<CS22) | (1<<CS21));
    5678:	e1 eb       	ldi	r30, 0xB1	; 177
    567a:	f0 e0       	ldi	r31, 0x00	; 0
    567c:	80 81       	ld	r24, Z
    567e:	89 7f       	andi	r24, 0xF9	; 249
    5680:	80 83       	st	Z, r24
    5682:	08 95       	ret

00005684 <__subsf3>:
    5684:	50 58       	subi	r21, 0x80	; 128

00005686 <__addsf3>:
    5686:	bb 27       	eor	r27, r27
    5688:	aa 27       	eor	r26, r26
    568a:	0e d0       	rcall	.+28     	; 0x56a8 <__addsf3x>
    568c:	27 c2       	rjmp	.+1102   	; 0x5adc <__fp_round>
    568e:	f0 d1       	rcall	.+992    	; 0x5a70 <__fp_pscA>
    5690:	30 f0       	brcs	.+12     	; 0x569e <__addsf3+0x18>
    5692:	f5 d1       	rcall	.+1002   	; 0x5a7e <__fp_pscB>
    5694:	20 f0       	brcs	.+8      	; 0x569e <__addsf3+0x18>
    5696:	31 f4       	brne	.+12     	; 0x56a4 <__addsf3+0x1e>
    5698:	9f 3f       	cpi	r25, 0xFF	; 255
    569a:	11 f4       	brne	.+4      	; 0x56a0 <__addsf3+0x1a>
    569c:	1e f4       	brtc	.+6      	; 0x56a4 <__addsf3+0x1e>
    569e:	c0 c1       	rjmp	.+896    	; 0x5a20 <__fp_nan>
    56a0:	0e f4       	brtc	.+2      	; 0x56a4 <__addsf3+0x1e>
    56a2:	e0 95       	com	r30
    56a4:	e7 fb       	bst	r30, 7
    56a6:	b6 c1       	rjmp	.+876    	; 0x5a14 <__fp_inf>

000056a8 <__addsf3x>:
    56a8:	e9 2f       	mov	r30, r25
    56aa:	3a d2       	rcall	.+1140   	; 0x5b20 <__fp_split3>
    56ac:	80 f3       	brcs	.-32     	; 0x568e <__addsf3+0x8>
    56ae:	ba 17       	cp	r27, r26
    56b0:	62 07       	cpc	r22, r18
    56b2:	73 07       	cpc	r23, r19
    56b4:	84 07       	cpc	r24, r20
    56b6:	95 07       	cpc	r25, r21
    56b8:	18 f0       	brcs	.+6      	; 0x56c0 <__addsf3x+0x18>
    56ba:	71 f4       	brne	.+28     	; 0x56d8 <__addsf3x+0x30>
    56bc:	9e f5       	brtc	.+102    	; 0x5724 <__addsf3x+0x7c>
    56be:	52 c2       	rjmp	.+1188   	; 0x5b64 <__fp_zero>
    56c0:	0e f4       	brtc	.+2      	; 0x56c4 <__addsf3x+0x1c>
    56c2:	e0 95       	com	r30
    56c4:	0b 2e       	mov	r0, r27
    56c6:	ba 2f       	mov	r27, r26
    56c8:	a0 2d       	mov	r26, r0
    56ca:	0b 01       	movw	r0, r22
    56cc:	b9 01       	movw	r22, r18
    56ce:	90 01       	movw	r18, r0
    56d0:	0c 01       	movw	r0, r24
    56d2:	ca 01       	movw	r24, r20
    56d4:	a0 01       	movw	r20, r0
    56d6:	11 24       	eor	r1, r1
    56d8:	ff 27       	eor	r31, r31
    56da:	59 1b       	sub	r21, r25
    56dc:	99 f0       	breq	.+38     	; 0x5704 <__addsf3x+0x5c>
    56de:	59 3f       	cpi	r21, 0xF9	; 249
    56e0:	50 f4       	brcc	.+20     	; 0x56f6 <__addsf3x+0x4e>
    56e2:	50 3e       	cpi	r21, 0xE0	; 224
    56e4:	68 f1       	brcs	.+90     	; 0x5740 <__addsf3x+0x98>
    56e6:	1a 16       	cp	r1, r26
    56e8:	f0 40       	sbci	r31, 0x00	; 0
    56ea:	a2 2f       	mov	r26, r18
    56ec:	23 2f       	mov	r18, r19
    56ee:	34 2f       	mov	r19, r20
    56f0:	44 27       	eor	r20, r20
    56f2:	58 5f       	subi	r21, 0xF8	; 248
    56f4:	f3 cf       	rjmp	.-26     	; 0x56dc <__addsf3x+0x34>
    56f6:	46 95       	lsr	r20
    56f8:	37 95       	ror	r19
    56fa:	27 95       	ror	r18
    56fc:	a7 95       	ror	r26
    56fe:	f0 40       	sbci	r31, 0x00	; 0
    5700:	53 95       	inc	r21
    5702:	c9 f7       	brne	.-14     	; 0x56f6 <__addsf3x+0x4e>
    5704:	7e f4       	brtc	.+30     	; 0x5724 <__addsf3x+0x7c>
    5706:	1f 16       	cp	r1, r31
    5708:	ba 0b       	sbc	r27, r26
    570a:	62 0b       	sbc	r22, r18
    570c:	73 0b       	sbc	r23, r19
    570e:	84 0b       	sbc	r24, r20
    5710:	ba f0       	brmi	.+46     	; 0x5740 <__addsf3x+0x98>
    5712:	91 50       	subi	r25, 0x01	; 1
    5714:	a1 f0       	breq	.+40     	; 0x573e <__addsf3x+0x96>
    5716:	ff 0f       	add	r31, r31
    5718:	bb 1f       	adc	r27, r27
    571a:	66 1f       	adc	r22, r22
    571c:	77 1f       	adc	r23, r23
    571e:	88 1f       	adc	r24, r24
    5720:	c2 f7       	brpl	.-16     	; 0x5712 <__addsf3x+0x6a>
    5722:	0e c0       	rjmp	.+28     	; 0x5740 <__addsf3x+0x98>
    5724:	ba 0f       	add	r27, r26
    5726:	62 1f       	adc	r22, r18
    5728:	73 1f       	adc	r23, r19
    572a:	84 1f       	adc	r24, r20
    572c:	48 f4       	brcc	.+18     	; 0x5740 <__addsf3x+0x98>
    572e:	87 95       	ror	r24
    5730:	77 95       	ror	r23
    5732:	67 95       	ror	r22
    5734:	b7 95       	ror	r27
    5736:	f7 95       	ror	r31
    5738:	9e 3f       	cpi	r25, 0xFE	; 254
    573a:	08 f0       	brcs	.+2      	; 0x573e <__addsf3x+0x96>
    573c:	b3 cf       	rjmp	.-154    	; 0x56a4 <__addsf3+0x1e>
    573e:	93 95       	inc	r25
    5740:	88 0f       	add	r24, r24
    5742:	08 f0       	brcs	.+2      	; 0x5746 <__addsf3x+0x9e>
    5744:	99 27       	eor	r25, r25
    5746:	ee 0f       	add	r30, r30
    5748:	97 95       	ror	r25
    574a:	87 95       	ror	r24
    574c:	08 95       	ret
    574e:	90 d1       	rcall	.+800    	; 0x5a70 <__fp_pscA>
    5750:	58 f0       	brcs	.+22     	; 0x5768 <__addsf3x+0xc0>
    5752:	80 e8       	ldi	r24, 0x80	; 128
    5754:	91 e0       	ldi	r25, 0x01	; 1
    5756:	09 f4       	brne	.+2      	; 0x575a <__addsf3x+0xb2>
    5758:	9e ef       	ldi	r25, 0xFE	; 254
    575a:	91 d1       	rcall	.+802    	; 0x5a7e <__fp_pscB>
    575c:	28 f0       	brcs	.+10     	; 0x5768 <__addsf3x+0xc0>
    575e:	40 e8       	ldi	r20, 0x80	; 128
    5760:	51 e0       	ldi	r21, 0x01	; 1
    5762:	59 f4       	brne	.+22     	; 0x577a <atan2+0xe>
    5764:	5e ef       	ldi	r21, 0xFE	; 254
    5766:	09 c0       	rjmp	.+18     	; 0x577a <atan2+0xe>
    5768:	5b c1       	rjmp	.+694    	; 0x5a20 <__fp_nan>
    576a:	fc c1       	rjmp	.+1016   	; 0x5b64 <__fp_zero>

0000576c <atan2>:
    576c:	e9 2f       	mov	r30, r25
    576e:	e0 78       	andi	r30, 0x80	; 128
    5770:	d7 d1       	rcall	.+942    	; 0x5b20 <__fp_split3>
    5772:	68 f3       	brcs	.-38     	; 0x574e <__addsf3x+0xa6>
    5774:	09 2e       	mov	r0, r25
    5776:	05 2a       	or	r0, r21
    5778:	c1 f3       	breq	.-16     	; 0x576a <__addsf3x+0xc2>
    577a:	26 17       	cp	r18, r22
    577c:	37 07       	cpc	r19, r23
    577e:	48 07       	cpc	r20, r24
    5780:	59 07       	cpc	r21, r25
    5782:	38 f0       	brcs	.+14     	; 0x5792 <atan2+0x26>
    5784:	0e 2e       	mov	r0, r30
    5786:	07 f8       	bld	r0, 7
    5788:	e0 25       	eor	r30, r0
    578a:	69 f0       	breq	.+26     	; 0x57a6 <atan2+0x3a>
    578c:	e0 25       	eor	r30, r0
    578e:	e0 64       	ori	r30, 0x40	; 64
    5790:	0a c0       	rjmp	.+20     	; 0x57a6 <atan2+0x3a>
    5792:	ef 63       	ori	r30, 0x3F	; 63
    5794:	07 f8       	bld	r0, 7
    5796:	00 94       	com	r0
    5798:	07 fa       	bst	r0, 7
    579a:	db 01       	movw	r26, r22
    579c:	b9 01       	movw	r22, r18
    579e:	9d 01       	movw	r18, r26
    57a0:	dc 01       	movw	r26, r24
    57a2:	ca 01       	movw	r24, r20
    57a4:	ad 01       	movw	r20, r26
    57a6:	ef 93       	push	r30
    57a8:	4a d0       	rcall	.+148    	; 0x583e <__divsf3_pse>
    57aa:	98 d1       	rcall	.+816    	; 0x5adc <__fp_round>
    57ac:	0a d0       	rcall	.+20     	; 0x57c2 <atan>
    57ae:	5f 91       	pop	r21
    57b0:	55 23       	and	r21, r21
    57b2:	31 f0       	breq	.+12     	; 0x57c0 <atan2+0x54>
    57b4:	2b ed       	ldi	r18, 0xDB	; 219
    57b6:	3f e0       	ldi	r19, 0x0F	; 15
    57b8:	49 e4       	ldi	r20, 0x49	; 73
    57ba:	50 fd       	sbrc	r21, 0
    57bc:	49 ec       	ldi	r20, 0xC9	; 201
    57be:	63 cf       	rjmp	.-314    	; 0x5686 <__addsf3>
    57c0:	08 95       	ret

000057c2 <atan>:
    57c2:	df 93       	push	r29
    57c4:	dd 27       	eor	r29, r29
    57c6:	b9 2f       	mov	r27, r25
    57c8:	bf 77       	andi	r27, 0x7F	; 127
    57ca:	40 e8       	ldi	r20, 0x80	; 128
    57cc:	5f e3       	ldi	r21, 0x3F	; 63
    57ce:	16 16       	cp	r1, r22
    57d0:	17 06       	cpc	r1, r23
    57d2:	48 07       	cpc	r20, r24
    57d4:	5b 07       	cpc	r21, r27
    57d6:	10 f4       	brcc	.+4      	; 0x57dc <atan+0x1a>
    57d8:	d9 2f       	mov	r29, r25
    57da:	cf d1       	rcall	.+926    	; 0x5b7a <inverse>
    57dc:	9f 93       	push	r25
    57de:	8f 93       	push	r24
    57e0:	7f 93       	push	r23
    57e2:	6f 93       	push	r22
    57e4:	7f d2       	rcall	.+1278   	; 0x5ce4 <square>
    57e6:	ee eb       	ldi	r30, 0xBE	; 190
    57e8:	f0 e0       	ldi	r31, 0x00	; 0
    57ea:	1d d1       	rcall	.+570    	; 0x5a26 <__fp_powser>
    57ec:	77 d1       	rcall	.+750    	; 0x5adc <__fp_round>
    57ee:	2f 91       	pop	r18
    57f0:	3f 91       	pop	r19
    57f2:	4f 91       	pop	r20
    57f4:	5f 91       	pop	r21
    57f6:	19 d2       	rcall	.+1074   	; 0x5c2a <__mulsf3x>
    57f8:	dd 23       	and	r29, r29
    57fa:	49 f0       	breq	.+18     	; 0x580e <atan+0x4c>
    57fc:	90 58       	subi	r25, 0x80	; 128
    57fe:	a2 ea       	ldi	r26, 0xA2	; 162
    5800:	2a ed       	ldi	r18, 0xDA	; 218
    5802:	3f e0       	ldi	r19, 0x0F	; 15
    5804:	49 ec       	ldi	r20, 0xC9	; 201
    5806:	5f e3       	ldi	r21, 0x3F	; 63
    5808:	d0 78       	andi	r29, 0x80	; 128
    580a:	5d 27       	eor	r21, r29
    580c:	4d df       	rcall	.-358    	; 0x56a8 <__addsf3x>
    580e:	df 91       	pop	r29
    5810:	65 c1       	rjmp	.+714    	; 0x5adc <__fp_round>

00005812 <__cmpsf2>:
    5812:	dc d0       	rcall	.+440    	; 0x59cc <__fp_cmp>
    5814:	08 f4       	brcc	.+2      	; 0x5818 <__cmpsf2+0x6>
    5816:	81 e0       	ldi	r24, 0x01	; 1
    5818:	08 95       	ret

0000581a <cos>:
    581a:	39 d1       	rcall	.+626    	; 0x5a8e <__fp_rempio2>
    581c:	e3 95       	inc	r30
    581e:	6f c1       	rjmp	.+734    	; 0x5afe <__fp_sinus>

00005820 <__divsf3>:
    5820:	0c d0       	rcall	.+24     	; 0x583a <__divsf3x>
    5822:	5c c1       	rjmp	.+696    	; 0x5adc <__fp_round>
    5824:	2c d1       	rcall	.+600    	; 0x5a7e <__fp_pscB>
    5826:	40 f0       	brcs	.+16     	; 0x5838 <__divsf3+0x18>
    5828:	23 d1       	rcall	.+582    	; 0x5a70 <__fp_pscA>
    582a:	30 f0       	brcs	.+12     	; 0x5838 <__divsf3+0x18>
    582c:	21 f4       	brne	.+8      	; 0x5836 <__divsf3+0x16>
    582e:	5f 3f       	cpi	r21, 0xFF	; 255
    5830:	19 f0       	breq	.+6      	; 0x5838 <__divsf3+0x18>
    5832:	f0 c0       	rjmp	.+480    	; 0x5a14 <__fp_inf>
    5834:	51 11       	cpse	r21, r1
    5836:	97 c1       	rjmp	.+814    	; 0x5b66 <__fp_szero>
    5838:	f3 c0       	rjmp	.+486    	; 0x5a20 <__fp_nan>

0000583a <__divsf3x>:
    583a:	72 d1       	rcall	.+740    	; 0x5b20 <__fp_split3>
    583c:	98 f3       	brcs	.-26     	; 0x5824 <__divsf3+0x4>

0000583e <__divsf3_pse>:
    583e:	99 23       	and	r25, r25
    5840:	c9 f3       	breq	.-14     	; 0x5834 <__divsf3+0x14>
    5842:	55 23       	and	r21, r21
    5844:	b1 f3       	breq	.-20     	; 0x5832 <__divsf3+0x12>
    5846:	95 1b       	sub	r25, r21
    5848:	55 0b       	sbc	r21, r21
    584a:	bb 27       	eor	r27, r27
    584c:	aa 27       	eor	r26, r26
    584e:	62 17       	cp	r22, r18
    5850:	73 07       	cpc	r23, r19
    5852:	84 07       	cpc	r24, r20
    5854:	38 f0       	brcs	.+14     	; 0x5864 <__divsf3_pse+0x26>
    5856:	9f 5f       	subi	r25, 0xFF	; 255
    5858:	5f 4f       	sbci	r21, 0xFF	; 255
    585a:	22 0f       	add	r18, r18
    585c:	33 1f       	adc	r19, r19
    585e:	44 1f       	adc	r20, r20
    5860:	aa 1f       	adc	r26, r26
    5862:	a9 f3       	breq	.-22     	; 0x584e <__divsf3_pse+0x10>
    5864:	33 d0       	rcall	.+102    	; 0x58cc <__divsf3_pse+0x8e>
    5866:	0e 2e       	mov	r0, r30
    5868:	3a f0       	brmi	.+14     	; 0x5878 <__divsf3_pse+0x3a>
    586a:	e0 e8       	ldi	r30, 0x80	; 128
    586c:	30 d0       	rcall	.+96     	; 0x58ce <__divsf3_pse+0x90>
    586e:	91 50       	subi	r25, 0x01	; 1
    5870:	50 40       	sbci	r21, 0x00	; 0
    5872:	e6 95       	lsr	r30
    5874:	00 1c       	adc	r0, r0
    5876:	ca f7       	brpl	.-14     	; 0x586a <__divsf3_pse+0x2c>
    5878:	29 d0       	rcall	.+82     	; 0x58cc <__divsf3_pse+0x8e>
    587a:	fe 2f       	mov	r31, r30
    587c:	27 d0       	rcall	.+78     	; 0x58cc <__divsf3_pse+0x8e>
    587e:	66 0f       	add	r22, r22
    5880:	77 1f       	adc	r23, r23
    5882:	88 1f       	adc	r24, r24
    5884:	bb 1f       	adc	r27, r27
    5886:	26 17       	cp	r18, r22
    5888:	37 07       	cpc	r19, r23
    588a:	48 07       	cpc	r20, r24
    588c:	ab 07       	cpc	r26, r27
    588e:	b0 e8       	ldi	r27, 0x80	; 128
    5890:	09 f0       	breq	.+2      	; 0x5894 <__divsf3_pse+0x56>
    5892:	bb 0b       	sbc	r27, r27
    5894:	80 2d       	mov	r24, r0
    5896:	bf 01       	movw	r22, r30
    5898:	ff 27       	eor	r31, r31
    589a:	93 58       	subi	r25, 0x83	; 131
    589c:	5f 4f       	sbci	r21, 0xFF	; 255
    589e:	2a f0       	brmi	.+10     	; 0x58aa <__divsf3_pse+0x6c>
    58a0:	9e 3f       	cpi	r25, 0xFE	; 254
    58a2:	51 05       	cpc	r21, r1
    58a4:	68 f0       	brcs	.+26     	; 0x58c0 <__divsf3_pse+0x82>
    58a6:	b6 c0       	rjmp	.+364    	; 0x5a14 <__fp_inf>
    58a8:	5e c1       	rjmp	.+700    	; 0x5b66 <__fp_szero>
    58aa:	5f 3f       	cpi	r21, 0xFF	; 255
    58ac:	ec f3       	brlt	.-6      	; 0x58a8 <__divsf3_pse+0x6a>
    58ae:	98 3e       	cpi	r25, 0xE8	; 232
    58b0:	dc f3       	brlt	.-10     	; 0x58a8 <__divsf3_pse+0x6a>
    58b2:	86 95       	lsr	r24
    58b4:	77 95       	ror	r23
    58b6:	67 95       	ror	r22
    58b8:	b7 95       	ror	r27
    58ba:	f7 95       	ror	r31
    58bc:	9f 5f       	subi	r25, 0xFF	; 255
    58be:	c9 f7       	brne	.-14     	; 0x58b2 <__divsf3_pse+0x74>
    58c0:	88 0f       	add	r24, r24
    58c2:	91 1d       	adc	r25, r1
    58c4:	96 95       	lsr	r25
    58c6:	87 95       	ror	r24
    58c8:	97 f9       	bld	r25, 7
    58ca:	08 95       	ret
    58cc:	e1 e0       	ldi	r30, 0x01	; 1
    58ce:	66 0f       	add	r22, r22
    58d0:	77 1f       	adc	r23, r23
    58d2:	88 1f       	adc	r24, r24
    58d4:	bb 1f       	adc	r27, r27
    58d6:	62 17       	cp	r22, r18
    58d8:	73 07       	cpc	r23, r19
    58da:	84 07       	cpc	r24, r20
    58dc:	ba 07       	cpc	r27, r26
    58de:	20 f0       	brcs	.+8      	; 0x58e8 <__divsf3_pse+0xaa>
    58e0:	62 1b       	sub	r22, r18
    58e2:	73 0b       	sbc	r23, r19
    58e4:	84 0b       	sbc	r24, r20
    58e6:	ba 0b       	sbc	r27, r26
    58e8:	ee 1f       	adc	r30, r30
    58ea:	88 f7       	brcc	.-30     	; 0x58ce <__divsf3_pse+0x90>
    58ec:	e0 95       	com	r30
    58ee:	08 95       	ret

000058f0 <__fixsfsi>:
    58f0:	04 d0       	rcall	.+8      	; 0x58fa <__fixunssfsi>
    58f2:	68 94       	set
    58f4:	b1 11       	cpse	r27, r1
    58f6:	37 c1       	rjmp	.+622    	; 0x5b66 <__fp_szero>
    58f8:	08 95       	ret

000058fa <__fixunssfsi>:
    58fa:	1a d1       	rcall	.+564    	; 0x5b30 <__fp_splitA>
    58fc:	88 f0       	brcs	.+34     	; 0x5920 <__fixunssfsi+0x26>
    58fe:	9f 57       	subi	r25, 0x7F	; 127
    5900:	90 f0       	brcs	.+36     	; 0x5926 <__fixunssfsi+0x2c>
    5902:	b9 2f       	mov	r27, r25
    5904:	99 27       	eor	r25, r25
    5906:	b7 51       	subi	r27, 0x17	; 23
    5908:	a0 f0       	brcs	.+40     	; 0x5932 <__fixunssfsi+0x38>
    590a:	d1 f0       	breq	.+52     	; 0x5940 <__fixunssfsi+0x46>
    590c:	66 0f       	add	r22, r22
    590e:	77 1f       	adc	r23, r23
    5910:	88 1f       	adc	r24, r24
    5912:	99 1f       	adc	r25, r25
    5914:	1a f0       	brmi	.+6      	; 0x591c <__fixunssfsi+0x22>
    5916:	ba 95       	dec	r27
    5918:	c9 f7       	brne	.-14     	; 0x590c <__fixunssfsi+0x12>
    591a:	12 c0       	rjmp	.+36     	; 0x5940 <__fixunssfsi+0x46>
    591c:	b1 30       	cpi	r27, 0x01	; 1
    591e:	81 f0       	breq	.+32     	; 0x5940 <__fixunssfsi+0x46>
    5920:	21 d1       	rcall	.+578    	; 0x5b64 <__fp_zero>
    5922:	b1 e0       	ldi	r27, 0x01	; 1
    5924:	08 95       	ret
    5926:	1e c1       	rjmp	.+572    	; 0x5b64 <__fp_zero>
    5928:	67 2f       	mov	r22, r23
    592a:	78 2f       	mov	r23, r24
    592c:	88 27       	eor	r24, r24
    592e:	b8 5f       	subi	r27, 0xF8	; 248
    5930:	39 f0       	breq	.+14     	; 0x5940 <__fixunssfsi+0x46>
    5932:	b9 3f       	cpi	r27, 0xF9	; 249
    5934:	cc f3       	brlt	.-14     	; 0x5928 <__fixunssfsi+0x2e>
    5936:	86 95       	lsr	r24
    5938:	77 95       	ror	r23
    593a:	67 95       	ror	r22
    593c:	b3 95       	inc	r27
    593e:	d9 f7       	brne	.-10     	; 0x5936 <__fixunssfsi+0x3c>
    5940:	3e f4       	brtc	.+14     	; 0x5950 <__fixunssfsi+0x56>
    5942:	90 95       	com	r25
    5944:	80 95       	com	r24
    5946:	70 95       	com	r23
    5948:	61 95       	neg	r22
    594a:	7f 4f       	sbci	r23, 0xFF	; 255
    594c:	8f 4f       	sbci	r24, 0xFF	; 255
    594e:	9f 4f       	sbci	r25, 0xFF	; 255
    5950:	08 95       	ret

00005952 <__floatunsisf>:
    5952:	e8 94       	clt
    5954:	09 c0       	rjmp	.+18     	; 0x5968 <__floatsisf+0x12>

00005956 <__floatsisf>:
    5956:	97 fb       	bst	r25, 7
    5958:	3e f4       	brtc	.+14     	; 0x5968 <__floatsisf+0x12>
    595a:	90 95       	com	r25
    595c:	80 95       	com	r24
    595e:	70 95       	com	r23
    5960:	61 95       	neg	r22
    5962:	7f 4f       	sbci	r23, 0xFF	; 255
    5964:	8f 4f       	sbci	r24, 0xFF	; 255
    5966:	9f 4f       	sbci	r25, 0xFF	; 255
    5968:	99 23       	and	r25, r25
    596a:	a9 f0       	breq	.+42     	; 0x5996 <__floatsisf+0x40>
    596c:	f9 2f       	mov	r31, r25
    596e:	96 e9       	ldi	r25, 0x96	; 150
    5970:	bb 27       	eor	r27, r27
    5972:	93 95       	inc	r25
    5974:	f6 95       	lsr	r31
    5976:	87 95       	ror	r24
    5978:	77 95       	ror	r23
    597a:	67 95       	ror	r22
    597c:	b7 95       	ror	r27
    597e:	f1 11       	cpse	r31, r1
    5980:	f8 cf       	rjmp	.-16     	; 0x5972 <__floatsisf+0x1c>
    5982:	fa f4       	brpl	.+62     	; 0x59c2 <__floatsisf+0x6c>
    5984:	bb 0f       	add	r27, r27
    5986:	11 f4       	brne	.+4      	; 0x598c <__floatsisf+0x36>
    5988:	60 ff       	sbrs	r22, 0
    598a:	1b c0       	rjmp	.+54     	; 0x59c2 <__floatsisf+0x6c>
    598c:	6f 5f       	subi	r22, 0xFF	; 255
    598e:	7f 4f       	sbci	r23, 0xFF	; 255
    5990:	8f 4f       	sbci	r24, 0xFF	; 255
    5992:	9f 4f       	sbci	r25, 0xFF	; 255
    5994:	16 c0       	rjmp	.+44     	; 0x59c2 <__floatsisf+0x6c>
    5996:	88 23       	and	r24, r24
    5998:	11 f0       	breq	.+4      	; 0x599e <__floatsisf+0x48>
    599a:	96 e9       	ldi	r25, 0x96	; 150
    599c:	11 c0       	rjmp	.+34     	; 0x59c0 <__floatsisf+0x6a>
    599e:	77 23       	and	r23, r23
    59a0:	21 f0       	breq	.+8      	; 0x59aa <__floatsisf+0x54>
    59a2:	9e e8       	ldi	r25, 0x8E	; 142
    59a4:	87 2f       	mov	r24, r23
    59a6:	76 2f       	mov	r23, r22
    59a8:	05 c0       	rjmp	.+10     	; 0x59b4 <__floatsisf+0x5e>
    59aa:	66 23       	and	r22, r22
    59ac:	71 f0       	breq	.+28     	; 0x59ca <__floatsisf+0x74>
    59ae:	96 e8       	ldi	r25, 0x86	; 134
    59b0:	86 2f       	mov	r24, r22
    59b2:	70 e0       	ldi	r23, 0x00	; 0
    59b4:	60 e0       	ldi	r22, 0x00	; 0
    59b6:	2a f0       	brmi	.+10     	; 0x59c2 <__floatsisf+0x6c>
    59b8:	9a 95       	dec	r25
    59ba:	66 0f       	add	r22, r22
    59bc:	77 1f       	adc	r23, r23
    59be:	88 1f       	adc	r24, r24
    59c0:	da f7       	brpl	.-10     	; 0x59b8 <__floatsisf+0x62>
    59c2:	88 0f       	add	r24, r24
    59c4:	96 95       	lsr	r25
    59c6:	87 95       	ror	r24
    59c8:	97 f9       	bld	r25, 7
    59ca:	08 95       	ret

000059cc <__fp_cmp>:
    59cc:	99 0f       	add	r25, r25
    59ce:	00 08       	sbc	r0, r0
    59d0:	55 0f       	add	r21, r21
    59d2:	aa 0b       	sbc	r26, r26
    59d4:	e0 e8       	ldi	r30, 0x80	; 128
    59d6:	fe ef       	ldi	r31, 0xFE	; 254
    59d8:	16 16       	cp	r1, r22
    59da:	17 06       	cpc	r1, r23
    59dc:	e8 07       	cpc	r30, r24
    59de:	f9 07       	cpc	r31, r25
    59e0:	c0 f0       	brcs	.+48     	; 0x5a12 <__fp_cmp+0x46>
    59e2:	12 16       	cp	r1, r18
    59e4:	13 06       	cpc	r1, r19
    59e6:	e4 07       	cpc	r30, r20
    59e8:	f5 07       	cpc	r31, r21
    59ea:	98 f0       	brcs	.+38     	; 0x5a12 <__fp_cmp+0x46>
    59ec:	62 1b       	sub	r22, r18
    59ee:	73 0b       	sbc	r23, r19
    59f0:	84 0b       	sbc	r24, r20
    59f2:	95 0b       	sbc	r25, r21
    59f4:	39 f4       	brne	.+14     	; 0x5a04 <__fp_cmp+0x38>
    59f6:	0a 26       	eor	r0, r26
    59f8:	61 f0       	breq	.+24     	; 0x5a12 <__fp_cmp+0x46>
    59fa:	23 2b       	or	r18, r19
    59fc:	24 2b       	or	r18, r20
    59fe:	25 2b       	or	r18, r21
    5a00:	21 f4       	brne	.+8      	; 0x5a0a <__fp_cmp+0x3e>
    5a02:	08 95       	ret
    5a04:	0a 26       	eor	r0, r26
    5a06:	09 f4       	brne	.+2      	; 0x5a0a <__fp_cmp+0x3e>
    5a08:	a1 40       	sbci	r26, 0x01	; 1
    5a0a:	a6 95       	lsr	r26
    5a0c:	8f ef       	ldi	r24, 0xFF	; 255
    5a0e:	81 1d       	adc	r24, r1
    5a10:	81 1d       	adc	r24, r1
    5a12:	08 95       	ret

00005a14 <__fp_inf>:
    5a14:	97 f9       	bld	r25, 7
    5a16:	9f 67       	ori	r25, 0x7F	; 127
    5a18:	80 e8       	ldi	r24, 0x80	; 128
    5a1a:	70 e0       	ldi	r23, 0x00	; 0
    5a1c:	60 e0       	ldi	r22, 0x00	; 0
    5a1e:	08 95       	ret

00005a20 <__fp_nan>:
    5a20:	9f ef       	ldi	r25, 0xFF	; 255
    5a22:	80 ec       	ldi	r24, 0xC0	; 192
    5a24:	08 95       	ret

00005a26 <__fp_powser>:
    5a26:	df 93       	push	r29
    5a28:	cf 93       	push	r28
    5a2a:	1f 93       	push	r17
    5a2c:	0f 93       	push	r16
    5a2e:	ff 92       	push	r15
    5a30:	ef 92       	push	r14
    5a32:	df 92       	push	r13
    5a34:	7b 01       	movw	r14, r22
    5a36:	8c 01       	movw	r16, r24
    5a38:	68 94       	set
    5a3a:	05 c0       	rjmp	.+10     	; 0x5a46 <__fp_powser+0x20>
    5a3c:	da 2e       	mov	r13, r26
    5a3e:	ef 01       	movw	r28, r30
    5a40:	f4 d0       	rcall	.+488    	; 0x5c2a <__mulsf3x>
    5a42:	fe 01       	movw	r30, r28
    5a44:	e8 94       	clt
    5a46:	a5 91       	lpm	r26, Z+
    5a48:	25 91       	lpm	r18, Z+
    5a4a:	35 91       	lpm	r19, Z+
    5a4c:	45 91       	lpm	r20, Z+
    5a4e:	55 91       	lpm	r21, Z+
    5a50:	ae f3       	brts	.-22     	; 0x5a3c <__fp_powser+0x16>
    5a52:	ef 01       	movw	r28, r30
    5a54:	29 de       	rcall	.-942    	; 0x56a8 <__addsf3x>
    5a56:	fe 01       	movw	r30, r28
    5a58:	97 01       	movw	r18, r14
    5a5a:	a8 01       	movw	r20, r16
    5a5c:	da 94       	dec	r13
    5a5e:	79 f7       	brne	.-34     	; 0x5a3e <__fp_powser+0x18>
    5a60:	df 90       	pop	r13
    5a62:	ef 90       	pop	r14
    5a64:	ff 90       	pop	r15
    5a66:	0f 91       	pop	r16
    5a68:	1f 91       	pop	r17
    5a6a:	cf 91       	pop	r28
    5a6c:	df 91       	pop	r29
    5a6e:	08 95       	ret

00005a70 <__fp_pscA>:
    5a70:	00 24       	eor	r0, r0
    5a72:	0a 94       	dec	r0
    5a74:	16 16       	cp	r1, r22
    5a76:	17 06       	cpc	r1, r23
    5a78:	18 06       	cpc	r1, r24
    5a7a:	09 06       	cpc	r0, r25
    5a7c:	08 95       	ret

00005a7e <__fp_pscB>:
    5a7e:	00 24       	eor	r0, r0
    5a80:	0a 94       	dec	r0
    5a82:	12 16       	cp	r1, r18
    5a84:	13 06       	cpc	r1, r19
    5a86:	14 06       	cpc	r1, r20
    5a88:	05 06       	cpc	r0, r21
    5a8a:	08 95       	ret
    5a8c:	c9 cf       	rjmp	.-110    	; 0x5a20 <__fp_nan>

00005a8e <__fp_rempio2>:
    5a8e:	50 d0       	rcall	.+160    	; 0x5b30 <__fp_splitA>
    5a90:	e8 f3       	brcs	.-6      	; 0x5a8c <__fp_pscB+0xe>
    5a92:	e8 94       	clt
    5a94:	e0 e0       	ldi	r30, 0x00	; 0
    5a96:	bb 27       	eor	r27, r27
    5a98:	9f 57       	subi	r25, 0x7F	; 127
    5a9a:	f0 f0       	brcs	.+60     	; 0x5ad8 <__fp_rempio2+0x4a>
    5a9c:	2a ed       	ldi	r18, 0xDA	; 218
    5a9e:	3f e0       	ldi	r19, 0x0F	; 15
    5aa0:	49 ec       	ldi	r20, 0xC9	; 201
    5aa2:	06 c0       	rjmp	.+12     	; 0x5ab0 <__fp_rempio2+0x22>
    5aa4:	ee 0f       	add	r30, r30
    5aa6:	bb 0f       	add	r27, r27
    5aa8:	66 1f       	adc	r22, r22
    5aaa:	77 1f       	adc	r23, r23
    5aac:	88 1f       	adc	r24, r24
    5aae:	28 f0       	brcs	.+10     	; 0x5aba <__fp_rempio2+0x2c>
    5ab0:	b2 3a       	cpi	r27, 0xA2	; 162
    5ab2:	62 07       	cpc	r22, r18
    5ab4:	73 07       	cpc	r23, r19
    5ab6:	84 07       	cpc	r24, r20
    5ab8:	28 f0       	brcs	.+10     	; 0x5ac4 <__fp_rempio2+0x36>
    5aba:	b2 5a       	subi	r27, 0xA2	; 162
    5abc:	62 0b       	sbc	r22, r18
    5abe:	73 0b       	sbc	r23, r19
    5ac0:	84 0b       	sbc	r24, r20
    5ac2:	e3 95       	inc	r30
    5ac4:	9a 95       	dec	r25
    5ac6:	72 f7       	brpl	.-36     	; 0x5aa4 <__fp_rempio2+0x16>
    5ac8:	80 38       	cpi	r24, 0x80	; 128
    5aca:	30 f4       	brcc	.+12     	; 0x5ad8 <__fp_rempio2+0x4a>
    5acc:	9a 95       	dec	r25
    5ace:	bb 0f       	add	r27, r27
    5ad0:	66 1f       	adc	r22, r22
    5ad2:	77 1f       	adc	r23, r23
    5ad4:	88 1f       	adc	r24, r24
    5ad6:	d2 f7       	brpl	.-12     	; 0x5acc <__fp_rempio2+0x3e>
    5ad8:	90 48       	sbci	r25, 0x80	; 128
    5ada:	29 c1       	rjmp	.+594    	; 0x5d2e <__fp_mpack_finite>

00005adc <__fp_round>:
    5adc:	09 2e       	mov	r0, r25
    5ade:	03 94       	inc	r0
    5ae0:	00 0c       	add	r0, r0
    5ae2:	11 f4       	brne	.+4      	; 0x5ae8 <__fp_round+0xc>
    5ae4:	88 23       	and	r24, r24
    5ae6:	52 f0       	brmi	.+20     	; 0x5afc <__fp_round+0x20>
    5ae8:	bb 0f       	add	r27, r27
    5aea:	40 f4       	brcc	.+16     	; 0x5afc <__fp_round+0x20>
    5aec:	bf 2b       	or	r27, r31
    5aee:	11 f4       	brne	.+4      	; 0x5af4 <__fp_round+0x18>
    5af0:	60 ff       	sbrs	r22, 0
    5af2:	04 c0       	rjmp	.+8      	; 0x5afc <__fp_round+0x20>
    5af4:	6f 5f       	subi	r22, 0xFF	; 255
    5af6:	7f 4f       	sbci	r23, 0xFF	; 255
    5af8:	8f 4f       	sbci	r24, 0xFF	; 255
    5afa:	9f 4f       	sbci	r25, 0xFF	; 255
    5afc:	08 95       	ret

00005afe <__fp_sinus>:
    5afe:	ef 93       	push	r30
    5b00:	e0 ff       	sbrs	r30, 0
    5b02:	06 c0       	rjmp	.+12     	; 0x5b10 <__fp_sinus+0x12>
    5b04:	a2 ea       	ldi	r26, 0xA2	; 162
    5b06:	2a ed       	ldi	r18, 0xDA	; 218
    5b08:	3f e0       	ldi	r19, 0x0F	; 15
    5b0a:	49 ec       	ldi	r20, 0xC9	; 201
    5b0c:	5f eb       	ldi	r21, 0xBF	; 191
    5b0e:	cc dd       	rcall	.-1128   	; 0x56a8 <__addsf3x>
    5b10:	e5 df       	rcall	.-54     	; 0x5adc <__fp_round>
    5b12:	0f 90       	pop	r0
    5b14:	03 94       	inc	r0
    5b16:	01 fc       	sbrc	r0, 1
    5b18:	90 58       	subi	r25, 0x80	; 128
    5b1a:	eb ee       	ldi	r30, 0xEB	; 235
    5b1c:	f0 e0       	ldi	r31, 0x00	; 0
    5b1e:	13 c1       	rjmp	.+550    	; 0x5d46 <__fp_powsodd>

00005b20 <__fp_split3>:
    5b20:	57 fd       	sbrc	r21, 7
    5b22:	90 58       	subi	r25, 0x80	; 128
    5b24:	44 0f       	add	r20, r20
    5b26:	55 1f       	adc	r21, r21
    5b28:	59 f0       	breq	.+22     	; 0x5b40 <__fp_splitA+0x10>
    5b2a:	5f 3f       	cpi	r21, 0xFF	; 255
    5b2c:	71 f0       	breq	.+28     	; 0x5b4a <__fp_splitA+0x1a>
    5b2e:	47 95       	ror	r20

00005b30 <__fp_splitA>:
    5b30:	88 0f       	add	r24, r24
    5b32:	97 fb       	bst	r25, 7
    5b34:	99 1f       	adc	r25, r25
    5b36:	61 f0       	breq	.+24     	; 0x5b50 <__fp_splitA+0x20>
    5b38:	9f 3f       	cpi	r25, 0xFF	; 255
    5b3a:	79 f0       	breq	.+30     	; 0x5b5a <__fp_splitA+0x2a>
    5b3c:	87 95       	ror	r24
    5b3e:	08 95       	ret
    5b40:	12 16       	cp	r1, r18
    5b42:	13 06       	cpc	r1, r19
    5b44:	14 06       	cpc	r1, r20
    5b46:	55 1f       	adc	r21, r21
    5b48:	f2 cf       	rjmp	.-28     	; 0x5b2e <__fp_split3+0xe>
    5b4a:	46 95       	lsr	r20
    5b4c:	f1 df       	rcall	.-30     	; 0x5b30 <__fp_splitA>
    5b4e:	08 c0       	rjmp	.+16     	; 0x5b60 <__fp_splitA+0x30>
    5b50:	16 16       	cp	r1, r22
    5b52:	17 06       	cpc	r1, r23
    5b54:	18 06       	cpc	r1, r24
    5b56:	99 1f       	adc	r25, r25
    5b58:	f1 cf       	rjmp	.-30     	; 0x5b3c <__fp_splitA+0xc>
    5b5a:	86 95       	lsr	r24
    5b5c:	71 05       	cpc	r23, r1
    5b5e:	61 05       	cpc	r22, r1
    5b60:	08 94       	sec
    5b62:	08 95       	ret

00005b64 <__fp_zero>:
    5b64:	e8 94       	clt

00005b66 <__fp_szero>:
    5b66:	bb 27       	eor	r27, r27
    5b68:	66 27       	eor	r22, r22
    5b6a:	77 27       	eor	r23, r23
    5b6c:	cb 01       	movw	r24, r22
    5b6e:	97 f9       	bld	r25, 7
    5b70:	08 95       	ret

00005b72 <__gesf2>:
    5b72:	2c df       	rcall	.-424    	; 0x59cc <__fp_cmp>
    5b74:	08 f4       	brcc	.+2      	; 0x5b78 <__gesf2+0x6>
    5b76:	8f ef       	ldi	r24, 0xFF	; 255
    5b78:	08 95       	ret

00005b7a <inverse>:
    5b7a:	9b 01       	movw	r18, r22
    5b7c:	ac 01       	movw	r20, r24
    5b7e:	60 e0       	ldi	r22, 0x00	; 0
    5b80:	70 e0       	ldi	r23, 0x00	; 0
    5b82:	80 e8       	ldi	r24, 0x80	; 128
    5b84:	9f e3       	ldi	r25, 0x3F	; 63
    5b86:	4c ce       	rjmp	.-872    	; 0x5820 <__divsf3>
    5b88:	0e f0       	brts	.+2      	; 0x5b8c <inverse+0x12>
    5b8a:	cf c0       	rjmp	.+414    	; 0x5d2a <__fp_mpack>
    5b8c:	49 cf       	rjmp	.-366    	; 0x5a20 <__fp_nan>
    5b8e:	68 94       	set
    5b90:	41 cf       	rjmp	.-382    	; 0x5a14 <__fp_inf>

00005b92 <log>:
    5b92:	ce df       	rcall	.-100    	; 0x5b30 <__fp_splitA>
    5b94:	c8 f3       	brcs	.-14     	; 0x5b88 <inverse+0xe>
    5b96:	99 23       	and	r25, r25
    5b98:	d1 f3       	breq	.-12     	; 0x5b8e <inverse+0x14>
    5b9a:	c6 f3       	brts	.-16     	; 0x5b8c <inverse+0x12>
    5b9c:	df 93       	push	r29
    5b9e:	cf 93       	push	r28
    5ba0:	1f 93       	push	r17
    5ba2:	0f 93       	push	r16
    5ba4:	ff 92       	push	r15
    5ba6:	c9 2f       	mov	r28, r25
    5ba8:	dd 27       	eor	r29, r29
    5baa:	88 23       	and	r24, r24
    5bac:	2a f0       	brmi	.+10     	; 0x5bb8 <log+0x26>
    5bae:	21 97       	sbiw	r28, 0x01	; 1
    5bb0:	66 0f       	add	r22, r22
    5bb2:	77 1f       	adc	r23, r23
    5bb4:	88 1f       	adc	r24, r24
    5bb6:	da f7       	brpl	.-10     	; 0x5bae <log+0x1c>
    5bb8:	20 e0       	ldi	r18, 0x00	; 0
    5bba:	30 e0       	ldi	r19, 0x00	; 0
    5bbc:	40 e8       	ldi	r20, 0x80	; 128
    5bbe:	5f eb       	ldi	r21, 0xBF	; 191
    5bc0:	9f e3       	ldi	r25, 0x3F	; 63
    5bc2:	88 39       	cpi	r24, 0x98	; 152
    5bc4:	20 f0       	brcs	.+8      	; 0x5bce <log+0x3c>
    5bc6:	80 3e       	cpi	r24, 0xE0	; 224
    5bc8:	30 f0       	brcs	.+12     	; 0x5bd6 <log+0x44>
    5bca:	21 96       	adiw	r28, 0x01	; 1
    5bcc:	8f 77       	andi	r24, 0x7F	; 127
    5bce:	5b dd       	rcall	.-1354   	; 0x5686 <__addsf3>
    5bd0:	e9 e0       	ldi	r30, 0x09	; 9
    5bd2:	f1 e0       	ldi	r31, 0x01	; 1
    5bd4:	03 c0       	rjmp	.+6      	; 0x5bdc <log+0x4a>
    5bd6:	57 dd       	rcall	.-1362   	; 0x5686 <__addsf3>
    5bd8:	e6 e3       	ldi	r30, 0x36	; 54
    5bda:	f1 e0       	ldi	r31, 0x01	; 1
    5bdc:	24 df       	rcall	.-440    	; 0x5a26 <__fp_powser>
    5bde:	8b 01       	movw	r16, r22
    5be0:	be 01       	movw	r22, r28
    5be2:	ec 01       	movw	r28, r24
    5be4:	fb 2e       	mov	r15, r27
    5be6:	6f 57       	subi	r22, 0x7F	; 127
    5be8:	71 09       	sbc	r23, r1
    5bea:	75 95       	asr	r23
    5bec:	77 1f       	adc	r23, r23
    5bee:	88 0b       	sbc	r24, r24
    5bf0:	99 0b       	sbc	r25, r25
    5bf2:	b1 de       	rcall	.-670    	; 0x5956 <__floatsisf>
    5bf4:	28 e1       	ldi	r18, 0x18	; 24
    5bf6:	32 e7       	ldi	r19, 0x72	; 114
    5bf8:	41 e3       	ldi	r20, 0x31	; 49
    5bfa:	5f e3       	ldi	r21, 0x3F	; 63
    5bfc:	16 d0       	rcall	.+44     	; 0x5c2a <__mulsf3x>
    5bfe:	af 2d       	mov	r26, r15
    5c00:	98 01       	movw	r18, r16
    5c02:	ae 01       	movw	r20, r28
    5c04:	ff 90       	pop	r15
    5c06:	0f 91       	pop	r16
    5c08:	1f 91       	pop	r17
    5c0a:	cf 91       	pop	r28
    5c0c:	df 91       	pop	r29
    5c0e:	4c dd       	rcall	.-1384   	; 0x56a8 <__addsf3x>
    5c10:	65 cf       	rjmp	.-310    	; 0x5adc <__fp_round>

00005c12 <__mulsf3>:
    5c12:	0b d0       	rcall	.+22     	; 0x5c2a <__mulsf3x>
    5c14:	63 cf       	rjmp	.-314    	; 0x5adc <__fp_round>
    5c16:	2c df       	rcall	.-424    	; 0x5a70 <__fp_pscA>
    5c18:	28 f0       	brcs	.+10     	; 0x5c24 <__mulsf3+0x12>
    5c1a:	31 df       	rcall	.-414    	; 0x5a7e <__fp_pscB>
    5c1c:	18 f0       	brcs	.+6      	; 0x5c24 <__mulsf3+0x12>
    5c1e:	95 23       	and	r25, r21
    5c20:	09 f0       	breq	.+2      	; 0x5c24 <__mulsf3+0x12>
    5c22:	f8 ce       	rjmp	.-528    	; 0x5a14 <__fp_inf>
    5c24:	fd ce       	rjmp	.-518    	; 0x5a20 <__fp_nan>
    5c26:	11 24       	eor	r1, r1
    5c28:	9e cf       	rjmp	.-196    	; 0x5b66 <__fp_szero>

00005c2a <__mulsf3x>:
    5c2a:	7a df       	rcall	.-268    	; 0x5b20 <__fp_split3>
    5c2c:	a0 f3       	brcs	.-24     	; 0x5c16 <__mulsf3+0x4>

00005c2e <__mulsf3_pse>:
    5c2e:	95 9f       	mul	r25, r21
    5c30:	d1 f3       	breq	.-12     	; 0x5c26 <__mulsf3+0x14>
    5c32:	95 0f       	add	r25, r21
    5c34:	50 e0       	ldi	r21, 0x00	; 0
    5c36:	55 1f       	adc	r21, r21
    5c38:	62 9f       	mul	r22, r18
    5c3a:	f0 01       	movw	r30, r0
    5c3c:	72 9f       	mul	r23, r18
    5c3e:	bb 27       	eor	r27, r27
    5c40:	f0 0d       	add	r31, r0
    5c42:	b1 1d       	adc	r27, r1
    5c44:	63 9f       	mul	r22, r19
    5c46:	aa 27       	eor	r26, r26
    5c48:	f0 0d       	add	r31, r0
    5c4a:	b1 1d       	adc	r27, r1
    5c4c:	aa 1f       	adc	r26, r26
    5c4e:	64 9f       	mul	r22, r20
    5c50:	66 27       	eor	r22, r22
    5c52:	b0 0d       	add	r27, r0
    5c54:	a1 1d       	adc	r26, r1
    5c56:	66 1f       	adc	r22, r22
    5c58:	82 9f       	mul	r24, r18
    5c5a:	22 27       	eor	r18, r18
    5c5c:	b0 0d       	add	r27, r0
    5c5e:	a1 1d       	adc	r26, r1
    5c60:	62 1f       	adc	r22, r18
    5c62:	73 9f       	mul	r23, r19
    5c64:	b0 0d       	add	r27, r0
    5c66:	a1 1d       	adc	r26, r1
    5c68:	62 1f       	adc	r22, r18
    5c6a:	83 9f       	mul	r24, r19
    5c6c:	a0 0d       	add	r26, r0
    5c6e:	61 1d       	adc	r22, r1
    5c70:	22 1f       	adc	r18, r18
    5c72:	74 9f       	mul	r23, r20
    5c74:	33 27       	eor	r19, r19
    5c76:	a0 0d       	add	r26, r0
    5c78:	61 1d       	adc	r22, r1
    5c7a:	23 1f       	adc	r18, r19
    5c7c:	84 9f       	mul	r24, r20
    5c7e:	60 0d       	add	r22, r0
    5c80:	21 1d       	adc	r18, r1
    5c82:	82 2f       	mov	r24, r18
    5c84:	76 2f       	mov	r23, r22
    5c86:	6a 2f       	mov	r22, r26
    5c88:	11 24       	eor	r1, r1
    5c8a:	9f 57       	subi	r25, 0x7F	; 127
    5c8c:	50 40       	sbci	r21, 0x00	; 0
    5c8e:	8a f0       	brmi	.+34     	; 0x5cb2 <__mulsf3_pse+0x84>
    5c90:	e1 f0       	breq	.+56     	; 0x5cca <__mulsf3_pse+0x9c>
    5c92:	88 23       	and	r24, r24
    5c94:	4a f0       	brmi	.+18     	; 0x5ca8 <__mulsf3_pse+0x7a>
    5c96:	ee 0f       	add	r30, r30
    5c98:	ff 1f       	adc	r31, r31
    5c9a:	bb 1f       	adc	r27, r27
    5c9c:	66 1f       	adc	r22, r22
    5c9e:	77 1f       	adc	r23, r23
    5ca0:	88 1f       	adc	r24, r24
    5ca2:	91 50       	subi	r25, 0x01	; 1
    5ca4:	50 40       	sbci	r21, 0x00	; 0
    5ca6:	a9 f7       	brne	.-22     	; 0x5c92 <__mulsf3_pse+0x64>
    5ca8:	9e 3f       	cpi	r25, 0xFE	; 254
    5caa:	51 05       	cpc	r21, r1
    5cac:	70 f0       	brcs	.+28     	; 0x5cca <__mulsf3_pse+0x9c>
    5cae:	b2 ce       	rjmp	.-668    	; 0x5a14 <__fp_inf>
    5cb0:	5a cf       	rjmp	.-332    	; 0x5b66 <__fp_szero>
    5cb2:	5f 3f       	cpi	r21, 0xFF	; 255
    5cb4:	ec f3       	brlt	.-6      	; 0x5cb0 <__mulsf3_pse+0x82>
    5cb6:	98 3e       	cpi	r25, 0xE8	; 232
    5cb8:	dc f3       	brlt	.-10     	; 0x5cb0 <__mulsf3_pse+0x82>
    5cba:	86 95       	lsr	r24
    5cbc:	77 95       	ror	r23
    5cbe:	67 95       	ror	r22
    5cc0:	b7 95       	ror	r27
    5cc2:	f7 95       	ror	r31
    5cc4:	e7 95       	ror	r30
    5cc6:	9f 5f       	subi	r25, 0xFF	; 255
    5cc8:	c1 f7       	brne	.-16     	; 0x5cba <__mulsf3_pse+0x8c>
    5cca:	fe 2b       	or	r31, r30
    5ccc:	88 0f       	add	r24, r24
    5cce:	91 1d       	adc	r25, r1
    5cd0:	96 95       	lsr	r25
    5cd2:	87 95       	ror	r24
    5cd4:	97 f9       	bld	r25, 7
    5cd6:	08 95       	ret

00005cd8 <sin>:
    5cd8:	9f 93       	push	r25
    5cda:	d9 de       	rcall	.-590    	; 0x5a8e <__fp_rempio2>
    5cdc:	0f 90       	pop	r0
    5cde:	07 fc       	sbrc	r0, 7
    5ce0:	ee 5f       	subi	r30, 0xFE	; 254
    5ce2:	0d cf       	rjmp	.-486    	; 0x5afe <__fp_sinus>

00005ce4 <square>:
    5ce4:	9b 01       	movw	r18, r22
    5ce6:	ac 01       	movw	r20, r24
    5ce8:	94 cf       	rjmp	.-216    	; 0x5c12 <__mulsf3>

00005cea <tan>:
    5cea:	df 93       	push	r29
    5cec:	d9 2f       	mov	r29, r25
    5cee:	cf de       	rcall	.-610    	; 0x5a8e <__fp_rempio2>
    5cf0:	e6 95       	lsr	r30
    5cf2:	d7 95       	ror	r29
    5cf4:	2a ed       	ldi	r18, 0xDA	; 218
    5cf6:	3f e0       	ldi	r19, 0x0F	; 15
    5cf8:	49 e4       	ldi	r20, 0x49	; 73
    5cfa:	5f e3       	ldi	r21, 0x3F	; 63
    5cfc:	b3 3a       	cpi	r27, 0xA3	; 163
    5cfe:	62 07       	cpc	r22, r18
    5d00:	73 07       	cpc	r23, r19
    5d02:	84 07       	cpc	r24, r20
    5d04:	95 07       	cpc	r25, r21
    5d06:	d7 95       	ror	r29
    5d08:	2a f0       	brmi	.+10     	; 0x5d14 <tan+0x2a>
    5d0a:	a2 ea       	ldi	r26, 0xA2	; 162
    5d0c:	49 ec       	ldi	r20, 0xC9	; 201
    5d0e:	90 68       	ori	r25, 0x80	; 128
    5d10:	cb dc       	rcall	.-1642   	; 0x56a8 <__addsf3x>
    5d12:	e4 de       	rcall	.-568    	; 0x5adc <__fp_round>
    5d14:	e3 e6       	ldi	r30, 0x63	; 99
    5d16:	f1 e0       	ldi	r31, 0x01	; 1
    5d18:	16 d0       	rcall	.+44     	; 0x5d46 <__fp_powsodd>
    5d1a:	dd 0f       	add	r29, r29
    5d1c:	0b f0       	brvs	.+2      	; 0x5d20 <tan+0x36>
    5d1e:	2d df       	rcall	.-422    	; 0x5b7a <inverse>
    5d20:	dd 0f       	add	r29, r29
    5d22:	0b f4       	brvc	.+2      	; 0x5d26 <tan+0x3c>
    5d24:	90 58       	subi	r25, 0x80	; 128
    5d26:	df 91       	pop	r29
    5d28:	08 95       	ret

00005d2a <__fp_mpack>:
    5d2a:	9f 3f       	cpi	r25, 0xFF	; 255
    5d2c:	31 f0       	breq	.+12     	; 0x5d3a <__fp_mpack_finite+0xc>

00005d2e <__fp_mpack_finite>:
    5d2e:	91 50       	subi	r25, 0x01	; 1
    5d30:	20 f4       	brcc	.+8      	; 0x5d3a <__fp_mpack_finite+0xc>
    5d32:	87 95       	ror	r24
    5d34:	77 95       	ror	r23
    5d36:	67 95       	ror	r22
    5d38:	b7 95       	ror	r27
    5d3a:	88 0f       	add	r24, r24
    5d3c:	91 1d       	adc	r25, r1
    5d3e:	96 95       	lsr	r25
    5d40:	87 95       	ror	r24
    5d42:	97 f9       	bld	r25, 7
    5d44:	08 95       	ret

00005d46 <__fp_powsodd>:
    5d46:	9f 93       	push	r25
    5d48:	8f 93       	push	r24
    5d4a:	7f 93       	push	r23
    5d4c:	6f 93       	push	r22
    5d4e:	ff 93       	push	r31
    5d50:	ef 93       	push	r30
    5d52:	9b 01       	movw	r18, r22
    5d54:	ac 01       	movw	r20, r24
    5d56:	5d df       	rcall	.-326    	; 0x5c12 <__mulsf3>
    5d58:	ef 91       	pop	r30
    5d5a:	ff 91       	pop	r31
    5d5c:	64 de       	rcall	.-824    	; 0x5a26 <__fp_powser>
    5d5e:	2f 91       	pop	r18
    5d60:	3f 91       	pop	r19
    5d62:	4f 91       	pop	r20
    5d64:	5f 91       	pop	r21
    5d66:	55 cf       	rjmp	.-342    	; 0x5c12 <__mulsf3>

00005d68 <vfprintf>:
    5d68:	2f 92       	push	r2
    5d6a:	3f 92       	push	r3
    5d6c:	4f 92       	push	r4
    5d6e:	5f 92       	push	r5
    5d70:	6f 92       	push	r6
    5d72:	7f 92       	push	r7
    5d74:	8f 92       	push	r8
    5d76:	9f 92       	push	r9
    5d78:	af 92       	push	r10
    5d7a:	bf 92       	push	r11
    5d7c:	cf 92       	push	r12
    5d7e:	df 92       	push	r13
    5d80:	ef 92       	push	r14
    5d82:	ff 92       	push	r15
    5d84:	0f 93       	push	r16
    5d86:	1f 93       	push	r17
    5d88:	cf 93       	push	r28
    5d8a:	df 93       	push	r29
    5d8c:	cd b7       	in	r28, 0x3d	; 61
    5d8e:	de b7       	in	r29, 0x3e	; 62
    5d90:	63 97       	sbiw	r28, 0x13	; 19
    5d92:	0f b6       	in	r0, 0x3f	; 63
    5d94:	f8 94       	cli
    5d96:	de bf       	out	0x3e, r29	; 62
    5d98:	0f be       	out	0x3f, r0	; 63
    5d9a:	cd bf       	out	0x3d, r28	; 61
    5d9c:	7c 01       	movw	r14, r24
    5d9e:	1b 01       	movw	r2, r22
    5da0:	6a 01       	movw	r12, r20
    5da2:	fc 01       	movw	r30, r24
    5da4:	17 82       	std	Z+7, r1	; 0x07
    5da6:	16 82       	std	Z+6, r1	; 0x06
    5da8:	83 81       	ldd	r24, Z+3	; 0x03
    5daa:	81 ff       	sbrs	r24, 1
    5dac:	49 c3       	rjmp	.+1682   	; 0x6440 <vfprintf+0x6d8>
    5dae:	be 01       	movw	r22, r28
    5db0:	6f 5f       	subi	r22, 0xFF	; 255
    5db2:	7f 4f       	sbci	r23, 0xFF	; 255
    5db4:	4b 01       	movw	r8, r22
    5db6:	f7 01       	movw	r30, r14
    5db8:	93 81       	ldd	r25, Z+3	; 0x03
    5dba:	f1 01       	movw	r30, r2
    5dbc:	93 fd       	sbrc	r25, 3
    5dbe:	85 91       	lpm	r24, Z+
    5dc0:	93 ff       	sbrs	r25, 3
    5dc2:	81 91       	ld	r24, Z+
    5dc4:	1f 01       	movw	r2, r30
    5dc6:	88 23       	and	r24, r24
    5dc8:	09 f4       	brne	.+2      	; 0x5dcc <vfprintf+0x64>
    5dca:	36 c3       	rjmp	.+1644   	; 0x6438 <vfprintf+0x6d0>
    5dcc:	85 32       	cpi	r24, 0x25	; 37
    5dce:	39 f4       	brne	.+14     	; 0x5dde <vfprintf+0x76>
    5dd0:	93 fd       	sbrc	r25, 3
    5dd2:	85 91       	lpm	r24, Z+
    5dd4:	93 ff       	sbrs	r25, 3
    5dd6:	81 91       	ld	r24, Z+
    5dd8:	1f 01       	movw	r2, r30
    5dda:	85 32       	cpi	r24, 0x25	; 37
    5ddc:	31 f4       	brne	.+12     	; 0x5dea <vfprintf+0x82>
    5dde:	b7 01       	movw	r22, r14
    5de0:	90 e0       	ldi	r25, 0x00	; 0
    5de2:	77 d4       	rcall	.+2286   	; 0x66d2 <fputc>
    5de4:	56 01       	movw	r10, r12
    5de6:	65 01       	movw	r12, r10
    5de8:	e6 cf       	rjmp	.-52     	; 0x5db6 <vfprintf+0x4e>
    5dea:	10 e0       	ldi	r17, 0x00	; 0
    5dec:	51 2c       	mov	r5, r1
    5dee:	20 e0       	ldi	r18, 0x00	; 0
    5df0:	20 32       	cpi	r18, 0x20	; 32
    5df2:	a0 f4       	brcc	.+40     	; 0x5e1c <vfprintf+0xb4>
    5df4:	8b 32       	cpi	r24, 0x2B	; 43
    5df6:	69 f0       	breq	.+26     	; 0x5e12 <vfprintf+0xaa>
    5df8:	30 f4       	brcc	.+12     	; 0x5e06 <vfprintf+0x9e>
    5dfa:	80 32       	cpi	r24, 0x20	; 32
    5dfc:	59 f0       	breq	.+22     	; 0x5e14 <vfprintf+0xac>
    5dfe:	83 32       	cpi	r24, 0x23	; 35
    5e00:	69 f4       	brne	.+26     	; 0x5e1c <vfprintf+0xb4>
    5e02:	20 61       	ori	r18, 0x10	; 16
    5e04:	2c c0       	rjmp	.+88     	; 0x5e5e <vfprintf+0xf6>
    5e06:	8d 32       	cpi	r24, 0x2D	; 45
    5e08:	39 f0       	breq	.+14     	; 0x5e18 <vfprintf+0xb0>
    5e0a:	80 33       	cpi	r24, 0x30	; 48
    5e0c:	39 f4       	brne	.+14     	; 0x5e1c <vfprintf+0xb4>
    5e0e:	21 60       	ori	r18, 0x01	; 1
    5e10:	26 c0       	rjmp	.+76     	; 0x5e5e <vfprintf+0xf6>
    5e12:	22 60       	ori	r18, 0x02	; 2
    5e14:	24 60       	ori	r18, 0x04	; 4
    5e16:	23 c0       	rjmp	.+70     	; 0x5e5e <vfprintf+0xf6>
    5e18:	28 60       	ori	r18, 0x08	; 8
    5e1a:	21 c0       	rjmp	.+66     	; 0x5e5e <vfprintf+0xf6>
    5e1c:	27 fd       	sbrc	r18, 7
    5e1e:	27 c0       	rjmp	.+78     	; 0x5e6e <vfprintf+0x106>
    5e20:	30 ed       	ldi	r19, 0xD0	; 208
    5e22:	38 0f       	add	r19, r24
    5e24:	3a 30       	cpi	r19, 0x0A	; 10
    5e26:	78 f4       	brcc	.+30     	; 0x5e46 <vfprintf+0xde>
    5e28:	26 ff       	sbrs	r18, 6
    5e2a:	06 c0       	rjmp	.+12     	; 0x5e38 <vfprintf+0xd0>
    5e2c:	fa e0       	ldi	r31, 0x0A	; 10
    5e2e:	1f 9f       	mul	r17, r31
    5e30:	30 0d       	add	r19, r0
    5e32:	11 24       	eor	r1, r1
    5e34:	13 2f       	mov	r17, r19
    5e36:	13 c0       	rjmp	.+38     	; 0x5e5e <vfprintf+0xf6>
    5e38:	6a e0       	ldi	r22, 0x0A	; 10
    5e3a:	56 9e       	mul	r5, r22
    5e3c:	30 0d       	add	r19, r0
    5e3e:	11 24       	eor	r1, r1
    5e40:	53 2e       	mov	r5, r19
    5e42:	20 62       	ori	r18, 0x20	; 32
    5e44:	0c c0       	rjmp	.+24     	; 0x5e5e <vfprintf+0xf6>
    5e46:	8e 32       	cpi	r24, 0x2E	; 46
    5e48:	21 f4       	brne	.+8      	; 0x5e52 <vfprintf+0xea>
    5e4a:	26 fd       	sbrc	r18, 6
    5e4c:	f5 c2       	rjmp	.+1514   	; 0x6438 <vfprintf+0x6d0>
    5e4e:	20 64       	ori	r18, 0x40	; 64
    5e50:	06 c0       	rjmp	.+12     	; 0x5e5e <vfprintf+0xf6>
    5e52:	8c 36       	cpi	r24, 0x6C	; 108
    5e54:	11 f4       	brne	.+4      	; 0x5e5a <vfprintf+0xf2>
    5e56:	20 68       	ori	r18, 0x80	; 128
    5e58:	02 c0       	rjmp	.+4      	; 0x5e5e <vfprintf+0xf6>
    5e5a:	88 36       	cpi	r24, 0x68	; 104
    5e5c:	41 f4       	brne	.+16     	; 0x5e6e <vfprintf+0x106>
    5e5e:	f1 01       	movw	r30, r2
    5e60:	93 fd       	sbrc	r25, 3
    5e62:	85 91       	lpm	r24, Z+
    5e64:	93 ff       	sbrs	r25, 3
    5e66:	81 91       	ld	r24, Z+
    5e68:	1f 01       	movw	r2, r30
    5e6a:	81 11       	cpse	r24, r1
    5e6c:	c1 cf       	rjmp	.-126    	; 0x5df0 <vfprintf+0x88>
    5e6e:	9b eb       	ldi	r25, 0xBB	; 187
    5e70:	98 0f       	add	r25, r24
    5e72:	93 30       	cpi	r25, 0x03	; 3
    5e74:	18 f4       	brcc	.+6      	; 0x5e7c <vfprintf+0x114>
    5e76:	20 61       	ori	r18, 0x10	; 16
    5e78:	80 5e       	subi	r24, 0xE0	; 224
    5e7a:	06 c0       	rjmp	.+12     	; 0x5e88 <vfprintf+0x120>
    5e7c:	9b e9       	ldi	r25, 0x9B	; 155
    5e7e:	98 0f       	add	r25, r24
    5e80:	93 30       	cpi	r25, 0x03	; 3
    5e82:	08 f0       	brcs	.+2      	; 0x5e86 <vfprintf+0x11e>
    5e84:	9a c1       	rjmp	.+820    	; 0x61ba <vfprintf+0x452>
    5e86:	2f 7e       	andi	r18, 0xEF	; 239
    5e88:	26 ff       	sbrs	r18, 6
    5e8a:	16 e0       	ldi	r17, 0x06	; 6
    5e8c:	2f 73       	andi	r18, 0x3F	; 63
    5e8e:	72 2e       	mov	r7, r18
    5e90:	85 36       	cpi	r24, 0x65	; 101
    5e92:	21 f4       	brne	.+8      	; 0x5e9c <vfprintf+0x134>
    5e94:	f2 2f       	mov	r31, r18
    5e96:	f0 64       	ori	r31, 0x40	; 64
    5e98:	7f 2e       	mov	r7, r31
    5e9a:	08 c0       	rjmp	.+16     	; 0x5eac <vfprintf+0x144>
    5e9c:	86 36       	cpi	r24, 0x66	; 102
    5e9e:	21 f4       	brne	.+8      	; 0x5ea8 <vfprintf+0x140>
    5ea0:	62 2f       	mov	r22, r18
    5ea2:	60 68       	ori	r22, 0x80	; 128
    5ea4:	76 2e       	mov	r7, r22
    5ea6:	02 c0       	rjmp	.+4      	; 0x5eac <vfprintf+0x144>
    5ea8:	11 11       	cpse	r17, r1
    5eaa:	11 50       	subi	r17, 0x01	; 1
    5eac:	77 fe       	sbrs	r7, 7
    5eae:	07 c0       	rjmp	.+14     	; 0x5ebe <vfprintf+0x156>
    5eb0:	1c 33       	cpi	r17, 0x3C	; 60
    5eb2:	48 f4       	brcc	.+18     	; 0x5ec6 <vfprintf+0x15e>
    5eb4:	44 24       	eor	r4, r4
    5eb6:	43 94       	inc	r4
    5eb8:	41 0e       	add	r4, r17
    5eba:	27 e0       	ldi	r18, 0x07	; 7
    5ebc:	0b c0       	rjmp	.+22     	; 0x5ed4 <vfprintf+0x16c>
    5ebe:	18 30       	cpi	r17, 0x08	; 8
    5ec0:	30 f4       	brcc	.+12     	; 0x5ece <vfprintf+0x166>
    5ec2:	21 2f       	mov	r18, r17
    5ec4:	06 c0       	rjmp	.+12     	; 0x5ed2 <vfprintf+0x16a>
    5ec6:	27 e0       	ldi	r18, 0x07	; 7
    5ec8:	4c e3       	ldi	r20, 0x3C	; 60
    5eca:	44 2e       	mov	r4, r20
    5ecc:	03 c0       	rjmp	.+6      	; 0x5ed4 <vfprintf+0x16c>
    5ece:	27 e0       	ldi	r18, 0x07	; 7
    5ed0:	17 e0       	ldi	r17, 0x07	; 7
    5ed2:	41 2c       	mov	r4, r1
    5ed4:	56 01       	movw	r10, r12
    5ed6:	74 e0       	ldi	r23, 0x04	; 4
    5ed8:	a7 0e       	add	r10, r23
    5eda:	b1 1c       	adc	r11, r1
    5edc:	f6 01       	movw	r30, r12
    5ede:	60 81       	ld	r22, Z
    5ee0:	71 81       	ldd	r23, Z+1	; 0x01
    5ee2:	82 81       	ldd	r24, Z+2	; 0x02
    5ee4:	93 81       	ldd	r25, Z+3	; 0x03
    5ee6:	04 2d       	mov	r16, r4
    5ee8:	a4 01       	movw	r20, r8
    5eea:	05 d3       	rcall	.+1546   	; 0x64f6 <__ftoa_engine>
    5eec:	6c 01       	movw	r12, r24
    5eee:	09 81       	ldd	r16, Y+1	; 0x01
    5ef0:	00 ff       	sbrs	r16, 0
    5ef2:	02 c0       	rjmp	.+4      	; 0x5ef8 <vfprintf+0x190>
    5ef4:	03 ff       	sbrs	r16, 3
    5ef6:	06 c0       	rjmp	.+12     	; 0x5f04 <vfprintf+0x19c>
    5ef8:	71 fc       	sbrc	r7, 1
    5efa:	07 c0       	rjmp	.+14     	; 0x5f0a <vfprintf+0x1a2>
    5efc:	72 fc       	sbrc	r7, 2
    5efe:	08 c0       	rjmp	.+16     	; 0x5f10 <vfprintf+0x1a8>
    5f00:	61 2c       	mov	r6, r1
    5f02:	08 c0       	rjmp	.+16     	; 0x5f14 <vfprintf+0x1ac>
    5f04:	3d e2       	ldi	r19, 0x2D	; 45
    5f06:	63 2e       	mov	r6, r19
    5f08:	05 c0       	rjmp	.+10     	; 0x5f14 <vfprintf+0x1ac>
    5f0a:	2b e2       	ldi	r18, 0x2B	; 43
    5f0c:	62 2e       	mov	r6, r18
    5f0e:	02 c0       	rjmp	.+4      	; 0x5f14 <vfprintf+0x1ac>
    5f10:	90 e2       	ldi	r25, 0x20	; 32
    5f12:	69 2e       	mov	r6, r25
    5f14:	80 2f       	mov	r24, r16
    5f16:	8c 70       	andi	r24, 0x0C	; 12
    5f18:	81 f1       	breq	.+96     	; 0x5f7a <vfprintf+0x212>
    5f1a:	66 20       	and	r6, r6
    5f1c:	11 f0       	breq	.+4      	; 0x5f22 <vfprintf+0x1ba>
    5f1e:	84 e0       	ldi	r24, 0x04	; 4
    5f20:	01 c0       	rjmp	.+2      	; 0x5f24 <vfprintf+0x1bc>
    5f22:	83 e0       	ldi	r24, 0x03	; 3
    5f24:	85 15       	cp	r24, r5
    5f26:	10 f0       	brcs	.+4      	; 0x5f2c <vfprintf+0x1c4>
    5f28:	51 2c       	mov	r5, r1
    5f2a:	0a c0       	rjmp	.+20     	; 0x5f40 <vfprintf+0x1d8>
    5f2c:	58 1a       	sub	r5, r24
    5f2e:	73 fc       	sbrc	r7, 3
    5f30:	07 c0       	rjmp	.+14     	; 0x5f40 <vfprintf+0x1d8>
    5f32:	b7 01       	movw	r22, r14
    5f34:	80 e2       	ldi	r24, 0x20	; 32
    5f36:	90 e0       	ldi	r25, 0x00	; 0
    5f38:	cc d3       	rcall	.+1944   	; 0x66d2 <fputc>
    5f3a:	5a 94       	dec	r5
    5f3c:	d1 f7       	brne	.-12     	; 0x5f32 <vfprintf+0x1ca>
    5f3e:	f4 cf       	rjmp	.-24     	; 0x5f28 <vfprintf+0x1c0>
    5f40:	66 20       	and	r6, r6
    5f42:	21 f0       	breq	.+8      	; 0x5f4c <vfprintf+0x1e4>
    5f44:	b7 01       	movw	r22, r14
    5f46:	86 2d       	mov	r24, r6
    5f48:	90 e0       	ldi	r25, 0x00	; 0
    5f4a:	c3 d3       	rcall	.+1926   	; 0x66d2 <fputc>
    5f4c:	03 fd       	sbrc	r16, 3
    5f4e:	03 c0       	rjmp	.+6      	; 0x5f56 <vfprintf+0x1ee>
    5f50:	00 ea       	ldi	r16, 0xA0	; 160
    5f52:	14 e0       	ldi	r17, 0x04	; 4
    5f54:	02 c0       	rjmp	.+4      	; 0x5f5a <vfprintf+0x1f2>
    5f56:	0c e9       	ldi	r16, 0x9C	; 156
    5f58:	14 e0       	ldi	r17, 0x04	; 4
    5f5a:	f7 2d       	mov	r31, r7
    5f5c:	f0 71       	andi	r31, 0x10	; 16
    5f5e:	7f 2e       	mov	r7, r31
    5f60:	f8 01       	movw	r30, r16
    5f62:	84 91       	lpm	r24, Z
    5f64:	88 23       	and	r24, r24
    5f66:	09 f4       	brne	.+2      	; 0x5f6a <vfprintf+0x202>
    5f68:	5e c2       	rjmp	.+1212   	; 0x6426 <vfprintf+0x6be>
    5f6a:	71 10       	cpse	r7, r1
    5f6c:	80 52       	subi	r24, 0x20	; 32
    5f6e:	b7 01       	movw	r22, r14
    5f70:	90 e0       	ldi	r25, 0x00	; 0
    5f72:	af d3       	rcall	.+1886   	; 0x66d2 <fputc>
    5f74:	0f 5f       	subi	r16, 0xFF	; 255
    5f76:	1f 4f       	sbci	r17, 0xFF	; 255
    5f78:	f3 cf       	rjmp	.-26     	; 0x5f60 <vfprintf+0x1f8>
    5f7a:	77 fe       	sbrs	r7, 7
    5f7c:	0f c0       	rjmp	.+30     	; 0x5f9c <vfprintf+0x234>
    5f7e:	4c 0c       	add	r4, r12
    5f80:	04 ff       	sbrs	r16, 4
    5f82:	04 c0       	rjmp	.+8      	; 0x5f8c <vfprintf+0x224>
    5f84:	8a 81       	ldd	r24, Y+2	; 0x02
    5f86:	81 33       	cpi	r24, 0x31	; 49
    5f88:	09 f4       	brne	.+2      	; 0x5f8c <vfprintf+0x224>
    5f8a:	4a 94       	dec	r4
    5f8c:	14 14       	cp	r1, r4
    5f8e:	74 f5       	brge	.+92     	; 0x5fec <vfprintf+0x284>
    5f90:	f8 e0       	ldi	r31, 0x08	; 8
    5f92:	f4 15       	cp	r31, r4
    5f94:	78 f5       	brcc	.+94     	; 0x5ff4 <vfprintf+0x28c>
    5f96:	88 e0       	ldi	r24, 0x08	; 8
    5f98:	48 2e       	mov	r4, r24
    5f9a:	2c c0       	rjmp	.+88     	; 0x5ff4 <vfprintf+0x28c>
    5f9c:	76 fc       	sbrc	r7, 6
    5f9e:	2a c0       	rjmp	.+84     	; 0x5ff4 <vfprintf+0x28c>
    5fa0:	81 2f       	mov	r24, r17
    5fa2:	90 e0       	ldi	r25, 0x00	; 0
    5fa4:	8c 15       	cp	r24, r12
    5fa6:	9d 05       	cpc	r25, r13
    5fa8:	9c f0       	brlt	.+38     	; 0x5fd0 <vfprintf+0x268>
    5faa:	6c ef       	ldi	r22, 0xFC	; 252
    5fac:	c6 16       	cp	r12, r22
    5fae:	6f ef       	ldi	r22, 0xFF	; 255
    5fb0:	d6 06       	cpc	r13, r22
    5fb2:	74 f0       	brlt	.+28     	; 0x5fd0 <vfprintf+0x268>
    5fb4:	77 2d       	mov	r23, r7
    5fb6:	70 68       	ori	r23, 0x80	; 128
    5fb8:	77 2e       	mov	r7, r23
    5fba:	0a c0       	rjmp	.+20     	; 0x5fd0 <vfprintf+0x268>
    5fbc:	e2 e0       	ldi	r30, 0x02	; 2
    5fbe:	f0 e0       	ldi	r31, 0x00	; 0
    5fc0:	ec 0f       	add	r30, r28
    5fc2:	fd 1f       	adc	r31, r29
    5fc4:	e1 0f       	add	r30, r17
    5fc6:	f1 1d       	adc	r31, r1
    5fc8:	80 81       	ld	r24, Z
    5fca:	80 33       	cpi	r24, 0x30	; 48
    5fcc:	19 f4       	brne	.+6      	; 0x5fd4 <vfprintf+0x26c>
    5fce:	11 50       	subi	r17, 0x01	; 1
    5fd0:	11 11       	cpse	r17, r1
    5fd2:	f4 cf       	rjmp	.-24     	; 0x5fbc <vfprintf+0x254>
    5fd4:	77 fe       	sbrs	r7, 7
    5fd6:	0e c0       	rjmp	.+28     	; 0x5ff4 <vfprintf+0x28c>
    5fd8:	44 24       	eor	r4, r4
    5fda:	43 94       	inc	r4
    5fdc:	41 0e       	add	r4, r17
    5fde:	81 2f       	mov	r24, r17
    5fe0:	90 e0       	ldi	r25, 0x00	; 0
    5fe2:	c8 16       	cp	r12, r24
    5fe4:	d9 06       	cpc	r13, r25
    5fe6:	2c f4       	brge	.+10     	; 0x5ff2 <vfprintf+0x28a>
    5fe8:	1c 19       	sub	r17, r12
    5fea:	04 c0       	rjmp	.+8      	; 0x5ff4 <vfprintf+0x28c>
    5fec:	44 24       	eor	r4, r4
    5fee:	43 94       	inc	r4
    5ff0:	01 c0       	rjmp	.+2      	; 0x5ff4 <vfprintf+0x28c>
    5ff2:	10 e0       	ldi	r17, 0x00	; 0
    5ff4:	77 fe       	sbrs	r7, 7
    5ff6:	07 c0       	rjmp	.+14     	; 0x6006 <vfprintf+0x29e>
    5ff8:	1c 14       	cp	r1, r12
    5ffa:	1d 04       	cpc	r1, r13
    5ffc:	3c f4       	brge	.+14     	; 0x600c <vfprintf+0x2a4>
    5ffe:	96 01       	movw	r18, r12
    6000:	2f 5f       	subi	r18, 0xFF	; 255
    6002:	3f 4f       	sbci	r19, 0xFF	; 255
    6004:	05 c0       	rjmp	.+10     	; 0x6010 <vfprintf+0x2a8>
    6006:	25 e0       	ldi	r18, 0x05	; 5
    6008:	30 e0       	ldi	r19, 0x00	; 0
    600a:	02 c0       	rjmp	.+4      	; 0x6010 <vfprintf+0x2a8>
    600c:	21 e0       	ldi	r18, 0x01	; 1
    600e:	30 e0       	ldi	r19, 0x00	; 0
    6010:	66 20       	and	r6, r6
    6012:	11 f0       	breq	.+4      	; 0x6018 <vfprintf+0x2b0>
    6014:	2f 5f       	subi	r18, 0xFF	; 255
    6016:	3f 4f       	sbci	r19, 0xFF	; 255
    6018:	11 23       	and	r17, r17
    601a:	31 f0       	breq	.+12     	; 0x6028 <vfprintf+0x2c0>
    601c:	41 2f       	mov	r20, r17
    601e:	50 e0       	ldi	r21, 0x00	; 0
    6020:	4f 5f       	subi	r20, 0xFF	; 255
    6022:	5f 4f       	sbci	r21, 0xFF	; 255
    6024:	24 0f       	add	r18, r20
    6026:	35 1f       	adc	r19, r21
    6028:	45 2d       	mov	r20, r5
    602a:	50 e0       	ldi	r21, 0x00	; 0
    602c:	24 17       	cp	r18, r20
    602e:	35 07       	cpc	r19, r21
    6030:	14 f4       	brge	.+4      	; 0x6036 <vfprintf+0x2ce>
    6032:	52 1a       	sub	r5, r18
    6034:	01 c0       	rjmp	.+2      	; 0x6038 <vfprintf+0x2d0>
    6036:	51 2c       	mov	r5, r1
    6038:	87 2d       	mov	r24, r7
    603a:	89 70       	andi	r24, 0x09	; 9
    603c:	41 f4       	brne	.+16     	; 0x604e <vfprintf+0x2e6>
    603e:	55 20       	and	r5, r5
    6040:	31 f0       	breq	.+12     	; 0x604e <vfprintf+0x2e6>
    6042:	b7 01       	movw	r22, r14
    6044:	80 e2       	ldi	r24, 0x20	; 32
    6046:	90 e0       	ldi	r25, 0x00	; 0
    6048:	44 d3       	rcall	.+1672   	; 0x66d2 <fputc>
    604a:	5a 94       	dec	r5
    604c:	f8 cf       	rjmp	.-16     	; 0x603e <vfprintf+0x2d6>
    604e:	66 20       	and	r6, r6
    6050:	21 f0       	breq	.+8      	; 0x605a <vfprintf+0x2f2>
    6052:	b7 01       	movw	r22, r14
    6054:	86 2d       	mov	r24, r6
    6056:	90 e0       	ldi	r25, 0x00	; 0
    6058:	3c d3       	rcall	.+1656   	; 0x66d2 <fputc>
    605a:	73 fc       	sbrc	r7, 3
    605c:	08 c0       	rjmp	.+16     	; 0x606e <vfprintf+0x306>
    605e:	55 20       	and	r5, r5
    6060:	31 f0       	breq	.+12     	; 0x606e <vfprintf+0x306>
    6062:	b7 01       	movw	r22, r14
    6064:	80 e3       	ldi	r24, 0x30	; 48
    6066:	90 e0       	ldi	r25, 0x00	; 0
    6068:	34 d3       	rcall	.+1640   	; 0x66d2 <fputc>
    606a:	5a 94       	dec	r5
    606c:	f8 cf       	rjmp	.-16     	; 0x605e <vfprintf+0x2f6>
    606e:	77 fe       	sbrs	r7, 7
    6070:	5d c0       	rjmp	.+186    	; 0x612c <vfprintf+0x3c4>
    6072:	9c 2d       	mov	r25, r12
    6074:	8d 2d       	mov	r24, r13
    6076:	d7 fe       	sbrs	r13, 7
    6078:	02 c0       	rjmp	.+4      	; 0x607e <vfprintf+0x316>
    607a:	90 e0       	ldi	r25, 0x00	; 0
    607c:	80 e0       	ldi	r24, 0x00	; 0
    607e:	69 2e       	mov	r6, r25
    6080:	78 2e       	mov	r7, r24
    6082:	40 e0       	ldi	r20, 0x00	; 0
    6084:	50 e0       	ldi	r21, 0x00	; 0
    6086:	c6 01       	movw	r24, r12
    6088:	84 19       	sub	r24, r4
    608a:	91 09       	sbc	r25, r1
    608c:	9d 87       	std	Y+13, r25	; 0x0d
    608e:	8c 87       	std	Y+12, r24	; 0x0c
    6090:	96 01       	movw	r18, r12
    6092:	26 19       	sub	r18, r6
    6094:	37 09       	sbc	r19, r7
    6096:	28 0d       	add	r18, r8
    6098:	39 1d       	adc	r19, r9
    609a:	81 2f       	mov	r24, r17
    609c:	90 e0       	ldi	r25, 0x00	; 0
    609e:	ee 27       	eor	r30, r30
    60a0:	ff 27       	eor	r31, r31
    60a2:	e8 1b       	sub	r30, r24
    60a4:	f9 0b       	sbc	r31, r25
    60a6:	ff 87       	std	Y+15, r31	; 0x0f
    60a8:	ee 87       	std	Y+14, r30	; 0x0e
    60aa:	ff ef       	ldi	r31, 0xFF	; 255
    60ac:	6f 16       	cp	r6, r31
    60ae:	7f 06       	cpc	r7, r31
    60b0:	61 f4       	brne	.+24     	; 0x60ca <vfprintf+0x362>
    60b2:	b7 01       	movw	r22, r14
    60b4:	8e e2       	ldi	r24, 0x2E	; 46
    60b6:	90 e0       	ldi	r25, 0x00	; 0
    60b8:	2b 8b       	std	Y+19, r18	; 0x13
    60ba:	3a 8b       	std	Y+18, r19	; 0x12
    60bc:	48 8b       	std	Y+16, r20	; 0x10
    60be:	59 8b       	std	Y+17, r21	; 0x11
    60c0:	08 d3       	rcall	.+1552   	; 0x66d2 <fputc>
    60c2:	59 89       	ldd	r21, Y+17	; 0x11
    60c4:	48 89       	ldd	r20, Y+16	; 0x10
    60c6:	3a 89       	ldd	r19, Y+18	; 0x12
    60c8:	2b 89       	ldd	r18, Y+19	; 0x13
    60ca:	c6 14       	cp	r12, r6
    60cc:	d7 04       	cpc	r13, r7
    60ce:	54 f0       	brlt	.+20     	; 0x60e4 <vfprintf+0x37c>
    60d0:	6c 85       	ldd	r22, Y+12	; 0x0c
    60d2:	7d 85       	ldd	r23, Y+13	; 0x0d
    60d4:	66 15       	cp	r22, r6
    60d6:	77 05       	cpc	r23, r7
    60d8:	2c f4       	brge	.+10     	; 0x60e4 <vfprintf+0x37c>
    60da:	f9 01       	movw	r30, r18
    60dc:	e4 0f       	add	r30, r20
    60de:	f5 1f       	adc	r31, r21
    60e0:	81 81       	ldd	r24, Z+1	; 0x01
    60e2:	01 c0       	rjmp	.+2      	; 0x60e6 <vfprintf+0x37e>
    60e4:	80 e3       	ldi	r24, 0x30	; 48
    60e6:	71 e0       	ldi	r23, 0x01	; 1
    60e8:	67 1a       	sub	r6, r23
    60ea:	71 08       	sbc	r7, r1
    60ec:	4f 5f       	subi	r20, 0xFF	; 255
    60ee:	5f 4f       	sbci	r21, 0xFF	; 255
    60f0:	ee 85       	ldd	r30, Y+14	; 0x0e
    60f2:	ff 85       	ldd	r31, Y+15	; 0x0f
    60f4:	6e 16       	cp	r6, r30
    60f6:	7f 06       	cpc	r7, r31
    60f8:	64 f0       	brlt	.+24     	; 0x6112 <vfprintf+0x3aa>
    60fa:	b7 01       	movw	r22, r14
    60fc:	90 e0       	ldi	r25, 0x00	; 0
    60fe:	2b 8b       	std	Y+19, r18	; 0x13
    6100:	3a 8b       	std	Y+18, r19	; 0x12
    6102:	48 8b       	std	Y+16, r20	; 0x10
    6104:	59 8b       	std	Y+17, r21	; 0x11
    6106:	e5 d2       	rcall	.+1482   	; 0x66d2 <fputc>
    6108:	2b 89       	ldd	r18, Y+19	; 0x13
    610a:	3a 89       	ldd	r19, Y+18	; 0x12
    610c:	48 89       	ldd	r20, Y+16	; 0x10
    610e:	59 89       	ldd	r21, Y+17	; 0x11
    6110:	cc cf       	rjmp	.-104    	; 0x60aa <vfprintf+0x342>
    6112:	6c 14       	cp	r6, r12
    6114:	7d 04       	cpc	r7, r13
    6116:	39 f4       	brne	.+14     	; 0x6126 <vfprintf+0x3be>
    6118:	9a 81       	ldd	r25, Y+2	; 0x02
    611a:	96 33       	cpi	r25, 0x36	; 54
    611c:	18 f4       	brcc	.+6      	; 0x6124 <vfprintf+0x3bc>
    611e:	95 33       	cpi	r25, 0x35	; 53
    6120:	11 f4       	brne	.+4      	; 0x6126 <vfprintf+0x3be>
    6122:	04 ff       	sbrs	r16, 4
    6124:	81 e3       	ldi	r24, 0x31	; 49
    6126:	b7 01       	movw	r22, r14
    6128:	90 e0       	ldi	r25, 0x00	; 0
    612a:	45 c0       	rjmp	.+138    	; 0x61b6 <vfprintf+0x44e>
    612c:	8a 81       	ldd	r24, Y+2	; 0x02
    612e:	81 33       	cpi	r24, 0x31	; 49
    6130:	09 f0       	breq	.+2      	; 0x6134 <vfprintf+0x3cc>
    6132:	0f 7e       	andi	r16, 0xEF	; 239
    6134:	b7 01       	movw	r22, r14
    6136:	90 e0       	ldi	r25, 0x00	; 0
    6138:	cc d2       	rcall	.+1432   	; 0x66d2 <fputc>
    613a:	11 11       	cpse	r17, r1
    613c:	05 c0       	rjmp	.+10     	; 0x6148 <vfprintf+0x3e0>
    613e:	74 fe       	sbrs	r7, 4
    6140:	16 c0       	rjmp	.+44     	; 0x616e <vfprintf+0x406>
    6142:	85 e4       	ldi	r24, 0x45	; 69
    6144:	90 e0       	ldi	r25, 0x00	; 0
    6146:	15 c0       	rjmp	.+42     	; 0x6172 <vfprintf+0x40a>
    6148:	b7 01       	movw	r22, r14
    614a:	8e e2       	ldi	r24, 0x2E	; 46
    614c:	90 e0       	ldi	r25, 0x00	; 0
    614e:	c1 d2       	rcall	.+1410   	; 0x66d2 <fputc>
    6150:	82 e0       	ldi	r24, 0x02	; 2
    6152:	66 24       	eor	r6, r6
    6154:	63 94       	inc	r6
    6156:	68 0e       	add	r6, r24
    6158:	f4 01       	movw	r30, r8
    615a:	e8 0f       	add	r30, r24
    615c:	f1 1d       	adc	r31, r1
    615e:	80 81       	ld	r24, Z
    6160:	b7 01       	movw	r22, r14
    6162:	90 e0       	ldi	r25, 0x00	; 0
    6164:	b6 d2       	rcall	.+1388   	; 0x66d2 <fputc>
    6166:	11 50       	subi	r17, 0x01	; 1
    6168:	51 f3       	breq	.-44     	; 0x613e <vfprintf+0x3d6>
    616a:	86 2d       	mov	r24, r6
    616c:	f2 cf       	rjmp	.-28     	; 0x6152 <vfprintf+0x3ea>
    616e:	85 e6       	ldi	r24, 0x65	; 101
    6170:	90 e0       	ldi	r25, 0x00	; 0
    6172:	b7 01       	movw	r22, r14
    6174:	ae d2       	rcall	.+1372   	; 0x66d2 <fputc>
    6176:	d7 fc       	sbrc	r13, 7
    6178:	05 c0       	rjmp	.+10     	; 0x6184 <vfprintf+0x41c>
    617a:	c1 14       	cp	r12, r1
    617c:	d1 04       	cpc	r13, r1
    617e:	39 f4       	brne	.+14     	; 0x618e <vfprintf+0x426>
    6180:	04 ff       	sbrs	r16, 4
    6182:	05 c0       	rjmp	.+10     	; 0x618e <vfprintf+0x426>
    6184:	d1 94       	neg	r13
    6186:	c1 94       	neg	r12
    6188:	d1 08       	sbc	r13, r1
    618a:	8d e2       	ldi	r24, 0x2D	; 45
    618c:	01 c0       	rjmp	.+2      	; 0x6190 <vfprintf+0x428>
    618e:	8b e2       	ldi	r24, 0x2B	; 43
    6190:	b7 01       	movw	r22, r14
    6192:	90 e0       	ldi	r25, 0x00	; 0
    6194:	9e d2       	rcall	.+1340   	; 0x66d2 <fputc>
    6196:	80 e3       	ldi	r24, 0x30	; 48
    6198:	6a e0       	ldi	r22, 0x0A	; 10
    619a:	c6 16       	cp	r12, r22
    619c:	d1 04       	cpc	r13, r1
    619e:	2c f0       	brlt	.+10     	; 0x61aa <vfprintf+0x442>
    61a0:	8f 5f       	subi	r24, 0xFF	; 255
    61a2:	fa e0       	ldi	r31, 0x0A	; 10
    61a4:	cf 1a       	sub	r12, r31
    61a6:	d1 08       	sbc	r13, r1
    61a8:	f7 cf       	rjmp	.-18     	; 0x6198 <vfprintf+0x430>
    61aa:	b7 01       	movw	r22, r14
    61ac:	90 e0       	ldi	r25, 0x00	; 0
    61ae:	91 d2       	rcall	.+1314   	; 0x66d2 <fputc>
    61b0:	b7 01       	movw	r22, r14
    61b2:	c6 01       	movw	r24, r12
    61b4:	c0 96       	adiw	r24, 0x30	; 48
    61b6:	8d d2       	rcall	.+1306   	; 0x66d2 <fputc>
    61b8:	36 c1       	rjmp	.+620    	; 0x6426 <vfprintf+0x6be>
    61ba:	83 36       	cpi	r24, 0x63	; 99
    61bc:	31 f0       	breq	.+12     	; 0x61ca <vfprintf+0x462>
    61be:	83 37       	cpi	r24, 0x73	; 115
    61c0:	79 f0       	breq	.+30     	; 0x61e0 <vfprintf+0x478>
    61c2:	83 35       	cpi	r24, 0x53	; 83
    61c4:	09 f0       	breq	.+2      	; 0x61c8 <vfprintf+0x460>
    61c6:	54 c0       	rjmp	.+168    	; 0x6270 <vfprintf+0x508>
    61c8:	20 c0       	rjmp	.+64     	; 0x620a <vfprintf+0x4a2>
    61ca:	56 01       	movw	r10, r12
    61cc:	72 e0       	ldi	r23, 0x02	; 2
    61ce:	a7 0e       	add	r10, r23
    61d0:	b1 1c       	adc	r11, r1
    61d2:	f6 01       	movw	r30, r12
    61d4:	80 81       	ld	r24, Z
    61d6:	89 83       	std	Y+1, r24	; 0x01
    61d8:	01 e0       	ldi	r16, 0x01	; 1
    61da:	10 e0       	ldi	r17, 0x00	; 0
    61dc:	64 01       	movw	r12, r8
    61de:	13 c0       	rjmp	.+38     	; 0x6206 <vfprintf+0x49e>
    61e0:	56 01       	movw	r10, r12
    61e2:	f2 e0       	ldi	r31, 0x02	; 2
    61e4:	af 0e       	add	r10, r31
    61e6:	b1 1c       	adc	r11, r1
    61e8:	f6 01       	movw	r30, r12
    61ea:	c0 80       	ld	r12, Z
    61ec:	d1 80       	ldd	r13, Z+1	; 0x01
    61ee:	26 ff       	sbrs	r18, 6
    61f0:	03 c0       	rjmp	.+6      	; 0x61f8 <vfprintf+0x490>
    61f2:	61 2f       	mov	r22, r17
    61f4:	70 e0       	ldi	r23, 0x00	; 0
    61f6:	02 c0       	rjmp	.+4      	; 0x61fc <vfprintf+0x494>
    61f8:	6f ef       	ldi	r22, 0xFF	; 255
    61fa:	7f ef       	ldi	r23, 0xFF	; 255
    61fc:	c6 01       	movw	r24, r12
    61fe:	2b 8b       	std	Y+19, r18	; 0x13
    6200:	5d d2       	rcall	.+1210   	; 0x66bc <strnlen>
    6202:	8c 01       	movw	r16, r24
    6204:	2b 89       	ldd	r18, Y+19	; 0x13
    6206:	2f 77       	andi	r18, 0x7F	; 127
    6208:	14 c0       	rjmp	.+40     	; 0x6232 <vfprintf+0x4ca>
    620a:	56 01       	movw	r10, r12
    620c:	f2 e0       	ldi	r31, 0x02	; 2
    620e:	af 0e       	add	r10, r31
    6210:	b1 1c       	adc	r11, r1
    6212:	f6 01       	movw	r30, r12
    6214:	c0 80       	ld	r12, Z
    6216:	d1 80       	ldd	r13, Z+1	; 0x01
    6218:	26 ff       	sbrs	r18, 6
    621a:	03 c0       	rjmp	.+6      	; 0x6222 <vfprintf+0x4ba>
    621c:	61 2f       	mov	r22, r17
    621e:	70 e0       	ldi	r23, 0x00	; 0
    6220:	02 c0       	rjmp	.+4      	; 0x6226 <vfprintf+0x4be>
    6222:	6f ef       	ldi	r22, 0xFF	; 255
    6224:	7f ef       	ldi	r23, 0xFF	; 255
    6226:	c6 01       	movw	r24, r12
    6228:	2b 8b       	std	Y+19, r18	; 0x13
    622a:	3d d2       	rcall	.+1146   	; 0x66a6 <strnlen_P>
    622c:	8c 01       	movw	r16, r24
    622e:	2b 89       	ldd	r18, Y+19	; 0x13
    6230:	20 68       	ori	r18, 0x80	; 128
    6232:	72 2e       	mov	r7, r18
    6234:	23 fd       	sbrc	r18, 3
    6236:	18 c0       	rjmp	.+48     	; 0x6268 <vfprintf+0x500>
    6238:	85 2d       	mov	r24, r5
    623a:	90 e0       	ldi	r25, 0x00	; 0
    623c:	08 17       	cp	r16, r24
    623e:	19 07       	cpc	r17, r25
    6240:	98 f4       	brcc	.+38     	; 0x6268 <vfprintf+0x500>
    6242:	b7 01       	movw	r22, r14
    6244:	80 e2       	ldi	r24, 0x20	; 32
    6246:	90 e0       	ldi	r25, 0x00	; 0
    6248:	44 d2       	rcall	.+1160   	; 0x66d2 <fputc>
    624a:	5a 94       	dec	r5
    624c:	f5 cf       	rjmp	.-22     	; 0x6238 <vfprintf+0x4d0>
    624e:	f6 01       	movw	r30, r12
    6250:	77 fc       	sbrc	r7, 7
    6252:	85 91       	lpm	r24, Z+
    6254:	77 fe       	sbrs	r7, 7
    6256:	81 91       	ld	r24, Z+
    6258:	6f 01       	movw	r12, r30
    625a:	b7 01       	movw	r22, r14
    625c:	90 e0       	ldi	r25, 0x00	; 0
    625e:	39 d2       	rcall	.+1138   	; 0x66d2 <fputc>
    6260:	51 10       	cpse	r5, r1
    6262:	5a 94       	dec	r5
    6264:	01 50       	subi	r16, 0x01	; 1
    6266:	11 09       	sbc	r17, r1
    6268:	01 15       	cp	r16, r1
    626a:	11 05       	cpc	r17, r1
    626c:	81 f7       	brne	.-32     	; 0x624e <vfprintf+0x4e6>
    626e:	db c0       	rjmp	.+438    	; 0x6426 <vfprintf+0x6be>
    6270:	84 36       	cpi	r24, 0x64	; 100
    6272:	11 f0       	breq	.+4      	; 0x6278 <vfprintf+0x510>
    6274:	89 36       	cpi	r24, 0x69	; 105
    6276:	49 f5       	brne	.+82     	; 0x62ca <vfprintf+0x562>
    6278:	56 01       	movw	r10, r12
    627a:	27 ff       	sbrs	r18, 7
    627c:	09 c0       	rjmp	.+18     	; 0x6290 <vfprintf+0x528>
    627e:	f4 e0       	ldi	r31, 0x04	; 4
    6280:	af 0e       	add	r10, r31
    6282:	b1 1c       	adc	r11, r1
    6284:	f6 01       	movw	r30, r12
    6286:	60 81       	ld	r22, Z
    6288:	71 81       	ldd	r23, Z+1	; 0x01
    628a:	82 81       	ldd	r24, Z+2	; 0x02
    628c:	93 81       	ldd	r25, Z+3	; 0x03
    628e:	0a c0       	rjmp	.+20     	; 0x62a4 <vfprintf+0x53c>
    6290:	f2 e0       	ldi	r31, 0x02	; 2
    6292:	af 0e       	add	r10, r31
    6294:	b1 1c       	adc	r11, r1
    6296:	f6 01       	movw	r30, r12
    6298:	60 81       	ld	r22, Z
    629a:	71 81       	ldd	r23, Z+1	; 0x01
    629c:	88 27       	eor	r24, r24
    629e:	77 fd       	sbrc	r23, 7
    62a0:	80 95       	com	r24
    62a2:	98 2f       	mov	r25, r24
    62a4:	02 2f       	mov	r16, r18
    62a6:	0f 76       	andi	r16, 0x6F	; 111
    62a8:	97 ff       	sbrs	r25, 7
    62aa:	08 c0       	rjmp	.+16     	; 0x62bc <vfprintf+0x554>
    62ac:	90 95       	com	r25
    62ae:	80 95       	com	r24
    62b0:	70 95       	com	r23
    62b2:	61 95       	neg	r22
    62b4:	7f 4f       	sbci	r23, 0xFF	; 255
    62b6:	8f 4f       	sbci	r24, 0xFF	; 255
    62b8:	9f 4f       	sbci	r25, 0xFF	; 255
    62ba:	00 68       	ori	r16, 0x80	; 128
    62bc:	2a e0       	ldi	r18, 0x0A	; 10
    62be:	30 e0       	ldi	r19, 0x00	; 0
    62c0:	a4 01       	movw	r20, r8
    62c2:	67 d2       	rcall	.+1230   	; 0x6792 <__ultoa_invert>
    62c4:	c8 2e       	mov	r12, r24
    62c6:	c8 18       	sub	r12, r8
    62c8:	3d c0       	rjmp	.+122    	; 0x6344 <vfprintf+0x5dc>
    62ca:	02 2f       	mov	r16, r18
    62cc:	85 37       	cpi	r24, 0x75	; 117
    62ce:	21 f4       	brne	.+8      	; 0x62d8 <vfprintf+0x570>
    62d0:	0f 7e       	andi	r16, 0xEF	; 239
    62d2:	2a e0       	ldi	r18, 0x0A	; 10
    62d4:	30 e0       	ldi	r19, 0x00	; 0
    62d6:	1d c0       	rjmp	.+58     	; 0x6312 <vfprintf+0x5aa>
    62d8:	09 7f       	andi	r16, 0xF9	; 249
    62da:	8f 36       	cpi	r24, 0x6F	; 111
    62dc:	91 f0       	breq	.+36     	; 0x6302 <vfprintf+0x59a>
    62de:	18 f4       	brcc	.+6      	; 0x62e6 <vfprintf+0x57e>
    62e0:	88 35       	cpi	r24, 0x58	; 88
    62e2:	59 f0       	breq	.+22     	; 0x62fa <vfprintf+0x592>
    62e4:	a9 c0       	rjmp	.+338    	; 0x6438 <vfprintf+0x6d0>
    62e6:	80 37       	cpi	r24, 0x70	; 112
    62e8:	19 f0       	breq	.+6      	; 0x62f0 <vfprintf+0x588>
    62ea:	88 37       	cpi	r24, 0x78	; 120
    62ec:	11 f0       	breq	.+4      	; 0x62f2 <vfprintf+0x58a>
    62ee:	a4 c0       	rjmp	.+328    	; 0x6438 <vfprintf+0x6d0>
    62f0:	00 61       	ori	r16, 0x10	; 16
    62f2:	04 ff       	sbrs	r16, 4
    62f4:	09 c0       	rjmp	.+18     	; 0x6308 <vfprintf+0x5a0>
    62f6:	04 60       	ori	r16, 0x04	; 4
    62f8:	07 c0       	rjmp	.+14     	; 0x6308 <vfprintf+0x5a0>
    62fa:	24 ff       	sbrs	r18, 4
    62fc:	08 c0       	rjmp	.+16     	; 0x630e <vfprintf+0x5a6>
    62fe:	06 60       	ori	r16, 0x06	; 6
    6300:	06 c0       	rjmp	.+12     	; 0x630e <vfprintf+0x5a6>
    6302:	28 e0       	ldi	r18, 0x08	; 8
    6304:	30 e0       	ldi	r19, 0x00	; 0
    6306:	05 c0       	rjmp	.+10     	; 0x6312 <vfprintf+0x5aa>
    6308:	20 e1       	ldi	r18, 0x10	; 16
    630a:	30 e0       	ldi	r19, 0x00	; 0
    630c:	02 c0       	rjmp	.+4      	; 0x6312 <vfprintf+0x5aa>
    630e:	20 e1       	ldi	r18, 0x10	; 16
    6310:	32 e0       	ldi	r19, 0x02	; 2
    6312:	56 01       	movw	r10, r12
    6314:	07 ff       	sbrs	r16, 7
    6316:	09 c0       	rjmp	.+18     	; 0x632a <vfprintf+0x5c2>
    6318:	f4 e0       	ldi	r31, 0x04	; 4
    631a:	af 0e       	add	r10, r31
    631c:	b1 1c       	adc	r11, r1
    631e:	f6 01       	movw	r30, r12
    6320:	60 81       	ld	r22, Z
    6322:	71 81       	ldd	r23, Z+1	; 0x01
    6324:	82 81       	ldd	r24, Z+2	; 0x02
    6326:	93 81       	ldd	r25, Z+3	; 0x03
    6328:	08 c0       	rjmp	.+16     	; 0x633a <vfprintf+0x5d2>
    632a:	f2 e0       	ldi	r31, 0x02	; 2
    632c:	af 0e       	add	r10, r31
    632e:	b1 1c       	adc	r11, r1
    6330:	f6 01       	movw	r30, r12
    6332:	60 81       	ld	r22, Z
    6334:	71 81       	ldd	r23, Z+1	; 0x01
    6336:	80 e0       	ldi	r24, 0x00	; 0
    6338:	90 e0       	ldi	r25, 0x00	; 0
    633a:	a4 01       	movw	r20, r8
    633c:	2a d2       	rcall	.+1108   	; 0x6792 <__ultoa_invert>
    633e:	c8 2e       	mov	r12, r24
    6340:	c8 18       	sub	r12, r8
    6342:	0f 77       	andi	r16, 0x7F	; 127
    6344:	06 ff       	sbrs	r16, 6
    6346:	0b c0       	rjmp	.+22     	; 0x635e <vfprintf+0x5f6>
    6348:	20 2f       	mov	r18, r16
    634a:	2e 7f       	andi	r18, 0xFE	; 254
    634c:	c1 16       	cp	r12, r17
    634e:	50 f4       	brcc	.+20     	; 0x6364 <vfprintf+0x5fc>
    6350:	04 ff       	sbrs	r16, 4
    6352:	0a c0       	rjmp	.+20     	; 0x6368 <vfprintf+0x600>
    6354:	02 fd       	sbrc	r16, 2
    6356:	08 c0       	rjmp	.+16     	; 0x6368 <vfprintf+0x600>
    6358:	20 2f       	mov	r18, r16
    635a:	2e 7e       	andi	r18, 0xEE	; 238
    635c:	05 c0       	rjmp	.+10     	; 0x6368 <vfprintf+0x600>
    635e:	dc 2c       	mov	r13, r12
    6360:	20 2f       	mov	r18, r16
    6362:	03 c0       	rjmp	.+6      	; 0x636a <vfprintf+0x602>
    6364:	dc 2c       	mov	r13, r12
    6366:	01 c0       	rjmp	.+2      	; 0x636a <vfprintf+0x602>
    6368:	d1 2e       	mov	r13, r17
    636a:	24 ff       	sbrs	r18, 4
    636c:	0d c0       	rjmp	.+26     	; 0x6388 <vfprintf+0x620>
    636e:	fe 01       	movw	r30, r28
    6370:	ec 0d       	add	r30, r12
    6372:	f1 1d       	adc	r31, r1
    6374:	80 81       	ld	r24, Z
    6376:	80 33       	cpi	r24, 0x30	; 48
    6378:	11 f4       	brne	.+4      	; 0x637e <vfprintf+0x616>
    637a:	29 7e       	andi	r18, 0xE9	; 233
    637c:	09 c0       	rjmp	.+18     	; 0x6390 <vfprintf+0x628>
    637e:	22 ff       	sbrs	r18, 2
    6380:	06 c0       	rjmp	.+12     	; 0x638e <vfprintf+0x626>
    6382:	d3 94       	inc	r13
    6384:	d3 94       	inc	r13
    6386:	04 c0       	rjmp	.+8      	; 0x6390 <vfprintf+0x628>
    6388:	82 2f       	mov	r24, r18
    638a:	86 78       	andi	r24, 0x86	; 134
    638c:	09 f0       	breq	.+2      	; 0x6390 <vfprintf+0x628>
    638e:	d3 94       	inc	r13
    6390:	23 fd       	sbrc	r18, 3
    6392:	12 c0       	rjmp	.+36     	; 0x63b8 <vfprintf+0x650>
    6394:	20 ff       	sbrs	r18, 0
    6396:	06 c0       	rjmp	.+12     	; 0x63a4 <vfprintf+0x63c>
    6398:	1c 2d       	mov	r17, r12
    639a:	d5 14       	cp	r13, r5
    639c:	18 f4       	brcc	.+6      	; 0x63a4 <vfprintf+0x63c>
    639e:	15 0d       	add	r17, r5
    63a0:	1d 19       	sub	r17, r13
    63a2:	d5 2c       	mov	r13, r5
    63a4:	d5 14       	cp	r13, r5
    63a6:	60 f4       	brcc	.+24     	; 0x63c0 <vfprintf+0x658>
    63a8:	b7 01       	movw	r22, r14
    63aa:	80 e2       	ldi	r24, 0x20	; 32
    63ac:	90 e0       	ldi	r25, 0x00	; 0
    63ae:	2b 8b       	std	Y+19, r18	; 0x13
    63b0:	90 d1       	rcall	.+800    	; 0x66d2 <fputc>
    63b2:	d3 94       	inc	r13
    63b4:	2b 89       	ldd	r18, Y+19	; 0x13
    63b6:	f6 cf       	rjmp	.-20     	; 0x63a4 <vfprintf+0x63c>
    63b8:	d5 14       	cp	r13, r5
    63ba:	10 f4       	brcc	.+4      	; 0x63c0 <vfprintf+0x658>
    63bc:	5d 18       	sub	r5, r13
    63be:	01 c0       	rjmp	.+2      	; 0x63c2 <vfprintf+0x65a>
    63c0:	51 2c       	mov	r5, r1
    63c2:	24 ff       	sbrs	r18, 4
    63c4:	11 c0       	rjmp	.+34     	; 0x63e8 <vfprintf+0x680>
    63c6:	b7 01       	movw	r22, r14
    63c8:	80 e3       	ldi	r24, 0x30	; 48
    63ca:	90 e0       	ldi	r25, 0x00	; 0
    63cc:	2b 8b       	std	Y+19, r18	; 0x13
    63ce:	81 d1       	rcall	.+770    	; 0x66d2 <fputc>
    63d0:	2b 89       	ldd	r18, Y+19	; 0x13
    63d2:	22 ff       	sbrs	r18, 2
    63d4:	16 c0       	rjmp	.+44     	; 0x6402 <vfprintf+0x69a>
    63d6:	21 ff       	sbrs	r18, 1
    63d8:	03 c0       	rjmp	.+6      	; 0x63e0 <vfprintf+0x678>
    63da:	88 e5       	ldi	r24, 0x58	; 88
    63dc:	90 e0       	ldi	r25, 0x00	; 0
    63de:	02 c0       	rjmp	.+4      	; 0x63e4 <vfprintf+0x67c>
    63e0:	88 e7       	ldi	r24, 0x78	; 120
    63e2:	90 e0       	ldi	r25, 0x00	; 0
    63e4:	b7 01       	movw	r22, r14
    63e6:	0c c0       	rjmp	.+24     	; 0x6400 <vfprintf+0x698>
    63e8:	82 2f       	mov	r24, r18
    63ea:	86 78       	andi	r24, 0x86	; 134
    63ec:	51 f0       	breq	.+20     	; 0x6402 <vfprintf+0x69a>
    63ee:	21 fd       	sbrc	r18, 1
    63f0:	02 c0       	rjmp	.+4      	; 0x63f6 <vfprintf+0x68e>
    63f2:	80 e2       	ldi	r24, 0x20	; 32
    63f4:	01 c0       	rjmp	.+2      	; 0x63f8 <vfprintf+0x690>
    63f6:	8b e2       	ldi	r24, 0x2B	; 43
    63f8:	27 fd       	sbrc	r18, 7
    63fa:	8d e2       	ldi	r24, 0x2D	; 45
    63fc:	b7 01       	movw	r22, r14
    63fe:	90 e0       	ldi	r25, 0x00	; 0
    6400:	68 d1       	rcall	.+720    	; 0x66d2 <fputc>
    6402:	c1 16       	cp	r12, r17
    6404:	30 f4       	brcc	.+12     	; 0x6412 <vfprintf+0x6aa>
    6406:	b7 01       	movw	r22, r14
    6408:	80 e3       	ldi	r24, 0x30	; 48
    640a:	90 e0       	ldi	r25, 0x00	; 0
    640c:	62 d1       	rcall	.+708    	; 0x66d2 <fputc>
    640e:	11 50       	subi	r17, 0x01	; 1
    6410:	f8 cf       	rjmp	.-16     	; 0x6402 <vfprintf+0x69a>
    6412:	ca 94       	dec	r12
    6414:	f4 01       	movw	r30, r8
    6416:	ec 0d       	add	r30, r12
    6418:	f1 1d       	adc	r31, r1
    641a:	80 81       	ld	r24, Z
    641c:	b7 01       	movw	r22, r14
    641e:	90 e0       	ldi	r25, 0x00	; 0
    6420:	58 d1       	rcall	.+688    	; 0x66d2 <fputc>
    6422:	c1 10       	cpse	r12, r1
    6424:	f6 cf       	rjmp	.-20     	; 0x6412 <vfprintf+0x6aa>
    6426:	55 20       	and	r5, r5
    6428:	09 f4       	brne	.+2      	; 0x642c <vfprintf+0x6c4>
    642a:	dd cc       	rjmp	.-1606   	; 0x5de6 <vfprintf+0x7e>
    642c:	b7 01       	movw	r22, r14
    642e:	80 e2       	ldi	r24, 0x20	; 32
    6430:	90 e0       	ldi	r25, 0x00	; 0
    6432:	4f d1       	rcall	.+670    	; 0x66d2 <fputc>
    6434:	5a 94       	dec	r5
    6436:	f7 cf       	rjmp	.-18     	; 0x6426 <vfprintf+0x6be>
    6438:	f7 01       	movw	r30, r14
    643a:	86 81       	ldd	r24, Z+6	; 0x06
    643c:	97 81       	ldd	r25, Z+7	; 0x07
    643e:	02 c0       	rjmp	.+4      	; 0x6444 <vfprintf+0x6dc>
    6440:	8f ef       	ldi	r24, 0xFF	; 255
    6442:	9f ef       	ldi	r25, 0xFF	; 255
    6444:	63 96       	adiw	r28, 0x13	; 19
    6446:	0f b6       	in	r0, 0x3f	; 63
    6448:	f8 94       	cli
    644a:	de bf       	out	0x3e, r29	; 62
    644c:	0f be       	out	0x3f, r0	; 63
    644e:	cd bf       	out	0x3d, r28	; 61
    6450:	df 91       	pop	r29
    6452:	cf 91       	pop	r28
    6454:	1f 91       	pop	r17
    6456:	0f 91       	pop	r16
    6458:	ff 90       	pop	r15
    645a:	ef 90       	pop	r14
    645c:	df 90       	pop	r13
    645e:	cf 90       	pop	r12
    6460:	bf 90       	pop	r11
    6462:	af 90       	pop	r10
    6464:	9f 90       	pop	r9
    6466:	8f 90       	pop	r8
    6468:	7f 90       	pop	r7
    646a:	6f 90       	pop	r6
    646c:	5f 90       	pop	r5
    646e:	4f 90       	pop	r4
    6470:	3f 90       	pop	r3
    6472:	2f 90       	pop	r2
    6474:	08 95       	ret

00006476 <__udivmodhi4>:
    6476:	aa 1b       	sub	r26, r26
    6478:	bb 1b       	sub	r27, r27
    647a:	51 e1       	ldi	r21, 0x11	; 17
    647c:	07 c0       	rjmp	.+14     	; 0x648c <__udivmodhi4_ep>

0000647e <__udivmodhi4_loop>:
    647e:	aa 1f       	adc	r26, r26
    6480:	bb 1f       	adc	r27, r27
    6482:	a6 17       	cp	r26, r22
    6484:	b7 07       	cpc	r27, r23
    6486:	10 f0       	brcs	.+4      	; 0x648c <__udivmodhi4_ep>
    6488:	a6 1b       	sub	r26, r22
    648a:	b7 0b       	sbc	r27, r23

0000648c <__udivmodhi4_ep>:
    648c:	88 1f       	adc	r24, r24
    648e:	99 1f       	adc	r25, r25
    6490:	5a 95       	dec	r21
    6492:	a9 f7       	brne	.-22     	; 0x647e <__udivmodhi4_loop>
    6494:	80 95       	com	r24
    6496:	90 95       	com	r25
    6498:	bc 01       	movw	r22, r24
    649a:	cd 01       	movw	r24, r26
    649c:	08 95       	ret

0000649e <__divmodhi4>:
    649e:	97 fb       	bst	r25, 7
    64a0:	07 2e       	mov	r0, r23
    64a2:	16 f4       	brtc	.+4      	; 0x64a8 <__divmodhi4+0xa>
    64a4:	00 94       	com	r0
    64a6:	06 d0       	rcall	.+12     	; 0x64b4 <__divmodhi4_neg1>
    64a8:	77 fd       	sbrc	r23, 7
    64aa:	08 d0       	rcall	.+16     	; 0x64bc <__divmodhi4_neg2>
    64ac:	e4 df       	rcall	.-56     	; 0x6476 <__udivmodhi4>
    64ae:	07 fc       	sbrc	r0, 7
    64b0:	05 d0       	rcall	.+10     	; 0x64bc <__divmodhi4_neg2>
    64b2:	3e f4       	brtc	.+14     	; 0x64c2 <__divmodhi4_exit>

000064b4 <__divmodhi4_neg1>:
    64b4:	90 95       	com	r25
    64b6:	81 95       	neg	r24
    64b8:	9f 4f       	sbci	r25, 0xFF	; 255
    64ba:	08 95       	ret

000064bc <__divmodhi4_neg2>:
    64bc:	70 95       	com	r23
    64be:	61 95       	neg	r22
    64c0:	7f 4f       	sbci	r23, 0xFF	; 255

000064c2 <__divmodhi4_exit>:
    64c2:	08 95       	ret

000064c4 <__tablejump2__>:
    64c4:	ee 0f       	add	r30, r30
    64c6:	ff 1f       	adc	r31, r31

000064c8 <__tablejump__>:
    64c8:	05 90       	lpm	r0, Z+
    64ca:	f4 91       	lpm	r31, Z
    64cc:	e0 2d       	mov	r30, r0
    64ce:	09 94       	ijmp

000064d0 <__umulhisi3>:
    64d0:	a2 9f       	mul	r26, r18
    64d2:	b0 01       	movw	r22, r0
    64d4:	b3 9f       	mul	r27, r19
    64d6:	c0 01       	movw	r24, r0
    64d8:	a3 9f       	mul	r26, r19
    64da:	70 0d       	add	r23, r0
    64dc:	81 1d       	adc	r24, r1
    64de:	11 24       	eor	r1, r1
    64e0:	91 1d       	adc	r25, r1
    64e2:	b2 9f       	mul	r27, r18
    64e4:	70 0d       	add	r23, r0
    64e6:	81 1d       	adc	r24, r1
    64e8:	11 24       	eor	r1, r1
    64ea:	91 1d       	adc	r25, r1
    64ec:	08 95       	ret

000064ee <__tablejump_elpm__>:
    64ee:	07 90       	elpm	r0, Z+
    64f0:	f6 91       	elpm	r31, Z
    64f2:	e0 2d       	mov	r30, r0
    64f4:	09 94       	ijmp

000064f6 <__ftoa_engine>:
    64f6:	28 30       	cpi	r18, 0x08	; 8
    64f8:	08 f0       	brcs	.+2      	; 0x64fc <__ftoa_engine+0x6>
    64fa:	27 e0       	ldi	r18, 0x07	; 7
    64fc:	33 27       	eor	r19, r19
    64fe:	da 01       	movw	r26, r20
    6500:	99 0f       	add	r25, r25
    6502:	31 1d       	adc	r19, r1
    6504:	87 fd       	sbrc	r24, 7
    6506:	91 60       	ori	r25, 0x01	; 1
    6508:	00 96       	adiw	r24, 0x00	; 0
    650a:	61 05       	cpc	r22, r1
    650c:	71 05       	cpc	r23, r1
    650e:	39 f4       	brne	.+14     	; 0x651e <__ftoa_engine+0x28>
    6510:	32 60       	ori	r19, 0x02	; 2
    6512:	2e 5f       	subi	r18, 0xFE	; 254
    6514:	3d 93       	st	X+, r19
    6516:	30 e3       	ldi	r19, 0x30	; 48
    6518:	2a 95       	dec	r18
    651a:	e1 f7       	brne	.-8      	; 0x6514 <__ftoa_engine+0x1e>
    651c:	08 95       	ret
    651e:	9f 3f       	cpi	r25, 0xFF	; 255
    6520:	30 f0       	brcs	.+12     	; 0x652e <__ftoa_engine+0x38>
    6522:	80 38       	cpi	r24, 0x80	; 128
    6524:	71 05       	cpc	r23, r1
    6526:	61 05       	cpc	r22, r1
    6528:	09 f0       	breq	.+2      	; 0x652c <__ftoa_engine+0x36>
    652a:	3c 5f       	subi	r19, 0xFC	; 252
    652c:	3c 5f       	subi	r19, 0xFC	; 252
    652e:	3d 93       	st	X+, r19
    6530:	91 30       	cpi	r25, 0x01	; 1
    6532:	08 f0       	brcs	.+2      	; 0x6536 <__ftoa_engine+0x40>
    6534:	80 68       	ori	r24, 0x80	; 128
    6536:	91 1d       	adc	r25, r1
    6538:	df 93       	push	r29
    653a:	cf 93       	push	r28
    653c:	1f 93       	push	r17
    653e:	0f 93       	push	r16
    6540:	ff 92       	push	r15
    6542:	ef 92       	push	r14
    6544:	19 2f       	mov	r17, r25
    6546:	98 7f       	andi	r25, 0xF8	; 248
    6548:	96 95       	lsr	r25
    654a:	e9 2f       	mov	r30, r25
    654c:	96 95       	lsr	r25
    654e:	96 95       	lsr	r25
    6550:	e9 0f       	add	r30, r25
    6552:	ff 27       	eor	r31, r31
    6554:	e2 50       	subi	r30, 0x02	; 2
    6556:	fb 4f       	sbci	r31, 0xFB	; 251
    6558:	99 27       	eor	r25, r25
    655a:	33 27       	eor	r19, r19
    655c:	ee 24       	eor	r14, r14
    655e:	ff 24       	eor	r15, r15
    6560:	a7 01       	movw	r20, r14
    6562:	e7 01       	movw	r28, r14
    6564:	05 90       	lpm	r0, Z+
    6566:	08 94       	sec
    6568:	07 94       	ror	r0
    656a:	28 f4       	brcc	.+10     	; 0x6576 <__ftoa_engine+0x80>
    656c:	36 0f       	add	r19, r22
    656e:	e7 1e       	adc	r14, r23
    6570:	f8 1e       	adc	r15, r24
    6572:	49 1f       	adc	r20, r25
    6574:	51 1d       	adc	r21, r1
    6576:	66 0f       	add	r22, r22
    6578:	77 1f       	adc	r23, r23
    657a:	88 1f       	adc	r24, r24
    657c:	99 1f       	adc	r25, r25
    657e:	06 94       	lsr	r0
    6580:	a1 f7       	brne	.-24     	; 0x656a <__ftoa_engine+0x74>
    6582:	05 90       	lpm	r0, Z+
    6584:	07 94       	ror	r0
    6586:	28 f4       	brcc	.+10     	; 0x6592 <__ftoa_engine+0x9c>
    6588:	e7 0e       	add	r14, r23
    658a:	f8 1e       	adc	r15, r24
    658c:	49 1f       	adc	r20, r25
    658e:	56 1f       	adc	r21, r22
    6590:	c1 1d       	adc	r28, r1
    6592:	77 0f       	add	r23, r23
    6594:	88 1f       	adc	r24, r24
    6596:	99 1f       	adc	r25, r25
    6598:	66 1f       	adc	r22, r22
    659a:	06 94       	lsr	r0
    659c:	a1 f7       	brne	.-24     	; 0x6586 <__ftoa_engine+0x90>
    659e:	05 90       	lpm	r0, Z+
    65a0:	07 94       	ror	r0
    65a2:	28 f4       	brcc	.+10     	; 0x65ae <__ftoa_engine+0xb8>
    65a4:	f8 0e       	add	r15, r24
    65a6:	49 1f       	adc	r20, r25
    65a8:	56 1f       	adc	r21, r22
    65aa:	c7 1f       	adc	r28, r23
    65ac:	d1 1d       	adc	r29, r1
    65ae:	88 0f       	add	r24, r24
    65b0:	99 1f       	adc	r25, r25
    65b2:	66 1f       	adc	r22, r22
    65b4:	77 1f       	adc	r23, r23
    65b6:	06 94       	lsr	r0
    65b8:	a1 f7       	brne	.-24     	; 0x65a2 <__ftoa_engine+0xac>
    65ba:	05 90       	lpm	r0, Z+
    65bc:	07 94       	ror	r0
    65be:	20 f4       	brcc	.+8      	; 0x65c8 <__ftoa_engine+0xd2>
    65c0:	49 0f       	add	r20, r25
    65c2:	56 1f       	adc	r21, r22
    65c4:	c7 1f       	adc	r28, r23
    65c6:	d8 1f       	adc	r29, r24
    65c8:	99 0f       	add	r25, r25
    65ca:	66 1f       	adc	r22, r22
    65cc:	77 1f       	adc	r23, r23
    65ce:	88 1f       	adc	r24, r24
    65d0:	06 94       	lsr	r0
    65d2:	a9 f7       	brne	.-22     	; 0x65be <__ftoa_engine+0xc8>
    65d4:	84 91       	lpm	r24, Z
    65d6:	10 95       	com	r17
    65d8:	17 70       	andi	r17, 0x07	; 7
    65da:	41 f0       	breq	.+16     	; 0x65ec <__ftoa_engine+0xf6>
    65dc:	d6 95       	lsr	r29
    65de:	c7 95       	ror	r28
    65e0:	57 95       	ror	r21
    65e2:	47 95       	ror	r20
    65e4:	f7 94       	ror	r15
    65e6:	e7 94       	ror	r14
    65e8:	1a 95       	dec	r17
    65ea:	c1 f7       	brne	.-16     	; 0x65dc <__ftoa_engine+0xe6>
    65ec:	e4 ea       	ldi	r30, 0xA4	; 164
    65ee:	f4 e0       	ldi	r31, 0x04	; 4
    65f0:	68 94       	set
    65f2:	15 90       	lpm	r1, Z+
    65f4:	15 91       	lpm	r17, Z+
    65f6:	35 91       	lpm	r19, Z+
    65f8:	65 91       	lpm	r22, Z+
    65fa:	95 91       	lpm	r25, Z+
    65fc:	05 90       	lpm	r0, Z+
    65fe:	7f e2       	ldi	r23, 0x2F	; 47
    6600:	73 95       	inc	r23
    6602:	e1 18       	sub	r14, r1
    6604:	f1 0a       	sbc	r15, r17
    6606:	43 0b       	sbc	r20, r19
    6608:	56 0b       	sbc	r21, r22
    660a:	c9 0b       	sbc	r28, r25
    660c:	d0 09       	sbc	r29, r0
    660e:	c0 f7       	brcc	.-16     	; 0x6600 <__ftoa_engine+0x10a>
    6610:	e1 0c       	add	r14, r1
    6612:	f1 1e       	adc	r15, r17
    6614:	43 1f       	adc	r20, r19
    6616:	56 1f       	adc	r21, r22
    6618:	c9 1f       	adc	r28, r25
    661a:	d0 1d       	adc	r29, r0
    661c:	7e f4       	brtc	.+30     	; 0x663c <__ftoa_engine+0x146>
    661e:	70 33       	cpi	r23, 0x30	; 48
    6620:	11 f4       	brne	.+4      	; 0x6626 <__ftoa_engine+0x130>
    6622:	8a 95       	dec	r24
    6624:	e6 cf       	rjmp	.-52     	; 0x65f2 <__ftoa_engine+0xfc>
    6626:	e8 94       	clt
    6628:	01 50       	subi	r16, 0x01	; 1
    662a:	30 f0       	brcs	.+12     	; 0x6638 <__ftoa_engine+0x142>
    662c:	08 0f       	add	r16, r24
    662e:	0a f4       	brpl	.+2      	; 0x6632 <__ftoa_engine+0x13c>
    6630:	00 27       	eor	r16, r16
    6632:	02 17       	cp	r16, r18
    6634:	08 f4       	brcc	.+2      	; 0x6638 <__ftoa_engine+0x142>
    6636:	20 2f       	mov	r18, r16
    6638:	23 95       	inc	r18
    663a:	02 2f       	mov	r16, r18
    663c:	7a 33       	cpi	r23, 0x3A	; 58
    663e:	28 f0       	brcs	.+10     	; 0x664a <__ftoa_engine+0x154>
    6640:	79 e3       	ldi	r23, 0x39	; 57
    6642:	7d 93       	st	X+, r23
    6644:	2a 95       	dec	r18
    6646:	e9 f7       	brne	.-6      	; 0x6642 <__ftoa_engine+0x14c>
    6648:	10 c0       	rjmp	.+32     	; 0x666a <__ftoa_engine+0x174>
    664a:	7d 93       	st	X+, r23
    664c:	2a 95       	dec	r18
    664e:	89 f6       	brne	.-94     	; 0x65f2 <__ftoa_engine+0xfc>
    6650:	06 94       	lsr	r0
    6652:	97 95       	ror	r25
    6654:	67 95       	ror	r22
    6656:	37 95       	ror	r19
    6658:	17 95       	ror	r17
    665a:	17 94       	ror	r1
    665c:	e1 18       	sub	r14, r1
    665e:	f1 0a       	sbc	r15, r17
    6660:	43 0b       	sbc	r20, r19
    6662:	56 0b       	sbc	r21, r22
    6664:	c9 0b       	sbc	r28, r25
    6666:	d0 09       	sbc	r29, r0
    6668:	98 f0       	brcs	.+38     	; 0x6690 <__ftoa_engine+0x19a>
    666a:	23 95       	inc	r18
    666c:	7e 91       	ld	r23, -X
    666e:	73 95       	inc	r23
    6670:	7a 33       	cpi	r23, 0x3A	; 58
    6672:	08 f0       	brcs	.+2      	; 0x6676 <__ftoa_engine+0x180>
    6674:	70 e3       	ldi	r23, 0x30	; 48
    6676:	7c 93       	st	X, r23
    6678:	20 13       	cpse	r18, r16
    667a:	b8 f7       	brcc	.-18     	; 0x666a <__ftoa_engine+0x174>
    667c:	7e 91       	ld	r23, -X
    667e:	70 61       	ori	r23, 0x10	; 16
    6680:	7d 93       	st	X+, r23
    6682:	30 f0       	brcs	.+12     	; 0x6690 <__ftoa_engine+0x19a>
    6684:	83 95       	inc	r24
    6686:	71 e3       	ldi	r23, 0x31	; 49
    6688:	7d 93       	st	X+, r23
    668a:	70 e3       	ldi	r23, 0x30	; 48
    668c:	2a 95       	dec	r18
    668e:	e1 f7       	brne	.-8      	; 0x6688 <__ftoa_engine+0x192>
    6690:	11 24       	eor	r1, r1
    6692:	ef 90       	pop	r14
    6694:	ff 90       	pop	r15
    6696:	0f 91       	pop	r16
    6698:	1f 91       	pop	r17
    669a:	cf 91       	pop	r28
    669c:	df 91       	pop	r29
    669e:	99 27       	eor	r25, r25
    66a0:	87 fd       	sbrc	r24, 7
    66a2:	90 95       	com	r25
    66a4:	08 95       	ret

000066a6 <strnlen_P>:
    66a6:	fc 01       	movw	r30, r24
    66a8:	05 90       	lpm	r0, Z+
    66aa:	61 50       	subi	r22, 0x01	; 1
    66ac:	70 40       	sbci	r23, 0x00	; 0
    66ae:	01 10       	cpse	r0, r1
    66b0:	d8 f7       	brcc	.-10     	; 0x66a8 <strnlen_P+0x2>
    66b2:	80 95       	com	r24
    66b4:	90 95       	com	r25
    66b6:	8e 0f       	add	r24, r30
    66b8:	9f 1f       	adc	r25, r31
    66ba:	08 95       	ret

000066bc <strnlen>:
    66bc:	fc 01       	movw	r30, r24
    66be:	61 50       	subi	r22, 0x01	; 1
    66c0:	70 40       	sbci	r23, 0x00	; 0
    66c2:	01 90       	ld	r0, Z+
    66c4:	01 10       	cpse	r0, r1
    66c6:	d8 f7       	brcc	.-10     	; 0x66be <strnlen+0x2>
    66c8:	80 95       	com	r24
    66ca:	90 95       	com	r25
    66cc:	8e 0f       	add	r24, r30
    66ce:	9f 1f       	adc	r25, r31
    66d0:	08 95       	ret

000066d2 <fputc>:
    66d2:	0f 93       	push	r16
    66d4:	1f 93       	push	r17
    66d6:	cf 93       	push	r28
    66d8:	df 93       	push	r29
    66da:	18 2f       	mov	r17, r24
    66dc:	09 2f       	mov	r16, r25
    66de:	eb 01       	movw	r28, r22
    66e0:	8b 81       	ldd	r24, Y+3	; 0x03
    66e2:	81 fd       	sbrc	r24, 1
    66e4:	03 c0       	rjmp	.+6      	; 0x66ec <fputc+0x1a>
    66e6:	8f ef       	ldi	r24, 0xFF	; 255
    66e8:	9f ef       	ldi	r25, 0xFF	; 255
    66ea:	20 c0       	rjmp	.+64     	; 0x672c <fputc+0x5a>
    66ec:	82 ff       	sbrs	r24, 2
    66ee:	10 c0       	rjmp	.+32     	; 0x6710 <fputc+0x3e>
    66f0:	4e 81       	ldd	r20, Y+6	; 0x06
    66f2:	5f 81       	ldd	r21, Y+7	; 0x07
    66f4:	2c 81       	ldd	r18, Y+4	; 0x04
    66f6:	3d 81       	ldd	r19, Y+5	; 0x05
    66f8:	42 17       	cp	r20, r18
    66fa:	53 07       	cpc	r21, r19
    66fc:	7c f4       	brge	.+30     	; 0x671c <fputc+0x4a>
    66fe:	e8 81       	ld	r30, Y
    6700:	f9 81       	ldd	r31, Y+1	; 0x01
    6702:	9f 01       	movw	r18, r30
    6704:	2f 5f       	subi	r18, 0xFF	; 255
    6706:	3f 4f       	sbci	r19, 0xFF	; 255
    6708:	39 83       	std	Y+1, r19	; 0x01
    670a:	28 83       	st	Y, r18
    670c:	10 83       	st	Z, r17
    670e:	06 c0       	rjmp	.+12     	; 0x671c <fputc+0x4a>
    6710:	e8 85       	ldd	r30, Y+8	; 0x08
    6712:	f9 85       	ldd	r31, Y+9	; 0x09
    6714:	81 2f       	mov	r24, r17
    6716:	09 95       	icall
    6718:	89 2b       	or	r24, r25
    671a:	29 f7       	brne	.-54     	; 0x66e6 <fputc+0x14>
    671c:	2e 81       	ldd	r18, Y+6	; 0x06
    671e:	3f 81       	ldd	r19, Y+7	; 0x07
    6720:	2f 5f       	subi	r18, 0xFF	; 255
    6722:	3f 4f       	sbci	r19, 0xFF	; 255
    6724:	3f 83       	std	Y+7, r19	; 0x07
    6726:	2e 83       	std	Y+6, r18	; 0x06
    6728:	81 2f       	mov	r24, r17
    672a:	90 2f       	mov	r25, r16
    672c:	df 91       	pop	r29
    672e:	cf 91       	pop	r28
    6730:	1f 91       	pop	r17
    6732:	0f 91       	pop	r16
    6734:	08 95       	ret

00006736 <sprintf>:
    6736:	0f 93       	push	r16
    6738:	1f 93       	push	r17
    673a:	cf 93       	push	r28
    673c:	df 93       	push	r29
    673e:	cd b7       	in	r28, 0x3d	; 61
    6740:	de b7       	in	r29, 0x3e	; 62
    6742:	2e 97       	sbiw	r28, 0x0e	; 14
    6744:	0f b6       	in	r0, 0x3f	; 63
    6746:	f8 94       	cli
    6748:	de bf       	out	0x3e, r29	; 62
    674a:	0f be       	out	0x3f, r0	; 63
    674c:	cd bf       	out	0x3d, r28	; 61
    674e:	0d 89       	ldd	r16, Y+21	; 0x15
    6750:	1e 89       	ldd	r17, Y+22	; 0x16
    6752:	86 e0       	ldi	r24, 0x06	; 6
    6754:	8c 83       	std	Y+4, r24	; 0x04
    6756:	1a 83       	std	Y+2, r17	; 0x02
    6758:	09 83       	std	Y+1, r16	; 0x01
    675a:	8f ef       	ldi	r24, 0xFF	; 255
    675c:	9f e7       	ldi	r25, 0x7F	; 127
    675e:	9e 83       	std	Y+6, r25	; 0x06
    6760:	8d 83       	std	Y+5, r24	; 0x05
    6762:	ae 01       	movw	r20, r28
    6764:	47 5e       	subi	r20, 0xE7	; 231
    6766:	5f 4f       	sbci	r21, 0xFF	; 255
    6768:	6f 89       	ldd	r22, Y+23	; 0x17
    676a:	78 8d       	ldd	r23, Y+24	; 0x18
    676c:	ce 01       	movw	r24, r28
    676e:	01 96       	adiw	r24, 0x01	; 1
    6770:	fb da       	rcall	.-2570   	; 0x5d68 <vfprintf>
    6772:	ef 81       	ldd	r30, Y+7	; 0x07
    6774:	f8 85       	ldd	r31, Y+8	; 0x08
    6776:	e0 0f       	add	r30, r16
    6778:	f1 1f       	adc	r31, r17
    677a:	10 82       	st	Z, r1
    677c:	2e 96       	adiw	r28, 0x0e	; 14
    677e:	0f b6       	in	r0, 0x3f	; 63
    6780:	f8 94       	cli
    6782:	de bf       	out	0x3e, r29	; 62
    6784:	0f be       	out	0x3f, r0	; 63
    6786:	cd bf       	out	0x3d, r28	; 61
    6788:	df 91       	pop	r29
    678a:	cf 91       	pop	r28
    678c:	1f 91       	pop	r17
    678e:	0f 91       	pop	r16
    6790:	08 95       	ret

00006792 <__ultoa_invert>:
    6792:	fa 01       	movw	r30, r20
    6794:	aa 27       	eor	r26, r26
    6796:	28 30       	cpi	r18, 0x08	; 8
    6798:	51 f1       	breq	.+84     	; 0x67ee <__ultoa_invert+0x5c>
    679a:	20 31       	cpi	r18, 0x10	; 16
    679c:	81 f1       	breq	.+96     	; 0x67fe <__ultoa_invert+0x6c>
    679e:	e8 94       	clt
    67a0:	6f 93       	push	r22
    67a2:	6e 7f       	andi	r22, 0xFE	; 254
    67a4:	6e 5f       	subi	r22, 0xFE	; 254
    67a6:	7f 4f       	sbci	r23, 0xFF	; 255
    67a8:	8f 4f       	sbci	r24, 0xFF	; 255
    67aa:	9f 4f       	sbci	r25, 0xFF	; 255
    67ac:	af 4f       	sbci	r26, 0xFF	; 255
    67ae:	b1 e0       	ldi	r27, 0x01	; 1
    67b0:	3e d0       	rcall	.+124    	; 0x682e <__ultoa_invert+0x9c>
    67b2:	b4 e0       	ldi	r27, 0x04	; 4
    67b4:	3c d0       	rcall	.+120    	; 0x682e <__ultoa_invert+0x9c>
    67b6:	67 0f       	add	r22, r23
    67b8:	78 1f       	adc	r23, r24
    67ba:	89 1f       	adc	r24, r25
    67bc:	9a 1f       	adc	r25, r26
    67be:	a1 1d       	adc	r26, r1
    67c0:	68 0f       	add	r22, r24
    67c2:	79 1f       	adc	r23, r25
    67c4:	8a 1f       	adc	r24, r26
    67c6:	91 1d       	adc	r25, r1
    67c8:	a1 1d       	adc	r26, r1
    67ca:	6a 0f       	add	r22, r26
    67cc:	71 1d       	adc	r23, r1
    67ce:	81 1d       	adc	r24, r1
    67d0:	91 1d       	adc	r25, r1
    67d2:	a1 1d       	adc	r26, r1
    67d4:	20 d0       	rcall	.+64     	; 0x6816 <__ultoa_invert+0x84>
    67d6:	09 f4       	brne	.+2      	; 0x67da <__ultoa_invert+0x48>
    67d8:	68 94       	set
    67da:	3f 91       	pop	r19
    67dc:	2a e0       	ldi	r18, 0x0A	; 10
    67de:	26 9f       	mul	r18, r22
    67e0:	11 24       	eor	r1, r1
    67e2:	30 19       	sub	r19, r0
    67e4:	30 5d       	subi	r19, 0xD0	; 208
    67e6:	31 93       	st	Z+, r19
    67e8:	de f6       	brtc	.-74     	; 0x67a0 <__ultoa_invert+0xe>
    67ea:	cf 01       	movw	r24, r30
    67ec:	08 95       	ret
    67ee:	46 2f       	mov	r20, r22
    67f0:	47 70       	andi	r20, 0x07	; 7
    67f2:	40 5d       	subi	r20, 0xD0	; 208
    67f4:	41 93       	st	Z+, r20
    67f6:	b3 e0       	ldi	r27, 0x03	; 3
    67f8:	0f d0       	rcall	.+30     	; 0x6818 <__ultoa_invert+0x86>
    67fa:	c9 f7       	brne	.-14     	; 0x67ee <__ultoa_invert+0x5c>
    67fc:	f6 cf       	rjmp	.-20     	; 0x67ea <__ultoa_invert+0x58>
    67fe:	46 2f       	mov	r20, r22
    6800:	4f 70       	andi	r20, 0x0F	; 15
    6802:	40 5d       	subi	r20, 0xD0	; 208
    6804:	4a 33       	cpi	r20, 0x3A	; 58
    6806:	18 f0       	brcs	.+6      	; 0x680e <__ultoa_invert+0x7c>
    6808:	49 5d       	subi	r20, 0xD9	; 217
    680a:	31 fd       	sbrc	r19, 1
    680c:	40 52       	subi	r20, 0x20	; 32
    680e:	41 93       	st	Z+, r20
    6810:	02 d0       	rcall	.+4      	; 0x6816 <__ultoa_invert+0x84>
    6812:	a9 f7       	brne	.-22     	; 0x67fe <__ultoa_invert+0x6c>
    6814:	ea cf       	rjmp	.-44     	; 0x67ea <__ultoa_invert+0x58>
    6816:	b4 e0       	ldi	r27, 0x04	; 4
    6818:	a6 95       	lsr	r26
    681a:	97 95       	ror	r25
    681c:	87 95       	ror	r24
    681e:	77 95       	ror	r23
    6820:	67 95       	ror	r22
    6822:	ba 95       	dec	r27
    6824:	c9 f7       	brne	.-14     	; 0x6818 <__ultoa_invert+0x86>
    6826:	00 97       	sbiw	r24, 0x00	; 0
    6828:	61 05       	cpc	r22, r1
    682a:	71 05       	cpc	r23, r1
    682c:	08 95       	ret
    682e:	9b 01       	movw	r18, r22
    6830:	ac 01       	movw	r20, r24
    6832:	0a 2e       	mov	r0, r26
    6834:	06 94       	lsr	r0
    6836:	57 95       	ror	r21
    6838:	47 95       	ror	r20
    683a:	37 95       	ror	r19
    683c:	27 95       	ror	r18
    683e:	ba 95       	dec	r27
    6840:	c9 f7       	brne	.-14     	; 0x6834 <__ultoa_invert+0xa2>
    6842:	62 0f       	add	r22, r18
    6844:	73 1f       	adc	r23, r19
    6846:	84 1f       	adc	r24, r20
    6848:	95 1f       	adc	r25, r21
    684a:	a0 1d       	adc	r26, r0
    684c:	08 95       	ret

0000684e <__do_global_dtors>:
    684e:	15 e0       	ldi	r17, 0x05	; 5
    6850:	c0 ea       	ldi	r28, 0xA0	; 160
    6852:	d5 e0       	ldi	r29, 0x05	; 5
    6854:	00 e0       	ldi	r16, 0x00	; 0
    6856:	05 c0       	rjmp	.+10     	; 0x6862 <__do_global_dtors+0x14>
    6858:	22 97       	sbiw	r28, 0x02	; 2
    685a:	01 09       	sbc	r16, r1
    685c:	fe 01       	movw	r30, r28
    685e:	0b bf       	out	0x3b, r16	; 59
    6860:	46 de       	rcall	.-884    	; 0x64ee <__tablejump_elpm__>
    6862:	c2 3a       	cpi	r28, 0xA2	; 162
    6864:	d1 07       	cpc	r29, r17
    6866:	80 e0       	ldi	r24, 0x00	; 0
    6868:	08 07       	cpc	r16, r24
    686a:	b1 f7       	brne	.-20     	; 0x6858 <__do_global_dtors+0xa>
    686c:	f8 94       	cli

0000686e <__stop_program>:
    686e:	ff cf       	rjmp	.-2      	; 0x686e <__stop_program>
