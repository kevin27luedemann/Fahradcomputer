
FWCP_MK2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000023c  00800100  00006a60  00006af4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006a60  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000047a  0080033c  0080033c  00006d30  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00006d30  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000478  00000000  00000000  00006d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00009d1b  00000000  00000000  00007204  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001b19  00000000  00000000  00010f1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00003a6b  00000000  00000000  00012a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00001110  00000000  00000000  000164a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000145b  00000000  00000000  000175b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000734a  00000000  00000000  00018a0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000440  00000000  00000000  0001fd59  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	d0 c2       	rjmp	.+1440   	; 0x5a2 <__dtors_end>
       2:	00 00       	nop
       4:	fd c2       	rjmp	.+1530   	; 0x600 <__bad_interrupt>
       6:	00 00       	nop
       8:	fb c2       	rjmp	.+1526   	; 0x600 <__bad_interrupt>
       a:	00 00       	nop
       c:	f9 c2       	rjmp	.+1522   	; 0x600 <__bad_interrupt>
       e:	00 00       	nop
      10:	f7 c2       	rjmp	.+1518   	; 0x600 <__bad_interrupt>
      12:	00 00       	nop
      14:	f5 c2       	rjmp	.+1514   	; 0x600 <__bad_interrupt>
      16:	00 00       	nop
      18:	f3 c2       	rjmp	.+1510   	; 0x600 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f1 c2       	rjmp	.+1506   	; 0x600 <__bad_interrupt>
      1e:	00 00       	nop
      20:	ef c2       	rjmp	.+1502   	; 0x600 <__bad_interrupt>
      22:	00 00       	nop
      24:	ed c2       	rjmp	.+1498   	; 0x600 <__bad_interrupt>
      26:	00 00       	nop
      28:	eb c2       	rjmp	.+1494   	; 0x600 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0c 94 39 1b 	jmp	0x3672	; 0x3672 <__vector_11>
      30:	e7 c2       	rjmp	.+1486   	; 0x600 <__bad_interrupt>
      32:	00 00       	nop
      34:	e5 c2       	rjmp	.+1482   	; 0x600 <__bad_interrupt>
      36:	00 00       	nop
      38:	e3 c2       	rjmp	.+1478   	; 0x600 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	e1 c2       	rjmp	.+1474   	; 0x600 <__bad_interrupt>
      3e:	00 00       	nop
      40:	df c2       	rjmp	.+1470   	; 0x600 <__bad_interrupt>
      42:	00 00       	nop
      44:	dd c2       	rjmp	.+1466   	; 0x600 <__bad_interrupt>
      46:	00 00       	nop
      48:	db c2       	rjmp	.+1462   	; 0x600 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	d9 c2       	rjmp	.+1458   	; 0x600 <__bad_interrupt>
      4e:	00 00       	nop
      50:	d7 c2       	rjmp	.+1454   	; 0x600 <__bad_interrupt>
      52:	00 00       	nop
      54:	d5 c2       	rjmp	.+1450   	; 0x600 <__bad_interrupt>
      56:	00 00       	nop
      58:	d3 c2       	rjmp	.+1446   	; 0x600 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d1 c2       	rjmp	.+1442   	; 0x600 <__bad_interrupt>
      5e:	00 00       	nop
      60:	cf c2       	rjmp	.+1438   	; 0x600 <__bad_interrupt>
      62:	00 00       	nop
      64:	cd c2       	rjmp	.+1434   	; 0x600 <__bad_interrupt>
      66:	00 00       	nop
      68:	cb c2       	rjmp	.+1430   	; 0x600 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	c9 c2       	rjmp	.+1426   	; 0x600 <__bad_interrupt>
      6e:	00 00       	nop
      70:	c7 c2       	rjmp	.+1422   	; 0x600 <__bad_interrupt>
      72:	00 00       	nop
      74:	c5 c2       	rjmp	.+1418   	; 0x600 <__bad_interrupt>
      76:	00 00       	nop
      78:	c3 c2       	rjmp	.+1414   	; 0x600 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c1 c2       	rjmp	.+1410   	; 0x600 <__bad_interrupt>
      7e:	00 00       	nop
      80:	bf c2       	rjmp	.+1406   	; 0x600 <__bad_interrupt>
      82:	00 00       	nop
      84:	bd c2       	rjmp	.+1402   	; 0x600 <__bad_interrupt>
      86:	00 00       	nop
      88:	bb c2       	rjmp	.+1398   	; 0x600 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	6c 18       	sub	r6, r12
      8e:	94 18       	sub	r9, r4
      90:	be 18       	sub	r11, r14
      92:	e9 18       	sub	r14, r9
      94:	13 19       	sub	r17, r3
      96:	3c 19       	sub	r19, r12
      98:	64 19       	sub	r22, r4
      9a:	8d 19       	sub	r24, r13
      9c:	05 1a       	sub	r0, r21
      9e:	30 1a       	sub	r3, r16
      a0:	39 1f       	adc	r19, r25
      a2:	44 1f       	adc	r20, r20
      a4:	4a 1f       	adc	r20, r26
      a6:	50 1f       	adc	r21, r16
      a8:	57 1f       	adc	r21, r23
      aa:	5d 1f       	adc	r21, r29
      ac:	6b 1f       	adc	r22, r27
      ae:	fa 1f       	adc	r31, r26
      b0:	00 20       	and	r0, r0
      b2:	06 20       	and	r0, r6
      b4:	0c 20       	and	r0, r12
      b6:	12 20       	and	r1, r2
      b8:	18 20       	and	r1, r8
      ba:	1e 20       	and	r1, r14
      bc:	24 20       	and	r2, r4
      be:	08 4a       	sbci	r16, 0xA8	; 168
      c0:	d7 3b       	cpi	r29, 0xB7	; 183
      c2:	3b ce       	rjmp	.-906    	; 0xfffffd3a <__eeprom_end+0xff7efd3a>
      c4:	01 6e       	ori	r16, 0xE1	; 225
      c6:	84 bc       	out	0x24, r8	; 36
      c8:	bf fd       	.word	0xfdbf	; ????
      ca:	c1 2f       	mov	r28, r17
      cc:	3d 6c       	ori	r19, 0xCD	; 205
      ce:	74 31       	cpi	r23, 0x14	; 20
      d0:	9a bd       	out	0x2a, r25	; 42
      d2:	56 83       	std	Z+6, r21	; 0x06
      d4:	3d da       	rcall	.-2950   	; 0xfffff550 <__eeprom_end+0xff7ef550>
      d6:	3d 00       	.word	0x003d	; ????
      d8:	c7 7f       	andi	r28, 0xF7	; 247
      da:	11 be       	out	0x31, r1	; 49
      dc:	d9 e4       	ldi	r29, 0x49	; 73
      de:	bb 4c       	sbci	r27, 0xCB	; 203
      e0:	3e 91       	ld	r19, -X
      e2:	6b aa       	std	Y+51, r6	; 0x33
      e4:	aa be       	out	0x3a, r10	; 58
      e6:	00 00       	nop
      e8:	00 80       	ld	r0, Z
      ea:	3f 05       	cpc	r19, r15
      ec:	a8 4c       	sbci	r26, 0xC8	; 200
      ee:	cd b2       	in	r12, 0x1d	; 29
      f0:	d4 4e       	sbci	r29, 0xE4	; 228
      f2:	b9 38       	cpi	r27, 0x89	; 137
      f4:	36 a9       	ldd	r19, Z+54	; 0x36
      f6:	02 0c       	add	r0, r2
      f8:	50 b9       	out	0x00, r21	; 0
      fa:	91 86       	std	Z+9, r9	; 0x09
      fc:	88 08       	sbc	r8, r8
      fe:	3c a6       	std	Y+44, r3	; 0x2c
     100:	aa aa       	std	Y+50, r10	; 0x32
     102:	2a be       	out	0x3a, r2	; 58
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	3f 08       	sbc	r3, r15
     10a:	00 00       	nop
     10c:	00 be       	out	0x30, r0	; 48
     10e:	92 24       	eor	r9, r2
     110:	49 12       	cpse	r4, r25
     112:	3e ab       	std	Y+54, r19	; 0x36
     114:	aa aa       	std	Y+50, r10	; 0x32
     116:	2a be       	out	0x3a, r2	; 58
     118:	cd cc       	rjmp	.-1638   	; 0xfffffab4 <__eeprom_end+0xff7efab4>
     11a:	cc 4c       	sbci	r28, 0xCC	; 204
     11c:	3e 00       	.word	0x003e	; ????
     11e:	00 00       	nop
     120:	80 be       	out	0x30, r8	; 48
     122:	ab aa       	std	Y+51, r10	; 0x33
     124:	aa aa       	std	Y+50, r10	; 0x32
     126:	3e 00       	.word	0x003e	; ????
     128:	00 00       	nop
     12a:	00 bf       	out	0x30, r16	; 48
     12c:	00 00       	nop
     12e:	00 80       	ld	r0, Z
     130:	3f 00       	.word	0x003f	; ????
     132:	00 00       	nop
     134:	00 00       	nop
     136:	08 41       	sbci	r16, 0x18	; 24
     138:	78 d3       	rcall	.+1776   	; 0x82a <_ZN7Display9drawVLineEhhh+0x1e>
     13a:	bb 43       	sbci	r27, 0x3B	; 59
     13c:	87 d1       	rcall	.+782    	; 0x44c <_ZL7font5x8+0x186>
     13e:	13 3d       	cpi	r17, 0xD3	; 211
     140:	19 0e       	add	r1, r25
     142:	3c c3       	rjmp	.+1656   	; 0x7bc <_ZN7Display9drawPixelEhhh+0x24>
     144:	bd 42       	sbci	r27, 0x2D	; 45
     146:	82 ad       	ldd	r24, Z+58	; 0x3a
     148:	2b 3e       	cpi	r18, 0xEB	; 235
     14a:	68 ec       	ldi	r22, 0xC8	; 200
     14c:	82 76       	andi	r24, 0x62	; 98
     14e:	be d9       	rcall	.-3204   	; 0xfffff4cc <__eeprom_end+0xff7ef4cc>
     150:	8f e1       	ldi	r24, 0x1F	; 31
     152:	a9 3e       	cpi	r26, 0xE9	; 233
     154:	4c 80       	ldd	r4, Y+4	; 0x04
     156:	ef ff       	.word	0xffef	; ????
     158:	be 01       	movw	r22, r28
     15a:	c4 ff       	sbrs	r28, 4
     15c:	7f 3f       	cpi	r23, 0xFF	; 255
     15e:	00 00       	nop
     160:	00 00       	nop
     162:	00 06       	cpc	r0, r16
     164:	64 ec       	ldi	r22, 0xC4	; 196
     166:	1b 3c       	cpi	r17, 0xCB	; 203
     168:	04 bc       	out	0x24, r0	; 36
     16a:	16 3e       	cpi	r17, 0xE6	; 230
     16c:	3b e5       	ldi	r19, 0x5B	; 91
     16e:	b9 3c       	cpi	r27, 0xC9	; 201
     170:	c9 3c       	cpi	r28, 0xC9	; 201
     172:	37 c2       	rjmp	.+1134   	; 0x5e2 <__do_global_ctors+0xa>
     174:	9e 5a       	subi	r25, 0xAE	; 174
     176:	3d 66       	ori	r19, 0x6D	; 109
     178:	04 98       	cbi	0x00, 4	; 0
     17a:	08 3e       	cpi	r16, 0xE8	; 232
     17c:	ea 69       	ori	r30, 0x9A	; 154
     17e:	aa aa       	std	Y+50, r10	; 0x32
     180:	3e 00       	.word	0x003e	; ????
     182:	00 00       	nop
     184:	80 3f       	cpi	r24, 0xF0	; 240

00000186 <__trampolines_end>:
     186:	00 e0       	ldi	r16, 0x00	; 0
     188:	f8 fc       	.word	0xfcf8	; ????
     18a:	fe 1e       	adc	r15, r30
     18c:	07 07       	cpc	r16, r23
     18e:	07 07       	cpc	r16, r23
     190:	1e fe       	.word	0xfe1e	; ????
     192:	fc f8       	.word	0xf8fc	; ????
     194:	f0 00       	.word	0x00f0	; ????
     196:	00 07       	cpc	r16, r16
     198:	0f 3f       	cpi	r16, 0xFF	; 255
     19a:	3f 7c       	andi	r19, 0xCF	; 207
     19c:	70 70       	andi	r23, 0x00	; 0
     19e:	70 70       	andi	r23, 0x00	; 0
     1a0:	7c 3f       	cpi	r23, 0xFC	; 252
     1a2:	1f 1f       	adc	r17, r31
     1a4:	07 00       	.word	0x0007	; ????
     1a6:	00 00       	nop
     1a8:	00 06       	cpc	r0, r16
     1aa:	07 07       	cpc	r16, r23
     1ac:	ff ff       	.word	0xffff	; ????
     1ae:	ff ff       	.word	0xffff	; ????
	...
     1bc:	7f 7f       	andi	r23, 0xFF	; 255
     1be:	7f 7f       	andi	r23, 0xFF	; 255
     1c0:	00 00       	nop
     1c2:	00 00       	nop
     1c4:	00 00       	nop
     1c6:	00 38       	cpi	r16, 0x80	; 128
     1c8:	3c 3e       	cpi	r19, 0xEC	; 236
     1ca:	3e 0f       	add	r19, r30
     1cc:	07 07       	cpc	r16, r23
     1ce:	07 cf       	rjmp	.-498    	; 0xffffffde <__eeprom_end+0xff7effde>
     1d0:	ff fe       	.word	0xfeff	; ????
     1d2:	fe 38       	cpi	r31, 0x8E	; 142
     1d4:	00 00       	nop
     1d6:	00 40       	sbci	r16, 0x00	; 0
     1d8:	40 60       	ori	r20, 0x00	; 0
     1da:	70 78       	andi	r23, 0x80	; 128
     1dc:	7c 7e       	andi	r23, 0xEC	; 236
     1de:	7f 77       	andi	r23, 0x7F	; 127
     1e0:	73 71       	andi	r23, 0x13	; 19
     1e2:	70 70       	andi	r23, 0x00	; 0
     1e4:	00 00       	nop
     1e6:	00 18       	sub	r0, r0
     1e8:	1c 1e       	adc	r1, r28
     1ea:	1e 0f       	add	r17, r30
     1ec:	c7 c7       	rjmp	.+3982   	; 0x117c <_ZN7Display6analogEhhhh+0x3fc>
     1ee:	e7 ff       	sbrs	r30, 7
     1f0:	fe be       	out	0x3e, r15	; 62
     1f2:	9c 00       	.word	0x009c	; ????
     1f4:	00 00       	nop
     1f6:	00 0c       	add	r0, r0
     1f8:	1c 3c       	cpi	r17, 0xCC	; 204
     1fa:	3c 78       	andi	r19, 0x8C	; 140
     1fc:	70 70       	andi	r23, 0x00	; 0
     1fe:	70 79       	andi	r23, 0x90	; 144
     200:	7f 3f       	cpi	r23, 0xFF	; 255
     202:	1f 0f       	add	r17, r31
     204:	00 00       	nop
     206:	00 00       	nop
     208:	80 c0       	rjmp	.+256    	; 0x30a <_ZL7font5x8+0x44>
     20a:	e0 70       	andi	r30, 0x00	; 0
     20c:	38 1c       	adc	r3, r8
     20e:	1e ff       	.word	0xff1e	; ????
     210:	ff ff       	.word	0xffff	; ????
     212:	ff 00       	.word	0x00ff	; ????
     214:	00 00       	nop
     216:	06 07       	cpc	r16, r22
     218:	07 07       	cpc	r16, r23
     21a:	06 06       	cpc	r0, r22
     21c:	06 06       	cpc	r0, r22
     21e:	06 7f       	andi	r16, 0xF6	; 246
     220:	7f 7f       	andi	r23, 0xFF	; 255
     222:	7f 06       	cpc	r7, r31
     224:	06 00       	.word	0x0006	; ????
     226:	00 00       	nop
     228:	00 00       	nop
     22a:	f0 ff       	sbrs	r31, 0
     22c:	ff ff       	.word	0xffff	; ????
     22e:	e7 e7       	ldi	r30, 0x77	; 119
     230:	e7 e7       	ldi	r30, 0x77	; 119
     232:	c7 87       	std	Z+15, r28	; 0x0f
     234:	00 00       	nop
     236:	00 00       	nop
     238:	38 78       	andi	r19, 0x88	; 136
     23a:	71 70       	andi	r23, 0x01	; 1
     23c:	70 70       	andi	r23, 0x00	; 0
     23e:	70 70       	andi	r23, 0x00	; 0
     240:	39 3f       	cpi	r19, 0xF9	; 249
     242:	3f 1f       	adc	r19, r31
     244:	0f 00       	.word	0x000f	; ????
     246:	00 80       	ld	r0, Z
     248:	e0 f0       	brcs	.+56     	; 0x282 <__trampolines_end+0xfc>
     24a:	f8 fc       	.word	0xfcf8	; ????
     24c:	7f 7f       	andi	r23, 0xFF	; 255
     24e:	6f 67       	ori	r22, 0x7F	; 127
     250:	e1 e1       	ldi	r30, 0x11	; 17
     252:	c0 80       	ld	r12, Z
     254:	00 00       	nop
     256:	00 0f       	add	r16, r16
     258:	1f 3f       	cpi	r17, 0xFF	; 255
     25a:	3f 78       	andi	r19, 0x8F	; 143
     25c:	70 70       	andi	r23, 0x00	; 0
     25e:	70 70       	andi	r23, 0x00	; 0
     260:	78 3f       	cpi	r23, 0xF8	; 248
     262:	3f 1f       	adc	r19, r31
     264:	0f 00       	.word	0x000f	; ????
     266:	00 07       	cpc	r16, r16
     268:	07 07       	cpc	r16, r23
     26a:	07 07       	cpc	r16, r23
     26c:	c7 e7       	ldi	r28, 0x77	; 119
     26e:	f7 ff       	sbrs	r31, 7
     270:	7f 3f       	cpi	r23, 0xFF	; 255
     272:	1f 07       	cpc	r17, r31
     274:	03 01       	movw	r0, r6
     276:	00 20       	and	r0, r0
     278:	38 7c       	andi	r19, 0xC8	; 200
     27a:	7e 3f       	cpi	r23, 0xFE	; 254
     27c:	0f 07       	cpc	r16, r31
     27e:	03 00       	.word	0x0003	; ????
	...
     288:	00 1c       	adc	r0, r0
     28a:	be fe       	.word	0xfebe	; ????
     28c:	ff e7       	ldi	r31, 0x7F	; 127
     28e:	c3 c3       	rjmp	.+1926   	; 0xa16 <_ZN7Display13draw_triangleEhhhff+0x5e>
     290:	e7 ff       	sbrs	r30, 7
     292:	fe be       	out	0x3e, r15	; 62
     294:	1c 00       	.word	0x001c	; ????
     296:	00 00       	nop
     298:	0e 3f       	cpi	r16, 0xFE	; 254
     29a:	3f 7f       	andi	r19, 0xFF	; 255
     29c:	71 60       	ori	r23, 0x01	; 1
     29e:	60 60       	ori	r22, 0x00	; 0
     2a0:	71 7f       	andi	r23, 0xF1	; 241
     2a2:	3f 3f       	cpi	r19, 0xFF	; 255
     2a4:	0f 00       	.word	0x000f	; ????
     2a6:	00 78       	andi	r16, 0x80	; 128
     2a8:	fc fe       	.word	0xfefc	; ????
     2aa:	fe 8f       	std	Y+30, r31	; 0x1e
     2ac:	07 07       	cpc	r16, r23
     2ae:	07 07       	cpc	r16, r23
     2b0:	8f fe       	.word	0xfe8f	; ????
     2b2:	fe fc       	.word	0xfcfe	; ????
     2b4:	f8 00       	.word	0x00f8	; ????
     2b6:	00 00       	nop
     2b8:	00 01       	movw	r0, r0
     2ba:	43 43       	sbci	r20, 0x33	; 51
     2bc:	73 7b       	andi	r23, 0xB3	; 179
     2be:	7f 7f       	andi	r23, 0xFF	; 255
     2c0:	1f 0f       	add	r17, r31
     2c2:	07 03       	mulsu	r16, r23
	...

000002c6 <_ZL7font5x8>:
     2c6:	00 00 5f 00 00 00 07 00 07 00 14 7f 14 7f 14 24     .._............$
     2d6:	2a 7f 2a 12 23 13 08 64 62 36 49 55 22 50 00 05     *.*.#..db6IU"P..
     2e6:	03 00 00 00 1c 22 41 00 00 41 22 1c 00 14 08 3e     ....."A..A"....>
     2f6:	08 14 08 08 3e 08 08 00 50 30 00 00 08 08 08 08     ....>...P0......
     306:	08 00 60 60 00 00 20 10 08 04 02 3e 51 49 45 3e     ..``.. ....>QIE>
     316:	00 42 7f 40 00 42 61 51 49 46 21 41 45 4b 31 18     .B.@.BaQIF!AEK1.
     326:	14 12 7f 10 27 45 45 45 39 3c 4a 49 49 30 01 71     ....'EEE9<JII0.q
     336:	09 05 03 36 49 49 49 36 06 49 49 29 1e 00 36 36     ...6III6.II)..66
     346:	00 00 00 56 36 00 00 08 14 22 41 00 14 14 14 14     ...V6...."A.....
     356:	14 00 41 22 14 08 02 01 51 09 06 32 49 79 41 3e     ..A"....Q..2IyA>
     366:	7e 11 11 11 7e 7f 49 49 49 36 3e 41 41 41 22 7f     ~...~.III6>AAA".
     376:	41 41 22 1c 7f 49 49 49 41 7f 09 09 09 01 3e 41     AA"..IIIA.....>A
     386:	49 49 7a 7f 08 08 08 7f 00 41 7f 41 00 20 40 41     IIz......A.A. @A
     396:	3f 01 7f 08 14 22 41 7f 40 40 40 40 7f 02 0c 02     ?...."A.@@@@....
     3a6:	7f 7f 04 08 10 7f 3e 41 41 41 3e 7f 09 09 09 06     ......>AAA>.....
     3b6:	3e 41 51 21 5e 7f 09 19 29 46 46 49 49 49 31 01     >AQ!^...)FFIII1.
     3c6:	01 7f 01 01 3f 40 40 40 3f 1f 20 40 20 1f 3f 40     ....?@@@?. @ .?@
     3d6:	38 40 3f 63 14 08 14 63 07 08 70 08 07 61 51 49     8@?c...c..p..aQI
     3e6:	45 43 00 7f 41 41 00 02 04 08 10 20 00 41 41 7f     EC..AA..... .AA.
     3f6:	00 04 02 01 02 04 40 40 40 40 40 00 01 02 04 00     ......@@@@@.....
     406:	20 54 54 54 78 7f 48 44 44 38 38 44 44 44 20 38      TTTx.HDD88DDD 8
     416:	44 44 48 7f 38 54 54 54 18 08 7e 09 01 02 0c 52     DDH.8TTT..~....R
     426:	52 52 3e 7f 08 04 04 78 00 44 7d 40 00 20 40 44     RR>....x.D}@. @D
     436:	3d 00 7f 10 28 44 00 00 41 7f 40 00 7c 04 18 04     =...(D..A.@.|...
     446:	78 7c 08 04 04 78 38 44 44 44 38 7c 14 14 14 08     x|...x8DDD8|....
     456:	08 14 14 18 7c 7c 08 04 04 08 48 54 54 54 20 04     ....||....HTTT .
     466:	3f 44 40 20 3c 40 40 20 7c 1c 20 40 20 1c 3c 40     ?D@ <@@ |. @ .<@
     476:	30 40 3c 44 28 10 28 44 0c 50 50 50 3c 44 64 54     0@<D(.(D.PPP<DdT
     486:	4c 44 00 08 36 41 00 00 00 7f 00 00 00 41 36 08     LD..6A.......A6.
     496:	00 10 08 08 10 08                                   ......

0000049c <__c.2161>:
     49c:	6e 61 6e 00                                         nan.

000004a0 <__c.2159>:
     4a0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     4b0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     4c0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     4d0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     4e0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     4f0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     500:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     510:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     520:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     530:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     540:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     550:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     560:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     570:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     580:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     590:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000059e <__ctors_start>:
     59e:	21 23       	and	r18, r17

000005a0 <__ctors_end>:
     5a0:	4e 23       	and	r20, r30

000005a2 <__dtors_end>:
     5a2:	11 24       	eor	r1, r1
     5a4:	1f be       	out	0x3f, r1	; 63
     5a6:	cf ef       	ldi	r28, 0xFF	; 255
     5a8:	d0 e4       	ldi	r29, 0x40	; 64
     5aa:	de bf       	out	0x3e, r29	; 62
     5ac:	cd bf       	out	0x3d, r28	; 61

000005ae <__do_copy_data>:
     5ae:	13 e0       	ldi	r17, 0x03	; 3
     5b0:	a0 e0       	ldi	r26, 0x00	; 0
     5b2:	b1 e0       	ldi	r27, 0x01	; 1
     5b4:	e0 e6       	ldi	r30, 0x60	; 96
     5b6:	fa e6       	ldi	r31, 0x6A	; 106
     5b8:	00 e0       	ldi	r16, 0x00	; 0
     5ba:	0b bf       	out	0x3b, r16	; 59
     5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <__do_copy_data+0x14>
     5be:	07 90       	elpm	r0, Z+
     5c0:	0d 92       	st	X+, r0
     5c2:	ac 33       	cpi	r26, 0x3C	; 60
     5c4:	b1 07       	cpc	r27, r17
     5c6:	d9 f7       	brne	.-10     	; 0x5be <__do_copy_data+0x10>

000005c8 <__do_clear_bss>:
     5c8:	27 e0       	ldi	r18, 0x07	; 7
     5ca:	ac e3       	ldi	r26, 0x3C	; 60
     5cc:	b3 e0       	ldi	r27, 0x03	; 3
     5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <.do_clear_bss_start>

000005d0 <.do_clear_bss_loop>:
     5d0:	1d 92       	st	X+, r1

000005d2 <.do_clear_bss_start>:
     5d2:	a6 3b       	cpi	r26, 0xB6	; 182
     5d4:	b2 07       	cpc	r27, r18
     5d6:	e1 f7       	brne	.-8      	; 0x5d0 <.do_clear_bss_loop>

000005d8 <__do_global_ctors>:
     5d8:	15 e0       	ldi	r17, 0x05	; 5
     5da:	c0 ea       	ldi	r28, 0xA0	; 160
     5dc:	d5 e0       	ldi	r29, 0x05	; 5
     5de:	00 e0       	ldi	r16, 0x00	; 0
     5e0:	06 c0       	rjmp	.+12     	; 0x5ee <__do_global_ctors+0x16>
     5e2:	22 97       	sbiw	r28, 0x02	; 2
     5e4:	01 09       	sbc	r16, r1
     5e6:	fe 01       	movw	r30, r28
     5e8:	0b bf       	out	0x3b, r16	; 59
     5ea:	0e 94 6f 33 	call	0x66de	; 0x66de <__tablejump_elpm__>
     5ee:	ce 39       	cpi	r28, 0x9E	; 158
     5f0:	d1 07       	cpc	r29, r17
     5f2:	80 e0       	ldi	r24, 0x00	; 0
     5f4:	08 07       	cpc	r16, r24
     5f6:	a9 f7       	brne	.-22     	; 0x5e2 <__do_global_ctors+0xa>
     5f8:	0e 94 19 23 	call	0x4632	; 0x4632 <main>
     5fc:	0c 94 1f 35 	jmp	0x6a3e	; 0x6a3e <__do_global_dtors>

00000600 <__bad_interrupt>:
     600:	ff cc       	rjmp	.-1538   	; 0x0 <__vectors>

00000602 <_ZN7DisplayD1Ev>:
		for (uint8_t j = 0;j<64;j++)
		{
			Displayframe[i*SSD1306_WIDTH+j]=pgm_read_byte(&Glurak[i][j]);
		}
	}
}
     602:	9c 5f       	subi	r25, 0xFC	; 252
     604:	0c 94 76 23 	jmp	0x46ec	; 0x46ec <_ZN3I2CD1Ev>
     608:	08 95       	ret

0000060a <_ZN7Display10clearFrameEv>:
     60a:	fc 01       	movw	r30, r24
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	11 92       	st	Z+, r1
     612:	2f 5f       	subi	r18, 0xFF	; 255
     614:	3f 4f       	sbci	r19, 0xFF	; 255
     616:	21 15       	cp	r18, r1
     618:	84 e0       	ldi	r24, 0x04	; 4
     61a:	38 07       	cpc	r19, r24
     61c:	c9 f7       	brne	.-14     	; 0x610 <_ZN7Display10clearFrameEv+0x6>
     61e:	08 95       	ret

00000620 <_ZN7Display15ssd1306_commandEh>:
     620:	1f 93       	push	r17
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	16 2f       	mov	r17, r22
     628:	ec 01       	movw	r28, r24
     62a:	dc 5f       	subi	r29, 0xFC	; 252
     62c:	ce 01       	movw	r24, r28
     62e:	0e 94 77 23 	call	0x46ee	; 0x46ee <_ZN3I2C9twi_startEv>
     632:	68 e7       	ldi	r22, 0x78	; 120
     634:	ce 01       	movw	r24, r28
     636:	0e 94 7f 23 	call	0x46fe	; 0x46fe <_ZN3I2C9twi_writeEh>
     63a:	60 e0       	ldi	r22, 0x00	; 0
     63c:	ce 01       	movw	r24, r28
     63e:	0e 94 7f 23 	call	0x46fe	; 0x46fe <_ZN3I2C9twi_writeEh>
     642:	61 2f       	mov	r22, r17
     644:	ce 01       	movw	r24, r28
     646:	0e 94 7f 23 	call	0x46fe	; 0x46fe <_ZN3I2C9twi_writeEh>
     64a:	ce 01       	movw	r24, r28
     64c:	0e 94 7b 23 	call	0x46f6	; 0x46f6 <_ZN3I2C8twi_stopEv>
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	08 95       	ret

00000658 <_ZN7Display17InitializeDisplayEv>:
     658:	cf 93       	push	r28
     65a:	df 93       	push	r29
     65c:	ec 01       	movw	r28, r24
     65e:	6e ea       	ldi	r22, 0xAE	; 174
     660:	df df       	rcall	.-66     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     662:	65 ed       	ldi	r22, 0xD5	; 213
     664:	ce 01       	movw	r24, r28
     666:	dc df       	rcall	.-72     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     668:	60 e8       	ldi	r22, 0x80	; 128
     66a:	ce 01       	movw	r24, r28
     66c:	d9 df       	rcall	.-78     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     66e:	68 ea       	ldi	r22, 0xA8	; 168
     670:	ce 01       	movw	r24, r28
     672:	d6 df       	rcall	.-84     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     674:	6f e3       	ldi	r22, 0x3F	; 63
     676:	ce 01       	movw	r24, r28
     678:	d3 df       	rcall	.-90     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     67a:	63 ed       	ldi	r22, 0xD3	; 211
     67c:	ce 01       	movw	r24, r28
     67e:	d0 df       	rcall	.-96     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	ce 01       	movw	r24, r28
     684:	cd df       	rcall	.-102    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     686:	60 e4       	ldi	r22, 0x40	; 64
     688:	ce 01       	movw	r24, r28
     68a:	ca df       	rcall	.-108    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     68c:	6d e8       	ldi	r22, 0x8D	; 141
     68e:	ce 01       	movw	r24, r28
     690:	c7 df       	rcall	.-114    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     692:	64 e1       	ldi	r22, 0x14	; 20
     694:	ce 01       	movw	r24, r28
     696:	c4 df       	rcall	.-120    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     698:	60 e2       	ldi	r22, 0x20	; 32
     69a:	ce 01       	movw	r24, r28
     69c:	c1 df       	rcall	.-126    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	ce 01       	movw	r24, r28
     6a2:	be df       	rcall	.-132    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6a4:	61 ea       	ldi	r22, 0xA1	; 161
     6a6:	ce 01       	movw	r24, r28
     6a8:	bb df       	rcall	.-138    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6aa:	68 ec       	ldi	r22, 0xC8	; 200
     6ac:	ce 01       	movw	r24, r28
     6ae:	b8 df       	rcall	.-144    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6b0:	6a ed       	ldi	r22, 0xDA	; 218
     6b2:	ce 01       	movw	r24, r28
     6b4:	b5 df       	rcall	.-150    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6b6:	62 e1       	ldi	r22, 0x12	; 18
     6b8:	ce 01       	movw	r24, r28
     6ba:	b2 df       	rcall	.-156    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6bc:	61 e8       	ldi	r22, 0x81	; 129
     6be:	ce 01       	movw	r24, r28
     6c0:	af df       	rcall	.-162    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6c2:	6f ec       	ldi	r22, 0xCF	; 207
     6c4:	ce 01       	movw	r24, r28
     6c6:	ac df       	rcall	.-168    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6c8:	69 ed       	ldi	r22, 0xD9	; 217
     6ca:	ce 01       	movw	r24, r28
     6cc:	a9 df       	rcall	.-174    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6ce:	61 ef       	ldi	r22, 0xF1	; 241
     6d0:	ce 01       	movw	r24, r28
     6d2:	a6 df       	rcall	.-180    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6d4:	6b ed       	ldi	r22, 0xDB	; 219
     6d6:	ce 01       	movw	r24, r28
     6d8:	a3 df       	rcall	.-186    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6da:	60 e4       	ldi	r22, 0x40	; 64
     6dc:	ce 01       	movw	r24, r28
     6de:	a0 df       	rcall	.-192    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6e0:	64 ea       	ldi	r22, 0xA4	; 164
     6e2:	ce 01       	movw	r24, r28
     6e4:	9d df       	rcall	.-198    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6e6:	66 ea       	ldi	r22, 0xA6	; 166
     6e8:	ce 01       	movw	r24, r28
     6ea:	9a df       	rcall	.-204    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6ec:	6f ea       	ldi	r22, 0xAF	; 175
     6ee:	ce 01       	movw	r24, r28
     6f0:	97 df       	rcall	.-210    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <_ZN7DisplayC1Ev>:
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	ec 01       	movw	r28, r24
     6fe:	9c 5f       	subi	r25, 0xFC	; 252
     700:	0e 94 72 23 	call	0x46e4	; 0x46e4 <_ZN3I2CC1Ev>
     704:	ce 01       	movw	r24, r28
     706:	a8 df       	rcall	.-176    	; 0x658 <_ZN7Display17InitializeDisplayEv>
     708:	df 91       	pop	r29
     70a:	cf 91       	pop	r28
     70c:	08 95       	ret

0000070e <_ZN7Display6invertEh>:
     70e:	66 23       	and	r22, r22
     710:	19 f0       	breq	.+6      	; 0x718 <_ZN7Display6invertEh+0xa>
     712:	67 ea       	ldi	r22, 0xA7	; 167
     714:	85 cf       	rjmp	.-246    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     716:	08 95       	ret
     718:	66 ea       	ldi	r22, 0xA6	; 166
     71a:	82 cf       	rjmp	.-252    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     71c:	08 95       	ret

0000071e <_ZN7Display9sendFrameEv>:
     71e:	ef 92       	push	r14
     720:	ff 92       	push	r15
     722:	0f 93       	push	r16
     724:	1f 93       	push	r17
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	8c 01       	movw	r16, r24
     72c:	61 e2       	ldi	r22, 0x21	; 33
     72e:	78 df       	rcall	.-272    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     730:	60 e0       	ldi	r22, 0x00	; 0
     732:	c8 01       	movw	r24, r16
     734:	75 df       	rcall	.-278    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     736:	6f e7       	ldi	r22, 0x7F	; 127
     738:	c8 01       	movw	r24, r16
     73a:	72 df       	rcall	.-284    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     73c:	62 e2       	ldi	r22, 0x22	; 34
     73e:	c8 01       	movw	r24, r16
     740:	6f df       	rcall	.-290    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	c8 01       	movw	r24, r16
     746:	6c df       	rcall	.-296    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     748:	67 e0       	ldi	r22, 0x07	; 7
     74a:	c8 01       	movw	r24, r16
     74c:	69 df       	rcall	.-302    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     74e:	78 01       	movw	r14, r16
     750:	8c ef       	ldi	r24, 0xFC	; 252
     752:	f8 1a       	sub	r15, r24
     754:	c7 01       	movw	r24, r14
     756:	0e 94 77 23 	call	0x46ee	; 0x46ee <_ZN3I2C9twi_startEv>
     75a:	68 e7       	ldi	r22, 0x78	; 120
     75c:	c7 01       	movw	r24, r14
     75e:	0e 94 7f 23 	call	0x46fe	; 0x46fe <_ZN3I2C9twi_writeEh>
     762:	60 e4       	ldi	r22, 0x40	; 64
     764:	c7 01       	movw	r24, r14
     766:	0e 94 7f 23 	call	0x46fe	; 0x46fe <_ZN3I2C9twi_writeEh>
     76a:	c0 e0       	ldi	r28, 0x00	; 0
     76c:	d0 e0       	ldi	r29, 0x00	; 0
     76e:	f8 01       	movw	r30, r16
     770:	61 91       	ld	r22, Z+
     772:	8f 01       	movw	r16, r30
     774:	c7 01       	movw	r24, r14
     776:	0e 94 7f 23 	call	0x46fe	; 0x46fe <_ZN3I2C9twi_writeEh>
     77a:	21 96       	adiw	r28, 0x01	; 1
     77c:	c1 15       	cp	r28, r1
     77e:	f4 e0       	ldi	r31, 0x04	; 4
     780:	df 07       	cpc	r29, r31
     782:	a9 f7       	brne	.-22     	; 0x76e <_ZN7Display9sendFrameEv+0x50>
     784:	c7 01       	movw	r24, r14
     786:	0e 94 7b 23 	call	0x46f6	; 0x46f6 <_ZN3I2C8twi_stopEv>
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	1f 91       	pop	r17
     790:	0f 91       	pop	r16
     792:	ff 90       	pop	r15
     794:	ef 90       	pop	r14
     796:	08 95       	ret

00000798 <_ZN7Display9drawPixelEhhh>:
     798:	66 23       	and	r22, r22
     79a:	bc f1       	brlt	.+110    	; 0x80a <_ZN7Display9drawPixelEhhh+0x72>
     79c:	40 34       	cpi	r20, 0x40	; 64
     79e:	a8 f5       	brcc	.+106    	; 0x80a <_ZN7Display9drawPixelEhhh+0x72>
     7a0:	21 11       	cpse	r18, r1
     7a2:	19 c0       	rjmp	.+50     	; 0x7d6 <_ZN7Display9drawPixelEhhh+0x3e>
     7a4:	e4 2f       	mov	r30, r20
     7a6:	e6 95       	lsr	r30
     7a8:	e6 95       	lsr	r30
     7aa:	e6 95       	lsr	r30
     7ac:	20 e8       	ldi	r18, 0x80	; 128
     7ae:	e2 9f       	mul	r30, r18
     7b0:	f0 01       	movw	r30, r0
     7b2:	11 24       	eor	r1, r1
     7b4:	e6 0f       	add	r30, r22
     7b6:	f1 1d       	adc	r31, r1
     7b8:	e8 0f       	add	r30, r24
     7ba:	f9 1f       	adc	r31, r25
     7bc:	47 70       	andi	r20, 0x07	; 7
     7be:	21 e0       	ldi	r18, 0x01	; 1
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	c9 01       	movw	r24, r18
     7c4:	02 c0       	rjmp	.+4      	; 0x7ca <_ZN7Display9drawPixelEhhh+0x32>
     7c6:	88 0f       	add	r24, r24
     7c8:	99 1f       	adc	r25, r25
     7ca:	4a 95       	dec	r20
     7cc:	e2 f7       	brpl	.-8      	; 0x7c6 <_ZN7Display9drawPixelEhhh+0x2e>
     7ce:	90 81       	ld	r25, Z
     7d0:	89 2b       	or	r24, r25
     7d2:	80 83       	st	Z, r24
     7d4:	08 95       	ret
     7d6:	e4 2f       	mov	r30, r20
     7d8:	e6 95       	lsr	r30
     7da:	e6 95       	lsr	r30
     7dc:	e6 95       	lsr	r30
     7de:	30 e8       	ldi	r19, 0x80	; 128
     7e0:	e3 9f       	mul	r30, r19
     7e2:	f0 01       	movw	r30, r0
     7e4:	11 24       	eor	r1, r1
     7e6:	e6 0f       	add	r30, r22
     7e8:	f1 1d       	adc	r31, r1
     7ea:	e8 0f       	add	r30, r24
     7ec:	f9 1f       	adc	r31, r25
     7ee:	47 70       	andi	r20, 0x07	; 7
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	9c 01       	movw	r18, r24
     7f6:	02 c0       	rjmp	.+4      	; 0x7fc <_ZN7Display9drawPixelEhhh+0x64>
     7f8:	22 0f       	add	r18, r18
     7fa:	33 1f       	adc	r19, r19
     7fc:	4a 95       	dec	r20
     7fe:	e2 f7       	brpl	.-8      	; 0x7f8 <_ZN7Display9drawPixelEhhh+0x60>
     800:	a9 01       	movw	r20, r18
     802:	40 95       	com	r20
     804:	80 81       	ld	r24, Z
     806:	48 23       	and	r20, r24
     808:	40 83       	st	Z, r20
     80a:	08 95       	ret

0000080c <_ZN7Display9drawVLineEhhh>:
     80c:	ff 92       	push	r15
     80e:	0f 93       	push	r16
     810:	1f 93       	push	r17
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	ec 01       	movw	r28, r24
     818:	06 2f       	mov	r16, r22
     81a:	22 23       	and	r18, r18
     81c:	59 f0       	breq	.+22     	; 0x834 <_ZN7Display9drawVLineEhhh+0x28>
     81e:	f2 2e       	mov	r15, r18
     820:	f4 0e       	add	r15, r20
     822:	14 2f       	mov	r17, r20
     824:	20 e0       	ldi	r18, 0x00	; 0
     826:	41 2f       	mov	r20, r17
     828:	60 2f       	mov	r22, r16
     82a:	ce 01       	movw	r24, r28
     82c:	b5 df       	rcall	.-150    	; 0x798 <_ZN7Display9drawPixelEhhh>
     82e:	1f 5f       	subi	r17, 0xFF	; 255
     830:	1f 11       	cpse	r17, r15
     832:	f8 cf       	rjmp	.-16     	; 0x824 <_ZN7Display9drawVLineEhhh+0x18>
     834:	df 91       	pop	r29
     836:	cf 91       	pop	r28
     838:	1f 91       	pop	r17
     83a:	0f 91       	pop	r16
     83c:	ff 90       	pop	r15
     83e:	08 95       	ret

00000840 <_ZN7Display9drawHLineEhhh>:
     840:	ff 92       	push	r15
     842:	0f 93       	push	r16
     844:	1f 93       	push	r17
     846:	cf 93       	push	r28
     848:	df 93       	push	r29
     84a:	ec 01       	movw	r28, r24
     84c:	04 2f       	mov	r16, r20
     84e:	22 23       	and	r18, r18
     850:	59 f0       	breq	.+22     	; 0x868 <_ZN7Display9drawHLineEhhh+0x28>
     852:	f2 2e       	mov	r15, r18
     854:	f6 0e       	add	r15, r22
     856:	16 2f       	mov	r17, r22
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	40 2f       	mov	r20, r16
     85c:	61 2f       	mov	r22, r17
     85e:	ce 01       	movw	r24, r28
     860:	9b df       	rcall	.-202    	; 0x798 <_ZN7Display9drawPixelEhhh>
     862:	1f 5f       	subi	r17, 0xFF	; 255
     864:	1f 11       	cpse	r17, r15
     866:	f8 cf       	rjmp	.-16     	; 0x858 <_ZN7Display9drawHLineEhhh+0x18>
     868:	df 91       	pop	r29
     86a:	cf 91       	pop	r28
     86c:	1f 91       	pop	r17
     86e:	0f 91       	pop	r16
     870:	ff 90       	pop	r15
     872:	08 95       	ret

00000874 <_ZN7Display9draw_lineEhhhf>:
     874:	2f 92       	push	r2
     876:	3f 92       	push	r3
     878:	4f 92       	push	r4
     87a:	5f 92       	push	r5
     87c:	6f 92       	push	r6
     87e:	7f 92       	push	r7
     880:	8f 92       	push	r8
     882:	9f 92       	push	r9
     884:	af 92       	push	r10
     886:	bf 92       	push	r11
     888:	cf 92       	push	r12
     88a:	df 92       	push	r13
     88c:	ef 92       	push	r14
     88e:	ff 92       	push	r15
     890:	0f 93       	push	r16
     892:	1f 93       	push	r17
     894:	cf 93       	push	r28
     896:	df 93       	push	r29
     898:	cd b7       	in	r28, 0x3d	; 61
     89a:	de b7       	in	r29, 0x3e	; 62
     89c:	2b 97       	sbiw	r28, 0x0b	; 11
     89e:	0f b6       	in	r0, 0x3f	; 63
     8a0:	f8 94       	cli
     8a2:	de bf       	out	0x3e, r29	; 62
     8a4:	0f be       	out	0x3f, r0	; 63
     8a6:	cd bf       	out	0x3d, r28	; 61
     8a8:	1c 01       	movw	r2, r24
     8aa:	d6 2e       	mov	r13, r22
     8ac:	c4 2e       	mov	r12, r20
     8ae:	29 83       	std	Y+1, r18	; 0x01
     8b0:	22 23       	and	r18, r18
     8b2:	09 f4       	brne	.+2      	; 0x8b6 <_ZN7Display9draw_lineEhhhf+0x42>
     8b4:	68 c0       	rjmp	.+208    	; 0x986 <_ZN7Display9draw_lineEhhhf+0x112>
     8b6:	c8 01       	movw	r24, r16
     8b8:	b7 01       	movw	r22, r14
     8ba:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <cos>
     8be:	2b 01       	movw	r4, r22
     8c0:	3c 01       	movw	r6, r24
     8c2:	c8 01       	movw	r24, r16
     8c4:	b7 01       	movw	r22, r14
     8c6:	0e 94 64 2f 	call	0x5ec8	; 0x5ec8 <sin>
     8ca:	4b 01       	movw	r8, r22
     8cc:	5c 01       	movw	r10, r24
     8ce:	1b 86       	std	Y+11, r1	; 0x0b
     8d0:	1a 86       	std	Y+10, r1	; 0x0a
     8d2:	8c 2d       	mov	r24, r12
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	a0 e0       	ldi	r26, 0x00	; 0
     8d8:	b0 e0       	ldi	r27, 0x00	; 0
     8da:	8a 83       	std	Y+2, r24	; 0x02
     8dc:	9b 83       	std	Y+3, r25	; 0x03
     8de:	ac 83       	std	Y+4, r26	; 0x04
     8e0:	bd 83       	std	Y+5, r27	; 0x05
     8e2:	8d 2d       	mov	r24, r13
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	b0 e0       	ldi	r27, 0x00	; 0
     8ea:	8e 83       	std	Y+6, r24	; 0x06
     8ec:	9f 83       	std	Y+7, r25	; 0x07
     8ee:	a8 87       	std	Y+8, r26	; 0x08
     8f0:	b9 87       	std	Y+9, r27	; 0x09
     8f2:	aa 85       	ldd	r26, Y+10	; 0x0a
     8f4:	bb 85       	ldd	r27, Y+11	; 0x0b
     8f6:	bd 01       	movw	r22, r26
     8f8:	88 27       	eor	r24, r24
     8fa:	77 fd       	sbrc	r23, 7
     8fc:	80 95       	com	r24
     8fe:	98 2f       	mov	r25, r24
     900:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     904:	a5 01       	movw	r20, r10
     906:	94 01       	movw	r18, r8
     908:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     90c:	6b 01       	movw	r12, r22
     90e:	7c 01       	movw	r14, r24
     910:	6a 81       	ldd	r22, Y+2	; 0x02
     912:	7b 81       	ldd	r23, Y+3	; 0x03
     914:	8c 81       	ldd	r24, Y+4	; 0x04
     916:	9d 81       	ldd	r25, Y+5	; 0x05
     918:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     91c:	9b 01       	movw	r18, r22
     91e:	ac 01       	movw	r20, r24
     920:	c7 01       	movw	r24, r14
     922:	b6 01       	movw	r22, r12
     924:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     928:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
     92c:	16 2f       	mov	r17, r22
     92e:	6a 85       	ldd	r22, Y+10	; 0x0a
     930:	7b 85       	ldd	r23, Y+11	; 0x0b
     932:	71 95       	neg	r23
     934:	61 95       	neg	r22
     936:	71 09       	sbc	r23, r1
     938:	88 27       	eor	r24, r24
     93a:	77 fd       	sbrc	r23, 7
     93c:	80 95       	com	r24
     93e:	98 2f       	mov	r25, r24
     940:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     944:	a3 01       	movw	r20, r6
     946:	92 01       	movw	r18, r4
     948:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     94c:	6b 01       	movw	r12, r22
     94e:	7c 01       	movw	r14, r24
     950:	6e 81       	ldd	r22, Y+6	; 0x06
     952:	7f 81       	ldd	r23, Y+7	; 0x07
     954:	88 85       	ldd	r24, Y+8	; 0x08
     956:	99 85       	ldd	r25, Y+9	; 0x09
     958:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     95c:	9b 01       	movw	r18, r22
     95e:	ac 01       	movw	r20, r24
     960:	c7 01       	movw	r24, r14
     962:	b6 01       	movw	r22, r12
     964:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     968:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
     96c:	20 e0       	ldi	r18, 0x00	; 0
     96e:	41 2f       	mov	r20, r17
     970:	c1 01       	movw	r24, r2
     972:	12 df       	rcall	.-476    	; 0x798 <_ZN7Display9drawPixelEhhh>
     974:	ea 85       	ldd	r30, Y+10	; 0x0a
     976:	fb 85       	ldd	r31, Y+11	; 0x0b
     978:	31 96       	adiw	r30, 0x01	; 1
     97a:	fb 87       	std	Y+11, r31	; 0x0b
     97c:	ea 87       	std	Y+10, r30	; 0x0a
     97e:	f9 81       	ldd	r31, Y+1	; 0x01
     980:	ef 17       	cp	r30, r31
     982:	08 f4       	brcc	.+2      	; 0x986 <_ZN7Display9draw_lineEhhhf+0x112>
     984:	b6 cf       	rjmp	.-148    	; 0x8f2 <_ZN7Display9draw_lineEhhhf+0x7e>
     986:	2b 96       	adiw	r28, 0x0b	; 11
     988:	0f b6       	in	r0, 0x3f	; 63
     98a:	f8 94       	cli
     98c:	de bf       	out	0x3e, r29	; 62
     98e:	0f be       	out	0x3f, r0	; 63
     990:	cd bf       	out	0x3d, r28	; 61
     992:	df 91       	pop	r29
     994:	cf 91       	pop	r28
     996:	1f 91       	pop	r17
     998:	0f 91       	pop	r16
     99a:	ff 90       	pop	r15
     99c:	ef 90       	pop	r14
     99e:	df 90       	pop	r13
     9a0:	cf 90       	pop	r12
     9a2:	bf 90       	pop	r11
     9a4:	af 90       	pop	r10
     9a6:	9f 90       	pop	r9
     9a8:	8f 90       	pop	r8
     9aa:	7f 90       	pop	r7
     9ac:	6f 90       	pop	r6
     9ae:	5f 90       	pop	r5
     9b0:	4f 90       	pop	r4
     9b2:	3f 90       	pop	r3
     9b4:	2f 90       	pop	r2
     9b6:	08 95       	ret

000009b8 <_ZN7Display13draw_triangleEhhhff>:
     9b8:	2f 92       	push	r2
     9ba:	3f 92       	push	r3
     9bc:	4f 92       	push	r4
     9be:	5f 92       	push	r5
     9c0:	6f 92       	push	r6
     9c2:	7f 92       	push	r7
     9c4:	8f 92       	push	r8
     9c6:	9f 92       	push	r9
     9c8:	af 92       	push	r10
     9ca:	bf 92       	push	r11
     9cc:	cf 92       	push	r12
     9ce:	df 92       	push	r13
     9d0:	ef 92       	push	r14
     9d2:	ff 92       	push	r15
     9d4:	0f 93       	push	r16
     9d6:	1f 93       	push	r17
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	cd b7       	in	r28, 0x3d	; 61
     9de:	de b7       	in	r29, 0x3e	; 62
     9e0:	60 97       	sbiw	r28, 0x10	; 16
     9e2:	0f b6       	in	r0, 0x3f	; 63
     9e4:	f8 94       	cli
     9e6:	de bf       	out	0x3e, r29	; 62
     9e8:	0f be       	out	0x3f, r0	; 63
     9ea:	cd bf       	out	0x3d, r28	; 61
     9ec:	1c 01       	movw	r2, r24
     9ee:	6f 87       	std	Y+15, r22	; 0x0f
     9f0:	4d 83       	std	Y+5, r20	; 0x05
     9f2:	29 83       	std	Y+1, r18	; 0x01
     9f4:	c6 01       	movw	r24, r12
     9f6:	b5 01       	movw	r22, r10
     9f8:	25 e3       	ldi	r18, 0x35	; 53
     9fa:	3a ef       	ldi	r19, 0xFA	; 250
     9fc:	4e e8       	ldi	r20, 0x8E	; 142
     9fe:	5c e3       	ldi	r21, 0x3C	; 60
     a00:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     a04:	4b 01       	movw	r8, r22
     a06:	5c 01       	movw	r10, r24
     a08:	25 e3       	ldi	r18, 0x35	; 53
     a0a:	3a ef       	ldi	r19, 0xFA	; 250
     a0c:	4e e8       	ldi	r20, 0x8E	; 142
     a0e:	5c e3       	ldi	r21, 0x3C	; 60
     a10:	c8 01       	movw	r24, r16
     a12:	b7 01       	movw	r22, r14
     a14:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     a18:	6e 83       	std	Y+6, r22	; 0x06
     a1a:	7f 83       	std	Y+7, r23	; 0x07
     a1c:	88 87       	std	Y+8, r24	; 0x08
     a1e:	99 87       	std	Y+9, r25	; 0x09
     a20:	79 80       	ldd	r7, Y+1	; 0x01
     a22:	76 94       	lsr	r7
     a24:	85 01       	movw	r16, r10
     a26:	74 01       	movw	r14, r8
     a28:	27 2d       	mov	r18, r7
     a2a:	4d 81       	ldd	r20, Y+5	; 0x05
     a2c:	6f 85       	ldd	r22, Y+15	; 0x0f
     a2e:	c1 01       	movw	r24, r2
     a30:	21 df       	rcall	.-446    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     a32:	2b ed       	ldi	r18, 0xDB	; 219
     a34:	3f e0       	ldi	r19, 0x0F	; 15
     a36:	49 e4       	ldi	r20, 0x49	; 73
     a38:	50 e4       	ldi	r21, 0x40	; 64
     a3a:	c5 01       	movw	r24, r10
     a3c:	b4 01       	movw	r22, r8
     a3e:	0e 94 3a 2c 	call	0x5874	; 0x5874 <__subsf3>
     a42:	7b 01       	movw	r14, r22
     a44:	8c 01       	movw	r16, r24
     a46:	27 2d       	mov	r18, r7
     a48:	4d 81       	ldd	r20, Y+5	; 0x05
     a4a:	6f 85       	ldd	r22, Y+15	; 0x0f
     a4c:	c1 01       	movw	r24, r2
     a4e:	12 df       	rcall	.-476    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     a50:	6e 81       	ldd	r22, Y+6	; 0x06
     a52:	7f 81       	ldd	r23, Y+7	; 0x07
     a54:	88 85       	ldd	r24, Y+8	; 0x08
     a56:	99 85       	ldd	r25, Y+9	; 0x09
     a58:	0e 94 6d 2f 	call	0x5eda	; 0x5eda <tan>
     a5c:	6b 01       	movw	r12, r22
     a5e:	7c 01       	movw	r14, r24
     a60:	67 2d       	mov	r22, r7
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	80 e0       	ldi	r24, 0x00	; 0
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     a6c:	a7 01       	movw	r20, r14
     a6e:	96 01       	movw	r18, r12
     a70:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     a74:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
     a78:	68 8b       	std	Y+16, r22	; 0x10
     a7a:	2b ed       	ldi	r18, 0xDB	; 219
     a7c:	3f e0       	ldi	r19, 0x0F	; 15
     a7e:	49 ec       	ldi	r20, 0xC9	; 201
     a80:	5f e3       	ldi	r21, 0x3F	; 63
     a82:	c5 01       	movw	r24, r10
     a84:	b4 01       	movw	r22, r8
     a86:	0e 94 3a 2c 	call	0x5874	; 0x5874 <__subsf3>
     a8a:	6a 87       	std	Y+10, r22	; 0x0a
     a8c:	7b 87       	std	Y+11, r23	; 0x0b
     a8e:	8c 87       	std	Y+12, r24	; 0x0c
     a90:	9d 87       	std	Y+13, r25	; 0x0d
     a92:	7b 01       	movw	r14, r22
     a94:	8c 01       	movw	r16, r24
     a96:	28 89       	ldd	r18, Y+16	; 0x10
     a98:	4d 81       	ldd	r20, Y+5	; 0x05
     a9a:	6f 85       	ldd	r22, Y+15	; 0x0f
     a9c:	c1 01       	movw	r24, r2
     a9e:	ea de       	rcall	.-556    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     aa0:	6e 81       	ldd	r22, Y+6	; 0x06
     aa2:	7f 81       	ldd	r23, Y+7	; 0x07
     aa4:	88 85       	ldd	r24, Y+8	; 0x08
     aa6:	99 85       	ldd	r25, Y+9	; 0x09
     aa8:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <cos>
     aac:	6b 01       	movw	r12, r22
     aae:	7c 01       	movw	r14, r24
     ab0:	29 81       	ldd	r18, Y+1	; 0x01
     ab2:	62 2f       	mov	r22, r18
     ab4:	70 e0       	ldi	r23, 0x00	; 0
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     abe:	2b 01       	movw	r4, r22
     ac0:	3c 01       	movw	r6, r24
     ac2:	a7 01       	movw	r20, r14
     ac4:	96 01       	movw	r18, r12
     ac6:	c7 01       	movw	r24, r14
     ac8:	b6 01       	movw	r22, r12
     aca:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     ace:	9b 01       	movw	r18, r22
     ad0:	ac 01       	movw	r20, r24
     ad2:	c3 01       	movw	r24, r6
     ad4:	b2 01       	movw	r22, r4
     ad6:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
     ada:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
     ade:	6e 87       	std	Y+14, r22	; 0x0e
     ae0:	e8 89       	ldd	r30, Y+16	; 0x10
     ae2:	6e 2f       	mov	r22, r30
     ae4:	70 e0       	ldi	r23, 0x00	; 0
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     aee:	69 83       	std	Y+1, r22	; 0x01
     af0:	7a 83       	std	Y+2, r23	; 0x02
     af2:	8b 83       	std	Y+3, r24	; 0x03
     af4:	9c 83       	std	Y+4, r25	; 0x04
     af6:	6a 85       	ldd	r22, Y+10	; 0x0a
     af8:	7b 85       	ldd	r23, Y+11	; 0x0b
     afa:	8c 85       	ldd	r24, Y+12	; 0x0c
     afc:	9d 85       	ldd	r25, Y+13	; 0x0d
     afe:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <cos>
     b02:	6b 01       	movw	r12, r22
     b04:	7c 01       	movw	r14, r24
     b06:	ff 85       	ldd	r31, Y+15	; 0x0f
     b08:	6f 2f       	mov	r22, r31
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	80 e0       	ldi	r24, 0x00	; 0
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     b14:	2b 01       	movw	r4, r22
     b16:	3c 01       	movw	r6, r24
     b18:	a7 01       	movw	r20, r14
     b1a:	96 01       	movw	r18, r12
     b1c:	69 81       	ldd	r22, Y+1	; 0x01
     b1e:	7a 81       	ldd	r23, Y+2	; 0x02
     b20:	8b 81       	ldd	r24, Y+3	; 0x03
     b22:	9c 81       	ldd	r25, Y+4	; 0x04
     b24:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     b28:	9b 01       	movw	r18, r22
     b2a:	ac 01       	movw	r20, r24
     b2c:	c3 01       	movw	r24, r6
     b2e:	b2 01       	movw	r22, r4
     b30:	0e 94 3a 2c 	call	0x5874	; 0x5874 <__subsf3>
     b34:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
     b38:	6f 87       	std	Y+15, r22	; 0x0f
     b3a:	6a 85       	ldd	r22, Y+10	; 0x0a
     b3c:	7b 85       	ldd	r23, Y+11	; 0x0b
     b3e:	8c 85       	ldd	r24, Y+12	; 0x0c
     b40:	9d 85       	ldd	r25, Y+13	; 0x0d
     b42:	0e 94 64 2f 	call	0x5ec8	; 0x5ec8 <sin>
     b46:	6b 01       	movw	r12, r22
     b48:	7c 01       	movw	r14, r24
     b4a:	2d 81       	ldd	r18, Y+5	; 0x05
     b4c:	62 2f       	mov	r22, r18
     b4e:	70 e0       	ldi	r23, 0x00	; 0
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     b58:	2b 01       	movw	r4, r22
     b5a:	3c 01       	movw	r6, r24
     b5c:	a7 01       	movw	r20, r14
     b5e:	96 01       	movw	r18, r12
     b60:	69 81       	ldd	r22, Y+1	; 0x01
     b62:	7a 81       	ldd	r23, Y+2	; 0x02
     b64:	8b 81       	ldd	r24, Y+3	; 0x03
     b66:	9c 81       	ldd	r25, Y+4	; 0x04
     b68:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     b6c:	9b 01       	movw	r18, r22
     b6e:	ac 01       	movw	r20, r24
     b70:	c3 01       	movw	r24, r6
     b72:	b2 01       	movw	r22, r4
     b74:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     b78:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
     b7c:	d6 2e       	mov	r13, r22
     b7e:	a5 01       	movw	r20, r10
     b80:	94 01       	movw	r18, r8
     b82:	6e 81       	ldd	r22, Y+6	; 0x06
     b84:	7f 81       	ldd	r23, Y+7	; 0x07
     b86:	88 85       	ldd	r24, Y+8	; 0x08
     b88:	99 85       	ldd	r25, Y+9	; 0x09
     b8a:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     b8e:	7b 01       	movw	r14, r22
     b90:	8c 01       	movw	r16, r24
     b92:	2e 85       	ldd	r18, Y+14	; 0x0e
     b94:	4d 2d       	mov	r20, r13
     b96:	6f 85       	ldd	r22, Y+15	; 0x0f
     b98:	c1 01       	movw	r24, r2
     b9a:	6c de       	rcall	.-808    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     b9c:	2e 81       	ldd	r18, Y+6	; 0x06
     b9e:	3f 81       	ldd	r19, Y+7	; 0x07
     ba0:	48 85       	ldd	r20, Y+8	; 0x08
     ba2:	59 85       	ldd	r21, Y+9	; 0x09
     ba4:	c5 01       	movw	r24, r10
     ba6:	b4 01       	movw	r22, r8
     ba8:	0e 94 3a 2c 	call	0x5874	; 0x5874 <__subsf3>
     bac:	2b ed       	ldi	r18, 0xDB	; 219
     bae:	3f e0       	ldi	r19, 0x0F	; 15
     bb0:	49 e4       	ldi	r20, 0x49	; 73
     bb2:	50 e4       	ldi	r21, 0x40	; 64
     bb4:	0e 94 3a 2c 	call	0x5874	; 0x5874 <__subsf3>
     bb8:	7b 01       	movw	r14, r22
     bba:	8c 01       	movw	r16, r24
     bbc:	2e 85       	ldd	r18, Y+14	; 0x0e
     bbe:	4d 2d       	mov	r20, r13
     bc0:	6f 85       	ldd	r22, Y+15	; 0x0f
     bc2:	c1 01       	movw	r24, r2
     bc4:	57 de       	rcall	.-850    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     bc6:	60 96       	adiw	r28, 0x10	; 16
     bc8:	0f b6       	in	r0, 0x3f	; 63
     bca:	f8 94       	cli
     bcc:	de bf       	out	0x3e, r29	; 62
     bce:	0f be       	out	0x3f, r0	; 63
     bd0:	cd bf       	out	0x3d, r28	; 61
     bd2:	df 91       	pop	r29
     bd4:	cf 91       	pop	r28
     bd6:	1f 91       	pop	r17
     bd8:	0f 91       	pop	r16
     bda:	ff 90       	pop	r15
     bdc:	ef 90       	pop	r14
     bde:	df 90       	pop	r13
     be0:	cf 90       	pop	r12
     be2:	bf 90       	pop	r11
     be4:	af 90       	pop	r10
     be6:	9f 90       	pop	r9
     be8:	8f 90       	pop	r8
     bea:	7f 90       	pop	r7
     bec:	6f 90       	pop	r6
     bee:	5f 90       	pop	r5
     bf0:	4f 90       	pop	r4
     bf2:	3f 90       	pop	r3
     bf4:	2f 90       	pop	r2
     bf6:	08 95       	ret

00000bf8 <_ZN7Display9draw_ASCIEhhh>:
     bf8:	0f 93       	push	r16
     bfa:	1f 93       	push	r17
     bfc:	cf 93       	push	r28
     bfe:	df 93       	push	r29
     c00:	61 32       	cpi	r22, 0x21	; 33
     c02:	08 f4       	brcc	.+2      	; 0xc06 <_ZN7Display9draw_ASCIEhhh+0xe>
     c04:	42 c0       	rjmp	.+132    	; 0xc8a <_ZN7Display9draw_ASCIEhhh+0x92>
     c06:	a4 2f       	mov	r26, r20
     c08:	b0 e0       	ldi	r27, 0x00	; 0
     c0a:	02 2f       	mov	r16, r18
     c0c:	06 95       	lsr	r16
     c0e:	06 95       	lsr	r16
     c10:	06 95       	lsr	r16
     c12:	30 e8       	ldi	r19, 0x80	; 128
     c14:	03 9f       	mul	r16, r19
     c16:	80 01       	movw	r16, r0
     c18:	11 24       	eor	r1, r1
     c1a:	ed 01       	movw	r28, r26
     c1c:	c0 0f       	add	r28, r16
     c1e:	d1 1f       	adc	r29, r17
     c20:	00 58       	subi	r16, 0x80	; 128
     c22:	1f 4f       	sbci	r17, 0xFF	; 255
     c24:	0a 0f       	add	r16, r26
     c26:	1b 1f       	adc	r17, r27
     c28:	61 52       	subi	r22, 0x21	; 33
     c2a:	46 2f       	mov	r20, r22
     c2c:	50 e0       	ldi	r21, 0x00	; 0
     c2e:	fa 01       	movw	r30, r20
     c30:	ee 0f       	add	r30, r30
     c32:	ff 1f       	adc	r31, r31
     c34:	ee 0f       	add	r30, r30
     c36:	ff 1f       	adc	r31, r31
     c38:	e4 0f       	add	r30, r20
     c3a:	f5 1f       	adc	r31, r21
     c3c:	ea 53       	subi	r30, 0x3A	; 58
     c3e:	fd 4f       	sbci	r31, 0xFD	; 253
     c40:	dc 01       	movw	r26, r24
     c42:	ac 0f       	add	r26, r28
     c44:	bd 1f       	adc	r27, r29
     c46:	ae 01       	movw	r20, r28
     c48:	05 96       	adiw	r24, 0x05	; 5
     c4a:	8c 0f       	add	r24, r28
     c4c:	9d 1f       	adc	r25, r29
     c4e:	27 70       	andi	r18, 0x07	; 7
     c50:	64 91       	lpm	r22, Z
     c52:	70 e0       	ldi	r23, 0x00	; 0
     c54:	02 2e       	mov	r0, r18
     c56:	02 c0       	rjmp	.+4      	; 0xc5c <_ZN7Display9draw_ASCIEhhh+0x64>
     c58:	66 0f       	add	r22, r22
     c5a:	77 1f       	adc	r23, r23
     c5c:	0a 94       	dec	r0
     c5e:	e2 f7       	brpl	.-8      	; 0xc58 <_ZN7Display9draw_ASCIEhhh+0x60>
     c60:	3c 91       	ld	r19, X
     c62:	36 2b       	or	r19, r22
     c64:	3c 93       	st	X, r19
     c66:	67 2f       	mov	r22, r23
     c68:	77 27       	eor	r23, r23
     c6a:	61 15       	cp	r22, r1
     c6c:	71 05       	cpc	r23, r1
     c6e:	41 f0       	breq	.+16     	; 0xc80 <_ZN7Display9draw_ASCIEhhh+0x88>
     c70:	ed 01       	movw	r28, r26
     c72:	c4 1b       	sub	r28, r20
     c74:	d5 0b       	sbc	r29, r21
     c76:	c0 0f       	add	r28, r16
     c78:	d1 1f       	adc	r29, r17
     c7a:	38 81       	ld	r19, Y
     c7c:	63 2b       	or	r22, r19
     c7e:	68 83       	st	Y, r22
     c80:	31 96       	adiw	r30, 0x01	; 1
     c82:	11 96       	adiw	r26, 0x01	; 1
     c84:	a8 17       	cp	r26, r24
     c86:	b9 07       	cpc	r27, r25
     c88:	19 f7       	brne	.-58     	; 0xc50 <_ZN7Display9draw_ASCIEhhh+0x58>
     c8a:	df 91       	pop	r29
     c8c:	cf 91       	pop	r28
     c8e:	1f 91       	pop	r17
     c90:	0f 91       	pop	r16
     c92:	08 95       	ret

00000c94 <_ZN7Display16draw_number16x16Ehhh>:

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
     c94:	ef 92       	push	r14
     c96:	ff 92       	push	r15
     c98:	0f 93       	push	r16
     c9a:	1f 93       	push	r17
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
	uint16_t symbol;
	if(number>=0 && number<10){
     ca0:	6a 30       	cpi	r22, 0x0A	; 10
     ca2:	08 f0       	brcs	.+2      	; 0xca6 <_ZN7Display16draw_number16x16Ehhh+0x12>
     ca4:	66 c0       	rjmp	.+204    	; 0xd72 <_ZN7Display16draw_number16x16Ehhh+0xde>
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     ca6:	50 e0       	ldi	r21, 0x00	; 0
     ca8:	02 2f       	mov	r16, r18
     caa:	06 95       	lsr	r16
     cac:	06 95       	lsr	r16
     cae:	06 95       	lsr	r16
     cb0:	10 e0       	ldi	r17, 0x00	; 0
     cb2:	d8 01       	movw	r26, r16
     cb4:	b6 95       	lsr	r27
     cb6:	ba 2f       	mov	r27, r26
     cb8:	aa 27       	eor	r26, r26
     cba:	b7 95       	ror	r27
     cbc:	a7 95       	ror	r26
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     cbe:	0f 5f       	subi	r16, 0xFF	; 255
     cc0:	1f 4f       	sbci	r17, 0xFF	; 255
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     cc2:	16 95       	lsr	r17
     cc4:	10 2f       	mov	r17, r16
     cc6:	00 27       	eor	r16, r16
     cc8:	17 95       	ror	r17
     cca:	07 95       	ror	r16
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     ccc:	7d 01       	movw	r14, r26
     cce:	30 e8       	ldi	r19, 0x80	; 128
     cd0:	e3 0e       	add	r14, r19
     cd2:	f1 1c       	adc	r15, r1
     cd4:	e4 0e       	add	r14, r20
     cd6:	f5 1e       	adc	r15, r21
     cd8:	e8 0e       	add	r14, r24
     cda:	f9 1e       	adc	r15, r25
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     cdc:	ea 01       	movw	r28, r20
     cde:	c0 0f       	add	r28, r16
     ce0:	d1 1f       	adc	r29, r17
     ce2:	60 97       	sbiw	r28, 0x10	; 16
     ce4:	c8 0f       	add	r28, r24
     ce6:	d9 1f       	adc	r29, r25
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     ce8:	04 0f       	add	r16, r20
     cea:	15 1f       	adc	r17, r21
     cec:	00 59       	subi	r16, 0x90	; 144
     cee:	1f 4f       	sbci	r17, 0xFF	; 255
     cf0:	08 0f       	add	r16, r24
     cf2:	19 1f       	adc	r17, r25
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     cf4:	a4 0f       	add	r26, r20
     cf6:	b5 1f       	adc	r27, r21
     cf8:	a8 0f       	add	r26, r24
     cfa:	b9 1f       	adc	r27, r25
     cfc:	e0 e2       	ldi	r30, 0x20	; 32
     cfe:	6e 9f       	mul	r22, r30
     d00:	c0 01       	movw	r24, r0
     d02:	11 24       	eor	r1, r1
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d04:	40 e0       	ldi	r20, 0x00	; 0
     d06:	50 e0       	ldi	r21, 0x00	; 0
     d08:	8a 57       	subi	r24, 0x7A	; 122
     d0a:	9e 4f       	sbci	r25, 0xFE	; 254
void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
     d0c:	27 70       	andi	r18, 0x07	; 7
     d0e:	fc 01       	movw	r30, r24
     d10:	e4 0f       	add	r30, r20
     d12:	f5 1f       	adc	r31, r21

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
     d14:	e4 91       	lpm	r30, Z
     d16:	f0 e0       	ldi	r31, 0x00	; 0
			symbol = symbol << y%8;
     d18:	02 2e       	mov	r0, r18
     d1a:	02 c0       	rjmp	.+4      	; 0xd20 <_ZN7Display16draw_number16x16Ehhh+0x8c>
     d1c:	ee 0f       	add	r30, r30
     d1e:	ff 1f       	adc	r31, r31
     d20:	0a 94       	dec	r0
     d22:	e2 f7       	brpl	.-8      	; 0xd1c <_ZN7Display16draw_number16x16Ehhh+0x88>
			if(i<16){
     d24:	40 31       	cpi	r20, 0x10	; 16
     d26:	68 f4       	brcc	.+26     	; 0xd42 <_ZN7Display16draw_number16x16Ehhh+0xae>
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d28:	3c 91       	ld	r19, X
     d2a:	3e 2b       	or	r19, r30
     d2c:	3c 93       	st	X, r19
				if(((symbol&0xFF00)>>8)==0){
     d2e:	6f 2f       	mov	r22, r31
     d30:	77 27       	eor	r23, r23
     d32:	61 15       	cp	r22, r1
     d34:	71 05       	cpc	r23, r1
     d36:	89 f0       	breq	.+34     	; 0xd5a <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d38:	f7 01       	movw	r30, r14
     d3a:	30 81       	ld	r19, Z
     d3c:	36 2b       	or	r19, r22
     d3e:	30 83       	st	Z, r19
     d40:	0c c0       	rjmp	.+24     	; 0xd5a <_ZN7Display16draw_number16x16Ehhh+0xc6>
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     d42:	38 81       	ld	r19, Y
     d44:	3e 2b       	or	r19, r30
     d46:	38 83       	st	Y, r19
				if(((symbol&0xFF00)>>8)==0){
     d48:	6f 2f       	mov	r22, r31
     d4a:	77 27       	eor	r23, r23
     d4c:	61 15       	cp	r22, r1
     d4e:	71 05       	cpc	r23, r1
     d50:	21 f0       	breq	.+8      	; 0xd5a <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d52:	f8 01       	movw	r30, r16
     d54:	30 81       	ld	r19, Z
     d56:	36 2b       	or	r19, r22
     d58:	30 83       	st	Z, r19
     d5a:	4f 5f       	subi	r20, 0xFF	; 255
     d5c:	5f 4f       	sbci	r21, 0xFF	; 255
     d5e:	ff ef       	ldi	r31, 0xFF	; 255
     d60:	ef 1a       	sub	r14, r31
     d62:	ff 0a       	sbc	r15, r31
     d64:	21 96       	adiw	r28, 0x01	; 1
     d66:	0f 5f       	subi	r16, 0xFF	; 255
     d68:	1f 4f       	sbci	r17, 0xFF	; 255
     d6a:	11 96       	adiw	r26, 0x01	; 1
}

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
     d6c:	40 32       	cpi	r20, 0x20	; 32
     d6e:	51 05       	cpc	r21, r1
     d70:	71 f6       	brne	.-100    	; 0xd0e <_ZN7Display16draw_number16x16Ehhh+0x7a>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
				}
			}
		}
	}
}
     d72:	df 91       	pop	r29
     d74:	cf 91       	pop	r28
     d76:	1f 91       	pop	r17
     d78:	0f 91       	pop	r16
     d7a:	ff 90       	pop	r15
     d7c:	ef 90       	pop	r14
     d7e:	08 95       	ret

00000d80 <_ZN7Display6analogEhhhh>:

void Display::analog(uint8_t stunde, uint8_t minute, uint8_t sekunde, uint8_t sekanzeige){
     d80:	2f 92       	push	r2
     d82:	3f 92       	push	r3
     d84:	4f 92       	push	r4
     d86:	5f 92       	push	r5
     d88:	6f 92       	push	r6
     d8a:	7f 92       	push	r7
     d8c:	8f 92       	push	r8
     d8e:	9f 92       	push	r9
     d90:	af 92       	push	r10
     d92:	bf 92       	push	r11
     d94:	cf 92       	push	r12
     d96:	df 92       	push	r13
     d98:	ef 92       	push	r14
     d9a:	ff 92       	push	r15
     d9c:	0f 93       	push	r16
     d9e:	1f 93       	push	r17
     da0:	cf 93       	push	r28
     da2:	df 93       	push	r29
     da4:	cd b7       	in	r28, 0x3d	; 61
     da6:	de b7       	in	r29, 0x3e	; 62
     da8:	27 97       	sbiw	r28, 0x07	; 7
     daa:	0f b6       	in	r0, 0x3f	; 63
     dac:	f8 94       	cli
     dae:	de bf       	out	0x3e, r29	; 62
     db0:	0f be       	out	0x3f, r0	; 63
     db2:	cd bf       	out	0x3d, r28	; 61
     db4:	9f 83       	std	Y+7, r25	; 0x07
     db6:	8e 83       	std	Y+6, r24	; 0x06
     db8:	6d 83       	std	Y+5, r22	; 0x05
     dba:	34 2e       	mov	r3, r20
	uint8_t Px=32-1;
	uint8_t Py=32-1;
	uint8_t x=0,y=0;
	float winkel=0;
	
	if (sekanzeige)
     dbc:	00 23       	and	r16, r16
     dbe:	09 f4       	brne	.+2      	; 0xdc2 <_ZN7Display6analogEhhhh+0x42>
     dc0:	26 c1       	rjmp	.+588    	; 0x100e <_ZN7Display6analogEhhhh+0x28e>
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
     dc2:	62 2f       	mov	r22, r18
     dc4:	70 e0       	ldi	r23, 0x00	; 0
     dc6:	80 e0       	ldi	r24, 0x00	; 0
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     dce:	20 e0       	ldi	r18, 0x00	; 0
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	40 ec       	ldi	r20, 0xC0	; 192
     dd4:	50 e4       	ldi	r21, 0x40	; 64
     dd6:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     dda:	2b ed       	ldi	r18, 0xDB	; 219
     ddc:	3f e0       	ldi	r19, 0x0F	; 15
     dde:	49 e4       	ldi	r20, 0x49	; 73
     de0:	50 e4       	ldi	r21, 0x40	; 64
     de2:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     de6:	20 e0       	ldi	r18, 0x00	; 0
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	44 e3       	ldi	r20, 0x34	; 52
     dec:	53 e4       	ldi	r21, 0x43	; 67
     dee:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
     df2:	2b ed       	ldi	r18, 0xDB	; 219
     df4:	3f e0       	ldi	r19, 0x0F	; 15
     df6:	49 ec       	ldi	r20, 0xC9	; 201
     df8:	5f e3       	ldi	r21, 0x3F	; 63
     dfa:	0e 94 3a 2c 	call	0x5874	; 0x5874 <__subsf3>
     dfe:	6b 01       	movw	r12, r22
     e00:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     e02:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <cos>
     e06:	2b 01       	movw	r4, r22
     e08:	3c 01       	movw	r6, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e0a:	c7 01       	movw	r24, r14
     e0c:	b6 01       	movw	r22, r12
     e0e:	0e 94 64 2f 	call	0x5ec8	; 0x5ec8 <sin>
     e12:	4b 01       	movw	r8, r22
     e14:	5c 01       	movw	r10, r24
     e16:	00 e0       	ldi	r16, 0x00	; 0
     e18:	10 e0       	ldi	r17, 0x00	; 0
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e1a:	b8 01       	movw	r22, r16
     e1c:	88 27       	eor	r24, r24
     e1e:	77 fd       	sbrc	r23, 7
     e20:	80 95       	com	r24
     e22:	98 2f       	mov	r25, r24
     e24:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     e28:	6b 01       	movw	r12, r22
     e2a:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e2c:	a5 01       	movw	r20, r10
     e2e:	94 01       	movw	r18, r8
     e30:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     e34:	20 e0       	ldi	r18, 0x00	; 0
     e36:	30 e0       	ldi	r19, 0x00	; 0
     e38:	48 ef       	ldi	r20, 0xF8	; 248
     e3a:	51 e4       	ldi	r21, 0x41	; 65
     e3c:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     e40:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
     e44:	26 2e       	mov	r2, r22
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e46:	a3 01       	movw	r20, r6
     e48:	92 01       	movw	r18, r4
     e4a:	c7 01       	movw	r24, r14
     e4c:	b6 01       	movw	r22, r12
     e4e:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     e52:	20 e0       	ldi	r18, 0x00	; 0
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	48 ef       	ldi	r20, 0xF8	; 248
     e58:	51 e4       	ldi	r21, 0x41	; 65
     e5a:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     e5e:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     e62:	20 e0       	ldi	r18, 0x00	; 0
     e64:	42 2d       	mov	r20, r2
     e66:	8e 81       	ldd	r24, Y+6	; 0x06
     e68:	9f 81       	ldd	r25, Y+7	; 0x07
     e6a:	96 dc       	rcall	.-1748   	; 0x798 <_ZN7Display9drawPixelEhhh>
     e6c:	0f 5f       	subi	r16, 0xFF	; 255
     e6e:	1f 4f       	sbci	r17, 0xFF	; 255
	float winkel=0;
	
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
     e70:	09 31       	cpi	r16, 0x19	; 25
     e72:	11 05       	cpc	r17, r1
     e74:	91 f6       	brne	.-92     	; 0xe1a <_ZN7Display6analogEhhhh+0x9a>
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
     e76:	63 2d       	mov	r22, r3
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     e82:	69 83       	std	Y+1, r22	; 0x01
     e84:	7a 83       	std	Y+2, r23	; 0x02
     e86:	8b 83       	std	Y+3, r24	; 0x03
     e88:	9c 83       	std	Y+4, r25	; 0x04
     e8a:	20 e0       	ldi	r18, 0x00	; 0
     e8c:	30 e0       	ldi	r19, 0x00	; 0
     e8e:	40 ec       	ldi	r20, 0xC0	; 192
     e90:	50 e4       	ldi	r21, 0x40	; 64
     e92:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     e96:	2b ed       	ldi	r18, 0xDB	; 219
     e98:	3f e0       	ldi	r19, 0x0F	; 15
     e9a:	49 e4       	ldi	r20, 0x49	; 73
     e9c:	50 e4       	ldi	r21, 0x40	; 64
     e9e:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	44 e3       	ldi	r20, 0x34	; 52
     ea8:	53 e4       	ldi	r21, 0x43	; 67
     eaa:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
     eae:	2b ed       	ldi	r18, 0xDB	; 219
     eb0:	3f e0       	ldi	r19, 0x0F	; 15
     eb2:	49 ec       	ldi	r20, 0xC9	; 201
     eb4:	5f e3       	ldi	r21, 0x3F	; 63
     eb6:	0e 94 3a 2c 	call	0x5874	; 0x5874 <__subsf3>
     eba:	6b 01       	movw	r12, r22
     ebc:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     ebe:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <cos>
     ec2:	4b 01       	movw	r8, r22
     ec4:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
     ec6:	c7 01       	movw	r24, r14
     ec8:	b6 01       	movw	r22, r12
     eca:	0e 94 64 2f 	call	0x5ec8	; 0x5ec8 <sin>
     ece:	2b 01       	movw	r4, r22
     ed0:	3c 01       	movw	r6, r24
     ed2:	00 e0       	ldi	r16, 0x00	; 0
     ed4:	10 e0       	ldi	r17, 0x00	; 0

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     ed6:	b8 01       	movw	r22, r16
     ed8:	88 27       	eor	r24, r24
     eda:	77 fd       	sbrc	r23, 7
     edc:	80 95       	com	r24
     ede:	98 2f       	mov	r25, r24
     ee0:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     ee4:	6b 01       	movw	r12, r22
     ee6:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     ee8:	a3 01       	movw	r20, r6
     eea:	92 01       	movw	r18, r4
     eec:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	48 ef       	ldi	r20, 0xF8	; 248
     ef6:	51 e4       	ldi	r21, 0x41	; 65
     ef8:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     efc:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
     f00:	36 2e       	mov	r3, r22

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     f02:	a5 01       	movw	r20, r10
     f04:	94 01       	movw	r18, r8
     f06:	c7 01       	movw	r24, r14
     f08:	b6 01       	movw	r22, r12
     f0a:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     f0e:	20 e0       	ldi	r18, 0x00	; 0
     f10:	30 e0       	ldi	r19, 0x00	; 0
     f12:	48 ef       	ldi	r20, 0xF8	; 248
     f14:	51 e4       	ldi	r21, 0x41	; 65
     f16:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     f1a:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     f1e:	20 e0       	ldi	r18, 0x00	; 0
     f20:	43 2d       	mov	r20, r3
     f22:	8e 81       	ldd	r24, Y+6	; 0x06
     f24:	9f 81       	ldd	r25, Y+7	; 0x07
     f26:	38 dc       	rcall	.-1936   	; 0x798 <_ZN7Display9drawPixelEhhh>
     f28:	0f 5f       	subi	r16, 0xFF	; 255
     f2a:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
     f2c:	05 31       	cpi	r16, 0x15	; 21
     f2e:	11 05       	cpc	r17, r1
     f30:	91 f6       	brne	.-92     	; 0xed6 <_ZN7Display6analogEhhhh+0x156>
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
     f32:	2d 81       	ldd	r18, Y+5	; 0x05
     f34:	62 2f       	mov	r22, r18
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	80 e0       	ldi	r24, 0x00	; 0
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	40 ef       	ldi	r20, 0xF0	; 240
     f46:	51 e4       	ldi	r21, 0x41	; 65
     f48:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     f4c:	6b 01       	movw	r12, r22
     f4e:	7c 01       	movw	r14, r24
     f50:	20 e0       	ldi	r18, 0x00	; 0
     f52:	30 e0       	ldi	r19, 0x00	; 0
     f54:	40 e0       	ldi	r20, 0x00	; 0
     f56:	5f e3       	ldi	r21, 0x3F	; 63
     f58:	69 81       	ldd	r22, Y+1	; 0x01
     f5a:	7a 81       	ldd	r23, Y+2	; 0x02
     f5c:	8b 81       	ldd	r24, Y+3	; 0x03
     f5e:	9c 81       	ldd	r25, Y+4	; 0x04
     f60:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     f64:	9b 01       	movw	r18, r22
     f66:	ac 01       	movw	r20, r24
     f68:	c7 01       	movw	r24, r14
     f6a:	b6 01       	movw	r22, r12
     f6c:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     f70:	2b ed       	ldi	r18, 0xDB	; 219
     f72:	3f e0       	ldi	r19, 0x0F	; 15
     f74:	49 e4       	ldi	r20, 0x49	; 73
     f76:	50 e4       	ldi	r21, 0x40	; 64
     f78:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     f7c:	20 e0       	ldi	r18, 0x00	; 0
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	44 e3       	ldi	r20, 0x34	; 52
     f82:	53 e4       	ldi	r21, 0x43	; 67
     f84:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
     f88:	2b ed       	ldi	r18, 0xDB	; 219
     f8a:	3f e0       	ldi	r19, 0x0F	; 15
     f8c:	49 ec       	ldi	r20, 0xC9	; 201
     f8e:	5f e3       	ldi	r21, 0x3F	; 63
     f90:	0e 94 3a 2c 	call	0x5874	; 0x5874 <__subsf3>
     f94:	6b 01       	movw	r12, r22
     f96:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
     f98:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <cos>
     f9c:	2b 01       	movw	r4, r22
     f9e:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
     fa0:	c7 01       	movw	r24, r14
     fa2:	b6 01       	movw	r22, r12
     fa4:	0e 94 64 2f 	call	0x5ec8	; 0x5ec8 <sin>
     fa8:	4b 01       	movw	r8, r22
     faa:	5c 01       	movw	r10, r24
     fac:	00 e0       	ldi	r16, 0x00	; 0
     fae:	10 e0       	ldi	r17, 0x00	; 0

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
     fb0:	b8 01       	movw	r22, r16
     fb2:	88 27       	eor	r24, r24
     fb4:	77 fd       	sbrc	r23, 7
     fb6:	80 95       	com	r24
     fb8:	98 2f       	mov	r25, r24
     fba:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
     fbe:	6b 01       	movw	r12, r22
     fc0:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
     fc2:	a5 01       	movw	r20, r10
     fc4:	94 01       	movw	r18, r8
     fc6:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     fca:	20 e0       	ldi	r18, 0x00	; 0
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	48 ef       	ldi	r20, 0xF8	; 248
     fd0:	51 e4       	ldi	r21, 0x41	; 65
     fd2:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     fd6:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
     fda:	36 2e       	mov	r3, r22

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
     fdc:	a3 01       	movw	r20, r6
     fde:	92 01       	movw	r18, r4
     fe0:	c7 01       	movw	r24, r14
     fe2:	b6 01       	movw	r22, r12
     fe4:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
     fe8:	20 e0       	ldi	r18, 0x00	; 0
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	48 ef       	ldi	r20, 0xF8	; 248
     fee:	51 e4       	ldi	r21, 0x41	; 65
     ff0:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
     ff4:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
     ff8:	20 e0       	ldi	r18, 0x00	; 0
     ffa:	43 2d       	mov	r20, r3
     ffc:	8e 81       	ldd	r24, Y+6	; 0x06
     ffe:	9f 81       	ldd	r25, Y+7	; 0x07
    1000:	cb db       	rcall	.-2154   	; 0x798 <_ZN7Display9drawPixelEhhh>
    1002:	0f 5f       	subi	r16, 0xFF	; 255
    1004:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    1006:	0d 30       	cpi	r16, 0x0D	; 13
    1008:	11 05       	cpc	r17, r1
    100a:	91 f6       	brne	.-92     	; 0xfb0 <_ZN7Display6analogEhhhh+0x230>
    100c:	cb c0       	rjmp	.+406    	; 0x11a4 <_ZN7Display6analogEhhhh+0x424>
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
    100e:	64 2f       	mov	r22, r20
    1010:	70 e0       	ldi	r23, 0x00	; 0
    1012:	80 e0       	ldi	r24, 0x00	; 0
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
    101a:	69 83       	std	Y+1, r22	; 0x01
    101c:	7a 83       	std	Y+2, r23	; 0x02
    101e:	8b 83       	std	Y+3, r24	; 0x03
    1020:	9c 83       	std	Y+4, r25	; 0x04
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	40 ec       	ldi	r20, 0xC0	; 192
    1028:	50 e4       	ldi	r21, 0x40	; 64
    102a:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    102e:	2b ed       	ldi	r18, 0xDB	; 219
    1030:	3f e0       	ldi	r19, 0x0F	; 15
    1032:	49 e4       	ldi	r20, 0x49	; 73
    1034:	50 e4       	ldi	r21, 0x40	; 64
    1036:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    103a:	20 e0       	ldi	r18, 0x00	; 0
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	44 e3       	ldi	r20, 0x34	; 52
    1040:	53 e4       	ldi	r21, 0x43	; 67
    1042:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
    1046:	2b ed       	ldi	r18, 0xDB	; 219
    1048:	3f e0       	ldi	r19, 0x0F	; 15
    104a:	49 ec       	ldi	r20, 0xC9	; 201
    104c:	5f e3       	ldi	r21, 0x3F	; 63
    104e:	0e 94 3a 2c 	call	0x5874	; 0x5874 <__subsf3>
    1052:	6b 01       	movw	r12, r22
    1054:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
    1056:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <cos>
    105a:	4b 01       	movw	r8, r22
    105c:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
    105e:	c7 01       	movw	r24, r14
    1060:	b6 01       	movw	r22, r12
    1062:	0e 94 64 2f 	call	0x5ec8	; 0x5ec8 <sin>
    1066:	2b 01       	movw	r4, r22
    1068:	3c 01       	movw	r6, r24
    106a:	00 e0       	ldi	r16, 0x00	; 0
    106c:	10 e0       	ldi	r17, 0x00	; 0
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    106e:	b8 01       	movw	r22, r16
    1070:	88 27       	eor	r24, r24
    1072:	77 fd       	sbrc	r23, 7
    1074:	80 95       	com	r24
    1076:	98 2f       	mov	r25, r24
    1078:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
    107c:	6b 01       	movw	r12, r22
    107e:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
    1080:	a3 01       	movw	r20, r6
    1082:	92 01       	movw	r18, r4
    1084:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    1088:	20 e0       	ldi	r18, 0x00	; 0
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	48 ef       	ldi	r20, 0xF8	; 248
    108e:	51 e4       	ldi	r21, 0x41	; 65
    1090:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
    1094:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
    1098:	36 2e       	mov	r3, r22
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    109a:	a5 01       	movw	r20, r10
    109c:	94 01       	movw	r18, r8
    109e:	c7 01       	movw	r24, r14
    10a0:	b6 01       	movw	r22, r12
    10a2:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    10a6:	20 e0       	ldi	r18, 0x00	; 0
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	48 ef       	ldi	r20, 0xF8	; 248
    10ac:	51 e4       	ldi	r21, 0x41	; 65
    10ae:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
    10b2:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
    10b6:	20 e0       	ldi	r18, 0x00	; 0
    10b8:	43 2d       	mov	r20, r3
    10ba:	8e 81       	ldd	r24, Y+6	; 0x06
    10bc:	9f 81       	ldd	r25, Y+7	; 0x07
    10be:	6c db       	rcall	.-2344   	; 0x798 <_ZN7Display9drawPixelEhhh>
    10c0:	0f 5f       	subi	r16, 0xFF	; 255
    10c2:	1f 4f       	sbci	r17, 0xFF	; 255
		}
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
    10c4:	09 31       	cpi	r16, 0x19	; 25
    10c6:	11 05       	cpc	r17, r1
    10c8:	91 f6       	brne	.-92     	; 0x106e <_ZN7Display6analogEhhhh+0x2ee>
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
    10ca:	ed 81       	ldd	r30, Y+5	; 0x05
    10cc:	6e 2f       	mov	r22, r30
    10ce:	70 e0       	ldi	r23, 0x00	; 0
    10d0:	80 e0       	ldi	r24, 0x00	; 0
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
    10d8:	20 e0       	ldi	r18, 0x00	; 0
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	40 ef       	ldi	r20, 0xF0	; 240
    10de:	51 e4       	ldi	r21, 0x41	; 65
    10e0:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    10e4:	6b 01       	movw	r12, r22
    10e6:	7c 01       	movw	r14, r24
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	40 e0       	ldi	r20, 0x00	; 0
    10ee:	5f e3       	ldi	r21, 0x3F	; 63
    10f0:	69 81       	ldd	r22, Y+1	; 0x01
    10f2:	7a 81       	ldd	r23, Y+2	; 0x02
    10f4:	8b 81       	ldd	r24, Y+3	; 0x03
    10f6:	9c 81       	ldd	r25, Y+4	; 0x04
    10f8:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    10fc:	9b 01       	movw	r18, r22
    10fe:	ac 01       	movw	r20, r24
    1100:	c7 01       	movw	r24, r14
    1102:	b6 01       	movw	r22, r12
    1104:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
    1108:	2b ed       	ldi	r18, 0xDB	; 219
    110a:	3f e0       	ldi	r19, 0x0F	; 15
    110c:	49 e4       	ldi	r20, 0x49	; 73
    110e:	50 e4       	ldi	r21, 0x40	; 64
    1110:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    1114:	20 e0       	ldi	r18, 0x00	; 0
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	44 e3       	ldi	r20, 0x34	; 52
    111a:	53 e4       	ldi	r21, 0x43	; 67
    111c:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
    1120:	2b ed       	ldi	r18, 0xDB	; 219
    1122:	3f e0       	ldi	r19, 0x0F	; 15
    1124:	49 ec       	ldi	r20, 0xC9	; 201
    1126:	5f e3       	ldi	r21, 0x3F	; 63
    1128:	0e 94 3a 2c 	call	0x5874	; 0x5874 <__subsf3>
    112c:	6b 01       	movw	r12, r22
    112e:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
    1130:	0e 94 05 2d 	call	0x5a0a	; 0x5a0a <cos>
    1134:	2b 01       	movw	r4, r22
    1136:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
    1138:	c7 01       	movw	r24, r14
    113a:	b6 01       	movw	r22, r12
    113c:	0e 94 64 2f 	call	0x5ec8	; 0x5ec8 <sin>
    1140:	4b 01       	movw	r8, r22
    1142:	5c 01       	movw	r10, r24
    1144:	00 e0       	ldi	r16, 0x00	; 0
    1146:	10 e0       	ldi	r17, 0x00	; 0

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    1148:	b8 01       	movw	r22, r16
    114a:	88 27       	eor	r24, r24
    114c:	77 fd       	sbrc	r23, 7
    114e:	80 95       	com	r24
    1150:	98 2f       	mov	r25, r24
    1152:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
    1156:	6b 01       	movw	r12, r22
    1158:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    115a:	a5 01       	movw	r20, r10
    115c:	94 01       	movw	r18, r8
    115e:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    1162:	20 e0       	ldi	r18, 0x00	; 0
    1164:	30 e0       	ldi	r19, 0x00	; 0
    1166:	48 ef       	ldi	r20, 0xF8	; 248
    1168:	51 e4       	ldi	r21, 0x41	; 65
    116a:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
    116e:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
    1172:	36 2e       	mov	r3, r22

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    1174:	a3 01       	movw	r20, r6
    1176:	92 01       	movw	r18, r4
    1178:	c7 01       	movw	r24, r14
    117a:	b6 01       	movw	r22, r12
    117c:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	48 ef       	ldi	r20, 0xF8	; 248
    1186:	51 e4       	ldi	r21, 0x41	; 65
    1188:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
    118c:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    1190:	20 e0       	ldi	r18, 0x00	; 0
    1192:	43 2d       	mov	r20, r3
    1194:	8e 81       	ldd	r24, Y+6	; 0x06
    1196:	9f 81       	ldd	r25, Y+7	; 0x07
    1198:	ff da       	rcall	.-2562   	; 0x798 <_ZN7Display9drawPixelEhhh>
    119a:	0f 5f       	subi	r16, 0xFF	; 255
    119c:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    119e:	01 31       	cpi	r16, 0x11	; 17
    11a0:	11 05       	cpc	r17, r1
    11a2:	91 f6       	brne	.-92     	; 0x1148 <_ZN7Display6analogEhhhh+0x3c8>
		}
	}
	

	//Anzeige der Zahlen
	draw_ASCI('1',32-charsize,0);
    11a4:	20 e0       	ldi	r18, 0x00	; 0
    11a6:	4a e1       	ldi	r20, 0x1A	; 26
    11a8:	61 e3       	ldi	r22, 0x31	; 49
    11aa:	8e 81       	ldd	r24, Y+6	; 0x06
    11ac:	9f 81       	ldd	r25, Y+7	; 0x07
    11ae:	24 dd       	rcall	.-1464   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('2',32,0);
    11b0:	20 e0       	ldi	r18, 0x00	; 0
    11b2:	40 e2       	ldi	r20, 0x20	; 32
    11b4:	62 e3       	ldi	r22, 0x32	; 50
    11b6:	8e 81       	ldd	r24, Y+6	; 0x06
    11b8:	9f 81       	ldd	r25, Y+7	; 0x07
    11ba:	1e dd       	rcall	.-1476   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('3',64-charsize,4*charhighte-charhighte/2);
    11bc:	2c e1       	ldi	r18, 0x1C	; 28
    11be:	4a e3       	ldi	r20, 0x3A	; 58
    11c0:	63 e3       	ldi	r22, 0x33	; 51
    11c2:	8e 81       	ldd	r24, Y+6	; 0x06
    11c4:	9f 81       	ldd	r25, Y+7	; 0x07
    11c6:	18 dd       	rcall	.-1488   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('6',32-charsize/2,7*charhighte);
    11c8:	28 e3       	ldi	r18, 0x38	; 56
    11ca:	4d e1       	ldi	r20, 0x1D	; 29
    11cc:	66 e3       	ldi	r22, 0x36	; 54
    11ce:	8e 81       	ldd	r24, Y+6	; 0x06
    11d0:	9f 81       	ldd	r25, Y+7	; 0x07
    11d2:	12 dd       	rcall	.-1500   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('9',0,4*charhighte-charhighte/2);
    11d4:	2c e1       	ldi	r18, 0x1C	; 28
    11d6:	40 e0       	ldi	r20, 0x00	; 0
    11d8:	69 e3       	ldi	r22, 0x39	; 57
    11da:	8e 81       	ldd	r24, Y+6	; 0x06
    11dc:	9f 81       	ldd	r25, Y+7	; 0x07
    11de:	0c dd       	rcall	.-1512   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>

	//anzeige des Rings fuer die Restlichen Stunden Zahlen
	//1
	drawPixel(26*cos((30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11e0:	20 e0       	ldi	r18, 0x00	; 0
    11e2:	48 e0       	ldi	r20, 0x08	; 8
    11e4:	6c e2       	ldi	r22, 0x2C	; 44
    11e6:	8e 81       	ldd	r24, Y+6	; 0x06
    11e8:	9f 81       	ldd	r25, Y+7	; 0x07
    11ea:	d6 da       	rcall	.-2644   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//2
	drawPixel(26*cos((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11ec:	20 e0       	ldi	r18, 0x00	; 0
    11ee:	42 e1       	ldi	r20, 0x12	; 18
    11f0:	65 e3       	ldi	r22, 0x35	; 53
    11f2:	8e 81       	ldd	r24, Y+6	; 0x06
    11f4:	9f 81       	ldd	r25, Y+7	; 0x07
    11f6:	d0 da       	rcall	.-2656   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//4
	drawPixel(26*cos((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11f8:	20 e0       	ldi	r18, 0x00	; 0
    11fa:	4c e2       	ldi	r20, 0x2C	; 44
    11fc:	65 e3       	ldi	r22, 0x35	; 53
    11fe:	8e 81       	ldd	r24, Y+6	; 0x06
    1200:	9f 81       	ldd	r25, Y+7	; 0x07
    1202:	ca da       	rcall	.-2668   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//5
	drawPixel(26*cos((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1204:	20 e0       	ldi	r18, 0x00	; 0
    1206:	45 e3       	ldi	r20, 0x35	; 53
    1208:	6b e2       	ldi	r22, 0x2B	; 43
    120a:	8e 81       	ldd	r24, Y+6	; 0x06
    120c:	9f 81       	ldd	r25, Y+7	; 0x07
    120e:	c4 da       	rcall	.-2680   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//7
	drawPixel(26*cos((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1210:	20 e0       	ldi	r18, 0x00	; 0
    1212:	45 e3       	ldi	r20, 0x35	; 53
    1214:	61 e1       	ldi	r22, 0x11	; 17
    1216:	8e 81       	ldd	r24, Y+6	; 0x06
    1218:	9f 81       	ldd	r25, Y+7	; 0x07
    121a:	be da       	rcall	.-2692   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//8
	drawPixel(26*cos((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    121c:	20 e0       	ldi	r18, 0x00	; 0
    121e:	4c e2       	ldi	r20, 0x2C	; 44
    1220:	68 e0       	ldi	r22, 0x08	; 8
    1222:	8e 81       	ldd	r24, Y+6	; 0x06
    1224:	9f 81       	ldd	r25, Y+7	; 0x07
    1226:	b8 da       	rcall	.-2704   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//10
	drawPixel(26*cos((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1228:	20 e0       	ldi	r18, 0x00	; 0
    122a:	41 e1       	ldi	r20, 0x11	; 17
    122c:	68 e0       	ldi	r22, 0x08	; 8
    122e:	8e 81       	ldd	r24, Y+6	; 0x06
    1230:	9f 81       	ldd	r25, Y+7	; 0x07
    1232:	b2 da       	rcall	.-2716   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//11
	drawPixel(26*cos((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1234:	20 e0       	ldi	r18, 0x00	; 0
    1236:	48 e0       	ldi	r20, 0x08	; 8
    1238:	62 e1       	ldi	r22, 0x12	; 18
    123a:	8e 81       	ldd	r24, Y+6	; 0x06
    123c:	9f 81       	ldd	r25, Y+7	; 0x07
    123e:	ac da       	rcall	.-2728   	; 0x798 <_ZN7Display9drawPixelEhhh>
}
    1240:	27 96       	adiw	r28, 0x07	; 7
    1242:	0f b6       	in	r0, 0x3f	; 63
    1244:	f8 94       	cli
    1246:	de bf       	out	0x3e, r29	; 62
    1248:	0f be       	out	0x3f, r0	; 63
    124a:	cd bf       	out	0x3d, r28	; 61
    124c:	df 91       	pop	r29
    124e:	cf 91       	pop	r28
    1250:	1f 91       	pop	r17
    1252:	0f 91       	pop	r16
    1254:	ff 90       	pop	r15
    1256:	ef 90       	pop	r14
    1258:	df 90       	pop	r13
    125a:	cf 90       	pop	r12
    125c:	bf 90       	pop	r11
    125e:	af 90       	pop	r10
    1260:	9f 90       	pop	r9
    1262:	8f 90       	pop	r8
    1264:	7f 90       	pop	r7
    1266:	6f 90       	pop	r6
    1268:	5f 90       	pop	r5
    126a:	4f 90       	pop	r4
    126c:	3f 90       	pop	r3
    126e:	2f 90       	pop	r2
    1270:	08 95       	ret

00001272 <_Z8ADC_Readh>:
		oled.draw_pikachu();
		break;
	default:
		break;
	}
}
    1272:	ec e7       	ldi	r30, 0x7C	; 124
    1274:	f0 e0       	ldi	r31, 0x00	; 0
    1276:	90 81       	ld	r25, Z
    1278:	8f 71       	andi	r24, 0x1F	; 31
    127a:	90 7e       	andi	r25, 0xE0	; 224
    127c:	98 2b       	or	r25, r24
    127e:	90 83       	st	Z, r25
    1280:	ea e7       	ldi	r30, 0x7A	; 122
    1282:	f0 e0       	ldi	r31, 0x00	; 0
    1284:	80 81       	ld	r24, Z
    1286:	80 64       	ori	r24, 0x40	; 64
    1288:	80 83       	st	Z, r24
    128a:	80 81       	ld	r24, Z
    128c:	86 fd       	sbrc	r24, 6
    128e:	fd cf       	rjmp	.-6      	; 0x128a <_Z8ADC_Readh+0x18>
    1290:	80 91 78 00 	lds	r24, 0x0078
    1294:	90 91 79 00 	lds	r25, 0x0079
    1298:	08 95       	ret

0000129a <_Z14Batteriestatusv>:
    129a:	cf 92       	push	r12
    129c:	df 92       	push	r13
    129e:	ef 92       	push	r14
    12a0:	ff 92       	push	r15
    12a2:	80 e0       	ldi	r24, 0x00	; 0
    12a4:	e6 df       	rcall	.-52     	; 0x1272 <_Z8ADC_Readh>
    12a6:	bc 01       	movw	r22, r24
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	0e 94 a1 2d 	call	0x5b42	; 0x5b42 <__floatunsisf>
    12b0:	20 e0       	ldi	r18, 0x00	; 0
    12b2:	30 ec       	ldi	r19, 0xC0	; 192
    12b4:	4f e7       	ldi	r20, 0x7F	; 127
    12b6:	54 e4       	ldi	r21, 0x44	; 68
    12b8:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
    12bc:	2c e5       	ldi	r18, 0x5C	; 92
    12be:	3f e8       	ldi	r19, 0x8F	; 143
    12c0:	42 e5       	ldi	r20, 0x52	; 82
    12c2:	50 e4       	ldi	r21, 0x40	; 64
    12c4:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    12c8:	2d e0       	ldi	r18, 0x0D	; 13
    12ca:	31 e7       	ldi	r19, 0x71	; 113
    12cc:	40 e0       	ldi	r20, 0x00	; 0
    12ce:	50 e4       	ldi	r21, 0x40	; 64
    12d0:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    12d4:	60 93 4f 03 	sts	0x034F, r22
    12d8:	70 93 50 03 	sts	0x0350, r23
    12dc:	80 93 51 03 	sts	0x0351, r24
    12e0:	90 93 52 03 	sts	0x0352, r25
    12e4:	20 e0       	ldi	r18, 0x00	; 0
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	40 e4       	ldi	r20, 0x40	; 64
    12ea:	50 e4       	ldi	r21, 0x40	; 64
    12ec:	0e 94 3a 2c 	call	0x5874	; 0x5874 <__subsf3>
    12f0:	28 e9       	ldi	r18, 0x98	; 152
    12f2:	39 e9       	ldi	r19, 0x99	; 153
    12f4:	49 e9       	ldi	r20, 0x99	; 153
    12f6:	5f e3       	ldi	r21, 0x3F	; 63
    12f8:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
    12fc:	20 e0       	ldi	r18, 0x00	; 0
    12fe:	30 e0       	ldi	r19, 0x00	; 0
    1300:	48 ec       	ldi	r20, 0xC8	; 200
    1302:	52 e4       	ldi	r21, 0x42	; 66
    1304:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    1308:	6b 01       	movw	r12, r22
    130a:	7c 01       	movw	r14, r24
    130c:	20 e0       	ldi	r18, 0x00	; 0
    130e:	30 e0       	ldi	r19, 0x00	; 0
    1310:	40 e2       	ldi	r20, 0x20	; 32
    1312:	51 e4       	ldi	r21, 0x41	; 65
    1314:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    1318:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
    131c:	8d ec       	ldi	r24, 0xCD	; 205
    131e:	68 9f       	mul	r22, r24
    1320:	81 2d       	mov	r24, r1
    1322:	11 24       	eor	r1, r1
    1324:	86 95       	lsr	r24
    1326:	86 95       	lsr	r24
    1328:	86 95       	lsr	r24
    132a:	88 0f       	add	r24, r24
    132c:	98 2f       	mov	r25, r24
    132e:	99 0f       	add	r25, r25
    1330:	99 0f       	add	r25, r25
    1332:	89 0f       	add	r24, r25
    1334:	68 1b       	sub	r22, r24
    1336:	65 30       	cpi	r22, 0x05	; 5
    1338:	70 f0       	brcs	.+28     	; 0x1356 <_Z14Batteriestatusv+0xbc>
    133a:	c7 01       	movw	r24, r14
    133c:	b6 01       	movw	r22, r12
    133e:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	6f 5f       	subi	r22, 0xFF	; 255
    1346:	7f 4f       	sbci	r23, 0xFF	; 255
    1348:	88 27       	eor	r24, r24
    134a:	77 fd       	sbrc	r23, 7
    134c:	80 95       	com	r24
    134e:	98 2f       	mov	r25, r24
    1350:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
    1354:	09 c0       	rjmp	.+18     	; 0x1368 <_Z14Batteriestatusv+0xce>
    1356:	c7 01       	movw	r24, r14
    1358:	b6 01       	movw	r22, r12
    135a:	0e 94 75 2d 	call	0x5aea	; 0x5aea <__fixunssfsi>
    135e:	70 e0       	ldi	r23, 0x00	; 0
    1360:	80 e0       	ldi	r24, 0x00	; 0
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	0e 94 a1 2d 	call	0x5b42	; 0x5b42 <__floatunsisf>
    1368:	0e 94 70 2d 	call	0x5ae0	; 0x5ae0 <__fixsfsi>
    136c:	86 2f       	mov	r24, r22
    136e:	ff 90       	pop	r15
    1370:	ef 90       	pop	r14
    1372:	df 90       	pop	r13
    1374:	cf 90       	pop	r12
    1376:	08 95       	ret

00001378 <_Z12EEPROM_Writejh>:
    1378:	f8 94       	cli
    137a:	f9 99       	sbic	0x1f, 1	; 31
    137c:	fe cf       	rjmp	.-4      	; 0x137a <_Z12EEPROM_Writejh+0x2>
    137e:	92 bd       	out	0x22, r25	; 34
    1380:	81 bd       	out	0x21, r24	; 33
    1382:	60 bd       	out	0x20, r22	; 32
    1384:	fa 9a       	sbi	0x1f, 2	; 31
    1386:	f9 9a       	sbi	0x1f, 1	; 31
    1388:	78 94       	sei
    138a:	08 95       	ret

0000138c <_Z11EEPROM_Readj>:
    138c:	f8 94       	cli
    138e:	f9 99       	sbic	0x1f, 1	; 31
    1390:	fe cf       	rjmp	.-4      	; 0x138e <_Z11EEPROM_Readj+0x2>
    1392:	92 bd       	out	0x22, r25	; 34
    1394:	81 bd       	out	0x21, r24	; 33
    1396:	f8 9a       	sbi	0x1f, 0	; 31
    1398:	78 94       	sei
    139a:	80 b5       	in	r24, 0x20	; 32
    139c:	08 95       	ret

0000139e <_Z14willkommenpagev>:
    139e:	cf 92       	push	r12
    13a0:	df 92       	push	r13
    13a2:	ef 92       	push	r14
    13a4:	ff 92       	push	r15
    13a6:	0f 93       	push	r16
    13a8:	1f 93       	push	r17
    13aa:	cf 93       	push	r28
    13ac:	df 93       	push	r29
    13ae:	cd b7       	in	r28, 0x3d	; 61
    13b0:	de b7       	in	r29, 0x3e	; 62
    13b2:	64 97       	sbiw	r28, 0x14	; 20
    13b4:	0f b6       	in	r0, 0x3f	; 63
    13b6:	f8 94       	cli
    13b8:	de bf       	out	0x3e, r29	; 62
    13ba:	0f be       	out	0x3f, r0	; 63
    13bc:	cd bf       	out	0x3d, r28	; 61
    13be:	8d e7       	ldi	r24, 0x7D	; 125
    13c0:	93 e0       	ldi	r25, 0x03	; 3
    13c2:	23 d9       	rcall	.-3514   	; 0x60a <_ZN7Display10clearFrameEv>
    13c4:	8f e0       	ldi	r24, 0x0F	; 15
    13c6:	e0 e0       	ldi	r30, 0x00	; 0
    13c8:	f1 e0       	ldi	r31, 0x01	; 1
    13ca:	8e 01       	movw	r16, r28
    13cc:	0f 5f       	subi	r16, 0xFF	; 255
    13ce:	1f 4f       	sbci	r17, 0xFF	; 255
    13d0:	d8 01       	movw	r26, r16
    13d2:	01 90       	ld	r0, Z+
    13d4:	0d 92       	st	X+, r0
    13d6:	8a 95       	dec	r24
    13d8:	e1 f7       	brne	.-8      	; 0x13d2 <_Z14willkommenpagev+0x34>
    13da:	c0 2e       	mov	r12, r16
    13dc:	d1 2e       	mov	r13, r17
    13de:	78 01       	movw	r14, r16
    13e0:	10 e0       	ldi	r17, 0x00	; 0
    13e2:	f7 01       	movw	r30, r14
    13e4:	61 91       	ld	r22, Z+
    13e6:	7f 01       	movw	r14, r30
    13e8:	20 e0       	ldi	r18, 0x00	; 0
    13ea:	41 2f       	mov	r20, r17
    13ec:	8d e7       	ldi	r24, 0x7D	; 125
    13ee:	93 e0       	ldi	r25, 0x03	; 3
    13f0:	03 dc       	rcall	.-2042   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    13f2:	1a 5f       	subi	r17, 0xFA	; 250
    13f4:	14 35       	cpi	r17, 0x54	; 84
    13f6:	a9 f7       	brne	.-22     	; 0x13e2 <_Z14willkommenpagev+0x44>
    13f8:	8f e0       	ldi	r24, 0x0F	; 15
    13fa:	ef e0       	ldi	r30, 0x0F	; 15
    13fc:	f1 e0       	ldi	r31, 0x01	; 1
    13fe:	de 01       	movw	r26, r28
    1400:	11 96       	adiw	r26, 0x01	; 1
    1402:	01 90       	ld	r0, Z+
    1404:	0d 92       	st	X+, r0
    1406:	8a 95       	dec	r24
    1408:	e1 f7       	brne	.-8      	; 0x1402 <_Z14willkommenpagev+0x64>
    140a:	ec 2c       	mov	r14, r12
    140c:	fd 2c       	mov	r15, r13
    140e:	10 e0       	ldi	r17, 0x00	; 0
    1410:	f7 01       	movw	r30, r14
    1412:	61 91       	ld	r22, Z+
    1414:	7f 01       	movw	r14, r30
    1416:	28 e0       	ldi	r18, 0x08	; 8
    1418:	41 2f       	mov	r20, r17
    141a:	8d e7       	ldi	r24, 0x7D	; 125
    141c:	93 e0       	ldi	r25, 0x03	; 3
    141e:	ec db       	rcall	.-2088   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1420:	1a 5f       	subi	r17, 0xFA	; 250
    1422:	14 35       	cpi	r17, 0x54	; 84
    1424:	a9 f7       	brne	.-22     	; 0x1410 <_Z14willkommenpagev+0x72>
    1426:	80 e4       	ldi	r24, 0x40	; 64
    1428:	8f 93       	push	r24
    142a:	86 e0       	ldi	r24, 0x06	; 6
    142c:	8f 93       	push	r24
    142e:	86 e6       	ldi	r24, 0x66	; 102
    1430:	8f 93       	push	r24
    1432:	8f 93       	push	r24
    1434:	8e e1       	ldi	r24, 0x1E	; 30
    1436:	91 e0       	ldi	r25, 0x01	; 1
    1438:	9f 93       	push	r25
    143a:	8f 93       	push	r24
    143c:	ce 01       	movw	r24, r28
    143e:	01 96       	adiw	r24, 0x01	; 1
    1440:	9f 93       	push	r25
    1442:	8f 93       	push	r24
    1444:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    1448:	0f b6       	in	r0, 0x3f	; 63
    144a:	f8 94       	cli
    144c:	de bf       	out	0x3e, r29	; 62
    144e:	0f be       	out	0x3f, r0	; 63
    1450:	cd bf       	out	0x3d, r28	; 61
    1452:	88 23       	and	r24, r24
    1454:	c9 f0       	breq	.+50     	; 0x1488 <_Z14willkommenpagev+0xea>
    1456:	81 50       	subi	r24, 0x01	; 1
    1458:	68 94       	set
    145a:	ee 24       	eor	r14, r14
    145c:	e1 f8       	bld	r14, 1
    145e:	f1 2c       	mov	r15, r1
    1460:	ec 0e       	add	r14, r28
    1462:	fd 1e       	adc	r15, r29
    1464:	e8 0e       	add	r14, r24
    1466:	f1 1c       	adc	r15, r1
    1468:	0c 2d       	mov	r16, r12
    146a:	1d 2d       	mov	r17, r13
    146c:	d1 2c       	mov	r13, r1
    146e:	f8 01       	movw	r30, r16
    1470:	61 91       	ld	r22, Z+
    1472:	8f 01       	movw	r16, r30
    1474:	20 e2       	ldi	r18, 0x20	; 32
    1476:	4d 2d       	mov	r20, r13
    1478:	8d e7       	ldi	r24, 0x7D	; 125
    147a:	93 e0       	ldi	r25, 0x03	; 3
    147c:	bd db       	rcall	.-2182   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    147e:	f6 e0       	ldi	r31, 0x06	; 6
    1480:	df 0e       	add	r13, r31
    1482:	0e 15       	cp	r16, r14
    1484:	1f 05       	cpc	r17, r15
    1486:	99 f7       	brne	.-26     	; 0x146e <_Z14willkommenpagev+0xd0>
    1488:	8d e7       	ldi	r24, 0x7D	; 125
    148a:	93 e0       	ldi	r25, 0x03	; 3
    148c:	48 d9       	rcall	.-3440   	; 0x71e <_ZN7Display9sendFrameEv>
    148e:	8d e7       	ldi	r24, 0x7D	; 125
    1490:	93 e0       	ldi	r25, 0x03	; 3
    1492:	bb d8       	rcall	.-3722   	; 0x60a <_ZN7Display10clearFrameEv>
    1494:	85 e0       	ldi	r24, 0x05	; 5
    1496:	2f e7       	ldi	r18, 0x7F	; 127
    1498:	38 e3       	ldi	r19, 0x38	; 56
    149a:	91 e0       	ldi	r25, 0x01	; 1
    149c:	21 50       	subi	r18, 0x01	; 1
    149e:	30 40       	sbci	r19, 0x00	; 0
    14a0:	90 40       	sbci	r25, 0x00	; 0
    14a2:	e1 f7       	brne	.-8      	; 0x149c <_Z14willkommenpagev+0xfe>
    14a4:	00 c0       	rjmp	.+0      	; 0x14a6 <_Z14willkommenpagev+0x108>
    14a6:	00 00       	nop
    14a8:	ef e7       	ldi	r30, 0x7F	; 127
    14aa:	f8 e3       	ldi	r31, 0x38	; 56
    14ac:	21 e0       	ldi	r18, 0x01	; 1
    14ae:	e1 50       	subi	r30, 0x01	; 1
    14b0:	f0 40       	sbci	r31, 0x00	; 0
    14b2:	20 40       	sbci	r18, 0x00	; 0
    14b4:	e1 f7       	brne	.-8      	; 0x14ae <_Z14willkommenpagev+0x110>
    14b6:	00 c0       	rjmp	.+0      	; 0x14b8 <_Z14willkommenpagev+0x11a>
    14b8:	00 00       	nop
    14ba:	81 50       	subi	r24, 0x01	; 1
    14bc:	61 f7       	brne	.-40     	; 0x1496 <_Z14willkommenpagev+0xf8>
    14be:	64 96       	adiw	r28, 0x14	; 20
    14c0:	0f b6       	in	r0, 0x3f	; 63
    14c2:	f8 94       	cli
    14c4:	de bf       	out	0x3e, r29	; 62
    14c6:	0f be       	out	0x3f, r0	; 63
    14c8:	cd bf       	out	0x3d, r28	; 61
    14ca:	df 91       	pop	r29
    14cc:	cf 91       	pop	r28
    14ce:	1f 91       	pop	r17
    14d0:	0f 91       	pop	r16
    14d2:	ff 90       	pop	r15
    14d4:	ef 90       	pop	r14
    14d6:	df 90       	pop	r13
    14d8:	cf 90       	pop	r12
    14da:	08 95       	ret

000014dc <_Z6headerh>:
    14dc:	ef 92       	push	r14
    14de:	ff 92       	push	r15
    14e0:	0f 93       	push	r16
    14e2:	1f 93       	push	r17
    14e4:	cf 93       	push	r28
    14e6:	df 93       	push	r29
    14e8:	cd b7       	in	r28, 0x3d	; 61
    14ea:	de b7       	in	r29, 0x3e	; 62
    14ec:	64 97       	sbiw	r28, 0x14	; 20
    14ee:	0f b6       	in	r0, 0x3f	; 63
    14f0:	f8 94       	cli
    14f2:	de bf       	out	0x3e, r29	; 62
    14f4:	0f be       	out	0x3f, r0	; 63
    14f6:	cd bf       	out	0x3d, r28	; 61
    14f8:	81 30       	cpi	r24, 0x01	; 1
    14fa:	09 f4       	brne	.+2      	; 0x14fe <_Z6headerh+0x22>
    14fc:	51 c0       	rjmp	.+162    	; 0x15a0 <_Z6headerh+0xc4>
    14fe:	20 f0       	brcs	.+8      	; 0x1508 <_Z6headerh+0x2c>
    1500:	82 30       	cpi	r24, 0x02	; 2
    1502:	09 f4       	brne	.+2      	; 0x1506 <_Z6headerh+0x2a>
    1504:	87 c0       	rjmp	.+270    	; 0x1614 <_Z6headerh+0x138>
    1506:	be c0       	rjmp	.+380    	; 0x1684 <_Z6headerh+0x1a8>
    1508:	0f 2e       	mov	r0, r31
    150a:	fe e7       	ldi	r31, 0x7E	; 126
    150c:	ef 2e       	mov	r14, r31
    150e:	f7 e0       	ldi	r31, 0x07	; 7
    1510:	ff 2e       	mov	r15, r31
    1512:	f0 2d       	mov	r31, r0
    1514:	10 e0       	ldi	r17, 0x00	; 0
    1516:	f7 01       	movw	r30, r14
    1518:	61 91       	ld	r22, Z+
    151a:	7f 01       	movw	r14, r30
    151c:	20 e0       	ldi	r18, 0x00	; 0
    151e:	41 2f       	mov	r20, r17
    1520:	8d e7       	ldi	r24, 0x7D	; 125
    1522:	93 e0       	ldi	r25, 0x03	; 3
    1524:	69 db       	rcall	.-2350   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1526:	1a 5f       	subi	r17, 0xFA	; 250
    1528:	10 33       	cpi	r17, 0x30	; 48
    152a:	a9 f7       	brne	.-22     	; 0x1516 <_Z6headerh+0x3a>
    152c:	b6 de       	rcall	.-660    	; 0x129a <_Z14Batteriestatusv>
    152e:	28 2f       	mov	r18, r24
    1530:	33 27       	eor	r19, r19
    1532:	27 fd       	sbrc	r18, 7
    1534:	30 95       	com	r19
    1536:	3f 93       	push	r19
    1538:	8f 93       	push	r24
    153a:	8c e2       	ldi	r24, 0x2C	; 44
    153c:	91 e0       	ldi	r25, 0x01	; 1
    153e:	9f 93       	push	r25
    1540:	8f 93       	push	r24
    1542:	ce 01       	movw	r24, r28
    1544:	01 96       	adiw	r24, 0x01	; 1
    1546:	9f 93       	push	r25
    1548:	8f 93       	push	r24
    154a:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    154e:	25 e1       	ldi	r18, 0x15	; 21
    1550:	f2 2e       	mov	r15, r18
    1552:	f8 1a       	sub	r15, r24
    1554:	0f 90       	pop	r0
    1556:	0f 90       	pop	r0
    1558:	0f 90       	pop	r0
    155a:	0f 90       	pop	r0
    155c:	0f 90       	pop	r0
    155e:	0f 90       	pop	r0
    1560:	f4 e1       	ldi	r31, 0x14	; 20
    1562:	ff 15       	cp	r31, r15
    1564:	08 f4       	brcc	.+2      	; 0x1568 <_Z6headerh+0x8c>
    1566:	8e c0       	rjmp	.+284    	; 0x1684 <_Z6headerh+0x1a8>
    1568:	ef 2c       	mov	r14, r15
    156a:	ee 0c       	add	r14, r14
    156c:	ef 0c       	add	r14, r15
    156e:	ee 0c       	add	r14, r14
    1570:	8c 01       	movw	r16, r24
    1572:	11 27       	eor	r17, r17
    1574:	e1 e0       	ldi	r30, 0x01	; 1
    1576:	f0 e0       	ldi	r31, 0x00	; 0
    1578:	ec 0f       	add	r30, r28
    157a:	fd 1f       	adc	r31, r29
    157c:	ef 0d       	add	r30, r15
    157e:	f1 1d       	adc	r31, r1
    1580:	e0 0f       	add	r30, r16
    1582:	f1 1f       	adc	r31, r17
    1584:	75 97       	sbiw	r30, 0x15	; 21
    1586:	20 e0       	ldi	r18, 0x00	; 0
    1588:	4e 2d       	mov	r20, r14
    158a:	60 81       	ld	r22, Z
    158c:	8d e7       	ldi	r24, 0x7D	; 125
    158e:	93 e0       	ldi	r25, 0x03	; 3
    1590:	33 db       	rcall	.-2458   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1592:	f3 94       	inc	r15
    1594:	26 e0       	ldi	r18, 0x06	; 6
    1596:	e2 0e       	add	r14, r18
    1598:	85 e1       	ldi	r24, 0x15	; 21
    159a:	f8 12       	cpse	r15, r24
    159c:	eb cf       	rjmp	.-42     	; 0x1574 <_Z6headerh+0x98>
    159e:	72 c0       	rjmp	.+228    	; 0x1684 <_Z6headerh+0x1a8>
    15a0:	7c de       	rcall	.-776    	; 0x129a <_Z14Batteriestatusv>
    15a2:	28 2f       	mov	r18, r24
    15a4:	33 27       	eor	r19, r19
    15a6:	27 fd       	sbrc	r18, 7
    15a8:	30 95       	com	r19
    15aa:	3f 93       	push	r19
    15ac:	8f 93       	push	r24
    15ae:	8c e2       	ldi	r24, 0x2C	; 44
    15b0:	91 e0       	ldi	r25, 0x01	; 1
    15b2:	9f 93       	push	r25
    15b4:	8f 93       	push	r24
    15b6:	ce 01       	movw	r24, r28
    15b8:	01 96       	adiw	r24, 0x01	; 1
    15ba:	9f 93       	push	r25
    15bc:	8f 93       	push	r24
    15be:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    15c2:	25 e1       	ldi	r18, 0x15	; 21
    15c4:	f2 2e       	mov	r15, r18
    15c6:	f8 1a       	sub	r15, r24
    15c8:	0f 90       	pop	r0
    15ca:	0f 90       	pop	r0
    15cc:	0f 90       	pop	r0
    15ce:	0f 90       	pop	r0
    15d0:	0f 90       	pop	r0
    15d2:	0f 90       	pop	r0
    15d4:	e4 e1       	ldi	r30, 0x14	; 20
    15d6:	ef 15       	cp	r30, r15
    15d8:	08 f4       	brcc	.+2      	; 0x15dc <_Z6headerh+0x100>
    15da:	54 c0       	rjmp	.+168    	; 0x1684 <_Z6headerh+0x1a8>
    15dc:	ef 2c       	mov	r14, r15
    15de:	ee 0c       	add	r14, r14
    15e0:	ef 0c       	add	r14, r15
    15e2:	ee 0c       	add	r14, r14
    15e4:	8c 01       	movw	r16, r24
    15e6:	11 27       	eor	r17, r17
    15e8:	e1 e0       	ldi	r30, 0x01	; 1
    15ea:	f0 e0       	ldi	r31, 0x00	; 0
    15ec:	ec 0f       	add	r30, r28
    15ee:	fd 1f       	adc	r31, r29
    15f0:	ef 0d       	add	r30, r15
    15f2:	f1 1d       	adc	r31, r1
    15f4:	e0 0f       	add	r30, r16
    15f6:	f1 1f       	adc	r31, r17
    15f8:	75 97       	sbiw	r30, 0x15	; 21
    15fa:	20 e0       	ldi	r18, 0x00	; 0
    15fc:	4e 2d       	mov	r20, r14
    15fe:	60 81       	ld	r22, Z
    1600:	8d e7       	ldi	r24, 0x7D	; 125
    1602:	93 e0       	ldi	r25, 0x03	; 3
    1604:	f9 da       	rcall	.-2574   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1606:	f3 94       	inc	r15
    1608:	f6 e0       	ldi	r31, 0x06	; 6
    160a:	ef 0e       	add	r14, r31
    160c:	25 e1       	ldi	r18, 0x15	; 21
    160e:	f2 12       	cpse	r15, r18
    1610:	eb cf       	rjmp	.-42     	; 0x15e8 <_Z6headerh+0x10c>
    1612:	38 c0       	rjmp	.+112    	; 0x1684 <_Z6headerh+0x1a8>
    1614:	42 de       	rcall	.-892    	; 0x129a <_Z14Batteriestatusv>
    1616:	28 2f       	mov	r18, r24
    1618:	33 27       	eor	r19, r19
    161a:	27 fd       	sbrc	r18, 7
    161c:	30 95       	com	r19
    161e:	3f 93       	push	r19
    1620:	8f 93       	push	r24
    1622:	81 e3       	ldi	r24, 0x31	; 49
    1624:	91 e0       	ldi	r25, 0x01	; 1
    1626:	9f 93       	push	r25
    1628:	8f 93       	push	r24
    162a:	ce 01       	movw	r24, r28
    162c:	01 96       	adiw	r24, 0x01	; 1
    162e:	9f 93       	push	r25
    1630:	8f 93       	push	r24
    1632:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    1636:	25 e1       	ldi	r18, 0x15	; 21
    1638:	f2 2e       	mov	r15, r18
    163a:	f8 1a       	sub	r15, r24
    163c:	0f 90       	pop	r0
    163e:	0f 90       	pop	r0
    1640:	0f 90       	pop	r0
    1642:	0f 90       	pop	r0
    1644:	0f 90       	pop	r0
    1646:	0f 90       	pop	r0
    1648:	e4 e1       	ldi	r30, 0x14	; 20
    164a:	ef 15       	cp	r30, r15
    164c:	d8 f0       	brcs	.+54     	; 0x1684 <_Z6headerh+0x1a8>
    164e:	ef 2c       	mov	r14, r15
    1650:	ee 0c       	add	r14, r14
    1652:	ef 0c       	add	r14, r15
    1654:	ee 0c       	add	r14, r14
    1656:	8c 01       	movw	r16, r24
    1658:	11 27       	eor	r17, r17
    165a:	e1 e0       	ldi	r30, 0x01	; 1
    165c:	f0 e0       	ldi	r31, 0x00	; 0
    165e:	ec 0f       	add	r30, r28
    1660:	fd 1f       	adc	r31, r29
    1662:	ef 0d       	add	r30, r15
    1664:	f1 1d       	adc	r31, r1
    1666:	e0 0f       	add	r30, r16
    1668:	f1 1f       	adc	r31, r17
    166a:	75 97       	sbiw	r30, 0x15	; 21
    166c:	20 e0       	ldi	r18, 0x00	; 0
    166e:	4e 2d       	mov	r20, r14
    1670:	60 81       	ld	r22, Z
    1672:	8d e7       	ldi	r24, 0x7D	; 125
    1674:	93 e0       	ldi	r25, 0x03	; 3
    1676:	c0 da       	rcall	.-2688   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1678:	f3 94       	inc	r15
    167a:	f6 e0       	ldi	r31, 0x06	; 6
    167c:	ef 0e       	add	r14, r31
    167e:	25 e1       	ldi	r18, 0x15	; 21
    1680:	f2 12       	cpse	r15, r18
    1682:	eb cf       	rjmp	.-42     	; 0x165a <_Z6headerh+0x17e>
    1684:	64 96       	adiw	r28, 0x14	; 20
    1686:	0f b6       	in	r0, 0x3f	; 63
    1688:	f8 94       	cli
    168a:	de bf       	out	0x3e, r29	; 62
    168c:	0f be       	out	0x3f, r0	; 63
    168e:	cd bf       	out	0x3d, r28	; 61
    1690:	df 91       	pop	r29
    1692:	cf 91       	pop	r28
    1694:	1f 91       	pop	r17
    1696:	0f 91       	pop	r16
    1698:	ff 90       	pop	r15
    169a:	ef 90       	pop	r14
    169c:	08 95       	ret

0000169e <_Z6bottomh>:
    169e:	1f 93       	push	r17
    16a0:	cf 93       	push	r28
    16a2:	df 93       	push	r29
    16a4:	88 23       	and	r24, r24
    16a6:	19 f0       	breq	.+6      	; 0x16ae <_Z6bottomh+0x10>
    16a8:	81 30       	cpi	r24, 0x01	; 1
    16aa:	71 f0       	breq	.+28     	; 0x16c8 <_Z6bottomh+0x2a>
    16ac:	19 c0       	rjmp	.+50     	; 0x16e0 <_Z6bottomh+0x42>
    16ae:	c6 e8       	ldi	r28, 0x86	; 134
    16b0:	d7 e0       	ldi	r29, 0x07	; 7
    16b2:	10 e5       	ldi	r17, 0x50	; 80
    16b4:	69 91       	ld	r22, Y+
    16b6:	28 e3       	ldi	r18, 0x38	; 56
    16b8:	41 2f       	mov	r20, r17
    16ba:	8d e7       	ldi	r24, 0x7D	; 125
    16bc:	93 e0       	ldi	r25, 0x03	; 3
    16be:	9c da       	rcall	.-2760   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    16c0:	1a 5f       	subi	r17, 0xFA	; 250
    16c2:	10 38       	cpi	r17, 0x80	; 128
    16c4:	b9 f7       	brne	.-18     	; 0x16b4 <_Z6bottomh+0x16>
    16c6:	0c c0       	rjmp	.+24     	; 0x16e0 <_Z6bottomh+0x42>
    16c8:	c6 e8       	ldi	r28, 0x86	; 134
    16ca:	d7 e0       	ldi	r29, 0x07	; 7
    16cc:	15 e0       	ldi	r17, 0x05	; 5
    16ce:	69 91       	ld	r22, Y+
    16d0:	28 e3       	ldi	r18, 0x38	; 56
    16d2:	41 2f       	mov	r20, r17
    16d4:	8d e7       	ldi	r24, 0x7D	; 125
    16d6:	93 e0       	ldi	r25, 0x03	; 3
    16d8:	8f da       	rcall	.-2786   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    16da:	1a 5f       	subi	r17, 0xFA	; 250
    16dc:	15 33       	cpi	r17, 0x35	; 53
    16de:	b9 f7       	brne	.-18     	; 0x16ce <_Z6bottomh+0x30>
    16e0:	df 91       	pop	r29
    16e2:	cf 91       	pop	r28
    16e4:	1f 91       	pop	r17
    16e6:	08 95       	ret

000016e8 <_Z16anzeige_richtungfhh>:
    16e8:	cf 92       	push	r12
    16ea:	df 92       	push	r13
    16ec:	ef 92       	push	r14
    16ee:	ff 92       	push	r15
    16f0:	cf 93       	push	r28
    16f2:	df 93       	push	r29
    16f4:	6b 01       	movw	r12, r22
    16f6:	7c 01       	movw	r14, r24
    16f8:	c4 2f       	mov	r28, r20
    16fa:	d2 2f       	mov	r29, r18
    16fc:	20 e0       	ldi	r18, 0x00	; 0
    16fe:	30 e0       	ldi	r19, 0x00	; 0
    1700:	40 eb       	ldi	r20, 0xB0	; 176
    1702:	51 e4       	ldi	r21, 0x41	; 65
    1704:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <__cmpsf2>
    1708:	88 23       	and	r24, r24
    170a:	54 f0       	brlt	.+20     	; 0x1720 <_Z16anzeige_richtungfhh+0x38>
    170c:	20 e0       	ldi	r18, 0x00	; 0
    170e:	30 e0       	ldi	r19, 0x00	; 0
    1710:	49 ea       	ldi	r20, 0xA9	; 169
    1712:	53 e4       	ldi	r21, 0x43	; 67
    1714:	c7 01       	movw	r24, r14
    1716:	b6 01       	movw	r22, r12
    1718:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__gesf2>
    171c:	88 23       	and	r24, r24
    171e:	54 f0       	brlt	.+20     	; 0x1734 <_Z16anzeige_richtungfhh+0x4c>
    1720:	2d 2f       	mov	r18, r29
    1722:	22 0f       	add	r18, r18
    1724:	22 0f       	add	r18, r18
    1726:	22 0f       	add	r18, r18
    1728:	4c 2f       	mov	r20, r28
    172a:	6e e4       	ldi	r22, 0x4E	; 78
    172c:	8d e7       	ldi	r24, 0x7D	; 125
    172e:	93 e0       	ldi	r25, 0x03	; 3
    1730:	63 da       	rcall	.-2874   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1732:	ab c0       	rjmp	.+342    	; 0x188a <_Z16anzeige_richtungfhh+0x1a2>
    1734:	20 e0       	ldi	r18, 0x00	; 0
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	48 e8       	ldi	r20, 0x88	; 136
    173a:	52 e4       	ldi	r21, 0x42	; 66
    173c:	c7 01       	movw	r24, r14
    173e:	b6 01       	movw	r22, r12
    1740:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <__cmpsf2>
    1744:	88 23       	and	r24, r24
    1746:	94 f4       	brge	.+36     	; 0x176c <_Z16anzeige_richtungfhh+0x84>
    1748:	dd 0f       	add	r29, r29
    174a:	dd 0f       	add	r29, r29
    174c:	dd 0f       	add	r29, r29
    174e:	4d ef       	ldi	r20, 0xFD	; 253
    1750:	4c 0f       	add	r20, r28
    1752:	2d 2f       	mov	r18, r29
    1754:	6e e4       	ldi	r22, 0x4E	; 78
    1756:	8d e7       	ldi	r24, 0x7D	; 125
    1758:	93 e0       	ldi	r25, 0x03	; 3
    175a:	4e da       	rcall	.-2916   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    175c:	43 e0       	ldi	r20, 0x03	; 3
    175e:	4c 0f       	add	r20, r28
    1760:	2d 2f       	mov	r18, r29
    1762:	6f e4       	ldi	r22, 0x4F	; 79
    1764:	8d e7       	ldi	r24, 0x7D	; 125
    1766:	93 e0       	ldi	r25, 0x03	; 3
    1768:	47 da       	rcall	.-2930   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    176a:	8f c0       	rjmp	.+286    	; 0x188a <_Z16anzeige_richtungfhh+0x1a2>
    176c:	20 e0       	ldi	r18, 0x00	; 0
    176e:	30 e0       	ldi	r19, 0x00	; 0
    1770:	42 ee       	ldi	r20, 0xE2	; 226
    1772:	52 e4       	ldi	r21, 0x42	; 66
    1774:	c7 01       	movw	r24, r14
    1776:	b6 01       	movw	r22, r12
    1778:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <__cmpsf2>
    177c:	88 23       	and	r24, r24
    177e:	54 f4       	brge	.+20     	; 0x1794 <_Z16anzeige_richtungfhh+0xac>
    1780:	2d 2f       	mov	r18, r29
    1782:	22 0f       	add	r18, r18
    1784:	22 0f       	add	r18, r18
    1786:	22 0f       	add	r18, r18
    1788:	4c 2f       	mov	r20, r28
    178a:	6f e4       	ldi	r22, 0x4F	; 79
    178c:	8d e7       	ldi	r24, 0x7D	; 125
    178e:	93 e0       	ldi	r25, 0x03	; 3
    1790:	33 da       	rcall	.-2970   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1792:	7b c0       	rjmp	.+246    	; 0x188a <_Z16anzeige_richtungfhh+0x1a2>
    1794:	20 e0       	ldi	r18, 0x00	; 0
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	4e e1       	ldi	r20, 0x1E	; 30
    179a:	53 e4       	ldi	r21, 0x43	; 67
    179c:	c7 01       	movw	r24, r14
    179e:	b6 01       	movw	r22, r12
    17a0:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <__cmpsf2>
    17a4:	88 23       	and	r24, r24
    17a6:	94 f4       	brge	.+36     	; 0x17cc <_Z16anzeige_richtungfhh+0xe4>
    17a8:	dd 0f       	add	r29, r29
    17aa:	dd 0f       	add	r29, r29
    17ac:	dd 0f       	add	r29, r29
    17ae:	4d ef       	ldi	r20, 0xFD	; 253
    17b0:	4c 0f       	add	r20, r28
    17b2:	2d 2f       	mov	r18, r29
    17b4:	63 e5       	ldi	r22, 0x53	; 83
    17b6:	8d e7       	ldi	r24, 0x7D	; 125
    17b8:	93 e0       	ldi	r25, 0x03	; 3
    17ba:	1e da       	rcall	.-3012   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    17bc:	43 e0       	ldi	r20, 0x03	; 3
    17be:	4c 0f       	add	r20, r28
    17c0:	2d 2f       	mov	r18, r29
    17c2:	6f e4       	ldi	r22, 0x4F	; 79
    17c4:	8d e7       	ldi	r24, 0x7D	; 125
    17c6:	93 e0       	ldi	r25, 0x03	; 3
    17c8:	17 da       	rcall	.-3026   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    17ca:	5f c0       	rjmp	.+190    	; 0x188a <_Z16anzeige_richtungfhh+0x1a2>
    17cc:	20 e0       	ldi	r18, 0x00	; 0
    17ce:	30 e0       	ldi	r19, 0x00	; 0
    17d0:	4b e4       	ldi	r20, 0x4B	; 75
    17d2:	53 e4       	ldi	r21, 0x43	; 67
    17d4:	c7 01       	movw	r24, r14
    17d6:	b6 01       	movw	r22, r12
    17d8:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <__cmpsf2>
    17dc:	88 23       	and	r24, r24
    17de:	54 f4       	brge	.+20     	; 0x17f4 <_Z16anzeige_richtungfhh+0x10c>
    17e0:	2d 2f       	mov	r18, r29
    17e2:	22 0f       	add	r18, r18
    17e4:	22 0f       	add	r18, r18
    17e6:	22 0f       	add	r18, r18
    17e8:	4c 2f       	mov	r20, r28
    17ea:	63 e5       	ldi	r22, 0x53	; 83
    17ec:	8d e7       	ldi	r24, 0x7D	; 125
    17ee:	93 e0       	ldi	r25, 0x03	; 3
    17f0:	03 da       	rcall	.-3066   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    17f2:	4b c0       	rjmp	.+150    	; 0x188a <_Z16anzeige_richtungfhh+0x1a2>
    17f4:	20 e0       	ldi	r18, 0x00	; 0
    17f6:	30 e0       	ldi	r19, 0x00	; 0
    17f8:	48 e7       	ldi	r20, 0x78	; 120
    17fa:	53 e4       	ldi	r21, 0x43	; 67
    17fc:	c7 01       	movw	r24, r14
    17fe:	b6 01       	movw	r22, r12
    1800:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <__cmpsf2>
    1804:	88 23       	and	r24, r24
    1806:	94 f4       	brge	.+36     	; 0x182c <_Z16anzeige_richtungfhh+0x144>
    1808:	dd 0f       	add	r29, r29
    180a:	dd 0f       	add	r29, r29
    180c:	dd 0f       	add	r29, r29
    180e:	4d ef       	ldi	r20, 0xFD	; 253
    1810:	4c 0f       	add	r20, r28
    1812:	2d 2f       	mov	r18, r29
    1814:	63 e5       	ldi	r22, 0x53	; 83
    1816:	8d e7       	ldi	r24, 0x7D	; 125
    1818:	93 e0       	ldi	r25, 0x03	; 3
    181a:	ee d9       	rcall	.-3108   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    181c:	43 e0       	ldi	r20, 0x03	; 3
    181e:	4c 0f       	add	r20, r28
    1820:	2d 2f       	mov	r18, r29
    1822:	67 e5       	ldi	r22, 0x57	; 87
    1824:	8d e7       	ldi	r24, 0x7D	; 125
    1826:	93 e0       	ldi	r25, 0x03	; 3
    1828:	e7 d9       	rcall	.-3122   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    182a:	2f c0       	rjmp	.+94     	; 0x188a <_Z16anzeige_richtungfhh+0x1a2>
    182c:	20 e0       	ldi	r18, 0x00	; 0
    182e:	30 e8       	ldi	r19, 0x80	; 128
    1830:	42 e9       	ldi	r20, 0x92	; 146
    1832:	53 e4       	ldi	r21, 0x43	; 67
    1834:	c7 01       	movw	r24, r14
    1836:	b6 01       	movw	r22, r12
    1838:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <__cmpsf2>
    183c:	88 23       	and	r24, r24
    183e:	54 f4       	brge	.+20     	; 0x1854 <_Z16anzeige_richtungfhh+0x16c>
    1840:	2d 2f       	mov	r18, r29
    1842:	22 0f       	add	r18, r18
    1844:	22 0f       	add	r18, r18
    1846:	22 0f       	add	r18, r18
    1848:	4c 2f       	mov	r20, r28
    184a:	67 e5       	ldi	r22, 0x57	; 87
    184c:	8d e7       	ldi	r24, 0x7D	; 125
    184e:	93 e0       	ldi	r25, 0x03	; 3
    1850:	d3 d9       	rcall	.-3162   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1852:	1b c0       	rjmp	.+54     	; 0x188a <_Z16anzeige_richtungfhh+0x1a2>
    1854:	20 e0       	ldi	r18, 0x00	; 0
    1856:	30 e0       	ldi	r19, 0x00	; 0
    1858:	49 ea       	ldi	r20, 0xA9	; 169
    185a:	53 e4       	ldi	r21, 0x43	; 67
    185c:	c7 01       	movw	r24, r14
    185e:	b6 01       	movw	r22, r12
    1860:	0e 94 01 2d 	call	0x5a02	; 0x5a02 <__cmpsf2>
    1864:	88 23       	and	r24, r24
    1866:	8c f4       	brge	.+34     	; 0x188a <_Z16anzeige_richtungfhh+0x1a2>
    1868:	dd 0f       	add	r29, r29
    186a:	dd 0f       	add	r29, r29
    186c:	dd 0f       	add	r29, r29
    186e:	4d ef       	ldi	r20, 0xFD	; 253
    1870:	4c 0f       	add	r20, r28
    1872:	2d 2f       	mov	r18, r29
    1874:	6e e4       	ldi	r22, 0x4E	; 78
    1876:	8d e7       	ldi	r24, 0x7D	; 125
    1878:	93 e0       	ldi	r25, 0x03	; 3
    187a:	be d9       	rcall	.-3204   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    187c:	43 e0       	ldi	r20, 0x03	; 3
    187e:	4c 0f       	add	r20, r28
    1880:	2d 2f       	mov	r18, r29
    1882:	67 e5       	ldi	r22, 0x57	; 87
    1884:	8d e7       	ldi	r24, 0x7D	; 125
    1886:	93 e0       	ldi	r25, 0x03	; 3
    1888:	b7 d9       	rcall	.-3218   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    188a:	df 91       	pop	r29
    188c:	cf 91       	pop	r28
    188e:	ff 90       	pop	r15
    1890:	ef 90       	pop	r14
    1892:	df 90       	pop	r13
    1894:	cf 90       	pop	r12
    1896:	08 95       	ret

00001898 <_Z13anzeige_nadelhhf>:
    1898:	af 92       	push	r10
    189a:	bf 92       	push	r11
    189c:	cf 92       	push	r12
    189e:	df 92       	push	r13
    18a0:	ef 92       	push	r14
    18a2:	ff 92       	push	r15
    18a4:	0f 93       	push	r16
    18a6:	1f 93       	push	r17
    18a8:	59 01       	movw	r10, r18
    18aa:	6a 01       	movw	r12, r20
    18ac:	e1 2c       	mov	r14, r1
    18ae:	f1 2c       	mov	r15, r1
    18b0:	0c e8       	ldi	r16, 0x8C	; 140
    18b2:	12 e4       	ldi	r17, 0x42	; 66
    18b4:	24 e1       	ldi	r18, 0x14	; 20
    18b6:	46 2f       	mov	r20, r22
    18b8:	68 2f       	mov	r22, r24
    18ba:	8d e7       	ldi	r24, 0x7D	; 125
    18bc:	93 e0       	ldi	r25, 0x03	; 3
    18be:	7c d8       	rcall	.-3848   	; 0x9b8 <_ZN7Display13draw_triangleEhhhff>
    18c0:	1f 91       	pop	r17
    18c2:	0f 91       	pop	r16
    18c4:	ff 90       	pop	r15
    18c6:	ef 90       	pop	r14
    18c8:	df 90       	pop	r13
    18ca:	cf 90       	pop	r12
    18cc:	bf 90       	pop	r11
    18ce:	af 90       	pop	r10
    18d0:	08 95       	ret

000018d2 <_Z19anzeige_kleinenadelhhf>:
    18d2:	af 92       	push	r10
    18d4:	bf 92       	push	r11
    18d6:	cf 92       	push	r12
    18d8:	df 92       	push	r13
    18da:	ef 92       	push	r14
    18dc:	ff 92       	push	r15
    18de:	0f 93       	push	r16
    18e0:	1f 93       	push	r17
    18e2:	59 01       	movw	r10, r18
    18e4:	6a 01       	movw	r12, r20
    18e6:	e1 2c       	mov	r14, r1
    18e8:	f1 2c       	mov	r15, r1
    18ea:	0c e8       	ldi	r16, 0x8C	; 140
    18ec:	12 e4       	ldi	r17, 0x42	; 66
    18ee:	2a e0       	ldi	r18, 0x0A	; 10
    18f0:	46 2f       	mov	r20, r22
    18f2:	68 2f       	mov	r22, r24
    18f4:	8d e7       	ldi	r24, 0x7D	; 125
    18f6:	93 e0       	ldi	r25, 0x03	; 3
    18f8:	5f d8       	rcall	.-3906   	; 0x9b8 <_ZN7Display13draw_triangleEhhhff>
    18fa:	1f 91       	pop	r17
    18fc:	0f 91       	pop	r16
    18fe:	ff 90       	pop	r15
    1900:	ef 90       	pop	r14
    1902:	df 90       	pop	r13
    1904:	cf 90       	pop	r12
    1906:	bf 90       	pop	r11
    1908:	af 90       	pop	r10
    190a:	08 95       	ret

0000190c <_Z11menue_hauptv>:
    190c:	cf 92       	push	r12
    190e:	df 92       	push	r13
    1910:	ef 92       	push	r14
    1912:	ff 92       	push	r15
    1914:	0f 93       	push	r16
    1916:	1f 93       	push	r17
    1918:	cf 93       	push	r28
    191a:	df 93       	push	r29
    191c:	cd b7       	in	r28, 0x3d	; 61
    191e:	de b7       	in	r29, 0x3e	; 62
    1920:	64 97       	sbiw	r28, 0x14	; 20
    1922:	0f b6       	in	r0, 0x3f	; 63
    1924:	f8 94       	cli
    1926:	de bf       	out	0x3e, r29	; 62
    1928:	0f be       	out	0x3f, r0	; 63
    192a:	cd bf       	out	0x3d, r28	; 61
    192c:	8d e7       	ldi	r24, 0x7D	; 125
    192e:	93 e0       	ldi	r25, 0x03	; 3
    1930:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1934:	80 e1       	ldi	r24, 0x10	; 16
    1936:	e6 e3       	ldi	r30, 0x36	; 54
    1938:	f1 e0       	ldi	r31, 0x01	; 1
    193a:	8e 01       	movw	r16, r28
    193c:	0f 5f       	subi	r16, 0xFF	; 255
    193e:	1f 4f       	sbci	r17, 0xFF	; 255
    1940:	d8 01       	movw	r26, r16
    1942:	01 90       	ld	r0, Z+
    1944:	0d 92       	st	X+, r0
    1946:	8a 95       	dec	r24
    1948:	e1 f7       	brne	.-8      	; 0x1942 <_Z11menue_hauptv+0x36>
    194a:	e0 2e       	mov	r14, r16
    194c:	f1 2e       	mov	r15, r17
    194e:	68 01       	movw	r12, r16
    1950:	10 e0       	ldi	r17, 0x00	; 0
    1952:	f6 01       	movw	r30, r12
    1954:	61 91       	ld	r22, Z+
    1956:	6f 01       	movw	r12, r30
    1958:	20 e0       	ldi	r18, 0x00	; 0
    195a:	41 2f       	mov	r20, r17
    195c:	8d e7       	ldi	r24, 0x7D	; 125
    195e:	93 e0       	ldi	r25, 0x03	; 3
    1960:	4b d9       	rcall	.-3434   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1962:	1a 5f       	subi	r17, 0xFA	; 250
    1964:	1a 35       	cpi	r17, 0x5A	; 90
    1966:	a9 f7       	brne	.-22     	; 0x1952 <_Z11menue_hauptv+0x46>
    1968:	81 e1       	ldi	r24, 0x11	; 17
    196a:	e6 e4       	ldi	r30, 0x46	; 70
    196c:	f1 e0       	ldi	r31, 0x01	; 1
    196e:	de 01       	movw	r26, r28
    1970:	11 96       	adiw	r26, 0x01	; 1
    1972:	01 90       	ld	r0, Z+
    1974:	0d 92       	st	X+, r0
    1976:	8a 95       	dec	r24
    1978:	e1 f7       	brne	.-8      	; 0x1972 <_Z11menue_hauptv+0x66>
    197a:	ce 2c       	mov	r12, r14
    197c:	df 2c       	mov	r13, r15
    197e:	10 e0       	ldi	r17, 0x00	; 0
    1980:	f6 01       	movw	r30, r12
    1982:	61 91       	ld	r22, Z+
    1984:	6f 01       	movw	r12, r30
    1986:	28 e0       	ldi	r18, 0x08	; 8
    1988:	41 2f       	mov	r20, r17
    198a:	8d e7       	ldi	r24, 0x7D	; 125
    198c:	93 e0       	ldi	r25, 0x03	; 3
    198e:	34 d9       	rcall	.-3480   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1990:	1a 5f       	subi	r17, 0xFA	; 250
    1992:	10 36       	cpi	r17, 0x60	; 96
    1994:	a9 f7       	brne	.-22     	; 0x1980 <_Z11menue_hauptv+0x74>
    1996:	8a e0       	ldi	r24, 0x0A	; 10
    1998:	e7 e5       	ldi	r30, 0x57	; 87
    199a:	f1 e0       	ldi	r31, 0x01	; 1
    199c:	de 01       	movw	r26, r28
    199e:	11 96       	adiw	r26, 0x01	; 1
    19a0:	01 90       	ld	r0, Z+
    19a2:	0d 92       	st	X+, r0
    19a4:	8a 95       	dec	r24
    19a6:	e1 f7       	brne	.-8      	; 0x19a0 <_Z11menue_hauptv+0x94>
    19a8:	ce 2c       	mov	r12, r14
    19aa:	df 2c       	mov	r13, r15
    19ac:	10 e0       	ldi	r17, 0x00	; 0
    19ae:	f6 01       	movw	r30, r12
    19b0:	61 91       	ld	r22, Z+
    19b2:	6f 01       	movw	r12, r30
    19b4:	20 e1       	ldi	r18, 0x10	; 16
    19b6:	41 2f       	mov	r20, r17
    19b8:	8d e7       	ldi	r24, 0x7D	; 125
    19ba:	93 e0       	ldi	r25, 0x03	; 3
    19bc:	1d d9       	rcall	.-3526   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    19be:	1a 5f       	subi	r17, 0xFA	; 250
    19c0:	16 33       	cpi	r17, 0x36	; 54
    19c2:	a9 f7       	brne	.-22     	; 0x19ae <_Z11menue_hauptv+0xa2>
    19c4:	8b e0       	ldi	r24, 0x0B	; 11
    19c6:	e1 e6       	ldi	r30, 0x61	; 97
    19c8:	f1 e0       	ldi	r31, 0x01	; 1
    19ca:	de 01       	movw	r26, r28
    19cc:	11 96       	adiw	r26, 0x01	; 1
    19ce:	01 90       	ld	r0, Z+
    19d0:	0d 92       	st	X+, r0
    19d2:	8a 95       	dec	r24
    19d4:	e1 f7       	brne	.-8      	; 0x19ce <_Z11menue_hauptv+0xc2>
    19d6:	ce 2c       	mov	r12, r14
    19d8:	df 2c       	mov	r13, r15
    19da:	10 e0       	ldi	r17, 0x00	; 0
    19dc:	f6 01       	movw	r30, r12
    19de:	61 91       	ld	r22, Z+
    19e0:	6f 01       	movw	r12, r30
    19e2:	28 e1       	ldi	r18, 0x18	; 24
    19e4:	41 2f       	mov	r20, r17
    19e6:	8d e7       	ldi	r24, 0x7D	; 125
    19e8:	93 e0       	ldi	r25, 0x03	; 3
    19ea:	06 d9       	rcall	.-3572   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    19ec:	1a 5f       	subi	r17, 0xFA	; 250
    19ee:	1c 33       	cpi	r17, 0x3C	; 60
    19f0:	a9 f7       	brne	.-22     	; 0x19dc <_Z11menue_hauptv+0xd0>
    19f2:	80 e1       	ldi	r24, 0x10	; 16
    19f4:	ec e6       	ldi	r30, 0x6C	; 108
    19f6:	f1 e0       	ldi	r31, 0x01	; 1
    19f8:	de 01       	movw	r26, r28
    19fa:	11 96       	adiw	r26, 0x01	; 1
    19fc:	01 90       	ld	r0, Z+
    19fe:	0d 92       	st	X+, r0
    1a00:	8a 95       	dec	r24
    1a02:	e1 f7       	brne	.-8      	; 0x19fc <_Z11menue_hauptv+0xf0>
    1a04:	ce 2c       	mov	r12, r14
    1a06:	df 2c       	mov	r13, r15
    1a08:	10 e0       	ldi	r17, 0x00	; 0
    1a0a:	f6 01       	movw	r30, r12
    1a0c:	61 91       	ld	r22, Z+
    1a0e:	6f 01       	movw	r12, r30
    1a10:	20 e2       	ldi	r18, 0x20	; 32
    1a12:	41 2f       	mov	r20, r17
    1a14:	8d e7       	ldi	r24, 0x7D	; 125
    1a16:	93 e0       	ldi	r25, 0x03	; 3
    1a18:	ef d8       	rcall	.-3618   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1a1a:	1a 5f       	subi	r17, 0xFA	; 250
    1a1c:	1a 35       	cpi	r17, 0x5A	; 90
    1a1e:	a9 f7       	brne	.-22     	; 0x1a0a <_Z11menue_hauptv+0xfe>
    1a20:	8e e0       	ldi	r24, 0x0E	; 14
    1a22:	ec e7       	ldi	r30, 0x7C	; 124
    1a24:	f1 e0       	ldi	r31, 0x01	; 1
    1a26:	de 01       	movw	r26, r28
    1a28:	11 96       	adiw	r26, 0x01	; 1
    1a2a:	01 90       	ld	r0, Z+
    1a2c:	0d 92       	st	X+, r0
    1a2e:	8a 95       	dec	r24
    1a30:	e1 f7       	brne	.-8      	; 0x1a2a <_Z11menue_hauptv+0x11e>
    1a32:	ce 2c       	mov	r12, r14
    1a34:	df 2c       	mov	r13, r15
    1a36:	10 e0       	ldi	r17, 0x00	; 0
    1a38:	f6 01       	movw	r30, r12
    1a3a:	61 91       	ld	r22, Z+
    1a3c:	6f 01       	movw	r12, r30
    1a3e:	28 e2       	ldi	r18, 0x28	; 40
    1a40:	41 2f       	mov	r20, r17
    1a42:	8d e7       	ldi	r24, 0x7D	; 125
    1a44:	93 e0       	ldi	r25, 0x03	; 3
    1a46:	d8 d8       	rcall	.-3664   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1a48:	1a 5f       	subi	r17, 0xFA	; 250
    1a4a:	1e 34       	cpi	r17, 0x4E	; 78
    1a4c:	a9 f7       	brne	.-22     	; 0x1a38 <_Z11menue_hauptv+0x12c>
    1a4e:	8e e0       	ldi	r24, 0x0E	; 14
    1a50:	ea e8       	ldi	r30, 0x8A	; 138
    1a52:	f1 e0       	ldi	r31, 0x01	; 1
    1a54:	de 01       	movw	r26, r28
    1a56:	11 96       	adiw	r26, 0x01	; 1
    1a58:	01 90       	ld	r0, Z+
    1a5a:	0d 92       	st	X+, r0
    1a5c:	8a 95       	dec	r24
    1a5e:	e1 f7       	brne	.-8      	; 0x1a58 <_Z11menue_hauptv+0x14c>
    1a60:	ce 2c       	mov	r12, r14
    1a62:	df 2c       	mov	r13, r15
    1a64:	10 e0       	ldi	r17, 0x00	; 0
    1a66:	f6 01       	movw	r30, r12
    1a68:	61 91       	ld	r22, Z+
    1a6a:	6f 01       	movw	r12, r30
    1a6c:	20 e3       	ldi	r18, 0x30	; 48
    1a6e:	41 2f       	mov	r20, r17
    1a70:	8d e7       	ldi	r24, 0x7D	; 125
    1a72:	93 e0       	ldi	r25, 0x03	; 3
    1a74:	c1 d8       	rcall	.-3710   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1a76:	1a 5f       	subi	r17, 0xFA	; 250
    1a78:	1e 34       	cpi	r17, 0x4E	; 78
    1a7a:	a9 f7       	brne	.-22     	; 0x1a66 <_Z11menue_hauptv+0x15a>
    1a7c:	64 96       	adiw	r28, 0x14	; 20
    1a7e:	0f b6       	in	r0, 0x3f	; 63
    1a80:	f8 94       	cli
    1a82:	de bf       	out	0x3e, r29	; 62
    1a84:	0f be       	out	0x3f, r0	; 63
    1a86:	cd bf       	out	0x3d, r28	; 61
    1a88:	df 91       	pop	r29
    1a8a:	cf 91       	pop	r28
    1a8c:	1f 91       	pop	r17
    1a8e:	0f 91       	pop	r16
    1a90:	ff 90       	pop	r15
    1a92:	ef 90       	pop	r14
    1a94:	df 90       	pop	r13
    1a96:	cf 90       	pop	r12
    1a98:	08 95       	ret

00001a9a <_Z11menue_einstv>:
    1a9a:	af 92       	push	r10
    1a9c:	bf 92       	push	r11
    1a9e:	df 92       	push	r13
    1aa0:	ef 92       	push	r14
    1aa2:	0f 93       	push	r16
    1aa4:	1f 93       	push	r17
    1aa6:	cf 93       	push	r28
    1aa8:	df 93       	push	r29
    1aaa:	cd b7       	in	r28, 0x3d	; 61
    1aac:	de b7       	in	r29, 0x3e	; 62
    1aae:	64 97       	sbiw	r28, 0x14	; 20
    1ab0:	0f b6       	in	r0, 0x3f	; 63
    1ab2:	f8 94       	cli
    1ab4:	de bf       	out	0x3e, r29	; 62
    1ab6:	0f be       	out	0x3f, r0	; 63
    1ab8:	cd bf       	out	0x3d, r28	; 61
    1aba:	8d e7       	ldi	r24, 0x7D	; 125
    1abc:	93 e0       	ldi	r25, 0x03	; 3
    1abe:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1ac2:	81 e1       	ldi	r24, 0x11	; 17
    1ac4:	e8 e9       	ldi	r30, 0x98	; 152
    1ac6:	f1 e0       	ldi	r31, 0x01	; 1
    1ac8:	8e 01       	movw	r16, r28
    1aca:	0f 5f       	subi	r16, 0xFF	; 255
    1acc:	1f 4f       	sbci	r17, 0xFF	; 255
    1ace:	d8 01       	movw	r26, r16
    1ad0:	01 90       	ld	r0, Z+
    1ad2:	0d 92       	st	X+, r0
    1ad4:	8a 95       	dec	r24
    1ad6:	e1 f7       	brne	.-8      	; 0x1ad0 <_Z11menue_einstv+0x36>
    1ad8:	d0 2e       	mov	r13, r16
    1ada:	e1 2e       	mov	r14, r17
    1adc:	58 01       	movw	r10, r16
    1ade:	10 e0       	ldi	r17, 0x00	; 0
    1ae0:	f5 01       	movw	r30, r10
    1ae2:	61 91       	ld	r22, Z+
    1ae4:	5f 01       	movw	r10, r30
    1ae6:	20 e0       	ldi	r18, 0x00	; 0
    1ae8:	41 2f       	mov	r20, r17
    1aea:	8d e7       	ldi	r24, 0x7D	; 125
    1aec:	93 e0       	ldi	r25, 0x03	; 3
    1aee:	84 d8       	rcall	.-3832   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1af0:	1a 5f       	subi	r17, 0xFA	; 250
    1af2:	10 36       	cpi	r17, 0x60	; 96
    1af4:	a9 f7       	brne	.-22     	; 0x1ae0 <_Z11menue_einstv+0x46>
    1af6:	86 e1       	ldi	r24, 0x16	; 22
    1af8:	e9 ea       	ldi	r30, 0xA9	; 169
    1afa:	f1 e0       	ldi	r31, 0x01	; 1
    1afc:	de 01       	movw	r26, r28
    1afe:	11 96       	adiw	r26, 0x01	; 1
    1b00:	01 90       	ld	r0, Z+
    1b02:	0d 92       	st	X+, r0
    1b04:	8a 95       	dec	r24
    1b06:	e1 f7       	brne	.-8      	; 0x1b00 <_Z11menue_einstv+0x66>
    1b08:	ad 2c       	mov	r10, r13
    1b0a:	be 2c       	mov	r11, r14
    1b0c:	10 e0       	ldi	r17, 0x00	; 0
    1b0e:	f5 01       	movw	r30, r10
    1b10:	61 91       	ld	r22, Z+
    1b12:	5f 01       	movw	r10, r30
    1b14:	28 e0       	ldi	r18, 0x08	; 8
    1b16:	41 2f       	mov	r20, r17
    1b18:	8d e7       	ldi	r24, 0x7D	; 125
    1b1a:	93 e0       	ldi	r25, 0x03	; 3
    1b1c:	6d d8       	rcall	.-3878   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1b1e:	1a 5f       	subi	r17, 0xFA	; 250
    1b20:	1e 37       	cpi	r17, 0x7E	; 126
    1b22:	a9 f7       	brne	.-22     	; 0x1b0e <_Z11menue_einstv+0x74>
    1b24:	81 e1       	ldi	r24, 0x11	; 17
    1b26:	ef eb       	ldi	r30, 0xBF	; 191
    1b28:	f1 e0       	ldi	r31, 0x01	; 1
    1b2a:	de 01       	movw	r26, r28
    1b2c:	11 96       	adiw	r26, 0x01	; 1
    1b2e:	01 90       	ld	r0, Z+
    1b30:	0d 92       	st	X+, r0
    1b32:	8a 95       	dec	r24
    1b34:	e1 f7       	brne	.-8      	; 0x1b2e <_Z11menue_einstv+0x94>
    1b36:	ad 2c       	mov	r10, r13
    1b38:	be 2c       	mov	r11, r14
    1b3a:	10 e0       	ldi	r17, 0x00	; 0
    1b3c:	f5 01       	movw	r30, r10
    1b3e:	61 91       	ld	r22, Z+
    1b40:	5f 01       	movw	r10, r30
    1b42:	20 e1       	ldi	r18, 0x10	; 16
    1b44:	41 2f       	mov	r20, r17
    1b46:	8d e7       	ldi	r24, 0x7D	; 125
    1b48:	93 e0       	ldi	r25, 0x03	; 3
    1b4a:	56 d8       	rcall	.-3924   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1b4c:	1a 5f       	subi	r17, 0xFA	; 250
    1b4e:	10 36       	cpi	r17, 0x60	; 96
    1b50:	a9 f7       	brne	.-22     	; 0x1b3c <_Z11menue_einstv+0xa2>
    1b52:	83 e1       	ldi	r24, 0x13	; 19
    1b54:	e0 ed       	ldi	r30, 0xD0	; 208
    1b56:	f1 e0       	ldi	r31, 0x01	; 1
    1b58:	de 01       	movw	r26, r28
    1b5a:	11 96       	adiw	r26, 0x01	; 1
    1b5c:	01 90       	ld	r0, Z+
    1b5e:	0d 92       	st	X+, r0
    1b60:	8a 95       	dec	r24
    1b62:	e1 f7       	brne	.-8      	; 0x1b5c <_Z11menue_einstv+0xc2>
    1b64:	ad 2c       	mov	r10, r13
    1b66:	be 2c       	mov	r11, r14
    1b68:	10 e0       	ldi	r17, 0x00	; 0
    1b6a:	f5 01       	movw	r30, r10
    1b6c:	61 91       	ld	r22, Z+
    1b6e:	5f 01       	movw	r10, r30
    1b70:	28 e1       	ldi	r18, 0x18	; 24
    1b72:	41 2f       	mov	r20, r17
    1b74:	8d e7       	ldi	r24, 0x7D	; 125
    1b76:	93 e0       	ldi	r25, 0x03	; 3
    1b78:	3f d8       	rcall	.-3970   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1b7a:	1a 5f       	subi	r17, 0xFA	; 250
    1b7c:	1c 36       	cpi	r17, 0x6C	; 108
    1b7e:	a9 f7       	brne	.-22     	; 0x1b6a <_Z11menue_einstv+0xd0>
    1b80:	64 96       	adiw	r28, 0x14	; 20
    1b82:	0f b6       	in	r0, 0x3f	; 63
    1b84:	f8 94       	cli
    1b86:	de bf       	out	0x3e, r29	; 62
    1b88:	0f be       	out	0x3f, r0	; 63
    1b8a:	cd bf       	out	0x3d, r28	; 61
    1b8c:	df 91       	pop	r29
    1b8e:	cf 91       	pop	r28
    1b90:	1f 91       	pop	r17
    1b92:	0f 91       	pop	r16
    1b94:	ef 90       	pop	r14
    1b96:	df 90       	pop	r13
    1b98:	bf 90       	pop	r11
    1b9a:	af 90       	pop	r10
    1b9c:	08 95       	ret

00001b9e <_Z9menue_uhrv>:
    1b9e:	af 92       	push	r10
    1ba0:	bf 92       	push	r11
    1ba2:	df 92       	push	r13
    1ba4:	ef 92       	push	r14
    1ba6:	0f 93       	push	r16
    1ba8:	1f 93       	push	r17
    1baa:	cf 93       	push	r28
    1bac:	df 93       	push	r29
    1bae:	cd b7       	in	r28, 0x3d	; 61
    1bb0:	de b7       	in	r29, 0x3e	; 62
    1bb2:	64 97       	sbiw	r28, 0x14	; 20
    1bb4:	0f b6       	in	r0, 0x3f	; 63
    1bb6:	f8 94       	cli
    1bb8:	de bf       	out	0x3e, r29	; 62
    1bba:	0f be       	out	0x3f, r0	; 63
    1bbc:	cd bf       	out	0x3d, r28	; 61
    1bbe:	8d e7       	ldi	r24, 0x7D	; 125
    1bc0:	93 e0       	ldi	r25, 0x03	; 3
    1bc2:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1bc6:	86 e0       	ldi	r24, 0x06	; 6
    1bc8:	e3 ee       	ldi	r30, 0xE3	; 227
    1bca:	f1 e0       	ldi	r31, 0x01	; 1
    1bcc:	8e 01       	movw	r16, r28
    1bce:	0f 5f       	subi	r16, 0xFF	; 255
    1bd0:	1f 4f       	sbci	r17, 0xFF	; 255
    1bd2:	d8 01       	movw	r26, r16
    1bd4:	01 90       	ld	r0, Z+
    1bd6:	0d 92       	st	X+, r0
    1bd8:	8a 95       	dec	r24
    1bda:	e1 f7       	brne	.-8      	; 0x1bd4 <_Z9menue_uhrv+0x36>
    1bdc:	d0 2e       	mov	r13, r16
    1bde:	e1 2e       	mov	r14, r17
    1be0:	58 01       	movw	r10, r16
    1be2:	10 e0       	ldi	r17, 0x00	; 0
    1be4:	f5 01       	movw	r30, r10
    1be6:	61 91       	ld	r22, Z+
    1be8:	5f 01       	movw	r10, r30
    1bea:	20 e0       	ldi	r18, 0x00	; 0
    1bec:	41 2f       	mov	r20, r17
    1bee:	8d e7       	ldi	r24, 0x7D	; 125
    1bf0:	93 e0       	ldi	r25, 0x03	; 3
    1bf2:	02 d8       	rcall	.-4092   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1bf4:	1a 5f       	subi	r17, 0xFA	; 250
    1bf6:	1e 31       	cpi	r17, 0x1E	; 30
    1bf8:	a9 f7       	brne	.-22     	; 0x1be4 <_Z9menue_uhrv+0x46>
    1bfa:	8b e0       	ldi	r24, 0x0B	; 11
    1bfc:	e9 ee       	ldi	r30, 0xE9	; 233
    1bfe:	f1 e0       	ldi	r31, 0x01	; 1
    1c00:	de 01       	movw	r26, r28
    1c02:	11 96       	adiw	r26, 0x01	; 1
    1c04:	01 90       	ld	r0, Z+
    1c06:	0d 92       	st	X+, r0
    1c08:	8a 95       	dec	r24
    1c0a:	e1 f7       	brne	.-8      	; 0x1c04 <_Z9menue_uhrv+0x66>
    1c0c:	ad 2c       	mov	r10, r13
    1c0e:	be 2c       	mov	r11, r14
    1c10:	10 e0       	ldi	r17, 0x00	; 0
    1c12:	f5 01       	movw	r30, r10
    1c14:	61 91       	ld	r22, Z+
    1c16:	5f 01       	movw	r10, r30
    1c18:	28 e0       	ldi	r18, 0x08	; 8
    1c1a:	41 2f       	mov	r20, r17
    1c1c:	8d e7       	ldi	r24, 0x7D	; 125
    1c1e:	93 e0       	ldi	r25, 0x03	; 3
    1c20:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1c24:	1a 5f       	subi	r17, 0xFA	; 250
    1c26:	1c 33       	cpi	r17, 0x3C	; 60
    1c28:	a1 f7       	brne	.-24     	; 0x1c12 <_Z9menue_uhrv+0x74>
    1c2a:	88 e0       	ldi	r24, 0x08	; 8
    1c2c:	e4 ef       	ldi	r30, 0xF4	; 244
    1c2e:	f1 e0       	ldi	r31, 0x01	; 1
    1c30:	de 01       	movw	r26, r28
    1c32:	11 96       	adiw	r26, 0x01	; 1
    1c34:	01 90       	ld	r0, Z+
    1c36:	0d 92       	st	X+, r0
    1c38:	8a 95       	dec	r24
    1c3a:	e1 f7       	brne	.-8      	; 0x1c34 <_Z9menue_uhrv+0x96>
    1c3c:	ad 2c       	mov	r10, r13
    1c3e:	be 2c       	mov	r11, r14
    1c40:	10 e0       	ldi	r17, 0x00	; 0
    1c42:	f5 01       	movw	r30, r10
    1c44:	61 91       	ld	r22, Z+
    1c46:	5f 01       	movw	r10, r30
    1c48:	20 e1       	ldi	r18, 0x10	; 16
    1c4a:	41 2f       	mov	r20, r17
    1c4c:	8d e7       	ldi	r24, 0x7D	; 125
    1c4e:	93 e0       	ldi	r25, 0x03	; 3
    1c50:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1c54:	1a 5f       	subi	r17, 0xFA	; 250
    1c56:	1a 32       	cpi	r17, 0x2A	; 42
    1c58:	a1 f7       	brne	.-24     	; 0x1c42 <_Z9menue_uhrv+0xa4>
    1c5a:	89 e0       	ldi	r24, 0x09	; 9
    1c5c:	ec ef       	ldi	r30, 0xFC	; 252
    1c5e:	f1 e0       	ldi	r31, 0x01	; 1
    1c60:	de 01       	movw	r26, r28
    1c62:	11 96       	adiw	r26, 0x01	; 1
    1c64:	01 90       	ld	r0, Z+
    1c66:	0d 92       	st	X+, r0
    1c68:	8a 95       	dec	r24
    1c6a:	e1 f7       	brne	.-8      	; 0x1c64 <_Z9menue_uhrv+0xc6>
    1c6c:	ad 2c       	mov	r10, r13
    1c6e:	be 2c       	mov	r11, r14
    1c70:	10 e0       	ldi	r17, 0x00	; 0
    1c72:	f5 01       	movw	r30, r10
    1c74:	61 91       	ld	r22, Z+
    1c76:	5f 01       	movw	r10, r30
    1c78:	28 e1       	ldi	r18, 0x18	; 24
    1c7a:	41 2f       	mov	r20, r17
    1c7c:	8d e7       	ldi	r24, 0x7D	; 125
    1c7e:	93 e0       	ldi	r25, 0x03	; 3
    1c80:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1c84:	1a 5f       	subi	r17, 0xFA	; 250
    1c86:	10 33       	cpi	r17, 0x30	; 48
    1c88:	a1 f7       	brne	.-24     	; 0x1c72 <_Z9menue_uhrv+0xd4>
    1c8a:	8c e0       	ldi	r24, 0x0C	; 12
    1c8c:	e5 e0       	ldi	r30, 0x05	; 5
    1c8e:	f2 e0       	ldi	r31, 0x02	; 2
    1c90:	de 01       	movw	r26, r28
    1c92:	11 96       	adiw	r26, 0x01	; 1
    1c94:	01 90       	ld	r0, Z+
    1c96:	0d 92       	st	X+, r0
    1c98:	8a 95       	dec	r24
    1c9a:	e1 f7       	brne	.-8      	; 0x1c94 <_Z9menue_uhrv+0xf6>
    1c9c:	ad 2c       	mov	r10, r13
    1c9e:	be 2c       	mov	r11, r14
    1ca0:	10 e0       	ldi	r17, 0x00	; 0
    1ca2:	f5 01       	movw	r30, r10
    1ca4:	61 91       	ld	r22, Z+
    1ca6:	5f 01       	movw	r10, r30
    1ca8:	20 e2       	ldi	r18, 0x20	; 32
    1caa:	41 2f       	mov	r20, r17
    1cac:	8d e7       	ldi	r24, 0x7D	; 125
    1cae:	93 e0       	ldi	r25, 0x03	; 3
    1cb0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1cb4:	1a 5f       	subi	r17, 0xFA	; 250
    1cb6:	12 34       	cpi	r17, 0x42	; 66
    1cb8:	a1 f7       	brne	.-24     	; 0x1ca2 <_Z9menue_uhrv+0x104>
    1cba:	64 96       	adiw	r28, 0x14	; 20
    1cbc:	0f b6       	in	r0, 0x3f	; 63
    1cbe:	f8 94       	cli
    1cc0:	de bf       	out	0x3e, r29	; 62
    1cc2:	0f be       	out	0x3f, r0	; 63
    1cc4:	cd bf       	out	0x3d, r28	; 61
    1cc6:	df 91       	pop	r29
    1cc8:	cf 91       	pop	r28
    1cca:	1f 91       	pop	r17
    1ccc:	0f 91       	pop	r16
    1cce:	ef 90       	pop	r14
    1cd0:	df 90       	pop	r13
    1cd2:	bf 90       	pop	r11
    1cd4:	af 90       	pop	r10
    1cd6:	08 95       	ret

00001cd8 <_Z11uhranzeigenv>:
    1cd8:	df 92       	push	r13
    1cda:	ef 92       	push	r14
    1cdc:	ff 92       	push	r15
    1cde:	0f 93       	push	r16
    1ce0:	1f 93       	push	r17
    1ce2:	cf 93       	push	r28
    1ce4:	df 93       	push	r29
    1ce6:	cd b7       	in	r28, 0x3d	; 61
    1ce8:	de b7       	in	r29, 0x3e	; 62
    1cea:	64 97       	sbiw	r28, 0x14	; 20
    1cec:	0f b6       	in	r0, 0x3f	; 63
    1cee:	f8 94       	cli
    1cf0:	de bf       	out	0x3e, r29	; 62
    1cf2:	0f be       	out	0x3f, r0	; 63
    1cf4:	cd bf       	out	0x3d, r28	; 61
    1cf6:	86 e6       	ldi	r24, 0x66	; 102
    1cf8:	93 e0       	ldi	r25, 0x03	; 3
    1cfa:	0e 94 0c 2a 	call	0x5418	; 0x5418 <_ZN8Pressure16READ_TemperatureEv>
    1cfe:	8d e7       	ldi	r24, 0x7D	; 125
    1d00:	93 e0       	ldi	r25, 0x03	; 3
    1d02:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1d06:	01 e0       	ldi	r16, 0x01	; 1
    1d08:	20 91 90 07 	lds	r18, 0x0790
    1d0c:	40 91 8f 07 	lds	r20, 0x078F
    1d10:	60 91 8e 07 	lds	r22, 0x078E
    1d14:	8d e7       	ldi	r24, 0x7D	; 125
    1d16:	93 e0       	ldi	r25, 0x03	; 3
    1d18:	33 d8       	rcall	.-3994   	; 0xd80 <_ZN7Display6analogEhhhh>
    1d1a:	0f 2e       	mov	r0, r31
    1d1c:	fe e7       	ldi	r31, 0x7E	; 126
    1d1e:	ef 2e       	mov	r14, r31
    1d20:	f7 e0       	ldi	r31, 0x07	; 7
    1d22:	ff 2e       	mov	r15, r31
    1d24:	f0 2d       	mov	r31, r0
    1d26:	11 e4       	ldi	r17, 0x41	; 65
    1d28:	f7 01       	movw	r30, r14
    1d2a:	61 91       	ld	r22, Z+
    1d2c:	7f 01       	movw	r14, r30
    1d2e:	20 e0       	ldi	r18, 0x00	; 0
    1d30:	41 2f       	mov	r20, r17
    1d32:	8d e7       	ldi	r24, 0x7D	; 125
    1d34:	93 e0       	ldi	r25, 0x03	; 3
    1d36:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1d3a:	1a 5f       	subi	r17, 0xFA	; 250
    1d3c:	11 37       	cpi	r17, 0x71	; 113
    1d3e:	a1 f7       	brne	.-24     	; 0x1d28 <_Z11uhranzeigenv+0x50>
    1d40:	0f 2e       	mov	r0, r31
    1d42:	f6 e8       	ldi	r31, 0x86	; 134
    1d44:	ef 2e       	mov	r14, r31
    1d46:	f7 e0       	ldi	r31, 0x07	; 7
    1d48:	ff 2e       	mov	r15, r31
    1d4a:	f0 2d       	mov	r31, r0
    1d4c:	11 e4       	ldi	r17, 0x41	; 65
    1d4e:	f7 01       	movw	r30, r14
    1d50:	61 91       	ld	r22, Z+
    1d52:	7f 01       	movw	r14, r30
    1d54:	28 e3       	ldi	r18, 0x38	; 56
    1d56:	41 2f       	mov	r20, r17
    1d58:	8d e7       	ldi	r24, 0x7D	; 125
    1d5a:	93 e0       	ldi	r25, 0x03	; 3
    1d5c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1d60:	1a 5f       	subi	r17, 0xFA	; 250
    1d62:	11 37       	cpi	r17, 0x71	; 113
    1d64:	a1 f7       	brne	.-24     	; 0x1d4e <_Z11uhranzeigenv+0x76>
    1d66:	99 da       	rcall	.-2766   	; 0x129a <_Z14Batteriestatusv>
    1d68:	28 2f       	mov	r18, r24
    1d6a:	33 27       	eor	r19, r19
    1d6c:	27 fd       	sbrc	r18, 7
    1d6e:	30 95       	com	r19
    1d70:	3f 93       	push	r19
    1d72:	8f 93       	push	r24
    1d74:	81 e3       	ldi	r24, 0x31	; 49
    1d76:	91 e0       	ldi	r25, 0x01	; 1
    1d78:	9f 93       	push	r25
    1d7a:	8f 93       	push	r24
    1d7c:	ce 01       	movw	r24, r28
    1d7e:	01 96       	adiw	r24, 0x01	; 1
    1d80:	9f 93       	push	r25
    1d82:	8f 93       	push	r24
    1d84:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    1d88:	0f 90       	pop	r0
    1d8a:	0f 90       	pop	r0
    1d8c:	0f 90       	pop	r0
    1d8e:	0f 90       	pop	r0
    1d90:	0f 90       	pop	r0
    1d92:	0f 90       	pop	r0
    1d94:	88 23       	and	r24, r24
    1d96:	59 f1       	breq	.+86     	; 0x1dee <_Z11uhranzeigenv+0x116>
    1d98:	8e 01       	movw	r16, r28
    1d9a:	0f 5f       	subi	r16, 0xFF	; 255
    1d9c:	1f 4f       	sbci	r17, 0xFF	; 255
    1d9e:	81 50       	subi	r24, 0x01	; 1
    1da0:	68 94       	set
    1da2:	ee 24       	eor	r14, r14
    1da4:	e1 f8       	bld	r14, 1
    1da6:	f1 2c       	mov	r15, r1
    1da8:	ec 0e       	add	r14, r28
    1daa:	fd 1e       	adc	r15, r29
    1dac:	e8 0e       	add	r14, r24
    1dae:	f1 1c       	adc	r15, r1
    1db0:	0f 2e       	mov	r0, r31
    1db2:	f9 e4       	ldi	r31, 0x49	; 73
    1db4:	df 2e       	mov	r13, r31
    1db6:	f0 2d       	mov	r31, r0
    1db8:	f8 01       	movw	r30, r16
    1dba:	61 91       	ld	r22, Z+
    1dbc:	8f 01       	movw	r16, r30
    1dbe:	86 2f       	mov	r24, r22
    1dc0:	87 7f       	andi	r24, 0xF7	; 247
    1dc2:	85 32       	cpi	r24, 0x25	; 37
    1dc4:	39 f4       	brne	.+14     	; 0x1dd4 <_Z11uhranzeigenv+0xfc>
    1dc6:	28 e1       	ldi	r18, 0x18	; 24
    1dc8:	4d 2d       	mov	r20, r13
    1dca:	8d e7       	ldi	r24, 0x7D	; 125
    1dcc:	93 e0       	ldi	r25, 0x03	; 3
    1dce:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1dd2:	08 c0       	rjmp	.+16     	; 0x1de4 <_Z11uhranzeigenv+0x10c>
    1dd4:	60 53       	subi	r22, 0x30	; 48
    1dd6:	24 e1       	ldi	r18, 0x14	; 20
    1dd8:	4d ef       	ldi	r20, 0xFD	; 253
    1dda:	4d 0d       	add	r20, r13
    1ddc:	8d e7       	ldi	r24, 0x7D	; 125
    1dde:	93 e0       	ldi	r25, 0x03	; 3
    1de0:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1de4:	f0 e1       	ldi	r31, 0x10	; 16
    1de6:	df 0e       	add	r13, r31
    1de8:	0e 15       	cp	r16, r14
    1dea:	1f 05       	cpc	r17, r15
    1dec:	29 f7       	brne	.-54     	; 0x1db8 <_Z11uhranzeigenv+0xe0>
    1dee:	ea e6       	ldi	r30, 0x6A	; 106
    1df0:	f3 e0       	ldi	r31, 0x03	; 3
    1df2:	83 81       	ldd	r24, Z+3	; 0x03
    1df4:	8f 93       	push	r24
    1df6:	82 81       	ldd	r24, Z+2	; 0x02
    1df8:	8f 93       	push	r24
    1dfa:	81 81       	ldd	r24, Z+1	; 0x01
    1dfc:	8f 93       	push	r24
    1dfe:	80 81       	ld	r24, Z
    1e00:	8f 93       	push	r24
    1e02:	81 e1       	ldi	r24, 0x11	; 17
    1e04:	92 e0       	ldi	r25, 0x02	; 2
    1e06:	9f 93       	push	r25
    1e08:	8f 93       	push	r24
    1e0a:	ce 01       	movw	r24, r28
    1e0c:	01 96       	adiw	r24, 0x01	; 1
    1e0e:	9f 93       	push	r25
    1e10:	8f 93       	push	r24
    1e12:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    1e16:	0f b6       	in	r0, 0x3f	; 63
    1e18:	f8 94       	cli
    1e1a:	de bf       	out	0x3e, r29	; 62
    1e1c:	0f be       	out	0x3f, r0	; 63
    1e1e:	cd bf       	out	0x3d, r28	; 61
    1e20:	88 23       	and	r24, r24
    1e22:	f1 f0       	breq	.+60     	; 0x1e60 <_Z11uhranzeigenv+0x188>
    1e24:	8e 01       	movw	r16, r28
    1e26:	0f 5f       	subi	r16, 0xFF	; 255
    1e28:	1f 4f       	sbci	r17, 0xFF	; 255
    1e2a:	81 50       	subi	r24, 0x01	; 1
    1e2c:	68 94       	set
    1e2e:	ee 24       	eor	r14, r14
    1e30:	e1 f8       	bld	r14, 1
    1e32:	f1 2c       	mov	r15, r1
    1e34:	ec 0e       	add	r14, r28
    1e36:	fd 1e       	adc	r15, r29
    1e38:	e8 0e       	add	r14, r24
    1e3a:	f1 1c       	adc	r15, r1
    1e3c:	0f 2e       	mov	r0, r31
    1e3e:	f6 e4       	ldi	r31, 0x46	; 70
    1e40:	df 2e       	mov	r13, r31
    1e42:	f0 2d       	mov	r31, r0
    1e44:	f8 01       	movw	r30, r16
    1e46:	61 91       	ld	r22, Z+
    1e48:	8f 01       	movw	r16, r30
    1e4a:	28 e2       	ldi	r18, 0x28	; 40
    1e4c:	4d 2d       	mov	r20, r13
    1e4e:	8d e7       	ldi	r24, 0x7D	; 125
    1e50:	93 e0       	ldi	r25, 0x03	; 3
    1e52:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1e56:	f6 e0       	ldi	r31, 0x06	; 6
    1e58:	df 0e       	add	r13, r31
    1e5a:	0e 15       	cp	r16, r14
    1e5c:	1f 05       	cpc	r17, r15
    1e5e:	91 f7       	brne	.-28     	; 0x1e44 <_Z11uhranzeigenv+0x16c>
    1e60:	64 96       	adiw	r28, 0x14	; 20
    1e62:	0f b6       	in	r0, 0x3f	; 63
    1e64:	f8 94       	cli
    1e66:	de bf       	out	0x3e, r29	; 62
    1e68:	0f be       	out	0x3f, r0	; 63
    1e6a:	cd bf       	out	0x3d, r28	; 61
    1e6c:	df 91       	pop	r29
    1e6e:	cf 91       	pop	r28
    1e70:	1f 91       	pop	r17
    1e72:	0f 91       	pop	r16
    1e74:	ff 90       	pop	r15
    1e76:	ef 90       	pop	r14
    1e78:	df 90       	pop	r13
    1e7a:	08 95       	ret

00001e7c <_Z14uhranzeigenminv>:
    1e7c:	0f 93       	push	r16
    1e7e:	1f 93       	push	r17
    1e80:	cf 93       	push	r28
    1e82:	df 93       	push	r29
    1e84:	8d e7       	ldi	r24, 0x7D	; 125
    1e86:	93 e0       	ldi	r25, 0x03	; 3
    1e88:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1e8c:	82 e0       	ldi	r24, 0x02	; 2
    1e8e:	26 db       	rcall	.-2484   	; 0x14dc <_Z6headerh>
    1e90:	00 e0       	ldi	r16, 0x00	; 0
    1e92:	20 91 90 07 	lds	r18, 0x0790
    1e96:	40 91 8f 07 	lds	r20, 0x078F
    1e9a:	60 91 8e 07 	lds	r22, 0x078E
    1e9e:	8d e7       	ldi	r24, 0x7D	; 125
    1ea0:	93 e0       	ldi	r25, 0x03	; 3
    1ea2:	0e 94 c0 06 	call	0xd80	; 0xd80 <_ZN7Display6analogEhhhh>
    1ea6:	ce e7       	ldi	r28, 0x7E	; 126
    1ea8:	d7 e0       	ldi	r29, 0x07	; 7
    1eaa:	11 e4       	ldi	r17, 0x41	; 65
    1eac:	69 91       	ld	r22, Y+
    1eae:	20 e0       	ldi	r18, 0x00	; 0
    1eb0:	41 2f       	mov	r20, r17
    1eb2:	8d e7       	ldi	r24, 0x7D	; 125
    1eb4:	93 e0       	ldi	r25, 0x03	; 3
    1eb6:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1eba:	1a 5f       	subi	r17, 0xFA	; 250
    1ebc:	1f 35       	cpi	r17, 0x5F	; 95
    1ebe:	b1 f7       	brne	.-20     	; 0x1eac <_Z14uhranzeigenminv+0x30>
    1ec0:	c6 e8       	ldi	r28, 0x86	; 134
    1ec2:	d7 e0       	ldi	r29, 0x07	; 7
    1ec4:	11 e4       	ldi	r17, 0x41	; 65
    1ec6:	69 91       	ld	r22, Y+
    1ec8:	28 e3       	ldi	r18, 0x38	; 56
    1eca:	41 2f       	mov	r20, r17
    1ecc:	8d e7       	ldi	r24, 0x7D	; 125
    1ece:	93 e0       	ldi	r25, 0x03	; 3
    1ed0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1ed4:	1a 5f       	subi	r17, 0xFA	; 250
    1ed6:	11 37       	cpi	r17, 0x71	; 113
    1ed8:	b1 f7       	brne	.-20     	; 0x1ec6 <_Z14uhranzeigenminv+0x4a>
    1eda:	60 91 7e 07 	lds	r22, 0x077E
    1ede:	60 53       	subi	r22, 0x30	; 48
    1ee0:	2d e0       	ldi	r18, 0x0D	; 13
    1ee2:	46 e4       	ldi	r20, 0x46	; 70
    1ee4:	8d e7       	ldi	r24, 0x7D	; 125
    1ee6:	93 e0       	ldi	r25, 0x03	; 3
    1ee8:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1eec:	60 91 7f 07 	lds	r22, 0x077F
    1ef0:	60 53       	subi	r22, 0x30	; 48
    1ef2:	2d e0       	ldi	r18, 0x0D	; 13
    1ef4:	46 e5       	ldi	r20, 0x56	; 86
    1ef6:	8d e7       	ldi	r24, 0x7D	; 125
    1ef8:	93 e0       	ldi	r25, 0x03	; 3
    1efa:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1efe:	60 91 81 07 	lds	r22, 0x0781
    1f02:	60 53       	subi	r22, 0x30	; 48
    1f04:	22 e2       	ldi	r18, 0x22	; 34
    1f06:	46 e4       	ldi	r20, 0x46	; 70
    1f08:	8d e7       	ldi	r24, 0x7D	; 125
    1f0a:	93 e0       	ldi	r25, 0x03	; 3
    1f0c:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f10:	60 91 82 07 	lds	r22, 0x0782
    1f14:	60 53       	subi	r22, 0x30	; 48
    1f16:	22 e2       	ldi	r18, 0x22	; 34
    1f18:	46 e5       	ldi	r20, 0x56	; 86
    1f1a:	8d e7       	ldi	r24, 0x7D	; 125
    1f1c:	93 e0       	ldi	r25, 0x03	; 3
    1f1e:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f22:	df 91       	pop	r29
    1f24:	cf 91       	pop	r28
    1f26:	1f 91       	pop	r17
    1f28:	0f 91       	pop	r16
    1f2a:	08 95       	ret

00001f2c <_Z13Weckeranzeigev>:
    1f2c:	1f 93       	push	r17
    1f2e:	cf 93       	push	r28
    1f30:	df 93       	push	r29
    1f32:	8d e7       	ldi	r24, 0x7D	; 125
    1f34:	93 e0       	ldi	r25, 0x03	; 3
    1f36:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1f3a:	81 e0       	ldi	r24, 0x01	; 1
    1f3c:	b0 db       	rcall	.-2208   	; 0x169e <_Z6bottomh>
    1f3e:	81 e0       	ldi	r24, 0x01	; 1
    1f40:	cd da       	rcall	.-2662   	; 0x14dc <_Z6headerh>
    1f42:	60 91 7e 07 	lds	r22, 0x077E
    1f46:	60 53       	subi	r22, 0x30	; 48
    1f48:	2d e0       	ldi	r18, 0x0D	; 13
    1f4a:	45 e0       	ldi	r20, 0x05	; 5
    1f4c:	8d e7       	ldi	r24, 0x7D	; 125
    1f4e:	93 e0       	ldi	r25, 0x03	; 3
    1f50:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f54:	60 91 7f 07 	lds	r22, 0x077F
    1f58:	60 53       	subi	r22, 0x30	; 48
    1f5a:	2d e0       	ldi	r18, 0x0D	; 13
    1f5c:	45 e1       	ldi	r20, 0x15	; 21
    1f5e:	8d e7       	ldi	r24, 0x7D	; 125
    1f60:	93 e0       	ldi	r25, 0x03	; 3
    1f62:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f66:	60 91 81 07 	lds	r22, 0x0781
    1f6a:	60 53       	subi	r22, 0x30	; 48
    1f6c:	22 e2       	ldi	r18, 0x22	; 34
    1f6e:	45 e0       	ldi	r20, 0x05	; 5
    1f70:	8d e7       	ldi	r24, 0x7D	; 125
    1f72:	93 e0       	ldi	r25, 0x03	; 3
    1f74:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f78:	60 91 82 07 	lds	r22, 0x0782
    1f7c:	60 53       	subi	r22, 0x30	; 48
    1f7e:	22 e2       	ldi	r18, 0x22	; 34
    1f80:	45 e1       	ldi	r20, 0x15	; 21
    1f82:	8d e7       	ldi	r24, 0x7D	; 125
    1f84:	93 e0       	ldi	r25, 0x03	; 3
    1f86:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f8a:	c8 e9       	ldi	r28, 0x98	; 152
    1f8c:	d7 e0       	ldi	r29, 0x07	; 7
    1f8e:	68 81       	ld	r22, Y
    1f90:	1d ec       	ldi	r17, 0xCD	; 205
    1f92:	61 9f       	mul	r22, r17
    1f94:	61 2d       	mov	r22, r1
    1f96:	11 24       	eor	r1, r1
    1f98:	66 95       	lsr	r22
    1f9a:	66 95       	lsr	r22
    1f9c:	66 95       	lsr	r22
    1f9e:	2d e0       	ldi	r18, 0x0D	; 13
    1fa0:	46 e4       	ldi	r20, 0x46	; 70
    1fa2:	8d e7       	ldi	r24, 0x7D	; 125
    1fa4:	93 e0       	ldi	r25, 0x03	; 3
    1fa6:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1faa:	68 81       	ld	r22, Y
    1fac:	61 9f       	mul	r22, r17
    1fae:	81 2d       	mov	r24, r1
    1fb0:	11 24       	eor	r1, r1
    1fb2:	86 95       	lsr	r24
    1fb4:	86 95       	lsr	r24
    1fb6:	86 95       	lsr	r24
    1fb8:	88 0f       	add	r24, r24
    1fba:	98 2f       	mov	r25, r24
    1fbc:	99 0f       	add	r25, r25
    1fbe:	99 0f       	add	r25, r25
    1fc0:	89 0f       	add	r24, r25
    1fc2:	68 1b       	sub	r22, r24
    1fc4:	2d e0       	ldi	r18, 0x0D	; 13
    1fc6:	46 e5       	ldi	r20, 0x56	; 86
    1fc8:	8d e7       	ldi	r24, 0x7D	; 125
    1fca:	93 e0       	ldi	r25, 0x03	; 3
    1fcc:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1fd0:	c7 e9       	ldi	r28, 0x97	; 151
    1fd2:	d7 e0       	ldi	r29, 0x07	; 7
    1fd4:	68 81       	ld	r22, Y
    1fd6:	61 9f       	mul	r22, r17
    1fd8:	61 2d       	mov	r22, r1
    1fda:	11 24       	eor	r1, r1
    1fdc:	66 95       	lsr	r22
    1fde:	66 95       	lsr	r22
    1fe0:	66 95       	lsr	r22
    1fe2:	22 e2       	ldi	r18, 0x22	; 34
    1fe4:	46 e4       	ldi	r20, 0x46	; 70
    1fe6:	8d e7       	ldi	r24, 0x7D	; 125
    1fe8:	93 e0       	ldi	r25, 0x03	; 3
    1fea:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1fee:	68 81       	ld	r22, Y
    1ff0:	61 9f       	mul	r22, r17
    1ff2:	11 2d       	mov	r17, r1
    1ff4:	11 24       	eor	r1, r1
    1ff6:	16 95       	lsr	r17
    1ff8:	16 95       	lsr	r17
    1ffa:	16 95       	lsr	r17
    1ffc:	11 0f       	add	r17, r17
    1ffe:	81 2f       	mov	r24, r17
    2000:	88 0f       	add	r24, r24
    2002:	88 0f       	add	r24, r24
    2004:	18 0f       	add	r17, r24
    2006:	61 1b       	sub	r22, r17
    2008:	22 e2       	ldi	r18, 0x22	; 34
    200a:	46 e5       	ldi	r20, 0x56	; 86
    200c:	8d e7       	ldi	r24, 0x7D	; 125
    200e:	93 e0       	ldi	r25, 0x03	; 3
    2010:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2014:	80 91 96 07 	lds	r24, 0x0796
    2018:	83 ff       	sbrs	r24, 3
    201a:	07 c0       	rjmp	.+14     	; 0x202a <_Z13Weckeranzeigev+0xfe>
    201c:	20 e0       	ldi	r18, 0x00	; 0
    201e:	40 e0       	ldi	r20, 0x00	; 0
    2020:	6f e6       	ldi	r22, 0x6F	; 111
    2022:	8d e7       	ldi	r24, 0x7D	; 125
    2024:	93 e0       	ldi	r25, 0x03	; 3
    2026:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    202a:	80 91 4d 03 	lds	r24, 0x034D
    202e:	90 91 4e 03 	lds	r25, 0x034E
    2032:	94 ff       	sbrs	r25, 4
    2034:	09 c0       	rjmp	.+18     	; 0x2048 <_Z13Weckeranzeigev+0x11c>
    2036:	60 91 4c 03 	lds	r22, 0x034C
    203a:	60 5d       	subi	r22, 0xD0	; 208
    203c:	20 e0       	ldi	r18, 0x00	; 0
    203e:	46 e0       	ldi	r20, 0x06	; 6
    2040:	8d e7       	ldi	r24, 0x7D	; 125
    2042:	93 e0       	ldi	r25, 0x03	; 3
    2044:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2048:	df 91       	pop	r29
    204a:	cf 91       	pop	r28
    204c:	1f 91       	pop	r17
    204e:	08 95       	ret

00002050 <_Z12fahradschirmddddm>:
    2050:	2f 92       	push	r2
    2052:	3f 92       	push	r3
    2054:	4f 92       	push	r4
    2056:	5f 92       	push	r5
    2058:	6f 92       	push	r6
    205a:	7f 92       	push	r7
    205c:	8f 92       	push	r8
    205e:	9f 92       	push	r9
    2060:	af 92       	push	r10
    2062:	bf 92       	push	r11
    2064:	cf 92       	push	r12
    2066:	df 92       	push	r13
    2068:	ef 92       	push	r14
    206a:	ff 92       	push	r15
    206c:	0f 93       	push	r16
    206e:	1f 93       	push	r17
    2070:	cf 93       	push	r28
    2072:	df 93       	push	r29
    2074:	cd b7       	in	r28, 0x3d	; 61
    2076:	de b7       	in	r29, 0x3e	; 62
    2078:	60 97       	sbiw	r28, 0x10	; 16
    207a:	0f b6       	in	r0, 0x3f	; 63
    207c:	f8 94       	cli
    207e:	de bf       	out	0x3e, r29	; 62
    2080:	0f be       	out	0x3f, r0	; 63
    2082:	cd bf       	out	0x3d, r28	; 61
    2084:	96 2e       	mov	r9, r22
    2086:	27 2e       	mov	r2, r23
    2088:	88 2e       	mov	r8, r24
    208a:	39 2e       	mov	r3, r25
    208c:	29 01       	movw	r4, r18
    208e:	3a 01       	movw	r6, r20
    2090:	0b 87       	std	Y+11, r16	; 0x0b
    2092:	1c 87       	std	Y+12, r17	; 0x0c
    2094:	2d a1       	ldd	r18, Y+37	; 0x25
    2096:	2d 87       	std	Y+13, r18	; 0x0d
    2098:	3e a1       	ldd	r19, Y+38	; 0x26
    209a:	3e 87       	std	Y+14, r19	; 0x0e
    209c:	8f a1       	ldd	r24, Y+39	; 0x27
    209e:	8f 87       	std	Y+15, r24	; 0x0f
    20a0:	98 a5       	ldd	r25, Y+40	; 0x28
    20a2:	98 8b       	std	Y+16, r25	; 0x10
    20a4:	8d e7       	ldi	r24, 0x7D	; 125
    20a6:	93 e0       	ldi	r25, 0x03	; 3
    20a8:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    20ac:	81 e0       	ldi	r24, 0x01	; 1
    20ae:	16 da       	rcall	.-3028   	; 0x14dc <_Z6headerh>
    20b0:	80 e0       	ldi	r24, 0x00	; 0
    20b2:	f5 da       	rcall	.-2582   	; 0x169e <_Z6bottomh>
    20b4:	20 e8       	ldi	r18, 0x80	; 128
    20b6:	47 e3       	ldi	r20, 0x37	; 55
    20b8:	60 e0       	ldi	r22, 0x00	; 0
    20ba:	8d e7       	ldi	r24, 0x7D	; 125
    20bc:	93 e0       	ldi	r25, 0x03	; 3
    20be:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    20c2:	25 e4       	ldi	r18, 0x45	; 69
    20c4:	4f e0       	ldi	r20, 0x0F	; 15
    20c6:	60 e0       	ldi	r22, 0x00	; 0
    20c8:	8d e7       	ldi	r24, 0x7D	; 125
    20ca:	93 e0       	ldi	r25, 0x03	; 3
    20cc:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    20d0:	2b e3       	ldi	r18, 0x3B	; 59
    20d2:	48 e0       	ldi	r20, 0x08	; 8
    20d4:	65 e4       	ldi	r22, 0x45	; 69
    20d6:	8d e7       	ldi	r24, 0x7D	; 125
    20d8:	93 e0       	ldi	r25, 0x03	; 3
    20da:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    20de:	20 e1       	ldi	r18, 0x10	; 16
    20e0:	40 e0       	ldi	r20, 0x00	; 0
    20e2:	65 e4       	ldi	r22, 0x45	; 69
    20e4:	8d e7       	ldi	r24, 0x7D	; 125
    20e6:	93 e0       	ldi	r25, 0x03	; 3
    20e8:	0e 94 06 04 	call	0x80c	; 0x80c <_ZN7Display9drawVLineEhhh>
    20ec:	21 e4       	ldi	r18, 0x41	; 65
    20ee:	48 e2       	ldi	r20, 0x28	; 40
    20f0:	6f e3       	ldi	r22, 0x3F	; 63
    20f2:	8d e7       	ldi	r24, 0x7D	; 125
    20f4:	93 e0       	ldi	r25, 0x03	; 3
    20f6:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    20fa:	20 e3       	ldi	r18, 0x30	; 48
    20fc:	40 e1       	ldi	r20, 0x10	; 16
    20fe:	6f e3       	ldi	r22, 0x3F	; 63
    2100:	8d e7       	ldi	r24, 0x7D	; 125
    2102:	93 e0       	ldi	r25, 0x03	; 3
    2104:	0e 94 06 04 	call	0x80c	; 0x80c <_ZN7Display9drawVLineEhhh>
    2108:	21 e4       	ldi	r18, 0x41	; 65
    210a:	48 e1       	ldi	r20, 0x18	; 24
    210c:	6f e3       	ldi	r22, 0x3F	; 63
    210e:	8d e7       	ldi	r24, 0x7D	; 125
    2110:	93 e0       	ldi	r25, 0x03	; 3
    2112:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    2116:	60 91 7e 07 	lds	r22, 0x077E
    211a:	60 53       	subi	r22, 0x30	; 48
    211c:	20 e0       	ldi	r18, 0x00	; 0
    211e:	40 e0       	ldi	r20, 0x00	; 0
    2120:	8d e7       	ldi	r24, 0x7D	; 125
    2122:	93 e0       	ldi	r25, 0x03	; 3
    2124:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2128:	60 91 7f 07 	lds	r22, 0x077F
    212c:	60 53       	subi	r22, 0x30	; 48
    212e:	20 e0       	ldi	r18, 0x00	; 0
    2130:	40 e1       	ldi	r20, 0x10	; 16
    2132:	8d e7       	ldi	r24, 0x7D	; 125
    2134:	93 e0       	ldi	r25, 0x03	; 3
    2136:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    213a:	60 91 81 07 	lds	r22, 0x0781
    213e:	60 53       	subi	r22, 0x30	; 48
    2140:	20 e0       	ldi	r18, 0x00	; 0
    2142:	45 e2       	ldi	r20, 0x25	; 37
    2144:	8d e7       	ldi	r24, 0x7D	; 125
    2146:	93 e0       	ldi	r25, 0x03	; 3
    2148:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    214c:	60 91 82 07 	lds	r22, 0x0782
    2150:	60 53       	subi	r22, 0x30	; 48
    2152:	20 e0       	ldi	r18, 0x00	; 0
    2154:	45 e3       	ldi	r20, 0x35	; 53
    2156:	8d e7       	ldi	r24, 0x7D	; 125
    2158:	93 e0       	ldi	r25, 0x03	; 3
    215a:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    215e:	3f 92       	push	r3
    2160:	8f 92       	push	r8
    2162:	2f 92       	push	r2
    2164:	9f 92       	push	r9
    2166:	88 e1       	ldi	r24, 0x18	; 24
    2168:	92 e0       	ldi	r25, 0x02	; 2
    216a:	9f 93       	push	r25
    216c:	8f 93       	push	r24
    216e:	ce 01       	movw	r24, r28
    2170:	01 96       	adiw	r24, 0x01	; 1
    2172:	9f 93       	push	r25
    2174:	8f 93       	push	r24
    2176:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    217a:	28 e0       	ldi	r18, 0x08	; 8
    217c:	02 2f       	mov	r16, r18
    217e:	08 1b       	sub	r16, r24
    2180:	0f b6       	in	r0, 0x3f	; 63
    2182:	f8 94       	cli
    2184:	de bf       	out	0x3e, r29	; 62
    2186:	0f be       	out	0x3f, r0	; 63
    2188:	cd bf       	out	0x3d, r28	; 61
    218a:	08 30       	cpi	r16, 0x08	; 8
    218c:	18 f5       	brcc	.+70     	; 0x21d4 <_Z12fahradschirmddddm+0x184>
    218e:	10 2f       	mov	r17, r16
    2190:	12 95       	swap	r17
    2192:	10 7f       	andi	r17, 0xF0	; 240
    2194:	4c 01       	movw	r8, r24
    2196:	99 24       	eor	r9, r9
    2198:	e1 e0       	ldi	r30, 0x01	; 1
    219a:	f0 e0       	ldi	r31, 0x00	; 0
    219c:	ec 0f       	add	r30, r28
    219e:	fd 1f       	adc	r31, r29
    21a0:	e0 0f       	add	r30, r16
    21a2:	f1 1d       	adc	r31, r1
    21a4:	e8 0d       	add	r30, r8
    21a6:	f9 1d       	adc	r31, r9
    21a8:	38 97       	sbiw	r30, 0x08	; 8
    21aa:	60 81       	ld	r22, Z
    21ac:	6e 32       	cpi	r22, 0x2E	; 46
    21ae:	39 f4       	brne	.+14     	; 0x21be <_Z12fahradschirmddddm+0x16e>
    21b0:	20 e2       	ldi	r18, 0x20	; 32
    21b2:	41 2f       	mov	r20, r17
    21b4:	8d e7       	ldi	r24, 0x7D	; 125
    21b6:	93 e0       	ldi	r25, 0x03	; 3
    21b8:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    21bc:	07 c0       	rjmp	.+14     	; 0x21cc <_Z12fahradschirmddddm+0x17c>
    21be:	60 53       	subi	r22, 0x30	; 48
    21c0:	28 e1       	ldi	r18, 0x18	; 24
    21c2:	41 2f       	mov	r20, r17
    21c4:	8d e7       	ldi	r24, 0x7D	; 125
    21c6:	93 e0       	ldi	r25, 0x03	; 3
    21c8:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    21cc:	0f 5f       	subi	r16, 0xFF	; 255
    21ce:	10 5f       	subi	r17, 0xF0	; 240
    21d0:	08 30       	cpi	r16, 0x08	; 8
    21d2:	11 f7       	brne	.-60     	; 0x2198 <_Z12fahradschirmddddm+0x148>
    21d4:	a3 01       	movw	r20, r6
    21d6:	92 01       	movw	r18, r4
    21d8:	67 e2       	ldi	r22, 0x27	; 39
    21da:	8f e1       	ldi	r24, 0x1F	; 31
    21dc:	7a db       	rcall	.-2316   	; 0x18d2 <_Z19anzeige_kleinenadelhhf>
    21de:	fc 85       	ldd	r31, Y+12	; 0x0c
    21e0:	ff 93       	push	r31
    21e2:	2b 85       	ldd	r18, Y+11	; 0x0b
    21e4:	2f 93       	push	r18
    21e6:	ff 92       	push	r15
    21e8:	ef 92       	push	r14
    21ea:	8e e1       	ldi	r24, 0x1E	; 30
    21ec:	92 e0       	ldi	r25, 0x02	; 2
    21ee:	9f 93       	push	r25
    21f0:	8f 93       	push	r24
    21f2:	ce 01       	movw	r24, r28
    21f4:	01 96       	adiw	r24, 0x01	; 1
    21f6:	9f 93       	push	r25
    21f8:	8f 93       	push	r24
    21fa:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    21fe:	88 2e       	mov	r8, r24
    2200:	0f b6       	in	r0, 0x3f	; 63
    2202:	f8 94       	cli
    2204:	de bf       	out	0x3e, r29	; 62
    2206:	0f be       	out	0x3f, r0	; 63
    2208:	cd bf       	out	0x3d, r28	; 61
    220a:	88 20       	and	r8, r8
    220c:	b9 f0       	breq	.+46     	; 0x223c <_Z12fahradschirmddddm+0x1ec>
    220e:	fe 01       	movw	r30, r28
    2210:	31 96       	adiw	r30, 0x01	; 1
    2212:	7f 01       	movw	r14, r30
    2214:	8f 01       	movw	r16, r30
    2216:	0f 2e       	mov	r0, r31
    2218:	f6 e4       	ldi	r31, 0x46	; 70
    221a:	9f 2e       	mov	r9, r31
    221c:	f0 2d       	mov	r31, r0
    221e:	f8 01       	movw	r30, r16
    2220:	61 91       	ld	r22, Z+
    2222:	8f 01       	movw	r16, r30
    2224:	20 e1       	ldi	r18, 0x10	; 16
    2226:	49 2d       	mov	r20, r9
    2228:	8d e7       	ldi	r24, 0x7D	; 125
    222a:	93 e0       	ldi	r25, 0x03	; 3
    222c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2230:	f6 e0       	ldi	r31, 0x06	; 6
    2232:	9f 0e       	add	r9, r31
    2234:	90 2f       	mov	r25, r16
    2236:	9e 19       	sub	r25, r14
    2238:	98 15       	cp	r25, r8
    223a:	88 f3       	brcs	.-30     	; 0x221e <_Z12fahradschirmddddm+0x1ce>
    223c:	df 92       	push	r13
    223e:	cf 92       	push	r12
    2240:	bf 92       	push	r11
    2242:	af 92       	push	r10
    2244:	84 e2       	ldi	r24, 0x24	; 36
    2246:	92 e0       	ldi	r25, 0x02	; 2
    2248:	9f 93       	push	r25
    224a:	8f 93       	push	r24
    224c:	ce 01       	movw	r24, r28
    224e:	01 96       	adiw	r24, 0x01	; 1
    2250:	9f 93       	push	r25
    2252:	8f 93       	push	r24
    2254:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    2258:	c8 2e       	mov	r12, r24
    225a:	0f b6       	in	r0, 0x3f	; 63
    225c:	f8 94       	cli
    225e:	de bf       	out	0x3e, r29	; 62
    2260:	0f be       	out	0x3f, r0	; 63
    2262:	cd bf       	out	0x3d, r28	; 61
    2264:	88 23       	and	r24, r24
    2266:	b9 f0       	breq	.+46     	; 0x2296 <_Z12fahradschirmddddm+0x246>
    2268:	ce 01       	movw	r24, r28
    226a:	01 96       	adiw	r24, 0x01	; 1
    226c:	7c 01       	movw	r14, r24
    226e:	8c 01       	movw	r16, r24
    2270:	0f 2e       	mov	r0, r31
    2272:	f6 e4       	ldi	r31, 0x46	; 70
    2274:	df 2e       	mov	r13, r31
    2276:	f0 2d       	mov	r31, r0
    2278:	f8 01       	movw	r30, r16
    227a:	61 91       	ld	r22, Z+
    227c:	8f 01       	movw	r16, r30
    227e:	28 e2       	ldi	r18, 0x28	; 40
    2280:	4d 2d       	mov	r20, r13
    2282:	8d e7       	ldi	r24, 0x7D	; 125
    2284:	93 e0       	ldi	r25, 0x03	; 3
    2286:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    228a:	f6 e0       	ldi	r31, 0x06	; 6
    228c:	df 0e       	add	r13, r31
    228e:	90 2f       	mov	r25, r16
    2290:	9e 19       	sub	r25, r14
    2292:	9c 15       	cp	r25, r12
    2294:	88 f3       	brcs	.-30     	; 0x2278 <_Z12fahradschirmddddm+0x228>
    2296:	28 89       	ldd	r18, Y+16	; 0x10
    2298:	2f 93       	push	r18
    229a:	3f 85       	ldd	r19, Y+15	; 0x0f
    229c:	3f 93       	push	r19
    229e:	8e 85       	ldd	r24, Y+14	; 0x0e
    22a0:	8f 93       	push	r24
    22a2:	9d 85       	ldd	r25, Y+13	; 0x0d
    22a4:	9f 93       	push	r25
    22a6:	8d e2       	ldi	r24, 0x2D	; 45
    22a8:	92 e0       	ldi	r25, 0x02	; 2
    22aa:	9f 93       	push	r25
    22ac:	8f 93       	push	r24
    22ae:	ce 01       	movw	r24, r28
    22b0:	01 96       	adiw	r24, 0x01	; 1
    22b2:	9f 93       	push	r25
    22b4:	8f 93       	push	r24
    22b6:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    22ba:	c8 2e       	mov	r12, r24
    22bc:	0f b6       	in	r0, 0x3f	; 63
    22be:	f8 94       	cli
    22c0:	de bf       	out	0x3e, r29	; 62
    22c2:	0f be       	out	0x3f, r0	; 63
    22c4:	cd bf       	out	0x3d, r28	; 61
    22c6:	88 23       	and	r24, r24
    22c8:	c1 f0       	breq	.+48     	; 0x22fa <_Z12fahradschirmddddm+0x2aa>
    22ca:	9e 01       	movw	r18, r28
    22cc:	2f 5f       	subi	r18, 0xFF	; 255
    22ce:	3f 4f       	sbci	r19, 0xFF	; 255
    22d0:	79 01       	movw	r14, r18
    22d2:	89 01       	movw	r16, r18
    22d4:	0f 2e       	mov	r0, r31
    22d6:	f6 e4       	ldi	r31, 0x46	; 70
    22d8:	df 2e       	mov	r13, r31
    22da:	f0 2d       	mov	r31, r0
    22dc:	f8 01       	movw	r30, r16
    22de:	61 91       	ld	r22, Z+
    22e0:	8f 01       	movw	r16, r30
    22e2:	20 e3       	ldi	r18, 0x30	; 48
    22e4:	4d 2d       	mov	r20, r13
    22e6:	8d e7       	ldi	r24, 0x7D	; 125
    22e8:	93 e0       	ldi	r25, 0x03	; 3
    22ea:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    22ee:	f6 e0       	ldi	r31, 0x06	; 6
    22f0:	df 0e       	add	r13, r31
    22f2:	90 2f       	mov	r25, r16
    22f4:	9e 19       	sub	r25, r14
    22f6:	9c 15       	cp	r25, r12
    22f8:	88 f3       	brcs	.-30     	; 0x22dc <_Z12fahradschirmddddm+0x28c>
    22fa:	60 96       	adiw	r28, 0x10	; 16
    22fc:	0f b6       	in	r0, 0x3f	; 63
    22fe:	f8 94       	cli
    2300:	de bf       	out	0x3e, r29	; 62
    2302:	0f be       	out	0x3f, r0	; 63
    2304:	cd bf       	out	0x3d, r28	; 61
    2306:	df 91       	pop	r29
    2308:	cf 91       	pop	r28
    230a:	1f 91       	pop	r17
    230c:	0f 91       	pop	r16
    230e:	ff 90       	pop	r15
    2310:	ef 90       	pop	r14
    2312:	df 90       	pop	r13
    2314:	cf 90       	pop	r12
    2316:	bf 90       	pop	r11
    2318:	af 90       	pop	r10
    231a:	9f 90       	pop	r9
    231c:	8f 90       	pop	r8
    231e:	7f 90       	pop	r7
    2320:	6f 90       	pop	r6
    2322:	5f 90       	pop	r5
    2324:	4f 90       	pop	r4
    2326:	3f 90       	pop	r3
    2328:	2f 90       	pop	r2
    232a:	08 95       	ret

0000232c <_Z14Gaineinstellenv>:
    232c:	cf 92       	push	r12
    232e:	df 92       	push	r13
    2330:	ef 92       	push	r14
    2332:	ff 92       	push	r15
    2334:	0f 93       	push	r16
    2336:	1f 93       	push	r17
    2338:	cf 93       	push	r28
    233a:	df 93       	push	r29
    233c:	cd b7       	in	r28, 0x3d	; 61
    233e:	de b7       	in	r29, 0x3e	; 62
    2340:	64 97       	sbiw	r28, 0x14	; 20
    2342:	0f b6       	in	r0, 0x3f	; 63
    2344:	f8 94       	cli
    2346:	de bf       	out	0x3e, r29	; 62
    2348:	0f be       	out	0x3f, r0	; 63
    234a:	cd bf       	out	0x3d, r28	; 61
    234c:	8d e7       	ldi	r24, 0x7D	; 125
    234e:	93 e0       	ldi	r25, 0x03	; 3
    2350:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2354:	88 e0       	ldi	r24, 0x08	; 8
    2356:	e2 e3       	ldi	r30, 0x32	; 50
    2358:	f2 e0       	ldi	r31, 0x02	; 2
    235a:	8e 01       	movw	r16, r28
    235c:	0f 5f       	subi	r16, 0xFF	; 255
    235e:	1f 4f       	sbci	r17, 0xFF	; 255
    2360:	d8 01       	movw	r26, r16
    2362:	01 90       	ld	r0, Z+
    2364:	0d 92       	st	X+, r0
    2366:	8a 95       	dec	r24
    2368:	e1 f7       	brne	.-8      	; 0x2362 <_Z14Gaineinstellenv+0x36>
    236a:	e0 2e       	mov	r14, r16
    236c:	f1 2e       	mov	r15, r17
    236e:	68 01       	movw	r12, r16
    2370:	10 e0       	ldi	r17, 0x00	; 0
    2372:	f6 01       	movw	r30, r12
    2374:	61 91       	ld	r22, Z+
    2376:	6f 01       	movw	r12, r30
    2378:	20 e0       	ldi	r18, 0x00	; 0
    237a:	41 2f       	mov	r20, r17
    237c:	8d e7       	ldi	r24, 0x7D	; 125
    237e:	93 e0       	ldi	r25, 0x03	; 3
    2380:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2384:	1a 5f       	subi	r17, 0xFA	; 250
    2386:	1a 32       	cpi	r17, 0x2A	; 42
    2388:	a1 f7       	brne	.-24     	; 0x2372 <_Z14Gaineinstellenv+0x46>
    238a:	88 e0       	ldi	r24, 0x08	; 8
    238c:	ea e3       	ldi	r30, 0x3A	; 58
    238e:	f2 e0       	ldi	r31, 0x02	; 2
    2390:	de 01       	movw	r26, r28
    2392:	11 96       	adiw	r26, 0x01	; 1
    2394:	01 90       	ld	r0, Z+
    2396:	0d 92       	st	X+, r0
    2398:	8a 95       	dec	r24
    239a:	e1 f7       	brne	.-8      	; 0x2394 <_Z14Gaineinstellenv+0x68>
    239c:	ce 2c       	mov	r12, r14
    239e:	df 2c       	mov	r13, r15
    23a0:	10 e0       	ldi	r17, 0x00	; 0
    23a2:	f6 01       	movw	r30, r12
    23a4:	61 91       	ld	r22, Z+
    23a6:	6f 01       	movw	r12, r30
    23a8:	28 e0       	ldi	r18, 0x08	; 8
    23aa:	41 2f       	mov	r20, r17
    23ac:	8d e7       	ldi	r24, 0x7D	; 125
    23ae:	93 e0       	ldi	r25, 0x03	; 3
    23b0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    23b4:	1a 5f       	subi	r17, 0xFA	; 250
    23b6:	1a 32       	cpi	r17, 0x2A	; 42
    23b8:	a1 f7       	brne	.-24     	; 0x23a2 <_Z14Gaineinstellenv+0x76>
    23ba:	88 e0       	ldi	r24, 0x08	; 8
    23bc:	e2 e4       	ldi	r30, 0x42	; 66
    23be:	f2 e0       	ldi	r31, 0x02	; 2
    23c0:	de 01       	movw	r26, r28
    23c2:	11 96       	adiw	r26, 0x01	; 1
    23c4:	01 90       	ld	r0, Z+
    23c6:	0d 92       	st	X+, r0
    23c8:	8a 95       	dec	r24
    23ca:	e1 f7       	brne	.-8      	; 0x23c4 <_Z14Gaineinstellenv+0x98>
    23cc:	ce 2c       	mov	r12, r14
    23ce:	df 2c       	mov	r13, r15
    23d0:	10 e0       	ldi	r17, 0x00	; 0
    23d2:	f6 01       	movw	r30, r12
    23d4:	61 91       	ld	r22, Z+
    23d6:	6f 01       	movw	r12, r30
    23d8:	20 e1       	ldi	r18, 0x10	; 16
    23da:	41 2f       	mov	r20, r17
    23dc:	8d e7       	ldi	r24, 0x7D	; 125
    23de:	93 e0       	ldi	r25, 0x03	; 3
    23e0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    23e4:	1a 5f       	subi	r17, 0xFA	; 250
    23e6:	1a 32       	cpi	r17, 0x2A	; 42
    23e8:	a1 f7       	brne	.-24     	; 0x23d2 <_Z14Gaineinstellenv+0xa6>
    23ea:	88 e0       	ldi	r24, 0x08	; 8
    23ec:	ea e4       	ldi	r30, 0x4A	; 74
    23ee:	f2 e0       	ldi	r31, 0x02	; 2
    23f0:	de 01       	movw	r26, r28
    23f2:	11 96       	adiw	r26, 0x01	; 1
    23f4:	01 90       	ld	r0, Z+
    23f6:	0d 92       	st	X+, r0
    23f8:	8a 95       	dec	r24
    23fa:	e1 f7       	brne	.-8      	; 0x23f4 <_Z14Gaineinstellenv+0xc8>
    23fc:	ce 2c       	mov	r12, r14
    23fe:	df 2c       	mov	r13, r15
    2400:	10 e0       	ldi	r17, 0x00	; 0
    2402:	f6 01       	movw	r30, r12
    2404:	61 91       	ld	r22, Z+
    2406:	6f 01       	movw	r12, r30
    2408:	28 e1       	ldi	r18, 0x18	; 24
    240a:	41 2f       	mov	r20, r17
    240c:	8d e7       	ldi	r24, 0x7D	; 125
    240e:	93 e0       	ldi	r25, 0x03	; 3
    2410:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2414:	1a 5f       	subi	r17, 0xFA	; 250
    2416:	1a 32       	cpi	r17, 0x2A	; 42
    2418:	a1 f7       	brne	.-24     	; 0x2402 <_Z14Gaineinstellenv+0xd6>
    241a:	88 e0       	ldi	r24, 0x08	; 8
    241c:	e2 e5       	ldi	r30, 0x52	; 82
    241e:	f2 e0       	ldi	r31, 0x02	; 2
    2420:	de 01       	movw	r26, r28
    2422:	11 96       	adiw	r26, 0x01	; 1
    2424:	01 90       	ld	r0, Z+
    2426:	0d 92       	st	X+, r0
    2428:	8a 95       	dec	r24
    242a:	e1 f7       	brne	.-8      	; 0x2424 <_Z14Gaineinstellenv+0xf8>
    242c:	ce 2c       	mov	r12, r14
    242e:	df 2c       	mov	r13, r15
    2430:	10 e0       	ldi	r17, 0x00	; 0
    2432:	f6 01       	movw	r30, r12
    2434:	61 91       	ld	r22, Z+
    2436:	6f 01       	movw	r12, r30
    2438:	20 e2       	ldi	r18, 0x20	; 32
    243a:	41 2f       	mov	r20, r17
    243c:	8d e7       	ldi	r24, 0x7D	; 125
    243e:	93 e0       	ldi	r25, 0x03	; 3
    2440:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2444:	1a 5f       	subi	r17, 0xFA	; 250
    2446:	1a 32       	cpi	r17, 0x2A	; 42
    2448:	a1 f7       	brne	.-24     	; 0x2432 <_Z14Gaineinstellenv+0x106>
    244a:	88 e0       	ldi	r24, 0x08	; 8
    244c:	ea e5       	ldi	r30, 0x5A	; 90
    244e:	f2 e0       	ldi	r31, 0x02	; 2
    2450:	de 01       	movw	r26, r28
    2452:	11 96       	adiw	r26, 0x01	; 1
    2454:	01 90       	ld	r0, Z+
    2456:	0d 92       	st	X+, r0
    2458:	8a 95       	dec	r24
    245a:	e1 f7       	brne	.-8      	; 0x2454 <_Z14Gaineinstellenv+0x128>
    245c:	ce 2c       	mov	r12, r14
    245e:	df 2c       	mov	r13, r15
    2460:	10 e0       	ldi	r17, 0x00	; 0
    2462:	f6 01       	movw	r30, r12
    2464:	61 91       	ld	r22, Z+
    2466:	6f 01       	movw	r12, r30
    2468:	28 e2       	ldi	r18, 0x28	; 40
    246a:	41 2f       	mov	r20, r17
    246c:	8d e7       	ldi	r24, 0x7D	; 125
    246e:	93 e0       	ldi	r25, 0x03	; 3
    2470:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2474:	1a 5f       	subi	r17, 0xFA	; 250
    2476:	1a 32       	cpi	r17, 0x2A	; 42
    2478:	a1 f7       	brne	.-24     	; 0x2462 <_Z14Gaineinstellenv+0x136>
    247a:	88 e0       	ldi	r24, 0x08	; 8
    247c:	e2 e6       	ldi	r30, 0x62	; 98
    247e:	f2 e0       	ldi	r31, 0x02	; 2
    2480:	de 01       	movw	r26, r28
    2482:	11 96       	adiw	r26, 0x01	; 1
    2484:	01 90       	ld	r0, Z+
    2486:	0d 92       	st	X+, r0
    2488:	8a 95       	dec	r24
    248a:	e1 f7       	brne	.-8      	; 0x2484 <_Z14Gaineinstellenv+0x158>
    248c:	ce 2c       	mov	r12, r14
    248e:	df 2c       	mov	r13, r15
    2490:	10 e0       	ldi	r17, 0x00	; 0
    2492:	f6 01       	movw	r30, r12
    2494:	61 91       	ld	r22, Z+
    2496:	6f 01       	movw	r12, r30
    2498:	20 e3       	ldi	r18, 0x30	; 48
    249a:	41 2f       	mov	r20, r17
    249c:	8d e7       	ldi	r24, 0x7D	; 125
    249e:	93 e0       	ldi	r25, 0x03	; 3
    24a0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    24a4:	1a 5f       	subi	r17, 0xFA	; 250
    24a6:	1a 32       	cpi	r17, 0x2A	; 42
    24a8:	a1 f7       	brne	.-24     	; 0x2492 <_Z14Gaineinstellenv+0x166>
    24aa:	88 e0       	ldi	r24, 0x08	; 8
    24ac:	ea e6       	ldi	r30, 0x6A	; 106
    24ae:	f2 e0       	ldi	r31, 0x02	; 2
    24b0:	de 01       	movw	r26, r28
    24b2:	11 96       	adiw	r26, 0x01	; 1
    24b4:	01 90       	ld	r0, Z+
    24b6:	0d 92       	st	X+, r0
    24b8:	8a 95       	dec	r24
    24ba:	e1 f7       	brne	.-8      	; 0x24b4 <_Z14Gaineinstellenv+0x188>
    24bc:	ce 2c       	mov	r12, r14
    24be:	df 2c       	mov	r13, r15
    24c0:	10 e0       	ldi	r17, 0x00	; 0
    24c2:	f6 01       	movw	r30, r12
    24c4:	61 91       	ld	r22, Z+
    24c6:	6f 01       	movw	r12, r30
    24c8:	28 e3       	ldi	r18, 0x38	; 56
    24ca:	41 2f       	mov	r20, r17
    24cc:	8d e7       	ldi	r24, 0x7D	; 125
    24ce:	93 e0       	ldi	r25, 0x03	; 3
    24d0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    24d4:	1a 5f       	subi	r17, 0xFA	; 250
    24d6:	1a 32       	cpi	r17, 0x2A	; 42
    24d8:	a1 f7       	brne	.-24     	; 0x24c2 <_Z14Gaineinstellenv+0x196>
    24da:	64 96       	adiw	r28, 0x14	; 20
    24dc:	0f b6       	in	r0, 0x3f	; 63
    24de:	f8 94       	cli
    24e0:	de bf       	out	0x3e, r29	; 62
    24e2:	0f be       	out	0x3f, r0	; 63
    24e4:	cd bf       	out	0x3d, r28	; 61
    24e6:	df 91       	pop	r29
    24e8:	cf 91       	pop	r28
    24ea:	1f 91       	pop	r17
    24ec:	0f 91       	pop	r16
    24ee:	ff 90       	pop	r15
    24f0:	ef 90       	pop	r14
    24f2:	df 90       	pop	r13
    24f4:	cf 90       	pop	r12
    24f6:	08 95       	ret

000024f8 <_Z15anzeige_kompassd>:
    24f8:	9f 92       	push	r9
    24fa:	af 92       	push	r10
    24fc:	bf 92       	push	r11
    24fe:	cf 92       	push	r12
    2500:	df 92       	push	r13
    2502:	ef 92       	push	r14
    2504:	ff 92       	push	r15
    2506:	0f 93       	push	r16
    2508:	1f 93       	push	r17
    250a:	cf 93       	push	r28
    250c:	df 93       	push	r29
    250e:	cd b7       	in	r28, 0x3d	; 61
    2510:	de b7       	in	r29, 0x3e	; 62
    2512:	64 97       	sbiw	r28, 0x14	; 20
    2514:	0f b6       	in	r0, 0x3f	; 63
    2516:	f8 94       	cli
    2518:	de bf       	out	0x3e, r29	; 62
    251a:	0f be       	out	0x3f, r0	; 63
    251c:	cd bf       	out	0x3d, r28	; 61
    251e:	c6 2e       	mov	r12, r22
    2520:	d7 2e       	mov	r13, r23
    2522:	e8 2e       	mov	r14, r24
    2524:	f9 2e       	mov	r15, r25
    2526:	86 e6       	ldi	r24, 0x66	; 102
    2528:	93 e0       	ldi	r25, 0x03	; 3
    252a:	0e 94 94 29 	call	0x5328	; 0x5328 <_ZN8Pressure18READ_Pressure_onceEv>
    252e:	86 e6       	ldi	r24, 0x66	; 102
    2530:	93 e0       	ldi	r25, 0x03	; 3
    2532:	0e 94 0c 2a 	call	0x5418	; 0x5418 <_ZN8Pressure16READ_TemperatureEv>
    2536:	8d e7       	ldi	r24, 0x7D	; 125
    2538:	93 e0       	ldi	r25, 0x03	; 3
    253a:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    253e:	0f 2e       	mov	r0, r31
    2540:	fe e7       	ldi	r31, 0x7E	; 126
    2542:	af 2e       	mov	r10, r31
    2544:	f7 e0       	ldi	r31, 0x07	; 7
    2546:	bf 2e       	mov	r11, r31
    2548:	f0 2d       	mov	r31, r0
    254a:	11 e4       	ldi	r17, 0x41	; 65
    254c:	f5 01       	movw	r30, r10
    254e:	61 91       	ld	r22, Z+
    2550:	5f 01       	movw	r10, r30
    2552:	20 e0       	ldi	r18, 0x00	; 0
    2554:	41 2f       	mov	r20, r17
    2556:	8d e7       	ldi	r24, 0x7D	; 125
    2558:	93 e0       	ldi	r25, 0x03	; 3
    255a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    255e:	1a 5f       	subi	r17, 0xFA	; 250
    2560:	11 37       	cpi	r17, 0x71	; 113
    2562:	a1 f7       	brne	.-24     	; 0x254c <_Z15anzeige_kompassd+0x54>
    2564:	0f 2e       	mov	r0, r31
    2566:	f6 e8       	ldi	r31, 0x86	; 134
    2568:	af 2e       	mov	r10, r31
    256a:	f7 e0       	ldi	r31, 0x07	; 7
    256c:	bf 2e       	mov	r11, r31
    256e:	f0 2d       	mov	r31, r0
    2570:	11 e4       	ldi	r17, 0x41	; 65
    2572:	f5 01       	movw	r30, r10
    2574:	61 91       	ld	r22, Z+
    2576:	5f 01       	movw	r10, r30
    2578:	28 e3       	ldi	r18, 0x38	; 56
    257a:	41 2f       	mov	r20, r17
    257c:	8d e7       	ldi	r24, 0x7D	; 125
    257e:	93 e0       	ldi	r25, 0x03	; 3
    2580:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2584:	1a 5f       	subi	r17, 0xFA	; 250
    2586:	11 37       	cpi	r17, 0x71	; 113
    2588:	a1 f7       	brne	.-24     	; 0x2572 <_Z15anzeige_kompassd+0x7a>
    258a:	40 91 66 03 	lds	r20, 0x0366
    258e:	50 91 67 03 	lds	r21, 0x0367
    2592:	60 91 68 03 	lds	r22, 0x0368
    2596:	70 91 69 03 	lds	r23, 0x0369
    259a:	86 e6       	ldi	r24, 0x66	; 102
    259c:	93 e0       	ldi	r25, 0x03	; 3
    259e:	0e 94 7c 2a 	call	0x54f8	; 0x54f8 <_ZN8Pressure8altitudeEd>
    25a2:	9f 93       	push	r25
    25a4:	8f 93       	push	r24
    25a6:	7f 93       	push	r23
    25a8:	6f 93       	push	r22
    25aa:	82 e7       	ldi	r24, 0x72	; 114
    25ac:	92 e0       	ldi	r25, 0x02	; 2
    25ae:	9f 93       	push	r25
    25b0:	8f 93       	push	r24
    25b2:	ce 01       	movw	r24, r28
    25b4:	01 96       	adiw	r24, 0x01	; 1
    25b6:	9f 93       	push	r25
    25b8:	8f 93       	push	r24
    25ba:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    25be:	0f b6       	in	r0, 0x3f	; 63
    25c0:	f8 94       	cli
    25c2:	de bf       	out	0x3e, r29	; 62
    25c4:	0f be       	out	0x3f, r0	; 63
    25c6:	cd bf       	out	0x3d, r28	; 61
    25c8:	88 23       	and	r24, r24
    25ca:	f1 f0       	breq	.+60     	; 0x2608 <_Z15anzeige_kompassd+0x110>
    25cc:	8e 01       	movw	r16, r28
    25ce:	0f 5f       	subi	r16, 0xFF	; 255
    25d0:	1f 4f       	sbci	r17, 0xFF	; 255
    25d2:	81 50       	subi	r24, 0x01	; 1
    25d4:	68 94       	set
    25d6:	aa 24       	eor	r10, r10
    25d8:	a1 f8       	bld	r10, 1
    25da:	b1 2c       	mov	r11, r1
    25dc:	ac 0e       	add	r10, r28
    25de:	bd 1e       	adc	r11, r29
    25e0:	a8 0e       	add	r10, r24
    25e2:	b1 1c       	adc	r11, r1
    25e4:	0f 2e       	mov	r0, r31
    25e6:	f1 e4       	ldi	r31, 0x41	; 65
    25e8:	9f 2e       	mov	r9, r31
    25ea:	f0 2d       	mov	r31, r0
    25ec:	f8 01       	movw	r30, r16
    25ee:	61 91       	ld	r22, Z+
    25f0:	8f 01       	movw	r16, r30
    25f2:	2a e0       	ldi	r18, 0x0A	; 10
    25f4:	49 2d       	mov	r20, r9
    25f6:	8d e7       	ldi	r24, 0x7D	; 125
    25f8:	93 e0       	ldi	r25, 0x03	; 3
    25fa:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    25fe:	f6 e0       	ldi	r31, 0x06	; 6
    2600:	9f 0e       	add	r9, r31
    2602:	0a 15       	cp	r16, r10
    2604:	1b 05       	cpc	r17, r11
    2606:	91 f7       	brne	.-28     	; 0x25ec <_Z15anzeige_kompassd+0xf4>
    2608:	ea e6       	ldi	r30, 0x6A	; 106
    260a:	f3 e0       	ldi	r31, 0x03	; 3
    260c:	83 81       	ldd	r24, Z+3	; 0x03
    260e:	8f 93       	push	r24
    2610:	82 81       	ldd	r24, Z+2	; 0x02
    2612:	8f 93       	push	r24
    2614:	81 81       	ldd	r24, Z+1	; 0x01
    2616:	8f 93       	push	r24
    2618:	80 81       	ld	r24, Z
    261a:	8f 93       	push	r24
    261c:	81 e1       	ldi	r24, 0x11	; 17
    261e:	92 e0       	ldi	r25, 0x02	; 2
    2620:	9f 93       	push	r25
    2622:	8f 93       	push	r24
    2624:	ce 01       	movw	r24, r28
    2626:	01 96       	adiw	r24, 0x01	; 1
    2628:	9f 93       	push	r25
    262a:	8f 93       	push	r24
    262c:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    2630:	0f b6       	in	r0, 0x3f	; 63
    2632:	f8 94       	cli
    2634:	de bf       	out	0x3e, r29	; 62
    2636:	0f be       	out	0x3f, r0	; 63
    2638:	cd bf       	out	0x3d, r28	; 61
    263a:	88 23       	and	r24, r24
    263c:	f1 f0       	breq	.+60     	; 0x267a <_Z15anzeige_kompassd+0x182>
    263e:	8e 01       	movw	r16, r28
    2640:	0f 5f       	subi	r16, 0xFF	; 255
    2642:	1f 4f       	sbci	r17, 0xFF	; 255
    2644:	81 50       	subi	r24, 0x01	; 1
    2646:	68 94       	set
    2648:	aa 24       	eor	r10, r10
    264a:	a1 f8       	bld	r10, 1
    264c:	b1 2c       	mov	r11, r1
    264e:	ac 0e       	add	r10, r28
    2650:	bd 1e       	adc	r11, r29
    2652:	a8 0e       	add	r10, r24
    2654:	b1 1c       	adc	r11, r1
    2656:	0f 2e       	mov	r0, r31
    2658:	f1 e4       	ldi	r31, 0x41	; 65
    265a:	9f 2e       	mov	r9, r31
    265c:	f0 2d       	mov	r31, r0
    265e:	f8 01       	movw	r30, r16
    2660:	61 91       	ld	r22, Z+
    2662:	8f 01       	movw	r16, r30
    2664:	28 e2       	ldi	r18, 0x28	; 40
    2666:	49 2d       	mov	r20, r9
    2668:	8d e7       	ldi	r24, 0x7D	; 125
    266a:	93 e0       	ldi	r25, 0x03	; 3
    266c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2670:	f6 e0       	ldi	r31, 0x06	; 6
    2672:	9f 0e       	add	r9, r31
    2674:	0a 15       	cp	r16, r10
    2676:	1b 05       	cpc	r17, r11
    2678:	91 f7       	brne	.-28     	; 0x265e <_Z15anzeige_kompassd+0x166>
    267a:	ff 92       	push	r15
    267c:	ef 92       	push	r14
    267e:	df 92       	push	r13
    2680:	cf 92       	push	r12
    2682:	8c e7       	ldi	r24, 0x7C	; 124
    2684:	92 e0       	ldi	r25, 0x02	; 2
    2686:	9f 93       	push	r25
    2688:	8f 93       	push	r24
    268a:	ce 01       	movw	r24, r28
    268c:	01 96       	adiw	r24, 0x01	; 1
    268e:	9f 93       	push	r25
    2690:	8f 93       	push	r24
    2692:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    2696:	0f b6       	in	r0, 0x3f	; 63
    2698:	f8 94       	cli
    269a:	de bf       	out	0x3e, r29	; 62
    269c:	0f be       	out	0x3f, r0	; 63
    269e:	cd bf       	out	0x3d, r28	; 61
    26a0:	88 23       	and	r24, r24
    26a2:	f1 f0       	breq	.+60     	; 0x26e0 <_Z15anzeige_kompassd+0x1e8>
    26a4:	8e 01       	movw	r16, r28
    26a6:	0f 5f       	subi	r16, 0xFF	; 255
    26a8:	1f 4f       	sbci	r17, 0xFF	; 255
    26aa:	81 50       	subi	r24, 0x01	; 1
    26ac:	68 94       	set
    26ae:	aa 24       	eor	r10, r10
    26b0:	a1 f8       	bld	r10, 1
    26b2:	b1 2c       	mov	r11, r1
    26b4:	ac 0e       	add	r10, r28
    26b6:	bd 1e       	adc	r11, r29
    26b8:	a8 0e       	add	r10, r24
    26ba:	b1 1c       	adc	r11, r1
    26bc:	0f 2e       	mov	r0, r31
    26be:	f1 e4       	ldi	r31, 0x41	; 65
    26c0:	9f 2e       	mov	r9, r31
    26c2:	f0 2d       	mov	r31, r0
    26c4:	f8 01       	movw	r30, r16
    26c6:	61 91       	ld	r22, Z+
    26c8:	8f 01       	movw	r16, r30
    26ca:	20 e3       	ldi	r18, 0x30	; 48
    26cc:	49 2d       	mov	r20, r9
    26ce:	8d e7       	ldi	r24, 0x7D	; 125
    26d0:	93 e0       	ldi	r25, 0x03	; 3
    26d2:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    26d6:	f6 e0       	ldi	r31, 0x06	; 6
    26d8:	9f 0e       	add	r9, r31
    26da:	0a 15       	cp	r16, r10
    26dc:	1b 05       	cpc	r17, r11
    26de:	91 f7       	brne	.-28     	; 0x26c4 <_Z15anzeige_kompassd+0x1cc>
    26e0:	2c 2d       	mov	r18, r12
    26e2:	3d 2d       	mov	r19, r13
    26e4:	4e 2d       	mov	r20, r14
    26e6:	5f 2d       	mov	r21, r15
    26e8:	6f e1       	ldi	r22, 0x1F	; 31
    26ea:	8f e1       	ldi	r24, 0x1F	; 31
    26ec:	d5 d8       	rcall	.-3670   	; 0x1898 <_Z13anzeige_nadelhhf>
    26ee:	23 e0       	ldi	r18, 0x03	; 3
    26f0:	40 e5       	ldi	r20, 0x50	; 80
    26f2:	6c 2d       	mov	r22, r12
    26f4:	7d 2d       	mov	r23, r13
    26f6:	8e 2d       	mov	r24, r14
    26f8:	9f 2d       	mov	r25, r15
    26fa:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <_Z16anzeige_richtungfhh>
    26fe:	64 96       	adiw	r28, 0x14	; 20
    2700:	0f b6       	in	r0, 0x3f	; 63
    2702:	f8 94       	cli
    2704:	de bf       	out	0x3e, r29	; 62
    2706:	0f be       	out	0x3f, r0	; 63
    2708:	cd bf       	out	0x3d, r28	; 61
    270a:	df 91       	pop	r29
    270c:	cf 91       	pop	r28
    270e:	1f 91       	pop	r17
    2710:	0f 91       	pop	r16
    2712:	ff 90       	pop	r15
    2714:	ef 90       	pop	r14
    2716:	df 90       	pop	r13
    2718:	cf 90       	pop	r12
    271a:	bf 90       	pop	r11
    271c:	af 90       	pop	r10
    271e:	9f 90       	pop	r9
    2720:	08 95       	ret

00002722 <_Z10timerseitev>:
    2722:	cf 92       	push	r12
    2724:	df 92       	push	r13
    2726:	ef 92       	push	r14
    2728:	ff 92       	push	r15
    272a:	0f 93       	push	r16
    272c:	1f 93       	push	r17
    272e:	cf 93       	push	r28
    2730:	df 93       	push	r29
    2732:	cd b7       	in	r28, 0x3d	; 61
    2734:	de b7       	in	r29, 0x3e	; 62
    2736:	64 97       	sbiw	r28, 0x14	; 20
    2738:	0f b6       	in	r0, 0x3f	; 63
    273a:	f8 94       	cli
    273c:	de bf       	out	0x3e, r29	; 62
    273e:	0f be       	out	0x3f, r0	; 63
    2740:	cd bf       	out	0x3d, r28	; 61
    2742:	8d e7       	ldi	r24, 0x7D	; 125
    2744:	93 e0       	ldi	r25, 0x03	; 3
    2746:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    274a:	88 e0       	ldi	r24, 0x08	; 8
    274c:	e7 e8       	ldi	r30, 0x87	; 135
    274e:	f2 e0       	ldi	r31, 0x02	; 2
    2750:	8e 01       	movw	r16, r28
    2752:	0f 5f       	subi	r16, 0xFF	; 255
    2754:	1f 4f       	sbci	r17, 0xFF	; 255
    2756:	d8 01       	movw	r26, r16
    2758:	01 90       	ld	r0, Z+
    275a:	0d 92       	st	X+, r0
    275c:	8a 95       	dec	r24
    275e:	e1 f7       	brne	.-8      	; 0x2758 <_Z10timerseitev+0x36>
    2760:	c0 2e       	mov	r12, r16
    2762:	d1 2e       	mov	r13, r17
    2764:	78 01       	movw	r14, r16
    2766:	10 e0       	ldi	r17, 0x00	; 0
    2768:	f7 01       	movw	r30, r14
    276a:	61 91       	ld	r22, Z+
    276c:	7f 01       	movw	r14, r30
    276e:	20 e0       	ldi	r18, 0x00	; 0
    2770:	41 2f       	mov	r20, r17
    2772:	8d e7       	ldi	r24, 0x7D	; 125
    2774:	93 e0       	ldi	r25, 0x03	; 3
    2776:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    277a:	1a 5f       	subi	r17, 0xFA	; 250
    277c:	1a 32       	cpi	r17, 0x2A	; 42
    277e:	a1 f7       	brne	.-24     	; 0x2768 <_Z10timerseitev+0x46>
    2780:	60 91 4c 03 	lds	r22, 0x034C
    2784:	66 23       	and	r22, r22
    2786:	39 f0       	breq	.+14     	; 0x2796 <_Z10timerseitev+0x74>
    2788:	60 5d       	subi	r22, 0xD0	; 208
    278a:	20 e0       	ldi	r18, 0x00	; 0
    278c:	4a e2       	ldi	r20, 0x2A	; 42
    278e:	8d e7       	ldi	r24, 0x7D	; 125
    2790:	93 e0       	ldi	r25, 0x03	; 3
    2792:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2796:	e0 91 99 07 	lds	r30, 0x0799
    279a:	f0 91 9a 07 	lds	r31, 0x079A
    279e:	0f 2e       	mov	r0, r31
    27a0:	f0 e1       	ldi	r31, 0x10	; 16
    27a2:	ef 2e       	mov	r14, r31
    27a4:	fe e0       	ldi	r31, 0x0E	; 14
    27a6:	ff 2e       	mov	r15, r31
    27a8:	f0 2d       	mov	r31, r0
    27aa:	cf 01       	movw	r24, r30
    27ac:	b7 01       	movw	r22, r14
    27ae:	0e 94 33 33 	call	0x6666	; 0x6666 <__udivmodhi4>
    27b2:	ab 01       	movw	r20, r22
    27b4:	9c 01       	movw	r18, r24
    27b6:	a9 e8       	ldi	r26, 0x89	; 137
    27b8:	b8 e8       	ldi	r27, 0x88	; 136
    27ba:	0e 94 60 33 	call	0x66c0	; 0x66c0 <__umulhisi3>
    27be:	8c 01       	movw	r16, r24
    27c0:	16 95       	lsr	r17
    27c2:	07 95       	ror	r16
    27c4:	12 95       	swap	r17
    27c6:	02 95       	swap	r16
    27c8:	0f 70       	andi	r16, 0x0F	; 15
    27ca:	01 27       	eor	r16, r17
    27cc:	1f 70       	andi	r17, 0x0F	; 15
    27ce:	01 27       	eor	r16, r17
    27d0:	9f 01       	movw	r18, r30
    27d2:	0e 94 60 33 	call	0x66c0	; 0x66c0 <__umulhisi3>
    27d6:	96 95       	lsr	r25
    27d8:	87 95       	ror	r24
    27da:	92 95       	swap	r25
    27dc:	82 95       	swap	r24
    27de:	8f 70       	andi	r24, 0x0F	; 15
    27e0:	89 27       	eor	r24, r25
    27e2:	9f 70       	andi	r25, 0x0F	; 15
    27e4:	89 27       	eor	r24, r25
    27e6:	6c e3       	ldi	r22, 0x3C	; 60
    27e8:	68 9f       	mul	r22, r24
    27ea:	90 01       	movw	r18, r0
    27ec:	69 9f       	mul	r22, r25
    27ee:	30 0d       	add	r19, r0
    27f0:	11 24       	eor	r1, r1
    27f2:	e2 1b       	sub	r30, r18
    27f4:	f3 0b       	sbc	r31, r19
    27f6:	ca 01       	movw	r24, r20
    27f8:	99 27       	eor	r25, r25
    27fa:	91 95       	neg	r25
    27fc:	81 95       	neg	r24
    27fe:	91 09       	sbc	r25, r1
    2800:	b7 01       	movw	r22, r14
    2802:	0e 94 47 33 	call	0x668e	; 0x668e <__divmodhi4>
    2806:	cb 01       	movw	r24, r22
    2808:	6a e0       	ldi	r22, 0x0A	; 10
    280a:	70 e0       	ldi	r23, 0x00	; 0
    280c:	0e 94 47 33 	call	0x668e	; 0x668e <__divmodhi4>
    2810:	69 83       	std	Y+1, r22	; 0x01
    2812:	8d ec       	ldi	r24, 0xCD	; 205
    2814:	48 9f       	mul	r20, r24
    2816:	91 2d       	mov	r25, r1
    2818:	11 24       	eor	r1, r1
    281a:	96 95       	lsr	r25
    281c:	96 95       	lsr	r25
    281e:	96 95       	lsr	r25
    2820:	99 0f       	add	r25, r25
    2822:	29 2f       	mov	r18, r25
    2824:	22 0f       	add	r18, r18
    2826:	22 0f       	add	r18, r18
    2828:	92 0f       	add	r25, r18
    282a:	49 1b       	sub	r20, r25
    282c:	4a 83       	std	Y+2, r20	; 0x02
    282e:	9a e3       	ldi	r25, 0x3A	; 58
    2830:	9b 83       	std	Y+3, r25	; 0x03
    2832:	08 9f       	mul	r16, r24
    2834:	21 2d       	mov	r18, r1
    2836:	11 24       	eor	r1, r1
    2838:	26 95       	lsr	r18
    283a:	26 95       	lsr	r18
    283c:	26 95       	lsr	r18
    283e:	2c 83       	std	Y+4, r18	; 0x04
    2840:	22 0f       	add	r18, r18
    2842:	32 2f       	mov	r19, r18
    2844:	33 0f       	add	r19, r19
    2846:	33 0f       	add	r19, r19
    2848:	23 0f       	add	r18, r19
    284a:	02 1b       	sub	r16, r18
    284c:	0d 83       	std	Y+5, r16	; 0x05
    284e:	9e 83       	std	Y+6, r25	; 0x06
    2850:	e8 9f       	mul	r30, r24
    2852:	81 2d       	mov	r24, r1
    2854:	11 24       	eor	r1, r1
    2856:	86 95       	lsr	r24
    2858:	86 95       	lsr	r24
    285a:	86 95       	lsr	r24
    285c:	8f 83       	std	Y+7, r24	; 0x07
    285e:	88 0f       	add	r24, r24
    2860:	98 2f       	mov	r25, r24
    2862:	99 0f       	add	r25, r25
    2864:	99 0f       	add	r25, r25
    2866:	89 0f       	add	r24, r25
    2868:	e8 1b       	sub	r30, r24
    286a:	e8 87       	std	Y+8, r30	; 0x08
    286c:	ec 2c       	mov	r14, r12
    286e:	fd 2c       	mov	r15, r13
    2870:	10 e0       	ldi	r17, 0x00	; 0
    2872:	f7 01       	movw	r30, r14
    2874:	61 91       	ld	r22, Z+
    2876:	7f 01       	movw	r14, r30
    2878:	6a 33       	cpi	r22, 0x3A	; 58
    287a:	39 f4       	brne	.+14     	; 0x288a <_Z10timerseitev+0x168>
    287c:	24 e1       	ldi	r18, 0x14	; 20
    287e:	41 2f       	mov	r20, r17
    2880:	8d e7       	ldi	r24, 0x7D	; 125
    2882:	93 e0       	ldi	r25, 0x03	; 3
    2884:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2888:	06 c0       	rjmp	.+12     	; 0x2896 <_Z10timerseitev+0x174>
    288a:	20 e1       	ldi	r18, 0x10	; 16
    288c:	41 2f       	mov	r20, r17
    288e:	8d e7       	ldi	r24, 0x7D	; 125
    2890:	93 e0       	ldi	r25, 0x03	; 3
    2892:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2896:	10 5f       	subi	r17, 0xF0	; 240
    2898:	10 38       	cpi	r17, 0x80	; 128
    289a:	59 f7       	brne	.-42     	; 0x2872 <_Z10timerseitev+0x150>
    289c:	64 96       	adiw	r28, 0x14	; 20
    289e:	0f b6       	in	r0, 0x3f	; 63
    28a0:	f8 94       	cli
    28a2:	de bf       	out	0x3e, r29	; 62
    28a4:	0f be       	out	0x3f, r0	; 63
    28a6:	cd bf       	out	0x3d, r28	; 61
    28a8:	df 91       	pop	r29
    28aa:	cf 91       	pop	r28
    28ac:	1f 91       	pop	r17
    28ae:	0f 91       	pop	r16
    28b0:	ff 90       	pop	r15
    28b2:	ef 90       	pop	r14
    28b4:	df 90       	pop	r13
    28b6:	cf 90       	pop	r12
    28b8:	08 95       	ret

000028ba <_Z13Stoppuhrseitev>:
    28ba:	cf 92       	push	r12
    28bc:	df 92       	push	r13
    28be:	ef 92       	push	r14
    28c0:	ff 92       	push	r15
    28c2:	0f 93       	push	r16
    28c4:	1f 93       	push	r17
    28c6:	cf 93       	push	r28
    28c8:	df 93       	push	r29
    28ca:	cd b7       	in	r28, 0x3d	; 61
    28cc:	de b7       	in	r29, 0x3e	; 62
    28ce:	64 97       	sbiw	r28, 0x14	; 20
    28d0:	0f b6       	in	r0, 0x3f	; 63
    28d2:	f8 94       	cli
    28d4:	de bf       	out	0x3e, r29	; 62
    28d6:	0f be       	out	0x3f, r0	; 63
    28d8:	cd bf       	out	0x3d, r28	; 61
    28da:	8d e7       	ldi	r24, 0x7D	; 125
    28dc:	93 e0       	ldi	r25, 0x03	; 3
    28de:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    28e2:	8b e0       	ldi	r24, 0x0B	; 11
    28e4:	ef e8       	ldi	r30, 0x8F	; 143
    28e6:	f2 e0       	ldi	r31, 0x02	; 2
    28e8:	8e 01       	movw	r16, r28
    28ea:	0f 5f       	subi	r16, 0xFF	; 255
    28ec:	1f 4f       	sbci	r17, 0xFF	; 255
    28ee:	d8 01       	movw	r26, r16
    28f0:	01 90       	ld	r0, Z+
    28f2:	0d 92       	st	X+, r0
    28f4:	8a 95       	dec	r24
    28f6:	e1 f7       	brne	.-8      	; 0x28f0 <_Z13Stoppuhrseitev+0x36>
    28f8:	c0 2e       	mov	r12, r16
    28fa:	d1 2e       	mov	r13, r17
    28fc:	78 01       	movw	r14, r16
    28fe:	10 e0       	ldi	r17, 0x00	; 0
    2900:	f7 01       	movw	r30, r14
    2902:	61 91       	ld	r22, Z+
    2904:	7f 01       	movw	r14, r30
    2906:	20 e0       	ldi	r18, 0x00	; 0
    2908:	41 2f       	mov	r20, r17
    290a:	8d e7       	ldi	r24, 0x7D	; 125
    290c:	93 e0       	ldi	r25, 0x03	; 3
    290e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2912:	1a 5f       	subi	r17, 0xFA	; 250
    2914:	1c 33       	cpi	r17, 0x3C	; 60
    2916:	a1 f7       	brne	.-24     	; 0x2900 <_Z13Stoppuhrseitev+0x46>
    2918:	e0 91 9b 07 	lds	r30, 0x079B
    291c:	f0 91 9c 07 	lds	r31, 0x079C
    2920:	0f 2e       	mov	r0, r31
    2922:	f0 e1       	ldi	r31, 0x10	; 16
    2924:	ef 2e       	mov	r14, r31
    2926:	fe e0       	ldi	r31, 0x0E	; 14
    2928:	ff 2e       	mov	r15, r31
    292a:	f0 2d       	mov	r31, r0
    292c:	cf 01       	movw	r24, r30
    292e:	b7 01       	movw	r22, r14
    2930:	0e 94 33 33 	call	0x6666	; 0x6666 <__udivmodhi4>
    2934:	ab 01       	movw	r20, r22
    2936:	9c 01       	movw	r18, r24
    2938:	a9 e8       	ldi	r26, 0x89	; 137
    293a:	b8 e8       	ldi	r27, 0x88	; 136
    293c:	0e 94 60 33 	call	0x66c0	; 0x66c0 <__umulhisi3>
    2940:	8c 01       	movw	r16, r24
    2942:	16 95       	lsr	r17
    2944:	07 95       	ror	r16
    2946:	12 95       	swap	r17
    2948:	02 95       	swap	r16
    294a:	0f 70       	andi	r16, 0x0F	; 15
    294c:	01 27       	eor	r16, r17
    294e:	1f 70       	andi	r17, 0x0F	; 15
    2950:	01 27       	eor	r16, r17
    2952:	9f 01       	movw	r18, r30
    2954:	0e 94 60 33 	call	0x66c0	; 0x66c0 <__umulhisi3>
    2958:	96 95       	lsr	r25
    295a:	87 95       	ror	r24
    295c:	92 95       	swap	r25
    295e:	82 95       	swap	r24
    2960:	8f 70       	andi	r24, 0x0F	; 15
    2962:	89 27       	eor	r24, r25
    2964:	9f 70       	andi	r25, 0x0F	; 15
    2966:	89 27       	eor	r24, r25
    2968:	6c e3       	ldi	r22, 0x3C	; 60
    296a:	68 9f       	mul	r22, r24
    296c:	90 01       	movw	r18, r0
    296e:	69 9f       	mul	r22, r25
    2970:	30 0d       	add	r19, r0
    2972:	11 24       	eor	r1, r1
    2974:	e2 1b       	sub	r30, r18
    2976:	f3 0b       	sbc	r31, r19
    2978:	ca 01       	movw	r24, r20
    297a:	99 27       	eor	r25, r25
    297c:	91 95       	neg	r25
    297e:	81 95       	neg	r24
    2980:	91 09       	sbc	r25, r1
    2982:	b7 01       	movw	r22, r14
    2984:	0e 94 47 33 	call	0x668e	; 0x668e <__divmodhi4>
    2988:	cb 01       	movw	r24, r22
    298a:	6a e0       	ldi	r22, 0x0A	; 10
    298c:	70 e0       	ldi	r23, 0x00	; 0
    298e:	0e 94 47 33 	call	0x668e	; 0x668e <__divmodhi4>
    2992:	69 83       	std	Y+1, r22	; 0x01
    2994:	8d ec       	ldi	r24, 0xCD	; 205
    2996:	48 9f       	mul	r20, r24
    2998:	91 2d       	mov	r25, r1
    299a:	11 24       	eor	r1, r1
    299c:	96 95       	lsr	r25
    299e:	96 95       	lsr	r25
    29a0:	96 95       	lsr	r25
    29a2:	99 0f       	add	r25, r25
    29a4:	29 2f       	mov	r18, r25
    29a6:	22 0f       	add	r18, r18
    29a8:	22 0f       	add	r18, r18
    29aa:	92 0f       	add	r25, r18
    29ac:	49 1b       	sub	r20, r25
    29ae:	4a 83       	std	Y+2, r20	; 0x02
    29b0:	9a e3       	ldi	r25, 0x3A	; 58
    29b2:	9b 83       	std	Y+3, r25	; 0x03
    29b4:	08 9f       	mul	r16, r24
    29b6:	21 2d       	mov	r18, r1
    29b8:	11 24       	eor	r1, r1
    29ba:	26 95       	lsr	r18
    29bc:	26 95       	lsr	r18
    29be:	26 95       	lsr	r18
    29c0:	2c 83       	std	Y+4, r18	; 0x04
    29c2:	22 0f       	add	r18, r18
    29c4:	32 2f       	mov	r19, r18
    29c6:	33 0f       	add	r19, r19
    29c8:	33 0f       	add	r19, r19
    29ca:	23 0f       	add	r18, r19
    29cc:	02 1b       	sub	r16, r18
    29ce:	0d 83       	std	Y+5, r16	; 0x05
    29d0:	9e 83       	std	Y+6, r25	; 0x06
    29d2:	e8 9f       	mul	r30, r24
    29d4:	81 2d       	mov	r24, r1
    29d6:	11 24       	eor	r1, r1
    29d8:	86 95       	lsr	r24
    29da:	86 95       	lsr	r24
    29dc:	86 95       	lsr	r24
    29de:	8f 83       	std	Y+7, r24	; 0x07
    29e0:	88 0f       	add	r24, r24
    29e2:	98 2f       	mov	r25, r24
    29e4:	99 0f       	add	r25, r25
    29e6:	99 0f       	add	r25, r25
    29e8:	89 0f       	add	r24, r25
    29ea:	e8 1b       	sub	r30, r24
    29ec:	e8 87       	std	Y+8, r30	; 0x08
    29ee:	ec 2c       	mov	r14, r12
    29f0:	fd 2c       	mov	r15, r13
    29f2:	10 e0       	ldi	r17, 0x00	; 0
    29f4:	f7 01       	movw	r30, r14
    29f6:	61 91       	ld	r22, Z+
    29f8:	7f 01       	movw	r14, r30
    29fa:	6a 33       	cpi	r22, 0x3A	; 58
    29fc:	39 f4       	brne	.+14     	; 0x2a0c <_Z13Stoppuhrseitev+0x152>
    29fe:	24 e1       	ldi	r18, 0x14	; 20
    2a00:	41 2f       	mov	r20, r17
    2a02:	8d e7       	ldi	r24, 0x7D	; 125
    2a04:	93 e0       	ldi	r25, 0x03	; 3
    2a06:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2a0a:	06 c0       	rjmp	.+12     	; 0x2a18 <_Z13Stoppuhrseitev+0x15e>
    2a0c:	20 e1       	ldi	r18, 0x10	; 16
    2a0e:	41 2f       	mov	r20, r17
    2a10:	8d e7       	ldi	r24, 0x7D	; 125
    2a12:	93 e0       	ldi	r25, 0x03	; 3
    2a14:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2a18:	10 5f       	subi	r17, 0xF0	; 240
    2a1a:	10 38       	cpi	r17, 0x80	; 128
    2a1c:	59 f7       	brne	.-42     	; 0x29f4 <_Z13Stoppuhrseitev+0x13a>
    2a1e:	64 96       	adiw	r28, 0x14	; 20
    2a20:	0f b6       	in	r0, 0x3f	; 63
    2a22:	f8 94       	cli
    2a24:	de bf       	out	0x3e, r29	; 62
    2a26:	0f be       	out	0x3f, r0	; 63
    2a28:	cd bf       	out	0x3d, r28	; 61
    2a2a:	df 91       	pop	r29
    2a2c:	cf 91       	pop	r28
    2a2e:	1f 91       	pop	r17
    2a30:	0f 91       	pop	r16
    2a32:	ff 90       	pop	r15
    2a34:	ef 90       	pop	r14
    2a36:	df 90       	pop	r13
    2a38:	cf 90       	pop	r12
    2a3a:	08 95       	ret

00002a3c <_Z14Pressuresensorv>:
    2a3c:	bf 92       	push	r11
    2a3e:	cf 92       	push	r12
    2a40:	df 92       	push	r13
    2a42:	ef 92       	push	r14
    2a44:	ff 92       	push	r15
    2a46:	0f 93       	push	r16
    2a48:	1f 93       	push	r17
    2a4a:	cf 93       	push	r28
    2a4c:	df 93       	push	r29
    2a4e:	cd b7       	in	r28, 0x3d	; 61
    2a50:	de b7       	in	r29, 0x3e	; 62
    2a52:	64 97       	sbiw	r28, 0x14	; 20
    2a54:	0f b6       	in	r0, 0x3f	; 63
    2a56:	f8 94       	cli
    2a58:	de bf       	out	0x3e, r29	; 62
    2a5a:	0f be       	out	0x3f, r0	; 63
    2a5c:	cd bf       	out	0x3d, r28	; 61
    2a5e:	86 e6       	ldi	r24, 0x66	; 102
    2a60:	93 e0       	ldi	r25, 0x03	; 3
    2a62:	0e 94 94 29 	call	0x5328	; 0x5328 <_ZN8Pressure18READ_Pressure_onceEv>
    2a66:	86 e6       	ldi	r24, 0x66	; 102
    2a68:	93 e0       	ldi	r25, 0x03	; 3
    2a6a:	0e 94 0c 2a 	call	0x5418	; 0x5418 <_ZN8Pressure16READ_TemperatureEv>
    2a6e:	8d e7       	ldi	r24, 0x7D	; 125
    2a70:	93 e0       	ldi	r25, 0x03	; 3
    2a72:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2a76:	80 e0       	ldi	r24, 0x00	; 0
    2a78:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <_Z6headerh>
    2a7c:	80 e0       	ldi	r24, 0x00	; 0
    2a7e:	0e 94 4f 0b 	call	0x169e	; 0x169e <_Z6bottomh>
    2a82:	8e e0       	ldi	r24, 0x0E	; 14
    2a84:	ea e9       	ldi	r30, 0x9A	; 154
    2a86:	f2 e0       	ldi	r31, 0x02	; 2
    2a88:	8e 01       	movw	r16, r28
    2a8a:	0f 5f       	subi	r16, 0xFF	; 255
    2a8c:	1f 4f       	sbci	r17, 0xFF	; 255
    2a8e:	d8 01       	movw	r26, r16
    2a90:	01 90       	ld	r0, Z+
    2a92:	0d 92       	st	X+, r0
    2a94:	8a 95       	dec	r24
    2a96:	e1 f7       	brne	.-8      	; 0x2a90 <_Z14Pressuresensorv+0x54>
    2a98:	c0 2e       	mov	r12, r16
    2a9a:	d1 2e       	mov	r13, r17
    2a9c:	78 01       	movw	r14, r16
    2a9e:	10 e0       	ldi	r17, 0x00	; 0
    2aa0:	f7 01       	movw	r30, r14
    2aa2:	61 91       	ld	r22, Z+
    2aa4:	7f 01       	movw	r14, r30
    2aa6:	20 e1       	ldi	r18, 0x10	; 16
    2aa8:	41 2f       	mov	r20, r17
    2aaa:	8d e7       	ldi	r24, 0x7D	; 125
    2aac:	93 e0       	ldi	r25, 0x03	; 3
    2aae:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2ab2:	1a 5f       	subi	r17, 0xFA	; 250
    2ab4:	1e 34       	cpi	r17, 0x4E	; 78
    2ab6:	a1 f7       	brne	.-24     	; 0x2aa0 <_Z14Pressuresensorv+0x64>
    2ab8:	e6 e6       	ldi	r30, 0x66	; 102
    2aba:	f3 e0       	ldi	r31, 0x03	; 3
    2abc:	83 81       	ldd	r24, Z+3	; 0x03
    2abe:	8f 93       	push	r24
    2ac0:	82 81       	ldd	r24, Z+2	; 0x02
    2ac2:	8f 93       	push	r24
    2ac4:	81 81       	ldd	r24, Z+1	; 0x01
    2ac6:	8f 93       	push	r24
    2ac8:	80 81       	ld	r24, Z
    2aca:	8f 93       	push	r24
    2acc:	88 ea       	ldi	r24, 0xA8	; 168
    2ace:	92 e0       	ldi	r25, 0x02	; 2
    2ad0:	9f 93       	push	r25
    2ad2:	8f 93       	push	r24
    2ad4:	ce 01       	movw	r24, r28
    2ad6:	01 96       	adiw	r24, 0x01	; 1
    2ad8:	9f 93       	push	r25
    2ada:	8f 93       	push	r24
    2adc:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    2ae0:	0f b6       	in	r0, 0x3f	; 63
    2ae2:	f8 94       	cli
    2ae4:	de bf       	out	0x3e, r29	; 62
    2ae6:	0f be       	out	0x3f, r0	; 63
    2ae8:	cd bf       	out	0x3d, r28	; 61
    2aea:	88 23       	and	r24, r24
    2aec:	d1 f0       	breq	.+52     	; 0x2b22 <_Z14Pressuresensorv+0xe6>
    2aee:	81 50       	subi	r24, 0x01	; 1
    2af0:	68 94       	set
    2af2:	ee 24       	eor	r14, r14
    2af4:	e1 f8       	bld	r14, 1
    2af6:	f1 2c       	mov	r15, r1
    2af8:	ec 0e       	add	r14, r28
    2afa:	fd 1e       	adc	r15, r29
    2afc:	e8 0e       	add	r14, r24
    2afe:	f1 1c       	adc	r15, r1
    2b00:	0c 2d       	mov	r16, r12
    2b02:	1d 2d       	mov	r17, r13
    2b04:	b1 2c       	mov	r11, r1
    2b06:	f8 01       	movw	r30, r16
    2b08:	61 91       	ld	r22, Z+
    2b0a:	8f 01       	movw	r16, r30
    2b0c:	28 e1       	ldi	r18, 0x18	; 24
    2b0e:	4b 2d       	mov	r20, r11
    2b10:	8d e7       	ldi	r24, 0x7D	; 125
    2b12:	93 e0       	ldi	r25, 0x03	; 3
    2b14:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2b18:	f6 e0       	ldi	r31, 0x06	; 6
    2b1a:	bf 0e       	add	r11, r31
    2b1c:	0e 15       	cp	r16, r14
    2b1e:	1f 05       	cpc	r17, r15
    2b20:	91 f7       	brne	.-28     	; 0x2b06 <_Z14Pressuresensorv+0xca>
    2b22:	40 91 66 03 	lds	r20, 0x0366
    2b26:	50 91 67 03 	lds	r21, 0x0367
    2b2a:	60 91 68 03 	lds	r22, 0x0368
    2b2e:	70 91 69 03 	lds	r23, 0x0369
    2b32:	86 e6       	ldi	r24, 0x66	; 102
    2b34:	93 e0       	ldi	r25, 0x03	; 3
    2b36:	0e 94 7c 2a 	call	0x54f8	; 0x54f8 <_ZN8Pressure8altitudeEd>
    2b3a:	9f 93       	push	r25
    2b3c:	8f 93       	push	r24
    2b3e:	7f 93       	push	r23
    2b40:	6f 93       	push	r22
    2b42:	81 eb       	ldi	r24, 0xB1	; 177
    2b44:	92 e0       	ldi	r25, 0x02	; 2
    2b46:	9f 93       	push	r25
    2b48:	8f 93       	push	r24
    2b4a:	ce 01       	movw	r24, r28
    2b4c:	01 96       	adiw	r24, 0x01	; 1
    2b4e:	9f 93       	push	r25
    2b50:	8f 93       	push	r24
    2b52:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    2b56:	0f b6       	in	r0, 0x3f	; 63
    2b58:	f8 94       	cli
    2b5a:	de bf       	out	0x3e, r29	; 62
    2b5c:	0f be       	out	0x3f, r0	; 63
    2b5e:	cd bf       	out	0x3d, r28	; 61
    2b60:	88 23       	and	r24, r24
    2b62:	d1 f0       	breq	.+52     	; 0x2b98 <_Z14Pressuresensorv+0x15c>
    2b64:	81 50       	subi	r24, 0x01	; 1
    2b66:	68 94       	set
    2b68:	ee 24       	eor	r14, r14
    2b6a:	e1 f8       	bld	r14, 1
    2b6c:	f1 2c       	mov	r15, r1
    2b6e:	ec 0e       	add	r14, r28
    2b70:	fd 1e       	adc	r15, r29
    2b72:	e8 0e       	add	r14, r24
    2b74:	f1 1c       	adc	r15, r1
    2b76:	0c 2d       	mov	r16, r12
    2b78:	1d 2d       	mov	r17, r13
    2b7a:	b1 2c       	mov	r11, r1
    2b7c:	f8 01       	movw	r30, r16
    2b7e:	61 91       	ld	r22, Z+
    2b80:	8f 01       	movw	r16, r30
    2b82:	20 e2       	ldi	r18, 0x20	; 32
    2b84:	4b 2d       	mov	r20, r11
    2b86:	8d e7       	ldi	r24, 0x7D	; 125
    2b88:	93 e0       	ldi	r25, 0x03	; 3
    2b8a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2b8e:	f6 e0       	ldi	r31, 0x06	; 6
    2b90:	bf 0e       	add	r11, r31
    2b92:	0e 15       	cp	r16, r14
    2b94:	1f 05       	cpc	r17, r15
    2b96:	91 f7       	brne	.-28     	; 0x2b7c <_Z14Pressuresensorv+0x140>
    2b98:	ea e6       	ldi	r30, 0x6A	; 106
    2b9a:	f3 e0       	ldi	r31, 0x03	; 3
    2b9c:	83 81       	ldd	r24, Z+3	; 0x03
    2b9e:	8f 93       	push	r24
    2ba0:	82 81       	ldd	r24, Z+2	; 0x02
    2ba2:	8f 93       	push	r24
    2ba4:	81 81       	ldd	r24, Z+1	; 0x01
    2ba6:	8f 93       	push	r24
    2ba8:	80 81       	ld	r24, Z
    2baa:	8f 93       	push	r24
    2bac:	81 e1       	ldi	r24, 0x11	; 17
    2bae:	92 e0       	ldi	r25, 0x02	; 2
    2bb0:	9f 93       	push	r25
    2bb2:	8f 93       	push	r24
    2bb4:	ce 01       	movw	r24, r28
    2bb6:	01 96       	adiw	r24, 0x01	; 1
    2bb8:	9f 93       	push	r25
    2bba:	8f 93       	push	r24
    2bbc:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
    2bc0:	0f b6       	in	r0, 0x3f	; 63
    2bc2:	f8 94       	cli
    2bc4:	de bf       	out	0x3e, r29	; 62
    2bc6:	0f be       	out	0x3f, r0	; 63
    2bc8:	cd bf       	out	0x3d, r28	; 61
    2bca:	88 23       	and	r24, r24
    2bcc:	d1 f0       	breq	.+52     	; 0x2c02 <_Z14Pressuresensorv+0x1c6>
    2bce:	81 50       	subi	r24, 0x01	; 1
    2bd0:	68 94       	set
    2bd2:	ee 24       	eor	r14, r14
    2bd4:	e1 f8       	bld	r14, 1
    2bd6:	f1 2c       	mov	r15, r1
    2bd8:	ec 0e       	add	r14, r28
    2bda:	fd 1e       	adc	r15, r29
    2bdc:	e8 0e       	add	r14, r24
    2bde:	f1 1c       	adc	r15, r1
    2be0:	0c 2d       	mov	r16, r12
    2be2:	1d 2d       	mov	r17, r13
    2be4:	d1 2c       	mov	r13, r1
    2be6:	f8 01       	movw	r30, r16
    2be8:	61 91       	ld	r22, Z+
    2bea:	8f 01       	movw	r16, r30
    2bec:	20 e3       	ldi	r18, 0x30	; 48
    2bee:	4d 2d       	mov	r20, r13
    2bf0:	8d e7       	ldi	r24, 0x7D	; 125
    2bf2:	93 e0       	ldi	r25, 0x03	; 3
    2bf4:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2bf8:	f6 e0       	ldi	r31, 0x06	; 6
    2bfa:	df 0e       	add	r13, r31
    2bfc:	0e 15       	cp	r16, r14
    2bfe:	1f 05       	cpc	r17, r15
    2c00:	91 f7       	brne	.-28     	; 0x2be6 <_Z14Pressuresensorv+0x1aa>
    2c02:	64 96       	adiw	r28, 0x14	; 20
    2c04:	0f b6       	in	r0, 0x3f	; 63
    2c06:	f8 94       	cli
    2c08:	de bf       	out	0x3e, r29	; 62
    2c0a:	0f be       	out	0x3f, r0	; 63
    2c0c:	cd bf       	out	0x3d, r28	; 61
    2c0e:	df 91       	pop	r29
    2c10:	cf 91       	pop	r28
    2c12:	1f 91       	pop	r17
    2c14:	0f 91       	pop	r16
    2c16:	ff 90       	pop	r15
    2c18:	ef 90       	pop	r14
    2c1a:	df 90       	pop	r13
    2c1c:	cf 90       	pop	r12
    2c1e:	bf 90       	pop	r11
    2c20:	08 95       	ret

00002c22 <_Z11Wanderseitev>:

void Wanderseite(){
    2c22:	bf 92       	push	r11
    2c24:	cf 92       	push	r12
    2c26:	df 92       	push	r13
    2c28:	ef 92       	push	r14
    2c2a:	ff 92       	push	r15
    2c2c:	0f 93       	push	r16
    2c2e:	1f 93       	push	r17
    2c30:	cf 93       	push	r28
    2c32:	df 93       	push	r29
    2c34:	cd b7       	in	r28, 0x3d	; 61
    2c36:	de b7       	in	r29, 0x3e	; 62
    2c38:	64 97       	sbiw	r28, 0x14	; 20
    2c3a:	0f b6       	in	r0, 0x3f	; 63
    2c3c:	f8 94       	cli
    2c3e:	de bf       	out	0x3e, r29	; 62
    2c40:	0f be       	out	0x3f, r0	; 63
    2c42:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	uint8_t buffersize=0;
	oled.clearFrame();
    2c44:	8d e7       	ldi	r24, 0x7D	; 125
    2c46:	93 e0       	ldi	r25, 0x03	; 3
    2c48:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	header(0);
    2c4c:	80 e0       	ldi	r24, 0x00	; 0
    2c4e:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <_Z6headerh>
	bottom(0);
    2c52:	80 e0       	ldi	r24, 0x00	; 0
    2c54:	0e 94 4f 0b 	call	0x169e	; 0x169e <_Z6bottomh>
	
	Accelerometer.readtempera();
    2c58:	85 e5       	ldi	r24, 0x55	; 85
    2c5a:	93 e0       	ldi	r25, 0x03	; 3
    2c5c:	0e 94 45 27 	call	0x4e8a	; 0x4e8a <_ZN7LSM303D11readtemperaEv>
	Accelerometer.readacc();
    2c60:	85 e5       	ldi	r24, 0x55	; 85
    2c62:	93 e0       	ldi	r25, 0x03	; 3
    2c64:	0e 94 a8 26 	call	0x4d50	; 0x4d50 <_ZN7LSM303D7readaccEv>
	
	buffersize=sprintf(buffer,"LSM303D Daten:");
    2c68:	8f e0       	ldi	r24, 0x0F	; 15
    2c6a:	ef eb       	ldi	r30, 0xBF	; 191
    2c6c:	f2 e0       	ldi	r31, 0x02	; 2
    2c6e:	8e 01       	movw	r16, r28
    2c70:	0f 5f       	subi	r16, 0xFF	; 255
    2c72:	1f 4f       	sbci	r17, 0xFF	; 255
    2c74:	d8 01       	movw	r26, r16
    2c76:	01 90       	ld	r0, Z+
    2c78:	0d 92       	st	X+, r0
    2c7a:	8a 95       	dec	r24
    2c7c:	e1 f7       	brne	.-8      	; 0x2c76 <_Z11Wanderseitev+0x54>
    2c7e:	e0 2e       	mov	r14, r16
    2c80:	f1 2e       	mov	r15, r17
    2c82:	68 01       	movw	r12, r16
    2c84:	10 e0       	ldi	r17, 0x00	; 0
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,1*charhighte);}
    2c86:	f6 01       	movw	r30, r12
    2c88:	61 91       	ld	r22, Z+
    2c8a:	6f 01       	movw	r12, r30
    2c8c:	28 e0       	ldi	r18, 0x08	; 8
    2c8e:	41 2f       	mov	r20, r17
    2c90:	8d e7       	ldi	r24, 0x7D	; 125
    2c92:	93 e0       	ldi	r25, 0x03	; 3
    2c94:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2c98:	1a 5f       	subi	r17, 0xFA	; 250
    2c9a:	14 35       	cpi	r17, 0x54	; 84
    2c9c:	a1 f7       	brne	.-24     	; 0x2c86 <_Z11Wanderseitev+0x64>
	buffersize=sprintf(buffer,"X: %.1f",Accelerometer.roll*180.0/M_PI);
    2c9e:	20 e0       	ldi	r18, 0x00	; 0
    2ca0:	30 e0       	ldi	r19, 0x00	; 0
    2ca2:	44 e3       	ldi	r20, 0x34	; 52
    2ca4:	53 e4       	ldi	r21, 0x43	; 67
    2ca6:	60 91 5d 03 	lds	r22, 0x035D
    2caa:	70 91 5e 03 	lds	r23, 0x035E
    2cae:	80 91 5f 03 	lds	r24, 0x035F
    2cb2:	90 91 60 03 	lds	r25, 0x0360
    2cb6:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    2cba:	2b ed       	ldi	r18, 0xDB	; 219
    2cbc:	3f e0       	ldi	r19, 0x0F	; 15
    2cbe:	49 e4       	ldi	r20, 0x49	; 73
    2cc0:	50 e4       	ldi	r21, 0x40	; 64
    2cc2:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
    2cc6:	9f 93       	push	r25
    2cc8:	8f 93       	push	r24
    2cca:	7f 93       	push	r23
    2ccc:	6f 93       	push	r22
    2cce:	8e ec       	ldi	r24, 0xCE	; 206
    2cd0:	92 e0       	ldi	r25, 0x02	; 2
    2cd2:	9f 93       	push	r25
    2cd4:	8f 93       	push	r24
    2cd6:	ce 01       	movw	r24, r28
    2cd8:	01 96       	adiw	r24, 0x01	; 1
    2cda:	9f 93       	push	r25
    2cdc:	8f 93       	push	r24
    2cde:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
    2ce2:	0f b6       	in	r0, 0x3f	; 63
    2ce4:	f8 94       	cli
    2ce6:	de bf       	out	0x3e, r29	; 62
    2ce8:	0f be       	out	0x3f, r0	; 63
    2cea:	cd bf       	out	0x3d, r28	; 61
    2cec:	88 23       	and	r24, r24
    2cee:	d1 f0       	breq	.+52     	; 0x2d24 <_Z11Wanderseitev+0x102>
    2cf0:	81 50       	subi	r24, 0x01	; 1
    2cf2:	68 94       	set
    2cf4:	cc 24       	eor	r12, r12
    2cf6:	c1 f8       	bld	r12, 1
    2cf8:	d1 2c       	mov	r13, r1
    2cfa:	cc 0e       	add	r12, r28
    2cfc:	dd 1e       	adc	r13, r29
    2cfe:	c8 0e       	add	r12, r24
    2d00:	d1 1c       	adc	r13, r1
    2d02:	0e 2d       	mov	r16, r14
    2d04:	1f 2d       	mov	r17, r15
    2d06:	b1 2c       	mov	r11, r1
    2d08:	f8 01       	movw	r30, r16
    2d0a:	61 91       	ld	r22, Z+
    2d0c:	8f 01       	movw	r16, r30
    2d0e:	28 e1       	ldi	r18, 0x18	; 24
    2d10:	4b 2d       	mov	r20, r11
    2d12:	8d e7       	ldi	r24, 0x7D	; 125
    2d14:	93 e0       	ldi	r25, 0x03	; 3
    2d16:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2d1a:	f6 e0       	ldi	r31, 0x06	; 6
    2d1c:	bf 0e       	add	r11, r31
    2d1e:	0c 15       	cp	r16, r12
    2d20:	1d 05       	cpc	r17, r13
    2d22:	91 f7       	brne	.-28     	; 0x2d08 <_Z11Wanderseitev+0xe6>
	buffersize=sprintf(buffer,"Y: %.1f",Accelerometer.pitch*180.0/M_PI);
    2d24:	20 e0       	ldi	r18, 0x00	; 0
    2d26:	30 e0       	ldi	r19, 0x00	; 0
    2d28:	44 e3       	ldi	r20, 0x34	; 52
    2d2a:	53 e4       	ldi	r21, 0x43	; 67
    2d2c:	60 91 61 03 	lds	r22, 0x0361
    2d30:	70 91 62 03 	lds	r23, 0x0362
    2d34:	80 91 63 03 	lds	r24, 0x0363
    2d38:	90 91 64 03 	lds	r25, 0x0364
    2d3c:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    2d40:	2b ed       	ldi	r18, 0xDB	; 219
    2d42:	3f e0       	ldi	r19, 0x0F	; 15
    2d44:	49 e4       	ldi	r20, 0x49	; 73
    2d46:	50 e4       	ldi	r21, 0x40	; 64
    2d48:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
    2d4c:	9f 93       	push	r25
    2d4e:	8f 93       	push	r24
    2d50:	7f 93       	push	r23
    2d52:	6f 93       	push	r22
    2d54:	86 ed       	ldi	r24, 0xD6	; 214
    2d56:	92 e0       	ldi	r25, 0x02	; 2
    2d58:	9f 93       	push	r25
    2d5a:	8f 93       	push	r24
    2d5c:	ce 01       	movw	r24, r28
    2d5e:	01 96       	adiw	r24, 0x01	; 1
    2d60:	9f 93       	push	r25
    2d62:	8f 93       	push	r24
    2d64:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,4*charhighte);}
    2d68:	0f b6       	in	r0, 0x3f	; 63
    2d6a:	f8 94       	cli
    2d6c:	de bf       	out	0x3e, r29	; 62
    2d6e:	0f be       	out	0x3f, r0	; 63
    2d70:	cd bf       	out	0x3d, r28	; 61
    2d72:	88 23       	and	r24, r24
    2d74:	d1 f0       	breq	.+52     	; 0x2daa <_Z11Wanderseitev+0x188>
    2d76:	81 50       	subi	r24, 0x01	; 1
    2d78:	68 94       	set
    2d7a:	cc 24       	eor	r12, r12
    2d7c:	c1 f8       	bld	r12, 1
    2d7e:	d1 2c       	mov	r13, r1
    2d80:	cc 0e       	add	r12, r28
    2d82:	dd 1e       	adc	r13, r29
    2d84:	c8 0e       	add	r12, r24
    2d86:	d1 1c       	adc	r13, r1
    2d88:	0e 2d       	mov	r16, r14
    2d8a:	1f 2d       	mov	r17, r15
    2d8c:	b1 2c       	mov	r11, r1
    2d8e:	f8 01       	movw	r30, r16
    2d90:	61 91       	ld	r22, Z+
    2d92:	8f 01       	movw	r16, r30
    2d94:	20 e2       	ldi	r18, 0x20	; 32
    2d96:	4b 2d       	mov	r20, r11
    2d98:	8d e7       	ldi	r24, 0x7D	; 125
    2d9a:	93 e0       	ldi	r25, 0x03	; 3
    2d9c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2da0:	f6 e0       	ldi	r31, 0x06	; 6
    2da2:	bf 0e       	add	r11, r31
    2da4:	0c 15       	cp	r16, r12
    2da6:	1d 05       	cpc	r17, r13
    2da8:	91 f7       	brne	.-28     	; 0x2d8e <_Z11Wanderseitev+0x16c>
	buffersize=sprintf(buffer,"Z: %.1i",Accelerometer.achsen_A[2]);
    2daa:	e9 e5       	ldi	r30, 0x59	; 89
    2dac:	f3 e0       	ldi	r31, 0x03	; 3
    2dae:	81 81       	ldd	r24, Z+1	; 0x01
    2db0:	8f 93       	push	r24
    2db2:	80 81       	ld	r24, Z
    2db4:	8f 93       	push	r24
    2db6:	8e ed       	ldi	r24, 0xDE	; 222
    2db8:	92 e0       	ldi	r25, 0x02	; 2
    2dba:	9f 93       	push	r25
    2dbc:	8f 93       	push	r24
    2dbe:	ce 01       	movw	r24, r28
    2dc0:	01 96       	adiw	r24, 0x01	; 1
    2dc2:	9f 93       	push	r25
    2dc4:	8f 93       	push	r24
    2dc6:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,5*charhighte);}	
    2dca:	0f 90       	pop	r0
    2dcc:	0f 90       	pop	r0
    2dce:	0f 90       	pop	r0
    2dd0:	0f 90       	pop	r0
    2dd2:	0f 90       	pop	r0
    2dd4:	0f 90       	pop	r0
    2dd6:	88 23       	and	r24, r24
    2dd8:	d1 f0       	breq	.+52     	; 0x2e0e <_Z11Wanderseitev+0x1ec>
    2dda:	81 50       	subi	r24, 0x01	; 1
    2ddc:	68 94       	set
    2dde:	cc 24       	eor	r12, r12
    2de0:	c1 f8       	bld	r12, 1
    2de2:	d1 2c       	mov	r13, r1
    2de4:	cc 0e       	add	r12, r28
    2de6:	dd 1e       	adc	r13, r29
    2de8:	c8 0e       	add	r12, r24
    2dea:	d1 1c       	adc	r13, r1
    2dec:	0e 2d       	mov	r16, r14
    2dee:	1f 2d       	mov	r17, r15
    2df0:	b1 2c       	mov	r11, r1
    2df2:	f8 01       	movw	r30, r16
    2df4:	61 91       	ld	r22, Z+
    2df6:	8f 01       	movw	r16, r30
    2df8:	28 e2       	ldi	r18, 0x28	; 40
    2dfa:	4b 2d       	mov	r20, r11
    2dfc:	8d e7       	ldi	r24, 0x7D	; 125
    2dfe:	93 e0       	ldi	r25, 0x03	; 3
    2e00:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2e04:	f6 e0       	ldi	r31, 0x06	; 6
    2e06:	bf 0e       	add	r11, r31
    2e08:	0c 15       	cp	r16, r12
    2e0a:	1d 05       	cpc	r17, r13
    2e0c:	91 f7       	brne	.-28     	; 0x2df2 <_Z11Wanderseitev+0x1d0>
		
	buffersize=sprintf(buffer,"%i C",Accelerometer.Tempera);
    2e0e:	eb e5       	ldi	r30, 0x5B	; 91
    2e10:	f3 e0       	ldi	r31, 0x03	; 3
    2e12:	81 81       	ldd	r24, Z+1	; 0x01
    2e14:	8f 93       	push	r24
    2e16:	80 81       	ld	r24, Z
    2e18:	8f 93       	push	r24
    2e1a:	86 ee       	ldi	r24, 0xE6	; 230
    2e1c:	92 e0       	ldi	r25, 0x02	; 2
    2e1e:	9f 93       	push	r25
    2e20:	8f 93       	push	r24
    2e22:	ce 01       	movw	r24, r28
    2e24:	01 96       	adiw	r24, 0x01	; 1
    2e26:	9f 93       	push	r25
    2e28:	8f 93       	push	r24
    2e2a:	0e 94 93 34 	call	0x6926	; 0x6926 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,6*charhighte);}
    2e2e:	0f 90       	pop	r0
    2e30:	0f 90       	pop	r0
    2e32:	0f 90       	pop	r0
    2e34:	0f 90       	pop	r0
    2e36:	0f 90       	pop	r0
    2e38:	0f 90       	pop	r0
    2e3a:	88 23       	and	r24, r24
    2e3c:	d1 f0       	breq	.+52     	; 0x2e72 <_Z11Wanderseitev+0x250>
    2e3e:	81 50       	subi	r24, 0x01	; 1
    2e40:	68 94       	set
    2e42:	cc 24       	eor	r12, r12
    2e44:	c1 f8       	bld	r12, 1
    2e46:	d1 2c       	mov	r13, r1
    2e48:	cc 0e       	add	r12, r28
    2e4a:	dd 1e       	adc	r13, r29
    2e4c:	c8 0e       	add	r12, r24
    2e4e:	d1 1c       	adc	r13, r1
    2e50:	0e 2d       	mov	r16, r14
    2e52:	1f 2d       	mov	r17, r15
    2e54:	f1 2c       	mov	r15, r1
    2e56:	f8 01       	movw	r30, r16
    2e58:	61 91       	ld	r22, Z+
    2e5a:	8f 01       	movw	r16, r30
    2e5c:	20 e3       	ldi	r18, 0x30	; 48
    2e5e:	4f 2d       	mov	r20, r15
    2e60:	8d e7       	ldi	r24, 0x7D	; 125
    2e62:	93 e0       	ldi	r25, 0x03	; 3
    2e64:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2e68:	f6 e0       	ldi	r31, 0x06	; 6
    2e6a:	ff 0e       	add	r15, r31
    2e6c:	0c 15       	cp	r16, r12
    2e6e:	1d 05       	cpc	r17, r13
    2e70:	91 f7       	brne	.-28     	; 0x2e56 <_Z11Wanderseitev+0x234>
	
}
    2e72:	64 96       	adiw	r28, 0x14	; 20
    2e74:	0f b6       	in	r0, 0x3f	; 63
    2e76:	f8 94       	cli
    2e78:	de bf       	out	0x3e, r29	; 62
    2e7a:	0f be       	out	0x3f, r0	; 63
    2e7c:	cd bf       	out	0x3d, r28	; 61
    2e7e:	df 91       	pop	r29
    2e80:	cf 91       	pop	r28
    2e82:	1f 91       	pop	r17
    2e84:	0f 91       	pop	r16
    2e86:	ff 90       	pop	r15
    2e88:	ef 90       	pop	r14
    2e8a:	df 90       	pop	r13
    2e8c:	cf 90       	pop	r12
    2e8e:	bf 90       	pop	r11
    2e90:	08 95       	ret

00002e92 <_Z13uhreinstellenv>:

void uhreinstellen(){
    2e92:	2f 92       	push	r2
    2e94:	3f 92       	push	r3
    2e96:	4f 92       	push	r4
    2e98:	5f 92       	push	r5
    2e9a:	6f 92       	push	r6
    2e9c:	7f 92       	push	r7
    2e9e:	8f 92       	push	r8
    2ea0:	9f 92       	push	r9
    2ea2:	af 92       	push	r10
    2ea4:	bf 92       	push	r11
    2ea6:	cf 92       	push	r12
    2ea8:	df 92       	push	r13
    2eaa:	ef 92       	push	r14
    2eac:	ff 92       	push	r15
    2eae:	0f 93       	push	r16
    2eb0:	1f 93       	push	r17
    2eb2:	cf 93       	push	r28
    2eb4:	df 93       	push	r29
    2eb6:	cd b7       	in	r28, 0x3d	; 61
    2eb8:	de b7       	in	r29, 0x3e	; 62
    2eba:	66 97       	sbiw	r28, 0x16	; 22
    2ebc:	0f b6       	in	r0, 0x3f	; 63
    2ebe:	f8 94       	cli
    2ec0:	de bf       	out	0x3e, r29	; 62
    2ec2:	0f be       	out	0x3f, r0	; 63
    2ec4:	cd bf       	out	0x3d, r28	; 61
	rtc.RTCstop();
    2ec6:	8e e7       	ldi	r24, 0x7E	; 126
    2ec8:	97 e0       	ldi	r25, 0x07	; 7
    2eca:	0e 94 f3 2b 	call	0x57e6	; 0x57e6 <_ZN3RTC7RTCstopEv>
	
	oled.clearFrame();
    2ece:	8d e7       	ldi	r24, 0x7D	; 125
    2ed0:	93 e0       	ldi	r25, 0x03	; 3
    2ed2:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
    2ed6:	91 2c       	mov	r9, r1
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2ed8:	0f 2e       	mov	r0, r31
    2eda:	ff e0       	ldi	r31, 0x0F	; 15
    2edc:	6f 2e       	mov	r6, r31
    2ede:	f0 2d       	mov	r31, r0
    2ee0:	ce 01       	movw	r24, r28
    2ee2:	01 96       	adiw	r24, 0x01	; 1
    2ee4:	7c 01       	movw	r14, r24
    2ee6:	78 2e       	mov	r7, r24
    2ee8:	8f 2c       	mov	r8, r15
    2eea:	b1 2c       	mov	r11, r1
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2eec:	8d 8b       	std	Y+21, r24	; 0x15
    2eee:	fe 8a       	std	Y+22, r15	; 0x16
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2ef0:	0f 2e       	mov	r0, r31
    2ef2:	fd ec       	ldi	r31, 0xCD	; 205
    2ef4:	af 2e       	mov	r10, r31
    2ef6:	f0 2d       	mov	r31, r0
		buffer[1]=rtc.Stunden%10;
		buffer[2]=':';
		buffer[3]=rtc.Minuten/10;
		buffer[4]=rtc.Minuten%10;
		buffer[5]=' ';
		buffer[6]=rtc.Tag/10;
    2ef8:	0f 2e       	mov	r0, r31
    2efa:	f2 e9       	ldi	r31, 0x92	; 146
    2efc:	4f 2e       	mov	r4, r31
    2efe:	f7 e0       	ldi	r31, 0x07	; 7
    2f00:	5f 2e       	mov	r5, r31
    2f02:	f0 2d       	mov	r31, r0
		buffer[7]=rtc.Tag%10;
		buffer[8]='.';
		buffer[9]=rtc.Monat/10;
    2f04:	0f 2e       	mov	r0, r31
    2f06:	f4 e9       	ldi	r31, 0x94	; 148
    2f08:	cf 2e       	mov	r12, r31
    2f0a:	f7 e0       	ldi	r31, 0x07	; 7
    2f0c:	df 2e       	mov	r13, r31
    2f0e:	f0 2d       	mov	r31, r0
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2f10:	eb ee       	ldi	r30, 0xEB	; 235
    2f12:	f2 e0       	ldi	r31, 0x02	; 2
    2f14:	a7 2d       	mov	r26, r7
    2f16:	b8 2d       	mov	r27, r8
    2f18:	86 2d       	mov	r24, r6
    2f1a:	01 90       	ld	r0, Z+
    2f1c:	0d 92       	st	X+, r0
    2f1e:	8a 95       	dec	r24
    2f20:	e1 f7       	brne	.-8      	; 0x2f1a <_Z13uhreinstellenv+0x88>
    2f22:	27 2c       	mov	r2, r7
    2f24:	38 2c       	mov	r3, r8
    2f26:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
    2f28:	f1 01       	movw	r30, r2
    2f2a:	61 91       	ld	r22, Z+
    2f2c:	1f 01       	movw	r2, r30
    2f2e:	2b 2d       	mov	r18, r11
    2f30:	41 2f       	mov	r20, r17
    2f32:	8d e7       	ldi	r24, 0x7D	; 125
    2f34:	93 e0       	ldi	r25, 0x03	; 3
    2f36:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2f3a:	1a 5f       	subi	r17, 0xFA	; 250
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
    2f3c:	14 35       	cpi	r17, 0x54	; 84
    2f3e:	a1 f7       	brne	.-24     	; 0x2f28 <_Z13uhreinstellenv+0x96>
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2f40:	ef e0       	ldi	r30, 0x0F	; 15
    2f42:	f1 e0       	ldi	r31, 0x01	; 1
    2f44:	a7 2d       	mov	r26, r7
    2f46:	b8 2d       	mov	r27, r8
    2f48:	86 2d       	mov	r24, r6
    2f4a:	01 90       	ld	r0, Z+
    2f4c:	0d 92       	st	X+, r0
    2f4e:	8a 95       	dec	r24
    2f50:	e1 f7       	brne	.-8      	; 0x2f4a <_Z13uhreinstellenv+0xb8>
    2f52:	2d 88       	ldd	r2, Y+21	; 0x15
    2f54:	3e 88       	ldd	r3, Y+22	; 0x16
    2f56:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
    2f58:	f1 01       	movw	r30, r2
    2f5a:	61 91       	ld	r22, Z+
    2f5c:	1f 01       	movw	r2, r30
    2f5e:	28 e0       	ldi	r18, 0x08	; 8
    2f60:	41 2f       	mov	r20, r17
    2f62:	8d e7       	ldi	r24, 0x7D	; 125
    2f64:	93 e0       	ldi	r25, 0x03	; 3
    2f66:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2f6a:	1a 5f       	subi	r17, 0xFA	; 250
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
		for(uint8_t i = 0; i<buffersize;i++){
    2f6c:	14 35       	cpi	r17, 0x54	; 84
    2f6e:	a1 f7       	brne	.-24     	; 0x2f58 <_Z13uhreinstellenv+0xc6>
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2f70:	ee e8       	ldi	r30, 0x8E	; 142
    2f72:	f7 e0       	ldi	r31, 0x07	; 7
    2f74:	80 81       	ld	r24, Z
    2f76:	8a 9d       	mul	r24, r10
    2f78:	91 2d       	mov	r25, r1
    2f7a:	11 24       	eor	r1, r1
    2f7c:	96 95       	lsr	r25
    2f7e:	96 95       	lsr	r25
    2f80:	96 95       	lsr	r25
    2f82:	99 83       	std	Y+1, r25	; 0x01
		buffer[1]=rtc.Stunden%10;
    2f84:	99 0f       	add	r25, r25
    2f86:	29 2f       	mov	r18, r25
    2f88:	22 0f       	add	r18, r18
    2f8a:	22 0f       	add	r18, r18
    2f8c:	92 0f       	add	r25, r18
    2f8e:	89 1b       	sub	r24, r25
    2f90:	8a 83       	std	Y+2, r24	; 0x02
		buffer[2]=':';
    2f92:	fa e3       	ldi	r31, 0x3A	; 58
    2f94:	fb 83       	std	Y+3, r31	; 0x03
		buffer[3]=rtc.Minuten/10;
    2f96:	ef e8       	ldi	r30, 0x8F	; 143
    2f98:	f7 e0       	ldi	r31, 0x07	; 7
    2f9a:	80 81       	ld	r24, Z
    2f9c:	8a 9d       	mul	r24, r10
    2f9e:	91 2d       	mov	r25, r1
    2fa0:	11 24       	eor	r1, r1
    2fa2:	96 95       	lsr	r25
    2fa4:	96 95       	lsr	r25
    2fa6:	96 95       	lsr	r25
    2fa8:	9c 83       	std	Y+4, r25	; 0x04
		buffer[4]=rtc.Minuten%10;
    2faa:	99 0f       	add	r25, r25
    2fac:	29 2f       	mov	r18, r25
    2fae:	22 0f       	add	r18, r18
    2fb0:	22 0f       	add	r18, r18
    2fb2:	92 0f       	add	r25, r18
    2fb4:	89 1b       	sub	r24, r25
    2fb6:	8d 83       	std	Y+5, r24	; 0x05
		buffer[5]=' ';
    2fb8:	80 e2       	ldi	r24, 0x20	; 32
    2fba:	8e 83       	std	Y+6, r24	; 0x06
		buffer[6]=rtc.Tag/10;
    2fbc:	f2 01       	movw	r30, r4
    2fbe:	80 81       	ld	r24, Z
    2fc0:	8a 9d       	mul	r24, r10
    2fc2:	91 2d       	mov	r25, r1
    2fc4:	11 24       	eor	r1, r1
    2fc6:	96 95       	lsr	r25
    2fc8:	96 95       	lsr	r25
    2fca:	96 95       	lsr	r25
    2fcc:	9f 83       	std	Y+7, r25	; 0x07
		buffer[7]=rtc.Tag%10;
    2fce:	99 0f       	add	r25, r25
    2fd0:	29 2f       	mov	r18, r25
    2fd2:	22 0f       	add	r18, r18
    2fd4:	22 0f       	add	r18, r18
    2fd6:	92 0f       	add	r25, r18
    2fd8:	89 1b       	sub	r24, r25
    2fda:	88 87       	std	Y+8, r24	; 0x08
		buffer[8]='.';
    2fdc:	8e e2       	ldi	r24, 0x2E	; 46
    2fde:	89 87       	std	Y+9, r24	; 0x09
		buffer[9]=rtc.Monat/10;
    2fe0:	f6 01       	movw	r30, r12
    2fe2:	90 81       	ld	r25, Z
    2fe4:	9a 9d       	mul	r25, r10
    2fe6:	21 2d       	mov	r18, r1
    2fe8:	11 24       	eor	r1, r1
    2fea:	26 95       	lsr	r18
    2fec:	26 95       	lsr	r18
    2fee:	26 95       	lsr	r18
    2ff0:	2a 87       	std	Y+10, r18	; 0x0a
		buffer[10]=rtc.Monat%10;
    2ff2:	22 0f       	add	r18, r18
    2ff4:	32 2f       	mov	r19, r18
    2ff6:	33 0f       	add	r19, r19
    2ff8:	33 0f       	add	r19, r19
    2ffa:	23 0f       	add	r18, r19
    2ffc:	92 1b       	sub	r25, r18
    2ffe:	9b 87       	std	Y+11, r25	; 0x0b
		buffer[11]='.';
    3000:	8c 87       	std	Y+12, r24	; 0x0c
		buffer[12]=rtc.Jahr/10;
    3002:	e5 e9       	ldi	r30, 0x95	; 149
    3004:	f7 e0       	ldi	r31, 0x07	; 7
    3006:	80 81       	ld	r24, Z
    3008:	8a 9d       	mul	r24, r10
    300a:	91 2d       	mov	r25, r1
    300c:	11 24       	eor	r1, r1
    300e:	96 95       	lsr	r25
    3010:	96 95       	lsr	r25
    3012:	96 95       	lsr	r25
    3014:	9d 87       	std	Y+13, r25	; 0x0d
		buffer[13]=rtc.Jahr%10;
    3016:	99 0f       	add	r25, r25
    3018:	29 2f       	mov	r18, r25
    301a:	22 0f       	add	r18, r18
    301c:	22 0f       	add	r18, r18
    301e:	92 0f       	add	r25, r18
    3020:	89 1b       	sub	r24, r25
    3022:	8e 87       	std	Y+14, r24	; 0x0e
    3024:	3b 2c       	mov	r3, r11
    3026:	01 e0       	ldi	r16, 0x01	; 1
    3028:	1b 2d       	mov	r17, r11
    302a:	04 c0       	rjmp	.+8      	; 0x3034 <_Z13uhreinstellenv+0x1a2>
    302c:	1f 5f       	subi	r17, 0xFF	; 255
    302e:	0f 5f       	subi	r16, 0xFF	; 255
    3030:	f0 e1       	ldi	r31, 0x10	; 16
    3032:	3f 0e       	add	r3, r31
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
			if(i!=2){
    3034:	12 30       	cpi	r17, 0x02	; 2
    3036:	69 f0       	breq	.+26     	; 0x3052 <_Z13uhreinstellenv+0x1c0>
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
    3038:	20 e1       	ldi	r18, 0x10	; 16
    303a:	43 2d       	mov	r20, r3
    303c:	f7 01       	movw	r30, r14
    303e:	e1 0f       	add	r30, r17
    3040:	f1 1d       	adc	r31, r1
    3042:	60 81       	ld	r22, Z
    3044:	8d e7       	ldi	r24, 0x7D	; 125
    3046:	93 e0       	ldi	r25, 0x03	; 3
    3048:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    304c:	05 30       	cpi	r16, 0x05	; 5
    304e:	70 f3       	brcs	.-36     	; 0x302c <_Z13uhreinstellenv+0x19a>
    3050:	08 c0       	rjmp	.+16     	; 0x3062 <_Z13uhreinstellenv+0x1d0>
			if(i!=2){
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
    3052:	24 e1       	ldi	r18, 0x14	; 20
    3054:	48 e2       	ldi	r20, 0x28	; 40
    3056:	6b 81       	ldd	r22, Y+3	; 0x03
    3058:	8d e7       	ldi	r24, 0x7D	; 125
    305a:	93 e0       	ldi	r25, 0x03	; 3
    305c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3060:	e5 cf       	rjmp	.-54     	; 0x302c <_Z13uhreinstellenv+0x19a>
    3062:	8e 01       	movw	r16, r28
    3064:	09 5f       	subi	r16, 0xF9	; 249
    3066:	1f 4f       	sbci	r17, 0xFF	; 255
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    3068:	2b 2c       	mov	r2, r11
    306a:	0f 2e       	mov	r0, r31
    306c:	f6 e0       	ldi	r31, 0x06	; 6
    306e:	3f 2e       	mov	r3, r31
    3070:	f0 2d       	mov	r31, r0
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
			if(i!=8 && i!=11){
    3072:	88 e0       	ldi	r24, 0x08	; 8
    3074:	38 16       	cp	r3, r24
    3076:	61 f0       	breq	.+24     	; 0x3090 <_Z13uhreinstellenv+0x1fe>
    3078:	9b e0       	ldi	r25, 0x0B	; 11
    307a:	39 16       	cp	r3, r25
    307c:	49 f0       	breq	.+18     	; 0x3090 <_Z13uhreinstellenv+0x1fe>
				oled.draw_number16x16(buffer[i],i*numbersmalsize-6*numbersmalsize,4*charhighte);
    307e:	20 e2       	ldi	r18, 0x20	; 32
    3080:	42 2d       	mov	r20, r2
    3082:	f8 01       	movw	r30, r16
    3084:	60 81       	ld	r22, Z
    3086:	8d e7       	ldi	r24, 0x7D	; 125
    3088:	93 e0       	ldi	r25, 0x03	; 3
    308a:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    308e:	09 c0       	rjmp	.+18     	; 0x30a2 <_Z13uhreinstellenv+0x210>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
    3090:	28 e2       	ldi	r18, 0x28	; 40
    3092:	48 e0       	ldi	r20, 0x08	; 8
    3094:	42 0d       	add	r20, r2
    3096:	f8 01       	movw	r30, r16
    3098:	60 81       	ld	r22, Z
    309a:	8d e7       	ldi	r24, 0x7D	; 125
    309c:	93 e0       	ldi	r25, 0x03	; 3
    309e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
    30a2:	33 94       	inc	r3
    30a4:	0f 5f       	subi	r16, 0xFF	; 255
    30a6:	1f 4f       	sbci	r17, 0xFF	; 255
    30a8:	f0 e1       	ldi	r31, 0x10	; 16
    30aa:	2f 0e       	add	r2, r31
    30ac:	8e e0       	ldi	r24, 0x0E	; 14
    30ae:	38 12       	cpse	r3, r24
    30b0:	e0 cf       	rjmp	.-64     	; 0x3072 <_Z13uhreinstellenv+0x1e0>
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
			}
		}

		oled.sendFrame();
    30b2:	8d e7       	ldi	r24, 0x7D	; 125
    30b4:	93 e0       	ldi	r25, 0x03	; 3
    30b6:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN7Display9sendFrameEv>
		oled.clearFrame();
    30ba:	8d e7       	ldi	r24, 0x7D	; 125
    30bc:	93 e0       	ldi	r25, 0x03	; 3
    30be:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
		switch (pos) {
    30c2:	89 2d       	mov	r24, r9
    30c4:	90 e0       	ldi	r25, 0x00	; 0
    30c6:	8a 30       	cpi	r24, 0x0A	; 10
    30c8:	91 05       	cpc	r25, r1
    30ca:	08 f0       	brcs	.+2      	; 0x30ce <_Z13uhreinstellenv+0x23c>
    30cc:	47 c2       	rjmp	.+1166   	; 0x355c <_Z13uhreinstellenv+0x6ca>
    30ce:	fc 01       	movw	r30, r24
    30d0:	ea 5b       	subi	r30, 0xBA	; 186
    30d2:	ff 4f       	sbci	r31, 0xFF	; 255
    30d4:	0c 94 5a 33 	jmp	0x66b4	; 0x66b4 <__tablejump2__>
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    30d8:	8c e7       	ldi	r24, 0x7C	; 124
    30da:	93 e0       	ldi	r25, 0x03	; 3
    30dc:	0e 94 62 24 	call	0x48c4	; 0x48c4 <_ZN9Interface17ZahlenausTastaturEv>
    30e0:	88 0f       	add	r24, r24
    30e2:	98 2f       	mov	r25, r24
    30e4:	99 0f       	add	r25, r25
    30e6:	99 0f       	add	r25, r25
    30e8:	89 0f       	add	r24, r25
				if(rtc.Stunden>=24){
    30ea:	88 31       	cpi	r24, 0x18	; 24
    30ec:	08 f4       	brcc	.+2      	; 0x30f0 <_Z13uhreinstellenv+0x25e>
    30ee:	6f c2       	rjmp	.+1246   	; 0x35ce <_Z13uhreinstellenv+0x73c>
					rtc.Stunden=0;
    30f0:	ee e8       	ldi	r30, 0x8E	; 142
    30f2:	f7 e0       	ldi	r31, 0x07	; 7
    30f4:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    30f6:	ea ef       	ldi	r30, 0xFA	; 250
    30f8:	f2 e0       	ldi	r31, 0x02	; 2
    30fa:	a7 2d       	mov	r26, r7
    30fc:	b8 2d       	mov	r27, r8
    30fe:	86 2d       	mov	r24, r6
    3100:	01 90       	ld	r0, Z+
    3102:	0d 92       	st	X+, r0
    3104:	8a 95       	dec	r24
    3106:	e1 f7       	brne	.-8      	; 0x3100 <_Z13uhreinstellenv+0x26e>
    3108:	2d 88       	ldd	r2, Y+21	; 0x15
    310a:	3e 88       	ldd	r3, Y+22	; 0x16
    310c:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    310e:	f1 01       	movw	r30, r2
    3110:	61 91       	ld	r22, Z+
    3112:	1f 01       	movw	r2, r30
    3114:	28 e3       	ldi	r18, 0x38	; 56
    3116:	41 2f       	mov	r20, r17
    3118:	8d e7       	ldi	r24, 0x7D	; 125
    311a:	93 e0       	ldi	r25, 0x03	; 3
    311c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3120:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3122:	14 35       	cpi	r17, 0x54	; 84
    3124:	a1 f7       	brne	.-24     	; 0x310e <_Z13uhreinstellenv+0x27c>
    3126:	57 c2       	rjmp	.+1198   	; 0x35d6 <_Z13uhreinstellenv+0x744>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    3128:	8c e7       	ldi	r24, 0x7C	; 124
    312a:	93 e0       	ldi	r25, 0x03	; 3
    312c:	0e 94 62 24 	call	0x48c4	; 0x48c4 <_ZN9Interface17ZahlenausTastaturEv>
    3130:	ee e8       	ldi	r30, 0x8E	; 142
    3132:	f7 e0       	ldi	r31, 0x07	; 7
    3134:	20 81       	ld	r18, Z
    3136:	90 e0       	ldi	r25, 0x00	; 0
    3138:	82 0f       	add	r24, r18
    313a:	91 1d       	adc	r25, r1
				if(rtc.Stunden>=24){
    313c:	88 31       	cpi	r24, 0x18	; 24
    313e:	10 f4       	brcc	.+4      	; 0x3144 <_Z13uhreinstellenv+0x2b2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    3140:	80 83       	st	Z, r24
    3142:	7c c2       	rjmp	.+1272   	; 0x363c <_Z13uhreinstellenv+0x7aa>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
    3144:	ee e8       	ldi	r30, 0x8E	; 142
    3146:	f7 e0       	ldi	r31, 0x07	; 7
    3148:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    314a:	ea ef       	ldi	r30, 0xFA	; 250
    314c:	f2 e0       	ldi	r31, 0x02	; 2
    314e:	a7 2d       	mov	r26, r7
    3150:	b8 2d       	mov	r27, r8
    3152:	86 2d       	mov	r24, r6
    3154:	01 90       	ld	r0, Z+
    3156:	0d 92       	st	X+, r0
    3158:	8a 95       	dec	r24
    315a:	e1 f7       	brne	.-8      	; 0x3154 <_Z13uhreinstellenv+0x2c2>
    315c:	2d 88       	ldd	r2, Y+21	; 0x15
    315e:	3e 88       	ldd	r3, Y+22	; 0x16
    3160:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3162:	f1 01       	movw	r30, r2
    3164:	61 91       	ld	r22, Z+
    3166:	1f 01       	movw	r2, r30
    3168:	28 e3       	ldi	r18, 0x38	; 56
    316a:	41 2f       	mov	r20, r17
    316c:	8d e7       	ldi	r24, 0x7D	; 125
    316e:	93 e0       	ldi	r25, 0x03	; 3
    3170:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3174:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3176:	14 35       	cpi	r17, 0x54	; 84
    3178:	a1 f7       	brne	.-24     	; 0x3162 <_Z13uhreinstellenv+0x2d0>
    317a:	30 c2       	rjmp	.+1120   	; 0x35dc <_Z13uhreinstellenv+0x74a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    317c:	8c e7       	ldi	r24, 0x7C	; 124
    317e:	93 e0       	ldi	r25, 0x03	; 3
    3180:	0e 94 62 24 	call	0x48c4	; 0x48c4 <_ZN9Interface17ZahlenausTastaturEv>
    3184:	88 0f       	add	r24, r24
    3186:	98 2f       	mov	r25, r24
    3188:	99 0f       	add	r25, r25
    318a:	99 0f       	add	r25, r25
    318c:	89 0f       	add	r24, r25
				if(rtc.Minuten>=60){
    318e:	8c 33       	cpi	r24, 0x3C	; 60
    3190:	20 f4       	brcc	.+8      	; 0x319a <_Z13uhreinstellenv+0x308>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    3192:	ef e8       	ldi	r30, 0x8F	; 143
    3194:	f7 e0       	ldi	r31, 0x07	; 7
    3196:	80 83       	st	Z, r24
    3198:	51 c2       	rjmp	.+1186   	; 0x363c <_Z13uhreinstellenv+0x7aa>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    319a:	ef e8       	ldi	r30, 0x8F	; 143
    319c:	f7 e0       	ldi	r31, 0x07	; 7
    319e:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    31a0:	e9 e0       	ldi	r30, 0x09	; 9
    31a2:	f3 e0       	ldi	r31, 0x03	; 3
    31a4:	a7 2d       	mov	r26, r7
    31a6:	b8 2d       	mov	r27, r8
    31a8:	86 2d       	mov	r24, r6
    31aa:	01 90       	ld	r0, Z+
    31ac:	0d 92       	st	X+, r0
    31ae:	8a 95       	dec	r24
    31b0:	e1 f7       	brne	.-8      	; 0x31aa <_Z13uhreinstellenv+0x318>
    31b2:	2d 88       	ldd	r2, Y+21	; 0x15
    31b4:	3e 88       	ldd	r3, Y+22	; 0x16
    31b6:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    31b8:	f1 01       	movw	r30, r2
    31ba:	61 91       	ld	r22, Z+
    31bc:	1f 01       	movw	r2, r30
    31be:	28 e3       	ldi	r18, 0x38	; 56
    31c0:	41 2f       	mov	r20, r17
    31c2:	8d e7       	ldi	r24, 0x7D	; 125
    31c4:	93 e0       	ldi	r25, 0x03	; 3
    31c6:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    31ca:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    31cc:	14 35       	cpi	r17, 0x54	; 84
    31ce:	a1 f7       	brne	.-24     	; 0x31b8 <_Z13uhreinstellenv+0x326>
    31d0:	08 c2       	rjmp	.+1040   	; 0x35e2 <_Z13uhreinstellenv+0x750>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    31d2:	8c e7       	ldi	r24, 0x7C	; 124
    31d4:	93 e0       	ldi	r25, 0x03	; 3
    31d6:	0e 94 62 24 	call	0x48c4	; 0x48c4 <_ZN9Interface17ZahlenausTastaturEv>
    31da:	ef e8       	ldi	r30, 0x8F	; 143
    31dc:	f7 e0       	ldi	r31, 0x07	; 7
    31de:	20 81       	ld	r18, Z
    31e0:	90 e0       	ldi	r25, 0x00	; 0
    31e2:	82 0f       	add	r24, r18
    31e4:	91 1d       	adc	r25, r1
				if(rtc.Minuten>=60){
    31e6:	8c 33       	cpi	r24, 0x3C	; 60
    31e8:	10 f4       	brcc	.+4      	; 0x31ee <_Z13uhreinstellenv+0x35c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    31ea:	80 83       	st	Z, r24
    31ec:	27 c2       	rjmp	.+1102   	; 0x363c <_Z13uhreinstellenv+0x7aa>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    31ee:	ef e8       	ldi	r30, 0x8F	; 143
    31f0:	f7 e0       	ldi	r31, 0x07	; 7
    31f2:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    31f4:	e9 e0       	ldi	r30, 0x09	; 9
    31f6:	f3 e0       	ldi	r31, 0x03	; 3
    31f8:	a7 2d       	mov	r26, r7
    31fa:	b8 2d       	mov	r27, r8
    31fc:	86 2d       	mov	r24, r6
    31fe:	01 90       	ld	r0, Z+
    3200:	0d 92       	st	X+, r0
    3202:	8a 95       	dec	r24
    3204:	e1 f7       	brne	.-8      	; 0x31fe <_Z13uhreinstellenv+0x36c>
    3206:	2d 88       	ldd	r2, Y+21	; 0x15
    3208:	3e 88       	ldd	r3, Y+22	; 0x16
    320a:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    320c:	f1 01       	movw	r30, r2
    320e:	61 91       	ld	r22, Z+
    3210:	1f 01       	movw	r2, r30
    3212:	28 e3       	ldi	r18, 0x38	; 56
    3214:	41 2f       	mov	r20, r17
    3216:	8d e7       	ldi	r24, 0x7D	; 125
    3218:	93 e0       	ldi	r25, 0x03	; 3
    321a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    321e:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3220:	14 35       	cpi	r17, 0x54	; 84
    3222:	a1 f7       	brne	.-24     	; 0x320c <_Z13uhreinstellenv+0x37a>
    3224:	e1 c1       	rjmp	.+962    	; 0x35e8 <_Z13uhreinstellenv+0x756>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    3226:	8c e7       	ldi	r24, 0x7C	; 124
    3228:	93 e0       	ldi	r25, 0x03	; 3
    322a:	0e 94 62 24 	call	0x48c4	; 0x48c4 <_ZN9Interface17ZahlenausTastaturEv>
    322e:	88 0f       	add	r24, r24
    3230:	98 2f       	mov	r25, r24
    3232:	99 0f       	add	r25, r25
    3234:	99 0f       	add	r25, r25
    3236:	89 0f       	add	r24, r25
				if(rtc.Tag>=32){
    3238:	80 32       	cpi	r24, 0x20	; 32
    323a:	18 f4       	brcc	.+6      	; 0x3242 <_Z13uhreinstellenv+0x3b0>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    323c:	f2 01       	movw	r30, r4
    323e:	80 83       	st	Z, r24
    3240:	fd c1       	rjmp	.+1018   	; 0x363c <_Z13uhreinstellenv+0x7aa>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    3242:	f2 01       	movw	r30, r4
    3244:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    3246:	8b e0       	ldi	r24, 0x0B	; 11
    3248:	e8 e1       	ldi	r30, 0x18	; 24
    324a:	f3 e0       	ldi	r31, 0x03	; 3
    324c:	a7 2d       	mov	r26, r7
    324e:	b8 2d       	mov	r27, r8
    3250:	01 90       	ld	r0, Z+
    3252:	0d 92       	st	X+, r0
    3254:	8a 95       	dec	r24
    3256:	e1 f7       	brne	.-8      	; 0x3250 <_Z13uhreinstellenv+0x3be>
    3258:	2d 88       	ldd	r2, Y+21	; 0x15
    325a:	3e 88       	ldd	r3, Y+22	; 0x16
    325c:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    325e:	f1 01       	movw	r30, r2
    3260:	61 91       	ld	r22, Z+
    3262:	1f 01       	movw	r2, r30
    3264:	28 e3       	ldi	r18, 0x38	; 56
    3266:	41 2f       	mov	r20, r17
    3268:	8d e7       	ldi	r24, 0x7D	; 125
    326a:	93 e0       	ldi	r25, 0x03	; 3
    326c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3270:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3272:	1c 33       	cpi	r17, 0x3C	; 60
    3274:	a1 f7       	brne	.-24     	; 0x325e <_Z13uhreinstellenv+0x3cc>
    3276:	bb c1       	rjmp	.+886    	; 0x35ee <_Z13uhreinstellenv+0x75c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    3278:	8c e7       	ldi	r24, 0x7C	; 124
    327a:	93 e0       	ldi	r25, 0x03	; 3
    327c:	0e 94 62 24 	call	0x48c4	; 0x48c4 <_ZN9Interface17ZahlenausTastaturEv>
    3280:	f2 01       	movw	r30, r4
    3282:	20 81       	ld	r18, Z
    3284:	90 e0       	ldi	r25, 0x00	; 0
    3286:	82 0f       	add	r24, r18
    3288:	91 1d       	adc	r25, r1
				if(rtc.Tag>=32){
    328a:	80 32       	cpi	r24, 0x20	; 32
    328c:	10 f4       	brcc	.+4      	; 0x3292 <_Z13uhreinstellenv+0x400>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    328e:	80 83       	st	Z, r24
    3290:	d5 c1       	rjmp	.+938    	; 0x363c <_Z13uhreinstellenv+0x7aa>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    3292:	f2 01       	movw	r30, r4
    3294:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    3296:	8b e0       	ldi	r24, 0x0B	; 11
    3298:	e8 e1       	ldi	r30, 0x18	; 24
    329a:	f3 e0       	ldi	r31, 0x03	; 3
    329c:	a7 2d       	mov	r26, r7
    329e:	b8 2d       	mov	r27, r8
    32a0:	01 90       	ld	r0, Z+
    32a2:	0d 92       	st	X+, r0
    32a4:	8a 95       	dec	r24
    32a6:	e1 f7       	brne	.-8      	; 0x32a0 <_Z13uhreinstellenv+0x40e>
    32a8:	2d 88       	ldd	r2, Y+21	; 0x15
    32aa:	3e 88       	ldd	r3, Y+22	; 0x16
    32ac:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    32ae:	f1 01       	movw	r30, r2
    32b0:	61 91       	ld	r22, Z+
    32b2:	1f 01       	movw	r2, r30
    32b4:	28 e3       	ldi	r18, 0x38	; 56
    32b6:	41 2f       	mov	r20, r17
    32b8:	8d e7       	ldi	r24, 0x7D	; 125
    32ba:	93 e0       	ldi	r25, 0x03	; 3
    32bc:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    32c0:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    32c2:	1c 33       	cpi	r17, 0x3C	; 60
    32c4:	a1 f7       	brne	.-24     	; 0x32ae <_Z13uhreinstellenv+0x41c>
    32c6:	98 c1       	rjmp	.+816    	; 0x35f8 <_Z13uhreinstellenv+0x766>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    32c8:	8c e7       	ldi	r24, 0x7C	; 124
    32ca:	93 e0       	ldi	r25, 0x03	; 3
    32cc:	0e 94 62 24 	call	0x48c4	; 0x48c4 <_ZN9Interface17ZahlenausTastaturEv>
    32d0:	88 0f       	add	r24, r24
    32d2:	98 2f       	mov	r25, r24
    32d4:	99 0f       	add	r25, r25
    32d6:	99 0f       	add	r25, r25
    32d8:	89 0f       	add	r24, r25
				if(rtc.Monat>=13){
    32da:	8d 30       	cpi	r24, 0x0D	; 13
    32dc:	18 f4       	brcc	.+6      	; 0x32e4 <_Z13uhreinstellenv+0x452>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    32de:	f6 01       	movw	r30, r12
    32e0:	80 83       	st	Z, r24
    32e2:	ac c1       	rjmp	.+856    	; 0x363c <_Z13uhreinstellenv+0x7aa>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    32e4:	f6 01       	movw	r30, r12
    32e6:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    32e8:	8d e0       	ldi	r24, 0x0D	; 13
    32ea:	e3 e2       	ldi	r30, 0x23	; 35
    32ec:	f3 e0       	ldi	r31, 0x03	; 3
    32ee:	a7 2d       	mov	r26, r7
    32f0:	b8 2d       	mov	r27, r8
    32f2:	01 90       	ld	r0, Z+
    32f4:	0d 92       	st	X+, r0
    32f6:	8a 95       	dec	r24
    32f8:	e1 f7       	brne	.-8      	; 0x32f2 <_Z13uhreinstellenv+0x460>
    32fa:	2d 88       	ldd	r2, Y+21	; 0x15
    32fc:	3e 88       	ldd	r3, Y+22	; 0x16
    32fe:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3300:	f1 01       	movw	r30, r2
    3302:	61 91       	ld	r22, Z+
    3304:	1f 01       	movw	r2, r30
    3306:	28 e3       	ldi	r18, 0x38	; 56
    3308:	41 2f       	mov	r20, r17
    330a:	8d e7       	ldi	r24, 0x7D	; 125
    330c:	93 e0       	ldi	r25, 0x03	; 3
    330e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3312:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3314:	18 34       	cpi	r17, 0x48	; 72
    3316:	a1 f7       	brne	.-24     	; 0x3300 <_Z13uhreinstellenv+0x46e>
    3318:	74 c1       	rjmp	.+744    	; 0x3602 <_Z13uhreinstellenv+0x770>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    331a:	8c e7       	ldi	r24, 0x7C	; 124
    331c:	93 e0       	ldi	r25, 0x03	; 3
    331e:	0e 94 62 24 	call	0x48c4	; 0x48c4 <_ZN9Interface17ZahlenausTastaturEv>
    3322:	f6 01       	movw	r30, r12
    3324:	20 81       	ld	r18, Z
    3326:	90 e0       	ldi	r25, 0x00	; 0
    3328:	82 0f       	add	r24, r18
    332a:	91 1d       	adc	r25, r1
				if(rtc.Monat>=13){
    332c:	8d 30       	cpi	r24, 0x0D	; 13
    332e:	10 f4       	brcc	.+4      	; 0x3334 <_Z13uhreinstellenv+0x4a2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    3330:	80 83       	st	Z, r24
    3332:	1e c0       	rjmp	.+60     	; 0x3370 <_Z13uhreinstellenv+0x4de>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    3334:	f6 01       	movw	r30, r12
    3336:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    3338:	8d e0       	ldi	r24, 0x0D	; 13
    333a:	e3 e2       	ldi	r30, 0x23	; 35
    333c:	f3 e0       	ldi	r31, 0x03	; 3
    333e:	a7 2d       	mov	r26, r7
    3340:	b8 2d       	mov	r27, r8
    3342:	01 90       	ld	r0, Z+
    3344:	0d 92       	st	X+, r0
    3346:	8a 95       	dec	r24
    3348:	e1 f7       	brne	.-8      	; 0x3342 <_Z13uhreinstellenv+0x4b0>
    334a:	2d 88       	ldd	r2, Y+21	; 0x15
    334c:	3e 88       	ldd	r3, Y+22	; 0x16
    334e:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3350:	f1 01       	movw	r30, r2
    3352:	61 91       	ld	r22, Z+
    3354:	1f 01       	movw	r2, r30
    3356:	28 e3       	ldi	r18, 0x38	; 56
    3358:	41 2f       	mov	r20, r17
    335a:	8d e7       	ldi	r24, 0x7D	; 125
    335c:	93 e0       	ldi	r25, 0x03	; 3
    335e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3362:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3364:	18 34       	cpi	r17, 0x48	; 72
    3366:	a1 f7       	brne	.-24     	; 0x3350 <_Z13uhreinstellenv+0x4be>
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    3368:	0f 2e       	mov	r0, r31
    336a:	f5 e0       	ldi	r31, 0x05	; 5
    336c:	9f 2e       	mov	r9, r31
    336e:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
    3370:	f6 01       	movw	r30, r12
    3372:	90 81       	ld	r25, Z
    3374:	89 2f       	mov	r24, r25
    3376:	8d 7f       	andi	r24, 0xFD	; 253
    3378:	84 30       	cpi	r24, 0x04	; 4
    337a:	11 f0       	breq	.+4      	; 0x3380 <_Z13uhreinstellenv+0x4ee>
    337c:	89 30       	cpi	r24, 0x09	; 9
    337e:	09 f5       	brne	.+66     	; 0x33c2 <_Z13uhreinstellenv+0x530>
					if(rtc.Tag>=31){
    3380:	f2 01       	movw	r30, r4
    3382:	80 81       	ld	r24, Z
    3384:	8f 31       	cpi	r24, 0x1F	; 31
    3386:	08 f4       	brcc	.+2      	; 0x338a <_Z13uhreinstellenv+0x4f8>
    3388:	ea c0       	rjmp	.+468    	; 0x355e <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    338a:	10 82       	st	Z, r1
						rtc.Monat=0;
    338c:	f6 01       	movw	r30, r12
    338e:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    3390:	8b e0       	ldi	r24, 0x0B	; 11
    3392:	e8 e1       	ldi	r30, 0x18	; 24
    3394:	f3 e0       	ldi	r31, 0x03	; 3
    3396:	a7 2d       	mov	r26, r7
    3398:	b8 2d       	mov	r27, r8
    339a:	01 90       	ld	r0, Z+
    339c:	0d 92       	st	X+, r0
    339e:	8a 95       	dec	r24
    33a0:	e1 f7       	brne	.-8      	; 0x339a <_Z13uhreinstellenv+0x508>
    33a2:	2d 88       	ldd	r2, Y+21	; 0x15
    33a4:	3e 88       	ldd	r3, Y+22	; 0x16
    33a6:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    33a8:	f1 01       	movw	r30, r2
    33aa:	61 91       	ld	r22, Z+
    33ac:	1f 01       	movw	r2, r30
    33ae:	28 e3       	ldi	r18, 0x38	; 56
    33b0:	41 2f       	mov	r20, r17
    33b2:	8d e7       	ldi	r24, 0x7D	; 125
    33b4:	93 e0       	ldi	r25, 0x03	; 3
    33b6:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    33ba:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    33bc:	1c 33       	cpi	r17, 0x3C	; 60
    33be:	a1 f7       	brne	.-24     	; 0x33a8 <_Z13uhreinstellenv+0x516>
    33c0:	25 c1       	rjmp	.+586    	; 0x360c <_Z13uhreinstellenv+0x77a>
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
						}
					}
				}
				else if(rtc.Monat==2){
    33c2:	92 30       	cpi	r25, 0x02	; 2
    33c4:	09 f0       	breq	.+2      	; 0x33c8 <_Z13uhreinstellenv+0x536>
    33c6:	cb c0       	rjmp	.+406    	; 0x355e <_Z13uhreinstellenv+0x6cc>
					if(rtc.Tag>=30){
    33c8:	f2 01       	movw	r30, r4
    33ca:	80 81       	ld	r24, Z
    33cc:	8e 31       	cpi	r24, 0x1E	; 30
    33ce:	08 f4       	brcc	.+2      	; 0x33d2 <_Z13uhreinstellenv+0x540>
    33d0:	c6 c0       	rjmp	.+396    	; 0x355e <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    33d2:	10 82       	st	Z, r1
						rtc.Monat=0;
    33d4:	f6 01       	movw	r30, r12
    33d6:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    33d8:	8b e0       	ldi	r24, 0x0B	; 11
    33da:	e8 e1       	ldi	r30, 0x18	; 24
    33dc:	f3 e0       	ldi	r31, 0x03	; 3
    33de:	a7 2d       	mov	r26, r7
    33e0:	b8 2d       	mov	r27, r8
    33e2:	01 90       	ld	r0, Z+
    33e4:	0d 92       	st	X+, r0
    33e6:	8a 95       	dec	r24
    33e8:	e1 f7       	brne	.-8      	; 0x33e2 <_Z13uhreinstellenv+0x550>
    33ea:	2d 88       	ldd	r2, Y+21	; 0x15
    33ec:	3e 88       	ldd	r3, Y+22	; 0x16
    33ee:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    33f0:	f1 01       	movw	r30, r2
    33f2:	61 91       	ld	r22, Z+
    33f4:	1f 01       	movw	r2, r30
    33f6:	28 e3       	ldi	r18, 0x38	; 56
    33f8:	41 2f       	mov	r20, r17
    33fa:	8d e7       	ldi	r24, 0x7D	; 125
    33fc:	93 e0       	ldi	r25, 0x03	; 3
    33fe:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3402:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    3404:	1c 33       	cpi	r17, 0x3C	; 60
    3406:	a1 f7       	brne	.-24     	; 0x33f0 <_Z13uhreinstellenv+0x55e>
    3408:	06 c1       	rjmp	.+524    	; 0x3616 <_Z13uhreinstellenv+0x784>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    340a:	8c e7       	ldi	r24, 0x7C	; 124
    340c:	93 e0       	ldi	r25, 0x03	; 3
    340e:	0e 94 62 24 	call	0x48c4	; 0x48c4 <_ZN9Interface17ZahlenausTastaturEv>
    3412:	88 0f       	add	r24, r24
    3414:	98 2f       	mov	r25, r24
    3416:	99 0f       	add	r25, r25
    3418:	99 0f       	add	r25, r25
    341a:	89 0f       	add	r24, r25
				if(rtc.Jahr>=50){
    341c:	82 33       	cpi	r24, 0x32	; 50
    341e:	20 f4       	brcc	.+8      	; 0x3428 <_Z13uhreinstellenv+0x596>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    3420:	e5 e9       	ldi	r30, 0x95	; 149
    3422:	f7 e0       	ldi	r31, 0x07	; 7
    3424:	80 83       	st	Z, r24
    3426:	0a c1       	rjmp	.+532    	; 0x363c <_Z13uhreinstellenv+0x7aa>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    3428:	e5 e9       	ldi	r30, 0x95	; 149
    342a:	f7 e0       	ldi	r31, 0x07	; 7
    342c:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    342e:	8c e0       	ldi	r24, 0x0C	; 12
    3430:	e0 e3       	ldi	r30, 0x30	; 48
    3432:	f3 e0       	ldi	r31, 0x03	; 3
    3434:	a7 2d       	mov	r26, r7
    3436:	b8 2d       	mov	r27, r8
    3438:	01 90       	ld	r0, Z+
    343a:	0d 92       	st	X+, r0
    343c:	8a 95       	dec	r24
    343e:	e1 f7       	brne	.-8      	; 0x3438 <_Z13uhreinstellenv+0x5a6>
    3440:	2d 88       	ldd	r2, Y+21	; 0x15
    3442:	3e 88       	ldd	r3, Y+22	; 0x16
    3444:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3446:	f1 01       	movw	r30, r2
    3448:	61 91       	ld	r22, Z+
    344a:	1f 01       	movw	r2, r30
    344c:	28 e3       	ldi	r18, 0x38	; 56
    344e:	41 2f       	mov	r20, r17
    3450:	8d e7       	ldi	r24, 0x7D	; 125
    3452:	93 e0       	ldi	r25, 0x03	; 3
    3454:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3458:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    345a:	12 34       	cpi	r17, 0x42	; 66
    345c:	a1 f7       	brne	.-24     	; 0x3446 <_Z13uhreinstellenv+0x5b4>
    345e:	e0 c0       	rjmp	.+448    	; 0x3620 <_Z13uhreinstellenv+0x78e>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    3460:	8c e7       	ldi	r24, 0x7C	; 124
    3462:	93 e0       	ldi	r25, 0x03	; 3
    3464:	0e 94 62 24 	call	0x48c4	; 0x48c4 <_ZN9Interface17ZahlenausTastaturEv>
    3468:	e5 e9       	ldi	r30, 0x95	; 149
    346a:	f7 e0       	ldi	r31, 0x07	; 7
    346c:	20 81       	ld	r18, Z
    346e:	90 e0       	ldi	r25, 0x00	; 0
    3470:	82 0f       	add	r24, r18
    3472:	91 1d       	adc	r25, r1
				if(rtc.Jahr>=50){
    3474:	82 33       	cpi	r24, 0x32	; 50
    3476:	10 f4       	brcc	.+4      	; 0x347c <_Z13uhreinstellenv+0x5ea>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    3478:	80 83       	st	Z, r24
    347a:	1f c0       	rjmp	.+62     	; 0x34ba <_Z13uhreinstellenv+0x628>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    347c:	e5 e9       	ldi	r30, 0x95	; 149
    347e:	f7 e0       	ldi	r31, 0x07	; 7
    3480:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    3482:	8c e0       	ldi	r24, 0x0C	; 12
    3484:	e0 e3       	ldi	r30, 0x30	; 48
    3486:	f3 e0       	ldi	r31, 0x03	; 3
    3488:	a7 2d       	mov	r26, r7
    348a:	b8 2d       	mov	r27, r8
    348c:	01 90       	ld	r0, Z+
    348e:	0d 92       	st	X+, r0
    3490:	8a 95       	dec	r24
    3492:	e1 f7       	brne	.-8      	; 0x348c <_Z13uhreinstellenv+0x5fa>
    3494:	2d 88       	ldd	r2, Y+21	; 0x15
    3496:	3e 88       	ldd	r3, Y+22	; 0x16
    3498:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    349a:	f1 01       	movw	r30, r2
    349c:	61 91       	ld	r22, Z+
    349e:	1f 01       	movw	r2, r30
    34a0:	28 e3       	ldi	r18, 0x38	; 56
    34a2:	41 2f       	mov	r20, r17
    34a4:	8d e7       	ldi	r24, 0x7D	; 125
    34a6:	93 e0       	ldi	r25, 0x03	; 3
    34a8:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    34ac:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    34ae:	12 34       	cpi	r17, 0x42	; 66
    34b0:	a1 f7       	brne	.-24     	; 0x349a <_Z13uhreinstellenv+0x608>
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    34b2:	0f 2e       	mov	r0, r31
    34b4:	f7 e0       	ldi	r31, 0x07	; 7
    34b6:	9f 2e       	mov	r9, r31
    34b8:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==2){
    34ba:	f6 01       	movw	r30, r12
    34bc:	80 81       	ld	r24, Z
    34be:	82 30       	cpi	r24, 0x02	; 2
    34c0:	09 f0       	breq	.+2      	; 0x34c4 <_Z13uhreinstellenv+0x632>
    34c2:	4d c0       	rjmp	.+154    	; 0x355e <_Z13uhreinstellenv+0x6cc>
					if(rtc.Jahr%4==0){
    34c4:	e5 e9       	ldi	r30, 0x95	; 149
    34c6:	f7 e0       	ldi	r31, 0x07	; 7
    34c8:	80 81       	ld	r24, Z
    34ca:	83 70       	andi	r24, 0x03	; 3
    34cc:	21 f5       	brne	.+72     	; 0x3516 <_Z13uhreinstellenv+0x684>
						if (rtc.Tag>=30)
    34ce:	f2 01       	movw	r30, r4
    34d0:	80 81       	ld	r24, Z
    34d2:	8e 31       	cpi	r24, 0x1E	; 30
    34d4:	08 f4       	brcc	.+2      	; 0x34d8 <_Z13uhreinstellenv+0x646>
    34d6:	43 c0       	rjmp	.+134    	; 0x355e <_Z13uhreinstellenv+0x6cc>
						{
							rtc.Tag=0;
    34d8:	10 82       	st	Z, r1
							rtc.Monat=0;
    34da:	f6 01       	movw	r30, r12
    34dc:	10 82       	st	Z, r1
							rtc.Jahr=0;
    34de:	e5 e9       	ldi	r30, 0x95	; 149
    34e0:	f7 e0       	ldi	r31, 0x07	; 7
    34e2:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    34e4:	8b e0       	ldi	r24, 0x0B	; 11
    34e6:	e8 e1       	ldi	r30, 0x18	; 24
    34e8:	f3 e0       	ldi	r31, 0x03	; 3
    34ea:	a7 2d       	mov	r26, r7
    34ec:	b8 2d       	mov	r27, r8
    34ee:	01 90       	ld	r0, Z+
    34f0:	0d 92       	st	X+, r0
    34f2:	8a 95       	dec	r24
    34f4:	e1 f7       	brne	.-8      	; 0x34ee <_Z13uhreinstellenv+0x65c>
    34f6:	2d 88       	ldd	r2, Y+21	; 0x15
    34f8:	3e 88       	ldd	r3, Y+22	; 0x16
    34fa:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    34fc:	f1 01       	movw	r30, r2
    34fe:	61 91       	ld	r22, Z+
    3500:	1f 01       	movw	r2, r30
    3502:	28 e3       	ldi	r18, 0x38	; 56
    3504:	41 2f       	mov	r20, r17
    3506:	8d e7       	ldi	r24, 0x7D	; 125
    3508:	93 e0       	ldi	r25, 0x03	; 3
    350a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    350e:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    3510:	1c 33       	cpi	r17, 0x3C	; 60
    3512:	a1 f7       	brne	.-24     	; 0x34fc <_Z13uhreinstellenv+0x66a>
    3514:	8a c0       	rjmp	.+276    	; 0x362a <_Z13uhreinstellenv+0x798>
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
							}
						}
					}
					else{
						if(rtc.Tag>=29){
    3516:	f2 01       	movw	r30, r4
    3518:	80 81       	ld	r24, Z
    351a:	8d 31       	cpi	r24, 0x1D	; 29
    351c:	00 f1       	brcs	.+64     	; 0x355e <_Z13uhreinstellenv+0x6cc>
							rtc.Tag=0;
    351e:	10 82       	st	Z, r1
							rtc.Monat=0;
    3520:	f6 01       	movw	r30, r12
    3522:	10 82       	st	Z, r1
							rtc.Jahr=0;
    3524:	e5 e9       	ldi	r30, 0x95	; 149
    3526:	f7 e0       	ldi	r31, 0x07	; 7
    3528:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    352a:	8b e0       	ldi	r24, 0x0B	; 11
    352c:	e8 e1       	ldi	r30, 0x18	; 24
    352e:	f3 e0       	ldi	r31, 0x03	; 3
    3530:	a7 2d       	mov	r26, r7
    3532:	b8 2d       	mov	r27, r8
    3534:	01 90       	ld	r0, Z+
    3536:	0d 92       	st	X+, r0
    3538:	8a 95       	dec	r24
    353a:	e1 f7       	brne	.-8      	; 0x3534 <_Z13uhreinstellenv+0x6a2>
    353c:	2d 88       	ldd	r2, Y+21	; 0x15
    353e:	3e 88       	ldd	r3, Y+22	; 0x16
    3540:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3542:	f1 01       	movw	r30, r2
    3544:	61 91       	ld	r22, Z+
    3546:	1f 01       	movw	r2, r30
    3548:	28 e3       	ldi	r18, 0x38	; 56
    354a:	41 2f       	mov	r20, r17
    354c:	8d e7       	ldi	r24, 0x7D	; 125
    354e:	93 e0       	ldi	r25, 0x03	; 3
    3550:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3554:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    3556:	1c 33       	cpi	r17, 0x3C	; 60
    3558:	a1 f7       	brne	.-24     	; 0x3542 <_Z13uhreinstellenv+0x6b0>
    355a:	6c c0       	rjmp	.+216    	; 0x3634 <_Z13uhreinstellenv+0x7a2>
						}
					}
				}
				break;
			default:
				pos++;
    355c:	93 94       	inc	r9
				break;
		}
		pos++;
    355e:	93 94       	inc	r9
	
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
    3560:	fa e0       	ldi	r31, 0x0A	; 10
    3562:	f9 15       	cp	r31, r9
    3564:	08 f0       	brcs	.+2      	; 0x3568 <_Z13uhreinstellenv+0x6d6>
    3566:	d4 cc       	rjmp	.-1624   	; 0x2f10 <_Z13uhreinstellenv+0x7e>
				break;
		}
		pos++;
	}
	
	rtc.Sekunden		= 0;
    3568:	10 92 90 07 	sts	0x0790, r1
	rtc.HundSekunden	= 0;
    356c:	10 92 91 07 	sts	0x0791, r1
	//speichern der neuen Zeit im EEPROM
	EEPROM_Write(EEMINUTEN,rtc.Minuten);
    3570:	60 91 8f 07 	lds	r22, 0x078F
    3574:	80 e0       	ldi	r24, 0x00	; 0
    3576:	90 e0       	ldi	r25, 0x00	; 0
    3578:	0e 94 bc 09 	call	0x1378	; 0x1378 <_Z12EEPROM_Writejh>
	EEPROM_Write(EESTUNDEN,rtc.Stunden);
    357c:	60 91 8e 07 	lds	r22, 0x078E
    3580:	81 e0       	ldi	r24, 0x01	; 1
    3582:	90 e0       	ldi	r25, 0x00	; 0
    3584:	0e 94 bc 09 	call	0x1378	; 0x1378 <_Z12EEPROM_Writejh>
	EEPROM_Write(EETAGE,rtc.Tag);
    3588:	60 91 92 07 	lds	r22, 0x0792
    358c:	82 e0       	ldi	r24, 0x02	; 2
    358e:	90 e0       	ldi	r25, 0x00	; 0
    3590:	0e 94 bc 09 	call	0x1378	; 0x1378 <_Z12EEPROM_Writejh>
	EEPROM_Write(EEMONAT,rtc.Monat);
    3594:	60 91 94 07 	lds	r22, 0x0794
    3598:	83 e0       	ldi	r24, 0x03	; 3
    359a:	90 e0       	ldi	r25, 0x00	; 0
    359c:	0e 94 bc 09 	call	0x1378	; 0x1378 <_Z12EEPROM_Writejh>
	EEPROM_Write(EEJAHR,rtc.Jahr);
    35a0:	60 91 95 07 	lds	r22, 0x0795
    35a4:	84 e0       	ldi	r24, 0x04	; 4
    35a6:	90 e0       	ldi	r25, 0x00	; 0
    35a8:	0e 94 bc 09 	call	0x1378	; 0x1378 <_Z12EEPROM_Writejh>
	
	oled.clearFrame();
    35ac:	8d e7       	ldi	r24, 0x7D	; 125
    35ae:	93 e0       	ldi	r25, 0x03	; 3
    35b0:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	rtc.ausgabedatumneu();
    35b4:	8e e7       	ldi	r24, 0x7E	; 126
    35b6:	97 e0       	ldi	r25, 0x07	; 7
    35b8:	0e 94 fa 2a 	call	0x55f4	; 0x55f4 <_ZN3RTC15ausgabedatumneuEv>
	rtc.ausgabezeitneu();
    35bc:	8e e7       	ldi	r24, 0x7E	; 126
    35be:	97 e0       	ldi	r25, 0x07	; 7
    35c0:	0e 94 c1 2a 	call	0x5582	; 0x5582 <_ZN3RTC14ausgabezeitneuEv>
	rtc.RTCstart();
    35c4:	8e e7       	ldi	r24, 0x7E	; 126
    35c6:	97 e0       	ldi	r25, 0x07	; 7
    35c8:	0e 94 da 2b 	call	0x57b4	; 0x57b4 <_ZN3RTC8RTCstartEv>
    35cc:	39 c0       	rjmp	.+114    	; 0x3640 <_Z13uhreinstellenv+0x7ae>

		oled.sendFrame();
		oled.clearFrame();
		switch (pos) {
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    35ce:	ee e8       	ldi	r30, 0x8E	; 142
    35d0:	f7 e0       	ldi	r31, 0x07	; 7
    35d2:	80 83       	st	Z, r24
    35d4:	33 c0       	rjmp	.+102    	; 0x363c <_Z13uhreinstellenv+0x7aa>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    35d6:	99 24       	eor	r9, r9
    35d8:	9a 94       	dec	r9
    35da:	30 c0       	rjmp	.+96     	; 0x363c <_Z13uhreinstellenv+0x7aa>
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    35dc:	99 24       	eor	r9, r9
    35de:	9a 94       	dec	r9
    35e0:	2d c0       	rjmp	.+90     	; 0x363c <_Z13uhreinstellenv+0x7aa>
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    35e2:	99 24       	eor	r9, r9
    35e4:	93 94       	inc	r9
    35e6:	2a c0       	rjmp	.+84     	; 0x363c <_Z13uhreinstellenv+0x7aa>
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    35e8:	99 24       	eor	r9, r9
    35ea:	93 94       	inc	r9
    35ec:	27 c0       	rjmp	.+78     	; 0x363c <_Z13uhreinstellenv+0x7aa>
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    35ee:	0f 2e       	mov	r0, r31
    35f0:	f3 e0       	ldi	r31, 0x03	; 3
    35f2:	9f 2e       	mov	r9, r31
    35f4:	f0 2d       	mov	r31, r0
    35f6:	22 c0       	rjmp	.+68     	; 0x363c <_Z13uhreinstellenv+0x7aa>
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    35f8:	0f 2e       	mov	r0, r31
    35fa:	f3 e0       	ldi	r31, 0x03	; 3
    35fc:	9f 2e       	mov	r9, r31
    35fe:	f0 2d       	mov	r31, r0
    3600:	1d c0       	rjmp	.+58     	; 0x363c <_Z13uhreinstellenv+0x7aa>
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    3602:	0f 2e       	mov	r0, r31
    3604:	f5 e0       	ldi	r31, 0x05	; 5
    3606:	9f 2e       	mov	r9, r31
    3608:	f0 2d       	mov	r31, r0
    360a:	18 c0       	rjmp	.+48     	; 0x363c <_Z13uhreinstellenv+0x7aa>
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    360c:	0f 2e       	mov	r0, r31
    360e:	f3 e0       	ldi	r31, 0x03	; 3
    3610:	9f 2e       	mov	r9, r31
    3612:	f0 2d       	mov	r31, r0
    3614:	13 c0       	rjmp	.+38     	; 0x363c <_Z13uhreinstellenv+0x7aa>
				}
				else if(rtc.Monat==2){
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    3616:	0f 2e       	mov	r0, r31
    3618:	f3 e0       	ldi	r31, 0x03	; 3
    361a:	9f 2e       	mov	r9, r31
    361c:	f0 2d       	mov	r31, r0
    361e:	0e c0       	rjmp	.+28     	; 0x363c <_Z13uhreinstellenv+0x7aa>
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    3620:	0f 2e       	mov	r0, r31
    3622:	f7 e0       	ldi	r31, 0x07	; 7
    3624:	9f 2e       	mov	r9, r31
    3626:	f0 2d       	mov	r31, r0
    3628:	09 c0       	rjmp	.+18     	; 0x363c <_Z13uhreinstellenv+0x7aa>
						if (rtc.Tag>=30)
						{
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    362a:	0f 2e       	mov	r0, r31
    362c:	f3 e0       	ldi	r31, 0x03	; 3
    362e:	9f 2e       	mov	r9, r31
    3630:	f0 2d       	mov	r31, r0
    3632:	04 c0       	rjmp	.+8      	; 0x363c <_Z13uhreinstellenv+0x7aa>
					else{
						if(rtc.Tag>=29){
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    3634:	0f 2e       	mov	r0, r31
    3636:	f3 e0       	ldi	r31, 0x03	; 3
    3638:	9f 2e       	mov	r9, r31
    363a:	f0 2d       	mov	r31, r0
				break;
			default:
				pos++;
				break;
		}
		pos++;
    363c:	93 94       	inc	r9
    363e:	68 cc       	rjmp	.-1840   	; 0x2f10 <_Z13uhreinstellenv+0x7e>
	
	oled.clearFrame();
	rtc.ausgabedatumneu();
	rtc.ausgabezeitneu();
	rtc.RTCstart();
}
    3640:	66 96       	adiw	r28, 0x16	; 22
    3642:	0f b6       	in	r0, 0x3f	; 63
    3644:	f8 94       	cli
    3646:	de bf       	out	0x3e, r29	; 62
    3648:	0f be       	out	0x3f, r0	; 63
    364a:	cd bf       	out	0x3d, r28	; 61
    364c:	df 91       	pop	r29
    364e:	cf 91       	pop	r28
    3650:	1f 91       	pop	r17
    3652:	0f 91       	pop	r16
    3654:	ff 90       	pop	r15
    3656:	ef 90       	pop	r14
    3658:	df 90       	pop	r13
    365a:	cf 90       	pop	r12
    365c:	bf 90       	pop	r11
    365e:	af 90       	pop	r10
    3660:	9f 90       	pop	r9
    3662:	8f 90       	pop	r8
    3664:	7f 90       	pop	r7
    3666:	6f 90       	pop	r6
    3668:	5f 90       	pop	r5
    366a:	4f 90       	pop	r4
    366c:	3f 90       	pop	r3
    366e:	2f 90       	pop	r2
    3670:	08 95       	ret

00003672 <__vector_11>:
//Einbau der Festspeicherung von Einstellungswerten im EEPROM
#include "EEPROM.h"
//Ausgelagerte Sammlung der einzelnen Seitenlayouts
#include "Seiten.h"

ISR(TIMER2_OVF_vect){	//Vektor fuer die RTC
    3672:	1f 92       	push	r1
    3674:	0f 92       	push	r0
    3676:	0f b6       	in	r0, 0x3f	; 63
    3678:	0f 92       	push	r0
    367a:	11 24       	eor	r1, r1
    367c:	0b b6       	in	r0, 0x3b	; 59
    367e:	0f 92       	push	r0
    3680:	8f 93       	push	r24
    3682:	ef 93       	push	r30
    3684:	ff 93       	push	r31
	//TCNT2=TIMER2RTCTIME;
	rtc.Sekunden++;
    3686:	e0 e9       	ldi	r30, 0x90	; 144
    3688:	f7 e0       	ldi	r31, 0x07	; 7
    368a:	80 81       	ld	r24, Z
    368c:	8f 5f       	subi	r24, 0xFF	; 255
    368e:	80 83       	st	Z, r24
	rtc.interupts|= (1<<sekundeninterupt);
    3690:	e6 e9       	ldi	r30, 0x96	; 150
    3692:	f7 e0       	ldi	r31, 0x07	; 7
    3694:	80 81       	ld	r24, Z
    3696:	82 60       	ori	r24, 0x02	; 2
    3698:	80 83       	st	Z, r24
}
    369a:	ff 91       	pop	r31
    369c:	ef 91       	pop	r30
    369e:	8f 91       	pop	r24
    36a0:	0f 90       	pop	r0
    36a2:	0b be       	out	0x3b, r0	; 59
    36a4:	0f 90       	pop	r0
    36a6:	0f be       	out	0x3f, r0	; 63
    36a8:	0f 90       	pop	r0
    36aa:	1f 90       	pop	r1
    36ac:	18 95       	reti

000036ae <_Z15geschwindigkeitf>:

double geschw;
double strecke;
double maxgeschw;
uint32_t Fahrtzeit;
void geschwindigkeit(float durch){
    36ae:	cf 92       	push	r12
    36b0:	df 92       	push	r13
    36b2:	ef 92       	push	r14
    36b4:	ff 92       	push	r15
    36b6:	cf 93       	push	r28
    36b8:	df 93       	push	r29
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
    36ba:	e4 e8       	ldi	r30, 0x84	; 132
    36bc:	f0 e0       	ldi	r31, 0x00	; 0
    36be:	c0 81       	ld	r28, Z
    36c0:	d1 81       	ldd	r29, Z+1	; 0x01
	TCNT1 = 0;
    36c2:	11 82       	std	Z+1, r1	; 0x01
    36c4:	10 82       	st	Z, r1
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
    36c6:	2b ed       	ldi	r18, 0xDB	; 219
    36c8:	3f e0       	ldi	r19, 0x0F	; 15
    36ca:	49 e4       	ldi	r20, 0x49	; 73
    36cc:	50 e4       	ldi	r21, 0x40	; 64
    36ce:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    36d2:	26 e6       	ldi	r18, 0x66	; 102
    36d4:	36 e6       	ldi	r19, 0x66	; 102
    36d6:	46 e6       	ldi	r20, 0x66	; 102
    36d8:	50 e4       	ldi	r21, 0x40	; 64
    36da:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    36de:	6b 01       	movw	r12, r22
    36e0:	7c 01       	movw	r14, r24
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
	TCNT1 = 0;
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
    36e2:	be 01       	movw	r22, r28
    36e4:	80 e0       	ldi	r24, 0x00	; 0
    36e6:	90 e0       	ldi	r25, 0x00	; 0
    36e8:	0e 94 a1 2d 	call	0x5b42	; 0x5b42 <__floatunsisf>
    36ec:	20 e0       	ldi	r18, 0x00	; 0
    36ee:	30 e0       	ldi	r19, 0x00	; 0
    36f0:	40 e0       	ldi	r20, 0x00	; 0
    36f2:	5e e3       	ldi	r21, 0x3E	; 62
    36f4:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    36f8:	2d eb       	ldi	r18, 0xBD	; 189
    36fa:	37 e3       	ldi	r19, 0x37	; 55
    36fc:	46 e8       	ldi	r20, 0x86	; 134
    36fe:	5a e3       	ldi	r21, 0x3A	; 58
    3700:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    3704:	2a e0       	ldi	r18, 0x0A	; 10
    3706:	37 ed       	ldi	r19, 0xD7	; 215
    3708:	43 ea       	ldi	r20, 0xA3	; 163
    370a:	5b e3       	ldi	r21, 0x3B	; 59
    370c:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
    3710:	9b 01       	movw	r18, r22
    3712:	ac 01       	movw	r20, r24
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
    3714:	c7 01       	movw	r24, r14
    3716:	b6 01       	movw	r22, r12
    3718:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
    371c:	20 91 48 03 	lds	r18, 0x0348
    3720:	30 91 49 03 	lds	r19, 0x0349
    3724:	40 91 4a 03 	lds	r20, 0x034A
    3728:	50 91 4b 03 	lds	r21, 0x034B
    372c:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
	geschw /= 2.0;
    3730:	20 e0       	ldi	r18, 0x00	; 0
    3732:	30 e0       	ldi	r19, 0x00	; 0
    3734:	40 e0       	ldi	r20, 0x00	; 0
    3736:	5f e3       	ldi	r21, 0x3F	; 63
    3738:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    373c:	6b 01       	movw	r12, r22
    373e:	7c 01       	movw	r14, r24
	if (geschw >=160)
    3740:	20 e0       	ldi	r18, 0x00	; 0
    3742:	30 e0       	ldi	r19, 0x00	; 0
    3744:	40 e2       	ldi	r20, 0x20	; 32
    3746:	53 e4       	ldi	r21, 0x43	; 67
    3748:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__gesf2>
    374c:	88 23       	and	r24, r24
    374e:	4c f4       	brge	.+18     	; 0x3762 <_Z15geschwindigkeitf+0xb4>
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
	geschw /= 2.0;
    3750:	c0 92 48 03 	sts	0x0348, r12
    3754:	d0 92 49 03 	sts	0x0349, r13
    3758:	e0 92 4a 03 	sts	0x034A, r14
    375c:	f0 92 4b 03 	sts	0x034B, r15
    3760:	08 c0       	rjmp	.+16     	; 0x3772 <_Z15geschwindigkeitf+0xc4>
	if (geschw >=160)
	{
		geschw=0;
    3762:	10 92 48 03 	sts	0x0348, r1
    3766:	10 92 49 03 	sts	0x0349, r1
    376a:	10 92 4a 03 	sts	0x034A, r1
    376e:	10 92 4b 03 	sts	0x034B, r1
	}
}
    3772:	df 91       	pop	r29
    3774:	cf 91       	pop	r28
    3776:	ff 90       	pop	r15
    3778:	ef 90       	pop	r14
    377a:	df 90       	pop	r13
    377c:	cf 90       	pop	r12
    377e:	08 95       	ret

00003780 <_Z13reed_debouncePVhh>:

uint8_t reed_debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( (*port & (1 << pin)) )
    3780:	fc 01       	movw	r30, r24
    3782:	20 81       	ld	r18, Z
    3784:	30 e0       	ldi	r19, 0x00	; 0
    3786:	06 2e       	mov	r0, r22
    3788:	02 c0       	rjmp	.+4      	; 0x378e <_Z13reed_debouncePVhh+0xe>
    378a:	35 95       	asr	r19
    378c:	27 95       	ror	r18
    378e:	0a 94       	dec	r0
    3790:	e2 f7       	brpl	.-8      	; 0x378a <_Z13reed_debouncePVhh+0xa>
    3792:	20 ff       	sbrs	r18, 0
    3794:	17 c0       	rjmp	.+46     	; 0x37c4 <_Z13reed_debouncePVhh+0x44>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3796:	ef e0       	ldi	r30, 0x0F	; 15
    3798:	f7 e2       	ldi	r31, 0x27	; 39
    379a:	31 97       	sbiw	r30, 0x01	; 1
    379c:	f1 f7       	brne	.-4      	; 0x379a <_Z13reed_debouncePVhh+0x1a>
    379e:	00 c0       	rjmp	.+0      	; 0x37a0 <_Z13reed_debouncePVhh+0x20>
    37a0:	00 00       	nop
	{
		/* Pin wurde auf Masse gezogen, ms warten   */
		_delay_ms(REEDMS);
		if ( !(*port & (1 << pin)) )
    37a2:	fc 01       	movw	r30, r24
    37a4:	80 81       	ld	r24, Z
    37a6:	90 e0       	ldi	r25, 0x00	; 0
    37a8:	9c 01       	movw	r18, r24
    37aa:	02 c0       	rjmp	.+4      	; 0x37b0 <_Z13reed_debouncePVhh+0x30>
    37ac:	35 95       	asr	r19
    37ae:	27 95       	ror	r18
    37b0:	6a 95       	dec	r22
    37b2:	e2 f7       	brpl	.-8      	; 0x37ac <_Z13reed_debouncePVhh+0x2c>
    37b4:	20 fd       	sbrc	r18, 0
    37b6:	08 c0       	rjmp	.+16     	; 0x37c8 <_Z13reed_debouncePVhh+0x48>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    37b8:	32 e0       	ldi	r19, 0x02	; 2
    37ba:	3a 95       	dec	r19
    37bc:	f1 f7       	brne	.-4      	; 0x37ba <_Z13reed_debouncePVhh+0x3a>
    37be:	00 c0       	rjmp	.+0      	; 0x37c0 <_Z13reed_debouncePVhh+0x40>
		{
			/* Anwender Zeit zum Loslassen des Tasters geben */
			_delay_us(1);
			return 1;
    37c0:	81 e0       	ldi	r24, 0x01	; 1
    37c2:	08 95       	ret
		}
	}
	return 0;
    37c4:	80 e0       	ldi	r24, 0x00	; 0
    37c6:	08 95       	ret
    37c8:	80 e0       	ldi	r24, 0x00	; 0
}
    37ca:	08 95       	ret

000037cc <_Z15initialisierungv>:
    }
}

void initialisierung(){
	//nullen der Flagregister
	rtc.interupts=0;
    37cc:	10 92 96 07 	sts	0x0796, r1
	anzeige=0;
    37d0:	10 92 4e 03 	sts	0x034E, r1
    37d4:	10 92 4d 03 	sts	0x034D, r1
	pos=0;
    37d8:	10 92 4c 03 	sts	0x034C, r1
	//initialisieren des Zaehler fuer die Winkelgeschw sowie den Timer
	geschw=0;
    37dc:	10 92 48 03 	sts	0x0348, r1
    37e0:	10 92 49 03 	sts	0x0349, r1
    37e4:	10 92 4a 03 	sts	0x034A, r1
    37e8:	10 92 4b 03 	sts	0x034B, r1
	strecke = 0;
    37ec:	10 92 44 03 	sts	0x0344, r1
    37f0:	10 92 45 03 	sts	0x0345, r1
    37f4:	10 92 46 03 	sts	0x0346, r1
    37f8:	10 92 47 03 	sts	0x0347, r1
	maxgeschw = 0;
    37fc:	10 92 40 03 	sts	0x0340, r1
    3800:	10 92 41 03 	sts	0x0341, r1
    3804:	10 92 42 03 	sts	0x0342, r1
    3808:	10 92 43 03 	sts	0x0343, r1
	Fahrtzeit = 0;
    380c:	10 92 3c 03 	sts	0x033C, r1
    3810:	10 92 3d 03 	sts	0x033D, r1
    3814:	10 92 3e 03 	sts	0x033E, r1
    3818:	10 92 3f 03 	sts	0x033F, r1
	TCNT1=0;
    381c:	10 92 85 00 	sts	0x0085, r1
    3820:	10 92 84 00 	sts	0x0084, r1
	//Tastatur inm Contruktor initialisiert
	//Eingang fuer den Reedkontak schalten mit internem Pullup
	DDRA |= ((1<<PORTA6));
    3824:	0e 9a       	sbi	0x01, 6	; 1
	PORTA |= (1<<PORTA6);
    3826:	16 9a       	sbi	0x02, 6	; 2
	//Display
	oled.InitializeDisplay();
    3828:	8d e7       	ldi	r24, 0x7D	; 125
    382a:	93 e0       	ldi	r25, 0x03	; 3
    382c:	0e 94 2c 03 	call	0x658	; 0x658 <_ZN7Display17InitializeDisplayEv>
	//initialisierung wird im konstruktor vorgenommen
	oled.clearFrame();
    3830:	8d e7       	ldi	r24, 0x7D	; 125
    3832:	93 e0       	ldi	r25, 0x03	; 3
    3834:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	//HMC5883L initialisieren
	//kompass.initialize_HMC5883L();
	//initialisierung wird im Konstruktor erledigt
	
	//ADC Initialisieren auf CH0
	ADMUX = (1<<REFS0);
    3838:	80 e4       	ldi	r24, 0x40	; 64
    383a:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
    383e:	ea e7       	ldi	r30, 0x7A	; 122
    3840:	f0 e0       	ldi	r31, 0x00	; 0
    3842:	83 e0       	ldi	r24, 0x03	; 3
    3844:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN);
    3846:	80 81       	ld	r24, Z
    3848:	80 68       	ori	r24, 0x80	; 128
    384a:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
    384c:	80 81       	ld	r24, Z
    384e:	80 64       	ori	r24, 0x40	; 64
    3850:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC) ) {}
    3852:	80 81       	ld	r24, Z
    3854:	86 fd       	sbrc	r24, 6
    3856:	fd cf       	rjmp	.-6      	; 0x3852 <_Z15initialisierungv+0x86>
	(void) ADCW;
    3858:	80 91 78 00 	lds	r24, 0x0078
    385c:	90 91 79 00 	lds	r25, 0x0079
	//Wilkommensanzeige
	willkommenpage();
    3860:	0e 94 cf 09 	call	0x139e	; 0x139e <_Z14willkommenpagev>
	//Uhreinstellungen
	//uhreinstellen();
	//*************************************************
	//Nur Test, damit es schneller geht beim Start
	rtc.Sekunden= 0;
    3864:	10 92 90 07 	sts	0x0790, r1
	rtc.Minuten	= EEPROM_Read(EEMINUTEN);
    3868:	80 e0       	ldi	r24, 0x00	; 0
    386a:	90 e0       	ldi	r25, 0x00	; 0
    386c:	0e 94 c6 09 	call	0x138c	; 0x138c <_Z11EEPROM_Readj>
    3870:	80 93 8f 07 	sts	0x078F, r24
	rtc.Stunden	= EEPROM_Read(EESTUNDEN);
    3874:	81 e0       	ldi	r24, 0x01	; 1
    3876:	90 e0       	ldi	r25, 0x00	; 0
    3878:	0e 94 c6 09 	call	0x138c	; 0x138c <_Z11EEPROM_Readj>
    387c:	80 93 8e 07 	sts	0x078E, r24
	rtc.Tag		= EEPROM_Read(EETAGE);
    3880:	82 e0       	ldi	r24, 0x02	; 2
    3882:	90 e0       	ldi	r25, 0x00	; 0
    3884:	0e 94 c6 09 	call	0x138c	; 0x138c <_Z11EEPROM_Readj>
    3888:	80 93 92 07 	sts	0x0792, r24
	rtc.Monat	= EEPROM_Read(EEMONAT);
    388c:	83 e0       	ldi	r24, 0x03	; 3
    388e:	90 e0       	ldi	r25, 0x00	; 0
    3890:	0e 94 c6 09 	call	0x138c	; 0x138c <_Z11EEPROM_Readj>
    3894:	80 93 94 07 	sts	0x0794, r24
	rtc.Jahr	= EEPROM_Read(EEJAHR);
    3898:	84 e0       	ldi	r24, 0x04	; 4
    389a:	90 e0       	ldi	r25, 0x00	; 0
    389c:	0e 94 c6 09 	call	0x138c	; 0x138c <_Z11EEPROM_Readj>
    38a0:	80 93 95 07 	sts	0x0795, r24
	//rtc.dummyeinst();
	//*********************************
	rtc.RTCstart();
    38a4:	8e e7       	ldi	r24, 0x7E	; 126
    38a6:	97 e0       	ldi	r25, 0x07	; 7
    38a8:	0e 94 da 2b 	call	0x57b4	; 0x57b4 <_ZN3RTC8RTCstartEv>
	//ausgabe starten
	rtc.interupts|=(1<<minuteninterupt)|(1<<sekundeninterupt);
    38ac:	e6 e9       	ldi	r30, 0x96	; 150
    38ae:	f7 e0       	ldi	r31, 0x07	; 7
    38b0:	80 81       	ld	r24, Z
    38b2:	86 60       	ori	r24, 0x06	; 6
    38b4:	80 83       	st	Z, r24
	anzeige|=(1<<Uhrflaggross);
    38b6:	80 91 4d 03 	lds	r24, 0x034D
    38ba:	90 91 4e 03 	lds	r25, 0x034E
    38be:	80 62       	ori	r24, 0x20	; 32
    38c0:	90 93 4e 03 	sts	0x034E, r25
    38c4:	80 93 4d 03 	sts	0x034D, r24
	sei();
    38c8:	78 94       	sei
    38ca:	08 95       	ret

000038cc <_Z19maininterupthandlerv>:
	//interupt dierekt aus der rtc
	//if((rtc.interupts & (1<<hundinterupt))){
	//rtc.zeit();
	//rtc.interupts&=~(1<<hundinterupt);
	//}
	if ((anzeige&(1<<Fahradflag)))
    38cc:	80 91 4d 03 	lds	r24, 0x034D
    38d0:	80 ff       	sbrs	r24, 0
    38d2:	1f c0       	rjmp	.+62     	; 0x3912 <_Z19maininterupthandlerv+0x46>
	{
		//debounce Funktion fuer den Reedswitch
		if (reed_debounce(&PINA,PINA7))
    38d4:	67 e0       	ldi	r22, 0x07	; 7
    38d6:	80 e2       	ldi	r24, 0x20	; 32
    38d8:	90 e0       	ldi	r25, 0x00	; 0
    38da:	52 df       	rcall	.-348    	; 0x3780 <_Z13reed_debouncePVhh>
    38dc:	88 23       	and	r24, r24
    38de:	31 f0       	breq	.+12     	; 0x38ec <_Z19maininterupthandlerv+0x20>
		{
			//Durchmesser ist 28 Zoll
			geschwindigkeit(28.0*2.54/100.0);
    38e0:	63 e3       	ldi	r22, 0x33	; 51
    38e2:	71 e1       	ldi	r23, 0x11	; 17
    38e4:	86 e3       	ldi	r24, 0x36	; 54
    38e6:	9f e3       	ldi	r25, 0x3F	; 63
    38e8:	e2 de       	rcall	.-572    	; 0x36ae <_Z15geschwindigkeitf>
    38ea:	13 c0       	rjmp	.+38     	; 0x3912 <_Z19maininterupthandlerv+0x46>
		}
		//Hier mit werden geschwindigkeiten, die kleiner als 2.6km/h betragen gefiltert
		//Somit wird die letzte Geschwindigkeit nach 3 Sekunden geloescht
		//Das ist noch nicht die beste Variante
		else if (TCNT1>23437)
    38ec:	80 91 84 00 	lds	r24, 0x0084
    38f0:	90 91 85 00 	lds	r25, 0x0085
    38f4:	8e 38       	cpi	r24, 0x8E	; 142
    38f6:	9b 45       	sbci	r25, 0x5B	; 91
    38f8:	60 f0       	brcs	.+24     	; 0x3912 <_Z19maininterupthandlerv+0x46>
		{
			TCNT1=0;
    38fa:	10 92 85 00 	sts	0x0085, r1
    38fe:	10 92 84 00 	sts	0x0084, r1
			geschw=0;
    3902:	10 92 48 03 	sts	0x0348, r1
    3906:	10 92 49 03 	sts	0x0349, r1
    390a:	10 92 4a 03 	sts	0x034A, r1
    390e:	10 92 4b 03 	sts	0x034B, r1
		}
	}
	if ((rtc.interupts&(1<<Weckeractiv)))
    3912:	20 91 96 07 	lds	r18, 0x0796
    3916:	82 2f       	mov	r24, r18
    3918:	88 71       	andi	r24, 0x18	; 24
	{
		if ((rtc.interupts&(1<<Weckerein)))
    391a:	88 31       	cpi	r24, 0x18	; 24
    391c:	61 f4       	brne	.+24     	; 0x3936 <_Z19maininterupthandlerv+0x6a>
		{
			anzeige |= (1<<blinkflag) | (1<<refreshdisplay);
    391e:	80 91 4d 03 	lds	r24, 0x034D
    3922:	90 91 4e 03 	lds	r25, 0x034E
    3926:	90 6c       	ori	r25, 0xC0	; 192
    3928:	90 93 4e 03 	sts	0x034E, r25
    392c:	80 93 4d 03 	sts	0x034D, r24
			rtc.interupts &= ~(1<<Weckerein);
    3930:	27 7f       	andi	r18, 0xF7	; 247
    3932:	20 93 96 07 	sts	0x0796, r18
    3936:	08 95       	ret

00003938 <_Z14anzeigehandlerv>:
		}
	}
}

void anzeigehandler(){
    3938:	4f 92       	push	r4
    393a:	5f 92       	push	r5
    393c:	6f 92       	push	r6
    393e:	7f 92       	push	r7
    3940:	af 92       	push	r10
    3942:	bf 92       	push	r11
    3944:	cf 92       	push	r12
    3946:	df 92       	push	r13
    3948:	ef 92       	push	r14
    394a:	ff 92       	push	r15
    394c:	0f 93       	push	r16
    394e:	1f 93       	push	r17
    3950:	cf 93       	push	r28
    3952:	df 93       	push	r29
	//Handler fuer 1Hz Flag
	if ((rtc.interupts & (1<<sekundeninterupt)))
    3954:	80 91 96 07 	lds	r24, 0x0796
    3958:	81 ff       	sbrs	r24, 1
    395a:	91 c1       	rjmp	.+802    	; 0x3c7e <_Z14anzeigehandlerv+0x346>
	{
		rtc.zeit();
    395c:	8e e7       	ldi	r24, 0x7E	; 126
    395e:	97 e0       	ldi	r25, 0x07	; 7
    3960:	0e 94 a0 2b 	call	0x5740	; 0x5740 <_ZN3RTC4zeitEv>
		//Handler fuer die Anzeige der Seiten
		//Die einzelnen Funktionen beschreiben nur den Framebuffer und nicht dierekt das Display
		if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))
    3964:	80 91 4d 03 	lds	r24, 0x034D
    3968:	90 91 4e 03 	lds	r25, 0x034E
    396c:	9c 01       	movw	r18, r24
    396e:	22 70       	andi	r18, 0x02	; 2
    3970:	30 72       	andi	r19, 0x20	; 32
    3972:	22 30       	cpi	r18, 0x02	; 2
    3974:	30 42       	sbci	r19, 0x20	; 32
    3976:	61 f4       	brne	.+24     	; 0x3990 <_Z14anzeigehandlerv+0x58>
		{
			menue_uhr();
    3978:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <_Z9menue_uhrv>
			anzeige|=(1<<refreshdisplay);
    397c:	80 91 4d 03 	lds	r24, 0x034D
    3980:	90 91 4e 03 	lds	r25, 0x034E
    3984:	90 68       	ori	r25, 0x80	; 128
    3986:	90 93 4e 03 	sts	0x034E, r25
    398a:	80 93 4d 03 	sts	0x034D, r24
    398e:	5d c1       	rjmp	.+698    	; 0x3c4a <_Z14anzeigehandlerv+0x312>
    3990:	9c 01       	movw	r18, r24
    3992:	22 27       	eor	r18, r18
    3994:	30 73       	andi	r19, 0x30	; 48
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))
    3996:	21 15       	cp	r18, r1
    3998:	30 43       	sbci	r19, 0x30	; 48
    399a:	61 f4       	brne	.+24     	; 0x39b4 <_Z14anzeigehandlerv+0x7c>
		{
			menue_einst();
    399c:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <_Z11menue_einstv>
			anzeige|=(1<<refreshdisplay);
    39a0:	80 91 4d 03 	lds	r24, 0x034D
    39a4:	90 91 4e 03 	lds	r25, 0x034E
    39a8:	90 68       	ori	r25, 0x80	; 128
    39aa:	90 93 4e 03 	sts	0x034E, r25
    39ae:	80 93 4d 03 	sts	0x034D, r24
    39b2:	4b c1       	rjmp	.+662    	; 0x3c4a <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<menueflag)))
    39b4:	95 ff       	sbrs	r25, 5
    39b6:	0c c0       	rjmp	.+24     	; 0x39d0 <_Z14anzeigehandlerv+0x98>
		{
			menue_haupt();
    39b8:	0e 94 86 0c 	call	0x190c	; 0x190c <_Z11menue_hauptv>
			anzeige|=(1<<refreshdisplay);
    39bc:	80 91 4d 03 	lds	r24, 0x034D
    39c0:	90 91 4e 03 	lds	r25, 0x034E
    39c4:	90 68       	ori	r25, 0x80	; 128
    39c6:	90 93 4e 03 	sts	0x034E, r25
    39ca:	80 93 4d 03 	sts	0x034D, r24
    39ce:	3d c1       	rjmp	.+634    	; 0x3c4a <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    39d0:	91 ff       	sbrs	r25, 1
    39d2:	0c c0       	rjmp	.+24     	; 0x39ec <_Z14anzeigehandlerv+0xb4>
		{
			Gaineinstellen();
    39d4:	0e 94 96 11 	call	0x232c	; 0x232c <_Z14Gaineinstellenv>
			anzeige|=(1<<refreshdisplay);
    39d8:	80 91 4d 03 	lds	r24, 0x034D
    39dc:	90 91 4e 03 	lds	r25, 0x034E
    39e0:	90 68       	ori	r25, 0x80	; 128
    39e2:	90 93 4e 03 	sts	0x034E, r25
    39e6:	80 93 4d 03 	sts	0x034D, r24
    39ea:	2f c1       	rjmp	.+606    	; 0x3c4a <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Uhrflag)))
    39ec:	81 ff       	sbrs	r24, 1
    39ee:	0c c0       	rjmp	.+24     	; 0x3a08 <_Z14anzeigehandlerv+0xd0>
		{
			uhranzeigen();
    39f0:	0e 94 6c 0e 	call	0x1cd8	; 0x1cd8 <_Z11uhranzeigenv>
			anzeige|=(1<<refreshdisplay);
    39f4:	80 91 4d 03 	lds	r24, 0x034D
    39f8:	90 91 4e 03 	lds	r25, 0x034E
    39fc:	90 68       	ori	r25, 0x80	; 128
    39fe:	90 93 4e 03 	sts	0x034E, r25
    3a02:	80 93 4d 03 	sts	0x034D, r24
    3a06:	21 c1       	rjmp	.+578    	; 0x3c4a <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Kompasflag)))
    3a08:	87 ff       	sbrs	r24, 7
    3a0a:	24 c0       	rjmp	.+72     	; 0x3a54 <_Z14anzeigehandlerv+0x11c>
		{
			Accelerometer.readacc();
    3a0c:	85 e5       	ldi	r24, 0x55	; 85
    3a0e:	93 e0       	ldi	r25, 0x03	; 3
    3a10:	0e 94 a8 26 	call	0x4d50	; 0x4d50 <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    3a14:	00 91 61 03 	lds	r16, 0x0361
    3a18:	10 91 62 03 	lds	r17, 0x0362
    3a1c:	20 91 63 03 	lds	r18, 0x0363
    3a20:	30 91 64 03 	lds	r19, 0x0364
    3a24:	40 91 5d 03 	lds	r20, 0x035D
    3a28:	50 91 5e 03 	lds	r21, 0x035E
    3a2c:	60 91 5f 03 	lds	r22, 0x035F
    3a30:	70 91 60 03 	lds	r23, 0x0360
    3a34:	8d e9       	ldi	r24, 0x9D	; 157
    3a36:	97 e0       	ldi	r25, 0x07	; 7
    3a38:	0e 94 62 25 	call	0x4ac4	; 0x4ac4 <_ZN7Kompass5angleEdd>
    3a3c:	0e 94 7c 12 	call	0x24f8	; 0x24f8 <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    3a40:	80 91 4d 03 	lds	r24, 0x034D
    3a44:	90 91 4e 03 	lds	r25, 0x034E
    3a48:	90 68       	ori	r25, 0x80	; 128
    3a4a:	90 93 4e 03 	sts	0x034E, r25
    3a4e:	80 93 4d 03 	sts	0x034D, r24
    3a52:	fb c0       	rjmp	.+502    	; 0x3c4a <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Fahradflag)))
    3a54:	80 ff       	sbrs	r24, 0
    3a56:	a6 c0       	rjmp	.+332    	; 0x3ba4 <_Z14anzeigehandlerv+0x26c>
		{
			if (geschw>maxgeschw)
    3a58:	c0 90 48 03 	lds	r12, 0x0348
    3a5c:	d0 90 49 03 	lds	r13, 0x0349
    3a60:	e0 90 4a 03 	lds	r14, 0x034A
    3a64:	f0 90 4b 03 	lds	r15, 0x034B
    3a68:	20 91 40 03 	lds	r18, 0x0340
    3a6c:	30 91 41 03 	lds	r19, 0x0341
    3a70:	40 91 42 03 	lds	r20, 0x0342
    3a74:	50 91 43 03 	lds	r21, 0x0343
    3a78:	c7 01       	movw	r24, r14
    3a7a:	b6 01       	movw	r22, r12
    3a7c:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__gesf2>
    3a80:	18 16       	cp	r1, r24
    3a82:	44 f4       	brge	.+16     	; 0x3a94 <_Z14anzeigehandlerv+0x15c>
			{
				maxgeschw=geschw;
    3a84:	c0 92 40 03 	sts	0x0340, r12
    3a88:	d0 92 41 03 	sts	0x0341, r13
    3a8c:	e0 92 42 03 	sts	0x0342, r14
    3a90:	f0 92 43 03 	sts	0x0343, r15
			}
			if (geschw >= 1.0)
    3a94:	20 e0       	ldi	r18, 0x00	; 0
    3a96:	30 e0       	ldi	r19, 0x00	; 0
    3a98:	40 e8       	ldi	r20, 0x80	; 128
    3a9a:	5f e3       	ldi	r21, 0x3F	; 63
    3a9c:	c7 01       	movw	r24, r14
    3a9e:	b6 01       	movw	r22, r12
    3aa0:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__gesf2>
    3aa4:	88 23       	and	r24, r24
    3aa6:	9c f0       	brlt	.+38     	; 0x3ace <_Z14anzeigehandlerv+0x196>
			{
				Fahrtzeit++;
    3aa8:	80 91 3c 03 	lds	r24, 0x033C
    3aac:	90 91 3d 03 	lds	r25, 0x033D
    3ab0:	a0 91 3e 03 	lds	r26, 0x033E
    3ab4:	b0 91 3f 03 	lds	r27, 0x033F
    3ab8:	01 96       	adiw	r24, 0x01	; 1
    3aba:	a1 1d       	adc	r26, r1
    3abc:	b1 1d       	adc	r27, r1
    3abe:	80 93 3c 03 	sts	0x033C, r24
    3ac2:	90 93 3d 03 	sts	0x033D, r25
    3ac6:	a0 93 3e 03 	sts	0x033E, r26
    3aca:	b0 93 3f 03 	sts	0x033F, r27
			}
			strecke+=geschw/3.6;
    3ace:	26 e6       	ldi	r18, 0x66	; 102
    3ad0:	36 e6       	ldi	r19, 0x66	; 102
    3ad2:	46 e6       	ldi	r20, 0x66	; 102
    3ad4:	50 e4       	ldi	r21, 0x40	; 64
    3ad6:	c7 01       	movw	r24, r14
    3ad8:	b6 01       	movw	r22, r12
    3ada:	0e 94 08 2d 	call	0x5a10	; 0x5a10 <__divsf3>
    3ade:	9b 01       	movw	r18, r22
    3ae0:	ac 01       	movw	r20, r24
    3ae2:	60 91 44 03 	lds	r22, 0x0344
    3ae6:	70 91 45 03 	lds	r23, 0x0345
    3aea:	80 91 46 03 	lds	r24, 0x0346
    3aee:	90 91 47 03 	lds	r25, 0x0347
    3af2:	0e 94 3b 2c 	call	0x5876	; 0x5876 <__addsf3>
    3af6:	60 93 44 03 	sts	0x0344, r22
    3afa:	70 93 45 03 	sts	0x0345, r23
    3afe:	80 93 46 03 	sts	0x0346, r24
    3b02:	90 93 47 03 	sts	0x0347, r25
			Accelerometer.readacc();
    3b06:	85 e5       	ldi	r24, 0x55	; 85
    3b08:	93 e0       	ldi	r25, 0x03	; 3
    3b0a:	0e 94 a8 26 	call	0x4d50	; 0x4d50 <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    3b0e:	e0 90 3c 03 	lds	r14, 0x033C
    3b12:	f0 90 3d 03 	lds	r15, 0x033D
    3b16:	c0 91 3e 03 	lds	r28, 0x033E
    3b1a:	d0 91 3f 03 	lds	r29, 0x033F
    3b1e:	a0 90 40 03 	lds	r10, 0x0340
    3b22:	b0 90 41 03 	lds	r11, 0x0341
    3b26:	c0 90 42 03 	lds	r12, 0x0342
    3b2a:	d0 90 43 03 	lds	r13, 0x0343
    3b2e:	40 90 44 03 	lds	r4, 0x0344
    3b32:	50 90 45 03 	lds	r5, 0x0345
    3b36:	60 90 46 03 	lds	r6, 0x0346
    3b3a:	70 90 47 03 	lds	r7, 0x0347
    3b3e:	00 91 61 03 	lds	r16, 0x0361
    3b42:	10 91 62 03 	lds	r17, 0x0362
    3b46:	20 91 63 03 	lds	r18, 0x0363
    3b4a:	30 91 64 03 	lds	r19, 0x0364
    3b4e:	40 91 5d 03 	lds	r20, 0x035D
    3b52:	50 91 5e 03 	lds	r21, 0x035E
    3b56:	60 91 5f 03 	lds	r22, 0x035F
    3b5a:	70 91 60 03 	lds	r23, 0x0360
    3b5e:	8d e9       	ldi	r24, 0x9D	; 157
    3b60:	97 e0       	ldi	r25, 0x07	; 7
    3b62:	b0 d7       	rcall	.+3936   	; 0x4ac4 <_ZN7Kompass5angleEdd>
    3b64:	9b 01       	movw	r18, r22
    3b66:	ac 01       	movw	r20, r24
    3b68:	60 91 48 03 	lds	r22, 0x0348
    3b6c:	70 91 49 03 	lds	r23, 0x0349
    3b70:	80 91 4a 03 	lds	r24, 0x034A
    3b74:	90 91 4b 03 	lds	r25, 0x034B
    3b78:	df 93       	push	r29
    3b7a:	cf 93       	push	r28
    3b7c:	ff 92       	push	r15
    3b7e:	ef 92       	push	r14
    3b80:	83 01       	movw	r16, r6
    3b82:	72 01       	movw	r14, r4
    3b84:	0e 94 28 10 	call	0x2050	; 0x2050 <_Z12fahradschirmddddm>
			//Fuer Testzwecke entfernt um neue Methode zu testen, siehe Oben
			//if (rtc.Sekunden%2)
			//{
				//geschw=0;
			//}
			anzeige|=(1<<refreshdisplay);
    3b88:	80 91 4d 03 	lds	r24, 0x034D
    3b8c:	90 91 4e 03 	lds	r25, 0x034E
    3b90:	90 68       	ori	r25, 0x80	; 128
    3b92:	90 93 4e 03 	sts	0x034E, r25
    3b96:	80 93 4d 03 	sts	0x034D, r24
    3b9a:	0f 90       	pop	r0
    3b9c:	0f 90       	pop	r0
    3b9e:	0f 90       	pop	r0
    3ba0:	0f 90       	pop	r0
    3ba2:	53 c0       	rjmp	.+166    	; 0x3c4a <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    3ba4:	83 ff       	sbrs	r24, 3
    3ba6:	0c c0       	rjmp	.+24     	; 0x3bc0 <_Z14anzeigehandlerv+0x288>
		{
			Stoppuhrseite();
    3ba8:	0e 94 5d 14 	call	0x28ba	; 0x28ba <_Z13Stoppuhrseitev>
			anzeige|=(1<<refreshdisplay);
    3bac:	80 91 4d 03 	lds	r24, 0x034D
    3bb0:	90 91 4e 03 	lds	r25, 0x034E
    3bb4:	90 68       	ori	r25, 0x80	; 128
    3bb6:	90 93 4e 03 	sts	0x034E, r25
    3bba:	80 93 4d 03 	sts	0x034D, r24
    3bbe:	45 c0       	rjmp	.+138    	; 0x3c4a <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Timerflag)))
    3bc0:	82 ff       	sbrs	r24, 2
    3bc2:	18 c0       	rjmp	.+48     	; 0x3bf4 <_Z14anzeigehandlerv+0x2bc>
		{
			if (rtc.interupts&(1<<Alarm))
    3bc4:	20 91 96 07 	lds	r18, 0x0796
    3bc8:	20 ff       	sbrs	r18, 0
    3bca:	08 c0       	rjmp	.+16     	; 0x3bdc <_Z14anzeigehandlerv+0x2a4>
			{
				anzeige |= (1<<blinkflag);
    3bcc:	90 64       	ori	r25, 0x40	; 64
    3bce:	90 93 4e 03 	sts	0x034E, r25
    3bd2:	80 93 4d 03 	sts	0x034D, r24
				rtc.interupts &= ~(1<<Alarm);
    3bd6:	2e 7f       	andi	r18, 0xFE	; 254
    3bd8:	20 93 96 07 	sts	0x0796, r18
			}
			timerseite();
    3bdc:	0e 94 91 13 	call	0x2722	; 0x2722 <_Z10timerseitev>
			anzeige|=(1<<refreshdisplay);
    3be0:	80 91 4d 03 	lds	r24, 0x034D
    3be4:	90 91 4e 03 	lds	r25, 0x034E
    3be8:	90 68       	ori	r25, 0x80	; 128
    3bea:	90 93 4e 03 	sts	0x034E, r25
    3bee:	80 93 4d 03 	sts	0x034D, r24
    3bf2:	2b c0       	rjmp	.+86     	; 0x3c4a <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Druckflag)))
    3bf4:	92 ff       	sbrs	r25, 2
    3bf6:	0c c0       	rjmp	.+24     	; 0x3c10 <_Z14anzeigehandlerv+0x2d8>
		{
			Pressuresensor();
    3bf8:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <_Z14Pressuresensorv>
			anzeige |= (1<<refreshdisplay);
    3bfc:	80 91 4d 03 	lds	r24, 0x034D
    3c00:	90 91 4e 03 	lds	r25, 0x034E
    3c04:	90 68       	ori	r25, 0x80	; 128
    3c06:	90 93 4e 03 	sts	0x034E, r25
    3c0a:	80 93 4d 03 	sts	0x034D, r24
    3c0e:	1d c0       	rjmp	.+58     	; 0x3c4a <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Wanderflag)))
    3c10:	93 ff       	sbrs	r25, 3
    3c12:	0b c0       	rjmp	.+22     	; 0x3c2a <_Z14anzeigehandlerv+0x2f2>
		{
			Wanderseite();
    3c14:	06 d8       	rcall	.-4084   	; 0x2c22 <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    3c16:	80 91 4d 03 	lds	r24, 0x034D
    3c1a:	90 91 4e 03 	lds	r25, 0x034E
    3c1e:	90 68       	ori	r25, 0x80	; 128
    3c20:	90 93 4e 03 	sts	0x034E, r25
    3c24:	80 93 4d 03 	sts	0x034D, r24
    3c28:	10 c0       	rjmp	.+32     	; 0x3c4a <_Z14anzeigehandlerv+0x312>
    3c2a:	80 74       	andi	r24, 0x40	; 64
    3c2c:	90 71       	andi	r25, 0x10	; 16
		}
		else if ((anzeige&(1<<Weckeranzeigeflag))&&(anzeige&(1<<Einstellungsflag)))
    3c2e:	80 34       	cpi	r24, 0x40	; 64
    3c30:	90 41       	sbci	r25, 0x10	; 16
    3c32:	59 f4       	brne	.+22     	; 0x3c4a <_Z14anzeigehandlerv+0x312>
		{
			Weckeranzeige();
    3c34:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3c38:	80 91 4d 03 	lds	r24, 0x034D
    3c3c:	90 91 4e 03 	lds	r25, 0x034E
    3c40:	90 68       	ori	r25, 0x80	; 128
    3c42:	90 93 4e 03 	sts	0x034E, r25
    3c46:	80 93 4d 03 	sts	0x034D, r24
		}
		if ((anzeige&(1<<blinkflag)))
    3c4a:	80 91 4d 03 	lds	r24, 0x034D
    3c4e:	90 91 4e 03 	lds	r25, 0x034E
    3c52:	96 ff       	sbrs	r25, 6
    3c54:	0f c0       	rjmp	.+30     	; 0x3c74 <_Z14anzeigehandlerv+0x33c>
		{
			oled.invert(rtc.Sekunden%2);
    3c56:	60 91 90 07 	lds	r22, 0x0790
    3c5a:	61 70       	andi	r22, 0x01	; 1
    3c5c:	8d e7       	ldi	r24, 0x7D	; 125
    3c5e:	93 e0       	ldi	r25, 0x03	; 3
    3c60:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
			LED.toggle();
    3c64:	8a e7       	ldi	r24, 0x7A	; 122
    3c66:	93 e0       	ldi	r25, 0x03	; 3
    3c68:	0e 94 fd 28 	call	0x51fa	; 0x51fa <_ZN6Output6toggleEv>
			Vibrationsmotor.on();
    3c6c:	88 e7       	ldi	r24, 0x78	; 120
    3c6e:	93 e0       	ldi	r25, 0x03	; 3
    3c70:	0e 94 24 28 	call	0x5048	; 0x5048 <_ZN6Output2onEv>
		}
		rtc.interupts&=~(1<<sekundeninterupt);
    3c74:	e6 e9       	ldi	r30, 0x96	; 150
    3c76:	f7 e0       	ldi	r31, 0x07	; 7
    3c78:	80 81       	ld	r24, Z
    3c7a:	8d 7f       	andi	r24, 0xFD	; 253
    3c7c:	80 83       	st	Z, r24
	}
	//Minuteninterrupt
	if ((rtc.interupts&(1<<minuteninterupt)))
    3c7e:	80 91 96 07 	lds	r24, 0x0796
    3c82:	82 ff       	sbrs	r24, 2
    3c84:	22 c0       	rjmp	.+68     	; 0x3cca <_Z14anzeigehandlerv+0x392>
	{
		if ((anzeige&(1<<Uhrflaggross)))
    3c86:	80 91 4d 03 	lds	r24, 0x034D
    3c8a:	85 ff       	sbrs	r24, 5
    3c8c:	0c c0       	rjmp	.+24     	; 0x3ca6 <_Z14anzeigehandlerv+0x36e>
		{
			uhranzeigenmin();
    3c8e:	0e 94 3e 0f 	call	0x1e7c	; 0x1e7c <_Z14uhranzeigenminv>
			anzeige|=(1<<refreshdisplay);
    3c92:	80 91 4d 03 	lds	r24, 0x034D
    3c96:	90 91 4e 03 	lds	r25, 0x034E
    3c9a:	90 68       	ori	r25, 0x80	; 128
    3c9c:	90 93 4e 03 	sts	0x034E, r25
    3ca0:	80 93 4d 03 	sts	0x034D, r24
    3ca4:	0d c0       	rjmp	.+26     	; 0x3cc0 <_Z14anzeigehandlerv+0x388>
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    3ca6:	86 ff       	sbrs	r24, 6
    3ca8:	0b c0       	rjmp	.+22     	; 0x3cc0 <_Z14anzeigehandlerv+0x388>
		{
			Weckeranzeige();
    3caa:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3cae:	80 91 4d 03 	lds	r24, 0x034D
    3cb2:	90 91 4e 03 	lds	r25, 0x034E
    3cb6:	90 68       	ori	r25, 0x80	; 128
    3cb8:	90 93 4e 03 	sts	0x034E, r25
    3cbc:	80 93 4d 03 	sts	0x034D, r24
		}
		rtc.interupts&=~(1<<minuteninterupt);
    3cc0:	e6 e9       	ldi	r30, 0x96	; 150
    3cc2:	f7 e0       	ldi	r31, 0x07	; 7
    3cc4:	80 81       	ld	r24, Z
    3cc6:	8b 7f       	andi	r24, 0xFB	; 251
    3cc8:	80 83       	st	Z, r24
	}
	//neuen Framebuffer an das Dispay senden
	if ((anzeige&(1<<refreshdisplay)))
    3cca:	80 91 4d 03 	lds	r24, 0x034D
    3cce:	90 91 4e 03 	lds	r25, 0x034E
    3cd2:	99 23       	and	r25, r25
    3cd4:	6c f4       	brge	.+26     	; 0x3cf0 <_Z14anzeigehandlerv+0x3b8>
	{
		oled.sendFrame();
    3cd6:	8d e7       	ldi	r24, 0x7D	; 125
    3cd8:	93 e0       	ldi	r25, 0x03	; 3
    3cda:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN7Display9sendFrameEv>
		anzeige&=~(1<<refreshdisplay);
    3cde:	80 91 4d 03 	lds	r24, 0x034D
    3ce2:	90 91 4e 03 	lds	r25, 0x034E
    3ce6:	9f 77       	andi	r25, 0x7F	; 127
    3ce8:	90 93 4e 03 	sts	0x034E, r25
    3cec:	80 93 4d 03 	sts	0x034D, r24
	}
}
    3cf0:	df 91       	pop	r29
    3cf2:	cf 91       	pop	r28
    3cf4:	1f 91       	pop	r17
    3cf6:	0f 91       	pop	r16
    3cf8:	ff 90       	pop	r15
    3cfa:	ef 90       	pop	r14
    3cfc:	df 90       	pop	r13
    3cfe:	cf 90       	pop	r12
    3d00:	bf 90       	pop	r11
    3d02:	af 90       	pop	r10
    3d04:	7f 90       	pop	r7
    3d06:	6f 90       	pop	r6
    3d08:	5f 90       	pop	r5
    3d0a:	4f 90       	pop	r4
    3d0c:	08 95       	ret

00003d0e <_Z14eingabehandlerh>:

void eingabehandler(uint8_t taste){
	if (taste!='A')
    3d0e:	81 34       	cpi	r24, 0x41	; 65
    3d10:	09 f4       	brne	.+2      	; 0x3d14 <_Z14eingabehandlerh+0x6>
    3d12:	8e c4       	rjmp	.+2332   	; 0x4630 <__stack+0x531>
	{
		rtc.interupts |= (1<<sekundeninterupt);
    3d14:	e6 e9       	ldi	r30, 0x96	; 150
    3d16:	f7 e0       	ldi	r31, 0x07	; 7
    3d18:	90 81       	ld	r25, Z
    3d1a:	29 2f       	mov	r18, r25
    3d1c:	22 60       	ori	r18, 0x02	; 2
    3d1e:	20 83       	st	Z, r18
		if (anzeige==255)
    3d20:	20 91 4d 03 	lds	r18, 0x034D
    3d24:	30 91 4e 03 	lds	r19, 0x034E
    3d28:	2f 3f       	cpi	r18, 0xFF	; 255
    3d2a:	31 05       	cpc	r19, r1
    3d2c:	61 f4       	brne	.+24     	; 0x3d46 <_Z14eingabehandlerh+0x38>
		{
			oled.ssd1306_command(SSD1306_DISPLAYON);
    3d2e:	6f ea       	ldi	r22, 0xAF	; 175
    3d30:	8d e7       	ldi	r24, 0x7D	; 125
    3d32:	93 e0       	ldi	r25, 0x03	; 3
    3d34:	0e 94 10 03 	call	0x620	; 0x620 <_ZN7Display15ssd1306_commandEh>
			//entweder display aus oder das Menue starten
			anzeige=(1<<menueflag);
    3d38:	80 e0       	ldi	r24, 0x00	; 0
    3d3a:	90 e2       	ldi	r25, 0x20	; 32
    3d3c:	90 93 4e 03 	sts	0x034E, r25
    3d40:	80 93 4d 03 	sts	0x034D, r24
    3d44:	08 95       	ret
    3d46:	a9 01       	movw	r20, r18
    3d48:	42 70       	andi	r20, 0x02	; 2
    3d4a:	50 72       	andi	r21, 0x20	; 32
		}
		//gleicher Handler wie oben, aber hier speziell fuer die Bearbeitung von Tastereingaben mit switch fuer die Tasten
		//es sind einfach so viele Tasten moeglich
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))	//Menue der Uhr
    3d4c:	42 30       	cpi	r20, 0x02	; 2
    3d4e:	50 42       	sbci	r21, 0x20	; 32
    3d50:	e9 f5       	brne	.+122    	; 0x3dcc <_Z14eingabehandlerh+0xbe>
		{
			anzeige&=~((1<<menueflag)|(1<<Uhrflag));
    3d52:	2d 7f       	andi	r18, 0xFD	; 253
    3d54:	3f 7d       	andi	r19, 0xDF	; 223
			switch (taste)
    3d56:	83 33       	cpi	r24, 0x33	; 51
    3d58:	c1 f0       	breq	.+48     	; 0x3d8a <_Z14eingabehandlerh+0x7c>
    3d5a:	28 f4       	brcc	.+10     	; 0x3d66 <_Z14eingabehandlerh+0x58>
    3d5c:	81 33       	cpi	r24, 0x31	; 49
    3d5e:	41 f0       	breq	.+16     	; 0x3d70 <_Z14eingabehandlerh+0x62>
    3d60:	82 33       	cpi	r24, 0x32	; 50
    3d62:	61 f0       	breq	.+24     	; 0x3d7c <_Z14eingabehandlerh+0x6e>
    3d64:	2c c0       	rjmp	.+88     	; 0x3dbe <_Z14eingabehandlerh+0xb0>
    3d66:	84 33       	cpi	r24, 0x34	; 52
    3d68:	b9 f0       	breq	.+46     	; 0x3d98 <_Z14eingabehandlerh+0x8a>
    3d6a:	85 33       	cpi	r24, 0x35	; 53
    3d6c:	f1 f0       	breq	.+60     	; 0x3daa <_Z14eingabehandlerh+0x9c>
    3d6e:	27 c0       	rjmp	.+78     	; 0x3dbe <_Z14eingabehandlerh+0xb0>
			{
				case '1':
				//Wechseln auf die Uhr
				anzeige|=(1<<Uhrflag);
    3d70:	22 60       	ori	r18, 0x02	; 2
    3d72:	30 93 4e 03 	sts	0x034E, r19
    3d76:	20 93 4d 03 	sts	0x034D, r18
				break;
    3d7a:	08 95       	ret
				
				case '2':
				//starten der Stoppuhr APP
				anzeige|=(1<<refreshdisplay) | (1<<Stoppuhrflag);
    3d7c:	28 60       	ori	r18, 0x08	; 8
    3d7e:	30 68       	ori	r19, 0x80	; 128
    3d80:	30 93 4e 03 	sts	0x034E, r19
    3d84:	20 93 4d 03 	sts	0x034D, r18
				break;
    3d88:	08 95       	ret
				
				case '3':
				//Starten der Timer APP	
				anzeige|=(1<<Timerflag) | (1<<Einstellungsflag);
    3d8a:	24 60       	ori	r18, 0x04	; 4
    3d8c:	30 61       	ori	r19, 0x10	; 16
    3d8e:	30 93 4e 03 	sts	0x034E, r19
    3d92:	20 93 4d 03 	sts	0x034D, r18
				break;
    3d96:	08 95       	ret
				
				case '4':
				rtc.interupts |=(1<<minuteninterupt);
    3d98:	96 60       	ori	r25, 0x06	; 6
    3d9a:	90 93 96 07 	sts	0x0796, r25
				anzeige |= (1<<Weckeranzeigeflag);
    3d9e:	20 64       	ori	r18, 0x40	; 64
    3da0:	30 93 4e 03 	sts	0x034E, r19
    3da4:	20 93 4d 03 	sts	0x034D, r18
				break;
    3da8:	08 95       	ret
				
				case '5':
				//Wechseln auf grosse Uhr
				rtc.interupts |=(1<<minuteninterupt);
    3daa:	96 60       	ori	r25, 0x06	; 6
    3dac:	90 93 96 07 	sts	0x0796, r25
				anzeige |=(1<<Uhrflaggross) | (1<<refreshdisplay);
    3db0:	20 62       	ori	r18, 0x20	; 32
    3db2:	30 68       	ori	r19, 0x80	; 128
    3db4:	30 93 4e 03 	sts	0x034E, r19
    3db8:	20 93 4d 03 	sts	0x034D, r18
				break;
    3dbc:	08 95       	ret
				
				default:
				//menueflag erneu setzen
				anzeige|=(1<<menueflag)|(1<<Uhrflag);
    3dbe:	22 60       	ori	r18, 0x02	; 2
    3dc0:	30 62       	ori	r19, 0x20	; 32
    3dc2:	30 93 4e 03 	sts	0x034E, r19
    3dc6:	20 93 4d 03 	sts	0x034D, r18
				break;
    3dca:	08 c4       	rjmp	.+2064   	; 0x45dc <__stack+0x4dd>
    3dcc:	a9 01       	movw	r20, r18
    3dce:	44 27       	eor	r20, r20
    3dd0:	50 73       	andi	r21, 0x30	; 48
			}
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))	//Menue der Einstellungen
    3dd2:	41 15       	cp	r20, r1
    3dd4:	50 43       	sbci	r21, 0x30	; 48
    3dd6:	d9 f5       	brne	.+118    	; 0x3e4e <_Z14eingabehandlerh+0x140>
		{
			anzeige&=~((1<<menueflag)|(1<<Einstellungsflag));
    3dd8:	3f 7c       	andi	r19, 0xCF	; 207
    3dda:	30 93 4e 03 	sts	0x034E, r19
    3dde:	20 93 4d 03 	sts	0x034D, r18
			switch (taste)
    3de2:	82 33       	cpi	r24, 0x32	; 50
    3de4:	b1 f0       	breq	.+44     	; 0x3e12 <_Z14eingabehandlerh+0x104>
    3de6:	18 f4       	brcc	.+6      	; 0x3dee <_Z14eingabehandlerh+0xe0>
    3de8:	81 33       	cpi	r24, 0x31	; 49
    3dea:	31 f0       	breq	.+12     	; 0x3df8 <_Z14eingabehandlerh+0xea>
    3dec:	2a c0       	rjmp	.+84     	; 0x3e42 <_Z14eingabehandlerh+0x134>
    3dee:	83 33       	cpi	r24, 0x33	; 51
    3df0:	b1 f0       	breq	.+44     	; 0x3e1e <_Z14eingabehandlerh+0x110>
    3df2:	84 33       	cpi	r24, 0x34	; 52
    3df4:	f9 f0       	breq	.+62     	; 0x3e34 <_Z14eingabehandlerh+0x126>
    3df6:	25 c0       	rjmp	.+74     	; 0x3e42 <_Z14eingabehandlerh+0x134>
			{
				case '1':
				//zuruecksetzen der Kalibrierung, da passive Kallibrierung eingebaut
				kompass.kallibrierung_ruecksetzen();
    3df8:	8d e9       	ldi	r24, 0x9D	; 157
    3dfa:	97 e0       	ldi	r25, 0x07	; 7
    3dfc:	92 d7       	rcall	.+3876   	; 0x4d22 <_ZN7Kompass25kallibrierung_ruecksetzenEv>
				anzeige|=(1<<Kompasflag);
    3dfe:	80 91 4d 03 	lds	r24, 0x034D
    3e02:	90 91 4e 03 	lds	r25, 0x034E
    3e06:	80 68       	ori	r24, 0x80	; 128
    3e08:	90 93 4e 03 	sts	0x034E, r25
    3e0c:	80 93 4d 03 	sts	0x034D, r24
				break;
    3e10:	08 95       	ret
				case '2':
				//Gaineinstellung fuer den Kompass
				anzeige|=(1<<Kompasgaineinstellenflag);
    3e12:	32 60       	ori	r19, 0x02	; 2
    3e14:	30 93 4e 03 	sts	0x034E, r19
    3e18:	20 93 4d 03 	sts	0x034D, r18
				break;
    3e1c:	08 95       	ret
				case '3':
				//dies ist eine der wenigen Funktinen, die die Handler Strucktur nicht anwenden, da sie die rtc anhaellt
				uhreinstellen();
    3e1e:	39 d8       	rcall	.-3982   	; 0x2e92 <_Z13uhreinstellenv>
				anzeige|=(1<<Uhrflaggross);
    3e20:	80 91 4d 03 	lds	r24, 0x034D
    3e24:	90 91 4e 03 	lds	r25, 0x034E
    3e28:	80 62       	ori	r24, 0x20	; 32
    3e2a:	90 93 4e 03 	sts	0x034E, r25
    3e2e:	80 93 4d 03 	sts	0x034D, r24
				break;
    3e32:	08 95       	ret
				case '4':
				anzeige |= (1<<Einstellungsflag) | (1<<Weckeranzeigeflag);
    3e34:	20 64       	ori	r18, 0x40	; 64
    3e36:	30 61       	ori	r19, 0x10	; 16
    3e38:	30 93 4e 03 	sts	0x034E, r19
    3e3c:	20 93 4d 03 	sts	0x034D, r18
				break;
    3e40:	08 95       	ret
				default:
				//Menueflag neu setzten
				anzeige|=(1<<menueflag)|(1<<Einstellungsflag);
    3e42:	30 63       	ori	r19, 0x30	; 48
    3e44:	30 93 4e 03 	sts	0x034E, r19
    3e48:	20 93 4d 03 	sts	0x034D, r18
				break;
    3e4c:	c7 c3       	rjmp	.+1934   	; 0x45dc <__stack+0x4dd>
			}
		}
		else if ((anzeige&(1<<menueflag)))	//nur das grosse menue
    3e4e:	35 ff       	sbrs	r19, 5
    3e50:	4e c0       	rjmp	.+156    	; 0x3eee <_Z14eingabehandlerh+0x1e0>
		{
			anzeige&=~(1<<menueflag);
    3e52:	3f 7d       	andi	r19, 0xDF	; 223
    3e54:	30 93 4e 03 	sts	0x034E, r19
    3e58:	20 93 4d 03 	sts	0x034D, r18
			switch (taste)
    3e5c:	48 2f       	mov	r20, r24
    3e5e:	50 e0       	ldi	r21, 0x00	; 0
    3e60:	fa 01       	movw	r30, r20
    3e62:	f1 97       	sbiw	r30, 0x31	; 49
    3e64:	e7 30       	cpi	r30, 0x07	; 7
    3e66:	f1 05       	cpc	r31, r1
    3e68:	e0 f5       	brcc	.+120    	; 0x3ee2 <_Z14eingabehandlerh+0x1d4>
    3e6a:	e0 5b       	subi	r30, 0xB0	; 176
    3e6c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e6e:	0c 94 5a 33 	jmp	0x66b4	; 0x66b4 <__tablejump2__>
			{
				case '1':
				anzeige|=(1<<Fahradflag);
    3e72:	21 60       	ori	r18, 0x01	; 1
    3e74:	30 93 4e 03 	sts	0x034E, r19
    3e78:	20 93 4d 03 	sts	0x034D, r18
				//starten des Timers fuer die geschwindigkeit
				TCCR1B |= ((1<<CS12) | (1<<CS10));
    3e7c:	e1 e8       	ldi	r30, 0x81	; 129
    3e7e:	f0 e0       	ldi	r31, 0x00	; 0
    3e80:	80 81       	ld	r24, Z
    3e82:	85 60       	ori	r24, 0x05	; 5
    3e84:	80 83       	st	Z, r24
				break;
    3e86:	08 95       	ret
				
				case '2':
				//Wanderanzeige schalten
				anzeige|=(1<<refreshdisplay) | (1<<Wanderflag);
    3e88:	38 68       	ori	r19, 0x88	; 136
    3e8a:	30 93 4e 03 	sts	0x034E, r19
    3e8e:	20 93 4d 03 	sts	0x034D, r18
				break;
    3e92:	08 95       	ret
				
				case '3':
				anzeige|=(1<<Kompasflag);
    3e94:	20 68       	ori	r18, 0x80	; 128
    3e96:	30 93 4e 03 	sts	0x034E, r19
    3e9a:	20 93 4d 03 	sts	0x034D, r18
				break;
    3e9e:	08 95       	ret
				
				case '4':
				//Menue der Uhr
				anzeige|=(1<<menueflag) | (1<<Uhrflag);
    3ea0:	22 60       	ori	r18, 0x02	; 2
    3ea2:	30 62       	ori	r19, 0x20	; 32
    3ea4:	30 93 4e 03 	sts	0x034E, r19
    3ea8:	20 93 4d 03 	sts	0x034D, r18
				break;
    3eac:	08 95       	ret
				
				case '5':
				//menue der Einstellungen
				anzeige|=(1<<menueflag) | (1<<Einstellungsflag);
    3eae:	30 63       	ori	r19, 0x30	; 48
    3eb0:	30 93 4e 03 	sts	0x034E, r19
    3eb4:	20 93 4d 03 	sts	0x034D, r18
				break;
    3eb8:	08 95       	ret
				
				case '6':
				//Display ausschalten
				//anzeige=255;
				oled.clearFrame();
    3eba:	8d e7       	ldi	r24, 0x7D	; 125
    3ebc:	93 e0       	ldi	r25, 0x03	; 3
    3ebe:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
				anzeige|=(1<<refreshdisplay);
    3ec2:	80 91 4d 03 	lds	r24, 0x034D
    3ec6:	90 91 4e 03 	lds	r25, 0x034E
    3eca:	90 68       	ori	r25, 0x80	; 128
    3ecc:	90 93 4e 03 	sts	0x034E, r25
    3ed0:	80 93 4d 03 	sts	0x034D, r24
				break;
    3ed4:	08 95       	ret
				case '7':
				anzeige |= (1<<Druckflag);
    3ed6:	34 60       	ori	r19, 0x04	; 4
    3ed8:	30 93 4e 03 	sts	0x034E, r19
    3edc:	20 93 4d 03 	sts	0x034D, r18
				break;
    3ee0:	08 95       	ret
				default:
				//menueflag erneut setzen um abschalten zu verhindern
				anzeige|=(1<<menueflag);
    3ee2:	30 62       	ori	r19, 0x20	; 32
    3ee4:	30 93 4e 03 	sts	0x034E, r19
    3ee8:	20 93 4d 03 	sts	0x034D, r18
				break;
    3eec:	77 c3       	rjmp	.+1774   	; 0x45dc <__stack+0x4dd>
    3eee:	a9 01       	movw	r20, r18
    3ef0:	40 74       	andi	r20, 0x40	; 64
    3ef2:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag))&&(anzeige&(1<<Weckeranzeigeflag)))
    3ef4:	40 34       	cpi	r20, 0x40	; 64
    3ef6:	50 41       	sbci	r21, 0x10	; 16
    3ef8:	09 f0       	breq	.+2      	; 0x3efc <_Z14eingabehandlerh+0x1ee>
    3efa:	68 c0       	rjmp	.+208    	; 0x3fcc <_Z14eingabehandlerh+0x2be>
		{
			switch (pos)
    3efc:	40 91 4c 03 	lds	r20, 0x034C
    3f00:	41 30       	cpi	r20, 0x01	; 1
    3f02:	11 f1       	breq	.+68     	; 0x3f48 <_Z14eingabehandlerh+0x23a>
    3f04:	30 f0       	brcs	.+12     	; 0x3f12 <_Z14eingabehandlerh+0x204>
    3f06:	42 30       	cpi	r20, 0x02	; 2
    3f08:	79 f1       	breq	.+94     	; 0x3f68 <_Z14eingabehandlerh+0x25a>
    3f0a:	43 30       	cpi	r20, 0x03	; 3
    3f0c:	09 f4       	brne	.+2      	; 0x3f10 <_Z14eingabehandlerh+0x202>
    3f0e:	3f c0       	rjmp	.+126    	; 0x3f8e <_Z14eingabehandlerh+0x280>
    3f10:	65 c3       	rjmp	.+1738   	; 0x45dc <__stack+0x4dd>
			{
				case 0:
				rtc.WStunden=0;
    3f12:	10 92 98 07 	sts	0x0798, r1
				rtc.WMinuten=0;
    3f16:	10 92 97 07 	sts	0x0797, r1
				rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
    3f1a:	97 7e       	andi	r25, 0xE7	; 231
    3f1c:	92 60       	ori	r25, 0x02	; 2
    3f1e:	90 93 96 07 	sts	0x0796, r25
				switch (taste)
    3f22:	83 32       	cpi	r24, 0x23	; 35
    3f24:	09 f4       	brne	.+2      	; 0x3f28 <_Z14eingabehandlerh+0x21a>
    3f26:	5a c3       	rjmp	.+1716   	; 0x45dc <__stack+0x4dd>
    3f28:	8a 32       	cpi	r24, 0x2A	; 42
    3f2a:	09 f4       	brne	.+2      	; 0x3f2e <_Z14eingabehandlerh+0x220>
    3f2c:	57 c3       	rjmp	.+1710   	; 0x45dc <__stack+0x4dd>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden=(taste-'0')*10;
    3f2e:	98 2f       	mov	r25, r24
    3f30:	99 0f       	add	r25, r25
    3f32:	90 56       	subi	r25, 0x60	; 96
    3f34:	29 2f       	mov	r18, r25
    3f36:	22 0f       	add	r18, r18
    3f38:	22 0f       	add	r18, r18
    3f3a:	92 0f       	add	r25, r18
    3f3c:	90 93 98 07 	sts	0x0798, r25
					pos++;
    3f40:	91 e0       	ldi	r25, 0x01	; 1
    3f42:	90 93 4c 03 	sts	0x034C, r25
					break;
    3f46:	4a c3       	rjmp	.+1684   	; 0x45dc <__stack+0x4dd>
				}
				break;
				case 1:
				switch (taste)
    3f48:	83 32       	cpi	r24, 0x23	; 35
    3f4a:	09 f4       	brne	.+2      	; 0x3f4e <_Z14eingabehandlerh+0x240>
    3f4c:	47 c3       	rjmp	.+1678   	; 0x45dc <__stack+0x4dd>
    3f4e:	8a 32       	cpi	r24, 0x2A	; 42
    3f50:	09 f4       	brne	.+2      	; 0x3f54 <_Z14eingabehandlerh+0x246>
    3f52:	44 c3       	rjmp	.+1672   	; 0x45dc <__stack+0x4dd>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden+=(taste-'0');
    3f54:	e8 e9       	ldi	r30, 0x98	; 152
    3f56:	f7 e0       	ldi	r31, 0x07	; 7
    3f58:	90 81       	ld	r25, Z
    3f5a:	90 53       	subi	r25, 0x30	; 48
    3f5c:	98 0f       	add	r25, r24
    3f5e:	90 83       	st	Z, r25
					pos++;
    3f60:	92 e0       	ldi	r25, 0x02	; 2
    3f62:	90 93 4c 03 	sts	0x034C, r25
					break;
    3f66:	3a c3       	rjmp	.+1652   	; 0x45dc <__stack+0x4dd>
				}
				break;
				case 2:
				switch (taste)
    3f68:	83 32       	cpi	r24, 0x23	; 35
    3f6a:	09 f4       	brne	.+2      	; 0x3f6e <_Z14eingabehandlerh+0x260>
    3f6c:	37 c3       	rjmp	.+1646   	; 0x45dc <__stack+0x4dd>
    3f6e:	8a 32       	cpi	r24, 0x2A	; 42
    3f70:	09 f4       	brne	.+2      	; 0x3f74 <_Z14eingabehandlerh+0x266>
    3f72:	34 c3       	rjmp	.+1640   	; 0x45dc <__stack+0x4dd>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten=(taste-'0')*10;
    3f74:	98 2f       	mov	r25, r24
    3f76:	99 0f       	add	r25, r25
    3f78:	90 56       	subi	r25, 0x60	; 96
    3f7a:	29 2f       	mov	r18, r25
    3f7c:	22 0f       	add	r18, r18
    3f7e:	22 0f       	add	r18, r18
    3f80:	92 0f       	add	r25, r18
    3f82:	90 93 97 07 	sts	0x0797, r25
					pos++;
    3f86:	93 e0       	ldi	r25, 0x03	; 3
    3f88:	90 93 4c 03 	sts	0x034C, r25
					break;
    3f8c:	27 c3       	rjmp	.+1614   	; 0x45dc <__stack+0x4dd>
				}
				break;
				case 3:
				switch (taste)
    3f8e:	83 32       	cpi	r24, 0x23	; 35
    3f90:	41 f0       	breq	.+16     	; 0x3fa2 <_Z14eingabehandlerh+0x294>
    3f92:	8a 32       	cpi	r24, 0x2A	; 42
    3f94:	31 f0       	breq	.+12     	; 0x3fa2 <_Z14eingabehandlerh+0x294>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten+=(taste-'0');
    3f96:	e7 e9       	ldi	r30, 0x97	; 151
    3f98:	f7 e0       	ldi	r31, 0x07	; 7
    3f9a:	40 81       	ld	r20, Z
    3f9c:	40 53       	subi	r20, 0x30	; 48
    3f9e:	48 0f       	add	r20, r24
    3fa0:	40 83       	st	Z, r20
					pos++;
					break;
				}
				pos=0;
    3fa2:	10 92 4c 03 	sts	0x034C, r1
				if (!(rtc.WStunden>=24) && !(rtc.WMinuten>=60))
    3fa6:	40 91 98 07 	lds	r20, 0x0798
    3faa:	48 31       	cpi	r20, 0x18	; 24
    3fac:	08 f0       	brcs	.+2      	; 0x3fb0 <_Z14eingabehandlerh+0x2a2>
    3fae:	16 c3       	rjmp	.+1580   	; 0x45dc <__stack+0x4dd>
    3fb0:	40 91 97 07 	lds	r20, 0x0797
    3fb4:	4c 33       	cpi	r20, 0x3C	; 60
    3fb6:	08 f0       	brcs	.+2      	; 0x3fba <_Z14eingabehandlerh+0x2ac>
    3fb8:	11 c3       	rjmp	.+1570   	; 0x45dc <__stack+0x4dd>
				{
					anzeige&=~(1<<Einstellungsflag);
    3fba:	3f 7e       	andi	r19, 0xEF	; 239
    3fbc:	30 93 4e 03 	sts	0x034E, r19
    3fc0:	20 93 4d 03 	sts	0x034D, r18
					rtc.interupts|=(1<<Weckerein);
					rtc.interupts|=(1<<minuteninterupt);
    3fc4:	9e 60       	ori	r25, 0x0E	; 14
    3fc6:	90 93 96 07 	sts	0x0796, r25
    3fca:	08 c3       	rjmp	.+1552   	; 0x45dc <__stack+0x4dd>
				}
				break;
			}
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3fcc:	31 ff       	sbrs	r19, 1
    3fce:	4a c0       	rjmp	.+148    	; 0x4064 <_Z14eingabehandlerh+0x356>
		{
			anzeige&=~(1<<Kompasgaineinstellenflag);
    3fd0:	a9 01       	movw	r20, r18
    3fd2:	5d 7f       	andi	r21, 0xFD	; 253
			anzeige|=(1<<Kompasflag);
    3fd4:	40 68       	ori	r20, 0x80	; 128
    3fd6:	50 93 4e 03 	sts	0x034E, r21
    3fda:	40 93 4d 03 	sts	0x034D, r20
			switch (taste) {
    3fde:	48 2f       	mov	r20, r24
    3fe0:	50 e0       	ldi	r21, 0x00	; 0
    3fe2:	fa 01       	movw	r30, r20
    3fe4:	f1 97       	sbiw	r30, 0x31	; 49
    3fe6:	e8 30       	cpi	r30, 0x08	; 8
    3fe8:	f1 05       	cpc	r31, r1
    3fea:	a0 f5       	brcc	.+104    	; 0x4054 <_Z14eingabehandlerh+0x346>
    3fec:	e9 5a       	subi	r30, 0xA9	; 169
    3fee:	ff 4f       	sbci	r31, 0xFF	; 255
    3ff0:	0c 94 5a 33 	jmp	0x66b4	; 0x66b4 <__tablejump2__>
				case '1':
				kompass.HMC5883L_command(0x01,HMCGAIN1370);
    3ff4:	40 e0       	ldi	r20, 0x00	; 0
    3ff6:	61 e0       	ldi	r22, 0x01	; 1
    3ff8:	8d e9       	ldi	r24, 0x9D	; 157
    3ffa:	97 e0       	ldi	r25, 0x07	; 7
    3ffc:	71 c4       	rjmp	.+2274   	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3ffe:	08 95       	ret
				case '2':
				kompass.HMC5883L_command(0x01,HMCGAIN1090);
    4000:	40 e2       	ldi	r20, 0x20	; 32
    4002:	61 e0       	ldi	r22, 0x01	; 1
    4004:	8d e9       	ldi	r24, 0x9D	; 157
    4006:	97 e0       	ldi	r25, 0x07	; 7
    4008:	6b c4       	rjmp	.+2262   	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    400a:	08 95       	ret
				case '3':
				kompass.HMC5883L_command(0x01,HMCGAIN820);
    400c:	40 e4       	ldi	r20, 0x40	; 64
    400e:	61 e0       	ldi	r22, 0x01	; 1
    4010:	8d e9       	ldi	r24, 0x9D	; 157
    4012:	97 e0       	ldi	r25, 0x07	; 7
    4014:	65 c4       	rjmp	.+2250   	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4016:	08 95       	ret
				case '4':
				kompass.HMC5883L_command(0x01,HMCGAIN660);
    4018:	40 e6       	ldi	r20, 0x60	; 96
    401a:	61 e0       	ldi	r22, 0x01	; 1
    401c:	8d e9       	ldi	r24, 0x9D	; 157
    401e:	97 e0       	ldi	r25, 0x07	; 7
    4020:	5f c4       	rjmp	.+2238   	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4022:	08 95       	ret
				case '5':
				kompass.HMC5883L_command(0x01,HMCGAIN440);
    4024:	40 e8       	ldi	r20, 0x80	; 128
    4026:	61 e0       	ldi	r22, 0x01	; 1
    4028:	8d e9       	ldi	r24, 0x9D	; 157
    402a:	97 e0       	ldi	r25, 0x07	; 7
    402c:	59 c4       	rjmp	.+2226   	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    402e:	08 95       	ret
				case '6':
				kompass.HMC5883L_command(0x01,HMCGAIN390);
    4030:	40 ea       	ldi	r20, 0xA0	; 160
    4032:	61 e0       	ldi	r22, 0x01	; 1
    4034:	8d e9       	ldi	r24, 0x9D	; 157
    4036:	97 e0       	ldi	r25, 0x07	; 7
    4038:	53 c4       	rjmp	.+2214   	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    403a:	08 95       	ret
				case '7':
				kompass.HMC5883L_command(0x01,HMCGAIN330);
    403c:	40 ec       	ldi	r20, 0xC0	; 192
    403e:	61 e0       	ldi	r22, 0x01	; 1
    4040:	8d e9       	ldi	r24, 0x9D	; 157
    4042:	97 e0       	ldi	r25, 0x07	; 7
    4044:	4d c4       	rjmp	.+2202   	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4046:	08 95       	ret
				case '8':
				kompass.HMC5883L_command(0x01,HMCGAIN230);
    4048:	40 ee       	ldi	r20, 0xE0	; 224
    404a:	61 e0       	ldi	r22, 0x01	; 1
    404c:	8d e9       	ldi	r24, 0x9D	; 157
    404e:	97 e0       	ldi	r25, 0x07	; 7
    4050:	47 c4       	rjmp	.+2190   	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4052:	08 95       	ret
				default:
				anzeige &=~(1<<Kompasflag);
    4054:	2f 77       	andi	r18, 0x7F	; 127
    4056:	3d 7f       	andi	r19, 0xFD	; 253
				anzeige|=(1<<Kompasgaineinstellenflag);
    4058:	32 60       	ori	r19, 0x02	; 2
    405a:	30 93 4e 03 	sts	0x034E, r19
    405e:	20 93 4d 03 	sts	0x034D, r18
				break;
    4062:	bc c2       	rjmp	.+1400   	; 0x45dc <__stack+0x4dd>
    4064:	a9 01       	movw	r20, r18
    4066:	44 70       	andi	r20, 0x04	; 4
    4068:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag)) && (anzeige&(1<<Timerflag)))
    406a:	44 30       	cpi	r20, 0x04	; 4
    406c:	50 41       	sbci	r21, 0x10	; 16
    406e:	09 f0       	breq	.+2      	; 0x4072 <_Z14eingabehandlerh+0x364>
    4070:	60 c1       	rjmp	.+704    	; 0x4332 <__stack+0x233>
		{
			switch (pos)
    4072:	40 91 4c 03 	lds	r20, 0x034C
    4076:	42 30       	cpi	r20, 0x02	; 2
    4078:	09 f4       	brne	.+2      	; 0x407c <_Z14eingabehandlerh+0x36e>
    407a:	6d c0       	rjmp	.+218    	; 0x4156 <__stack+0x57>
    407c:	28 f4       	brcc	.+10     	; 0x4088 <_Z14eingabehandlerh+0x37a>
    407e:	44 23       	and	r20, r20
    4080:	61 f0       	breq	.+24     	; 0x409a <_Z14eingabehandlerh+0x38c>
    4082:	41 30       	cpi	r20, 0x01	; 1
    4084:	d9 f1       	breq	.+118    	; 0x40fc <_Z14eingabehandlerh+0x3ee>
    4086:	aa c2       	rjmp	.+1364   	; 0x45dc <__stack+0x4dd>
    4088:	44 30       	cpi	r20, 0x04	; 4
    408a:	09 f4       	brne	.+2      	; 0x408e <_Z14eingabehandlerh+0x380>
    408c:	d1 c0       	rjmp	.+418    	; 0x4230 <__stack+0x131>
    408e:	08 f4       	brcc	.+2      	; 0x4092 <_Z14eingabehandlerh+0x384>
    4090:	9a c0       	rjmp	.+308    	; 0x41c6 <__stack+0xc7>
    4092:	45 30       	cpi	r20, 0x05	; 5
    4094:	09 f4       	brne	.+2      	; 0x4098 <_Z14eingabehandlerh+0x38a>
    4096:	04 c1       	rjmp	.+520    	; 0x42a0 <__stack+0x1a1>
    4098:	a1 c2       	rjmp	.+1346   	; 0x45dc <__stack+0x4dd>
			{
				case 0:
					switch (taste)
    409a:	83 32       	cpi	r24, 0x23	; 35
    409c:	19 f0       	breq	.+6      	; 0x40a4 <_Z14eingabehandlerh+0x396>
    409e:	8a 32       	cpi	r24, 0x2A	; 42
    40a0:	41 f0       	breq	.+16     	; 0x40b2 <_Z14eingabehandlerh+0x3a4>
    40a2:	1a c0       	rjmp	.+52     	; 0x40d8 <_Z14eingabehandlerh+0x3ca>
					{
						case '#':
							pos=0;
    40a4:	10 92 4c 03 	sts	0x034C, r1
							rtc.Timerzahler=0;
    40a8:	10 92 9a 07 	sts	0x079A, r1
    40ac:	10 92 99 07 	sts	0x0799, r1
							break;
    40b0:	08 95       	ret
						case '*':
							pos=0;
    40b2:	10 92 4c 03 	sts	0x034C, r1
							rtc.Timerzahler++;
    40b6:	e9 e9       	ldi	r30, 0x99	; 153
    40b8:	f7 e0       	ldi	r31, 0x07	; 7
    40ba:	40 81       	ld	r20, Z
    40bc:	51 81       	ldd	r21, Z+1	; 0x01
    40be:	4f 5f       	subi	r20, 0xFF	; 255
    40c0:	5f 4f       	sbci	r21, 0xFF	; 255
    40c2:	51 83       	std	Z+1, r21	; 0x01
    40c4:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    40c6:	3f 7e       	andi	r19, 0xEF	; 239
    40c8:	30 93 4e 03 	sts	0x034E, r19
    40cc:	20 93 4d 03 	sts	0x034D, r18
							rtc.interupts|=(1<<Timerlauft);
    40d0:	92 62       	ori	r25, 0x22	; 34
    40d2:	90 93 96 07 	sts	0x0796, r25
							break;
    40d6:	a6 c2       	rjmp	.+1356   	; 0x4624 <__stack+0x525>
						default:
						rtc.Timerzahler=(taste-'0')*10;
    40d8:	48 2f       	mov	r20, r24
    40da:	50 e0       	ldi	r21, 0x00	; 0
    40dc:	40 53       	subi	r20, 0x30	; 48
    40de:	51 09       	sbc	r21, r1
    40e0:	9a e0       	ldi	r25, 0x0A	; 10
    40e2:	94 9f       	mul	r25, r20
    40e4:	90 01       	movw	r18, r0
    40e6:	95 9f       	mul	r25, r21
    40e8:	30 0d       	add	r19, r0
    40ea:	11 24       	eor	r1, r1
    40ec:	30 93 9a 07 	sts	0x079A, r19
    40f0:	20 93 99 07 	sts	0x0799, r18
						pos++;
    40f4:	91 e0       	ldi	r25, 0x01	; 1
    40f6:	90 93 4c 03 	sts	0x034C, r25
						break;
    40fa:	70 c2       	rjmp	.+1248   	; 0x45dc <__stack+0x4dd>
					}
					break;
				case 1:
					switch (taste)
    40fc:	83 32       	cpi	r24, 0x23	; 35
    40fe:	19 f0       	breq	.+6      	; 0x4106 <__stack+0x7>
    4100:	8a 32       	cpi	r24, 0x2A	; 42
    4102:	41 f0       	breq	.+16     	; 0x4114 <__stack+0x15>
    4104:	1a c0       	rjmp	.+52     	; 0x413a <__stack+0x3b>
					{
						case '#':
							pos=0;
    4106:	10 92 4c 03 	sts	0x034C, r1
							rtc.Timerzahler=0;
    410a:	10 92 9a 07 	sts	0x079A, r1
    410e:	10 92 99 07 	sts	0x0799, r1
							break;
    4112:	08 95       	ret
						case '*':
							pos=0;
    4114:	10 92 4c 03 	sts	0x034C, r1
							rtc.Timerzahler++;
    4118:	e9 e9       	ldi	r30, 0x99	; 153
    411a:	f7 e0       	ldi	r31, 0x07	; 7
    411c:	40 81       	ld	r20, Z
    411e:	51 81       	ldd	r21, Z+1	; 0x01
    4120:	4f 5f       	subi	r20, 0xFF	; 255
    4122:	5f 4f       	sbci	r21, 0xFF	; 255
    4124:	51 83       	std	Z+1, r21	; 0x01
    4126:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    4128:	3f 7e       	andi	r19, 0xEF	; 239
    412a:	30 93 4e 03 	sts	0x034E, r19
    412e:	20 93 4d 03 	sts	0x034D, r18
							rtc.interupts|=(1<<Timerlauft);
    4132:	92 62       	ori	r25, 0x22	; 34
    4134:	90 93 96 07 	sts	0x0796, r25
							break;
    4138:	75 c2       	rjmp	.+1258   	; 0x4624 <__stack+0x525>
						default:
						rtc.Timerzahler+=(taste-'0');
    413a:	e9 e9       	ldi	r30, 0x99	; 153
    413c:	f7 e0       	ldi	r31, 0x07	; 7
    413e:	20 81       	ld	r18, Z
    4140:	31 81       	ldd	r19, Z+1	; 0x01
    4142:	20 53       	subi	r18, 0x30	; 48
    4144:	31 09       	sbc	r19, r1
    4146:	28 0f       	add	r18, r24
    4148:	31 1d       	adc	r19, r1
    414a:	31 83       	std	Z+1, r19	; 0x01
    414c:	20 83       	st	Z, r18
						pos++;
    414e:	92 e0       	ldi	r25, 0x02	; 2
    4150:	90 93 4c 03 	sts	0x034C, r25
						break;
    4154:	43 c2       	rjmp	.+1158   	; 0x45dc <__stack+0x4dd>
					}
					break;
				case 2:
					switch (taste)
    4156:	83 32       	cpi	r24, 0x23	; 35
    4158:	19 f0       	breq	.+6      	; 0x4160 <__stack+0x61>
    415a:	8a 32       	cpi	r24, 0x2A	; 42
    415c:	41 f0       	breq	.+16     	; 0x416e <__stack+0x6f>
    415e:	1a c0       	rjmp	.+52     	; 0x4194 <__stack+0x95>
					{
						case '#':
							pos=0;
    4160:	10 92 4c 03 	sts	0x034C, r1
							rtc.Timerzahler=0;
    4164:	10 92 9a 07 	sts	0x079A, r1
    4168:	10 92 99 07 	sts	0x0799, r1
							break;
    416c:	08 95       	ret
						case '*':
							pos=0;
    416e:	10 92 4c 03 	sts	0x034C, r1
							rtc.Timerzahler++;
    4172:	e9 e9       	ldi	r30, 0x99	; 153
    4174:	f7 e0       	ldi	r31, 0x07	; 7
    4176:	40 81       	ld	r20, Z
    4178:	51 81       	ldd	r21, Z+1	; 0x01
    417a:	4f 5f       	subi	r20, 0xFF	; 255
    417c:	5f 4f       	sbci	r21, 0xFF	; 255
    417e:	51 83       	std	Z+1, r21	; 0x01
    4180:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    4182:	3f 7e       	andi	r19, 0xEF	; 239
    4184:	30 93 4e 03 	sts	0x034E, r19
    4188:	20 93 4d 03 	sts	0x034D, r18
							rtc.interupts|=(1<<Timerlauft);;
    418c:	92 62       	ori	r25, 0x22	; 34
    418e:	90 93 96 07 	sts	0x0796, r25
							break;
    4192:	48 c2       	rjmp	.+1168   	; 0x4624 <__stack+0x525>
						default:
						rtc.Timerzahler+=(taste-'0')*10*60;
    4194:	e9 e9       	ldi	r30, 0x99	; 153
    4196:	f7 e0       	ldi	r31, 0x07	; 7
    4198:	68 2f       	mov	r22, r24
    419a:	70 e0       	ldi	r23, 0x00	; 0
    419c:	60 53       	subi	r22, 0x30	; 48
    419e:	71 09       	sbc	r23, r1
    41a0:	28 e5       	ldi	r18, 0x58	; 88
    41a2:	32 e0       	ldi	r19, 0x02	; 2
    41a4:	62 9f       	mul	r22, r18
    41a6:	a0 01       	movw	r20, r0
    41a8:	63 9f       	mul	r22, r19
    41aa:	50 0d       	add	r21, r0
    41ac:	72 9f       	mul	r23, r18
    41ae:	50 0d       	add	r21, r0
    41b0:	11 24       	eor	r1, r1
    41b2:	20 81       	ld	r18, Z
    41b4:	31 81       	ldd	r19, Z+1	; 0x01
    41b6:	24 0f       	add	r18, r20
    41b8:	35 1f       	adc	r19, r21
    41ba:	31 83       	std	Z+1, r19	; 0x01
    41bc:	20 83       	st	Z, r18
						pos++;
    41be:	93 e0       	ldi	r25, 0x03	; 3
    41c0:	90 93 4c 03 	sts	0x034C, r25
						break;
    41c4:	0b c2       	rjmp	.+1046   	; 0x45dc <__stack+0x4dd>
					}
					break;
				case 3:
					switch (taste)
    41c6:	83 32       	cpi	r24, 0x23	; 35
    41c8:	19 f0       	breq	.+6      	; 0x41d0 <__stack+0xd1>
    41ca:	8a 32       	cpi	r24, 0x2A	; 42
    41cc:	41 f0       	breq	.+16     	; 0x41de <__stack+0xdf>
    41ce:	1a c0       	rjmp	.+52     	; 0x4204 <__stack+0x105>
					{
						case '#':
							pos=0;
    41d0:	10 92 4c 03 	sts	0x034C, r1
							rtc.Timerzahler=0;
    41d4:	10 92 9a 07 	sts	0x079A, r1
    41d8:	10 92 99 07 	sts	0x0799, r1
							break;
    41dc:	08 95       	ret
						case '*':
							pos=0;
    41de:	10 92 4c 03 	sts	0x034C, r1
							rtc.Timerzahler++;
    41e2:	e9 e9       	ldi	r30, 0x99	; 153
    41e4:	f7 e0       	ldi	r31, 0x07	; 7
    41e6:	40 81       	ld	r20, Z
    41e8:	51 81       	ldd	r21, Z+1	; 0x01
    41ea:	4f 5f       	subi	r20, 0xFF	; 255
    41ec:	5f 4f       	sbci	r21, 0xFF	; 255
    41ee:	51 83       	std	Z+1, r21	; 0x01
    41f0:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    41f2:	3f 7e       	andi	r19, 0xEF	; 239
    41f4:	30 93 4e 03 	sts	0x034E, r19
    41f8:	20 93 4d 03 	sts	0x034D, r18
							rtc.interupts|=(1<<Timerlauft);
    41fc:	92 62       	ori	r25, 0x22	; 34
    41fe:	90 93 96 07 	sts	0x0796, r25
							break;
    4202:	10 c2       	rjmp	.+1056   	; 0x4624 <__stack+0x525>
						default:
						rtc.Timerzahler+=(taste-'0')*60;
    4204:	e9 e9       	ldi	r30, 0x99	; 153
    4206:	f7 e0       	ldi	r31, 0x07	; 7
    4208:	28 2f       	mov	r18, r24
    420a:	30 e0       	ldi	r19, 0x00	; 0
    420c:	20 53       	subi	r18, 0x30	; 48
    420e:	31 09       	sbc	r19, r1
    4210:	9c e3       	ldi	r25, 0x3C	; 60
    4212:	92 9f       	mul	r25, r18
    4214:	a0 01       	movw	r20, r0
    4216:	93 9f       	mul	r25, r19
    4218:	50 0d       	add	r21, r0
    421a:	11 24       	eor	r1, r1
    421c:	20 81       	ld	r18, Z
    421e:	31 81       	ldd	r19, Z+1	; 0x01
    4220:	24 0f       	add	r18, r20
    4222:	35 1f       	adc	r19, r21
    4224:	31 83       	std	Z+1, r19	; 0x01
    4226:	20 83       	st	Z, r18
						pos++;
    4228:	94 e0       	ldi	r25, 0x04	; 4
    422a:	90 93 4c 03 	sts	0x034C, r25
						break;
    422e:	d6 c1       	rjmp	.+940    	; 0x45dc <__stack+0x4dd>
					}
					break;
				case 4:
					switch (taste)
    4230:	83 32       	cpi	r24, 0x23	; 35
    4232:	19 f0       	breq	.+6      	; 0x423a <__stack+0x13b>
    4234:	8a 32       	cpi	r24, 0x2A	; 42
    4236:	41 f0       	breq	.+16     	; 0x4248 <__stack+0x149>
    4238:	1a c0       	rjmp	.+52     	; 0x426e <__stack+0x16f>
					{
						case '#':
							pos=0;
    423a:	10 92 4c 03 	sts	0x034C, r1
							rtc.Timerzahler=0;
    423e:	10 92 9a 07 	sts	0x079A, r1
    4242:	10 92 99 07 	sts	0x0799, r1
							break;
    4246:	08 95       	ret
						case '*':
							pos=0;
    4248:	10 92 4c 03 	sts	0x034C, r1
							rtc.Timerzahler++;
    424c:	e9 e9       	ldi	r30, 0x99	; 153
    424e:	f7 e0       	ldi	r31, 0x07	; 7
    4250:	40 81       	ld	r20, Z
    4252:	51 81       	ldd	r21, Z+1	; 0x01
    4254:	4f 5f       	subi	r20, 0xFF	; 255
    4256:	5f 4f       	sbci	r21, 0xFF	; 255
    4258:	51 83       	std	Z+1, r21	; 0x01
    425a:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    425c:	3f 7e       	andi	r19, 0xEF	; 239
    425e:	30 93 4e 03 	sts	0x034E, r19
    4262:	20 93 4d 03 	sts	0x034D, r18
							rtc.interupts|=(1<<Timerlauft);
    4266:	92 62       	ori	r25, 0x22	; 34
    4268:	90 93 96 07 	sts	0x0796, r25
							break;
    426c:	db c1       	rjmp	.+950    	; 0x4624 <__stack+0x525>
						default:
						rtc.Timerzahler+=(taste-'0')*10*3600;
    426e:	e9 e9       	ldi	r30, 0x99	; 153
    4270:	f7 e0       	ldi	r31, 0x07	; 7
    4272:	68 2f       	mov	r22, r24
    4274:	70 e0       	ldi	r23, 0x00	; 0
    4276:	60 53       	subi	r22, 0x30	; 48
    4278:	71 09       	sbc	r23, r1
    427a:	20 ea       	ldi	r18, 0xA0	; 160
    427c:	3c e8       	ldi	r19, 0x8C	; 140
    427e:	62 9f       	mul	r22, r18
    4280:	a0 01       	movw	r20, r0
    4282:	63 9f       	mul	r22, r19
    4284:	50 0d       	add	r21, r0
    4286:	72 9f       	mul	r23, r18
    4288:	50 0d       	add	r21, r0
    428a:	11 24       	eor	r1, r1
    428c:	20 81       	ld	r18, Z
    428e:	31 81       	ldd	r19, Z+1	; 0x01
    4290:	24 0f       	add	r18, r20
    4292:	35 1f       	adc	r19, r21
    4294:	31 83       	std	Z+1, r19	; 0x01
    4296:	20 83       	st	Z, r18
						pos++;
    4298:	95 e0       	ldi	r25, 0x05	; 5
    429a:	90 93 4c 03 	sts	0x034C, r25
						break;
    429e:	9e c1       	rjmp	.+828    	; 0x45dc <__stack+0x4dd>
					}
					break;
				case 5:
					switch (taste)
    42a0:	83 32       	cpi	r24, 0x23	; 35
    42a2:	19 f0       	breq	.+6      	; 0x42aa <__stack+0x1ab>
    42a4:	8a 32       	cpi	r24, 0x2A	; 42
    42a6:	31 f0       	breq	.+12     	; 0x42b4 <__stack+0x1b5>
    42a8:	16 c0       	rjmp	.+44     	; 0x42d6 <__stack+0x1d7>
					{
						case '#':
							pos=0;
							rtc.Timerzahler=0;
    42aa:	10 92 9a 07 	sts	0x079A, r1
    42ae:	10 92 99 07 	sts	0x0799, r1
							break;
    42b2:	26 c0       	rjmp	.+76     	; 0x4300 <__stack+0x201>
						case '*':
							pos=0;
							rtc.Timerzahler++;
    42b4:	e9 e9       	ldi	r30, 0x99	; 153
    42b6:	f7 e0       	ldi	r31, 0x07	; 7
    42b8:	40 81       	ld	r20, Z
    42ba:	51 81       	ldd	r21, Z+1	; 0x01
    42bc:	4f 5f       	subi	r20, 0xFF	; 255
    42be:	5f 4f       	sbci	r21, 0xFF	; 255
    42c0:	51 83       	std	Z+1, r21	; 0x01
    42c2:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    42c4:	3f 7e       	andi	r19, 0xEF	; 239
    42c6:	30 93 4e 03 	sts	0x034E, r19
    42ca:	20 93 4d 03 	sts	0x034D, r18
							rtc.interupts|=(1<<Timerlauft);
    42ce:	92 62       	ori	r25, 0x22	; 34
    42d0:	90 93 96 07 	sts	0x0796, r25
							break;
    42d4:	15 c0       	rjmp	.+42     	; 0x4300 <__stack+0x201>
						default:
						rtc.Timerzahler+=(taste-'0')*3600;
    42d6:	e9 e9       	ldi	r30, 0x99	; 153
    42d8:	f7 e0       	ldi	r31, 0x07	; 7
    42da:	68 2f       	mov	r22, r24
    42dc:	70 e0       	ldi	r23, 0x00	; 0
    42de:	60 53       	subi	r22, 0x30	; 48
    42e0:	71 09       	sbc	r23, r1
    42e2:	20 e1       	ldi	r18, 0x10	; 16
    42e4:	3e e0       	ldi	r19, 0x0E	; 14
    42e6:	62 9f       	mul	r22, r18
    42e8:	a0 01       	movw	r20, r0
    42ea:	63 9f       	mul	r22, r19
    42ec:	50 0d       	add	r21, r0
    42ee:	72 9f       	mul	r23, r18
    42f0:	50 0d       	add	r21, r0
    42f2:	11 24       	eor	r1, r1
    42f4:	20 81       	ld	r18, Z
    42f6:	31 81       	ldd	r19, Z+1	; 0x01
    42f8:	24 0f       	add	r18, r20
    42fa:	35 1f       	adc	r19, r21
    42fc:	31 83       	std	Z+1, r19	; 0x01
    42fe:	20 83       	st	Z, r18
						pos++;
						break;
					}
					pos=0;
    4300:	10 92 4c 03 	sts	0x034C, r1
					rtc.Timerzahler++;
    4304:	e9 e9       	ldi	r30, 0x99	; 153
    4306:	f7 e0       	ldi	r31, 0x07	; 7
    4308:	20 81       	ld	r18, Z
    430a:	31 81       	ldd	r19, Z+1	; 0x01
    430c:	2f 5f       	subi	r18, 0xFF	; 255
    430e:	3f 4f       	sbci	r19, 0xFF	; 255
    4310:	31 83       	std	Z+1, r19	; 0x01
    4312:	20 83       	st	Z, r18
					anzeige&=~(1<<Einstellungsflag);
    4314:	20 91 4d 03 	lds	r18, 0x034D
    4318:	30 91 4e 03 	lds	r19, 0x034E
    431c:	3f 7e       	andi	r19, 0xEF	; 239
    431e:	30 93 4e 03 	sts	0x034E, r19
    4322:	20 93 4d 03 	sts	0x034D, r18
					rtc.interupts|=(1<<Timerlauft);
    4326:	e6 e9       	ldi	r30, 0x96	; 150
    4328:	f7 e0       	ldi	r31, 0x07	; 7
    432a:	90 81       	ld	r25, Z
    432c:	90 62       	ori	r25, 0x20	; 32
    432e:	90 83       	st	Z, r25
					break;
    4330:	55 c1       	rjmp	.+682    	; 0x45dc <__stack+0x4dd>
				default:
					break;
			}
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    4332:	23 ff       	sbrs	r18, 3
    4334:	22 c0       	rjmp	.+68     	; 0x437a <__stack+0x27b>
		{
			if (taste=='*')
    4336:	8a 32       	cpi	r24, 0x2A	; 42
    4338:	59 f4       	brne	.+22     	; 0x4350 <__stack+0x251>
			{
				if ((rtc.interupts&(1<<Stoppuhrlauft)))
    433a:	96 ff       	sbrs	r25, 6
    433c:	05 c0       	rjmp	.+10     	; 0x4348 <__stack+0x249>
				{
					rtc.interupts&=~(1<<Stoppuhrlauft);
    433e:	9f 7b       	andi	r25, 0xBF	; 191
    4340:	92 60       	ori	r25, 0x02	; 2
    4342:	90 93 96 07 	sts	0x0796, r25
    4346:	6e c1       	rjmp	.+732    	; 0x4624 <__stack+0x525>
				}
				else{
					rtc.interupts|=(1<<Stoppuhrlauft);
    4348:	92 64       	ori	r25, 0x42	; 66
    434a:	90 93 96 07 	sts	0x0796, r25
    434e:	6a c1       	rjmp	.+724    	; 0x4624 <__stack+0x525>
				}
			}
			else if (taste=='0')
    4350:	80 33       	cpi	r24, 0x30	; 48
    4352:	29 f4       	brne	.+10     	; 0x435e <__stack+0x25f>
			{
				rtc.Stoppuhrzahler=0;
    4354:	10 92 9c 07 	sts	0x079C, r1
    4358:	10 92 9b 07 	sts	0x079B, r1
    435c:	08 95       	ret
			}
			else if (taste=='#')
    435e:	83 32       	cpi	r24, 0x23	; 35
    4360:	09 f0       	breq	.+2      	; 0x4364 <__stack+0x265>
    4362:	66 c1       	rjmp	.+716    	; 0x4630 <__stack+0x531>
			{
				anzeige&=~((1<<Stoppuhrflag));
				rtc.interupts&=~(1<<Stoppuhrlauft);
    4364:	9f 7b       	andi	r25, 0xBF	; 191
    4366:	92 60       	ori	r25, 0x02	; 2
    4368:	90 93 96 07 	sts	0x0796, r25
			{
				rtc.Stoppuhrzahler=0;
			}
			else if (taste=='#')
			{
				anzeige&=~((1<<Stoppuhrflag));
    436c:	27 7f       	andi	r18, 0xF7	; 247
				rtc.interupts&=~(1<<Stoppuhrlauft);
				anzeige|=(1<<menueflag);
    436e:	30 62       	ori	r19, 0x20	; 32
    4370:	30 93 4e 03 	sts	0x034E, r19
    4374:	20 93 4d 03 	sts	0x034D, r18
    4378:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflag)))
    437a:	21 ff       	sbrs	r18, 1
    437c:	26 c0       	rjmp	.+76     	; 0x43ca <__stack+0x2cb>
		{
			if (taste=='#')
    437e:	83 32       	cpi	r24, 0x23	; 35
    4380:	49 f4       	brne	.+18     	; 0x4394 <__stack+0x295>
			{
				pos=0;
    4382:	10 92 4c 03 	sts	0x034C, r1
				anzeige&=~(1<<Uhrflag);
    4386:	2d 7f       	andi	r18, 0xFD	; 253
				anzeige|=(1<<menueflag);
    4388:	30 62       	ori	r19, 0x20	; 32
    438a:	30 93 4e 03 	sts	0x034E, r19
    438e:	20 93 4d 03 	sts	0x034D, r18
    4392:	08 95       	ret
			}
			else if (taste=='*')
    4394:	8a 32       	cpi	r24, 0x2A	; 42
    4396:	49 f4       	brne	.+18     	; 0x43aa <__stack+0x2ab>
			{
				pos++;
    4398:	80 91 4c 03 	lds	r24, 0x034C
    439c:	8f 5f       	subi	r24, 0xFF	; 255
				if (pos>1)
    439e:	82 30       	cpi	r24, 0x02	; 2
    43a0:	08 f4       	brcc	.+2      	; 0x43a4 <__stack+0x2a5>
    43a2:	3e c1       	rjmp	.+636    	; 0x4620 <__stack+0x521>
				{
					pos=0;
    43a4:	10 92 4c 03 	sts	0x034C, r1
    43a8:	3d c1       	rjmp	.+634    	; 0x4624 <__stack+0x525>
				}
			}
			else if (taste=='0')
    43aa:	80 33       	cpi	r24, 0x30	; 48
    43ac:	09 f0       	breq	.+2      	; 0x43b0 <__stack+0x2b1>
    43ae:	40 c1       	rjmp	.+640    	; 0x4630 <__stack+0x531>
			{
				if (LED.ison())
    43b0:	8a e7       	ldi	r24, 0x7A	; 122
    43b2:	93 e0       	ldi	r25, 0x03	; 3
    43b4:	92 d6       	rcall	.+3364   	; 0x50da <_ZN6Output4isonEv>
    43b6:	88 23       	and	r24, r24
    43b8:	21 f0       	breq	.+8      	; 0x43c2 <__stack+0x2c3>
				{
					LED.off();
    43ba:	8a e7       	ldi	r24, 0x7A	; 122
    43bc:	93 e0       	ldi	r25, 0x03	; 3
    43be:	d0 c6       	rjmp	.+3488   	; 0x5160 <_ZN6Output3offEv>
    43c0:	08 95       	ret
				}
				else{
					LED.on();
    43c2:	8a e7       	ldi	r24, 0x7A	; 122
    43c4:	93 e0       	ldi	r25, 0x03	; 3
    43c6:	40 c6       	rjmp	.+3200   	; 0x5048 <_ZN6Output2onEv>
    43c8:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Kompasflag)))
    43ca:	27 ff       	sbrs	r18, 7
    43cc:	1a c0       	rjmp	.+52     	; 0x4402 <__stack+0x303>
		{
			if (taste=='#')
    43ce:	83 32       	cpi	r24, 0x23	; 35
    43d0:	41 f4       	brne	.+16     	; 0x43e2 <__stack+0x2e3>
			{
				anzeige&=~(1<<Kompasflag);
    43d2:	c9 01       	movw	r24, r18
    43d4:	8f 77       	andi	r24, 0x7F	; 127
				anzeige|=(1<<menueflag);
    43d6:	90 62       	ori	r25, 0x20	; 32
    43d8:	90 93 4e 03 	sts	0x034E, r25
    43dc:	80 93 4d 03 	sts	0x034D, r24
    43e0:	08 95       	ret
			}
			else if (taste=='0')
    43e2:	80 33       	cpi	r24, 0x30	; 48
    43e4:	09 f0       	breq	.+2      	; 0x43e8 <__stack+0x2e9>
    43e6:	fa c0       	rjmp	.+500    	; 0x45dc <__stack+0x4dd>
			{
				if (LED.ison())
    43e8:	8a e7       	ldi	r24, 0x7A	; 122
    43ea:	93 e0       	ldi	r25, 0x03	; 3
    43ec:	76 d6       	rcall	.+3308   	; 0x50da <_ZN6Output4isonEv>
    43ee:	88 23       	and	r24, r24
    43f0:	21 f0       	breq	.+8      	; 0x43fa <__stack+0x2fb>
				{
					LED.off();
    43f2:	8a e7       	ldi	r24, 0x7A	; 122
    43f4:	93 e0       	ldi	r25, 0x03	; 3
    43f6:	b4 c6       	rjmp	.+3432   	; 0x5160 <_ZN6Output3offEv>
    43f8:	08 95       	ret
				}
				else{
					LED.on();
    43fa:	8a e7       	ldi	r24, 0x7A	; 122
    43fc:	93 e0       	ldi	r25, 0x03	; 3
    43fe:	24 c6       	rjmp	.+3144   	; 0x5048 <_ZN6Output2onEv>
    4400:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Fahradflag)))
    4402:	20 ff       	sbrs	r18, 0
    4404:	3a c0       	rjmp	.+116    	; 0x447a <__stack+0x37b>
		{
			if (taste=='#')
    4406:	83 32       	cpi	r24, 0x23	; 35
    4408:	69 f4       	brne	.+26     	; 0x4424 <__stack+0x325>
			{
				anzeige&=~(1<<Fahradflag);
    440a:	c9 01       	movw	r24, r18
    440c:	8e 7f       	andi	r24, 0xFE	; 254
				anzeige|=(1<<menueflag);
    440e:	90 62       	ori	r25, 0x20	; 32
    4410:	90 93 4e 03 	sts	0x034E, r25
    4414:	80 93 4d 03 	sts	0x034D, r24
				TCCR1B &= ~((1<<CS12) | (1<<CS10));
    4418:	e1 e8       	ldi	r30, 0x81	; 129
    441a:	f0 e0       	ldi	r31, 0x00	; 0
    441c:	80 81       	ld	r24, Z
    441e:	8a 7f       	andi	r24, 0xFA	; 250
    4420:	80 83       	st	Z, r24
    4422:	08 95       	ret
			}
			else if (taste=='*')
    4424:	8a 32       	cpi	r24, 0x2A	; 42
    4426:	c9 f4       	brne	.+50     	; 0x445a <__stack+0x35b>
			{
				maxgeschw = 0;
    4428:	10 92 40 03 	sts	0x0340, r1
    442c:	10 92 41 03 	sts	0x0341, r1
    4430:	10 92 42 03 	sts	0x0342, r1
    4434:	10 92 43 03 	sts	0x0343, r1
				strecke = 0;
    4438:	10 92 44 03 	sts	0x0344, r1
    443c:	10 92 45 03 	sts	0x0345, r1
    4440:	10 92 46 03 	sts	0x0346, r1
    4444:	10 92 47 03 	sts	0x0347, r1
				Fahrtzeit = 0;
    4448:	10 92 3c 03 	sts	0x033C, r1
    444c:	10 92 3d 03 	sts	0x033D, r1
    4450:	10 92 3e 03 	sts	0x033E, r1
    4454:	10 92 3f 03 	sts	0x033F, r1
    4458:	e5 c0       	rjmp	.+458    	; 0x4624 <__stack+0x525>
			}
			else if (taste=='0')
    445a:	80 33       	cpi	r24, 0x30	; 48
    445c:	09 f0       	breq	.+2      	; 0x4460 <__stack+0x361>
    445e:	e8 c0       	rjmp	.+464    	; 0x4630 <__stack+0x531>
			{
				if (LED.ison())
    4460:	8a e7       	ldi	r24, 0x7A	; 122
    4462:	93 e0       	ldi	r25, 0x03	; 3
    4464:	3a d6       	rcall	.+3188   	; 0x50da <_ZN6Output4isonEv>
    4466:	88 23       	and	r24, r24
    4468:	21 f0       	breq	.+8      	; 0x4472 <__stack+0x373>
				{
					LED.off();
    446a:	8a e7       	ldi	r24, 0x7A	; 122
    446c:	93 e0       	ldi	r25, 0x03	; 3
    446e:	78 c6       	rjmp	.+3312   	; 0x5160 <_ZN6Output3offEv>
    4470:	08 95       	ret
				}
				else{
					LED.on();
    4472:	8a e7       	ldi	r24, 0x7A	; 122
    4474:	93 e0       	ldi	r25, 0x03	; 3
    4476:	e8 c5       	rjmp	.+3024   	; 0x5048 <_ZN6Output2onEv>
    4478:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Druckflag)))
    447a:	32 ff       	sbrs	r19, 2
    447c:	29 c0       	rjmp	.+82     	; 0x44d0 <__stack+0x3d1>
		{
			if (taste=='#')
    447e:	83 32       	cpi	r24, 0x23	; 35
    4480:	41 f4       	brne	.+16     	; 0x4492 <__stack+0x393>
			{
				anzeige&=~(1<<Druckflag);
    4482:	c9 01       	movw	r24, r18
    4484:	9b 7f       	andi	r25, 0xFB	; 251
				anzeige|=(1<<menueflag);
    4486:	90 62       	ori	r25, 0x20	; 32
    4488:	90 93 4e 03 	sts	0x034E, r25
    448c:	80 93 4d 03 	sts	0x034D, r24
    4490:	08 95       	ret
			}
			else if (taste=='*')
    4492:	8a 32       	cpi	r24, 0x2A	; 42
    4494:	69 f4       	brne	.+26     	; 0x44b0 <__stack+0x3b1>
			{
				Baro.set_Pressure0(Baro.Press);
    4496:	40 91 66 03 	lds	r20, 0x0366
    449a:	50 91 67 03 	lds	r21, 0x0367
    449e:	60 91 68 03 	lds	r22, 0x0368
    44a2:	70 91 69 03 	lds	r23, 0x0369
    44a6:	86 e6       	ldi	r24, 0x66	; 102
    44a8:	93 e0       	ldi	r25, 0x03	; 3
    44aa:	0e 94 a9 2a 	call	0x5552	; 0x5552 <_ZN8Pressure13set_Pressure0Ed>
    44ae:	ba c0       	rjmp	.+372    	; 0x4624 <__stack+0x525>
			}
			else if (taste=='0')
    44b0:	80 33       	cpi	r24, 0x30	; 48
    44b2:	09 f0       	breq	.+2      	; 0x44b6 <__stack+0x3b7>
    44b4:	bd c0       	rjmp	.+378    	; 0x4630 <__stack+0x531>
			{
				if (LED.ison())
    44b6:	8a e7       	ldi	r24, 0x7A	; 122
    44b8:	93 e0       	ldi	r25, 0x03	; 3
    44ba:	0f d6       	rcall	.+3102   	; 0x50da <_ZN6Output4isonEv>
    44bc:	88 23       	and	r24, r24
    44be:	21 f0       	breq	.+8      	; 0x44c8 <__stack+0x3c9>
				{
					LED.off();
    44c0:	8a e7       	ldi	r24, 0x7A	; 122
    44c2:	93 e0       	ldi	r25, 0x03	; 3
    44c4:	4d c6       	rjmp	.+3226   	; 0x5160 <_ZN6Output3offEv>
    44c6:	08 95       	ret
				}
				else{
					LED.on();
    44c8:	8a e7       	ldi	r24, 0x7A	; 122
    44ca:	93 e0       	ldi	r25, 0x03	; 3
    44cc:	bd c5       	rjmp	.+2938   	; 0x5048 <_ZN6Output2onEv>
    44ce:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Timerflag)))
    44d0:	22 ff       	sbrs	r18, 2
    44d2:	23 c0       	rjmp	.+70     	; 0x451a <__stack+0x41b>
		{
			if (taste=='#')
    44d4:	83 32       	cpi	r24, 0x23	; 35
    44d6:	09 f0       	breq	.+2      	; 0x44da <__stack+0x3db>
    44d8:	81 c0       	rjmp	.+258    	; 0x45dc <__stack+0x4dd>
			{
				anzeige&=~((1<<Timerflag)|(1<<blinkflag));
    44da:	2b 7f       	andi	r18, 0xFB	; 251
    44dc:	3f 7b       	andi	r19, 0xBF	; 191
    44de:	30 93 4e 03 	sts	0x034E, r19
    44e2:	20 93 4d 03 	sts	0x034D, r18
				rtc.interupts&=~((1<<Timerlauft)|(1<<Alarm));
    44e6:	89 2f       	mov	r24, r25
    44e8:	8e 7d       	andi	r24, 0xDE	; 222
    44ea:	82 60       	ori	r24, 0x02	; 2
    44ec:	80 93 96 07 	sts	0x0796, r24
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    44f0:	60 e0       	ldi	r22, 0x00	; 0
    44f2:	8d e7       	ldi	r24, 0x7D	; 125
    44f4:	93 e0       	ldi	r25, 0x03	; 3
    44f6:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
				LED.off();
    44fa:	8a e7       	ldi	r24, 0x7A	; 122
    44fc:	93 e0       	ldi	r25, 0x03	; 3
    44fe:	30 d6       	rcall	.+3168   	; 0x5160 <_ZN6Output3offEv>
				Vibrationsmotor.off();
    4500:	88 e7       	ldi	r24, 0x78	; 120
    4502:	93 e0       	ldi	r25, 0x03	; 3
    4504:	2d d6       	rcall	.+3162   	; 0x5160 <_ZN6Output3offEv>
				
				anzeige|=(1<<menueflag);
    4506:	80 91 4d 03 	lds	r24, 0x034D
    450a:	90 91 4e 03 	lds	r25, 0x034E
    450e:	90 62       	ori	r25, 0x20	; 32
    4510:	90 93 4e 03 	sts	0x034E, r25
    4514:	80 93 4d 03 	sts	0x034D, r24
    4518:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflaggross)))
    451a:	25 ff       	sbrs	r18, 5
    451c:	22 c0       	rjmp	.+68     	; 0x4562 <__stack+0x463>
		{
			if (taste=='#')
    451e:	83 32       	cpi	r24, 0x23	; 35
    4520:	41 f4       	brne	.+16     	; 0x4532 <__stack+0x433>
			{
				anzeige&=~(1<<Uhrflaggross);
    4522:	c9 01       	movw	r24, r18
    4524:	8f 7d       	andi	r24, 0xDF	; 223
				anzeige|=(1<<menueflag);
    4526:	90 62       	ori	r25, 0x20	; 32
    4528:	90 93 4e 03 	sts	0x034E, r25
    452c:	80 93 4d 03 	sts	0x034D, r24
    4530:	08 95       	ret
			}
			else if (taste=='0')
    4532:	80 33       	cpi	r24, 0x30	; 48
    4534:	09 f0       	breq	.+2      	; 0x4538 <__stack+0x439>
    4536:	52 c0       	rjmp	.+164    	; 0x45dc <__stack+0x4dd>
			{
				if (LED.ison())
    4538:	8a e7       	ldi	r24, 0x7A	; 122
    453a:	93 e0       	ldi	r25, 0x03	; 3
    453c:	ce d5       	rcall	.+2972   	; 0x50da <_ZN6Output4isonEv>
    453e:	88 23       	and	r24, r24
    4540:	41 f0       	breq	.+16     	; 0x4552 <__stack+0x453>
				{
					LED.off();
    4542:	8a e7       	ldi	r24, 0x7A	; 122
    4544:	93 e0       	ldi	r25, 0x03	; 3
    4546:	0c d6       	rcall	.+3096   	; 0x5160 <_ZN6Output3offEv>
					Lautsprecher.off();
    4548:	83 e5       	ldi	r24, 0x53	; 83
    454a:	93 e0       	ldi	r25, 0x03	; 3
    454c:	0c 94 03 2c 	jmp	0x5806	; 0x5806 <_ZN5SOUND3offEv>
    4550:	08 95       	ret
				}
				else{
					LED.on();
    4552:	8a e7       	ldi	r24, 0x7A	; 122
    4554:	93 e0       	ldi	r25, 0x03	; 3
    4556:	78 d5       	rcall	.+2800   	; 0x5048 <_ZN6Output2onEv>
					Lautsprecher.on();
    4558:	83 e5       	ldi	r24, 0x53	; 83
    455a:	93 e0       	ldi	r25, 0x03	; 3
    455c:	0c 94 fa 2b 	jmp	0x57f4	; 0x57f4 <_ZN5SOUND2onEv>
    4560:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Wanderflag)))
    4562:	33 ff       	sbrs	r19, 3
    4564:	0a c0       	rjmp	.+20     	; 0x457a <__stack+0x47b>
		{
			if (taste=='#')
    4566:	83 32       	cpi	r24, 0x23	; 35
    4568:	c9 f5       	brne	.+114    	; 0x45dc <__stack+0x4dd>
			{
				anzeige &= ~(1<<Wanderflag);
    456a:	c9 01       	movw	r24, r18
    456c:	97 7f       	andi	r25, 0xF7	; 247
				anzeige |= (1<<menueflag);
    456e:	90 62       	ori	r25, 0x20	; 32
    4570:	90 93 4e 03 	sts	0x034E, r25
    4574:	80 93 4d 03 	sts	0x034D, r24
    4578:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    457a:	26 ff       	sbrs	r18, 6
    457c:	26 c0       	rjmp	.+76     	; 0x45ca <__stack+0x4cb>
		{
			if (taste=='#')
    457e:	83 32       	cpi	r24, 0x23	; 35
    4580:	41 f4       	brne	.+16     	; 0x4592 <__stack+0x493>
			{
				anzeige&=~(1<<Weckeranzeigeflag);
    4582:	c9 01       	movw	r24, r18
    4584:	8f 7b       	andi	r24, 0xBF	; 191
				anzeige|=(1<<menueflag);
    4586:	90 62       	ori	r25, 0x20	; 32
    4588:	90 93 4e 03 	sts	0x034E, r25
    458c:	80 93 4d 03 	sts	0x034D, r24
    4590:	08 95       	ret
			}
			if (taste=='*')
    4592:	8a 32       	cpi	r24, 0x2A	; 42
    4594:	09 f0       	breq	.+2      	; 0x4598 <__stack+0x499>
    4596:	4c c0       	rjmp	.+152    	; 0x4630 <__stack+0x531>
			{
				if (rtc.interupts&(1<<Weckeractiv))
    4598:	94 ff       	sbrs	r25, 4
    459a:	06 c0       	rjmp	.+12     	; 0x45a8 <__stack+0x4a9>
				{
					rtc.interupts &= ~((1<<Weckerein) | (1<<Weckeractiv));
    459c:	89 2f       	mov	r24, r25
    459e:	87 7e       	andi	r24, 0xE7	; 231
    45a0:	82 60       	ori	r24, 0x02	; 2
    45a2:	80 93 96 07 	sts	0x0796, r24
    45a6:	0b c0       	rjmp	.+22     	; 0x45be <__stack+0x4bf>
				}
				else if ((rtc.interupts&(1<<Weckerein)))
    45a8:	93 ff       	sbrs	r25, 3
    45aa:	06 c0       	rjmp	.+12     	; 0x45b8 <__stack+0x4b9>
				{
					rtc.interupts &= ~(1<<Weckerein);
    45ac:	89 2f       	mov	r24, r25
    45ae:	87 7f       	andi	r24, 0xF7	; 247
    45b0:	82 60       	ori	r24, 0x02	; 2
    45b2:	80 93 96 07 	sts	0x0796, r24
    45b6:	03 c0       	rjmp	.+6      	; 0x45be <__stack+0x4bf>
				}
				else{
					rtc.interupts |= (1<<Weckerein);
    45b8:	9a 60       	ori	r25, 0x0A	; 10
    45ba:	90 93 96 07 	sts	0x0796, r25
				}
				rtc.interupts|=(1<<minuteninterupt);
    45be:	e6 e9       	ldi	r30, 0x96	; 150
    45c0:	f7 e0       	ldi	r31, 0x07	; 7
    45c2:	80 81       	ld	r24, Z
    45c4:	84 60       	ori	r24, 0x04	; 4
    45c6:	80 83       	st	Z, r24
    45c8:	2d c0       	rjmp	.+90     	; 0x4624 <__stack+0x525>
			}
		}
		else if (anzeige==0)
    45ca:	23 2b       	or	r18, r19
    45cc:	39 f4       	brne	.+14     	; 0x45dc <__stack+0x4dd>
		{
			anzeige|=(1<<menueflag);
    45ce:	80 e0       	ldi	r24, 0x00	; 0
    45d0:	90 e2       	ldi	r25, 0x20	; 32
    45d2:	90 93 4e 03 	sts	0x034E, r25
    45d6:	80 93 4d 03 	sts	0x034D, r24
    45da:	08 95       	ret
		}
		if ((anzeige&(1<<blinkflag)))
    45dc:	20 91 4d 03 	lds	r18, 0x034D
    45e0:	30 91 4e 03 	lds	r19, 0x034E
    45e4:	36 ff       	sbrs	r19, 6
    45e6:	24 c0       	rjmp	.+72     	; 0x4630 <__stack+0x531>
		{
			if (taste=='*')
    45e8:	8a 32       	cpi	r24, 0x2A	; 42
    45ea:	11 f5       	brne	.+68     	; 0x4630 <__stack+0x531>
			{
				anzeige &=~(1<<blinkflag);
    45ec:	3f 7b       	andi	r19, 0xBF	; 191
    45ee:	30 93 4e 03 	sts	0x034E, r19
    45f2:	20 93 4d 03 	sts	0x034D, r18
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    45f6:	60 e0       	ldi	r22, 0x00	; 0
    45f8:	8d e7       	ldi	r24, 0x7D	; 125
    45fa:	93 e0       	ldi	r25, 0x03	; 3
    45fc:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
				LED.off();
    4600:	8a e7       	ldi	r24, 0x7A	; 122
    4602:	93 e0       	ldi	r25, 0x03	; 3
    4604:	ad d5       	rcall	.+2906   	; 0x5160 <_ZN6Output3offEv>
				Vibrationsmotor.off();
    4606:	88 e7       	ldi	r24, 0x78	; 120
    4608:	93 e0       	ldi	r25, 0x03	; 3
    460a:	aa d5       	rcall	.+2900   	; 0x5160 <_ZN6Output3offEv>
				if ((rtc.interupts&(1<<Weckeractiv)))
    460c:	80 91 96 07 	lds	r24, 0x0796
    4610:	98 2f       	mov	r25, r24
    4612:	98 71       	andi	r25, 0x18	; 24
				{
					if ((rtc.interupts&(1<<Weckerein)))
    4614:	98 31       	cpi	r25, 0x18	; 24
    4616:	61 f4       	brne	.+24     	; 0x4630 <__stack+0x531>
					{
						rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
						rtc.interupts &= ~(1<<Alarm);
    4618:	86 7e       	andi	r24, 0xE6	; 230
    461a:	80 93 96 07 	sts	0x0796, r24
    461e:	08 95       	ret
				anzeige&=~(1<<Uhrflag);
				anzeige|=(1<<menueflag);
			}
			else if (taste=='*')
			{
				pos++;
    4620:	80 93 4c 03 	sts	0x034C, r24
		}
		else if (anzeige==0)
		{
			anzeige|=(1<<menueflag);
		}
		if ((anzeige&(1<<blinkflag)))
    4624:	20 91 4d 03 	lds	r18, 0x034D
    4628:	30 91 4e 03 	lds	r19, 0x034E
    462c:	36 fd       	sbrc	r19, 6
    462e:	de cf       	rjmp	.-68     	; 0x45ec <__stack+0x4ed>
    4630:	08 95       	ret

00004632 <main>:
void eingabehandler(uint8_t taste);

int main(void)
{
	//initialisierung
	initialisierung();
    4632:	cc d8       	rcall	.-3688   	; 0x37cc <_Z15initialisierungv>
    while(1)
    {
         //Steuerung der interupts durch Handler
         maininterupthandler();
    4634:	4b d9       	rcall	.-3434   	; 0x38cc <_Z19maininterupthandlerv>
         //Steuerung der Anzeige alle Sekunde zur aktualisierung maximale Aktulisierungsrate ist 1Hz
         anzeigehandler();
    4636:	80 d9       	rcall	.-3328   	; 0x3938 <_Z14anzeigehandlerv>
         //Tasthandler
         eingabehandler(Tastatur.Taster());
    4638:	8c e7       	ldi	r24, 0x7C	; 124
    463a:	93 e0       	ldi	r25, 0x03	; 3
    463c:	b5 d0       	rcall	.+362    	; 0x47a8 <_ZN9Interface6TasterEv>
    463e:	67 db       	rcall	.-2354   	; 0x3d0e <_Z14eingabehandlerh>
    4640:	f9 cf       	rjmp	.-14     	; 0x4634 <main+0x2>

00004642 <_GLOBAL__sub_I_kompass>:
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    4642:	8d e9       	ldi	r24, 0x9D	; 157
    4644:	97 e0       	ldi	r25, 0x07	; 7
    4646:	66 d1       	rcall	.+716    	; 0x4914 <_ZN7KompassC1Ev>

#include "RTC.h"
RTC rtc;
    4648:	8e e7       	ldi	r24, 0x7E	; 126
    464a:	97 e0       	ldi	r25, 0x07	; 7
    464c:	0e 94 33 2b 	call	0x5666	; 0x5666 <_ZN3RTCC1Ev>

#include "Display.h"
Display oled;
    4650:	8d e7       	ldi	r24, 0x7D	; 125
    4652:	93 e0       	ldi	r25, 0x03	; 3
    4654:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <_ZN7DisplayC1Ev>

#include "Interface.h"
Interface Tastatur;
    4658:	8c e7       	ldi	r24, 0x7C	; 124
    465a:	93 e0       	ldi	r25, 0x03	; 3
    465c:	71 d0       	rcall	.+226    	; 0x4740 <_ZN9InterfaceC1Ev>

#include "Output.h"
Output LED('B',PORTB1);
    465e:	41 e0       	ldi	r20, 0x01	; 1
    4660:	62 e4       	ldi	r22, 0x42	; 66
    4662:	8a e7       	ldi	r24, 0x7A	; 122
    4664:	93 e0       	ldi	r25, 0x03	; 3
    4666:	ad d4       	rcall	.+2394   	; 0x4fc2 <_ZN6OutputC1Ehh>
Output Vibrationsmotor('B',PORTB2);
    4668:	42 e0       	ldi	r20, 0x02	; 2
    466a:	62 e4       	ldi	r22, 0x42	; 66
    466c:	88 e7       	ldi	r24, 0x78	; 120
    466e:	93 e0       	ldi	r25, 0x03	; 3
    4670:	a8 d4       	rcall	.+2384   	; 0x4fc2 <_ZN6OutputC1Ehh>
Output IRLED('D',PORTD7);
    4672:	47 e0       	ldi	r20, 0x07	; 7
    4674:	64 e4       	ldi	r22, 0x44	; 68
    4676:	86 e7       	ldi	r24, 0x76	; 118
    4678:	93 e0       	ldi	r25, 0x03	; 3
    467a:	a3 d4       	rcall	.+2374   	; 0x4fc2 <_ZN6OutputC1Ehh>
Output Sound('B',PORTB3);
    467c:	43 e0       	ldi	r20, 0x03	; 3
    467e:	62 e4       	ldi	r22, 0x42	; 66
    4680:	84 e7       	ldi	r24, 0x74	; 116
    4682:	93 e0       	ldi	r25, 0x03	; 3
    4684:	9e d4       	rcall	.+2364   	; 0x4fc2 <_ZN6OutputC1Ehh>

#include "Pressure.h"
Pressure Baro;
    4686:	86 e6       	ldi	r24, 0x66	; 102
    4688:	93 e0       	ldi	r25, 0x03	; 3
    468a:	32 d6       	rcall	.+3172   	; 0x52f0 <_ZN8PressureC1Ev>

#include "LSM303D.h"
LSM303D Accelerometer;
    468c:	85 e5       	ldi	r24, 0x55	; 85
    468e:	93 e0       	ldi	r25, 0x03	; 3
    4690:	7e d4       	rcall	.+2300   	; 0x4f8e <_ZN7LSM303DC1Ev>

#include "SOUND.h"
SOUND Lautsprecher;
    4692:	83 e5       	ldi	r24, 0x53	; 83
    4694:	93 e0       	ldi	r25, 0x03	; 3
    4696:	0c 94 23 2c 	jmp	0x5846	; 0x5846 <_ZN5SOUNDC1Ev>
    469a:	08 95       	ret

0000469c <_GLOBAL__sub_D_kompass>:
    469c:	83 e5       	ldi	r24, 0x53	; 83
    469e:	93 e0       	ldi	r25, 0x03	; 3
    46a0:	0e 94 f9 2b 	call	0x57f2	; 0x57f2 <_ZN5SOUNDD1Ev>

#include "Pressure.h"
Pressure Baro;

#include "LSM303D.h"
LSM303D Accelerometer;
    46a4:	85 e5       	ldi	r24, 0x55	; 85
    46a6:	93 e0       	ldi	r25, 0x03	; 3
    46a8:	50 d3       	rcall	.+1696   	; 0x4d4a <_ZN7LSM303DD1Ev>
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);

#include "Pressure.h"
Pressure Baro;
    46aa:	86 e6       	ldi	r24, 0x66	; 102
    46ac:	93 e0       	ldi	r25, 0x03	; 3
    46ae:	ee d5       	rcall	.+3036   	; 0x528c <_ZN8PressureD1Ev>

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);
    46b0:	84 e7       	ldi	r24, 0x74	; 116
    46b2:	93 e0       	ldi	r25, 0x03	; 3
    46b4:	c8 d4       	rcall	.+2448   	; 0x5046 <_ZN6OutputD1Ev>
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
    46b6:	86 e7       	ldi	r24, 0x76	; 118
    46b8:	93 e0       	ldi	r25, 0x03	; 3
    46ba:	c5 d4       	rcall	.+2442   	; 0x5046 <_ZN6OutputD1Ev>
#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
    46bc:	88 e7       	ldi	r24, 0x78	; 120
    46be:	93 e0       	ldi	r25, 0x03	; 3
    46c0:	c2 d4       	rcall	.+2436   	; 0x5046 <_ZN6OutputD1Ev>

#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
    46c2:	8a e7       	ldi	r24, 0x7A	; 122
    46c4:	93 e0       	ldi	r25, 0x03	; 3
    46c6:	bf d4       	rcall	.+2430   	; 0x5046 <_ZN6OutputD1Ev>

#include "Display.h"
Display oled;

#include "Interface.h"
Interface Tastatur;
    46c8:	8c e7       	ldi	r24, 0x7C	; 124
    46ca:	93 e0       	ldi	r25, 0x03	; 3
    46cc:	46 d0       	rcall	.+140    	; 0x475a <_ZN9InterfaceD1Ev>

#include "RTC.h"
RTC rtc;

#include "Display.h"
Display oled;
    46ce:	8d e7       	ldi	r24, 0x7D	; 125
    46d0:	93 e0       	ldi	r25, 0x03	; 3
    46d2:	0e 94 01 03 	call	0x602	; 0x602 <_ZN7DisplayD1Ev>

#include "Kompass.h"
Kompass kompass;

#include "RTC.h"
RTC rtc;
    46d6:	8e e7       	ldi	r24, 0x7E	; 126
    46d8:	97 e0       	ldi	r25, 0x07	; 7
    46da:	41 d7       	rcall	.+3714   	; 0x555e <_ZN3RTCD1Ev>
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    46dc:	8d e9       	ldi	r24, 0x9D	; 157
    46de:	97 e0       	ldi	r25, 0x07	; 7
    46e0:	fc c0       	rjmp	.+504    	; 0x48da <_ZN7KompassD1Ev>
    46e2:	08 95       	ret

000046e4 <_ZN3I2CC1Ev>:
void I2C::twi_ack(){
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
}
void I2C::twi_nack(){
	TWCR = (1<<TWINT) | (1<<TWEN);
	TWCR &= ~(1<<TWEA);
    46e4:	82 e0       	ldi	r24, 0x02	; 2
    46e6:	80 93 b8 00 	sts	0x00B8, r24
    46ea:	08 95       	ret

000046ec <_ZN3I2CD1Ev>:
    46ec:	08 95       	ret

000046ee <_ZN3I2C9twi_startEv>:
    46ee:	84 ea       	ldi	r24, 0xA4	; 164
    46f0:	80 93 bc 00 	sts	0x00BC, r24
    46f4:	08 95       	ret

000046f6 <_ZN3I2C8twi_stopEv>:
    46f6:	84 e9       	ldi	r24, 0x94	; 148
    46f8:	80 93 bc 00 	sts	0x00BC, r24
    46fc:	08 95       	ret

000046fe <_ZN3I2C9twi_writeEh>:
}

void I2C::twi_write(uint8_t data){
	while(!(TWCR & (1<<TWINT)));
    46fe:	ec eb       	ldi	r30, 0xBC	; 188
    4700:	f0 e0       	ldi	r31, 0x00	; 0
    4702:	80 81       	ld	r24, Z
    4704:	88 23       	and	r24, r24
    4706:	ec f7       	brge	.-6      	; 0x4702 <_ZN3I2C9twi_writeEh+0x4>
	TWDR = data;
    4708:	60 93 bb 00 	sts	0x00BB, r22
	TWCR = (1<<TWINT) | (1<<TWEN);
    470c:	84 e8       	ldi	r24, 0x84	; 132
    470e:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    4712:	ec eb       	ldi	r30, 0xBC	; 188
    4714:	f0 e0       	ldi	r31, 0x00	; 0
    4716:	80 81       	ld	r24, Z
    4718:	88 23       	and	r24, r24
    471a:	ec f7       	brge	.-6      	; 0x4716 <_ZN3I2C9twi_writeEh+0x18>
}
    471c:	08 95       	ret

0000471e <_ZN3I2C8twi_readEh>:

uint8_t I2C::twi_read(uint8_t ack){
	if (ack)
    471e:	66 23       	and	r22, r22
    4720:	21 f0       	breq	.+8      	; 0x472a <_ZN3I2C8twi_readEh+0xc>
	{
		TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    4722:	84 ec       	ldi	r24, 0xC4	; 196
    4724:	80 93 bc 00 	sts	0x00BC, r24
    4728:	03 c0       	rjmp	.+6      	; 0x4730 <_ZN3I2C8twi_readEh+0x12>
	}
	else{
		TWCR = (1<<TWINT) | (1<<TWEN);
    472a:	84 e8       	ldi	r24, 0x84	; 132
    472c:	80 93 bc 00 	sts	0x00BC, r24
	}
	
	while(!(TWCR & (1<<TWINT)));
    4730:	ec eb       	ldi	r30, 0xBC	; 188
    4732:	f0 e0       	ldi	r31, 0x00	; 0
    4734:	80 81       	ld	r24, Z
    4736:	88 23       	and	r24, r24
    4738:	ec f7       	brge	.-6      	; 0x4734 <_ZN3I2C8twi_readEh+0x16>
	return TWDR;
    473a:	80 91 bb 00 	lds	r24, 0x00BB
    473e:	08 95       	ret

00004740 <_ZN9InterfaceC1Ev>:
		default:
		abfrage = 0;
		break;
	}
	return abfrage;
}
    4740:	8a b1       	in	r24, 0x0a	; 10
    4742:	80 66       	ori	r24, 0x60	; 96
    4744:	8a b9       	out	0x0a, r24	; 10
    4746:	88 b1       	in	r24, 0x08	; 8
    4748:	83 7f       	andi	r24, 0xF3	; 243
    474a:	88 b9       	out	0x08, r24	; 8
    474c:	87 b1       	in	r24, 0x07	; 7
    474e:	8c 60       	ori	r24, 0x0C	; 12
    4750:	87 b9       	out	0x07, r24	; 7
    4752:	8a b1       	in	r24, 0x0a	; 10
    4754:	83 7e       	andi	r24, 0xE3	; 227
    4756:	8a b9       	out	0x0a, r24	; 10
    4758:	08 95       	ret

0000475a <_ZN9InterfaceD1Ev>:
    475a:	08 95       	ret

0000475c <_ZN9Interface8debounceEPVhh>:
    475c:	fb 01       	movw	r30, r22
    475e:	80 81       	ld	r24, Z
    4760:	90 e0       	ldi	r25, 0x00	; 0
    4762:	04 2e       	mov	r0, r20
    4764:	02 c0       	rjmp	.+4      	; 0x476a <_ZN9Interface8debounceEPVhh+0xe>
    4766:	95 95       	asr	r25
    4768:	87 95       	ror	r24
    476a:	0a 94       	dec	r0
    476c:	e2 f7       	brpl	.-8      	; 0x4766 <_ZN9Interface8debounceEPVhh+0xa>
    476e:	80 ff       	sbrs	r24, 0
    4770:	17 c0       	rjmp	.+46     	; 0x47a0 <_ZN9Interface8debounceEPVhh+0x44>
    4772:	8f ec       	ldi	r24, 0xCF	; 207
    4774:	97 e0       	ldi	r25, 0x07	; 7
    4776:	01 97       	sbiw	r24, 0x01	; 1
    4778:	f1 f7       	brne	.-4      	; 0x4776 <_ZN9Interface8debounceEPVhh+0x1a>
    477a:	00 c0       	rjmp	.+0      	; 0x477c <_ZN9Interface8debounceEPVhh+0x20>
    477c:	00 00       	nop
    477e:	fb 01       	movw	r30, r22
    4780:	80 81       	ld	r24, Z
    4782:	90 e0       	ldi	r25, 0x00	; 0
    4784:	9c 01       	movw	r18, r24
    4786:	02 c0       	rjmp	.+4      	; 0x478c <_ZN9Interface8debounceEPVhh+0x30>
    4788:	35 95       	asr	r19
    478a:	27 95       	ror	r18
    478c:	4a 95       	dec	r20
    478e:	e2 f7       	brpl	.-8      	; 0x4788 <_ZN9Interface8debounceEPVhh+0x2c>
    4790:	20 fd       	sbrc	r18, 0
    4792:	08 c0       	rjmp	.+16     	; 0x47a4 <_ZN9Interface8debounceEPVhh+0x48>
    4794:	3a e1       	ldi	r19, 0x1A	; 26
    4796:	3a 95       	dec	r19
    4798:	f1 f7       	brne	.-4      	; 0x4796 <_ZN9Interface8debounceEPVhh+0x3a>
    479a:	00 c0       	rjmp	.+0      	; 0x479c <_ZN9Interface8debounceEPVhh+0x40>
    479c:	81 e0       	ldi	r24, 0x01	; 1
    479e:	08 95       	ret
    47a0:	80 e0       	ldi	r24, 0x00	; 0
    47a2:	08 95       	ret
    47a4:	80 e0       	ldi	r24, 0x00	; 0
    47a6:	08 95       	ret

000047a8 <_ZN9Interface6TasterEv>:

uint8_t Interface::Taster(){
    47a8:	1f 93       	push	r17
    47aa:	cf 93       	push	r28
    47ac:	df 93       	push	r29
    47ae:	ec 01       	movw	r28, r24
	uint8_t taste = 'A';
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
    47b0:	43 9a       	sbi	0x08, 3	; 8
    47b2:	82 e0       	ldi	r24, 0x02	; 2
    47b4:	8a 95       	dec	r24
    47b6:	f1 f7       	brne	.-4      	; 0x47b4 <_ZN9Interface6TasterEv+0xc>
    47b8:	00 c0       	rjmp	.+0      	; 0x47ba <_ZN9Interface6TasterEv+0x12>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    47ba:	44 e0       	ldi	r20, 0x04	; 4
    47bc:	69 e2       	ldi	r22, 0x29	; 41
    47be:	70 e0       	ldi	r23, 0x00	; 0
    47c0:	ce 01       	movw	r24, r28
    47c2:	cc df       	rcall	.-104    	; 0x475c <_ZN9Interface8debounceEPVhh>
    47c4:	81 11       	cpse	r24, r1
    47c6:	10 c0       	rjmp	.+32     	; 0x47e8 <_ZN9Interface6TasterEv+0x40>
		taste = '3';
	}
	else if (debounce(&PIND,PIND3))
    47c8:	43 e0       	ldi	r20, 0x03	; 3
    47ca:	69 e2       	ldi	r22, 0x29	; 41
    47cc:	70 e0       	ldi	r23, 0x00	; 0
    47ce:	ce 01       	movw	r24, r28
    47d0:	c5 df       	rcall	.-118    	; 0x475c <_ZN9Interface8debounceEPVhh>
    47d2:	81 11       	cpse	r24, r1
    47d4:	0b c0       	rjmp	.+22     	; 0x47ec <_ZN9Interface6TasterEv+0x44>
	{
		taste = '2';
	}
	else if (debounce(&PIND,PIND2))
    47d6:	42 e0       	ldi	r20, 0x02	; 2
    47d8:	69 e2       	ldi	r22, 0x29	; 41
    47da:	70 e0       	ldi	r23, 0x00	; 0
    47dc:	ce 01       	movw	r24, r28
    47de:	be df       	rcall	.-132    	; 0x475c <_ZN9Interface8debounceEPVhh>
    47e0:	81 11       	cpse	r24, r1
    47e2:	06 c0       	rjmp	.+12     	; 0x47f0 <_ZN9Interface6TasterEv+0x48>
	}
	return abfrage;
}

uint8_t Interface::Taster(){
	uint8_t taste = 'A';
    47e4:	11 e4       	ldi	r17, 0x41	; 65
    47e6:	05 c0       	rjmp	.+10     	; 0x47f2 <_ZN9Interface6TasterEv+0x4a>
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '3';
    47e8:	13 e3       	ldi	r17, 0x33	; 51
    47ea:	03 c0       	rjmp	.+6      	; 0x47f2 <_ZN9Interface6TasterEv+0x4a>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '2';
    47ec:	12 e3       	ldi	r17, 0x32	; 50
    47ee:	01 c0       	rjmp	.+2      	; 0x47f2 <_ZN9Interface6TasterEv+0x4a>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '1';
    47f0:	11 e3       	ldi	r17, 0x31	; 49
	}
	PORTC &= ~(1<<PORTC3);
    47f2:	43 98       	cbi	0x08, 3	; 8
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
    47f4:	42 9a       	sbi	0x08, 2	; 8
    47f6:	82 e0       	ldi	r24, 0x02	; 2
    47f8:	8a 95       	dec	r24
    47fa:	f1 f7       	brne	.-4      	; 0x47f8 <_ZN9Interface6TasterEv+0x50>
    47fc:	00 c0       	rjmp	.+0      	; 0x47fe <_ZN9Interface6TasterEv+0x56>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    47fe:	44 e0       	ldi	r20, 0x04	; 4
    4800:	69 e2       	ldi	r22, 0x29	; 41
    4802:	70 e0       	ldi	r23, 0x00	; 0
    4804:	ce 01       	movw	r24, r28
    4806:	aa df       	rcall	.-172    	; 0x475c <_ZN9Interface8debounceEPVhh>
    4808:	81 11       	cpse	r24, r1
    480a:	0f c0       	rjmp	.+30     	; 0x482a <_ZN9Interface6TasterEv+0x82>
		taste = '6';
	}
	else if (debounce(&PIND,PIND3))
    480c:	43 e0       	ldi	r20, 0x03	; 3
    480e:	69 e2       	ldi	r22, 0x29	; 41
    4810:	70 e0       	ldi	r23, 0x00	; 0
    4812:	ce 01       	movw	r24, r28
    4814:	a3 df       	rcall	.-186    	; 0x475c <_ZN9Interface8debounceEPVhh>
    4816:	81 11       	cpse	r24, r1
    4818:	0a c0       	rjmp	.+20     	; 0x482e <_ZN9Interface6TasterEv+0x86>
	{
		taste = '5';
	}
	else if (debounce(&PIND,PIND2))
    481a:	42 e0       	ldi	r20, 0x02	; 2
    481c:	69 e2       	ldi	r22, 0x29	; 41
    481e:	70 e0       	ldi	r23, 0x00	; 0
    4820:	ce 01       	movw	r24, r28
    4822:	9c df       	rcall	.-200    	; 0x475c <_ZN9Interface8debounceEPVhh>
    4824:	81 11       	cpse	r24, r1
    4826:	05 c0       	rjmp	.+10     	; 0x4832 <_ZN9Interface6TasterEv+0x8a>
    4828:	05 c0       	rjmp	.+10     	; 0x4834 <_ZN9Interface6TasterEv+0x8c>
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '6';
    482a:	16 e3       	ldi	r17, 0x36	; 54
    482c:	03 c0       	rjmp	.+6      	; 0x4834 <_ZN9Interface6TasterEv+0x8c>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '5';
    482e:	15 e3       	ldi	r17, 0x35	; 53
    4830:	01 c0       	rjmp	.+2      	; 0x4834 <_ZN9Interface6TasterEv+0x8c>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '4';
    4832:	14 e3       	ldi	r17, 0x34	; 52
	}
	PORTC &= ~(1<<PORTC2);
    4834:	42 98       	cbi	0x08, 2	; 8
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
    4836:	5e 9a       	sbi	0x0b, 6	; 11
    4838:	82 e0       	ldi	r24, 0x02	; 2
    483a:	8a 95       	dec	r24
    483c:	f1 f7       	brne	.-4      	; 0x483a <_ZN9Interface6TasterEv+0x92>
    483e:	00 c0       	rjmp	.+0      	; 0x4840 <_ZN9Interface6TasterEv+0x98>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    4840:	44 e0       	ldi	r20, 0x04	; 4
    4842:	69 e2       	ldi	r22, 0x29	; 41
    4844:	70 e0       	ldi	r23, 0x00	; 0
    4846:	ce 01       	movw	r24, r28
    4848:	89 df       	rcall	.-238    	; 0x475c <_ZN9Interface8debounceEPVhh>
    484a:	81 11       	cpse	r24, r1
    484c:	0f c0       	rjmp	.+30     	; 0x486c <_ZN9Interface6TasterEv+0xc4>
		taste = '9';
	}
	else if (debounce(&PIND,PIND3))
    484e:	43 e0       	ldi	r20, 0x03	; 3
    4850:	69 e2       	ldi	r22, 0x29	; 41
    4852:	70 e0       	ldi	r23, 0x00	; 0
    4854:	ce 01       	movw	r24, r28
    4856:	82 df       	rcall	.-252    	; 0x475c <_ZN9Interface8debounceEPVhh>
    4858:	81 11       	cpse	r24, r1
    485a:	0a c0       	rjmp	.+20     	; 0x4870 <_ZN9Interface6TasterEv+0xc8>
	{
		taste = '8';
	}
	else if (debounce(&PIND,PIND2))
    485c:	42 e0       	ldi	r20, 0x02	; 2
    485e:	69 e2       	ldi	r22, 0x29	; 41
    4860:	70 e0       	ldi	r23, 0x00	; 0
    4862:	ce 01       	movw	r24, r28
    4864:	7b df       	rcall	.-266    	; 0x475c <_ZN9Interface8debounceEPVhh>
    4866:	81 11       	cpse	r24, r1
    4868:	05 c0       	rjmp	.+10     	; 0x4874 <_ZN9Interface6TasterEv+0xcc>
    486a:	05 c0       	rjmp	.+10     	; 0x4876 <_ZN9Interface6TasterEv+0xce>
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '9';
    486c:	19 e3       	ldi	r17, 0x39	; 57
    486e:	03 c0       	rjmp	.+6      	; 0x4876 <_ZN9Interface6TasterEv+0xce>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '8';
    4870:	18 e3       	ldi	r17, 0x38	; 56
    4872:	01 c0       	rjmp	.+2      	; 0x4876 <_ZN9Interface6TasterEv+0xce>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '7';
    4874:	17 e3       	ldi	r17, 0x37	; 55
	}
	PORTD &= ~(1<<PORTD6);
    4876:	5e 98       	cbi	0x0b, 6	; 11
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
    4878:	5d 9a       	sbi	0x0b, 5	; 11
    487a:	82 e0       	ldi	r24, 0x02	; 2
    487c:	8a 95       	dec	r24
    487e:	f1 f7       	brne	.-4      	; 0x487c <_ZN9Interface6TasterEv+0xd4>
    4880:	00 c0       	rjmp	.+0      	; 0x4882 <_ZN9Interface6TasterEv+0xda>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    4882:	44 e0       	ldi	r20, 0x04	; 4
    4884:	69 e2       	ldi	r22, 0x29	; 41
    4886:	70 e0       	ldi	r23, 0x00	; 0
    4888:	ce 01       	movw	r24, r28
    488a:	68 df       	rcall	.-304    	; 0x475c <_ZN9Interface8debounceEPVhh>
    488c:	81 11       	cpse	r24, r1
    488e:	0f c0       	rjmp	.+30     	; 0x48ae <_ZN9Interface6TasterEv+0x106>
		taste = '#';
	}
	else if (debounce(&PIND,PIND3))
    4890:	43 e0       	ldi	r20, 0x03	; 3
    4892:	69 e2       	ldi	r22, 0x29	; 41
    4894:	70 e0       	ldi	r23, 0x00	; 0
    4896:	ce 01       	movw	r24, r28
    4898:	61 df       	rcall	.-318    	; 0x475c <_ZN9Interface8debounceEPVhh>
    489a:	81 11       	cpse	r24, r1
    489c:	0a c0       	rjmp	.+20     	; 0x48b2 <_ZN9Interface6TasterEv+0x10a>
	{
		taste = '0';
	}
	else if (debounce(&PIND,PIND2))
    489e:	42 e0       	ldi	r20, 0x02	; 2
    48a0:	69 e2       	ldi	r22, 0x29	; 41
    48a2:	70 e0       	ldi	r23, 0x00	; 0
    48a4:	ce 01       	movw	r24, r28
    48a6:	5a df       	rcall	.-332    	; 0x475c <_ZN9Interface8debounceEPVhh>
    48a8:	81 11       	cpse	r24, r1
    48aa:	05 c0       	rjmp	.+10     	; 0x48b6 <_ZN9Interface6TasterEv+0x10e>
    48ac:	05 c0       	rjmp	.+10     	; 0x48b8 <_ZN9Interface6TasterEv+0x110>
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '#';
    48ae:	13 e2       	ldi	r17, 0x23	; 35
    48b0:	03 c0       	rjmp	.+6      	; 0x48b8 <_ZN9Interface6TasterEv+0x110>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '0';
    48b2:	10 e3       	ldi	r17, 0x30	; 48
    48b4:	01 c0       	rjmp	.+2      	; 0x48b8 <_ZN9Interface6TasterEv+0x110>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '*';
    48b6:	1a e2       	ldi	r17, 0x2A	; 42
	}
	PORTD &= ~(1<<PORTD5);
    48b8:	5d 98       	cbi	0x0b, 5	; 11
	
	return taste;
}
    48ba:	81 2f       	mov	r24, r17
    48bc:	df 91       	pop	r29
    48be:	cf 91       	pop	r28
    48c0:	1f 91       	pop	r17
    48c2:	08 95       	ret

000048c4 <_ZN9Interface17ZahlenausTastaturEv>:

uint8_t Interface::ZahlenausTastatur(){
    48c4:	cf 93       	push	r28
    48c6:	df 93       	push	r29
    48c8:	ec 01       	movw	r28, r24
	while(true){
		uint8_t taste = Taster();
    48ca:	ce 01       	movw	r24, r28
    48cc:	6d df       	rcall	.-294    	; 0x47a8 <_ZN9Interface6TasterEv>
		if(taste>='0' && taste<='9'){
    48ce:	80 53       	subi	r24, 0x30	; 48
    48d0:	8a 30       	cpi	r24, 0x0A	; 10
    48d2:	d8 f7       	brcc	.-10     	; 0x48ca <_ZN9Interface17ZahlenausTastaturEv+0x6>
			return taste - '0';
		}
	}
}
    48d4:	df 91       	pop	r29
    48d6:	cf 91       	pop	r28
    48d8:	08 95       	ret

000048da <_ZN7KompassD1Ev>:
	for (uint8_t i=0;i<3;i++)
	{
		achsen[i]=0;
		offset[i]=0;
	}
}
    48da:	06 96       	adiw	r24, 0x06	; 6
    48dc:	07 cf       	rjmp	.-498    	; 0x46ec <_ZN3I2CD1Ev>
    48de:	08 95       	ret

000048e0 <_ZN7Kompass16HMC5883L_commandEhh>:
    48e0:	0f 93       	push	r16
    48e2:	1f 93       	push	r17
    48e4:	cf 93       	push	r28
    48e6:	df 93       	push	r29
    48e8:	06 2f       	mov	r16, r22
    48ea:	14 2f       	mov	r17, r20
    48ec:	ec 01       	movw	r28, r24
    48ee:	26 96       	adiw	r28, 0x06	; 6
    48f0:	ce 01       	movw	r24, r28
    48f2:	fd de       	rcall	.-518    	; 0x46ee <_ZN3I2C9twi_startEv>
    48f4:	6c e3       	ldi	r22, 0x3C	; 60
    48f6:	ce 01       	movw	r24, r28
    48f8:	02 df       	rcall	.-508    	; 0x46fe <_ZN3I2C9twi_writeEh>
    48fa:	60 2f       	mov	r22, r16
    48fc:	ce 01       	movw	r24, r28
    48fe:	ff de       	rcall	.-514    	; 0x46fe <_ZN3I2C9twi_writeEh>
    4900:	61 2f       	mov	r22, r17
    4902:	ce 01       	movw	r24, r28
    4904:	fc de       	rcall	.-520    	; 0x46fe <_ZN3I2C9twi_writeEh>
    4906:	ce 01       	movw	r24, r28
    4908:	f6 de       	rcall	.-532    	; 0x46f6 <_ZN3I2C8twi_stopEv>
    490a:	df 91       	pop	r29
    490c:	cf 91       	pop	r28
    490e:	1f 91       	pop	r17
    4910:	0f 91       	pop	r16
    4912:	08 95       	ret

00004914 <_ZN7KompassC1Ev>:
    4914:	cf 93       	push	r28
    4916:	df 93       	push	r29
    4918:	ec 01       	movw	r28, r24
    491a:	06 96       	adiw	r24, 0x06	; 6
    491c:	e3 de       	rcall	.-570    	; 0x46e4 <_ZN3I2CC1Ev>
    491e:	40 e7       	ldi	r20, 0x70	; 112
    4920:	60 e0       	ldi	r22, 0x00	; 0
    4922:	ce 01       	movw	r24, r28
    4924:	dd df       	rcall	.-70     	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
    4926:	40 e2       	ldi	r20, 0x20	; 32
    4928:	61 e0       	ldi	r22, 0x01	; 1
    492a:	ce 01       	movw	r24, r28
    492c:	d9 df       	rcall	.-78     	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
    492e:	41 e0       	ldi	r20, 0x01	; 1
    4930:	62 e0       	ldi	r22, 0x02	; 2
    4932:	ce 01       	movw	r24, r28
    4934:	d5 df       	rcall	.-86     	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
    4936:	19 82       	std	Y+1, r1	; 0x01
    4938:	18 82       	st	Y, r1
    493a:	18 86       	std	Y+8, r1	; 0x08
    493c:	1f 82       	std	Y+7, r1	; 0x07
    493e:	1b 82       	std	Y+3, r1	; 0x03
    4940:	1a 82       	std	Y+2, r1	; 0x02
    4942:	1a 86       	std	Y+10, r1	; 0x0a
    4944:	19 86       	std	Y+9, r1	; 0x09
    4946:	1d 82       	std	Y+5, r1	; 0x05
    4948:	1c 82       	std	Y+4, r1	; 0x04
    494a:	1c 86       	std	Y+12, r1	; 0x0c
    494c:	1b 86       	std	Y+11, r1	; 0x0b
    494e:	df 91       	pop	r29
    4950:	cf 91       	pop	r28
    4952:	08 95       	ret

00004954 <_ZN7Kompass20HMC5883L_readHeadingEv>:

uint8_t Kompass::HMC5883L_readHeading(){
    4954:	bf 92       	push	r11
    4956:	cf 92       	push	r12
    4958:	df 92       	push	r13
    495a:	ef 92       	push	r14
    495c:	ff 92       	push	r15
    495e:	0f 93       	push	r16
    4960:	1f 93       	push	r17
    4962:	cf 93       	push	r28
    4964:	df 93       	push	r29
    4966:	00 d0       	rcall	.+0      	; 0x4968 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14>
    4968:	00 d0       	rcall	.+0      	; 0x496a <_ZN7Kompass20HMC5883L_readHeadingEv+0x16>
    496a:	00 d0       	rcall	.+0      	; 0x496c <_ZN7Kompass20HMC5883L_readHeadingEv+0x18>
    496c:	cd b7       	in	r28, 0x3d	; 61
    496e:	de b7       	in	r29, 0x3e	; 62
    4970:	6c 01       	movw	r12, r24
	cli();
    4972:	f8 94       	cli
	uint8_t heading[6];
	i2c.twi_start();
    4974:	7c 01       	movw	r14, r24
    4976:	26 e0       	ldi	r18, 0x06	; 6
    4978:	e2 0e       	add	r14, r18
    497a:	f1 1c       	adc	r15, r1
    497c:	c7 01       	movw	r24, r14
    497e:	b7 de       	rcall	.-658    	; 0x46ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCWRITEADRESSE);
    4980:	6c e3       	ldi	r22, 0x3C	; 60
    4982:	c7 01       	movw	r24, r14
    4984:	bc de       	rcall	.-648    	; 0x46fe <_ZN3I2C9twi_writeEh>
	i2c.twi_write(0x03);
    4986:	63 e0       	ldi	r22, 0x03	; 3
    4988:	c7 01       	movw	r24, r14
    498a:	b9 de       	rcall	.-654    	; 0x46fe <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    498c:	c7 01       	movw	r24, r14
    498e:	af de       	rcall	.-674    	; 0x46ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCREADADRESSE);
    4990:	6d e3       	ldi	r22, 0x3D	; 61
    4992:	c7 01       	movw	r24, r14
    4994:	b4 de       	rcall	.-664    	; 0x46fe <_ZN3I2C9twi_writeEh>
    4996:	8e 01       	movw	r16, r28
    4998:	0f 5f       	subi	r16, 0xFF	; 255
    499a:	1f 4f       	sbci	r17, 0xFF	; 255
	
	for(uint8_t i=0; i<6;i++){
    499c:	b1 2c       	mov	r11, r1
		if (i<5)
    499e:	84 e0       	ldi	r24, 0x04	; 4
    49a0:	8b 15       	cp	r24, r11
    49a2:	30 f0       	brcs	.+12     	; 0x49b0 <_ZN7Kompass20HMC5883L_readHeadingEv+0x5c>
		{
			heading[i]=i2c.twi_read(1);
    49a4:	61 e0       	ldi	r22, 0x01	; 1
    49a6:	c7 01       	movw	r24, r14
    49a8:	ba de       	rcall	.-652    	; 0x471e <_ZN3I2C8twi_readEh>
    49aa:	f8 01       	movw	r30, r16
    49ac:	80 83       	st	Z, r24
    49ae:	05 c0       	rjmp	.+10     	; 0x49ba <_ZN7Kompass20HMC5883L_readHeadingEv+0x66>
		}
		else
		{
			heading[i]=i2c.twi_read(0);
    49b0:	60 e0       	ldi	r22, 0x00	; 0
    49b2:	c7 01       	movw	r24, r14
    49b4:	b4 de       	rcall	.-664    	; 0x471e <_ZN3I2C8twi_readEh>
    49b6:	f8 01       	movw	r30, r16
    49b8:	80 83       	st	Z, r24
	i2c.twi_write(HMCWRITEADRESSE);
	i2c.twi_write(0x03);
	i2c.twi_start();
	i2c.twi_write(HMCREADADRESSE);
	
	for(uint8_t i=0; i<6;i++){
    49ba:	b3 94       	inc	r11
    49bc:	0f 5f       	subi	r16, 0xFF	; 255
    49be:	1f 4f       	sbci	r17, 0xFF	; 255
    49c0:	f6 e0       	ldi	r31, 0x06	; 6
    49c2:	bf 12       	cpse	r11, r31
    49c4:	ec cf       	rjmp	.-40     	; 0x499e <_ZN7Kompass20HMC5883L_readHeadingEv+0x4a>
		{
			heading[i]=i2c.twi_read(0);
		}
		
	}
	i2c.twi_stop();
    49c6:	c7 01       	movw	r24, r14
    49c8:	96 de       	rcall	.-724    	; 0x46f6 <_ZN3I2C8twi_stopEv>
	achsen[0] =(int16_t) (heading[1] | (heading[0] << 8));
    49ca:	89 81       	ldd	r24, Y+1	; 0x01
    49cc:	90 e0       	ldi	r25, 0x00	; 0
    49ce:	98 2f       	mov	r25, r24
    49d0:	88 27       	eor	r24, r24
    49d2:	2a 81       	ldd	r18, Y+2	; 0x02
    49d4:	82 2b       	or	r24, r18
    49d6:	f6 01       	movw	r30, r12
    49d8:	91 83       	std	Z+1, r25	; 0x01
    49da:	80 83       	st	Z, r24
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
    49dc:	8b 81       	ldd	r24, Y+3	; 0x03
    49de:	90 e0       	ldi	r25, 0x00	; 0
    49e0:	98 2f       	mov	r25, r24
    49e2:	88 27       	eor	r24, r24
    49e4:	2c 81       	ldd	r18, Y+4	; 0x04
    49e6:	82 2b       	or	r24, r18
    49e8:	93 83       	std	Z+3, r25	; 0x03
    49ea:	82 83       	std	Z+2, r24	; 0x02
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
    49ec:	8d 81       	ldd	r24, Y+5	; 0x05
    49ee:	90 e0       	ldi	r25, 0x00	; 0
    49f0:	98 2f       	mov	r25, r24
    49f2:	88 27       	eor	r24, r24
    49f4:	2e 81       	ldd	r18, Y+6	; 0x06
    49f6:	82 2b       	or	r24, r18
    49f8:	95 83       	std	Z+5, r25	; 0x05
    49fa:	84 83       	std	Z+4, r24	; 0x04
	sei();
    49fc:	78 94       	sei
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
    49fe:	f6 01       	movw	r30, r12
    4a00:	80 81       	ld	r24, Z
    4a02:	91 81       	ldd	r25, Z+1	; 0x01
    4a04:	81 15       	cp	r24, r1
    4a06:	90 4f       	sbci	r25, 0xF0	; 240
    4a08:	09 f4       	brne	.+2      	; 0x4a0c <_ZN7Kompass20HMC5883L_readHeadingEv+0xb8>
    4a0a:	47 c0       	rjmp	.+142    	; 0x4a9a <_ZN7Kompass20HMC5883L_readHeadingEv+0x146>
    4a0c:	f6 01       	movw	r30, r12
    4a0e:	82 81       	ldd	r24, Z+2	; 0x02
    4a10:	93 81       	ldd	r25, Z+3	; 0x03
    4a12:	81 15       	cp	r24, r1
    4a14:	90 4f       	sbci	r25, 0xF0	; 240
    4a16:	09 f4       	brne	.+2      	; 0x4a1a <_ZN7Kompass20HMC5883L_readHeadingEv+0xc6>
    4a18:	42 c0       	rjmp	.+132    	; 0x4a9e <_ZN7Kompass20HMC5883L_readHeadingEv+0x14a>
    4a1a:	f6 01       	movw	r30, r12
    4a1c:	84 81       	ldd	r24, Z+4	; 0x04
    4a1e:	95 81       	ldd	r25, Z+5	; 0x05
    4a20:	81 15       	cp	r24, r1
    4a22:	90 4f       	sbci	r25, 0xF0	; 240
    4a24:	f1 f1       	breq	.+124    	; 0x4aa2 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14e>
    4a26:	f6 01       	movw	r30, r12
    4a28:	83 e0       	ldi	r24, 0x03	; 3
    4a2a:	df 01       	movw	r26, r30
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
			if(achsen[i]>max[i]){
    4a2c:	20 81       	ld	r18, Z
    4a2e:	31 81       	ldd	r19, Z+1	; 0x01
    4a30:	45 85       	ldd	r20, Z+13	; 0x0d
    4a32:	56 85       	ldd	r21, Z+14	; 0x0e
    4a34:	42 17       	cp	r20, r18
    4a36:	53 07       	cpc	r21, r19
    4a38:	8c f4       	brge	.+34     	; 0x4a5c <_ZN7Kompass20HMC5883L_readHeadingEv+0x108>
				max[i]=achsen[i];
    4a3a:	36 87       	std	Z+14, r19	; 0x0e
    4a3c:	25 87       	std	Z+13, r18	; 0x0d
				offset[i]=(max[i]+min[i])/2;
    4a3e:	43 89       	ldd	r20, Z+19	; 0x13
    4a40:	54 89       	ldd	r21, Z+20	; 0x14
    4a42:	24 0f       	add	r18, r20
    4a44:	35 1f       	adc	r19, r21
    4a46:	33 23       	and	r19, r19
    4a48:	14 f4       	brge	.+4      	; 0x4a4e <_ZN7Kompass20HMC5883L_readHeadingEv+0xfa>
    4a4a:	2f 5f       	subi	r18, 0xFF	; 255
    4a4c:	3f 4f       	sbci	r19, 0xFF	; 255
    4a4e:	35 95       	asr	r19
    4a50:	27 95       	ror	r18
    4a52:	18 96       	adiw	r26, 0x08	; 8
    4a54:	3c 93       	st	X, r19
    4a56:	2e 93       	st	-X, r18
    4a58:	17 97       	sbiw	r26, 0x07	; 7
    4a5a:	1a c0       	rjmp	.+52     	; 0x4a90 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else if(achsen[i]<min[i]){
    4a5c:	63 89       	ldd	r22, Z+19	; 0x13
    4a5e:	74 89       	ldd	r23, Z+20	; 0x14
    4a60:	26 17       	cp	r18, r22
    4a62:	37 07       	cpc	r19, r23
    4a64:	7c f4       	brge	.+30     	; 0x4a84 <_ZN7Kompass20HMC5883L_readHeadingEv+0x130>
				min[i]=achsen[i];
    4a66:	34 8b       	std	Z+20, r19	; 0x14
    4a68:	23 8b       	std	Z+19, r18	; 0x13
				offset[i]=(max[i]+min[i])/2;
    4a6a:	24 0f       	add	r18, r20
    4a6c:	35 1f       	adc	r19, r21
    4a6e:	33 23       	and	r19, r19
    4a70:	14 f4       	brge	.+4      	; 0x4a76 <_ZN7Kompass20HMC5883L_readHeadingEv+0x122>
    4a72:	2f 5f       	subi	r18, 0xFF	; 255
    4a74:	3f 4f       	sbci	r19, 0xFF	; 255
    4a76:	35 95       	asr	r19
    4a78:	27 95       	ror	r18
    4a7a:	18 96       	adiw	r26, 0x08	; 8
    4a7c:	3c 93       	st	X, r19
    4a7e:	2e 93       	st	-X, r18
    4a80:	17 97       	sbiw	r26, 0x07	; 7
    4a82:	06 c0       	rjmp	.+12     	; 0x4a90 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else {
				achsen[i]-=offset[i];
    4a84:	47 81       	ldd	r20, Z+7	; 0x07
    4a86:	50 85       	ldd	r21, Z+8	; 0x08
    4a88:	24 1b       	sub	r18, r20
    4a8a:	35 0b       	sbc	r19, r21
    4a8c:	31 83       	std	Z+1, r19	; 0x01
    4a8e:	20 83       	st	Z, r18
    4a90:	81 50       	subi	r24, 0x01	; 1
    4a92:	32 96       	adiw	r30, 0x02	; 2
		return 1;
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
    4a94:	81 11       	cpse	r24, r1
    4a96:	c9 cf       	rjmp	.-110    	; 0x4a2a <_ZN7Kompass20HMC5883L_readHeadingEv+0xd6>
    4a98:	05 c0       	rjmp	.+10     	; 0x4aa4 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
	sei();
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
	{
		return 1;
    4a9a:	81 e0       	ldi	r24, 0x01	; 1
    4a9c:	03 c0       	rjmp	.+6      	; 0x4aa4 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    4a9e:	81 e0       	ldi	r24, 0x01	; 1
    4aa0:	01 c0       	rjmp	.+2      	; 0x4aa4 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    4aa2:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	
	return 0;
}
    4aa4:	26 96       	adiw	r28, 0x06	; 6
    4aa6:	0f b6       	in	r0, 0x3f	; 63
    4aa8:	f8 94       	cli
    4aaa:	de bf       	out	0x3e, r29	; 62
    4aac:	0f be       	out	0x3f, r0	; 63
    4aae:	cd bf       	out	0x3d, r28	; 61
    4ab0:	df 91       	pop	r29
    4ab2:	cf 91       	pop	r28
    4ab4:	1f 91       	pop	r17
    4ab6:	0f 91       	pop	r16
    4ab8:	ff 90       	pop	r15
    4aba:	ef 90       	pop	r14
    4abc:	df 90       	pop	r13
    4abe:	cf 90       	pop	r12
    4ac0:	bf 90       	pop	r11
    4ac2:	08 95       	ret

00004ac4 <_ZN7Kompass5angleEdd>:

double Kompass::angle(double roll, double pitch){
    4ac4:	2f 92       	push	r2
    4ac6:	3f 92       	push	r3
    4ac8:	4f 92       	push	r4
    4aca:	5f 92       	push	r5
    4acc:	6f 92       	push	r6
    4ace:	7f 92       	push	r7
    4ad0:	8f 92       	push	r8
    4ad2:	9f 92       	push	r9
    4ad4:	af 92       	push	r10
    4ad6:	bf 92       	push	r11
    4ad8:	cf 92       	push	r12
    4ada:	df 92       	push	r13
    4adc:	ef 92       	push	r14
    4ade:	ff 92       	push	r15
    4ae0:	0f 93       	push	r16
    4ae2:	1f 93       	push	r17
    4ae4:	cf 93       	push	r28
    4ae6:	df 93       	push	r29
    4ae8:	cd b7       	in	r28, 0x3d	; 61
    4aea:	de b7       	in	r29, 0x3e	; 62
    4aec:	64 97       	sbiw	r28, 0x14	; 20
    4aee:	0f b6       	in	r0, 0x3f	; 63
    4af0:	f8 94       	cli
    4af2:	de bf       	out	0x3e, r29	; 62
    4af4:	0f be       	out	0x3f, r0	; 63
    4af6:	cd bf       	out	0x3d, r28	; 61
    4af8:	1c 01       	movw	r2, r24
    4afa:	4a 01       	movw	r8, r20
    4afc:	5b 01       	movw	r10, r22
    4afe:	68 01       	movw	r12, r16
    4b00:	79 01       	movw	r14, r18
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
    4b02:	28 df       	rcall	.-432    	; 0x4954 <_ZN7Kompass20HMC5883L_readHeadingEv>
    4b04:	81 11       	cpse	r24, r1
    4b06:	e6 c0       	rjmp	.+460    	; 0x4cd4 <_ZN7Kompass5angleEdd+0x210>
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4b08:	c7 01       	movw	r24, r14
    4b0a:	b6 01       	movw	r22, r12
    4b0c:	7e d7       	rcall	.+3836   	; 0x5a0a <cos>
    4b0e:	69 83       	std	Y+1, r22	; 0x01
    4b10:	7a 83       	std	Y+2, r23	; 0x02
    4b12:	8b 83       	std	Y+3, r24	; 0x03
    4b14:	9c 83       	std	Y+4, r25	; 0x04
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4b16:	f1 01       	movw	r30, r2
    4b18:	62 81       	ldd	r22, Z+2	; 0x02
    4b1a:	73 81       	ldd	r23, Z+3	; 0x03
    4b1c:	88 27       	eor	r24, r24
    4b1e:	77 fd       	sbrc	r23, 7
    4b20:	80 95       	com	r24
    4b22:	98 2f       	mov	r25, r24
    4b24:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <__floatsisf>
    4b28:	2b 01       	movw	r4, r22
    4b2a:	3c 01       	movw	r6, r24
    4b2c:	c5 01       	movw	r24, r10
    4b2e:	b4 01       	movw	r22, r8
    4b30:	0e 94 64 2f 	call	0x5ec8	; 0x5ec8 <sin>
    4b34:	6d 83       	std	Y+5, r22	; 0x05
    4b36:	7e 83       	std	Y+6, r23	; 0x06
    4b38:	8f 83       	std	Y+7, r24	; 0x07
    4b3a:	98 87       	std	Y+8, r25	; 0x08
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    4b3c:	f1 01       	movw	r30, r2
    4b3e:	64 81       	ldd	r22, Z+4	; 0x04
    4b40:	75 81       	ldd	r23, Z+5	; 0x05
    4b42:	88 27       	eor	r24, r24
    4b44:	77 fd       	sbrc	r23, 7
    4b46:	80 95       	com	r24
    4b48:	98 2f       	mov	r25, r24
    4b4a:	fd d7       	rcall	.+4090   	; 0x5b46 <__floatsisf>
    4b4c:	69 87       	std	Y+9, r22	; 0x09
    4b4e:	7a 87       	std	Y+10, r23	; 0x0a
    4b50:	8b 87       	std	Y+11, r24	; 0x0b
    4b52:	9c 87       	std	Y+12, r25	; 0x0c
    4b54:	c5 01       	movw	r24, r10
    4b56:	b4 01       	movw	r22, r8
    4b58:	58 d7       	rcall	.+3760   	; 0x5a0a <cos>
    4b5a:	4b 01       	movw	r8, r22
    4b5c:	5c 01       	movw	r10, r24
    4b5e:	c7 01       	movw	r24, r14
    4b60:	b6 01       	movw	r22, r12
    4b62:	0e 94 64 2f 	call	0x5ec8	; 0x5ec8 <sin>
    4b66:	6d 87       	std	Y+13, r22	; 0x0d
    4b68:	7e 87       	std	Y+14, r23	; 0x0e
    4b6a:	8f 87       	std	Y+15, r24	; 0x0f
    4b6c:	98 8b       	std	Y+16, r25	; 0x10
		temp_M[1] = achsen[1]*cos(roll);
    4b6e:	a5 01       	movw	r20, r10
    4b70:	94 01       	movw	r18, r8
    4b72:	c3 01       	movw	r24, r6
    4b74:	b2 01       	movw	r22, r4
    4b76:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    4b7a:	b2 d7       	rcall	.+3940   	; 0x5ae0 <__fixsfsi>
		temp_M[1]+= achsen[2]*sin(roll);
    4b7c:	88 27       	eor	r24, r24
    4b7e:	77 fd       	sbrc	r23, 7
    4b80:	80 95       	com	r24
    4b82:	98 2f       	mov	r25, r24
    4b84:	e0 d7       	rcall	.+4032   	; 0x5b46 <__floatsisf>
    4b86:	6b 01       	movw	r12, r22
    4b88:	7c 01       	movw	r14, r24
    4b8a:	29 85       	ldd	r18, Y+9	; 0x09
    4b8c:	3a 85       	ldd	r19, Y+10	; 0x0a
    4b8e:	4b 85       	ldd	r20, Y+11	; 0x0b
    4b90:	5c 85       	ldd	r21, Y+12	; 0x0c
    4b92:	6d 81       	ldd	r22, Y+5	; 0x05
    4b94:	7e 81       	ldd	r23, Y+6	; 0x06
    4b96:	8f 81       	ldd	r24, Y+7	; 0x07
    4b98:	98 85       	ldd	r25, Y+8	; 0x08
    4b9a:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    4b9e:	9b 01       	movw	r18, r22
    4ba0:	ac 01       	movw	r20, r24
    4ba2:	c7 01       	movw	r24, r14
    4ba4:	b6 01       	movw	r22, r12
    4ba6:	67 d6       	rcall	.+3278   	; 0x5876 <__addsf3>
    4ba8:	9b d7       	rcall	.+3894   	; 0x5ae0 <__fixsfsi>
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4baa:	88 27       	eor	r24, r24
    4bac:	77 fd       	sbrc	r23, 7
    4bae:	80 95       	com	r24
    4bb0:	98 2f       	mov	r25, r24
    4bb2:	c9 d7       	rcall	.+3986   	; 0x5b46 <__floatsisf>
    4bb4:	69 8b       	std	Y+17, r22	; 0x11
    4bb6:	7a 8b       	std	Y+18, r23	; 0x12
    4bb8:	8b 8b       	std	Y+19, r24	; 0x13
    4bba:	9c 8b       	std	Y+20, r25	; 0x14
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4bbc:	f1 01       	movw	r30, r2
    4bbe:	60 81       	ld	r22, Z
    4bc0:	71 81       	ldd	r23, Z+1	; 0x01
    4bc2:	88 27       	eor	r24, r24
    4bc4:	77 fd       	sbrc	r23, 7
    4bc6:	80 95       	com	r24
    4bc8:	98 2f       	mov	r25, r24
    4bca:	bd d7       	rcall	.+3962   	; 0x5b46 <__floatsisf>
    4bcc:	29 81       	ldd	r18, Y+1	; 0x01
    4bce:	3a 81       	ldd	r19, Y+2	; 0x02
    4bd0:	4b 81       	ldd	r20, Y+3	; 0x03
    4bd2:	5c 81       	ldd	r21, Y+4	; 0x04
    4bd4:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    4bd8:	83 d7       	rcall	.+3846   	; 0x5ae0 <__fixsfsi>
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4bda:	88 27       	eor	r24, r24
    4bdc:	77 fd       	sbrc	r23, 7
    4bde:	80 95       	com	r24
    4be0:	98 2f       	mov	r25, r24
    4be2:	b1 d7       	rcall	.+3938   	; 0x5b46 <__floatsisf>
    4be4:	6b 01       	movw	r12, r22
    4be6:	7c 01       	movw	r14, r24
    4be8:	2d 81       	ldd	r18, Y+5	; 0x05
    4bea:	3e 81       	ldd	r19, Y+6	; 0x06
    4bec:	4f 81       	ldd	r20, Y+7	; 0x07
    4bee:	58 85       	ldd	r21, Y+8	; 0x08
    4bf0:	c3 01       	movw	r24, r6
    4bf2:	b2 01       	movw	r22, r4
    4bf4:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    4bf8:	9b 01       	movw	r18, r22
    4bfa:	ac 01       	movw	r20, r24
    4bfc:	69 81       	ldd	r22, Y+1	; 0x01
    4bfe:	7a 81       	ldd	r23, Y+2	; 0x02
    4c00:	8b 81       	ldd	r24, Y+3	; 0x03
    4c02:	9c 81       	ldd	r25, Y+4	; 0x04
    4c04:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    4c08:	9b 01       	movw	r18, r22
    4c0a:	ac 01       	movw	r20, r24
    4c0c:	c7 01       	movw	r24, r14
    4c0e:	b6 01       	movw	r22, r12
    4c10:	32 d6       	rcall	.+3172   	; 0x5876 <__addsf3>
    4c12:	66 d7       	rcall	.+3788   	; 0x5ae0 <__fixsfsi>
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    4c14:	88 27       	eor	r24, r24
    4c16:	77 fd       	sbrc	r23, 7
    4c18:	80 95       	com	r24
    4c1a:	98 2f       	mov	r25, r24
    4c1c:	94 d7       	rcall	.+3880   	; 0x5b46 <__floatsisf>
    4c1e:	6b 01       	movw	r12, r22
    4c20:	7c 01       	movw	r14, r24
    4c22:	a5 01       	movw	r20, r10
    4c24:	94 01       	movw	r18, r8
    4c26:	69 85       	ldd	r22, Y+9	; 0x09
    4c28:	7a 85       	ldd	r23, Y+10	; 0x0a
    4c2a:	8b 85       	ldd	r24, Y+11	; 0x0b
    4c2c:	9c 85       	ldd	r25, Y+12	; 0x0c
    4c2e:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    4c32:	2d 85       	ldd	r18, Y+13	; 0x0d
    4c34:	3e 85       	ldd	r19, Y+14	; 0x0e
    4c36:	4f 85       	ldd	r20, Y+15	; 0x0f
    4c38:	58 89       	ldd	r21, Y+16	; 0x10
    4c3a:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    4c3e:	9b 01       	movw	r18, r22
    4c40:	ac 01       	movw	r20, r24
    4c42:	c7 01       	movw	r24, r14
    4c44:	b6 01       	movw	r22, r12
    4c46:	17 d6       	rcall	.+3118   	; 0x5876 <__addsf3>
    4c48:	4b d7       	rcall	.+3734   	; 0x5ae0 <__fixsfsi>
		temp_M[1] = achsen[1]*cos(roll);
		temp_M[1]+= achsen[2]*sin(roll);
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4c4a:	88 27       	eor	r24, r24
    4c4c:	77 fd       	sbrc	r23, 7
    4c4e:	80 95       	com	r24
    4c50:	98 2f       	mov	r25, r24
    4c52:	79 d7       	rcall	.+3826   	; 0x5b46 <__floatsisf>
    4c54:	29 89       	ldd	r18, Y+17	; 0x11
    4c56:	3a 89       	ldd	r19, Y+18	; 0x12
    4c58:	4b 89       	ldd	r20, Y+19	; 0x13
    4c5a:	5c 89       	ldd	r21, Y+20	; 0x14
    4c5c:	7f d6       	rcall	.+3326   	; 0x595c <atan2>
    4c5e:	20 e0       	ldi	r18, 0x00	; 0
    4c60:	30 e0       	ldi	r19, 0x00	; 0
    4c62:	44 e3       	ldi	r20, 0x34	; 52
    4c64:	53 e4       	ldi	r21, 0x43	; 67
    4c66:	0e 94 01 2f 	call	0x5e02	; 0x5e02 <__mulsf3>
    4c6a:	2b ed       	ldi	r18, 0xDB	; 219
    4c6c:	3f e0       	ldi	r19, 0x0F	; 15
    4c6e:	49 e4       	ldi	r20, 0x49	; 73
    4c70:	50 e4       	ldi	r21, 0x40	; 64
    4c72:	ce d6       	rcall	.+3484   	; 0x5a10 <__divsf3>
    4c74:	20 e0       	ldi	r18, 0x00	; 0
    4c76:	30 e0       	ldi	r19, 0x00	; 0
    4c78:	44 e3       	ldi	r20, 0x34	; 52
    4c7a:	53 e4       	ldi	r21, 0x43	; 67
    4c7c:	fc d5       	rcall	.+3064   	; 0x5876 <__addsf3>
		//Tilt kompensation
		//deklination
		angle+=2.35;
    4c7e:	26 e6       	ldi	r18, 0x66	; 102
    4c80:	36 e6       	ldi	r19, 0x66	; 102
    4c82:	46 e1       	ldi	r20, 0x16	; 22
    4c84:	50 e4       	ldi	r21, 0x40	; 64
    4c86:	f7 d5       	rcall	.+3054   	; 0x5876 <__addsf3>
    4c88:	6b 01       	movw	r12, r22
    4c8a:	7c 01       	movw	r14, r24
		//Normierung auf %360
		if (angle>=360)
    4c8c:	20 e0       	ldi	r18, 0x00	; 0
    4c8e:	30 e0       	ldi	r19, 0x00	; 0
    4c90:	44 eb       	ldi	r20, 0xB4	; 180
    4c92:	53 e4       	ldi	r21, 0x43	; 67
    4c94:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__gesf2>
    4c98:	88 23       	and	r24, r24
    4c9a:	54 f0       	brlt	.+20     	; 0x4cb0 <_ZN7Kompass5angleEdd+0x1ec>
		{
			angle-=360;
    4c9c:	20 e0       	ldi	r18, 0x00	; 0
    4c9e:	30 e0       	ldi	r19, 0x00	; 0
    4ca0:	44 eb       	ldi	r20, 0xB4	; 180
    4ca2:	53 e4       	ldi	r21, 0x43	; 67
    4ca4:	c7 01       	movw	r24, r14
    4ca6:	b6 01       	movw	r22, r12
    4ca8:	e5 d5       	rcall	.+3018   	; 0x5874 <__subsf3>
    4caa:	6b 01       	movw	r12, r22
    4cac:	7c 01       	movw	r14, r24
    4cae:	1a c0       	rjmp	.+52     	; 0x4ce4 <_ZN7Kompass5angleEdd+0x220>
		}
		else if (angle < 0)
    4cb0:	20 e0       	ldi	r18, 0x00	; 0
    4cb2:	30 e0       	ldi	r19, 0x00	; 0
    4cb4:	a9 01       	movw	r20, r18
    4cb6:	c7 01       	movw	r24, r14
    4cb8:	b6 01       	movw	r22, r12
    4cba:	a3 d6       	rcall	.+3398   	; 0x5a02 <__cmpsf2>
    4cbc:	88 23       	and	r24, r24
    4cbe:	94 f4       	brge	.+36     	; 0x4ce4 <_ZN7Kompass5angleEdd+0x220>
		{
			angle+=360;
    4cc0:	20 e0       	ldi	r18, 0x00	; 0
    4cc2:	30 e0       	ldi	r19, 0x00	; 0
    4cc4:	44 eb       	ldi	r20, 0xB4	; 180
    4cc6:	53 e4       	ldi	r21, 0x43	; 67
    4cc8:	c7 01       	movw	r24, r14
    4cca:	b6 01       	movw	r22, r12
    4ccc:	d4 d5       	rcall	.+2984   	; 0x5876 <__addsf3>
    4cce:	6b 01       	movw	r12, r22
    4cd0:	7c 01       	movw	r14, r24
    4cd2:	08 c0       	rjmp	.+16     	; 0x4ce4 <_ZN7Kompass5angleEdd+0x220>
double Kompass::angle(double roll, double pitch){
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
    4cd4:	0f 2e       	mov	r0, r31
    4cd6:	c1 2c       	mov	r12, r1
    4cd8:	d1 2c       	mov	r13, r1
    4cda:	f0 e8       	ldi	r31, 0x80	; 128
    4cdc:	ef 2e       	mov	r14, r31
    4cde:	ff eb       	ldi	r31, 0xBF	; 191
    4ce0:	ff 2e       	mov	r15, r31
    4ce2:	f0 2d       	mov	r31, r0
		{
			angle+=360;
		}
	}
	
	HMC5883L_command(0x02,HMCSIGLEMODE);
    4ce4:	41 e0       	ldi	r20, 0x01	; 1
    4ce6:	62 e0       	ldi	r22, 0x02	; 2
    4ce8:	c1 01       	movw	r24, r2
    4cea:	fa dd       	rcall	.-1036   	; 0x48e0 <_ZN7Kompass16HMC5883L_commandEhh>
	return angle;
}
    4cec:	c7 01       	movw	r24, r14
    4cee:	b6 01       	movw	r22, r12
    4cf0:	64 96       	adiw	r28, 0x14	; 20
    4cf2:	0f b6       	in	r0, 0x3f	; 63
    4cf4:	f8 94       	cli
    4cf6:	de bf       	out	0x3e, r29	; 62
    4cf8:	0f be       	out	0x3f, r0	; 63
    4cfa:	cd bf       	out	0x3d, r28	; 61
    4cfc:	df 91       	pop	r29
    4cfe:	cf 91       	pop	r28
    4d00:	1f 91       	pop	r17
    4d02:	0f 91       	pop	r16
    4d04:	ff 90       	pop	r15
    4d06:	ef 90       	pop	r14
    4d08:	df 90       	pop	r13
    4d0a:	cf 90       	pop	r12
    4d0c:	bf 90       	pop	r11
    4d0e:	af 90       	pop	r10
    4d10:	9f 90       	pop	r9
    4d12:	8f 90       	pop	r8
    4d14:	7f 90       	pop	r7
    4d16:	6f 90       	pop	r6
    4d18:	5f 90       	pop	r5
    4d1a:	4f 90       	pop	r4
    4d1c:	3f 90       	pop	r3
    4d1e:	2f 90       	pop	r2
    4d20:	08 95       	ret

00004d22 <_ZN7Kompass25kallibrierung_ruecksetzenEv>:

void Kompass::kallibrierung_ruecksetzen(){
    4d22:	fc 01       	movw	r30, r24
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4d24:	16 86       	std	Z+14, r1	; 0x0e
    4d26:	15 86       	std	Z+13, r1	; 0x0d
		min[i]=0;
    4d28:	14 8a       	std	Z+20, r1	; 0x14
    4d2a:	13 8a       	std	Z+19, r1	; 0x13
		offset[i]=0;
    4d2c:	10 86       	std	Z+8, r1	; 0x08
    4d2e:	17 82       	std	Z+7, r1	; 0x07
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4d30:	10 8a       	std	Z+16, r1	; 0x10
    4d32:	17 86       	std	Z+15, r1	; 0x0f
		min[i]=0;
    4d34:	16 8a       	std	Z+22, r1	; 0x16
    4d36:	15 8a       	std	Z+21, r1	; 0x15
		offset[i]=0;
    4d38:	12 86       	std	Z+10, r1	; 0x0a
    4d3a:	11 86       	std	Z+9, r1	; 0x09
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4d3c:	12 8a       	std	Z+18, r1	; 0x12
    4d3e:	11 8a       	std	Z+17, r1	; 0x11
		min[i]=0;
    4d40:	10 8e       	std	Z+24, r1	; 0x18
    4d42:	17 8a       	std	Z+23, r1	; 0x17
		offset[i]=0;
    4d44:	14 86       	std	Z+12, r1	; 0x0c
    4d46:	13 86       	std	Z+11, r1	; 0x0b
    4d48:	08 95       	ret

00004d4a <_ZN7LSM303DD1Ev>:
	//FIFO Bypass Mode
	ACCBypassmode();
}

void LSM303D::ACCStreammode(){
	LSM303_command(FIFO_CTRL,(1<<FM1));
    4d4a:	40 96       	adiw	r24, 0x10	; 16
    4d4c:	cf cc       	rjmp	.-1634   	; 0x46ec <_ZN3I2CD1Ev>
    4d4e:	08 95       	ret

00004d50 <_ZN7LSM303D7readaccEv>:
    4d50:	6f 92       	push	r6
    4d52:	7f 92       	push	r7
    4d54:	8f 92       	push	r8
    4d56:	9f 92       	push	r9
    4d58:	af 92       	push	r10
    4d5a:	bf 92       	push	r11
    4d5c:	cf 92       	push	r12
    4d5e:	df 92       	push	r13
    4d60:	ef 92       	push	r14
    4d62:	ff 92       	push	r15
    4d64:	1f 93       	push	r17
    4d66:	cf 93       	push	r28
    4d68:	df 93       	push	r29
    4d6a:	00 d0       	rcall	.+0      	; 0x4d6c <_ZN7LSM303D7readaccEv+0x1c>
    4d6c:	00 d0       	rcall	.+0      	; 0x4d6e <_ZN7LSM303D7readaccEv+0x1e>
    4d6e:	00 d0       	rcall	.+0      	; 0x4d70 <_ZN7LSM303D7readaccEv+0x20>
    4d70:	cd b7       	in	r28, 0x3d	; 61
    4d72:	de b7       	in	r29, 0x3e	; 62
    4d74:	3c 01       	movw	r6, r24
    4d76:	f8 94       	cli
    4d78:	6c 01       	movw	r12, r24
    4d7a:	80 e1       	ldi	r24, 0x10	; 16
    4d7c:	c8 0e       	add	r12, r24
    4d7e:	d1 1c       	adc	r13, r1
    4d80:	c6 01       	movw	r24, r12
    4d82:	b5 dc       	rcall	.-1686   	; 0x46ee <_ZN3I2C9twi_startEv>
    4d84:	6a e3       	ldi	r22, 0x3A	; 58
    4d86:	c6 01       	movw	r24, r12
    4d88:	ba dc       	rcall	.-1676   	; 0x46fe <_ZN3I2C9twi_writeEh>
    4d8a:	68 ea       	ldi	r22, 0xA8	; 168
    4d8c:	c6 01       	movw	r24, r12
    4d8e:	b7 dc       	rcall	.-1682   	; 0x46fe <_ZN3I2C9twi_writeEh>
    4d90:	c6 01       	movw	r24, r12
    4d92:	ad dc       	rcall	.-1702   	; 0x46ee <_ZN3I2C9twi_startEv>
    4d94:	6b e3       	ldi	r22, 0x3B	; 59
    4d96:	c6 01       	movw	r24, r12
    4d98:	b2 dc       	rcall	.-1692   	; 0x46fe <_ZN3I2C9twi_writeEh>
    4d9a:	fe 01       	movw	r30, r28
    4d9c:	31 96       	adiw	r30, 0x01	; 1
    4d9e:	7f 01       	movw	r14, r30
    4da0:	10 e0       	ldi	r17, 0x00	; 0
    4da2:	15 30       	cpi	r17, 0x05	; 5
    4da4:	30 f4       	brcc	.+12     	; 0x4db2 <_ZN7LSM303D7readaccEv+0x62>
    4da6:	61 e0       	ldi	r22, 0x01	; 1
    4da8:	c6 01       	movw	r24, r12
    4daa:	b9 dc       	rcall	.-1678   	; 0x471e <_ZN3I2C8twi_readEh>
    4dac:	f7 01       	movw	r30, r14
    4dae:	80 83       	st	Z, r24
    4db0:	05 c0       	rjmp	.+10     	; 0x4dbc <_ZN7LSM303D7readaccEv+0x6c>
    4db2:	60 e0       	ldi	r22, 0x00	; 0
    4db4:	c6 01       	movw	r24, r12
    4db6:	b3 dc       	rcall	.-1690   	; 0x471e <_ZN3I2C8twi_readEh>
    4db8:	f7 01       	movw	r30, r14
    4dba:	80 83       	st	Z, r24
    4dbc:	1f 5f       	subi	r17, 0xFF	; 255
    4dbe:	ff ef       	ldi	r31, 0xFF	; 255
    4dc0:	ef 1a       	sub	r14, r31
    4dc2:	ff 0a       	sbc	r15, r31
    4dc4:	16 30       	cpi	r17, 0x06	; 6
    4dc6:	69 f7       	brne	.-38     	; 0x4da2 <_ZN7LSM303D7readaccEv+0x52>
    4dc8:	c6 01       	movw	r24, r12
    4dca:	95 dc       	rcall	.-1750   	; 0x46f6 <_ZN3I2C8twi_stopEv>
    4dcc:	6a 81       	ldd	r22, Y+2	; 0x02
    4dce:	70 e0       	ldi	r23, 0x00	; 0
    4dd0:	76 2f       	mov	r23, r22
    4dd2:	66 27       	eor	r22, r22
    4dd4:	89 81       	ldd	r24, Y+1	; 0x01
    4dd6:	68 2b       	or	r22, r24
    4dd8:	f3 01       	movw	r30, r6
    4dda:	75 83       	std	Z+5, r23	; 0x05
    4ddc:	64 83       	std	Z+4, r22	; 0x04
    4dde:	ac 80       	ldd	r10, Y+4	; 0x04
    4de0:	b1 2c       	mov	r11, r1
    4de2:	ba 2c       	mov	r11, r10
    4de4:	aa 24       	eor	r10, r10
    4de6:	8b 81       	ldd	r24, Y+3	; 0x03
    4de8:	a8 2a       	or	r10, r24
    4dea:	b1 82       	std	Z+1, r11	; 0x01
    4dec:	a0 82       	st	Z, r10
    4dee:	8e 80       	ldd	r8, Y+6	; 0x06
    4df0:	91 2c       	mov	r9, r1
    4df2:	98 2c       	mov	r9, r8
    4df4:	88 24       	eor	r8, r8
    4df6:	8d 81       	ldd	r24, Y+5	; 0x05
    4df8:	88 2a       	or	r8, r24
    4dfa:	93 82       	std	Z+3, r9	; 0x03
    4dfc:	82 82       	std	Z+2, r8	; 0x02
    4dfe:	88 27       	eor	r24, r24
    4e00:	77 fd       	sbrc	r23, 7
    4e02:	80 95       	com	r24
    4e04:	98 2f       	mov	r25, r24
    4e06:	9f d6       	rcall	.+3390   	; 0x5b46 <__floatsisf>
    4e08:	6b 01       	movw	r12, r22
    4e0a:	7c 01       	movw	r14, r24
    4e0c:	b4 01       	movw	r22, r8
    4e0e:	88 27       	eor	r24, r24
    4e10:	77 fd       	sbrc	r23, 7
    4e12:	80 95       	com	r24
    4e14:	98 2f       	mov	r25, r24
    4e16:	97 d6       	rcall	.+3374   	; 0x5b46 <__floatsisf>
    4e18:	9b 01       	movw	r18, r22
    4e1a:	ac 01       	movw	r20, r24
    4e1c:	c7 01       	movw	r24, r14
    4e1e:	b6 01       	movw	r22, r12
    4e20:	9d d5       	rcall	.+2874   	; 0x595c <atan2>
    4e22:	2b ed       	ldi	r18, 0xDB	; 219
    4e24:	3f e0       	ldi	r19, 0x0F	; 15
    4e26:	49 ec       	ldi	r20, 0xC9	; 201
    4e28:	5f e3       	ldi	r21, 0x3F	; 63
    4e2a:	24 d5       	rcall	.+2632   	; 0x5874 <__subsf3>
    4e2c:	f3 01       	movw	r30, r6
    4e2e:	64 87       	std	Z+12, r22	; 0x0c
    4e30:	75 87       	std	Z+13, r23	; 0x0d
    4e32:	86 87       	std	Z+14, r24	; 0x0e
    4e34:	97 87       	std	Z+15, r25	; 0x0f
    4e36:	b5 01       	movw	r22, r10
    4e38:	88 27       	eor	r24, r24
    4e3a:	77 fd       	sbrc	r23, 7
    4e3c:	80 95       	com	r24
    4e3e:	98 2f       	mov	r25, r24
    4e40:	82 d6       	rcall	.+3332   	; 0x5b46 <__floatsisf>
    4e42:	9b 01       	movw	r18, r22
    4e44:	ac 01       	movw	r20, r24
    4e46:	c7 01       	movw	r24, r14
    4e48:	b6 01       	movw	r22, r12
    4e4a:	88 d5       	rcall	.+2832   	; 0x595c <atan2>
    4e4c:	2b ed       	ldi	r18, 0xDB	; 219
    4e4e:	3f e0       	ldi	r19, 0x0F	; 15
    4e50:	49 ec       	ldi	r20, 0xC9	; 201
    4e52:	5f e3       	ldi	r21, 0x3F	; 63
    4e54:	0f d5       	rcall	.+2590   	; 0x5874 <__subsf3>
    4e56:	f3 01       	movw	r30, r6
    4e58:	60 87       	std	Z+8, r22	; 0x08
    4e5a:	71 87       	std	Z+9, r23	; 0x09
    4e5c:	82 87       	std	Z+10, r24	; 0x0a
    4e5e:	93 87       	std	Z+11, r25	; 0x0b
    4e60:	78 94       	sei
    4e62:	26 96       	adiw	r28, 0x06	; 6
    4e64:	0f b6       	in	r0, 0x3f	; 63
    4e66:	f8 94       	cli
    4e68:	de bf       	out	0x3e, r29	; 62
    4e6a:	0f be       	out	0x3f, r0	; 63
    4e6c:	cd bf       	out	0x3d, r28	; 61
    4e6e:	df 91       	pop	r29
    4e70:	cf 91       	pop	r28
    4e72:	1f 91       	pop	r17
    4e74:	ff 90       	pop	r15
    4e76:	ef 90       	pop	r14
    4e78:	df 90       	pop	r13
    4e7a:	cf 90       	pop	r12
    4e7c:	bf 90       	pop	r11
    4e7e:	af 90       	pop	r10
    4e80:	9f 90       	pop	r9
    4e82:	8f 90       	pop	r8
    4e84:	7f 90       	pop	r7
    4e86:	6f 90       	pop	r6
    4e88:	08 95       	ret

00004e8a <_ZN7LSM303D11readtemperaEv>:
    4e8a:	cf 92       	push	r12
    4e8c:	df 92       	push	r13
    4e8e:	ef 92       	push	r14
    4e90:	ff 92       	push	r15
    4e92:	0f 93       	push	r16
    4e94:	1f 93       	push	r17
    4e96:	cf 93       	push	r28
    4e98:	df 93       	push	r29
    4e9a:	00 d0       	rcall	.+0      	; 0x4e9c <_ZN7LSM303D11readtemperaEv+0x12>
    4e9c:	cd b7       	in	r28, 0x3d	; 61
    4e9e:	de b7       	in	r29, 0x3e	; 62
    4ea0:	7c 01       	movw	r14, r24
    4ea2:	f8 94       	cli
    4ea4:	8c 01       	movw	r16, r24
    4ea6:	00 5f       	subi	r16, 0xF0	; 240
    4ea8:	1f 4f       	sbci	r17, 0xFF	; 255
    4eaa:	c8 01       	movw	r24, r16
    4eac:	20 dc       	rcall	.-1984   	; 0x46ee <_ZN3I2C9twi_startEv>
    4eae:	6a e3       	ldi	r22, 0x3A	; 58
    4eb0:	c8 01       	movw	r24, r16
    4eb2:	25 dc       	rcall	.-1974   	; 0x46fe <_ZN3I2C9twi_writeEh>
    4eb4:	65 e8       	ldi	r22, 0x85	; 133
    4eb6:	c8 01       	movw	r24, r16
    4eb8:	22 dc       	rcall	.-1980   	; 0x46fe <_ZN3I2C9twi_writeEh>
    4eba:	c8 01       	movw	r24, r16
    4ebc:	18 dc       	rcall	.-2000   	; 0x46ee <_ZN3I2C9twi_startEv>
    4ebe:	6b e3       	ldi	r22, 0x3B	; 59
    4ec0:	c8 01       	movw	r24, r16
    4ec2:	1d dc       	rcall	.-1990   	; 0x46fe <_ZN3I2C9twi_writeEh>
    4ec4:	cc 24       	eor	r12, r12
    4ec6:	c3 94       	inc	r12
    4ec8:	d1 2c       	mov	r13, r1
    4eca:	02 c0       	rjmp	.+4      	; 0x4ed0 <_ZN7LSM303D11readtemperaEv+0x46>
    4ecc:	d3 94       	inc	r13
    4ece:	c3 94       	inc	r12
    4ed0:	d1 10       	cpse	r13, r1
    4ed2:	05 c0       	rjmp	.+10     	; 0x4ede <_ZN7LSM303D11readtemperaEv+0x54>
    4ed4:	61 e0       	ldi	r22, 0x01	; 1
    4ed6:	c8 01       	movw	r24, r16
    4ed8:	22 dc       	rcall	.-1980   	; 0x471e <_ZN3I2C8twi_readEh>
    4eda:	89 83       	std	Y+1, r24	; 0x01
    4edc:	f7 cf       	rjmp	.-18     	; 0x4ecc <_ZN7LSM303D11readtemperaEv+0x42>
    4ede:	60 e0       	ldi	r22, 0x00	; 0
    4ee0:	c8 01       	movw	r24, r16
    4ee2:	1d dc       	rcall	.-1990   	; 0x471e <_ZN3I2C8twi_readEh>
    4ee4:	e1 e0       	ldi	r30, 0x01	; 1
    4ee6:	f0 e0       	ldi	r31, 0x00	; 0
    4ee8:	ec 0f       	add	r30, r28
    4eea:	fd 1f       	adc	r31, r29
    4eec:	ed 0d       	add	r30, r13
    4eee:	f1 1d       	adc	r31, r1
    4ef0:	80 83       	st	Z, r24
    4ef2:	81 e0       	ldi	r24, 0x01	; 1
    4ef4:	8c 15       	cp	r24, r12
    4ef6:	50 f7       	brcc	.-44     	; 0x4ecc <_ZN7LSM303D11readtemperaEv+0x42>
    4ef8:	c8 01       	movw	r24, r16
    4efa:	fd db       	rcall	.-2054   	; 0x46f6 <_ZN3I2C8twi_stopEv>
    4efc:	8a 81       	ldd	r24, Y+2	; 0x02
    4efe:	90 e0       	ldi	r25, 0x00	; 0
    4f00:	98 2f       	mov	r25, r24
    4f02:	88 27       	eor	r24, r24
    4f04:	29 81       	ldd	r18, Y+1	; 0x01
    4f06:	82 2b       	or	r24, r18
    4f08:	91 95       	neg	r25
    4f0a:	81 95       	neg	r24
    4f0c:	91 09       	sbc	r25, r1
    4f0e:	f7 01       	movw	r30, r14
    4f10:	97 83       	std	Z+7, r25	; 0x07
    4f12:	86 83       	std	Z+6, r24	; 0x06
    4f14:	78 94       	sei
    4f16:	0f 90       	pop	r0
    4f18:	0f 90       	pop	r0
    4f1a:	df 91       	pop	r29
    4f1c:	cf 91       	pop	r28
    4f1e:	1f 91       	pop	r17
    4f20:	0f 91       	pop	r16
    4f22:	ff 90       	pop	r15
    4f24:	ef 90       	pop	r14
    4f26:	df 90       	pop	r13
    4f28:	cf 90       	pop	r12
    4f2a:	08 95       	ret

00004f2c <_ZN7LSM303D14LSM303_commandEhh>:
    4f2c:	0f 93       	push	r16
    4f2e:	1f 93       	push	r17
    4f30:	cf 93       	push	r28
    4f32:	df 93       	push	r29
    4f34:	06 2f       	mov	r16, r22
    4f36:	14 2f       	mov	r17, r20
    4f38:	ec 01       	movw	r28, r24
    4f3a:	60 96       	adiw	r28, 0x10	; 16
    4f3c:	ce 01       	movw	r24, r28
    4f3e:	d7 db       	rcall	.-2130   	; 0x46ee <_ZN3I2C9twi_startEv>
    4f40:	6a e3       	ldi	r22, 0x3A	; 58
    4f42:	ce 01       	movw	r24, r28
    4f44:	dc db       	rcall	.-2120   	; 0x46fe <_ZN3I2C9twi_writeEh>
    4f46:	60 2f       	mov	r22, r16
    4f48:	ce 01       	movw	r24, r28
    4f4a:	d9 db       	rcall	.-2126   	; 0x46fe <_ZN3I2C9twi_writeEh>
    4f4c:	61 2f       	mov	r22, r17
    4f4e:	ce 01       	movw	r24, r28
    4f50:	d6 db       	rcall	.-2132   	; 0x46fe <_ZN3I2C9twi_writeEh>
    4f52:	ce 01       	movw	r24, r28
    4f54:	d0 db       	rcall	.-2144   	; 0x46f6 <_ZN3I2C8twi_stopEv>
    4f56:	df 91       	pop	r29
    4f58:	cf 91       	pop	r28
    4f5a:	1f 91       	pop	r17
    4f5c:	0f 91       	pop	r16
    4f5e:	08 95       	ret

00004f60 <_ZN7LSM303D13ACCBypassmodeEv>:
}

void LSM303D::ACCBypassmode(){
	LSM303_command(FIFO_CTRL,0x00);
    4f60:	40 e0       	ldi	r20, 0x00	; 0
    4f62:	6e e2       	ldi	r22, 0x2E	; 46
    4f64:	e3 cf       	rjmp	.-58     	; 0x4f2c <_ZN7LSM303D14LSM303_commandEhh>
    4f66:	08 95       	ret

00004f68 <_ZN7LSM303D9acce_initEv>:
// default destructor
LSM303D::~LSM303D()
{
} //~LSM303D

void LSM303D::acce_init(){
    4f68:	cf 93       	push	r28
    4f6a:	df 93       	push	r29
    4f6c:	ec 01       	movw	r28, r24
	//ACC Activ und 25Hz ohne Block dataread
	LSM303_command(CTRL1,(1<<AXEN)|(1<<AYEN)|(1<<AZEN)|(1<<AODR2));
    4f6e:	47 e4       	ldi	r20, 0x47	; 71
    4f70:	60 e2       	ldi	r22, 0x20	; 32
    4f72:	dc df       	rcall	.-72     	; 0x4f2c <_ZN7LSM303D14LSM303_commandEhh>
	
	//ACC fuer +-2g
	LSM303_command(CTRL2,0x00);
    4f74:	40 e0       	ldi	r20, 0x00	; 0
    4f76:	61 e2       	ldi	r22, 0x21	; 33
    4f78:	ce 01       	movw	r24, r28
    4f7a:	d8 df       	rcall	.-80     	; 0x4f2c <_ZN7LSM303D14LSM303_commandEhh>
	
	//Temperatursensor an
	LSM303_command(CTRL5,(1<<TEMP_EN));
    4f7c:	40 e8       	ldi	r20, 0x80	; 128
    4f7e:	64 e2       	ldi	r22, 0x24	; 36
    4f80:	ce 01       	movw	r24, r28
    4f82:	d4 df       	rcall	.-88     	; 0x4f2c <_ZN7LSM303D14LSM303_commandEhh>
	
	//FIFO Bypass Mode
	ACCBypassmode();
    4f84:	ce 01       	movw	r24, r28
    4f86:	ec df       	rcall	.-40     	; 0x4f60 <_ZN7LSM303D13ACCBypassmodeEv>
}
    4f88:	df 91       	pop	r29
    4f8a:	cf 91       	pop	r28
    4f8c:	08 95       	ret

00004f8e <_ZN7LSM303DC1Ev>:


#include "LSM303D.h"

// default constructor
LSM303D::LSM303D()
    4f8e:	cf 93       	push	r28
    4f90:	df 93       	push	r29
    4f92:	ec 01       	movw	r28, r24
    4f94:	40 96       	adiw	r24, 0x10	; 16
    4f96:	a6 db       	rcall	.-2228   	; 0x46e4 <_ZN3I2CC1Ev>
{
	//Variablen initialisieren
	Tempera=0;
    4f98:	1f 82       	std	Y+7, r1	; 0x07
    4f9a:	1e 82       	std	Y+6, r1	; 0x06
	roll=0.0;
    4f9c:	18 86       	std	Y+8, r1	; 0x08
    4f9e:	19 86       	std	Y+9, r1	; 0x09
    4fa0:	1a 86       	std	Y+10, r1	; 0x0a
    4fa2:	1b 86       	std	Y+11, r1	; 0x0b
	pitch=0.0;
    4fa4:	1c 86       	std	Y+12, r1	; 0x0c
    4fa6:	1d 86       	std	Y+13, r1	; 0x0d
    4fa8:	1e 86       	std	Y+14, r1	; 0x0e
    4faa:	1f 86       	std	Y+15, r1	; 0x0f
	for (uint8_t i=0;i<3;i++)
	{
		achsen_A[i]=0;
    4fac:	19 82       	std	Y+1, r1	; 0x01
    4fae:	18 82       	st	Y, r1
    4fb0:	1b 82       	std	Y+3, r1	; 0x03
    4fb2:	1a 82       	std	Y+2, r1	; 0x02
    4fb4:	1d 82       	std	Y+5, r1	; 0x05
    4fb6:	1c 82       	std	Y+4, r1	; 0x04
	}
	
	//ACC init
	acce_init();
    4fb8:	ce 01       	movw	r24, r28
    4fba:	d6 df       	rcall	.-84     	; 0x4f68 <_ZN7LSM303D9acce_initEv>
} //LSM303D
    4fbc:	df 91       	pop	r29
    4fbe:	cf 91       	pop	r28
    4fc0:	08 95       	ret

00004fc2 <_ZN6OutputC1Ehh>:
#include "Output.h"

// default constructor
Output::Output(uint8_t Portpraefix, uint8_t Pinnumber)
{
	Pin=Pinnumber;
    4fc2:	fc 01       	movw	r30, r24
    4fc4:	41 83       	std	Z+1, r20	; 0x01
	Port=Portpraefix;
    4fc6:	60 83       	st	Z, r22
	switch (Portpraefix)
    4fc8:	62 34       	cpi	r22, 0x42	; 66
    4fca:	b1 f0       	breq	.+44     	; 0x4ff8 <_ZN6OutputC1Ehh+0x36>
    4fcc:	18 f4       	brcc	.+6      	; 0x4fd4 <_ZN6OutputC1Ehh+0x12>
    4fce:	61 34       	cpi	r22, 0x41	; 65
    4fd0:	31 f0       	breq	.+12     	; 0x4fde <_ZN6OutputC1Ehh+0x1c>
    4fd2:	08 95       	ret
    4fd4:	63 34       	cpi	r22, 0x43	; 67
    4fd6:	e9 f0       	breq	.+58     	; 0x5012 <_ZN6OutputC1Ehh+0x50>
    4fd8:	64 34       	cpi	r22, 0x44	; 68
    4fda:	41 f1       	breq	.+80     	; 0x502c <_ZN6OutputC1Ehh+0x6a>
    4fdc:	08 95       	ret
	{
		case 'A':
			DDRA |= (1<<Pin);
    4fde:	21 b1       	in	r18, 0x01	; 1
    4fe0:	81 e0       	ldi	r24, 0x01	; 1
    4fe2:	90 e0       	ldi	r25, 0x00	; 0
    4fe4:	bc 01       	movw	r22, r24
    4fe6:	02 c0       	rjmp	.+4      	; 0x4fec <_ZN6OutputC1Ehh+0x2a>
    4fe8:	66 0f       	add	r22, r22
    4fea:	77 1f       	adc	r23, r23
    4fec:	4a 95       	dec	r20
    4fee:	e2 f7       	brpl	.-8      	; 0x4fe8 <_ZN6OutputC1Ehh+0x26>
    4ff0:	ab 01       	movw	r20, r22
    4ff2:	42 2b       	or	r20, r18
    4ff4:	41 b9       	out	0x01, r20	; 1
			break;
    4ff6:	08 95       	ret
		case 'B':
			DDRB |= (1<<Pin);
    4ff8:	24 b1       	in	r18, 0x04	; 4
    4ffa:	81 e0       	ldi	r24, 0x01	; 1
    4ffc:	90 e0       	ldi	r25, 0x00	; 0
    4ffe:	fc 01       	movw	r30, r24
    5000:	02 c0       	rjmp	.+4      	; 0x5006 <_ZN6OutputC1Ehh+0x44>
    5002:	ee 0f       	add	r30, r30
    5004:	ff 1f       	adc	r31, r31
    5006:	4a 95       	dec	r20
    5008:	e2 f7       	brpl	.-8      	; 0x5002 <_ZN6OutputC1Ehh+0x40>
    500a:	af 01       	movw	r20, r30
    500c:	42 2b       	or	r20, r18
    500e:	44 b9       	out	0x04, r20	; 4
			break;
    5010:	08 95       	ret
		case 'C':
			DDRC |= (1<<Pin);
    5012:	27 b1       	in	r18, 0x07	; 7
    5014:	81 e0       	ldi	r24, 0x01	; 1
    5016:	90 e0       	ldi	r25, 0x00	; 0
    5018:	bc 01       	movw	r22, r24
    501a:	02 c0       	rjmp	.+4      	; 0x5020 <_ZN6OutputC1Ehh+0x5e>
    501c:	66 0f       	add	r22, r22
    501e:	77 1f       	adc	r23, r23
    5020:	4a 95       	dec	r20
    5022:	e2 f7       	brpl	.-8      	; 0x501c <_ZN6OutputC1Ehh+0x5a>
    5024:	ab 01       	movw	r20, r22
    5026:	42 2b       	or	r20, r18
    5028:	47 b9       	out	0x07, r20	; 7
			break;
    502a:	08 95       	ret
		case 'D':
			DDRD |= (1<<Pin);
    502c:	2a b1       	in	r18, 0x0a	; 10
    502e:	81 e0       	ldi	r24, 0x01	; 1
    5030:	90 e0       	ldi	r25, 0x00	; 0
    5032:	fc 01       	movw	r30, r24
    5034:	02 c0       	rjmp	.+4      	; 0x503a <_ZN6OutputC1Ehh+0x78>
    5036:	ee 0f       	add	r30, r30
    5038:	ff 1f       	adc	r31, r31
    503a:	4a 95       	dec	r20
    503c:	e2 f7       	brpl	.-8      	; 0x5036 <_ZN6OutputC1Ehh+0x74>
    503e:	af 01       	movw	r20, r30
    5040:	42 2b       	or	r20, r18
    5042:	4a b9       	out	0x0a, r20	; 10
    5044:	08 95       	ret

00005046 <_ZN6OutputD1Ev>:
			break;
	}
} //Output

// default destructor
Output::~Output()
    5046:	08 95       	ret

00005048 <_ZN6Output2onEv>:
{
} //~Output

void Output::on(){
	switch (Port)
    5048:	fc 01       	movw	r30, r24
    504a:	20 81       	ld	r18, Z
    504c:	22 34       	cpi	r18, 0x42	; 66
    504e:	c1 f0       	breq	.+48     	; 0x5080 <_ZN6Output2onEv+0x38>
    5050:	18 f4       	brcc	.+6      	; 0x5058 <_ZN6Output2onEv+0x10>
    5052:	21 34       	cpi	r18, 0x41	; 65
    5054:	31 f0       	breq	.+12     	; 0x5062 <_ZN6Output2onEv+0x1a>
    5056:	08 95       	ret
    5058:	23 34       	cpi	r18, 0x43	; 67
    505a:	09 f1       	breq	.+66     	; 0x509e <_ZN6Output2onEv+0x56>
    505c:	24 34       	cpi	r18, 0x44	; 68
    505e:	71 f1       	breq	.+92     	; 0x50bc <_ZN6Output2onEv+0x74>
    5060:	08 95       	ret
	{
		case 'A':
			PORTA |= (1<<Pin);
    5062:	42 b1       	in	r20, 0x02	; 2
    5064:	21 e0       	ldi	r18, 0x01	; 1
    5066:	30 e0       	ldi	r19, 0x00	; 0
    5068:	b9 01       	movw	r22, r18
    506a:	fc 01       	movw	r30, r24
    506c:	01 80       	ldd	r0, Z+1	; 0x01
    506e:	02 c0       	rjmp	.+4      	; 0x5074 <_ZN6Output2onEv+0x2c>
    5070:	66 0f       	add	r22, r22
    5072:	77 1f       	adc	r23, r23
    5074:	0a 94       	dec	r0
    5076:	e2 f7       	brpl	.-8      	; 0x5070 <_ZN6Output2onEv+0x28>
    5078:	cb 01       	movw	r24, r22
    507a:	84 2b       	or	r24, r20
    507c:	82 b9       	out	0x02, r24	; 2
			break;
    507e:	08 95       	ret
		case 'B':
			PORTB |= (1<<Pin);
    5080:	45 b1       	in	r20, 0x05	; 5
    5082:	21 e0       	ldi	r18, 0x01	; 1
    5084:	30 e0       	ldi	r19, 0x00	; 0
    5086:	b9 01       	movw	r22, r18
    5088:	fc 01       	movw	r30, r24
    508a:	01 80       	ldd	r0, Z+1	; 0x01
    508c:	02 c0       	rjmp	.+4      	; 0x5092 <_ZN6Output2onEv+0x4a>
    508e:	66 0f       	add	r22, r22
    5090:	77 1f       	adc	r23, r23
    5092:	0a 94       	dec	r0
    5094:	e2 f7       	brpl	.-8      	; 0x508e <_ZN6Output2onEv+0x46>
    5096:	cb 01       	movw	r24, r22
    5098:	84 2b       	or	r24, r20
    509a:	85 b9       	out	0x05, r24	; 5
			break;
    509c:	08 95       	ret
		case 'C':
			PORTC |= (1<<Pin);
    509e:	48 b1       	in	r20, 0x08	; 8
    50a0:	21 e0       	ldi	r18, 0x01	; 1
    50a2:	30 e0       	ldi	r19, 0x00	; 0
    50a4:	b9 01       	movw	r22, r18
    50a6:	fc 01       	movw	r30, r24
    50a8:	01 80       	ldd	r0, Z+1	; 0x01
    50aa:	02 c0       	rjmp	.+4      	; 0x50b0 <_ZN6Output2onEv+0x68>
    50ac:	66 0f       	add	r22, r22
    50ae:	77 1f       	adc	r23, r23
    50b0:	0a 94       	dec	r0
    50b2:	e2 f7       	brpl	.-8      	; 0x50ac <_ZN6Output2onEv+0x64>
    50b4:	cb 01       	movw	r24, r22
    50b6:	84 2b       	or	r24, r20
    50b8:	88 b9       	out	0x08, r24	; 8
			break;
    50ba:	08 95       	ret
		case 'D':
			PORTD |= (1<<Pin);
    50bc:	4b b1       	in	r20, 0x0b	; 11
    50be:	21 e0       	ldi	r18, 0x01	; 1
    50c0:	30 e0       	ldi	r19, 0x00	; 0
    50c2:	b9 01       	movw	r22, r18
    50c4:	fc 01       	movw	r30, r24
    50c6:	01 80       	ldd	r0, Z+1	; 0x01
    50c8:	02 c0       	rjmp	.+4      	; 0x50ce <_ZN6Output2onEv+0x86>
    50ca:	66 0f       	add	r22, r22
    50cc:	77 1f       	adc	r23, r23
    50ce:	0a 94       	dec	r0
    50d0:	e2 f7       	brpl	.-8      	; 0x50ca <_ZN6Output2onEv+0x82>
    50d2:	cb 01       	movw	r24, r22
    50d4:	84 2b       	or	r24, r20
    50d6:	8b b9       	out	0x0b, r24	; 11
    50d8:	08 95       	ret

000050da <_ZN6Output4isonEv>:
	}
}

uint8_t Output::ison(){
	uint8_t returnparam=0;
	switch (Port)
    50da:	fc 01       	movw	r30, r24
    50dc:	20 81       	ld	r18, Z
    50de:	22 34       	cpi	r18, 0x42	; 66
    50e0:	b1 f0       	breq	.+44     	; 0x510e <_ZN6Output4isonEv+0x34>
    50e2:	18 f4       	brcc	.+6      	; 0x50ea <_ZN6Output4isonEv+0x10>
    50e4:	21 34       	cpi	r18, 0x41	; 65
    50e6:	31 f0       	breq	.+12     	; 0x50f4 <_ZN6Output4isonEv+0x1a>
    50e8:	39 c0       	rjmp	.+114    	; 0x515c <_ZN6Output4isonEv+0x82>
    50ea:	23 34       	cpi	r18, 0x43	; 67
    50ec:	e9 f0       	breq	.+58     	; 0x5128 <_ZN6Output4isonEv+0x4e>
    50ee:	24 34       	cpi	r18, 0x44	; 68
    50f0:	41 f1       	breq	.+80     	; 0x5142 <_ZN6Output4isonEv+0x68>
    50f2:	34 c0       	rjmp	.+104    	; 0x515c <_ZN6Output4isonEv+0x82>
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    50f4:	22 b1       	in	r18, 0x02	; 2
    50f6:	30 e0       	ldi	r19, 0x00	; 0
    50f8:	a9 01       	movw	r20, r18
    50fa:	fc 01       	movw	r30, r24
    50fc:	01 80       	ldd	r0, Z+1	; 0x01
    50fe:	02 c0       	rjmp	.+4      	; 0x5104 <_ZN6Output4isonEv+0x2a>
    5100:	55 95       	asr	r21
    5102:	47 95       	ror	r20
    5104:	0a 94       	dec	r0
    5106:	e2 f7       	brpl	.-8      	; 0x5100 <_ZN6Output4isonEv+0x26>
    5108:	ca 01       	movw	r24, r20
    510a:	81 70       	andi	r24, 0x01	; 1
    510c:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    510e:	25 b1       	in	r18, 0x05	; 5
    5110:	30 e0       	ldi	r19, 0x00	; 0
    5112:	a9 01       	movw	r20, r18
    5114:	fc 01       	movw	r30, r24
    5116:	01 80       	ldd	r0, Z+1	; 0x01
    5118:	02 c0       	rjmp	.+4      	; 0x511e <_ZN6Output4isonEv+0x44>
    511a:	55 95       	asr	r21
    511c:	47 95       	ror	r20
    511e:	0a 94       	dec	r0
    5120:	e2 f7       	brpl	.-8      	; 0x511a <_ZN6Output4isonEv+0x40>
    5122:	ca 01       	movw	r24, r20
    5124:	81 70       	andi	r24, 0x01	; 1
    5126:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    5128:	28 b1       	in	r18, 0x08	; 8
    512a:	30 e0       	ldi	r19, 0x00	; 0
    512c:	a9 01       	movw	r20, r18
    512e:	fc 01       	movw	r30, r24
    5130:	01 80       	ldd	r0, Z+1	; 0x01
    5132:	02 c0       	rjmp	.+4      	; 0x5138 <_ZN6Output4isonEv+0x5e>
    5134:	55 95       	asr	r21
    5136:	47 95       	ror	r20
    5138:	0a 94       	dec	r0
    513a:	e2 f7       	brpl	.-8      	; 0x5134 <_ZN6Output4isonEv+0x5a>
    513c:	ca 01       	movw	r24, r20
    513e:	81 70       	andi	r24, 0x01	; 1
    5140:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    5142:	2b b1       	in	r18, 0x0b	; 11
    5144:	30 e0       	ldi	r19, 0x00	; 0
    5146:	a9 01       	movw	r20, r18
    5148:	fc 01       	movw	r30, r24
    514a:	01 80       	ldd	r0, Z+1	; 0x01
    514c:	02 c0       	rjmp	.+4      	; 0x5152 <_ZN6Output4isonEv+0x78>
    514e:	55 95       	asr	r21
    5150:	47 95       	ror	r20
    5152:	0a 94       	dec	r0
    5154:	e2 f7       	brpl	.-8      	; 0x514e <_ZN6Output4isonEv+0x74>
    5156:	ca 01       	movw	r24, r20
    5158:	81 70       	andi	r24, 0x01	; 1
    515a:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		default:
		returnparam = 2;
    515c:	82 e0       	ldi	r24, 0x02	; 2
			break;
	}
	return returnparam;
}
    515e:	08 95       	ret

00005160 <_ZN6Output3offEv>:

void Output::off(){
	switch (Port)
    5160:	fc 01       	movw	r30, r24
    5162:	20 81       	ld	r18, Z
    5164:	22 34       	cpi	r18, 0x42	; 66
    5166:	c9 f0       	breq	.+50     	; 0x519a <_ZN6Output3offEv+0x3a>
    5168:	18 f4       	brcc	.+6      	; 0x5170 <_ZN6Output3offEv+0x10>
    516a:	21 34       	cpi	r18, 0x41	; 65
    516c:	31 f0       	breq	.+12     	; 0x517a <_ZN6Output3offEv+0x1a>
    516e:	08 95       	ret
    5170:	23 34       	cpi	r18, 0x43	; 67
    5172:	19 f1       	breq	.+70     	; 0x51ba <_ZN6Output3offEv+0x5a>
    5174:	24 34       	cpi	r18, 0x44	; 68
    5176:	89 f1       	breq	.+98     	; 0x51da <_ZN6Output3offEv+0x7a>
    5178:	08 95       	ret
	{
		case 'A':
			PORTA &= ~(1<<Pin);
    517a:	42 b1       	in	r20, 0x02	; 2
    517c:	21 e0       	ldi	r18, 0x01	; 1
    517e:	30 e0       	ldi	r19, 0x00	; 0
    5180:	b9 01       	movw	r22, r18
    5182:	fc 01       	movw	r30, r24
    5184:	01 80       	ldd	r0, Z+1	; 0x01
    5186:	02 c0       	rjmp	.+4      	; 0x518c <_ZN6Output3offEv+0x2c>
    5188:	66 0f       	add	r22, r22
    518a:	77 1f       	adc	r23, r23
    518c:	0a 94       	dec	r0
    518e:	e2 f7       	brpl	.-8      	; 0x5188 <_ZN6Output3offEv+0x28>
    5190:	cb 01       	movw	r24, r22
    5192:	80 95       	com	r24
    5194:	84 23       	and	r24, r20
    5196:	82 b9       	out	0x02, r24	; 2
			break;
    5198:	08 95       	ret
		case 'B':
			PORTB &= ~(1<<Pin);
    519a:	45 b1       	in	r20, 0x05	; 5
    519c:	21 e0       	ldi	r18, 0x01	; 1
    519e:	30 e0       	ldi	r19, 0x00	; 0
    51a0:	b9 01       	movw	r22, r18
    51a2:	fc 01       	movw	r30, r24
    51a4:	01 80       	ldd	r0, Z+1	; 0x01
    51a6:	02 c0       	rjmp	.+4      	; 0x51ac <_ZN6Output3offEv+0x4c>
    51a8:	66 0f       	add	r22, r22
    51aa:	77 1f       	adc	r23, r23
    51ac:	0a 94       	dec	r0
    51ae:	e2 f7       	brpl	.-8      	; 0x51a8 <_ZN6Output3offEv+0x48>
    51b0:	cb 01       	movw	r24, r22
    51b2:	80 95       	com	r24
    51b4:	84 23       	and	r24, r20
    51b6:	85 b9       	out	0x05, r24	; 5
			break;
    51b8:	08 95       	ret
		case 'C':
			PORTC &= ~(1<<Pin);
    51ba:	48 b1       	in	r20, 0x08	; 8
    51bc:	21 e0       	ldi	r18, 0x01	; 1
    51be:	30 e0       	ldi	r19, 0x00	; 0
    51c0:	b9 01       	movw	r22, r18
    51c2:	fc 01       	movw	r30, r24
    51c4:	01 80       	ldd	r0, Z+1	; 0x01
    51c6:	02 c0       	rjmp	.+4      	; 0x51cc <_ZN6Output3offEv+0x6c>
    51c8:	66 0f       	add	r22, r22
    51ca:	77 1f       	adc	r23, r23
    51cc:	0a 94       	dec	r0
    51ce:	e2 f7       	brpl	.-8      	; 0x51c8 <_ZN6Output3offEv+0x68>
    51d0:	cb 01       	movw	r24, r22
    51d2:	80 95       	com	r24
    51d4:	84 23       	and	r24, r20
    51d6:	88 b9       	out	0x08, r24	; 8
			break;
    51d8:	08 95       	ret
		case 'D':
			PORTD &= ~(1<<Pin);
    51da:	4b b1       	in	r20, 0x0b	; 11
    51dc:	21 e0       	ldi	r18, 0x01	; 1
    51de:	30 e0       	ldi	r19, 0x00	; 0
    51e0:	b9 01       	movw	r22, r18
    51e2:	fc 01       	movw	r30, r24
    51e4:	01 80       	ldd	r0, Z+1	; 0x01
    51e6:	02 c0       	rjmp	.+4      	; 0x51ec <_ZN6Output3offEv+0x8c>
    51e8:	66 0f       	add	r22, r22
    51ea:	77 1f       	adc	r23, r23
    51ec:	0a 94       	dec	r0
    51ee:	e2 f7       	brpl	.-8      	; 0x51e8 <_ZN6Output3offEv+0x88>
    51f0:	cb 01       	movw	r24, r22
    51f2:	80 95       	com	r24
    51f4:	84 23       	and	r24, r20
    51f6:	8b b9       	out	0x0b, r24	; 11
    51f8:	08 95       	ret

000051fa <_ZN6Output6toggleEv>:
			break;
	}
}

void Output::toggle(){
	switch (Port)
    51fa:	fc 01       	movw	r30, r24
    51fc:	20 81       	ld	r18, Z
    51fe:	22 34       	cpi	r18, 0x42	; 66
    5200:	c1 f0       	breq	.+48     	; 0x5232 <_ZN6Output6toggleEv+0x38>
    5202:	18 f4       	brcc	.+6      	; 0x520a <_ZN6Output6toggleEv+0x10>
    5204:	21 34       	cpi	r18, 0x41	; 65
    5206:	31 f0       	breq	.+12     	; 0x5214 <_ZN6Output6toggleEv+0x1a>
    5208:	08 95       	ret
    520a:	23 34       	cpi	r18, 0x43	; 67
    520c:	09 f1       	breq	.+66     	; 0x5250 <_ZN6Output6toggleEv+0x56>
    520e:	24 34       	cpi	r18, 0x44	; 68
    5210:	71 f1       	breq	.+92     	; 0x526e <_ZN6Output6toggleEv+0x74>
    5212:	08 95       	ret
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    5214:	22 b1       	in	r18, 0x02	; 2
    5216:	30 e0       	ldi	r19, 0x00	; 0
    5218:	fc 01       	movw	r30, r24
    521a:	01 80       	ldd	r0, Z+1	; 0x01
    521c:	02 c0       	rjmp	.+4      	; 0x5222 <_ZN6Output6toggleEv+0x28>
    521e:	35 95       	asr	r19
    5220:	27 95       	ror	r18
    5222:	0a 94       	dec	r0
    5224:	e2 f7       	brpl	.-8      	; 0x521e <_ZN6Output6toggleEv+0x24>
    5226:	20 ff       	sbrs	r18, 0
    5228:	02 c0       	rjmp	.+4      	; 0x522e <_ZN6Output6toggleEv+0x34>
			{
				off();
    522a:	9a cf       	rjmp	.-204    	; 0x5160 <_ZN6Output3offEv>
    522c:	08 95       	ret
			}
			else{
				on();
    522e:	0c cf       	rjmp	.-488    	; 0x5048 <_ZN6Output2onEv>
    5230:	08 95       	ret
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    5232:	25 b1       	in	r18, 0x05	; 5
    5234:	30 e0       	ldi	r19, 0x00	; 0
    5236:	fc 01       	movw	r30, r24
    5238:	01 80       	ldd	r0, Z+1	; 0x01
    523a:	02 c0       	rjmp	.+4      	; 0x5240 <_ZN6Output6toggleEv+0x46>
    523c:	35 95       	asr	r19
    523e:	27 95       	ror	r18
    5240:	0a 94       	dec	r0
    5242:	e2 f7       	brpl	.-8      	; 0x523c <_ZN6Output6toggleEv+0x42>
    5244:	20 ff       	sbrs	r18, 0
    5246:	02 c0       	rjmp	.+4      	; 0x524c <_ZN6Output6toggleEv+0x52>
			{
				off();
    5248:	8b cf       	rjmp	.-234    	; 0x5160 <_ZN6Output3offEv>
    524a:	08 95       	ret
			}
			else{
				on();
    524c:	fd ce       	rjmp	.-518    	; 0x5048 <_ZN6Output2onEv>
    524e:	08 95       	ret
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    5250:	28 b1       	in	r18, 0x08	; 8
    5252:	30 e0       	ldi	r19, 0x00	; 0
    5254:	fc 01       	movw	r30, r24
    5256:	01 80       	ldd	r0, Z+1	; 0x01
    5258:	02 c0       	rjmp	.+4      	; 0x525e <_ZN6Output6toggleEv+0x64>
    525a:	35 95       	asr	r19
    525c:	27 95       	ror	r18
    525e:	0a 94       	dec	r0
    5260:	e2 f7       	brpl	.-8      	; 0x525a <_ZN6Output6toggleEv+0x60>
    5262:	20 ff       	sbrs	r18, 0
    5264:	02 c0       	rjmp	.+4      	; 0x526a <_ZN6Output6toggleEv+0x70>
			{
				off();
    5266:	7c cf       	rjmp	.-264    	; 0x5160 <_ZN6Output3offEv>
    5268:	08 95       	ret
			}
			else{
				on();
    526a:	ee ce       	rjmp	.-548    	; 0x5048 <_ZN6Output2onEv>
    526c:	08 95       	ret
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    526e:	2b b1       	in	r18, 0x0b	; 11
    5270:	30 e0       	ldi	r19, 0x00	; 0
    5272:	fc 01       	movw	r30, r24
    5274:	01 80       	ldd	r0, Z+1	; 0x01
    5276:	02 c0       	rjmp	.+4      	; 0x527c <_ZN6Output6toggleEv+0x82>
    5278:	35 95       	asr	r19
    527a:	27 95       	ror	r18
    527c:	0a 94       	dec	r0
    527e:	e2 f7       	brpl	.-8      	; 0x5278 <_ZN6Output6toggleEv+0x7e>
    5280:	20 ff       	sbrs	r18, 0
    5282:	02 c0       	rjmp	.+4      	; 0x5288 <_ZN6Output6toggleEv+0x8e>
			{
				off();
    5284:	6d cf       	rjmp	.-294    	; 0x5160 <_ZN6Output3offEv>
    5286:	08 95       	ret
			}
			else{
				on();
    5288:	df ce       	rjmp	.-578    	; 0x5048 <_ZN6Output2onEv>
    528a:	08 95       	ret

0000528c <_ZN8PressureD1Ev>:
	Pressure0=1;
	LPS25H_initialize();
} //Pressure

// default destructor
Pressure::~Pressure()
    528c:	0d 96       	adiw	r24, 0x0d	; 13
    528e:	2e ca       	rjmp	.-2980   	; 0x46ec <_ZN3I2CD1Ev>
    5290:	08 95       	ret

00005292 <_ZN8Pressure14LPS25H_commandEhh>:
{
} //~Pressure

void Pressure::LPS25H_command(uint8_t add, uint8_t command){
    5292:	0f 93       	push	r16
    5294:	1f 93       	push	r17
    5296:	cf 93       	push	r28
    5298:	df 93       	push	r29
    529a:	06 2f       	mov	r16, r22
    529c:	14 2f       	mov	r17, r20
	i2c.twi_start();
    529e:	ec 01       	movw	r28, r24
    52a0:	2d 96       	adiw	r28, 0x0d	; 13
    52a2:	ce 01       	movw	r24, r28
    52a4:	24 da       	rcall	.-3000   	; 0x46ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    52a6:	6a eb       	ldi	r22, 0xBA	; 186
    52a8:	ce 01       	movw	r24, r28
    52aa:	29 da       	rcall	.-2990   	; 0x46fe <_ZN3I2C9twi_writeEh>
	i2c.twi_write(add);
    52ac:	60 2f       	mov	r22, r16
    52ae:	ce 01       	movw	r24, r28
    52b0:	26 da       	rcall	.-2996   	; 0x46fe <_ZN3I2C9twi_writeEh>
	i2c.twi_write(command);
    52b2:	61 2f       	mov	r22, r17
    52b4:	ce 01       	movw	r24, r28
    52b6:	23 da       	rcall	.-3002   	; 0x46fe <_ZN3I2C9twi_writeEh>
	i2c.twi_stop();
    52b8:	ce 01       	movw	r24, r28
    52ba:	1d da       	rcall	.-3014   	; 0x46f6 <_ZN3I2C8twi_stopEv>
}
    52bc:	df 91       	pop	r29
    52be:	cf 91       	pop	r28
    52c0:	1f 91       	pop	r17
    52c2:	0f 91       	pop	r16
    52c4:	08 95       	ret

000052c6 <_ZN8Pressure17LPS25H_initializeEv>:

void Pressure::LPS25H_initialize(){
    52c6:	cf 93       	push	r28
    52c8:	df 93       	push	r29
    52ca:	ec 01       	movw	r28, r24
	uint8_t temp=0;
	//internal averages Pressure and Temperature (both 8)
	temp &= ~((1<<AVGT1) | (1<<AVGT0) | (1<<AVGP1) | (1<<AVGP0)); 
	LPS25H_command(RES_CONF,temp);
    52cc:	40 e0       	ldi	r20, 0x00	; 0
    52ce:	60 e1       	ldi	r22, 0x10	; 16
    52d0:	e0 df       	rcall	.-64     	; 0x5292 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//Enable device and set a single shot as well as Lock while reading
	temp |= (1<<PD) | (1<<BDU) | (1<<ODR1);
	LPS25H_command(CTRL_REG1,temp);
    52d2:	44 ea       	ldi	r20, 0xA4	; 164
    52d4:	60 e2       	ldi	r22, 0x20	; 32
    52d6:	ce 01       	movw	r24, r28
    52d8:	dc df       	rcall	.-72     	; 0x5292 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//FIFO on, no watermark no reset, reboot memory content, FIFO MEAN Mode
	temp |= (1<<BOOT) | (1<<FIFO_EN) | (1<<FIFO_MEAN_DEC);
	LPS25H_command(CTRL_REG2,temp);
    52da:	40 ed       	ldi	r20, 0xD0	; 208
    52dc:	61 e2       	ldi	r22, 0x21	; 33
    52de:	ce 01       	movw	r24, r28
    52e0:	d8 df       	rcall	.-80     	; 0x5292 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//FIFO Controll register for MEAN Mode und 8 moving averages
	temp|=(1<<F_MODE2) | (1<<F_MODE1) | (1<<WTM_POINT0) | (1<<WTM_POINT1) | (1<<WTM_POINT2);
	LPS25H_command(FIFO_CTRL,temp);
    52e2:	47 ec       	ldi	r20, 0xC7	; 199
    52e4:	6e e2       	ldi	r22, 0x2E	; 46
    52e6:	ce 01       	movw	r24, r28
    52e8:	d4 df       	rcall	.-88     	; 0x5292 <_ZN8Pressure14LPS25H_commandEhh>
	//CTRL_REG4 not set
	//INTERRUPT_CFG not set
	//no threshold used
	//no Pressure offset used
	
}
    52ea:	df 91       	pop	r29
    52ec:	cf 91       	pop	r28
    52ee:	08 95       	ret

000052f0 <_ZN8PressureC1Ev>:


#include "Pressure.h"

// default constructor
Pressure::Pressure()
    52f0:	cf 93       	push	r28
    52f2:	df 93       	push	r29
    52f4:	ec 01       	movw	r28, r24
    52f6:	0d 96       	adiw	r24, 0x0d	; 13
    52f8:	f5 d9       	rcall	.-3094   	; 0x46e4 <_ZN3I2CC1Ev>
{
	Press = 0;
    52fa:	18 82       	st	Y, r1
    52fc:	19 82       	std	Y+1, r1	; 0x01
    52fe:	1a 82       	std	Y+2, r1	; 0x02
    5300:	1b 82       	std	Y+3, r1	; 0x03
	Tempera = 0;
    5302:	1c 82       	std	Y+4, r1	; 0x04
    5304:	1d 82       	std	Y+5, r1	; 0x05
    5306:	1e 82       	std	Y+6, r1	; 0x06
    5308:	1f 82       	std	Y+7, r1	; 0x07
	Tempoffset = -4;	//Aus Erfahrung
    530a:	8c ef       	ldi	r24, 0xFC	; 252
    530c:	88 87       	std	Y+8, r24	; 0x08
	Pressure0=1;
    530e:	40 e0       	ldi	r20, 0x00	; 0
    5310:	50 e0       	ldi	r21, 0x00	; 0
    5312:	60 e8       	ldi	r22, 0x80	; 128
    5314:	7f e3       	ldi	r23, 0x3F	; 63
    5316:	49 87       	std	Y+9, r20	; 0x09
    5318:	5a 87       	std	Y+10, r21	; 0x0a
    531a:	6b 87       	std	Y+11, r22	; 0x0b
    531c:	7c 87       	std	Y+12, r23	; 0x0c
	LPS25H_initialize();
    531e:	ce 01       	movw	r24, r28
    5320:	d2 df       	rcall	.-92     	; 0x52c6 <_ZN8Pressure17LPS25H_initializeEv>
} //Pressure
    5322:	df 91       	pop	r29
    5324:	cf 91       	pop	r28
    5326:	08 95       	ret

00005328 <_ZN8Pressure18READ_Pressure_onceEv>:
	//no threshold used
	//no Pressure offset used
	
}

void Pressure::READ_Pressure_once(){
    5328:	af 92       	push	r10
    532a:	bf 92       	push	r11
    532c:	cf 92       	push	r12
    532e:	df 92       	push	r13
    5330:	ef 92       	push	r14
    5332:	ff 92       	push	r15
    5334:	1f 93       	push	r17
    5336:	cf 93       	push	r28
    5338:	df 93       	push	r29
    533a:	00 d0       	rcall	.+0      	; 0x533c <_ZN8Pressure18READ_Pressure_onceEv+0x14>
    533c:	1f 92       	push	r1
    533e:	cd b7       	in	r28, 0x3d	; 61
    5340:	de b7       	in	r29, 0x3e	; 62
    5342:	5c 01       	movw	r10, r24
	uint8_t Wertedruck[3];
	cli();
    5344:	f8 94       	cli
	i2c.twi_start();
    5346:	7c 01       	movw	r14, r24
    5348:	8d e0       	ldi	r24, 0x0D	; 13
    534a:	e8 0e       	add	r14, r24
    534c:	f1 1c       	adc	r15, r1
    534e:	c7 01       	movw	r24, r14
    5350:	ce d9       	rcall	.-3172   	; 0x46ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    5352:	6a eb       	ldi	r22, 0xBA	; 186
    5354:	c7 01       	movw	r24, r14
    5356:	d3 d9       	rcall	.-3162   	; 0x46fe <_ZN3I2C9twi_writeEh>
	i2c.twi_write(PRESS_OUT_XL|(1<<autoincrement));
    5358:	68 ea       	ldi	r22, 0xA8	; 168
    535a:	c7 01       	movw	r24, r14
    535c:	d0 d9       	rcall	.-3168   	; 0x46fe <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    535e:	c7 01       	movw	r24, r14
    5360:	c6 d9       	rcall	.-3188   	; 0x46ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_READ);
    5362:	6b eb       	ldi	r22, 0xBB	; 187
    5364:	c7 01       	movw	r24, r14
    5366:	cb d9       	rcall	.-3178   	; 0x46fe <_ZN3I2C9twi_writeEh>
    5368:	fe 01       	movw	r30, r28
    536a:	31 96       	adiw	r30, 0x01	; 1
    536c:	6f 01       	movw	r12, r30
	for (uint8_t i=0;i<3;i++)
    536e:	10 e0       	ldi	r17, 0x00	; 0
	{
		if (i<2)
    5370:	12 30       	cpi	r17, 0x02	; 2
    5372:	30 f4       	brcc	.+12     	; 0x5380 <_ZN8Pressure18READ_Pressure_onceEv+0x58>
		{
			Wertedruck[i] = i2c.twi_read(1);
    5374:	61 e0       	ldi	r22, 0x01	; 1
    5376:	c7 01       	movw	r24, r14
    5378:	d2 d9       	rcall	.-3164   	; 0x471e <_ZN3I2C8twi_readEh>
    537a:	f6 01       	movw	r30, r12
    537c:	80 83       	st	Z, r24
    537e:	05 c0       	rjmp	.+10     	; 0x538a <_ZN8Pressure18READ_Pressure_onceEv+0x62>
		}
		else{
			Wertedruck[i] = i2c.twi_read(0);
    5380:	60 e0       	ldi	r22, 0x00	; 0
    5382:	c7 01       	movw	r24, r14
    5384:	cc d9       	rcall	.-3176   	; 0x471e <_ZN3I2C8twi_readEh>
    5386:	f6 01       	movw	r30, r12
    5388:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_Write);
	i2c.twi_write(PRESS_OUT_XL|(1<<autoincrement));
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_READ);
	for (uint8_t i=0;i<3;i++)
    538a:	1f 5f       	subi	r17, 0xFF	; 255
    538c:	ff ef       	ldi	r31, 0xFF	; 255
    538e:	cf 1a       	sub	r12, r31
    5390:	df 0a       	sbc	r13, r31
    5392:	13 30       	cpi	r17, 0x03	; 3
    5394:	69 f7       	brne	.-38     	; 0x5370 <_ZN8Pressure18READ_Pressure_onceEv+0x48>
		}
		else{
			Wertedruck[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    5396:	c7 01       	movw	r24, r14
    5398:	ae d9       	rcall	.-3236   	; 0x46f6 <_ZN3I2C8twi_stopEv>
	Press = ((double)Wertedruck[2]*65536);
    539a:	6b 81       	ldd	r22, Y+3	; 0x03
    539c:	70 e0       	ldi	r23, 0x00	; 0
    539e:	80 e0       	ldi	r24, 0x00	; 0
    53a0:	90 e0       	ldi	r25, 0x00	; 0
    53a2:	cf d3       	rcall	.+1950   	; 0x5b42 <__floatunsisf>
    53a4:	20 e0       	ldi	r18, 0x00	; 0
    53a6:	30 e0       	ldi	r19, 0x00	; 0
    53a8:	40 e8       	ldi	r20, 0x80	; 128
    53aa:	57 e4       	ldi	r21, 0x47	; 71
    53ac:	2a d5       	rcall	.+2644   	; 0x5e02 <__mulsf3>
    53ae:	6b 01       	movw	r12, r22
    53b0:	7c 01       	movw	r14, r24
	Press += ((double)Wertedruck[1]*256);
    53b2:	6a 81       	ldd	r22, Y+2	; 0x02
    53b4:	70 e0       	ldi	r23, 0x00	; 0
    53b6:	80 e0       	ldi	r24, 0x00	; 0
    53b8:	90 e0       	ldi	r25, 0x00	; 0
    53ba:	c3 d3       	rcall	.+1926   	; 0x5b42 <__floatunsisf>
    53bc:	20 e0       	ldi	r18, 0x00	; 0
    53be:	30 e0       	ldi	r19, 0x00	; 0
    53c0:	40 e8       	ldi	r20, 0x80	; 128
    53c2:	53 e4       	ldi	r21, 0x43	; 67
    53c4:	1e d5       	rcall	.+2620   	; 0x5e02 <__mulsf3>
    53c6:	9b 01       	movw	r18, r22
    53c8:	ac 01       	movw	r20, r24
    53ca:	c7 01       	movw	r24, r14
    53cc:	b6 01       	movw	r22, r12
    53ce:	53 d2       	rcall	.+1190   	; 0x5876 <__addsf3>
    53d0:	6b 01       	movw	r12, r22
    53d2:	7c 01       	movw	r14, r24
	Press += (double)Wertedruck[0];
    53d4:	69 81       	ldd	r22, Y+1	; 0x01
    53d6:	70 e0       	ldi	r23, 0x00	; 0
    53d8:	80 e0       	ldi	r24, 0x00	; 0
    53da:	90 e0       	ldi	r25, 0x00	; 0
    53dc:	b2 d3       	rcall	.+1892   	; 0x5b42 <__floatunsisf>
    53de:	9b 01       	movw	r18, r22
    53e0:	ac 01       	movw	r20, r24
    53e2:	c7 01       	movw	r24, r14
    53e4:	b6 01       	movw	r22, r12
    53e6:	47 d2       	rcall	.+1166   	; 0x5876 <__addsf3>
	//Press = (Wertedruck[0] + (Wertedruck[1]*256) + (Wertedruck[2]*65536));
	Press/=4096.0;
    53e8:	20 e0       	ldi	r18, 0x00	; 0
    53ea:	30 e0       	ldi	r19, 0x00	; 0
    53ec:	40 e8       	ldi	r20, 0x80	; 128
    53ee:	59 e3       	ldi	r21, 0x39	; 57
    53f0:	08 d5       	rcall	.+2576   	; 0x5e02 <__mulsf3>
    53f2:	f5 01       	movw	r30, r10
    53f4:	60 83       	st	Z, r22
    53f6:	71 83       	std	Z+1, r23	; 0x01
    53f8:	82 83       	std	Z+2, r24	; 0x02
    53fa:	93 83       	std	Z+3, r25	; 0x03
	sei();
    53fc:	78 94       	sei
}
    53fe:	0f 90       	pop	r0
    5400:	0f 90       	pop	r0
    5402:	0f 90       	pop	r0
    5404:	df 91       	pop	r29
    5406:	cf 91       	pop	r28
    5408:	1f 91       	pop	r17
    540a:	ff 90       	pop	r15
    540c:	ef 90       	pop	r14
    540e:	df 90       	pop	r13
    5410:	cf 90       	pop	r12
    5412:	bf 90       	pop	r11
    5414:	af 90       	pop	r10
    5416:	08 95       	ret

00005418 <_ZN8Pressure16READ_TemperatureEv>:

void Pressure::READ_Temperature(){
    5418:	cf 92       	push	r12
    541a:	df 92       	push	r13
    541c:	ef 92       	push	r14
    541e:	ff 92       	push	r15
    5420:	0f 93       	push	r16
    5422:	1f 93       	push	r17
    5424:	cf 93       	push	r28
    5426:	df 93       	push	r29
    5428:	00 d0       	rcall	.+0      	; 0x542a <_ZN8Pressure16READ_TemperatureEv+0x12>
    542a:	cd b7       	in	r28, 0x3d	; 61
    542c:	de b7       	in	r29, 0x3e	; 62
    542e:	8c 01       	movw	r16, r24
	cli();
    5430:	f8 94       	cli
	uint8_t Wert[2];
	i2c.twi_start();
    5432:	7c 01       	movw	r14, r24
    5434:	8d e0       	ldi	r24, 0x0D	; 13
    5436:	e8 0e       	add	r14, r24
    5438:	f1 1c       	adc	r15, r1
    543a:	c7 01       	movw	r24, r14
    543c:	58 d9       	rcall	.-3408   	; 0x46ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    543e:	6a eb       	ldi	r22, 0xBA	; 186
    5440:	c7 01       	movw	r24, r14
    5442:	5d d9       	rcall	.-3398   	; 0x46fe <_ZN3I2C9twi_writeEh>
	i2c.twi_write(TEMP_OUT_L|(1<<autoincrement));
    5444:	6b ea       	ldi	r22, 0xAB	; 171
    5446:	c7 01       	movw	r24, r14
    5448:	5a d9       	rcall	.-3404   	; 0x46fe <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    544a:	c7 01       	movw	r24, r14
    544c:	50 d9       	rcall	.-3424   	; 0x46ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_READ);
    544e:	6b eb       	ldi	r22, 0xBB	; 187
    5450:	c7 01       	movw	r24, r14
    5452:	55 d9       	rcall	.-3414   	; 0x46fe <_ZN3I2C9twi_writeEh>
    5454:	cc 24       	eor	r12, r12
    5456:	c3 94       	inc	r12
    5458:	d1 2c       	mov	r13, r1
    545a:	02 c0       	rjmp	.+4      	; 0x5460 <_ZN8Pressure16READ_TemperatureEv+0x48>
    545c:	d3 94       	inc	r13
    545e:	c3 94       	inc	r12
	for (uint8_t i=0;i<2;i++)
	{
		if (i<1)
    5460:	d1 10       	cpse	r13, r1
    5462:	05 c0       	rjmp	.+10     	; 0x546e <_ZN8Pressure16READ_TemperatureEv+0x56>
		{
			Wert[i] = i2c.twi_read(1);
    5464:	61 e0       	ldi	r22, 0x01	; 1
    5466:	c7 01       	movw	r24, r14
    5468:	5a d9       	rcall	.-3404   	; 0x471e <_ZN3I2C8twi_readEh>
    546a:	89 83       	std	Y+1, r24	; 0x01
    546c:	f7 cf       	rjmp	.-18     	; 0x545c <_ZN8Pressure16READ_TemperatureEv+0x44>
		}
		else{
			Wert[i] = i2c.twi_read(0);
    546e:	60 e0       	ldi	r22, 0x00	; 0
    5470:	c7 01       	movw	r24, r14
    5472:	55 d9       	rcall	.-3414   	; 0x471e <_ZN3I2C8twi_readEh>
    5474:	e1 e0       	ldi	r30, 0x01	; 1
    5476:	f0 e0       	ldi	r31, 0x00	; 0
    5478:	ec 0f       	add	r30, r28
    547a:	fd 1f       	adc	r31, r29
    547c:	ed 0d       	add	r30, r13
    547e:	f1 1d       	adc	r31, r1
    5480:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_Write);
	i2c.twi_write(TEMP_OUT_L|(1<<autoincrement));
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_READ);
	for (uint8_t i=0;i<2;i++)
    5482:	e1 e0       	ldi	r30, 0x01	; 1
    5484:	ec 15       	cp	r30, r12
    5486:	50 f7       	brcc	.-44     	; 0x545c <_ZN8Pressure16READ_TemperatureEv+0x44>
		}
		else{
			Wert[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    5488:	c7 01       	movw	r24, r14
    548a:	35 d9       	rcall	.-3478   	; 0x46f6 <_ZN3I2C8twi_stopEv>
	Tempera = ((int16_t)(Wert[0]+(Wert[1]<<8)))/480.0;
    548c:	89 81       	ldd	r24, Y+1	; 0x01
    548e:	6a 81       	ldd	r22, Y+2	; 0x02
    5490:	70 e0       	ldi	r23, 0x00	; 0
    5492:	76 2f       	mov	r23, r22
    5494:	66 27       	eor	r22, r22
    5496:	68 0f       	add	r22, r24
    5498:	71 1d       	adc	r23, r1
    549a:	88 27       	eor	r24, r24
    549c:	77 fd       	sbrc	r23, 7
    549e:	80 95       	com	r24
    54a0:	98 2f       	mov	r25, r24
    54a2:	51 d3       	rcall	.+1698   	; 0x5b46 <__floatsisf>
    54a4:	20 e0       	ldi	r18, 0x00	; 0
    54a6:	30 e0       	ldi	r19, 0x00	; 0
    54a8:	40 ef       	ldi	r20, 0xF0	; 240
    54aa:	53 e4       	ldi	r21, 0x43	; 67
    54ac:	b1 d2       	rcall	.+1378   	; 0x5a10 <__divsf3>
    54ae:	6b 01       	movw	r12, r22
    54b0:	7c 01       	movw	r14, r24
	Tempera+=42.5+Tempoffset;
    54b2:	f8 01       	movw	r30, r16
    54b4:	60 85       	ldd	r22, Z+8	; 0x08
    54b6:	77 27       	eor	r23, r23
    54b8:	67 fd       	sbrc	r22, 7
    54ba:	70 95       	com	r23
    54bc:	87 2f       	mov	r24, r23
    54be:	97 2f       	mov	r25, r23
    54c0:	42 d3       	rcall	.+1668   	; 0x5b46 <__floatsisf>
    54c2:	20 e0       	ldi	r18, 0x00	; 0
    54c4:	30 e0       	ldi	r19, 0x00	; 0
    54c6:	4a e2       	ldi	r20, 0x2A	; 42
    54c8:	52 e4       	ldi	r21, 0x42	; 66
    54ca:	d5 d1       	rcall	.+938    	; 0x5876 <__addsf3>
    54cc:	9b 01       	movw	r18, r22
    54ce:	ac 01       	movw	r20, r24
    54d0:	c7 01       	movw	r24, r14
    54d2:	b6 01       	movw	r22, r12
    54d4:	d0 d1       	rcall	.+928    	; 0x5876 <__addsf3>
    54d6:	f8 01       	movw	r30, r16
    54d8:	64 83       	std	Z+4, r22	; 0x04
    54da:	75 83       	std	Z+5, r23	; 0x05
    54dc:	86 83       	std	Z+6, r24	; 0x06
    54de:	97 83       	std	Z+7, r25	; 0x07
	sei();
    54e0:	78 94       	sei
}
    54e2:	0f 90       	pop	r0
    54e4:	0f 90       	pop	r0
    54e6:	df 91       	pop	r29
    54e8:	cf 91       	pop	r28
    54ea:	1f 91       	pop	r17
    54ec:	0f 91       	pop	r16
    54ee:	ff 90       	pop	r15
    54f0:	ef 90       	pop	r14
    54f2:	df 90       	pop	r13
    54f4:	cf 90       	pop	r12
    54f6:	08 95       	ret

000054f8 <_ZN8Pressure8altitudeEd>:

double Pressure::altitude(double Pressurevalue){
    54f8:	8f 92       	push	r8
    54fa:	9f 92       	push	r9
    54fc:	af 92       	push	r10
    54fe:	bf 92       	push	r11
    5500:	cf 92       	push	r12
    5502:	df 92       	push	r13
    5504:	ef 92       	push	r14
    5506:	ff 92       	push	r15
	return (Pressure0*100*log(Pressure0/Pressurevalue)/(1.2041*9.81));
    5508:	fc 01       	movw	r30, r24
    550a:	c1 84       	ldd	r12, Z+9	; 0x09
    550c:	d2 84       	ldd	r13, Z+10	; 0x0a
    550e:	e3 84       	ldd	r14, Z+11	; 0x0b
    5510:	f4 84       	ldd	r15, Z+12	; 0x0c
    5512:	9a 01       	movw	r18, r20
    5514:	ab 01       	movw	r20, r22
    5516:	c7 01       	movw	r24, r14
    5518:	b6 01       	movw	r22, r12
    551a:	7a d2       	rcall	.+1268   	; 0x5a10 <__divsf3>
    551c:	32 d4       	rcall	.+2148   	; 0x5d82 <log>
    551e:	4b 01       	movw	r8, r22
    5520:	5c 01       	movw	r10, r24
    5522:	20 e0       	ldi	r18, 0x00	; 0
    5524:	30 e0       	ldi	r19, 0x00	; 0
    5526:	48 ec       	ldi	r20, 0xC8	; 200
    5528:	52 e4       	ldi	r21, 0x42	; 66
    552a:	c7 01       	movw	r24, r14
    552c:	b6 01       	movw	r22, r12
    552e:	69 d4       	rcall	.+2258   	; 0x5e02 <__mulsf3>
    5530:	a5 01       	movw	r20, r10
    5532:	94 01       	movw	r18, r8
    5534:	66 d4       	rcall	.+2252   	; 0x5e02 <__mulsf3>
    5536:	2c ed       	ldi	r18, 0xDC	; 220
    5538:	3e ef       	ldi	r19, 0xFE	; 254
    553a:	4c e3       	ldi	r20, 0x3C	; 60
    553c:	51 e4       	ldi	r21, 0x41	; 65
    553e:	68 d2       	rcall	.+1232   	; 0x5a10 <__divsf3>
}
    5540:	ff 90       	pop	r15
    5542:	ef 90       	pop	r14
    5544:	df 90       	pop	r13
    5546:	cf 90       	pop	r12
    5548:	bf 90       	pop	r11
    554a:	af 90       	pop	r10
    554c:	9f 90       	pop	r9
    554e:	8f 90       	pop	r8
    5550:	08 95       	ret

00005552 <_ZN8Pressure13set_Pressure0Ed>:
void Pressure::set_Pressure0(double Pressurevalue){
	Pressure0=Pressurevalue;
    5552:	fc 01       	movw	r30, r24
    5554:	41 87       	std	Z+9, r20	; 0x09
    5556:	52 87       	std	Z+10, r21	; 0x0a
    5558:	63 87       	std	Z+11, r22	; 0x0b
    555a:	74 87       	std	Z+12, r23	; 0x0c
    555c:	08 95       	ret

0000555e <_ZN3RTCD1Ev>:
	Tag=7;
	Monat=9;
	Jahr=15;
	ausgabedatumneu();
	ausgabezeitneu();
}
    555e:	08 95       	ret

00005560 <_ZN3RTC6WeckerEv>:
    5560:	fc 01       	movw	r30, r24
    5562:	80 8d       	ldd	r24, Z+24	; 0x18
    5564:	83 ff       	sbrs	r24, 3
    5566:	0c c0       	rjmp	.+24     	; 0x5580 <_ZN3RTC6WeckerEv+0x20>
    5568:	84 fd       	sbrc	r24, 4
    556a:	0a c0       	rjmp	.+20     	; 0x5580 <_ZN3RTC6WeckerEv+0x20>
    556c:	22 8d       	ldd	r18, Z+26	; 0x1a
    556e:	90 89       	ldd	r25, Z+16	; 0x10
    5570:	29 13       	cpse	r18, r25
    5572:	06 c0       	rjmp	.+12     	; 0x5580 <_ZN3RTC6WeckerEv+0x20>
    5574:	21 8d       	ldd	r18, Z+25	; 0x19
    5576:	91 89       	ldd	r25, Z+17	; 0x11
    5578:	29 13       	cpse	r18, r25
    557a:	02 c0       	rjmp	.+4      	; 0x5580 <_ZN3RTC6WeckerEv+0x20>
    557c:	80 61       	ori	r24, 0x10	; 16
    557e:	80 8f       	std	Z+24, r24	; 0x18
    5580:	08 95       	ret

00005582 <_ZN3RTC14ausgabezeitneuEv>:
    5582:	fc 01       	movw	r30, r24
    5584:	90 89       	ldd	r25, Z+16	; 0x10
    5586:	8d ec       	ldi	r24, 0xCD	; 205
    5588:	98 9f       	mul	r25, r24
    558a:	21 2d       	mov	r18, r1
    558c:	11 24       	eor	r1, r1
    558e:	26 95       	lsr	r18
    5590:	26 95       	lsr	r18
    5592:	26 95       	lsr	r18
    5594:	30 e3       	ldi	r19, 0x30	; 48
    5596:	32 0f       	add	r19, r18
    5598:	30 83       	st	Z, r19
    559a:	22 0f       	add	r18, r18
    559c:	32 2f       	mov	r19, r18
    559e:	33 0f       	add	r19, r19
    55a0:	33 0f       	add	r19, r19
    55a2:	23 0f       	add	r18, r19
    55a4:	92 1b       	sub	r25, r18
    55a6:	90 5d       	subi	r25, 0xD0	; 208
    55a8:	91 83       	std	Z+1, r25	; 0x01
    55aa:	91 89       	ldd	r25, Z+17	; 0x11
    55ac:	98 9f       	mul	r25, r24
    55ae:	21 2d       	mov	r18, r1
    55b0:	11 24       	eor	r1, r1
    55b2:	26 95       	lsr	r18
    55b4:	26 95       	lsr	r18
    55b6:	26 95       	lsr	r18
    55b8:	30 e3       	ldi	r19, 0x30	; 48
    55ba:	32 0f       	add	r19, r18
    55bc:	33 83       	std	Z+3, r19	; 0x03
    55be:	22 0f       	add	r18, r18
    55c0:	32 2f       	mov	r19, r18
    55c2:	33 0f       	add	r19, r19
    55c4:	33 0f       	add	r19, r19
    55c6:	23 0f       	add	r18, r19
    55c8:	92 1b       	sub	r25, r18
    55ca:	90 5d       	subi	r25, 0xD0	; 208
    55cc:	94 83       	std	Z+4, r25	; 0x04
    55ce:	92 89       	ldd	r25, Z+18	; 0x12
    55d0:	98 9f       	mul	r25, r24
    55d2:	81 2d       	mov	r24, r1
    55d4:	11 24       	eor	r1, r1
    55d6:	86 95       	lsr	r24
    55d8:	86 95       	lsr	r24
    55da:	86 95       	lsr	r24
    55dc:	20 e3       	ldi	r18, 0x30	; 48
    55de:	28 0f       	add	r18, r24
    55e0:	26 83       	std	Z+6, r18	; 0x06
    55e2:	88 0f       	add	r24, r24
    55e4:	28 2f       	mov	r18, r24
    55e6:	22 0f       	add	r18, r18
    55e8:	22 0f       	add	r18, r18
    55ea:	82 0f       	add	r24, r18
    55ec:	98 1b       	sub	r25, r24
    55ee:	90 5d       	subi	r25, 0xD0	; 208
    55f0:	97 83       	std	Z+7, r25	; 0x07
    55f2:	08 95       	ret

000055f4 <_ZN3RTC15ausgabedatumneuEv>:
    55f4:	fc 01       	movw	r30, r24
    55f6:	94 89       	ldd	r25, Z+20	; 0x14
    55f8:	8d ec       	ldi	r24, 0xCD	; 205
    55fa:	98 9f       	mul	r25, r24
    55fc:	21 2d       	mov	r18, r1
    55fe:	11 24       	eor	r1, r1
    5600:	26 95       	lsr	r18
    5602:	26 95       	lsr	r18
    5604:	26 95       	lsr	r18
    5606:	30 e3       	ldi	r19, 0x30	; 48
    5608:	32 0f       	add	r19, r18
    560a:	30 87       	std	Z+8, r19	; 0x08
    560c:	22 0f       	add	r18, r18
    560e:	32 2f       	mov	r19, r18
    5610:	33 0f       	add	r19, r19
    5612:	33 0f       	add	r19, r19
    5614:	23 0f       	add	r18, r19
    5616:	92 1b       	sub	r25, r18
    5618:	90 5d       	subi	r25, 0xD0	; 208
    561a:	91 87       	std	Z+9, r25	; 0x09
    561c:	96 89       	ldd	r25, Z+22	; 0x16
    561e:	98 9f       	mul	r25, r24
    5620:	21 2d       	mov	r18, r1
    5622:	11 24       	eor	r1, r1
    5624:	26 95       	lsr	r18
    5626:	26 95       	lsr	r18
    5628:	26 95       	lsr	r18
    562a:	30 e3       	ldi	r19, 0x30	; 48
    562c:	32 0f       	add	r19, r18
    562e:	33 87       	std	Z+11, r19	; 0x0b
    5630:	22 0f       	add	r18, r18
    5632:	32 2f       	mov	r19, r18
    5634:	33 0f       	add	r19, r19
    5636:	33 0f       	add	r19, r19
    5638:	23 0f       	add	r18, r19
    563a:	92 1b       	sub	r25, r18
    563c:	90 5d       	subi	r25, 0xD0	; 208
    563e:	94 87       	std	Z+12, r25	; 0x0c
    5640:	97 89       	ldd	r25, Z+23	; 0x17
    5642:	98 9f       	mul	r25, r24
    5644:	81 2d       	mov	r24, r1
    5646:	11 24       	eor	r1, r1
    5648:	86 95       	lsr	r24
    564a:	86 95       	lsr	r24
    564c:	86 95       	lsr	r24
    564e:	20 e3       	ldi	r18, 0x30	; 48
    5650:	28 0f       	add	r18, r24
    5652:	26 87       	std	Z+14, r18	; 0x0e
    5654:	88 0f       	add	r24, r24
    5656:	28 2f       	mov	r18, r24
    5658:	22 0f       	add	r18, r18
    565a:	22 0f       	add	r18, r18
    565c:	82 0f       	add	r24, r18
    565e:	98 1b       	sub	r25, r24
    5660:	90 5d       	subi	r25, 0xD0	; 208
    5662:	97 87       	std	Z+15, r25	; 0x0f
    5664:	08 95       	ret

00005666 <_ZN3RTCC1Ev>:
    5666:	cf 93       	push	r28
    5668:	df 93       	push	r29
    566a:	ec 01       	movw	r28, r24
    566c:	1a 8a       	std	Y+18, r1	; 0x12
    566e:	1b 8a       	std	Y+19, r1	; 0x13
    5670:	19 8a       	std	Y+17, r1	; 0x11
    5672:	18 8a       	std	Y+16, r1	; 0x10
    5674:	1c 8a       	std	Y+20, r1	; 0x14
    5676:	1e 8a       	std	Y+22, r1	; 0x16
    5678:	1f 8a       	std	Y+23, r1	; 0x17
    567a:	1d 8a       	std	Y+21, r1	; 0x15
    567c:	88 e2       	ldi	r24, 0x28	; 40
    567e:	89 8f       	std	Y+25, r24	; 0x19
    5680:	8a e0       	ldi	r24, 0x0A	; 10
    5682:	8a 8f       	std	Y+26, r24	; 0x1a
    5684:	1c 8e       	std	Y+28, r1	; 0x1c
    5686:	1b 8e       	std	Y+27, r1	; 0x1b
    5688:	1e 8e       	std	Y+30, r1	; 0x1e
    568a:	1d 8e       	std	Y+29, r1	; 0x1d
    568c:	de 01       	movw	r26, r28
    568e:	fe 01       	movw	r30, r28
    5690:	38 96       	adiw	r30, 0x08	; 8
    5692:	80 e0       	ldi	r24, 0x00	; 0
    5694:	1d 92       	st	X+, r1
    5696:	11 92       	st	Z+, r1
    5698:	8f 5f       	subi	r24, 0xFF	; 255
    569a:	88 30       	cpi	r24, 0x08	; 8
    569c:	d9 f7       	brne	.-10     	; 0x5694 <_ZN3RTCC1Ev+0x2e>
    569e:	8a e3       	ldi	r24, 0x3A	; 58
    56a0:	8a 83       	std	Y+2, r24	; 0x02
    56a2:	8d 83       	std	Y+5, r24	; 0x05
    56a4:	8e e2       	ldi	r24, 0x2E	; 46
    56a6:	8a 87       	std	Y+10, r24	; 0x0a
    56a8:	8d 87       	std	Y+13, r24	; 0x0d
    56aa:	ce 01       	movw	r24, r28
    56ac:	6a df       	rcall	.-300    	; 0x5582 <_ZN3RTC14ausgabezeitneuEv>
    56ae:	ce 01       	movw	r24, r28
    56b0:	a1 df       	rcall	.-190    	; 0x55f4 <_ZN3RTC15ausgabedatumneuEv>
    56b2:	df 91       	pop	r29
    56b4:	cf 91       	pop	r28
    56b6:	08 95       	ret

000056b8 <_ZN3RTC8kalenderEv>:
    56b8:	fc 01       	movw	r30, r24
    56ba:	26 89       	ldd	r18, Z+22	; 0x16
    56bc:	32 2f       	mov	r19, r18
    56be:	3d 7f       	andi	r19, 0xFD	; 253
    56c0:	34 30       	cpi	r19, 0x04	; 4
    56c2:	11 f0       	breq	.+4      	; 0x56c8 <_ZN3RTC8kalenderEv+0x10>
    56c4:	39 30       	cpi	r19, 0x09	; 9
    56c6:	91 f4       	brne	.+36     	; 0x56ec <_ZN3RTC8kalenderEv+0x34>
    56c8:	fc 01       	movw	r30, r24
    56ca:	34 89       	ldd	r19, Z+20	; 0x14
    56cc:	3f 31       	cpi	r19, 0x1F	; 31
    56ce:	b0 f1       	brcs	.+108    	; 0x573c <_ZN3RTC8kalenderEv+0x84>
    56d0:	31 e0       	ldi	r19, 0x01	; 1
    56d2:	34 8b       	std	Z+20, r19	; 0x14
    56d4:	2f 5f       	subi	r18, 0xFF	; 255
    56d6:	2d 30       	cpi	r18, 0x0D	; 13
    56d8:	10 f4       	brcc	.+4      	; 0x56de <_ZN3RTC8kalenderEv+0x26>
    56da:	26 8b       	std	Z+22, r18	; 0x16
    56dc:	2f c0       	rjmp	.+94     	; 0x573c <_ZN3RTC8kalenderEv+0x84>
    56de:	21 e0       	ldi	r18, 0x01	; 1
    56e0:	fc 01       	movw	r30, r24
    56e2:	26 8b       	std	Z+22, r18	; 0x16
    56e4:	27 89       	ldd	r18, Z+23	; 0x17
    56e6:	2f 5f       	subi	r18, 0xFF	; 255
    56e8:	27 8b       	std	Z+23, r18	; 0x17
    56ea:	28 c0       	rjmp	.+80     	; 0x573c <_ZN3RTC8kalenderEv+0x84>
    56ec:	22 30       	cpi	r18, 0x02	; 2
    56ee:	a9 f4       	brne	.+42     	; 0x571a <_ZN3RTC8kalenderEv+0x62>
    56f0:	fc 01       	movw	r30, r24
    56f2:	27 89       	ldd	r18, Z+23	; 0x17
    56f4:	23 70       	andi	r18, 0x03	; 3
    56f6:	41 f4       	brne	.+16     	; 0x5708 <_ZN3RTC8kalenderEv+0x50>
    56f8:	24 89       	ldd	r18, Z+20	; 0x14
    56fa:	2e 31       	cpi	r18, 0x1E	; 30
    56fc:	f8 f0       	brcs	.+62     	; 0x573c <_ZN3RTC8kalenderEv+0x84>
    56fe:	21 e0       	ldi	r18, 0x01	; 1
    5700:	24 8b       	std	Z+20, r18	; 0x14
    5702:	23 e0       	ldi	r18, 0x03	; 3
    5704:	26 8b       	std	Z+22, r18	; 0x16
    5706:	1a c0       	rjmp	.+52     	; 0x573c <_ZN3RTC8kalenderEv+0x84>
    5708:	fc 01       	movw	r30, r24
    570a:	24 89       	ldd	r18, Z+20	; 0x14
    570c:	2d 31       	cpi	r18, 0x1D	; 29
    570e:	b0 f0       	brcs	.+44     	; 0x573c <_ZN3RTC8kalenderEv+0x84>
    5710:	21 e0       	ldi	r18, 0x01	; 1
    5712:	24 8b       	std	Z+20, r18	; 0x14
    5714:	23 e0       	ldi	r18, 0x03	; 3
    5716:	26 8b       	std	Z+22, r18	; 0x16
    5718:	11 c0       	rjmp	.+34     	; 0x573c <_ZN3RTC8kalenderEv+0x84>
    571a:	fc 01       	movw	r30, r24
    571c:	34 89       	ldd	r19, Z+20	; 0x14
    571e:	30 32       	cpi	r19, 0x20	; 32
    5720:	68 f0       	brcs	.+26     	; 0x573c <_ZN3RTC8kalenderEv+0x84>
    5722:	31 e0       	ldi	r19, 0x01	; 1
    5724:	34 8b       	std	Z+20, r19	; 0x14
    5726:	2f 5f       	subi	r18, 0xFF	; 255
    5728:	2d 30       	cpi	r18, 0x0D	; 13
    572a:	10 f4       	brcc	.+4      	; 0x5730 <_ZN3RTC8kalenderEv+0x78>
    572c:	26 8b       	std	Z+22, r18	; 0x16
    572e:	06 c0       	rjmp	.+12     	; 0x573c <_ZN3RTC8kalenderEv+0x84>
    5730:	21 e0       	ldi	r18, 0x01	; 1
    5732:	fc 01       	movw	r30, r24
    5734:	26 8b       	std	Z+22, r18	; 0x16
    5736:	27 89       	ldd	r18, Z+23	; 0x17
    5738:	2f 5f       	subi	r18, 0xFF	; 255
    573a:	27 8b       	std	Z+23, r18	; 0x17
    573c:	5b cf       	rjmp	.-330    	; 0x55f4 <_ZN3RTC15ausgabedatumneuEv>
    573e:	08 95       	ret

00005740 <_ZN3RTC4zeitEv>:
    5740:	cf 93       	push	r28
    5742:	df 93       	push	r29
    5744:	ec 01       	movw	r28, r24
    5746:	8a 89       	ldd	r24, Y+18	; 0x12
    5748:	8c 53       	subi	r24, 0x3C	; 60
    574a:	8d 38       	cpi	r24, 0x8D	; 141
    574c:	c0 f4       	brcc	.+48     	; 0x577e <_ZN3RTC4zeitEv+0x3e>
    574e:	1a 8a       	std	Y+18, r1	; 0x12
    5750:	89 89       	ldd	r24, Y+17	; 0x11
    5752:	8f 5f       	subi	r24, 0xFF	; 255
    5754:	89 8b       	std	Y+17, r24	; 0x11
    5756:	98 8d       	ldd	r25, Y+24	; 0x18
    5758:	94 60       	ori	r25, 0x04	; 4
    575a:	98 8f       	std	Y+24, r25	; 0x18
    575c:	8c 33       	cpi	r24, 0x3C	; 60
    575e:	68 f0       	brcs	.+26     	; 0x577a <_ZN3RTC4zeitEv+0x3a>
    5760:	19 8a       	std	Y+17, r1	; 0x11
    5762:	88 89       	ldd	r24, Y+16	; 0x10
    5764:	8f 5f       	subi	r24, 0xFF	; 255
    5766:	88 31       	cpi	r24, 0x18	; 24
    5768:	10 f4       	brcc	.+4      	; 0x576e <_ZN3RTC4zeitEv+0x2e>
    576a:	88 8b       	std	Y+16, r24	; 0x10
    576c:	06 c0       	rjmp	.+12     	; 0x577a <_ZN3RTC4zeitEv+0x3a>
    576e:	18 8a       	std	Y+16, r1	; 0x10
    5770:	8c 89       	ldd	r24, Y+20	; 0x14
    5772:	8f 5f       	subi	r24, 0xFF	; 255
    5774:	8c 8b       	std	Y+20, r24	; 0x14
    5776:	ce 01       	movw	r24, r28
    5778:	9f df       	rcall	.-194    	; 0x56b8 <_ZN3RTC8kalenderEv>
    577a:	ce 01       	movw	r24, r28
    577c:	f1 de       	rcall	.-542    	; 0x5560 <_ZN3RTC6WeckerEv>
    577e:	ce 01       	movw	r24, r28
    5780:	00 df       	rcall	.-512    	; 0x5582 <_ZN3RTC14ausgabezeitneuEv>
    5782:	28 8d       	ldd	r18, Y+24	; 0x18
    5784:	25 ff       	sbrs	r18, 5
    5786:	0a c0       	rjmp	.+20     	; 0x579c <_ZN3RTC4zeitEv+0x5c>
    5788:	8b 8d       	ldd	r24, Y+27	; 0x1b
    578a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    578c:	01 97       	sbiw	r24, 0x01	; 1
    578e:	9c 8f       	std	Y+28, r25	; 0x1c
    5790:	8b 8f       	std	Y+27, r24	; 0x1b
    5792:	89 2b       	or	r24, r25
    5794:	19 f4       	brne	.+6      	; 0x579c <_ZN3RTC4zeitEv+0x5c>
    5796:	2f 7d       	andi	r18, 0xDF	; 223
    5798:	21 60       	ori	r18, 0x01	; 1
    579a:	28 8f       	std	Y+24, r18	; 0x18
    579c:	88 8d       	ldd	r24, Y+24	; 0x18
    579e:	86 ff       	sbrs	r24, 6
    57a0:	05 c0       	rjmp	.+10     	; 0x57ac <_ZN3RTC4zeitEv+0x6c>
    57a2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    57a4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    57a6:	01 96       	adiw	r24, 0x01	; 1
    57a8:	9e 8f       	std	Y+30, r25	; 0x1e
    57aa:	8d 8f       	std	Y+29, r24	; 0x1d
    57ac:	80 e0       	ldi	r24, 0x00	; 0
    57ae:	df 91       	pop	r29
    57b0:	cf 91       	pop	r28
    57b2:	08 95       	ret

000057b4 <_ZN3RTC8RTCstartEv>:

void RTC::RTCstart(){
    57b4:	fc 01       	movw	r30, r24
	//Einstellungen des Ausgabebuffers
	msg_uhr[0]='0';
    57b6:	80 e3       	ldi	r24, 0x30	; 48
    57b8:	80 83       	st	Z, r24
	msg_uhr[1]='0';
    57ba:	81 83       	std	Z+1, r24	; 0x01
	msg_uhr[2]=':';
    57bc:	9a e3       	ldi	r25, 0x3A	; 58
    57be:	92 83       	std	Z+2, r25	; 0x02
	msg_uhr[3]='0';
    57c0:	83 83       	std	Z+3, r24	; 0x03
	msg_uhr[4]='0';
    57c2:	84 83       	std	Z+4, r24	; 0x04
	msg_uhr[5]=':';
    57c4:	95 83       	std	Z+5, r25	; 0x05
	msg_uhr[6]='0';
    57c6:	86 83       	std	Z+6, r24	; 0x06
	msg_uhr[7]='0';
    57c8:	87 83       	std	Z+7, r24	; 0x07
	//Timer2 als 1ms Timer fuer die RTC
	//asynchron mit 32.768 kHz (noch synchrom)
	TCNT2 = TIMER2RTCTIME;
    57ca:	10 92 b2 00 	sts	0x00B2, r1
	ASSR |= (1<<AS2);
    57ce:	e6 eb       	ldi	r30, 0xB6	; 182
    57d0:	f0 e0       	ldi	r31, 0x00	; 0
    57d2:	80 81       	ld	r24, Z
    57d4:	80 62       	ori	r24, 0x20	; 32
    57d6:	80 83       	st	Z, r24
	TIMSK2 = (1<<TOIE2);
    57d8:	81 e0       	ldi	r24, 0x01	; 1
    57da:	80 93 70 00 	sts	0x0070, r24
	TCCR2B = (1<<CS22) | (1<<CS20);		//Vorteiler 256
    57de:	85 e0       	ldi	r24, 0x05	; 5
    57e0:	80 93 b1 00 	sts	0x00B1, r24
    57e4:	08 95       	ret

000057e6 <_ZN3RTC7RTCstopEv>:
}

void RTC::RTCstop(){
	TCCR2B &= ~((1<<CS22) | (1<<CS21));
    57e6:	e1 eb       	ldi	r30, 0xB1	; 177
    57e8:	f0 e0       	ldi	r31, 0x00	; 0
    57ea:	80 81       	ld	r24, Z
    57ec:	89 7f       	andi	r24, 0xF9	; 249
    57ee:	80 83       	st	Z, r24
    57f0:	08 95       	ret

000057f2 <_ZN5SOUNDD1Ev>:
	setfrequenci(1000);//1KHz
	off();
} //SOUND

// default destructor
SOUND::~SOUND()
    57f2:	08 95       	ret

000057f4 <_ZN5SOUND2onEv>:
	TCNT0 = 0;
	on();
}

void SOUND::on(){
	if ((interupts&(1<<Soundactiv)))
    57f4:	fc 01       	movw	r30, r24
    57f6:	20 81       	ld	r18, Z
    57f8:	20 ff       	sbrs	r18, 0
    57fa:	04 c0       	rjmp	.+8      	; 0x5804 <_ZN5SOUND2onEv+0x10>
	{
		TCCR0B |= prescaler;
    57fc:	25 b5       	in	r18, 0x25	; 37
    57fe:	81 81       	ldd	r24, Z+1	; 0x01
    5800:	82 2b       	or	r24, r18
    5802:	85 bd       	out	0x25, r24	; 37
    5804:	08 95       	ret

00005806 <_ZN5SOUND3offEv>:
	}
}

void SOUND::off(){
	TCCR0B &= ~((1<<CS00)|(1<<CS01)|(1<<CS02));
    5806:	85 b5       	in	r24, 0x25	; 37
    5808:	88 7f       	andi	r24, 0xF8	; 248
    580a:	85 bd       	out	0x25, r24	; 37
    580c:	08 95       	ret

0000580e <_ZN5SOUND12setfrequenciEj>:
{
} //~SOUND


//WERT = f_CPU/(f*1024)
void SOUND::setfrequenci(uint16_t frequenz){
    580e:	0f 93       	push	r16
    5810:	1f 93       	push	r17
    5812:	cf 93       	push	r28
    5814:	df 93       	push	r29
    5816:	ec 01       	movw	r28, r24
    5818:	8b 01       	movw	r16, r22
	off();
    581a:	f5 df       	rcall	.-22     	; 0x5806 <_ZN5SOUND3offEv>
	float WERT = F_CPU/256.0;
	WERT /= (frequenz);
    581c:	b8 01       	movw	r22, r16
    581e:	80 e0       	ldi	r24, 0x00	; 0
    5820:	90 e0       	ldi	r25, 0x00	; 0
    5822:	8f d1       	rcall	.+798    	; 0x5b42 <__floatunsisf>
    5824:	9b 01       	movw	r18, r22
    5826:	ac 01       	movw	r20, r24
    5828:	60 e0       	ldi	r22, 0x00	; 0
    582a:	74 e2       	ldi	r23, 0x24	; 36
    582c:	84 ef       	ldi	r24, 0xF4	; 244
    582e:	96 e4       	ldi	r25, 0x46	; 70
    5830:	ef d0       	rcall	.+478    	; 0x5a10 <__divsf3>
	OCR0A = (uint8_t)WERT;
    5832:	5b d1       	rcall	.+694    	; 0x5aea <__fixunssfsi>
    5834:	67 bd       	out	0x27, r22	; 39
	TCNT0 = 0;
    5836:	16 bc       	out	0x26, r1	; 38
	on();
    5838:	ce 01       	movw	r24, r28
    583a:	dc df       	rcall	.-72     	; 0x57f4 <_ZN5SOUND2onEv>
}
    583c:	df 91       	pop	r29
    583e:	cf 91       	pop	r28
    5840:	1f 91       	pop	r17
    5842:	0f 91       	pop	r16
    5844:	08 95       	ret

00005846 <_ZN5SOUNDC1Ev>:


#include "SOUND.h"

// default constructor
SOUND::SOUND()
    5846:	cf 93       	push	r28
    5848:	df 93       	push	r29
    584a:	ec 01       	movw	r28, r24
{
	//interuptregister initialisieren
	interupts = 0;
    584c:	18 82       	st	Y, r1
	PORTB &= ~(1<<PORTB3); //Pullups ausschalten
    584e:	2b 98       	cbi	0x05, 3	; 5
	DDRB |= (1<<PORTB3); //Ausgang schalten
    5850:	23 9a       	sbi	0x04, 3	; 4
	//Not inverting PWM, Phase correct
	TCCR0A |= (1<<COM0A0) | (1<<WGM00);
    5852:	84 b5       	in	r24, 0x24	; 36
    5854:	81 64       	ori	r24, 0x41	; 65
    5856:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<WGM02);
    5858:	85 b5       	in	r24, 0x25	; 37
    585a:	88 60       	ori	r24, 0x08	; 8
    585c:	85 bd       	out	0x25, r24	; 37
	fuer	8		1MHz		3.90625KHz
			64		125KHz		488.28Hz
			256		31.25KHz	122.07Hz
			1024	7.8125KHz	30.52Hz
*/
	prescaler = (1<<CS02); //256
    585e:	84 e0       	ldi	r24, 0x04	; 4
    5860:	89 83       	std	Y+1, r24	; 0x01
	setfrequenci(1000);//1KHz
    5862:	68 ee       	ldi	r22, 0xE8	; 232
    5864:	73 e0       	ldi	r23, 0x03	; 3
    5866:	ce 01       	movw	r24, r28
    5868:	d2 df       	rcall	.-92     	; 0x580e <_ZN5SOUND12setfrequenciEj>
	off();
    586a:	ce 01       	movw	r24, r28
    586c:	cc df       	rcall	.-104    	; 0x5806 <_ZN5SOUND3offEv>
} //SOUND
    586e:	df 91       	pop	r29
    5870:	cf 91       	pop	r28
    5872:	08 95       	ret

00005874 <__subsf3>:
    5874:	50 58       	subi	r21, 0x80	; 128

00005876 <__addsf3>:
    5876:	bb 27       	eor	r27, r27
    5878:	aa 27       	eor	r26, r26
    587a:	0e d0       	rcall	.+28     	; 0x5898 <__addsf3x>
    587c:	27 c2       	rjmp	.+1102   	; 0x5ccc <__fp_round>
    587e:	f0 d1       	rcall	.+992    	; 0x5c60 <__fp_pscA>
    5880:	30 f0       	brcs	.+12     	; 0x588e <__addsf3+0x18>
    5882:	f5 d1       	rcall	.+1002   	; 0x5c6e <__fp_pscB>
    5884:	20 f0       	brcs	.+8      	; 0x588e <__addsf3+0x18>
    5886:	31 f4       	brne	.+12     	; 0x5894 <__addsf3+0x1e>
    5888:	9f 3f       	cpi	r25, 0xFF	; 255
    588a:	11 f4       	brne	.+4      	; 0x5890 <__addsf3+0x1a>
    588c:	1e f4       	brtc	.+6      	; 0x5894 <__addsf3+0x1e>
    588e:	c0 c1       	rjmp	.+896    	; 0x5c10 <__fp_nan>
    5890:	0e f4       	brtc	.+2      	; 0x5894 <__addsf3+0x1e>
    5892:	e0 95       	com	r30
    5894:	e7 fb       	bst	r30, 7
    5896:	b6 c1       	rjmp	.+876    	; 0x5c04 <__fp_inf>

00005898 <__addsf3x>:
    5898:	e9 2f       	mov	r30, r25
    589a:	3a d2       	rcall	.+1140   	; 0x5d10 <__fp_split3>
    589c:	80 f3       	brcs	.-32     	; 0x587e <__addsf3+0x8>
    589e:	ba 17       	cp	r27, r26
    58a0:	62 07       	cpc	r22, r18
    58a2:	73 07       	cpc	r23, r19
    58a4:	84 07       	cpc	r24, r20
    58a6:	95 07       	cpc	r25, r21
    58a8:	18 f0       	brcs	.+6      	; 0x58b0 <__addsf3x+0x18>
    58aa:	71 f4       	brne	.+28     	; 0x58c8 <__addsf3x+0x30>
    58ac:	9e f5       	brtc	.+102    	; 0x5914 <__addsf3x+0x7c>
    58ae:	52 c2       	rjmp	.+1188   	; 0x5d54 <__fp_zero>
    58b0:	0e f4       	brtc	.+2      	; 0x58b4 <__addsf3x+0x1c>
    58b2:	e0 95       	com	r30
    58b4:	0b 2e       	mov	r0, r27
    58b6:	ba 2f       	mov	r27, r26
    58b8:	a0 2d       	mov	r26, r0
    58ba:	0b 01       	movw	r0, r22
    58bc:	b9 01       	movw	r22, r18
    58be:	90 01       	movw	r18, r0
    58c0:	0c 01       	movw	r0, r24
    58c2:	ca 01       	movw	r24, r20
    58c4:	a0 01       	movw	r20, r0
    58c6:	11 24       	eor	r1, r1
    58c8:	ff 27       	eor	r31, r31
    58ca:	59 1b       	sub	r21, r25
    58cc:	99 f0       	breq	.+38     	; 0x58f4 <__addsf3x+0x5c>
    58ce:	59 3f       	cpi	r21, 0xF9	; 249
    58d0:	50 f4       	brcc	.+20     	; 0x58e6 <__addsf3x+0x4e>
    58d2:	50 3e       	cpi	r21, 0xE0	; 224
    58d4:	68 f1       	brcs	.+90     	; 0x5930 <__addsf3x+0x98>
    58d6:	1a 16       	cp	r1, r26
    58d8:	f0 40       	sbci	r31, 0x00	; 0
    58da:	a2 2f       	mov	r26, r18
    58dc:	23 2f       	mov	r18, r19
    58de:	34 2f       	mov	r19, r20
    58e0:	44 27       	eor	r20, r20
    58e2:	58 5f       	subi	r21, 0xF8	; 248
    58e4:	f3 cf       	rjmp	.-26     	; 0x58cc <__addsf3x+0x34>
    58e6:	46 95       	lsr	r20
    58e8:	37 95       	ror	r19
    58ea:	27 95       	ror	r18
    58ec:	a7 95       	ror	r26
    58ee:	f0 40       	sbci	r31, 0x00	; 0
    58f0:	53 95       	inc	r21
    58f2:	c9 f7       	brne	.-14     	; 0x58e6 <__addsf3x+0x4e>
    58f4:	7e f4       	brtc	.+30     	; 0x5914 <__addsf3x+0x7c>
    58f6:	1f 16       	cp	r1, r31
    58f8:	ba 0b       	sbc	r27, r26
    58fa:	62 0b       	sbc	r22, r18
    58fc:	73 0b       	sbc	r23, r19
    58fe:	84 0b       	sbc	r24, r20
    5900:	ba f0       	brmi	.+46     	; 0x5930 <__addsf3x+0x98>
    5902:	91 50       	subi	r25, 0x01	; 1
    5904:	a1 f0       	breq	.+40     	; 0x592e <__addsf3x+0x96>
    5906:	ff 0f       	add	r31, r31
    5908:	bb 1f       	adc	r27, r27
    590a:	66 1f       	adc	r22, r22
    590c:	77 1f       	adc	r23, r23
    590e:	88 1f       	adc	r24, r24
    5910:	c2 f7       	brpl	.-16     	; 0x5902 <__addsf3x+0x6a>
    5912:	0e c0       	rjmp	.+28     	; 0x5930 <__addsf3x+0x98>
    5914:	ba 0f       	add	r27, r26
    5916:	62 1f       	adc	r22, r18
    5918:	73 1f       	adc	r23, r19
    591a:	84 1f       	adc	r24, r20
    591c:	48 f4       	brcc	.+18     	; 0x5930 <__addsf3x+0x98>
    591e:	87 95       	ror	r24
    5920:	77 95       	ror	r23
    5922:	67 95       	ror	r22
    5924:	b7 95       	ror	r27
    5926:	f7 95       	ror	r31
    5928:	9e 3f       	cpi	r25, 0xFE	; 254
    592a:	08 f0       	brcs	.+2      	; 0x592e <__addsf3x+0x96>
    592c:	b3 cf       	rjmp	.-154    	; 0x5894 <__addsf3+0x1e>
    592e:	93 95       	inc	r25
    5930:	88 0f       	add	r24, r24
    5932:	08 f0       	brcs	.+2      	; 0x5936 <__addsf3x+0x9e>
    5934:	99 27       	eor	r25, r25
    5936:	ee 0f       	add	r30, r30
    5938:	97 95       	ror	r25
    593a:	87 95       	ror	r24
    593c:	08 95       	ret
    593e:	90 d1       	rcall	.+800    	; 0x5c60 <__fp_pscA>
    5940:	58 f0       	brcs	.+22     	; 0x5958 <__addsf3x+0xc0>
    5942:	80 e8       	ldi	r24, 0x80	; 128
    5944:	91 e0       	ldi	r25, 0x01	; 1
    5946:	09 f4       	brne	.+2      	; 0x594a <__addsf3x+0xb2>
    5948:	9e ef       	ldi	r25, 0xFE	; 254
    594a:	91 d1       	rcall	.+802    	; 0x5c6e <__fp_pscB>
    594c:	28 f0       	brcs	.+10     	; 0x5958 <__addsf3x+0xc0>
    594e:	40 e8       	ldi	r20, 0x80	; 128
    5950:	51 e0       	ldi	r21, 0x01	; 1
    5952:	59 f4       	brne	.+22     	; 0x596a <atan2+0xe>
    5954:	5e ef       	ldi	r21, 0xFE	; 254
    5956:	09 c0       	rjmp	.+18     	; 0x596a <atan2+0xe>
    5958:	5b c1       	rjmp	.+694    	; 0x5c10 <__fp_nan>
    595a:	fc c1       	rjmp	.+1016   	; 0x5d54 <__fp_zero>

0000595c <atan2>:
    595c:	e9 2f       	mov	r30, r25
    595e:	e0 78       	andi	r30, 0x80	; 128
    5960:	d7 d1       	rcall	.+942    	; 0x5d10 <__fp_split3>
    5962:	68 f3       	brcs	.-38     	; 0x593e <__addsf3x+0xa6>
    5964:	09 2e       	mov	r0, r25
    5966:	05 2a       	or	r0, r21
    5968:	c1 f3       	breq	.-16     	; 0x595a <__addsf3x+0xc2>
    596a:	26 17       	cp	r18, r22
    596c:	37 07       	cpc	r19, r23
    596e:	48 07       	cpc	r20, r24
    5970:	59 07       	cpc	r21, r25
    5972:	38 f0       	brcs	.+14     	; 0x5982 <atan2+0x26>
    5974:	0e 2e       	mov	r0, r30
    5976:	07 f8       	bld	r0, 7
    5978:	e0 25       	eor	r30, r0
    597a:	69 f0       	breq	.+26     	; 0x5996 <atan2+0x3a>
    597c:	e0 25       	eor	r30, r0
    597e:	e0 64       	ori	r30, 0x40	; 64
    5980:	0a c0       	rjmp	.+20     	; 0x5996 <atan2+0x3a>
    5982:	ef 63       	ori	r30, 0x3F	; 63
    5984:	07 f8       	bld	r0, 7
    5986:	00 94       	com	r0
    5988:	07 fa       	bst	r0, 7
    598a:	db 01       	movw	r26, r22
    598c:	b9 01       	movw	r22, r18
    598e:	9d 01       	movw	r18, r26
    5990:	dc 01       	movw	r26, r24
    5992:	ca 01       	movw	r24, r20
    5994:	ad 01       	movw	r20, r26
    5996:	ef 93       	push	r30
    5998:	4a d0       	rcall	.+148    	; 0x5a2e <__divsf3_pse>
    599a:	98 d1       	rcall	.+816    	; 0x5ccc <__fp_round>
    599c:	0a d0       	rcall	.+20     	; 0x59b2 <atan>
    599e:	5f 91       	pop	r21
    59a0:	55 23       	and	r21, r21
    59a2:	31 f0       	breq	.+12     	; 0x59b0 <atan2+0x54>
    59a4:	2b ed       	ldi	r18, 0xDB	; 219
    59a6:	3f e0       	ldi	r19, 0x0F	; 15
    59a8:	49 e4       	ldi	r20, 0x49	; 73
    59aa:	50 fd       	sbrc	r21, 0
    59ac:	49 ec       	ldi	r20, 0xC9	; 201
    59ae:	63 cf       	rjmp	.-314    	; 0x5876 <__addsf3>
    59b0:	08 95       	ret

000059b2 <atan>:
    59b2:	df 93       	push	r29
    59b4:	dd 27       	eor	r29, r29
    59b6:	b9 2f       	mov	r27, r25
    59b8:	bf 77       	andi	r27, 0x7F	; 127
    59ba:	40 e8       	ldi	r20, 0x80	; 128
    59bc:	5f e3       	ldi	r21, 0x3F	; 63
    59be:	16 16       	cp	r1, r22
    59c0:	17 06       	cpc	r1, r23
    59c2:	48 07       	cpc	r20, r24
    59c4:	5b 07       	cpc	r21, r27
    59c6:	10 f4       	brcc	.+4      	; 0x59cc <atan+0x1a>
    59c8:	d9 2f       	mov	r29, r25
    59ca:	cf d1       	rcall	.+926    	; 0x5d6a <inverse>
    59cc:	9f 93       	push	r25
    59ce:	8f 93       	push	r24
    59d0:	7f 93       	push	r23
    59d2:	6f 93       	push	r22
    59d4:	7f d2       	rcall	.+1278   	; 0x5ed4 <square>
    59d6:	ee eb       	ldi	r30, 0xBE	; 190
    59d8:	f0 e0       	ldi	r31, 0x00	; 0
    59da:	1d d1       	rcall	.+570    	; 0x5c16 <__fp_powser>
    59dc:	77 d1       	rcall	.+750    	; 0x5ccc <__fp_round>
    59de:	2f 91       	pop	r18
    59e0:	3f 91       	pop	r19
    59e2:	4f 91       	pop	r20
    59e4:	5f 91       	pop	r21
    59e6:	19 d2       	rcall	.+1074   	; 0x5e1a <__mulsf3x>
    59e8:	dd 23       	and	r29, r29
    59ea:	49 f0       	breq	.+18     	; 0x59fe <atan+0x4c>
    59ec:	90 58       	subi	r25, 0x80	; 128
    59ee:	a2 ea       	ldi	r26, 0xA2	; 162
    59f0:	2a ed       	ldi	r18, 0xDA	; 218
    59f2:	3f e0       	ldi	r19, 0x0F	; 15
    59f4:	49 ec       	ldi	r20, 0xC9	; 201
    59f6:	5f e3       	ldi	r21, 0x3F	; 63
    59f8:	d0 78       	andi	r29, 0x80	; 128
    59fa:	5d 27       	eor	r21, r29
    59fc:	4d df       	rcall	.-358    	; 0x5898 <__addsf3x>
    59fe:	df 91       	pop	r29
    5a00:	65 c1       	rjmp	.+714    	; 0x5ccc <__fp_round>

00005a02 <__cmpsf2>:
    5a02:	dc d0       	rcall	.+440    	; 0x5bbc <__fp_cmp>
    5a04:	08 f4       	brcc	.+2      	; 0x5a08 <__cmpsf2+0x6>
    5a06:	81 e0       	ldi	r24, 0x01	; 1
    5a08:	08 95       	ret

00005a0a <cos>:
    5a0a:	39 d1       	rcall	.+626    	; 0x5c7e <__fp_rempio2>
    5a0c:	e3 95       	inc	r30
    5a0e:	6f c1       	rjmp	.+734    	; 0x5cee <__fp_sinus>

00005a10 <__divsf3>:
    5a10:	0c d0       	rcall	.+24     	; 0x5a2a <__divsf3x>
    5a12:	5c c1       	rjmp	.+696    	; 0x5ccc <__fp_round>
    5a14:	2c d1       	rcall	.+600    	; 0x5c6e <__fp_pscB>
    5a16:	40 f0       	brcs	.+16     	; 0x5a28 <__divsf3+0x18>
    5a18:	23 d1       	rcall	.+582    	; 0x5c60 <__fp_pscA>
    5a1a:	30 f0       	brcs	.+12     	; 0x5a28 <__divsf3+0x18>
    5a1c:	21 f4       	brne	.+8      	; 0x5a26 <__divsf3+0x16>
    5a1e:	5f 3f       	cpi	r21, 0xFF	; 255
    5a20:	19 f0       	breq	.+6      	; 0x5a28 <__divsf3+0x18>
    5a22:	f0 c0       	rjmp	.+480    	; 0x5c04 <__fp_inf>
    5a24:	51 11       	cpse	r21, r1
    5a26:	97 c1       	rjmp	.+814    	; 0x5d56 <__fp_szero>
    5a28:	f3 c0       	rjmp	.+486    	; 0x5c10 <__fp_nan>

00005a2a <__divsf3x>:
    5a2a:	72 d1       	rcall	.+740    	; 0x5d10 <__fp_split3>
    5a2c:	98 f3       	brcs	.-26     	; 0x5a14 <__divsf3+0x4>

00005a2e <__divsf3_pse>:
    5a2e:	99 23       	and	r25, r25
    5a30:	c9 f3       	breq	.-14     	; 0x5a24 <__divsf3+0x14>
    5a32:	55 23       	and	r21, r21
    5a34:	b1 f3       	breq	.-20     	; 0x5a22 <__divsf3+0x12>
    5a36:	95 1b       	sub	r25, r21
    5a38:	55 0b       	sbc	r21, r21
    5a3a:	bb 27       	eor	r27, r27
    5a3c:	aa 27       	eor	r26, r26
    5a3e:	62 17       	cp	r22, r18
    5a40:	73 07       	cpc	r23, r19
    5a42:	84 07       	cpc	r24, r20
    5a44:	38 f0       	brcs	.+14     	; 0x5a54 <__divsf3_pse+0x26>
    5a46:	9f 5f       	subi	r25, 0xFF	; 255
    5a48:	5f 4f       	sbci	r21, 0xFF	; 255
    5a4a:	22 0f       	add	r18, r18
    5a4c:	33 1f       	adc	r19, r19
    5a4e:	44 1f       	adc	r20, r20
    5a50:	aa 1f       	adc	r26, r26
    5a52:	a9 f3       	breq	.-22     	; 0x5a3e <__divsf3_pse+0x10>
    5a54:	33 d0       	rcall	.+102    	; 0x5abc <__divsf3_pse+0x8e>
    5a56:	0e 2e       	mov	r0, r30
    5a58:	3a f0       	brmi	.+14     	; 0x5a68 <__divsf3_pse+0x3a>
    5a5a:	e0 e8       	ldi	r30, 0x80	; 128
    5a5c:	30 d0       	rcall	.+96     	; 0x5abe <__divsf3_pse+0x90>
    5a5e:	91 50       	subi	r25, 0x01	; 1
    5a60:	50 40       	sbci	r21, 0x00	; 0
    5a62:	e6 95       	lsr	r30
    5a64:	00 1c       	adc	r0, r0
    5a66:	ca f7       	brpl	.-14     	; 0x5a5a <__divsf3_pse+0x2c>
    5a68:	29 d0       	rcall	.+82     	; 0x5abc <__divsf3_pse+0x8e>
    5a6a:	fe 2f       	mov	r31, r30
    5a6c:	27 d0       	rcall	.+78     	; 0x5abc <__divsf3_pse+0x8e>
    5a6e:	66 0f       	add	r22, r22
    5a70:	77 1f       	adc	r23, r23
    5a72:	88 1f       	adc	r24, r24
    5a74:	bb 1f       	adc	r27, r27
    5a76:	26 17       	cp	r18, r22
    5a78:	37 07       	cpc	r19, r23
    5a7a:	48 07       	cpc	r20, r24
    5a7c:	ab 07       	cpc	r26, r27
    5a7e:	b0 e8       	ldi	r27, 0x80	; 128
    5a80:	09 f0       	breq	.+2      	; 0x5a84 <__divsf3_pse+0x56>
    5a82:	bb 0b       	sbc	r27, r27
    5a84:	80 2d       	mov	r24, r0
    5a86:	bf 01       	movw	r22, r30
    5a88:	ff 27       	eor	r31, r31
    5a8a:	93 58       	subi	r25, 0x83	; 131
    5a8c:	5f 4f       	sbci	r21, 0xFF	; 255
    5a8e:	2a f0       	brmi	.+10     	; 0x5a9a <__divsf3_pse+0x6c>
    5a90:	9e 3f       	cpi	r25, 0xFE	; 254
    5a92:	51 05       	cpc	r21, r1
    5a94:	68 f0       	brcs	.+26     	; 0x5ab0 <__divsf3_pse+0x82>
    5a96:	b6 c0       	rjmp	.+364    	; 0x5c04 <__fp_inf>
    5a98:	5e c1       	rjmp	.+700    	; 0x5d56 <__fp_szero>
    5a9a:	5f 3f       	cpi	r21, 0xFF	; 255
    5a9c:	ec f3       	brlt	.-6      	; 0x5a98 <__divsf3_pse+0x6a>
    5a9e:	98 3e       	cpi	r25, 0xE8	; 232
    5aa0:	dc f3       	brlt	.-10     	; 0x5a98 <__divsf3_pse+0x6a>
    5aa2:	86 95       	lsr	r24
    5aa4:	77 95       	ror	r23
    5aa6:	67 95       	ror	r22
    5aa8:	b7 95       	ror	r27
    5aaa:	f7 95       	ror	r31
    5aac:	9f 5f       	subi	r25, 0xFF	; 255
    5aae:	c9 f7       	brne	.-14     	; 0x5aa2 <__divsf3_pse+0x74>
    5ab0:	88 0f       	add	r24, r24
    5ab2:	91 1d       	adc	r25, r1
    5ab4:	96 95       	lsr	r25
    5ab6:	87 95       	ror	r24
    5ab8:	97 f9       	bld	r25, 7
    5aba:	08 95       	ret
    5abc:	e1 e0       	ldi	r30, 0x01	; 1
    5abe:	66 0f       	add	r22, r22
    5ac0:	77 1f       	adc	r23, r23
    5ac2:	88 1f       	adc	r24, r24
    5ac4:	bb 1f       	adc	r27, r27
    5ac6:	62 17       	cp	r22, r18
    5ac8:	73 07       	cpc	r23, r19
    5aca:	84 07       	cpc	r24, r20
    5acc:	ba 07       	cpc	r27, r26
    5ace:	20 f0       	brcs	.+8      	; 0x5ad8 <__divsf3_pse+0xaa>
    5ad0:	62 1b       	sub	r22, r18
    5ad2:	73 0b       	sbc	r23, r19
    5ad4:	84 0b       	sbc	r24, r20
    5ad6:	ba 0b       	sbc	r27, r26
    5ad8:	ee 1f       	adc	r30, r30
    5ada:	88 f7       	brcc	.-30     	; 0x5abe <__divsf3_pse+0x90>
    5adc:	e0 95       	com	r30
    5ade:	08 95       	ret

00005ae0 <__fixsfsi>:
    5ae0:	04 d0       	rcall	.+8      	; 0x5aea <__fixunssfsi>
    5ae2:	68 94       	set
    5ae4:	b1 11       	cpse	r27, r1
    5ae6:	37 c1       	rjmp	.+622    	; 0x5d56 <__fp_szero>
    5ae8:	08 95       	ret

00005aea <__fixunssfsi>:
    5aea:	1a d1       	rcall	.+564    	; 0x5d20 <__fp_splitA>
    5aec:	88 f0       	brcs	.+34     	; 0x5b10 <__fixunssfsi+0x26>
    5aee:	9f 57       	subi	r25, 0x7F	; 127
    5af0:	90 f0       	brcs	.+36     	; 0x5b16 <__fixunssfsi+0x2c>
    5af2:	b9 2f       	mov	r27, r25
    5af4:	99 27       	eor	r25, r25
    5af6:	b7 51       	subi	r27, 0x17	; 23
    5af8:	a0 f0       	brcs	.+40     	; 0x5b22 <__fixunssfsi+0x38>
    5afa:	d1 f0       	breq	.+52     	; 0x5b30 <__fixunssfsi+0x46>
    5afc:	66 0f       	add	r22, r22
    5afe:	77 1f       	adc	r23, r23
    5b00:	88 1f       	adc	r24, r24
    5b02:	99 1f       	adc	r25, r25
    5b04:	1a f0       	brmi	.+6      	; 0x5b0c <__fixunssfsi+0x22>
    5b06:	ba 95       	dec	r27
    5b08:	c9 f7       	brne	.-14     	; 0x5afc <__fixunssfsi+0x12>
    5b0a:	12 c0       	rjmp	.+36     	; 0x5b30 <__fixunssfsi+0x46>
    5b0c:	b1 30       	cpi	r27, 0x01	; 1
    5b0e:	81 f0       	breq	.+32     	; 0x5b30 <__fixunssfsi+0x46>
    5b10:	21 d1       	rcall	.+578    	; 0x5d54 <__fp_zero>
    5b12:	b1 e0       	ldi	r27, 0x01	; 1
    5b14:	08 95       	ret
    5b16:	1e c1       	rjmp	.+572    	; 0x5d54 <__fp_zero>
    5b18:	67 2f       	mov	r22, r23
    5b1a:	78 2f       	mov	r23, r24
    5b1c:	88 27       	eor	r24, r24
    5b1e:	b8 5f       	subi	r27, 0xF8	; 248
    5b20:	39 f0       	breq	.+14     	; 0x5b30 <__fixunssfsi+0x46>
    5b22:	b9 3f       	cpi	r27, 0xF9	; 249
    5b24:	cc f3       	brlt	.-14     	; 0x5b18 <__fixunssfsi+0x2e>
    5b26:	86 95       	lsr	r24
    5b28:	77 95       	ror	r23
    5b2a:	67 95       	ror	r22
    5b2c:	b3 95       	inc	r27
    5b2e:	d9 f7       	brne	.-10     	; 0x5b26 <__fixunssfsi+0x3c>
    5b30:	3e f4       	brtc	.+14     	; 0x5b40 <__fixunssfsi+0x56>
    5b32:	90 95       	com	r25
    5b34:	80 95       	com	r24
    5b36:	70 95       	com	r23
    5b38:	61 95       	neg	r22
    5b3a:	7f 4f       	sbci	r23, 0xFF	; 255
    5b3c:	8f 4f       	sbci	r24, 0xFF	; 255
    5b3e:	9f 4f       	sbci	r25, 0xFF	; 255
    5b40:	08 95       	ret

00005b42 <__floatunsisf>:
    5b42:	e8 94       	clt
    5b44:	09 c0       	rjmp	.+18     	; 0x5b58 <__floatsisf+0x12>

00005b46 <__floatsisf>:
    5b46:	97 fb       	bst	r25, 7
    5b48:	3e f4       	brtc	.+14     	; 0x5b58 <__floatsisf+0x12>
    5b4a:	90 95       	com	r25
    5b4c:	80 95       	com	r24
    5b4e:	70 95       	com	r23
    5b50:	61 95       	neg	r22
    5b52:	7f 4f       	sbci	r23, 0xFF	; 255
    5b54:	8f 4f       	sbci	r24, 0xFF	; 255
    5b56:	9f 4f       	sbci	r25, 0xFF	; 255
    5b58:	99 23       	and	r25, r25
    5b5a:	a9 f0       	breq	.+42     	; 0x5b86 <__floatsisf+0x40>
    5b5c:	f9 2f       	mov	r31, r25
    5b5e:	96 e9       	ldi	r25, 0x96	; 150
    5b60:	bb 27       	eor	r27, r27
    5b62:	93 95       	inc	r25
    5b64:	f6 95       	lsr	r31
    5b66:	87 95       	ror	r24
    5b68:	77 95       	ror	r23
    5b6a:	67 95       	ror	r22
    5b6c:	b7 95       	ror	r27
    5b6e:	f1 11       	cpse	r31, r1
    5b70:	f8 cf       	rjmp	.-16     	; 0x5b62 <__floatsisf+0x1c>
    5b72:	fa f4       	brpl	.+62     	; 0x5bb2 <__floatsisf+0x6c>
    5b74:	bb 0f       	add	r27, r27
    5b76:	11 f4       	brne	.+4      	; 0x5b7c <__floatsisf+0x36>
    5b78:	60 ff       	sbrs	r22, 0
    5b7a:	1b c0       	rjmp	.+54     	; 0x5bb2 <__floatsisf+0x6c>
    5b7c:	6f 5f       	subi	r22, 0xFF	; 255
    5b7e:	7f 4f       	sbci	r23, 0xFF	; 255
    5b80:	8f 4f       	sbci	r24, 0xFF	; 255
    5b82:	9f 4f       	sbci	r25, 0xFF	; 255
    5b84:	16 c0       	rjmp	.+44     	; 0x5bb2 <__floatsisf+0x6c>
    5b86:	88 23       	and	r24, r24
    5b88:	11 f0       	breq	.+4      	; 0x5b8e <__floatsisf+0x48>
    5b8a:	96 e9       	ldi	r25, 0x96	; 150
    5b8c:	11 c0       	rjmp	.+34     	; 0x5bb0 <__floatsisf+0x6a>
    5b8e:	77 23       	and	r23, r23
    5b90:	21 f0       	breq	.+8      	; 0x5b9a <__floatsisf+0x54>
    5b92:	9e e8       	ldi	r25, 0x8E	; 142
    5b94:	87 2f       	mov	r24, r23
    5b96:	76 2f       	mov	r23, r22
    5b98:	05 c0       	rjmp	.+10     	; 0x5ba4 <__floatsisf+0x5e>
    5b9a:	66 23       	and	r22, r22
    5b9c:	71 f0       	breq	.+28     	; 0x5bba <__floatsisf+0x74>
    5b9e:	96 e8       	ldi	r25, 0x86	; 134
    5ba0:	86 2f       	mov	r24, r22
    5ba2:	70 e0       	ldi	r23, 0x00	; 0
    5ba4:	60 e0       	ldi	r22, 0x00	; 0
    5ba6:	2a f0       	brmi	.+10     	; 0x5bb2 <__floatsisf+0x6c>
    5ba8:	9a 95       	dec	r25
    5baa:	66 0f       	add	r22, r22
    5bac:	77 1f       	adc	r23, r23
    5bae:	88 1f       	adc	r24, r24
    5bb0:	da f7       	brpl	.-10     	; 0x5ba8 <__floatsisf+0x62>
    5bb2:	88 0f       	add	r24, r24
    5bb4:	96 95       	lsr	r25
    5bb6:	87 95       	ror	r24
    5bb8:	97 f9       	bld	r25, 7
    5bba:	08 95       	ret

00005bbc <__fp_cmp>:
    5bbc:	99 0f       	add	r25, r25
    5bbe:	00 08       	sbc	r0, r0
    5bc0:	55 0f       	add	r21, r21
    5bc2:	aa 0b       	sbc	r26, r26
    5bc4:	e0 e8       	ldi	r30, 0x80	; 128
    5bc6:	fe ef       	ldi	r31, 0xFE	; 254
    5bc8:	16 16       	cp	r1, r22
    5bca:	17 06       	cpc	r1, r23
    5bcc:	e8 07       	cpc	r30, r24
    5bce:	f9 07       	cpc	r31, r25
    5bd0:	c0 f0       	brcs	.+48     	; 0x5c02 <__fp_cmp+0x46>
    5bd2:	12 16       	cp	r1, r18
    5bd4:	13 06       	cpc	r1, r19
    5bd6:	e4 07       	cpc	r30, r20
    5bd8:	f5 07       	cpc	r31, r21
    5bda:	98 f0       	brcs	.+38     	; 0x5c02 <__fp_cmp+0x46>
    5bdc:	62 1b       	sub	r22, r18
    5bde:	73 0b       	sbc	r23, r19
    5be0:	84 0b       	sbc	r24, r20
    5be2:	95 0b       	sbc	r25, r21
    5be4:	39 f4       	brne	.+14     	; 0x5bf4 <__fp_cmp+0x38>
    5be6:	0a 26       	eor	r0, r26
    5be8:	61 f0       	breq	.+24     	; 0x5c02 <__fp_cmp+0x46>
    5bea:	23 2b       	or	r18, r19
    5bec:	24 2b       	or	r18, r20
    5bee:	25 2b       	or	r18, r21
    5bf0:	21 f4       	brne	.+8      	; 0x5bfa <__fp_cmp+0x3e>
    5bf2:	08 95       	ret
    5bf4:	0a 26       	eor	r0, r26
    5bf6:	09 f4       	brne	.+2      	; 0x5bfa <__fp_cmp+0x3e>
    5bf8:	a1 40       	sbci	r26, 0x01	; 1
    5bfa:	a6 95       	lsr	r26
    5bfc:	8f ef       	ldi	r24, 0xFF	; 255
    5bfe:	81 1d       	adc	r24, r1
    5c00:	81 1d       	adc	r24, r1
    5c02:	08 95       	ret

00005c04 <__fp_inf>:
    5c04:	97 f9       	bld	r25, 7
    5c06:	9f 67       	ori	r25, 0x7F	; 127
    5c08:	80 e8       	ldi	r24, 0x80	; 128
    5c0a:	70 e0       	ldi	r23, 0x00	; 0
    5c0c:	60 e0       	ldi	r22, 0x00	; 0
    5c0e:	08 95       	ret

00005c10 <__fp_nan>:
    5c10:	9f ef       	ldi	r25, 0xFF	; 255
    5c12:	80 ec       	ldi	r24, 0xC0	; 192
    5c14:	08 95       	ret

00005c16 <__fp_powser>:
    5c16:	df 93       	push	r29
    5c18:	cf 93       	push	r28
    5c1a:	1f 93       	push	r17
    5c1c:	0f 93       	push	r16
    5c1e:	ff 92       	push	r15
    5c20:	ef 92       	push	r14
    5c22:	df 92       	push	r13
    5c24:	7b 01       	movw	r14, r22
    5c26:	8c 01       	movw	r16, r24
    5c28:	68 94       	set
    5c2a:	05 c0       	rjmp	.+10     	; 0x5c36 <__fp_powser+0x20>
    5c2c:	da 2e       	mov	r13, r26
    5c2e:	ef 01       	movw	r28, r30
    5c30:	f4 d0       	rcall	.+488    	; 0x5e1a <__mulsf3x>
    5c32:	fe 01       	movw	r30, r28
    5c34:	e8 94       	clt
    5c36:	a5 91       	lpm	r26, Z+
    5c38:	25 91       	lpm	r18, Z+
    5c3a:	35 91       	lpm	r19, Z+
    5c3c:	45 91       	lpm	r20, Z+
    5c3e:	55 91       	lpm	r21, Z+
    5c40:	ae f3       	brts	.-22     	; 0x5c2c <__fp_powser+0x16>
    5c42:	ef 01       	movw	r28, r30
    5c44:	29 de       	rcall	.-942    	; 0x5898 <__addsf3x>
    5c46:	fe 01       	movw	r30, r28
    5c48:	97 01       	movw	r18, r14
    5c4a:	a8 01       	movw	r20, r16
    5c4c:	da 94       	dec	r13
    5c4e:	79 f7       	brne	.-34     	; 0x5c2e <__fp_powser+0x18>
    5c50:	df 90       	pop	r13
    5c52:	ef 90       	pop	r14
    5c54:	ff 90       	pop	r15
    5c56:	0f 91       	pop	r16
    5c58:	1f 91       	pop	r17
    5c5a:	cf 91       	pop	r28
    5c5c:	df 91       	pop	r29
    5c5e:	08 95       	ret

00005c60 <__fp_pscA>:
    5c60:	00 24       	eor	r0, r0
    5c62:	0a 94       	dec	r0
    5c64:	16 16       	cp	r1, r22
    5c66:	17 06       	cpc	r1, r23
    5c68:	18 06       	cpc	r1, r24
    5c6a:	09 06       	cpc	r0, r25
    5c6c:	08 95       	ret

00005c6e <__fp_pscB>:
    5c6e:	00 24       	eor	r0, r0
    5c70:	0a 94       	dec	r0
    5c72:	12 16       	cp	r1, r18
    5c74:	13 06       	cpc	r1, r19
    5c76:	14 06       	cpc	r1, r20
    5c78:	05 06       	cpc	r0, r21
    5c7a:	08 95       	ret
    5c7c:	c9 cf       	rjmp	.-110    	; 0x5c10 <__fp_nan>

00005c7e <__fp_rempio2>:
    5c7e:	50 d0       	rcall	.+160    	; 0x5d20 <__fp_splitA>
    5c80:	e8 f3       	brcs	.-6      	; 0x5c7c <__fp_pscB+0xe>
    5c82:	e8 94       	clt
    5c84:	e0 e0       	ldi	r30, 0x00	; 0
    5c86:	bb 27       	eor	r27, r27
    5c88:	9f 57       	subi	r25, 0x7F	; 127
    5c8a:	f0 f0       	brcs	.+60     	; 0x5cc8 <__fp_rempio2+0x4a>
    5c8c:	2a ed       	ldi	r18, 0xDA	; 218
    5c8e:	3f e0       	ldi	r19, 0x0F	; 15
    5c90:	49 ec       	ldi	r20, 0xC9	; 201
    5c92:	06 c0       	rjmp	.+12     	; 0x5ca0 <__fp_rempio2+0x22>
    5c94:	ee 0f       	add	r30, r30
    5c96:	bb 0f       	add	r27, r27
    5c98:	66 1f       	adc	r22, r22
    5c9a:	77 1f       	adc	r23, r23
    5c9c:	88 1f       	adc	r24, r24
    5c9e:	28 f0       	brcs	.+10     	; 0x5caa <__fp_rempio2+0x2c>
    5ca0:	b2 3a       	cpi	r27, 0xA2	; 162
    5ca2:	62 07       	cpc	r22, r18
    5ca4:	73 07       	cpc	r23, r19
    5ca6:	84 07       	cpc	r24, r20
    5ca8:	28 f0       	brcs	.+10     	; 0x5cb4 <__fp_rempio2+0x36>
    5caa:	b2 5a       	subi	r27, 0xA2	; 162
    5cac:	62 0b       	sbc	r22, r18
    5cae:	73 0b       	sbc	r23, r19
    5cb0:	84 0b       	sbc	r24, r20
    5cb2:	e3 95       	inc	r30
    5cb4:	9a 95       	dec	r25
    5cb6:	72 f7       	brpl	.-36     	; 0x5c94 <__fp_rempio2+0x16>
    5cb8:	80 38       	cpi	r24, 0x80	; 128
    5cba:	30 f4       	brcc	.+12     	; 0x5cc8 <__fp_rempio2+0x4a>
    5cbc:	9a 95       	dec	r25
    5cbe:	bb 0f       	add	r27, r27
    5cc0:	66 1f       	adc	r22, r22
    5cc2:	77 1f       	adc	r23, r23
    5cc4:	88 1f       	adc	r24, r24
    5cc6:	d2 f7       	brpl	.-12     	; 0x5cbc <__fp_rempio2+0x3e>
    5cc8:	90 48       	sbci	r25, 0x80	; 128
    5cca:	29 c1       	rjmp	.+594    	; 0x5f1e <__fp_mpack_finite>

00005ccc <__fp_round>:
    5ccc:	09 2e       	mov	r0, r25
    5cce:	03 94       	inc	r0
    5cd0:	00 0c       	add	r0, r0
    5cd2:	11 f4       	brne	.+4      	; 0x5cd8 <__fp_round+0xc>
    5cd4:	88 23       	and	r24, r24
    5cd6:	52 f0       	brmi	.+20     	; 0x5cec <__fp_round+0x20>
    5cd8:	bb 0f       	add	r27, r27
    5cda:	40 f4       	brcc	.+16     	; 0x5cec <__fp_round+0x20>
    5cdc:	bf 2b       	or	r27, r31
    5cde:	11 f4       	brne	.+4      	; 0x5ce4 <__fp_round+0x18>
    5ce0:	60 ff       	sbrs	r22, 0
    5ce2:	04 c0       	rjmp	.+8      	; 0x5cec <__fp_round+0x20>
    5ce4:	6f 5f       	subi	r22, 0xFF	; 255
    5ce6:	7f 4f       	sbci	r23, 0xFF	; 255
    5ce8:	8f 4f       	sbci	r24, 0xFF	; 255
    5cea:	9f 4f       	sbci	r25, 0xFF	; 255
    5cec:	08 95       	ret

00005cee <__fp_sinus>:
    5cee:	ef 93       	push	r30
    5cf0:	e0 ff       	sbrs	r30, 0
    5cf2:	06 c0       	rjmp	.+12     	; 0x5d00 <__fp_sinus+0x12>
    5cf4:	a2 ea       	ldi	r26, 0xA2	; 162
    5cf6:	2a ed       	ldi	r18, 0xDA	; 218
    5cf8:	3f e0       	ldi	r19, 0x0F	; 15
    5cfa:	49 ec       	ldi	r20, 0xC9	; 201
    5cfc:	5f eb       	ldi	r21, 0xBF	; 191
    5cfe:	cc dd       	rcall	.-1128   	; 0x5898 <__addsf3x>
    5d00:	e5 df       	rcall	.-54     	; 0x5ccc <__fp_round>
    5d02:	0f 90       	pop	r0
    5d04:	03 94       	inc	r0
    5d06:	01 fc       	sbrc	r0, 1
    5d08:	90 58       	subi	r25, 0x80	; 128
    5d0a:	eb ee       	ldi	r30, 0xEB	; 235
    5d0c:	f0 e0       	ldi	r31, 0x00	; 0
    5d0e:	13 c1       	rjmp	.+550    	; 0x5f36 <__fp_powsodd>

00005d10 <__fp_split3>:
    5d10:	57 fd       	sbrc	r21, 7
    5d12:	90 58       	subi	r25, 0x80	; 128
    5d14:	44 0f       	add	r20, r20
    5d16:	55 1f       	adc	r21, r21
    5d18:	59 f0       	breq	.+22     	; 0x5d30 <__fp_splitA+0x10>
    5d1a:	5f 3f       	cpi	r21, 0xFF	; 255
    5d1c:	71 f0       	breq	.+28     	; 0x5d3a <__fp_splitA+0x1a>
    5d1e:	47 95       	ror	r20

00005d20 <__fp_splitA>:
    5d20:	88 0f       	add	r24, r24
    5d22:	97 fb       	bst	r25, 7
    5d24:	99 1f       	adc	r25, r25
    5d26:	61 f0       	breq	.+24     	; 0x5d40 <__fp_splitA+0x20>
    5d28:	9f 3f       	cpi	r25, 0xFF	; 255
    5d2a:	79 f0       	breq	.+30     	; 0x5d4a <__fp_splitA+0x2a>
    5d2c:	87 95       	ror	r24
    5d2e:	08 95       	ret
    5d30:	12 16       	cp	r1, r18
    5d32:	13 06       	cpc	r1, r19
    5d34:	14 06       	cpc	r1, r20
    5d36:	55 1f       	adc	r21, r21
    5d38:	f2 cf       	rjmp	.-28     	; 0x5d1e <__fp_split3+0xe>
    5d3a:	46 95       	lsr	r20
    5d3c:	f1 df       	rcall	.-30     	; 0x5d20 <__fp_splitA>
    5d3e:	08 c0       	rjmp	.+16     	; 0x5d50 <__fp_splitA+0x30>
    5d40:	16 16       	cp	r1, r22
    5d42:	17 06       	cpc	r1, r23
    5d44:	18 06       	cpc	r1, r24
    5d46:	99 1f       	adc	r25, r25
    5d48:	f1 cf       	rjmp	.-30     	; 0x5d2c <__fp_splitA+0xc>
    5d4a:	86 95       	lsr	r24
    5d4c:	71 05       	cpc	r23, r1
    5d4e:	61 05       	cpc	r22, r1
    5d50:	08 94       	sec
    5d52:	08 95       	ret

00005d54 <__fp_zero>:
    5d54:	e8 94       	clt

00005d56 <__fp_szero>:
    5d56:	bb 27       	eor	r27, r27
    5d58:	66 27       	eor	r22, r22
    5d5a:	77 27       	eor	r23, r23
    5d5c:	cb 01       	movw	r24, r22
    5d5e:	97 f9       	bld	r25, 7
    5d60:	08 95       	ret

00005d62 <__gesf2>:
    5d62:	2c df       	rcall	.-424    	; 0x5bbc <__fp_cmp>
    5d64:	08 f4       	brcc	.+2      	; 0x5d68 <__gesf2+0x6>
    5d66:	8f ef       	ldi	r24, 0xFF	; 255
    5d68:	08 95       	ret

00005d6a <inverse>:
    5d6a:	9b 01       	movw	r18, r22
    5d6c:	ac 01       	movw	r20, r24
    5d6e:	60 e0       	ldi	r22, 0x00	; 0
    5d70:	70 e0       	ldi	r23, 0x00	; 0
    5d72:	80 e8       	ldi	r24, 0x80	; 128
    5d74:	9f e3       	ldi	r25, 0x3F	; 63
    5d76:	4c ce       	rjmp	.-872    	; 0x5a10 <__divsf3>
    5d78:	0e f0       	brts	.+2      	; 0x5d7c <inverse+0x12>
    5d7a:	cf c0       	rjmp	.+414    	; 0x5f1a <__fp_mpack>
    5d7c:	49 cf       	rjmp	.-366    	; 0x5c10 <__fp_nan>
    5d7e:	68 94       	set
    5d80:	41 cf       	rjmp	.-382    	; 0x5c04 <__fp_inf>

00005d82 <log>:
    5d82:	ce df       	rcall	.-100    	; 0x5d20 <__fp_splitA>
    5d84:	c8 f3       	brcs	.-14     	; 0x5d78 <inverse+0xe>
    5d86:	99 23       	and	r25, r25
    5d88:	d1 f3       	breq	.-12     	; 0x5d7e <inverse+0x14>
    5d8a:	c6 f3       	brts	.-16     	; 0x5d7c <inverse+0x12>
    5d8c:	df 93       	push	r29
    5d8e:	cf 93       	push	r28
    5d90:	1f 93       	push	r17
    5d92:	0f 93       	push	r16
    5d94:	ff 92       	push	r15
    5d96:	c9 2f       	mov	r28, r25
    5d98:	dd 27       	eor	r29, r29
    5d9a:	88 23       	and	r24, r24
    5d9c:	2a f0       	brmi	.+10     	; 0x5da8 <log+0x26>
    5d9e:	21 97       	sbiw	r28, 0x01	; 1
    5da0:	66 0f       	add	r22, r22
    5da2:	77 1f       	adc	r23, r23
    5da4:	88 1f       	adc	r24, r24
    5da6:	da f7       	brpl	.-10     	; 0x5d9e <log+0x1c>
    5da8:	20 e0       	ldi	r18, 0x00	; 0
    5daa:	30 e0       	ldi	r19, 0x00	; 0
    5dac:	40 e8       	ldi	r20, 0x80	; 128
    5dae:	5f eb       	ldi	r21, 0xBF	; 191
    5db0:	9f e3       	ldi	r25, 0x3F	; 63
    5db2:	88 39       	cpi	r24, 0x98	; 152
    5db4:	20 f0       	brcs	.+8      	; 0x5dbe <log+0x3c>
    5db6:	80 3e       	cpi	r24, 0xE0	; 224
    5db8:	30 f0       	brcs	.+12     	; 0x5dc6 <log+0x44>
    5dba:	21 96       	adiw	r28, 0x01	; 1
    5dbc:	8f 77       	andi	r24, 0x7F	; 127
    5dbe:	5b dd       	rcall	.-1354   	; 0x5876 <__addsf3>
    5dc0:	e9 e0       	ldi	r30, 0x09	; 9
    5dc2:	f1 e0       	ldi	r31, 0x01	; 1
    5dc4:	03 c0       	rjmp	.+6      	; 0x5dcc <log+0x4a>
    5dc6:	57 dd       	rcall	.-1362   	; 0x5876 <__addsf3>
    5dc8:	e6 e3       	ldi	r30, 0x36	; 54
    5dca:	f1 e0       	ldi	r31, 0x01	; 1
    5dcc:	24 df       	rcall	.-440    	; 0x5c16 <__fp_powser>
    5dce:	8b 01       	movw	r16, r22
    5dd0:	be 01       	movw	r22, r28
    5dd2:	ec 01       	movw	r28, r24
    5dd4:	fb 2e       	mov	r15, r27
    5dd6:	6f 57       	subi	r22, 0x7F	; 127
    5dd8:	71 09       	sbc	r23, r1
    5dda:	75 95       	asr	r23
    5ddc:	77 1f       	adc	r23, r23
    5dde:	88 0b       	sbc	r24, r24
    5de0:	99 0b       	sbc	r25, r25
    5de2:	b1 de       	rcall	.-670    	; 0x5b46 <__floatsisf>
    5de4:	28 e1       	ldi	r18, 0x18	; 24
    5de6:	32 e7       	ldi	r19, 0x72	; 114
    5de8:	41 e3       	ldi	r20, 0x31	; 49
    5dea:	5f e3       	ldi	r21, 0x3F	; 63
    5dec:	16 d0       	rcall	.+44     	; 0x5e1a <__mulsf3x>
    5dee:	af 2d       	mov	r26, r15
    5df0:	98 01       	movw	r18, r16
    5df2:	ae 01       	movw	r20, r28
    5df4:	ff 90       	pop	r15
    5df6:	0f 91       	pop	r16
    5df8:	1f 91       	pop	r17
    5dfa:	cf 91       	pop	r28
    5dfc:	df 91       	pop	r29
    5dfe:	4c dd       	rcall	.-1384   	; 0x5898 <__addsf3x>
    5e00:	65 cf       	rjmp	.-310    	; 0x5ccc <__fp_round>

00005e02 <__mulsf3>:
    5e02:	0b d0       	rcall	.+22     	; 0x5e1a <__mulsf3x>
    5e04:	63 cf       	rjmp	.-314    	; 0x5ccc <__fp_round>
    5e06:	2c df       	rcall	.-424    	; 0x5c60 <__fp_pscA>
    5e08:	28 f0       	brcs	.+10     	; 0x5e14 <__mulsf3+0x12>
    5e0a:	31 df       	rcall	.-414    	; 0x5c6e <__fp_pscB>
    5e0c:	18 f0       	brcs	.+6      	; 0x5e14 <__mulsf3+0x12>
    5e0e:	95 23       	and	r25, r21
    5e10:	09 f0       	breq	.+2      	; 0x5e14 <__mulsf3+0x12>
    5e12:	f8 ce       	rjmp	.-528    	; 0x5c04 <__fp_inf>
    5e14:	fd ce       	rjmp	.-518    	; 0x5c10 <__fp_nan>
    5e16:	11 24       	eor	r1, r1
    5e18:	9e cf       	rjmp	.-196    	; 0x5d56 <__fp_szero>

00005e1a <__mulsf3x>:
    5e1a:	7a df       	rcall	.-268    	; 0x5d10 <__fp_split3>
    5e1c:	a0 f3       	brcs	.-24     	; 0x5e06 <__mulsf3+0x4>

00005e1e <__mulsf3_pse>:
    5e1e:	95 9f       	mul	r25, r21
    5e20:	d1 f3       	breq	.-12     	; 0x5e16 <__mulsf3+0x14>
    5e22:	95 0f       	add	r25, r21
    5e24:	50 e0       	ldi	r21, 0x00	; 0
    5e26:	55 1f       	adc	r21, r21
    5e28:	62 9f       	mul	r22, r18
    5e2a:	f0 01       	movw	r30, r0
    5e2c:	72 9f       	mul	r23, r18
    5e2e:	bb 27       	eor	r27, r27
    5e30:	f0 0d       	add	r31, r0
    5e32:	b1 1d       	adc	r27, r1
    5e34:	63 9f       	mul	r22, r19
    5e36:	aa 27       	eor	r26, r26
    5e38:	f0 0d       	add	r31, r0
    5e3a:	b1 1d       	adc	r27, r1
    5e3c:	aa 1f       	adc	r26, r26
    5e3e:	64 9f       	mul	r22, r20
    5e40:	66 27       	eor	r22, r22
    5e42:	b0 0d       	add	r27, r0
    5e44:	a1 1d       	adc	r26, r1
    5e46:	66 1f       	adc	r22, r22
    5e48:	82 9f       	mul	r24, r18
    5e4a:	22 27       	eor	r18, r18
    5e4c:	b0 0d       	add	r27, r0
    5e4e:	a1 1d       	adc	r26, r1
    5e50:	62 1f       	adc	r22, r18
    5e52:	73 9f       	mul	r23, r19
    5e54:	b0 0d       	add	r27, r0
    5e56:	a1 1d       	adc	r26, r1
    5e58:	62 1f       	adc	r22, r18
    5e5a:	83 9f       	mul	r24, r19
    5e5c:	a0 0d       	add	r26, r0
    5e5e:	61 1d       	adc	r22, r1
    5e60:	22 1f       	adc	r18, r18
    5e62:	74 9f       	mul	r23, r20
    5e64:	33 27       	eor	r19, r19
    5e66:	a0 0d       	add	r26, r0
    5e68:	61 1d       	adc	r22, r1
    5e6a:	23 1f       	adc	r18, r19
    5e6c:	84 9f       	mul	r24, r20
    5e6e:	60 0d       	add	r22, r0
    5e70:	21 1d       	adc	r18, r1
    5e72:	82 2f       	mov	r24, r18
    5e74:	76 2f       	mov	r23, r22
    5e76:	6a 2f       	mov	r22, r26
    5e78:	11 24       	eor	r1, r1
    5e7a:	9f 57       	subi	r25, 0x7F	; 127
    5e7c:	50 40       	sbci	r21, 0x00	; 0
    5e7e:	8a f0       	brmi	.+34     	; 0x5ea2 <__mulsf3_pse+0x84>
    5e80:	e1 f0       	breq	.+56     	; 0x5eba <__mulsf3_pse+0x9c>
    5e82:	88 23       	and	r24, r24
    5e84:	4a f0       	brmi	.+18     	; 0x5e98 <__mulsf3_pse+0x7a>
    5e86:	ee 0f       	add	r30, r30
    5e88:	ff 1f       	adc	r31, r31
    5e8a:	bb 1f       	adc	r27, r27
    5e8c:	66 1f       	adc	r22, r22
    5e8e:	77 1f       	adc	r23, r23
    5e90:	88 1f       	adc	r24, r24
    5e92:	91 50       	subi	r25, 0x01	; 1
    5e94:	50 40       	sbci	r21, 0x00	; 0
    5e96:	a9 f7       	brne	.-22     	; 0x5e82 <__mulsf3_pse+0x64>
    5e98:	9e 3f       	cpi	r25, 0xFE	; 254
    5e9a:	51 05       	cpc	r21, r1
    5e9c:	70 f0       	brcs	.+28     	; 0x5eba <__mulsf3_pse+0x9c>
    5e9e:	b2 ce       	rjmp	.-668    	; 0x5c04 <__fp_inf>
    5ea0:	5a cf       	rjmp	.-332    	; 0x5d56 <__fp_szero>
    5ea2:	5f 3f       	cpi	r21, 0xFF	; 255
    5ea4:	ec f3       	brlt	.-6      	; 0x5ea0 <__mulsf3_pse+0x82>
    5ea6:	98 3e       	cpi	r25, 0xE8	; 232
    5ea8:	dc f3       	brlt	.-10     	; 0x5ea0 <__mulsf3_pse+0x82>
    5eaa:	86 95       	lsr	r24
    5eac:	77 95       	ror	r23
    5eae:	67 95       	ror	r22
    5eb0:	b7 95       	ror	r27
    5eb2:	f7 95       	ror	r31
    5eb4:	e7 95       	ror	r30
    5eb6:	9f 5f       	subi	r25, 0xFF	; 255
    5eb8:	c1 f7       	brne	.-16     	; 0x5eaa <__mulsf3_pse+0x8c>
    5eba:	fe 2b       	or	r31, r30
    5ebc:	88 0f       	add	r24, r24
    5ebe:	91 1d       	adc	r25, r1
    5ec0:	96 95       	lsr	r25
    5ec2:	87 95       	ror	r24
    5ec4:	97 f9       	bld	r25, 7
    5ec6:	08 95       	ret

00005ec8 <sin>:
    5ec8:	9f 93       	push	r25
    5eca:	d9 de       	rcall	.-590    	; 0x5c7e <__fp_rempio2>
    5ecc:	0f 90       	pop	r0
    5ece:	07 fc       	sbrc	r0, 7
    5ed0:	ee 5f       	subi	r30, 0xFE	; 254
    5ed2:	0d cf       	rjmp	.-486    	; 0x5cee <__fp_sinus>

00005ed4 <square>:
    5ed4:	9b 01       	movw	r18, r22
    5ed6:	ac 01       	movw	r20, r24
    5ed8:	94 cf       	rjmp	.-216    	; 0x5e02 <__mulsf3>

00005eda <tan>:
    5eda:	df 93       	push	r29
    5edc:	d9 2f       	mov	r29, r25
    5ede:	cf de       	rcall	.-610    	; 0x5c7e <__fp_rempio2>
    5ee0:	e6 95       	lsr	r30
    5ee2:	d7 95       	ror	r29
    5ee4:	2a ed       	ldi	r18, 0xDA	; 218
    5ee6:	3f e0       	ldi	r19, 0x0F	; 15
    5ee8:	49 e4       	ldi	r20, 0x49	; 73
    5eea:	5f e3       	ldi	r21, 0x3F	; 63
    5eec:	b3 3a       	cpi	r27, 0xA3	; 163
    5eee:	62 07       	cpc	r22, r18
    5ef0:	73 07       	cpc	r23, r19
    5ef2:	84 07       	cpc	r24, r20
    5ef4:	95 07       	cpc	r25, r21
    5ef6:	d7 95       	ror	r29
    5ef8:	2a f0       	brmi	.+10     	; 0x5f04 <tan+0x2a>
    5efa:	a2 ea       	ldi	r26, 0xA2	; 162
    5efc:	49 ec       	ldi	r20, 0xC9	; 201
    5efe:	90 68       	ori	r25, 0x80	; 128
    5f00:	cb dc       	rcall	.-1642   	; 0x5898 <__addsf3x>
    5f02:	e4 de       	rcall	.-568    	; 0x5ccc <__fp_round>
    5f04:	e3 e6       	ldi	r30, 0x63	; 99
    5f06:	f1 e0       	ldi	r31, 0x01	; 1
    5f08:	16 d0       	rcall	.+44     	; 0x5f36 <__fp_powsodd>
    5f0a:	dd 0f       	add	r29, r29
    5f0c:	0b f0       	brvs	.+2      	; 0x5f10 <tan+0x36>
    5f0e:	2d df       	rcall	.-422    	; 0x5d6a <inverse>
    5f10:	dd 0f       	add	r29, r29
    5f12:	0b f4       	brvc	.+2      	; 0x5f16 <tan+0x3c>
    5f14:	90 58       	subi	r25, 0x80	; 128
    5f16:	df 91       	pop	r29
    5f18:	08 95       	ret

00005f1a <__fp_mpack>:
    5f1a:	9f 3f       	cpi	r25, 0xFF	; 255
    5f1c:	31 f0       	breq	.+12     	; 0x5f2a <__fp_mpack_finite+0xc>

00005f1e <__fp_mpack_finite>:
    5f1e:	91 50       	subi	r25, 0x01	; 1
    5f20:	20 f4       	brcc	.+8      	; 0x5f2a <__fp_mpack_finite+0xc>
    5f22:	87 95       	ror	r24
    5f24:	77 95       	ror	r23
    5f26:	67 95       	ror	r22
    5f28:	b7 95       	ror	r27
    5f2a:	88 0f       	add	r24, r24
    5f2c:	91 1d       	adc	r25, r1
    5f2e:	96 95       	lsr	r25
    5f30:	87 95       	ror	r24
    5f32:	97 f9       	bld	r25, 7
    5f34:	08 95       	ret

00005f36 <__fp_powsodd>:
    5f36:	9f 93       	push	r25
    5f38:	8f 93       	push	r24
    5f3a:	7f 93       	push	r23
    5f3c:	6f 93       	push	r22
    5f3e:	ff 93       	push	r31
    5f40:	ef 93       	push	r30
    5f42:	9b 01       	movw	r18, r22
    5f44:	ac 01       	movw	r20, r24
    5f46:	5d df       	rcall	.-326    	; 0x5e02 <__mulsf3>
    5f48:	ef 91       	pop	r30
    5f4a:	ff 91       	pop	r31
    5f4c:	64 de       	rcall	.-824    	; 0x5c16 <__fp_powser>
    5f4e:	2f 91       	pop	r18
    5f50:	3f 91       	pop	r19
    5f52:	4f 91       	pop	r20
    5f54:	5f 91       	pop	r21
    5f56:	55 cf       	rjmp	.-342    	; 0x5e02 <__mulsf3>

00005f58 <vfprintf>:
    5f58:	2f 92       	push	r2
    5f5a:	3f 92       	push	r3
    5f5c:	4f 92       	push	r4
    5f5e:	5f 92       	push	r5
    5f60:	6f 92       	push	r6
    5f62:	7f 92       	push	r7
    5f64:	8f 92       	push	r8
    5f66:	9f 92       	push	r9
    5f68:	af 92       	push	r10
    5f6a:	bf 92       	push	r11
    5f6c:	cf 92       	push	r12
    5f6e:	df 92       	push	r13
    5f70:	ef 92       	push	r14
    5f72:	ff 92       	push	r15
    5f74:	0f 93       	push	r16
    5f76:	1f 93       	push	r17
    5f78:	cf 93       	push	r28
    5f7a:	df 93       	push	r29
    5f7c:	cd b7       	in	r28, 0x3d	; 61
    5f7e:	de b7       	in	r29, 0x3e	; 62
    5f80:	63 97       	sbiw	r28, 0x13	; 19
    5f82:	0f b6       	in	r0, 0x3f	; 63
    5f84:	f8 94       	cli
    5f86:	de bf       	out	0x3e, r29	; 62
    5f88:	0f be       	out	0x3f, r0	; 63
    5f8a:	cd bf       	out	0x3d, r28	; 61
    5f8c:	7c 01       	movw	r14, r24
    5f8e:	1b 01       	movw	r2, r22
    5f90:	6a 01       	movw	r12, r20
    5f92:	fc 01       	movw	r30, r24
    5f94:	17 82       	std	Z+7, r1	; 0x07
    5f96:	16 82       	std	Z+6, r1	; 0x06
    5f98:	83 81       	ldd	r24, Z+3	; 0x03
    5f9a:	81 ff       	sbrs	r24, 1
    5f9c:	49 c3       	rjmp	.+1682   	; 0x6630 <vfprintf+0x6d8>
    5f9e:	be 01       	movw	r22, r28
    5fa0:	6f 5f       	subi	r22, 0xFF	; 255
    5fa2:	7f 4f       	sbci	r23, 0xFF	; 255
    5fa4:	4b 01       	movw	r8, r22
    5fa6:	f7 01       	movw	r30, r14
    5fa8:	93 81       	ldd	r25, Z+3	; 0x03
    5faa:	f1 01       	movw	r30, r2
    5fac:	93 fd       	sbrc	r25, 3
    5fae:	85 91       	lpm	r24, Z+
    5fb0:	93 ff       	sbrs	r25, 3
    5fb2:	81 91       	ld	r24, Z+
    5fb4:	1f 01       	movw	r2, r30
    5fb6:	88 23       	and	r24, r24
    5fb8:	09 f4       	brne	.+2      	; 0x5fbc <vfprintf+0x64>
    5fba:	36 c3       	rjmp	.+1644   	; 0x6628 <vfprintf+0x6d0>
    5fbc:	85 32       	cpi	r24, 0x25	; 37
    5fbe:	39 f4       	brne	.+14     	; 0x5fce <vfprintf+0x76>
    5fc0:	93 fd       	sbrc	r25, 3
    5fc2:	85 91       	lpm	r24, Z+
    5fc4:	93 ff       	sbrs	r25, 3
    5fc6:	81 91       	ld	r24, Z+
    5fc8:	1f 01       	movw	r2, r30
    5fca:	85 32       	cpi	r24, 0x25	; 37
    5fcc:	31 f4       	brne	.+12     	; 0x5fda <vfprintf+0x82>
    5fce:	b7 01       	movw	r22, r14
    5fd0:	90 e0       	ldi	r25, 0x00	; 0
    5fd2:	77 d4       	rcall	.+2286   	; 0x68c2 <fputc>
    5fd4:	56 01       	movw	r10, r12
    5fd6:	65 01       	movw	r12, r10
    5fd8:	e6 cf       	rjmp	.-52     	; 0x5fa6 <vfprintf+0x4e>
    5fda:	10 e0       	ldi	r17, 0x00	; 0
    5fdc:	51 2c       	mov	r5, r1
    5fde:	20 e0       	ldi	r18, 0x00	; 0
    5fe0:	20 32       	cpi	r18, 0x20	; 32
    5fe2:	a0 f4       	brcc	.+40     	; 0x600c <vfprintf+0xb4>
    5fe4:	8b 32       	cpi	r24, 0x2B	; 43
    5fe6:	69 f0       	breq	.+26     	; 0x6002 <vfprintf+0xaa>
    5fe8:	30 f4       	brcc	.+12     	; 0x5ff6 <vfprintf+0x9e>
    5fea:	80 32       	cpi	r24, 0x20	; 32
    5fec:	59 f0       	breq	.+22     	; 0x6004 <vfprintf+0xac>
    5fee:	83 32       	cpi	r24, 0x23	; 35
    5ff0:	69 f4       	brne	.+26     	; 0x600c <vfprintf+0xb4>
    5ff2:	20 61       	ori	r18, 0x10	; 16
    5ff4:	2c c0       	rjmp	.+88     	; 0x604e <vfprintf+0xf6>
    5ff6:	8d 32       	cpi	r24, 0x2D	; 45
    5ff8:	39 f0       	breq	.+14     	; 0x6008 <vfprintf+0xb0>
    5ffa:	80 33       	cpi	r24, 0x30	; 48
    5ffc:	39 f4       	brne	.+14     	; 0x600c <vfprintf+0xb4>
    5ffe:	21 60       	ori	r18, 0x01	; 1
    6000:	26 c0       	rjmp	.+76     	; 0x604e <vfprintf+0xf6>
    6002:	22 60       	ori	r18, 0x02	; 2
    6004:	24 60       	ori	r18, 0x04	; 4
    6006:	23 c0       	rjmp	.+70     	; 0x604e <vfprintf+0xf6>
    6008:	28 60       	ori	r18, 0x08	; 8
    600a:	21 c0       	rjmp	.+66     	; 0x604e <vfprintf+0xf6>
    600c:	27 fd       	sbrc	r18, 7
    600e:	27 c0       	rjmp	.+78     	; 0x605e <vfprintf+0x106>
    6010:	30 ed       	ldi	r19, 0xD0	; 208
    6012:	38 0f       	add	r19, r24
    6014:	3a 30       	cpi	r19, 0x0A	; 10
    6016:	78 f4       	brcc	.+30     	; 0x6036 <vfprintf+0xde>
    6018:	26 ff       	sbrs	r18, 6
    601a:	06 c0       	rjmp	.+12     	; 0x6028 <vfprintf+0xd0>
    601c:	fa e0       	ldi	r31, 0x0A	; 10
    601e:	1f 9f       	mul	r17, r31
    6020:	30 0d       	add	r19, r0
    6022:	11 24       	eor	r1, r1
    6024:	13 2f       	mov	r17, r19
    6026:	13 c0       	rjmp	.+38     	; 0x604e <vfprintf+0xf6>
    6028:	6a e0       	ldi	r22, 0x0A	; 10
    602a:	56 9e       	mul	r5, r22
    602c:	30 0d       	add	r19, r0
    602e:	11 24       	eor	r1, r1
    6030:	53 2e       	mov	r5, r19
    6032:	20 62       	ori	r18, 0x20	; 32
    6034:	0c c0       	rjmp	.+24     	; 0x604e <vfprintf+0xf6>
    6036:	8e 32       	cpi	r24, 0x2E	; 46
    6038:	21 f4       	brne	.+8      	; 0x6042 <vfprintf+0xea>
    603a:	26 fd       	sbrc	r18, 6
    603c:	f5 c2       	rjmp	.+1514   	; 0x6628 <vfprintf+0x6d0>
    603e:	20 64       	ori	r18, 0x40	; 64
    6040:	06 c0       	rjmp	.+12     	; 0x604e <vfprintf+0xf6>
    6042:	8c 36       	cpi	r24, 0x6C	; 108
    6044:	11 f4       	brne	.+4      	; 0x604a <vfprintf+0xf2>
    6046:	20 68       	ori	r18, 0x80	; 128
    6048:	02 c0       	rjmp	.+4      	; 0x604e <vfprintf+0xf6>
    604a:	88 36       	cpi	r24, 0x68	; 104
    604c:	41 f4       	brne	.+16     	; 0x605e <vfprintf+0x106>
    604e:	f1 01       	movw	r30, r2
    6050:	93 fd       	sbrc	r25, 3
    6052:	85 91       	lpm	r24, Z+
    6054:	93 ff       	sbrs	r25, 3
    6056:	81 91       	ld	r24, Z+
    6058:	1f 01       	movw	r2, r30
    605a:	81 11       	cpse	r24, r1
    605c:	c1 cf       	rjmp	.-126    	; 0x5fe0 <vfprintf+0x88>
    605e:	9b eb       	ldi	r25, 0xBB	; 187
    6060:	98 0f       	add	r25, r24
    6062:	93 30       	cpi	r25, 0x03	; 3
    6064:	18 f4       	brcc	.+6      	; 0x606c <vfprintf+0x114>
    6066:	20 61       	ori	r18, 0x10	; 16
    6068:	80 5e       	subi	r24, 0xE0	; 224
    606a:	06 c0       	rjmp	.+12     	; 0x6078 <vfprintf+0x120>
    606c:	9b e9       	ldi	r25, 0x9B	; 155
    606e:	98 0f       	add	r25, r24
    6070:	93 30       	cpi	r25, 0x03	; 3
    6072:	08 f0       	brcs	.+2      	; 0x6076 <vfprintf+0x11e>
    6074:	9a c1       	rjmp	.+820    	; 0x63aa <vfprintf+0x452>
    6076:	2f 7e       	andi	r18, 0xEF	; 239
    6078:	26 ff       	sbrs	r18, 6
    607a:	16 e0       	ldi	r17, 0x06	; 6
    607c:	2f 73       	andi	r18, 0x3F	; 63
    607e:	72 2e       	mov	r7, r18
    6080:	85 36       	cpi	r24, 0x65	; 101
    6082:	21 f4       	brne	.+8      	; 0x608c <vfprintf+0x134>
    6084:	f2 2f       	mov	r31, r18
    6086:	f0 64       	ori	r31, 0x40	; 64
    6088:	7f 2e       	mov	r7, r31
    608a:	08 c0       	rjmp	.+16     	; 0x609c <vfprintf+0x144>
    608c:	86 36       	cpi	r24, 0x66	; 102
    608e:	21 f4       	brne	.+8      	; 0x6098 <vfprintf+0x140>
    6090:	62 2f       	mov	r22, r18
    6092:	60 68       	ori	r22, 0x80	; 128
    6094:	76 2e       	mov	r7, r22
    6096:	02 c0       	rjmp	.+4      	; 0x609c <vfprintf+0x144>
    6098:	11 11       	cpse	r17, r1
    609a:	11 50       	subi	r17, 0x01	; 1
    609c:	77 fe       	sbrs	r7, 7
    609e:	07 c0       	rjmp	.+14     	; 0x60ae <vfprintf+0x156>
    60a0:	1c 33       	cpi	r17, 0x3C	; 60
    60a2:	48 f4       	brcc	.+18     	; 0x60b6 <vfprintf+0x15e>
    60a4:	44 24       	eor	r4, r4
    60a6:	43 94       	inc	r4
    60a8:	41 0e       	add	r4, r17
    60aa:	27 e0       	ldi	r18, 0x07	; 7
    60ac:	0b c0       	rjmp	.+22     	; 0x60c4 <vfprintf+0x16c>
    60ae:	18 30       	cpi	r17, 0x08	; 8
    60b0:	30 f4       	brcc	.+12     	; 0x60be <vfprintf+0x166>
    60b2:	21 2f       	mov	r18, r17
    60b4:	06 c0       	rjmp	.+12     	; 0x60c2 <vfprintf+0x16a>
    60b6:	27 e0       	ldi	r18, 0x07	; 7
    60b8:	4c e3       	ldi	r20, 0x3C	; 60
    60ba:	44 2e       	mov	r4, r20
    60bc:	03 c0       	rjmp	.+6      	; 0x60c4 <vfprintf+0x16c>
    60be:	27 e0       	ldi	r18, 0x07	; 7
    60c0:	17 e0       	ldi	r17, 0x07	; 7
    60c2:	41 2c       	mov	r4, r1
    60c4:	56 01       	movw	r10, r12
    60c6:	74 e0       	ldi	r23, 0x04	; 4
    60c8:	a7 0e       	add	r10, r23
    60ca:	b1 1c       	adc	r11, r1
    60cc:	f6 01       	movw	r30, r12
    60ce:	60 81       	ld	r22, Z
    60d0:	71 81       	ldd	r23, Z+1	; 0x01
    60d2:	82 81       	ldd	r24, Z+2	; 0x02
    60d4:	93 81       	ldd	r25, Z+3	; 0x03
    60d6:	04 2d       	mov	r16, r4
    60d8:	a4 01       	movw	r20, r8
    60da:	05 d3       	rcall	.+1546   	; 0x66e6 <__ftoa_engine>
    60dc:	6c 01       	movw	r12, r24
    60de:	09 81       	ldd	r16, Y+1	; 0x01
    60e0:	00 ff       	sbrs	r16, 0
    60e2:	02 c0       	rjmp	.+4      	; 0x60e8 <vfprintf+0x190>
    60e4:	03 ff       	sbrs	r16, 3
    60e6:	06 c0       	rjmp	.+12     	; 0x60f4 <vfprintf+0x19c>
    60e8:	71 fc       	sbrc	r7, 1
    60ea:	07 c0       	rjmp	.+14     	; 0x60fa <vfprintf+0x1a2>
    60ec:	72 fc       	sbrc	r7, 2
    60ee:	08 c0       	rjmp	.+16     	; 0x6100 <vfprintf+0x1a8>
    60f0:	61 2c       	mov	r6, r1
    60f2:	08 c0       	rjmp	.+16     	; 0x6104 <vfprintf+0x1ac>
    60f4:	3d e2       	ldi	r19, 0x2D	; 45
    60f6:	63 2e       	mov	r6, r19
    60f8:	05 c0       	rjmp	.+10     	; 0x6104 <vfprintf+0x1ac>
    60fa:	2b e2       	ldi	r18, 0x2B	; 43
    60fc:	62 2e       	mov	r6, r18
    60fe:	02 c0       	rjmp	.+4      	; 0x6104 <vfprintf+0x1ac>
    6100:	90 e2       	ldi	r25, 0x20	; 32
    6102:	69 2e       	mov	r6, r25
    6104:	80 2f       	mov	r24, r16
    6106:	8c 70       	andi	r24, 0x0C	; 12
    6108:	81 f1       	breq	.+96     	; 0x616a <vfprintf+0x212>
    610a:	66 20       	and	r6, r6
    610c:	11 f0       	breq	.+4      	; 0x6112 <vfprintf+0x1ba>
    610e:	84 e0       	ldi	r24, 0x04	; 4
    6110:	01 c0       	rjmp	.+2      	; 0x6114 <vfprintf+0x1bc>
    6112:	83 e0       	ldi	r24, 0x03	; 3
    6114:	85 15       	cp	r24, r5
    6116:	10 f0       	brcs	.+4      	; 0x611c <vfprintf+0x1c4>
    6118:	51 2c       	mov	r5, r1
    611a:	0a c0       	rjmp	.+20     	; 0x6130 <vfprintf+0x1d8>
    611c:	58 1a       	sub	r5, r24
    611e:	73 fc       	sbrc	r7, 3
    6120:	07 c0       	rjmp	.+14     	; 0x6130 <vfprintf+0x1d8>
    6122:	b7 01       	movw	r22, r14
    6124:	80 e2       	ldi	r24, 0x20	; 32
    6126:	90 e0       	ldi	r25, 0x00	; 0
    6128:	cc d3       	rcall	.+1944   	; 0x68c2 <fputc>
    612a:	5a 94       	dec	r5
    612c:	d1 f7       	brne	.-12     	; 0x6122 <vfprintf+0x1ca>
    612e:	f4 cf       	rjmp	.-24     	; 0x6118 <vfprintf+0x1c0>
    6130:	66 20       	and	r6, r6
    6132:	21 f0       	breq	.+8      	; 0x613c <vfprintf+0x1e4>
    6134:	b7 01       	movw	r22, r14
    6136:	86 2d       	mov	r24, r6
    6138:	90 e0       	ldi	r25, 0x00	; 0
    613a:	c3 d3       	rcall	.+1926   	; 0x68c2 <fputc>
    613c:	03 fd       	sbrc	r16, 3
    613e:	03 c0       	rjmp	.+6      	; 0x6146 <vfprintf+0x1ee>
    6140:	00 ea       	ldi	r16, 0xA0	; 160
    6142:	14 e0       	ldi	r17, 0x04	; 4
    6144:	02 c0       	rjmp	.+4      	; 0x614a <vfprintf+0x1f2>
    6146:	0c e9       	ldi	r16, 0x9C	; 156
    6148:	14 e0       	ldi	r17, 0x04	; 4
    614a:	f7 2d       	mov	r31, r7
    614c:	f0 71       	andi	r31, 0x10	; 16
    614e:	7f 2e       	mov	r7, r31
    6150:	f8 01       	movw	r30, r16
    6152:	84 91       	lpm	r24, Z
    6154:	88 23       	and	r24, r24
    6156:	09 f4       	brne	.+2      	; 0x615a <vfprintf+0x202>
    6158:	5e c2       	rjmp	.+1212   	; 0x6616 <vfprintf+0x6be>
    615a:	71 10       	cpse	r7, r1
    615c:	80 52       	subi	r24, 0x20	; 32
    615e:	b7 01       	movw	r22, r14
    6160:	90 e0       	ldi	r25, 0x00	; 0
    6162:	af d3       	rcall	.+1886   	; 0x68c2 <fputc>
    6164:	0f 5f       	subi	r16, 0xFF	; 255
    6166:	1f 4f       	sbci	r17, 0xFF	; 255
    6168:	f3 cf       	rjmp	.-26     	; 0x6150 <vfprintf+0x1f8>
    616a:	77 fe       	sbrs	r7, 7
    616c:	0f c0       	rjmp	.+30     	; 0x618c <vfprintf+0x234>
    616e:	4c 0c       	add	r4, r12
    6170:	04 ff       	sbrs	r16, 4
    6172:	04 c0       	rjmp	.+8      	; 0x617c <vfprintf+0x224>
    6174:	8a 81       	ldd	r24, Y+2	; 0x02
    6176:	81 33       	cpi	r24, 0x31	; 49
    6178:	09 f4       	brne	.+2      	; 0x617c <vfprintf+0x224>
    617a:	4a 94       	dec	r4
    617c:	14 14       	cp	r1, r4
    617e:	74 f5       	brge	.+92     	; 0x61dc <vfprintf+0x284>
    6180:	f8 e0       	ldi	r31, 0x08	; 8
    6182:	f4 15       	cp	r31, r4
    6184:	78 f5       	brcc	.+94     	; 0x61e4 <vfprintf+0x28c>
    6186:	88 e0       	ldi	r24, 0x08	; 8
    6188:	48 2e       	mov	r4, r24
    618a:	2c c0       	rjmp	.+88     	; 0x61e4 <vfprintf+0x28c>
    618c:	76 fc       	sbrc	r7, 6
    618e:	2a c0       	rjmp	.+84     	; 0x61e4 <vfprintf+0x28c>
    6190:	81 2f       	mov	r24, r17
    6192:	90 e0       	ldi	r25, 0x00	; 0
    6194:	8c 15       	cp	r24, r12
    6196:	9d 05       	cpc	r25, r13
    6198:	9c f0       	brlt	.+38     	; 0x61c0 <vfprintf+0x268>
    619a:	6c ef       	ldi	r22, 0xFC	; 252
    619c:	c6 16       	cp	r12, r22
    619e:	6f ef       	ldi	r22, 0xFF	; 255
    61a0:	d6 06       	cpc	r13, r22
    61a2:	74 f0       	brlt	.+28     	; 0x61c0 <vfprintf+0x268>
    61a4:	77 2d       	mov	r23, r7
    61a6:	70 68       	ori	r23, 0x80	; 128
    61a8:	77 2e       	mov	r7, r23
    61aa:	0a c0       	rjmp	.+20     	; 0x61c0 <vfprintf+0x268>
    61ac:	e2 e0       	ldi	r30, 0x02	; 2
    61ae:	f0 e0       	ldi	r31, 0x00	; 0
    61b0:	ec 0f       	add	r30, r28
    61b2:	fd 1f       	adc	r31, r29
    61b4:	e1 0f       	add	r30, r17
    61b6:	f1 1d       	adc	r31, r1
    61b8:	80 81       	ld	r24, Z
    61ba:	80 33       	cpi	r24, 0x30	; 48
    61bc:	19 f4       	brne	.+6      	; 0x61c4 <vfprintf+0x26c>
    61be:	11 50       	subi	r17, 0x01	; 1
    61c0:	11 11       	cpse	r17, r1
    61c2:	f4 cf       	rjmp	.-24     	; 0x61ac <vfprintf+0x254>
    61c4:	77 fe       	sbrs	r7, 7
    61c6:	0e c0       	rjmp	.+28     	; 0x61e4 <vfprintf+0x28c>
    61c8:	44 24       	eor	r4, r4
    61ca:	43 94       	inc	r4
    61cc:	41 0e       	add	r4, r17
    61ce:	81 2f       	mov	r24, r17
    61d0:	90 e0       	ldi	r25, 0x00	; 0
    61d2:	c8 16       	cp	r12, r24
    61d4:	d9 06       	cpc	r13, r25
    61d6:	2c f4       	brge	.+10     	; 0x61e2 <vfprintf+0x28a>
    61d8:	1c 19       	sub	r17, r12
    61da:	04 c0       	rjmp	.+8      	; 0x61e4 <vfprintf+0x28c>
    61dc:	44 24       	eor	r4, r4
    61de:	43 94       	inc	r4
    61e0:	01 c0       	rjmp	.+2      	; 0x61e4 <vfprintf+0x28c>
    61e2:	10 e0       	ldi	r17, 0x00	; 0
    61e4:	77 fe       	sbrs	r7, 7
    61e6:	07 c0       	rjmp	.+14     	; 0x61f6 <vfprintf+0x29e>
    61e8:	1c 14       	cp	r1, r12
    61ea:	1d 04       	cpc	r1, r13
    61ec:	3c f4       	brge	.+14     	; 0x61fc <vfprintf+0x2a4>
    61ee:	96 01       	movw	r18, r12
    61f0:	2f 5f       	subi	r18, 0xFF	; 255
    61f2:	3f 4f       	sbci	r19, 0xFF	; 255
    61f4:	05 c0       	rjmp	.+10     	; 0x6200 <vfprintf+0x2a8>
    61f6:	25 e0       	ldi	r18, 0x05	; 5
    61f8:	30 e0       	ldi	r19, 0x00	; 0
    61fa:	02 c0       	rjmp	.+4      	; 0x6200 <vfprintf+0x2a8>
    61fc:	21 e0       	ldi	r18, 0x01	; 1
    61fe:	30 e0       	ldi	r19, 0x00	; 0
    6200:	66 20       	and	r6, r6
    6202:	11 f0       	breq	.+4      	; 0x6208 <vfprintf+0x2b0>
    6204:	2f 5f       	subi	r18, 0xFF	; 255
    6206:	3f 4f       	sbci	r19, 0xFF	; 255
    6208:	11 23       	and	r17, r17
    620a:	31 f0       	breq	.+12     	; 0x6218 <vfprintf+0x2c0>
    620c:	41 2f       	mov	r20, r17
    620e:	50 e0       	ldi	r21, 0x00	; 0
    6210:	4f 5f       	subi	r20, 0xFF	; 255
    6212:	5f 4f       	sbci	r21, 0xFF	; 255
    6214:	24 0f       	add	r18, r20
    6216:	35 1f       	adc	r19, r21
    6218:	45 2d       	mov	r20, r5
    621a:	50 e0       	ldi	r21, 0x00	; 0
    621c:	24 17       	cp	r18, r20
    621e:	35 07       	cpc	r19, r21
    6220:	14 f4       	brge	.+4      	; 0x6226 <vfprintf+0x2ce>
    6222:	52 1a       	sub	r5, r18
    6224:	01 c0       	rjmp	.+2      	; 0x6228 <vfprintf+0x2d0>
    6226:	51 2c       	mov	r5, r1
    6228:	87 2d       	mov	r24, r7
    622a:	89 70       	andi	r24, 0x09	; 9
    622c:	41 f4       	brne	.+16     	; 0x623e <vfprintf+0x2e6>
    622e:	55 20       	and	r5, r5
    6230:	31 f0       	breq	.+12     	; 0x623e <vfprintf+0x2e6>
    6232:	b7 01       	movw	r22, r14
    6234:	80 e2       	ldi	r24, 0x20	; 32
    6236:	90 e0       	ldi	r25, 0x00	; 0
    6238:	44 d3       	rcall	.+1672   	; 0x68c2 <fputc>
    623a:	5a 94       	dec	r5
    623c:	f8 cf       	rjmp	.-16     	; 0x622e <vfprintf+0x2d6>
    623e:	66 20       	and	r6, r6
    6240:	21 f0       	breq	.+8      	; 0x624a <vfprintf+0x2f2>
    6242:	b7 01       	movw	r22, r14
    6244:	86 2d       	mov	r24, r6
    6246:	90 e0       	ldi	r25, 0x00	; 0
    6248:	3c d3       	rcall	.+1656   	; 0x68c2 <fputc>
    624a:	73 fc       	sbrc	r7, 3
    624c:	08 c0       	rjmp	.+16     	; 0x625e <vfprintf+0x306>
    624e:	55 20       	and	r5, r5
    6250:	31 f0       	breq	.+12     	; 0x625e <vfprintf+0x306>
    6252:	b7 01       	movw	r22, r14
    6254:	80 e3       	ldi	r24, 0x30	; 48
    6256:	90 e0       	ldi	r25, 0x00	; 0
    6258:	34 d3       	rcall	.+1640   	; 0x68c2 <fputc>
    625a:	5a 94       	dec	r5
    625c:	f8 cf       	rjmp	.-16     	; 0x624e <vfprintf+0x2f6>
    625e:	77 fe       	sbrs	r7, 7
    6260:	5d c0       	rjmp	.+186    	; 0x631c <vfprintf+0x3c4>
    6262:	9c 2d       	mov	r25, r12
    6264:	8d 2d       	mov	r24, r13
    6266:	d7 fe       	sbrs	r13, 7
    6268:	02 c0       	rjmp	.+4      	; 0x626e <vfprintf+0x316>
    626a:	90 e0       	ldi	r25, 0x00	; 0
    626c:	80 e0       	ldi	r24, 0x00	; 0
    626e:	69 2e       	mov	r6, r25
    6270:	78 2e       	mov	r7, r24
    6272:	40 e0       	ldi	r20, 0x00	; 0
    6274:	50 e0       	ldi	r21, 0x00	; 0
    6276:	c6 01       	movw	r24, r12
    6278:	84 19       	sub	r24, r4
    627a:	91 09       	sbc	r25, r1
    627c:	9d 87       	std	Y+13, r25	; 0x0d
    627e:	8c 87       	std	Y+12, r24	; 0x0c
    6280:	96 01       	movw	r18, r12
    6282:	26 19       	sub	r18, r6
    6284:	37 09       	sbc	r19, r7
    6286:	28 0d       	add	r18, r8
    6288:	39 1d       	adc	r19, r9
    628a:	81 2f       	mov	r24, r17
    628c:	90 e0       	ldi	r25, 0x00	; 0
    628e:	ee 27       	eor	r30, r30
    6290:	ff 27       	eor	r31, r31
    6292:	e8 1b       	sub	r30, r24
    6294:	f9 0b       	sbc	r31, r25
    6296:	ff 87       	std	Y+15, r31	; 0x0f
    6298:	ee 87       	std	Y+14, r30	; 0x0e
    629a:	ff ef       	ldi	r31, 0xFF	; 255
    629c:	6f 16       	cp	r6, r31
    629e:	7f 06       	cpc	r7, r31
    62a0:	61 f4       	brne	.+24     	; 0x62ba <vfprintf+0x362>
    62a2:	b7 01       	movw	r22, r14
    62a4:	8e e2       	ldi	r24, 0x2E	; 46
    62a6:	90 e0       	ldi	r25, 0x00	; 0
    62a8:	2b 8b       	std	Y+19, r18	; 0x13
    62aa:	3a 8b       	std	Y+18, r19	; 0x12
    62ac:	48 8b       	std	Y+16, r20	; 0x10
    62ae:	59 8b       	std	Y+17, r21	; 0x11
    62b0:	08 d3       	rcall	.+1552   	; 0x68c2 <fputc>
    62b2:	59 89       	ldd	r21, Y+17	; 0x11
    62b4:	48 89       	ldd	r20, Y+16	; 0x10
    62b6:	3a 89       	ldd	r19, Y+18	; 0x12
    62b8:	2b 89       	ldd	r18, Y+19	; 0x13
    62ba:	c6 14       	cp	r12, r6
    62bc:	d7 04       	cpc	r13, r7
    62be:	54 f0       	brlt	.+20     	; 0x62d4 <vfprintf+0x37c>
    62c0:	6c 85       	ldd	r22, Y+12	; 0x0c
    62c2:	7d 85       	ldd	r23, Y+13	; 0x0d
    62c4:	66 15       	cp	r22, r6
    62c6:	77 05       	cpc	r23, r7
    62c8:	2c f4       	brge	.+10     	; 0x62d4 <vfprintf+0x37c>
    62ca:	f9 01       	movw	r30, r18
    62cc:	e4 0f       	add	r30, r20
    62ce:	f5 1f       	adc	r31, r21
    62d0:	81 81       	ldd	r24, Z+1	; 0x01
    62d2:	01 c0       	rjmp	.+2      	; 0x62d6 <vfprintf+0x37e>
    62d4:	80 e3       	ldi	r24, 0x30	; 48
    62d6:	71 e0       	ldi	r23, 0x01	; 1
    62d8:	67 1a       	sub	r6, r23
    62da:	71 08       	sbc	r7, r1
    62dc:	4f 5f       	subi	r20, 0xFF	; 255
    62de:	5f 4f       	sbci	r21, 0xFF	; 255
    62e0:	ee 85       	ldd	r30, Y+14	; 0x0e
    62e2:	ff 85       	ldd	r31, Y+15	; 0x0f
    62e4:	6e 16       	cp	r6, r30
    62e6:	7f 06       	cpc	r7, r31
    62e8:	64 f0       	brlt	.+24     	; 0x6302 <vfprintf+0x3aa>
    62ea:	b7 01       	movw	r22, r14
    62ec:	90 e0       	ldi	r25, 0x00	; 0
    62ee:	2b 8b       	std	Y+19, r18	; 0x13
    62f0:	3a 8b       	std	Y+18, r19	; 0x12
    62f2:	48 8b       	std	Y+16, r20	; 0x10
    62f4:	59 8b       	std	Y+17, r21	; 0x11
    62f6:	e5 d2       	rcall	.+1482   	; 0x68c2 <fputc>
    62f8:	2b 89       	ldd	r18, Y+19	; 0x13
    62fa:	3a 89       	ldd	r19, Y+18	; 0x12
    62fc:	48 89       	ldd	r20, Y+16	; 0x10
    62fe:	59 89       	ldd	r21, Y+17	; 0x11
    6300:	cc cf       	rjmp	.-104    	; 0x629a <vfprintf+0x342>
    6302:	6c 14       	cp	r6, r12
    6304:	7d 04       	cpc	r7, r13
    6306:	39 f4       	brne	.+14     	; 0x6316 <vfprintf+0x3be>
    6308:	9a 81       	ldd	r25, Y+2	; 0x02
    630a:	96 33       	cpi	r25, 0x36	; 54
    630c:	18 f4       	brcc	.+6      	; 0x6314 <vfprintf+0x3bc>
    630e:	95 33       	cpi	r25, 0x35	; 53
    6310:	11 f4       	brne	.+4      	; 0x6316 <vfprintf+0x3be>
    6312:	04 ff       	sbrs	r16, 4
    6314:	81 e3       	ldi	r24, 0x31	; 49
    6316:	b7 01       	movw	r22, r14
    6318:	90 e0       	ldi	r25, 0x00	; 0
    631a:	45 c0       	rjmp	.+138    	; 0x63a6 <vfprintf+0x44e>
    631c:	8a 81       	ldd	r24, Y+2	; 0x02
    631e:	81 33       	cpi	r24, 0x31	; 49
    6320:	09 f0       	breq	.+2      	; 0x6324 <vfprintf+0x3cc>
    6322:	0f 7e       	andi	r16, 0xEF	; 239
    6324:	b7 01       	movw	r22, r14
    6326:	90 e0       	ldi	r25, 0x00	; 0
    6328:	cc d2       	rcall	.+1432   	; 0x68c2 <fputc>
    632a:	11 11       	cpse	r17, r1
    632c:	05 c0       	rjmp	.+10     	; 0x6338 <vfprintf+0x3e0>
    632e:	74 fe       	sbrs	r7, 4
    6330:	16 c0       	rjmp	.+44     	; 0x635e <vfprintf+0x406>
    6332:	85 e4       	ldi	r24, 0x45	; 69
    6334:	90 e0       	ldi	r25, 0x00	; 0
    6336:	15 c0       	rjmp	.+42     	; 0x6362 <vfprintf+0x40a>
    6338:	b7 01       	movw	r22, r14
    633a:	8e e2       	ldi	r24, 0x2E	; 46
    633c:	90 e0       	ldi	r25, 0x00	; 0
    633e:	c1 d2       	rcall	.+1410   	; 0x68c2 <fputc>
    6340:	82 e0       	ldi	r24, 0x02	; 2
    6342:	66 24       	eor	r6, r6
    6344:	63 94       	inc	r6
    6346:	68 0e       	add	r6, r24
    6348:	f4 01       	movw	r30, r8
    634a:	e8 0f       	add	r30, r24
    634c:	f1 1d       	adc	r31, r1
    634e:	80 81       	ld	r24, Z
    6350:	b7 01       	movw	r22, r14
    6352:	90 e0       	ldi	r25, 0x00	; 0
    6354:	b6 d2       	rcall	.+1388   	; 0x68c2 <fputc>
    6356:	11 50       	subi	r17, 0x01	; 1
    6358:	51 f3       	breq	.-44     	; 0x632e <vfprintf+0x3d6>
    635a:	86 2d       	mov	r24, r6
    635c:	f2 cf       	rjmp	.-28     	; 0x6342 <vfprintf+0x3ea>
    635e:	85 e6       	ldi	r24, 0x65	; 101
    6360:	90 e0       	ldi	r25, 0x00	; 0
    6362:	b7 01       	movw	r22, r14
    6364:	ae d2       	rcall	.+1372   	; 0x68c2 <fputc>
    6366:	d7 fc       	sbrc	r13, 7
    6368:	05 c0       	rjmp	.+10     	; 0x6374 <vfprintf+0x41c>
    636a:	c1 14       	cp	r12, r1
    636c:	d1 04       	cpc	r13, r1
    636e:	39 f4       	brne	.+14     	; 0x637e <vfprintf+0x426>
    6370:	04 ff       	sbrs	r16, 4
    6372:	05 c0       	rjmp	.+10     	; 0x637e <vfprintf+0x426>
    6374:	d1 94       	neg	r13
    6376:	c1 94       	neg	r12
    6378:	d1 08       	sbc	r13, r1
    637a:	8d e2       	ldi	r24, 0x2D	; 45
    637c:	01 c0       	rjmp	.+2      	; 0x6380 <vfprintf+0x428>
    637e:	8b e2       	ldi	r24, 0x2B	; 43
    6380:	b7 01       	movw	r22, r14
    6382:	90 e0       	ldi	r25, 0x00	; 0
    6384:	9e d2       	rcall	.+1340   	; 0x68c2 <fputc>
    6386:	80 e3       	ldi	r24, 0x30	; 48
    6388:	6a e0       	ldi	r22, 0x0A	; 10
    638a:	c6 16       	cp	r12, r22
    638c:	d1 04       	cpc	r13, r1
    638e:	2c f0       	brlt	.+10     	; 0x639a <vfprintf+0x442>
    6390:	8f 5f       	subi	r24, 0xFF	; 255
    6392:	fa e0       	ldi	r31, 0x0A	; 10
    6394:	cf 1a       	sub	r12, r31
    6396:	d1 08       	sbc	r13, r1
    6398:	f7 cf       	rjmp	.-18     	; 0x6388 <vfprintf+0x430>
    639a:	b7 01       	movw	r22, r14
    639c:	90 e0       	ldi	r25, 0x00	; 0
    639e:	91 d2       	rcall	.+1314   	; 0x68c2 <fputc>
    63a0:	b7 01       	movw	r22, r14
    63a2:	c6 01       	movw	r24, r12
    63a4:	c0 96       	adiw	r24, 0x30	; 48
    63a6:	8d d2       	rcall	.+1306   	; 0x68c2 <fputc>
    63a8:	36 c1       	rjmp	.+620    	; 0x6616 <vfprintf+0x6be>
    63aa:	83 36       	cpi	r24, 0x63	; 99
    63ac:	31 f0       	breq	.+12     	; 0x63ba <vfprintf+0x462>
    63ae:	83 37       	cpi	r24, 0x73	; 115
    63b0:	79 f0       	breq	.+30     	; 0x63d0 <vfprintf+0x478>
    63b2:	83 35       	cpi	r24, 0x53	; 83
    63b4:	09 f0       	breq	.+2      	; 0x63b8 <vfprintf+0x460>
    63b6:	54 c0       	rjmp	.+168    	; 0x6460 <vfprintf+0x508>
    63b8:	20 c0       	rjmp	.+64     	; 0x63fa <vfprintf+0x4a2>
    63ba:	56 01       	movw	r10, r12
    63bc:	72 e0       	ldi	r23, 0x02	; 2
    63be:	a7 0e       	add	r10, r23
    63c0:	b1 1c       	adc	r11, r1
    63c2:	f6 01       	movw	r30, r12
    63c4:	80 81       	ld	r24, Z
    63c6:	89 83       	std	Y+1, r24	; 0x01
    63c8:	01 e0       	ldi	r16, 0x01	; 1
    63ca:	10 e0       	ldi	r17, 0x00	; 0
    63cc:	64 01       	movw	r12, r8
    63ce:	13 c0       	rjmp	.+38     	; 0x63f6 <vfprintf+0x49e>
    63d0:	56 01       	movw	r10, r12
    63d2:	f2 e0       	ldi	r31, 0x02	; 2
    63d4:	af 0e       	add	r10, r31
    63d6:	b1 1c       	adc	r11, r1
    63d8:	f6 01       	movw	r30, r12
    63da:	c0 80       	ld	r12, Z
    63dc:	d1 80       	ldd	r13, Z+1	; 0x01
    63de:	26 ff       	sbrs	r18, 6
    63e0:	03 c0       	rjmp	.+6      	; 0x63e8 <vfprintf+0x490>
    63e2:	61 2f       	mov	r22, r17
    63e4:	70 e0       	ldi	r23, 0x00	; 0
    63e6:	02 c0       	rjmp	.+4      	; 0x63ec <vfprintf+0x494>
    63e8:	6f ef       	ldi	r22, 0xFF	; 255
    63ea:	7f ef       	ldi	r23, 0xFF	; 255
    63ec:	c6 01       	movw	r24, r12
    63ee:	2b 8b       	std	Y+19, r18	; 0x13
    63f0:	5d d2       	rcall	.+1210   	; 0x68ac <strnlen>
    63f2:	8c 01       	movw	r16, r24
    63f4:	2b 89       	ldd	r18, Y+19	; 0x13
    63f6:	2f 77       	andi	r18, 0x7F	; 127
    63f8:	14 c0       	rjmp	.+40     	; 0x6422 <vfprintf+0x4ca>
    63fa:	56 01       	movw	r10, r12
    63fc:	f2 e0       	ldi	r31, 0x02	; 2
    63fe:	af 0e       	add	r10, r31
    6400:	b1 1c       	adc	r11, r1
    6402:	f6 01       	movw	r30, r12
    6404:	c0 80       	ld	r12, Z
    6406:	d1 80       	ldd	r13, Z+1	; 0x01
    6408:	26 ff       	sbrs	r18, 6
    640a:	03 c0       	rjmp	.+6      	; 0x6412 <vfprintf+0x4ba>
    640c:	61 2f       	mov	r22, r17
    640e:	70 e0       	ldi	r23, 0x00	; 0
    6410:	02 c0       	rjmp	.+4      	; 0x6416 <vfprintf+0x4be>
    6412:	6f ef       	ldi	r22, 0xFF	; 255
    6414:	7f ef       	ldi	r23, 0xFF	; 255
    6416:	c6 01       	movw	r24, r12
    6418:	2b 8b       	std	Y+19, r18	; 0x13
    641a:	3d d2       	rcall	.+1146   	; 0x6896 <strnlen_P>
    641c:	8c 01       	movw	r16, r24
    641e:	2b 89       	ldd	r18, Y+19	; 0x13
    6420:	20 68       	ori	r18, 0x80	; 128
    6422:	72 2e       	mov	r7, r18
    6424:	23 fd       	sbrc	r18, 3
    6426:	18 c0       	rjmp	.+48     	; 0x6458 <vfprintf+0x500>
    6428:	85 2d       	mov	r24, r5
    642a:	90 e0       	ldi	r25, 0x00	; 0
    642c:	08 17       	cp	r16, r24
    642e:	19 07       	cpc	r17, r25
    6430:	98 f4       	brcc	.+38     	; 0x6458 <vfprintf+0x500>
    6432:	b7 01       	movw	r22, r14
    6434:	80 e2       	ldi	r24, 0x20	; 32
    6436:	90 e0       	ldi	r25, 0x00	; 0
    6438:	44 d2       	rcall	.+1160   	; 0x68c2 <fputc>
    643a:	5a 94       	dec	r5
    643c:	f5 cf       	rjmp	.-22     	; 0x6428 <vfprintf+0x4d0>
    643e:	f6 01       	movw	r30, r12
    6440:	77 fc       	sbrc	r7, 7
    6442:	85 91       	lpm	r24, Z+
    6444:	77 fe       	sbrs	r7, 7
    6446:	81 91       	ld	r24, Z+
    6448:	6f 01       	movw	r12, r30
    644a:	b7 01       	movw	r22, r14
    644c:	90 e0       	ldi	r25, 0x00	; 0
    644e:	39 d2       	rcall	.+1138   	; 0x68c2 <fputc>
    6450:	51 10       	cpse	r5, r1
    6452:	5a 94       	dec	r5
    6454:	01 50       	subi	r16, 0x01	; 1
    6456:	11 09       	sbc	r17, r1
    6458:	01 15       	cp	r16, r1
    645a:	11 05       	cpc	r17, r1
    645c:	81 f7       	brne	.-32     	; 0x643e <vfprintf+0x4e6>
    645e:	db c0       	rjmp	.+438    	; 0x6616 <vfprintf+0x6be>
    6460:	84 36       	cpi	r24, 0x64	; 100
    6462:	11 f0       	breq	.+4      	; 0x6468 <vfprintf+0x510>
    6464:	89 36       	cpi	r24, 0x69	; 105
    6466:	49 f5       	brne	.+82     	; 0x64ba <vfprintf+0x562>
    6468:	56 01       	movw	r10, r12
    646a:	27 ff       	sbrs	r18, 7
    646c:	09 c0       	rjmp	.+18     	; 0x6480 <vfprintf+0x528>
    646e:	f4 e0       	ldi	r31, 0x04	; 4
    6470:	af 0e       	add	r10, r31
    6472:	b1 1c       	adc	r11, r1
    6474:	f6 01       	movw	r30, r12
    6476:	60 81       	ld	r22, Z
    6478:	71 81       	ldd	r23, Z+1	; 0x01
    647a:	82 81       	ldd	r24, Z+2	; 0x02
    647c:	93 81       	ldd	r25, Z+3	; 0x03
    647e:	0a c0       	rjmp	.+20     	; 0x6494 <vfprintf+0x53c>
    6480:	f2 e0       	ldi	r31, 0x02	; 2
    6482:	af 0e       	add	r10, r31
    6484:	b1 1c       	adc	r11, r1
    6486:	f6 01       	movw	r30, r12
    6488:	60 81       	ld	r22, Z
    648a:	71 81       	ldd	r23, Z+1	; 0x01
    648c:	88 27       	eor	r24, r24
    648e:	77 fd       	sbrc	r23, 7
    6490:	80 95       	com	r24
    6492:	98 2f       	mov	r25, r24
    6494:	02 2f       	mov	r16, r18
    6496:	0f 76       	andi	r16, 0x6F	; 111
    6498:	97 ff       	sbrs	r25, 7
    649a:	08 c0       	rjmp	.+16     	; 0x64ac <vfprintf+0x554>
    649c:	90 95       	com	r25
    649e:	80 95       	com	r24
    64a0:	70 95       	com	r23
    64a2:	61 95       	neg	r22
    64a4:	7f 4f       	sbci	r23, 0xFF	; 255
    64a6:	8f 4f       	sbci	r24, 0xFF	; 255
    64a8:	9f 4f       	sbci	r25, 0xFF	; 255
    64aa:	00 68       	ori	r16, 0x80	; 128
    64ac:	2a e0       	ldi	r18, 0x0A	; 10
    64ae:	30 e0       	ldi	r19, 0x00	; 0
    64b0:	a4 01       	movw	r20, r8
    64b2:	67 d2       	rcall	.+1230   	; 0x6982 <__ultoa_invert>
    64b4:	c8 2e       	mov	r12, r24
    64b6:	c8 18       	sub	r12, r8
    64b8:	3d c0       	rjmp	.+122    	; 0x6534 <vfprintf+0x5dc>
    64ba:	02 2f       	mov	r16, r18
    64bc:	85 37       	cpi	r24, 0x75	; 117
    64be:	21 f4       	brne	.+8      	; 0x64c8 <vfprintf+0x570>
    64c0:	0f 7e       	andi	r16, 0xEF	; 239
    64c2:	2a e0       	ldi	r18, 0x0A	; 10
    64c4:	30 e0       	ldi	r19, 0x00	; 0
    64c6:	1d c0       	rjmp	.+58     	; 0x6502 <vfprintf+0x5aa>
    64c8:	09 7f       	andi	r16, 0xF9	; 249
    64ca:	8f 36       	cpi	r24, 0x6F	; 111
    64cc:	91 f0       	breq	.+36     	; 0x64f2 <vfprintf+0x59a>
    64ce:	18 f4       	brcc	.+6      	; 0x64d6 <vfprintf+0x57e>
    64d0:	88 35       	cpi	r24, 0x58	; 88
    64d2:	59 f0       	breq	.+22     	; 0x64ea <vfprintf+0x592>
    64d4:	a9 c0       	rjmp	.+338    	; 0x6628 <vfprintf+0x6d0>
    64d6:	80 37       	cpi	r24, 0x70	; 112
    64d8:	19 f0       	breq	.+6      	; 0x64e0 <vfprintf+0x588>
    64da:	88 37       	cpi	r24, 0x78	; 120
    64dc:	11 f0       	breq	.+4      	; 0x64e2 <vfprintf+0x58a>
    64de:	a4 c0       	rjmp	.+328    	; 0x6628 <vfprintf+0x6d0>
    64e0:	00 61       	ori	r16, 0x10	; 16
    64e2:	04 ff       	sbrs	r16, 4
    64e4:	09 c0       	rjmp	.+18     	; 0x64f8 <vfprintf+0x5a0>
    64e6:	04 60       	ori	r16, 0x04	; 4
    64e8:	07 c0       	rjmp	.+14     	; 0x64f8 <vfprintf+0x5a0>
    64ea:	24 ff       	sbrs	r18, 4
    64ec:	08 c0       	rjmp	.+16     	; 0x64fe <vfprintf+0x5a6>
    64ee:	06 60       	ori	r16, 0x06	; 6
    64f0:	06 c0       	rjmp	.+12     	; 0x64fe <vfprintf+0x5a6>
    64f2:	28 e0       	ldi	r18, 0x08	; 8
    64f4:	30 e0       	ldi	r19, 0x00	; 0
    64f6:	05 c0       	rjmp	.+10     	; 0x6502 <vfprintf+0x5aa>
    64f8:	20 e1       	ldi	r18, 0x10	; 16
    64fa:	30 e0       	ldi	r19, 0x00	; 0
    64fc:	02 c0       	rjmp	.+4      	; 0x6502 <vfprintf+0x5aa>
    64fe:	20 e1       	ldi	r18, 0x10	; 16
    6500:	32 e0       	ldi	r19, 0x02	; 2
    6502:	56 01       	movw	r10, r12
    6504:	07 ff       	sbrs	r16, 7
    6506:	09 c0       	rjmp	.+18     	; 0x651a <vfprintf+0x5c2>
    6508:	f4 e0       	ldi	r31, 0x04	; 4
    650a:	af 0e       	add	r10, r31
    650c:	b1 1c       	adc	r11, r1
    650e:	f6 01       	movw	r30, r12
    6510:	60 81       	ld	r22, Z
    6512:	71 81       	ldd	r23, Z+1	; 0x01
    6514:	82 81       	ldd	r24, Z+2	; 0x02
    6516:	93 81       	ldd	r25, Z+3	; 0x03
    6518:	08 c0       	rjmp	.+16     	; 0x652a <vfprintf+0x5d2>
    651a:	f2 e0       	ldi	r31, 0x02	; 2
    651c:	af 0e       	add	r10, r31
    651e:	b1 1c       	adc	r11, r1
    6520:	f6 01       	movw	r30, r12
    6522:	60 81       	ld	r22, Z
    6524:	71 81       	ldd	r23, Z+1	; 0x01
    6526:	80 e0       	ldi	r24, 0x00	; 0
    6528:	90 e0       	ldi	r25, 0x00	; 0
    652a:	a4 01       	movw	r20, r8
    652c:	2a d2       	rcall	.+1108   	; 0x6982 <__ultoa_invert>
    652e:	c8 2e       	mov	r12, r24
    6530:	c8 18       	sub	r12, r8
    6532:	0f 77       	andi	r16, 0x7F	; 127
    6534:	06 ff       	sbrs	r16, 6
    6536:	0b c0       	rjmp	.+22     	; 0x654e <vfprintf+0x5f6>
    6538:	20 2f       	mov	r18, r16
    653a:	2e 7f       	andi	r18, 0xFE	; 254
    653c:	c1 16       	cp	r12, r17
    653e:	50 f4       	brcc	.+20     	; 0x6554 <vfprintf+0x5fc>
    6540:	04 ff       	sbrs	r16, 4
    6542:	0a c0       	rjmp	.+20     	; 0x6558 <vfprintf+0x600>
    6544:	02 fd       	sbrc	r16, 2
    6546:	08 c0       	rjmp	.+16     	; 0x6558 <vfprintf+0x600>
    6548:	20 2f       	mov	r18, r16
    654a:	2e 7e       	andi	r18, 0xEE	; 238
    654c:	05 c0       	rjmp	.+10     	; 0x6558 <vfprintf+0x600>
    654e:	dc 2c       	mov	r13, r12
    6550:	20 2f       	mov	r18, r16
    6552:	03 c0       	rjmp	.+6      	; 0x655a <vfprintf+0x602>
    6554:	dc 2c       	mov	r13, r12
    6556:	01 c0       	rjmp	.+2      	; 0x655a <vfprintf+0x602>
    6558:	d1 2e       	mov	r13, r17
    655a:	24 ff       	sbrs	r18, 4
    655c:	0d c0       	rjmp	.+26     	; 0x6578 <vfprintf+0x620>
    655e:	fe 01       	movw	r30, r28
    6560:	ec 0d       	add	r30, r12
    6562:	f1 1d       	adc	r31, r1
    6564:	80 81       	ld	r24, Z
    6566:	80 33       	cpi	r24, 0x30	; 48
    6568:	11 f4       	brne	.+4      	; 0x656e <vfprintf+0x616>
    656a:	29 7e       	andi	r18, 0xE9	; 233
    656c:	09 c0       	rjmp	.+18     	; 0x6580 <vfprintf+0x628>
    656e:	22 ff       	sbrs	r18, 2
    6570:	06 c0       	rjmp	.+12     	; 0x657e <vfprintf+0x626>
    6572:	d3 94       	inc	r13
    6574:	d3 94       	inc	r13
    6576:	04 c0       	rjmp	.+8      	; 0x6580 <vfprintf+0x628>
    6578:	82 2f       	mov	r24, r18
    657a:	86 78       	andi	r24, 0x86	; 134
    657c:	09 f0       	breq	.+2      	; 0x6580 <vfprintf+0x628>
    657e:	d3 94       	inc	r13
    6580:	23 fd       	sbrc	r18, 3
    6582:	12 c0       	rjmp	.+36     	; 0x65a8 <vfprintf+0x650>
    6584:	20 ff       	sbrs	r18, 0
    6586:	06 c0       	rjmp	.+12     	; 0x6594 <vfprintf+0x63c>
    6588:	1c 2d       	mov	r17, r12
    658a:	d5 14       	cp	r13, r5
    658c:	18 f4       	brcc	.+6      	; 0x6594 <vfprintf+0x63c>
    658e:	15 0d       	add	r17, r5
    6590:	1d 19       	sub	r17, r13
    6592:	d5 2c       	mov	r13, r5
    6594:	d5 14       	cp	r13, r5
    6596:	60 f4       	brcc	.+24     	; 0x65b0 <vfprintf+0x658>
    6598:	b7 01       	movw	r22, r14
    659a:	80 e2       	ldi	r24, 0x20	; 32
    659c:	90 e0       	ldi	r25, 0x00	; 0
    659e:	2b 8b       	std	Y+19, r18	; 0x13
    65a0:	90 d1       	rcall	.+800    	; 0x68c2 <fputc>
    65a2:	d3 94       	inc	r13
    65a4:	2b 89       	ldd	r18, Y+19	; 0x13
    65a6:	f6 cf       	rjmp	.-20     	; 0x6594 <vfprintf+0x63c>
    65a8:	d5 14       	cp	r13, r5
    65aa:	10 f4       	brcc	.+4      	; 0x65b0 <vfprintf+0x658>
    65ac:	5d 18       	sub	r5, r13
    65ae:	01 c0       	rjmp	.+2      	; 0x65b2 <vfprintf+0x65a>
    65b0:	51 2c       	mov	r5, r1
    65b2:	24 ff       	sbrs	r18, 4
    65b4:	11 c0       	rjmp	.+34     	; 0x65d8 <vfprintf+0x680>
    65b6:	b7 01       	movw	r22, r14
    65b8:	80 e3       	ldi	r24, 0x30	; 48
    65ba:	90 e0       	ldi	r25, 0x00	; 0
    65bc:	2b 8b       	std	Y+19, r18	; 0x13
    65be:	81 d1       	rcall	.+770    	; 0x68c2 <fputc>
    65c0:	2b 89       	ldd	r18, Y+19	; 0x13
    65c2:	22 ff       	sbrs	r18, 2
    65c4:	16 c0       	rjmp	.+44     	; 0x65f2 <vfprintf+0x69a>
    65c6:	21 ff       	sbrs	r18, 1
    65c8:	03 c0       	rjmp	.+6      	; 0x65d0 <vfprintf+0x678>
    65ca:	88 e5       	ldi	r24, 0x58	; 88
    65cc:	90 e0       	ldi	r25, 0x00	; 0
    65ce:	02 c0       	rjmp	.+4      	; 0x65d4 <vfprintf+0x67c>
    65d0:	88 e7       	ldi	r24, 0x78	; 120
    65d2:	90 e0       	ldi	r25, 0x00	; 0
    65d4:	b7 01       	movw	r22, r14
    65d6:	0c c0       	rjmp	.+24     	; 0x65f0 <vfprintf+0x698>
    65d8:	82 2f       	mov	r24, r18
    65da:	86 78       	andi	r24, 0x86	; 134
    65dc:	51 f0       	breq	.+20     	; 0x65f2 <vfprintf+0x69a>
    65de:	21 fd       	sbrc	r18, 1
    65e0:	02 c0       	rjmp	.+4      	; 0x65e6 <vfprintf+0x68e>
    65e2:	80 e2       	ldi	r24, 0x20	; 32
    65e4:	01 c0       	rjmp	.+2      	; 0x65e8 <vfprintf+0x690>
    65e6:	8b e2       	ldi	r24, 0x2B	; 43
    65e8:	27 fd       	sbrc	r18, 7
    65ea:	8d e2       	ldi	r24, 0x2D	; 45
    65ec:	b7 01       	movw	r22, r14
    65ee:	90 e0       	ldi	r25, 0x00	; 0
    65f0:	68 d1       	rcall	.+720    	; 0x68c2 <fputc>
    65f2:	c1 16       	cp	r12, r17
    65f4:	30 f4       	brcc	.+12     	; 0x6602 <vfprintf+0x6aa>
    65f6:	b7 01       	movw	r22, r14
    65f8:	80 e3       	ldi	r24, 0x30	; 48
    65fa:	90 e0       	ldi	r25, 0x00	; 0
    65fc:	62 d1       	rcall	.+708    	; 0x68c2 <fputc>
    65fe:	11 50       	subi	r17, 0x01	; 1
    6600:	f8 cf       	rjmp	.-16     	; 0x65f2 <vfprintf+0x69a>
    6602:	ca 94       	dec	r12
    6604:	f4 01       	movw	r30, r8
    6606:	ec 0d       	add	r30, r12
    6608:	f1 1d       	adc	r31, r1
    660a:	80 81       	ld	r24, Z
    660c:	b7 01       	movw	r22, r14
    660e:	90 e0       	ldi	r25, 0x00	; 0
    6610:	58 d1       	rcall	.+688    	; 0x68c2 <fputc>
    6612:	c1 10       	cpse	r12, r1
    6614:	f6 cf       	rjmp	.-20     	; 0x6602 <vfprintf+0x6aa>
    6616:	55 20       	and	r5, r5
    6618:	09 f4       	brne	.+2      	; 0x661c <vfprintf+0x6c4>
    661a:	dd cc       	rjmp	.-1606   	; 0x5fd6 <vfprintf+0x7e>
    661c:	b7 01       	movw	r22, r14
    661e:	80 e2       	ldi	r24, 0x20	; 32
    6620:	90 e0       	ldi	r25, 0x00	; 0
    6622:	4f d1       	rcall	.+670    	; 0x68c2 <fputc>
    6624:	5a 94       	dec	r5
    6626:	f7 cf       	rjmp	.-18     	; 0x6616 <vfprintf+0x6be>
    6628:	f7 01       	movw	r30, r14
    662a:	86 81       	ldd	r24, Z+6	; 0x06
    662c:	97 81       	ldd	r25, Z+7	; 0x07
    662e:	02 c0       	rjmp	.+4      	; 0x6634 <vfprintf+0x6dc>
    6630:	8f ef       	ldi	r24, 0xFF	; 255
    6632:	9f ef       	ldi	r25, 0xFF	; 255
    6634:	63 96       	adiw	r28, 0x13	; 19
    6636:	0f b6       	in	r0, 0x3f	; 63
    6638:	f8 94       	cli
    663a:	de bf       	out	0x3e, r29	; 62
    663c:	0f be       	out	0x3f, r0	; 63
    663e:	cd bf       	out	0x3d, r28	; 61
    6640:	df 91       	pop	r29
    6642:	cf 91       	pop	r28
    6644:	1f 91       	pop	r17
    6646:	0f 91       	pop	r16
    6648:	ff 90       	pop	r15
    664a:	ef 90       	pop	r14
    664c:	df 90       	pop	r13
    664e:	cf 90       	pop	r12
    6650:	bf 90       	pop	r11
    6652:	af 90       	pop	r10
    6654:	9f 90       	pop	r9
    6656:	8f 90       	pop	r8
    6658:	7f 90       	pop	r7
    665a:	6f 90       	pop	r6
    665c:	5f 90       	pop	r5
    665e:	4f 90       	pop	r4
    6660:	3f 90       	pop	r3
    6662:	2f 90       	pop	r2
    6664:	08 95       	ret

00006666 <__udivmodhi4>:
    6666:	aa 1b       	sub	r26, r26
    6668:	bb 1b       	sub	r27, r27
    666a:	51 e1       	ldi	r21, 0x11	; 17
    666c:	07 c0       	rjmp	.+14     	; 0x667c <__udivmodhi4_ep>

0000666e <__udivmodhi4_loop>:
    666e:	aa 1f       	adc	r26, r26
    6670:	bb 1f       	adc	r27, r27
    6672:	a6 17       	cp	r26, r22
    6674:	b7 07       	cpc	r27, r23
    6676:	10 f0       	brcs	.+4      	; 0x667c <__udivmodhi4_ep>
    6678:	a6 1b       	sub	r26, r22
    667a:	b7 0b       	sbc	r27, r23

0000667c <__udivmodhi4_ep>:
    667c:	88 1f       	adc	r24, r24
    667e:	99 1f       	adc	r25, r25
    6680:	5a 95       	dec	r21
    6682:	a9 f7       	brne	.-22     	; 0x666e <__udivmodhi4_loop>
    6684:	80 95       	com	r24
    6686:	90 95       	com	r25
    6688:	bc 01       	movw	r22, r24
    668a:	cd 01       	movw	r24, r26
    668c:	08 95       	ret

0000668e <__divmodhi4>:
    668e:	97 fb       	bst	r25, 7
    6690:	07 2e       	mov	r0, r23
    6692:	16 f4       	brtc	.+4      	; 0x6698 <__divmodhi4+0xa>
    6694:	00 94       	com	r0
    6696:	06 d0       	rcall	.+12     	; 0x66a4 <__divmodhi4_neg1>
    6698:	77 fd       	sbrc	r23, 7
    669a:	08 d0       	rcall	.+16     	; 0x66ac <__divmodhi4_neg2>
    669c:	e4 df       	rcall	.-56     	; 0x6666 <__udivmodhi4>
    669e:	07 fc       	sbrc	r0, 7
    66a0:	05 d0       	rcall	.+10     	; 0x66ac <__divmodhi4_neg2>
    66a2:	3e f4       	brtc	.+14     	; 0x66b2 <__divmodhi4_exit>

000066a4 <__divmodhi4_neg1>:
    66a4:	90 95       	com	r25
    66a6:	81 95       	neg	r24
    66a8:	9f 4f       	sbci	r25, 0xFF	; 255
    66aa:	08 95       	ret

000066ac <__divmodhi4_neg2>:
    66ac:	70 95       	com	r23
    66ae:	61 95       	neg	r22
    66b0:	7f 4f       	sbci	r23, 0xFF	; 255

000066b2 <__divmodhi4_exit>:
    66b2:	08 95       	ret

000066b4 <__tablejump2__>:
    66b4:	ee 0f       	add	r30, r30
    66b6:	ff 1f       	adc	r31, r31

000066b8 <__tablejump__>:
    66b8:	05 90       	lpm	r0, Z+
    66ba:	f4 91       	lpm	r31, Z
    66bc:	e0 2d       	mov	r30, r0
    66be:	09 94       	ijmp

000066c0 <__umulhisi3>:
    66c0:	a2 9f       	mul	r26, r18
    66c2:	b0 01       	movw	r22, r0
    66c4:	b3 9f       	mul	r27, r19
    66c6:	c0 01       	movw	r24, r0
    66c8:	a3 9f       	mul	r26, r19
    66ca:	70 0d       	add	r23, r0
    66cc:	81 1d       	adc	r24, r1
    66ce:	11 24       	eor	r1, r1
    66d0:	91 1d       	adc	r25, r1
    66d2:	b2 9f       	mul	r27, r18
    66d4:	70 0d       	add	r23, r0
    66d6:	81 1d       	adc	r24, r1
    66d8:	11 24       	eor	r1, r1
    66da:	91 1d       	adc	r25, r1
    66dc:	08 95       	ret

000066de <__tablejump_elpm__>:
    66de:	07 90       	elpm	r0, Z+
    66e0:	f6 91       	elpm	r31, Z
    66e2:	e0 2d       	mov	r30, r0
    66e4:	09 94       	ijmp

000066e6 <__ftoa_engine>:
    66e6:	28 30       	cpi	r18, 0x08	; 8
    66e8:	08 f0       	brcs	.+2      	; 0x66ec <__ftoa_engine+0x6>
    66ea:	27 e0       	ldi	r18, 0x07	; 7
    66ec:	33 27       	eor	r19, r19
    66ee:	da 01       	movw	r26, r20
    66f0:	99 0f       	add	r25, r25
    66f2:	31 1d       	adc	r19, r1
    66f4:	87 fd       	sbrc	r24, 7
    66f6:	91 60       	ori	r25, 0x01	; 1
    66f8:	00 96       	adiw	r24, 0x00	; 0
    66fa:	61 05       	cpc	r22, r1
    66fc:	71 05       	cpc	r23, r1
    66fe:	39 f4       	brne	.+14     	; 0x670e <__ftoa_engine+0x28>
    6700:	32 60       	ori	r19, 0x02	; 2
    6702:	2e 5f       	subi	r18, 0xFE	; 254
    6704:	3d 93       	st	X+, r19
    6706:	30 e3       	ldi	r19, 0x30	; 48
    6708:	2a 95       	dec	r18
    670a:	e1 f7       	brne	.-8      	; 0x6704 <__ftoa_engine+0x1e>
    670c:	08 95       	ret
    670e:	9f 3f       	cpi	r25, 0xFF	; 255
    6710:	30 f0       	brcs	.+12     	; 0x671e <__ftoa_engine+0x38>
    6712:	80 38       	cpi	r24, 0x80	; 128
    6714:	71 05       	cpc	r23, r1
    6716:	61 05       	cpc	r22, r1
    6718:	09 f0       	breq	.+2      	; 0x671c <__ftoa_engine+0x36>
    671a:	3c 5f       	subi	r19, 0xFC	; 252
    671c:	3c 5f       	subi	r19, 0xFC	; 252
    671e:	3d 93       	st	X+, r19
    6720:	91 30       	cpi	r25, 0x01	; 1
    6722:	08 f0       	brcs	.+2      	; 0x6726 <__ftoa_engine+0x40>
    6724:	80 68       	ori	r24, 0x80	; 128
    6726:	91 1d       	adc	r25, r1
    6728:	df 93       	push	r29
    672a:	cf 93       	push	r28
    672c:	1f 93       	push	r17
    672e:	0f 93       	push	r16
    6730:	ff 92       	push	r15
    6732:	ef 92       	push	r14
    6734:	19 2f       	mov	r17, r25
    6736:	98 7f       	andi	r25, 0xF8	; 248
    6738:	96 95       	lsr	r25
    673a:	e9 2f       	mov	r30, r25
    673c:	96 95       	lsr	r25
    673e:	96 95       	lsr	r25
    6740:	e9 0f       	add	r30, r25
    6742:	ff 27       	eor	r31, r31
    6744:	e2 50       	subi	r30, 0x02	; 2
    6746:	fb 4f       	sbci	r31, 0xFB	; 251
    6748:	99 27       	eor	r25, r25
    674a:	33 27       	eor	r19, r19
    674c:	ee 24       	eor	r14, r14
    674e:	ff 24       	eor	r15, r15
    6750:	a7 01       	movw	r20, r14
    6752:	e7 01       	movw	r28, r14
    6754:	05 90       	lpm	r0, Z+
    6756:	08 94       	sec
    6758:	07 94       	ror	r0
    675a:	28 f4       	brcc	.+10     	; 0x6766 <__ftoa_engine+0x80>
    675c:	36 0f       	add	r19, r22
    675e:	e7 1e       	adc	r14, r23
    6760:	f8 1e       	adc	r15, r24
    6762:	49 1f       	adc	r20, r25
    6764:	51 1d       	adc	r21, r1
    6766:	66 0f       	add	r22, r22
    6768:	77 1f       	adc	r23, r23
    676a:	88 1f       	adc	r24, r24
    676c:	99 1f       	adc	r25, r25
    676e:	06 94       	lsr	r0
    6770:	a1 f7       	brne	.-24     	; 0x675a <__ftoa_engine+0x74>
    6772:	05 90       	lpm	r0, Z+
    6774:	07 94       	ror	r0
    6776:	28 f4       	brcc	.+10     	; 0x6782 <__ftoa_engine+0x9c>
    6778:	e7 0e       	add	r14, r23
    677a:	f8 1e       	adc	r15, r24
    677c:	49 1f       	adc	r20, r25
    677e:	56 1f       	adc	r21, r22
    6780:	c1 1d       	adc	r28, r1
    6782:	77 0f       	add	r23, r23
    6784:	88 1f       	adc	r24, r24
    6786:	99 1f       	adc	r25, r25
    6788:	66 1f       	adc	r22, r22
    678a:	06 94       	lsr	r0
    678c:	a1 f7       	brne	.-24     	; 0x6776 <__ftoa_engine+0x90>
    678e:	05 90       	lpm	r0, Z+
    6790:	07 94       	ror	r0
    6792:	28 f4       	brcc	.+10     	; 0x679e <__ftoa_engine+0xb8>
    6794:	f8 0e       	add	r15, r24
    6796:	49 1f       	adc	r20, r25
    6798:	56 1f       	adc	r21, r22
    679a:	c7 1f       	adc	r28, r23
    679c:	d1 1d       	adc	r29, r1
    679e:	88 0f       	add	r24, r24
    67a0:	99 1f       	adc	r25, r25
    67a2:	66 1f       	adc	r22, r22
    67a4:	77 1f       	adc	r23, r23
    67a6:	06 94       	lsr	r0
    67a8:	a1 f7       	brne	.-24     	; 0x6792 <__ftoa_engine+0xac>
    67aa:	05 90       	lpm	r0, Z+
    67ac:	07 94       	ror	r0
    67ae:	20 f4       	brcc	.+8      	; 0x67b8 <__ftoa_engine+0xd2>
    67b0:	49 0f       	add	r20, r25
    67b2:	56 1f       	adc	r21, r22
    67b4:	c7 1f       	adc	r28, r23
    67b6:	d8 1f       	adc	r29, r24
    67b8:	99 0f       	add	r25, r25
    67ba:	66 1f       	adc	r22, r22
    67bc:	77 1f       	adc	r23, r23
    67be:	88 1f       	adc	r24, r24
    67c0:	06 94       	lsr	r0
    67c2:	a9 f7       	brne	.-22     	; 0x67ae <__ftoa_engine+0xc8>
    67c4:	84 91       	lpm	r24, Z
    67c6:	10 95       	com	r17
    67c8:	17 70       	andi	r17, 0x07	; 7
    67ca:	41 f0       	breq	.+16     	; 0x67dc <__ftoa_engine+0xf6>
    67cc:	d6 95       	lsr	r29
    67ce:	c7 95       	ror	r28
    67d0:	57 95       	ror	r21
    67d2:	47 95       	ror	r20
    67d4:	f7 94       	ror	r15
    67d6:	e7 94       	ror	r14
    67d8:	1a 95       	dec	r17
    67da:	c1 f7       	brne	.-16     	; 0x67cc <__ftoa_engine+0xe6>
    67dc:	e4 ea       	ldi	r30, 0xA4	; 164
    67de:	f4 e0       	ldi	r31, 0x04	; 4
    67e0:	68 94       	set
    67e2:	15 90       	lpm	r1, Z+
    67e4:	15 91       	lpm	r17, Z+
    67e6:	35 91       	lpm	r19, Z+
    67e8:	65 91       	lpm	r22, Z+
    67ea:	95 91       	lpm	r25, Z+
    67ec:	05 90       	lpm	r0, Z+
    67ee:	7f e2       	ldi	r23, 0x2F	; 47
    67f0:	73 95       	inc	r23
    67f2:	e1 18       	sub	r14, r1
    67f4:	f1 0a       	sbc	r15, r17
    67f6:	43 0b       	sbc	r20, r19
    67f8:	56 0b       	sbc	r21, r22
    67fa:	c9 0b       	sbc	r28, r25
    67fc:	d0 09       	sbc	r29, r0
    67fe:	c0 f7       	brcc	.-16     	; 0x67f0 <__ftoa_engine+0x10a>
    6800:	e1 0c       	add	r14, r1
    6802:	f1 1e       	adc	r15, r17
    6804:	43 1f       	adc	r20, r19
    6806:	56 1f       	adc	r21, r22
    6808:	c9 1f       	adc	r28, r25
    680a:	d0 1d       	adc	r29, r0
    680c:	7e f4       	brtc	.+30     	; 0x682c <__ftoa_engine+0x146>
    680e:	70 33       	cpi	r23, 0x30	; 48
    6810:	11 f4       	brne	.+4      	; 0x6816 <__ftoa_engine+0x130>
    6812:	8a 95       	dec	r24
    6814:	e6 cf       	rjmp	.-52     	; 0x67e2 <__ftoa_engine+0xfc>
    6816:	e8 94       	clt
    6818:	01 50       	subi	r16, 0x01	; 1
    681a:	30 f0       	brcs	.+12     	; 0x6828 <__ftoa_engine+0x142>
    681c:	08 0f       	add	r16, r24
    681e:	0a f4       	brpl	.+2      	; 0x6822 <__ftoa_engine+0x13c>
    6820:	00 27       	eor	r16, r16
    6822:	02 17       	cp	r16, r18
    6824:	08 f4       	brcc	.+2      	; 0x6828 <__ftoa_engine+0x142>
    6826:	20 2f       	mov	r18, r16
    6828:	23 95       	inc	r18
    682a:	02 2f       	mov	r16, r18
    682c:	7a 33       	cpi	r23, 0x3A	; 58
    682e:	28 f0       	brcs	.+10     	; 0x683a <__ftoa_engine+0x154>
    6830:	79 e3       	ldi	r23, 0x39	; 57
    6832:	7d 93       	st	X+, r23
    6834:	2a 95       	dec	r18
    6836:	e9 f7       	brne	.-6      	; 0x6832 <__ftoa_engine+0x14c>
    6838:	10 c0       	rjmp	.+32     	; 0x685a <__ftoa_engine+0x174>
    683a:	7d 93       	st	X+, r23
    683c:	2a 95       	dec	r18
    683e:	89 f6       	brne	.-94     	; 0x67e2 <__ftoa_engine+0xfc>
    6840:	06 94       	lsr	r0
    6842:	97 95       	ror	r25
    6844:	67 95       	ror	r22
    6846:	37 95       	ror	r19
    6848:	17 95       	ror	r17
    684a:	17 94       	ror	r1
    684c:	e1 18       	sub	r14, r1
    684e:	f1 0a       	sbc	r15, r17
    6850:	43 0b       	sbc	r20, r19
    6852:	56 0b       	sbc	r21, r22
    6854:	c9 0b       	sbc	r28, r25
    6856:	d0 09       	sbc	r29, r0
    6858:	98 f0       	brcs	.+38     	; 0x6880 <__ftoa_engine+0x19a>
    685a:	23 95       	inc	r18
    685c:	7e 91       	ld	r23, -X
    685e:	73 95       	inc	r23
    6860:	7a 33       	cpi	r23, 0x3A	; 58
    6862:	08 f0       	brcs	.+2      	; 0x6866 <__ftoa_engine+0x180>
    6864:	70 e3       	ldi	r23, 0x30	; 48
    6866:	7c 93       	st	X, r23
    6868:	20 13       	cpse	r18, r16
    686a:	b8 f7       	brcc	.-18     	; 0x685a <__ftoa_engine+0x174>
    686c:	7e 91       	ld	r23, -X
    686e:	70 61       	ori	r23, 0x10	; 16
    6870:	7d 93       	st	X+, r23
    6872:	30 f0       	brcs	.+12     	; 0x6880 <__ftoa_engine+0x19a>
    6874:	83 95       	inc	r24
    6876:	71 e3       	ldi	r23, 0x31	; 49
    6878:	7d 93       	st	X+, r23
    687a:	70 e3       	ldi	r23, 0x30	; 48
    687c:	2a 95       	dec	r18
    687e:	e1 f7       	brne	.-8      	; 0x6878 <__ftoa_engine+0x192>
    6880:	11 24       	eor	r1, r1
    6882:	ef 90       	pop	r14
    6884:	ff 90       	pop	r15
    6886:	0f 91       	pop	r16
    6888:	1f 91       	pop	r17
    688a:	cf 91       	pop	r28
    688c:	df 91       	pop	r29
    688e:	99 27       	eor	r25, r25
    6890:	87 fd       	sbrc	r24, 7
    6892:	90 95       	com	r25
    6894:	08 95       	ret

00006896 <strnlen_P>:
    6896:	fc 01       	movw	r30, r24
    6898:	05 90       	lpm	r0, Z+
    689a:	61 50       	subi	r22, 0x01	; 1
    689c:	70 40       	sbci	r23, 0x00	; 0
    689e:	01 10       	cpse	r0, r1
    68a0:	d8 f7       	brcc	.-10     	; 0x6898 <strnlen_P+0x2>
    68a2:	80 95       	com	r24
    68a4:	90 95       	com	r25
    68a6:	8e 0f       	add	r24, r30
    68a8:	9f 1f       	adc	r25, r31
    68aa:	08 95       	ret

000068ac <strnlen>:
    68ac:	fc 01       	movw	r30, r24
    68ae:	61 50       	subi	r22, 0x01	; 1
    68b0:	70 40       	sbci	r23, 0x00	; 0
    68b2:	01 90       	ld	r0, Z+
    68b4:	01 10       	cpse	r0, r1
    68b6:	d8 f7       	brcc	.-10     	; 0x68ae <strnlen+0x2>
    68b8:	80 95       	com	r24
    68ba:	90 95       	com	r25
    68bc:	8e 0f       	add	r24, r30
    68be:	9f 1f       	adc	r25, r31
    68c0:	08 95       	ret

000068c2 <fputc>:
    68c2:	0f 93       	push	r16
    68c4:	1f 93       	push	r17
    68c6:	cf 93       	push	r28
    68c8:	df 93       	push	r29
    68ca:	18 2f       	mov	r17, r24
    68cc:	09 2f       	mov	r16, r25
    68ce:	eb 01       	movw	r28, r22
    68d0:	8b 81       	ldd	r24, Y+3	; 0x03
    68d2:	81 fd       	sbrc	r24, 1
    68d4:	03 c0       	rjmp	.+6      	; 0x68dc <fputc+0x1a>
    68d6:	8f ef       	ldi	r24, 0xFF	; 255
    68d8:	9f ef       	ldi	r25, 0xFF	; 255
    68da:	20 c0       	rjmp	.+64     	; 0x691c <fputc+0x5a>
    68dc:	82 ff       	sbrs	r24, 2
    68de:	10 c0       	rjmp	.+32     	; 0x6900 <fputc+0x3e>
    68e0:	4e 81       	ldd	r20, Y+6	; 0x06
    68e2:	5f 81       	ldd	r21, Y+7	; 0x07
    68e4:	2c 81       	ldd	r18, Y+4	; 0x04
    68e6:	3d 81       	ldd	r19, Y+5	; 0x05
    68e8:	42 17       	cp	r20, r18
    68ea:	53 07       	cpc	r21, r19
    68ec:	7c f4       	brge	.+30     	; 0x690c <fputc+0x4a>
    68ee:	e8 81       	ld	r30, Y
    68f0:	f9 81       	ldd	r31, Y+1	; 0x01
    68f2:	9f 01       	movw	r18, r30
    68f4:	2f 5f       	subi	r18, 0xFF	; 255
    68f6:	3f 4f       	sbci	r19, 0xFF	; 255
    68f8:	39 83       	std	Y+1, r19	; 0x01
    68fa:	28 83       	st	Y, r18
    68fc:	10 83       	st	Z, r17
    68fe:	06 c0       	rjmp	.+12     	; 0x690c <fputc+0x4a>
    6900:	e8 85       	ldd	r30, Y+8	; 0x08
    6902:	f9 85       	ldd	r31, Y+9	; 0x09
    6904:	81 2f       	mov	r24, r17
    6906:	09 95       	icall
    6908:	89 2b       	or	r24, r25
    690a:	29 f7       	brne	.-54     	; 0x68d6 <fputc+0x14>
    690c:	2e 81       	ldd	r18, Y+6	; 0x06
    690e:	3f 81       	ldd	r19, Y+7	; 0x07
    6910:	2f 5f       	subi	r18, 0xFF	; 255
    6912:	3f 4f       	sbci	r19, 0xFF	; 255
    6914:	3f 83       	std	Y+7, r19	; 0x07
    6916:	2e 83       	std	Y+6, r18	; 0x06
    6918:	81 2f       	mov	r24, r17
    691a:	90 2f       	mov	r25, r16
    691c:	df 91       	pop	r29
    691e:	cf 91       	pop	r28
    6920:	1f 91       	pop	r17
    6922:	0f 91       	pop	r16
    6924:	08 95       	ret

00006926 <sprintf>:
    6926:	0f 93       	push	r16
    6928:	1f 93       	push	r17
    692a:	cf 93       	push	r28
    692c:	df 93       	push	r29
    692e:	cd b7       	in	r28, 0x3d	; 61
    6930:	de b7       	in	r29, 0x3e	; 62
    6932:	2e 97       	sbiw	r28, 0x0e	; 14
    6934:	0f b6       	in	r0, 0x3f	; 63
    6936:	f8 94       	cli
    6938:	de bf       	out	0x3e, r29	; 62
    693a:	0f be       	out	0x3f, r0	; 63
    693c:	cd bf       	out	0x3d, r28	; 61
    693e:	0d 89       	ldd	r16, Y+21	; 0x15
    6940:	1e 89       	ldd	r17, Y+22	; 0x16
    6942:	86 e0       	ldi	r24, 0x06	; 6
    6944:	8c 83       	std	Y+4, r24	; 0x04
    6946:	1a 83       	std	Y+2, r17	; 0x02
    6948:	09 83       	std	Y+1, r16	; 0x01
    694a:	8f ef       	ldi	r24, 0xFF	; 255
    694c:	9f e7       	ldi	r25, 0x7F	; 127
    694e:	9e 83       	std	Y+6, r25	; 0x06
    6950:	8d 83       	std	Y+5, r24	; 0x05
    6952:	ae 01       	movw	r20, r28
    6954:	47 5e       	subi	r20, 0xE7	; 231
    6956:	5f 4f       	sbci	r21, 0xFF	; 255
    6958:	6f 89       	ldd	r22, Y+23	; 0x17
    695a:	78 8d       	ldd	r23, Y+24	; 0x18
    695c:	ce 01       	movw	r24, r28
    695e:	01 96       	adiw	r24, 0x01	; 1
    6960:	fb da       	rcall	.-2570   	; 0x5f58 <vfprintf>
    6962:	ef 81       	ldd	r30, Y+7	; 0x07
    6964:	f8 85       	ldd	r31, Y+8	; 0x08
    6966:	e0 0f       	add	r30, r16
    6968:	f1 1f       	adc	r31, r17
    696a:	10 82       	st	Z, r1
    696c:	2e 96       	adiw	r28, 0x0e	; 14
    696e:	0f b6       	in	r0, 0x3f	; 63
    6970:	f8 94       	cli
    6972:	de bf       	out	0x3e, r29	; 62
    6974:	0f be       	out	0x3f, r0	; 63
    6976:	cd bf       	out	0x3d, r28	; 61
    6978:	df 91       	pop	r29
    697a:	cf 91       	pop	r28
    697c:	1f 91       	pop	r17
    697e:	0f 91       	pop	r16
    6980:	08 95       	ret

00006982 <__ultoa_invert>:
    6982:	fa 01       	movw	r30, r20
    6984:	aa 27       	eor	r26, r26
    6986:	28 30       	cpi	r18, 0x08	; 8
    6988:	51 f1       	breq	.+84     	; 0x69de <__ultoa_invert+0x5c>
    698a:	20 31       	cpi	r18, 0x10	; 16
    698c:	81 f1       	breq	.+96     	; 0x69ee <__ultoa_invert+0x6c>
    698e:	e8 94       	clt
    6990:	6f 93       	push	r22
    6992:	6e 7f       	andi	r22, 0xFE	; 254
    6994:	6e 5f       	subi	r22, 0xFE	; 254
    6996:	7f 4f       	sbci	r23, 0xFF	; 255
    6998:	8f 4f       	sbci	r24, 0xFF	; 255
    699a:	9f 4f       	sbci	r25, 0xFF	; 255
    699c:	af 4f       	sbci	r26, 0xFF	; 255
    699e:	b1 e0       	ldi	r27, 0x01	; 1
    69a0:	3e d0       	rcall	.+124    	; 0x6a1e <__ultoa_invert+0x9c>
    69a2:	b4 e0       	ldi	r27, 0x04	; 4
    69a4:	3c d0       	rcall	.+120    	; 0x6a1e <__ultoa_invert+0x9c>
    69a6:	67 0f       	add	r22, r23
    69a8:	78 1f       	adc	r23, r24
    69aa:	89 1f       	adc	r24, r25
    69ac:	9a 1f       	adc	r25, r26
    69ae:	a1 1d       	adc	r26, r1
    69b0:	68 0f       	add	r22, r24
    69b2:	79 1f       	adc	r23, r25
    69b4:	8a 1f       	adc	r24, r26
    69b6:	91 1d       	adc	r25, r1
    69b8:	a1 1d       	adc	r26, r1
    69ba:	6a 0f       	add	r22, r26
    69bc:	71 1d       	adc	r23, r1
    69be:	81 1d       	adc	r24, r1
    69c0:	91 1d       	adc	r25, r1
    69c2:	a1 1d       	adc	r26, r1
    69c4:	20 d0       	rcall	.+64     	; 0x6a06 <__ultoa_invert+0x84>
    69c6:	09 f4       	brne	.+2      	; 0x69ca <__ultoa_invert+0x48>
    69c8:	68 94       	set
    69ca:	3f 91       	pop	r19
    69cc:	2a e0       	ldi	r18, 0x0A	; 10
    69ce:	26 9f       	mul	r18, r22
    69d0:	11 24       	eor	r1, r1
    69d2:	30 19       	sub	r19, r0
    69d4:	30 5d       	subi	r19, 0xD0	; 208
    69d6:	31 93       	st	Z+, r19
    69d8:	de f6       	brtc	.-74     	; 0x6990 <__ultoa_invert+0xe>
    69da:	cf 01       	movw	r24, r30
    69dc:	08 95       	ret
    69de:	46 2f       	mov	r20, r22
    69e0:	47 70       	andi	r20, 0x07	; 7
    69e2:	40 5d       	subi	r20, 0xD0	; 208
    69e4:	41 93       	st	Z+, r20
    69e6:	b3 e0       	ldi	r27, 0x03	; 3
    69e8:	0f d0       	rcall	.+30     	; 0x6a08 <__ultoa_invert+0x86>
    69ea:	c9 f7       	brne	.-14     	; 0x69de <__ultoa_invert+0x5c>
    69ec:	f6 cf       	rjmp	.-20     	; 0x69da <__ultoa_invert+0x58>
    69ee:	46 2f       	mov	r20, r22
    69f0:	4f 70       	andi	r20, 0x0F	; 15
    69f2:	40 5d       	subi	r20, 0xD0	; 208
    69f4:	4a 33       	cpi	r20, 0x3A	; 58
    69f6:	18 f0       	brcs	.+6      	; 0x69fe <__ultoa_invert+0x7c>
    69f8:	49 5d       	subi	r20, 0xD9	; 217
    69fa:	31 fd       	sbrc	r19, 1
    69fc:	40 52       	subi	r20, 0x20	; 32
    69fe:	41 93       	st	Z+, r20
    6a00:	02 d0       	rcall	.+4      	; 0x6a06 <__ultoa_invert+0x84>
    6a02:	a9 f7       	brne	.-22     	; 0x69ee <__ultoa_invert+0x6c>
    6a04:	ea cf       	rjmp	.-44     	; 0x69da <__ultoa_invert+0x58>
    6a06:	b4 e0       	ldi	r27, 0x04	; 4
    6a08:	a6 95       	lsr	r26
    6a0a:	97 95       	ror	r25
    6a0c:	87 95       	ror	r24
    6a0e:	77 95       	ror	r23
    6a10:	67 95       	ror	r22
    6a12:	ba 95       	dec	r27
    6a14:	c9 f7       	brne	.-14     	; 0x6a08 <__ultoa_invert+0x86>
    6a16:	00 97       	sbiw	r24, 0x00	; 0
    6a18:	61 05       	cpc	r22, r1
    6a1a:	71 05       	cpc	r23, r1
    6a1c:	08 95       	ret
    6a1e:	9b 01       	movw	r18, r22
    6a20:	ac 01       	movw	r20, r24
    6a22:	0a 2e       	mov	r0, r26
    6a24:	06 94       	lsr	r0
    6a26:	57 95       	ror	r21
    6a28:	47 95       	ror	r20
    6a2a:	37 95       	ror	r19
    6a2c:	27 95       	ror	r18
    6a2e:	ba 95       	dec	r27
    6a30:	c9 f7       	brne	.-14     	; 0x6a24 <__ultoa_invert+0xa2>
    6a32:	62 0f       	add	r22, r18
    6a34:	73 1f       	adc	r23, r19
    6a36:	84 1f       	adc	r24, r20
    6a38:	95 1f       	adc	r25, r21
    6a3a:	a0 1d       	adc	r26, r0
    6a3c:	08 95       	ret

00006a3e <__do_global_dtors>:
    6a3e:	15 e0       	ldi	r17, 0x05	; 5
    6a40:	c0 ea       	ldi	r28, 0xA0	; 160
    6a42:	d5 e0       	ldi	r29, 0x05	; 5
    6a44:	00 e0       	ldi	r16, 0x00	; 0
    6a46:	05 c0       	rjmp	.+10     	; 0x6a52 <__do_global_dtors+0x14>
    6a48:	22 97       	sbiw	r28, 0x02	; 2
    6a4a:	01 09       	sbc	r16, r1
    6a4c:	fe 01       	movw	r30, r28
    6a4e:	0b bf       	out	0x3b, r16	; 59
    6a50:	46 de       	rcall	.-884    	; 0x66de <__tablejump_elpm__>
    6a52:	c2 3a       	cpi	r28, 0xA2	; 162
    6a54:	d1 07       	cpc	r29, r17
    6a56:	80 e0       	ldi	r24, 0x00	; 0
    6a58:	08 07       	cpc	r16, r24
    6a5a:	b1 f7       	brne	.-20     	; 0x6a48 <__do_global_dtors+0xa>
    6a5c:	f8 94       	cli

00006a5e <__stop_program>:
    6a5e:	ff cf       	rjmp	.-2      	; 0x6a5e <__stop_program>
