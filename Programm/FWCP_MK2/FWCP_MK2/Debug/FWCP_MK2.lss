
FWCP_MK2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001fc  00800100  000066ae  00006742  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000066ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000479  008002fc  008002fc  0000693e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000693e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000438  00000000  00000000  0000699a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000930f  00000000  00000000  00006dd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001858  00000000  00000000  000100e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00003872  00000000  00000000  00011939  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00001010  00000000  00000000  000151ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001333  00000000  00000000  000161bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00006cc6  00000000  00000000  000174ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000410  00000000  00000000  0001e1b5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a3 c2       	rjmp	.+1350   	; 0x548 <__dtors_end>
       2:	00 00       	nop
       4:	d0 c2       	rjmp	.+1440   	; 0x5a6 <__bad_interrupt>
       6:	00 00       	nop
       8:	ce c2       	rjmp	.+1436   	; 0x5a6 <__bad_interrupt>
       a:	00 00       	nop
       c:	cc c2       	rjmp	.+1432   	; 0x5a6 <__bad_interrupt>
       e:	00 00       	nop
      10:	ca c2       	rjmp	.+1428   	; 0x5a6 <__bad_interrupt>
      12:	00 00       	nop
      14:	c8 c2       	rjmp	.+1424   	; 0x5a6 <__bad_interrupt>
      16:	00 00       	nop
      18:	c6 c2       	rjmp	.+1420   	; 0x5a6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c4 c2       	rjmp	.+1416   	; 0x5a6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	c2 c2       	rjmp	.+1412   	; 0x5a6 <__bad_interrupt>
      22:	00 00       	nop
      24:	c0 c2       	rjmp	.+1408   	; 0x5a6 <__bad_interrupt>
      26:	00 00       	nop
      28:	be c2       	rjmp	.+1404   	; 0x5a6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0c 94 40 1a 	jmp	0x3480	; 0x3480 <__vector_11>
      30:	ba c2       	rjmp	.+1396   	; 0x5a6 <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 5e 1a 	jmp	0x34bc	; 0x34bc <__vector_13>
      38:	b6 c2       	rjmp	.+1388   	; 0x5a6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	b4 c2       	rjmp	.+1384   	; 0x5a6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	b2 c2       	rjmp	.+1380   	; 0x5a6 <__bad_interrupt>
      42:	00 00       	nop
      44:	b0 c2       	rjmp	.+1376   	; 0x5a6 <__bad_interrupt>
      46:	00 00       	nop
      48:	ae c2       	rjmp	.+1372   	; 0x5a6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ac c2       	rjmp	.+1368   	; 0x5a6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	aa c2       	rjmp	.+1364   	; 0x5a6 <__bad_interrupt>
      52:	00 00       	nop
      54:	a8 c2       	rjmp	.+1360   	; 0x5a6 <__bad_interrupt>
      56:	00 00       	nop
      58:	a6 c2       	rjmp	.+1356   	; 0x5a6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a4 c2       	rjmp	.+1352   	; 0x5a6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	a2 c2       	rjmp	.+1348   	; 0x5a6 <__bad_interrupt>
      62:	00 00       	nop
      64:	a0 c2       	rjmp	.+1344   	; 0x5a6 <__bad_interrupt>
      66:	00 00       	nop
      68:	9e c2       	rjmp	.+1340   	; 0x5a6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	9c c2       	rjmp	.+1336   	; 0x5a6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	9a c2       	rjmp	.+1332   	; 0x5a6 <__bad_interrupt>
      72:	00 00       	nop
      74:	98 c2       	rjmp	.+1328   	; 0x5a6 <__bad_interrupt>
      76:	00 00       	nop
      78:	96 c2       	rjmp	.+1324   	; 0x5a6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	94 c2       	rjmp	.+1320   	; 0x5a6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	92 c2       	rjmp	.+1316   	; 0x5a6 <__bad_interrupt>
      82:	00 00       	nop
      84:	90 c2       	rjmp	.+1312   	; 0x5a6 <__bad_interrupt>
      86:	00 00       	nop
      88:	8e c2       	rjmp	.+1308   	; 0x5a6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	73 17       	cp	r23, r19
      8e:	9b 17       	cp	r25, r27
      90:	c5 17       	cp	r28, r21
      92:	f0 17       	cp	r31, r16
      94:	1a 18       	sub	r1, r10
      96:	43 18       	sub	r4, r3
      98:	6b 18       	sub	r6, r11
      9a:	94 18       	sub	r9, r4
      9c:	0c 19       	sub	r16, r12
      9e:	37 19       	sub	r19, r7
      a0:	0f 1f       	adc	r16, r31
      a2:	17 1f       	adc	r17, r23
      a4:	1d 1f       	adc	r17, r29
      a6:	23 1f       	adc	r18, r19
      a8:	2a 1f       	adc	r18, r26
      aa:	30 1f       	adc	r19, r16
      ac:	3e 1f       	adc	r19, r30
      ae:	cd 1f       	adc	r28, r29
      b0:	d3 1f       	adc	r29, r19
      b2:	d9 1f       	adc	r29, r25
      b4:	df 1f       	adc	r29, r31
      b6:	e5 1f       	adc	r30, r21
      b8:	eb 1f       	adc	r30, r27
      ba:	f1 1f       	adc	r31, r17
      bc:	f7 1f       	adc	r31, r23
      be:	08 4a       	sbci	r16, 0xA8	; 168
      c0:	d7 3b       	cpi	r29, 0xB7	; 183
      c2:	3b ce       	rjmp	.-906    	; 0xfffffd3a <__eeprom_end+0xff7efd3a>
      c4:	01 6e       	ori	r16, 0xE1	; 225
      c6:	84 bc       	out	0x24, r8	; 36
      c8:	bf fd       	.word	0xfdbf	; ????
      ca:	c1 2f       	mov	r28, r17
      cc:	3d 6c       	ori	r19, 0xCD	; 205
      ce:	74 31       	cpi	r23, 0x14	; 20
      d0:	9a bd       	out	0x2a, r25	; 42
      d2:	56 83       	std	Z+6, r21	; 0x06
      d4:	3d da       	rcall	.-2950   	; 0xfffff550 <__eeprom_end+0xff7ef550>
      d6:	3d 00       	.word	0x003d	; ????
      d8:	c7 7f       	andi	r28, 0xF7	; 247
      da:	11 be       	out	0x31, r1	; 49
      dc:	d9 e4       	ldi	r29, 0x49	; 73
      de:	bb 4c       	sbci	r27, 0xCB	; 203
      e0:	3e 91       	ld	r19, -X
      e2:	6b aa       	std	Y+51, r6	; 0x33
      e4:	aa be       	out	0x3a, r10	; 58
      e6:	00 00       	nop
      e8:	00 80       	ld	r0, Z
      ea:	3f 05       	cpc	r19, r15
      ec:	a8 4c       	sbci	r26, 0xC8	; 200
      ee:	cd b2       	in	r12, 0x1d	; 29
      f0:	d4 4e       	sbci	r29, 0xE4	; 228
      f2:	b9 38       	cpi	r27, 0x89	; 137
      f4:	36 a9       	ldd	r19, Z+54	; 0x36
      f6:	02 0c       	add	r0, r2
      f8:	50 b9       	out	0x00, r21	; 0
      fa:	91 86       	std	Z+9, r9	; 0x09
      fc:	88 08       	sbc	r8, r8
      fe:	3c a6       	std	Y+44, r3	; 0x2c
     100:	aa aa       	std	Y+50, r10	; 0x32
     102:	2a be       	out	0x3a, r2	; 58
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	3f 06       	cpc	r3, r31
     10a:	64 ec       	ldi	r22, 0xC4	; 196
     10c:	1b 3c       	cpi	r17, 0xCB	; 203
     10e:	04 bc       	out	0x24, r0	; 36
     110:	16 3e       	cpi	r17, 0xE6	; 230
     112:	3b e5       	ldi	r19, 0x5B	; 91
     114:	b9 3c       	cpi	r27, 0xC9	; 201
     116:	c9 3c       	cpi	r28, 0xC9	; 201
     118:	37 c2       	rjmp	.+1134   	; 0x588 <__do_global_ctors+0xa>
     11a:	9e 5a       	subi	r25, 0xAE	; 174
     11c:	3d 66       	ori	r19, 0x6D	; 109
     11e:	04 98       	cbi	0x00, 4	; 0
     120:	08 3e       	cpi	r16, 0xE8	; 232
     122:	ea 69       	ori	r30, 0x9A	; 154
     124:	aa aa       	std	Y+50, r10	; 0x32
     126:	3e 00       	.word	0x003e	; ????
     128:	00 00       	nop
     12a:	80 3f       	cpi	r24, 0xF0	; 240

0000012c <__trampolines_end>:
     12c:	00 e0       	ldi	r16, 0x00	; 0
     12e:	f8 fc       	.word	0xfcf8	; ????
     130:	fe 1e       	adc	r15, r30
     132:	07 07       	cpc	r16, r23
     134:	07 07       	cpc	r16, r23
     136:	1e fe       	.word	0xfe1e	; ????
     138:	fc f8       	.word	0xf8fc	; ????
     13a:	f0 00       	.word	0x00f0	; ????
     13c:	00 07       	cpc	r16, r16
     13e:	0f 3f       	cpi	r16, 0xFF	; 255
     140:	3f 7c       	andi	r19, 0xCF	; 207
     142:	70 70       	andi	r23, 0x00	; 0
     144:	70 70       	andi	r23, 0x00	; 0
     146:	7c 3f       	cpi	r23, 0xFC	; 252
     148:	1f 1f       	adc	r17, r31
     14a:	07 00       	.word	0x0007	; ????
     14c:	00 00       	nop
     14e:	00 06       	cpc	r0, r16
     150:	07 07       	cpc	r16, r23
     152:	ff ff       	.word	0xffff	; ????
     154:	ff ff       	.word	0xffff	; ????
	...
     162:	7f 7f       	andi	r23, 0xFF	; 255
     164:	7f 7f       	andi	r23, 0xFF	; 255
     166:	00 00       	nop
     168:	00 00       	nop
     16a:	00 00       	nop
     16c:	00 38       	cpi	r16, 0x80	; 128
     16e:	3c 3e       	cpi	r19, 0xEC	; 236
     170:	3e 0f       	add	r19, r30
     172:	07 07       	cpc	r16, r23
     174:	07 cf       	rjmp	.-498    	; 0xffffff84 <__eeprom_end+0xff7eff84>
     176:	ff fe       	.word	0xfeff	; ????
     178:	fe 38       	cpi	r31, 0x8E	; 142
     17a:	00 00       	nop
     17c:	00 40       	sbci	r16, 0x00	; 0
     17e:	40 60       	ori	r20, 0x00	; 0
     180:	70 78       	andi	r23, 0x80	; 128
     182:	7c 7e       	andi	r23, 0xEC	; 236
     184:	7f 77       	andi	r23, 0x7F	; 127
     186:	73 71       	andi	r23, 0x13	; 19
     188:	70 70       	andi	r23, 0x00	; 0
     18a:	00 00       	nop
     18c:	00 18       	sub	r0, r0
     18e:	1c 1e       	adc	r1, r28
     190:	1e 0f       	add	r17, r30
     192:	c7 c7       	rjmp	.+3982   	; 0x1122 <_ZN7Display6analogEhhhh+0x344>
     194:	e7 ff       	sbrs	r30, 7
     196:	fe be       	out	0x3e, r15	; 62
     198:	9c 00       	.word	0x009c	; ????
     19a:	00 00       	nop
     19c:	00 0c       	add	r0, r0
     19e:	1c 3c       	cpi	r17, 0xCC	; 204
     1a0:	3c 78       	andi	r19, 0x8C	; 140
     1a2:	70 70       	andi	r23, 0x00	; 0
     1a4:	70 79       	andi	r23, 0x90	; 144
     1a6:	7f 3f       	cpi	r23, 0xFF	; 255
     1a8:	1f 0f       	add	r17, r31
     1aa:	00 00       	nop
     1ac:	00 00       	nop
     1ae:	80 c0       	rjmp	.+256    	; 0x2b0 <_ZL7font5x8+0x44>
     1b0:	e0 70       	andi	r30, 0x00	; 0
     1b2:	38 1c       	adc	r3, r8
     1b4:	1e ff       	.word	0xff1e	; ????
     1b6:	ff ff       	.word	0xffff	; ????
     1b8:	ff 00       	.word	0x00ff	; ????
     1ba:	00 00       	nop
     1bc:	06 07       	cpc	r16, r22
     1be:	07 07       	cpc	r16, r23
     1c0:	06 06       	cpc	r0, r22
     1c2:	06 06       	cpc	r0, r22
     1c4:	06 7f       	andi	r16, 0xF6	; 246
     1c6:	7f 7f       	andi	r23, 0xFF	; 255
     1c8:	7f 06       	cpc	r7, r31
     1ca:	06 00       	.word	0x0006	; ????
     1cc:	00 00       	nop
     1ce:	00 00       	nop
     1d0:	f0 ff       	sbrs	r31, 0
     1d2:	ff ff       	.word	0xffff	; ????
     1d4:	e7 e7       	ldi	r30, 0x77	; 119
     1d6:	e7 e7       	ldi	r30, 0x77	; 119
     1d8:	c7 87       	std	Z+15, r28	; 0x0f
     1da:	00 00       	nop
     1dc:	00 00       	nop
     1de:	38 78       	andi	r19, 0x88	; 136
     1e0:	71 70       	andi	r23, 0x01	; 1
     1e2:	70 70       	andi	r23, 0x00	; 0
     1e4:	70 70       	andi	r23, 0x00	; 0
     1e6:	39 3f       	cpi	r19, 0xF9	; 249
     1e8:	3f 1f       	adc	r19, r31
     1ea:	0f 00       	.word	0x000f	; ????
     1ec:	00 80       	ld	r0, Z
     1ee:	e0 f0       	brcs	.+56     	; 0x228 <__trampolines_end+0xfc>
     1f0:	f8 fc       	.word	0xfcf8	; ????
     1f2:	7f 7f       	andi	r23, 0xFF	; 255
     1f4:	6f 67       	ori	r22, 0x7F	; 127
     1f6:	e1 e1       	ldi	r30, 0x11	; 17
     1f8:	c0 80       	ld	r12, Z
     1fa:	00 00       	nop
     1fc:	00 0f       	add	r16, r16
     1fe:	1f 3f       	cpi	r17, 0xFF	; 255
     200:	3f 78       	andi	r19, 0x8F	; 143
     202:	70 70       	andi	r23, 0x00	; 0
     204:	70 70       	andi	r23, 0x00	; 0
     206:	78 3f       	cpi	r23, 0xF8	; 248
     208:	3f 1f       	adc	r19, r31
     20a:	0f 00       	.word	0x000f	; ????
     20c:	00 07       	cpc	r16, r16
     20e:	07 07       	cpc	r16, r23
     210:	07 07       	cpc	r16, r23
     212:	c7 e7       	ldi	r28, 0x77	; 119
     214:	f7 ff       	sbrs	r31, 7
     216:	7f 3f       	cpi	r23, 0xFF	; 255
     218:	1f 07       	cpc	r17, r31
     21a:	03 01       	movw	r0, r6
     21c:	00 20       	and	r0, r0
     21e:	38 7c       	andi	r19, 0xC8	; 200
     220:	7e 3f       	cpi	r23, 0xFE	; 254
     222:	0f 07       	cpc	r16, r31
     224:	03 00       	.word	0x0003	; ????
	...
     22e:	00 1c       	adc	r0, r0
     230:	be fe       	.word	0xfebe	; ????
     232:	ff e7       	ldi	r31, 0x7F	; 127
     234:	c3 c3       	rjmp	.+1926   	; 0x9bc <_ZN7Display9draw_lineEhhhf+0xea>
     236:	e7 ff       	sbrs	r30, 7
     238:	fe be       	out	0x3e, r15	; 62
     23a:	1c 00       	.word	0x001c	; ????
     23c:	00 00       	nop
     23e:	0e 3f       	cpi	r16, 0xFE	; 254
     240:	3f 7f       	andi	r19, 0xFF	; 255
     242:	71 60       	ori	r23, 0x01	; 1
     244:	60 60       	ori	r22, 0x00	; 0
     246:	71 7f       	andi	r23, 0xF1	; 241
     248:	3f 3f       	cpi	r19, 0xFF	; 255
     24a:	0f 00       	.word	0x000f	; ????
     24c:	00 78       	andi	r16, 0x80	; 128
     24e:	fc fe       	.word	0xfefc	; ????
     250:	fe 8f       	std	Y+30, r31	; 0x1e
     252:	07 07       	cpc	r16, r23
     254:	07 07       	cpc	r16, r23
     256:	8f fe       	.word	0xfe8f	; ????
     258:	fe fc       	.word	0xfcfe	; ????
     25a:	f8 00       	.word	0x00f8	; ????
     25c:	00 00       	nop
     25e:	00 01       	movw	r0, r0
     260:	43 43       	sbci	r20, 0x33	; 51
     262:	73 7b       	andi	r23, 0xB3	; 179
     264:	7f 7f       	andi	r23, 0xFF	; 255
     266:	1f 0f       	add	r17, r31
     268:	07 03       	mulsu	r16, r23
	...

0000026c <_ZL7font5x8>:
     26c:	00 00 5f 00 00 00 07 00 07 00 14 7f 14 7f 14 24     .._............$
     27c:	2a 7f 2a 12 23 13 08 64 62 36 49 55 22 50 00 05     *.*.#..db6IU"P..
     28c:	03 00 00 00 1c 22 41 00 00 41 22 1c 00 14 08 3e     ....."A..A"....>
     29c:	08 14 08 08 3e 08 08 00 50 30 00 00 08 08 08 08     ....>...P0......
     2ac:	08 00 60 60 00 00 20 10 08 04 02 3e 51 49 45 3e     ..``.. ....>QIE>
     2bc:	00 42 7f 40 00 42 61 51 49 46 21 41 45 4b 31 18     .B.@.BaQIF!AEK1.
     2cc:	14 12 7f 10 27 45 45 45 39 3c 4a 49 49 30 01 71     ....'EEE9<JII0.q
     2dc:	09 05 03 36 49 49 49 36 06 49 49 29 1e 00 36 36     ...6III6.II)..66
     2ec:	00 00 00 56 36 00 00 08 14 22 41 00 14 14 14 14     ...V6...."A.....
     2fc:	14 00 41 22 14 08 02 01 51 09 06 32 49 79 41 3e     ..A"....Q..2IyA>
     30c:	7e 11 11 11 7e 7f 49 49 49 36 3e 41 41 41 22 7f     ~...~.III6>AAA".
     31c:	41 41 22 1c 7f 49 49 49 41 7f 09 09 09 01 3e 41     AA"..IIIA.....>A
     32c:	49 49 7a 7f 08 08 08 7f 00 41 7f 41 00 20 40 41     IIz......A.A. @A
     33c:	3f 01 7f 08 14 22 41 7f 40 40 40 40 7f 02 0c 02     ?...."A.@@@@....
     34c:	7f 7f 04 08 10 7f 3e 41 41 41 3e 7f 09 09 09 06     ......>AAA>.....
     35c:	3e 41 51 21 5e 7f 09 19 29 46 46 49 49 49 31 01     >AQ!^...)FFIII1.
     36c:	01 7f 01 01 3f 40 40 40 3f 1f 20 40 20 1f 3f 40     ....?@@@?. @ .?@
     37c:	38 40 3f 63 14 08 14 63 07 08 70 08 07 61 51 49     8@?c...c..p..aQI
     38c:	45 43 00 7f 41 41 00 02 04 08 10 20 00 41 41 7f     EC..AA..... .AA.
     39c:	00 04 02 01 02 04 40 40 40 40 40 00 01 02 04 00     ......@@@@@.....
     3ac:	20 54 54 54 78 7f 48 44 44 38 38 44 44 44 20 38      TTTx.HDD88DDD 8
     3bc:	44 44 48 7f 38 54 54 54 18 08 7e 09 01 02 0c 52     DDH.8TTT..~....R
     3cc:	52 52 3e 7f 08 04 04 78 00 44 7d 40 00 20 40 44     RR>....x.D}@. @D
     3dc:	3d 00 7f 10 28 44 00 00 41 7f 40 00 7c 04 18 04     =...(D..A.@.|...
     3ec:	78 7c 08 04 04 78 38 44 44 44 38 7c 14 14 14 08     x|...x8DDD8|....
     3fc:	08 14 14 18 7c 7c 08 04 04 08 48 54 54 54 20 04     ....||....HTTT .
     40c:	3f 44 40 20 3c 40 40 20 7c 1c 20 40 20 1c 3c 40     ?D@ <@@ |. @ .<@
     41c:	30 40 3c 44 28 10 28 44 0c 50 50 50 3c 44 64 54     0@<D(.(D.PPP<DdT
     42c:	4c 44 00 08 36 41 00 00 00 7f 00 00 00 41 36 08     LD..6A.......A6.
     43c:	00 10 08 08 10 08                                   ......

00000442 <__c.2161>:
     442:	6e 61 6e 00                                         nan.

00000446 <__c.2159>:
     446:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     456:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     466:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     476:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     486:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     496:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     4a6:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     4b6:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     4c6:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     4d6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     4e6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     4f6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     506:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     516:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     526:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     536:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000544 <__ctors_start>:
     544:	e1 22       	and	r14, r17

00000546 <__ctors_end>:
     546:	09 23       	and	r16, r25

00000548 <__dtors_end>:
     548:	11 24       	eor	r1, r1
     54a:	1f be       	out	0x3f, r1	; 63
     54c:	cf ef       	ldi	r28, 0xFF	; 255
     54e:	d0 e4       	ldi	r29, 0x40	; 64
     550:	de bf       	out	0x3e, r29	; 62
     552:	cd bf       	out	0x3d, r28	; 61

00000554 <__do_copy_data>:
     554:	12 e0       	ldi	r17, 0x02	; 2
     556:	a0 e0       	ldi	r26, 0x00	; 0
     558:	b1 e0       	ldi	r27, 0x01	; 1
     55a:	ee ea       	ldi	r30, 0xAE	; 174
     55c:	f6 e6       	ldi	r31, 0x66	; 102
     55e:	00 e0       	ldi	r16, 0x00	; 0
     560:	0b bf       	out	0x3b, r16	; 59
     562:	02 c0       	rjmp	.+4      	; 0x568 <__do_copy_data+0x14>
     564:	07 90       	elpm	r0, Z+
     566:	0d 92       	st	X+, r0
     568:	ac 3f       	cpi	r26, 0xFC	; 252
     56a:	b1 07       	cpc	r27, r17
     56c:	d9 f7       	brne	.-10     	; 0x564 <__do_copy_data+0x10>

0000056e <__do_clear_bss>:
     56e:	27 e0       	ldi	r18, 0x07	; 7
     570:	ac ef       	ldi	r26, 0xFC	; 252
     572:	b2 e0       	ldi	r27, 0x02	; 2
     574:	01 c0       	rjmp	.+2      	; 0x578 <.do_clear_bss_start>

00000576 <.do_clear_bss_loop>:
     576:	1d 92       	st	X+, r1

00000578 <.do_clear_bss_start>:
     578:	a5 37       	cpi	r26, 0x75	; 117
     57a:	b2 07       	cpc	r27, r18
     57c:	e1 f7       	brne	.-8      	; 0x576 <.do_clear_bss_loop>

0000057e <__do_global_ctors>:
     57e:	15 e0       	ldi	r17, 0x05	; 5
     580:	c6 e4       	ldi	r28, 0x46	; 70
     582:	d5 e0       	ldi	r29, 0x05	; 5
     584:	00 e0       	ldi	r16, 0x00	; 0
     586:	06 c0       	rjmp	.+12     	; 0x594 <__do_global_ctors+0x16>
     588:	22 97       	sbiw	r28, 0x02	; 2
     58a:	01 09       	sbc	r16, r1
     58c:	fe 01       	movw	r30, r28
     58e:	0b bf       	out	0x3b, r16	; 59
     590:	0e 94 96 31 	call	0x632c	; 0x632c <__tablejump_elpm__>
     594:	c4 34       	cpi	r28, 0x44	; 68
     596:	d1 07       	cpc	r29, r17
     598:	80 e0       	ldi	r24, 0x00	; 0
     59a:	08 07       	cpc	r16, r24
     59c:	a9 f7       	brne	.-22     	; 0x588 <__do_global_ctors+0xa>
     59e:	0e 94 d9 22 	call	0x45b2	; 0x45b2 <main>
     5a2:	0c 94 46 33 	jmp	0x668c	; 0x668c <__do_global_dtors>

000005a6 <__bad_interrupt>:
     5a6:	2c cd       	rjmp	.-1448   	; 0x0 <__vectors>

000005a8 <_ZN7DisplayD1Ev>:
		for (uint8_t j = 0;j<64;j++)
		{
			Displayframe[i*SSD1306_WIDTH+j]=pgm_read_byte(&Glurak[i][j]);
		}
	}
}
     5a8:	9c 5f       	subi	r25, 0xFC	; 252
     5aa:	0c 94 2d 23 	jmp	0x465a	; 0x465a <_ZN3I2CD1Ev>
     5ae:	08 95       	ret

000005b0 <_ZN7Display10clearFrameEv>:
     5b0:	fc 01       	movw	r30, r24
     5b2:	20 e0       	ldi	r18, 0x00	; 0
     5b4:	30 e0       	ldi	r19, 0x00	; 0
     5b6:	11 92       	st	Z+, r1
     5b8:	2f 5f       	subi	r18, 0xFF	; 255
     5ba:	3f 4f       	sbci	r19, 0xFF	; 255
     5bc:	21 15       	cp	r18, r1
     5be:	84 e0       	ldi	r24, 0x04	; 4
     5c0:	38 07       	cpc	r19, r24
     5c2:	c9 f7       	brne	.-14     	; 0x5b6 <_ZN7Display10clearFrameEv+0x6>
     5c4:	08 95       	ret

000005c6 <_ZN7Display15ssd1306_commandEh>:
     5c6:	1f 93       	push	r17
     5c8:	cf 93       	push	r28
     5ca:	df 93       	push	r29
     5cc:	16 2f       	mov	r17, r22
     5ce:	ec 01       	movw	r28, r24
     5d0:	dc 5f       	subi	r29, 0xFC	; 252
     5d2:	ce 01       	movw	r24, r28
     5d4:	0e 94 2e 23 	call	0x465c	; 0x465c <_ZN3I2C9twi_startEv>
     5d8:	68 e7       	ldi	r22, 0x78	; 120
     5da:	ce 01       	movw	r24, r28
     5dc:	0e 94 36 23 	call	0x466c	; 0x466c <_ZN3I2C9twi_writeEh>
     5e0:	60 e0       	ldi	r22, 0x00	; 0
     5e2:	ce 01       	movw	r24, r28
     5e4:	0e 94 36 23 	call	0x466c	; 0x466c <_ZN3I2C9twi_writeEh>
     5e8:	61 2f       	mov	r22, r17
     5ea:	ce 01       	movw	r24, r28
     5ec:	0e 94 36 23 	call	0x466c	; 0x466c <_ZN3I2C9twi_writeEh>
     5f0:	ce 01       	movw	r24, r28
     5f2:	0e 94 32 23 	call	0x4664	; 0x4664 <_ZN3I2C8twi_stopEv>
     5f6:	df 91       	pop	r29
     5f8:	cf 91       	pop	r28
     5fa:	1f 91       	pop	r17
     5fc:	08 95       	ret

000005fe <_ZN7Display17InitializeDisplayEv>:
     5fe:	cf 93       	push	r28
     600:	df 93       	push	r29
     602:	ec 01       	movw	r28, r24
     604:	6e ea       	ldi	r22, 0xAE	; 174
     606:	df df       	rcall	.-66     	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     608:	65 ed       	ldi	r22, 0xD5	; 213
     60a:	ce 01       	movw	r24, r28
     60c:	dc df       	rcall	.-72     	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     60e:	60 e8       	ldi	r22, 0x80	; 128
     610:	ce 01       	movw	r24, r28
     612:	d9 df       	rcall	.-78     	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     614:	68 ea       	ldi	r22, 0xA8	; 168
     616:	ce 01       	movw	r24, r28
     618:	d6 df       	rcall	.-84     	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     61a:	6f e3       	ldi	r22, 0x3F	; 63
     61c:	ce 01       	movw	r24, r28
     61e:	d3 df       	rcall	.-90     	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     620:	63 ed       	ldi	r22, 0xD3	; 211
     622:	ce 01       	movw	r24, r28
     624:	d0 df       	rcall	.-96     	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     626:	60 e0       	ldi	r22, 0x00	; 0
     628:	ce 01       	movw	r24, r28
     62a:	cd df       	rcall	.-102    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     62c:	60 e4       	ldi	r22, 0x40	; 64
     62e:	ce 01       	movw	r24, r28
     630:	ca df       	rcall	.-108    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     632:	6d e8       	ldi	r22, 0x8D	; 141
     634:	ce 01       	movw	r24, r28
     636:	c7 df       	rcall	.-114    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     638:	64 e1       	ldi	r22, 0x14	; 20
     63a:	ce 01       	movw	r24, r28
     63c:	c4 df       	rcall	.-120    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     63e:	60 e2       	ldi	r22, 0x20	; 32
     640:	ce 01       	movw	r24, r28
     642:	c1 df       	rcall	.-126    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     644:	60 e0       	ldi	r22, 0x00	; 0
     646:	ce 01       	movw	r24, r28
     648:	be df       	rcall	.-132    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     64a:	61 ea       	ldi	r22, 0xA1	; 161
     64c:	ce 01       	movw	r24, r28
     64e:	bb df       	rcall	.-138    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     650:	68 ec       	ldi	r22, 0xC8	; 200
     652:	ce 01       	movw	r24, r28
     654:	b8 df       	rcall	.-144    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     656:	6a ed       	ldi	r22, 0xDA	; 218
     658:	ce 01       	movw	r24, r28
     65a:	b5 df       	rcall	.-150    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     65c:	62 e1       	ldi	r22, 0x12	; 18
     65e:	ce 01       	movw	r24, r28
     660:	b2 df       	rcall	.-156    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     662:	61 e8       	ldi	r22, 0x81	; 129
     664:	ce 01       	movw	r24, r28
     666:	af df       	rcall	.-162    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     668:	6f ec       	ldi	r22, 0xCF	; 207
     66a:	ce 01       	movw	r24, r28
     66c:	ac df       	rcall	.-168    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     66e:	69 ed       	ldi	r22, 0xD9	; 217
     670:	ce 01       	movw	r24, r28
     672:	a9 df       	rcall	.-174    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     674:	61 ef       	ldi	r22, 0xF1	; 241
     676:	ce 01       	movw	r24, r28
     678:	a6 df       	rcall	.-180    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     67a:	6b ed       	ldi	r22, 0xDB	; 219
     67c:	ce 01       	movw	r24, r28
     67e:	a3 df       	rcall	.-186    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     680:	60 e4       	ldi	r22, 0x40	; 64
     682:	ce 01       	movw	r24, r28
     684:	a0 df       	rcall	.-192    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     686:	64 ea       	ldi	r22, 0xA4	; 164
     688:	ce 01       	movw	r24, r28
     68a:	9d df       	rcall	.-198    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     68c:	66 ea       	ldi	r22, 0xA6	; 166
     68e:	ce 01       	movw	r24, r28
     690:	9a df       	rcall	.-204    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     692:	6f ea       	ldi	r22, 0xAF	; 175
     694:	ce 01       	movw	r24, r28
     696:	97 df       	rcall	.-210    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     698:	df 91       	pop	r29
     69a:	cf 91       	pop	r28
     69c:	08 95       	ret

0000069e <_ZN7DisplayC1Ev>:
     69e:	cf 93       	push	r28
     6a0:	df 93       	push	r29
     6a2:	ec 01       	movw	r28, r24
     6a4:	9c 5f       	subi	r25, 0xFC	; 252
     6a6:	0e 94 29 23 	call	0x4652	; 0x4652 <_ZN3I2CC1Ev>
     6aa:	ce 01       	movw	r24, r28
     6ac:	a8 df       	rcall	.-176    	; 0x5fe <_ZN7Display17InitializeDisplayEv>
     6ae:	df 91       	pop	r29
     6b0:	cf 91       	pop	r28
     6b2:	08 95       	ret

000006b4 <_ZN7Display6invertEh>:
     6b4:	66 23       	and	r22, r22
     6b6:	19 f0       	breq	.+6      	; 0x6be <_ZN7Display6invertEh+0xa>
     6b8:	67 ea       	ldi	r22, 0xA7	; 167
     6ba:	85 cf       	rjmp	.-246    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     6bc:	08 95       	ret
     6be:	66 ea       	ldi	r22, 0xA6	; 166
     6c0:	82 cf       	rjmp	.-252    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     6c2:	08 95       	ret

000006c4 <_ZN7Display9sendFrameEv>:
     6c4:	ef 92       	push	r14
     6c6:	ff 92       	push	r15
     6c8:	0f 93       	push	r16
     6ca:	1f 93       	push	r17
     6cc:	cf 93       	push	r28
     6ce:	df 93       	push	r29
     6d0:	8c 01       	movw	r16, r24
     6d2:	61 e2       	ldi	r22, 0x21	; 33
     6d4:	78 df       	rcall	.-272    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     6d6:	60 e0       	ldi	r22, 0x00	; 0
     6d8:	c8 01       	movw	r24, r16
     6da:	75 df       	rcall	.-278    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     6dc:	6f e7       	ldi	r22, 0x7F	; 127
     6de:	c8 01       	movw	r24, r16
     6e0:	72 df       	rcall	.-284    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     6e2:	62 e2       	ldi	r22, 0x22	; 34
     6e4:	c8 01       	movw	r24, r16
     6e6:	6f df       	rcall	.-290    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     6e8:	60 e0       	ldi	r22, 0x00	; 0
     6ea:	c8 01       	movw	r24, r16
     6ec:	6c df       	rcall	.-296    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     6ee:	67 e0       	ldi	r22, 0x07	; 7
     6f0:	c8 01       	movw	r24, r16
     6f2:	69 df       	rcall	.-302    	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
     6f4:	78 01       	movw	r14, r16
     6f6:	8c ef       	ldi	r24, 0xFC	; 252
     6f8:	f8 1a       	sub	r15, r24
     6fa:	c7 01       	movw	r24, r14
     6fc:	0e 94 2e 23 	call	0x465c	; 0x465c <_ZN3I2C9twi_startEv>
     700:	68 e7       	ldi	r22, 0x78	; 120
     702:	c7 01       	movw	r24, r14
     704:	0e 94 36 23 	call	0x466c	; 0x466c <_ZN3I2C9twi_writeEh>
     708:	60 e4       	ldi	r22, 0x40	; 64
     70a:	c7 01       	movw	r24, r14
     70c:	0e 94 36 23 	call	0x466c	; 0x466c <_ZN3I2C9twi_writeEh>
     710:	c0 e0       	ldi	r28, 0x00	; 0
     712:	d0 e0       	ldi	r29, 0x00	; 0
     714:	f8 01       	movw	r30, r16
     716:	61 91       	ld	r22, Z+
     718:	8f 01       	movw	r16, r30
     71a:	c7 01       	movw	r24, r14
     71c:	0e 94 36 23 	call	0x466c	; 0x466c <_ZN3I2C9twi_writeEh>
     720:	21 96       	adiw	r28, 0x01	; 1
     722:	c1 15       	cp	r28, r1
     724:	f4 e0       	ldi	r31, 0x04	; 4
     726:	df 07       	cpc	r29, r31
     728:	a9 f7       	brne	.-22     	; 0x714 <_ZN7Display9sendFrameEv+0x50>
     72a:	c7 01       	movw	r24, r14
     72c:	0e 94 32 23 	call	0x4664	; 0x4664 <_ZN3I2C8twi_stopEv>
     730:	df 91       	pop	r29
     732:	cf 91       	pop	r28
     734:	1f 91       	pop	r17
     736:	0f 91       	pop	r16
     738:	ff 90       	pop	r15
     73a:	ef 90       	pop	r14
     73c:	08 95       	ret

0000073e <_ZN7Display9drawPixelEhhh>:
     73e:	66 23       	and	r22, r22
     740:	bc f1       	brlt	.+110    	; 0x7b0 <_ZN7Display9drawPixelEhhh+0x72>
     742:	40 34       	cpi	r20, 0x40	; 64
     744:	a8 f5       	brcc	.+106    	; 0x7b0 <_ZN7Display9drawPixelEhhh+0x72>
     746:	21 11       	cpse	r18, r1
     748:	19 c0       	rjmp	.+50     	; 0x77c <_ZN7Display9drawPixelEhhh+0x3e>
     74a:	e4 2f       	mov	r30, r20
     74c:	e6 95       	lsr	r30
     74e:	e6 95       	lsr	r30
     750:	e6 95       	lsr	r30
     752:	20 e8       	ldi	r18, 0x80	; 128
     754:	e2 9f       	mul	r30, r18
     756:	f0 01       	movw	r30, r0
     758:	11 24       	eor	r1, r1
     75a:	e6 0f       	add	r30, r22
     75c:	f1 1d       	adc	r31, r1
     75e:	e8 0f       	add	r30, r24
     760:	f9 1f       	adc	r31, r25
     762:	47 70       	andi	r20, 0x07	; 7
     764:	21 e0       	ldi	r18, 0x01	; 1
     766:	30 e0       	ldi	r19, 0x00	; 0
     768:	c9 01       	movw	r24, r18
     76a:	02 c0       	rjmp	.+4      	; 0x770 <_ZN7Display9drawPixelEhhh+0x32>
     76c:	88 0f       	add	r24, r24
     76e:	99 1f       	adc	r25, r25
     770:	4a 95       	dec	r20
     772:	e2 f7       	brpl	.-8      	; 0x76c <_ZN7Display9drawPixelEhhh+0x2e>
     774:	90 81       	ld	r25, Z
     776:	89 2b       	or	r24, r25
     778:	80 83       	st	Z, r24
     77a:	08 95       	ret
     77c:	e4 2f       	mov	r30, r20
     77e:	e6 95       	lsr	r30
     780:	e6 95       	lsr	r30
     782:	e6 95       	lsr	r30
     784:	30 e8       	ldi	r19, 0x80	; 128
     786:	e3 9f       	mul	r30, r19
     788:	f0 01       	movw	r30, r0
     78a:	11 24       	eor	r1, r1
     78c:	e6 0f       	add	r30, r22
     78e:	f1 1d       	adc	r31, r1
     790:	e8 0f       	add	r30, r24
     792:	f9 1f       	adc	r31, r25
     794:	47 70       	andi	r20, 0x07	; 7
     796:	81 e0       	ldi	r24, 0x01	; 1
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	9c 01       	movw	r18, r24
     79c:	02 c0       	rjmp	.+4      	; 0x7a2 <_ZN7Display9drawPixelEhhh+0x64>
     79e:	22 0f       	add	r18, r18
     7a0:	33 1f       	adc	r19, r19
     7a2:	4a 95       	dec	r20
     7a4:	e2 f7       	brpl	.-8      	; 0x79e <_ZN7Display9drawPixelEhhh+0x60>
     7a6:	a9 01       	movw	r20, r18
     7a8:	40 95       	com	r20
     7aa:	80 81       	ld	r24, Z
     7ac:	48 23       	and	r20, r24
     7ae:	40 83       	st	Z, r20
     7b0:	08 95       	ret

000007b2 <_ZN7Display9drawVLineEhhh>:
     7b2:	ff 92       	push	r15
     7b4:	0f 93       	push	r16
     7b6:	1f 93       	push	r17
     7b8:	cf 93       	push	r28
     7ba:	df 93       	push	r29
     7bc:	ec 01       	movw	r28, r24
     7be:	06 2f       	mov	r16, r22
     7c0:	22 23       	and	r18, r18
     7c2:	59 f0       	breq	.+22     	; 0x7da <_ZN7Display9drawVLineEhhh+0x28>
     7c4:	f2 2e       	mov	r15, r18
     7c6:	f4 0e       	add	r15, r20
     7c8:	14 2f       	mov	r17, r20
     7ca:	20 e0       	ldi	r18, 0x00	; 0
     7cc:	41 2f       	mov	r20, r17
     7ce:	60 2f       	mov	r22, r16
     7d0:	ce 01       	movw	r24, r28
     7d2:	b5 df       	rcall	.-150    	; 0x73e <_ZN7Display9drawPixelEhhh>
     7d4:	1f 5f       	subi	r17, 0xFF	; 255
     7d6:	1f 11       	cpse	r17, r15
     7d8:	f8 cf       	rjmp	.-16     	; 0x7ca <_ZN7Display9drawVLineEhhh+0x18>
     7da:	df 91       	pop	r29
     7dc:	cf 91       	pop	r28
     7de:	1f 91       	pop	r17
     7e0:	0f 91       	pop	r16
     7e2:	ff 90       	pop	r15
     7e4:	08 95       	ret

000007e6 <_ZN7Display9drawHLineEhhh>:
     7e6:	ff 92       	push	r15
     7e8:	0f 93       	push	r16
     7ea:	1f 93       	push	r17
     7ec:	cf 93       	push	r28
     7ee:	df 93       	push	r29
     7f0:	ec 01       	movw	r28, r24
     7f2:	04 2f       	mov	r16, r20
     7f4:	22 23       	and	r18, r18
     7f6:	59 f0       	breq	.+22     	; 0x80e <_ZN7Display9drawHLineEhhh+0x28>
     7f8:	f2 2e       	mov	r15, r18
     7fa:	f6 0e       	add	r15, r22
     7fc:	16 2f       	mov	r17, r22
     7fe:	20 e0       	ldi	r18, 0x00	; 0
     800:	40 2f       	mov	r20, r16
     802:	61 2f       	mov	r22, r17
     804:	ce 01       	movw	r24, r28
     806:	9b df       	rcall	.-202    	; 0x73e <_ZN7Display9drawPixelEhhh>
     808:	1f 5f       	subi	r17, 0xFF	; 255
     80a:	1f 11       	cpse	r17, r15
     80c:	f8 cf       	rjmp	.-16     	; 0x7fe <_ZN7Display9drawHLineEhhh+0x18>
     80e:	df 91       	pop	r29
     810:	cf 91       	pop	r28
     812:	1f 91       	pop	r17
     814:	0f 91       	pop	r16
     816:	ff 90       	pop	r15
     818:	08 95       	ret

0000081a <_ZN7Display13drawRectangleEhhhhh>:
     81a:	5f 92       	push	r5
     81c:	6f 92       	push	r6
     81e:	7f 92       	push	r7
     820:	8f 92       	push	r8
     822:	9f 92       	push	r9
     824:	af 92       	push	r10
     826:	bf 92       	push	r11
     828:	cf 92       	push	r12
     82a:	df 92       	push	r13
     82c:	ef 92       	push	r14
     82e:	ff 92       	push	r15
     830:	0f 93       	push	r16
     832:	1f 93       	push	r17
     834:	cf 93       	push	r28
     836:	df 93       	push	r29
     838:	6c 01       	movw	r12, r24
     83a:	76 2e       	mov	r7, r22
     83c:	84 2e       	mov	r8, r20
     83e:	c2 2f       	mov	r28, r18
     840:	a2 2e       	mov	r10, r18
     842:	a6 1a       	sub	r10, r22
     844:	a3 94       	inc	r10
     846:	d0 2f       	mov	r29, r16
     848:	d4 1b       	sub	r29, r20
     84a:	ee 20       	and	r14, r14
     84c:	59 f0       	breq	.+22     	; 0x864 <_ZN7Display13drawRectangleEhhhhh+0x4a>
     84e:	b1 2c       	mov	r11, r1
     850:	1a 14       	cp	r1, r10
     852:	1b 04       	cpc	r1, r11
     854:	74 f5       	brge	.+92     	; 0x8b2 <_ZN7Display13drawRectangleEhhhhh+0x98>
     856:	e1 2c       	mov	r14, r1
     858:	f1 2c       	mov	r15, r1
     85a:	0d 2f       	mov	r16, r29
     85c:	10 e0       	ldi	r17, 0x00	; 0
     85e:	51 2c       	mov	r5, r1
     860:	61 2c       	mov	r6, r1
     862:	22 c0       	rjmp	.+68     	; 0x8a8 <_ZN7Display13drawRectangleEhhhhh+0x8e>
     864:	2a 2d       	mov	r18, r10
     866:	bf df       	rcall	.-130    	; 0x7e6 <_ZN7Display9drawHLineEhhh>
     868:	2a 2d       	mov	r18, r10
     86a:	40 2f       	mov	r20, r16
     86c:	67 2d       	mov	r22, r7
     86e:	c6 01       	movw	r24, r12
     870:	ba df       	rcall	.-140    	; 0x7e6 <_ZN7Display9drawHLineEhhh>
     872:	2d 2f       	mov	r18, r29
     874:	48 2d       	mov	r20, r8
     876:	67 2d       	mov	r22, r7
     878:	c6 01       	movw	r24, r12
     87a:	9b df       	rcall	.-202    	; 0x7b2 <_ZN7Display9drawVLineEhhh>
     87c:	2d 2f       	mov	r18, r29
     87e:	48 2d       	mov	r20, r8
     880:	6c 2f       	mov	r22, r28
     882:	c6 01       	movw	r24, r12
     884:	96 df       	rcall	.-212    	; 0x7b2 <_ZN7Display9drawVLineEhhh>
     886:	15 c0       	rjmp	.+42     	; 0x8b2 <_ZN7Display13drawRectangleEhhhhh+0x98>
     888:	4c 2f       	mov	r20, r28
     88a:	48 0d       	add	r20, r8
     88c:	20 e0       	ldi	r18, 0x00	; 0
     88e:	69 2d       	mov	r22, r9
     890:	c6 01       	movw	r24, r12
     892:	55 df       	rcall	.-342    	; 0x73e <_ZN7Display9drawPixelEhhh>
     894:	21 96       	adiw	r28, 0x01	; 1
     896:	0c 17       	cp	r16, r28
     898:	1d 07       	cpc	r17, r29
     89a:	b4 f7       	brge	.-20     	; 0x888 <_ZN7Display13drawRectangleEhhhhh+0x6e>
     89c:	8f ef       	ldi	r24, 0xFF	; 255
     89e:	e8 1a       	sub	r14, r24
     8a0:	f8 0a       	sbc	r15, r24
     8a2:	ea 14       	cp	r14, r10
     8a4:	fb 04       	cpc	r15, r11
     8a6:	2c f4       	brge	.+10     	; 0x8b2 <_ZN7Display13drawRectangleEhhhhh+0x98>
     8a8:	c5 2d       	mov	r28, r5
     8aa:	d6 2d       	mov	r29, r6
     8ac:	97 2c       	mov	r9, r7
     8ae:	9e 0c       	add	r9, r14
     8b0:	eb cf       	rjmp	.-42     	; 0x888 <_ZN7Display13drawRectangleEhhhhh+0x6e>
     8b2:	df 91       	pop	r29
     8b4:	cf 91       	pop	r28
     8b6:	1f 91       	pop	r17
     8b8:	0f 91       	pop	r16
     8ba:	ff 90       	pop	r15
     8bc:	ef 90       	pop	r14
     8be:	df 90       	pop	r13
     8c0:	cf 90       	pop	r12
     8c2:	bf 90       	pop	r11
     8c4:	af 90       	pop	r10
     8c6:	9f 90       	pop	r9
     8c8:	8f 90       	pop	r8
     8ca:	7f 90       	pop	r7
     8cc:	6f 90       	pop	r6
     8ce:	5f 90       	pop	r5
     8d0:	08 95       	ret

000008d2 <_ZN7Display9draw_lineEhhhf>:
     8d2:	2f 92       	push	r2
     8d4:	3f 92       	push	r3
     8d6:	4f 92       	push	r4
     8d8:	5f 92       	push	r5
     8da:	6f 92       	push	r6
     8dc:	7f 92       	push	r7
     8de:	8f 92       	push	r8
     8e0:	9f 92       	push	r9
     8e2:	af 92       	push	r10
     8e4:	bf 92       	push	r11
     8e6:	cf 92       	push	r12
     8e8:	df 92       	push	r13
     8ea:	ef 92       	push	r14
     8ec:	ff 92       	push	r15
     8ee:	0f 93       	push	r16
     8f0:	1f 93       	push	r17
     8f2:	cf 93       	push	r28
     8f4:	df 93       	push	r29
     8f6:	cd b7       	in	r28, 0x3d	; 61
     8f8:	de b7       	in	r29, 0x3e	; 62
     8fa:	2b 97       	sbiw	r28, 0x0b	; 11
     8fc:	0f b6       	in	r0, 0x3f	; 63
     8fe:	f8 94       	cli
     900:	de bf       	out	0x3e, r29	; 62
     902:	0f be       	out	0x3f, r0	; 63
     904:	cd bf       	out	0x3d, r28	; 61
     906:	1c 01       	movw	r2, r24
     908:	d6 2e       	mov	r13, r22
     90a:	c4 2e       	mov	r12, r20
     90c:	29 83       	std	Y+1, r18	; 0x01
     90e:	22 23       	and	r18, r18
     910:	09 f4       	brne	.+2      	; 0x914 <_ZN7Display9draw_lineEhhhf+0x42>
     912:	68 c0       	rjmp	.+208    	; 0x9e4 <_ZN7Display9draw_lineEhhhf+0x112>
     914:	c8 01       	movw	r24, r16
     916:	b7 01       	movw	r22, r14
     918:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <cos>
     91c:	2b 01       	movw	r4, r22
     91e:	3c 01       	movw	r6, r24
     920:	c8 01       	movw	r24, r16
     922:	b7 01       	movw	r22, r14
     924:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <sin>
     928:	4b 01       	movw	r8, r22
     92a:	5c 01       	movw	r10, r24
     92c:	1b 86       	std	Y+11, r1	; 0x0b
     92e:	1a 86       	std	Y+10, r1	; 0x0a
     930:	8c 2d       	mov	r24, r12
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	a0 e0       	ldi	r26, 0x00	; 0
     936:	b0 e0       	ldi	r27, 0x00	; 0
     938:	8a 83       	std	Y+2, r24	; 0x02
     93a:	9b 83       	std	Y+3, r25	; 0x03
     93c:	ac 83       	std	Y+4, r26	; 0x04
     93e:	bd 83       	std	Y+5, r27	; 0x05
     940:	8d 2d       	mov	r24, r13
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	a0 e0       	ldi	r26, 0x00	; 0
     946:	b0 e0       	ldi	r27, 0x00	; 0
     948:	8e 83       	std	Y+6, r24	; 0x06
     94a:	9f 83       	std	Y+7, r25	; 0x07
     94c:	a8 87       	std	Y+8, r26	; 0x08
     94e:	b9 87       	std	Y+9, r27	; 0x09
     950:	aa 85       	ldd	r26, Y+10	; 0x0a
     952:	bb 85       	ldd	r27, Y+11	; 0x0b
     954:	bd 01       	movw	r22, r26
     956:	88 27       	eor	r24, r24
     958:	77 fd       	sbrc	r23, 7
     95a:	80 95       	com	r24
     95c:	98 2f       	mov	r25, r24
     95e:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     962:	a5 01       	movw	r20, r10
     964:	94 01       	movw	r18, r8
     966:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     96a:	6b 01       	movw	r12, r22
     96c:	7c 01       	movw	r14, r24
     96e:	6a 81       	ldd	r22, Y+2	; 0x02
     970:	7b 81       	ldd	r23, Y+3	; 0x03
     972:	8c 81       	ldd	r24, Y+4	; 0x04
     974:	9d 81       	ldd	r25, Y+5	; 0x05
     976:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     97a:	9b 01       	movw	r18, r22
     97c:	ac 01       	movw	r20, r24
     97e:	c7 01       	movw	r24, r14
     980:	b6 01       	movw	r22, r12
     982:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
     986:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
     98a:	16 2f       	mov	r17, r22
     98c:	6a 85       	ldd	r22, Y+10	; 0x0a
     98e:	7b 85       	ldd	r23, Y+11	; 0x0b
     990:	71 95       	neg	r23
     992:	61 95       	neg	r22
     994:	71 09       	sbc	r23, r1
     996:	88 27       	eor	r24, r24
     998:	77 fd       	sbrc	r23, 7
     99a:	80 95       	com	r24
     99c:	98 2f       	mov	r25, r24
     99e:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     9a2:	a3 01       	movw	r20, r6
     9a4:	92 01       	movw	r18, r4
     9a6:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     9aa:	6b 01       	movw	r12, r22
     9ac:	7c 01       	movw	r14, r24
     9ae:	6e 81       	ldd	r22, Y+6	; 0x06
     9b0:	7f 81       	ldd	r23, Y+7	; 0x07
     9b2:	88 85       	ldd	r24, Y+8	; 0x08
     9b4:	99 85       	ldd	r25, Y+9	; 0x09
     9b6:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     9ba:	9b 01       	movw	r18, r22
     9bc:	ac 01       	movw	r20, r24
     9be:	c7 01       	movw	r24, r14
     9c0:	b6 01       	movw	r22, r12
     9c2:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
     9c6:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
     9ca:	20 e0       	ldi	r18, 0x00	; 0
     9cc:	41 2f       	mov	r20, r17
     9ce:	c1 01       	movw	r24, r2
     9d0:	b6 de       	rcall	.-660    	; 0x73e <_ZN7Display9drawPixelEhhh>
     9d2:	ea 85       	ldd	r30, Y+10	; 0x0a
     9d4:	fb 85       	ldd	r31, Y+11	; 0x0b
     9d6:	31 96       	adiw	r30, 0x01	; 1
     9d8:	fb 87       	std	Y+11, r31	; 0x0b
     9da:	ea 87       	std	Y+10, r30	; 0x0a
     9dc:	f9 81       	ldd	r31, Y+1	; 0x01
     9de:	ef 17       	cp	r30, r31
     9e0:	08 f4       	brcc	.+2      	; 0x9e4 <_ZN7Display9draw_lineEhhhf+0x112>
     9e2:	b6 cf       	rjmp	.-148    	; 0x950 <_ZN7Display9draw_lineEhhhf+0x7e>
     9e4:	2b 96       	adiw	r28, 0x0b	; 11
     9e6:	0f b6       	in	r0, 0x3f	; 63
     9e8:	f8 94       	cli
     9ea:	de bf       	out	0x3e, r29	; 62
     9ec:	0f be       	out	0x3f, r0	; 63
     9ee:	cd bf       	out	0x3d, r28	; 61
     9f0:	df 91       	pop	r29
     9f2:	cf 91       	pop	r28
     9f4:	1f 91       	pop	r17
     9f6:	0f 91       	pop	r16
     9f8:	ff 90       	pop	r15
     9fa:	ef 90       	pop	r14
     9fc:	df 90       	pop	r13
     9fe:	cf 90       	pop	r12
     a00:	bf 90       	pop	r11
     a02:	af 90       	pop	r10
     a04:	9f 90       	pop	r9
     a06:	8f 90       	pop	r8
     a08:	7f 90       	pop	r7
     a0a:	6f 90       	pop	r6
     a0c:	5f 90       	pop	r5
     a0e:	4f 90       	pop	r4
     a10:	3f 90       	pop	r3
     a12:	2f 90       	pop	r2
     a14:	08 95       	ret

00000a16 <_ZN7Display13draw_triangleEhhhff>:
     a16:	2f 92       	push	r2
     a18:	3f 92       	push	r3
     a1a:	4f 92       	push	r4
     a1c:	5f 92       	push	r5
     a1e:	6f 92       	push	r6
     a20:	7f 92       	push	r7
     a22:	8f 92       	push	r8
     a24:	9f 92       	push	r9
     a26:	af 92       	push	r10
     a28:	bf 92       	push	r11
     a2a:	cf 92       	push	r12
     a2c:	df 92       	push	r13
     a2e:	ef 92       	push	r14
     a30:	ff 92       	push	r15
     a32:	0f 93       	push	r16
     a34:	1f 93       	push	r17
     a36:	cf 93       	push	r28
     a38:	df 93       	push	r29
     a3a:	cd b7       	in	r28, 0x3d	; 61
     a3c:	de b7       	in	r29, 0x3e	; 62
     a3e:	60 97       	sbiw	r28, 0x10	; 16
     a40:	0f b6       	in	r0, 0x3f	; 63
     a42:	f8 94       	cli
     a44:	de bf       	out	0x3e, r29	; 62
     a46:	0f be       	out	0x3f, r0	; 63
     a48:	cd bf       	out	0x3d, r28	; 61
     a4a:	1c 01       	movw	r2, r24
     a4c:	6f 87       	std	Y+15, r22	; 0x0f
     a4e:	4d 83       	std	Y+5, r20	; 0x05
     a50:	29 83       	std	Y+1, r18	; 0x01
     a52:	c6 01       	movw	r24, r12
     a54:	b5 01       	movw	r22, r10
     a56:	25 e3       	ldi	r18, 0x35	; 53
     a58:	3a ef       	ldi	r19, 0xFA	; 250
     a5a:	4e e8       	ldi	r20, 0x8E	; 142
     a5c:	5c e3       	ldi	r21, 0x3C	; 60
     a5e:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     a62:	4b 01       	movw	r8, r22
     a64:	5c 01       	movw	r10, r24
     a66:	25 e3       	ldi	r18, 0x35	; 53
     a68:	3a ef       	ldi	r19, 0xFA	; 250
     a6a:	4e e8       	ldi	r20, 0x8E	; 142
     a6c:	5c e3       	ldi	r21, 0x3C	; 60
     a6e:	c8 01       	movw	r24, r16
     a70:	b7 01       	movw	r22, r14
     a72:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     a76:	6e 83       	std	Y+6, r22	; 0x06
     a78:	7f 83       	std	Y+7, r23	; 0x07
     a7a:	88 87       	std	Y+8, r24	; 0x08
     a7c:	99 87       	std	Y+9, r25	; 0x09
     a7e:	79 80       	ldd	r7, Y+1	; 0x01
     a80:	76 94       	lsr	r7
     a82:	85 01       	movw	r16, r10
     a84:	74 01       	movw	r14, r8
     a86:	27 2d       	mov	r18, r7
     a88:	4d 81       	ldd	r20, Y+5	; 0x05
     a8a:	6f 85       	ldd	r22, Y+15	; 0x0f
     a8c:	c1 01       	movw	r24, r2
     a8e:	21 df       	rcall	.-446    	; 0x8d2 <_ZN7Display9draw_lineEhhhf>
     a90:	2b ed       	ldi	r18, 0xDB	; 219
     a92:	3f e0       	ldi	r19, 0x0F	; 15
     a94:	49 e4       	ldi	r20, 0x49	; 73
     a96:	50 e4       	ldi	r21, 0x40	; 64
     a98:	c5 01       	movw	r24, r10
     a9a:	b4 01       	movw	r22, r8
     a9c:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
     aa0:	7b 01       	movw	r14, r22
     aa2:	8c 01       	movw	r16, r24
     aa4:	27 2d       	mov	r18, r7
     aa6:	4d 81       	ldd	r20, Y+5	; 0x05
     aa8:	6f 85       	ldd	r22, Y+15	; 0x0f
     aaa:	c1 01       	movw	r24, r2
     aac:	12 df       	rcall	.-476    	; 0x8d2 <_ZN7Display9draw_lineEhhhf>
     aae:	6e 81       	ldd	r22, Y+6	; 0x06
     ab0:	7f 81       	ldd	r23, Y+7	; 0x07
     ab2:	88 85       	ldd	r24, Y+8	; 0x08
     ab4:	99 85       	ldd	r25, Y+9	; 0x09
     ab6:	0e 94 94 2d 	call	0x5b28	; 0x5b28 <tan>
     aba:	6b 01       	movw	r12, r22
     abc:	7c 01       	movw	r14, r24
     abe:	67 2d       	mov	r22, r7
     ac0:	70 e0       	ldi	r23, 0x00	; 0
     ac2:	80 e0       	ldi	r24, 0x00	; 0
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     aca:	a7 01       	movw	r20, r14
     acc:	96 01       	movw	r18, r12
     ace:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     ad2:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
     ad6:	68 8b       	std	Y+16, r22	; 0x10
     ad8:	2b ed       	ldi	r18, 0xDB	; 219
     ada:	3f e0       	ldi	r19, 0x0F	; 15
     adc:	49 ec       	ldi	r20, 0xC9	; 201
     ade:	5f e3       	ldi	r21, 0x3F	; 63
     ae0:	c5 01       	movw	r24, r10
     ae2:	b4 01       	movw	r22, r8
     ae4:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
     ae8:	6a 87       	std	Y+10, r22	; 0x0a
     aea:	7b 87       	std	Y+11, r23	; 0x0b
     aec:	8c 87       	std	Y+12, r24	; 0x0c
     aee:	9d 87       	std	Y+13, r25	; 0x0d
     af0:	7b 01       	movw	r14, r22
     af2:	8c 01       	movw	r16, r24
     af4:	28 89       	ldd	r18, Y+16	; 0x10
     af6:	4d 81       	ldd	r20, Y+5	; 0x05
     af8:	6f 85       	ldd	r22, Y+15	; 0x0f
     afa:	c1 01       	movw	r24, r2
     afc:	ea de       	rcall	.-556    	; 0x8d2 <_ZN7Display9draw_lineEhhhf>
     afe:	6e 81       	ldd	r22, Y+6	; 0x06
     b00:	7f 81       	ldd	r23, Y+7	; 0x07
     b02:	88 85       	ldd	r24, Y+8	; 0x08
     b04:	99 85       	ldd	r25, Y+9	; 0x09
     b06:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <cos>
     b0a:	6b 01       	movw	r12, r22
     b0c:	7c 01       	movw	r14, r24
     b0e:	29 81       	ldd	r18, Y+1	; 0x01
     b10:	62 2f       	mov	r22, r18
     b12:	70 e0       	ldi	r23, 0x00	; 0
     b14:	80 e0       	ldi	r24, 0x00	; 0
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     b1c:	2b 01       	movw	r4, r22
     b1e:	3c 01       	movw	r6, r24
     b20:	a7 01       	movw	r20, r14
     b22:	96 01       	movw	r18, r12
     b24:	c7 01       	movw	r24, r14
     b26:	b6 01       	movw	r22, r12
     b28:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
     b2c:	9b 01       	movw	r18, r22
     b2e:	ac 01       	movw	r20, r24
     b30:	c3 01       	movw	r24, r6
     b32:	b2 01       	movw	r22, r4
     b34:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
     b38:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
     b3c:	6e 87       	std	Y+14, r22	; 0x0e
     b3e:	e8 89       	ldd	r30, Y+16	; 0x10
     b40:	6e 2f       	mov	r22, r30
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     b4c:	69 83       	std	Y+1, r22	; 0x01
     b4e:	7a 83       	std	Y+2, r23	; 0x02
     b50:	8b 83       	std	Y+3, r24	; 0x03
     b52:	9c 83       	std	Y+4, r25	; 0x04
     b54:	6a 85       	ldd	r22, Y+10	; 0x0a
     b56:	7b 85       	ldd	r23, Y+11	; 0x0b
     b58:	8c 85       	ldd	r24, Y+12	; 0x0c
     b5a:	9d 85       	ldd	r25, Y+13	; 0x0d
     b5c:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <cos>
     b60:	6b 01       	movw	r12, r22
     b62:	7c 01       	movw	r14, r24
     b64:	ff 85       	ldd	r31, Y+15	; 0x0f
     b66:	6f 2f       	mov	r22, r31
     b68:	70 e0       	ldi	r23, 0x00	; 0
     b6a:	80 e0       	ldi	r24, 0x00	; 0
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     b72:	2b 01       	movw	r4, r22
     b74:	3c 01       	movw	r6, r24
     b76:	a7 01       	movw	r20, r14
     b78:	96 01       	movw	r18, r12
     b7a:	69 81       	ldd	r22, Y+1	; 0x01
     b7c:	7a 81       	ldd	r23, Y+2	; 0x02
     b7e:	8b 81       	ldd	r24, Y+3	; 0x03
     b80:	9c 81       	ldd	r25, Y+4	; 0x04
     b82:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     b86:	9b 01       	movw	r18, r22
     b88:	ac 01       	movw	r20, r24
     b8a:	c3 01       	movw	r24, r6
     b8c:	b2 01       	movw	r22, r4
     b8e:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
     b92:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
     b96:	6f 87       	std	Y+15, r22	; 0x0f
     b98:	6a 85       	ldd	r22, Y+10	; 0x0a
     b9a:	7b 85       	ldd	r23, Y+11	; 0x0b
     b9c:	8c 85       	ldd	r24, Y+12	; 0x0c
     b9e:	9d 85       	ldd	r25, Y+13	; 0x0d
     ba0:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <sin>
     ba4:	6b 01       	movw	r12, r22
     ba6:	7c 01       	movw	r14, r24
     ba8:	2d 81       	ldd	r18, Y+5	; 0x05
     baa:	62 2f       	mov	r22, r18
     bac:	70 e0       	ldi	r23, 0x00	; 0
     bae:	80 e0       	ldi	r24, 0x00	; 0
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     bb6:	2b 01       	movw	r4, r22
     bb8:	3c 01       	movw	r6, r24
     bba:	a7 01       	movw	r20, r14
     bbc:	96 01       	movw	r18, r12
     bbe:	69 81       	ldd	r22, Y+1	; 0x01
     bc0:	7a 81       	ldd	r23, Y+2	; 0x02
     bc2:	8b 81       	ldd	r24, Y+3	; 0x03
     bc4:	9c 81       	ldd	r25, Y+4	; 0x04
     bc6:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     bca:	9b 01       	movw	r18, r22
     bcc:	ac 01       	movw	r20, r24
     bce:	c3 01       	movw	r24, r6
     bd0:	b2 01       	movw	r22, r4
     bd2:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
     bd6:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
     bda:	d6 2e       	mov	r13, r22
     bdc:	a5 01       	movw	r20, r10
     bde:	94 01       	movw	r18, r8
     be0:	6e 81       	ldd	r22, Y+6	; 0x06
     be2:	7f 81       	ldd	r23, Y+7	; 0x07
     be4:	88 85       	ldd	r24, Y+8	; 0x08
     be6:	99 85       	ldd	r25, Y+9	; 0x09
     be8:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
     bec:	7b 01       	movw	r14, r22
     bee:	8c 01       	movw	r16, r24
     bf0:	2e 85       	ldd	r18, Y+14	; 0x0e
     bf2:	4d 2d       	mov	r20, r13
     bf4:	6f 85       	ldd	r22, Y+15	; 0x0f
     bf6:	c1 01       	movw	r24, r2
     bf8:	6c de       	rcall	.-808    	; 0x8d2 <_ZN7Display9draw_lineEhhhf>
     bfa:	2e 81       	ldd	r18, Y+6	; 0x06
     bfc:	3f 81       	ldd	r19, Y+7	; 0x07
     bfe:	48 85       	ldd	r20, Y+8	; 0x08
     c00:	59 85       	ldd	r21, Y+9	; 0x09
     c02:	c5 01       	movw	r24, r10
     c04:	b4 01       	movw	r22, r8
     c06:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
     c0a:	2b ed       	ldi	r18, 0xDB	; 219
     c0c:	3f e0       	ldi	r19, 0x0F	; 15
     c0e:	49 e4       	ldi	r20, 0x49	; 73
     c10:	50 e4       	ldi	r21, 0x40	; 64
     c12:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
     c16:	7b 01       	movw	r14, r22
     c18:	8c 01       	movw	r16, r24
     c1a:	2e 85       	ldd	r18, Y+14	; 0x0e
     c1c:	4d 2d       	mov	r20, r13
     c1e:	6f 85       	ldd	r22, Y+15	; 0x0f
     c20:	c1 01       	movw	r24, r2
     c22:	57 de       	rcall	.-850    	; 0x8d2 <_ZN7Display9draw_lineEhhhf>
     c24:	60 96       	adiw	r28, 0x10	; 16
     c26:	0f b6       	in	r0, 0x3f	; 63
     c28:	f8 94       	cli
     c2a:	de bf       	out	0x3e, r29	; 62
     c2c:	0f be       	out	0x3f, r0	; 63
     c2e:	cd bf       	out	0x3d, r28	; 61
     c30:	df 91       	pop	r29
     c32:	cf 91       	pop	r28
     c34:	1f 91       	pop	r17
     c36:	0f 91       	pop	r16
     c38:	ff 90       	pop	r15
     c3a:	ef 90       	pop	r14
     c3c:	df 90       	pop	r13
     c3e:	cf 90       	pop	r12
     c40:	bf 90       	pop	r11
     c42:	af 90       	pop	r10
     c44:	9f 90       	pop	r9
     c46:	8f 90       	pop	r8
     c48:	7f 90       	pop	r7
     c4a:	6f 90       	pop	r6
     c4c:	5f 90       	pop	r5
     c4e:	4f 90       	pop	r4
     c50:	3f 90       	pop	r3
     c52:	2f 90       	pop	r2
     c54:	08 95       	ret

00000c56 <_ZN7Display9draw_ASCIEhhh>:
     c56:	0f 93       	push	r16
     c58:	1f 93       	push	r17
     c5a:	cf 93       	push	r28
     c5c:	df 93       	push	r29
     c5e:	61 32       	cpi	r22, 0x21	; 33
     c60:	08 f4       	brcc	.+2      	; 0xc64 <_ZN7Display9draw_ASCIEhhh+0xe>
     c62:	42 c0       	rjmp	.+132    	; 0xce8 <_ZN7Display9draw_ASCIEhhh+0x92>
     c64:	a4 2f       	mov	r26, r20
     c66:	b0 e0       	ldi	r27, 0x00	; 0
     c68:	02 2f       	mov	r16, r18
     c6a:	06 95       	lsr	r16
     c6c:	06 95       	lsr	r16
     c6e:	06 95       	lsr	r16
     c70:	30 e8       	ldi	r19, 0x80	; 128
     c72:	03 9f       	mul	r16, r19
     c74:	80 01       	movw	r16, r0
     c76:	11 24       	eor	r1, r1
     c78:	ed 01       	movw	r28, r26
     c7a:	c0 0f       	add	r28, r16
     c7c:	d1 1f       	adc	r29, r17
     c7e:	00 58       	subi	r16, 0x80	; 128
     c80:	1f 4f       	sbci	r17, 0xFF	; 255
     c82:	0a 0f       	add	r16, r26
     c84:	1b 1f       	adc	r17, r27
     c86:	61 52       	subi	r22, 0x21	; 33
     c88:	46 2f       	mov	r20, r22
     c8a:	50 e0       	ldi	r21, 0x00	; 0
     c8c:	fa 01       	movw	r30, r20
     c8e:	ee 0f       	add	r30, r30
     c90:	ff 1f       	adc	r31, r31
     c92:	ee 0f       	add	r30, r30
     c94:	ff 1f       	adc	r31, r31
     c96:	e4 0f       	add	r30, r20
     c98:	f5 1f       	adc	r31, r21
     c9a:	e4 59       	subi	r30, 0x94	; 148
     c9c:	fd 4f       	sbci	r31, 0xFD	; 253
     c9e:	dc 01       	movw	r26, r24
     ca0:	ac 0f       	add	r26, r28
     ca2:	bd 1f       	adc	r27, r29
     ca4:	ae 01       	movw	r20, r28
     ca6:	05 96       	adiw	r24, 0x05	; 5
     ca8:	8c 0f       	add	r24, r28
     caa:	9d 1f       	adc	r25, r29
     cac:	27 70       	andi	r18, 0x07	; 7
     cae:	64 91       	lpm	r22, Z
     cb0:	70 e0       	ldi	r23, 0x00	; 0
     cb2:	02 2e       	mov	r0, r18
     cb4:	02 c0       	rjmp	.+4      	; 0xcba <_ZN7Display9draw_ASCIEhhh+0x64>
     cb6:	66 0f       	add	r22, r22
     cb8:	77 1f       	adc	r23, r23
     cba:	0a 94       	dec	r0
     cbc:	e2 f7       	brpl	.-8      	; 0xcb6 <_ZN7Display9draw_ASCIEhhh+0x60>
     cbe:	3c 91       	ld	r19, X
     cc0:	36 2b       	or	r19, r22
     cc2:	3c 93       	st	X, r19
     cc4:	67 2f       	mov	r22, r23
     cc6:	77 27       	eor	r23, r23
     cc8:	61 15       	cp	r22, r1
     cca:	71 05       	cpc	r23, r1
     ccc:	41 f0       	breq	.+16     	; 0xcde <_ZN7Display9draw_ASCIEhhh+0x88>
     cce:	ed 01       	movw	r28, r26
     cd0:	c4 1b       	sub	r28, r20
     cd2:	d5 0b       	sbc	r29, r21
     cd4:	c0 0f       	add	r28, r16
     cd6:	d1 1f       	adc	r29, r17
     cd8:	38 81       	ld	r19, Y
     cda:	63 2b       	or	r22, r19
     cdc:	68 83       	st	Y, r22
     cde:	31 96       	adiw	r30, 0x01	; 1
     ce0:	11 96       	adiw	r26, 0x01	; 1
     ce2:	a8 17       	cp	r26, r24
     ce4:	b9 07       	cpc	r27, r25
     ce6:	19 f7       	brne	.-58     	; 0xcae <_ZN7Display9draw_ASCIEhhh+0x58>
     ce8:	df 91       	pop	r29
     cea:	cf 91       	pop	r28
     cec:	1f 91       	pop	r17
     cee:	0f 91       	pop	r16
     cf0:	08 95       	ret

00000cf2 <_ZN7Display16draw_number16x16Ehhh>:

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
     cf2:	ef 92       	push	r14
     cf4:	ff 92       	push	r15
     cf6:	0f 93       	push	r16
     cf8:	1f 93       	push	r17
     cfa:	cf 93       	push	r28
     cfc:	df 93       	push	r29
	uint16_t symbol;
	if(number>=0 && number<10){
     cfe:	6a 30       	cpi	r22, 0x0A	; 10
     d00:	08 f0       	brcs	.+2      	; 0xd04 <_ZN7Display16draw_number16x16Ehhh+0x12>
     d02:	66 c0       	rjmp	.+204    	; 0xdd0 <_ZN7Display16draw_number16x16Ehhh+0xde>
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d04:	50 e0       	ldi	r21, 0x00	; 0
     d06:	02 2f       	mov	r16, r18
     d08:	06 95       	lsr	r16
     d0a:	06 95       	lsr	r16
     d0c:	06 95       	lsr	r16
     d0e:	10 e0       	ldi	r17, 0x00	; 0
     d10:	d8 01       	movw	r26, r16
     d12:	b6 95       	lsr	r27
     d14:	ba 2f       	mov	r27, r26
     d16:	aa 27       	eor	r26, r26
     d18:	b7 95       	ror	r27
     d1a:	a7 95       	ror	r26
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d1c:	0f 5f       	subi	r16, 0xFF	; 255
     d1e:	1f 4f       	sbci	r17, 0xFF	; 255
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     d20:	16 95       	lsr	r17
     d22:	10 2f       	mov	r17, r16
     d24:	00 27       	eor	r16, r16
     d26:	17 95       	ror	r17
     d28:	07 95       	ror	r16
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d2a:	7d 01       	movw	r14, r26
     d2c:	30 e8       	ldi	r19, 0x80	; 128
     d2e:	e3 0e       	add	r14, r19
     d30:	f1 1c       	adc	r15, r1
     d32:	e4 0e       	add	r14, r20
     d34:	f5 1e       	adc	r15, r21
     d36:	e8 0e       	add	r14, r24
     d38:	f9 1e       	adc	r15, r25
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     d3a:	ea 01       	movw	r28, r20
     d3c:	c0 0f       	add	r28, r16
     d3e:	d1 1f       	adc	r29, r17
     d40:	60 97       	sbiw	r28, 0x10	; 16
     d42:	c8 0f       	add	r28, r24
     d44:	d9 1f       	adc	r29, r25
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d46:	04 0f       	add	r16, r20
     d48:	15 1f       	adc	r17, r21
     d4a:	00 59       	subi	r16, 0x90	; 144
     d4c:	1f 4f       	sbci	r17, 0xFF	; 255
     d4e:	08 0f       	add	r16, r24
     d50:	19 1f       	adc	r17, r25
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d52:	a4 0f       	add	r26, r20
     d54:	b5 1f       	adc	r27, r21
     d56:	a8 0f       	add	r26, r24
     d58:	b9 1f       	adc	r27, r25
     d5a:	e0 e2       	ldi	r30, 0x20	; 32
     d5c:	6e 9f       	mul	r22, r30
     d5e:	c0 01       	movw	r24, r0
     d60:	11 24       	eor	r1, r1
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d62:	40 e0       	ldi	r20, 0x00	; 0
     d64:	50 e0       	ldi	r21, 0x00	; 0
     d66:	84 5d       	subi	r24, 0xD4	; 212
     d68:	9e 4f       	sbci	r25, 0xFE	; 254
void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
     d6a:	27 70       	andi	r18, 0x07	; 7
     d6c:	fc 01       	movw	r30, r24
     d6e:	e4 0f       	add	r30, r20
     d70:	f5 1f       	adc	r31, r21

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
     d72:	e4 91       	lpm	r30, Z
     d74:	f0 e0       	ldi	r31, 0x00	; 0
			symbol = symbol << y%8;
     d76:	02 2e       	mov	r0, r18
     d78:	02 c0       	rjmp	.+4      	; 0xd7e <_ZN7Display16draw_number16x16Ehhh+0x8c>
     d7a:	ee 0f       	add	r30, r30
     d7c:	ff 1f       	adc	r31, r31
     d7e:	0a 94       	dec	r0
     d80:	e2 f7       	brpl	.-8      	; 0xd7a <_ZN7Display16draw_number16x16Ehhh+0x88>
			if(i<16){
     d82:	40 31       	cpi	r20, 0x10	; 16
     d84:	68 f4       	brcc	.+26     	; 0xda0 <_ZN7Display16draw_number16x16Ehhh+0xae>
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d86:	3c 91       	ld	r19, X
     d88:	3e 2b       	or	r19, r30
     d8a:	3c 93       	st	X, r19
				if(((symbol&0xFF00)>>8)==0){
     d8c:	6f 2f       	mov	r22, r31
     d8e:	77 27       	eor	r23, r23
     d90:	61 15       	cp	r22, r1
     d92:	71 05       	cpc	r23, r1
     d94:	89 f0       	breq	.+34     	; 0xdb8 <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d96:	f7 01       	movw	r30, r14
     d98:	30 81       	ld	r19, Z
     d9a:	36 2b       	or	r19, r22
     d9c:	30 83       	st	Z, r19
     d9e:	0c c0       	rjmp	.+24     	; 0xdb8 <_ZN7Display16draw_number16x16Ehhh+0xc6>
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     da0:	38 81       	ld	r19, Y
     da2:	3e 2b       	or	r19, r30
     da4:	38 83       	st	Y, r19
				if(((symbol&0xFF00)>>8)==0){
     da6:	6f 2f       	mov	r22, r31
     da8:	77 27       	eor	r23, r23
     daa:	61 15       	cp	r22, r1
     dac:	71 05       	cpc	r23, r1
     dae:	21 f0       	breq	.+8      	; 0xdb8 <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     db0:	f8 01       	movw	r30, r16
     db2:	30 81       	ld	r19, Z
     db4:	36 2b       	or	r19, r22
     db6:	30 83       	st	Z, r19
     db8:	4f 5f       	subi	r20, 0xFF	; 255
     dba:	5f 4f       	sbci	r21, 0xFF	; 255
     dbc:	ff ef       	ldi	r31, 0xFF	; 255
     dbe:	ef 1a       	sub	r14, r31
     dc0:	ff 0a       	sbc	r15, r31
     dc2:	21 96       	adiw	r28, 0x01	; 1
     dc4:	0f 5f       	subi	r16, 0xFF	; 255
     dc6:	1f 4f       	sbci	r17, 0xFF	; 255
     dc8:	11 96       	adiw	r26, 0x01	; 1
}

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
     dca:	40 32       	cpi	r20, 0x20	; 32
     dcc:	51 05       	cpc	r21, r1
     dce:	71 f6       	brne	.-100    	; 0xd6c <_ZN7Display16draw_number16x16Ehhh+0x7a>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
				}
			}
		}
	}
}
     dd0:	df 91       	pop	r29
     dd2:	cf 91       	pop	r28
     dd4:	1f 91       	pop	r17
     dd6:	0f 91       	pop	r16
     dd8:	ff 90       	pop	r15
     dda:	ef 90       	pop	r14
     ddc:	08 95       	ret

00000dde <_ZN7Display6analogEhhhh>:

void Display::analog(uint8_t stunde, uint8_t minute, uint8_t sekunde, uint8_t sekanzeige){
     dde:	2f 92       	push	r2
     de0:	3f 92       	push	r3
     de2:	4f 92       	push	r4
     de4:	5f 92       	push	r5
     de6:	6f 92       	push	r6
     de8:	7f 92       	push	r7
     dea:	8f 92       	push	r8
     dec:	9f 92       	push	r9
     dee:	af 92       	push	r10
     df0:	bf 92       	push	r11
     df2:	cf 92       	push	r12
     df4:	df 92       	push	r13
     df6:	ef 92       	push	r14
     df8:	ff 92       	push	r15
     dfa:	0f 93       	push	r16
     dfc:	1f 93       	push	r17
     dfe:	cf 93       	push	r28
     e00:	df 93       	push	r29
     e02:	cd b7       	in	r28, 0x3d	; 61
     e04:	de b7       	in	r29, 0x3e	; 62
     e06:	27 97       	sbiw	r28, 0x07	; 7
     e08:	0f b6       	in	r0, 0x3f	; 63
     e0a:	f8 94       	cli
     e0c:	de bf       	out	0x3e, r29	; 62
     e0e:	0f be       	out	0x3f, r0	; 63
     e10:	cd bf       	out	0x3d, r28	; 61
     e12:	9f 83       	std	Y+7, r25	; 0x07
     e14:	8e 83       	std	Y+6, r24	; 0x06
     e16:	6d 83       	std	Y+5, r22	; 0x05
     e18:	34 2e       	mov	r3, r20
	uint8_t Px=32-1;
	uint8_t Py=32-1;
	uint8_t x=0,y=0;
	float winkel=0;
	
	if (sekanzeige)
     e1a:	00 23       	and	r16, r16
     e1c:	09 f4       	brne	.+2      	; 0xe20 <_ZN7Display6analogEhhhh+0x42>
     e1e:	26 c1       	rjmp	.+588    	; 0x106c <_ZN7Display6analogEhhhh+0x28e>
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
     e20:	62 2f       	mov	r22, r18
     e22:	70 e0       	ldi	r23, 0x00	; 0
     e24:	80 e0       	ldi	r24, 0x00	; 0
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     e2c:	20 e0       	ldi	r18, 0x00	; 0
     e2e:	30 e0       	ldi	r19, 0x00	; 0
     e30:	40 ec       	ldi	r20, 0xC0	; 192
     e32:	50 e4       	ldi	r21, 0x40	; 64
     e34:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     e38:	2b ed       	ldi	r18, 0xDB	; 219
     e3a:	3f e0       	ldi	r19, 0x0F	; 15
     e3c:	49 e4       	ldi	r20, 0x49	; 73
     e3e:	50 e4       	ldi	r21, 0x40	; 64
     e40:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     e44:	20 e0       	ldi	r18, 0x00	; 0
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	44 e3       	ldi	r20, 0x34	; 52
     e4a:	53 e4       	ldi	r21, 0x43	; 67
     e4c:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
     e50:	2b ed       	ldi	r18, 0xDB	; 219
     e52:	3f e0       	ldi	r19, 0x0F	; 15
     e54:	49 ec       	ldi	r20, 0xC9	; 201
     e56:	5f e3       	ldi	r21, 0x3F	; 63
     e58:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
     e5c:	6b 01       	movw	r12, r22
     e5e:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     e60:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <cos>
     e64:	2b 01       	movw	r4, r22
     e66:	3c 01       	movw	r6, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e68:	c7 01       	movw	r24, r14
     e6a:	b6 01       	movw	r22, r12
     e6c:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <sin>
     e70:	4b 01       	movw	r8, r22
     e72:	5c 01       	movw	r10, r24
     e74:	00 e0       	ldi	r16, 0x00	; 0
     e76:	10 e0       	ldi	r17, 0x00	; 0
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e78:	b8 01       	movw	r22, r16
     e7a:	88 27       	eor	r24, r24
     e7c:	77 fd       	sbrc	r23, 7
     e7e:	80 95       	com	r24
     e80:	98 2f       	mov	r25, r24
     e82:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     e86:	6b 01       	movw	r12, r22
     e88:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e8a:	a5 01       	movw	r20, r10
     e8c:	94 01       	movw	r18, r8
     e8e:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     e92:	20 e0       	ldi	r18, 0x00	; 0
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	48 ef       	ldi	r20, 0xF8	; 248
     e98:	51 e4       	ldi	r21, 0x41	; 65
     e9a:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
     e9e:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
     ea2:	26 2e       	mov	r2, r22
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     ea4:	a3 01       	movw	r20, r6
     ea6:	92 01       	movw	r18, r4
     ea8:	c7 01       	movw	r24, r14
     eaa:	b6 01       	movw	r22, r12
     eac:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     eb0:	20 e0       	ldi	r18, 0x00	; 0
     eb2:	30 e0       	ldi	r19, 0x00	; 0
     eb4:	48 ef       	ldi	r20, 0xF8	; 248
     eb6:	51 e4       	ldi	r21, 0x41	; 65
     eb8:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
     ebc:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     ec0:	20 e0       	ldi	r18, 0x00	; 0
     ec2:	42 2d       	mov	r20, r2
     ec4:	8e 81       	ldd	r24, Y+6	; 0x06
     ec6:	9f 81       	ldd	r25, Y+7	; 0x07
     ec8:	3a dc       	rcall	.-1932   	; 0x73e <_ZN7Display9drawPixelEhhh>
     eca:	0f 5f       	subi	r16, 0xFF	; 255
     ecc:	1f 4f       	sbci	r17, 0xFF	; 255
	float winkel=0;
	
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
     ece:	09 31       	cpi	r16, 0x19	; 25
     ed0:	11 05       	cpc	r17, r1
     ed2:	91 f6       	brne	.-92     	; 0xe78 <_ZN7Display6analogEhhhh+0x9a>
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
     ed4:	63 2d       	mov	r22, r3
     ed6:	70 e0       	ldi	r23, 0x00	; 0
     ed8:	80 e0       	ldi	r24, 0x00	; 0
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     ee0:	69 83       	std	Y+1, r22	; 0x01
     ee2:	7a 83       	std	Y+2, r23	; 0x02
     ee4:	8b 83       	std	Y+3, r24	; 0x03
     ee6:	9c 83       	std	Y+4, r25	; 0x04
     ee8:	20 e0       	ldi	r18, 0x00	; 0
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	40 ec       	ldi	r20, 0xC0	; 192
     eee:	50 e4       	ldi	r21, 0x40	; 64
     ef0:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     ef4:	2b ed       	ldi	r18, 0xDB	; 219
     ef6:	3f e0       	ldi	r19, 0x0F	; 15
     ef8:	49 e4       	ldi	r20, 0x49	; 73
     efa:	50 e4       	ldi	r21, 0x40	; 64
     efc:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     f00:	20 e0       	ldi	r18, 0x00	; 0
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	44 e3       	ldi	r20, 0x34	; 52
     f06:	53 e4       	ldi	r21, 0x43	; 67
     f08:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
     f0c:	2b ed       	ldi	r18, 0xDB	; 219
     f0e:	3f e0       	ldi	r19, 0x0F	; 15
     f10:	49 ec       	ldi	r20, 0xC9	; 201
     f12:	5f e3       	ldi	r21, 0x3F	; 63
     f14:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
     f18:	6b 01       	movw	r12, r22
     f1a:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     f1c:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <cos>
     f20:	4b 01       	movw	r8, r22
     f22:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
     f24:	c7 01       	movw	r24, r14
     f26:	b6 01       	movw	r22, r12
     f28:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <sin>
     f2c:	2b 01       	movw	r4, r22
     f2e:	3c 01       	movw	r6, r24
     f30:	00 e0       	ldi	r16, 0x00	; 0
     f32:	10 e0       	ldi	r17, 0x00	; 0

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     f34:	b8 01       	movw	r22, r16
     f36:	88 27       	eor	r24, r24
     f38:	77 fd       	sbrc	r23, 7
     f3a:	80 95       	com	r24
     f3c:	98 2f       	mov	r25, r24
     f3e:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     f42:	6b 01       	movw	r12, r22
     f44:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     f46:	a3 01       	movw	r20, r6
     f48:	92 01       	movw	r18, r4
     f4a:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     f4e:	20 e0       	ldi	r18, 0x00	; 0
     f50:	30 e0       	ldi	r19, 0x00	; 0
     f52:	48 ef       	ldi	r20, 0xF8	; 248
     f54:	51 e4       	ldi	r21, 0x41	; 65
     f56:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
     f5a:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
     f5e:	36 2e       	mov	r3, r22

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     f60:	a5 01       	movw	r20, r10
     f62:	94 01       	movw	r18, r8
     f64:	c7 01       	movw	r24, r14
     f66:	b6 01       	movw	r22, r12
     f68:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     f6c:	20 e0       	ldi	r18, 0x00	; 0
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	48 ef       	ldi	r20, 0xF8	; 248
     f72:	51 e4       	ldi	r21, 0x41	; 65
     f74:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
     f78:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     f7c:	20 e0       	ldi	r18, 0x00	; 0
     f7e:	43 2d       	mov	r20, r3
     f80:	8e 81       	ldd	r24, Y+6	; 0x06
     f82:	9f 81       	ldd	r25, Y+7	; 0x07
     f84:	dc db       	rcall	.-2120   	; 0x73e <_ZN7Display9drawPixelEhhh>
     f86:	0f 5f       	subi	r16, 0xFF	; 255
     f88:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
     f8a:	05 31       	cpi	r16, 0x15	; 21
     f8c:	11 05       	cpc	r17, r1
     f8e:	91 f6       	brne	.-92     	; 0xf34 <_ZN7Display6analogEhhhh+0x156>
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
     f90:	2d 81       	ldd	r18, Y+5	; 0x05
     f92:	62 2f       	mov	r22, r18
     f94:	70 e0       	ldi	r23, 0x00	; 0
     f96:	80 e0       	ldi	r24, 0x00	; 0
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
     f9e:	20 e0       	ldi	r18, 0x00	; 0
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	40 ef       	ldi	r20, 0xF0	; 240
     fa4:	51 e4       	ldi	r21, 0x41	; 65
     fa6:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     faa:	6b 01       	movw	r12, r22
     fac:	7c 01       	movw	r14, r24
     fae:	20 e0       	ldi	r18, 0x00	; 0
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	40 e0       	ldi	r20, 0x00	; 0
     fb4:	5f e3       	ldi	r21, 0x3F	; 63
     fb6:	69 81       	ldd	r22, Y+1	; 0x01
     fb8:	7a 81       	ldd	r23, Y+2	; 0x02
     fba:	8b 81       	ldd	r24, Y+3	; 0x03
     fbc:	9c 81       	ldd	r25, Y+4	; 0x04
     fbe:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     fc2:	9b 01       	movw	r18, r22
     fc4:	ac 01       	movw	r20, r24
     fc6:	c7 01       	movw	r24, r14
     fc8:	b6 01       	movw	r22, r12
     fca:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
     fce:	2b ed       	ldi	r18, 0xDB	; 219
     fd0:	3f e0       	ldi	r19, 0x0F	; 15
     fd2:	49 e4       	ldi	r20, 0x49	; 73
     fd4:	50 e4       	ldi	r21, 0x40	; 64
     fd6:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
     fda:	20 e0       	ldi	r18, 0x00	; 0
     fdc:	30 e0       	ldi	r19, 0x00	; 0
     fde:	44 e3       	ldi	r20, 0x34	; 52
     fe0:	53 e4       	ldi	r21, 0x43	; 67
     fe2:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
     fe6:	2b ed       	ldi	r18, 0xDB	; 219
     fe8:	3f e0       	ldi	r19, 0x0F	; 15
     fea:	49 ec       	ldi	r20, 0xC9	; 201
     fec:	5f e3       	ldi	r21, 0x3F	; 63
     fee:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
     ff2:	6b 01       	movw	r12, r22
     ff4:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
     ff6:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <cos>
     ffa:	2b 01       	movw	r4, r22
     ffc:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
     ffe:	c7 01       	movw	r24, r14
    1000:	b6 01       	movw	r22, r12
    1002:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <sin>
    1006:	4b 01       	movw	r8, r22
    1008:	5c 01       	movw	r10, r24
    100a:	00 e0       	ldi	r16, 0x00	; 0
    100c:	10 e0       	ldi	r17, 0x00	; 0

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    100e:	b8 01       	movw	r22, r16
    1010:	88 27       	eor	r24, r24
    1012:	77 fd       	sbrc	r23, 7
    1014:	80 95       	com	r24
    1016:	98 2f       	mov	r25, r24
    1018:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
    101c:	6b 01       	movw	r12, r22
    101e:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    1020:	a5 01       	movw	r20, r10
    1022:	94 01       	movw	r18, r8
    1024:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    1028:	20 e0       	ldi	r18, 0x00	; 0
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	48 ef       	ldi	r20, 0xF8	; 248
    102e:	51 e4       	ldi	r21, 0x41	; 65
    1030:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    1034:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
    1038:	36 2e       	mov	r3, r22

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    103a:	a3 01       	movw	r20, r6
    103c:	92 01       	movw	r18, r4
    103e:	c7 01       	movw	r24, r14
    1040:	b6 01       	movw	r22, r12
    1042:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    1046:	20 e0       	ldi	r18, 0x00	; 0
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	48 ef       	ldi	r20, 0xF8	; 248
    104c:	51 e4       	ldi	r21, 0x41	; 65
    104e:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    1052:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    1056:	20 e0       	ldi	r18, 0x00	; 0
    1058:	43 2d       	mov	r20, r3
    105a:	8e 81       	ldd	r24, Y+6	; 0x06
    105c:	9f 81       	ldd	r25, Y+7	; 0x07
    105e:	6f db       	rcall	.-2338   	; 0x73e <_ZN7Display9drawPixelEhhh>
    1060:	0f 5f       	subi	r16, 0xFF	; 255
    1062:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    1064:	0d 30       	cpi	r16, 0x0D	; 13
    1066:	11 05       	cpc	r17, r1
    1068:	91 f6       	brne	.-92     	; 0x100e <_ZN7Display6analogEhhhh+0x230>
    106a:	cb c0       	rjmp	.+406    	; 0x1202 <_ZN7Display6analogEhhhh+0x424>
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
    106c:	64 2f       	mov	r22, r20
    106e:	70 e0       	ldi	r23, 0x00	; 0
    1070:	80 e0       	ldi	r24, 0x00	; 0
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
    1078:	69 83       	std	Y+1, r22	; 0x01
    107a:	7a 83       	std	Y+2, r23	; 0x02
    107c:	8b 83       	std	Y+3, r24	; 0x03
    107e:	9c 83       	std	Y+4, r25	; 0x04
    1080:	20 e0       	ldi	r18, 0x00	; 0
    1082:	30 e0       	ldi	r19, 0x00	; 0
    1084:	40 ec       	ldi	r20, 0xC0	; 192
    1086:	50 e4       	ldi	r21, 0x40	; 64
    1088:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    108c:	2b ed       	ldi	r18, 0xDB	; 219
    108e:	3f e0       	ldi	r19, 0x0F	; 15
    1090:	49 e4       	ldi	r20, 0x49	; 73
    1092:	50 e4       	ldi	r21, 0x40	; 64
    1094:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    1098:	20 e0       	ldi	r18, 0x00	; 0
    109a:	30 e0       	ldi	r19, 0x00	; 0
    109c:	44 e3       	ldi	r20, 0x34	; 52
    109e:	53 e4       	ldi	r21, 0x43	; 67
    10a0:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
    10a4:	2b ed       	ldi	r18, 0xDB	; 219
    10a6:	3f e0       	ldi	r19, 0x0F	; 15
    10a8:	49 ec       	ldi	r20, 0xC9	; 201
    10aa:	5f e3       	ldi	r21, 0x3F	; 63
    10ac:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
    10b0:	6b 01       	movw	r12, r22
    10b2:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
    10b4:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <cos>
    10b8:	4b 01       	movw	r8, r22
    10ba:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
    10bc:	c7 01       	movw	r24, r14
    10be:	b6 01       	movw	r22, r12
    10c0:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <sin>
    10c4:	2b 01       	movw	r4, r22
    10c6:	3c 01       	movw	r6, r24
    10c8:	00 e0       	ldi	r16, 0x00	; 0
    10ca:	10 e0       	ldi	r17, 0x00	; 0
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    10cc:	b8 01       	movw	r22, r16
    10ce:	88 27       	eor	r24, r24
    10d0:	77 fd       	sbrc	r23, 7
    10d2:	80 95       	com	r24
    10d4:	98 2f       	mov	r25, r24
    10d6:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
    10da:	6b 01       	movw	r12, r22
    10dc:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
    10de:	a3 01       	movw	r20, r6
    10e0:	92 01       	movw	r18, r4
    10e2:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    10e6:	20 e0       	ldi	r18, 0x00	; 0
    10e8:	30 e0       	ldi	r19, 0x00	; 0
    10ea:	48 ef       	ldi	r20, 0xF8	; 248
    10ec:	51 e4       	ldi	r21, 0x41	; 65
    10ee:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    10f2:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
    10f6:	36 2e       	mov	r3, r22
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    10f8:	a5 01       	movw	r20, r10
    10fa:	94 01       	movw	r18, r8
    10fc:	c7 01       	movw	r24, r14
    10fe:	b6 01       	movw	r22, r12
    1100:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    1104:	20 e0       	ldi	r18, 0x00	; 0
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	48 ef       	ldi	r20, 0xF8	; 248
    110a:	51 e4       	ldi	r21, 0x41	; 65
    110c:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    1110:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
    1114:	20 e0       	ldi	r18, 0x00	; 0
    1116:	43 2d       	mov	r20, r3
    1118:	8e 81       	ldd	r24, Y+6	; 0x06
    111a:	9f 81       	ldd	r25, Y+7	; 0x07
    111c:	10 db       	rcall	.-2528   	; 0x73e <_ZN7Display9drawPixelEhhh>
    111e:	0f 5f       	subi	r16, 0xFF	; 255
    1120:	1f 4f       	sbci	r17, 0xFF	; 255
		}
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
    1122:	09 31       	cpi	r16, 0x19	; 25
    1124:	11 05       	cpc	r17, r1
    1126:	91 f6       	brne	.-92     	; 0x10cc <_ZN7Display6analogEhhhh+0x2ee>
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
    1128:	ed 81       	ldd	r30, Y+5	; 0x05
    112a:	6e 2f       	mov	r22, r30
    112c:	70 e0       	ldi	r23, 0x00	; 0
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
    1136:	20 e0       	ldi	r18, 0x00	; 0
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	40 ef       	ldi	r20, 0xF0	; 240
    113c:	51 e4       	ldi	r21, 0x41	; 65
    113e:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    1142:	6b 01       	movw	r12, r22
    1144:	7c 01       	movw	r14, r24
    1146:	20 e0       	ldi	r18, 0x00	; 0
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	40 e0       	ldi	r20, 0x00	; 0
    114c:	5f e3       	ldi	r21, 0x3F	; 63
    114e:	69 81       	ldd	r22, Y+1	; 0x01
    1150:	7a 81       	ldd	r23, Y+2	; 0x02
    1152:	8b 81       	ldd	r24, Y+3	; 0x03
    1154:	9c 81       	ldd	r25, Y+4	; 0x04
    1156:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    115a:	9b 01       	movw	r18, r22
    115c:	ac 01       	movw	r20, r24
    115e:	c7 01       	movw	r24, r14
    1160:	b6 01       	movw	r22, r12
    1162:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    1166:	2b ed       	ldi	r18, 0xDB	; 219
    1168:	3f e0       	ldi	r19, 0x0F	; 15
    116a:	49 e4       	ldi	r20, 0x49	; 73
    116c:	50 e4       	ldi	r21, 0x40	; 64
    116e:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    1172:	20 e0       	ldi	r18, 0x00	; 0
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	44 e3       	ldi	r20, 0x34	; 52
    1178:	53 e4       	ldi	r21, 0x43	; 67
    117a:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
    117e:	2b ed       	ldi	r18, 0xDB	; 219
    1180:	3f e0       	ldi	r19, 0x0F	; 15
    1182:	49 ec       	ldi	r20, 0xC9	; 201
    1184:	5f e3       	ldi	r21, 0x3F	; 63
    1186:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
    118a:	6b 01       	movw	r12, r22
    118c:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
    118e:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <cos>
    1192:	2b 01       	movw	r4, r22
    1194:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
    1196:	c7 01       	movw	r24, r14
    1198:	b6 01       	movw	r22, r12
    119a:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <sin>
    119e:	4b 01       	movw	r8, r22
    11a0:	5c 01       	movw	r10, r24
    11a2:	00 e0       	ldi	r16, 0x00	; 0
    11a4:	10 e0       	ldi	r17, 0x00	; 0

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    11a6:	b8 01       	movw	r22, r16
    11a8:	88 27       	eor	r24, r24
    11aa:	77 fd       	sbrc	r23, 7
    11ac:	80 95       	com	r24
    11ae:	98 2f       	mov	r25, r24
    11b0:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
    11b4:	6b 01       	movw	r12, r22
    11b6:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    11b8:	a5 01       	movw	r20, r10
    11ba:	94 01       	movw	r18, r8
    11bc:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    11c0:	20 e0       	ldi	r18, 0x00	; 0
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	48 ef       	ldi	r20, 0xF8	; 248
    11c6:	51 e4       	ldi	r21, 0x41	; 65
    11c8:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    11cc:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
    11d0:	36 2e       	mov	r3, r22

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    11d2:	a3 01       	movw	r20, r6
    11d4:	92 01       	movw	r18, r4
    11d6:	c7 01       	movw	r24, r14
    11d8:	b6 01       	movw	r22, r12
    11da:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    11de:	20 e0       	ldi	r18, 0x00	; 0
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	48 ef       	ldi	r20, 0xF8	; 248
    11e4:	51 e4       	ldi	r21, 0x41	; 65
    11e6:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    11ea:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    11ee:	20 e0       	ldi	r18, 0x00	; 0
    11f0:	43 2d       	mov	r20, r3
    11f2:	8e 81       	ldd	r24, Y+6	; 0x06
    11f4:	9f 81       	ldd	r25, Y+7	; 0x07
    11f6:	a3 da       	rcall	.-2746   	; 0x73e <_ZN7Display9drawPixelEhhh>
    11f8:	0f 5f       	subi	r16, 0xFF	; 255
    11fa:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    11fc:	01 31       	cpi	r16, 0x11	; 17
    11fe:	11 05       	cpc	r17, r1
    1200:	91 f6       	brne	.-92     	; 0x11a6 <_ZN7Display6analogEhhhh+0x3c8>
		}
	}
	

	//Anzeige der Zahlen
	draw_ASCI('1',32-charsize,0);
    1202:	20 e0       	ldi	r18, 0x00	; 0
    1204:	4a e1       	ldi	r20, 0x1A	; 26
    1206:	61 e3       	ldi	r22, 0x31	; 49
    1208:	8e 81       	ldd	r24, Y+6	; 0x06
    120a:	9f 81       	ldd	r25, Y+7	; 0x07
    120c:	24 dd       	rcall	.-1464   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('2',32,0);
    120e:	20 e0       	ldi	r18, 0x00	; 0
    1210:	40 e2       	ldi	r20, 0x20	; 32
    1212:	62 e3       	ldi	r22, 0x32	; 50
    1214:	8e 81       	ldd	r24, Y+6	; 0x06
    1216:	9f 81       	ldd	r25, Y+7	; 0x07
    1218:	1e dd       	rcall	.-1476   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('3',64-charsize,4*charhighte-charhighte/2);
    121a:	2c e1       	ldi	r18, 0x1C	; 28
    121c:	4a e3       	ldi	r20, 0x3A	; 58
    121e:	63 e3       	ldi	r22, 0x33	; 51
    1220:	8e 81       	ldd	r24, Y+6	; 0x06
    1222:	9f 81       	ldd	r25, Y+7	; 0x07
    1224:	18 dd       	rcall	.-1488   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('6',32-charsize/2,7*charhighte);
    1226:	28 e3       	ldi	r18, 0x38	; 56
    1228:	4d e1       	ldi	r20, 0x1D	; 29
    122a:	66 e3       	ldi	r22, 0x36	; 54
    122c:	8e 81       	ldd	r24, Y+6	; 0x06
    122e:	9f 81       	ldd	r25, Y+7	; 0x07
    1230:	12 dd       	rcall	.-1500   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('9',0,4*charhighte-charhighte/2);
    1232:	2c e1       	ldi	r18, 0x1C	; 28
    1234:	40 e0       	ldi	r20, 0x00	; 0
    1236:	69 e3       	ldi	r22, 0x39	; 57
    1238:	8e 81       	ldd	r24, Y+6	; 0x06
    123a:	9f 81       	ldd	r25, Y+7	; 0x07
    123c:	0c dd       	rcall	.-1512   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>

	//anzeige des Rings fuer die Restlichen Stunden Zahlen
	//1
	drawPixel(26*cos((30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    123e:	20 e0       	ldi	r18, 0x00	; 0
    1240:	48 e0       	ldi	r20, 0x08	; 8
    1242:	6c e2       	ldi	r22, 0x2C	; 44
    1244:	8e 81       	ldd	r24, Y+6	; 0x06
    1246:	9f 81       	ldd	r25, Y+7	; 0x07
    1248:	7a da       	rcall	.-2828   	; 0x73e <_ZN7Display9drawPixelEhhh>
	//2
	drawPixel(26*cos((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    124a:	20 e0       	ldi	r18, 0x00	; 0
    124c:	42 e1       	ldi	r20, 0x12	; 18
    124e:	65 e3       	ldi	r22, 0x35	; 53
    1250:	8e 81       	ldd	r24, Y+6	; 0x06
    1252:	9f 81       	ldd	r25, Y+7	; 0x07
    1254:	74 da       	rcall	.-2840   	; 0x73e <_ZN7Display9drawPixelEhhh>
	//4
	drawPixel(26*cos((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1256:	20 e0       	ldi	r18, 0x00	; 0
    1258:	4c e2       	ldi	r20, 0x2C	; 44
    125a:	65 e3       	ldi	r22, 0x35	; 53
    125c:	8e 81       	ldd	r24, Y+6	; 0x06
    125e:	9f 81       	ldd	r25, Y+7	; 0x07
    1260:	6e da       	rcall	.-2852   	; 0x73e <_ZN7Display9drawPixelEhhh>
	//5
	drawPixel(26*cos((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1262:	20 e0       	ldi	r18, 0x00	; 0
    1264:	45 e3       	ldi	r20, 0x35	; 53
    1266:	6b e2       	ldi	r22, 0x2B	; 43
    1268:	8e 81       	ldd	r24, Y+6	; 0x06
    126a:	9f 81       	ldd	r25, Y+7	; 0x07
    126c:	68 da       	rcall	.-2864   	; 0x73e <_ZN7Display9drawPixelEhhh>
	//7
	drawPixel(26*cos((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    126e:	20 e0       	ldi	r18, 0x00	; 0
    1270:	45 e3       	ldi	r20, 0x35	; 53
    1272:	61 e1       	ldi	r22, 0x11	; 17
    1274:	8e 81       	ldd	r24, Y+6	; 0x06
    1276:	9f 81       	ldd	r25, Y+7	; 0x07
    1278:	62 da       	rcall	.-2876   	; 0x73e <_ZN7Display9drawPixelEhhh>
	//8
	drawPixel(26*cos((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    127a:	20 e0       	ldi	r18, 0x00	; 0
    127c:	4c e2       	ldi	r20, 0x2C	; 44
    127e:	68 e0       	ldi	r22, 0x08	; 8
    1280:	8e 81       	ldd	r24, Y+6	; 0x06
    1282:	9f 81       	ldd	r25, Y+7	; 0x07
    1284:	5c da       	rcall	.-2888   	; 0x73e <_ZN7Display9drawPixelEhhh>
	//10
	drawPixel(26*cos((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1286:	20 e0       	ldi	r18, 0x00	; 0
    1288:	41 e1       	ldi	r20, 0x11	; 17
    128a:	68 e0       	ldi	r22, 0x08	; 8
    128c:	8e 81       	ldd	r24, Y+6	; 0x06
    128e:	9f 81       	ldd	r25, Y+7	; 0x07
    1290:	56 da       	rcall	.-2900   	; 0x73e <_ZN7Display9drawPixelEhhh>
	//11
	drawPixel(26*cos((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1292:	20 e0       	ldi	r18, 0x00	; 0
    1294:	48 e0       	ldi	r20, 0x08	; 8
    1296:	62 e1       	ldi	r22, 0x12	; 18
    1298:	8e 81       	ldd	r24, Y+6	; 0x06
    129a:	9f 81       	ldd	r25, Y+7	; 0x07
    129c:	50 da       	rcall	.-2912   	; 0x73e <_ZN7Display9drawPixelEhhh>
}
    129e:	27 96       	adiw	r28, 0x07	; 7
    12a0:	0f b6       	in	r0, 0x3f	; 63
    12a2:	f8 94       	cli
    12a4:	de bf       	out	0x3e, r29	; 62
    12a6:	0f be       	out	0x3f, r0	; 63
    12a8:	cd bf       	out	0x3d, r28	; 61
    12aa:	df 91       	pop	r29
    12ac:	cf 91       	pop	r28
    12ae:	1f 91       	pop	r17
    12b0:	0f 91       	pop	r16
    12b2:	ff 90       	pop	r15
    12b4:	ef 90       	pop	r14
    12b6:	df 90       	pop	r13
    12b8:	cf 90       	pop	r12
    12ba:	bf 90       	pop	r11
    12bc:	af 90       	pop	r10
    12be:	9f 90       	pop	r9
    12c0:	8f 90       	pop	r8
    12c2:	7f 90       	pop	r7
    12c4:	6f 90       	pop	r6
    12c6:	5f 90       	pop	r5
    12c8:	4f 90       	pop	r4
    12ca:	3f 90       	pop	r3
    12cc:	2f 90       	pop	r2
    12ce:	08 95       	ret

000012d0 <_Z8ADC_Readh>:
		oled.draw_pikachu();
		break;
	default:
		break;
	}
}
    12d0:	ec e7       	ldi	r30, 0x7C	; 124
    12d2:	f0 e0       	ldi	r31, 0x00	; 0
    12d4:	90 81       	ld	r25, Z
    12d6:	8f 71       	andi	r24, 0x1F	; 31
    12d8:	90 7e       	andi	r25, 0xE0	; 224
    12da:	98 2b       	or	r25, r24
    12dc:	90 83       	st	Z, r25
    12de:	ea e7       	ldi	r30, 0x7A	; 122
    12e0:	f0 e0       	ldi	r31, 0x00	; 0
    12e2:	80 81       	ld	r24, Z
    12e4:	80 64       	ori	r24, 0x40	; 64
    12e6:	80 83       	st	Z, r24
    12e8:	80 81       	ld	r24, Z
    12ea:	86 fd       	sbrc	r24, 6
    12ec:	fd cf       	rjmp	.-6      	; 0x12e8 <_Z8ADC_Readh+0x18>
    12ee:	80 91 78 00 	lds	r24, 0x0078
    12f2:	90 91 79 00 	lds	r25, 0x0079
    12f6:	08 95       	ret

000012f8 <_Z14Batteriestatusv>:
    12f8:	cf 92       	push	r12
    12fa:	df 92       	push	r13
    12fc:	ef 92       	push	r14
    12fe:	ff 92       	push	r15
    1300:	80 e0       	ldi	r24, 0x00	; 0
    1302:	e6 df       	rcall	.-52     	; 0x12d0 <_Z8ADC_Readh>
    1304:	bc 01       	movw	r22, r24
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	0e 94 0d 2c 	call	0x581a	; 0x581a <__floatunsisf>
    130e:	20 e0       	ldi	r18, 0x00	; 0
    1310:	30 ec       	ldi	r19, 0xC0	; 192
    1312:	4f e7       	ldi	r20, 0x7F	; 127
    1314:	54 e4       	ldi	r21, 0x44	; 68
    1316:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
    131a:	2c e5       	ldi	r18, 0x5C	; 92
    131c:	3f e8       	ldi	r19, 0x8F	; 143
    131e:	42 e5       	ldi	r20, 0x52	; 82
    1320:	50 e4       	ldi	r21, 0x40	; 64
    1322:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    1326:	2d e0       	ldi	r18, 0x0D	; 13
    1328:	31 e7       	ldi	r19, 0x71	; 113
    132a:	40 e0       	ldi	r20, 0x00	; 0
    132c:	50 e4       	ldi	r21, 0x40	; 64
    132e:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    1332:	60 93 11 03 	sts	0x0311, r22
    1336:	70 93 12 03 	sts	0x0312, r23
    133a:	80 93 13 03 	sts	0x0313, r24
    133e:	90 93 14 03 	sts	0x0314, r25
    1342:	26 e6       	ldi	r18, 0x66	; 102
    1344:	36 e6       	ldi	r19, 0x66	; 102
    1346:	46 e6       	ldi	r20, 0x66	; 102
    1348:	50 e4       	ldi	r21, 0x40	; 64
    134a:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
    134e:	28 e9       	ldi	r18, 0x98	; 152
    1350:	39 e9       	ldi	r19, 0x99	; 153
    1352:	49 e1       	ldi	r20, 0x19	; 25
    1354:	5f e3       	ldi	r21, 0x3F	; 63
    1356:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
    135a:	20 e0       	ldi	r18, 0x00	; 0
    135c:	30 e0       	ldi	r19, 0x00	; 0
    135e:	48 ec       	ldi	r20, 0xC8	; 200
    1360:	52 e4       	ldi	r21, 0x42	; 66
    1362:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    1366:	6b 01       	movw	r12, r22
    1368:	7c 01       	movw	r14, r24
    136a:	20 e0       	ldi	r18, 0x00	; 0
    136c:	30 e0       	ldi	r19, 0x00	; 0
    136e:	40 e2       	ldi	r20, 0x20	; 32
    1370:	51 e4       	ldi	r21, 0x41	; 65
    1372:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    1376:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
    137a:	8d ec       	ldi	r24, 0xCD	; 205
    137c:	68 9f       	mul	r22, r24
    137e:	81 2d       	mov	r24, r1
    1380:	11 24       	eor	r1, r1
    1382:	86 95       	lsr	r24
    1384:	86 95       	lsr	r24
    1386:	86 95       	lsr	r24
    1388:	88 0f       	add	r24, r24
    138a:	98 2f       	mov	r25, r24
    138c:	99 0f       	add	r25, r25
    138e:	99 0f       	add	r25, r25
    1390:	89 0f       	add	r24, r25
    1392:	68 1b       	sub	r22, r24
    1394:	65 30       	cpi	r22, 0x05	; 5
    1396:	70 f0       	brcs	.+28     	; 0x13b4 <_Z14Batteriestatusv+0xbc>
    1398:	c7 01       	movw	r24, r14
    139a:	b6 01       	movw	r22, r12
    139c:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
    13a0:	70 e0       	ldi	r23, 0x00	; 0
    13a2:	6f 5f       	subi	r22, 0xFF	; 255
    13a4:	7f 4f       	sbci	r23, 0xFF	; 255
    13a6:	88 27       	eor	r24, r24
    13a8:	77 fd       	sbrc	r23, 7
    13aa:	80 95       	com	r24
    13ac:	98 2f       	mov	r25, r24
    13ae:	0e 94 0f 2c 	call	0x581e	; 0x581e <__floatsisf>
    13b2:	09 c0       	rjmp	.+18     	; 0x13c6 <_Z14Batteriestatusv+0xce>
    13b4:	c7 01       	movw	r24, r14
    13b6:	b6 01       	movw	r22, r12
    13b8:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
    13bc:	70 e0       	ldi	r23, 0x00	; 0
    13be:	80 e0       	ldi	r24, 0x00	; 0
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	0e 94 0d 2c 	call	0x581a	; 0x581a <__floatunsisf>
    13c6:	0e 94 dc 2b 	call	0x57b8	; 0x57b8 <__fixsfsi>
    13ca:	86 2f       	mov	r24, r22
    13cc:	ff 90       	pop	r15
    13ce:	ef 90       	pop	r14
    13d0:	df 90       	pop	r13
    13d2:	cf 90       	pop	r12
    13d4:	08 95       	ret

000013d6 <_Z12EEPROM_Writejh>:
    13d6:	f8 94       	cli
    13d8:	f9 99       	sbic	0x1f, 1	; 31
    13da:	fe cf       	rjmp	.-4      	; 0x13d8 <_Z12EEPROM_Writejh+0x2>
    13dc:	92 bd       	out	0x22, r25	; 34
    13de:	81 bd       	out	0x21, r24	; 33
    13e0:	60 bd       	out	0x20, r22	; 32
    13e2:	fa 9a       	sbi	0x1f, 2	; 31
    13e4:	f9 9a       	sbi	0x1f, 1	; 31
    13e6:	78 94       	sei
    13e8:	08 95       	ret

000013ea <_Z11EEPROM_Readj>:
    13ea:	f8 94       	cli
    13ec:	f9 99       	sbic	0x1f, 1	; 31
    13ee:	fe cf       	rjmp	.-4      	; 0x13ec <_Z11EEPROM_Readj+0x2>
    13f0:	92 bd       	out	0x22, r25	; 34
    13f2:	81 bd       	out	0x21, r24	; 33
    13f4:	f8 9a       	sbi	0x1f, 0	; 31
    13f6:	78 94       	sei
    13f8:	80 b5       	in	r24, 0x20	; 32
    13fa:	08 95       	ret

000013fc <_Z14willkommenpagev>:
    13fc:	cf 92       	push	r12
    13fe:	df 92       	push	r13
    1400:	ef 92       	push	r14
    1402:	ff 92       	push	r15
    1404:	0f 93       	push	r16
    1406:	1f 93       	push	r17
    1408:	cf 93       	push	r28
    140a:	df 93       	push	r29
    140c:	cd b7       	in	r28, 0x3d	; 61
    140e:	de b7       	in	r29, 0x3e	; 62
    1410:	64 97       	sbiw	r28, 0x14	; 20
    1412:	0f b6       	in	r0, 0x3f	; 63
    1414:	f8 94       	cli
    1416:	de bf       	out	0x3e, r29	; 62
    1418:	0f be       	out	0x3f, r0	; 63
    141a:	cd bf       	out	0x3d, r28	; 61
    141c:	8c e3       	ldi	r24, 0x3C	; 60
    141e:	93 e0       	ldi	r25, 0x03	; 3
    1420:	c7 d8       	rcall	.-3698   	; 0x5b0 <_ZN7Display10clearFrameEv>
    1422:	8f e0       	ldi	r24, 0x0F	; 15
    1424:	e0 e0       	ldi	r30, 0x00	; 0
    1426:	f1 e0       	ldi	r31, 0x01	; 1
    1428:	8e 01       	movw	r16, r28
    142a:	0f 5f       	subi	r16, 0xFF	; 255
    142c:	1f 4f       	sbci	r17, 0xFF	; 255
    142e:	d8 01       	movw	r26, r16
    1430:	01 90       	ld	r0, Z+
    1432:	0d 92       	st	X+, r0
    1434:	8a 95       	dec	r24
    1436:	e1 f7       	brne	.-8      	; 0x1430 <_Z14willkommenpagev+0x34>
    1438:	c0 2e       	mov	r12, r16
    143a:	d1 2e       	mov	r13, r17
    143c:	78 01       	movw	r14, r16
    143e:	10 e0       	ldi	r17, 0x00	; 0
    1440:	f7 01       	movw	r30, r14
    1442:	61 91       	ld	r22, Z+
    1444:	7f 01       	movw	r14, r30
    1446:	20 e0       	ldi	r18, 0x00	; 0
    1448:	41 2f       	mov	r20, r17
    144a:	8c e3       	ldi	r24, 0x3C	; 60
    144c:	93 e0       	ldi	r25, 0x03	; 3
    144e:	03 dc       	rcall	.-2042   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1450:	1a 5f       	subi	r17, 0xFA	; 250
    1452:	14 35       	cpi	r17, 0x54	; 84
    1454:	a9 f7       	brne	.-22     	; 0x1440 <_Z14willkommenpagev+0x44>
    1456:	8f e0       	ldi	r24, 0x0F	; 15
    1458:	ef e0       	ldi	r30, 0x0F	; 15
    145a:	f1 e0       	ldi	r31, 0x01	; 1
    145c:	de 01       	movw	r26, r28
    145e:	11 96       	adiw	r26, 0x01	; 1
    1460:	01 90       	ld	r0, Z+
    1462:	0d 92       	st	X+, r0
    1464:	8a 95       	dec	r24
    1466:	e1 f7       	brne	.-8      	; 0x1460 <_Z14willkommenpagev+0x64>
    1468:	ec 2c       	mov	r14, r12
    146a:	fd 2c       	mov	r15, r13
    146c:	10 e0       	ldi	r17, 0x00	; 0
    146e:	f7 01       	movw	r30, r14
    1470:	61 91       	ld	r22, Z+
    1472:	7f 01       	movw	r14, r30
    1474:	28 e0       	ldi	r18, 0x08	; 8
    1476:	41 2f       	mov	r20, r17
    1478:	8c e3       	ldi	r24, 0x3C	; 60
    147a:	93 e0       	ldi	r25, 0x03	; 3
    147c:	ec db       	rcall	.-2088   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    147e:	1a 5f       	subi	r17, 0xFA	; 250
    1480:	14 35       	cpi	r17, 0x54	; 84
    1482:	a9 f7       	brne	.-22     	; 0x146e <_Z14willkommenpagev+0x72>
    1484:	80 e4       	ldi	r24, 0x40	; 64
    1486:	8f 93       	push	r24
    1488:	86 e0       	ldi	r24, 0x06	; 6
    148a:	8f 93       	push	r24
    148c:	86 e6       	ldi	r24, 0x66	; 102
    148e:	8f 93       	push	r24
    1490:	8f 93       	push	r24
    1492:	8e e1       	ldi	r24, 0x1E	; 30
    1494:	91 e0       	ldi	r25, 0x01	; 1
    1496:	9f 93       	push	r25
    1498:	8f 93       	push	r24
    149a:	ce 01       	movw	r24, r28
    149c:	01 96       	adiw	r24, 0x01	; 1
    149e:	9f 93       	push	r25
    14a0:	8f 93       	push	r24
    14a2:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
    14a6:	0f b6       	in	r0, 0x3f	; 63
    14a8:	f8 94       	cli
    14aa:	de bf       	out	0x3e, r29	; 62
    14ac:	0f be       	out	0x3f, r0	; 63
    14ae:	cd bf       	out	0x3d, r28	; 61
    14b0:	88 23       	and	r24, r24
    14b2:	c9 f0       	breq	.+50     	; 0x14e6 <_Z14willkommenpagev+0xea>
    14b4:	81 50       	subi	r24, 0x01	; 1
    14b6:	68 94       	set
    14b8:	ee 24       	eor	r14, r14
    14ba:	e1 f8       	bld	r14, 1
    14bc:	f1 2c       	mov	r15, r1
    14be:	ec 0e       	add	r14, r28
    14c0:	fd 1e       	adc	r15, r29
    14c2:	e8 0e       	add	r14, r24
    14c4:	f1 1c       	adc	r15, r1
    14c6:	0c 2d       	mov	r16, r12
    14c8:	1d 2d       	mov	r17, r13
    14ca:	d1 2c       	mov	r13, r1
    14cc:	f8 01       	movw	r30, r16
    14ce:	61 91       	ld	r22, Z+
    14d0:	8f 01       	movw	r16, r30
    14d2:	20 e2       	ldi	r18, 0x20	; 32
    14d4:	4d 2d       	mov	r20, r13
    14d6:	8c e3       	ldi	r24, 0x3C	; 60
    14d8:	93 e0       	ldi	r25, 0x03	; 3
    14da:	bd db       	rcall	.-2182   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    14dc:	f6 e0       	ldi	r31, 0x06	; 6
    14de:	df 0e       	add	r13, r31
    14e0:	0e 15       	cp	r16, r14
    14e2:	1f 05       	cpc	r17, r15
    14e4:	99 f7       	brne	.-26     	; 0x14cc <_Z14willkommenpagev+0xd0>
    14e6:	8c e3       	ldi	r24, 0x3C	; 60
    14e8:	93 e0       	ldi	r25, 0x03	; 3
    14ea:	ec d8       	rcall	.-3624   	; 0x6c4 <_ZN7Display9sendFrameEv>
    14ec:	8c e3       	ldi	r24, 0x3C	; 60
    14ee:	93 e0       	ldi	r25, 0x03	; 3
    14f0:	5f d8       	rcall	.-3906   	; 0x5b0 <_ZN7Display10clearFrameEv>
    14f2:	85 e0       	ldi	r24, 0x05	; 5
    14f4:	2f e7       	ldi	r18, 0x7F	; 127
    14f6:	38 e3       	ldi	r19, 0x38	; 56
    14f8:	91 e0       	ldi	r25, 0x01	; 1
    14fa:	21 50       	subi	r18, 0x01	; 1
    14fc:	30 40       	sbci	r19, 0x00	; 0
    14fe:	90 40       	sbci	r25, 0x00	; 0
    1500:	e1 f7       	brne	.-8      	; 0x14fa <_Z14willkommenpagev+0xfe>
    1502:	00 c0       	rjmp	.+0      	; 0x1504 <_Z14willkommenpagev+0x108>
    1504:	00 00       	nop
    1506:	ef e7       	ldi	r30, 0x7F	; 127
    1508:	f8 e3       	ldi	r31, 0x38	; 56
    150a:	21 e0       	ldi	r18, 0x01	; 1
    150c:	e1 50       	subi	r30, 0x01	; 1
    150e:	f0 40       	sbci	r31, 0x00	; 0
    1510:	20 40       	sbci	r18, 0x00	; 0
    1512:	e1 f7       	brne	.-8      	; 0x150c <_Z14willkommenpagev+0x110>
    1514:	00 c0       	rjmp	.+0      	; 0x1516 <_Z14willkommenpagev+0x11a>
    1516:	00 00       	nop
    1518:	81 50       	subi	r24, 0x01	; 1
    151a:	61 f7       	brne	.-40     	; 0x14f4 <_Z14willkommenpagev+0xf8>
    151c:	64 96       	adiw	r28, 0x14	; 20
    151e:	0f b6       	in	r0, 0x3f	; 63
    1520:	f8 94       	cli
    1522:	de bf       	out	0x3e, r29	; 62
    1524:	0f be       	out	0x3f, r0	; 63
    1526:	cd bf       	out	0x3d, r28	; 61
    1528:	df 91       	pop	r29
    152a:	cf 91       	pop	r28
    152c:	1f 91       	pop	r17
    152e:	0f 91       	pop	r16
    1530:	ff 90       	pop	r15
    1532:	ef 90       	pop	r14
    1534:	df 90       	pop	r13
    1536:	cf 90       	pop	r12
    1538:	08 95       	ret

0000153a <_Z6headerh>:
    153a:	ef 92       	push	r14
    153c:	ff 92       	push	r15
    153e:	0f 93       	push	r16
    1540:	1f 93       	push	r17
    1542:	cf 93       	push	r28
    1544:	df 93       	push	r29
    1546:	cd b7       	in	r28, 0x3d	; 61
    1548:	de b7       	in	r29, 0x3e	; 62
    154a:	64 97       	sbiw	r28, 0x14	; 20
    154c:	0f b6       	in	r0, 0x3f	; 63
    154e:	f8 94       	cli
    1550:	de bf       	out	0x3e, r29	; 62
    1552:	0f be       	out	0x3f, r0	; 63
    1554:	cd bf       	out	0x3d, r28	; 61
    1556:	81 30       	cpi	r24, 0x01	; 1
    1558:	09 f4       	brne	.+2      	; 0x155c <_Z6headerh+0x22>
    155a:	51 c0       	rjmp	.+162    	; 0x15fe <_Z6headerh+0xc4>
    155c:	20 f0       	brcs	.+8      	; 0x1566 <_Z6headerh+0x2c>
    155e:	82 30       	cpi	r24, 0x02	; 2
    1560:	09 f4       	brne	.+2      	; 0x1564 <_Z6headerh+0x2a>
    1562:	87 c0       	rjmp	.+270    	; 0x1672 <_Z6headerh+0x138>
    1564:	be c0       	rjmp	.+380    	; 0x16e2 <_Z6headerh+0x1a8>
    1566:	0f 2e       	mov	r0, r31
    1568:	fd e3       	ldi	r31, 0x3D	; 61
    156a:	ef 2e       	mov	r14, r31
    156c:	f7 e0       	ldi	r31, 0x07	; 7
    156e:	ff 2e       	mov	r15, r31
    1570:	f0 2d       	mov	r31, r0
    1572:	10 e0       	ldi	r17, 0x00	; 0
    1574:	f7 01       	movw	r30, r14
    1576:	61 91       	ld	r22, Z+
    1578:	7f 01       	movw	r14, r30
    157a:	20 e0       	ldi	r18, 0x00	; 0
    157c:	41 2f       	mov	r20, r17
    157e:	8c e3       	ldi	r24, 0x3C	; 60
    1580:	93 e0       	ldi	r25, 0x03	; 3
    1582:	69 db       	rcall	.-2350   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1584:	1a 5f       	subi	r17, 0xFA	; 250
    1586:	10 33       	cpi	r17, 0x30	; 48
    1588:	a9 f7       	brne	.-22     	; 0x1574 <_Z6headerh+0x3a>
    158a:	b6 de       	rcall	.-660    	; 0x12f8 <_Z14Batteriestatusv>
    158c:	28 2f       	mov	r18, r24
    158e:	33 27       	eor	r19, r19
    1590:	27 fd       	sbrc	r18, 7
    1592:	30 95       	com	r19
    1594:	3f 93       	push	r19
    1596:	8f 93       	push	r24
    1598:	8c e2       	ldi	r24, 0x2C	; 44
    159a:	91 e0       	ldi	r25, 0x01	; 1
    159c:	9f 93       	push	r25
    159e:	8f 93       	push	r24
    15a0:	ce 01       	movw	r24, r28
    15a2:	01 96       	adiw	r24, 0x01	; 1
    15a4:	9f 93       	push	r25
    15a6:	8f 93       	push	r24
    15a8:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
    15ac:	25 e1       	ldi	r18, 0x15	; 21
    15ae:	f2 2e       	mov	r15, r18
    15b0:	f8 1a       	sub	r15, r24
    15b2:	0f 90       	pop	r0
    15b4:	0f 90       	pop	r0
    15b6:	0f 90       	pop	r0
    15b8:	0f 90       	pop	r0
    15ba:	0f 90       	pop	r0
    15bc:	0f 90       	pop	r0
    15be:	f4 e1       	ldi	r31, 0x14	; 20
    15c0:	ff 15       	cp	r31, r15
    15c2:	08 f4       	brcc	.+2      	; 0x15c6 <_Z6headerh+0x8c>
    15c4:	8e c0       	rjmp	.+284    	; 0x16e2 <_Z6headerh+0x1a8>
    15c6:	ef 2c       	mov	r14, r15
    15c8:	ee 0c       	add	r14, r14
    15ca:	ef 0c       	add	r14, r15
    15cc:	ee 0c       	add	r14, r14
    15ce:	8c 01       	movw	r16, r24
    15d0:	11 27       	eor	r17, r17
    15d2:	e1 e0       	ldi	r30, 0x01	; 1
    15d4:	f0 e0       	ldi	r31, 0x00	; 0
    15d6:	ec 0f       	add	r30, r28
    15d8:	fd 1f       	adc	r31, r29
    15da:	ef 0d       	add	r30, r15
    15dc:	f1 1d       	adc	r31, r1
    15de:	e0 0f       	add	r30, r16
    15e0:	f1 1f       	adc	r31, r17
    15e2:	75 97       	sbiw	r30, 0x15	; 21
    15e4:	20 e0       	ldi	r18, 0x00	; 0
    15e6:	4e 2d       	mov	r20, r14
    15e8:	60 81       	ld	r22, Z
    15ea:	8c e3       	ldi	r24, 0x3C	; 60
    15ec:	93 e0       	ldi	r25, 0x03	; 3
    15ee:	33 db       	rcall	.-2458   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    15f0:	f3 94       	inc	r15
    15f2:	26 e0       	ldi	r18, 0x06	; 6
    15f4:	e2 0e       	add	r14, r18
    15f6:	85 e1       	ldi	r24, 0x15	; 21
    15f8:	f8 12       	cpse	r15, r24
    15fa:	eb cf       	rjmp	.-42     	; 0x15d2 <_Z6headerh+0x98>
    15fc:	72 c0       	rjmp	.+228    	; 0x16e2 <_Z6headerh+0x1a8>
    15fe:	7c de       	rcall	.-776    	; 0x12f8 <_Z14Batteriestatusv>
    1600:	28 2f       	mov	r18, r24
    1602:	33 27       	eor	r19, r19
    1604:	27 fd       	sbrc	r18, 7
    1606:	30 95       	com	r19
    1608:	3f 93       	push	r19
    160a:	8f 93       	push	r24
    160c:	8c e2       	ldi	r24, 0x2C	; 44
    160e:	91 e0       	ldi	r25, 0x01	; 1
    1610:	9f 93       	push	r25
    1612:	8f 93       	push	r24
    1614:	ce 01       	movw	r24, r28
    1616:	01 96       	adiw	r24, 0x01	; 1
    1618:	9f 93       	push	r25
    161a:	8f 93       	push	r24
    161c:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
    1620:	25 e1       	ldi	r18, 0x15	; 21
    1622:	f2 2e       	mov	r15, r18
    1624:	f8 1a       	sub	r15, r24
    1626:	0f 90       	pop	r0
    1628:	0f 90       	pop	r0
    162a:	0f 90       	pop	r0
    162c:	0f 90       	pop	r0
    162e:	0f 90       	pop	r0
    1630:	0f 90       	pop	r0
    1632:	e4 e1       	ldi	r30, 0x14	; 20
    1634:	ef 15       	cp	r30, r15
    1636:	08 f4       	brcc	.+2      	; 0x163a <_Z6headerh+0x100>
    1638:	54 c0       	rjmp	.+168    	; 0x16e2 <_Z6headerh+0x1a8>
    163a:	ef 2c       	mov	r14, r15
    163c:	ee 0c       	add	r14, r14
    163e:	ef 0c       	add	r14, r15
    1640:	ee 0c       	add	r14, r14
    1642:	8c 01       	movw	r16, r24
    1644:	11 27       	eor	r17, r17
    1646:	e1 e0       	ldi	r30, 0x01	; 1
    1648:	f0 e0       	ldi	r31, 0x00	; 0
    164a:	ec 0f       	add	r30, r28
    164c:	fd 1f       	adc	r31, r29
    164e:	ef 0d       	add	r30, r15
    1650:	f1 1d       	adc	r31, r1
    1652:	e0 0f       	add	r30, r16
    1654:	f1 1f       	adc	r31, r17
    1656:	75 97       	sbiw	r30, 0x15	; 21
    1658:	20 e0       	ldi	r18, 0x00	; 0
    165a:	4e 2d       	mov	r20, r14
    165c:	60 81       	ld	r22, Z
    165e:	8c e3       	ldi	r24, 0x3C	; 60
    1660:	93 e0       	ldi	r25, 0x03	; 3
    1662:	f9 da       	rcall	.-2574   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1664:	f3 94       	inc	r15
    1666:	f6 e0       	ldi	r31, 0x06	; 6
    1668:	ef 0e       	add	r14, r31
    166a:	25 e1       	ldi	r18, 0x15	; 21
    166c:	f2 12       	cpse	r15, r18
    166e:	eb cf       	rjmp	.-42     	; 0x1646 <_Z6headerh+0x10c>
    1670:	38 c0       	rjmp	.+112    	; 0x16e2 <_Z6headerh+0x1a8>
    1672:	42 de       	rcall	.-892    	; 0x12f8 <_Z14Batteriestatusv>
    1674:	28 2f       	mov	r18, r24
    1676:	33 27       	eor	r19, r19
    1678:	27 fd       	sbrc	r18, 7
    167a:	30 95       	com	r19
    167c:	3f 93       	push	r19
    167e:	8f 93       	push	r24
    1680:	81 e3       	ldi	r24, 0x31	; 49
    1682:	91 e0       	ldi	r25, 0x01	; 1
    1684:	9f 93       	push	r25
    1686:	8f 93       	push	r24
    1688:	ce 01       	movw	r24, r28
    168a:	01 96       	adiw	r24, 0x01	; 1
    168c:	9f 93       	push	r25
    168e:	8f 93       	push	r24
    1690:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
    1694:	25 e1       	ldi	r18, 0x15	; 21
    1696:	f2 2e       	mov	r15, r18
    1698:	f8 1a       	sub	r15, r24
    169a:	0f 90       	pop	r0
    169c:	0f 90       	pop	r0
    169e:	0f 90       	pop	r0
    16a0:	0f 90       	pop	r0
    16a2:	0f 90       	pop	r0
    16a4:	0f 90       	pop	r0
    16a6:	e4 e1       	ldi	r30, 0x14	; 20
    16a8:	ef 15       	cp	r30, r15
    16aa:	d8 f0       	brcs	.+54     	; 0x16e2 <_Z6headerh+0x1a8>
    16ac:	ef 2c       	mov	r14, r15
    16ae:	ee 0c       	add	r14, r14
    16b0:	ef 0c       	add	r14, r15
    16b2:	ee 0c       	add	r14, r14
    16b4:	8c 01       	movw	r16, r24
    16b6:	11 27       	eor	r17, r17
    16b8:	e1 e0       	ldi	r30, 0x01	; 1
    16ba:	f0 e0       	ldi	r31, 0x00	; 0
    16bc:	ec 0f       	add	r30, r28
    16be:	fd 1f       	adc	r31, r29
    16c0:	ef 0d       	add	r30, r15
    16c2:	f1 1d       	adc	r31, r1
    16c4:	e0 0f       	add	r30, r16
    16c6:	f1 1f       	adc	r31, r17
    16c8:	75 97       	sbiw	r30, 0x15	; 21
    16ca:	20 e0       	ldi	r18, 0x00	; 0
    16cc:	4e 2d       	mov	r20, r14
    16ce:	60 81       	ld	r22, Z
    16d0:	8c e3       	ldi	r24, 0x3C	; 60
    16d2:	93 e0       	ldi	r25, 0x03	; 3
    16d4:	c0 da       	rcall	.-2688   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    16d6:	f3 94       	inc	r15
    16d8:	f6 e0       	ldi	r31, 0x06	; 6
    16da:	ef 0e       	add	r14, r31
    16dc:	25 e1       	ldi	r18, 0x15	; 21
    16de:	f2 12       	cpse	r15, r18
    16e0:	eb cf       	rjmp	.-42     	; 0x16b8 <_Z6headerh+0x17e>
    16e2:	64 96       	adiw	r28, 0x14	; 20
    16e4:	0f b6       	in	r0, 0x3f	; 63
    16e6:	f8 94       	cli
    16e8:	de bf       	out	0x3e, r29	; 62
    16ea:	0f be       	out	0x3f, r0	; 63
    16ec:	cd bf       	out	0x3d, r28	; 61
    16ee:	df 91       	pop	r29
    16f0:	cf 91       	pop	r28
    16f2:	1f 91       	pop	r17
    16f4:	0f 91       	pop	r16
    16f6:	ff 90       	pop	r15
    16f8:	ef 90       	pop	r14
    16fa:	08 95       	ret

000016fc <_Z6bottomh>:
    16fc:	1f 93       	push	r17
    16fe:	cf 93       	push	r28
    1700:	df 93       	push	r29
    1702:	88 23       	and	r24, r24
    1704:	19 f0       	breq	.+6      	; 0x170c <_Z6bottomh+0x10>
    1706:	81 30       	cpi	r24, 0x01	; 1
    1708:	71 f0       	breq	.+28     	; 0x1726 <_Z6bottomh+0x2a>
    170a:	19 c0       	rjmp	.+50     	; 0x173e <_Z6bottomh+0x42>
    170c:	c5 e4       	ldi	r28, 0x45	; 69
    170e:	d7 e0       	ldi	r29, 0x07	; 7
    1710:	10 e5       	ldi	r17, 0x50	; 80
    1712:	69 91       	ld	r22, Y+
    1714:	28 e3       	ldi	r18, 0x38	; 56
    1716:	41 2f       	mov	r20, r17
    1718:	8c e3       	ldi	r24, 0x3C	; 60
    171a:	93 e0       	ldi	r25, 0x03	; 3
    171c:	9c da       	rcall	.-2760   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    171e:	1a 5f       	subi	r17, 0xFA	; 250
    1720:	10 38       	cpi	r17, 0x80	; 128
    1722:	b9 f7       	brne	.-18     	; 0x1712 <_Z6bottomh+0x16>
    1724:	0c c0       	rjmp	.+24     	; 0x173e <_Z6bottomh+0x42>
    1726:	c5 e4       	ldi	r28, 0x45	; 69
    1728:	d7 e0       	ldi	r29, 0x07	; 7
    172a:	15 e0       	ldi	r17, 0x05	; 5
    172c:	69 91       	ld	r22, Y+
    172e:	28 e3       	ldi	r18, 0x38	; 56
    1730:	41 2f       	mov	r20, r17
    1732:	8c e3       	ldi	r24, 0x3C	; 60
    1734:	93 e0       	ldi	r25, 0x03	; 3
    1736:	8f da       	rcall	.-2786   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1738:	1a 5f       	subi	r17, 0xFA	; 250
    173a:	15 33       	cpi	r17, 0x35	; 53
    173c:	b9 f7       	brne	.-18     	; 0x172c <_Z6bottomh+0x30>
    173e:	df 91       	pop	r29
    1740:	cf 91       	pop	r28
    1742:	1f 91       	pop	r17
    1744:	08 95       	ret

00001746 <_Z16anzeige_richtungfhh>:
    1746:	cf 92       	push	r12
    1748:	df 92       	push	r13
    174a:	ef 92       	push	r14
    174c:	ff 92       	push	r15
    174e:	cf 93       	push	r28
    1750:	df 93       	push	r29
    1752:	6b 01       	movw	r12, r22
    1754:	7c 01       	movw	r14, r24
    1756:	c4 2f       	mov	r28, r20
    1758:	d2 2f       	mov	r29, r18
    175a:	20 e0       	ldi	r18, 0x00	; 0
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	40 eb       	ldi	r20, 0xB0	; 176
    1760:	51 e4       	ldi	r21, 0x41	; 65
    1762:	0e 94 6d 2b 	call	0x56da	; 0x56da <__cmpsf2>
    1766:	88 23       	and	r24, r24
    1768:	54 f0       	brlt	.+20     	; 0x177e <_Z16anzeige_richtungfhh+0x38>
    176a:	20 e0       	ldi	r18, 0x00	; 0
    176c:	30 e0       	ldi	r19, 0x00	; 0
    176e:	49 ea       	ldi	r20, 0xA9	; 169
    1770:	53 e4       	ldi	r21, 0x43	; 67
    1772:	c7 01       	movw	r24, r14
    1774:	b6 01       	movw	r22, r12
    1776:	0e 94 1d 2d 	call	0x5a3a	; 0x5a3a <__gesf2>
    177a:	88 23       	and	r24, r24
    177c:	54 f0       	brlt	.+20     	; 0x1792 <_Z16anzeige_richtungfhh+0x4c>
    177e:	2d 2f       	mov	r18, r29
    1780:	22 0f       	add	r18, r18
    1782:	22 0f       	add	r18, r18
    1784:	22 0f       	add	r18, r18
    1786:	4c 2f       	mov	r20, r28
    1788:	6e e4       	ldi	r22, 0x4E	; 78
    178a:	8c e3       	ldi	r24, 0x3C	; 60
    178c:	93 e0       	ldi	r25, 0x03	; 3
    178e:	63 da       	rcall	.-2874   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1790:	ab c0       	rjmp	.+342    	; 0x18e8 <_Z16anzeige_richtungfhh+0x1a2>
    1792:	20 e0       	ldi	r18, 0x00	; 0
    1794:	30 e0       	ldi	r19, 0x00	; 0
    1796:	48 e8       	ldi	r20, 0x88	; 136
    1798:	52 e4       	ldi	r21, 0x42	; 66
    179a:	c7 01       	movw	r24, r14
    179c:	b6 01       	movw	r22, r12
    179e:	0e 94 6d 2b 	call	0x56da	; 0x56da <__cmpsf2>
    17a2:	88 23       	and	r24, r24
    17a4:	94 f4       	brge	.+36     	; 0x17ca <_Z16anzeige_richtungfhh+0x84>
    17a6:	dd 0f       	add	r29, r29
    17a8:	dd 0f       	add	r29, r29
    17aa:	dd 0f       	add	r29, r29
    17ac:	4d ef       	ldi	r20, 0xFD	; 253
    17ae:	4c 0f       	add	r20, r28
    17b0:	2d 2f       	mov	r18, r29
    17b2:	6e e4       	ldi	r22, 0x4E	; 78
    17b4:	8c e3       	ldi	r24, 0x3C	; 60
    17b6:	93 e0       	ldi	r25, 0x03	; 3
    17b8:	4e da       	rcall	.-2916   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    17ba:	43 e0       	ldi	r20, 0x03	; 3
    17bc:	4c 0f       	add	r20, r28
    17be:	2d 2f       	mov	r18, r29
    17c0:	6f e4       	ldi	r22, 0x4F	; 79
    17c2:	8c e3       	ldi	r24, 0x3C	; 60
    17c4:	93 e0       	ldi	r25, 0x03	; 3
    17c6:	47 da       	rcall	.-2930   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    17c8:	8f c0       	rjmp	.+286    	; 0x18e8 <_Z16anzeige_richtungfhh+0x1a2>
    17ca:	20 e0       	ldi	r18, 0x00	; 0
    17cc:	30 e0       	ldi	r19, 0x00	; 0
    17ce:	42 ee       	ldi	r20, 0xE2	; 226
    17d0:	52 e4       	ldi	r21, 0x42	; 66
    17d2:	c7 01       	movw	r24, r14
    17d4:	b6 01       	movw	r22, r12
    17d6:	0e 94 6d 2b 	call	0x56da	; 0x56da <__cmpsf2>
    17da:	88 23       	and	r24, r24
    17dc:	54 f4       	brge	.+20     	; 0x17f2 <_Z16anzeige_richtungfhh+0xac>
    17de:	2d 2f       	mov	r18, r29
    17e0:	22 0f       	add	r18, r18
    17e2:	22 0f       	add	r18, r18
    17e4:	22 0f       	add	r18, r18
    17e6:	4c 2f       	mov	r20, r28
    17e8:	6f e4       	ldi	r22, 0x4F	; 79
    17ea:	8c e3       	ldi	r24, 0x3C	; 60
    17ec:	93 e0       	ldi	r25, 0x03	; 3
    17ee:	33 da       	rcall	.-2970   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    17f0:	7b c0       	rjmp	.+246    	; 0x18e8 <_Z16anzeige_richtungfhh+0x1a2>
    17f2:	20 e0       	ldi	r18, 0x00	; 0
    17f4:	30 e0       	ldi	r19, 0x00	; 0
    17f6:	4e e1       	ldi	r20, 0x1E	; 30
    17f8:	53 e4       	ldi	r21, 0x43	; 67
    17fa:	c7 01       	movw	r24, r14
    17fc:	b6 01       	movw	r22, r12
    17fe:	0e 94 6d 2b 	call	0x56da	; 0x56da <__cmpsf2>
    1802:	88 23       	and	r24, r24
    1804:	94 f4       	brge	.+36     	; 0x182a <_Z16anzeige_richtungfhh+0xe4>
    1806:	dd 0f       	add	r29, r29
    1808:	dd 0f       	add	r29, r29
    180a:	dd 0f       	add	r29, r29
    180c:	4d ef       	ldi	r20, 0xFD	; 253
    180e:	4c 0f       	add	r20, r28
    1810:	2d 2f       	mov	r18, r29
    1812:	63 e5       	ldi	r22, 0x53	; 83
    1814:	8c e3       	ldi	r24, 0x3C	; 60
    1816:	93 e0       	ldi	r25, 0x03	; 3
    1818:	1e da       	rcall	.-3012   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    181a:	43 e0       	ldi	r20, 0x03	; 3
    181c:	4c 0f       	add	r20, r28
    181e:	2d 2f       	mov	r18, r29
    1820:	6f e4       	ldi	r22, 0x4F	; 79
    1822:	8c e3       	ldi	r24, 0x3C	; 60
    1824:	93 e0       	ldi	r25, 0x03	; 3
    1826:	17 da       	rcall	.-3026   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1828:	5f c0       	rjmp	.+190    	; 0x18e8 <_Z16anzeige_richtungfhh+0x1a2>
    182a:	20 e0       	ldi	r18, 0x00	; 0
    182c:	30 e0       	ldi	r19, 0x00	; 0
    182e:	4b e4       	ldi	r20, 0x4B	; 75
    1830:	53 e4       	ldi	r21, 0x43	; 67
    1832:	c7 01       	movw	r24, r14
    1834:	b6 01       	movw	r22, r12
    1836:	0e 94 6d 2b 	call	0x56da	; 0x56da <__cmpsf2>
    183a:	88 23       	and	r24, r24
    183c:	54 f4       	brge	.+20     	; 0x1852 <_Z16anzeige_richtungfhh+0x10c>
    183e:	2d 2f       	mov	r18, r29
    1840:	22 0f       	add	r18, r18
    1842:	22 0f       	add	r18, r18
    1844:	22 0f       	add	r18, r18
    1846:	4c 2f       	mov	r20, r28
    1848:	63 e5       	ldi	r22, 0x53	; 83
    184a:	8c e3       	ldi	r24, 0x3C	; 60
    184c:	93 e0       	ldi	r25, 0x03	; 3
    184e:	03 da       	rcall	.-3066   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1850:	4b c0       	rjmp	.+150    	; 0x18e8 <_Z16anzeige_richtungfhh+0x1a2>
    1852:	20 e0       	ldi	r18, 0x00	; 0
    1854:	30 e0       	ldi	r19, 0x00	; 0
    1856:	48 e7       	ldi	r20, 0x78	; 120
    1858:	53 e4       	ldi	r21, 0x43	; 67
    185a:	c7 01       	movw	r24, r14
    185c:	b6 01       	movw	r22, r12
    185e:	0e 94 6d 2b 	call	0x56da	; 0x56da <__cmpsf2>
    1862:	88 23       	and	r24, r24
    1864:	94 f4       	brge	.+36     	; 0x188a <_Z16anzeige_richtungfhh+0x144>
    1866:	dd 0f       	add	r29, r29
    1868:	dd 0f       	add	r29, r29
    186a:	dd 0f       	add	r29, r29
    186c:	4d ef       	ldi	r20, 0xFD	; 253
    186e:	4c 0f       	add	r20, r28
    1870:	2d 2f       	mov	r18, r29
    1872:	63 e5       	ldi	r22, 0x53	; 83
    1874:	8c e3       	ldi	r24, 0x3C	; 60
    1876:	93 e0       	ldi	r25, 0x03	; 3
    1878:	ee d9       	rcall	.-3108   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    187a:	43 e0       	ldi	r20, 0x03	; 3
    187c:	4c 0f       	add	r20, r28
    187e:	2d 2f       	mov	r18, r29
    1880:	67 e5       	ldi	r22, 0x57	; 87
    1882:	8c e3       	ldi	r24, 0x3C	; 60
    1884:	93 e0       	ldi	r25, 0x03	; 3
    1886:	e7 d9       	rcall	.-3122   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1888:	2f c0       	rjmp	.+94     	; 0x18e8 <_Z16anzeige_richtungfhh+0x1a2>
    188a:	20 e0       	ldi	r18, 0x00	; 0
    188c:	30 e8       	ldi	r19, 0x80	; 128
    188e:	42 e9       	ldi	r20, 0x92	; 146
    1890:	53 e4       	ldi	r21, 0x43	; 67
    1892:	c7 01       	movw	r24, r14
    1894:	b6 01       	movw	r22, r12
    1896:	0e 94 6d 2b 	call	0x56da	; 0x56da <__cmpsf2>
    189a:	88 23       	and	r24, r24
    189c:	54 f4       	brge	.+20     	; 0x18b2 <_Z16anzeige_richtungfhh+0x16c>
    189e:	2d 2f       	mov	r18, r29
    18a0:	22 0f       	add	r18, r18
    18a2:	22 0f       	add	r18, r18
    18a4:	22 0f       	add	r18, r18
    18a6:	4c 2f       	mov	r20, r28
    18a8:	67 e5       	ldi	r22, 0x57	; 87
    18aa:	8c e3       	ldi	r24, 0x3C	; 60
    18ac:	93 e0       	ldi	r25, 0x03	; 3
    18ae:	d3 d9       	rcall	.-3162   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    18b0:	1b c0       	rjmp	.+54     	; 0x18e8 <_Z16anzeige_richtungfhh+0x1a2>
    18b2:	20 e0       	ldi	r18, 0x00	; 0
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	49 ea       	ldi	r20, 0xA9	; 169
    18b8:	53 e4       	ldi	r21, 0x43	; 67
    18ba:	c7 01       	movw	r24, r14
    18bc:	b6 01       	movw	r22, r12
    18be:	0e 94 6d 2b 	call	0x56da	; 0x56da <__cmpsf2>
    18c2:	88 23       	and	r24, r24
    18c4:	8c f4       	brge	.+34     	; 0x18e8 <_Z16anzeige_richtungfhh+0x1a2>
    18c6:	dd 0f       	add	r29, r29
    18c8:	dd 0f       	add	r29, r29
    18ca:	dd 0f       	add	r29, r29
    18cc:	4d ef       	ldi	r20, 0xFD	; 253
    18ce:	4c 0f       	add	r20, r28
    18d0:	2d 2f       	mov	r18, r29
    18d2:	6e e4       	ldi	r22, 0x4E	; 78
    18d4:	8c e3       	ldi	r24, 0x3C	; 60
    18d6:	93 e0       	ldi	r25, 0x03	; 3
    18d8:	be d9       	rcall	.-3204   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    18da:	43 e0       	ldi	r20, 0x03	; 3
    18dc:	4c 0f       	add	r20, r28
    18de:	2d 2f       	mov	r18, r29
    18e0:	67 e5       	ldi	r22, 0x57	; 87
    18e2:	8c e3       	ldi	r24, 0x3C	; 60
    18e4:	93 e0       	ldi	r25, 0x03	; 3
    18e6:	b7 d9       	rcall	.-3218   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    18e8:	df 91       	pop	r29
    18ea:	cf 91       	pop	r28
    18ec:	ff 90       	pop	r15
    18ee:	ef 90       	pop	r14
    18f0:	df 90       	pop	r13
    18f2:	cf 90       	pop	r12
    18f4:	08 95       	ret

000018f6 <_Z13anzeige_nadelhhf>:
    18f6:	af 92       	push	r10
    18f8:	bf 92       	push	r11
    18fa:	cf 92       	push	r12
    18fc:	df 92       	push	r13
    18fe:	ef 92       	push	r14
    1900:	ff 92       	push	r15
    1902:	0f 93       	push	r16
    1904:	1f 93       	push	r17
    1906:	59 01       	movw	r10, r18
    1908:	6a 01       	movw	r12, r20
    190a:	e1 2c       	mov	r14, r1
    190c:	f1 2c       	mov	r15, r1
    190e:	0c e8       	ldi	r16, 0x8C	; 140
    1910:	12 e4       	ldi	r17, 0x42	; 66
    1912:	24 e1       	ldi	r18, 0x14	; 20
    1914:	46 2f       	mov	r20, r22
    1916:	68 2f       	mov	r22, r24
    1918:	8c e3       	ldi	r24, 0x3C	; 60
    191a:	93 e0       	ldi	r25, 0x03	; 3
    191c:	7c d8       	rcall	.-3848   	; 0xa16 <_ZN7Display13draw_triangleEhhhff>
    191e:	1f 91       	pop	r17
    1920:	0f 91       	pop	r16
    1922:	ff 90       	pop	r15
    1924:	ef 90       	pop	r14
    1926:	df 90       	pop	r13
    1928:	cf 90       	pop	r12
    192a:	bf 90       	pop	r11
    192c:	af 90       	pop	r10
    192e:	08 95       	ret

00001930 <_Z19anzeige_kleinenadelhhf>:
    1930:	af 92       	push	r10
    1932:	bf 92       	push	r11
    1934:	cf 92       	push	r12
    1936:	df 92       	push	r13
    1938:	ef 92       	push	r14
    193a:	ff 92       	push	r15
    193c:	0f 93       	push	r16
    193e:	1f 93       	push	r17
    1940:	59 01       	movw	r10, r18
    1942:	6a 01       	movw	r12, r20
    1944:	e1 2c       	mov	r14, r1
    1946:	f1 2c       	mov	r15, r1
    1948:	0c e8       	ldi	r16, 0x8C	; 140
    194a:	12 e4       	ldi	r17, 0x42	; 66
    194c:	2a e0       	ldi	r18, 0x0A	; 10
    194e:	46 2f       	mov	r20, r22
    1950:	68 2f       	mov	r22, r24
    1952:	8c e3       	ldi	r24, 0x3C	; 60
    1954:	93 e0       	ldi	r25, 0x03	; 3
    1956:	5f d8       	rcall	.-3906   	; 0xa16 <_ZN7Display13draw_triangleEhhhff>
    1958:	1f 91       	pop	r17
    195a:	0f 91       	pop	r16
    195c:	ff 90       	pop	r15
    195e:	ef 90       	pop	r14
    1960:	df 90       	pop	r13
    1962:	cf 90       	pop	r12
    1964:	bf 90       	pop	r11
    1966:	af 90       	pop	r10
    1968:	08 95       	ret

0000196a <_Z11menue_hauptv>:
    196a:	cf 92       	push	r12
    196c:	df 92       	push	r13
    196e:	ef 92       	push	r14
    1970:	ff 92       	push	r15
    1972:	0f 93       	push	r16
    1974:	1f 93       	push	r17
    1976:	cf 93       	push	r28
    1978:	df 93       	push	r29
    197a:	cd b7       	in	r28, 0x3d	; 61
    197c:	de b7       	in	r29, 0x3e	; 62
    197e:	64 97       	sbiw	r28, 0x14	; 20
    1980:	0f b6       	in	r0, 0x3f	; 63
    1982:	f8 94       	cli
    1984:	de bf       	out	0x3e, r29	; 62
    1986:	0f be       	out	0x3f, r0	; 63
    1988:	cd bf       	out	0x3d, r28	; 61
    198a:	8c e3       	ldi	r24, 0x3C	; 60
    198c:	93 e0       	ldi	r25, 0x03	; 3
    198e:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    1992:	80 e1       	ldi	r24, 0x10	; 16
    1994:	e6 e3       	ldi	r30, 0x36	; 54
    1996:	f1 e0       	ldi	r31, 0x01	; 1
    1998:	8e 01       	movw	r16, r28
    199a:	0f 5f       	subi	r16, 0xFF	; 255
    199c:	1f 4f       	sbci	r17, 0xFF	; 255
    199e:	d8 01       	movw	r26, r16
    19a0:	01 90       	ld	r0, Z+
    19a2:	0d 92       	st	X+, r0
    19a4:	8a 95       	dec	r24
    19a6:	e1 f7       	brne	.-8      	; 0x19a0 <_Z11menue_hauptv+0x36>
    19a8:	e0 2e       	mov	r14, r16
    19aa:	f1 2e       	mov	r15, r17
    19ac:	68 01       	movw	r12, r16
    19ae:	10 e0       	ldi	r17, 0x00	; 0
    19b0:	f6 01       	movw	r30, r12
    19b2:	61 91       	ld	r22, Z+
    19b4:	6f 01       	movw	r12, r30
    19b6:	20 e0       	ldi	r18, 0x00	; 0
    19b8:	41 2f       	mov	r20, r17
    19ba:	8c e3       	ldi	r24, 0x3C	; 60
    19bc:	93 e0       	ldi	r25, 0x03	; 3
    19be:	4b d9       	rcall	.-3434   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    19c0:	1a 5f       	subi	r17, 0xFA	; 250
    19c2:	1a 35       	cpi	r17, 0x5A	; 90
    19c4:	a9 f7       	brne	.-22     	; 0x19b0 <_Z11menue_hauptv+0x46>
    19c6:	81 e1       	ldi	r24, 0x11	; 17
    19c8:	e6 e4       	ldi	r30, 0x46	; 70
    19ca:	f1 e0       	ldi	r31, 0x01	; 1
    19cc:	de 01       	movw	r26, r28
    19ce:	11 96       	adiw	r26, 0x01	; 1
    19d0:	01 90       	ld	r0, Z+
    19d2:	0d 92       	st	X+, r0
    19d4:	8a 95       	dec	r24
    19d6:	e1 f7       	brne	.-8      	; 0x19d0 <_Z11menue_hauptv+0x66>
    19d8:	ce 2c       	mov	r12, r14
    19da:	df 2c       	mov	r13, r15
    19dc:	10 e0       	ldi	r17, 0x00	; 0
    19de:	f6 01       	movw	r30, r12
    19e0:	61 91       	ld	r22, Z+
    19e2:	6f 01       	movw	r12, r30
    19e4:	28 e0       	ldi	r18, 0x08	; 8
    19e6:	41 2f       	mov	r20, r17
    19e8:	8c e3       	ldi	r24, 0x3C	; 60
    19ea:	93 e0       	ldi	r25, 0x03	; 3
    19ec:	34 d9       	rcall	.-3480   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    19ee:	1a 5f       	subi	r17, 0xFA	; 250
    19f0:	10 36       	cpi	r17, 0x60	; 96
    19f2:	a9 f7       	brne	.-22     	; 0x19de <_Z11menue_hauptv+0x74>
    19f4:	8a e0       	ldi	r24, 0x0A	; 10
    19f6:	e7 e5       	ldi	r30, 0x57	; 87
    19f8:	f1 e0       	ldi	r31, 0x01	; 1
    19fa:	de 01       	movw	r26, r28
    19fc:	11 96       	adiw	r26, 0x01	; 1
    19fe:	01 90       	ld	r0, Z+
    1a00:	0d 92       	st	X+, r0
    1a02:	8a 95       	dec	r24
    1a04:	e1 f7       	brne	.-8      	; 0x19fe <_Z11menue_hauptv+0x94>
    1a06:	ce 2c       	mov	r12, r14
    1a08:	df 2c       	mov	r13, r15
    1a0a:	10 e0       	ldi	r17, 0x00	; 0
    1a0c:	f6 01       	movw	r30, r12
    1a0e:	61 91       	ld	r22, Z+
    1a10:	6f 01       	movw	r12, r30
    1a12:	20 e1       	ldi	r18, 0x10	; 16
    1a14:	41 2f       	mov	r20, r17
    1a16:	8c e3       	ldi	r24, 0x3C	; 60
    1a18:	93 e0       	ldi	r25, 0x03	; 3
    1a1a:	1d d9       	rcall	.-3526   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1a1c:	1a 5f       	subi	r17, 0xFA	; 250
    1a1e:	16 33       	cpi	r17, 0x36	; 54
    1a20:	a9 f7       	brne	.-22     	; 0x1a0c <_Z11menue_hauptv+0xa2>
    1a22:	8b e0       	ldi	r24, 0x0B	; 11
    1a24:	e1 e6       	ldi	r30, 0x61	; 97
    1a26:	f1 e0       	ldi	r31, 0x01	; 1
    1a28:	de 01       	movw	r26, r28
    1a2a:	11 96       	adiw	r26, 0x01	; 1
    1a2c:	01 90       	ld	r0, Z+
    1a2e:	0d 92       	st	X+, r0
    1a30:	8a 95       	dec	r24
    1a32:	e1 f7       	brne	.-8      	; 0x1a2c <_Z11menue_hauptv+0xc2>
    1a34:	ce 2c       	mov	r12, r14
    1a36:	df 2c       	mov	r13, r15
    1a38:	10 e0       	ldi	r17, 0x00	; 0
    1a3a:	f6 01       	movw	r30, r12
    1a3c:	61 91       	ld	r22, Z+
    1a3e:	6f 01       	movw	r12, r30
    1a40:	28 e1       	ldi	r18, 0x18	; 24
    1a42:	41 2f       	mov	r20, r17
    1a44:	8c e3       	ldi	r24, 0x3C	; 60
    1a46:	93 e0       	ldi	r25, 0x03	; 3
    1a48:	06 d9       	rcall	.-3572   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1a4a:	1a 5f       	subi	r17, 0xFA	; 250
    1a4c:	1c 33       	cpi	r17, 0x3C	; 60
    1a4e:	a9 f7       	brne	.-22     	; 0x1a3a <_Z11menue_hauptv+0xd0>
    1a50:	80 e1       	ldi	r24, 0x10	; 16
    1a52:	ec e6       	ldi	r30, 0x6C	; 108
    1a54:	f1 e0       	ldi	r31, 0x01	; 1
    1a56:	de 01       	movw	r26, r28
    1a58:	11 96       	adiw	r26, 0x01	; 1
    1a5a:	01 90       	ld	r0, Z+
    1a5c:	0d 92       	st	X+, r0
    1a5e:	8a 95       	dec	r24
    1a60:	e1 f7       	brne	.-8      	; 0x1a5a <_Z11menue_hauptv+0xf0>
    1a62:	ce 2c       	mov	r12, r14
    1a64:	df 2c       	mov	r13, r15
    1a66:	10 e0       	ldi	r17, 0x00	; 0
    1a68:	f6 01       	movw	r30, r12
    1a6a:	61 91       	ld	r22, Z+
    1a6c:	6f 01       	movw	r12, r30
    1a6e:	20 e2       	ldi	r18, 0x20	; 32
    1a70:	41 2f       	mov	r20, r17
    1a72:	8c e3       	ldi	r24, 0x3C	; 60
    1a74:	93 e0       	ldi	r25, 0x03	; 3
    1a76:	ef d8       	rcall	.-3618   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1a78:	1a 5f       	subi	r17, 0xFA	; 250
    1a7a:	1a 35       	cpi	r17, 0x5A	; 90
    1a7c:	a9 f7       	brne	.-22     	; 0x1a68 <_Z11menue_hauptv+0xfe>
    1a7e:	8e e0       	ldi	r24, 0x0E	; 14
    1a80:	ec e7       	ldi	r30, 0x7C	; 124
    1a82:	f1 e0       	ldi	r31, 0x01	; 1
    1a84:	de 01       	movw	r26, r28
    1a86:	11 96       	adiw	r26, 0x01	; 1
    1a88:	01 90       	ld	r0, Z+
    1a8a:	0d 92       	st	X+, r0
    1a8c:	8a 95       	dec	r24
    1a8e:	e1 f7       	brne	.-8      	; 0x1a88 <_Z11menue_hauptv+0x11e>
    1a90:	ce 2c       	mov	r12, r14
    1a92:	df 2c       	mov	r13, r15
    1a94:	10 e0       	ldi	r17, 0x00	; 0
    1a96:	f6 01       	movw	r30, r12
    1a98:	61 91       	ld	r22, Z+
    1a9a:	6f 01       	movw	r12, r30
    1a9c:	28 e2       	ldi	r18, 0x28	; 40
    1a9e:	41 2f       	mov	r20, r17
    1aa0:	8c e3       	ldi	r24, 0x3C	; 60
    1aa2:	93 e0       	ldi	r25, 0x03	; 3
    1aa4:	d8 d8       	rcall	.-3664   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1aa6:	1a 5f       	subi	r17, 0xFA	; 250
    1aa8:	1e 34       	cpi	r17, 0x4E	; 78
    1aaa:	a9 f7       	brne	.-22     	; 0x1a96 <_Z11menue_hauptv+0x12c>
    1aac:	8e e0       	ldi	r24, 0x0E	; 14
    1aae:	ea e8       	ldi	r30, 0x8A	; 138
    1ab0:	f1 e0       	ldi	r31, 0x01	; 1
    1ab2:	de 01       	movw	r26, r28
    1ab4:	11 96       	adiw	r26, 0x01	; 1
    1ab6:	01 90       	ld	r0, Z+
    1ab8:	0d 92       	st	X+, r0
    1aba:	8a 95       	dec	r24
    1abc:	e1 f7       	brne	.-8      	; 0x1ab6 <_Z11menue_hauptv+0x14c>
    1abe:	ce 2c       	mov	r12, r14
    1ac0:	df 2c       	mov	r13, r15
    1ac2:	10 e0       	ldi	r17, 0x00	; 0
    1ac4:	f6 01       	movw	r30, r12
    1ac6:	61 91       	ld	r22, Z+
    1ac8:	6f 01       	movw	r12, r30
    1aca:	20 e3       	ldi	r18, 0x30	; 48
    1acc:	41 2f       	mov	r20, r17
    1ace:	8c e3       	ldi	r24, 0x3C	; 60
    1ad0:	93 e0       	ldi	r25, 0x03	; 3
    1ad2:	c1 d8       	rcall	.-3710   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1ad4:	1a 5f       	subi	r17, 0xFA	; 250
    1ad6:	1e 34       	cpi	r17, 0x4E	; 78
    1ad8:	a9 f7       	brne	.-22     	; 0x1ac4 <_Z11menue_hauptv+0x15a>
    1ada:	64 96       	adiw	r28, 0x14	; 20
    1adc:	0f b6       	in	r0, 0x3f	; 63
    1ade:	f8 94       	cli
    1ae0:	de bf       	out	0x3e, r29	; 62
    1ae2:	0f be       	out	0x3f, r0	; 63
    1ae4:	cd bf       	out	0x3d, r28	; 61
    1ae6:	df 91       	pop	r29
    1ae8:	cf 91       	pop	r28
    1aea:	1f 91       	pop	r17
    1aec:	0f 91       	pop	r16
    1aee:	ff 90       	pop	r15
    1af0:	ef 90       	pop	r14
    1af2:	df 90       	pop	r13
    1af4:	cf 90       	pop	r12
    1af6:	08 95       	ret

00001af8 <_Z11menue_einstv>:
    1af8:	af 92       	push	r10
    1afa:	bf 92       	push	r11
    1afc:	df 92       	push	r13
    1afe:	ef 92       	push	r14
    1b00:	0f 93       	push	r16
    1b02:	1f 93       	push	r17
    1b04:	cf 93       	push	r28
    1b06:	df 93       	push	r29
    1b08:	cd b7       	in	r28, 0x3d	; 61
    1b0a:	de b7       	in	r29, 0x3e	; 62
    1b0c:	64 97       	sbiw	r28, 0x14	; 20
    1b0e:	0f b6       	in	r0, 0x3f	; 63
    1b10:	f8 94       	cli
    1b12:	de bf       	out	0x3e, r29	; 62
    1b14:	0f be       	out	0x3f, r0	; 63
    1b16:	cd bf       	out	0x3d, r28	; 61
    1b18:	8c e3       	ldi	r24, 0x3C	; 60
    1b1a:	93 e0       	ldi	r25, 0x03	; 3
    1b1c:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    1b20:	81 e1       	ldi	r24, 0x11	; 17
    1b22:	e8 e9       	ldi	r30, 0x98	; 152
    1b24:	f1 e0       	ldi	r31, 0x01	; 1
    1b26:	8e 01       	movw	r16, r28
    1b28:	0f 5f       	subi	r16, 0xFF	; 255
    1b2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1b2c:	d8 01       	movw	r26, r16
    1b2e:	01 90       	ld	r0, Z+
    1b30:	0d 92       	st	X+, r0
    1b32:	8a 95       	dec	r24
    1b34:	e1 f7       	brne	.-8      	; 0x1b2e <_Z11menue_einstv+0x36>
    1b36:	d0 2e       	mov	r13, r16
    1b38:	e1 2e       	mov	r14, r17
    1b3a:	58 01       	movw	r10, r16
    1b3c:	10 e0       	ldi	r17, 0x00	; 0
    1b3e:	f5 01       	movw	r30, r10
    1b40:	61 91       	ld	r22, Z+
    1b42:	5f 01       	movw	r10, r30
    1b44:	20 e0       	ldi	r18, 0x00	; 0
    1b46:	41 2f       	mov	r20, r17
    1b48:	8c e3       	ldi	r24, 0x3C	; 60
    1b4a:	93 e0       	ldi	r25, 0x03	; 3
    1b4c:	84 d8       	rcall	.-3832   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1b4e:	1a 5f       	subi	r17, 0xFA	; 250
    1b50:	10 36       	cpi	r17, 0x60	; 96
    1b52:	a9 f7       	brne	.-22     	; 0x1b3e <_Z11menue_einstv+0x46>
    1b54:	86 e1       	ldi	r24, 0x16	; 22
    1b56:	e9 ea       	ldi	r30, 0xA9	; 169
    1b58:	f1 e0       	ldi	r31, 0x01	; 1
    1b5a:	de 01       	movw	r26, r28
    1b5c:	11 96       	adiw	r26, 0x01	; 1
    1b5e:	01 90       	ld	r0, Z+
    1b60:	0d 92       	st	X+, r0
    1b62:	8a 95       	dec	r24
    1b64:	e1 f7       	brne	.-8      	; 0x1b5e <_Z11menue_einstv+0x66>
    1b66:	ad 2c       	mov	r10, r13
    1b68:	be 2c       	mov	r11, r14
    1b6a:	10 e0       	ldi	r17, 0x00	; 0
    1b6c:	f5 01       	movw	r30, r10
    1b6e:	61 91       	ld	r22, Z+
    1b70:	5f 01       	movw	r10, r30
    1b72:	28 e0       	ldi	r18, 0x08	; 8
    1b74:	41 2f       	mov	r20, r17
    1b76:	8c e3       	ldi	r24, 0x3C	; 60
    1b78:	93 e0       	ldi	r25, 0x03	; 3
    1b7a:	6d d8       	rcall	.-3878   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1b7c:	1a 5f       	subi	r17, 0xFA	; 250
    1b7e:	1e 37       	cpi	r17, 0x7E	; 126
    1b80:	a9 f7       	brne	.-22     	; 0x1b6c <_Z11menue_einstv+0x74>
    1b82:	81 e1       	ldi	r24, 0x11	; 17
    1b84:	ef eb       	ldi	r30, 0xBF	; 191
    1b86:	f1 e0       	ldi	r31, 0x01	; 1
    1b88:	de 01       	movw	r26, r28
    1b8a:	11 96       	adiw	r26, 0x01	; 1
    1b8c:	01 90       	ld	r0, Z+
    1b8e:	0d 92       	st	X+, r0
    1b90:	8a 95       	dec	r24
    1b92:	e1 f7       	brne	.-8      	; 0x1b8c <_Z11menue_einstv+0x94>
    1b94:	ad 2c       	mov	r10, r13
    1b96:	be 2c       	mov	r11, r14
    1b98:	10 e0       	ldi	r17, 0x00	; 0
    1b9a:	f5 01       	movw	r30, r10
    1b9c:	61 91       	ld	r22, Z+
    1b9e:	5f 01       	movw	r10, r30
    1ba0:	20 e1       	ldi	r18, 0x10	; 16
    1ba2:	41 2f       	mov	r20, r17
    1ba4:	8c e3       	ldi	r24, 0x3C	; 60
    1ba6:	93 e0       	ldi	r25, 0x03	; 3
    1ba8:	56 d8       	rcall	.-3924   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1baa:	1a 5f       	subi	r17, 0xFA	; 250
    1bac:	10 36       	cpi	r17, 0x60	; 96
    1bae:	a9 f7       	brne	.-22     	; 0x1b9a <_Z11menue_einstv+0xa2>
    1bb0:	83 e1       	ldi	r24, 0x13	; 19
    1bb2:	e0 ed       	ldi	r30, 0xD0	; 208
    1bb4:	f1 e0       	ldi	r31, 0x01	; 1
    1bb6:	de 01       	movw	r26, r28
    1bb8:	11 96       	adiw	r26, 0x01	; 1
    1bba:	01 90       	ld	r0, Z+
    1bbc:	0d 92       	st	X+, r0
    1bbe:	8a 95       	dec	r24
    1bc0:	e1 f7       	brne	.-8      	; 0x1bba <_Z11menue_einstv+0xc2>
    1bc2:	ad 2c       	mov	r10, r13
    1bc4:	be 2c       	mov	r11, r14
    1bc6:	10 e0       	ldi	r17, 0x00	; 0
    1bc8:	f5 01       	movw	r30, r10
    1bca:	61 91       	ld	r22, Z+
    1bcc:	5f 01       	movw	r10, r30
    1bce:	28 e1       	ldi	r18, 0x18	; 24
    1bd0:	41 2f       	mov	r20, r17
    1bd2:	8c e3       	ldi	r24, 0x3C	; 60
    1bd4:	93 e0       	ldi	r25, 0x03	; 3
    1bd6:	3f d8       	rcall	.-3970   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1bd8:	1a 5f       	subi	r17, 0xFA	; 250
    1bda:	1c 36       	cpi	r17, 0x6C	; 108
    1bdc:	a9 f7       	brne	.-22     	; 0x1bc8 <_Z11menue_einstv+0xd0>
    1bde:	64 96       	adiw	r28, 0x14	; 20
    1be0:	0f b6       	in	r0, 0x3f	; 63
    1be2:	f8 94       	cli
    1be4:	de bf       	out	0x3e, r29	; 62
    1be6:	0f be       	out	0x3f, r0	; 63
    1be8:	cd bf       	out	0x3d, r28	; 61
    1bea:	df 91       	pop	r29
    1bec:	cf 91       	pop	r28
    1bee:	1f 91       	pop	r17
    1bf0:	0f 91       	pop	r16
    1bf2:	ef 90       	pop	r14
    1bf4:	df 90       	pop	r13
    1bf6:	bf 90       	pop	r11
    1bf8:	af 90       	pop	r10
    1bfa:	08 95       	ret

00001bfc <_Z9menue_uhrv>:
    1bfc:	af 92       	push	r10
    1bfe:	bf 92       	push	r11
    1c00:	df 92       	push	r13
    1c02:	ef 92       	push	r14
    1c04:	0f 93       	push	r16
    1c06:	1f 93       	push	r17
    1c08:	cf 93       	push	r28
    1c0a:	df 93       	push	r29
    1c0c:	cd b7       	in	r28, 0x3d	; 61
    1c0e:	de b7       	in	r29, 0x3e	; 62
    1c10:	64 97       	sbiw	r28, 0x14	; 20
    1c12:	0f b6       	in	r0, 0x3f	; 63
    1c14:	f8 94       	cli
    1c16:	de bf       	out	0x3e, r29	; 62
    1c18:	0f be       	out	0x3f, r0	; 63
    1c1a:	cd bf       	out	0x3d, r28	; 61
    1c1c:	8c e3       	ldi	r24, 0x3C	; 60
    1c1e:	93 e0       	ldi	r25, 0x03	; 3
    1c20:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    1c24:	86 e0       	ldi	r24, 0x06	; 6
    1c26:	e3 ee       	ldi	r30, 0xE3	; 227
    1c28:	f1 e0       	ldi	r31, 0x01	; 1
    1c2a:	8e 01       	movw	r16, r28
    1c2c:	0f 5f       	subi	r16, 0xFF	; 255
    1c2e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c30:	d8 01       	movw	r26, r16
    1c32:	01 90       	ld	r0, Z+
    1c34:	0d 92       	st	X+, r0
    1c36:	8a 95       	dec	r24
    1c38:	e1 f7       	brne	.-8      	; 0x1c32 <_Z9menue_uhrv+0x36>
    1c3a:	d0 2e       	mov	r13, r16
    1c3c:	e1 2e       	mov	r14, r17
    1c3e:	58 01       	movw	r10, r16
    1c40:	10 e0       	ldi	r17, 0x00	; 0
    1c42:	f5 01       	movw	r30, r10
    1c44:	61 91       	ld	r22, Z+
    1c46:	5f 01       	movw	r10, r30
    1c48:	20 e0       	ldi	r18, 0x00	; 0
    1c4a:	41 2f       	mov	r20, r17
    1c4c:	8c e3       	ldi	r24, 0x3C	; 60
    1c4e:	93 e0       	ldi	r25, 0x03	; 3
    1c50:	02 d8       	rcall	.-4092   	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1c52:	1a 5f       	subi	r17, 0xFA	; 250
    1c54:	1e 31       	cpi	r17, 0x1E	; 30
    1c56:	a9 f7       	brne	.-22     	; 0x1c42 <_Z9menue_uhrv+0x46>
    1c58:	8b e0       	ldi	r24, 0x0B	; 11
    1c5a:	e9 ee       	ldi	r30, 0xE9	; 233
    1c5c:	f1 e0       	ldi	r31, 0x01	; 1
    1c5e:	de 01       	movw	r26, r28
    1c60:	11 96       	adiw	r26, 0x01	; 1
    1c62:	01 90       	ld	r0, Z+
    1c64:	0d 92       	st	X+, r0
    1c66:	8a 95       	dec	r24
    1c68:	e1 f7       	brne	.-8      	; 0x1c62 <_Z9menue_uhrv+0x66>
    1c6a:	ad 2c       	mov	r10, r13
    1c6c:	be 2c       	mov	r11, r14
    1c6e:	10 e0       	ldi	r17, 0x00	; 0
    1c70:	f5 01       	movw	r30, r10
    1c72:	61 91       	ld	r22, Z+
    1c74:	5f 01       	movw	r10, r30
    1c76:	28 e0       	ldi	r18, 0x08	; 8
    1c78:	41 2f       	mov	r20, r17
    1c7a:	8c e3       	ldi	r24, 0x3C	; 60
    1c7c:	93 e0       	ldi	r25, 0x03	; 3
    1c7e:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1c82:	1a 5f       	subi	r17, 0xFA	; 250
    1c84:	1c 33       	cpi	r17, 0x3C	; 60
    1c86:	a1 f7       	brne	.-24     	; 0x1c70 <_Z9menue_uhrv+0x74>
    1c88:	88 e0       	ldi	r24, 0x08	; 8
    1c8a:	e4 ef       	ldi	r30, 0xF4	; 244
    1c8c:	f1 e0       	ldi	r31, 0x01	; 1
    1c8e:	de 01       	movw	r26, r28
    1c90:	11 96       	adiw	r26, 0x01	; 1
    1c92:	01 90       	ld	r0, Z+
    1c94:	0d 92       	st	X+, r0
    1c96:	8a 95       	dec	r24
    1c98:	e1 f7       	brne	.-8      	; 0x1c92 <_Z9menue_uhrv+0x96>
    1c9a:	ad 2c       	mov	r10, r13
    1c9c:	be 2c       	mov	r11, r14
    1c9e:	10 e0       	ldi	r17, 0x00	; 0
    1ca0:	f5 01       	movw	r30, r10
    1ca2:	61 91       	ld	r22, Z+
    1ca4:	5f 01       	movw	r10, r30
    1ca6:	20 e1       	ldi	r18, 0x10	; 16
    1ca8:	41 2f       	mov	r20, r17
    1caa:	8c e3       	ldi	r24, 0x3C	; 60
    1cac:	93 e0       	ldi	r25, 0x03	; 3
    1cae:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1cb2:	1a 5f       	subi	r17, 0xFA	; 250
    1cb4:	1a 32       	cpi	r17, 0x2A	; 42
    1cb6:	a1 f7       	brne	.-24     	; 0x1ca0 <_Z9menue_uhrv+0xa4>
    1cb8:	89 e0       	ldi	r24, 0x09	; 9
    1cba:	ec ef       	ldi	r30, 0xFC	; 252
    1cbc:	f1 e0       	ldi	r31, 0x01	; 1
    1cbe:	de 01       	movw	r26, r28
    1cc0:	11 96       	adiw	r26, 0x01	; 1
    1cc2:	01 90       	ld	r0, Z+
    1cc4:	0d 92       	st	X+, r0
    1cc6:	8a 95       	dec	r24
    1cc8:	e1 f7       	brne	.-8      	; 0x1cc2 <_Z9menue_uhrv+0xc6>
    1cca:	ad 2c       	mov	r10, r13
    1ccc:	be 2c       	mov	r11, r14
    1cce:	10 e0       	ldi	r17, 0x00	; 0
    1cd0:	f5 01       	movw	r30, r10
    1cd2:	61 91       	ld	r22, Z+
    1cd4:	5f 01       	movw	r10, r30
    1cd6:	28 e1       	ldi	r18, 0x18	; 24
    1cd8:	41 2f       	mov	r20, r17
    1cda:	8c e3       	ldi	r24, 0x3C	; 60
    1cdc:	93 e0       	ldi	r25, 0x03	; 3
    1cde:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1ce2:	1a 5f       	subi	r17, 0xFA	; 250
    1ce4:	10 33       	cpi	r17, 0x30	; 48
    1ce6:	a1 f7       	brne	.-24     	; 0x1cd0 <_Z9menue_uhrv+0xd4>
    1ce8:	8c e0       	ldi	r24, 0x0C	; 12
    1cea:	e5 e0       	ldi	r30, 0x05	; 5
    1cec:	f2 e0       	ldi	r31, 0x02	; 2
    1cee:	de 01       	movw	r26, r28
    1cf0:	11 96       	adiw	r26, 0x01	; 1
    1cf2:	01 90       	ld	r0, Z+
    1cf4:	0d 92       	st	X+, r0
    1cf6:	8a 95       	dec	r24
    1cf8:	e1 f7       	brne	.-8      	; 0x1cf2 <_Z9menue_uhrv+0xf6>
    1cfa:	ad 2c       	mov	r10, r13
    1cfc:	be 2c       	mov	r11, r14
    1cfe:	10 e0       	ldi	r17, 0x00	; 0
    1d00:	f5 01       	movw	r30, r10
    1d02:	61 91       	ld	r22, Z+
    1d04:	5f 01       	movw	r10, r30
    1d06:	20 e2       	ldi	r18, 0x20	; 32
    1d08:	41 2f       	mov	r20, r17
    1d0a:	8c e3       	ldi	r24, 0x3C	; 60
    1d0c:	93 e0       	ldi	r25, 0x03	; 3
    1d0e:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1d12:	1a 5f       	subi	r17, 0xFA	; 250
    1d14:	12 34       	cpi	r17, 0x42	; 66
    1d16:	a1 f7       	brne	.-24     	; 0x1d00 <_Z9menue_uhrv+0x104>
    1d18:	64 96       	adiw	r28, 0x14	; 20
    1d1a:	0f b6       	in	r0, 0x3f	; 63
    1d1c:	f8 94       	cli
    1d1e:	de bf       	out	0x3e, r29	; 62
    1d20:	0f be       	out	0x3f, r0	; 63
    1d22:	cd bf       	out	0x3d, r28	; 61
    1d24:	df 91       	pop	r29
    1d26:	cf 91       	pop	r28
    1d28:	1f 91       	pop	r17
    1d2a:	0f 91       	pop	r16
    1d2c:	ef 90       	pop	r14
    1d2e:	df 90       	pop	r13
    1d30:	bf 90       	pop	r11
    1d32:	af 90       	pop	r10
    1d34:	08 95       	ret

00001d36 <_Z11uhranzeigenv>:
    1d36:	df 92       	push	r13
    1d38:	ef 92       	push	r14
    1d3a:	ff 92       	push	r15
    1d3c:	0f 93       	push	r16
    1d3e:	1f 93       	push	r17
    1d40:	cf 93       	push	r28
    1d42:	df 93       	push	r29
    1d44:	cd b7       	in	r28, 0x3d	; 61
    1d46:	de b7       	in	r29, 0x3e	; 62
    1d48:	64 97       	sbiw	r28, 0x14	; 20
    1d4a:	0f b6       	in	r0, 0x3f	; 63
    1d4c:	f8 94       	cli
    1d4e:	de bf       	out	0x3e, r29	; 62
    1d50:	0f be       	out	0x3f, r0	; 63
    1d52:	cd bf       	out	0x3d, r28	; 61
    1d54:	8c e3       	ldi	r24, 0x3C	; 60
    1d56:	93 e0       	ldi	r25, 0x03	; 3
    1d58:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    1d5c:	01 e0       	ldi	r16, 0x01	; 1
    1d5e:	20 91 4f 07 	lds	r18, 0x074F
    1d62:	40 91 4e 07 	lds	r20, 0x074E
    1d66:	60 91 4d 07 	lds	r22, 0x074D
    1d6a:	8c e3       	ldi	r24, 0x3C	; 60
    1d6c:	93 e0       	ldi	r25, 0x03	; 3
    1d6e:	37 d8       	rcall	.-3986   	; 0xdde <_ZN7Display6analogEhhhh>
    1d70:	0f 2e       	mov	r0, r31
    1d72:	fd e3       	ldi	r31, 0x3D	; 61
    1d74:	ef 2e       	mov	r14, r31
    1d76:	f7 e0       	ldi	r31, 0x07	; 7
    1d78:	ff 2e       	mov	r15, r31
    1d7a:	f0 2d       	mov	r31, r0
    1d7c:	11 e4       	ldi	r17, 0x41	; 65
    1d7e:	f7 01       	movw	r30, r14
    1d80:	61 91       	ld	r22, Z+
    1d82:	7f 01       	movw	r14, r30
    1d84:	20 e0       	ldi	r18, 0x00	; 0
    1d86:	41 2f       	mov	r20, r17
    1d88:	8c e3       	ldi	r24, 0x3C	; 60
    1d8a:	93 e0       	ldi	r25, 0x03	; 3
    1d8c:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1d90:	1a 5f       	subi	r17, 0xFA	; 250
    1d92:	11 37       	cpi	r17, 0x71	; 113
    1d94:	a1 f7       	brne	.-24     	; 0x1d7e <_Z11uhranzeigenv+0x48>
    1d96:	0f 2e       	mov	r0, r31
    1d98:	f5 e4       	ldi	r31, 0x45	; 69
    1d9a:	ef 2e       	mov	r14, r31
    1d9c:	f7 e0       	ldi	r31, 0x07	; 7
    1d9e:	ff 2e       	mov	r15, r31
    1da0:	f0 2d       	mov	r31, r0
    1da2:	11 e4       	ldi	r17, 0x41	; 65
    1da4:	f7 01       	movw	r30, r14
    1da6:	61 91       	ld	r22, Z+
    1da8:	7f 01       	movw	r14, r30
    1daa:	28 e3       	ldi	r18, 0x38	; 56
    1dac:	41 2f       	mov	r20, r17
    1dae:	8c e3       	ldi	r24, 0x3C	; 60
    1db0:	93 e0       	ldi	r25, 0x03	; 3
    1db2:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1db6:	1a 5f       	subi	r17, 0xFA	; 250
    1db8:	11 37       	cpi	r17, 0x71	; 113
    1dba:	a1 f7       	brne	.-24     	; 0x1da4 <_Z11uhranzeigenv+0x6e>
    1dbc:	9d da       	rcall	.-2758   	; 0x12f8 <_Z14Batteriestatusv>
    1dbe:	28 2f       	mov	r18, r24
    1dc0:	33 27       	eor	r19, r19
    1dc2:	27 fd       	sbrc	r18, 7
    1dc4:	30 95       	com	r19
    1dc6:	3f 93       	push	r19
    1dc8:	8f 93       	push	r24
    1dca:	81 e3       	ldi	r24, 0x31	; 49
    1dcc:	91 e0       	ldi	r25, 0x01	; 1
    1dce:	9f 93       	push	r25
    1dd0:	8f 93       	push	r24
    1dd2:	ce 01       	movw	r24, r28
    1dd4:	01 96       	adiw	r24, 0x01	; 1
    1dd6:	9f 93       	push	r25
    1dd8:	8f 93       	push	r24
    1dda:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
    1dde:	0f 90       	pop	r0
    1de0:	0f 90       	pop	r0
    1de2:	0f 90       	pop	r0
    1de4:	0f 90       	pop	r0
    1de6:	0f 90       	pop	r0
    1de8:	0f 90       	pop	r0
    1dea:	88 23       	and	r24, r24
    1dec:	59 f1       	breq	.+86     	; 0x1e44 <_Z11uhranzeigenv+0x10e>
    1dee:	8e 01       	movw	r16, r28
    1df0:	0f 5f       	subi	r16, 0xFF	; 255
    1df2:	1f 4f       	sbci	r17, 0xFF	; 255
    1df4:	81 50       	subi	r24, 0x01	; 1
    1df6:	68 94       	set
    1df8:	ee 24       	eor	r14, r14
    1dfa:	e1 f8       	bld	r14, 1
    1dfc:	f1 2c       	mov	r15, r1
    1dfe:	ec 0e       	add	r14, r28
    1e00:	fd 1e       	adc	r15, r29
    1e02:	e8 0e       	add	r14, r24
    1e04:	f1 1c       	adc	r15, r1
    1e06:	0f 2e       	mov	r0, r31
    1e08:	f9 e4       	ldi	r31, 0x49	; 73
    1e0a:	df 2e       	mov	r13, r31
    1e0c:	f0 2d       	mov	r31, r0
    1e0e:	f8 01       	movw	r30, r16
    1e10:	61 91       	ld	r22, Z+
    1e12:	8f 01       	movw	r16, r30
    1e14:	86 2f       	mov	r24, r22
    1e16:	87 7f       	andi	r24, 0xF7	; 247
    1e18:	85 32       	cpi	r24, 0x25	; 37
    1e1a:	39 f4       	brne	.+14     	; 0x1e2a <_Z11uhranzeigenv+0xf4>
    1e1c:	28 e1       	ldi	r18, 0x18	; 24
    1e1e:	4d 2d       	mov	r20, r13
    1e20:	8c e3       	ldi	r24, 0x3C	; 60
    1e22:	93 e0       	ldi	r25, 0x03	; 3
    1e24:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1e28:	08 c0       	rjmp	.+16     	; 0x1e3a <_Z11uhranzeigenv+0x104>
    1e2a:	60 53       	subi	r22, 0x30	; 48
    1e2c:	24 e1       	ldi	r18, 0x14	; 20
    1e2e:	4d ef       	ldi	r20, 0xFD	; 253
    1e30:	4d 0d       	add	r20, r13
    1e32:	8c e3       	ldi	r24, 0x3C	; 60
    1e34:	93 e0       	ldi	r25, 0x03	; 3
    1e36:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1e3a:	f0 e1       	ldi	r31, 0x10	; 16
    1e3c:	df 0e       	add	r13, r31
    1e3e:	0e 15       	cp	r16, r14
    1e40:	1f 05       	cpc	r17, r15
    1e42:	29 f7       	brne	.-54     	; 0x1e0e <_Z11uhranzeigenv+0xd8>
    1e44:	64 96       	adiw	r28, 0x14	; 20
    1e46:	0f b6       	in	r0, 0x3f	; 63
    1e48:	f8 94       	cli
    1e4a:	de bf       	out	0x3e, r29	; 62
    1e4c:	0f be       	out	0x3f, r0	; 63
    1e4e:	cd bf       	out	0x3d, r28	; 61
    1e50:	df 91       	pop	r29
    1e52:	cf 91       	pop	r28
    1e54:	1f 91       	pop	r17
    1e56:	0f 91       	pop	r16
    1e58:	ff 90       	pop	r15
    1e5a:	ef 90       	pop	r14
    1e5c:	df 90       	pop	r13
    1e5e:	08 95       	ret

00001e60 <_Z14uhranzeigenminv>:
    1e60:	0f 93       	push	r16
    1e62:	1f 93       	push	r17
    1e64:	cf 93       	push	r28
    1e66:	df 93       	push	r29
    1e68:	8c e3       	ldi	r24, 0x3C	; 60
    1e6a:	93 e0       	ldi	r25, 0x03	; 3
    1e6c:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    1e70:	82 e0       	ldi	r24, 0x02	; 2
    1e72:	63 db       	rcall	.-2362   	; 0x153a <_Z6headerh>
    1e74:	00 e0       	ldi	r16, 0x00	; 0
    1e76:	20 91 4f 07 	lds	r18, 0x074F
    1e7a:	40 91 4e 07 	lds	r20, 0x074E
    1e7e:	60 91 4d 07 	lds	r22, 0x074D
    1e82:	8c e3       	ldi	r24, 0x3C	; 60
    1e84:	93 e0       	ldi	r25, 0x03	; 3
    1e86:	0e 94 ef 06 	call	0xdde	; 0xdde <_ZN7Display6analogEhhhh>
    1e8a:	cd e3       	ldi	r28, 0x3D	; 61
    1e8c:	d7 e0       	ldi	r29, 0x07	; 7
    1e8e:	11 e4       	ldi	r17, 0x41	; 65
    1e90:	69 91       	ld	r22, Y+
    1e92:	20 e0       	ldi	r18, 0x00	; 0
    1e94:	41 2f       	mov	r20, r17
    1e96:	8c e3       	ldi	r24, 0x3C	; 60
    1e98:	93 e0       	ldi	r25, 0x03	; 3
    1e9a:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1e9e:	1a 5f       	subi	r17, 0xFA	; 250
    1ea0:	1f 35       	cpi	r17, 0x5F	; 95
    1ea2:	b1 f7       	brne	.-20     	; 0x1e90 <_Z14uhranzeigenminv+0x30>
    1ea4:	c5 e4       	ldi	r28, 0x45	; 69
    1ea6:	d7 e0       	ldi	r29, 0x07	; 7
    1ea8:	11 e4       	ldi	r17, 0x41	; 65
    1eaa:	69 91       	ld	r22, Y+
    1eac:	28 e3       	ldi	r18, 0x38	; 56
    1eae:	41 2f       	mov	r20, r17
    1eb0:	8c e3       	ldi	r24, 0x3C	; 60
    1eb2:	93 e0       	ldi	r25, 0x03	; 3
    1eb4:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    1eb8:	1a 5f       	subi	r17, 0xFA	; 250
    1eba:	11 37       	cpi	r17, 0x71	; 113
    1ebc:	b1 f7       	brne	.-20     	; 0x1eaa <_Z14uhranzeigenminv+0x4a>
    1ebe:	60 91 3d 07 	lds	r22, 0x073D
    1ec2:	60 53       	subi	r22, 0x30	; 48
    1ec4:	2d e0       	ldi	r18, 0x0D	; 13
    1ec6:	46 e4       	ldi	r20, 0x46	; 70
    1ec8:	8c e3       	ldi	r24, 0x3C	; 60
    1eca:	93 e0       	ldi	r25, 0x03	; 3
    1ecc:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1ed0:	60 91 3e 07 	lds	r22, 0x073E
    1ed4:	60 53       	subi	r22, 0x30	; 48
    1ed6:	2d e0       	ldi	r18, 0x0D	; 13
    1ed8:	46 e5       	ldi	r20, 0x56	; 86
    1eda:	8c e3       	ldi	r24, 0x3C	; 60
    1edc:	93 e0       	ldi	r25, 0x03	; 3
    1ede:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1ee2:	60 91 40 07 	lds	r22, 0x0740
    1ee6:	60 53       	subi	r22, 0x30	; 48
    1ee8:	22 e2       	ldi	r18, 0x22	; 34
    1eea:	46 e4       	ldi	r20, 0x46	; 70
    1eec:	8c e3       	ldi	r24, 0x3C	; 60
    1eee:	93 e0       	ldi	r25, 0x03	; 3
    1ef0:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1ef4:	60 91 41 07 	lds	r22, 0x0741
    1ef8:	60 53       	subi	r22, 0x30	; 48
    1efa:	22 e2       	ldi	r18, 0x22	; 34
    1efc:	46 e5       	ldi	r20, 0x56	; 86
    1efe:	8c e3       	ldi	r24, 0x3C	; 60
    1f00:	93 e0       	ldi	r25, 0x03	; 3
    1f02:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1f06:	df 91       	pop	r29
    1f08:	cf 91       	pop	r28
    1f0a:	1f 91       	pop	r17
    1f0c:	0f 91       	pop	r16
    1f0e:	08 95       	ret

00001f10 <_Z13Weckeranzeigev>:
    1f10:	1f 93       	push	r17
    1f12:	cf 93       	push	r28
    1f14:	df 93       	push	r29
    1f16:	8c e3       	ldi	r24, 0x3C	; 60
    1f18:	93 e0       	ldi	r25, 0x03	; 3
    1f1a:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    1f1e:	81 e0       	ldi	r24, 0x01	; 1
    1f20:	ed db       	rcall	.-2086   	; 0x16fc <_Z6bottomh>
    1f22:	81 e0       	ldi	r24, 0x01	; 1
    1f24:	0a db       	rcall	.-2540   	; 0x153a <_Z6headerh>
    1f26:	60 91 3d 07 	lds	r22, 0x073D
    1f2a:	60 53       	subi	r22, 0x30	; 48
    1f2c:	2d e0       	ldi	r18, 0x0D	; 13
    1f2e:	45 e0       	ldi	r20, 0x05	; 5
    1f30:	8c e3       	ldi	r24, 0x3C	; 60
    1f32:	93 e0       	ldi	r25, 0x03	; 3
    1f34:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1f38:	60 91 3e 07 	lds	r22, 0x073E
    1f3c:	60 53       	subi	r22, 0x30	; 48
    1f3e:	2d e0       	ldi	r18, 0x0D	; 13
    1f40:	45 e1       	ldi	r20, 0x15	; 21
    1f42:	8c e3       	ldi	r24, 0x3C	; 60
    1f44:	93 e0       	ldi	r25, 0x03	; 3
    1f46:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1f4a:	60 91 40 07 	lds	r22, 0x0740
    1f4e:	60 53       	subi	r22, 0x30	; 48
    1f50:	22 e2       	ldi	r18, 0x22	; 34
    1f52:	45 e0       	ldi	r20, 0x05	; 5
    1f54:	8c e3       	ldi	r24, 0x3C	; 60
    1f56:	93 e0       	ldi	r25, 0x03	; 3
    1f58:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1f5c:	60 91 41 07 	lds	r22, 0x0741
    1f60:	60 53       	subi	r22, 0x30	; 48
    1f62:	22 e2       	ldi	r18, 0x22	; 34
    1f64:	45 e1       	ldi	r20, 0x15	; 21
    1f66:	8c e3       	ldi	r24, 0x3C	; 60
    1f68:	93 e0       	ldi	r25, 0x03	; 3
    1f6a:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1f6e:	c7 e5       	ldi	r28, 0x57	; 87
    1f70:	d7 e0       	ldi	r29, 0x07	; 7
    1f72:	68 81       	ld	r22, Y
    1f74:	1d ec       	ldi	r17, 0xCD	; 205
    1f76:	61 9f       	mul	r22, r17
    1f78:	61 2d       	mov	r22, r1
    1f7a:	11 24       	eor	r1, r1
    1f7c:	66 95       	lsr	r22
    1f7e:	66 95       	lsr	r22
    1f80:	66 95       	lsr	r22
    1f82:	2d e0       	ldi	r18, 0x0D	; 13
    1f84:	46 e4       	ldi	r20, 0x46	; 70
    1f86:	8c e3       	ldi	r24, 0x3C	; 60
    1f88:	93 e0       	ldi	r25, 0x03	; 3
    1f8a:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1f8e:	68 81       	ld	r22, Y
    1f90:	61 9f       	mul	r22, r17
    1f92:	81 2d       	mov	r24, r1
    1f94:	11 24       	eor	r1, r1
    1f96:	86 95       	lsr	r24
    1f98:	86 95       	lsr	r24
    1f9a:	86 95       	lsr	r24
    1f9c:	88 0f       	add	r24, r24
    1f9e:	98 2f       	mov	r25, r24
    1fa0:	99 0f       	add	r25, r25
    1fa2:	99 0f       	add	r25, r25
    1fa4:	89 0f       	add	r24, r25
    1fa6:	68 1b       	sub	r22, r24
    1fa8:	2d e0       	ldi	r18, 0x0D	; 13
    1faa:	46 e5       	ldi	r20, 0x56	; 86
    1fac:	8c e3       	ldi	r24, 0x3C	; 60
    1fae:	93 e0       	ldi	r25, 0x03	; 3
    1fb0:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1fb4:	c6 e5       	ldi	r28, 0x56	; 86
    1fb6:	d7 e0       	ldi	r29, 0x07	; 7
    1fb8:	68 81       	ld	r22, Y
    1fba:	61 9f       	mul	r22, r17
    1fbc:	61 2d       	mov	r22, r1
    1fbe:	11 24       	eor	r1, r1
    1fc0:	66 95       	lsr	r22
    1fc2:	66 95       	lsr	r22
    1fc4:	66 95       	lsr	r22
    1fc6:	22 e2       	ldi	r18, 0x22	; 34
    1fc8:	46 e4       	ldi	r20, 0x46	; 70
    1fca:	8c e3       	ldi	r24, 0x3C	; 60
    1fcc:	93 e0       	ldi	r25, 0x03	; 3
    1fce:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1fd2:	68 81       	ld	r22, Y
    1fd4:	61 9f       	mul	r22, r17
    1fd6:	11 2d       	mov	r17, r1
    1fd8:	11 24       	eor	r1, r1
    1fda:	16 95       	lsr	r17
    1fdc:	16 95       	lsr	r17
    1fde:	16 95       	lsr	r17
    1fe0:	11 0f       	add	r17, r17
    1fe2:	81 2f       	mov	r24, r17
    1fe4:	88 0f       	add	r24, r24
    1fe6:	88 0f       	add	r24, r24
    1fe8:	18 0f       	add	r17, r24
    1fea:	61 1b       	sub	r22, r17
    1fec:	22 e2       	ldi	r18, 0x22	; 34
    1fee:	46 e5       	ldi	r20, 0x56	; 86
    1ff0:	8c e3       	ldi	r24, 0x3C	; 60
    1ff2:	93 e0       	ldi	r25, 0x03	; 3
    1ff4:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    1ff8:	80 91 55 07 	lds	r24, 0x0755
    1ffc:	83 ff       	sbrs	r24, 3
    1ffe:	07 c0       	rjmp	.+14     	; 0x200e <_Z13Weckeranzeigev+0xfe>
    2000:	20 e0       	ldi	r18, 0x00	; 0
    2002:	40 e0       	ldi	r20, 0x00	; 0
    2004:	6f e6       	ldi	r22, 0x6F	; 111
    2006:	8c e3       	ldi	r24, 0x3C	; 60
    2008:	93 e0       	ldi	r25, 0x03	; 3
    200a:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    200e:	80 91 0f 03 	lds	r24, 0x030F
    2012:	90 91 10 03 	lds	r25, 0x0310
    2016:	94 ff       	sbrs	r25, 4
    2018:	09 c0       	rjmp	.+18     	; 0x202c <_Z13Weckeranzeigev+0x11c>
    201a:	60 91 0d 03 	lds	r22, 0x030D
    201e:	60 5d       	subi	r22, 0xD0	; 208
    2020:	20 e0       	ldi	r18, 0x00	; 0
    2022:	46 e0       	ldi	r20, 0x06	; 6
    2024:	8c e3       	ldi	r24, 0x3C	; 60
    2026:	93 e0       	ldi	r25, 0x03	; 3
    2028:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    202c:	df 91       	pop	r29
    202e:	cf 91       	pop	r28
    2030:	1f 91       	pop	r17
    2032:	08 95       	ret

00002034 <_Z12fahradschirmddddm>:
    2034:	2f 92       	push	r2
    2036:	3f 92       	push	r3
    2038:	4f 92       	push	r4
    203a:	5f 92       	push	r5
    203c:	6f 92       	push	r6
    203e:	7f 92       	push	r7
    2040:	8f 92       	push	r8
    2042:	9f 92       	push	r9
    2044:	af 92       	push	r10
    2046:	bf 92       	push	r11
    2048:	cf 92       	push	r12
    204a:	df 92       	push	r13
    204c:	ef 92       	push	r14
    204e:	ff 92       	push	r15
    2050:	0f 93       	push	r16
    2052:	1f 93       	push	r17
    2054:	cf 93       	push	r28
    2056:	df 93       	push	r29
    2058:	cd b7       	in	r28, 0x3d	; 61
    205a:	de b7       	in	r29, 0x3e	; 62
    205c:	60 97       	sbiw	r28, 0x10	; 16
    205e:	0f b6       	in	r0, 0x3f	; 63
    2060:	f8 94       	cli
    2062:	de bf       	out	0x3e, r29	; 62
    2064:	0f be       	out	0x3f, r0	; 63
    2066:	cd bf       	out	0x3d, r28	; 61
    2068:	96 2e       	mov	r9, r22
    206a:	27 2e       	mov	r2, r23
    206c:	88 2e       	mov	r8, r24
    206e:	39 2e       	mov	r3, r25
    2070:	29 01       	movw	r4, r18
    2072:	3a 01       	movw	r6, r20
    2074:	0b 87       	std	Y+11, r16	; 0x0b
    2076:	1c 87       	std	Y+12, r17	; 0x0c
    2078:	2d a1       	ldd	r18, Y+37	; 0x25
    207a:	2d 87       	std	Y+13, r18	; 0x0d
    207c:	3e a1       	ldd	r19, Y+38	; 0x26
    207e:	3e 87       	std	Y+14, r19	; 0x0e
    2080:	8f a1       	ldd	r24, Y+39	; 0x27
    2082:	8f 87       	std	Y+15, r24	; 0x0f
    2084:	98 a5       	ldd	r25, Y+40	; 0x28
    2086:	98 8b       	std	Y+16, r25	; 0x10
    2088:	8c e3       	ldi	r24, 0x3C	; 60
    208a:	93 e0       	ldi	r25, 0x03	; 3
    208c:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    2090:	81 e0       	ldi	r24, 0x01	; 1
    2092:	53 da       	rcall	.-2906   	; 0x153a <_Z6headerh>
    2094:	80 e0       	ldi	r24, 0x00	; 0
    2096:	32 db       	rcall	.-2460   	; 0x16fc <_Z6bottomh>
    2098:	20 e8       	ldi	r18, 0x80	; 128
    209a:	47 e3       	ldi	r20, 0x37	; 55
    209c:	60 e0       	ldi	r22, 0x00	; 0
    209e:	8c e3       	ldi	r24, 0x3C	; 60
    20a0:	93 e0       	ldi	r25, 0x03	; 3
    20a2:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <_ZN7Display9drawHLineEhhh>
    20a6:	25 e4       	ldi	r18, 0x45	; 69
    20a8:	4f e0       	ldi	r20, 0x0F	; 15
    20aa:	60 e0       	ldi	r22, 0x00	; 0
    20ac:	8c e3       	ldi	r24, 0x3C	; 60
    20ae:	93 e0       	ldi	r25, 0x03	; 3
    20b0:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <_ZN7Display9drawHLineEhhh>
    20b4:	2b e3       	ldi	r18, 0x3B	; 59
    20b6:	48 e0       	ldi	r20, 0x08	; 8
    20b8:	65 e4       	ldi	r22, 0x45	; 69
    20ba:	8c e3       	ldi	r24, 0x3C	; 60
    20bc:	93 e0       	ldi	r25, 0x03	; 3
    20be:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <_ZN7Display9drawHLineEhhh>
    20c2:	20 e1       	ldi	r18, 0x10	; 16
    20c4:	40 e0       	ldi	r20, 0x00	; 0
    20c6:	65 e4       	ldi	r22, 0x45	; 69
    20c8:	8c e3       	ldi	r24, 0x3C	; 60
    20ca:	93 e0       	ldi	r25, 0x03	; 3
    20cc:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <_ZN7Display9drawVLineEhhh>
    20d0:	21 e4       	ldi	r18, 0x41	; 65
    20d2:	48 e2       	ldi	r20, 0x28	; 40
    20d4:	6f e3       	ldi	r22, 0x3F	; 63
    20d6:	8c e3       	ldi	r24, 0x3C	; 60
    20d8:	93 e0       	ldi	r25, 0x03	; 3
    20da:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <_ZN7Display9drawHLineEhhh>
    20de:	20 e3       	ldi	r18, 0x30	; 48
    20e0:	40 e1       	ldi	r20, 0x10	; 16
    20e2:	6f e3       	ldi	r22, 0x3F	; 63
    20e4:	8c e3       	ldi	r24, 0x3C	; 60
    20e6:	93 e0       	ldi	r25, 0x03	; 3
    20e8:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <_ZN7Display9drawVLineEhhh>
    20ec:	21 e4       	ldi	r18, 0x41	; 65
    20ee:	48 e1       	ldi	r20, 0x18	; 24
    20f0:	6f e3       	ldi	r22, 0x3F	; 63
    20f2:	8c e3       	ldi	r24, 0x3C	; 60
    20f4:	93 e0       	ldi	r25, 0x03	; 3
    20f6:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <_ZN7Display9drawHLineEhhh>
    20fa:	60 91 3d 07 	lds	r22, 0x073D
    20fe:	60 53       	subi	r22, 0x30	; 48
    2100:	20 e0       	ldi	r18, 0x00	; 0
    2102:	40 e0       	ldi	r20, 0x00	; 0
    2104:	8c e3       	ldi	r24, 0x3C	; 60
    2106:	93 e0       	ldi	r25, 0x03	; 3
    2108:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    210c:	60 91 3e 07 	lds	r22, 0x073E
    2110:	60 53       	subi	r22, 0x30	; 48
    2112:	20 e0       	ldi	r18, 0x00	; 0
    2114:	40 e1       	ldi	r20, 0x10	; 16
    2116:	8c e3       	ldi	r24, 0x3C	; 60
    2118:	93 e0       	ldi	r25, 0x03	; 3
    211a:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    211e:	60 91 40 07 	lds	r22, 0x0740
    2122:	60 53       	subi	r22, 0x30	; 48
    2124:	20 e0       	ldi	r18, 0x00	; 0
    2126:	45 e2       	ldi	r20, 0x25	; 37
    2128:	8c e3       	ldi	r24, 0x3C	; 60
    212a:	93 e0       	ldi	r25, 0x03	; 3
    212c:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    2130:	60 91 41 07 	lds	r22, 0x0741
    2134:	60 53       	subi	r22, 0x30	; 48
    2136:	20 e0       	ldi	r18, 0x00	; 0
    2138:	45 e3       	ldi	r20, 0x35	; 53
    213a:	8c e3       	ldi	r24, 0x3C	; 60
    213c:	93 e0       	ldi	r25, 0x03	; 3
    213e:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    2142:	3f 92       	push	r3
    2144:	8f 92       	push	r8
    2146:	2f 92       	push	r2
    2148:	9f 92       	push	r9
    214a:	81 e1       	ldi	r24, 0x11	; 17
    214c:	92 e0       	ldi	r25, 0x02	; 2
    214e:	9f 93       	push	r25
    2150:	8f 93       	push	r24
    2152:	ce 01       	movw	r24, r28
    2154:	01 96       	adiw	r24, 0x01	; 1
    2156:	9f 93       	push	r25
    2158:	8f 93       	push	r24
    215a:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
    215e:	28 e0       	ldi	r18, 0x08	; 8
    2160:	02 2f       	mov	r16, r18
    2162:	08 1b       	sub	r16, r24
    2164:	0f b6       	in	r0, 0x3f	; 63
    2166:	f8 94       	cli
    2168:	de bf       	out	0x3e, r29	; 62
    216a:	0f be       	out	0x3f, r0	; 63
    216c:	cd bf       	out	0x3d, r28	; 61
    216e:	08 30       	cpi	r16, 0x08	; 8
    2170:	18 f5       	brcc	.+70     	; 0x21b8 <_Z12fahradschirmddddm+0x184>
    2172:	10 2f       	mov	r17, r16
    2174:	12 95       	swap	r17
    2176:	10 7f       	andi	r17, 0xF0	; 240
    2178:	4c 01       	movw	r8, r24
    217a:	99 24       	eor	r9, r9
    217c:	e1 e0       	ldi	r30, 0x01	; 1
    217e:	f0 e0       	ldi	r31, 0x00	; 0
    2180:	ec 0f       	add	r30, r28
    2182:	fd 1f       	adc	r31, r29
    2184:	e0 0f       	add	r30, r16
    2186:	f1 1d       	adc	r31, r1
    2188:	e8 0d       	add	r30, r8
    218a:	f9 1d       	adc	r31, r9
    218c:	38 97       	sbiw	r30, 0x08	; 8
    218e:	60 81       	ld	r22, Z
    2190:	6e 32       	cpi	r22, 0x2E	; 46
    2192:	39 f4       	brne	.+14     	; 0x21a2 <_Z12fahradschirmddddm+0x16e>
    2194:	20 e2       	ldi	r18, 0x20	; 32
    2196:	41 2f       	mov	r20, r17
    2198:	8c e3       	ldi	r24, 0x3C	; 60
    219a:	93 e0       	ldi	r25, 0x03	; 3
    219c:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    21a0:	07 c0       	rjmp	.+14     	; 0x21b0 <_Z12fahradschirmddddm+0x17c>
    21a2:	60 53       	subi	r22, 0x30	; 48
    21a4:	28 e1       	ldi	r18, 0x18	; 24
    21a6:	41 2f       	mov	r20, r17
    21a8:	8c e3       	ldi	r24, 0x3C	; 60
    21aa:	93 e0       	ldi	r25, 0x03	; 3
    21ac:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    21b0:	0f 5f       	subi	r16, 0xFF	; 255
    21b2:	10 5f       	subi	r17, 0xF0	; 240
    21b4:	08 30       	cpi	r16, 0x08	; 8
    21b6:	11 f7       	brne	.-60     	; 0x217c <_Z12fahradschirmddddm+0x148>
    21b8:	a3 01       	movw	r20, r6
    21ba:	92 01       	movw	r18, r4
    21bc:	67 e2       	ldi	r22, 0x27	; 39
    21be:	8f e1       	ldi	r24, 0x1F	; 31
    21c0:	b7 db       	rcall	.-2194   	; 0x1930 <_Z19anzeige_kleinenadelhhf>
    21c2:	fc 85       	ldd	r31, Y+12	; 0x0c
    21c4:	ff 93       	push	r31
    21c6:	2b 85       	ldd	r18, Y+11	; 0x0b
    21c8:	2f 93       	push	r18
    21ca:	ff 92       	push	r15
    21cc:	ef 92       	push	r14
    21ce:	87 e1       	ldi	r24, 0x17	; 23
    21d0:	92 e0       	ldi	r25, 0x02	; 2
    21d2:	9f 93       	push	r25
    21d4:	8f 93       	push	r24
    21d6:	ce 01       	movw	r24, r28
    21d8:	01 96       	adiw	r24, 0x01	; 1
    21da:	9f 93       	push	r25
    21dc:	8f 93       	push	r24
    21de:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
    21e2:	88 2e       	mov	r8, r24
    21e4:	0f b6       	in	r0, 0x3f	; 63
    21e6:	f8 94       	cli
    21e8:	de bf       	out	0x3e, r29	; 62
    21ea:	0f be       	out	0x3f, r0	; 63
    21ec:	cd bf       	out	0x3d, r28	; 61
    21ee:	88 20       	and	r8, r8
    21f0:	b9 f0       	breq	.+46     	; 0x2220 <_Z12fahradschirmddddm+0x1ec>
    21f2:	fe 01       	movw	r30, r28
    21f4:	31 96       	adiw	r30, 0x01	; 1
    21f6:	7f 01       	movw	r14, r30
    21f8:	8f 01       	movw	r16, r30
    21fa:	0f 2e       	mov	r0, r31
    21fc:	f6 e4       	ldi	r31, 0x46	; 70
    21fe:	9f 2e       	mov	r9, r31
    2200:	f0 2d       	mov	r31, r0
    2202:	f8 01       	movw	r30, r16
    2204:	61 91       	ld	r22, Z+
    2206:	8f 01       	movw	r16, r30
    2208:	20 e1       	ldi	r18, 0x10	; 16
    220a:	49 2d       	mov	r20, r9
    220c:	8c e3       	ldi	r24, 0x3C	; 60
    220e:	93 e0       	ldi	r25, 0x03	; 3
    2210:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2214:	f6 e0       	ldi	r31, 0x06	; 6
    2216:	9f 0e       	add	r9, r31
    2218:	90 2f       	mov	r25, r16
    221a:	9e 19       	sub	r25, r14
    221c:	98 15       	cp	r25, r8
    221e:	88 f3       	brcs	.-30     	; 0x2202 <_Z12fahradschirmddddm+0x1ce>
    2220:	df 92       	push	r13
    2222:	cf 92       	push	r12
    2224:	bf 92       	push	r11
    2226:	af 92       	push	r10
    2228:	8d e1       	ldi	r24, 0x1D	; 29
    222a:	92 e0       	ldi	r25, 0x02	; 2
    222c:	9f 93       	push	r25
    222e:	8f 93       	push	r24
    2230:	ce 01       	movw	r24, r28
    2232:	01 96       	adiw	r24, 0x01	; 1
    2234:	9f 93       	push	r25
    2236:	8f 93       	push	r24
    2238:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
    223c:	c8 2e       	mov	r12, r24
    223e:	0f b6       	in	r0, 0x3f	; 63
    2240:	f8 94       	cli
    2242:	de bf       	out	0x3e, r29	; 62
    2244:	0f be       	out	0x3f, r0	; 63
    2246:	cd bf       	out	0x3d, r28	; 61
    2248:	88 23       	and	r24, r24
    224a:	b9 f0       	breq	.+46     	; 0x227a <_Z12fahradschirmddddm+0x246>
    224c:	ce 01       	movw	r24, r28
    224e:	01 96       	adiw	r24, 0x01	; 1
    2250:	7c 01       	movw	r14, r24
    2252:	8c 01       	movw	r16, r24
    2254:	0f 2e       	mov	r0, r31
    2256:	f6 e4       	ldi	r31, 0x46	; 70
    2258:	df 2e       	mov	r13, r31
    225a:	f0 2d       	mov	r31, r0
    225c:	f8 01       	movw	r30, r16
    225e:	61 91       	ld	r22, Z+
    2260:	8f 01       	movw	r16, r30
    2262:	28 e2       	ldi	r18, 0x28	; 40
    2264:	4d 2d       	mov	r20, r13
    2266:	8c e3       	ldi	r24, 0x3C	; 60
    2268:	93 e0       	ldi	r25, 0x03	; 3
    226a:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    226e:	f6 e0       	ldi	r31, 0x06	; 6
    2270:	df 0e       	add	r13, r31
    2272:	90 2f       	mov	r25, r16
    2274:	9e 19       	sub	r25, r14
    2276:	9c 15       	cp	r25, r12
    2278:	88 f3       	brcs	.-30     	; 0x225c <_Z12fahradschirmddddm+0x228>
    227a:	28 89       	ldd	r18, Y+16	; 0x10
    227c:	2f 93       	push	r18
    227e:	3f 85       	ldd	r19, Y+15	; 0x0f
    2280:	3f 93       	push	r19
    2282:	8e 85       	ldd	r24, Y+14	; 0x0e
    2284:	8f 93       	push	r24
    2286:	9d 85       	ldd	r25, Y+13	; 0x0d
    2288:	9f 93       	push	r25
    228a:	86 e2       	ldi	r24, 0x26	; 38
    228c:	92 e0       	ldi	r25, 0x02	; 2
    228e:	9f 93       	push	r25
    2290:	8f 93       	push	r24
    2292:	ce 01       	movw	r24, r28
    2294:	01 96       	adiw	r24, 0x01	; 1
    2296:	9f 93       	push	r25
    2298:	8f 93       	push	r24
    229a:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
    229e:	c8 2e       	mov	r12, r24
    22a0:	0f b6       	in	r0, 0x3f	; 63
    22a2:	f8 94       	cli
    22a4:	de bf       	out	0x3e, r29	; 62
    22a6:	0f be       	out	0x3f, r0	; 63
    22a8:	cd bf       	out	0x3d, r28	; 61
    22aa:	88 23       	and	r24, r24
    22ac:	c1 f0       	breq	.+48     	; 0x22de <_Z12fahradschirmddddm+0x2aa>
    22ae:	9e 01       	movw	r18, r28
    22b0:	2f 5f       	subi	r18, 0xFF	; 255
    22b2:	3f 4f       	sbci	r19, 0xFF	; 255
    22b4:	79 01       	movw	r14, r18
    22b6:	89 01       	movw	r16, r18
    22b8:	0f 2e       	mov	r0, r31
    22ba:	f6 e4       	ldi	r31, 0x46	; 70
    22bc:	df 2e       	mov	r13, r31
    22be:	f0 2d       	mov	r31, r0
    22c0:	f8 01       	movw	r30, r16
    22c2:	61 91       	ld	r22, Z+
    22c4:	8f 01       	movw	r16, r30
    22c6:	20 e3       	ldi	r18, 0x30	; 48
    22c8:	4d 2d       	mov	r20, r13
    22ca:	8c e3       	ldi	r24, 0x3C	; 60
    22cc:	93 e0       	ldi	r25, 0x03	; 3
    22ce:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    22d2:	f6 e0       	ldi	r31, 0x06	; 6
    22d4:	df 0e       	add	r13, r31
    22d6:	90 2f       	mov	r25, r16
    22d8:	9e 19       	sub	r25, r14
    22da:	9c 15       	cp	r25, r12
    22dc:	88 f3       	brcs	.-30     	; 0x22c0 <_Z12fahradschirmddddm+0x28c>
    22de:	60 96       	adiw	r28, 0x10	; 16
    22e0:	0f b6       	in	r0, 0x3f	; 63
    22e2:	f8 94       	cli
    22e4:	de bf       	out	0x3e, r29	; 62
    22e6:	0f be       	out	0x3f, r0	; 63
    22e8:	cd bf       	out	0x3d, r28	; 61
    22ea:	df 91       	pop	r29
    22ec:	cf 91       	pop	r28
    22ee:	1f 91       	pop	r17
    22f0:	0f 91       	pop	r16
    22f2:	ff 90       	pop	r15
    22f4:	ef 90       	pop	r14
    22f6:	df 90       	pop	r13
    22f8:	cf 90       	pop	r12
    22fa:	bf 90       	pop	r11
    22fc:	af 90       	pop	r10
    22fe:	9f 90       	pop	r9
    2300:	8f 90       	pop	r8
    2302:	7f 90       	pop	r7
    2304:	6f 90       	pop	r6
    2306:	5f 90       	pop	r5
    2308:	4f 90       	pop	r4
    230a:	3f 90       	pop	r3
    230c:	2f 90       	pop	r2
    230e:	08 95       	ret

00002310 <_Z14Gaineinstellenv>:
    2310:	cf 92       	push	r12
    2312:	df 92       	push	r13
    2314:	ef 92       	push	r14
    2316:	ff 92       	push	r15
    2318:	0f 93       	push	r16
    231a:	1f 93       	push	r17
    231c:	cf 93       	push	r28
    231e:	df 93       	push	r29
    2320:	cd b7       	in	r28, 0x3d	; 61
    2322:	de b7       	in	r29, 0x3e	; 62
    2324:	64 97       	sbiw	r28, 0x14	; 20
    2326:	0f b6       	in	r0, 0x3f	; 63
    2328:	f8 94       	cli
    232a:	de bf       	out	0x3e, r29	; 62
    232c:	0f be       	out	0x3f, r0	; 63
    232e:	cd bf       	out	0x3d, r28	; 61
    2330:	8c e3       	ldi	r24, 0x3C	; 60
    2332:	93 e0       	ldi	r25, 0x03	; 3
    2334:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    2338:	88 e0       	ldi	r24, 0x08	; 8
    233a:	eb e2       	ldi	r30, 0x2B	; 43
    233c:	f2 e0       	ldi	r31, 0x02	; 2
    233e:	8e 01       	movw	r16, r28
    2340:	0f 5f       	subi	r16, 0xFF	; 255
    2342:	1f 4f       	sbci	r17, 0xFF	; 255
    2344:	d8 01       	movw	r26, r16
    2346:	01 90       	ld	r0, Z+
    2348:	0d 92       	st	X+, r0
    234a:	8a 95       	dec	r24
    234c:	e1 f7       	brne	.-8      	; 0x2346 <_Z14Gaineinstellenv+0x36>
    234e:	e0 2e       	mov	r14, r16
    2350:	f1 2e       	mov	r15, r17
    2352:	68 01       	movw	r12, r16
    2354:	10 e0       	ldi	r17, 0x00	; 0
    2356:	f6 01       	movw	r30, r12
    2358:	61 91       	ld	r22, Z+
    235a:	6f 01       	movw	r12, r30
    235c:	20 e0       	ldi	r18, 0x00	; 0
    235e:	41 2f       	mov	r20, r17
    2360:	8c e3       	ldi	r24, 0x3C	; 60
    2362:	93 e0       	ldi	r25, 0x03	; 3
    2364:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2368:	1a 5f       	subi	r17, 0xFA	; 250
    236a:	1a 32       	cpi	r17, 0x2A	; 42
    236c:	a1 f7       	brne	.-24     	; 0x2356 <_Z14Gaineinstellenv+0x46>
    236e:	88 e0       	ldi	r24, 0x08	; 8
    2370:	e3 e3       	ldi	r30, 0x33	; 51
    2372:	f2 e0       	ldi	r31, 0x02	; 2
    2374:	de 01       	movw	r26, r28
    2376:	11 96       	adiw	r26, 0x01	; 1
    2378:	01 90       	ld	r0, Z+
    237a:	0d 92       	st	X+, r0
    237c:	8a 95       	dec	r24
    237e:	e1 f7       	brne	.-8      	; 0x2378 <_Z14Gaineinstellenv+0x68>
    2380:	ce 2c       	mov	r12, r14
    2382:	df 2c       	mov	r13, r15
    2384:	10 e0       	ldi	r17, 0x00	; 0
    2386:	f6 01       	movw	r30, r12
    2388:	61 91       	ld	r22, Z+
    238a:	6f 01       	movw	r12, r30
    238c:	28 e0       	ldi	r18, 0x08	; 8
    238e:	41 2f       	mov	r20, r17
    2390:	8c e3       	ldi	r24, 0x3C	; 60
    2392:	93 e0       	ldi	r25, 0x03	; 3
    2394:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2398:	1a 5f       	subi	r17, 0xFA	; 250
    239a:	1a 32       	cpi	r17, 0x2A	; 42
    239c:	a1 f7       	brne	.-24     	; 0x2386 <_Z14Gaineinstellenv+0x76>
    239e:	88 e0       	ldi	r24, 0x08	; 8
    23a0:	eb e3       	ldi	r30, 0x3B	; 59
    23a2:	f2 e0       	ldi	r31, 0x02	; 2
    23a4:	de 01       	movw	r26, r28
    23a6:	11 96       	adiw	r26, 0x01	; 1
    23a8:	01 90       	ld	r0, Z+
    23aa:	0d 92       	st	X+, r0
    23ac:	8a 95       	dec	r24
    23ae:	e1 f7       	brne	.-8      	; 0x23a8 <_Z14Gaineinstellenv+0x98>
    23b0:	ce 2c       	mov	r12, r14
    23b2:	df 2c       	mov	r13, r15
    23b4:	10 e0       	ldi	r17, 0x00	; 0
    23b6:	f6 01       	movw	r30, r12
    23b8:	61 91       	ld	r22, Z+
    23ba:	6f 01       	movw	r12, r30
    23bc:	20 e1       	ldi	r18, 0x10	; 16
    23be:	41 2f       	mov	r20, r17
    23c0:	8c e3       	ldi	r24, 0x3C	; 60
    23c2:	93 e0       	ldi	r25, 0x03	; 3
    23c4:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    23c8:	1a 5f       	subi	r17, 0xFA	; 250
    23ca:	1a 32       	cpi	r17, 0x2A	; 42
    23cc:	a1 f7       	brne	.-24     	; 0x23b6 <_Z14Gaineinstellenv+0xa6>
    23ce:	88 e0       	ldi	r24, 0x08	; 8
    23d0:	e3 e4       	ldi	r30, 0x43	; 67
    23d2:	f2 e0       	ldi	r31, 0x02	; 2
    23d4:	de 01       	movw	r26, r28
    23d6:	11 96       	adiw	r26, 0x01	; 1
    23d8:	01 90       	ld	r0, Z+
    23da:	0d 92       	st	X+, r0
    23dc:	8a 95       	dec	r24
    23de:	e1 f7       	brne	.-8      	; 0x23d8 <_Z14Gaineinstellenv+0xc8>
    23e0:	ce 2c       	mov	r12, r14
    23e2:	df 2c       	mov	r13, r15
    23e4:	10 e0       	ldi	r17, 0x00	; 0
    23e6:	f6 01       	movw	r30, r12
    23e8:	61 91       	ld	r22, Z+
    23ea:	6f 01       	movw	r12, r30
    23ec:	28 e1       	ldi	r18, 0x18	; 24
    23ee:	41 2f       	mov	r20, r17
    23f0:	8c e3       	ldi	r24, 0x3C	; 60
    23f2:	93 e0       	ldi	r25, 0x03	; 3
    23f4:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    23f8:	1a 5f       	subi	r17, 0xFA	; 250
    23fa:	1a 32       	cpi	r17, 0x2A	; 42
    23fc:	a1 f7       	brne	.-24     	; 0x23e6 <_Z14Gaineinstellenv+0xd6>
    23fe:	88 e0       	ldi	r24, 0x08	; 8
    2400:	eb e4       	ldi	r30, 0x4B	; 75
    2402:	f2 e0       	ldi	r31, 0x02	; 2
    2404:	de 01       	movw	r26, r28
    2406:	11 96       	adiw	r26, 0x01	; 1
    2408:	01 90       	ld	r0, Z+
    240a:	0d 92       	st	X+, r0
    240c:	8a 95       	dec	r24
    240e:	e1 f7       	brne	.-8      	; 0x2408 <_Z14Gaineinstellenv+0xf8>
    2410:	ce 2c       	mov	r12, r14
    2412:	df 2c       	mov	r13, r15
    2414:	10 e0       	ldi	r17, 0x00	; 0
    2416:	f6 01       	movw	r30, r12
    2418:	61 91       	ld	r22, Z+
    241a:	6f 01       	movw	r12, r30
    241c:	20 e2       	ldi	r18, 0x20	; 32
    241e:	41 2f       	mov	r20, r17
    2420:	8c e3       	ldi	r24, 0x3C	; 60
    2422:	93 e0       	ldi	r25, 0x03	; 3
    2424:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2428:	1a 5f       	subi	r17, 0xFA	; 250
    242a:	1a 32       	cpi	r17, 0x2A	; 42
    242c:	a1 f7       	brne	.-24     	; 0x2416 <_Z14Gaineinstellenv+0x106>
    242e:	88 e0       	ldi	r24, 0x08	; 8
    2430:	e3 e5       	ldi	r30, 0x53	; 83
    2432:	f2 e0       	ldi	r31, 0x02	; 2
    2434:	de 01       	movw	r26, r28
    2436:	11 96       	adiw	r26, 0x01	; 1
    2438:	01 90       	ld	r0, Z+
    243a:	0d 92       	st	X+, r0
    243c:	8a 95       	dec	r24
    243e:	e1 f7       	brne	.-8      	; 0x2438 <_Z14Gaineinstellenv+0x128>
    2440:	ce 2c       	mov	r12, r14
    2442:	df 2c       	mov	r13, r15
    2444:	10 e0       	ldi	r17, 0x00	; 0
    2446:	f6 01       	movw	r30, r12
    2448:	61 91       	ld	r22, Z+
    244a:	6f 01       	movw	r12, r30
    244c:	28 e2       	ldi	r18, 0x28	; 40
    244e:	41 2f       	mov	r20, r17
    2450:	8c e3       	ldi	r24, 0x3C	; 60
    2452:	93 e0       	ldi	r25, 0x03	; 3
    2454:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2458:	1a 5f       	subi	r17, 0xFA	; 250
    245a:	1a 32       	cpi	r17, 0x2A	; 42
    245c:	a1 f7       	brne	.-24     	; 0x2446 <_Z14Gaineinstellenv+0x136>
    245e:	88 e0       	ldi	r24, 0x08	; 8
    2460:	eb e5       	ldi	r30, 0x5B	; 91
    2462:	f2 e0       	ldi	r31, 0x02	; 2
    2464:	de 01       	movw	r26, r28
    2466:	11 96       	adiw	r26, 0x01	; 1
    2468:	01 90       	ld	r0, Z+
    246a:	0d 92       	st	X+, r0
    246c:	8a 95       	dec	r24
    246e:	e1 f7       	brne	.-8      	; 0x2468 <_Z14Gaineinstellenv+0x158>
    2470:	ce 2c       	mov	r12, r14
    2472:	df 2c       	mov	r13, r15
    2474:	10 e0       	ldi	r17, 0x00	; 0
    2476:	f6 01       	movw	r30, r12
    2478:	61 91       	ld	r22, Z+
    247a:	6f 01       	movw	r12, r30
    247c:	20 e3       	ldi	r18, 0x30	; 48
    247e:	41 2f       	mov	r20, r17
    2480:	8c e3       	ldi	r24, 0x3C	; 60
    2482:	93 e0       	ldi	r25, 0x03	; 3
    2484:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2488:	1a 5f       	subi	r17, 0xFA	; 250
    248a:	1a 32       	cpi	r17, 0x2A	; 42
    248c:	a1 f7       	brne	.-24     	; 0x2476 <_Z14Gaineinstellenv+0x166>
    248e:	88 e0       	ldi	r24, 0x08	; 8
    2490:	e3 e6       	ldi	r30, 0x63	; 99
    2492:	f2 e0       	ldi	r31, 0x02	; 2
    2494:	de 01       	movw	r26, r28
    2496:	11 96       	adiw	r26, 0x01	; 1
    2498:	01 90       	ld	r0, Z+
    249a:	0d 92       	st	X+, r0
    249c:	8a 95       	dec	r24
    249e:	e1 f7       	brne	.-8      	; 0x2498 <_Z14Gaineinstellenv+0x188>
    24a0:	ce 2c       	mov	r12, r14
    24a2:	df 2c       	mov	r13, r15
    24a4:	10 e0       	ldi	r17, 0x00	; 0
    24a6:	f6 01       	movw	r30, r12
    24a8:	61 91       	ld	r22, Z+
    24aa:	6f 01       	movw	r12, r30
    24ac:	28 e3       	ldi	r18, 0x38	; 56
    24ae:	41 2f       	mov	r20, r17
    24b0:	8c e3       	ldi	r24, 0x3C	; 60
    24b2:	93 e0       	ldi	r25, 0x03	; 3
    24b4:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    24b8:	1a 5f       	subi	r17, 0xFA	; 250
    24ba:	1a 32       	cpi	r17, 0x2A	; 42
    24bc:	a1 f7       	brne	.-24     	; 0x24a6 <_Z14Gaineinstellenv+0x196>
    24be:	64 96       	adiw	r28, 0x14	; 20
    24c0:	0f b6       	in	r0, 0x3f	; 63
    24c2:	f8 94       	cli
    24c4:	de bf       	out	0x3e, r29	; 62
    24c6:	0f be       	out	0x3f, r0	; 63
    24c8:	cd bf       	out	0x3d, r28	; 61
    24ca:	df 91       	pop	r29
    24cc:	cf 91       	pop	r28
    24ce:	1f 91       	pop	r17
    24d0:	0f 91       	pop	r16
    24d2:	ff 90       	pop	r15
    24d4:	ef 90       	pop	r14
    24d6:	df 90       	pop	r13
    24d8:	cf 90       	pop	r12
    24da:	08 95       	ret

000024dc <_Z15anzeige_kompassd>:
    24dc:	9f 92       	push	r9
    24de:	af 92       	push	r10
    24e0:	bf 92       	push	r11
    24e2:	cf 92       	push	r12
    24e4:	df 92       	push	r13
    24e6:	ef 92       	push	r14
    24e8:	ff 92       	push	r15
    24ea:	0f 93       	push	r16
    24ec:	1f 93       	push	r17
    24ee:	cf 93       	push	r28
    24f0:	df 93       	push	r29
    24f2:	cd b7       	in	r28, 0x3d	; 61
    24f4:	de b7       	in	r29, 0x3e	; 62
    24f6:	64 97       	sbiw	r28, 0x14	; 20
    24f8:	0f b6       	in	r0, 0x3f	; 63
    24fa:	f8 94       	cli
    24fc:	de bf       	out	0x3e, r29	; 62
    24fe:	0f be       	out	0x3f, r0	; 63
    2500:	cd bf       	out	0x3d, r28	; 61
    2502:	a6 2e       	mov	r10, r22
    2504:	b7 2e       	mov	r11, r23
    2506:	c8 2e       	mov	r12, r24
    2508:	d9 2e       	mov	r13, r25
    250a:	8c e3       	ldi	r24, 0x3C	; 60
    250c:	93 e0       	ldi	r25, 0x03	; 3
    250e:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    2512:	0f 2e       	mov	r0, r31
    2514:	fd e3       	ldi	r31, 0x3D	; 61
    2516:	ef 2e       	mov	r14, r31
    2518:	f7 e0       	ldi	r31, 0x07	; 7
    251a:	ff 2e       	mov	r15, r31
    251c:	f0 2d       	mov	r31, r0
    251e:	11 e4       	ldi	r17, 0x41	; 65
    2520:	f7 01       	movw	r30, r14
    2522:	61 91       	ld	r22, Z+
    2524:	7f 01       	movw	r14, r30
    2526:	20 e0       	ldi	r18, 0x00	; 0
    2528:	41 2f       	mov	r20, r17
    252a:	8c e3       	ldi	r24, 0x3C	; 60
    252c:	93 e0       	ldi	r25, 0x03	; 3
    252e:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2532:	1a 5f       	subi	r17, 0xFA	; 250
    2534:	11 37       	cpi	r17, 0x71	; 113
    2536:	a1 f7       	brne	.-24     	; 0x2520 <_Z15anzeige_kompassd+0x44>
    2538:	0f 2e       	mov	r0, r31
    253a:	f5 e4       	ldi	r31, 0x45	; 69
    253c:	ef 2e       	mov	r14, r31
    253e:	f7 e0       	ldi	r31, 0x07	; 7
    2540:	ff 2e       	mov	r15, r31
    2542:	f0 2d       	mov	r31, r0
    2544:	11 e4       	ldi	r17, 0x41	; 65
    2546:	f7 01       	movw	r30, r14
    2548:	61 91       	ld	r22, Z+
    254a:	7f 01       	movw	r14, r30
    254c:	28 e3       	ldi	r18, 0x38	; 56
    254e:	41 2f       	mov	r20, r17
    2550:	8c e3       	ldi	r24, 0x3C	; 60
    2552:	93 e0       	ldi	r25, 0x03	; 3
    2554:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2558:	1a 5f       	subi	r17, 0xFA	; 250
    255a:	11 37       	cpi	r17, 0x71	; 113
    255c:	a1 f7       	brne	.-24     	; 0x2546 <_Z15anzeige_kompassd+0x6a>
    255e:	df 92       	push	r13
    2560:	cf 92       	push	r12
    2562:	bf 92       	push	r11
    2564:	af 92       	push	r10
    2566:	8b e6       	ldi	r24, 0x6B	; 107
    2568:	92 e0       	ldi	r25, 0x02	; 2
    256a:	9f 93       	push	r25
    256c:	8f 93       	push	r24
    256e:	ce 01       	movw	r24, r28
    2570:	01 96       	adiw	r24, 0x01	; 1
    2572:	9f 93       	push	r25
    2574:	8f 93       	push	r24
    2576:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
    257a:	0f b6       	in	r0, 0x3f	; 63
    257c:	f8 94       	cli
    257e:	de bf       	out	0x3e, r29	; 62
    2580:	0f be       	out	0x3f, r0	; 63
    2582:	cd bf       	out	0x3d, r28	; 61
    2584:	88 23       	and	r24, r24
    2586:	f1 f0       	breq	.+60     	; 0x25c4 <_Z15anzeige_kompassd+0xe8>
    2588:	8e 01       	movw	r16, r28
    258a:	0f 5f       	subi	r16, 0xFF	; 255
    258c:	1f 4f       	sbci	r17, 0xFF	; 255
    258e:	81 50       	subi	r24, 0x01	; 1
    2590:	68 94       	set
    2592:	ee 24       	eor	r14, r14
    2594:	e1 f8       	bld	r14, 1
    2596:	f1 2c       	mov	r15, r1
    2598:	ec 0e       	add	r14, r28
    259a:	fd 1e       	adc	r15, r29
    259c:	e8 0e       	add	r14, r24
    259e:	f1 1c       	adc	r15, r1
    25a0:	0f 2e       	mov	r0, r31
    25a2:	f1 e4       	ldi	r31, 0x41	; 65
    25a4:	9f 2e       	mov	r9, r31
    25a6:	f0 2d       	mov	r31, r0
    25a8:	f8 01       	movw	r30, r16
    25aa:	61 91       	ld	r22, Z+
    25ac:	8f 01       	movw	r16, r30
    25ae:	20 e3       	ldi	r18, 0x30	; 48
    25b0:	49 2d       	mov	r20, r9
    25b2:	8c e3       	ldi	r24, 0x3C	; 60
    25b4:	93 e0       	ldi	r25, 0x03	; 3
    25b6:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    25ba:	f6 e0       	ldi	r31, 0x06	; 6
    25bc:	9f 0e       	add	r9, r31
    25be:	0e 15       	cp	r16, r14
    25c0:	1f 05       	cpc	r17, r15
    25c2:	91 f7       	brne	.-28     	; 0x25a8 <_Z15anzeige_kompassd+0xcc>
    25c4:	2a 2d       	mov	r18, r10
    25c6:	3b 2d       	mov	r19, r11
    25c8:	4c 2d       	mov	r20, r12
    25ca:	5d 2d       	mov	r21, r13
    25cc:	6f e1       	ldi	r22, 0x1F	; 31
    25ce:	8f e1       	ldi	r24, 0x1F	; 31
    25d0:	92 d9       	rcall	.-3292   	; 0x18f6 <_Z13anzeige_nadelhhf>
    25d2:	23 e0       	ldi	r18, 0x03	; 3
    25d4:	40 e5       	ldi	r20, 0x50	; 80
    25d6:	6a 2d       	mov	r22, r10
    25d8:	7b 2d       	mov	r23, r11
    25da:	8c 2d       	mov	r24, r12
    25dc:	9d 2d       	mov	r25, r13
    25de:	b3 d8       	rcall	.-3738   	; 0x1746 <_Z16anzeige_richtungfhh>
    25e0:	64 96       	adiw	r28, 0x14	; 20
    25e2:	0f b6       	in	r0, 0x3f	; 63
    25e4:	f8 94       	cli
    25e6:	de bf       	out	0x3e, r29	; 62
    25e8:	0f be       	out	0x3f, r0	; 63
    25ea:	cd bf       	out	0x3d, r28	; 61
    25ec:	df 91       	pop	r29
    25ee:	cf 91       	pop	r28
    25f0:	1f 91       	pop	r17
    25f2:	0f 91       	pop	r16
    25f4:	ff 90       	pop	r15
    25f6:	ef 90       	pop	r14
    25f8:	df 90       	pop	r13
    25fa:	cf 90       	pop	r12
    25fc:	bf 90       	pop	r11
    25fe:	af 90       	pop	r10
    2600:	9f 90       	pop	r9
    2602:	08 95       	ret

00002604 <_Z10timerseitev>:
    2604:	cf 92       	push	r12
    2606:	df 92       	push	r13
    2608:	ef 92       	push	r14
    260a:	ff 92       	push	r15
    260c:	0f 93       	push	r16
    260e:	1f 93       	push	r17
    2610:	cf 93       	push	r28
    2612:	df 93       	push	r29
    2614:	cd b7       	in	r28, 0x3d	; 61
    2616:	de b7       	in	r29, 0x3e	; 62
    2618:	64 97       	sbiw	r28, 0x14	; 20
    261a:	0f b6       	in	r0, 0x3f	; 63
    261c:	f8 94       	cli
    261e:	de bf       	out	0x3e, r29	; 62
    2620:	0f be       	out	0x3f, r0	; 63
    2622:	cd bf       	out	0x3d, r28	; 61
    2624:	8c e3       	ldi	r24, 0x3C	; 60
    2626:	93 e0       	ldi	r25, 0x03	; 3
    2628:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    262c:	88 e0       	ldi	r24, 0x08	; 8
    262e:	e6 e7       	ldi	r30, 0x76	; 118
    2630:	f2 e0       	ldi	r31, 0x02	; 2
    2632:	8e 01       	movw	r16, r28
    2634:	0f 5f       	subi	r16, 0xFF	; 255
    2636:	1f 4f       	sbci	r17, 0xFF	; 255
    2638:	d8 01       	movw	r26, r16
    263a:	01 90       	ld	r0, Z+
    263c:	0d 92       	st	X+, r0
    263e:	8a 95       	dec	r24
    2640:	e1 f7       	brne	.-8      	; 0x263a <_Z10timerseitev+0x36>
    2642:	c0 2e       	mov	r12, r16
    2644:	d1 2e       	mov	r13, r17
    2646:	78 01       	movw	r14, r16
    2648:	10 e0       	ldi	r17, 0x00	; 0
    264a:	f7 01       	movw	r30, r14
    264c:	61 91       	ld	r22, Z+
    264e:	7f 01       	movw	r14, r30
    2650:	20 e0       	ldi	r18, 0x00	; 0
    2652:	41 2f       	mov	r20, r17
    2654:	8c e3       	ldi	r24, 0x3C	; 60
    2656:	93 e0       	ldi	r25, 0x03	; 3
    2658:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    265c:	1a 5f       	subi	r17, 0xFA	; 250
    265e:	1a 32       	cpi	r17, 0x2A	; 42
    2660:	a1 f7       	brne	.-24     	; 0x264a <_Z10timerseitev+0x46>
    2662:	60 91 0d 03 	lds	r22, 0x030D
    2666:	66 23       	and	r22, r22
    2668:	39 f0       	breq	.+14     	; 0x2678 <_Z10timerseitev+0x74>
    266a:	60 5d       	subi	r22, 0xD0	; 208
    266c:	20 e0       	ldi	r18, 0x00	; 0
    266e:	4a e2       	ldi	r20, 0x2A	; 42
    2670:	8c e3       	ldi	r24, 0x3C	; 60
    2672:	93 e0       	ldi	r25, 0x03	; 3
    2674:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2678:	e0 91 58 07 	lds	r30, 0x0758
    267c:	f0 91 59 07 	lds	r31, 0x0759
    2680:	0f 2e       	mov	r0, r31
    2682:	f0 e1       	ldi	r31, 0x10	; 16
    2684:	ef 2e       	mov	r14, r31
    2686:	fe e0       	ldi	r31, 0x0E	; 14
    2688:	ff 2e       	mov	r15, r31
    268a:	f0 2d       	mov	r31, r0
    268c:	cf 01       	movw	r24, r30
    268e:	b7 01       	movw	r22, r14
    2690:	0e 94 5a 31 	call	0x62b4	; 0x62b4 <__udivmodhi4>
    2694:	ab 01       	movw	r20, r22
    2696:	9c 01       	movw	r18, r24
    2698:	a9 e8       	ldi	r26, 0x89	; 137
    269a:	b8 e8       	ldi	r27, 0x88	; 136
    269c:	0e 94 87 31 	call	0x630e	; 0x630e <__umulhisi3>
    26a0:	8c 01       	movw	r16, r24
    26a2:	16 95       	lsr	r17
    26a4:	07 95       	ror	r16
    26a6:	12 95       	swap	r17
    26a8:	02 95       	swap	r16
    26aa:	0f 70       	andi	r16, 0x0F	; 15
    26ac:	01 27       	eor	r16, r17
    26ae:	1f 70       	andi	r17, 0x0F	; 15
    26b0:	01 27       	eor	r16, r17
    26b2:	9f 01       	movw	r18, r30
    26b4:	0e 94 87 31 	call	0x630e	; 0x630e <__umulhisi3>
    26b8:	96 95       	lsr	r25
    26ba:	87 95       	ror	r24
    26bc:	92 95       	swap	r25
    26be:	82 95       	swap	r24
    26c0:	8f 70       	andi	r24, 0x0F	; 15
    26c2:	89 27       	eor	r24, r25
    26c4:	9f 70       	andi	r25, 0x0F	; 15
    26c6:	89 27       	eor	r24, r25
    26c8:	6c e3       	ldi	r22, 0x3C	; 60
    26ca:	68 9f       	mul	r22, r24
    26cc:	90 01       	movw	r18, r0
    26ce:	69 9f       	mul	r22, r25
    26d0:	30 0d       	add	r19, r0
    26d2:	11 24       	eor	r1, r1
    26d4:	e2 1b       	sub	r30, r18
    26d6:	f3 0b       	sbc	r31, r19
    26d8:	ca 01       	movw	r24, r20
    26da:	99 27       	eor	r25, r25
    26dc:	91 95       	neg	r25
    26de:	81 95       	neg	r24
    26e0:	91 09       	sbc	r25, r1
    26e2:	b7 01       	movw	r22, r14
    26e4:	0e 94 6e 31 	call	0x62dc	; 0x62dc <__divmodhi4>
    26e8:	cb 01       	movw	r24, r22
    26ea:	6a e0       	ldi	r22, 0x0A	; 10
    26ec:	70 e0       	ldi	r23, 0x00	; 0
    26ee:	0e 94 6e 31 	call	0x62dc	; 0x62dc <__divmodhi4>
    26f2:	69 83       	std	Y+1, r22	; 0x01
    26f4:	8d ec       	ldi	r24, 0xCD	; 205
    26f6:	48 9f       	mul	r20, r24
    26f8:	91 2d       	mov	r25, r1
    26fa:	11 24       	eor	r1, r1
    26fc:	96 95       	lsr	r25
    26fe:	96 95       	lsr	r25
    2700:	96 95       	lsr	r25
    2702:	99 0f       	add	r25, r25
    2704:	29 2f       	mov	r18, r25
    2706:	22 0f       	add	r18, r18
    2708:	22 0f       	add	r18, r18
    270a:	92 0f       	add	r25, r18
    270c:	49 1b       	sub	r20, r25
    270e:	4a 83       	std	Y+2, r20	; 0x02
    2710:	9a e3       	ldi	r25, 0x3A	; 58
    2712:	9b 83       	std	Y+3, r25	; 0x03
    2714:	08 9f       	mul	r16, r24
    2716:	21 2d       	mov	r18, r1
    2718:	11 24       	eor	r1, r1
    271a:	26 95       	lsr	r18
    271c:	26 95       	lsr	r18
    271e:	26 95       	lsr	r18
    2720:	2c 83       	std	Y+4, r18	; 0x04
    2722:	22 0f       	add	r18, r18
    2724:	32 2f       	mov	r19, r18
    2726:	33 0f       	add	r19, r19
    2728:	33 0f       	add	r19, r19
    272a:	23 0f       	add	r18, r19
    272c:	02 1b       	sub	r16, r18
    272e:	0d 83       	std	Y+5, r16	; 0x05
    2730:	9e 83       	std	Y+6, r25	; 0x06
    2732:	e8 9f       	mul	r30, r24
    2734:	81 2d       	mov	r24, r1
    2736:	11 24       	eor	r1, r1
    2738:	86 95       	lsr	r24
    273a:	86 95       	lsr	r24
    273c:	86 95       	lsr	r24
    273e:	8f 83       	std	Y+7, r24	; 0x07
    2740:	88 0f       	add	r24, r24
    2742:	98 2f       	mov	r25, r24
    2744:	99 0f       	add	r25, r25
    2746:	99 0f       	add	r25, r25
    2748:	89 0f       	add	r24, r25
    274a:	e8 1b       	sub	r30, r24
    274c:	e8 87       	std	Y+8, r30	; 0x08
    274e:	ec 2c       	mov	r14, r12
    2750:	fd 2c       	mov	r15, r13
    2752:	10 e0       	ldi	r17, 0x00	; 0
    2754:	f7 01       	movw	r30, r14
    2756:	61 91       	ld	r22, Z+
    2758:	7f 01       	movw	r14, r30
    275a:	6a 33       	cpi	r22, 0x3A	; 58
    275c:	39 f4       	brne	.+14     	; 0x276c <_Z10timerseitev+0x168>
    275e:	24 e1       	ldi	r18, 0x14	; 20
    2760:	41 2f       	mov	r20, r17
    2762:	8c e3       	ldi	r24, 0x3C	; 60
    2764:	93 e0       	ldi	r25, 0x03	; 3
    2766:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    276a:	06 c0       	rjmp	.+12     	; 0x2778 <_Z10timerseitev+0x174>
    276c:	20 e1       	ldi	r18, 0x10	; 16
    276e:	41 2f       	mov	r20, r17
    2770:	8c e3       	ldi	r24, 0x3C	; 60
    2772:	93 e0       	ldi	r25, 0x03	; 3
    2774:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    2778:	10 5f       	subi	r17, 0xF0	; 240
    277a:	10 38       	cpi	r17, 0x80	; 128
    277c:	59 f7       	brne	.-42     	; 0x2754 <_Z10timerseitev+0x150>
    277e:	64 96       	adiw	r28, 0x14	; 20
    2780:	0f b6       	in	r0, 0x3f	; 63
    2782:	f8 94       	cli
    2784:	de bf       	out	0x3e, r29	; 62
    2786:	0f be       	out	0x3f, r0	; 63
    2788:	cd bf       	out	0x3d, r28	; 61
    278a:	df 91       	pop	r29
    278c:	cf 91       	pop	r28
    278e:	1f 91       	pop	r17
    2790:	0f 91       	pop	r16
    2792:	ff 90       	pop	r15
    2794:	ef 90       	pop	r14
    2796:	df 90       	pop	r13
    2798:	cf 90       	pop	r12
    279a:	08 95       	ret

0000279c <_Z13Stoppuhrseitev>:
    279c:	cf 92       	push	r12
    279e:	df 92       	push	r13
    27a0:	ef 92       	push	r14
    27a2:	ff 92       	push	r15
    27a4:	0f 93       	push	r16
    27a6:	1f 93       	push	r17
    27a8:	cf 93       	push	r28
    27aa:	df 93       	push	r29
    27ac:	cd b7       	in	r28, 0x3d	; 61
    27ae:	de b7       	in	r29, 0x3e	; 62
    27b0:	64 97       	sbiw	r28, 0x14	; 20
    27b2:	0f b6       	in	r0, 0x3f	; 63
    27b4:	f8 94       	cli
    27b6:	de bf       	out	0x3e, r29	; 62
    27b8:	0f be       	out	0x3f, r0	; 63
    27ba:	cd bf       	out	0x3d, r28	; 61
    27bc:	8c e3       	ldi	r24, 0x3C	; 60
    27be:	93 e0       	ldi	r25, 0x03	; 3
    27c0:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    27c4:	8b e0       	ldi	r24, 0x0B	; 11
    27c6:	ee e7       	ldi	r30, 0x7E	; 126
    27c8:	f2 e0       	ldi	r31, 0x02	; 2
    27ca:	8e 01       	movw	r16, r28
    27cc:	0f 5f       	subi	r16, 0xFF	; 255
    27ce:	1f 4f       	sbci	r17, 0xFF	; 255
    27d0:	d8 01       	movw	r26, r16
    27d2:	01 90       	ld	r0, Z+
    27d4:	0d 92       	st	X+, r0
    27d6:	8a 95       	dec	r24
    27d8:	e1 f7       	brne	.-8      	; 0x27d2 <_Z13Stoppuhrseitev+0x36>
    27da:	c0 2e       	mov	r12, r16
    27dc:	d1 2e       	mov	r13, r17
    27de:	78 01       	movw	r14, r16
    27e0:	10 e0       	ldi	r17, 0x00	; 0
    27e2:	f7 01       	movw	r30, r14
    27e4:	61 91       	ld	r22, Z+
    27e6:	7f 01       	movw	r14, r30
    27e8:	20 e0       	ldi	r18, 0x00	; 0
    27ea:	41 2f       	mov	r20, r17
    27ec:	8c e3       	ldi	r24, 0x3C	; 60
    27ee:	93 e0       	ldi	r25, 0x03	; 3
    27f0:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    27f4:	1a 5f       	subi	r17, 0xFA	; 250
    27f6:	1c 33       	cpi	r17, 0x3C	; 60
    27f8:	a1 f7       	brne	.-24     	; 0x27e2 <_Z13Stoppuhrseitev+0x46>
    27fa:	e0 91 5a 07 	lds	r30, 0x075A
    27fe:	f0 91 5b 07 	lds	r31, 0x075B
    2802:	0f 2e       	mov	r0, r31
    2804:	f0 e1       	ldi	r31, 0x10	; 16
    2806:	ef 2e       	mov	r14, r31
    2808:	fe e0       	ldi	r31, 0x0E	; 14
    280a:	ff 2e       	mov	r15, r31
    280c:	f0 2d       	mov	r31, r0
    280e:	cf 01       	movw	r24, r30
    2810:	b7 01       	movw	r22, r14
    2812:	0e 94 5a 31 	call	0x62b4	; 0x62b4 <__udivmodhi4>
    2816:	ab 01       	movw	r20, r22
    2818:	9c 01       	movw	r18, r24
    281a:	a9 e8       	ldi	r26, 0x89	; 137
    281c:	b8 e8       	ldi	r27, 0x88	; 136
    281e:	0e 94 87 31 	call	0x630e	; 0x630e <__umulhisi3>
    2822:	8c 01       	movw	r16, r24
    2824:	16 95       	lsr	r17
    2826:	07 95       	ror	r16
    2828:	12 95       	swap	r17
    282a:	02 95       	swap	r16
    282c:	0f 70       	andi	r16, 0x0F	; 15
    282e:	01 27       	eor	r16, r17
    2830:	1f 70       	andi	r17, 0x0F	; 15
    2832:	01 27       	eor	r16, r17
    2834:	9f 01       	movw	r18, r30
    2836:	0e 94 87 31 	call	0x630e	; 0x630e <__umulhisi3>
    283a:	96 95       	lsr	r25
    283c:	87 95       	ror	r24
    283e:	92 95       	swap	r25
    2840:	82 95       	swap	r24
    2842:	8f 70       	andi	r24, 0x0F	; 15
    2844:	89 27       	eor	r24, r25
    2846:	9f 70       	andi	r25, 0x0F	; 15
    2848:	89 27       	eor	r24, r25
    284a:	6c e3       	ldi	r22, 0x3C	; 60
    284c:	68 9f       	mul	r22, r24
    284e:	90 01       	movw	r18, r0
    2850:	69 9f       	mul	r22, r25
    2852:	30 0d       	add	r19, r0
    2854:	11 24       	eor	r1, r1
    2856:	e2 1b       	sub	r30, r18
    2858:	f3 0b       	sbc	r31, r19
    285a:	ca 01       	movw	r24, r20
    285c:	99 27       	eor	r25, r25
    285e:	91 95       	neg	r25
    2860:	81 95       	neg	r24
    2862:	91 09       	sbc	r25, r1
    2864:	b7 01       	movw	r22, r14
    2866:	0e 94 6e 31 	call	0x62dc	; 0x62dc <__divmodhi4>
    286a:	cb 01       	movw	r24, r22
    286c:	6a e0       	ldi	r22, 0x0A	; 10
    286e:	70 e0       	ldi	r23, 0x00	; 0
    2870:	0e 94 6e 31 	call	0x62dc	; 0x62dc <__divmodhi4>
    2874:	69 83       	std	Y+1, r22	; 0x01
    2876:	8d ec       	ldi	r24, 0xCD	; 205
    2878:	48 9f       	mul	r20, r24
    287a:	91 2d       	mov	r25, r1
    287c:	11 24       	eor	r1, r1
    287e:	96 95       	lsr	r25
    2880:	96 95       	lsr	r25
    2882:	96 95       	lsr	r25
    2884:	99 0f       	add	r25, r25
    2886:	29 2f       	mov	r18, r25
    2888:	22 0f       	add	r18, r18
    288a:	22 0f       	add	r18, r18
    288c:	92 0f       	add	r25, r18
    288e:	49 1b       	sub	r20, r25
    2890:	4a 83       	std	Y+2, r20	; 0x02
    2892:	9a e3       	ldi	r25, 0x3A	; 58
    2894:	9b 83       	std	Y+3, r25	; 0x03
    2896:	08 9f       	mul	r16, r24
    2898:	21 2d       	mov	r18, r1
    289a:	11 24       	eor	r1, r1
    289c:	26 95       	lsr	r18
    289e:	26 95       	lsr	r18
    28a0:	26 95       	lsr	r18
    28a2:	2c 83       	std	Y+4, r18	; 0x04
    28a4:	22 0f       	add	r18, r18
    28a6:	32 2f       	mov	r19, r18
    28a8:	33 0f       	add	r19, r19
    28aa:	33 0f       	add	r19, r19
    28ac:	23 0f       	add	r18, r19
    28ae:	02 1b       	sub	r16, r18
    28b0:	0d 83       	std	Y+5, r16	; 0x05
    28b2:	9e 83       	std	Y+6, r25	; 0x06
    28b4:	e8 9f       	mul	r30, r24
    28b6:	81 2d       	mov	r24, r1
    28b8:	11 24       	eor	r1, r1
    28ba:	86 95       	lsr	r24
    28bc:	86 95       	lsr	r24
    28be:	86 95       	lsr	r24
    28c0:	8f 83       	std	Y+7, r24	; 0x07
    28c2:	88 0f       	add	r24, r24
    28c4:	98 2f       	mov	r25, r24
    28c6:	99 0f       	add	r25, r25
    28c8:	99 0f       	add	r25, r25
    28ca:	89 0f       	add	r24, r25
    28cc:	e8 1b       	sub	r30, r24
    28ce:	e8 87       	std	Y+8, r30	; 0x08
    28d0:	ec 2c       	mov	r14, r12
    28d2:	fd 2c       	mov	r15, r13
    28d4:	10 e0       	ldi	r17, 0x00	; 0
    28d6:	f7 01       	movw	r30, r14
    28d8:	61 91       	ld	r22, Z+
    28da:	7f 01       	movw	r14, r30
    28dc:	6a 33       	cpi	r22, 0x3A	; 58
    28de:	39 f4       	brne	.+14     	; 0x28ee <_Z13Stoppuhrseitev+0x152>
    28e0:	24 e1       	ldi	r18, 0x14	; 20
    28e2:	41 2f       	mov	r20, r17
    28e4:	8c e3       	ldi	r24, 0x3C	; 60
    28e6:	93 e0       	ldi	r25, 0x03	; 3
    28e8:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    28ec:	06 c0       	rjmp	.+12     	; 0x28fa <_Z13Stoppuhrseitev+0x15e>
    28ee:	20 e1       	ldi	r18, 0x10	; 16
    28f0:	41 2f       	mov	r20, r17
    28f2:	8c e3       	ldi	r24, 0x3C	; 60
    28f4:	93 e0       	ldi	r25, 0x03	; 3
    28f6:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    28fa:	10 5f       	subi	r17, 0xF0	; 240
    28fc:	10 38       	cpi	r17, 0x80	; 128
    28fe:	59 f7       	brne	.-42     	; 0x28d6 <_Z13Stoppuhrseitev+0x13a>
    2900:	64 96       	adiw	r28, 0x14	; 20
    2902:	0f b6       	in	r0, 0x3f	; 63
    2904:	f8 94       	cli
    2906:	de bf       	out	0x3e, r29	; 62
    2908:	0f be       	out	0x3f, r0	; 63
    290a:	cd bf       	out	0x3d, r28	; 61
    290c:	df 91       	pop	r29
    290e:	cf 91       	pop	r28
    2910:	1f 91       	pop	r17
    2912:	0f 91       	pop	r16
    2914:	ff 90       	pop	r15
    2916:	ef 90       	pop	r14
    2918:	df 90       	pop	r13
    291a:	cf 90       	pop	r12
    291c:	08 95       	ret

0000291e <_Z14Pressuresensorv>:
    291e:	ef 92       	push	r14
    2920:	ff 92       	push	r15
    2922:	1f 93       	push	r17
    2924:	cf 93       	push	r28
    2926:	df 93       	push	r29
    2928:	cd b7       	in	r28, 0x3d	; 61
    292a:	de b7       	in	r29, 0x3e	; 62
    292c:	64 97       	sbiw	r28, 0x14	; 20
    292e:	0f b6       	in	r0, 0x3f	; 63
    2930:	f8 94       	cli
    2932:	de bf       	out	0x3e, r29	; 62
    2934:	0f be       	out	0x3f, r0	; 63
    2936:	cd bf       	out	0x3d, r28	; 61
    2938:	8c e3       	ldi	r24, 0x3C	; 60
    293a:	93 e0       	ldi	r25, 0x03	; 3
    293c:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
    2940:	80 e0       	ldi	r24, 0x00	; 0
    2942:	0e 94 9d 0a 	call	0x153a	; 0x153a <_Z6headerh>
    2946:	80 e0       	ldi	r24, 0x00	; 0
    2948:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <_Z6bottomh>
    294c:	8e e0       	ldi	r24, 0x0E	; 14
    294e:	e9 e8       	ldi	r30, 0x89	; 137
    2950:	f2 e0       	ldi	r31, 0x02	; 2
    2952:	de 01       	movw	r26, r28
    2954:	11 96       	adiw	r26, 0x01	; 1
    2956:	01 90       	ld	r0, Z+
    2958:	0d 92       	st	X+, r0
    295a:	8a 95       	dec	r24
    295c:	e1 f7       	brne	.-8      	; 0x2956 <_Z14Pressuresensorv+0x38>
    295e:	ce 01       	movw	r24, r28
    2960:	01 96       	adiw	r24, 0x01	; 1
    2962:	7c 01       	movw	r14, r24
    2964:	10 e0       	ldi	r17, 0x00	; 0
    2966:	f7 01       	movw	r30, r14
    2968:	61 91       	ld	r22, Z+
    296a:	7f 01       	movw	r14, r30
    296c:	20 e1       	ldi	r18, 0x10	; 16
    296e:	41 2f       	mov	r20, r17
    2970:	8c e3       	ldi	r24, 0x3C	; 60
    2972:	93 e0       	ldi	r25, 0x03	; 3
    2974:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2978:	1a 5f       	subi	r17, 0xFA	; 250
    297a:	1e 34       	cpi	r17, 0x4E	; 78
    297c:	a1 f7       	brne	.-24     	; 0x2966 <_Z14Pressuresensorv+0x48>
    297e:	64 96       	adiw	r28, 0x14	; 20
    2980:	0f b6       	in	r0, 0x3f	; 63
    2982:	f8 94       	cli
    2984:	de bf       	out	0x3e, r29	; 62
    2986:	0f be       	out	0x3f, r0	; 63
    2988:	cd bf       	out	0x3d, r28	; 61
    298a:	df 91       	pop	r29
    298c:	cf 91       	pop	r28
    298e:	1f 91       	pop	r17
    2990:	ff 90       	pop	r15
    2992:	ef 90       	pop	r14
    2994:	08 95       	ret

00002996 <_Z11Wanderseitev>:

void Wanderseite(){
    2996:	8f 92       	push	r8
    2998:	9f 92       	push	r9
    299a:	af 92       	push	r10
    299c:	bf 92       	push	r11
    299e:	cf 92       	push	r12
    29a0:	df 92       	push	r13
    29a2:	ef 92       	push	r14
    29a4:	ff 92       	push	r15
    29a6:	0f 93       	push	r16
    29a8:	1f 93       	push	r17
    29aa:	cf 93       	push	r28
    29ac:	df 93       	push	r29
    29ae:	cd b7       	in	r28, 0x3d	; 61
    29b0:	de b7       	in	r29, 0x3e	; 62
    29b2:	64 97       	sbiw	r28, 0x14	; 20
    29b4:	0f b6       	in	r0, 0x3f	; 63
    29b6:	f8 94       	cli
    29b8:	de bf       	out	0x3e, r29	; 62
    29ba:	0f be       	out	0x3f, r0	; 63
    29bc:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	uint8_t buffersize=0;
	oled.clearFrame();
    29be:	8c e3       	ldi	r24, 0x3C	; 60
    29c0:	93 e0       	ldi	r25, 0x03	; 3
    29c2:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
	header(0);
    29c6:	80 e0       	ldi	r24, 0x00	; 0
    29c8:	0e 94 9d 0a 	call	0x153a	; 0x153a <_Z6headerh>
	bottom(0);
    29cc:	80 e0       	ldi	r24, 0x00	; 0
    29ce:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <_Z6bottomh>
	
	Accelerometer.readtempera();
    29d2:	87 e1       	ldi	r24, 0x17	; 23
    29d4:	93 e0       	ldi	r25, 0x03	; 3
    29d6:	0e 94 1a 27 	call	0x4e34	; 0x4e34 <_ZN7LSM303D11readtemperaEv>
	Accelerometer.readacc();
    29da:	87 e1       	ldi	r24, 0x17	; 23
    29dc:	93 e0       	ldi	r25, 0x03	; 3
    29de:	0e 94 7d 26 	call	0x4cfa	; 0x4cfa <_ZN7LSM303D7readaccEv>
	
	//Linse
	//Range: Page 1 to Page 6 (8 bis (7*8-1) 53)
	//ganz rechts SSDWIDTH-(53-8)
	#define libelle	(53.0-8.0)
	oled.drawRectangle(SSD1306_WIDTH-libelle,8,SSD1306_WIDTH-1,53,0);
    29e2:	e1 2c       	mov	r14, r1
    29e4:	05 e3       	ldi	r16, 0x35	; 53
    29e6:	2f e7       	ldi	r18, 0x7F	; 127
    29e8:	48 e0       	ldi	r20, 0x08	; 8
    29ea:	63 e5       	ldi	r22, 0x53	; 83
    29ec:	8c e3       	ldi	r24, 0x3C	; 60
    29ee:	93 e0       	ldi	r25, 0x03	; 3
    29f0:	0e 94 0d 04 	call	0x81a	; 0x81a <_ZN7Display13drawRectangleEhhhhh>
	oled.drawVLine(SSD1306_WIDTH-libelle/2.0,8,libelle);
    29f4:	2d e2       	ldi	r18, 0x2D	; 45
    29f6:	48 e0       	ldi	r20, 0x08	; 8
    29f8:	69 e6       	ldi	r22, 0x69	; 105
    29fa:	8c e3       	ldi	r24, 0x3C	; 60
    29fc:	93 e0       	ldi	r25, 0x03	; 3
    29fe:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <_ZN7Display9drawVLineEhhh>
	oled.drawHLine(SSD1306_WIDTH-libelle,SSD1306_HEIGHT/2,libelle);
    2a02:	2d e2       	ldi	r18, 0x2D	; 45
    2a04:	40 e2       	ldi	r20, 0x20	; 32
    2a06:	63 e5       	ldi	r22, 0x53	; 83
    2a08:	8c e3       	ldi	r24, 0x3C	; 60
    2a0a:	93 e0       	ldi	r25, 0x03	; 3
    2a0c:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <_ZN7Display9drawHLineEhhh>
	//Draw libelle uber die Winkel max ist 90 und -90 in beide richtungen
	#define bereichgroese libelle/M_PI*2.0
	#define breite 4
	#define xpos SSD1306_WIDTH-libelle/2.0-breite/2.0
	#define ypos SSD1306_HEIGHT/2.0-breite/2.0
	float rollpix = Accelerometer.roll*bereichgroese;
    2a10:	20 e0       	ldi	r18, 0x00	; 0
    2a12:	30 e0       	ldi	r19, 0x00	; 0
    2a14:	44 e3       	ldi	r20, 0x34	; 52
    2a16:	52 e4       	ldi	r21, 0x42	; 66
    2a18:	60 91 1f 03 	lds	r22, 0x031F
    2a1c:	70 91 20 03 	lds	r23, 0x0320
    2a20:	80 91 21 03 	lds	r24, 0x0321
    2a24:	90 91 22 03 	lds	r25, 0x0322
    2a28:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    2a2c:	2b ed       	ldi	r18, 0xDB	; 219
    2a2e:	3f e0       	ldi	r19, 0x0F	; 15
    2a30:	49 e4       	ldi	r20, 0x49	; 73
    2a32:	50 e4       	ldi	r21, 0x40	; 64
    2a34:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
    2a38:	9b 01       	movw	r18, r22
    2a3a:	ac 01       	movw	r20, r24
    2a3c:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    2a40:	6b 01       	movw	r12, r22
    2a42:	7c 01       	movw	r14, r24
	float pitchpix = Accelerometer.pitch*bereichgroese;
    2a44:	80 90 23 03 	lds	r8, 0x0323
    2a48:	90 90 24 03 	lds	r9, 0x0324
    2a4c:	a0 90 25 03 	lds	r10, 0x0325
    2a50:	b0 90 26 03 	lds	r11, 0x0326
	if (rollpix<libelle/2.0 && pitchpix<libelle/2.0)
    2a54:	20 e0       	ldi	r18, 0x00	; 0
    2a56:	30 e0       	ldi	r19, 0x00	; 0
    2a58:	44 eb       	ldi	r20, 0xB4	; 180
    2a5a:	51 e4       	ldi	r21, 0x41	; 65
    2a5c:	0e 94 6d 2b 	call	0x56da	; 0x56da <__cmpsf2>
    2a60:	88 23       	and	r24, r24
    2a62:	0c f0       	brlt	.+2      	; 0x2a66 <_Z11Wanderseitev+0xd0>
    2a64:	4f c0       	rjmp	.+158    	; 0x2b04 <_Z11Wanderseitev+0x16e>
	#define bereichgroese libelle/M_PI*2.0
	#define breite 4
	#define xpos SSD1306_WIDTH-libelle/2.0-breite/2.0
	#define ypos SSD1306_HEIGHT/2.0-breite/2.0
	float rollpix = Accelerometer.roll*bereichgroese;
	float pitchpix = Accelerometer.pitch*bereichgroese;
    2a66:	20 e0       	ldi	r18, 0x00	; 0
    2a68:	30 e0       	ldi	r19, 0x00	; 0
    2a6a:	44 e3       	ldi	r20, 0x34	; 52
    2a6c:	52 e4       	ldi	r21, 0x42	; 66
    2a6e:	c5 01       	movw	r24, r10
    2a70:	b4 01       	movw	r22, r8
    2a72:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    2a76:	2b ed       	ldi	r18, 0xDB	; 219
    2a78:	3f e0       	ldi	r19, 0x0F	; 15
    2a7a:	49 e4       	ldi	r20, 0x49	; 73
    2a7c:	50 e4       	ldi	r21, 0x40	; 64
    2a7e:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
    2a82:	9b 01       	movw	r18, r22
    2a84:	ac 01       	movw	r20, r24
    2a86:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    2a8a:	4b 01       	movw	r8, r22
    2a8c:	5c 01       	movw	r10, r24
	if (rollpix<libelle/2.0 && pitchpix<libelle/2.0)
    2a8e:	20 e0       	ldi	r18, 0x00	; 0
    2a90:	30 e0       	ldi	r19, 0x00	; 0
    2a92:	44 eb       	ldi	r20, 0xB4	; 180
    2a94:	51 e4       	ldi	r21, 0x41	; 65
    2a96:	0e 94 6d 2b 	call	0x56da	; 0x56da <__cmpsf2>
    2a9a:	88 23       	and	r24, r24
    2a9c:	9c f5       	brge	.+102    	; 0x2b04 <_Z11Wanderseitev+0x16e>
	{
		oled.drawRectangle(xpos-rollpix,ypos+pitchpix,xpos+breite-rollpix,ypos+breite+pitchpix,1);
    2a9e:	20 e0       	ldi	r18, 0x00	; 0
    2aa0:	30 e0       	ldi	r19, 0x00	; 0
    2aa2:	48 e0       	ldi	r20, 0x08	; 8
    2aa4:	52 e4       	ldi	r21, 0x42	; 66
    2aa6:	c5 01       	movw	r24, r10
    2aa8:	b4 01       	movw	r22, r8
    2aaa:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    2aae:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
    2ab2:	06 2f       	mov	r16, r22
    2ab4:	a7 01       	movw	r20, r14
    2ab6:	96 01       	movw	r18, r12
    2ab8:	60 e0       	ldi	r22, 0x00	; 0
    2aba:	70 e0       	ldi	r23, 0x00	; 0
    2abc:	87 ed       	ldi	r24, 0xD7	; 215
    2abe:	92 e4       	ldi	r25, 0x42	; 66
    2ac0:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
    2ac4:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
    2ac8:	16 2f       	mov	r17, r22
    2aca:	20 e0       	ldi	r18, 0x00	; 0
    2acc:	30 e0       	ldi	r19, 0x00	; 0
    2ace:	40 ef       	ldi	r20, 0xF0	; 240
    2ad0:	51 e4       	ldi	r21, 0x41	; 65
    2ad2:	c5 01       	movw	r24, r10
    2ad4:	b4 01       	movw	r22, r8
    2ad6:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    2ada:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
    2ade:	b6 2e       	mov	r11, r22
    2ae0:	a7 01       	movw	r20, r14
    2ae2:	96 01       	movw	r18, r12
    2ae4:	60 e0       	ldi	r22, 0x00	; 0
    2ae6:	70 e0       	ldi	r23, 0x00	; 0
    2ae8:	8f ec       	ldi	r24, 0xCF	; 207
    2aea:	92 e4       	ldi	r25, 0x42	; 66
    2aec:	0e 94 a6 2a 	call	0x554c	; 0x554c <__subsf3>
    2af0:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__fixunssfsi>
    2af4:	ee 24       	eor	r14, r14
    2af6:	e3 94       	inc	r14
    2af8:	21 2f       	mov	r18, r17
    2afa:	4b 2d       	mov	r20, r11
    2afc:	8c e3       	ldi	r24, 0x3C	; 60
    2afe:	93 e0       	ldi	r25, 0x03	; 3
    2b00:	0e 94 0d 04 	call	0x81a	; 0x81a <_ZN7Display13drawRectangleEhhhhh>
	}

	//Text debugging
	buffersize=sprintf(buffer,"r:%.1f",Accelerometer.roll*180.0/M_PI);
    2b04:	20 e0       	ldi	r18, 0x00	; 0
    2b06:	30 e0       	ldi	r19, 0x00	; 0
    2b08:	44 e3       	ldi	r20, 0x34	; 52
    2b0a:	53 e4       	ldi	r21, 0x43	; 67
    2b0c:	60 91 1f 03 	lds	r22, 0x031F
    2b10:	70 91 20 03 	lds	r23, 0x0320
    2b14:	80 91 21 03 	lds	r24, 0x0321
    2b18:	90 91 22 03 	lds	r25, 0x0322
    2b1c:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    2b20:	2b ed       	ldi	r18, 0xDB	; 219
    2b22:	3f e0       	ldi	r19, 0x0F	; 15
    2b24:	49 e4       	ldi	r20, 0x49	; 73
    2b26:	50 e4       	ldi	r21, 0x40	; 64
    2b28:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
    2b2c:	9f 93       	push	r25
    2b2e:	8f 93       	push	r24
    2b30:	7f 93       	push	r23
    2b32:	6f 93       	push	r22
    2b34:	87 e9       	ldi	r24, 0x97	; 151
    2b36:	92 e0       	ldi	r25, 0x02	; 2
    2b38:	9f 93       	push	r25
    2b3a:	8f 93       	push	r24
    2b3c:	ce 01       	movw	r24, r28
    2b3e:	01 96       	adiw	r24, 0x01	; 1
    2b40:	9f 93       	push	r25
    2b42:	8f 93       	push	r24
    2b44:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,2*charhighte);}
    2b48:	0f b6       	in	r0, 0x3f	; 63
    2b4a:	f8 94       	cli
    2b4c:	de bf       	out	0x3e, r29	; 62
    2b4e:	0f be       	out	0x3f, r0	; 63
    2b50:	cd bf       	out	0x3d, r28	; 61
    2b52:	88 23       	and	r24, r24
    2b54:	d9 f0       	breq	.+54     	; 0x2b8c <_Z11Wanderseitev+0x1f6>
    2b56:	8e 01       	movw	r16, r28
    2b58:	0f 5f       	subi	r16, 0xFF	; 255
    2b5a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b5c:	81 50       	subi	r24, 0x01	; 1
    2b5e:	68 94       	set
    2b60:	ee 24       	eor	r14, r14
    2b62:	e1 f8       	bld	r14, 1
    2b64:	f1 2c       	mov	r15, r1
    2b66:	ec 0e       	add	r14, r28
    2b68:	fd 1e       	adc	r15, r29
    2b6a:	e8 0e       	add	r14, r24
    2b6c:	f1 1c       	adc	r15, r1
    2b6e:	d1 2c       	mov	r13, r1
    2b70:	f8 01       	movw	r30, r16
    2b72:	61 91       	ld	r22, Z+
    2b74:	8f 01       	movw	r16, r30
    2b76:	20 e1       	ldi	r18, 0x10	; 16
    2b78:	4d 2d       	mov	r20, r13
    2b7a:	8c e3       	ldi	r24, 0x3C	; 60
    2b7c:	93 e0       	ldi	r25, 0x03	; 3
    2b7e:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2b82:	f6 e0       	ldi	r31, 0x06	; 6
    2b84:	df 0e       	add	r13, r31
    2b86:	0e 15       	cp	r16, r14
    2b88:	1f 05       	cpc	r17, r15
    2b8a:	91 f7       	brne	.-28     	; 0x2b70 <_Z11Wanderseitev+0x1da>
	buffersize=sprintf(buffer,"p:%.1f",Accelerometer.pitch*180.0/M_PI);
    2b8c:	20 e0       	ldi	r18, 0x00	; 0
    2b8e:	30 e0       	ldi	r19, 0x00	; 0
    2b90:	44 e3       	ldi	r20, 0x34	; 52
    2b92:	53 e4       	ldi	r21, 0x43	; 67
    2b94:	60 91 23 03 	lds	r22, 0x0323
    2b98:	70 91 24 03 	lds	r23, 0x0324
    2b9c:	80 91 25 03 	lds	r24, 0x0325
    2ba0:	90 91 26 03 	lds	r25, 0x0326
    2ba4:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    2ba8:	2b ed       	ldi	r18, 0xDB	; 219
    2baa:	3f e0       	ldi	r19, 0x0F	; 15
    2bac:	49 e4       	ldi	r20, 0x49	; 73
    2bae:	50 e4       	ldi	r21, 0x40	; 64
    2bb0:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
    2bb4:	9f 93       	push	r25
    2bb6:	8f 93       	push	r24
    2bb8:	7f 93       	push	r23
    2bba:	6f 93       	push	r22
    2bbc:	8e e9       	ldi	r24, 0x9E	; 158
    2bbe:	92 e0       	ldi	r25, 0x02	; 2
    2bc0:	9f 93       	push	r25
    2bc2:	8f 93       	push	r24
    2bc4:	ce 01       	movw	r24, r28
    2bc6:	01 96       	adiw	r24, 0x01	; 1
    2bc8:	9f 93       	push	r25
    2bca:	8f 93       	push	r24
    2bcc:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
    2bd0:	0f b6       	in	r0, 0x3f	; 63
    2bd2:	f8 94       	cli
    2bd4:	de bf       	out	0x3e, r29	; 62
    2bd6:	0f be       	out	0x3f, r0	; 63
    2bd8:	cd bf       	out	0x3d, r28	; 61
    2bda:	88 23       	and	r24, r24
    2bdc:	d9 f0       	breq	.+54     	; 0x2c14 <_Z11Wanderseitev+0x27e>
    2bde:	8e 01       	movw	r16, r28
    2be0:	0f 5f       	subi	r16, 0xFF	; 255
    2be2:	1f 4f       	sbci	r17, 0xFF	; 255
    2be4:	81 50       	subi	r24, 0x01	; 1
    2be6:	68 94       	set
    2be8:	ee 24       	eor	r14, r14
    2bea:	e1 f8       	bld	r14, 1
    2bec:	f1 2c       	mov	r15, r1
    2bee:	ec 0e       	add	r14, r28
    2bf0:	fd 1e       	adc	r15, r29
    2bf2:	e8 0e       	add	r14, r24
    2bf4:	f1 1c       	adc	r15, r1
    2bf6:	d1 2c       	mov	r13, r1
    2bf8:	f8 01       	movw	r30, r16
    2bfa:	61 91       	ld	r22, Z+
    2bfc:	8f 01       	movw	r16, r30
    2bfe:	28 e1       	ldi	r18, 0x18	; 24
    2c00:	4d 2d       	mov	r20, r13
    2c02:	8c e3       	ldi	r24, 0x3C	; 60
    2c04:	93 e0       	ldi	r25, 0x03	; 3
    2c06:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2c0a:	f6 e0       	ldi	r31, 0x06	; 6
    2c0c:	df 0e       	add	r13, r31
    2c0e:	0e 15       	cp	r16, r14
    2c10:	1f 05       	cpc	r17, r15
    2c12:	91 f7       	brne	.-28     	; 0x2bf8 <_Z11Wanderseitev+0x262>
	buffersize=sprintf(buffer,"%i C",Accelerometer.Tempera);
    2c14:	ed e1       	ldi	r30, 0x1D	; 29
    2c16:	f3 e0       	ldi	r31, 0x03	; 3
    2c18:	81 81       	ldd	r24, Z+1	; 0x01
    2c1a:	8f 93       	push	r24
    2c1c:	80 81       	ld	r24, Z
    2c1e:	8f 93       	push	r24
    2c20:	85 ea       	ldi	r24, 0xA5	; 165
    2c22:	92 e0       	ldi	r25, 0x02	; 2
    2c24:	9f 93       	push	r25
    2c26:	8f 93       	push	r24
    2c28:	ce 01       	movw	r24, r28
    2c2a:	01 96       	adiw	r24, 0x01	; 1
    2c2c:	9f 93       	push	r25
    2c2e:	8f 93       	push	r24
    2c30:	0e 94 ba 32 	call	0x6574	; 0x6574 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,5*charhighte);}
    2c34:	0f 90       	pop	r0
    2c36:	0f 90       	pop	r0
    2c38:	0f 90       	pop	r0
    2c3a:	0f 90       	pop	r0
    2c3c:	0f 90       	pop	r0
    2c3e:	0f 90       	pop	r0
    2c40:	88 23       	and	r24, r24
    2c42:	d9 f0       	breq	.+54     	; 0x2c7a <_Z11Wanderseitev+0x2e4>
    2c44:	8e 01       	movw	r16, r28
    2c46:	0f 5f       	subi	r16, 0xFF	; 255
    2c48:	1f 4f       	sbci	r17, 0xFF	; 255
    2c4a:	81 50       	subi	r24, 0x01	; 1
    2c4c:	68 94       	set
    2c4e:	ee 24       	eor	r14, r14
    2c50:	e1 f8       	bld	r14, 1
    2c52:	f1 2c       	mov	r15, r1
    2c54:	ec 0e       	add	r14, r28
    2c56:	fd 1e       	adc	r15, r29
    2c58:	e8 0e       	add	r14, r24
    2c5a:	f1 1c       	adc	r15, r1
    2c5c:	d1 2c       	mov	r13, r1
    2c5e:	f8 01       	movw	r30, r16
    2c60:	61 91       	ld	r22, Z+
    2c62:	8f 01       	movw	r16, r30
    2c64:	28 e2       	ldi	r18, 0x28	; 40
    2c66:	4d 2d       	mov	r20, r13
    2c68:	8c e3       	ldi	r24, 0x3C	; 60
    2c6a:	93 e0       	ldi	r25, 0x03	; 3
    2c6c:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2c70:	f6 e0       	ldi	r31, 0x06	; 6
    2c72:	df 0e       	add	r13, r31
    2c74:	0e 15       	cp	r16, r14
    2c76:	1f 05       	cpc	r17, r15
    2c78:	91 f7       	brne	.-28     	; 0x2c5e <_Z11Wanderseitev+0x2c8>
}
    2c7a:	64 96       	adiw	r28, 0x14	; 20
    2c7c:	0f b6       	in	r0, 0x3f	; 63
    2c7e:	f8 94       	cli
    2c80:	de bf       	out	0x3e, r29	; 62
    2c82:	0f be       	out	0x3f, r0	; 63
    2c84:	cd bf       	out	0x3d, r28	; 61
    2c86:	df 91       	pop	r29
    2c88:	cf 91       	pop	r28
    2c8a:	1f 91       	pop	r17
    2c8c:	0f 91       	pop	r16
    2c8e:	ff 90       	pop	r15
    2c90:	ef 90       	pop	r14
    2c92:	df 90       	pop	r13
    2c94:	cf 90       	pop	r12
    2c96:	bf 90       	pop	r11
    2c98:	af 90       	pop	r10
    2c9a:	9f 90       	pop	r9
    2c9c:	8f 90       	pop	r8
    2c9e:	08 95       	ret

00002ca0 <_Z13uhreinstellenv>:

void uhreinstellen(){
    2ca0:	2f 92       	push	r2
    2ca2:	3f 92       	push	r3
    2ca4:	4f 92       	push	r4
    2ca6:	5f 92       	push	r5
    2ca8:	6f 92       	push	r6
    2caa:	7f 92       	push	r7
    2cac:	8f 92       	push	r8
    2cae:	9f 92       	push	r9
    2cb0:	af 92       	push	r10
    2cb2:	bf 92       	push	r11
    2cb4:	cf 92       	push	r12
    2cb6:	df 92       	push	r13
    2cb8:	ef 92       	push	r14
    2cba:	ff 92       	push	r15
    2cbc:	0f 93       	push	r16
    2cbe:	1f 93       	push	r17
    2cc0:	cf 93       	push	r28
    2cc2:	df 93       	push	r29
    2cc4:	cd b7       	in	r28, 0x3d	; 61
    2cc6:	de b7       	in	r29, 0x3e	; 62
    2cc8:	66 97       	sbiw	r28, 0x16	; 22
    2cca:	0f b6       	in	r0, 0x3f	; 63
    2ccc:	f8 94       	cli
    2cce:	de bf       	out	0x3e, r29	; 62
    2cd0:	0f be       	out	0x3f, r0	; 63
    2cd2:	cd bf       	out	0x3d, r28	; 61
	rtc.RTCstop();
    2cd4:	8d e3       	ldi	r24, 0x3D	; 61
    2cd6:	97 e0       	ldi	r25, 0x07	; 7
    2cd8:	0e 94 5f 2a 	call	0x54be	; 0x54be <_ZN3RTC7RTCstopEv>
	
	oled.clearFrame();
    2cdc:	8c e3       	ldi	r24, 0x3C	; 60
    2cde:	93 e0       	ldi	r25, 0x03	; 3
    2ce0:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
    2ce4:	91 2c       	mov	r9, r1
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2ce6:	0f 2e       	mov	r0, r31
    2ce8:	ff e0       	ldi	r31, 0x0F	; 15
    2cea:	6f 2e       	mov	r6, r31
    2cec:	f0 2d       	mov	r31, r0
    2cee:	ce 01       	movw	r24, r28
    2cf0:	01 96       	adiw	r24, 0x01	; 1
    2cf2:	7c 01       	movw	r14, r24
    2cf4:	78 2e       	mov	r7, r24
    2cf6:	8f 2c       	mov	r8, r15
    2cf8:	b1 2c       	mov	r11, r1
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2cfa:	8d 8b       	std	Y+21, r24	; 0x15
    2cfc:	fe 8a       	std	Y+22, r15	; 0x16
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2cfe:	0f 2e       	mov	r0, r31
    2d00:	fd ec       	ldi	r31, 0xCD	; 205
    2d02:	af 2e       	mov	r10, r31
    2d04:	f0 2d       	mov	r31, r0
		buffer[1]=rtc.Stunden%10;
		buffer[2]=':';
		buffer[3]=rtc.Minuten/10;
		buffer[4]=rtc.Minuten%10;
		buffer[5]=' ';
		buffer[6]=rtc.Tag/10;
    2d06:	0f 2e       	mov	r0, r31
    2d08:	f1 e5       	ldi	r31, 0x51	; 81
    2d0a:	4f 2e       	mov	r4, r31
    2d0c:	f7 e0       	ldi	r31, 0x07	; 7
    2d0e:	5f 2e       	mov	r5, r31
    2d10:	f0 2d       	mov	r31, r0
		buffer[7]=rtc.Tag%10;
		buffer[8]='.';
		buffer[9]=rtc.Monat/10;
    2d12:	0f 2e       	mov	r0, r31
    2d14:	f3 e5       	ldi	r31, 0x53	; 83
    2d16:	cf 2e       	mov	r12, r31
    2d18:	f7 e0       	ldi	r31, 0x07	; 7
    2d1a:	df 2e       	mov	r13, r31
    2d1c:	f0 2d       	mov	r31, r0
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2d1e:	ea ea       	ldi	r30, 0xAA	; 170
    2d20:	f2 e0       	ldi	r31, 0x02	; 2
    2d22:	a7 2d       	mov	r26, r7
    2d24:	b8 2d       	mov	r27, r8
    2d26:	86 2d       	mov	r24, r6
    2d28:	01 90       	ld	r0, Z+
    2d2a:	0d 92       	st	X+, r0
    2d2c:	8a 95       	dec	r24
    2d2e:	e1 f7       	brne	.-8      	; 0x2d28 <_Z13uhreinstellenv+0x88>
    2d30:	27 2c       	mov	r2, r7
    2d32:	38 2c       	mov	r3, r8
    2d34:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
    2d36:	f1 01       	movw	r30, r2
    2d38:	61 91       	ld	r22, Z+
    2d3a:	1f 01       	movw	r2, r30
    2d3c:	2b 2d       	mov	r18, r11
    2d3e:	41 2f       	mov	r20, r17
    2d40:	8c e3       	ldi	r24, 0x3C	; 60
    2d42:	93 e0       	ldi	r25, 0x03	; 3
    2d44:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2d48:	1a 5f       	subi	r17, 0xFA	; 250
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
    2d4a:	14 35       	cpi	r17, 0x54	; 84
    2d4c:	a1 f7       	brne	.-24     	; 0x2d36 <_Z13uhreinstellenv+0x96>
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2d4e:	ef e0       	ldi	r30, 0x0F	; 15
    2d50:	f1 e0       	ldi	r31, 0x01	; 1
    2d52:	a7 2d       	mov	r26, r7
    2d54:	b8 2d       	mov	r27, r8
    2d56:	86 2d       	mov	r24, r6
    2d58:	01 90       	ld	r0, Z+
    2d5a:	0d 92       	st	X+, r0
    2d5c:	8a 95       	dec	r24
    2d5e:	e1 f7       	brne	.-8      	; 0x2d58 <_Z13uhreinstellenv+0xb8>
    2d60:	2d 88       	ldd	r2, Y+21	; 0x15
    2d62:	3e 88       	ldd	r3, Y+22	; 0x16
    2d64:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
    2d66:	f1 01       	movw	r30, r2
    2d68:	61 91       	ld	r22, Z+
    2d6a:	1f 01       	movw	r2, r30
    2d6c:	28 e0       	ldi	r18, 0x08	; 8
    2d6e:	41 2f       	mov	r20, r17
    2d70:	8c e3       	ldi	r24, 0x3C	; 60
    2d72:	93 e0       	ldi	r25, 0x03	; 3
    2d74:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2d78:	1a 5f       	subi	r17, 0xFA	; 250
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
		for(uint8_t i = 0; i<buffersize;i++){
    2d7a:	14 35       	cpi	r17, 0x54	; 84
    2d7c:	a1 f7       	brne	.-24     	; 0x2d66 <_Z13uhreinstellenv+0xc6>
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2d7e:	ed e4       	ldi	r30, 0x4D	; 77
    2d80:	f7 e0       	ldi	r31, 0x07	; 7
    2d82:	80 81       	ld	r24, Z
    2d84:	8a 9d       	mul	r24, r10
    2d86:	91 2d       	mov	r25, r1
    2d88:	11 24       	eor	r1, r1
    2d8a:	96 95       	lsr	r25
    2d8c:	96 95       	lsr	r25
    2d8e:	96 95       	lsr	r25
    2d90:	99 83       	std	Y+1, r25	; 0x01
		buffer[1]=rtc.Stunden%10;
    2d92:	99 0f       	add	r25, r25
    2d94:	29 2f       	mov	r18, r25
    2d96:	22 0f       	add	r18, r18
    2d98:	22 0f       	add	r18, r18
    2d9a:	92 0f       	add	r25, r18
    2d9c:	89 1b       	sub	r24, r25
    2d9e:	8a 83       	std	Y+2, r24	; 0x02
		buffer[2]=':';
    2da0:	fa e3       	ldi	r31, 0x3A	; 58
    2da2:	fb 83       	std	Y+3, r31	; 0x03
		buffer[3]=rtc.Minuten/10;
    2da4:	ee e4       	ldi	r30, 0x4E	; 78
    2da6:	f7 e0       	ldi	r31, 0x07	; 7
    2da8:	80 81       	ld	r24, Z
    2daa:	8a 9d       	mul	r24, r10
    2dac:	91 2d       	mov	r25, r1
    2dae:	11 24       	eor	r1, r1
    2db0:	96 95       	lsr	r25
    2db2:	96 95       	lsr	r25
    2db4:	96 95       	lsr	r25
    2db6:	9c 83       	std	Y+4, r25	; 0x04
		buffer[4]=rtc.Minuten%10;
    2db8:	99 0f       	add	r25, r25
    2dba:	29 2f       	mov	r18, r25
    2dbc:	22 0f       	add	r18, r18
    2dbe:	22 0f       	add	r18, r18
    2dc0:	92 0f       	add	r25, r18
    2dc2:	89 1b       	sub	r24, r25
    2dc4:	8d 83       	std	Y+5, r24	; 0x05
		buffer[5]=' ';
    2dc6:	80 e2       	ldi	r24, 0x20	; 32
    2dc8:	8e 83       	std	Y+6, r24	; 0x06
		buffer[6]=rtc.Tag/10;
    2dca:	f2 01       	movw	r30, r4
    2dcc:	80 81       	ld	r24, Z
    2dce:	8a 9d       	mul	r24, r10
    2dd0:	91 2d       	mov	r25, r1
    2dd2:	11 24       	eor	r1, r1
    2dd4:	96 95       	lsr	r25
    2dd6:	96 95       	lsr	r25
    2dd8:	96 95       	lsr	r25
    2dda:	9f 83       	std	Y+7, r25	; 0x07
		buffer[7]=rtc.Tag%10;
    2ddc:	99 0f       	add	r25, r25
    2dde:	29 2f       	mov	r18, r25
    2de0:	22 0f       	add	r18, r18
    2de2:	22 0f       	add	r18, r18
    2de4:	92 0f       	add	r25, r18
    2de6:	89 1b       	sub	r24, r25
    2de8:	88 87       	std	Y+8, r24	; 0x08
		buffer[8]='.';
    2dea:	8e e2       	ldi	r24, 0x2E	; 46
    2dec:	89 87       	std	Y+9, r24	; 0x09
		buffer[9]=rtc.Monat/10;
    2dee:	f6 01       	movw	r30, r12
    2df0:	90 81       	ld	r25, Z
    2df2:	9a 9d       	mul	r25, r10
    2df4:	21 2d       	mov	r18, r1
    2df6:	11 24       	eor	r1, r1
    2df8:	26 95       	lsr	r18
    2dfa:	26 95       	lsr	r18
    2dfc:	26 95       	lsr	r18
    2dfe:	2a 87       	std	Y+10, r18	; 0x0a
		buffer[10]=rtc.Monat%10;
    2e00:	22 0f       	add	r18, r18
    2e02:	32 2f       	mov	r19, r18
    2e04:	33 0f       	add	r19, r19
    2e06:	33 0f       	add	r19, r19
    2e08:	23 0f       	add	r18, r19
    2e0a:	92 1b       	sub	r25, r18
    2e0c:	9b 87       	std	Y+11, r25	; 0x0b
		buffer[11]='.';
    2e0e:	8c 87       	std	Y+12, r24	; 0x0c
		buffer[12]=rtc.Jahr/10;
    2e10:	e4 e5       	ldi	r30, 0x54	; 84
    2e12:	f7 e0       	ldi	r31, 0x07	; 7
    2e14:	80 81       	ld	r24, Z
    2e16:	8a 9d       	mul	r24, r10
    2e18:	91 2d       	mov	r25, r1
    2e1a:	11 24       	eor	r1, r1
    2e1c:	96 95       	lsr	r25
    2e1e:	96 95       	lsr	r25
    2e20:	96 95       	lsr	r25
    2e22:	9d 87       	std	Y+13, r25	; 0x0d
		buffer[13]=rtc.Jahr%10;
    2e24:	99 0f       	add	r25, r25
    2e26:	29 2f       	mov	r18, r25
    2e28:	22 0f       	add	r18, r18
    2e2a:	22 0f       	add	r18, r18
    2e2c:	92 0f       	add	r25, r18
    2e2e:	89 1b       	sub	r24, r25
    2e30:	8e 87       	std	Y+14, r24	; 0x0e
    2e32:	3b 2c       	mov	r3, r11
    2e34:	01 e0       	ldi	r16, 0x01	; 1
    2e36:	1b 2d       	mov	r17, r11
    2e38:	04 c0       	rjmp	.+8      	; 0x2e42 <_Z13uhreinstellenv+0x1a2>
    2e3a:	1f 5f       	subi	r17, 0xFF	; 255
    2e3c:	0f 5f       	subi	r16, 0xFF	; 255
    2e3e:	f0 e1       	ldi	r31, 0x10	; 16
    2e40:	3f 0e       	add	r3, r31
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
			if(i!=2){
    2e42:	12 30       	cpi	r17, 0x02	; 2
    2e44:	69 f0       	breq	.+26     	; 0x2e60 <_Z13uhreinstellenv+0x1c0>
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
    2e46:	20 e1       	ldi	r18, 0x10	; 16
    2e48:	43 2d       	mov	r20, r3
    2e4a:	f7 01       	movw	r30, r14
    2e4c:	e1 0f       	add	r30, r17
    2e4e:	f1 1d       	adc	r31, r1
    2e50:	60 81       	ld	r22, Z
    2e52:	8c e3       	ldi	r24, 0x3C	; 60
    2e54:	93 e0       	ldi	r25, 0x03	; 3
    2e56:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    2e5a:	05 30       	cpi	r16, 0x05	; 5
    2e5c:	70 f3       	brcs	.-36     	; 0x2e3a <_Z13uhreinstellenv+0x19a>
    2e5e:	08 c0       	rjmp	.+16     	; 0x2e70 <_Z13uhreinstellenv+0x1d0>
			if(i!=2){
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
    2e60:	24 e1       	ldi	r18, 0x14	; 20
    2e62:	48 e2       	ldi	r20, 0x28	; 40
    2e64:	6b 81       	ldd	r22, Y+3	; 0x03
    2e66:	8c e3       	ldi	r24, 0x3C	; 60
    2e68:	93 e0       	ldi	r25, 0x03	; 3
    2e6a:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2e6e:	e5 cf       	rjmp	.-54     	; 0x2e3a <_Z13uhreinstellenv+0x19a>
    2e70:	8e 01       	movw	r16, r28
    2e72:	09 5f       	subi	r16, 0xF9	; 249
    2e74:	1f 4f       	sbci	r17, 0xFF	; 255
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    2e76:	2b 2c       	mov	r2, r11
    2e78:	0f 2e       	mov	r0, r31
    2e7a:	f6 e0       	ldi	r31, 0x06	; 6
    2e7c:	3f 2e       	mov	r3, r31
    2e7e:	f0 2d       	mov	r31, r0
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
			if(i!=8 && i!=11){
    2e80:	88 e0       	ldi	r24, 0x08	; 8
    2e82:	38 16       	cp	r3, r24
    2e84:	61 f0       	breq	.+24     	; 0x2e9e <_Z13uhreinstellenv+0x1fe>
    2e86:	9b e0       	ldi	r25, 0x0B	; 11
    2e88:	39 16       	cp	r3, r25
    2e8a:	49 f0       	breq	.+18     	; 0x2e9e <_Z13uhreinstellenv+0x1fe>
				oled.draw_number16x16(buffer[i],i*numbersmalsize-6*numbersmalsize,4*charhighte);
    2e8c:	20 e2       	ldi	r18, 0x20	; 32
    2e8e:	42 2d       	mov	r20, r2
    2e90:	f8 01       	movw	r30, r16
    2e92:	60 81       	ld	r22, Z
    2e94:	8c e3       	ldi	r24, 0x3C	; 60
    2e96:	93 e0       	ldi	r25, 0x03	; 3
    2e98:	0e 94 79 06 	call	0xcf2	; 0xcf2 <_ZN7Display16draw_number16x16Ehhh>
    2e9c:	09 c0       	rjmp	.+18     	; 0x2eb0 <_Z13uhreinstellenv+0x210>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
    2e9e:	28 e2       	ldi	r18, 0x28	; 40
    2ea0:	48 e0       	ldi	r20, 0x08	; 8
    2ea2:	42 0d       	add	r20, r2
    2ea4:	f8 01       	movw	r30, r16
    2ea6:	60 81       	ld	r22, Z
    2ea8:	8c e3       	ldi	r24, 0x3C	; 60
    2eaa:	93 e0       	ldi	r25, 0x03	; 3
    2eac:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
    2eb0:	33 94       	inc	r3
    2eb2:	0f 5f       	subi	r16, 0xFF	; 255
    2eb4:	1f 4f       	sbci	r17, 0xFF	; 255
    2eb6:	f0 e1       	ldi	r31, 0x10	; 16
    2eb8:	2f 0e       	add	r2, r31
    2eba:	8e e0       	ldi	r24, 0x0E	; 14
    2ebc:	38 12       	cpse	r3, r24
    2ebe:	e0 cf       	rjmp	.-64     	; 0x2e80 <_Z13uhreinstellenv+0x1e0>
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
			}
		}

		oled.sendFrame();
    2ec0:	8c e3       	ldi	r24, 0x3C	; 60
    2ec2:	93 e0       	ldi	r25, 0x03	; 3
    2ec4:	0e 94 62 03 	call	0x6c4	; 0x6c4 <_ZN7Display9sendFrameEv>
		oled.clearFrame();
    2ec8:	8c e3       	ldi	r24, 0x3C	; 60
    2eca:	93 e0       	ldi	r25, 0x03	; 3
    2ecc:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
		switch (pos) {
    2ed0:	89 2d       	mov	r24, r9
    2ed2:	90 e0       	ldi	r25, 0x00	; 0
    2ed4:	8a 30       	cpi	r24, 0x0A	; 10
    2ed6:	91 05       	cpc	r25, r1
    2ed8:	08 f0       	brcs	.+2      	; 0x2edc <_Z13uhreinstellenv+0x23c>
    2eda:	47 c2       	rjmp	.+1166   	; 0x336a <_Z13uhreinstellenv+0x6ca>
    2edc:	fc 01       	movw	r30, r24
    2ede:	ea 5b       	subi	r30, 0xBA	; 186
    2ee0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee2:	0c 94 81 31 	jmp	0x6302	; 0x6302 <__tablejump2__>
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    2ee6:	80 e3       	ldi	r24, 0x30	; 48
    2ee8:	93 e0       	ldi	r25, 0x03	; 3
    2eea:	0e 94 42 24 	call	0x4884	; 0x4884 <_ZN9Interface17ZahlenausTastaturEv>
    2eee:	88 0f       	add	r24, r24
    2ef0:	98 2f       	mov	r25, r24
    2ef2:	99 0f       	add	r25, r25
    2ef4:	99 0f       	add	r25, r25
    2ef6:	89 0f       	add	r24, r25
				if(rtc.Stunden>=24){
    2ef8:	88 31       	cpi	r24, 0x18	; 24
    2efa:	08 f4       	brcc	.+2      	; 0x2efe <_Z13uhreinstellenv+0x25e>
    2efc:	6f c2       	rjmp	.+1246   	; 0x33dc <_Z13uhreinstellenv+0x73c>
					rtc.Stunden=0;
    2efe:	ed e4       	ldi	r30, 0x4D	; 77
    2f00:	f7 e0       	ldi	r31, 0x07	; 7
    2f02:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    2f04:	e9 eb       	ldi	r30, 0xB9	; 185
    2f06:	f2 e0       	ldi	r31, 0x02	; 2
    2f08:	a7 2d       	mov	r26, r7
    2f0a:	b8 2d       	mov	r27, r8
    2f0c:	86 2d       	mov	r24, r6
    2f0e:	01 90       	ld	r0, Z+
    2f10:	0d 92       	st	X+, r0
    2f12:	8a 95       	dec	r24
    2f14:	e1 f7       	brne	.-8      	; 0x2f0e <_Z13uhreinstellenv+0x26e>
    2f16:	2d 88       	ldd	r2, Y+21	; 0x15
    2f18:	3e 88       	ldd	r3, Y+22	; 0x16
    2f1a:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    2f1c:	f1 01       	movw	r30, r2
    2f1e:	61 91       	ld	r22, Z+
    2f20:	1f 01       	movw	r2, r30
    2f22:	28 e3       	ldi	r18, 0x38	; 56
    2f24:	41 2f       	mov	r20, r17
    2f26:	8c e3       	ldi	r24, 0x3C	; 60
    2f28:	93 e0       	ldi	r25, 0x03	; 3
    2f2a:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2f2e:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    2f30:	14 35       	cpi	r17, 0x54	; 84
    2f32:	a1 f7       	brne	.-24     	; 0x2f1c <_Z13uhreinstellenv+0x27c>
    2f34:	57 c2       	rjmp	.+1198   	; 0x33e4 <_Z13uhreinstellenv+0x744>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    2f36:	80 e3       	ldi	r24, 0x30	; 48
    2f38:	93 e0       	ldi	r25, 0x03	; 3
    2f3a:	0e 94 42 24 	call	0x4884	; 0x4884 <_ZN9Interface17ZahlenausTastaturEv>
    2f3e:	ed e4       	ldi	r30, 0x4D	; 77
    2f40:	f7 e0       	ldi	r31, 0x07	; 7
    2f42:	20 81       	ld	r18, Z
    2f44:	90 e0       	ldi	r25, 0x00	; 0
    2f46:	82 0f       	add	r24, r18
    2f48:	91 1d       	adc	r25, r1
				if(rtc.Stunden>=24){
    2f4a:	88 31       	cpi	r24, 0x18	; 24
    2f4c:	10 f4       	brcc	.+4      	; 0x2f52 <_Z13uhreinstellenv+0x2b2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    2f4e:	80 83       	st	Z, r24
    2f50:	7c c2       	rjmp	.+1272   	; 0x344a <_Z13uhreinstellenv+0x7aa>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
    2f52:	ed e4       	ldi	r30, 0x4D	; 77
    2f54:	f7 e0       	ldi	r31, 0x07	; 7
    2f56:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    2f58:	e9 eb       	ldi	r30, 0xB9	; 185
    2f5a:	f2 e0       	ldi	r31, 0x02	; 2
    2f5c:	a7 2d       	mov	r26, r7
    2f5e:	b8 2d       	mov	r27, r8
    2f60:	86 2d       	mov	r24, r6
    2f62:	01 90       	ld	r0, Z+
    2f64:	0d 92       	st	X+, r0
    2f66:	8a 95       	dec	r24
    2f68:	e1 f7       	brne	.-8      	; 0x2f62 <_Z13uhreinstellenv+0x2c2>
    2f6a:	2d 88       	ldd	r2, Y+21	; 0x15
    2f6c:	3e 88       	ldd	r3, Y+22	; 0x16
    2f6e:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    2f70:	f1 01       	movw	r30, r2
    2f72:	61 91       	ld	r22, Z+
    2f74:	1f 01       	movw	r2, r30
    2f76:	28 e3       	ldi	r18, 0x38	; 56
    2f78:	41 2f       	mov	r20, r17
    2f7a:	8c e3       	ldi	r24, 0x3C	; 60
    2f7c:	93 e0       	ldi	r25, 0x03	; 3
    2f7e:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2f82:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    2f84:	14 35       	cpi	r17, 0x54	; 84
    2f86:	a1 f7       	brne	.-24     	; 0x2f70 <_Z13uhreinstellenv+0x2d0>
    2f88:	30 c2       	rjmp	.+1120   	; 0x33ea <_Z13uhreinstellenv+0x74a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    2f8a:	80 e3       	ldi	r24, 0x30	; 48
    2f8c:	93 e0       	ldi	r25, 0x03	; 3
    2f8e:	0e 94 42 24 	call	0x4884	; 0x4884 <_ZN9Interface17ZahlenausTastaturEv>
    2f92:	88 0f       	add	r24, r24
    2f94:	98 2f       	mov	r25, r24
    2f96:	99 0f       	add	r25, r25
    2f98:	99 0f       	add	r25, r25
    2f9a:	89 0f       	add	r24, r25
				if(rtc.Minuten>=60){
    2f9c:	8c 33       	cpi	r24, 0x3C	; 60
    2f9e:	20 f4       	brcc	.+8      	; 0x2fa8 <_Z13uhreinstellenv+0x308>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    2fa0:	ee e4       	ldi	r30, 0x4E	; 78
    2fa2:	f7 e0       	ldi	r31, 0x07	; 7
    2fa4:	80 83       	st	Z, r24
    2fa6:	51 c2       	rjmp	.+1186   	; 0x344a <_Z13uhreinstellenv+0x7aa>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    2fa8:	ee e4       	ldi	r30, 0x4E	; 78
    2faa:	f7 e0       	ldi	r31, 0x07	; 7
    2fac:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    2fae:	e8 ec       	ldi	r30, 0xC8	; 200
    2fb0:	f2 e0       	ldi	r31, 0x02	; 2
    2fb2:	a7 2d       	mov	r26, r7
    2fb4:	b8 2d       	mov	r27, r8
    2fb6:	86 2d       	mov	r24, r6
    2fb8:	01 90       	ld	r0, Z+
    2fba:	0d 92       	st	X+, r0
    2fbc:	8a 95       	dec	r24
    2fbe:	e1 f7       	brne	.-8      	; 0x2fb8 <_Z13uhreinstellenv+0x318>
    2fc0:	2d 88       	ldd	r2, Y+21	; 0x15
    2fc2:	3e 88       	ldd	r3, Y+22	; 0x16
    2fc4:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    2fc6:	f1 01       	movw	r30, r2
    2fc8:	61 91       	ld	r22, Z+
    2fca:	1f 01       	movw	r2, r30
    2fcc:	28 e3       	ldi	r18, 0x38	; 56
    2fce:	41 2f       	mov	r20, r17
    2fd0:	8c e3       	ldi	r24, 0x3C	; 60
    2fd2:	93 e0       	ldi	r25, 0x03	; 3
    2fd4:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    2fd8:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    2fda:	14 35       	cpi	r17, 0x54	; 84
    2fdc:	a1 f7       	brne	.-24     	; 0x2fc6 <_Z13uhreinstellenv+0x326>
    2fde:	08 c2       	rjmp	.+1040   	; 0x33f0 <_Z13uhreinstellenv+0x750>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    2fe0:	80 e3       	ldi	r24, 0x30	; 48
    2fe2:	93 e0       	ldi	r25, 0x03	; 3
    2fe4:	0e 94 42 24 	call	0x4884	; 0x4884 <_ZN9Interface17ZahlenausTastaturEv>
    2fe8:	ee e4       	ldi	r30, 0x4E	; 78
    2fea:	f7 e0       	ldi	r31, 0x07	; 7
    2fec:	20 81       	ld	r18, Z
    2fee:	90 e0       	ldi	r25, 0x00	; 0
    2ff0:	82 0f       	add	r24, r18
    2ff2:	91 1d       	adc	r25, r1
				if(rtc.Minuten>=60){
    2ff4:	8c 33       	cpi	r24, 0x3C	; 60
    2ff6:	10 f4       	brcc	.+4      	; 0x2ffc <_Z13uhreinstellenv+0x35c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    2ff8:	80 83       	st	Z, r24
    2ffa:	27 c2       	rjmp	.+1102   	; 0x344a <_Z13uhreinstellenv+0x7aa>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    2ffc:	ee e4       	ldi	r30, 0x4E	; 78
    2ffe:	f7 e0       	ldi	r31, 0x07	; 7
    3000:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    3002:	e8 ec       	ldi	r30, 0xC8	; 200
    3004:	f2 e0       	ldi	r31, 0x02	; 2
    3006:	a7 2d       	mov	r26, r7
    3008:	b8 2d       	mov	r27, r8
    300a:	86 2d       	mov	r24, r6
    300c:	01 90       	ld	r0, Z+
    300e:	0d 92       	st	X+, r0
    3010:	8a 95       	dec	r24
    3012:	e1 f7       	brne	.-8      	; 0x300c <_Z13uhreinstellenv+0x36c>
    3014:	2d 88       	ldd	r2, Y+21	; 0x15
    3016:	3e 88       	ldd	r3, Y+22	; 0x16
    3018:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    301a:	f1 01       	movw	r30, r2
    301c:	61 91       	ld	r22, Z+
    301e:	1f 01       	movw	r2, r30
    3020:	28 e3       	ldi	r18, 0x38	; 56
    3022:	41 2f       	mov	r20, r17
    3024:	8c e3       	ldi	r24, 0x3C	; 60
    3026:	93 e0       	ldi	r25, 0x03	; 3
    3028:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    302c:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    302e:	14 35       	cpi	r17, 0x54	; 84
    3030:	a1 f7       	brne	.-24     	; 0x301a <_Z13uhreinstellenv+0x37a>
    3032:	e1 c1       	rjmp	.+962    	; 0x33f6 <_Z13uhreinstellenv+0x756>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    3034:	80 e3       	ldi	r24, 0x30	; 48
    3036:	93 e0       	ldi	r25, 0x03	; 3
    3038:	0e 94 42 24 	call	0x4884	; 0x4884 <_ZN9Interface17ZahlenausTastaturEv>
    303c:	88 0f       	add	r24, r24
    303e:	98 2f       	mov	r25, r24
    3040:	99 0f       	add	r25, r25
    3042:	99 0f       	add	r25, r25
    3044:	89 0f       	add	r24, r25
				if(rtc.Tag>=32){
    3046:	80 32       	cpi	r24, 0x20	; 32
    3048:	18 f4       	brcc	.+6      	; 0x3050 <_Z13uhreinstellenv+0x3b0>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    304a:	f2 01       	movw	r30, r4
    304c:	80 83       	st	Z, r24
    304e:	fd c1       	rjmp	.+1018   	; 0x344a <_Z13uhreinstellenv+0x7aa>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    3050:	f2 01       	movw	r30, r4
    3052:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    3054:	8b e0       	ldi	r24, 0x0B	; 11
    3056:	e7 ed       	ldi	r30, 0xD7	; 215
    3058:	f2 e0       	ldi	r31, 0x02	; 2
    305a:	a7 2d       	mov	r26, r7
    305c:	b8 2d       	mov	r27, r8
    305e:	01 90       	ld	r0, Z+
    3060:	0d 92       	st	X+, r0
    3062:	8a 95       	dec	r24
    3064:	e1 f7       	brne	.-8      	; 0x305e <_Z13uhreinstellenv+0x3be>
    3066:	2d 88       	ldd	r2, Y+21	; 0x15
    3068:	3e 88       	ldd	r3, Y+22	; 0x16
    306a:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    306c:	f1 01       	movw	r30, r2
    306e:	61 91       	ld	r22, Z+
    3070:	1f 01       	movw	r2, r30
    3072:	28 e3       	ldi	r18, 0x38	; 56
    3074:	41 2f       	mov	r20, r17
    3076:	8c e3       	ldi	r24, 0x3C	; 60
    3078:	93 e0       	ldi	r25, 0x03	; 3
    307a:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    307e:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3080:	1c 33       	cpi	r17, 0x3C	; 60
    3082:	a1 f7       	brne	.-24     	; 0x306c <_Z13uhreinstellenv+0x3cc>
    3084:	bb c1       	rjmp	.+886    	; 0x33fc <_Z13uhreinstellenv+0x75c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    3086:	80 e3       	ldi	r24, 0x30	; 48
    3088:	93 e0       	ldi	r25, 0x03	; 3
    308a:	0e 94 42 24 	call	0x4884	; 0x4884 <_ZN9Interface17ZahlenausTastaturEv>
    308e:	f2 01       	movw	r30, r4
    3090:	20 81       	ld	r18, Z
    3092:	90 e0       	ldi	r25, 0x00	; 0
    3094:	82 0f       	add	r24, r18
    3096:	91 1d       	adc	r25, r1
				if(rtc.Tag>=32){
    3098:	80 32       	cpi	r24, 0x20	; 32
    309a:	10 f4       	brcc	.+4      	; 0x30a0 <_Z13uhreinstellenv+0x400>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    309c:	80 83       	st	Z, r24
    309e:	d5 c1       	rjmp	.+938    	; 0x344a <_Z13uhreinstellenv+0x7aa>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    30a0:	f2 01       	movw	r30, r4
    30a2:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    30a4:	8b e0       	ldi	r24, 0x0B	; 11
    30a6:	e7 ed       	ldi	r30, 0xD7	; 215
    30a8:	f2 e0       	ldi	r31, 0x02	; 2
    30aa:	a7 2d       	mov	r26, r7
    30ac:	b8 2d       	mov	r27, r8
    30ae:	01 90       	ld	r0, Z+
    30b0:	0d 92       	st	X+, r0
    30b2:	8a 95       	dec	r24
    30b4:	e1 f7       	brne	.-8      	; 0x30ae <_Z13uhreinstellenv+0x40e>
    30b6:	2d 88       	ldd	r2, Y+21	; 0x15
    30b8:	3e 88       	ldd	r3, Y+22	; 0x16
    30ba:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    30bc:	f1 01       	movw	r30, r2
    30be:	61 91       	ld	r22, Z+
    30c0:	1f 01       	movw	r2, r30
    30c2:	28 e3       	ldi	r18, 0x38	; 56
    30c4:	41 2f       	mov	r20, r17
    30c6:	8c e3       	ldi	r24, 0x3C	; 60
    30c8:	93 e0       	ldi	r25, 0x03	; 3
    30ca:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    30ce:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    30d0:	1c 33       	cpi	r17, 0x3C	; 60
    30d2:	a1 f7       	brne	.-24     	; 0x30bc <_Z13uhreinstellenv+0x41c>
    30d4:	98 c1       	rjmp	.+816    	; 0x3406 <_Z13uhreinstellenv+0x766>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    30d6:	80 e3       	ldi	r24, 0x30	; 48
    30d8:	93 e0       	ldi	r25, 0x03	; 3
    30da:	0e 94 42 24 	call	0x4884	; 0x4884 <_ZN9Interface17ZahlenausTastaturEv>
    30de:	88 0f       	add	r24, r24
    30e0:	98 2f       	mov	r25, r24
    30e2:	99 0f       	add	r25, r25
    30e4:	99 0f       	add	r25, r25
    30e6:	89 0f       	add	r24, r25
				if(rtc.Monat>=13){
    30e8:	8d 30       	cpi	r24, 0x0D	; 13
    30ea:	18 f4       	brcc	.+6      	; 0x30f2 <_Z13uhreinstellenv+0x452>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    30ec:	f6 01       	movw	r30, r12
    30ee:	80 83       	st	Z, r24
    30f0:	ac c1       	rjmp	.+856    	; 0x344a <_Z13uhreinstellenv+0x7aa>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    30f2:	f6 01       	movw	r30, r12
    30f4:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    30f6:	8d e0       	ldi	r24, 0x0D	; 13
    30f8:	e2 ee       	ldi	r30, 0xE2	; 226
    30fa:	f2 e0       	ldi	r31, 0x02	; 2
    30fc:	a7 2d       	mov	r26, r7
    30fe:	b8 2d       	mov	r27, r8
    3100:	01 90       	ld	r0, Z+
    3102:	0d 92       	st	X+, r0
    3104:	8a 95       	dec	r24
    3106:	e1 f7       	brne	.-8      	; 0x3100 <_Z13uhreinstellenv+0x460>
    3108:	2d 88       	ldd	r2, Y+21	; 0x15
    310a:	3e 88       	ldd	r3, Y+22	; 0x16
    310c:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    310e:	f1 01       	movw	r30, r2
    3110:	61 91       	ld	r22, Z+
    3112:	1f 01       	movw	r2, r30
    3114:	28 e3       	ldi	r18, 0x38	; 56
    3116:	41 2f       	mov	r20, r17
    3118:	8c e3       	ldi	r24, 0x3C	; 60
    311a:	93 e0       	ldi	r25, 0x03	; 3
    311c:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    3120:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3122:	18 34       	cpi	r17, 0x48	; 72
    3124:	a1 f7       	brne	.-24     	; 0x310e <_Z13uhreinstellenv+0x46e>
    3126:	74 c1       	rjmp	.+744    	; 0x3410 <_Z13uhreinstellenv+0x770>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    3128:	80 e3       	ldi	r24, 0x30	; 48
    312a:	93 e0       	ldi	r25, 0x03	; 3
    312c:	0e 94 42 24 	call	0x4884	; 0x4884 <_ZN9Interface17ZahlenausTastaturEv>
    3130:	f6 01       	movw	r30, r12
    3132:	20 81       	ld	r18, Z
    3134:	90 e0       	ldi	r25, 0x00	; 0
    3136:	82 0f       	add	r24, r18
    3138:	91 1d       	adc	r25, r1
				if(rtc.Monat>=13){
    313a:	8d 30       	cpi	r24, 0x0D	; 13
    313c:	10 f4       	brcc	.+4      	; 0x3142 <_Z13uhreinstellenv+0x4a2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    313e:	80 83       	st	Z, r24
    3140:	1e c0       	rjmp	.+60     	; 0x317e <_Z13uhreinstellenv+0x4de>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    3142:	f6 01       	movw	r30, r12
    3144:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    3146:	8d e0       	ldi	r24, 0x0D	; 13
    3148:	e2 ee       	ldi	r30, 0xE2	; 226
    314a:	f2 e0       	ldi	r31, 0x02	; 2
    314c:	a7 2d       	mov	r26, r7
    314e:	b8 2d       	mov	r27, r8
    3150:	01 90       	ld	r0, Z+
    3152:	0d 92       	st	X+, r0
    3154:	8a 95       	dec	r24
    3156:	e1 f7       	brne	.-8      	; 0x3150 <_Z13uhreinstellenv+0x4b0>
    3158:	2d 88       	ldd	r2, Y+21	; 0x15
    315a:	3e 88       	ldd	r3, Y+22	; 0x16
    315c:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    315e:	f1 01       	movw	r30, r2
    3160:	61 91       	ld	r22, Z+
    3162:	1f 01       	movw	r2, r30
    3164:	28 e3       	ldi	r18, 0x38	; 56
    3166:	41 2f       	mov	r20, r17
    3168:	8c e3       	ldi	r24, 0x3C	; 60
    316a:	93 e0       	ldi	r25, 0x03	; 3
    316c:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    3170:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3172:	18 34       	cpi	r17, 0x48	; 72
    3174:	a1 f7       	brne	.-24     	; 0x315e <_Z13uhreinstellenv+0x4be>
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    3176:	0f 2e       	mov	r0, r31
    3178:	f5 e0       	ldi	r31, 0x05	; 5
    317a:	9f 2e       	mov	r9, r31
    317c:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
    317e:	f6 01       	movw	r30, r12
    3180:	90 81       	ld	r25, Z
    3182:	89 2f       	mov	r24, r25
    3184:	8d 7f       	andi	r24, 0xFD	; 253
    3186:	84 30       	cpi	r24, 0x04	; 4
    3188:	11 f0       	breq	.+4      	; 0x318e <_Z13uhreinstellenv+0x4ee>
    318a:	89 30       	cpi	r24, 0x09	; 9
    318c:	09 f5       	brne	.+66     	; 0x31d0 <_Z13uhreinstellenv+0x530>
					if(rtc.Tag>=31){
    318e:	f2 01       	movw	r30, r4
    3190:	80 81       	ld	r24, Z
    3192:	8f 31       	cpi	r24, 0x1F	; 31
    3194:	08 f4       	brcc	.+2      	; 0x3198 <_Z13uhreinstellenv+0x4f8>
    3196:	ea c0       	rjmp	.+468    	; 0x336c <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    3198:	10 82       	st	Z, r1
						rtc.Monat=0;
    319a:	f6 01       	movw	r30, r12
    319c:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    319e:	8b e0       	ldi	r24, 0x0B	; 11
    31a0:	e7 ed       	ldi	r30, 0xD7	; 215
    31a2:	f2 e0       	ldi	r31, 0x02	; 2
    31a4:	a7 2d       	mov	r26, r7
    31a6:	b8 2d       	mov	r27, r8
    31a8:	01 90       	ld	r0, Z+
    31aa:	0d 92       	st	X+, r0
    31ac:	8a 95       	dec	r24
    31ae:	e1 f7       	brne	.-8      	; 0x31a8 <_Z13uhreinstellenv+0x508>
    31b0:	2d 88       	ldd	r2, Y+21	; 0x15
    31b2:	3e 88       	ldd	r3, Y+22	; 0x16
    31b4:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    31b6:	f1 01       	movw	r30, r2
    31b8:	61 91       	ld	r22, Z+
    31ba:	1f 01       	movw	r2, r30
    31bc:	28 e3       	ldi	r18, 0x38	; 56
    31be:	41 2f       	mov	r20, r17
    31c0:	8c e3       	ldi	r24, 0x3C	; 60
    31c2:	93 e0       	ldi	r25, 0x03	; 3
    31c4:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    31c8:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    31ca:	1c 33       	cpi	r17, 0x3C	; 60
    31cc:	a1 f7       	brne	.-24     	; 0x31b6 <_Z13uhreinstellenv+0x516>
    31ce:	25 c1       	rjmp	.+586    	; 0x341a <_Z13uhreinstellenv+0x77a>
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
						}
					}
				}
				else if(rtc.Monat==2){
    31d0:	92 30       	cpi	r25, 0x02	; 2
    31d2:	09 f0       	breq	.+2      	; 0x31d6 <_Z13uhreinstellenv+0x536>
    31d4:	cb c0       	rjmp	.+406    	; 0x336c <_Z13uhreinstellenv+0x6cc>
					if(rtc.Tag>=30){
    31d6:	f2 01       	movw	r30, r4
    31d8:	80 81       	ld	r24, Z
    31da:	8e 31       	cpi	r24, 0x1E	; 30
    31dc:	08 f4       	brcc	.+2      	; 0x31e0 <_Z13uhreinstellenv+0x540>
    31de:	c6 c0       	rjmp	.+396    	; 0x336c <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    31e0:	10 82       	st	Z, r1
						rtc.Monat=0;
    31e2:	f6 01       	movw	r30, r12
    31e4:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    31e6:	8b e0       	ldi	r24, 0x0B	; 11
    31e8:	e7 ed       	ldi	r30, 0xD7	; 215
    31ea:	f2 e0       	ldi	r31, 0x02	; 2
    31ec:	a7 2d       	mov	r26, r7
    31ee:	b8 2d       	mov	r27, r8
    31f0:	01 90       	ld	r0, Z+
    31f2:	0d 92       	st	X+, r0
    31f4:	8a 95       	dec	r24
    31f6:	e1 f7       	brne	.-8      	; 0x31f0 <_Z13uhreinstellenv+0x550>
    31f8:	2d 88       	ldd	r2, Y+21	; 0x15
    31fa:	3e 88       	ldd	r3, Y+22	; 0x16
    31fc:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    31fe:	f1 01       	movw	r30, r2
    3200:	61 91       	ld	r22, Z+
    3202:	1f 01       	movw	r2, r30
    3204:	28 e3       	ldi	r18, 0x38	; 56
    3206:	41 2f       	mov	r20, r17
    3208:	8c e3       	ldi	r24, 0x3C	; 60
    320a:	93 e0       	ldi	r25, 0x03	; 3
    320c:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    3210:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    3212:	1c 33       	cpi	r17, 0x3C	; 60
    3214:	a1 f7       	brne	.-24     	; 0x31fe <_Z13uhreinstellenv+0x55e>
    3216:	06 c1       	rjmp	.+524    	; 0x3424 <_Z13uhreinstellenv+0x784>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    3218:	80 e3       	ldi	r24, 0x30	; 48
    321a:	93 e0       	ldi	r25, 0x03	; 3
    321c:	0e 94 42 24 	call	0x4884	; 0x4884 <_ZN9Interface17ZahlenausTastaturEv>
    3220:	88 0f       	add	r24, r24
    3222:	98 2f       	mov	r25, r24
    3224:	99 0f       	add	r25, r25
    3226:	99 0f       	add	r25, r25
    3228:	89 0f       	add	r24, r25
				if(rtc.Jahr>=50){
    322a:	82 33       	cpi	r24, 0x32	; 50
    322c:	20 f4       	brcc	.+8      	; 0x3236 <_Z13uhreinstellenv+0x596>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    322e:	e4 e5       	ldi	r30, 0x54	; 84
    3230:	f7 e0       	ldi	r31, 0x07	; 7
    3232:	80 83       	st	Z, r24
    3234:	0a c1       	rjmp	.+532    	; 0x344a <_Z13uhreinstellenv+0x7aa>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    3236:	e4 e5       	ldi	r30, 0x54	; 84
    3238:	f7 e0       	ldi	r31, 0x07	; 7
    323a:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    323c:	8c e0       	ldi	r24, 0x0C	; 12
    323e:	ef ee       	ldi	r30, 0xEF	; 239
    3240:	f2 e0       	ldi	r31, 0x02	; 2
    3242:	a7 2d       	mov	r26, r7
    3244:	b8 2d       	mov	r27, r8
    3246:	01 90       	ld	r0, Z+
    3248:	0d 92       	st	X+, r0
    324a:	8a 95       	dec	r24
    324c:	e1 f7       	brne	.-8      	; 0x3246 <_Z13uhreinstellenv+0x5a6>
    324e:	2d 88       	ldd	r2, Y+21	; 0x15
    3250:	3e 88       	ldd	r3, Y+22	; 0x16
    3252:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3254:	f1 01       	movw	r30, r2
    3256:	61 91       	ld	r22, Z+
    3258:	1f 01       	movw	r2, r30
    325a:	28 e3       	ldi	r18, 0x38	; 56
    325c:	41 2f       	mov	r20, r17
    325e:	8c e3       	ldi	r24, 0x3C	; 60
    3260:	93 e0       	ldi	r25, 0x03	; 3
    3262:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    3266:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3268:	12 34       	cpi	r17, 0x42	; 66
    326a:	a1 f7       	brne	.-24     	; 0x3254 <_Z13uhreinstellenv+0x5b4>
    326c:	e0 c0       	rjmp	.+448    	; 0x342e <_Z13uhreinstellenv+0x78e>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    326e:	80 e3       	ldi	r24, 0x30	; 48
    3270:	93 e0       	ldi	r25, 0x03	; 3
    3272:	0e 94 42 24 	call	0x4884	; 0x4884 <_ZN9Interface17ZahlenausTastaturEv>
    3276:	e4 e5       	ldi	r30, 0x54	; 84
    3278:	f7 e0       	ldi	r31, 0x07	; 7
    327a:	20 81       	ld	r18, Z
    327c:	90 e0       	ldi	r25, 0x00	; 0
    327e:	82 0f       	add	r24, r18
    3280:	91 1d       	adc	r25, r1
				if(rtc.Jahr>=50){
    3282:	82 33       	cpi	r24, 0x32	; 50
    3284:	10 f4       	brcc	.+4      	; 0x328a <_Z13uhreinstellenv+0x5ea>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    3286:	80 83       	st	Z, r24
    3288:	1f c0       	rjmp	.+62     	; 0x32c8 <_Z13uhreinstellenv+0x628>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    328a:	e4 e5       	ldi	r30, 0x54	; 84
    328c:	f7 e0       	ldi	r31, 0x07	; 7
    328e:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    3290:	8c e0       	ldi	r24, 0x0C	; 12
    3292:	ef ee       	ldi	r30, 0xEF	; 239
    3294:	f2 e0       	ldi	r31, 0x02	; 2
    3296:	a7 2d       	mov	r26, r7
    3298:	b8 2d       	mov	r27, r8
    329a:	01 90       	ld	r0, Z+
    329c:	0d 92       	st	X+, r0
    329e:	8a 95       	dec	r24
    32a0:	e1 f7       	brne	.-8      	; 0x329a <_Z13uhreinstellenv+0x5fa>
    32a2:	2d 88       	ldd	r2, Y+21	; 0x15
    32a4:	3e 88       	ldd	r3, Y+22	; 0x16
    32a6:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    32a8:	f1 01       	movw	r30, r2
    32aa:	61 91       	ld	r22, Z+
    32ac:	1f 01       	movw	r2, r30
    32ae:	28 e3       	ldi	r18, 0x38	; 56
    32b0:	41 2f       	mov	r20, r17
    32b2:	8c e3       	ldi	r24, 0x3C	; 60
    32b4:	93 e0       	ldi	r25, 0x03	; 3
    32b6:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    32ba:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    32bc:	12 34       	cpi	r17, 0x42	; 66
    32be:	a1 f7       	brne	.-24     	; 0x32a8 <_Z13uhreinstellenv+0x608>
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    32c0:	0f 2e       	mov	r0, r31
    32c2:	f7 e0       	ldi	r31, 0x07	; 7
    32c4:	9f 2e       	mov	r9, r31
    32c6:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==2){
    32c8:	f6 01       	movw	r30, r12
    32ca:	80 81       	ld	r24, Z
    32cc:	82 30       	cpi	r24, 0x02	; 2
    32ce:	09 f0       	breq	.+2      	; 0x32d2 <_Z13uhreinstellenv+0x632>
    32d0:	4d c0       	rjmp	.+154    	; 0x336c <_Z13uhreinstellenv+0x6cc>
					if(rtc.Jahr%4==0){
    32d2:	e4 e5       	ldi	r30, 0x54	; 84
    32d4:	f7 e0       	ldi	r31, 0x07	; 7
    32d6:	80 81       	ld	r24, Z
    32d8:	83 70       	andi	r24, 0x03	; 3
    32da:	21 f5       	brne	.+72     	; 0x3324 <_Z13uhreinstellenv+0x684>
						if (rtc.Tag>=30)
    32dc:	f2 01       	movw	r30, r4
    32de:	80 81       	ld	r24, Z
    32e0:	8e 31       	cpi	r24, 0x1E	; 30
    32e2:	08 f4       	brcc	.+2      	; 0x32e6 <_Z13uhreinstellenv+0x646>
    32e4:	43 c0       	rjmp	.+134    	; 0x336c <_Z13uhreinstellenv+0x6cc>
						{
							rtc.Tag=0;
    32e6:	10 82       	st	Z, r1
							rtc.Monat=0;
    32e8:	f6 01       	movw	r30, r12
    32ea:	10 82       	st	Z, r1
							rtc.Jahr=0;
    32ec:	e4 e5       	ldi	r30, 0x54	; 84
    32ee:	f7 e0       	ldi	r31, 0x07	; 7
    32f0:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    32f2:	8b e0       	ldi	r24, 0x0B	; 11
    32f4:	e7 ed       	ldi	r30, 0xD7	; 215
    32f6:	f2 e0       	ldi	r31, 0x02	; 2
    32f8:	a7 2d       	mov	r26, r7
    32fa:	b8 2d       	mov	r27, r8
    32fc:	01 90       	ld	r0, Z+
    32fe:	0d 92       	st	X+, r0
    3300:	8a 95       	dec	r24
    3302:	e1 f7       	brne	.-8      	; 0x32fc <_Z13uhreinstellenv+0x65c>
    3304:	2d 88       	ldd	r2, Y+21	; 0x15
    3306:	3e 88       	ldd	r3, Y+22	; 0x16
    3308:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    330a:	f1 01       	movw	r30, r2
    330c:	61 91       	ld	r22, Z+
    330e:	1f 01       	movw	r2, r30
    3310:	28 e3       	ldi	r18, 0x38	; 56
    3312:	41 2f       	mov	r20, r17
    3314:	8c e3       	ldi	r24, 0x3C	; 60
    3316:	93 e0       	ldi	r25, 0x03	; 3
    3318:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    331c:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    331e:	1c 33       	cpi	r17, 0x3C	; 60
    3320:	a1 f7       	brne	.-24     	; 0x330a <_Z13uhreinstellenv+0x66a>
    3322:	8a c0       	rjmp	.+276    	; 0x3438 <_Z13uhreinstellenv+0x798>
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
							}
						}
					}
					else{
						if(rtc.Tag>=29){
    3324:	f2 01       	movw	r30, r4
    3326:	80 81       	ld	r24, Z
    3328:	8d 31       	cpi	r24, 0x1D	; 29
    332a:	00 f1       	brcs	.+64     	; 0x336c <_Z13uhreinstellenv+0x6cc>
							rtc.Tag=0;
    332c:	10 82       	st	Z, r1
							rtc.Monat=0;
    332e:	f6 01       	movw	r30, r12
    3330:	10 82       	st	Z, r1
							rtc.Jahr=0;
    3332:	e4 e5       	ldi	r30, 0x54	; 84
    3334:	f7 e0       	ldi	r31, 0x07	; 7
    3336:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    3338:	8b e0       	ldi	r24, 0x0B	; 11
    333a:	e7 ed       	ldi	r30, 0xD7	; 215
    333c:	f2 e0       	ldi	r31, 0x02	; 2
    333e:	a7 2d       	mov	r26, r7
    3340:	b8 2d       	mov	r27, r8
    3342:	01 90       	ld	r0, Z+
    3344:	0d 92       	st	X+, r0
    3346:	8a 95       	dec	r24
    3348:	e1 f7       	brne	.-8      	; 0x3342 <_Z13uhreinstellenv+0x6a2>
    334a:	2d 88       	ldd	r2, Y+21	; 0x15
    334c:	3e 88       	ldd	r3, Y+22	; 0x16
    334e:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3350:	f1 01       	movw	r30, r2
    3352:	61 91       	ld	r22, Z+
    3354:	1f 01       	movw	r2, r30
    3356:	28 e3       	ldi	r18, 0x38	; 56
    3358:	41 2f       	mov	r20, r17
    335a:	8c e3       	ldi	r24, 0x3C	; 60
    335c:	93 e0       	ldi	r25, 0x03	; 3
    335e:	0e 94 2b 06 	call	0xc56	; 0xc56 <_ZN7Display9draw_ASCIEhhh>
    3362:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    3364:	1c 33       	cpi	r17, 0x3C	; 60
    3366:	a1 f7       	brne	.-24     	; 0x3350 <_Z13uhreinstellenv+0x6b0>
    3368:	6c c0       	rjmp	.+216    	; 0x3442 <_Z13uhreinstellenv+0x7a2>
						}
					}
				}
				break;
			default:
				pos++;
    336a:	93 94       	inc	r9
				break;
		}
		pos++;
    336c:	93 94       	inc	r9
	
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
    336e:	fa e0       	ldi	r31, 0x0A	; 10
    3370:	f9 15       	cp	r31, r9
    3372:	08 f0       	brcs	.+2      	; 0x3376 <_Z13uhreinstellenv+0x6d6>
    3374:	d4 cc       	rjmp	.-1624   	; 0x2d1e <_Z13uhreinstellenv+0x7e>
				break;
		}
		pos++;
	}
	
	rtc.Sekunden		= 0;
    3376:	10 92 4f 07 	sts	0x074F, r1
	rtc.HundSekunden	= 0;
    337a:	10 92 50 07 	sts	0x0750, r1
	//speichern der neuen Zeit im EEPROM
	EEPROM_Write(EEMINUTEN,rtc.Minuten);
    337e:	60 91 4e 07 	lds	r22, 0x074E
    3382:	80 e0       	ldi	r24, 0x00	; 0
    3384:	90 e0       	ldi	r25, 0x00	; 0
    3386:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <_Z12EEPROM_Writejh>
	EEPROM_Write(EESTUNDEN,rtc.Stunden);
    338a:	60 91 4d 07 	lds	r22, 0x074D
    338e:	81 e0       	ldi	r24, 0x01	; 1
    3390:	90 e0       	ldi	r25, 0x00	; 0
    3392:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <_Z12EEPROM_Writejh>
	EEPROM_Write(EETAGE,rtc.Tag);
    3396:	60 91 51 07 	lds	r22, 0x0751
    339a:	82 e0       	ldi	r24, 0x02	; 2
    339c:	90 e0       	ldi	r25, 0x00	; 0
    339e:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <_Z12EEPROM_Writejh>
	EEPROM_Write(EEMONAT,rtc.Monat);
    33a2:	60 91 53 07 	lds	r22, 0x0753
    33a6:	83 e0       	ldi	r24, 0x03	; 3
    33a8:	90 e0       	ldi	r25, 0x00	; 0
    33aa:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <_Z12EEPROM_Writejh>
	EEPROM_Write(EEJAHR,rtc.Jahr);
    33ae:	60 91 54 07 	lds	r22, 0x0754
    33b2:	84 e0       	ldi	r24, 0x04	; 4
    33b4:	90 e0       	ldi	r25, 0x00	; 0
    33b6:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <_Z12EEPROM_Writejh>
	
	oled.clearFrame();
    33ba:	8c e3       	ldi	r24, 0x3C	; 60
    33bc:	93 e0       	ldi	r25, 0x03	; 3
    33be:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
	rtc.ausgabedatumneu();
    33c2:	8d e3       	ldi	r24, 0x3D	; 61
    33c4:	97 e0       	ldi	r25, 0x07	; 7
    33c6:	0e 94 66 29 	call	0x52cc	; 0x52cc <_ZN3RTC15ausgabedatumneuEv>
	rtc.ausgabezeitneu();
    33ca:	8d e3       	ldi	r24, 0x3D	; 61
    33cc:	97 e0       	ldi	r25, 0x07	; 7
    33ce:	0e 94 2d 29 	call	0x525a	; 0x525a <_ZN3RTC14ausgabezeitneuEv>
	rtc.RTCstart();
    33d2:	8d e3       	ldi	r24, 0x3D	; 61
    33d4:	97 e0       	ldi	r25, 0x07	; 7
    33d6:	0e 94 46 2a 	call	0x548c	; 0x548c <_ZN3RTC8RTCstartEv>
    33da:	39 c0       	rjmp	.+114    	; 0x344e <_Z13uhreinstellenv+0x7ae>

		oled.sendFrame();
		oled.clearFrame();
		switch (pos) {
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    33dc:	ed e4       	ldi	r30, 0x4D	; 77
    33de:	f7 e0       	ldi	r31, 0x07	; 7
    33e0:	80 83       	st	Z, r24
    33e2:	33 c0       	rjmp	.+102    	; 0x344a <_Z13uhreinstellenv+0x7aa>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    33e4:	99 24       	eor	r9, r9
    33e6:	9a 94       	dec	r9
    33e8:	30 c0       	rjmp	.+96     	; 0x344a <_Z13uhreinstellenv+0x7aa>
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    33ea:	99 24       	eor	r9, r9
    33ec:	9a 94       	dec	r9
    33ee:	2d c0       	rjmp	.+90     	; 0x344a <_Z13uhreinstellenv+0x7aa>
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    33f0:	99 24       	eor	r9, r9
    33f2:	93 94       	inc	r9
    33f4:	2a c0       	rjmp	.+84     	; 0x344a <_Z13uhreinstellenv+0x7aa>
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    33f6:	99 24       	eor	r9, r9
    33f8:	93 94       	inc	r9
    33fa:	27 c0       	rjmp	.+78     	; 0x344a <_Z13uhreinstellenv+0x7aa>
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    33fc:	0f 2e       	mov	r0, r31
    33fe:	f3 e0       	ldi	r31, 0x03	; 3
    3400:	9f 2e       	mov	r9, r31
    3402:	f0 2d       	mov	r31, r0
    3404:	22 c0       	rjmp	.+68     	; 0x344a <_Z13uhreinstellenv+0x7aa>
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    3406:	0f 2e       	mov	r0, r31
    3408:	f3 e0       	ldi	r31, 0x03	; 3
    340a:	9f 2e       	mov	r9, r31
    340c:	f0 2d       	mov	r31, r0
    340e:	1d c0       	rjmp	.+58     	; 0x344a <_Z13uhreinstellenv+0x7aa>
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    3410:	0f 2e       	mov	r0, r31
    3412:	f5 e0       	ldi	r31, 0x05	; 5
    3414:	9f 2e       	mov	r9, r31
    3416:	f0 2d       	mov	r31, r0
    3418:	18 c0       	rjmp	.+48     	; 0x344a <_Z13uhreinstellenv+0x7aa>
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    341a:	0f 2e       	mov	r0, r31
    341c:	f3 e0       	ldi	r31, 0x03	; 3
    341e:	9f 2e       	mov	r9, r31
    3420:	f0 2d       	mov	r31, r0
    3422:	13 c0       	rjmp	.+38     	; 0x344a <_Z13uhreinstellenv+0x7aa>
				}
				else if(rtc.Monat==2){
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    3424:	0f 2e       	mov	r0, r31
    3426:	f3 e0       	ldi	r31, 0x03	; 3
    3428:	9f 2e       	mov	r9, r31
    342a:	f0 2d       	mov	r31, r0
    342c:	0e c0       	rjmp	.+28     	; 0x344a <_Z13uhreinstellenv+0x7aa>
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    342e:	0f 2e       	mov	r0, r31
    3430:	f7 e0       	ldi	r31, 0x07	; 7
    3432:	9f 2e       	mov	r9, r31
    3434:	f0 2d       	mov	r31, r0
    3436:	09 c0       	rjmp	.+18     	; 0x344a <_Z13uhreinstellenv+0x7aa>
						if (rtc.Tag>=30)
						{
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    3438:	0f 2e       	mov	r0, r31
    343a:	f3 e0       	ldi	r31, 0x03	; 3
    343c:	9f 2e       	mov	r9, r31
    343e:	f0 2d       	mov	r31, r0
    3440:	04 c0       	rjmp	.+8      	; 0x344a <_Z13uhreinstellenv+0x7aa>
					else{
						if(rtc.Tag>=29){
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    3442:	0f 2e       	mov	r0, r31
    3444:	f3 e0       	ldi	r31, 0x03	; 3
    3446:	9f 2e       	mov	r9, r31
    3448:	f0 2d       	mov	r31, r0
				break;
			default:
				pos++;
				break;
		}
		pos++;
    344a:	93 94       	inc	r9
    344c:	68 cc       	rjmp	.-1840   	; 0x2d1e <_Z13uhreinstellenv+0x7e>
	
	oled.clearFrame();
	rtc.ausgabedatumneu();
	rtc.ausgabezeitneu();
	rtc.RTCstart();
}
    344e:	66 96       	adiw	r28, 0x16	; 22
    3450:	0f b6       	in	r0, 0x3f	; 63
    3452:	f8 94       	cli
    3454:	de bf       	out	0x3e, r29	; 62
    3456:	0f be       	out	0x3f, r0	; 63
    3458:	cd bf       	out	0x3d, r28	; 61
    345a:	df 91       	pop	r29
    345c:	cf 91       	pop	r28
    345e:	1f 91       	pop	r17
    3460:	0f 91       	pop	r16
    3462:	ff 90       	pop	r15
    3464:	ef 90       	pop	r14
    3466:	df 90       	pop	r13
    3468:	cf 90       	pop	r12
    346a:	bf 90       	pop	r11
    346c:	af 90       	pop	r10
    346e:	9f 90       	pop	r9
    3470:	8f 90       	pop	r8
    3472:	7f 90       	pop	r7
    3474:	6f 90       	pop	r6
    3476:	5f 90       	pop	r5
    3478:	4f 90       	pop	r4
    347a:	3f 90       	pop	r3
    347c:	2f 90       	pop	r2
    347e:	08 95       	ret

00003480 <__vector_11>:
#include "EEPROM.h"
//Ausgelagerte Sammlung der einzelnen Seitenlayouts
uint8_t FPS;
#include "Seiten.h"

ISR(TIMER2_OVF_vect){	//Vektor fuer die RTC
    3480:	1f 92       	push	r1
    3482:	0f 92       	push	r0
    3484:	0f b6       	in	r0, 0x3f	; 63
    3486:	0f 92       	push	r0
    3488:	11 24       	eor	r1, r1
    348a:	0b b6       	in	r0, 0x3b	; 59
    348c:	0f 92       	push	r0
    348e:	8f 93       	push	r24
    3490:	ef 93       	push	r30
    3492:	ff 93       	push	r31
	//TCNT2=TIMER2RTCTIME;
	rtc.Sekunden++;
    3494:	ef e4       	ldi	r30, 0x4F	; 79
    3496:	f7 e0       	ldi	r31, 0x07	; 7
    3498:	80 81       	ld	r24, Z
    349a:	8f 5f       	subi	r24, 0xFF	; 255
    349c:	80 83       	st	Z, r24
	rtc.interupts|= (1<<sekundeninterupt);
    349e:	e5 e5       	ldi	r30, 0x55	; 85
    34a0:	f7 e0       	ldi	r31, 0x07	; 7
    34a2:	80 81       	ld	r24, Z
    34a4:	82 60       	ori	r24, 0x02	; 2
    34a6:	80 83       	st	Z, r24
}
    34a8:	ff 91       	pop	r31
    34aa:	ef 91       	pop	r30
    34ac:	8f 91       	pop	r24
    34ae:	0f 90       	pop	r0
    34b0:	0b be       	out	0x3b, r0	; 59
    34b2:	0f 90       	pop	r0
    34b4:	0f be       	out	0x3f, r0	; 63
    34b6:	0f 90       	pop	r0
    34b8:	1f 90       	pop	r1
    34ba:	18 95       	reti

000034bc <__vector_13>:

ISR(TIMER1_COMPA_vect){
    34bc:	1f 92       	push	r1
    34be:	0f 92       	push	r0
    34c0:	0f b6       	in	r0, 0x3f	; 63
    34c2:	0f 92       	push	r0
    34c4:	11 24       	eor	r1, r1
    34c6:	8f 93       	push	r24
	statusreg |= (1<<updaterate);
    34c8:	80 91 0e 03 	lds	r24, 0x030E
    34cc:	81 60       	ori	r24, 0x01	; 1
    34ce:	80 93 0e 03 	sts	0x030E, r24
}
    34d2:	8f 91       	pop	r24
    34d4:	0f 90       	pop	r0
    34d6:	0f be       	out	0x3f, r0	; 63
    34d8:	0f 90       	pop	r0
    34da:	1f 90       	pop	r1
    34dc:	18 95       	reti

000034de <_Z15geschwindigkeitf>:

double geschw;
double strecke;
double maxgeschw;
uint32_t Fahrtzeit;
void geschwindigkeit(float durch){
    34de:	cf 92       	push	r12
    34e0:	df 92       	push	r13
    34e2:	ef 92       	push	r14
    34e4:	ff 92       	push	r15
    34e6:	cf 93       	push	r28
    34e8:	df 93       	push	r29
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
    34ea:	e4 e8       	ldi	r30, 0x84	; 132
    34ec:	f0 e0       	ldi	r31, 0x00	; 0
    34ee:	c0 81       	ld	r28, Z
    34f0:	d1 81       	ldd	r29, Z+1	; 0x01
	TCNT1 = 0;
    34f2:	11 82       	std	Z+1, r1	; 0x01
    34f4:	10 82       	st	Z, r1
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
    34f6:	2b ed       	ldi	r18, 0xDB	; 219
    34f8:	3f e0       	ldi	r19, 0x0F	; 15
    34fa:	49 e4       	ldi	r20, 0x49	; 73
    34fc:	50 e4       	ldi	r21, 0x40	; 64
    34fe:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    3502:	26 e6       	ldi	r18, 0x66	; 102
    3504:	36 e6       	ldi	r19, 0x66	; 102
    3506:	46 e6       	ldi	r20, 0x66	; 102
    3508:	50 e4       	ldi	r21, 0x40	; 64
    350a:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    350e:	6b 01       	movw	r12, r22
    3510:	7c 01       	movw	r14, r24
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
	TCNT1 = 0;
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
    3512:	be 01       	movw	r22, r28
    3514:	80 e0       	ldi	r24, 0x00	; 0
    3516:	90 e0       	ldi	r25, 0x00	; 0
    3518:	0e 94 0d 2c 	call	0x581a	; 0x581a <__floatunsisf>
    351c:	20 e0       	ldi	r18, 0x00	; 0
    351e:	30 e0       	ldi	r19, 0x00	; 0
    3520:	40 e0       	ldi	r20, 0x00	; 0
    3522:	5e e3       	ldi	r21, 0x3E	; 62
    3524:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    3528:	2d eb       	ldi	r18, 0xBD	; 189
    352a:	37 e3       	ldi	r19, 0x37	; 55
    352c:	46 e8       	ldi	r20, 0x86	; 134
    352e:	5a e3       	ldi	r21, 0x3A	; 58
    3530:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    3534:	2a e0       	ldi	r18, 0x0A	; 10
    3536:	37 ed       	ldi	r19, 0xD7	; 215
    3538:	43 ea       	ldi	r20, 0xA3	; 163
    353a:	5b e3       	ldi	r21, 0x3B	; 59
    353c:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    3540:	9b 01       	movw	r18, r22
    3542:	ac 01       	movw	r20, r24
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
    3544:	c7 01       	movw	r24, r14
    3546:	b6 01       	movw	r22, r12
    3548:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
    354c:	20 91 08 03 	lds	r18, 0x0308
    3550:	30 91 09 03 	lds	r19, 0x0309
    3554:	40 91 0a 03 	lds	r20, 0x030A
    3558:	50 91 0b 03 	lds	r21, 0x030B
    355c:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
	geschw /= 2.0;
    3560:	20 e0       	ldi	r18, 0x00	; 0
    3562:	30 e0       	ldi	r19, 0x00	; 0
    3564:	40 e0       	ldi	r20, 0x00	; 0
    3566:	5f e3       	ldi	r21, 0x3F	; 63
    3568:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__mulsf3>
    356c:	6b 01       	movw	r12, r22
    356e:	7c 01       	movw	r14, r24
	if (geschw >=160)
    3570:	20 e0       	ldi	r18, 0x00	; 0
    3572:	30 e0       	ldi	r19, 0x00	; 0
    3574:	40 e2       	ldi	r20, 0x20	; 32
    3576:	53 e4       	ldi	r21, 0x43	; 67
    3578:	0e 94 1d 2d 	call	0x5a3a	; 0x5a3a <__gesf2>
    357c:	88 23       	and	r24, r24
    357e:	4c f4       	brge	.+18     	; 0x3592 <_Z15geschwindigkeitf+0xb4>
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
	geschw /= 2.0;
    3580:	c0 92 08 03 	sts	0x0308, r12
    3584:	d0 92 09 03 	sts	0x0309, r13
    3588:	e0 92 0a 03 	sts	0x030A, r14
    358c:	f0 92 0b 03 	sts	0x030B, r15
    3590:	08 c0       	rjmp	.+16     	; 0x35a2 <_Z15geschwindigkeitf+0xc4>
	if (geschw >=160)
	{
		geschw=0;
    3592:	10 92 08 03 	sts	0x0308, r1
    3596:	10 92 09 03 	sts	0x0309, r1
    359a:	10 92 0a 03 	sts	0x030A, r1
    359e:	10 92 0b 03 	sts	0x030B, r1
	}
}
    35a2:	df 91       	pop	r29
    35a4:	cf 91       	pop	r28
    35a6:	ff 90       	pop	r15
    35a8:	ef 90       	pop	r14
    35aa:	df 90       	pop	r13
    35ac:	cf 90       	pop	r12
    35ae:	08 95       	ret

000035b0 <_Z13reed_debouncePVhh>:

uint8_t reed_debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( (*port & (1 << pin)) )
    35b0:	fc 01       	movw	r30, r24
    35b2:	20 81       	ld	r18, Z
    35b4:	30 e0       	ldi	r19, 0x00	; 0
    35b6:	06 2e       	mov	r0, r22
    35b8:	02 c0       	rjmp	.+4      	; 0x35be <_Z13reed_debouncePVhh+0xe>
    35ba:	35 95       	asr	r19
    35bc:	27 95       	ror	r18
    35be:	0a 94       	dec	r0
    35c0:	e2 f7       	brpl	.-8      	; 0x35ba <_Z13reed_debouncePVhh+0xa>
    35c2:	20 ff       	sbrs	r18, 0
    35c4:	17 c0       	rjmp	.+46     	; 0x35f4 <_Z13reed_debouncePVhh+0x44>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    35c6:	ef e0       	ldi	r30, 0x0F	; 15
    35c8:	f7 e2       	ldi	r31, 0x27	; 39
    35ca:	31 97       	sbiw	r30, 0x01	; 1
    35cc:	f1 f7       	brne	.-4      	; 0x35ca <_Z13reed_debouncePVhh+0x1a>
    35ce:	00 c0       	rjmp	.+0      	; 0x35d0 <_Z13reed_debouncePVhh+0x20>
    35d0:	00 00       	nop
	{
		/* Pin wurde auf Masse gezogen, ms warten   */
		_delay_ms(REEDMS);
		if ( !(*port & (1 << pin)) )
    35d2:	fc 01       	movw	r30, r24
    35d4:	80 81       	ld	r24, Z
    35d6:	90 e0       	ldi	r25, 0x00	; 0
    35d8:	9c 01       	movw	r18, r24
    35da:	02 c0       	rjmp	.+4      	; 0x35e0 <_Z13reed_debouncePVhh+0x30>
    35dc:	35 95       	asr	r19
    35de:	27 95       	ror	r18
    35e0:	6a 95       	dec	r22
    35e2:	e2 f7       	brpl	.-8      	; 0x35dc <_Z13reed_debouncePVhh+0x2c>
    35e4:	20 fd       	sbrc	r18, 0
    35e6:	08 c0       	rjmp	.+16     	; 0x35f8 <_Z13reed_debouncePVhh+0x48>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    35e8:	32 e0       	ldi	r19, 0x02	; 2
    35ea:	3a 95       	dec	r19
    35ec:	f1 f7       	brne	.-4      	; 0x35ea <_Z13reed_debouncePVhh+0x3a>
    35ee:	00 c0       	rjmp	.+0      	; 0x35f0 <_Z13reed_debouncePVhh+0x40>
		{
			/* Anwender Zeit zum Loslassen des Tasters geben */
			_delay_us(1);
			return 1;
    35f0:	81 e0       	ldi	r24, 0x01	; 1
    35f2:	08 95       	ret
		}
	}
	return 0;
    35f4:	80 e0       	ldi	r24, 0x00	; 0
    35f6:	08 95       	ret
    35f8:	80 e0       	ldi	r24, 0x00	; 0
}
    35fa:	08 95       	ret

000035fc <_Z9inittimerh>:
					= 166667
		=> N=64 bei OCR1A=2604-1 bei f=24
		=> CS11 und CS10
*/
void inittimer(uint8_t stat){
	TCNT1 = 0;
    35fc:	10 92 85 00 	sts	0x0085, r1
    3600:	10 92 84 00 	sts	0x0084, r1
	if (stat==1)
    3604:	81 30       	cpi	r24, 0x01	; 1
    3606:	31 f4       	brne	.+12     	; 0x3614 <_Z9inittimerh+0x18>
	{
		TIMSK1 = 0;
    3608:	10 92 6f 00 	sts	0x006F, r1
		TCCR1B = ((1<<CS12) | (1<<CS10));
    360c:	85 e0       	ldi	r24, 0x05	; 5
    360e:	80 93 81 00 	sts	0x0081, r24
    3612:	08 95       	ret
	}
	else if (stat==2)
    3614:	82 30       	cpi	r24, 0x02	; 2
    3616:	61 f4       	brne	.+24     	; 0x3630 <_Z9inittimerh+0x34>
	{
		OCR1A = 2603*2;
    3618:	86 e5       	ldi	r24, 0x56	; 86
    361a:	94 e1       	ldi	r25, 0x14	; 20
    361c:	90 93 89 00 	sts	0x0089, r25
    3620:	80 93 88 00 	sts	0x0088, r24
		TCCR1B = (1<<WGM12)|(1<<CS11)|(1<<CS10);
    3624:	8b e0       	ldi	r24, 0x0B	; 11
    3626:	80 93 81 00 	sts	0x0081, r24
		TIMSK1 = (1<<OCIE1A);
    362a:	82 e0       	ldi	r24, 0x02	; 2
    362c:	80 93 6f 00 	sts	0x006F, r24
    3630:	08 95       	ret

00003632 <_Z15initialisierungv>:
    }
}

void initialisierung(){
	//nullen der Flagregister
	rtc.interupts=0;
    3632:	10 92 55 07 	sts	0x0755, r1
	anzeige=0;
    3636:	10 92 10 03 	sts	0x0310, r1
    363a:	10 92 0f 03 	sts	0x030F, r1
	statusreg=0;
    363e:	10 92 0e 03 	sts	0x030E, r1
	pos=0;
    3642:	10 92 0d 03 	sts	0x030D, r1
	FPS=0;
    3646:	10 92 0c 03 	sts	0x030C, r1
	//initialisieren des Zaehler fuer die Winkelgeschw sowie den Timer
	geschw=0;
    364a:	10 92 08 03 	sts	0x0308, r1
    364e:	10 92 09 03 	sts	0x0309, r1
    3652:	10 92 0a 03 	sts	0x030A, r1
    3656:	10 92 0b 03 	sts	0x030B, r1
	strecke = 0;
    365a:	10 92 04 03 	sts	0x0304, r1
    365e:	10 92 05 03 	sts	0x0305, r1
    3662:	10 92 06 03 	sts	0x0306, r1
    3666:	10 92 07 03 	sts	0x0307, r1
	maxgeschw = 0;
    366a:	10 92 00 03 	sts	0x0300, r1
    366e:	10 92 01 03 	sts	0x0301, r1
    3672:	10 92 02 03 	sts	0x0302, r1
    3676:	10 92 03 03 	sts	0x0303, r1
	Fahrtzeit = 0;
    367a:	10 92 fc 02 	sts	0x02FC, r1
    367e:	10 92 fd 02 	sts	0x02FD, r1
    3682:	10 92 fe 02 	sts	0x02FE, r1
    3686:	10 92 ff 02 	sts	0x02FF, r1
	inittimer(0);
    368a:	80 e0       	ldi	r24, 0x00	; 0
    368c:	b7 df       	rcall	.-146    	; 0x35fc <_Z9inittimerh>
	//Tastatur inm Contruktor initialisiert
	//Eingang fuer den Reedkontak schalten mit internem Pullup
	DDRA |= ((1<<PORTA6));
    368e:	0e 9a       	sbi	0x01, 6	; 1
	PORTA |= (1<<PORTA6);
    3690:	16 9a       	sbi	0x02, 6	; 2
	//Display
	oled.InitializeDisplay();
    3692:	8c e3       	ldi	r24, 0x3C	; 60
    3694:	93 e0       	ldi	r25, 0x03	; 3
    3696:	0e 94 ff 02 	call	0x5fe	; 0x5fe <_ZN7Display17InitializeDisplayEv>
	//initialisierung wird im konstruktor vorgenommen
	oled.clearFrame();
    369a:	8c e3       	ldi	r24, 0x3C	; 60
    369c:	93 e0       	ldi	r25, 0x03	; 3
    369e:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
	//HMC5883L initialisieren
	//kompass.initialize_HMC5883L();
	//initialisierung wird im Konstruktor erledigt
	
	//ADC Initialisieren auf CH0
	ADMUX = (1<<REFS0);
    36a2:	80 e4       	ldi	r24, 0x40	; 64
    36a4:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
    36a8:	ea e7       	ldi	r30, 0x7A	; 122
    36aa:	f0 e0       	ldi	r31, 0x00	; 0
    36ac:	83 e0       	ldi	r24, 0x03	; 3
    36ae:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN);
    36b0:	80 81       	ld	r24, Z
    36b2:	80 68       	ori	r24, 0x80	; 128
    36b4:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
    36b6:	80 81       	ld	r24, Z
    36b8:	80 64       	ori	r24, 0x40	; 64
    36ba:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC) ) {}
    36bc:	80 81       	ld	r24, Z
    36be:	86 fd       	sbrc	r24, 6
    36c0:	fd cf       	rjmp	.-6      	; 0x36bc <_Z15initialisierungv+0x8a>
	(void) ADCW;
    36c2:	80 91 78 00 	lds	r24, 0x0078
    36c6:	90 91 79 00 	lds	r25, 0x0079
	//Wilkommensanzeige
	willkommenpage();
    36ca:	0e 94 fe 09 	call	0x13fc	; 0x13fc <_Z14willkommenpagev>
	//Uhreinstellungen
	//uhreinstellen();
	//*************************************************
	//Nur Test, damit es schneller geht beim Start
	rtc.Sekunden= 0;
    36ce:	10 92 4f 07 	sts	0x074F, r1
	rtc.Minuten	= EEPROM_Read(EEMINUTEN);
    36d2:	80 e0       	ldi	r24, 0x00	; 0
    36d4:	90 e0       	ldi	r25, 0x00	; 0
    36d6:	0e 94 f5 09 	call	0x13ea	; 0x13ea <_Z11EEPROM_Readj>
    36da:	80 93 4e 07 	sts	0x074E, r24
	rtc.Stunden	= EEPROM_Read(EESTUNDEN);
    36de:	81 e0       	ldi	r24, 0x01	; 1
    36e0:	90 e0       	ldi	r25, 0x00	; 0
    36e2:	0e 94 f5 09 	call	0x13ea	; 0x13ea <_Z11EEPROM_Readj>
    36e6:	80 93 4d 07 	sts	0x074D, r24
	rtc.Tag		= EEPROM_Read(EETAGE);
    36ea:	82 e0       	ldi	r24, 0x02	; 2
    36ec:	90 e0       	ldi	r25, 0x00	; 0
    36ee:	0e 94 f5 09 	call	0x13ea	; 0x13ea <_Z11EEPROM_Readj>
    36f2:	80 93 51 07 	sts	0x0751, r24
	rtc.Monat	= EEPROM_Read(EEMONAT);
    36f6:	83 e0       	ldi	r24, 0x03	; 3
    36f8:	90 e0       	ldi	r25, 0x00	; 0
    36fa:	0e 94 f5 09 	call	0x13ea	; 0x13ea <_Z11EEPROM_Readj>
    36fe:	80 93 53 07 	sts	0x0753, r24
	rtc.Jahr	= EEPROM_Read(EEJAHR);
    3702:	84 e0       	ldi	r24, 0x04	; 4
    3704:	90 e0       	ldi	r25, 0x00	; 0
    3706:	0e 94 f5 09 	call	0x13ea	; 0x13ea <_Z11EEPROM_Readj>
    370a:	80 93 54 07 	sts	0x0754, r24
	rtc.ausgabedatumneu();
    370e:	8d e3       	ldi	r24, 0x3D	; 61
    3710:	97 e0       	ldi	r25, 0x07	; 7
    3712:	0e 94 66 29 	call	0x52cc	; 0x52cc <_ZN3RTC15ausgabedatumneuEv>
	//rtc.dummyeinst();
	//*********************************
	rtc.RTCstart();
    3716:	8d e3       	ldi	r24, 0x3D	; 61
    3718:	97 e0       	ldi	r25, 0x07	; 7
    371a:	0e 94 46 2a 	call	0x548c	; 0x548c <_ZN3RTC8RTCstartEv>
	//ausgabe starten
	rtc.interupts|=(0<<minuteninterupt)|(0<<sekundeninterupt);
	inittimer(2);
    371e:	82 e0       	ldi	r24, 0x02	; 2
    3720:	6d df       	rcall	.-294    	; 0x35fc <_Z9inittimerh>
	anzeige|=(1<<Uhrflag);
    3722:	80 91 0f 03 	lds	r24, 0x030F
    3726:	90 91 10 03 	lds	r25, 0x0310
    372a:	82 60       	ori	r24, 0x02	; 2
    372c:	90 93 10 03 	sts	0x0310, r25
    3730:	80 93 0f 03 	sts	0x030F, r24
	sei();
    3734:	78 94       	sei
    3736:	08 95       	ret

00003738 <_Z19maininterupthandlerv>:
	//interupt dierekt aus der rtc
	//if((rtc.interupts & (1<<hundinterupt))){
	//rtc.zeit();
	//rtc.interupts&=~(1<<hundinterupt);
	//}
	if ((anzeige&(1<<Fahradflag)))
    3738:	80 91 0f 03 	lds	r24, 0x030F
    373c:	80 ff       	sbrs	r24, 0
    373e:	1f c0       	rjmp	.+62     	; 0x377e <_Z19maininterupthandlerv+0x46>
	{
		//debounce Funktion fuer den Reedswitch
		if (reed_debounce(&PINA,PINA7))
    3740:	67 e0       	ldi	r22, 0x07	; 7
    3742:	80 e2       	ldi	r24, 0x20	; 32
    3744:	90 e0       	ldi	r25, 0x00	; 0
    3746:	34 df       	rcall	.-408    	; 0x35b0 <_Z13reed_debouncePVhh>
    3748:	88 23       	and	r24, r24
    374a:	31 f0       	breq	.+12     	; 0x3758 <_Z19maininterupthandlerv+0x20>
		{
			//Durchmesser ist 28 Zoll
			geschwindigkeit(28.0*2.54/100.0);
    374c:	63 e3       	ldi	r22, 0x33	; 51
    374e:	71 e1       	ldi	r23, 0x11	; 17
    3750:	86 e3       	ldi	r24, 0x36	; 54
    3752:	9f e3       	ldi	r25, 0x3F	; 63
    3754:	c4 de       	rcall	.-632    	; 0x34de <_Z15geschwindigkeitf>
    3756:	13 c0       	rjmp	.+38     	; 0x377e <_Z19maininterupthandlerv+0x46>
		}
		//Hier mit werden geschwindigkeiten, die kleiner als 2.6km/h betragen gefiltert
		//Somit wird die letzte Geschwindigkeit nach 3 Sekunden geloescht
		//Das ist noch nicht die beste Variante
		else if (TCNT1>23437)
    3758:	80 91 84 00 	lds	r24, 0x0084
    375c:	90 91 85 00 	lds	r25, 0x0085
    3760:	8e 38       	cpi	r24, 0x8E	; 142
    3762:	9b 45       	sbci	r25, 0x5B	; 91
    3764:	60 f0       	brcs	.+24     	; 0x377e <_Z19maininterupthandlerv+0x46>
		{
			TCNT1=0;
    3766:	10 92 85 00 	sts	0x0085, r1
    376a:	10 92 84 00 	sts	0x0084, r1
			geschw=0;
    376e:	10 92 08 03 	sts	0x0308, r1
    3772:	10 92 09 03 	sts	0x0309, r1
    3776:	10 92 0a 03 	sts	0x030A, r1
    377a:	10 92 0b 03 	sts	0x030B, r1
		}
	}
	if ((rtc.interupts&(1<<Weckeractiv)))
    377e:	20 91 55 07 	lds	r18, 0x0755
    3782:	82 2f       	mov	r24, r18
    3784:	88 71       	andi	r24, 0x18	; 24
	{
		if ((rtc.interupts&(1<<Weckerein)))
    3786:	88 31       	cpi	r24, 0x18	; 24
    3788:	61 f4       	brne	.+24     	; 0x37a2 <_Z19maininterupthandlerv+0x6a>
		{
			anzeige |= (1<<blinkflag) | (1<<refreshdisplay);
    378a:	80 91 0f 03 	lds	r24, 0x030F
    378e:	90 91 10 03 	lds	r25, 0x0310
    3792:	90 6c       	ori	r25, 0xC0	; 192
    3794:	90 93 10 03 	sts	0x0310, r25
    3798:	80 93 0f 03 	sts	0x030F, r24
			rtc.interupts &= ~(1<<Weckerein);
    379c:	27 7f       	andi	r18, 0xF7	; 247
    379e:	20 93 55 07 	sts	0x0755, r18
    37a2:	08 95       	ret

000037a4 <_Z14anzeigehandlerv>:
		}
	}
}

void anzeigehandler(){
    37a4:	4f 92       	push	r4
    37a6:	5f 92       	push	r5
    37a8:	6f 92       	push	r6
    37aa:	7f 92       	push	r7
    37ac:	af 92       	push	r10
    37ae:	bf 92       	push	r11
    37b0:	cf 92       	push	r12
    37b2:	df 92       	push	r13
    37b4:	ef 92       	push	r14
    37b6:	ff 92       	push	r15
    37b8:	0f 93       	push	r16
    37ba:	1f 93       	push	r17
    37bc:	cf 93       	push	r28
    37be:	df 93       	push	r29
	//Handler fuer 1Hz Flag
	if ((statusreg&(1<<updaterate)))
    37c0:	80 91 0e 03 	lds	r24, 0x030E
    37c4:	80 ff       	sbrs	r24, 0
    37c6:	92 c0       	rjmp	.+292    	; 0x38ec <_Z14anzeigehandlerv+0x148>
	{
		FPS++;
    37c8:	80 91 0c 03 	lds	r24, 0x030C
    37cc:	8f 5f       	subi	r24, 0xFF	; 255
    37ce:	80 93 0c 03 	sts	0x030C, r24
		if ((anzeige&(1<<Kompasflag)))
    37d2:	80 91 0f 03 	lds	r24, 0x030F
    37d6:	90 91 10 03 	lds	r25, 0x0310
    37da:	87 ff       	sbrs	r24, 7
    37dc:	24 c0       	rjmp	.+72     	; 0x3826 <_Z14anzeigehandlerv+0x82>
		{
			Accelerometer.readacc();
    37de:	87 e1       	ldi	r24, 0x17	; 23
    37e0:	93 e0       	ldi	r25, 0x03	; 3
    37e2:	0e 94 7d 26 	call	0x4cfa	; 0x4cfa <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    37e6:	00 91 23 03 	lds	r16, 0x0323
    37ea:	10 91 24 03 	lds	r17, 0x0324
    37ee:	20 91 25 03 	lds	r18, 0x0325
    37f2:	30 91 26 03 	lds	r19, 0x0326
    37f6:	40 91 1f 03 	lds	r20, 0x031F
    37fa:	50 91 20 03 	lds	r21, 0x0320
    37fe:	60 91 21 03 	lds	r22, 0x0321
    3802:	70 91 22 03 	lds	r23, 0x0322
    3806:	8c e5       	ldi	r24, 0x5C	; 92
    3808:	97 e0       	ldi	r25, 0x07	; 7
    380a:	0e 94 42 25 	call	0x4a84	; 0x4a84 <_ZN7Kompass5angleEdd>
    380e:	0e 94 6e 12 	call	0x24dc	; 0x24dc <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    3812:	80 91 0f 03 	lds	r24, 0x030F
    3816:	90 91 10 03 	lds	r25, 0x0310
    381a:	90 68       	ori	r25, 0x80	; 128
    381c:	90 93 10 03 	sts	0x0310, r25
    3820:	80 93 0f 03 	sts	0x030F, r24
    3824:	5e c0       	rjmp	.+188    	; 0x38e2 <_Z14anzeigehandlerv+0x13e>
		}
		else if ((anzeige&(1<<Fahradflag)))
    3826:	80 ff       	sbrs	r24, 0
    3828:	50 c0       	rjmp	.+160    	; 0x38ca <_Z14anzeigehandlerv+0x126>
		{
			Accelerometer.readacc();
    382a:	87 e1       	ldi	r24, 0x17	; 23
    382c:	93 e0       	ldi	r25, 0x03	; 3
    382e:	0e 94 7d 26 	call	0x4cfa	; 0x4cfa <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    3832:	e0 90 fc 02 	lds	r14, 0x02FC
    3836:	f0 90 fd 02 	lds	r15, 0x02FD
    383a:	c0 91 fe 02 	lds	r28, 0x02FE
    383e:	d0 91 ff 02 	lds	r29, 0x02FF
    3842:	a0 90 00 03 	lds	r10, 0x0300
    3846:	b0 90 01 03 	lds	r11, 0x0301
    384a:	c0 90 02 03 	lds	r12, 0x0302
    384e:	d0 90 03 03 	lds	r13, 0x0303
    3852:	40 90 04 03 	lds	r4, 0x0304
    3856:	50 90 05 03 	lds	r5, 0x0305
    385a:	60 90 06 03 	lds	r6, 0x0306
    385e:	70 90 07 03 	lds	r7, 0x0307
    3862:	00 91 23 03 	lds	r16, 0x0323
    3866:	10 91 24 03 	lds	r17, 0x0324
    386a:	20 91 25 03 	lds	r18, 0x0325
    386e:	30 91 26 03 	lds	r19, 0x0326
    3872:	40 91 1f 03 	lds	r20, 0x031F
    3876:	50 91 20 03 	lds	r21, 0x0320
    387a:	60 91 21 03 	lds	r22, 0x0321
    387e:	70 91 22 03 	lds	r23, 0x0322
    3882:	8c e5       	ldi	r24, 0x5C	; 92
    3884:	97 e0       	ldi	r25, 0x07	; 7
    3886:	0e 94 42 25 	call	0x4a84	; 0x4a84 <_ZN7Kompass5angleEdd>
    388a:	9b 01       	movw	r18, r22
    388c:	ac 01       	movw	r20, r24
    388e:	60 91 08 03 	lds	r22, 0x0308
    3892:	70 91 09 03 	lds	r23, 0x0309
    3896:	80 91 0a 03 	lds	r24, 0x030A
    389a:	90 91 0b 03 	lds	r25, 0x030B
    389e:	df 93       	push	r29
    38a0:	cf 93       	push	r28
    38a2:	ff 92       	push	r15
    38a4:	ef 92       	push	r14
    38a6:	83 01       	movw	r16, r6
    38a8:	72 01       	movw	r14, r4
    38aa:	0e 94 1a 10 	call	0x2034	; 0x2034 <_Z12fahradschirmddddm>
			//fahradschirm(geschw,kompass.angle(0,0),strecke,maxgeschw, Fahrtzeit);
			anzeige|=(1<<refreshdisplay);
    38ae:	80 91 0f 03 	lds	r24, 0x030F
    38b2:	90 91 10 03 	lds	r25, 0x0310
    38b6:	90 68       	ori	r25, 0x80	; 128
    38b8:	90 93 10 03 	sts	0x0310, r25
    38bc:	80 93 0f 03 	sts	0x030F, r24
    38c0:	0f 90       	pop	r0
    38c2:	0f 90       	pop	r0
    38c4:	0f 90       	pop	r0
    38c6:	0f 90       	pop	r0
    38c8:	0c c0       	rjmp	.+24     	; 0x38e2 <_Z14anzeigehandlerv+0x13e>
		}
		else if ((anzeige&(1<<Wanderflag)))
    38ca:	93 ff       	sbrs	r25, 3
    38cc:	0a c0       	rjmp	.+20     	; 0x38e2 <_Z14anzeigehandlerv+0x13e>
		{
			Wanderseite();
    38ce:	63 d8       	rcall	.-3898   	; 0x2996 <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    38d0:	80 91 0f 03 	lds	r24, 0x030F
    38d4:	90 91 10 03 	lds	r25, 0x0310
    38d8:	90 68       	ori	r25, 0x80	; 128
    38da:	90 93 10 03 	sts	0x0310, r25
    38de:	80 93 0f 03 	sts	0x030F, r24
		}
		statusreg &= ~(1<<updaterate);
    38e2:	80 91 0e 03 	lds	r24, 0x030E
    38e6:	8e 7f       	andi	r24, 0xFE	; 254
    38e8:	80 93 0e 03 	sts	0x030E, r24
	}
	if ((rtc.interupts & (1<<sekundeninterupt)))
    38ec:	80 91 55 07 	lds	r24, 0x0755
    38f0:	81 ff       	sbrs	r24, 1
    38f2:	94 c1       	rjmp	.+808    	; 0x3c1c <_Z14anzeigehandlerv+0x478>
	{
		rtc.zeit();
    38f4:	8d e3       	ldi	r24, 0x3D	; 61
    38f6:	97 e0       	ldi	r25, 0x07	; 7
    38f8:	0e 94 0c 2a 	call	0x5418	; 0x5418 <_ZN3RTC4zeitEv>
		//Handler fuer die Anzeige der Seiten
		//Die einzelnen Funktionen beschreiben nur den Framebuffer und nicht dierekt das Display
		if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))
    38fc:	80 91 0f 03 	lds	r24, 0x030F
    3900:	90 91 10 03 	lds	r25, 0x0310
    3904:	9c 01       	movw	r18, r24
    3906:	22 70       	andi	r18, 0x02	; 2
    3908:	30 72       	andi	r19, 0x20	; 32
    390a:	22 30       	cpi	r18, 0x02	; 2
    390c:	30 42       	sbci	r19, 0x20	; 32
    390e:	61 f4       	brne	.+24     	; 0x3928 <_Z14anzeigehandlerv+0x184>
		{
			menue_uhr();
    3910:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <_Z9menue_uhrv>
			anzeige|=(1<<refreshdisplay);
    3914:	80 91 0f 03 	lds	r24, 0x030F
    3918:	90 91 10 03 	lds	r25, 0x0310
    391c:	90 68       	ori	r25, 0x80	; 128
    391e:	90 93 10 03 	sts	0x0310, r25
    3922:	80 93 0f 03 	sts	0x030F, r24
    3926:	5e c1       	rjmp	.+700    	; 0x3be4 <_Z14anzeigehandlerv+0x440>
    3928:	9c 01       	movw	r18, r24
    392a:	22 27       	eor	r18, r18
    392c:	30 73       	andi	r19, 0x30	; 48
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))
    392e:	21 15       	cp	r18, r1
    3930:	30 43       	sbci	r19, 0x30	; 48
    3932:	61 f4       	brne	.+24     	; 0x394c <_Z14anzeigehandlerv+0x1a8>
		{
			menue_einst();
    3934:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <_Z11menue_einstv>
			anzeige|=(1<<refreshdisplay);
    3938:	80 91 0f 03 	lds	r24, 0x030F
    393c:	90 91 10 03 	lds	r25, 0x0310
    3940:	90 68       	ori	r25, 0x80	; 128
    3942:	90 93 10 03 	sts	0x0310, r25
    3946:	80 93 0f 03 	sts	0x030F, r24
    394a:	4c c1       	rjmp	.+664    	; 0x3be4 <_Z14anzeigehandlerv+0x440>
		}
		else if ((anzeige&(1<<menueflag)))
    394c:	95 ff       	sbrs	r25, 5
    394e:	0c c0       	rjmp	.+24     	; 0x3968 <_Z14anzeigehandlerv+0x1c4>
		{
			menue_haupt();
    3950:	0e 94 b5 0c 	call	0x196a	; 0x196a <_Z11menue_hauptv>
			anzeige|=(1<<refreshdisplay);
    3954:	80 91 0f 03 	lds	r24, 0x030F
    3958:	90 91 10 03 	lds	r25, 0x0310
    395c:	90 68       	ori	r25, 0x80	; 128
    395e:	90 93 10 03 	sts	0x0310, r25
    3962:	80 93 0f 03 	sts	0x030F, r24
    3966:	3e c1       	rjmp	.+636    	; 0x3be4 <_Z14anzeigehandlerv+0x440>
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3968:	91 ff       	sbrs	r25, 1
    396a:	0c c0       	rjmp	.+24     	; 0x3984 <_Z14anzeigehandlerv+0x1e0>
		{
			Gaineinstellen();
    396c:	0e 94 88 11 	call	0x2310	; 0x2310 <_Z14Gaineinstellenv>
			anzeige|=(1<<refreshdisplay);
    3970:	80 91 0f 03 	lds	r24, 0x030F
    3974:	90 91 10 03 	lds	r25, 0x0310
    3978:	90 68       	ori	r25, 0x80	; 128
    397a:	90 93 10 03 	sts	0x0310, r25
    397e:	80 93 0f 03 	sts	0x030F, r24
    3982:	30 c1       	rjmp	.+608    	; 0x3be4 <_Z14anzeigehandlerv+0x440>
		}
		else if ((anzeige&(1<<Uhrflag)))
    3984:	81 ff       	sbrs	r24, 1
    3986:	0c c0       	rjmp	.+24     	; 0x39a0 <_Z14anzeigehandlerv+0x1fc>
		{
			uhranzeigen();
    3988:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <_Z11uhranzeigenv>
			anzeige|=(1<<refreshdisplay);
    398c:	80 91 0f 03 	lds	r24, 0x030F
    3990:	90 91 10 03 	lds	r25, 0x0310
    3994:	90 68       	ori	r25, 0x80	; 128
    3996:	90 93 10 03 	sts	0x0310, r25
    399a:	80 93 0f 03 	sts	0x030F, r24
    399e:	22 c1       	rjmp	.+580    	; 0x3be4 <_Z14anzeigehandlerv+0x440>
		}
		else if ((anzeige&(1<<Kompasflag)))
    39a0:	87 ff       	sbrs	r24, 7
    39a2:	24 c0       	rjmp	.+72     	; 0x39ec <_Z14anzeigehandlerv+0x248>
		{
			Accelerometer.readacc();
    39a4:	87 e1       	ldi	r24, 0x17	; 23
    39a6:	93 e0       	ldi	r25, 0x03	; 3
    39a8:	0e 94 7d 26 	call	0x4cfa	; 0x4cfa <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    39ac:	00 91 23 03 	lds	r16, 0x0323
    39b0:	10 91 24 03 	lds	r17, 0x0324
    39b4:	20 91 25 03 	lds	r18, 0x0325
    39b8:	30 91 26 03 	lds	r19, 0x0326
    39bc:	40 91 1f 03 	lds	r20, 0x031F
    39c0:	50 91 20 03 	lds	r21, 0x0320
    39c4:	60 91 21 03 	lds	r22, 0x0321
    39c8:	70 91 22 03 	lds	r23, 0x0322
    39cc:	8c e5       	ldi	r24, 0x5C	; 92
    39ce:	97 e0       	ldi	r25, 0x07	; 7
    39d0:	0e 94 42 25 	call	0x4a84	; 0x4a84 <_ZN7Kompass5angleEdd>
    39d4:	0e 94 6e 12 	call	0x24dc	; 0x24dc <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    39d8:	80 91 0f 03 	lds	r24, 0x030F
    39dc:	90 91 10 03 	lds	r25, 0x0310
    39e0:	90 68       	ori	r25, 0x80	; 128
    39e2:	90 93 10 03 	sts	0x0310, r25
    39e6:	80 93 0f 03 	sts	0x030F, r24
    39ea:	fc c0       	rjmp	.+504    	; 0x3be4 <_Z14anzeigehandlerv+0x440>
		}
		else if ((anzeige&(1<<Fahradflag)))
    39ec:	80 ff       	sbrs	r24, 0
    39ee:	a6 c0       	rjmp	.+332    	; 0x3b3c <_Z14anzeigehandlerv+0x398>
		{
			if (geschw>maxgeschw)
    39f0:	c0 90 08 03 	lds	r12, 0x0308
    39f4:	d0 90 09 03 	lds	r13, 0x0309
    39f8:	e0 90 0a 03 	lds	r14, 0x030A
    39fc:	f0 90 0b 03 	lds	r15, 0x030B
    3a00:	20 91 00 03 	lds	r18, 0x0300
    3a04:	30 91 01 03 	lds	r19, 0x0301
    3a08:	40 91 02 03 	lds	r20, 0x0302
    3a0c:	50 91 03 03 	lds	r21, 0x0303
    3a10:	c7 01       	movw	r24, r14
    3a12:	b6 01       	movw	r22, r12
    3a14:	0e 94 1d 2d 	call	0x5a3a	; 0x5a3a <__gesf2>
    3a18:	18 16       	cp	r1, r24
    3a1a:	44 f4       	brge	.+16     	; 0x3a2c <_Z14anzeigehandlerv+0x288>
			{
				maxgeschw=geschw;
    3a1c:	c0 92 00 03 	sts	0x0300, r12
    3a20:	d0 92 01 03 	sts	0x0301, r13
    3a24:	e0 92 02 03 	sts	0x0302, r14
    3a28:	f0 92 03 03 	sts	0x0303, r15
			}
			if (geschw >= 1.0)
    3a2c:	20 e0       	ldi	r18, 0x00	; 0
    3a2e:	30 e0       	ldi	r19, 0x00	; 0
    3a30:	40 e8       	ldi	r20, 0x80	; 128
    3a32:	5f e3       	ldi	r21, 0x3F	; 63
    3a34:	c7 01       	movw	r24, r14
    3a36:	b6 01       	movw	r22, r12
    3a38:	0e 94 1d 2d 	call	0x5a3a	; 0x5a3a <__gesf2>
    3a3c:	88 23       	and	r24, r24
    3a3e:	9c f0       	brlt	.+38     	; 0x3a66 <_Z14anzeigehandlerv+0x2c2>
			{
				Fahrtzeit++;
    3a40:	80 91 fc 02 	lds	r24, 0x02FC
    3a44:	90 91 fd 02 	lds	r25, 0x02FD
    3a48:	a0 91 fe 02 	lds	r26, 0x02FE
    3a4c:	b0 91 ff 02 	lds	r27, 0x02FF
    3a50:	01 96       	adiw	r24, 0x01	; 1
    3a52:	a1 1d       	adc	r26, r1
    3a54:	b1 1d       	adc	r27, r1
    3a56:	80 93 fc 02 	sts	0x02FC, r24
    3a5a:	90 93 fd 02 	sts	0x02FD, r25
    3a5e:	a0 93 fe 02 	sts	0x02FE, r26
    3a62:	b0 93 ff 02 	sts	0x02FF, r27
			}
			strecke+=geschw/3.6;
    3a66:	26 e6       	ldi	r18, 0x66	; 102
    3a68:	36 e6       	ldi	r19, 0x66	; 102
    3a6a:	46 e6       	ldi	r20, 0x66	; 102
    3a6c:	50 e4       	ldi	r21, 0x40	; 64
    3a6e:	c7 01       	movw	r24, r14
    3a70:	b6 01       	movw	r22, r12
    3a72:	0e 94 74 2b 	call	0x56e8	; 0x56e8 <__divsf3>
    3a76:	9b 01       	movw	r18, r22
    3a78:	ac 01       	movw	r20, r24
    3a7a:	60 91 04 03 	lds	r22, 0x0304
    3a7e:	70 91 05 03 	lds	r23, 0x0305
    3a82:	80 91 06 03 	lds	r24, 0x0306
    3a86:	90 91 07 03 	lds	r25, 0x0307
    3a8a:	0e 94 a7 2a 	call	0x554e	; 0x554e <__addsf3>
    3a8e:	60 93 04 03 	sts	0x0304, r22
    3a92:	70 93 05 03 	sts	0x0305, r23
    3a96:	80 93 06 03 	sts	0x0306, r24
    3a9a:	90 93 07 03 	sts	0x0307, r25
			Accelerometer.readacc();
    3a9e:	87 e1       	ldi	r24, 0x17	; 23
    3aa0:	93 e0       	ldi	r25, 0x03	; 3
    3aa2:	0e 94 7d 26 	call	0x4cfa	; 0x4cfa <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    3aa6:	e0 90 fc 02 	lds	r14, 0x02FC
    3aaa:	f0 90 fd 02 	lds	r15, 0x02FD
    3aae:	c0 91 fe 02 	lds	r28, 0x02FE
    3ab2:	d0 91 ff 02 	lds	r29, 0x02FF
    3ab6:	a0 90 00 03 	lds	r10, 0x0300
    3aba:	b0 90 01 03 	lds	r11, 0x0301
    3abe:	c0 90 02 03 	lds	r12, 0x0302
    3ac2:	d0 90 03 03 	lds	r13, 0x0303
    3ac6:	40 90 04 03 	lds	r4, 0x0304
    3aca:	50 90 05 03 	lds	r5, 0x0305
    3ace:	60 90 06 03 	lds	r6, 0x0306
    3ad2:	70 90 07 03 	lds	r7, 0x0307
    3ad6:	00 91 23 03 	lds	r16, 0x0323
    3ada:	10 91 24 03 	lds	r17, 0x0324
    3ade:	20 91 25 03 	lds	r18, 0x0325
    3ae2:	30 91 26 03 	lds	r19, 0x0326
    3ae6:	40 91 1f 03 	lds	r20, 0x031F
    3aea:	50 91 20 03 	lds	r21, 0x0320
    3aee:	60 91 21 03 	lds	r22, 0x0321
    3af2:	70 91 22 03 	lds	r23, 0x0322
    3af6:	8c e5       	ldi	r24, 0x5C	; 92
    3af8:	97 e0       	ldi	r25, 0x07	; 7
    3afa:	c4 d7       	rcall	.+3976   	; 0x4a84 <_ZN7Kompass5angleEdd>
    3afc:	9b 01       	movw	r18, r22
    3afe:	ac 01       	movw	r20, r24
    3b00:	60 91 08 03 	lds	r22, 0x0308
    3b04:	70 91 09 03 	lds	r23, 0x0309
    3b08:	80 91 0a 03 	lds	r24, 0x030A
    3b0c:	90 91 0b 03 	lds	r25, 0x030B
    3b10:	df 93       	push	r29
    3b12:	cf 93       	push	r28
    3b14:	ff 92       	push	r15
    3b16:	ef 92       	push	r14
    3b18:	83 01       	movw	r16, r6
    3b1a:	72 01       	movw	r14, r4
    3b1c:	0e 94 1a 10 	call	0x2034	; 0x2034 <_Z12fahradschirmddddm>
			//Fuer Testzwecke entfernt um neue Methode zu testen, siehe Oben
			//if (rtc.Sekunden%2)
			//{
				//geschw=0;
			//}
			anzeige|=(1<<refreshdisplay);
    3b20:	80 91 0f 03 	lds	r24, 0x030F
    3b24:	90 91 10 03 	lds	r25, 0x0310
    3b28:	90 68       	ori	r25, 0x80	; 128
    3b2a:	90 93 10 03 	sts	0x0310, r25
    3b2e:	80 93 0f 03 	sts	0x030F, r24
    3b32:	0f 90       	pop	r0
    3b34:	0f 90       	pop	r0
    3b36:	0f 90       	pop	r0
    3b38:	0f 90       	pop	r0
    3b3a:	54 c0       	rjmp	.+168    	; 0x3be4 <_Z14anzeigehandlerv+0x440>
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    3b3c:	83 ff       	sbrs	r24, 3
    3b3e:	0c c0       	rjmp	.+24     	; 0x3b58 <_Z14anzeigehandlerv+0x3b4>
		{
			Stoppuhrseite();
    3b40:	0e 94 ce 13 	call	0x279c	; 0x279c <_Z13Stoppuhrseitev>
			anzeige|=(1<<refreshdisplay);
    3b44:	80 91 0f 03 	lds	r24, 0x030F
    3b48:	90 91 10 03 	lds	r25, 0x0310
    3b4c:	90 68       	ori	r25, 0x80	; 128
    3b4e:	90 93 10 03 	sts	0x0310, r25
    3b52:	80 93 0f 03 	sts	0x030F, r24
    3b56:	46 c0       	rjmp	.+140    	; 0x3be4 <_Z14anzeigehandlerv+0x440>
		}
		else if ((anzeige&(1<<Timerflag)))
    3b58:	82 ff       	sbrs	r24, 2
    3b5a:	18 c0       	rjmp	.+48     	; 0x3b8c <_Z14anzeigehandlerv+0x3e8>
		{
			if (rtc.interupts&(1<<Alarm))
    3b5c:	20 91 55 07 	lds	r18, 0x0755
    3b60:	20 ff       	sbrs	r18, 0
    3b62:	08 c0       	rjmp	.+16     	; 0x3b74 <_Z14anzeigehandlerv+0x3d0>
			{
				anzeige |= (1<<blinkflag);
    3b64:	90 64       	ori	r25, 0x40	; 64
    3b66:	90 93 10 03 	sts	0x0310, r25
    3b6a:	80 93 0f 03 	sts	0x030F, r24
				rtc.interupts &= ~(1<<Alarm);
    3b6e:	2e 7f       	andi	r18, 0xFE	; 254
    3b70:	20 93 55 07 	sts	0x0755, r18
			}
			timerseite();
    3b74:	0e 94 02 13 	call	0x2604	; 0x2604 <_Z10timerseitev>
			anzeige|=(1<<refreshdisplay);
    3b78:	80 91 0f 03 	lds	r24, 0x030F
    3b7c:	90 91 10 03 	lds	r25, 0x0310
    3b80:	90 68       	ori	r25, 0x80	; 128
    3b82:	90 93 10 03 	sts	0x0310, r25
    3b86:	80 93 0f 03 	sts	0x030F, r24
    3b8a:	2c c0       	rjmp	.+88     	; 0x3be4 <_Z14anzeigehandlerv+0x440>
		}
		else if ((anzeige&(1<<Druckflag)))
    3b8c:	92 ff       	sbrs	r25, 2
    3b8e:	0c c0       	rjmp	.+24     	; 0x3ba8 <_Z14anzeigehandlerv+0x404>
		{
			Pressuresensor();
    3b90:	0e 94 8f 14 	call	0x291e	; 0x291e <_Z14Pressuresensorv>
			anzeige |= (1<<refreshdisplay);
    3b94:	80 91 0f 03 	lds	r24, 0x030F
    3b98:	90 91 10 03 	lds	r25, 0x0310
    3b9c:	90 68       	ori	r25, 0x80	; 128
    3b9e:	90 93 10 03 	sts	0x0310, r25
    3ba2:	80 93 0f 03 	sts	0x030F, r24
    3ba6:	1e c0       	rjmp	.+60     	; 0x3be4 <_Z14anzeigehandlerv+0x440>
		}
		else if ((anzeige&(1<<Wanderflag)))
    3ba8:	93 ff       	sbrs	r25, 3
    3baa:	0c c0       	rjmp	.+24     	; 0x3bc4 <_Z14anzeigehandlerv+0x420>
		{
			Wanderseite();
    3bac:	0e 94 cb 14 	call	0x2996	; 0x2996 <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    3bb0:	80 91 0f 03 	lds	r24, 0x030F
    3bb4:	90 91 10 03 	lds	r25, 0x0310
    3bb8:	90 68       	ori	r25, 0x80	; 128
    3bba:	90 93 10 03 	sts	0x0310, r25
    3bbe:	80 93 0f 03 	sts	0x030F, r24
    3bc2:	10 c0       	rjmp	.+32     	; 0x3be4 <_Z14anzeigehandlerv+0x440>
    3bc4:	80 74       	andi	r24, 0x40	; 64
    3bc6:	90 71       	andi	r25, 0x10	; 16
		}
		else if ((anzeige&(1<<Weckeranzeigeflag))&&(anzeige&(1<<Einstellungsflag)))
    3bc8:	80 34       	cpi	r24, 0x40	; 64
    3bca:	90 41       	sbci	r25, 0x10	; 16
    3bcc:	59 f4       	brne	.+22     	; 0x3be4 <_Z14anzeigehandlerv+0x440>
		{
			Weckeranzeige();
    3bce:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3bd2:	80 91 0f 03 	lds	r24, 0x030F
    3bd6:	90 91 10 03 	lds	r25, 0x0310
    3bda:	90 68       	ori	r25, 0x80	; 128
    3bdc:	90 93 10 03 	sts	0x0310, r25
    3be0:	80 93 0f 03 	sts	0x030F, r24
		}
		if ((anzeige&(1<<blinkflag)))
    3be4:	80 91 0f 03 	lds	r24, 0x030F
    3be8:	90 91 10 03 	lds	r25, 0x0310
    3bec:	96 ff       	sbrs	r25, 6
    3bee:	0f c0       	rjmp	.+30     	; 0x3c0e <_Z14anzeigehandlerv+0x46a>
		{
			oled.invert(rtc.Sekunden%2);
    3bf0:	60 91 4f 07 	lds	r22, 0x074F
    3bf4:	61 70       	andi	r22, 0x01	; 1
    3bf6:	8c e3       	ldi	r24, 0x3C	; 60
    3bf8:	93 e0       	ldi	r25, 0x03	; 3
    3bfa:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <_ZN7Display6invertEh>
			LED.toggle();
    3bfe:	8e e2       	ldi	r24, 0x2E	; 46
    3c00:	93 e0       	ldi	r25, 0x03	; 3
    3c02:	0e 94 d2 28 	call	0x51a4	; 0x51a4 <_ZN6Output6toggleEv>
			Vibrationsmotor.on();
    3c06:	8c e2       	ldi	r24, 0x2C	; 44
    3c08:	93 e0       	ldi	r25, 0x03	; 3
    3c0a:	0e 94 f9 27 	call	0x4ff2	; 0x4ff2 <_ZN6Output2onEv>
		}
		FPS=0;
    3c0e:	10 92 0c 03 	sts	0x030C, r1
		rtc.interupts&=~(1<<sekundeninterupt);
    3c12:	e5 e5       	ldi	r30, 0x55	; 85
    3c14:	f7 e0       	ldi	r31, 0x07	; 7
    3c16:	80 81       	ld	r24, Z
    3c18:	8d 7f       	andi	r24, 0xFD	; 253
    3c1a:	80 83       	st	Z, r24
	}
	//Minuteninterrupt
	if ((rtc.interupts&(1<<minuteninterupt)))
    3c1c:	80 91 55 07 	lds	r24, 0x0755
    3c20:	82 ff       	sbrs	r24, 2
    3c22:	22 c0       	rjmp	.+68     	; 0x3c68 <_Z14anzeigehandlerv+0x4c4>
	{
		if ((anzeige&(1<<Uhrflaggross)))
    3c24:	80 91 0f 03 	lds	r24, 0x030F
    3c28:	85 ff       	sbrs	r24, 5
    3c2a:	0c c0       	rjmp	.+24     	; 0x3c44 <_Z14anzeigehandlerv+0x4a0>
		{
			uhranzeigenmin();
    3c2c:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <_Z14uhranzeigenminv>
			anzeige|=(1<<refreshdisplay);
    3c30:	80 91 0f 03 	lds	r24, 0x030F
    3c34:	90 91 10 03 	lds	r25, 0x0310
    3c38:	90 68       	ori	r25, 0x80	; 128
    3c3a:	90 93 10 03 	sts	0x0310, r25
    3c3e:	80 93 0f 03 	sts	0x030F, r24
    3c42:	0d c0       	rjmp	.+26     	; 0x3c5e <_Z14anzeigehandlerv+0x4ba>
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    3c44:	86 ff       	sbrs	r24, 6
    3c46:	0b c0       	rjmp	.+22     	; 0x3c5e <_Z14anzeigehandlerv+0x4ba>
		{
			Weckeranzeige();
    3c48:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3c4c:	80 91 0f 03 	lds	r24, 0x030F
    3c50:	90 91 10 03 	lds	r25, 0x0310
    3c54:	90 68       	ori	r25, 0x80	; 128
    3c56:	90 93 10 03 	sts	0x0310, r25
    3c5a:	80 93 0f 03 	sts	0x030F, r24
		}
		rtc.interupts&=~(1<<minuteninterupt);
    3c5e:	e5 e5       	ldi	r30, 0x55	; 85
    3c60:	f7 e0       	ldi	r31, 0x07	; 7
    3c62:	80 81       	ld	r24, Z
    3c64:	8b 7f       	andi	r24, 0xFB	; 251
    3c66:	80 83       	st	Z, r24
	}
	//neuen Framebuffer an das Dispay senden
	if ((anzeige&(1<<refreshdisplay)))
    3c68:	80 91 0f 03 	lds	r24, 0x030F
    3c6c:	90 91 10 03 	lds	r25, 0x0310
    3c70:	99 23       	and	r25, r25
    3c72:	6c f4       	brge	.+26     	; 0x3c8e <_Z14anzeigehandlerv+0x4ea>
	{
		oled.sendFrame();
    3c74:	8c e3       	ldi	r24, 0x3C	; 60
    3c76:	93 e0       	ldi	r25, 0x03	; 3
    3c78:	0e 94 62 03 	call	0x6c4	; 0x6c4 <_ZN7Display9sendFrameEv>
		anzeige&=~(1<<refreshdisplay);
    3c7c:	80 91 0f 03 	lds	r24, 0x030F
    3c80:	90 91 10 03 	lds	r25, 0x0310
    3c84:	9f 77       	andi	r25, 0x7F	; 127
    3c86:	90 93 10 03 	sts	0x0310, r25
    3c8a:	80 93 0f 03 	sts	0x030F, r24
	}
}
    3c8e:	df 91       	pop	r29
    3c90:	cf 91       	pop	r28
    3c92:	1f 91       	pop	r17
    3c94:	0f 91       	pop	r16
    3c96:	ff 90       	pop	r15
    3c98:	ef 90       	pop	r14
    3c9a:	df 90       	pop	r13
    3c9c:	cf 90       	pop	r12
    3c9e:	bf 90       	pop	r11
    3ca0:	af 90       	pop	r10
    3ca2:	7f 90       	pop	r7
    3ca4:	6f 90       	pop	r6
    3ca6:	5f 90       	pop	r5
    3ca8:	4f 90       	pop	r4
    3caa:	08 95       	ret

00003cac <_Z14eingabehandlerh>:

void eingabehandler(uint8_t taste){
	if (taste!='A')
    3cac:	81 34       	cpi	r24, 0x41	; 65
    3cae:	09 f4       	brne	.+2      	; 0x3cb2 <_Z14eingabehandlerh+0x6>
    3cb0:	7f c4       	rjmp	.+2302   	; 0x45b0 <__stack+0x4b1>
	{
		rtc.interupts |= (1<<sekundeninterupt);
    3cb2:	e5 e5       	ldi	r30, 0x55	; 85
    3cb4:	f7 e0       	ldi	r31, 0x07	; 7
    3cb6:	90 81       	ld	r25, Z
    3cb8:	29 2f       	mov	r18, r25
    3cba:	22 60       	ori	r18, 0x02	; 2
    3cbc:	20 83       	st	Z, r18
		if (anzeige==255)
    3cbe:	20 91 0f 03 	lds	r18, 0x030F
    3cc2:	30 91 10 03 	lds	r19, 0x0310
    3cc6:	2f 3f       	cpi	r18, 0xFF	; 255
    3cc8:	31 05       	cpc	r19, r1
    3cca:	61 f4       	brne	.+24     	; 0x3ce4 <_Z14eingabehandlerh+0x38>
		{
			oled.ssd1306_command(SSD1306_DISPLAYON);
    3ccc:	6f ea       	ldi	r22, 0xAF	; 175
    3cce:	8c e3       	ldi	r24, 0x3C	; 60
    3cd0:	93 e0       	ldi	r25, 0x03	; 3
    3cd2:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <_ZN7Display15ssd1306_commandEh>
			//entweder display aus oder das Menue starten
			anzeige=(1<<menueflag);
    3cd6:	80 e0       	ldi	r24, 0x00	; 0
    3cd8:	90 e2       	ldi	r25, 0x20	; 32
    3cda:	90 93 10 03 	sts	0x0310, r25
    3cde:	80 93 0f 03 	sts	0x030F, r24
    3ce2:	08 95       	ret
    3ce4:	a9 01       	movw	r20, r18
    3ce6:	42 70       	andi	r20, 0x02	; 2
    3ce8:	50 72       	andi	r21, 0x20	; 32
		}
		//gleicher Handler wie oben, aber hier speziell fuer die Bearbeitung von Tastereingaben mit switch fuer die Tasten
		//es sind einfach so viele Tasten moeglich
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))	//Menue der Uhr
    3cea:	42 30       	cpi	r20, 0x02	; 2
    3cec:	50 42       	sbci	r21, 0x20	; 32
    3cee:	e9 f5       	brne	.+122    	; 0x3d6a <_Z14eingabehandlerh+0xbe>
		{
			anzeige&=~((1<<menueflag)|(1<<Uhrflag));
    3cf0:	2d 7f       	andi	r18, 0xFD	; 253
    3cf2:	3f 7d       	andi	r19, 0xDF	; 223
			switch (taste)
    3cf4:	83 33       	cpi	r24, 0x33	; 51
    3cf6:	c1 f0       	breq	.+48     	; 0x3d28 <_Z14eingabehandlerh+0x7c>
    3cf8:	28 f4       	brcc	.+10     	; 0x3d04 <_Z14eingabehandlerh+0x58>
    3cfa:	81 33       	cpi	r24, 0x31	; 49
    3cfc:	41 f0       	breq	.+16     	; 0x3d0e <_Z14eingabehandlerh+0x62>
    3cfe:	82 33       	cpi	r24, 0x32	; 50
    3d00:	61 f0       	breq	.+24     	; 0x3d1a <_Z14eingabehandlerh+0x6e>
    3d02:	2c c0       	rjmp	.+88     	; 0x3d5c <_Z14eingabehandlerh+0xb0>
    3d04:	84 33       	cpi	r24, 0x34	; 52
    3d06:	b9 f0       	breq	.+46     	; 0x3d36 <_Z14eingabehandlerh+0x8a>
    3d08:	85 33       	cpi	r24, 0x35	; 53
    3d0a:	f1 f0       	breq	.+60     	; 0x3d48 <_Z14eingabehandlerh+0x9c>
    3d0c:	27 c0       	rjmp	.+78     	; 0x3d5c <_Z14eingabehandlerh+0xb0>
			{
				case '1':
				//Wechseln auf die Uhr
				anzeige|=(1<<Uhrflag);
    3d0e:	22 60       	ori	r18, 0x02	; 2
    3d10:	30 93 10 03 	sts	0x0310, r19
    3d14:	20 93 0f 03 	sts	0x030F, r18
				break;
    3d18:	08 95       	ret
				
				case '2':
				//starten der Stoppuhr APP
				anzeige|=(1<<refreshdisplay) | (1<<Stoppuhrflag);
    3d1a:	28 60       	ori	r18, 0x08	; 8
    3d1c:	30 68       	ori	r19, 0x80	; 128
    3d1e:	30 93 10 03 	sts	0x0310, r19
    3d22:	20 93 0f 03 	sts	0x030F, r18
				break;
    3d26:	08 95       	ret
				
				case '3':
				//Starten der Timer APP	
				anzeige|=(1<<Timerflag) | (1<<Einstellungsflag);
    3d28:	24 60       	ori	r18, 0x04	; 4
    3d2a:	30 61       	ori	r19, 0x10	; 16
    3d2c:	30 93 10 03 	sts	0x0310, r19
    3d30:	20 93 0f 03 	sts	0x030F, r18
				break;
    3d34:	08 95       	ret
				
				case '4':
				rtc.interupts |=(1<<minuteninterupt);
    3d36:	96 60       	ori	r25, 0x06	; 6
    3d38:	90 93 55 07 	sts	0x0755, r25
				anzeige |= (1<<Weckeranzeigeflag);
    3d3c:	20 64       	ori	r18, 0x40	; 64
    3d3e:	30 93 10 03 	sts	0x0310, r19
    3d42:	20 93 0f 03 	sts	0x030F, r18
				break;
    3d46:	08 95       	ret
				
				case '5':
				//Wechseln auf grosse Uhr
				rtc.interupts |=(1<<minuteninterupt);
    3d48:	96 60       	ori	r25, 0x06	; 6
    3d4a:	90 93 55 07 	sts	0x0755, r25
				anzeige |=(1<<Uhrflaggross) | (1<<refreshdisplay);
    3d4e:	20 62       	ori	r18, 0x20	; 32
    3d50:	30 68       	ori	r19, 0x80	; 128
    3d52:	30 93 10 03 	sts	0x0310, r19
    3d56:	20 93 0f 03 	sts	0x030F, r18
				break;
    3d5a:	08 95       	ret
				
				default:
				//menueflag erneu setzen
				anzeige|=(1<<menueflag)|(1<<Uhrflag);
    3d5c:	22 60       	ori	r18, 0x02	; 2
    3d5e:	30 62       	ori	r19, 0x20	; 32
    3d60:	30 93 10 03 	sts	0x0310, r19
    3d64:	20 93 0f 03 	sts	0x030F, r18
				break;
    3d68:	f9 c3       	rjmp	.+2034   	; 0x455c <__stack+0x45d>
    3d6a:	a9 01       	movw	r20, r18
    3d6c:	44 27       	eor	r20, r20
    3d6e:	50 73       	andi	r21, 0x30	; 48
			}
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))	//Menue der Einstellungen
    3d70:	41 15       	cp	r20, r1
    3d72:	50 43       	sbci	r21, 0x30	; 48
    3d74:	09 f0       	breq	.+2      	; 0x3d78 <_Z14eingabehandlerh+0xcc>
    3d76:	41 c0       	rjmp	.+130    	; 0x3dfa <_Z14eingabehandlerh+0x14e>
		{
			anzeige&=~((1<<menueflag)|(1<<Einstellungsflag));
    3d78:	3f 7c       	andi	r19, 0xCF	; 207
    3d7a:	30 93 10 03 	sts	0x0310, r19
    3d7e:	20 93 0f 03 	sts	0x030F, r18
			switch (taste)
    3d82:	82 33       	cpi	r24, 0x32	; 50
    3d84:	b1 f0       	breq	.+44     	; 0x3db2 <_Z14eingabehandlerh+0x106>
    3d86:	18 f4       	brcc	.+6      	; 0x3d8e <_Z14eingabehandlerh+0xe2>
    3d88:	81 33       	cpi	r24, 0x31	; 49
    3d8a:	31 f0       	breq	.+12     	; 0x3d98 <_Z14eingabehandlerh+0xec>
    3d8c:	30 c0       	rjmp	.+96     	; 0x3dee <_Z14eingabehandlerh+0x142>
    3d8e:	83 33       	cpi	r24, 0x33	; 51
    3d90:	b1 f0       	breq	.+44     	; 0x3dbe <_Z14eingabehandlerh+0x112>
    3d92:	84 33       	cpi	r24, 0x34	; 52
    3d94:	29 f1       	breq	.+74     	; 0x3de0 <_Z14eingabehandlerh+0x134>
    3d96:	2b c0       	rjmp	.+86     	; 0x3dee <_Z14eingabehandlerh+0x142>
			{
				case '1':
				//zuruecksetzen der Kalibrierung, da passive Kallibrierung eingebaut
				kompass.kallibrierung_ruecksetzen();
    3d98:	8c e5       	ldi	r24, 0x5C	; 92
    3d9a:	97 e0       	ldi	r25, 0x07	; 7
    3d9c:	97 d7       	rcall	.+3886   	; 0x4ccc <_ZN7Kompass25kallibrierung_ruecksetzenEv>
				anzeige|=(1<<Kompasflag);
    3d9e:	80 91 0f 03 	lds	r24, 0x030F
    3da2:	90 91 10 03 	lds	r25, 0x0310
    3da6:	80 68       	ori	r24, 0x80	; 128
    3da8:	90 93 10 03 	sts	0x0310, r25
    3dac:	80 93 0f 03 	sts	0x030F, r24
				break;
    3db0:	08 95       	ret
				case '2':
				//Gaineinstellung fuer den Kompass
				anzeige|=(1<<Kompasgaineinstellenflag);
    3db2:	32 60       	ori	r19, 0x02	; 2
    3db4:	30 93 10 03 	sts	0x0310, r19
    3db8:	20 93 0f 03 	sts	0x030F, r18
				break;
    3dbc:	08 95       	ret
				case '3':
				//dies ist eine der wenigen Funktinen, die die Handler Strucktur nicht anwenden, da sie die rtc anhaellt
				uhreinstellen();
    3dbe:	0e 94 50 16 	call	0x2ca0	; 0x2ca0 <_Z13uhreinstellenv>
				rtc.interupts |= (1<<minuteninterupt);
    3dc2:	e5 e5       	ldi	r30, 0x55	; 85
    3dc4:	f7 e0       	ldi	r31, 0x07	; 7
    3dc6:	80 81       	ld	r24, Z
    3dc8:	84 60       	ori	r24, 0x04	; 4
    3dca:	80 83       	st	Z, r24
				anzeige|=(1<<Uhrflaggross);
    3dcc:	80 91 0f 03 	lds	r24, 0x030F
    3dd0:	90 91 10 03 	lds	r25, 0x0310
    3dd4:	80 62       	ori	r24, 0x20	; 32
    3dd6:	90 93 10 03 	sts	0x0310, r25
    3dda:	80 93 0f 03 	sts	0x030F, r24
				break;
    3dde:	08 95       	ret
				case '4':
				anzeige |= (1<<Einstellungsflag) | (1<<Weckeranzeigeflag);
    3de0:	20 64       	ori	r18, 0x40	; 64
    3de2:	30 61       	ori	r19, 0x10	; 16
    3de4:	30 93 10 03 	sts	0x0310, r19
    3de8:	20 93 0f 03 	sts	0x030F, r18
				break;
    3dec:	08 95       	ret
				default:
				//Menueflag neu setzten
				anzeige|=(1<<menueflag)|(1<<Einstellungsflag);
    3dee:	30 63       	ori	r19, 0x30	; 48
    3df0:	30 93 10 03 	sts	0x0310, r19
    3df4:	20 93 0f 03 	sts	0x030F, r18
				break;
    3df8:	b1 c3       	rjmp	.+1890   	; 0x455c <__stack+0x45d>
			}
		}
		else if ((anzeige&(1<<menueflag)))	//nur das grosse menue
    3dfa:	35 ff       	sbrs	r19, 5
    3dfc:	4b c0       	rjmp	.+150    	; 0x3e94 <_Z14eingabehandlerh+0x1e8>
		{
			anzeige&=~(1<<menueflag);
    3dfe:	3f 7d       	andi	r19, 0xDF	; 223
    3e00:	30 93 10 03 	sts	0x0310, r19
    3e04:	20 93 0f 03 	sts	0x030F, r18
			switch (taste)
    3e08:	48 2f       	mov	r20, r24
    3e0a:	50 e0       	ldi	r21, 0x00	; 0
    3e0c:	fa 01       	movw	r30, r20
    3e0e:	f1 97       	sbiw	r30, 0x31	; 49
    3e10:	e7 30       	cpi	r30, 0x07	; 7
    3e12:	f1 05       	cpc	r31, r1
    3e14:	c8 f5       	brcc	.+114    	; 0x3e88 <_Z14eingabehandlerh+0x1dc>
    3e16:	e0 5b       	subi	r30, 0xB0	; 176
    3e18:	ff 4f       	sbci	r31, 0xFF	; 255
    3e1a:	0c 94 81 31 	jmp	0x6302	; 0x6302 <__tablejump2__>
			{
				case '1':
				anzeige|=(1<<Fahradflag);
    3e1e:	21 60       	ori	r18, 0x01	; 1
    3e20:	30 93 10 03 	sts	0x0310, r19
    3e24:	20 93 0f 03 	sts	0x030F, r18
				//starten des Timers fuer die geschwindigkeit
				inittimer(1);
    3e28:	81 e0       	ldi	r24, 0x01	; 1
    3e2a:	e8 cb       	rjmp	.-2096   	; 0x35fc <_Z9inittimerh>
				break;
    3e2c:	08 95       	ret
				
				case '2':
				//Wanderanzeige schalten
				anzeige|=(1<<refreshdisplay) | (1<<Wanderflag);
    3e2e:	38 68       	ori	r19, 0x88	; 136
    3e30:	30 93 10 03 	sts	0x0310, r19
    3e34:	20 93 0f 03 	sts	0x030F, r18
				break;
    3e38:	08 95       	ret
				
				case '3':
				anzeige|=(1<<Kompasflag);
    3e3a:	20 68       	ori	r18, 0x80	; 128
    3e3c:	30 93 10 03 	sts	0x0310, r19
    3e40:	20 93 0f 03 	sts	0x030F, r18
				break;
    3e44:	08 95       	ret
				
				case '4':
				//Menue der Uhr
				anzeige|=(1<<menueflag) | (1<<Uhrflag);
    3e46:	22 60       	ori	r18, 0x02	; 2
    3e48:	30 62       	ori	r19, 0x20	; 32
    3e4a:	30 93 10 03 	sts	0x0310, r19
    3e4e:	20 93 0f 03 	sts	0x030F, r18
				break;
    3e52:	08 95       	ret
				
				case '5':
				//menue der Einstellungen
				anzeige|=(1<<menueflag) | (1<<Einstellungsflag);
    3e54:	30 63       	ori	r19, 0x30	; 48
    3e56:	30 93 10 03 	sts	0x0310, r19
    3e5a:	20 93 0f 03 	sts	0x030F, r18
				break;
    3e5e:	08 95       	ret
				
				case '6':
				//Display ausschalten
				//anzeige=255;
				oled.clearFrame();
    3e60:	8c e3       	ldi	r24, 0x3C	; 60
    3e62:	93 e0       	ldi	r25, 0x03	; 3
    3e64:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN7Display10clearFrameEv>
				anzeige|=(1<<refreshdisplay);
    3e68:	80 91 0f 03 	lds	r24, 0x030F
    3e6c:	90 91 10 03 	lds	r25, 0x0310
    3e70:	90 68       	ori	r25, 0x80	; 128
    3e72:	90 93 10 03 	sts	0x0310, r25
    3e76:	80 93 0f 03 	sts	0x030F, r24
				break;
    3e7a:	08 95       	ret
				case '7':
				anzeige |= (1<<Druckflag);
    3e7c:	34 60       	ori	r19, 0x04	; 4
    3e7e:	30 93 10 03 	sts	0x0310, r19
    3e82:	20 93 0f 03 	sts	0x030F, r18
				break;
    3e86:	08 95       	ret
				default:
				//menueflag erneut setzen um abschalten zu verhindern
				anzeige|=(1<<menueflag);
    3e88:	30 62       	ori	r19, 0x20	; 32
    3e8a:	30 93 10 03 	sts	0x0310, r19
    3e8e:	20 93 0f 03 	sts	0x030F, r18
				break;
    3e92:	64 c3       	rjmp	.+1736   	; 0x455c <__stack+0x45d>
    3e94:	a9 01       	movw	r20, r18
    3e96:	40 74       	andi	r20, 0x40	; 64
    3e98:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag))&&(anzeige&(1<<Weckeranzeigeflag)))
    3e9a:	40 34       	cpi	r20, 0x40	; 64
    3e9c:	50 41       	sbci	r21, 0x10	; 16
    3e9e:	09 f0       	breq	.+2      	; 0x3ea2 <_Z14eingabehandlerh+0x1f6>
    3ea0:	68 c0       	rjmp	.+208    	; 0x3f72 <_Z14eingabehandlerh+0x2c6>
		{
			switch (pos)
    3ea2:	40 91 0d 03 	lds	r20, 0x030D
    3ea6:	41 30       	cpi	r20, 0x01	; 1
    3ea8:	11 f1       	breq	.+68     	; 0x3eee <_Z14eingabehandlerh+0x242>
    3eaa:	30 f0       	brcs	.+12     	; 0x3eb8 <_Z14eingabehandlerh+0x20c>
    3eac:	42 30       	cpi	r20, 0x02	; 2
    3eae:	79 f1       	breq	.+94     	; 0x3f0e <_Z14eingabehandlerh+0x262>
    3eb0:	43 30       	cpi	r20, 0x03	; 3
    3eb2:	09 f4       	brne	.+2      	; 0x3eb6 <_Z14eingabehandlerh+0x20a>
    3eb4:	3f c0       	rjmp	.+126    	; 0x3f34 <_Z14eingabehandlerh+0x288>
    3eb6:	52 c3       	rjmp	.+1700   	; 0x455c <__stack+0x45d>
			{
				case 0:
				rtc.WStunden=0;
    3eb8:	10 92 57 07 	sts	0x0757, r1
				rtc.WMinuten=0;
    3ebc:	10 92 56 07 	sts	0x0756, r1
				rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
    3ec0:	97 7e       	andi	r25, 0xE7	; 231
    3ec2:	92 60       	ori	r25, 0x02	; 2
    3ec4:	90 93 55 07 	sts	0x0755, r25
				switch (taste)
    3ec8:	83 32       	cpi	r24, 0x23	; 35
    3eca:	09 f4       	brne	.+2      	; 0x3ece <_Z14eingabehandlerh+0x222>
    3ecc:	47 c3       	rjmp	.+1678   	; 0x455c <__stack+0x45d>
    3ece:	8a 32       	cpi	r24, 0x2A	; 42
    3ed0:	09 f4       	brne	.+2      	; 0x3ed4 <_Z14eingabehandlerh+0x228>
    3ed2:	44 c3       	rjmp	.+1672   	; 0x455c <__stack+0x45d>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden=(taste-'0')*10;
    3ed4:	98 2f       	mov	r25, r24
    3ed6:	99 0f       	add	r25, r25
    3ed8:	90 56       	subi	r25, 0x60	; 96
    3eda:	29 2f       	mov	r18, r25
    3edc:	22 0f       	add	r18, r18
    3ede:	22 0f       	add	r18, r18
    3ee0:	92 0f       	add	r25, r18
    3ee2:	90 93 57 07 	sts	0x0757, r25
					pos++;
    3ee6:	91 e0       	ldi	r25, 0x01	; 1
    3ee8:	90 93 0d 03 	sts	0x030D, r25
					break;
    3eec:	37 c3       	rjmp	.+1646   	; 0x455c <__stack+0x45d>
				}
				break;
				case 1:
				switch (taste)
    3eee:	83 32       	cpi	r24, 0x23	; 35
    3ef0:	09 f4       	brne	.+2      	; 0x3ef4 <_Z14eingabehandlerh+0x248>
    3ef2:	34 c3       	rjmp	.+1640   	; 0x455c <__stack+0x45d>
    3ef4:	8a 32       	cpi	r24, 0x2A	; 42
    3ef6:	09 f4       	brne	.+2      	; 0x3efa <_Z14eingabehandlerh+0x24e>
    3ef8:	31 c3       	rjmp	.+1634   	; 0x455c <__stack+0x45d>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden+=(taste-'0');
    3efa:	e7 e5       	ldi	r30, 0x57	; 87
    3efc:	f7 e0       	ldi	r31, 0x07	; 7
    3efe:	90 81       	ld	r25, Z
    3f00:	90 53       	subi	r25, 0x30	; 48
    3f02:	98 0f       	add	r25, r24
    3f04:	90 83       	st	Z, r25
					pos++;
    3f06:	92 e0       	ldi	r25, 0x02	; 2
    3f08:	90 93 0d 03 	sts	0x030D, r25
					break;
    3f0c:	27 c3       	rjmp	.+1614   	; 0x455c <__stack+0x45d>
				}
				break;
				case 2:
				switch (taste)
    3f0e:	83 32       	cpi	r24, 0x23	; 35
    3f10:	09 f4       	brne	.+2      	; 0x3f14 <_Z14eingabehandlerh+0x268>
    3f12:	24 c3       	rjmp	.+1608   	; 0x455c <__stack+0x45d>
    3f14:	8a 32       	cpi	r24, 0x2A	; 42
    3f16:	09 f4       	brne	.+2      	; 0x3f1a <_Z14eingabehandlerh+0x26e>
    3f18:	21 c3       	rjmp	.+1602   	; 0x455c <__stack+0x45d>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten=(taste-'0')*10;
    3f1a:	98 2f       	mov	r25, r24
    3f1c:	99 0f       	add	r25, r25
    3f1e:	90 56       	subi	r25, 0x60	; 96
    3f20:	29 2f       	mov	r18, r25
    3f22:	22 0f       	add	r18, r18
    3f24:	22 0f       	add	r18, r18
    3f26:	92 0f       	add	r25, r18
    3f28:	90 93 56 07 	sts	0x0756, r25
					pos++;
    3f2c:	93 e0       	ldi	r25, 0x03	; 3
    3f2e:	90 93 0d 03 	sts	0x030D, r25
					break;
    3f32:	14 c3       	rjmp	.+1576   	; 0x455c <__stack+0x45d>
				}
				break;
				case 3:
				switch (taste)
    3f34:	83 32       	cpi	r24, 0x23	; 35
    3f36:	41 f0       	breq	.+16     	; 0x3f48 <_Z14eingabehandlerh+0x29c>
    3f38:	8a 32       	cpi	r24, 0x2A	; 42
    3f3a:	31 f0       	breq	.+12     	; 0x3f48 <_Z14eingabehandlerh+0x29c>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten+=(taste-'0');
    3f3c:	e6 e5       	ldi	r30, 0x56	; 86
    3f3e:	f7 e0       	ldi	r31, 0x07	; 7
    3f40:	40 81       	ld	r20, Z
    3f42:	40 53       	subi	r20, 0x30	; 48
    3f44:	48 0f       	add	r20, r24
    3f46:	40 83       	st	Z, r20
					pos++;
					break;
				}
				pos=0;
    3f48:	10 92 0d 03 	sts	0x030D, r1
				if (!(rtc.WStunden>=24) && !(rtc.WMinuten>=60))
    3f4c:	40 91 57 07 	lds	r20, 0x0757
    3f50:	48 31       	cpi	r20, 0x18	; 24
    3f52:	08 f0       	brcs	.+2      	; 0x3f56 <_Z14eingabehandlerh+0x2aa>
    3f54:	03 c3       	rjmp	.+1542   	; 0x455c <__stack+0x45d>
    3f56:	40 91 56 07 	lds	r20, 0x0756
    3f5a:	4c 33       	cpi	r20, 0x3C	; 60
    3f5c:	08 f0       	brcs	.+2      	; 0x3f60 <_Z14eingabehandlerh+0x2b4>
    3f5e:	fe c2       	rjmp	.+1532   	; 0x455c <__stack+0x45d>
				{
					anzeige&=~(1<<Einstellungsflag);
    3f60:	3f 7e       	andi	r19, 0xEF	; 239
    3f62:	30 93 10 03 	sts	0x0310, r19
    3f66:	20 93 0f 03 	sts	0x030F, r18
					rtc.interupts|=(1<<Weckerein);
					rtc.interupts|=(1<<minuteninterupt);
    3f6a:	9e 60       	ori	r25, 0x0E	; 14
    3f6c:	90 93 55 07 	sts	0x0755, r25
    3f70:	f5 c2       	rjmp	.+1514   	; 0x455c <__stack+0x45d>
				}
				break;
			}
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3f72:	31 ff       	sbrs	r19, 1
    3f74:	4a c0       	rjmp	.+148    	; 0x400a <_Z14eingabehandlerh+0x35e>
		{
			anzeige&=~(1<<Kompasgaineinstellenflag);
    3f76:	a9 01       	movw	r20, r18
    3f78:	5d 7f       	andi	r21, 0xFD	; 253
			anzeige|=(1<<Kompasflag);
    3f7a:	40 68       	ori	r20, 0x80	; 128
    3f7c:	50 93 10 03 	sts	0x0310, r21
    3f80:	40 93 0f 03 	sts	0x030F, r20
			switch (taste) {
    3f84:	48 2f       	mov	r20, r24
    3f86:	50 e0       	ldi	r21, 0x00	; 0
    3f88:	fa 01       	movw	r30, r20
    3f8a:	f1 97       	sbiw	r30, 0x31	; 49
    3f8c:	e8 30       	cpi	r30, 0x08	; 8
    3f8e:	f1 05       	cpc	r31, r1
    3f90:	a0 f5       	brcc	.+104    	; 0x3ffa <_Z14eingabehandlerh+0x34e>
    3f92:	e9 5a       	subi	r30, 0xA9	; 169
    3f94:	ff 4f       	sbci	r31, 0xFF	; 255
    3f96:	0c 94 81 31 	jmp	0x6302	; 0x6302 <__tablejump2__>
				case '1':
				kompass.HMC5883L_command(0x01,HMCGAIN1370);
    3f9a:	40 e0       	ldi	r20, 0x00	; 0
    3f9c:	61 e0       	ldi	r22, 0x01	; 1
    3f9e:	8c e5       	ldi	r24, 0x5C	; 92
    3fa0:	97 e0       	ldi	r25, 0x07	; 7
    3fa2:	7e c4       	rjmp	.+2300   	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fa4:	08 95       	ret
				case '2':
				kompass.HMC5883L_command(0x01,HMCGAIN1090);
    3fa6:	40 e2       	ldi	r20, 0x20	; 32
    3fa8:	61 e0       	ldi	r22, 0x01	; 1
    3faa:	8c e5       	ldi	r24, 0x5C	; 92
    3fac:	97 e0       	ldi	r25, 0x07	; 7
    3fae:	78 c4       	rjmp	.+2288   	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fb0:	08 95       	ret
				case '3':
				kompass.HMC5883L_command(0x01,HMCGAIN820);
    3fb2:	40 e4       	ldi	r20, 0x40	; 64
    3fb4:	61 e0       	ldi	r22, 0x01	; 1
    3fb6:	8c e5       	ldi	r24, 0x5C	; 92
    3fb8:	97 e0       	ldi	r25, 0x07	; 7
    3fba:	72 c4       	rjmp	.+2276   	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fbc:	08 95       	ret
				case '4':
				kompass.HMC5883L_command(0x01,HMCGAIN660);
    3fbe:	40 e6       	ldi	r20, 0x60	; 96
    3fc0:	61 e0       	ldi	r22, 0x01	; 1
    3fc2:	8c e5       	ldi	r24, 0x5C	; 92
    3fc4:	97 e0       	ldi	r25, 0x07	; 7
    3fc6:	6c c4       	rjmp	.+2264   	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fc8:	08 95       	ret
				case '5':
				kompass.HMC5883L_command(0x01,HMCGAIN440);
    3fca:	40 e8       	ldi	r20, 0x80	; 128
    3fcc:	61 e0       	ldi	r22, 0x01	; 1
    3fce:	8c e5       	ldi	r24, 0x5C	; 92
    3fd0:	97 e0       	ldi	r25, 0x07	; 7
    3fd2:	66 c4       	rjmp	.+2252   	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fd4:	08 95       	ret
				case '6':
				kompass.HMC5883L_command(0x01,HMCGAIN390);
    3fd6:	40 ea       	ldi	r20, 0xA0	; 160
    3fd8:	61 e0       	ldi	r22, 0x01	; 1
    3fda:	8c e5       	ldi	r24, 0x5C	; 92
    3fdc:	97 e0       	ldi	r25, 0x07	; 7
    3fde:	60 c4       	rjmp	.+2240   	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fe0:	08 95       	ret
				case '7':
				kompass.HMC5883L_command(0x01,HMCGAIN330);
    3fe2:	40 ec       	ldi	r20, 0xC0	; 192
    3fe4:	61 e0       	ldi	r22, 0x01	; 1
    3fe6:	8c e5       	ldi	r24, 0x5C	; 92
    3fe8:	97 e0       	ldi	r25, 0x07	; 7
    3fea:	5a c4       	rjmp	.+2228   	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fec:	08 95       	ret
				case '8':
				kompass.HMC5883L_command(0x01,HMCGAIN230);
    3fee:	40 ee       	ldi	r20, 0xE0	; 224
    3ff0:	61 e0       	ldi	r22, 0x01	; 1
    3ff2:	8c e5       	ldi	r24, 0x5C	; 92
    3ff4:	97 e0       	ldi	r25, 0x07	; 7
    3ff6:	54 c4       	rjmp	.+2216   	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3ff8:	08 95       	ret
				default:
				anzeige &=~(1<<Kompasflag);
    3ffa:	2f 77       	andi	r18, 0x7F	; 127
    3ffc:	3d 7f       	andi	r19, 0xFD	; 253
				anzeige|=(1<<Kompasgaineinstellenflag);
    3ffe:	32 60       	ori	r19, 0x02	; 2
    4000:	30 93 10 03 	sts	0x0310, r19
    4004:	20 93 0f 03 	sts	0x030F, r18
				break;
    4008:	a9 c2       	rjmp	.+1362   	; 0x455c <__stack+0x45d>
    400a:	a9 01       	movw	r20, r18
    400c:	44 70       	andi	r20, 0x04	; 4
    400e:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag)) && (anzeige&(1<<Timerflag)))
    4010:	44 30       	cpi	r20, 0x04	; 4
    4012:	50 41       	sbci	r21, 0x10	; 16
    4014:	09 f0       	breq	.+2      	; 0x4018 <_Z14eingabehandlerh+0x36c>
    4016:	60 c1       	rjmp	.+704    	; 0x42d8 <__stack+0x1d9>
		{
			switch (pos)
    4018:	40 91 0d 03 	lds	r20, 0x030D
    401c:	42 30       	cpi	r20, 0x02	; 2
    401e:	09 f4       	brne	.+2      	; 0x4022 <_Z14eingabehandlerh+0x376>
    4020:	6d c0       	rjmp	.+218    	; 0x40fc <_Z14eingabehandlerh+0x450>
    4022:	28 f4       	brcc	.+10     	; 0x402e <_Z14eingabehandlerh+0x382>
    4024:	44 23       	and	r20, r20
    4026:	61 f0       	breq	.+24     	; 0x4040 <_Z14eingabehandlerh+0x394>
    4028:	41 30       	cpi	r20, 0x01	; 1
    402a:	d9 f1       	breq	.+118    	; 0x40a2 <_Z14eingabehandlerh+0x3f6>
    402c:	97 c2       	rjmp	.+1326   	; 0x455c <__stack+0x45d>
    402e:	44 30       	cpi	r20, 0x04	; 4
    4030:	09 f4       	brne	.+2      	; 0x4034 <_Z14eingabehandlerh+0x388>
    4032:	d1 c0       	rjmp	.+418    	; 0x41d6 <__stack+0xd7>
    4034:	08 f4       	brcc	.+2      	; 0x4038 <_Z14eingabehandlerh+0x38c>
    4036:	9a c0       	rjmp	.+308    	; 0x416c <__stack+0x6d>
    4038:	45 30       	cpi	r20, 0x05	; 5
    403a:	09 f4       	brne	.+2      	; 0x403e <_Z14eingabehandlerh+0x392>
    403c:	04 c1       	rjmp	.+520    	; 0x4246 <__stack+0x147>
    403e:	8e c2       	rjmp	.+1308   	; 0x455c <__stack+0x45d>
			{
				case 0:
					switch (taste)
    4040:	83 32       	cpi	r24, 0x23	; 35
    4042:	19 f0       	breq	.+6      	; 0x404a <_Z14eingabehandlerh+0x39e>
    4044:	8a 32       	cpi	r24, 0x2A	; 42
    4046:	41 f0       	breq	.+16     	; 0x4058 <_Z14eingabehandlerh+0x3ac>
    4048:	1a c0       	rjmp	.+52     	; 0x407e <_Z14eingabehandlerh+0x3d2>
					{
						case '#':
							pos=0;
    404a:	10 92 0d 03 	sts	0x030D, r1
							rtc.Timerzahler=0;
    404e:	10 92 59 07 	sts	0x0759, r1
    4052:	10 92 58 07 	sts	0x0758, r1
							break;
    4056:	08 95       	ret
						case '*':
							pos=0;
    4058:	10 92 0d 03 	sts	0x030D, r1
							rtc.Timerzahler++;
    405c:	e8 e5       	ldi	r30, 0x58	; 88
    405e:	f7 e0       	ldi	r31, 0x07	; 7
    4060:	40 81       	ld	r20, Z
    4062:	51 81       	ldd	r21, Z+1	; 0x01
    4064:	4f 5f       	subi	r20, 0xFF	; 255
    4066:	5f 4f       	sbci	r21, 0xFF	; 255
    4068:	51 83       	std	Z+1, r21	; 0x01
    406a:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    406c:	3f 7e       	andi	r19, 0xEF	; 239
    406e:	30 93 10 03 	sts	0x0310, r19
    4072:	20 93 0f 03 	sts	0x030F, r18
							rtc.interupts|=(1<<Timerlauft);
    4076:	92 62       	ori	r25, 0x22	; 34
    4078:	90 93 55 07 	sts	0x0755, r25
							break;
    407c:	93 c2       	rjmp	.+1318   	; 0x45a4 <__stack+0x4a5>
						default:
						rtc.Timerzahler=(taste-'0')*10;
    407e:	48 2f       	mov	r20, r24
    4080:	50 e0       	ldi	r21, 0x00	; 0
    4082:	40 53       	subi	r20, 0x30	; 48
    4084:	51 09       	sbc	r21, r1
    4086:	9a e0       	ldi	r25, 0x0A	; 10
    4088:	94 9f       	mul	r25, r20
    408a:	90 01       	movw	r18, r0
    408c:	95 9f       	mul	r25, r21
    408e:	30 0d       	add	r19, r0
    4090:	11 24       	eor	r1, r1
    4092:	30 93 59 07 	sts	0x0759, r19
    4096:	20 93 58 07 	sts	0x0758, r18
						pos++;
    409a:	91 e0       	ldi	r25, 0x01	; 1
    409c:	90 93 0d 03 	sts	0x030D, r25
						break;
    40a0:	5d c2       	rjmp	.+1210   	; 0x455c <__stack+0x45d>
					}
					break;
				case 1:
					switch (taste)
    40a2:	83 32       	cpi	r24, 0x23	; 35
    40a4:	19 f0       	breq	.+6      	; 0x40ac <_Z14eingabehandlerh+0x400>
    40a6:	8a 32       	cpi	r24, 0x2A	; 42
    40a8:	41 f0       	breq	.+16     	; 0x40ba <_Z14eingabehandlerh+0x40e>
    40aa:	1a c0       	rjmp	.+52     	; 0x40e0 <_Z14eingabehandlerh+0x434>
					{
						case '#':
							pos=0;
    40ac:	10 92 0d 03 	sts	0x030D, r1
							rtc.Timerzahler=0;
    40b0:	10 92 59 07 	sts	0x0759, r1
    40b4:	10 92 58 07 	sts	0x0758, r1
							break;
    40b8:	08 95       	ret
						case '*':
							pos=0;
    40ba:	10 92 0d 03 	sts	0x030D, r1
							rtc.Timerzahler++;
    40be:	e8 e5       	ldi	r30, 0x58	; 88
    40c0:	f7 e0       	ldi	r31, 0x07	; 7
    40c2:	40 81       	ld	r20, Z
    40c4:	51 81       	ldd	r21, Z+1	; 0x01
    40c6:	4f 5f       	subi	r20, 0xFF	; 255
    40c8:	5f 4f       	sbci	r21, 0xFF	; 255
    40ca:	51 83       	std	Z+1, r21	; 0x01
    40cc:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    40ce:	3f 7e       	andi	r19, 0xEF	; 239
    40d0:	30 93 10 03 	sts	0x0310, r19
    40d4:	20 93 0f 03 	sts	0x030F, r18
							rtc.interupts|=(1<<Timerlauft);
    40d8:	92 62       	ori	r25, 0x22	; 34
    40da:	90 93 55 07 	sts	0x0755, r25
							break;
    40de:	62 c2       	rjmp	.+1220   	; 0x45a4 <__stack+0x4a5>
						default:
						rtc.Timerzahler+=(taste-'0');
    40e0:	e8 e5       	ldi	r30, 0x58	; 88
    40e2:	f7 e0       	ldi	r31, 0x07	; 7
    40e4:	20 81       	ld	r18, Z
    40e6:	31 81       	ldd	r19, Z+1	; 0x01
    40e8:	20 53       	subi	r18, 0x30	; 48
    40ea:	31 09       	sbc	r19, r1
    40ec:	28 0f       	add	r18, r24
    40ee:	31 1d       	adc	r19, r1
    40f0:	31 83       	std	Z+1, r19	; 0x01
    40f2:	20 83       	st	Z, r18
						pos++;
    40f4:	92 e0       	ldi	r25, 0x02	; 2
    40f6:	90 93 0d 03 	sts	0x030D, r25
						break;
    40fa:	30 c2       	rjmp	.+1120   	; 0x455c <__stack+0x45d>
					}
					break;
				case 2:
					switch (taste)
    40fc:	83 32       	cpi	r24, 0x23	; 35
    40fe:	19 f0       	breq	.+6      	; 0x4106 <__stack+0x7>
    4100:	8a 32       	cpi	r24, 0x2A	; 42
    4102:	41 f0       	breq	.+16     	; 0x4114 <__stack+0x15>
    4104:	1a c0       	rjmp	.+52     	; 0x413a <__stack+0x3b>
					{
						case '#':
							pos=0;
    4106:	10 92 0d 03 	sts	0x030D, r1
							rtc.Timerzahler=0;
    410a:	10 92 59 07 	sts	0x0759, r1
    410e:	10 92 58 07 	sts	0x0758, r1
							break;
    4112:	08 95       	ret
						case '*':
							pos=0;
    4114:	10 92 0d 03 	sts	0x030D, r1
							rtc.Timerzahler++;
    4118:	e8 e5       	ldi	r30, 0x58	; 88
    411a:	f7 e0       	ldi	r31, 0x07	; 7
    411c:	40 81       	ld	r20, Z
    411e:	51 81       	ldd	r21, Z+1	; 0x01
    4120:	4f 5f       	subi	r20, 0xFF	; 255
    4122:	5f 4f       	sbci	r21, 0xFF	; 255
    4124:	51 83       	std	Z+1, r21	; 0x01
    4126:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    4128:	3f 7e       	andi	r19, 0xEF	; 239
    412a:	30 93 10 03 	sts	0x0310, r19
    412e:	20 93 0f 03 	sts	0x030F, r18
							rtc.interupts|=(1<<Timerlauft);;
    4132:	92 62       	ori	r25, 0x22	; 34
    4134:	90 93 55 07 	sts	0x0755, r25
							break;
    4138:	35 c2       	rjmp	.+1130   	; 0x45a4 <__stack+0x4a5>
						default:
						rtc.Timerzahler+=(taste-'0')*10*60;
    413a:	e8 e5       	ldi	r30, 0x58	; 88
    413c:	f7 e0       	ldi	r31, 0x07	; 7
    413e:	68 2f       	mov	r22, r24
    4140:	70 e0       	ldi	r23, 0x00	; 0
    4142:	60 53       	subi	r22, 0x30	; 48
    4144:	71 09       	sbc	r23, r1
    4146:	28 e5       	ldi	r18, 0x58	; 88
    4148:	32 e0       	ldi	r19, 0x02	; 2
    414a:	62 9f       	mul	r22, r18
    414c:	a0 01       	movw	r20, r0
    414e:	63 9f       	mul	r22, r19
    4150:	50 0d       	add	r21, r0
    4152:	72 9f       	mul	r23, r18
    4154:	50 0d       	add	r21, r0
    4156:	11 24       	eor	r1, r1
    4158:	20 81       	ld	r18, Z
    415a:	31 81       	ldd	r19, Z+1	; 0x01
    415c:	24 0f       	add	r18, r20
    415e:	35 1f       	adc	r19, r21
    4160:	31 83       	std	Z+1, r19	; 0x01
    4162:	20 83       	st	Z, r18
						pos++;
    4164:	93 e0       	ldi	r25, 0x03	; 3
    4166:	90 93 0d 03 	sts	0x030D, r25
						break;
    416a:	f8 c1       	rjmp	.+1008   	; 0x455c <__stack+0x45d>
					}
					break;
				case 3:
					switch (taste)
    416c:	83 32       	cpi	r24, 0x23	; 35
    416e:	19 f0       	breq	.+6      	; 0x4176 <__stack+0x77>
    4170:	8a 32       	cpi	r24, 0x2A	; 42
    4172:	41 f0       	breq	.+16     	; 0x4184 <__stack+0x85>
    4174:	1a c0       	rjmp	.+52     	; 0x41aa <__stack+0xab>
					{
						case '#':
							pos=0;
    4176:	10 92 0d 03 	sts	0x030D, r1
							rtc.Timerzahler=0;
    417a:	10 92 59 07 	sts	0x0759, r1
    417e:	10 92 58 07 	sts	0x0758, r1
							break;
    4182:	08 95       	ret
						case '*':
							pos=0;
    4184:	10 92 0d 03 	sts	0x030D, r1
							rtc.Timerzahler++;
    4188:	e8 e5       	ldi	r30, 0x58	; 88
    418a:	f7 e0       	ldi	r31, 0x07	; 7
    418c:	40 81       	ld	r20, Z
    418e:	51 81       	ldd	r21, Z+1	; 0x01
    4190:	4f 5f       	subi	r20, 0xFF	; 255
    4192:	5f 4f       	sbci	r21, 0xFF	; 255
    4194:	51 83       	std	Z+1, r21	; 0x01
    4196:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    4198:	3f 7e       	andi	r19, 0xEF	; 239
    419a:	30 93 10 03 	sts	0x0310, r19
    419e:	20 93 0f 03 	sts	0x030F, r18
							rtc.interupts|=(1<<Timerlauft);
    41a2:	92 62       	ori	r25, 0x22	; 34
    41a4:	90 93 55 07 	sts	0x0755, r25
							break;
    41a8:	fd c1       	rjmp	.+1018   	; 0x45a4 <__stack+0x4a5>
						default:
						rtc.Timerzahler+=(taste-'0')*60;
    41aa:	e8 e5       	ldi	r30, 0x58	; 88
    41ac:	f7 e0       	ldi	r31, 0x07	; 7
    41ae:	28 2f       	mov	r18, r24
    41b0:	30 e0       	ldi	r19, 0x00	; 0
    41b2:	20 53       	subi	r18, 0x30	; 48
    41b4:	31 09       	sbc	r19, r1
    41b6:	9c e3       	ldi	r25, 0x3C	; 60
    41b8:	92 9f       	mul	r25, r18
    41ba:	a0 01       	movw	r20, r0
    41bc:	93 9f       	mul	r25, r19
    41be:	50 0d       	add	r21, r0
    41c0:	11 24       	eor	r1, r1
    41c2:	20 81       	ld	r18, Z
    41c4:	31 81       	ldd	r19, Z+1	; 0x01
    41c6:	24 0f       	add	r18, r20
    41c8:	35 1f       	adc	r19, r21
    41ca:	31 83       	std	Z+1, r19	; 0x01
    41cc:	20 83       	st	Z, r18
						pos++;
    41ce:	94 e0       	ldi	r25, 0x04	; 4
    41d0:	90 93 0d 03 	sts	0x030D, r25
						break;
    41d4:	c3 c1       	rjmp	.+902    	; 0x455c <__stack+0x45d>
					}
					break;
				case 4:
					switch (taste)
    41d6:	83 32       	cpi	r24, 0x23	; 35
    41d8:	19 f0       	breq	.+6      	; 0x41e0 <__stack+0xe1>
    41da:	8a 32       	cpi	r24, 0x2A	; 42
    41dc:	41 f0       	breq	.+16     	; 0x41ee <__stack+0xef>
    41de:	1a c0       	rjmp	.+52     	; 0x4214 <__stack+0x115>
					{
						case '#':
							pos=0;
    41e0:	10 92 0d 03 	sts	0x030D, r1
							rtc.Timerzahler=0;
    41e4:	10 92 59 07 	sts	0x0759, r1
    41e8:	10 92 58 07 	sts	0x0758, r1
							break;
    41ec:	08 95       	ret
						case '*':
							pos=0;
    41ee:	10 92 0d 03 	sts	0x030D, r1
							rtc.Timerzahler++;
    41f2:	e8 e5       	ldi	r30, 0x58	; 88
    41f4:	f7 e0       	ldi	r31, 0x07	; 7
    41f6:	40 81       	ld	r20, Z
    41f8:	51 81       	ldd	r21, Z+1	; 0x01
    41fa:	4f 5f       	subi	r20, 0xFF	; 255
    41fc:	5f 4f       	sbci	r21, 0xFF	; 255
    41fe:	51 83       	std	Z+1, r21	; 0x01
    4200:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    4202:	3f 7e       	andi	r19, 0xEF	; 239
    4204:	30 93 10 03 	sts	0x0310, r19
    4208:	20 93 0f 03 	sts	0x030F, r18
							rtc.interupts|=(1<<Timerlauft);
    420c:	92 62       	ori	r25, 0x22	; 34
    420e:	90 93 55 07 	sts	0x0755, r25
							break;
    4212:	c8 c1       	rjmp	.+912    	; 0x45a4 <__stack+0x4a5>
						default:
						rtc.Timerzahler+=(taste-'0')*10*3600;
    4214:	e8 e5       	ldi	r30, 0x58	; 88
    4216:	f7 e0       	ldi	r31, 0x07	; 7
    4218:	68 2f       	mov	r22, r24
    421a:	70 e0       	ldi	r23, 0x00	; 0
    421c:	60 53       	subi	r22, 0x30	; 48
    421e:	71 09       	sbc	r23, r1
    4220:	20 ea       	ldi	r18, 0xA0	; 160
    4222:	3c e8       	ldi	r19, 0x8C	; 140
    4224:	62 9f       	mul	r22, r18
    4226:	a0 01       	movw	r20, r0
    4228:	63 9f       	mul	r22, r19
    422a:	50 0d       	add	r21, r0
    422c:	72 9f       	mul	r23, r18
    422e:	50 0d       	add	r21, r0
    4230:	11 24       	eor	r1, r1
    4232:	20 81       	ld	r18, Z
    4234:	31 81       	ldd	r19, Z+1	; 0x01
    4236:	24 0f       	add	r18, r20
    4238:	35 1f       	adc	r19, r21
    423a:	31 83       	std	Z+1, r19	; 0x01
    423c:	20 83       	st	Z, r18
						pos++;
    423e:	95 e0       	ldi	r25, 0x05	; 5
    4240:	90 93 0d 03 	sts	0x030D, r25
						break;
    4244:	8b c1       	rjmp	.+790    	; 0x455c <__stack+0x45d>
					}
					break;
				case 5:
					switch (taste)
    4246:	83 32       	cpi	r24, 0x23	; 35
    4248:	19 f0       	breq	.+6      	; 0x4250 <__stack+0x151>
    424a:	8a 32       	cpi	r24, 0x2A	; 42
    424c:	31 f0       	breq	.+12     	; 0x425a <__stack+0x15b>
    424e:	16 c0       	rjmp	.+44     	; 0x427c <__stack+0x17d>
					{
						case '#':
							pos=0;
							rtc.Timerzahler=0;
    4250:	10 92 59 07 	sts	0x0759, r1
    4254:	10 92 58 07 	sts	0x0758, r1
							break;
    4258:	26 c0       	rjmp	.+76     	; 0x42a6 <__stack+0x1a7>
						case '*':
							pos=0;
							rtc.Timerzahler++;
    425a:	e8 e5       	ldi	r30, 0x58	; 88
    425c:	f7 e0       	ldi	r31, 0x07	; 7
    425e:	40 81       	ld	r20, Z
    4260:	51 81       	ldd	r21, Z+1	; 0x01
    4262:	4f 5f       	subi	r20, 0xFF	; 255
    4264:	5f 4f       	sbci	r21, 0xFF	; 255
    4266:	51 83       	std	Z+1, r21	; 0x01
    4268:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    426a:	3f 7e       	andi	r19, 0xEF	; 239
    426c:	30 93 10 03 	sts	0x0310, r19
    4270:	20 93 0f 03 	sts	0x030F, r18
							rtc.interupts|=(1<<Timerlauft);
    4274:	92 62       	ori	r25, 0x22	; 34
    4276:	90 93 55 07 	sts	0x0755, r25
							break;
    427a:	15 c0       	rjmp	.+42     	; 0x42a6 <__stack+0x1a7>
						default:
						rtc.Timerzahler+=(taste-'0')*3600;
    427c:	e8 e5       	ldi	r30, 0x58	; 88
    427e:	f7 e0       	ldi	r31, 0x07	; 7
    4280:	68 2f       	mov	r22, r24
    4282:	70 e0       	ldi	r23, 0x00	; 0
    4284:	60 53       	subi	r22, 0x30	; 48
    4286:	71 09       	sbc	r23, r1
    4288:	20 e1       	ldi	r18, 0x10	; 16
    428a:	3e e0       	ldi	r19, 0x0E	; 14
    428c:	62 9f       	mul	r22, r18
    428e:	a0 01       	movw	r20, r0
    4290:	63 9f       	mul	r22, r19
    4292:	50 0d       	add	r21, r0
    4294:	72 9f       	mul	r23, r18
    4296:	50 0d       	add	r21, r0
    4298:	11 24       	eor	r1, r1
    429a:	20 81       	ld	r18, Z
    429c:	31 81       	ldd	r19, Z+1	; 0x01
    429e:	24 0f       	add	r18, r20
    42a0:	35 1f       	adc	r19, r21
    42a2:	31 83       	std	Z+1, r19	; 0x01
    42a4:	20 83       	st	Z, r18
						pos++;
						break;
					}
					pos=0;
    42a6:	10 92 0d 03 	sts	0x030D, r1
					rtc.Timerzahler++;
    42aa:	e8 e5       	ldi	r30, 0x58	; 88
    42ac:	f7 e0       	ldi	r31, 0x07	; 7
    42ae:	20 81       	ld	r18, Z
    42b0:	31 81       	ldd	r19, Z+1	; 0x01
    42b2:	2f 5f       	subi	r18, 0xFF	; 255
    42b4:	3f 4f       	sbci	r19, 0xFF	; 255
    42b6:	31 83       	std	Z+1, r19	; 0x01
    42b8:	20 83       	st	Z, r18
					anzeige&=~(1<<Einstellungsflag);
    42ba:	20 91 0f 03 	lds	r18, 0x030F
    42be:	30 91 10 03 	lds	r19, 0x0310
    42c2:	3f 7e       	andi	r19, 0xEF	; 239
    42c4:	30 93 10 03 	sts	0x0310, r19
    42c8:	20 93 0f 03 	sts	0x030F, r18
					rtc.interupts|=(1<<Timerlauft);
    42cc:	e5 e5       	ldi	r30, 0x55	; 85
    42ce:	f7 e0       	ldi	r31, 0x07	; 7
    42d0:	90 81       	ld	r25, Z
    42d2:	90 62       	ori	r25, 0x20	; 32
    42d4:	90 83       	st	Z, r25
					break;
    42d6:	42 c1       	rjmp	.+644    	; 0x455c <__stack+0x45d>
				default:
					break;
			}
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    42d8:	23 ff       	sbrs	r18, 3
    42da:	22 c0       	rjmp	.+68     	; 0x4320 <__stack+0x221>
		{
			if (taste=='*')
    42dc:	8a 32       	cpi	r24, 0x2A	; 42
    42de:	59 f4       	brne	.+22     	; 0x42f6 <__stack+0x1f7>
			{
				if ((rtc.interupts&(1<<Stoppuhrlauft)))
    42e0:	96 ff       	sbrs	r25, 6
    42e2:	05 c0       	rjmp	.+10     	; 0x42ee <__stack+0x1ef>
				{
					rtc.interupts&=~(1<<Stoppuhrlauft);
    42e4:	9f 7b       	andi	r25, 0xBF	; 191
    42e6:	92 60       	ori	r25, 0x02	; 2
    42e8:	90 93 55 07 	sts	0x0755, r25
    42ec:	5b c1       	rjmp	.+694    	; 0x45a4 <__stack+0x4a5>
				}
				else{
					rtc.interupts|=(1<<Stoppuhrlauft);
    42ee:	92 64       	ori	r25, 0x42	; 66
    42f0:	90 93 55 07 	sts	0x0755, r25
    42f4:	57 c1       	rjmp	.+686    	; 0x45a4 <__stack+0x4a5>
				}
			}
			else if (taste=='0')
    42f6:	80 33       	cpi	r24, 0x30	; 48
    42f8:	29 f4       	brne	.+10     	; 0x4304 <__stack+0x205>
			{
				rtc.Stoppuhrzahler=0;
    42fa:	10 92 5b 07 	sts	0x075B, r1
    42fe:	10 92 5a 07 	sts	0x075A, r1
    4302:	08 95       	ret
			}
			else if (taste=='#')
    4304:	83 32       	cpi	r24, 0x23	; 35
    4306:	09 f0       	breq	.+2      	; 0x430a <__stack+0x20b>
    4308:	53 c1       	rjmp	.+678    	; 0x45b0 <__stack+0x4b1>
			{
				anzeige&=~((1<<Stoppuhrflag));
				rtc.interupts&=~(1<<Stoppuhrlauft);
    430a:	9f 7b       	andi	r25, 0xBF	; 191
    430c:	92 60       	ori	r25, 0x02	; 2
    430e:	90 93 55 07 	sts	0x0755, r25
			{
				rtc.Stoppuhrzahler=0;
			}
			else if (taste=='#')
			{
				anzeige&=~((1<<Stoppuhrflag));
    4312:	27 7f       	andi	r18, 0xF7	; 247
				rtc.interupts&=~(1<<Stoppuhrlauft);
				anzeige|=(1<<menueflag);
    4314:	30 62       	ori	r19, 0x20	; 32
    4316:	30 93 10 03 	sts	0x0310, r19
    431a:	20 93 0f 03 	sts	0x030F, r18
    431e:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflag)))
    4320:	21 ff       	sbrs	r18, 1
    4322:	26 c0       	rjmp	.+76     	; 0x4370 <__stack+0x271>
		{
			if (taste=='#')
    4324:	83 32       	cpi	r24, 0x23	; 35
    4326:	49 f4       	brne	.+18     	; 0x433a <__stack+0x23b>
			{
				pos=0;
    4328:	10 92 0d 03 	sts	0x030D, r1
				anzeige&=~(1<<Uhrflag);
    432c:	2d 7f       	andi	r18, 0xFD	; 253
				anzeige|=(1<<menueflag);
    432e:	30 62       	ori	r19, 0x20	; 32
    4330:	30 93 10 03 	sts	0x0310, r19
    4334:	20 93 0f 03 	sts	0x030F, r18
    4338:	08 95       	ret
			}
			else if (taste=='*')
    433a:	8a 32       	cpi	r24, 0x2A	; 42
    433c:	49 f4       	brne	.+18     	; 0x4350 <__stack+0x251>
			{
				pos++;
    433e:	80 91 0d 03 	lds	r24, 0x030D
    4342:	8f 5f       	subi	r24, 0xFF	; 255
				if (pos>1)
    4344:	82 30       	cpi	r24, 0x02	; 2
    4346:	08 f4       	brcc	.+2      	; 0x434a <__stack+0x24b>
    4348:	2b c1       	rjmp	.+598    	; 0x45a0 <__stack+0x4a1>
				{
					pos=0;
    434a:	10 92 0d 03 	sts	0x030D, r1
    434e:	2a c1       	rjmp	.+596    	; 0x45a4 <__stack+0x4a5>
				}
			}
			else if (taste=='0')
    4350:	80 33       	cpi	r24, 0x30	; 48
    4352:	09 f0       	breq	.+2      	; 0x4356 <__stack+0x257>
    4354:	2d c1       	rjmp	.+602    	; 0x45b0 <__stack+0x4b1>
			{
				if (LED.ison())
    4356:	8e e2       	ldi	r24, 0x2E	; 46
    4358:	93 e0       	ldi	r25, 0x03	; 3
    435a:	94 d6       	rcall	.+3368   	; 0x5084 <_ZN6Output4isonEv>
    435c:	88 23       	and	r24, r24
    435e:	21 f0       	breq	.+8      	; 0x4368 <__stack+0x269>
				{
					LED.off();
    4360:	8e e2       	ldi	r24, 0x2E	; 46
    4362:	93 e0       	ldi	r25, 0x03	; 3
    4364:	d2 c6       	rjmp	.+3492   	; 0x510a <_ZN6Output3offEv>
    4366:	08 95       	ret
				}
				else{
					LED.on();
    4368:	8e e2       	ldi	r24, 0x2E	; 46
    436a:	93 e0       	ldi	r25, 0x03	; 3
    436c:	42 c6       	rjmp	.+3204   	; 0x4ff2 <_ZN6Output2onEv>
    436e:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Kompasflag)))
    4370:	27 ff       	sbrs	r18, 7
    4372:	1a c0       	rjmp	.+52     	; 0x43a8 <__stack+0x2a9>
		{
			if (taste=='#')
    4374:	83 32       	cpi	r24, 0x23	; 35
    4376:	41 f4       	brne	.+16     	; 0x4388 <__stack+0x289>
			{
				anzeige&=~(1<<Kompasflag);
    4378:	c9 01       	movw	r24, r18
    437a:	8f 77       	andi	r24, 0x7F	; 127
				anzeige|=(1<<menueflag);
    437c:	90 62       	ori	r25, 0x20	; 32
    437e:	90 93 10 03 	sts	0x0310, r25
    4382:	80 93 0f 03 	sts	0x030F, r24
    4386:	08 95       	ret
			}
			else if (taste=='0')
    4388:	80 33       	cpi	r24, 0x30	; 48
    438a:	09 f0       	breq	.+2      	; 0x438e <__stack+0x28f>
    438c:	e7 c0       	rjmp	.+462    	; 0x455c <__stack+0x45d>
			{
				if (LED.ison())
    438e:	8e e2       	ldi	r24, 0x2E	; 46
    4390:	93 e0       	ldi	r25, 0x03	; 3
    4392:	78 d6       	rcall	.+3312   	; 0x5084 <_ZN6Output4isonEv>
    4394:	88 23       	and	r24, r24
    4396:	21 f0       	breq	.+8      	; 0x43a0 <__stack+0x2a1>
				{
					LED.off();
    4398:	8e e2       	ldi	r24, 0x2E	; 46
    439a:	93 e0       	ldi	r25, 0x03	; 3
    439c:	b6 c6       	rjmp	.+3436   	; 0x510a <_ZN6Output3offEv>
    439e:	08 95       	ret
				}
				else{
					LED.on();
    43a0:	8e e2       	ldi	r24, 0x2E	; 46
    43a2:	93 e0       	ldi	r25, 0x03	; 3
    43a4:	26 c6       	rjmp	.+3148   	; 0x4ff2 <_ZN6Output2onEv>
    43a6:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Fahradflag)))
    43a8:	20 ff       	sbrs	r18, 0
    43aa:	37 c0       	rjmp	.+110    	; 0x441a <__stack+0x31b>
		{
			if (taste=='#')
    43ac:	83 32       	cpi	r24, 0x23	; 35
    43ae:	51 f4       	brne	.+20     	; 0x43c4 <__stack+0x2c5>
			{
				anzeige&=~(1<<Fahradflag);
    43b0:	c9 01       	movw	r24, r18
    43b2:	8e 7f       	andi	r24, 0xFE	; 254
				anzeige|=(1<<menueflag);
    43b4:	90 62       	ori	r25, 0x20	; 32
    43b6:	90 93 10 03 	sts	0x0310, r25
    43ba:	80 93 0f 03 	sts	0x030F, r24
				inittimer(2);
    43be:	82 e0       	ldi	r24, 0x02	; 2
    43c0:	1d c9       	rjmp	.-3526   	; 0x35fc <_Z9inittimerh>
    43c2:	08 95       	ret
			}
			else if (taste=='*')
    43c4:	8a 32       	cpi	r24, 0x2A	; 42
    43c6:	c9 f4       	brne	.+50     	; 0x43fa <__stack+0x2fb>
			{
				maxgeschw = 0;
    43c8:	10 92 00 03 	sts	0x0300, r1
    43cc:	10 92 01 03 	sts	0x0301, r1
    43d0:	10 92 02 03 	sts	0x0302, r1
    43d4:	10 92 03 03 	sts	0x0303, r1
				strecke = 0;
    43d8:	10 92 04 03 	sts	0x0304, r1
    43dc:	10 92 05 03 	sts	0x0305, r1
    43e0:	10 92 06 03 	sts	0x0306, r1
    43e4:	10 92 07 03 	sts	0x0307, r1
				Fahrtzeit = 0;
    43e8:	10 92 fc 02 	sts	0x02FC, r1
    43ec:	10 92 fd 02 	sts	0x02FD, r1
    43f0:	10 92 fe 02 	sts	0x02FE, r1
    43f4:	10 92 ff 02 	sts	0x02FF, r1
    43f8:	d5 c0       	rjmp	.+426    	; 0x45a4 <__stack+0x4a5>
			}
			else if (taste=='0')
    43fa:	80 33       	cpi	r24, 0x30	; 48
    43fc:	09 f0       	breq	.+2      	; 0x4400 <__stack+0x301>
    43fe:	d8 c0       	rjmp	.+432    	; 0x45b0 <__stack+0x4b1>
			{
				if (LED.ison())
    4400:	8e e2       	ldi	r24, 0x2E	; 46
    4402:	93 e0       	ldi	r25, 0x03	; 3
    4404:	3f d6       	rcall	.+3198   	; 0x5084 <_ZN6Output4isonEv>
    4406:	88 23       	and	r24, r24
    4408:	21 f0       	breq	.+8      	; 0x4412 <__stack+0x313>
				{
					LED.off();
    440a:	8e e2       	ldi	r24, 0x2E	; 46
    440c:	93 e0       	ldi	r25, 0x03	; 3
    440e:	7d c6       	rjmp	.+3322   	; 0x510a <_ZN6Output3offEv>
    4410:	08 95       	ret
				}
				else{
					LED.on();
    4412:	8e e2       	ldi	r24, 0x2E	; 46
    4414:	93 e0       	ldi	r25, 0x03	; 3
    4416:	ed c5       	rjmp	.+3034   	; 0x4ff2 <_ZN6Output2onEv>
    4418:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Druckflag)))
    441a:	32 ff       	sbrs	r19, 2
    441c:	1a c0       	rjmp	.+52     	; 0x4452 <__stack+0x353>
		{
			if (taste=='#')
    441e:	83 32       	cpi	r24, 0x23	; 35
    4420:	41 f4       	brne	.+16     	; 0x4432 <__stack+0x333>
			{
				anzeige&=~(1<<Druckflag);
    4422:	c9 01       	movw	r24, r18
    4424:	9b 7f       	andi	r25, 0xFB	; 251
				anzeige|=(1<<menueflag);
    4426:	90 62       	ori	r25, 0x20	; 32
    4428:	90 93 10 03 	sts	0x0310, r25
    442c:	80 93 0f 03 	sts	0x030F, r24
    4430:	08 95       	ret
			}
			else if (taste=='*')
			{
				//Baro.set_Pressure0(Baro.Press);
			}
			else if (taste=='0')
    4432:	80 33       	cpi	r24, 0x30	; 48
    4434:	09 f0       	breq	.+2      	; 0x4438 <__stack+0x339>
    4436:	92 c0       	rjmp	.+292    	; 0x455c <__stack+0x45d>
			{
				if (LED.ison())
    4438:	8e e2       	ldi	r24, 0x2E	; 46
    443a:	93 e0       	ldi	r25, 0x03	; 3
    443c:	23 d6       	rcall	.+3142   	; 0x5084 <_ZN6Output4isonEv>
    443e:	88 23       	and	r24, r24
    4440:	21 f0       	breq	.+8      	; 0x444a <__stack+0x34b>
				{
					LED.off();
    4442:	8e e2       	ldi	r24, 0x2E	; 46
    4444:	93 e0       	ldi	r25, 0x03	; 3
    4446:	61 c6       	rjmp	.+3266   	; 0x510a <_ZN6Output3offEv>
    4448:	08 95       	ret
				}
				else{
					LED.on();
    444a:	8e e2       	ldi	r24, 0x2E	; 46
    444c:	93 e0       	ldi	r25, 0x03	; 3
    444e:	d1 c5       	rjmp	.+2978   	; 0x4ff2 <_ZN6Output2onEv>
    4450:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Timerflag)))
    4452:	22 ff       	sbrs	r18, 2
    4454:	23 c0       	rjmp	.+70     	; 0x449c <__stack+0x39d>
		{
			if (taste=='#')
    4456:	83 32       	cpi	r24, 0x23	; 35
    4458:	09 f0       	breq	.+2      	; 0x445c <__stack+0x35d>
    445a:	80 c0       	rjmp	.+256    	; 0x455c <__stack+0x45d>
			{
				anzeige&=~((1<<Timerflag)|(1<<blinkflag));
    445c:	2b 7f       	andi	r18, 0xFB	; 251
    445e:	3f 7b       	andi	r19, 0xBF	; 191
    4460:	30 93 10 03 	sts	0x0310, r19
    4464:	20 93 0f 03 	sts	0x030F, r18
				rtc.interupts&=~((1<<Timerlauft)|(1<<Alarm));
    4468:	89 2f       	mov	r24, r25
    446a:	8e 7d       	andi	r24, 0xDE	; 222
    446c:	82 60       	ori	r24, 0x02	; 2
    446e:	80 93 55 07 	sts	0x0755, r24
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    4472:	60 e0       	ldi	r22, 0x00	; 0
    4474:	8c e3       	ldi	r24, 0x3C	; 60
    4476:	93 e0       	ldi	r25, 0x03	; 3
    4478:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <_ZN7Display6invertEh>
				LED.off();
    447c:	8e e2       	ldi	r24, 0x2E	; 46
    447e:	93 e0       	ldi	r25, 0x03	; 3
    4480:	44 d6       	rcall	.+3208   	; 0x510a <_ZN6Output3offEv>
				Vibrationsmotor.off();
    4482:	8c e2       	ldi	r24, 0x2C	; 44
    4484:	93 e0       	ldi	r25, 0x03	; 3
    4486:	41 d6       	rcall	.+3202   	; 0x510a <_ZN6Output3offEv>
				
				anzeige|=(1<<menueflag);
    4488:	80 91 0f 03 	lds	r24, 0x030F
    448c:	90 91 10 03 	lds	r25, 0x0310
    4490:	90 62       	ori	r25, 0x20	; 32
    4492:	90 93 10 03 	sts	0x0310, r25
    4496:	80 93 0f 03 	sts	0x030F, r24
    449a:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflaggross)))
    449c:	25 ff       	sbrs	r18, 5
    449e:	21 c0       	rjmp	.+66     	; 0x44e2 <__stack+0x3e3>
		{
			if (taste=='#')
    44a0:	83 32       	cpi	r24, 0x23	; 35
    44a2:	41 f4       	brne	.+16     	; 0x44b4 <__stack+0x3b5>
			{
				anzeige&=~(1<<Uhrflaggross);
    44a4:	c9 01       	movw	r24, r18
    44a6:	8f 7d       	andi	r24, 0xDF	; 223
				anzeige|=(1<<menueflag);
    44a8:	90 62       	ori	r25, 0x20	; 32
    44aa:	90 93 10 03 	sts	0x0310, r25
    44ae:	80 93 0f 03 	sts	0x030F, r24
    44b2:	08 95       	ret
			}
			else if (taste=='0')
    44b4:	80 33       	cpi	r24, 0x30	; 48
    44b6:	09 f0       	breq	.+2      	; 0x44ba <__stack+0x3bb>
    44b8:	51 c0       	rjmp	.+162    	; 0x455c <__stack+0x45d>
			{
				if (LED.ison())
    44ba:	8e e2       	ldi	r24, 0x2E	; 46
    44bc:	93 e0       	ldi	r25, 0x03	; 3
    44be:	e2 d5       	rcall	.+3012   	; 0x5084 <_ZN6Output4isonEv>
    44c0:	88 23       	and	r24, r24
    44c2:	41 f0       	breq	.+16     	; 0x44d4 <__stack+0x3d5>
				{
					LED.off();
    44c4:	8e e2       	ldi	r24, 0x2E	; 46
    44c6:	93 e0       	ldi	r25, 0x03	; 3
    44c8:	20 d6       	rcall	.+3136   	; 0x510a <_ZN6Output3offEv>
					Lautsprecher.off();
    44ca:	85 e1       	ldi	r24, 0x15	; 21
    44cc:	93 e0       	ldi	r25, 0x03	; 3
    44ce:	0c 94 6f 2a 	jmp	0x54de	; 0x54de <_ZN5SOUND3offEv>
    44d2:	08 95       	ret
				}
				else{
					LED.on();
    44d4:	8e e2       	ldi	r24, 0x2E	; 46
    44d6:	93 e0       	ldi	r25, 0x03	; 3
    44d8:	8c d5       	rcall	.+2840   	; 0x4ff2 <_ZN6Output2onEv>
					Lautsprecher.on();
    44da:	85 e1       	ldi	r24, 0x15	; 21
    44dc:	93 e0       	ldi	r25, 0x03	; 3
    44de:	f6 c7       	rjmp	.+4076   	; 0x54cc <_ZN5SOUND2onEv>
    44e0:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Wanderflag)))
    44e2:	33 ff       	sbrs	r19, 3
    44e4:	0a c0       	rjmp	.+20     	; 0x44fa <__stack+0x3fb>
		{
			if (taste=='#')
    44e6:	83 32       	cpi	r24, 0x23	; 35
    44e8:	c9 f5       	brne	.+114    	; 0x455c <__stack+0x45d>
			{
				anzeige &= ~(1<<Wanderflag);
    44ea:	c9 01       	movw	r24, r18
    44ec:	97 7f       	andi	r25, 0xF7	; 247
				anzeige |= (1<<menueflag);
    44ee:	90 62       	ori	r25, 0x20	; 32
    44f0:	90 93 10 03 	sts	0x0310, r25
    44f4:	80 93 0f 03 	sts	0x030F, r24
    44f8:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    44fa:	26 ff       	sbrs	r18, 6
    44fc:	26 c0       	rjmp	.+76     	; 0x454a <__stack+0x44b>
		{
			if (taste=='#')
    44fe:	83 32       	cpi	r24, 0x23	; 35
    4500:	41 f4       	brne	.+16     	; 0x4512 <__stack+0x413>
			{
				anzeige&=~(1<<Weckeranzeigeflag);
    4502:	c9 01       	movw	r24, r18
    4504:	8f 7b       	andi	r24, 0xBF	; 191
				anzeige|=(1<<menueflag);
    4506:	90 62       	ori	r25, 0x20	; 32
    4508:	90 93 10 03 	sts	0x0310, r25
    450c:	80 93 0f 03 	sts	0x030F, r24
    4510:	08 95       	ret
			}
			if (taste=='*')
    4512:	8a 32       	cpi	r24, 0x2A	; 42
    4514:	09 f0       	breq	.+2      	; 0x4518 <__stack+0x419>
    4516:	4c c0       	rjmp	.+152    	; 0x45b0 <__stack+0x4b1>
			{
				if (rtc.interupts&(1<<Weckeractiv))
    4518:	94 ff       	sbrs	r25, 4
    451a:	06 c0       	rjmp	.+12     	; 0x4528 <__stack+0x429>
				{
					rtc.interupts &= ~((1<<Weckerein) | (1<<Weckeractiv));
    451c:	89 2f       	mov	r24, r25
    451e:	87 7e       	andi	r24, 0xE7	; 231
    4520:	82 60       	ori	r24, 0x02	; 2
    4522:	80 93 55 07 	sts	0x0755, r24
    4526:	0b c0       	rjmp	.+22     	; 0x453e <__stack+0x43f>
				}
				else if ((rtc.interupts&(1<<Weckerein)))
    4528:	93 ff       	sbrs	r25, 3
    452a:	06 c0       	rjmp	.+12     	; 0x4538 <__stack+0x439>
				{
					rtc.interupts &= ~(1<<Weckerein);
    452c:	89 2f       	mov	r24, r25
    452e:	87 7f       	andi	r24, 0xF7	; 247
    4530:	82 60       	ori	r24, 0x02	; 2
    4532:	80 93 55 07 	sts	0x0755, r24
    4536:	03 c0       	rjmp	.+6      	; 0x453e <__stack+0x43f>
				}
				else{
					rtc.interupts |= (1<<Weckerein);
    4538:	9a 60       	ori	r25, 0x0A	; 10
    453a:	90 93 55 07 	sts	0x0755, r25
				}
				rtc.interupts|=(1<<minuteninterupt);
    453e:	e5 e5       	ldi	r30, 0x55	; 85
    4540:	f7 e0       	ldi	r31, 0x07	; 7
    4542:	80 81       	ld	r24, Z
    4544:	84 60       	ori	r24, 0x04	; 4
    4546:	80 83       	st	Z, r24
    4548:	2d c0       	rjmp	.+90     	; 0x45a4 <__stack+0x4a5>
			}
		}
		else if (anzeige==0)
    454a:	23 2b       	or	r18, r19
    454c:	39 f4       	brne	.+14     	; 0x455c <__stack+0x45d>
		{
			anzeige|=(1<<menueflag);
    454e:	80 e0       	ldi	r24, 0x00	; 0
    4550:	90 e2       	ldi	r25, 0x20	; 32
    4552:	90 93 10 03 	sts	0x0310, r25
    4556:	80 93 0f 03 	sts	0x030F, r24
    455a:	08 95       	ret
		}
		if ((anzeige&(1<<blinkflag)))
    455c:	20 91 0f 03 	lds	r18, 0x030F
    4560:	30 91 10 03 	lds	r19, 0x0310
    4564:	36 ff       	sbrs	r19, 6
    4566:	24 c0       	rjmp	.+72     	; 0x45b0 <__stack+0x4b1>
		{
			if (taste=='*')
    4568:	8a 32       	cpi	r24, 0x2A	; 42
    456a:	11 f5       	brne	.+68     	; 0x45b0 <__stack+0x4b1>
			{
				anzeige &=~(1<<blinkflag);
    456c:	3f 7b       	andi	r19, 0xBF	; 191
    456e:	30 93 10 03 	sts	0x0310, r19
    4572:	20 93 0f 03 	sts	0x030F, r18
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    4576:	60 e0       	ldi	r22, 0x00	; 0
    4578:	8c e3       	ldi	r24, 0x3C	; 60
    457a:	93 e0       	ldi	r25, 0x03	; 3
    457c:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <_ZN7Display6invertEh>
				LED.off();
    4580:	8e e2       	ldi	r24, 0x2E	; 46
    4582:	93 e0       	ldi	r25, 0x03	; 3
    4584:	c2 d5       	rcall	.+2948   	; 0x510a <_ZN6Output3offEv>
				Vibrationsmotor.off();
    4586:	8c e2       	ldi	r24, 0x2C	; 44
    4588:	93 e0       	ldi	r25, 0x03	; 3
    458a:	bf d5       	rcall	.+2942   	; 0x510a <_ZN6Output3offEv>
				if ((rtc.interupts&(1<<Weckeractiv)))
    458c:	80 91 55 07 	lds	r24, 0x0755
    4590:	98 2f       	mov	r25, r24
    4592:	98 71       	andi	r25, 0x18	; 24
				{
					if ((rtc.interupts&(1<<Weckerein)))
    4594:	98 31       	cpi	r25, 0x18	; 24
    4596:	61 f4       	brne	.+24     	; 0x45b0 <__stack+0x4b1>
					{
						rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
						rtc.interupts &= ~(1<<Alarm);
    4598:	86 7e       	andi	r24, 0xE6	; 230
    459a:	80 93 55 07 	sts	0x0755, r24
    459e:	08 95       	ret
				anzeige&=~(1<<Uhrflag);
				anzeige|=(1<<menueflag);
			}
			else if (taste=='*')
			{
				pos++;
    45a0:	80 93 0d 03 	sts	0x030D, r24
		}
		else if (anzeige==0)
		{
			anzeige|=(1<<menueflag);
		}
		if ((anzeige&(1<<blinkflag)))
    45a4:	20 91 0f 03 	lds	r18, 0x030F
    45a8:	30 91 10 03 	lds	r19, 0x0310
    45ac:	36 fd       	sbrc	r19, 6
    45ae:	de cf       	rjmp	.-68     	; 0x456c <__stack+0x46d>
    45b0:	08 95       	ret

000045b2 <main>:
void eingabehandler(uint8_t taste);

int main(void)
{
	//initialisierung
	initialisierung();
    45b2:	3f d8       	rcall	.-3970   	; 0x3632 <_Z15initialisierungv>
    while(1)
    {
         //Steuerung der interupts durch Handler
         maininterupthandler();
    45b4:	c1 d8       	rcall	.-3710   	; 0x3738 <_Z19maininterupthandlerv>
         //Steuerung der Anzeige alle Sekunde zur aktualisierung maximale Aktulisierungsrate ist 1Hz
         anzeigehandler();
    45b6:	f6 d8       	rcall	.-3604   	; 0x37a4 <_Z14anzeigehandlerv>
         //Tasthandler
         eingabehandler(Tastatur.Taster());
    45b8:	80 e3       	ldi	r24, 0x30	; 48
    45ba:	93 e0       	ldi	r25, 0x03	; 3
    45bc:	b3 d0       	rcall	.+358    	; 0x4724 <_ZN9Interface6TasterEv>
    45be:	76 db       	rcall	.-2324   	; 0x3cac <_Z14eingabehandlerh>
    45c0:	f9 cf       	rjmp	.-14     	; 0x45b4 <main+0x2>

000045c2 <_GLOBAL__sub_I_kompass>:
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    45c2:	8c e5       	ldi	r24, 0x5C	; 92
    45c4:	97 e0       	ldi	r25, 0x07	; 7
    45c6:	86 d1       	rcall	.+780    	; 0x48d4 <_ZN7KompassC1Ev>

#include "RTC.h"
RTC rtc;
    45c8:	8d e3       	ldi	r24, 0x3D	; 61
    45ca:	97 e0       	ldi	r25, 0x07	; 7
    45cc:	b8 d6       	rcall	.+3440   	; 0x533e <_ZN3RTCC1Ev>

#include "Display.h"
Display oled;
    45ce:	8c e3       	ldi	r24, 0x3C	; 60
    45d0:	93 e0       	ldi	r25, 0x03	; 3
    45d2:	0e 94 4f 03 	call	0x69e	; 0x69e <_ZN7DisplayC1Ev>

#include "Interface.h"
Interface Tastatur;
    45d6:	80 e3       	ldi	r24, 0x30	; 48
    45d8:	93 e0       	ldi	r25, 0x03	; 3
    45da:	69 d0       	rcall	.+210    	; 0x46ae <_ZN9InterfaceC1Ev>

#include "Output.h"
Output LED('B',PORTB1);
    45dc:	41 e0       	ldi	r20, 0x01	; 1
    45de:	62 e4       	ldi	r22, 0x42	; 66
    45e0:	8e e2       	ldi	r24, 0x2E	; 46
    45e2:	93 e0       	ldi	r25, 0x03	; 3
    45e4:	c3 d4       	rcall	.+2438   	; 0x4f6c <_ZN6OutputC1Ehh>
Output Vibrationsmotor('B',PORTB2);
    45e6:	42 e0       	ldi	r20, 0x02	; 2
    45e8:	62 e4       	ldi	r22, 0x42	; 66
    45ea:	8c e2       	ldi	r24, 0x2C	; 44
    45ec:	93 e0       	ldi	r25, 0x03	; 3
    45ee:	be d4       	rcall	.+2428   	; 0x4f6c <_ZN6OutputC1Ehh>
Output IRLED('D',PORTD7);
    45f0:	47 e0       	ldi	r20, 0x07	; 7
    45f2:	64 e4       	ldi	r22, 0x44	; 68
    45f4:	8a e2       	ldi	r24, 0x2A	; 42
    45f6:	93 e0       	ldi	r25, 0x03	; 3
    45f8:	b9 d4       	rcall	.+2418   	; 0x4f6c <_ZN6OutputC1Ehh>
Output Sound('B',PORTB3);
    45fa:	43 e0       	ldi	r20, 0x03	; 3
    45fc:	62 e4       	ldi	r22, 0x42	; 66
    45fe:	88 e2       	ldi	r24, 0x28	; 40
    4600:	93 e0       	ldi	r25, 0x03	; 3
    4602:	b4 d4       	rcall	.+2408   	; 0x4f6c <_ZN6OutputC1Ehh>

#include "LSM303D.h"
LSM303D Accelerometer;
    4604:	87 e1       	ldi	r24, 0x17	; 23
    4606:	93 e0       	ldi	r25, 0x03	; 3
    4608:	97 d4       	rcall	.+2350   	; 0x4f38 <_ZN7LSM303DC1Ev>

//#include "Pressure.h"
//Pressure Baro;

#include "SOUND.h"
SOUND Lautsprecher;
    460a:	85 e1       	ldi	r24, 0x15	; 21
    460c:	93 e0       	ldi	r25, 0x03	; 3
    460e:	87 c7       	rjmp	.+3854   	; 0x551e <_ZN5SOUNDC1Ev>
    4610:	08 95       	ret

00004612 <_GLOBAL__sub_D_kompass>:
    4612:	85 e1       	ldi	r24, 0x15	; 21
    4614:	93 e0       	ldi	r25, 0x03	; 3
    4616:	59 d7       	rcall	.+3762   	; 0x54ca <_ZN5SOUNDD1Ev>
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);

#include "LSM303D.h"
LSM303D Accelerometer;
    4618:	87 e1       	ldi	r24, 0x17	; 23
    461a:	93 e0       	ldi	r25, 0x03	; 3
    461c:	6b d3       	rcall	.+1750   	; 0x4cf4 <_ZN7LSM303DD1Ev>

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);
    461e:	88 e2       	ldi	r24, 0x28	; 40
    4620:	93 e0       	ldi	r25, 0x03	; 3
    4622:	e6 d4       	rcall	.+2508   	; 0x4ff0 <_ZN6OutputD1Ev>
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
    4624:	8a e2       	ldi	r24, 0x2A	; 42
    4626:	93 e0       	ldi	r25, 0x03	; 3
    4628:	e3 d4       	rcall	.+2502   	; 0x4ff0 <_ZN6OutputD1Ev>
#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
    462a:	8c e2       	ldi	r24, 0x2C	; 44
    462c:	93 e0       	ldi	r25, 0x03	; 3
    462e:	e0 d4       	rcall	.+2496   	; 0x4ff0 <_ZN6OutputD1Ev>

#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
    4630:	8e e2       	ldi	r24, 0x2E	; 46
    4632:	93 e0       	ldi	r25, 0x03	; 3
    4634:	dd d4       	rcall	.+2490   	; 0x4ff0 <_ZN6OutputD1Ev>

#include "Display.h"
Display oled;

#include "Interface.h"
Interface Tastatur;
    4636:	80 e3       	ldi	r24, 0x30	; 48
    4638:	93 e0       	ldi	r25, 0x03	; 3
    463a:	4c d0       	rcall	.+152    	; 0x46d4 <_ZN9InterfaceD1Ev>

#include "RTC.h"
RTC rtc;

#include "Display.h"
Display oled;
    463c:	8c e3       	ldi	r24, 0x3C	; 60
    463e:	93 e0       	ldi	r25, 0x03	; 3
    4640:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_ZN7DisplayD1Ev>

#include "Kompass.h"
Kompass kompass;

#include "RTC.h"
RTC rtc;
    4644:	8d e3       	ldi	r24, 0x3D	; 61
    4646:	97 e0       	ldi	r25, 0x07	; 7
    4648:	f6 d5       	rcall	.+3052   	; 0x5236 <_ZN3RTCD1Ev>
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    464a:	8c e5       	ldi	r24, 0x5C	; 92
    464c:	97 e0       	ldi	r25, 0x07	; 7
    464e:	25 c1       	rjmp	.+586    	; 0x489a <_ZN7KompassD1Ev>
    4650:	08 95       	ret

00004652 <_ZN3I2CC1Ev>:
void I2C::twi_ack(){
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
}
void I2C::twi_nack(){
	TWCR = (1<<TWINT) | (1<<TWEN);
	TWCR &= ~(1<<TWEA);
    4652:	82 e0       	ldi	r24, 0x02	; 2
    4654:	80 93 b8 00 	sts	0x00B8, r24
    4658:	08 95       	ret

0000465a <_ZN3I2CD1Ev>:
    465a:	08 95       	ret

0000465c <_ZN3I2C9twi_startEv>:
    465c:	84 ea       	ldi	r24, 0xA4	; 164
    465e:	80 93 bc 00 	sts	0x00BC, r24
    4662:	08 95       	ret

00004664 <_ZN3I2C8twi_stopEv>:
    4664:	84 e9       	ldi	r24, 0x94	; 148
    4666:	80 93 bc 00 	sts	0x00BC, r24
    466a:	08 95       	ret

0000466c <_ZN3I2C9twi_writeEh>:
}

void I2C::twi_write(uint8_t data){
	while(!(TWCR & (1<<TWINT)));
    466c:	ec eb       	ldi	r30, 0xBC	; 188
    466e:	f0 e0       	ldi	r31, 0x00	; 0
    4670:	80 81       	ld	r24, Z
    4672:	88 23       	and	r24, r24
    4674:	ec f7       	brge	.-6      	; 0x4670 <_ZN3I2C9twi_writeEh+0x4>
	TWDR = data;
    4676:	60 93 bb 00 	sts	0x00BB, r22
	TWCR = (1<<TWINT) | (1<<TWEN);
    467a:	84 e8       	ldi	r24, 0x84	; 132
    467c:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    4680:	ec eb       	ldi	r30, 0xBC	; 188
    4682:	f0 e0       	ldi	r31, 0x00	; 0
    4684:	80 81       	ld	r24, Z
    4686:	88 23       	and	r24, r24
    4688:	ec f7       	brge	.-6      	; 0x4684 <_ZN3I2C9twi_writeEh+0x18>
}
    468a:	08 95       	ret

0000468c <_ZN3I2C8twi_readEh>:

uint8_t I2C::twi_read(uint8_t ack){
	if (ack)
    468c:	66 23       	and	r22, r22
    468e:	21 f0       	breq	.+8      	; 0x4698 <_ZN3I2C8twi_readEh+0xc>
	{
		TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    4690:	84 ec       	ldi	r24, 0xC4	; 196
    4692:	80 93 bc 00 	sts	0x00BC, r24
    4696:	03 c0       	rjmp	.+6      	; 0x469e <_ZN3I2C8twi_readEh+0x12>
	}
	else{
		TWCR = (1<<TWINT) | (1<<TWEN);
    4698:	84 e8       	ldi	r24, 0x84	; 132
    469a:	80 93 bc 00 	sts	0x00BC, r24
	}
	
	while(!(TWCR & (1<<TWINT)));
    469e:	ec eb       	ldi	r30, 0xBC	; 188
    46a0:	f0 e0       	ldi	r31, 0x00	; 0
    46a2:	80 81       	ld	r24, Z
    46a4:	88 23       	and	r24, r24
    46a6:	ec f7       	brge	.-6      	; 0x46a2 <_ZN3I2C8twi_readEh+0x16>
	return TWDR;
    46a8:	80 91 bb 00 	lds	r24, 0x00BB
    46ac:	08 95       	ret

000046ae <_ZN9InterfaceC1Ev>:
		default:
		abfrage = 0;
		break;
	}
	return abfrage;
}
    46ae:	2a b1       	in	r18, 0x0a	; 10
    46b0:	20 66       	ori	r18, 0x60	; 96
    46b2:	2a b9       	out	0x0a, r18	; 10
    46b4:	28 b1       	in	r18, 0x08	; 8
    46b6:	23 7f       	andi	r18, 0xF3	; 243
    46b8:	28 b9       	out	0x08, r18	; 8
    46ba:	27 b1       	in	r18, 0x07	; 7
    46bc:	2c 60       	ori	r18, 0x0C	; 12
    46be:	27 b9       	out	0x07, r18	; 7
    46c0:	2a b1       	in	r18, 0x0a	; 10
    46c2:	23 7e       	andi	r18, 0xE3	; 227
    46c4:	2a b9       	out	0x0a, r18	; 10
    46c6:	fc 01       	movw	r30, r24
    46c8:	80 e0       	ldi	r24, 0x00	; 0
    46ca:	11 92       	st	Z+, r1
    46cc:	8f 5f       	subi	r24, 0xFF	; 255
    46ce:	8c 30       	cpi	r24, 0x0C	; 12
    46d0:	e1 f7       	brne	.-8      	; 0x46ca <_ZN9InterfaceC1Ev+0x1c>
    46d2:	08 95       	ret

000046d4 <_ZN9InterfaceD1Ev>:
    46d4:	08 95       	ret

000046d6 <_ZN9Interface7paradebEPVhhPh>:
    46d6:	fb 01       	movw	r30, r22
    46d8:	80 81       	ld	r24, Z
    46da:	90 e0       	ldi	r25, 0x00	; 0
    46dc:	04 2e       	mov	r0, r20
    46de:	02 c0       	rjmp	.+4      	; 0x46e4 <_ZN9Interface7paradebEPVhhPh+0xe>
    46e0:	95 95       	asr	r25
    46e2:	87 95       	ror	r24
    46e4:	0a 94       	dec	r0
    46e6:	e2 f7       	brpl	.-8      	; 0x46e0 <_ZN9Interface7paradebEPVhhPh+0xa>
    46e8:	80 ff       	sbrs	r24, 0
    46ea:	05 c0       	rjmp	.+10     	; 0x46f6 <_ZN9Interface7paradebEPVhhPh+0x20>
    46ec:	81 e0       	ldi	r24, 0x01	; 1
    46ee:	f9 01       	movw	r30, r18
    46f0:	80 83       	st	Z, r24
    46f2:	80 e0       	ldi	r24, 0x00	; 0
    46f4:	08 95       	ret
    46f6:	f9 01       	movw	r30, r18
    46f8:	80 81       	ld	r24, Z
    46fa:	81 30       	cpi	r24, 0x01	; 1
    46fc:	79 f4       	brne	.+30     	; 0x471c <_ZN9Interface7paradebEPVhhPh+0x46>
    46fe:	fb 01       	movw	r30, r22
    4700:	80 81       	ld	r24, Z
    4702:	90 e0       	ldi	r25, 0x00	; 0
    4704:	bc 01       	movw	r22, r24
    4706:	02 c0       	rjmp	.+4      	; 0x470c <_ZN9Interface7paradebEPVhhPh+0x36>
    4708:	75 95       	asr	r23
    470a:	67 95       	ror	r22
    470c:	4a 95       	dec	r20
    470e:	e2 f7       	brpl	.-8      	; 0x4708 <_ZN9Interface7paradebEPVhhPh+0x32>
    4710:	60 fd       	sbrc	r22, 0
    4712:	04 c0       	rjmp	.+8      	; 0x471c <_ZN9Interface7paradebEPVhhPh+0x46>
    4714:	f9 01       	movw	r30, r18
    4716:	10 82       	st	Z, r1
    4718:	81 e0       	ldi	r24, 0x01	; 1
    471a:	08 95       	ret
    471c:	f9 01       	movw	r30, r18
    471e:	10 82       	st	Z, r1
    4720:	80 e0       	ldi	r24, 0x00	; 0
    4722:	08 95       	ret

00004724 <_ZN9Interface6TasterEv>:

uint8_t Interface::Taster(){
    4724:	1f 93       	push	r17
    4726:	cf 93       	push	r28
    4728:	df 93       	push	r29
    472a:	ec 01       	movw	r28, r24
	uint8_t taste = 'A';
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
    472c:	43 9a       	sbi	0x08, 3	; 8
    472e:	82 e0       	ldi	r24, 0x02	; 2
    4730:	8a 95       	dec	r24
    4732:	f1 f7       	brne	.-4      	; 0x4730 <_ZN9Interface6TasterEv+0xc>
    4734:	00 c0       	rjmp	.+0      	; 0x4736 <_ZN9Interface6TasterEv+0x12>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[2])){//debounce(&PIND,PIND4)){
    4736:	9e 01       	movw	r18, r28
    4738:	2e 5f       	subi	r18, 0xFE	; 254
    473a:	3f 4f       	sbci	r19, 0xFF	; 255
    473c:	44 e0       	ldi	r20, 0x04	; 4
    473e:	69 e2       	ldi	r22, 0x29	; 41
    4740:	70 e0       	ldi	r23, 0x00	; 0
    4742:	ce 01       	movw	r24, r28
    4744:	c8 df       	rcall	.-112    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    4746:	81 11       	cpse	r24, r1
    4748:	14 c0       	rjmp	.+40     	; 0x4772 <_ZN9Interface6TasterEv+0x4e>
		taste = '3';
	}
	else if (paradeb(&PIND,PIND3,&stat[1]))//debounce(&PIND,PIND3))
    474a:	9e 01       	movw	r18, r28
    474c:	2f 5f       	subi	r18, 0xFF	; 255
    474e:	3f 4f       	sbci	r19, 0xFF	; 255
    4750:	43 e0       	ldi	r20, 0x03	; 3
    4752:	69 e2       	ldi	r22, 0x29	; 41
    4754:	70 e0       	ldi	r23, 0x00	; 0
    4756:	ce 01       	movw	r24, r28
    4758:	be df       	rcall	.-132    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    475a:	81 11       	cpse	r24, r1
    475c:	0c c0       	rjmp	.+24     	; 0x4776 <_ZN9Interface6TasterEv+0x52>
	{
		taste = '2';
	}
	else if (paradeb(&PIND,PIND2,&stat[0]))//debounce(&PIND,PIND2))
    475e:	9e 01       	movw	r18, r28
    4760:	42 e0       	ldi	r20, 0x02	; 2
    4762:	69 e2       	ldi	r22, 0x29	; 41
    4764:	70 e0       	ldi	r23, 0x00	; 0
    4766:	ce 01       	movw	r24, r28
    4768:	b6 df       	rcall	.-148    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    476a:	81 11       	cpse	r24, r1
    476c:	06 c0       	rjmp	.+12     	; 0x477a <_ZN9Interface6TasterEv+0x56>
	}
	return abfrage;
}

uint8_t Interface::Taster(){
	uint8_t taste = 'A';
    476e:	11 e4       	ldi	r17, 0x41	; 65
    4770:	05 c0       	rjmp	.+10     	; 0x477c <_ZN9Interface6TasterEv+0x58>
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[2])){//debounce(&PIND,PIND4)){
		taste = '3';
    4772:	13 e3       	ldi	r17, 0x33	; 51
    4774:	03 c0       	rjmp	.+6      	; 0x477c <_ZN9Interface6TasterEv+0x58>
	}
	else if (paradeb(&PIND,PIND3,&stat[1]))//debounce(&PIND,PIND3))
	{
		taste = '2';
    4776:	12 e3       	ldi	r17, 0x32	; 50
    4778:	01 c0       	rjmp	.+2      	; 0x477c <_ZN9Interface6TasterEv+0x58>
	}
	else if (paradeb(&PIND,PIND2,&stat[0]))//debounce(&PIND,PIND2))
	{
		taste = '1';
    477a:	11 e3       	ldi	r17, 0x31	; 49
	}
	PORTC &= ~(1<<PORTC3);
    477c:	43 98       	cbi	0x08, 3	; 8
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
    477e:	42 9a       	sbi	0x08, 2	; 8
    4780:	82 e0       	ldi	r24, 0x02	; 2
    4782:	8a 95       	dec	r24
    4784:	f1 f7       	brne	.-4      	; 0x4782 <_ZN9Interface6TasterEv+0x5e>
    4786:	00 c0       	rjmp	.+0      	; 0x4788 <_ZN9Interface6TasterEv+0x64>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[5])){//debounce(&PIND,PIND4)){
    4788:	9e 01       	movw	r18, r28
    478a:	2b 5f       	subi	r18, 0xFB	; 251
    478c:	3f 4f       	sbci	r19, 0xFF	; 255
    478e:	44 e0       	ldi	r20, 0x04	; 4
    4790:	69 e2       	ldi	r22, 0x29	; 41
    4792:	70 e0       	ldi	r23, 0x00	; 0
    4794:	ce 01       	movw	r24, r28
    4796:	9f df       	rcall	.-194    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    4798:	81 11       	cpse	r24, r1
    479a:	15 c0       	rjmp	.+42     	; 0x47c6 <_ZN9Interface6TasterEv+0xa2>
		taste = '6';
	}
	else if (paradeb(&PIND,PIND3,&stat[4]))//debounce(&PIND,PIND3))
    479c:	9e 01       	movw	r18, r28
    479e:	2c 5f       	subi	r18, 0xFC	; 252
    47a0:	3f 4f       	sbci	r19, 0xFF	; 255
    47a2:	43 e0       	ldi	r20, 0x03	; 3
    47a4:	69 e2       	ldi	r22, 0x29	; 41
    47a6:	70 e0       	ldi	r23, 0x00	; 0
    47a8:	ce 01       	movw	r24, r28
    47aa:	95 df       	rcall	.-214    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    47ac:	81 11       	cpse	r24, r1
    47ae:	0d c0       	rjmp	.+26     	; 0x47ca <_ZN9Interface6TasterEv+0xa6>
	{
		taste = '5';
	}
	else if (paradeb(&PIND,PIND2,&stat[3]))//debounce(&PIND,PIND2))
    47b0:	9e 01       	movw	r18, r28
    47b2:	2d 5f       	subi	r18, 0xFD	; 253
    47b4:	3f 4f       	sbci	r19, 0xFF	; 255
    47b6:	42 e0       	ldi	r20, 0x02	; 2
    47b8:	69 e2       	ldi	r22, 0x29	; 41
    47ba:	70 e0       	ldi	r23, 0x00	; 0
    47bc:	ce 01       	movw	r24, r28
    47be:	8b df       	rcall	.-234    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    47c0:	81 11       	cpse	r24, r1
    47c2:	05 c0       	rjmp	.+10     	; 0x47ce <_ZN9Interface6TasterEv+0xaa>
    47c4:	05 c0       	rjmp	.+10     	; 0x47d0 <_ZN9Interface6TasterEv+0xac>
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[5])){//debounce(&PIND,PIND4)){
		taste = '6';
    47c6:	16 e3       	ldi	r17, 0x36	; 54
    47c8:	03 c0       	rjmp	.+6      	; 0x47d0 <_ZN9Interface6TasterEv+0xac>
	}
	else if (paradeb(&PIND,PIND3,&stat[4]))//debounce(&PIND,PIND3))
	{
		taste = '5';
    47ca:	15 e3       	ldi	r17, 0x35	; 53
    47cc:	01 c0       	rjmp	.+2      	; 0x47d0 <_ZN9Interface6TasterEv+0xac>
	}
	else if (paradeb(&PIND,PIND2,&stat[3]))//debounce(&PIND,PIND2))
	{
		taste = '4';
    47ce:	14 e3       	ldi	r17, 0x34	; 52
	}
	PORTC &= ~(1<<PORTC2);
    47d0:	42 98       	cbi	0x08, 2	; 8
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
    47d2:	5e 9a       	sbi	0x0b, 6	; 11
    47d4:	82 e0       	ldi	r24, 0x02	; 2
    47d6:	8a 95       	dec	r24
    47d8:	f1 f7       	brne	.-4      	; 0x47d6 <_ZN9Interface6TasterEv+0xb2>
    47da:	00 c0       	rjmp	.+0      	; 0x47dc <_ZN9Interface6TasterEv+0xb8>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[8])){//debounce(&PIND,PIND4)){
    47dc:	9e 01       	movw	r18, r28
    47de:	28 5f       	subi	r18, 0xF8	; 248
    47e0:	3f 4f       	sbci	r19, 0xFF	; 255
    47e2:	44 e0       	ldi	r20, 0x04	; 4
    47e4:	69 e2       	ldi	r22, 0x29	; 41
    47e6:	70 e0       	ldi	r23, 0x00	; 0
    47e8:	ce 01       	movw	r24, r28
    47ea:	75 df       	rcall	.-278    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    47ec:	81 11       	cpse	r24, r1
    47ee:	15 c0       	rjmp	.+42     	; 0x481a <_ZN9Interface6TasterEv+0xf6>
		taste = '9';
	}
	else if (paradeb(&PIND,PIND3,&stat[7]))//debounce(&PIND,PIND3))
    47f0:	9e 01       	movw	r18, r28
    47f2:	29 5f       	subi	r18, 0xF9	; 249
    47f4:	3f 4f       	sbci	r19, 0xFF	; 255
    47f6:	43 e0       	ldi	r20, 0x03	; 3
    47f8:	69 e2       	ldi	r22, 0x29	; 41
    47fa:	70 e0       	ldi	r23, 0x00	; 0
    47fc:	ce 01       	movw	r24, r28
    47fe:	6b df       	rcall	.-298    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    4800:	81 11       	cpse	r24, r1
    4802:	0d c0       	rjmp	.+26     	; 0x481e <_ZN9Interface6TasterEv+0xfa>
	{
		taste = '8';
	}
	else if (paradeb(&PIND,PIND2,&stat[6]))//debounce(&PIND,PIND2))
    4804:	9e 01       	movw	r18, r28
    4806:	2a 5f       	subi	r18, 0xFA	; 250
    4808:	3f 4f       	sbci	r19, 0xFF	; 255
    480a:	42 e0       	ldi	r20, 0x02	; 2
    480c:	69 e2       	ldi	r22, 0x29	; 41
    480e:	70 e0       	ldi	r23, 0x00	; 0
    4810:	ce 01       	movw	r24, r28
    4812:	61 df       	rcall	.-318    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    4814:	81 11       	cpse	r24, r1
    4816:	05 c0       	rjmp	.+10     	; 0x4822 <_ZN9Interface6TasterEv+0xfe>
    4818:	05 c0       	rjmp	.+10     	; 0x4824 <_ZN9Interface6TasterEv+0x100>
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[8])){//debounce(&PIND,PIND4)){
		taste = '9';
    481a:	19 e3       	ldi	r17, 0x39	; 57
    481c:	03 c0       	rjmp	.+6      	; 0x4824 <_ZN9Interface6TasterEv+0x100>
	}
	else if (paradeb(&PIND,PIND3,&stat[7]))//debounce(&PIND,PIND3))
	{
		taste = '8';
    481e:	18 e3       	ldi	r17, 0x38	; 56
    4820:	01 c0       	rjmp	.+2      	; 0x4824 <_ZN9Interface6TasterEv+0x100>
	}
	else if (paradeb(&PIND,PIND2,&stat[6]))//debounce(&PIND,PIND2))
	{
		taste = '7';
    4822:	17 e3       	ldi	r17, 0x37	; 55
	}
	PORTD &= ~(1<<PORTD6);
    4824:	5e 98       	cbi	0x0b, 6	; 11
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
    4826:	5d 9a       	sbi	0x0b, 5	; 11
    4828:	82 e0       	ldi	r24, 0x02	; 2
    482a:	8a 95       	dec	r24
    482c:	f1 f7       	brne	.-4      	; 0x482a <_ZN9Interface6TasterEv+0x106>
    482e:	00 c0       	rjmp	.+0      	; 0x4830 <_ZN9Interface6TasterEv+0x10c>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[11])){//debounce(&PIND,PIND4)){
    4830:	9e 01       	movw	r18, r28
    4832:	25 5f       	subi	r18, 0xF5	; 245
    4834:	3f 4f       	sbci	r19, 0xFF	; 255
    4836:	44 e0       	ldi	r20, 0x04	; 4
    4838:	69 e2       	ldi	r22, 0x29	; 41
    483a:	70 e0       	ldi	r23, 0x00	; 0
    483c:	ce 01       	movw	r24, r28
    483e:	4b df       	rcall	.-362    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    4840:	81 11       	cpse	r24, r1
    4842:	15 c0       	rjmp	.+42     	; 0x486e <_ZN9Interface6TasterEv+0x14a>
		taste = '#';
	}
	else if (paradeb(&PIND,PIND3,&stat[10]))//debounce(&PIND,PIND3))
    4844:	9e 01       	movw	r18, r28
    4846:	26 5f       	subi	r18, 0xF6	; 246
    4848:	3f 4f       	sbci	r19, 0xFF	; 255
    484a:	43 e0       	ldi	r20, 0x03	; 3
    484c:	69 e2       	ldi	r22, 0x29	; 41
    484e:	70 e0       	ldi	r23, 0x00	; 0
    4850:	ce 01       	movw	r24, r28
    4852:	41 df       	rcall	.-382    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    4854:	81 11       	cpse	r24, r1
    4856:	0d c0       	rjmp	.+26     	; 0x4872 <_ZN9Interface6TasterEv+0x14e>
	{
		taste = '0';
	}
	else if (paradeb(&PIND,PIND2,&stat[9]))//debounce(&PIND,PIND2))
    4858:	9e 01       	movw	r18, r28
    485a:	27 5f       	subi	r18, 0xF7	; 247
    485c:	3f 4f       	sbci	r19, 0xFF	; 255
    485e:	42 e0       	ldi	r20, 0x02	; 2
    4860:	69 e2       	ldi	r22, 0x29	; 41
    4862:	70 e0       	ldi	r23, 0x00	; 0
    4864:	ce 01       	movw	r24, r28
    4866:	37 df       	rcall	.-402    	; 0x46d6 <_ZN9Interface7paradebEPVhhPh>
    4868:	81 11       	cpse	r24, r1
    486a:	05 c0       	rjmp	.+10     	; 0x4876 <_ZN9Interface6TasterEv+0x152>
    486c:	05 c0       	rjmp	.+10     	; 0x4878 <_ZN9Interface6TasterEv+0x154>
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[11])){//debounce(&PIND,PIND4)){
		taste = '#';
    486e:	13 e2       	ldi	r17, 0x23	; 35
    4870:	03 c0       	rjmp	.+6      	; 0x4878 <_ZN9Interface6TasterEv+0x154>
	}
	else if (paradeb(&PIND,PIND3,&stat[10]))//debounce(&PIND,PIND3))
	{
		taste = '0';
    4872:	10 e3       	ldi	r17, 0x30	; 48
    4874:	01 c0       	rjmp	.+2      	; 0x4878 <_ZN9Interface6TasterEv+0x154>
	}
	else if (paradeb(&PIND,PIND2,&stat[9]))//debounce(&PIND,PIND2))
	{
		taste = '*';
    4876:	1a e2       	ldi	r17, 0x2A	; 42
	}
	PORTD &= ~(1<<PORTD5);
    4878:	5d 98       	cbi	0x0b, 5	; 11
	
	return taste;
}
    487a:	81 2f       	mov	r24, r17
    487c:	df 91       	pop	r29
    487e:	cf 91       	pop	r28
    4880:	1f 91       	pop	r17
    4882:	08 95       	ret

00004884 <_ZN9Interface17ZahlenausTastaturEv>:

uint8_t Interface::ZahlenausTastatur(){
    4884:	cf 93       	push	r28
    4886:	df 93       	push	r29
    4888:	ec 01       	movw	r28, r24
	while(true){
		uint8_t taste = Taster();
    488a:	ce 01       	movw	r24, r28
    488c:	4b df       	rcall	.-362    	; 0x4724 <_ZN9Interface6TasterEv>
		if(taste>='0' && taste<='9'){
    488e:	80 53       	subi	r24, 0x30	; 48
    4890:	8a 30       	cpi	r24, 0x0A	; 10
    4892:	d8 f7       	brcc	.-10     	; 0x488a <_ZN9Interface17ZahlenausTastaturEv+0x6>
			return taste - '0';
		}
	}
}
    4894:	df 91       	pop	r29
    4896:	cf 91       	pop	r28
    4898:	08 95       	ret

0000489a <_ZN7KompassD1Ev>:
	for (uint8_t i=0;i<3;i++)
	{
		achsen[i]=0;
		offset[i]=0;
	}
}
    489a:	06 96       	adiw	r24, 0x06	; 6
    489c:	de ce       	rjmp	.-580    	; 0x465a <_ZN3I2CD1Ev>
    489e:	08 95       	ret

000048a0 <_ZN7Kompass16HMC5883L_commandEhh>:
    48a0:	0f 93       	push	r16
    48a2:	1f 93       	push	r17
    48a4:	cf 93       	push	r28
    48a6:	df 93       	push	r29
    48a8:	06 2f       	mov	r16, r22
    48aa:	14 2f       	mov	r17, r20
    48ac:	ec 01       	movw	r28, r24
    48ae:	26 96       	adiw	r28, 0x06	; 6
    48b0:	ce 01       	movw	r24, r28
    48b2:	d4 de       	rcall	.-600    	; 0x465c <_ZN3I2C9twi_startEv>
    48b4:	6c e3       	ldi	r22, 0x3C	; 60
    48b6:	ce 01       	movw	r24, r28
    48b8:	d9 de       	rcall	.-590    	; 0x466c <_ZN3I2C9twi_writeEh>
    48ba:	60 2f       	mov	r22, r16
    48bc:	ce 01       	movw	r24, r28
    48be:	d6 de       	rcall	.-596    	; 0x466c <_ZN3I2C9twi_writeEh>
    48c0:	61 2f       	mov	r22, r17
    48c2:	ce 01       	movw	r24, r28
    48c4:	d3 de       	rcall	.-602    	; 0x466c <_ZN3I2C9twi_writeEh>
    48c6:	ce 01       	movw	r24, r28
    48c8:	cd de       	rcall	.-614    	; 0x4664 <_ZN3I2C8twi_stopEv>
    48ca:	df 91       	pop	r29
    48cc:	cf 91       	pop	r28
    48ce:	1f 91       	pop	r17
    48d0:	0f 91       	pop	r16
    48d2:	08 95       	ret

000048d4 <_ZN7KompassC1Ev>:
    48d4:	cf 93       	push	r28
    48d6:	df 93       	push	r29
    48d8:	ec 01       	movw	r28, r24
    48da:	06 96       	adiw	r24, 0x06	; 6
    48dc:	ba de       	rcall	.-652    	; 0x4652 <_ZN3I2CC1Ev>
    48de:	40 e7       	ldi	r20, 0x70	; 112
    48e0:	60 e0       	ldi	r22, 0x00	; 0
    48e2:	ce 01       	movw	r24, r28
    48e4:	dd df       	rcall	.-70     	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
    48e6:	40 e2       	ldi	r20, 0x20	; 32
    48e8:	61 e0       	ldi	r22, 0x01	; 1
    48ea:	ce 01       	movw	r24, r28
    48ec:	d9 df       	rcall	.-78     	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
    48ee:	41 e0       	ldi	r20, 0x01	; 1
    48f0:	62 e0       	ldi	r22, 0x02	; 2
    48f2:	ce 01       	movw	r24, r28
    48f4:	d5 df       	rcall	.-86     	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
    48f6:	19 82       	std	Y+1, r1	; 0x01
    48f8:	18 82       	st	Y, r1
    48fa:	18 86       	std	Y+8, r1	; 0x08
    48fc:	1f 82       	std	Y+7, r1	; 0x07
    48fe:	1b 82       	std	Y+3, r1	; 0x03
    4900:	1a 82       	std	Y+2, r1	; 0x02
    4902:	1a 86       	std	Y+10, r1	; 0x0a
    4904:	19 86       	std	Y+9, r1	; 0x09
    4906:	1d 82       	std	Y+5, r1	; 0x05
    4908:	1c 82       	std	Y+4, r1	; 0x04
    490a:	1c 86       	std	Y+12, r1	; 0x0c
    490c:	1b 86       	std	Y+11, r1	; 0x0b
    490e:	df 91       	pop	r29
    4910:	cf 91       	pop	r28
    4912:	08 95       	ret

00004914 <_ZN7Kompass20HMC5883L_readHeadingEv>:

uint8_t Kompass::HMC5883L_readHeading(){
    4914:	bf 92       	push	r11
    4916:	cf 92       	push	r12
    4918:	df 92       	push	r13
    491a:	ef 92       	push	r14
    491c:	ff 92       	push	r15
    491e:	0f 93       	push	r16
    4920:	1f 93       	push	r17
    4922:	cf 93       	push	r28
    4924:	df 93       	push	r29
    4926:	00 d0       	rcall	.+0      	; 0x4928 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14>
    4928:	00 d0       	rcall	.+0      	; 0x492a <_ZN7Kompass20HMC5883L_readHeadingEv+0x16>
    492a:	00 d0       	rcall	.+0      	; 0x492c <_ZN7Kompass20HMC5883L_readHeadingEv+0x18>
    492c:	cd b7       	in	r28, 0x3d	; 61
    492e:	de b7       	in	r29, 0x3e	; 62
    4930:	6c 01       	movw	r12, r24
	cli();
    4932:	f8 94       	cli
	uint8_t heading[6];
	i2c.twi_start();
    4934:	7c 01       	movw	r14, r24
    4936:	26 e0       	ldi	r18, 0x06	; 6
    4938:	e2 0e       	add	r14, r18
    493a:	f1 1c       	adc	r15, r1
    493c:	c7 01       	movw	r24, r14
    493e:	8e de       	rcall	.-740    	; 0x465c <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCWRITEADRESSE);
    4940:	6c e3       	ldi	r22, 0x3C	; 60
    4942:	c7 01       	movw	r24, r14
    4944:	93 de       	rcall	.-730    	; 0x466c <_ZN3I2C9twi_writeEh>
	i2c.twi_write(0x03);
    4946:	63 e0       	ldi	r22, 0x03	; 3
    4948:	c7 01       	movw	r24, r14
    494a:	90 de       	rcall	.-736    	; 0x466c <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    494c:	c7 01       	movw	r24, r14
    494e:	86 de       	rcall	.-756    	; 0x465c <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCREADADRESSE);
    4950:	6d e3       	ldi	r22, 0x3D	; 61
    4952:	c7 01       	movw	r24, r14
    4954:	8b de       	rcall	.-746    	; 0x466c <_ZN3I2C9twi_writeEh>
    4956:	8e 01       	movw	r16, r28
    4958:	0f 5f       	subi	r16, 0xFF	; 255
    495a:	1f 4f       	sbci	r17, 0xFF	; 255
	
	for(uint8_t i=0; i<6;i++){
    495c:	b1 2c       	mov	r11, r1
		if (i<5)
    495e:	84 e0       	ldi	r24, 0x04	; 4
    4960:	8b 15       	cp	r24, r11
    4962:	30 f0       	brcs	.+12     	; 0x4970 <_ZN7Kompass20HMC5883L_readHeadingEv+0x5c>
		{
			heading[i]=i2c.twi_read(1);
    4964:	61 e0       	ldi	r22, 0x01	; 1
    4966:	c7 01       	movw	r24, r14
    4968:	91 de       	rcall	.-734    	; 0x468c <_ZN3I2C8twi_readEh>
    496a:	f8 01       	movw	r30, r16
    496c:	80 83       	st	Z, r24
    496e:	05 c0       	rjmp	.+10     	; 0x497a <_ZN7Kompass20HMC5883L_readHeadingEv+0x66>
		}
		else
		{
			heading[i]=i2c.twi_read(0);
    4970:	60 e0       	ldi	r22, 0x00	; 0
    4972:	c7 01       	movw	r24, r14
    4974:	8b de       	rcall	.-746    	; 0x468c <_ZN3I2C8twi_readEh>
    4976:	f8 01       	movw	r30, r16
    4978:	80 83       	st	Z, r24
	i2c.twi_write(HMCWRITEADRESSE);
	i2c.twi_write(0x03);
	i2c.twi_start();
	i2c.twi_write(HMCREADADRESSE);
	
	for(uint8_t i=0; i<6;i++){
    497a:	b3 94       	inc	r11
    497c:	0f 5f       	subi	r16, 0xFF	; 255
    497e:	1f 4f       	sbci	r17, 0xFF	; 255
    4980:	f6 e0       	ldi	r31, 0x06	; 6
    4982:	bf 12       	cpse	r11, r31
    4984:	ec cf       	rjmp	.-40     	; 0x495e <_ZN7Kompass20HMC5883L_readHeadingEv+0x4a>
		{
			heading[i]=i2c.twi_read(0);
		}
		
	}
	i2c.twi_stop();
    4986:	c7 01       	movw	r24, r14
    4988:	6d de       	rcall	.-806    	; 0x4664 <_ZN3I2C8twi_stopEv>
	achsen[0] =(int16_t) (heading[1] | (heading[0] << 8));
    498a:	89 81       	ldd	r24, Y+1	; 0x01
    498c:	90 e0       	ldi	r25, 0x00	; 0
    498e:	98 2f       	mov	r25, r24
    4990:	88 27       	eor	r24, r24
    4992:	2a 81       	ldd	r18, Y+2	; 0x02
    4994:	82 2b       	or	r24, r18
    4996:	f6 01       	movw	r30, r12
    4998:	91 83       	std	Z+1, r25	; 0x01
    499a:	80 83       	st	Z, r24
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
    499c:	8b 81       	ldd	r24, Y+3	; 0x03
    499e:	90 e0       	ldi	r25, 0x00	; 0
    49a0:	98 2f       	mov	r25, r24
    49a2:	88 27       	eor	r24, r24
    49a4:	2c 81       	ldd	r18, Y+4	; 0x04
    49a6:	82 2b       	or	r24, r18
    49a8:	93 83       	std	Z+3, r25	; 0x03
    49aa:	82 83       	std	Z+2, r24	; 0x02
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
    49ac:	8d 81       	ldd	r24, Y+5	; 0x05
    49ae:	90 e0       	ldi	r25, 0x00	; 0
    49b0:	98 2f       	mov	r25, r24
    49b2:	88 27       	eor	r24, r24
    49b4:	2e 81       	ldd	r18, Y+6	; 0x06
    49b6:	82 2b       	or	r24, r18
    49b8:	95 83       	std	Z+5, r25	; 0x05
    49ba:	84 83       	std	Z+4, r24	; 0x04
	sei();
    49bc:	78 94       	sei
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
    49be:	f6 01       	movw	r30, r12
    49c0:	80 81       	ld	r24, Z
    49c2:	91 81       	ldd	r25, Z+1	; 0x01
    49c4:	81 15       	cp	r24, r1
    49c6:	90 4f       	sbci	r25, 0xF0	; 240
    49c8:	09 f4       	brne	.+2      	; 0x49cc <_ZN7Kompass20HMC5883L_readHeadingEv+0xb8>
    49ca:	47 c0       	rjmp	.+142    	; 0x4a5a <_ZN7Kompass20HMC5883L_readHeadingEv+0x146>
    49cc:	f6 01       	movw	r30, r12
    49ce:	82 81       	ldd	r24, Z+2	; 0x02
    49d0:	93 81       	ldd	r25, Z+3	; 0x03
    49d2:	81 15       	cp	r24, r1
    49d4:	90 4f       	sbci	r25, 0xF0	; 240
    49d6:	09 f4       	brne	.+2      	; 0x49da <_ZN7Kompass20HMC5883L_readHeadingEv+0xc6>
    49d8:	42 c0       	rjmp	.+132    	; 0x4a5e <_ZN7Kompass20HMC5883L_readHeadingEv+0x14a>
    49da:	f6 01       	movw	r30, r12
    49dc:	84 81       	ldd	r24, Z+4	; 0x04
    49de:	95 81       	ldd	r25, Z+5	; 0x05
    49e0:	81 15       	cp	r24, r1
    49e2:	90 4f       	sbci	r25, 0xF0	; 240
    49e4:	f1 f1       	breq	.+124    	; 0x4a62 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14e>
    49e6:	f6 01       	movw	r30, r12
    49e8:	83 e0       	ldi	r24, 0x03	; 3
    49ea:	df 01       	movw	r26, r30
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
			if(achsen[i]>max[i]){
    49ec:	20 81       	ld	r18, Z
    49ee:	31 81       	ldd	r19, Z+1	; 0x01
    49f0:	45 85       	ldd	r20, Z+13	; 0x0d
    49f2:	56 85       	ldd	r21, Z+14	; 0x0e
    49f4:	42 17       	cp	r20, r18
    49f6:	53 07       	cpc	r21, r19
    49f8:	8c f4       	brge	.+34     	; 0x4a1c <_ZN7Kompass20HMC5883L_readHeadingEv+0x108>
				max[i]=achsen[i];
    49fa:	36 87       	std	Z+14, r19	; 0x0e
    49fc:	25 87       	std	Z+13, r18	; 0x0d
				offset[i]=(max[i]+min[i])/2;
    49fe:	43 89       	ldd	r20, Z+19	; 0x13
    4a00:	54 89       	ldd	r21, Z+20	; 0x14
    4a02:	24 0f       	add	r18, r20
    4a04:	35 1f       	adc	r19, r21
    4a06:	33 23       	and	r19, r19
    4a08:	14 f4       	brge	.+4      	; 0x4a0e <_ZN7Kompass20HMC5883L_readHeadingEv+0xfa>
    4a0a:	2f 5f       	subi	r18, 0xFF	; 255
    4a0c:	3f 4f       	sbci	r19, 0xFF	; 255
    4a0e:	35 95       	asr	r19
    4a10:	27 95       	ror	r18
    4a12:	18 96       	adiw	r26, 0x08	; 8
    4a14:	3c 93       	st	X, r19
    4a16:	2e 93       	st	-X, r18
    4a18:	17 97       	sbiw	r26, 0x07	; 7
    4a1a:	1a c0       	rjmp	.+52     	; 0x4a50 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else if(achsen[i]<min[i]){
    4a1c:	63 89       	ldd	r22, Z+19	; 0x13
    4a1e:	74 89       	ldd	r23, Z+20	; 0x14
    4a20:	26 17       	cp	r18, r22
    4a22:	37 07       	cpc	r19, r23
    4a24:	7c f4       	brge	.+30     	; 0x4a44 <_ZN7Kompass20HMC5883L_readHeadingEv+0x130>
				min[i]=achsen[i];
    4a26:	34 8b       	std	Z+20, r19	; 0x14
    4a28:	23 8b       	std	Z+19, r18	; 0x13
				offset[i]=(max[i]+min[i])/2;
    4a2a:	24 0f       	add	r18, r20
    4a2c:	35 1f       	adc	r19, r21
    4a2e:	33 23       	and	r19, r19
    4a30:	14 f4       	brge	.+4      	; 0x4a36 <_ZN7Kompass20HMC5883L_readHeadingEv+0x122>
    4a32:	2f 5f       	subi	r18, 0xFF	; 255
    4a34:	3f 4f       	sbci	r19, 0xFF	; 255
    4a36:	35 95       	asr	r19
    4a38:	27 95       	ror	r18
    4a3a:	18 96       	adiw	r26, 0x08	; 8
    4a3c:	3c 93       	st	X, r19
    4a3e:	2e 93       	st	-X, r18
    4a40:	17 97       	sbiw	r26, 0x07	; 7
    4a42:	06 c0       	rjmp	.+12     	; 0x4a50 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else {
				achsen[i]-=offset[i];
    4a44:	47 81       	ldd	r20, Z+7	; 0x07
    4a46:	50 85       	ldd	r21, Z+8	; 0x08
    4a48:	24 1b       	sub	r18, r20
    4a4a:	35 0b       	sbc	r19, r21
    4a4c:	31 83       	std	Z+1, r19	; 0x01
    4a4e:	20 83       	st	Z, r18
    4a50:	81 50       	subi	r24, 0x01	; 1
    4a52:	32 96       	adiw	r30, 0x02	; 2
		return 1;
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
    4a54:	81 11       	cpse	r24, r1
    4a56:	c9 cf       	rjmp	.-110    	; 0x49ea <_ZN7Kompass20HMC5883L_readHeadingEv+0xd6>
    4a58:	05 c0       	rjmp	.+10     	; 0x4a64 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
	sei();
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
	{
		return 1;
    4a5a:	81 e0       	ldi	r24, 0x01	; 1
    4a5c:	03 c0       	rjmp	.+6      	; 0x4a64 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    4a5e:	81 e0       	ldi	r24, 0x01	; 1
    4a60:	01 c0       	rjmp	.+2      	; 0x4a64 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    4a62:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	
	return 0;
}
    4a64:	26 96       	adiw	r28, 0x06	; 6
    4a66:	0f b6       	in	r0, 0x3f	; 63
    4a68:	f8 94       	cli
    4a6a:	de bf       	out	0x3e, r29	; 62
    4a6c:	0f be       	out	0x3f, r0	; 63
    4a6e:	cd bf       	out	0x3d, r28	; 61
    4a70:	df 91       	pop	r29
    4a72:	cf 91       	pop	r28
    4a74:	1f 91       	pop	r17
    4a76:	0f 91       	pop	r16
    4a78:	ff 90       	pop	r15
    4a7a:	ef 90       	pop	r14
    4a7c:	df 90       	pop	r13
    4a7e:	cf 90       	pop	r12
    4a80:	bf 90       	pop	r11
    4a82:	08 95       	ret

00004a84 <_ZN7Kompass5angleEdd>:

double Kompass::angle(double roll, double pitch){
    4a84:	2f 92       	push	r2
    4a86:	3f 92       	push	r3
    4a88:	4f 92       	push	r4
    4a8a:	5f 92       	push	r5
    4a8c:	6f 92       	push	r6
    4a8e:	7f 92       	push	r7
    4a90:	8f 92       	push	r8
    4a92:	9f 92       	push	r9
    4a94:	af 92       	push	r10
    4a96:	bf 92       	push	r11
    4a98:	cf 92       	push	r12
    4a9a:	df 92       	push	r13
    4a9c:	ef 92       	push	r14
    4a9e:	ff 92       	push	r15
    4aa0:	0f 93       	push	r16
    4aa2:	1f 93       	push	r17
    4aa4:	cf 93       	push	r28
    4aa6:	df 93       	push	r29
    4aa8:	cd b7       	in	r28, 0x3d	; 61
    4aaa:	de b7       	in	r29, 0x3e	; 62
    4aac:	64 97       	sbiw	r28, 0x14	; 20
    4aae:	0f b6       	in	r0, 0x3f	; 63
    4ab0:	f8 94       	cli
    4ab2:	de bf       	out	0x3e, r29	; 62
    4ab4:	0f be       	out	0x3f, r0	; 63
    4ab6:	cd bf       	out	0x3d, r28	; 61
    4ab8:	1c 01       	movw	r2, r24
    4aba:	4a 01       	movw	r8, r20
    4abc:	5b 01       	movw	r10, r22
    4abe:	68 01       	movw	r12, r16
    4ac0:	79 01       	movw	r14, r18
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
    4ac2:	28 df       	rcall	.-432    	; 0x4914 <_ZN7Kompass20HMC5883L_readHeadingEv>
    4ac4:	81 11       	cpse	r24, r1
    4ac6:	db c0       	rjmp	.+438    	; 0x4c7e <_ZN7Kompass5angleEdd+0x1fa>
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4ac8:	c7 01       	movw	r24, r14
    4aca:	b6 01       	movw	r22, r12
    4acc:	0a d6       	rcall	.+3092   	; 0x56e2 <cos>
    4ace:	69 83       	std	Y+1, r22	; 0x01
    4ad0:	7a 83       	std	Y+2, r23	; 0x02
    4ad2:	8b 83       	std	Y+3, r24	; 0x03
    4ad4:	9c 83       	std	Y+4, r25	; 0x04
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4ad6:	f1 01       	movw	r30, r2
    4ad8:	62 81       	ldd	r22, Z+2	; 0x02
    4ada:	73 81       	ldd	r23, Z+3	; 0x03
    4adc:	88 27       	eor	r24, r24
    4ade:	77 fd       	sbrc	r23, 7
    4ae0:	80 95       	com	r24
    4ae2:	98 2f       	mov	r25, r24
    4ae4:	9c d6       	rcall	.+3384   	; 0x581e <__floatsisf>
    4ae6:	2b 01       	movw	r4, r22
    4ae8:	3c 01       	movw	r6, r24
    4aea:	c5 01       	movw	r24, r10
    4aec:	b4 01       	movw	r22, r8
    4aee:	0e 94 8b 2d 	call	0x5b16	; 0x5b16 <sin>
    4af2:	6d 83       	std	Y+5, r22	; 0x05
    4af4:	7e 83       	std	Y+6, r23	; 0x06
    4af6:	8f 83       	std	Y+7, r24	; 0x07
    4af8:	98 87       	std	Y+8, r25	; 0x08
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    4afa:	f1 01       	movw	r30, r2
    4afc:	64 81       	ldd	r22, Z+4	; 0x04
    4afe:	75 81       	ldd	r23, Z+5	; 0x05
    4b00:	88 27       	eor	r24, r24
    4b02:	77 fd       	sbrc	r23, 7
    4b04:	80 95       	com	r24
    4b06:	98 2f       	mov	r25, r24
    4b08:	8a d6       	rcall	.+3348   	; 0x581e <__floatsisf>
    4b0a:	69 87       	std	Y+9, r22	; 0x09
    4b0c:	7a 87       	std	Y+10, r23	; 0x0a
    4b0e:	8b 87       	std	Y+11, r24	; 0x0b
    4b10:	9c 87       	std	Y+12, r25	; 0x0c
    4b12:	c5 01       	movw	r24, r10
    4b14:	b4 01       	movw	r22, r8
    4b16:	e5 d5       	rcall	.+3018   	; 0x56e2 <cos>
    4b18:	4b 01       	movw	r8, r22
    4b1a:	5c 01       	movw	r10, r24
    4b1c:	c7 01       	movw	r24, r14
    4b1e:	b6 01       	movw	r22, r12
    4b20:	fa d7       	rcall	.+4084   	; 0x5b16 <sin>
    4b22:	6d 87       	std	Y+13, r22	; 0x0d
    4b24:	7e 87       	std	Y+14, r23	; 0x0e
    4b26:	8f 87       	std	Y+15, r24	; 0x0f
    4b28:	98 8b       	std	Y+16, r25	; 0x10
		temp_M[1] = achsen[1]*cos(roll);
    4b2a:	a5 01       	movw	r20, r10
    4b2c:	94 01       	movw	r18, r8
    4b2e:	c3 01       	movw	r24, r6
    4b30:	b2 01       	movw	r22, r4
    4b32:	8e d7       	rcall	.+3868   	; 0x5a50 <__mulsf3>
    4b34:	41 d6       	rcall	.+3202   	; 0x57b8 <__fixsfsi>
		temp_M[1]+= achsen[2]*sin(roll);
    4b36:	88 27       	eor	r24, r24
    4b38:	77 fd       	sbrc	r23, 7
    4b3a:	80 95       	com	r24
    4b3c:	98 2f       	mov	r25, r24
    4b3e:	6f d6       	rcall	.+3294   	; 0x581e <__floatsisf>
    4b40:	6b 01       	movw	r12, r22
    4b42:	7c 01       	movw	r14, r24
    4b44:	29 85       	ldd	r18, Y+9	; 0x09
    4b46:	3a 85       	ldd	r19, Y+10	; 0x0a
    4b48:	4b 85       	ldd	r20, Y+11	; 0x0b
    4b4a:	5c 85       	ldd	r21, Y+12	; 0x0c
    4b4c:	6d 81       	ldd	r22, Y+5	; 0x05
    4b4e:	7e 81       	ldd	r23, Y+6	; 0x06
    4b50:	8f 81       	ldd	r24, Y+7	; 0x07
    4b52:	98 85       	ldd	r25, Y+8	; 0x08
    4b54:	7d d7       	rcall	.+3834   	; 0x5a50 <__mulsf3>
    4b56:	9b 01       	movw	r18, r22
    4b58:	ac 01       	movw	r20, r24
    4b5a:	c7 01       	movw	r24, r14
    4b5c:	b6 01       	movw	r22, r12
    4b5e:	f7 d4       	rcall	.+2542   	; 0x554e <__addsf3>
    4b60:	2b d6       	rcall	.+3158   	; 0x57b8 <__fixsfsi>
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4b62:	88 27       	eor	r24, r24
    4b64:	77 fd       	sbrc	r23, 7
    4b66:	80 95       	com	r24
    4b68:	98 2f       	mov	r25, r24
    4b6a:	59 d6       	rcall	.+3250   	; 0x581e <__floatsisf>
    4b6c:	69 8b       	std	Y+17, r22	; 0x11
    4b6e:	7a 8b       	std	Y+18, r23	; 0x12
    4b70:	8b 8b       	std	Y+19, r24	; 0x13
    4b72:	9c 8b       	std	Y+20, r25	; 0x14
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4b74:	f1 01       	movw	r30, r2
    4b76:	60 81       	ld	r22, Z
    4b78:	71 81       	ldd	r23, Z+1	; 0x01
    4b7a:	88 27       	eor	r24, r24
    4b7c:	77 fd       	sbrc	r23, 7
    4b7e:	80 95       	com	r24
    4b80:	98 2f       	mov	r25, r24
    4b82:	4d d6       	rcall	.+3226   	; 0x581e <__floatsisf>
    4b84:	29 81       	ldd	r18, Y+1	; 0x01
    4b86:	3a 81       	ldd	r19, Y+2	; 0x02
    4b88:	4b 81       	ldd	r20, Y+3	; 0x03
    4b8a:	5c 81       	ldd	r21, Y+4	; 0x04
    4b8c:	61 d7       	rcall	.+3778   	; 0x5a50 <__mulsf3>
    4b8e:	14 d6       	rcall	.+3112   	; 0x57b8 <__fixsfsi>
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4b90:	88 27       	eor	r24, r24
    4b92:	77 fd       	sbrc	r23, 7
    4b94:	80 95       	com	r24
    4b96:	98 2f       	mov	r25, r24
    4b98:	42 d6       	rcall	.+3204   	; 0x581e <__floatsisf>
    4b9a:	6b 01       	movw	r12, r22
    4b9c:	7c 01       	movw	r14, r24
    4b9e:	2d 81       	ldd	r18, Y+5	; 0x05
    4ba0:	3e 81       	ldd	r19, Y+6	; 0x06
    4ba2:	4f 81       	ldd	r20, Y+7	; 0x07
    4ba4:	58 85       	ldd	r21, Y+8	; 0x08
    4ba6:	c3 01       	movw	r24, r6
    4ba8:	b2 01       	movw	r22, r4
    4baa:	52 d7       	rcall	.+3748   	; 0x5a50 <__mulsf3>
    4bac:	9b 01       	movw	r18, r22
    4bae:	ac 01       	movw	r20, r24
    4bb0:	69 81       	ldd	r22, Y+1	; 0x01
    4bb2:	7a 81       	ldd	r23, Y+2	; 0x02
    4bb4:	8b 81       	ldd	r24, Y+3	; 0x03
    4bb6:	9c 81       	ldd	r25, Y+4	; 0x04
    4bb8:	4b d7       	rcall	.+3734   	; 0x5a50 <__mulsf3>
    4bba:	9b 01       	movw	r18, r22
    4bbc:	ac 01       	movw	r20, r24
    4bbe:	c7 01       	movw	r24, r14
    4bc0:	b6 01       	movw	r22, r12
    4bc2:	c5 d4       	rcall	.+2442   	; 0x554e <__addsf3>
    4bc4:	f9 d5       	rcall	.+3058   	; 0x57b8 <__fixsfsi>
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    4bc6:	88 27       	eor	r24, r24
    4bc8:	77 fd       	sbrc	r23, 7
    4bca:	80 95       	com	r24
    4bcc:	98 2f       	mov	r25, r24
    4bce:	27 d6       	rcall	.+3150   	; 0x581e <__floatsisf>
    4bd0:	6b 01       	movw	r12, r22
    4bd2:	7c 01       	movw	r14, r24
    4bd4:	a5 01       	movw	r20, r10
    4bd6:	94 01       	movw	r18, r8
    4bd8:	69 85       	ldd	r22, Y+9	; 0x09
    4bda:	7a 85       	ldd	r23, Y+10	; 0x0a
    4bdc:	8b 85       	ldd	r24, Y+11	; 0x0b
    4bde:	9c 85       	ldd	r25, Y+12	; 0x0c
    4be0:	37 d7       	rcall	.+3694   	; 0x5a50 <__mulsf3>
    4be2:	2d 85       	ldd	r18, Y+13	; 0x0d
    4be4:	3e 85       	ldd	r19, Y+14	; 0x0e
    4be6:	4f 85       	ldd	r20, Y+15	; 0x0f
    4be8:	58 89       	ldd	r21, Y+16	; 0x10
    4bea:	32 d7       	rcall	.+3684   	; 0x5a50 <__mulsf3>
    4bec:	9b 01       	movw	r18, r22
    4bee:	ac 01       	movw	r20, r24
    4bf0:	c7 01       	movw	r24, r14
    4bf2:	b6 01       	movw	r22, r12
    4bf4:	ac d4       	rcall	.+2392   	; 0x554e <__addsf3>
    4bf6:	e0 d5       	rcall	.+3008   	; 0x57b8 <__fixsfsi>
		temp_M[1] = achsen[1]*cos(roll);
		temp_M[1]+= achsen[2]*sin(roll);
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4bf8:	88 27       	eor	r24, r24
    4bfa:	77 fd       	sbrc	r23, 7
    4bfc:	80 95       	com	r24
    4bfe:	98 2f       	mov	r25, r24
    4c00:	0e d6       	rcall	.+3100   	; 0x581e <__floatsisf>
    4c02:	29 89       	ldd	r18, Y+17	; 0x11
    4c04:	3a 89       	ldd	r19, Y+18	; 0x12
    4c06:	4b 89       	ldd	r20, Y+19	; 0x13
    4c08:	5c 89       	ldd	r21, Y+20	; 0x14
    4c0a:	14 d5       	rcall	.+2600   	; 0x5634 <atan2>
    4c0c:	20 e0       	ldi	r18, 0x00	; 0
    4c0e:	30 e0       	ldi	r19, 0x00	; 0
    4c10:	44 e3       	ldi	r20, 0x34	; 52
    4c12:	53 e4       	ldi	r21, 0x43	; 67
    4c14:	1d d7       	rcall	.+3642   	; 0x5a50 <__mulsf3>
    4c16:	2b ed       	ldi	r18, 0xDB	; 219
    4c18:	3f e0       	ldi	r19, 0x0F	; 15
    4c1a:	49 e4       	ldi	r20, 0x49	; 73
    4c1c:	50 e4       	ldi	r21, 0x40	; 64
    4c1e:	64 d5       	rcall	.+2760   	; 0x56e8 <__divsf3>
    4c20:	20 e0       	ldi	r18, 0x00	; 0
    4c22:	30 e0       	ldi	r19, 0x00	; 0
    4c24:	44 e3       	ldi	r20, 0x34	; 52
    4c26:	53 e4       	ldi	r21, 0x43	; 67
    4c28:	92 d4       	rcall	.+2340   	; 0x554e <__addsf3>
		//Tilt kompensation
		//deklination
		angle+=2.35;
    4c2a:	26 e6       	ldi	r18, 0x66	; 102
    4c2c:	36 e6       	ldi	r19, 0x66	; 102
    4c2e:	46 e1       	ldi	r20, 0x16	; 22
    4c30:	50 e4       	ldi	r21, 0x40	; 64
    4c32:	8d d4       	rcall	.+2330   	; 0x554e <__addsf3>
    4c34:	6b 01       	movw	r12, r22
    4c36:	7c 01       	movw	r14, r24
		//Normierung auf %360
		if (angle>=360)
    4c38:	20 e0       	ldi	r18, 0x00	; 0
    4c3a:	30 e0       	ldi	r19, 0x00	; 0
    4c3c:	44 eb       	ldi	r20, 0xB4	; 180
    4c3e:	53 e4       	ldi	r21, 0x43	; 67
    4c40:	fc d6       	rcall	.+3576   	; 0x5a3a <__gesf2>
    4c42:	88 23       	and	r24, r24
    4c44:	54 f0       	brlt	.+20     	; 0x4c5a <_ZN7Kompass5angleEdd+0x1d6>
		{
			angle-=360;
    4c46:	20 e0       	ldi	r18, 0x00	; 0
    4c48:	30 e0       	ldi	r19, 0x00	; 0
    4c4a:	44 eb       	ldi	r20, 0xB4	; 180
    4c4c:	53 e4       	ldi	r21, 0x43	; 67
    4c4e:	c7 01       	movw	r24, r14
    4c50:	b6 01       	movw	r22, r12
    4c52:	7c d4       	rcall	.+2296   	; 0x554c <__subsf3>
    4c54:	6b 01       	movw	r12, r22
    4c56:	7c 01       	movw	r14, r24
    4c58:	1a c0       	rjmp	.+52     	; 0x4c8e <_ZN7Kompass5angleEdd+0x20a>
		}
		else if (angle < 0)
    4c5a:	20 e0       	ldi	r18, 0x00	; 0
    4c5c:	30 e0       	ldi	r19, 0x00	; 0
    4c5e:	a9 01       	movw	r20, r18
    4c60:	c7 01       	movw	r24, r14
    4c62:	b6 01       	movw	r22, r12
    4c64:	3a d5       	rcall	.+2676   	; 0x56da <__cmpsf2>
    4c66:	88 23       	and	r24, r24
    4c68:	94 f4       	brge	.+36     	; 0x4c8e <_ZN7Kompass5angleEdd+0x20a>
		{
			angle+=360;
    4c6a:	20 e0       	ldi	r18, 0x00	; 0
    4c6c:	30 e0       	ldi	r19, 0x00	; 0
    4c6e:	44 eb       	ldi	r20, 0xB4	; 180
    4c70:	53 e4       	ldi	r21, 0x43	; 67
    4c72:	c7 01       	movw	r24, r14
    4c74:	b6 01       	movw	r22, r12
    4c76:	6b d4       	rcall	.+2262   	; 0x554e <__addsf3>
    4c78:	6b 01       	movw	r12, r22
    4c7a:	7c 01       	movw	r14, r24
    4c7c:	08 c0       	rjmp	.+16     	; 0x4c8e <_ZN7Kompass5angleEdd+0x20a>
double Kompass::angle(double roll, double pitch){
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
    4c7e:	0f 2e       	mov	r0, r31
    4c80:	c1 2c       	mov	r12, r1
    4c82:	d1 2c       	mov	r13, r1
    4c84:	f0 e8       	ldi	r31, 0x80	; 128
    4c86:	ef 2e       	mov	r14, r31
    4c88:	ff eb       	ldi	r31, 0xBF	; 191
    4c8a:	ff 2e       	mov	r15, r31
    4c8c:	f0 2d       	mov	r31, r0
		{
			angle+=360;
		}
	}
	
	HMC5883L_command(0x02,HMCSIGLEMODE);
    4c8e:	41 e0       	ldi	r20, 0x01	; 1
    4c90:	62 e0       	ldi	r22, 0x02	; 2
    4c92:	c1 01       	movw	r24, r2
    4c94:	05 de       	rcall	.-1014   	; 0x48a0 <_ZN7Kompass16HMC5883L_commandEhh>
	return angle;
}
    4c96:	c7 01       	movw	r24, r14
    4c98:	b6 01       	movw	r22, r12
    4c9a:	64 96       	adiw	r28, 0x14	; 20
    4c9c:	0f b6       	in	r0, 0x3f	; 63
    4c9e:	f8 94       	cli
    4ca0:	de bf       	out	0x3e, r29	; 62
    4ca2:	0f be       	out	0x3f, r0	; 63
    4ca4:	cd bf       	out	0x3d, r28	; 61
    4ca6:	df 91       	pop	r29
    4ca8:	cf 91       	pop	r28
    4caa:	1f 91       	pop	r17
    4cac:	0f 91       	pop	r16
    4cae:	ff 90       	pop	r15
    4cb0:	ef 90       	pop	r14
    4cb2:	df 90       	pop	r13
    4cb4:	cf 90       	pop	r12
    4cb6:	bf 90       	pop	r11
    4cb8:	af 90       	pop	r10
    4cba:	9f 90       	pop	r9
    4cbc:	8f 90       	pop	r8
    4cbe:	7f 90       	pop	r7
    4cc0:	6f 90       	pop	r6
    4cc2:	5f 90       	pop	r5
    4cc4:	4f 90       	pop	r4
    4cc6:	3f 90       	pop	r3
    4cc8:	2f 90       	pop	r2
    4cca:	08 95       	ret

00004ccc <_ZN7Kompass25kallibrierung_ruecksetzenEv>:

void Kompass::kallibrierung_ruecksetzen(){
    4ccc:	fc 01       	movw	r30, r24
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4cce:	16 86       	std	Z+14, r1	; 0x0e
    4cd0:	15 86       	std	Z+13, r1	; 0x0d
		min[i]=0;
    4cd2:	14 8a       	std	Z+20, r1	; 0x14
    4cd4:	13 8a       	std	Z+19, r1	; 0x13
		offset[i]=0;
    4cd6:	10 86       	std	Z+8, r1	; 0x08
    4cd8:	17 82       	std	Z+7, r1	; 0x07
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4cda:	10 8a       	std	Z+16, r1	; 0x10
    4cdc:	17 86       	std	Z+15, r1	; 0x0f
		min[i]=0;
    4cde:	16 8a       	std	Z+22, r1	; 0x16
    4ce0:	15 8a       	std	Z+21, r1	; 0x15
		offset[i]=0;
    4ce2:	12 86       	std	Z+10, r1	; 0x0a
    4ce4:	11 86       	std	Z+9, r1	; 0x09
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4ce6:	12 8a       	std	Z+18, r1	; 0x12
    4ce8:	11 8a       	std	Z+17, r1	; 0x11
		min[i]=0;
    4cea:	10 8e       	std	Z+24, r1	; 0x18
    4cec:	17 8a       	std	Z+23, r1	; 0x17
		offset[i]=0;
    4cee:	14 86       	std	Z+12, r1	; 0x0c
    4cf0:	13 86       	std	Z+11, r1	; 0x0b
    4cf2:	08 95       	ret

00004cf4 <_ZN7LSM303DD1Ev>:
	//FIFO Bypass Mode
	ACCBypassmode();
}

void LSM303D::ACCStreammode(){
	LSM303_command(FIFO_CTRL,(1<<FM1));
    4cf4:	40 96       	adiw	r24, 0x10	; 16
    4cf6:	b1 cc       	rjmp	.-1694   	; 0x465a <_ZN3I2CD1Ev>
    4cf8:	08 95       	ret

00004cfa <_ZN7LSM303D7readaccEv>:
    4cfa:	6f 92       	push	r6
    4cfc:	7f 92       	push	r7
    4cfe:	8f 92       	push	r8
    4d00:	9f 92       	push	r9
    4d02:	af 92       	push	r10
    4d04:	bf 92       	push	r11
    4d06:	cf 92       	push	r12
    4d08:	df 92       	push	r13
    4d0a:	ef 92       	push	r14
    4d0c:	ff 92       	push	r15
    4d0e:	1f 93       	push	r17
    4d10:	cf 93       	push	r28
    4d12:	df 93       	push	r29
    4d14:	00 d0       	rcall	.+0      	; 0x4d16 <_ZN7LSM303D7readaccEv+0x1c>
    4d16:	00 d0       	rcall	.+0      	; 0x4d18 <_ZN7LSM303D7readaccEv+0x1e>
    4d18:	00 d0       	rcall	.+0      	; 0x4d1a <_ZN7LSM303D7readaccEv+0x20>
    4d1a:	cd b7       	in	r28, 0x3d	; 61
    4d1c:	de b7       	in	r29, 0x3e	; 62
    4d1e:	3c 01       	movw	r6, r24
    4d20:	f8 94       	cli
    4d22:	6c 01       	movw	r12, r24
    4d24:	80 e1       	ldi	r24, 0x10	; 16
    4d26:	c8 0e       	add	r12, r24
    4d28:	d1 1c       	adc	r13, r1
    4d2a:	c6 01       	movw	r24, r12
    4d2c:	97 dc       	rcall	.-1746   	; 0x465c <_ZN3I2C9twi_startEv>
    4d2e:	6a e3       	ldi	r22, 0x3A	; 58
    4d30:	c6 01       	movw	r24, r12
    4d32:	9c dc       	rcall	.-1736   	; 0x466c <_ZN3I2C9twi_writeEh>
    4d34:	68 ea       	ldi	r22, 0xA8	; 168
    4d36:	c6 01       	movw	r24, r12
    4d38:	99 dc       	rcall	.-1742   	; 0x466c <_ZN3I2C9twi_writeEh>
    4d3a:	c6 01       	movw	r24, r12
    4d3c:	8f dc       	rcall	.-1762   	; 0x465c <_ZN3I2C9twi_startEv>
    4d3e:	6b e3       	ldi	r22, 0x3B	; 59
    4d40:	c6 01       	movw	r24, r12
    4d42:	94 dc       	rcall	.-1752   	; 0x466c <_ZN3I2C9twi_writeEh>
    4d44:	fe 01       	movw	r30, r28
    4d46:	31 96       	adiw	r30, 0x01	; 1
    4d48:	7f 01       	movw	r14, r30
    4d4a:	10 e0       	ldi	r17, 0x00	; 0
    4d4c:	15 30       	cpi	r17, 0x05	; 5
    4d4e:	30 f4       	brcc	.+12     	; 0x4d5c <_ZN7LSM303D7readaccEv+0x62>
    4d50:	61 e0       	ldi	r22, 0x01	; 1
    4d52:	c6 01       	movw	r24, r12
    4d54:	9b dc       	rcall	.-1738   	; 0x468c <_ZN3I2C8twi_readEh>
    4d56:	f7 01       	movw	r30, r14
    4d58:	80 83       	st	Z, r24
    4d5a:	05 c0       	rjmp	.+10     	; 0x4d66 <_ZN7LSM303D7readaccEv+0x6c>
    4d5c:	60 e0       	ldi	r22, 0x00	; 0
    4d5e:	c6 01       	movw	r24, r12
    4d60:	95 dc       	rcall	.-1750   	; 0x468c <_ZN3I2C8twi_readEh>
    4d62:	f7 01       	movw	r30, r14
    4d64:	80 83       	st	Z, r24
    4d66:	1f 5f       	subi	r17, 0xFF	; 255
    4d68:	ff ef       	ldi	r31, 0xFF	; 255
    4d6a:	ef 1a       	sub	r14, r31
    4d6c:	ff 0a       	sbc	r15, r31
    4d6e:	16 30       	cpi	r17, 0x06	; 6
    4d70:	69 f7       	brne	.-38     	; 0x4d4c <_ZN7LSM303D7readaccEv+0x52>
    4d72:	c6 01       	movw	r24, r12
    4d74:	77 dc       	rcall	.-1810   	; 0x4664 <_ZN3I2C8twi_stopEv>
    4d76:	6a 81       	ldd	r22, Y+2	; 0x02
    4d78:	70 e0       	ldi	r23, 0x00	; 0
    4d7a:	76 2f       	mov	r23, r22
    4d7c:	66 27       	eor	r22, r22
    4d7e:	89 81       	ldd	r24, Y+1	; 0x01
    4d80:	68 2b       	or	r22, r24
    4d82:	f3 01       	movw	r30, r6
    4d84:	75 83       	std	Z+5, r23	; 0x05
    4d86:	64 83       	std	Z+4, r22	; 0x04
    4d88:	ac 80       	ldd	r10, Y+4	; 0x04
    4d8a:	b1 2c       	mov	r11, r1
    4d8c:	ba 2c       	mov	r11, r10
    4d8e:	aa 24       	eor	r10, r10
    4d90:	8b 81       	ldd	r24, Y+3	; 0x03
    4d92:	a8 2a       	or	r10, r24
    4d94:	b1 82       	std	Z+1, r11	; 0x01
    4d96:	a0 82       	st	Z, r10
    4d98:	8e 80       	ldd	r8, Y+6	; 0x06
    4d9a:	91 2c       	mov	r9, r1
    4d9c:	98 2c       	mov	r9, r8
    4d9e:	88 24       	eor	r8, r8
    4da0:	8d 81       	ldd	r24, Y+5	; 0x05
    4da2:	88 2a       	or	r8, r24
    4da4:	93 82       	std	Z+3, r9	; 0x03
    4da6:	82 82       	std	Z+2, r8	; 0x02
    4da8:	88 27       	eor	r24, r24
    4daa:	77 fd       	sbrc	r23, 7
    4dac:	80 95       	com	r24
    4dae:	98 2f       	mov	r25, r24
    4db0:	36 d5       	rcall	.+2668   	; 0x581e <__floatsisf>
    4db2:	6b 01       	movw	r12, r22
    4db4:	7c 01       	movw	r14, r24
    4db6:	b4 01       	movw	r22, r8
    4db8:	88 27       	eor	r24, r24
    4dba:	77 fd       	sbrc	r23, 7
    4dbc:	80 95       	com	r24
    4dbe:	98 2f       	mov	r25, r24
    4dc0:	2e d5       	rcall	.+2652   	; 0x581e <__floatsisf>
    4dc2:	9b 01       	movw	r18, r22
    4dc4:	ac 01       	movw	r20, r24
    4dc6:	c7 01       	movw	r24, r14
    4dc8:	b6 01       	movw	r22, r12
    4dca:	34 d4       	rcall	.+2152   	; 0x5634 <atan2>
    4dcc:	2b ed       	ldi	r18, 0xDB	; 219
    4dce:	3f e0       	ldi	r19, 0x0F	; 15
    4dd0:	49 ec       	ldi	r20, 0xC9	; 201
    4dd2:	5f e3       	ldi	r21, 0x3F	; 63
    4dd4:	bb d3       	rcall	.+1910   	; 0x554c <__subsf3>
    4dd6:	f3 01       	movw	r30, r6
    4dd8:	64 87       	std	Z+12, r22	; 0x0c
    4dda:	75 87       	std	Z+13, r23	; 0x0d
    4ddc:	86 87       	std	Z+14, r24	; 0x0e
    4dde:	97 87       	std	Z+15, r25	; 0x0f
    4de0:	b5 01       	movw	r22, r10
    4de2:	88 27       	eor	r24, r24
    4de4:	77 fd       	sbrc	r23, 7
    4de6:	80 95       	com	r24
    4de8:	98 2f       	mov	r25, r24
    4dea:	19 d5       	rcall	.+2610   	; 0x581e <__floatsisf>
    4dec:	9b 01       	movw	r18, r22
    4dee:	ac 01       	movw	r20, r24
    4df0:	c7 01       	movw	r24, r14
    4df2:	b6 01       	movw	r22, r12
    4df4:	1f d4       	rcall	.+2110   	; 0x5634 <atan2>
    4df6:	2b ed       	ldi	r18, 0xDB	; 219
    4df8:	3f e0       	ldi	r19, 0x0F	; 15
    4dfa:	49 ec       	ldi	r20, 0xC9	; 201
    4dfc:	5f e3       	ldi	r21, 0x3F	; 63
    4dfe:	a6 d3       	rcall	.+1868   	; 0x554c <__subsf3>
    4e00:	f3 01       	movw	r30, r6
    4e02:	60 87       	std	Z+8, r22	; 0x08
    4e04:	71 87       	std	Z+9, r23	; 0x09
    4e06:	82 87       	std	Z+10, r24	; 0x0a
    4e08:	93 87       	std	Z+11, r25	; 0x0b
    4e0a:	78 94       	sei
    4e0c:	26 96       	adiw	r28, 0x06	; 6
    4e0e:	0f b6       	in	r0, 0x3f	; 63
    4e10:	f8 94       	cli
    4e12:	de bf       	out	0x3e, r29	; 62
    4e14:	0f be       	out	0x3f, r0	; 63
    4e16:	cd bf       	out	0x3d, r28	; 61
    4e18:	df 91       	pop	r29
    4e1a:	cf 91       	pop	r28
    4e1c:	1f 91       	pop	r17
    4e1e:	ff 90       	pop	r15
    4e20:	ef 90       	pop	r14
    4e22:	df 90       	pop	r13
    4e24:	cf 90       	pop	r12
    4e26:	bf 90       	pop	r11
    4e28:	af 90       	pop	r10
    4e2a:	9f 90       	pop	r9
    4e2c:	8f 90       	pop	r8
    4e2e:	7f 90       	pop	r7
    4e30:	6f 90       	pop	r6
    4e32:	08 95       	ret

00004e34 <_ZN7LSM303D11readtemperaEv>:
    4e34:	cf 92       	push	r12
    4e36:	df 92       	push	r13
    4e38:	ef 92       	push	r14
    4e3a:	ff 92       	push	r15
    4e3c:	0f 93       	push	r16
    4e3e:	1f 93       	push	r17
    4e40:	cf 93       	push	r28
    4e42:	df 93       	push	r29
    4e44:	00 d0       	rcall	.+0      	; 0x4e46 <_ZN7LSM303D11readtemperaEv+0x12>
    4e46:	cd b7       	in	r28, 0x3d	; 61
    4e48:	de b7       	in	r29, 0x3e	; 62
    4e4a:	7c 01       	movw	r14, r24
    4e4c:	f8 94       	cli
    4e4e:	8c 01       	movw	r16, r24
    4e50:	00 5f       	subi	r16, 0xF0	; 240
    4e52:	1f 4f       	sbci	r17, 0xFF	; 255
    4e54:	c8 01       	movw	r24, r16
    4e56:	02 dc       	rcall	.-2044   	; 0x465c <_ZN3I2C9twi_startEv>
    4e58:	6a e3       	ldi	r22, 0x3A	; 58
    4e5a:	c8 01       	movw	r24, r16
    4e5c:	07 dc       	rcall	.-2034   	; 0x466c <_ZN3I2C9twi_writeEh>
    4e5e:	65 e8       	ldi	r22, 0x85	; 133
    4e60:	c8 01       	movw	r24, r16
    4e62:	04 dc       	rcall	.-2040   	; 0x466c <_ZN3I2C9twi_writeEh>
    4e64:	c8 01       	movw	r24, r16
    4e66:	fa db       	rcall	.-2060   	; 0x465c <_ZN3I2C9twi_startEv>
    4e68:	6b e3       	ldi	r22, 0x3B	; 59
    4e6a:	c8 01       	movw	r24, r16
    4e6c:	ff db       	rcall	.-2050   	; 0x466c <_ZN3I2C9twi_writeEh>
    4e6e:	cc 24       	eor	r12, r12
    4e70:	c3 94       	inc	r12
    4e72:	d1 2c       	mov	r13, r1
    4e74:	02 c0       	rjmp	.+4      	; 0x4e7a <_ZN7LSM303D11readtemperaEv+0x46>
    4e76:	d3 94       	inc	r13
    4e78:	c3 94       	inc	r12
    4e7a:	d1 10       	cpse	r13, r1
    4e7c:	05 c0       	rjmp	.+10     	; 0x4e88 <_ZN7LSM303D11readtemperaEv+0x54>
    4e7e:	61 e0       	ldi	r22, 0x01	; 1
    4e80:	c8 01       	movw	r24, r16
    4e82:	04 dc       	rcall	.-2040   	; 0x468c <_ZN3I2C8twi_readEh>
    4e84:	89 83       	std	Y+1, r24	; 0x01
    4e86:	f7 cf       	rjmp	.-18     	; 0x4e76 <_ZN7LSM303D11readtemperaEv+0x42>
    4e88:	60 e0       	ldi	r22, 0x00	; 0
    4e8a:	c8 01       	movw	r24, r16
    4e8c:	ff db       	rcall	.-2050   	; 0x468c <_ZN3I2C8twi_readEh>
    4e8e:	e1 e0       	ldi	r30, 0x01	; 1
    4e90:	f0 e0       	ldi	r31, 0x00	; 0
    4e92:	ec 0f       	add	r30, r28
    4e94:	fd 1f       	adc	r31, r29
    4e96:	ed 0d       	add	r30, r13
    4e98:	f1 1d       	adc	r31, r1
    4e9a:	80 83       	st	Z, r24
    4e9c:	81 e0       	ldi	r24, 0x01	; 1
    4e9e:	8c 15       	cp	r24, r12
    4ea0:	50 f7       	brcc	.-44     	; 0x4e76 <_ZN7LSM303D11readtemperaEv+0x42>
    4ea2:	c8 01       	movw	r24, r16
    4ea4:	df db       	rcall	.-2114   	; 0x4664 <_ZN3I2C8twi_stopEv>
    4ea6:	8a 81       	ldd	r24, Y+2	; 0x02
    4ea8:	90 e0       	ldi	r25, 0x00	; 0
    4eaa:	98 2f       	mov	r25, r24
    4eac:	88 27       	eor	r24, r24
    4eae:	29 81       	ldd	r18, Y+1	; 0x01
    4eb0:	82 2b       	or	r24, r18
    4eb2:	91 95       	neg	r25
    4eb4:	81 95       	neg	r24
    4eb6:	91 09       	sbc	r25, r1
    4eb8:	f7 01       	movw	r30, r14
    4eba:	97 83       	std	Z+7, r25	; 0x07
    4ebc:	86 83       	std	Z+6, r24	; 0x06
    4ebe:	78 94       	sei
    4ec0:	0f 90       	pop	r0
    4ec2:	0f 90       	pop	r0
    4ec4:	df 91       	pop	r29
    4ec6:	cf 91       	pop	r28
    4ec8:	1f 91       	pop	r17
    4eca:	0f 91       	pop	r16
    4ecc:	ff 90       	pop	r15
    4ece:	ef 90       	pop	r14
    4ed0:	df 90       	pop	r13
    4ed2:	cf 90       	pop	r12
    4ed4:	08 95       	ret

00004ed6 <_ZN7LSM303D14LSM303_commandEhh>:
    4ed6:	0f 93       	push	r16
    4ed8:	1f 93       	push	r17
    4eda:	cf 93       	push	r28
    4edc:	df 93       	push	r29
    4ede:	06 2f       	mov	r16, r22
    4ee0:	14 2f       	mov	r17, r20
    4ee2:	ec 01       	movw	r28, r24
    4ee4:	60 96       	adiw	r28, 0x10	; 16
    4ee6:	ce 01       	movw	r24, r28
    4ee8:	b9 db       	rcall	.-2190   	; 0x465c <_ZN3I2C9twi_startEv>
    4eea:	6a e3       	ldi	r22, 0x3A	; 58
    4eec:	ce 01       	movw	r24, r28
    4eee:	be db       	rcall	.-2180   	; 0x466c <_ZN3I2C9twi_writeEh>
    4ef0:	60 2f       	mov	r22, r16
    4ef2:	ce 01       	movw	r24, r28
    4ef4:	bb db       	rcall	.-2186   	; 0x466c <_ZN3I2C9twi_writeEh>
    4ef6:	61 2f       	mov	r22, r17
    4ef8:	ce 01       	movw	r24, r28
    4efa:	b8 db       	rcall	.-2192   	; 0x466c <_ZN3I2C9twi_writeEh>
    4efc:	ce 01       	movw	r24, r28
    4efe:	b2 db       	rcall	.-2204   	; 0x4664 <_ZN3I2C8twi_stopEv>
    4f00:	df 91       	pop	r29
    4f02:	cf 91       	pop	r28
    4f04:	1f 91       	pop	r17
    4f06:	0f 91       	pop	r16
    4f08:	08 95       	ret

00004f0a <_ZN7LSM303D13ACCBypassmodeEv>:
}

void LSM303D::ACCBypassmode(){
	LSM303_command(FIFO_CTRL,0x00);
    4f0a:	40 e0       	ldi	r20, 0x00	; 0
    4f0c:	6e e2       	ldi	r22, 0x2E	; 46
    4f0e:	e3 cf       	rjmp	.-58     	; 0x4ed6 <_ZN7LSM303D14LSM303_commandEhh>
    4f10:	08 95       	ret

00004f12 <_ZN7LSM303D9acce_initEv>:
// default destructor
LSM303D::~LSM303D()
{
} //~LSM303D

void LSM303D::acce_init(){
    4f12:	cf 93       	push	r28
    4f14:	df 93       	push	r29
    4f16:	ec 01       	movw	r28, r24
	//ACC Activ und 25Hz ohne Block dataread
	LSM303_command(CTRL1,(1<<AXEN)|(1<<AYEN)|(1<<AZEN)|(1<<AODR2));
    4f18:	47 e4       	ldi	r20, 0x47	; 71
    4f1a:	60 e2       	ldi	r22, 0x20	; 32
    4f1c:	dc df       	rcall	.-72     	; 0x4ed6 <_ZN7LSM303D14LSM303_commandEhh>
	
	//ACC fuer +-2g
	LSM303_command(CTRL2,0x00);
    4f1e:	40 e0       	ldi	r20, 0x00	; 0
    4f20:	61 e2       	ldi	r22, 0x21	; 33
    4f22:	ce 01       	movw	r24, r28
    4f24:	d8 df       	rcall	.-80     	; 0x4ed6 <_ZN7LSM303D14LSM303_commandEhh>
	
	//Temperatursensor an
	LSM303_command(CTRL5,(1<<TEMP_EN));
    4f26:	40 e8       	ldi	r20, 0x80	; 128
    4f28:	64 e2       	ldi	r22, 0x24	; 36
    4f2a:	ce 01       	movw	r24, r28
    4f2c:	d4 df       	rcall	.-88     	; 0x4ed6 <_ZN7LSM303D14LSM303_commandEhh>
	
	//FIFO Bypass Mode
	ACCBypassmode();
    4f2e:	ce 01       	movw	r24, r28
    4f30:	ec df       	rcall	.-40     	; 0x4f0a <_ZN7LSM303D13ACCBypassmodeEv>
}
    4f32:	df 91       	pop	r29
    4f34:	cf 91       	pop	r28
    4f36:	08 95       	ret

00004f38 <_ZN7LSM303DC1Ev>:


#include "LSM303D.h"

// default constructor
LSM303D::LSM303D()
    4f38:	cf 93       	push	r28
    4f3a:	df 93       	push	r29
    4f3c:	ec 01       	movw	r28, r24
    4f3e:	40 96       	adiw	r24, 0x10	; 16
    4f40:	88 db       	rcall	.-2288   	; 0x4652 <_ZN3I2CC1Ev>
{
	//Variablen initialisieren
	Tempera=0;
    4f42:	1f 82       	std	Y+7, r1	; 0x07
    4f44:	1e 82       	std	Y+6, r1	; 0x06
	roll=0.0;
    4f46:	18 86       	std	Y+8, r1	; 0x08
    4f48:	19 86       	std	Y+9, r1	; 0x09
    4f4a:	1a 86       	std	Y+10, r1	; 0x0a
    4f4c:	1b 86       	std	Y+11, r1	; 0x0b
	pitch=0.0;
    4f4e:	1c 86       	std	Y+12, r1	; 0x0c
    4f50:	1d 86       	std	Y+13, r1	; 0x0d
    4f52:	1e 86       	std	Y+14, r1	; 0x0e
    4f54:	1f 86       	std	Y+15, r1	; 0x0f
	for (uint8_t i=0;i<3;i++)
	{
		achsen_A[i]=0;
    4f56:	19 82       	std	Y+1, r1	; 0x01
    4f58:	18 82       	st	Y, r1
    4f5a:	1b 82       	std	Y+3, r1	; 0x03
    4f5c:	1a 82       	std	Y+2, r1	; 0x02
    4f5e:	1d 82       	std	Y+5, r1	; 0x05
    4f60:	1c 82       	std	Y+4, r1	; 0x04
	}
	
	//ACC init
	acce_init();
    4f62:	ce 01       	movw	r24, r28
    4f64:	d6 df       	rcall	.-84     	; 0x4f12 <_ZN7LSM303D9acce_initEv>
} //LSM303D
    4f66:	df 91       	pop	r29
    4f68:	cf 91       	pop	r28
    4f6a:	08 95       	ret

00004f6c <_ZN6OutputC1Ehh>:
#include "Output.h"

// default constructor
Output::Output(uint8_t Portpraefix, uint8_t Pinnumber)
{
	Pin=Pinnumber;
    4f6c:	fc 01       	movw	r30, r24
    4f6e:	41 83       	std	Z+1, r20	; 0x01
	Port=Portpraefix;
    4f70:	60 83       	st	Z, r22
	switch (Portpraefix)
    4f72:	62 34       	cpi	r22, 0x42	; 66
    4f74:	b1 f0       	breq	.+44     	; 0x4fa2 <_ZN6OutputC1Ehh+0x36>
    4f76:	18 f4       	brcc	.+6      	; 0x4f7e <_ZN6OutputC1Ehh+0x12>
    4f78:	61 34       	cpi	r22, 0x41	; 65
    4f7a:	31 f0       	breq	.+12     	; 0x4f88 <_ZN6OutputC1Ehh+0x1c>
    4f7c:	08 95       	ret
    4f7e:	63 34       	cpi	r22, 0x43	; 67
    4f80:	e9 f0       	breq	.+58     	; 0x4fbc <_ZN6OutputC1Ehh+0x50>
    4f82:	64 34       	cpi	r22, 0x44	; 68
    4f84:	41 f1       	breq	.+80     	; 0x4fd6 <_ZN6OutputC1Ehh+0x6a>
    4f86:	08 95       	ret
	{
		case 'A':
			DDRA |= (1<<Pin);
    4f88:	21 b1       	in	r18, 0x01	; 1
    4f8a:	81 e0       	ldi	r24, 0x01	; 1
    4f8c:	90 e0       	ldi	r25, 0x00	; 0
    4f8e:	bc 01       	movw	r22, r24
    4f90:	02 c0       	rjmp	.+4      	; 0x4f96 <_ZN6OutputC1Ehh+0x2a>
    4f92:	66 0f       	add	r22, r22
    4f94:	77 1f       	adc	r23, r23
    4f96:	4a 95       	dec	r20
    4f98:	e2 f7       	brpl	.-8      	; 0x4f92 <_ZN6OutputC1Ehh+0x26>
    4f9a:	ab 01       	movw	r20, r22
    4f9c:	42 2b       	or	r20, r18
    4f9e:	41 b9       	out	0x01, r20	; 1
			break;
    4fa0:	08 95       	ret
		case 'B':
			DDRB |= (1<<Pin);
    4fa2:	24 b1       	in	r18, 0x04	; 4
    4fa4:	81 e0       	ldi	r24, 0x01	; 1
    4fa6:	90 e0       	ldi	r25, 0x00	; 0
    4fa8:	fc 01       	movw	r30, r24
    4faa:	02 c0       	rjmp	.+4      	; 0x4fb0 <_ZN6OutputC1Ehh+0x44>
    4fac:	ee 0f       	add	r30, r30
    4fae:	ff 1f       	adc	r31, r31
    4fb0:	4a 95       	dec	r20
    4fb2:	e2 f7       	brpl	.-8      	; 0x4fac <_ZN6OutputC1Ehh+0x40>
    4fb4:	af 01       	movw	r20, r30
    4fb6:	42 2b       	or	r20, r18
    4fb8:	44 b9       	out	0x04, r20	; 4
			break;
    4fba:	08 95       	ret
		case 'C':
			DDRC |= (1<<Pin);
    4fbc:	27 b1       	in	r18, 0x07	; 7
    4fbe:	81 e0       	ldi	r24, 0x01	; 1
    4fc0:	90 e0       	ldi	r25, 0x00	; 0
    4fc2:	bc 01       	movw	r22, r24
    4fc4:	02 c0       	rjmp	.+4      	; 0x4fca <_ZN6OutputC1Ehh+0x5e>
    4fc6:	66 0f       	add	r22, r22
    4fc8:	77 1f       	adc	r23, r23
    4fca:	4a 95       	dec	r20
    4fcc:	e2 f7       	brpl	.-8      	; 0x4fc6 <_ZN6OutputC1Ehh+0x5a>
    4fce:	ab 01       	movw	r20, r22
    4fd0:	42 2b       	or	r20, r18
    4fd2:	47 b9       	out	0x07, r20	; 7
			break;
    4fd4:	08 95       	ret
		case 'D':
			DDRD |= (1<<Pin);
    4fd6:	2a b1       	in	r18, 0x0a	; 10
    4fd8:	81 e0       	ldi	r24, 0x01	; 1
    4fda:	90 e0       	ldi	r25, 0x00	; 0
    4fdc:	fc 01       	movw	r30, r24
    4fde:	02 c0       	rjmp	.+4      	; 0x4fe4 <_ZN6OutputC1Ehh+0x78>
    4fe0:	ee 0f       	add	r30, r30
    4fe2:	ff 1f       	adc	r31, r31
    4fe4:	4a 95       	dec	r20
    4fe6:	e2 f7       	brpl	.-8      	; 0x4fe0 <_ZN6OutputC1Ehh+0x74>
    4fe8:	af 01       	movw	r20, r30
    4fea:	42 2b       	or	r20, r18
    4fec:	4a b9       	out	0x0a, r20	; 10
    4fee:	08 95       	ret

00004ff0 <_ZN6OutputD1Ev>:
			break;
	}
} //Output

// default destructor
Output::~Output()
    4ff0:	08 95       	ret

00004ff2 <_ZN6Output2onEv>:
{
} //~Output

void Output::on(){
	switch (Port)
    4ff2:	fc 01       	movw	r30, r24
    4ff4:	20 81       	ld	r18, Z
    4ff6:	22 34       	cpi	r18, 0x42	; 66
    4ff8:	c1 f0       	breq	.+48     	; 0x502a <_ZN6Output2onEv+0x38>
    4ffa:	18 f4       	brcc	.+6      	; 0x5002 <_ZN6Output2onEv+0x10>
    4ffc:	21 34       	cpi	r18, 0x41	; 65
    4ffe:	31 f0       	breq	.+12     	; 0x500c <_ZN6Output2onEv+0x1a>
    5000:	08 95       	ret
    5002:	23 34       	cpi	r18, 0x43	; 67
    5004:	09 f1       	breq	.+66     	; 0x5048 <_ZN6Output2onEv+0x56>
    5006:	24 34       	cpi	r18, 0x44	; 68
    5008:	71 f1       	breq	.+92     	; 0x5066 <_ZN6Output2onEv+0x74>
    500a:	08 95       	ret
	{
		case 'A':
			PORTA |= (1<<Pin);
    500c:	42 b1       	in	r20, 0x02	; 2
    500e:	21 e0       	ldi	r18, 0x01	; 1
    5010:	30 e0       	ldi	r19, 0x00	; 0
    5012:	b9 01       	movw	r22, r18
    5014:	fc 01       	movw	r30, r24
    5016:	01 80       	ldd	r0, Z+1	; 0x01
    5018:	02 c0       	rjmp	.+4      	; 0x501e <_ZN6Output2onEv+0x2c>
    501a:	66 0f       	add	r22, r22
    501c:	77 1f       	adc	r23, r23
    501e:	0a 94       	dec	r0
    5020:	e2 f7       	brpl	.-8      	; 0x501a <_ZN6Output2onEv+0x28>
    5022:	cb 01       	movw	r24, r22
    5024:	84 2b       	or	r24, r20
    5026:	82 b9       	out	0x02, r24	; 2
			break;
    5028:	08 95       	ret
		case 'B':
			PORTB |= (1<<Pin);
    502a:	45 b1       	in	r20, 0x05	; 5
    502c:	21 e0       	ldi	r18, 0x01	; 1
    502e:	30 e0       	ldi	r19, 0x00	; 0
    5030:	b9 01       	movw	r22, r18
    5032:	fc 01       	movw	r30, r24
    5034:	01 80       	ldd	r0, Z+1	; 0x01
    5036:	02 c0       	rjmp	.+4      	; 0x503c <_ZN6Output2onEv+0x4a>
    5038:	66 0f       	add	r22, r22
    503a:	77 1f       	adc	r23, r23
    503c:	0a 94       	dec	r0
    503e:	e2 f7       	brpl	.-8      	; 0x5038 <_ZN6Output2onEv+0x46>
    5040:	cb 01       	movw	r24, r22
    5042:	84 2b       	or	r24, r20
    5044:	85 b9       	out	0x05, r24	; 5
			break;
    5046:	08 95       	ret
		case 'C':
			PORTC |= (1<<Pin);
    5048:	48 b1       	in	r20, 0x08	; 8
    504a:	21 e0       	ldi	r18, 0x01	; 1
    504c:	30 e0       	ldi	r19, 0x00	; 0
    504e:	b9 01       	movw	r22, r18
    5050:	fc 01       	movw	r30, r24
    5052:	01 80       	ldd	r0, Z+1	; 0x01
    5054:	02 c0       	rjmp	.+4      	; 0x505a <_ZN6Output2onEv+0x68>
    5056:	66 0f       	add	r22, r22
    5058:	77 1f       	adc	r23, r23
    505a:	0a 94       	dec	r0
    505c:	e2 f7       	brpl	.-8      	; 0x5056 <_ZN6Output2onEv+0x64>
    505e:	cb 01       	movw	r24, r22
    5060:	84 2b       	or	r24, r20
    5062:	88 b9       	out	0x08, r24	; 8
			break;
    5064:	08 95       	ret
		case 'D':
			PORTD |= (1<<Pin);
    5066:	4b b1       	in	r20, 0x0b	; 11
    5068:	21 e0       	ldi	r18, 0x01	; 1
    506a:	30 e0       	ldi	r19, 0x00	; 0
    506c:	b9 01       	movw	r22, r18
    506e:	fc 01       	movw	r30, r24
    5070:	01 80       	ldd	r0, Z+1	; 0x01
    5072:	02 c0       	rjmp	.+4      	; 0x5078 <_ZN6Output2onEv+0x86>
    5074:	66 0f       	add	r22, r22
    5076:	77 1f       	adc	r23, r23
    5078:	0a 94       	dec	r0
    507a:	e2 f7       	brpl	.-8      	; 0x5074 <_ZN6Output2onEv+0x82>
    507c:	cb 01       	movw	r24, r22
    507e:	84 2b       	or	r24, r20
    5080:	8b b9       	out	0x0b, r24	; 11
    5082:	08 95       	ret

00005084 <_ZN6Output4isonEv>:
	}
}

uint8_t Output::ison(){
	uint8_t returnparam=0;
	switch (Port)
    5084:	fc 01       	movw	r30, r24
    5086:	20 81       	ld	r18, Z
    5088:	22 34       	cpi	r18, 0x42	; 66
    508a:	b1 f0       	breq	.+44     	; 0x50b8 <_ZN6Output4isonEv+0x34>
    508c:	18 f4       	brcc	.+6      	; 0x5094 <_ZN6Output4isonEv+0x10>
    508e:	21 34       	cpi	r18, 0x41	; 65
    5090:	31 f0       	breq	.+12     	; 0x509e <_ZN6Output4isonEv+0x1a>
    5092:	39 c0       	rjmp	.+114    	; 0x5106 <_ZN6Output4isonEv+0x82>
    5094:	23 34       	cpi	r18, 0x43	; 67
    5096:	e9 f0       	breq	.+58     	; 0x50d2 <_ZN6Output4isonEv+0x4e>
    5098:	24 34       	cpi	r18, 0x44	; 68
    509a:	41 f1       	breq	.+80     	; 0x50ec <_ZN6Output4isonEv+0x68>
    509c:	34 c0       	rjmp	.+104    	; 0x5106 <_ZN6Output4isonEv+0x82>
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    509e:	22 b1       	in	r18, 0x02	; 2
    50a0:	30 e0       	ldi	r19, 0x00	; 0
    50a2:	a9 01       	movw	r20, r18
    50a4:	fc 01       	movw	r30, r24
    50a6:	01 80       	ldd	r0, Z+1	; 0x01
    50a8:	02 c0       	rjmp	.+4      	; 0x50ae <_ZN6Output4isonEv+0x2a>
    50aa:	55 95       	asr	r21
    50ac:	47 95       	ror	r20
    50ae:	0a 94       	dec	r0
    50b0:	e2 f7       	brpl	.-8      	; 0x50aa <_ZN6Output4isonEv+0x26>
    50b2:	ca 01       	movw	r24, r20
    50b4:	81 70       	andi	r24, 0x01	; 1
    50b6:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    50b8:	25 b1       	in	r18, 0x05	; 5
    50ba:	30 e0       	ldi	r19, 0x00	; 0
    50bc:	a9 01       	movw	r20, r18
    50be:	fc 01       	movw	r30, r24
    50c0:	01 80       	ldd	r0, Z+1	; 0x01
    50c2:	02 c0       	rjmp	.+4      	; 0x50c8 <_ZN6Output4isonEv+0x44>
    50c4:	55 95       	asr	r21
    50c6:	47 95       	ror	r20
    50c8:	0a 94       	dec	r0
    50ca:	e2 f7       	brpl	.-8      	; 0x50c4 <_ZN6Output4isonEv+0x40>
    50cc:	ca 01       	movw	r24, r20
    50ce:	81 70       	andi	r24, 0x01	; 1
    50d0:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    50d2:	28 b1       	in	r18, 0x08	; 8
    50d4:	30 e0       	ldi	r19, 0x00	; 0
    50d6:	a9 01       	movw	r20, r18
    50d8:	fc 01       	movw	r30, r24
    50da:	01 80       	ldd	r0, Z+1	; 0x01
    50dc:	02 c0       	rjmp	.+4      	; 0x50e2 <_ZN6Output4isonEv+0x5e>
    50de:	55 95       	asr	r21
    50e0:	47 95       	ror	r20
    50e2:	0a 94       	dec	r0
    50e4:	e2 f7       	brpl	.-8      	; 0x50de <_ZN6Output4isonEv+0x5a>
    50e6:	ca 01       	movw	r24, r20
    50e8:	81 70       	andi	r24, 0x01	; 1
    50ea:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    50ec:	2b b1       	in	r18, 0x0b	; 11
    50ee:	30 e0       	ldi	r19, 0x00	; 0
    50f0:	a9 01       	movw	r20, r18
    50f2:	fc 01       	movw	r30, r24
    50f4:	01 80       	ldd	r0, Z+1	; 0x01
    50f6:	02 c0       	rjmp	.+4      	; 0x50fc <_ZN6Output4isonEv+0x78>
    50f8:	55 95       	asr	r21
    50fa:	47 95       	ror	r20
    50fc:	0a 94       	dec	r0
    50fe:	e2 f7       	brpl	.-8      	; 0x50f8 <_ZN6Output4isonEv+0x74>
    5100:	ca 01       	movw	r24, r20
    5102:	81 70       	andi	r24, 0x01	; 1
    5104:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		default:
		returnparam = 2;
    5106:	82 e0       	ldi	r24, 0x02	; 2
			break;
	}
	return returnparam;
}
    5108:	08 95       	ret

0000510a <_ZN6Output3offEv>:

void Output::off(){
	switch (Port)
    510a:	fc 01       	movw	r30, r24
    510c:	20 81       	ld	r18, Z
    510e:	22 34       	cpi	r18, 0x42	; 66
    5110:	c9 f0       	breq	.+50     	; 0x5144 <_ZN6Output3offEv+0x3a>
    5112:	18 f4       	brcc	.+6      	; 0x511a <_ZN6Output3offEv+0x10>
    5114:	21 34       	cpi	r18, 0x41	; 65
    5116:	31 f0       	breq	.+12     	; 0x5124 <_ZN6Output3offEv+0x1a>
    5118:	08 95       	ret
    511a:	23 34       	cpi	r18, 0x43	; 67
    511c:	19 f1       	breq	.+70     	; 0x5164 <_ZN6Output3offEv+0x5a>
    511e:	24 34       	cpi	r18, 0x44	; 68
    5120:	89 f1       	breq	.+98     	; 0x5184 <_ZN6Output3offEv+0x7a>
    5122:	08 95       	ret
	{
		case 'A':
			PORTA &= ~(1<<Pin);
    5124:	42 b1       	in	r20, 0x02	; 2
    5126:	21 e0       	ldi	r18, 0x01	; 1
    5128:	30 e0       	ldi	r19, 0x00	; 0
    512a:	b9 01       	movw	r22, r18
    512c:	fc 01       	movw	r30, r24
    512e:	01 80       	ldd	r0, Z+1	; 0x01
    5130:	02 c0       	rjmp	.+4      	; 0x5136 <_ZN6Output3offEv+0x2c>
    5132:	66 0f       	add	r22, r22
    5134:	77 1f       	adc	r23, r23
    5136:	0a 94       	dec	r0
    5138:	e2 f7       	brpl	.-8      	; 0x5132 <_ZN6Output3offEv+0x28>
    513a:	cb 01       	movw	r24, r22
    513c:	80 95       	com	r24
    513e:	84 23       	and	r24, r20
    5140:	82 b9       	out	0x02, r24	; 2
			break;
    5142:	08 95       	ret
		case 'B':
			PORTB &= ~(1<<Pin);
    5144:	45 b1       	in	r20, 0x05	; 5
    5146:	21 e0       	ldi	r18, 0x01	; 1
    5148:	30 e0       	ldi	r19, 0x00	; 0
    514a:	b9 01       	movw	r22, r18
    514c:	fc 01       	movw	r30, r24
    514e:	01 80       	ldd	r0, Z+1	; 0x01
    5150:	02 c0       	rjmp	.+4      	; 0x5156 <_ZN6Output3offEv+0x4c>
    5152:	66 0f       	add	r22, r22
    5154:	77 1f       	adc	r23, r23
    5156:	0a 94       	dec	r0
    5158:	e2 f7       	brpl	.-8      	; 0x5152 <_ZN6Output3offEv+0x48>
    515a:	cb 01       	movw	r24, r22
    515c:	80 95       	com	r24
    515e:	84 23       	and	r24, r20
    5160:	85 b9       	out	0x05, r24	; 5
			break;
    5162:	08 95       	ret
		case 'C':
			PORTC &= ~(1<<Pin);
    5164:	48 b1       	in	r20, 0x08	; 8
    5166:	21 e0       	ldi	r18, 0x01	; 1
    5168:	30 e0       	ldi	r19, 0x00	; 0
    516a:	b9 01       	movw	r22, r18
    516c:	fc 01       	movw	r30, r24
    516e:	01 80       	ldd	r0, Z+1	; 0x01
    5170:	02 c0       	rjmp	.+4      	; 0x5176 <_ZN6Output3offEv+0x6c>
    5172:	66 0f       	add	r22, r22
    5174:	77 1f       	adc	r23, r23
    5176:	0a 94       	dec	r0
    5178:	e2 f7       	brpl	.-8      	; 0x5172 <_ZN6Output3offEv+0x68>
    517a:	cb 01       	movw	r24, r22
    517c:	80 95       	com	r24
    517e:	84 23       	and	r24, r20
    5180:	88 b9       	out	0x08, r24	; 8
			break;
    5182:	08 95       	ret
		case 'D':
			PORTD &= ~(1<<Pin);
    5184:	4b b1       	in	r20, 0x0b	; 11
    5186:	21 e0       	ldi	r18, 0x01	; 1
    5188:	30 e0       	ldi	r19, 0x00	; 0
    518a:	b9 01       	movw	r22, r18
    518c:	fc 01       	movw	r30, r24
    518e:	01 80       	ldd	r0, Z+1	; 0x01
    5190:	02 c0       	rjmp	.+4      	; 0x5196 <_ZN6Output3offEv+0x8c>
    5192:	66 0f       	add	r22, r22
    5194:	77 1f       	adc	r23, r23
    5196:	0a 94       	dec	r0
    5198:	e2 f7       	brpl	.-8      	; 0x5192 <_ZN6Output3offEv+0x88>
    519a:	cb 01       	movw	r24, r22
    519c:	80 95       	com	r24
    519e:	84 23       	and	r24, r20
    51a0:	8b b9       	out	0x0b, r24	; 11
    51a2:	08 95       	ret

000051a4 <_ZN6Output6toggleEv>:
			break;
	}
}

void Output::toggle(){
	switch (Port)
    51a4:	fc 01       	movw	r30, r24
    51a6:	20 81       	ld	r18, Z
    51a8:	22 34       	cpi	r18, 0x42	; 66
    51aa:	c1 f0       	breq	.+48     	; 0x51dc <_ZN6Output6toggleEv+0x38>
    51ac:	18 f4       	brcc	.+6      	; 0x51b4 <_ZN6Output6toggleEv+0x10>
    51ae:	21 34       	cpi	r18, 0x41	; 65
    51b0:	31 f0       	breq	.+12     	; 0x51be <_ZN6Output6toggleEv+0x1a>
    51b2:	08 95       	ret
    51b4:	23 34       	cpi	r18, 0x43	; 67
    51b6:	09 f1       	breq	.+66     	; 0x51fa <_ZN6Output6toggleEv+0x56>
    51b8:	24 34       	cpi	r18, 0x44	; 68
    51ba:	71 f1       	breq	.+92     	; 0x5218 <_ZN6Output6toggleEv+0x74>
    51bc:	08 95       	ret
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    51be:	22 b1       	in	r18, 0x02	; 2
    51c0:	30 e0       	ldi	r19, 0x00	; 0
    51c2:	fc 01       	movw	r30, r24
    51c4:	01 80       	ldd	r0, Z+1	; 0x01
    51c6:	02 c0       	rjmp	.+4      	; 0x51cc <_ZN6Output6toggleEv+0x28>
    51c8:	35 95       	asr	r19
    51ca:	27 95       	ror	r18
    51cc:	0a 94       	dec	r0
    51ce:	e2 f7       	brpl	.-8      	; 0x51c8 <_ZN6Output6toggleEv+0x24>
    51d0:	20 ff       	sbrs	r18, 0
    51d2:	02 c0       	rjmp	.+4      	; 0x51d8 <_ZN6Output6toggleEv+0x34>
			{
				off();
    51d4:	9a cf       	rjmp	.-204    	; 0x510a <_ZN6Output3offEv>
    51d6:	08 95       	ret
			}
			else{
				on();
    51d8:	0c cf       	rjmp	.-488    	; 0x4ff2 <_ZN6Output2onEv>
    51da:	08 95       	ret
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    51dc:	25 b1       	in	r18, 0x05	; 5
    51de:	30 e0       	ldi	r19, 0x00	; 0
    51e0:	fc 01       	movw	r30, r24
    51e2:	01 80       	ldd	r0, Z+1	; 0x01
    51e4:	02 c0       	rjmp	.+4      	; 0x51ea <_ZN6Output6toggleEv+0x46>
    51e6:	35 95       	asr	r19
    51e8:	27 95       	ror	r18
    51ea:	0a 94       	dec	r0
    51ec:	e2 f7       	brpl	.-8      	; 0x51e6 <_ZN6Output6toggleEv+0x42>
    51ee:	20 ff       	sbrs	r18, 0
    51f0:	02 c0       	rjmp	.+4      	; 0x51f6 <_ZN6Output6toggleEv+0x52>
			{
				off();
    51f2:	8b cf       	rjmp	.-234    	; 0x510a <_ZN6Output3offEv>
    51f4:	08 95       	ret
			}
			else{
				on();
    51f6:	fd ce       	rjmp	.-518    	; 0x4ff2 <_ZN6Output2onEv>
    51f8:	08 95       	ret
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    51fa:	28 b1       	in	r18, 0x08	; 8
    51fc:	30 e0       	ldi	r19, 0x00	; 0
    51fe:	fc 01       	movw	r30, r24
    5200:	01 80       	ldd	r0, Z+1	; 0x01
    5202:	02 c0       	rjmp	.+4      	; 0x5208 <_ZN6Output6toggleEv+0x64>
    5204:	35 95       	asr	r19
    5206:	27 95       	ror	r18
    5208:	0a 94       	dec	r0
    520a:	e2 f7       	brpl	.-8      	; 0x5204 <_ZN6Output6toggleEv+0x60>
    520c:	20 ff       	sbrs	r18, 0
    520e:	02 c0       	rjmp	.+4      	; 0x5214 <_ZN6Output6toggleEv+0x70>
			{
				off();
    5210:	7c cf       	rjmp	.-264    	; 0x510a <_ZN6Output3offEv>
    5212:	08 95       	ret
			}
			else{
				on();
    5214:	ee ce       	rjmp	.-548    	; 0x4ff2 <_ZN6Output2onEv>
    5216:	08 95       	ret
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    5218:	2b b1       	in	r18, 0x0b	; 11
    521a:	30 e0       	ldi	r19, 0x00	; 0
    521c:	fc 01       	movw	r30, r24
    521e:	01 80       	ldd	r0, Z+1	; 0x01
    5220:	02 c0       	rjmp	.+4      	; 0x5226 <_ZN6Output6toggleEv+0x82>
    5222:	35 95       	asr	r19
    5224:	27 95       	ror	r18
    5226:	0a 94       	dec	r0
    5228:	e2 f7       	brpl	.-8      	; 0x5222 <_ZN6Output6toggleEv+0x7e>
    522a:	20 ff       	sbrs	r18, 0
    522c:	02 c0       	rjmp	.+4      	; 0x5232 <_ZN6Output6toggleEv+0x8e>
			{
				off();
    522e:	6d cf       	rjmp	.-294    	; 0x510a <_ZN6Output3offEv>
    5230:	08 95       	ret
			}
			else{
				on();
    5232:	df ce       	rjmp	.-578    	; 0x4ff2 <_ZN6Output2onEv>
    5234:	08 95       	ret

00005236 <_ZN3RTCD1Ev>:
	Tag=7;
	Monat=9;
	Jahr=15;
	ausgabedatumneu();
	ausgabezeitneu();
}
    5236:	08 95       	ret

00005238 <_ZN3RTC6WeckerEv>:
    5238:	fc 01       	movw	r30, r24
    523a:	80 8d       	ldd	r24, Z+24	; 0x18
    523c:	83 ff       	sbrs	r24, 3
    523e:	0c c0       	rjmp	.+24     	; 0x5258 <_ZN3RTC6WeckerEv+0x20>
    5240:	84 fd       	sbrc	r24, 4
    5242:	0a c0       	rjmp	.+20     	; 0x5258 <_ZN3RTC6WeckerEv+0x20>
    5244:	22 8d       	ldd	r18, Z+26	; 0x1a
    5246:	90 89       	ldd	r25, Z+16	; 0x10
    5248:	29 13       	cpse	r18, r25
    524a:	06 c0       	rjmp	.+12     	; 0x5258 <_ZN3RTC6WeckerEv+0x20>
    524c:	21 8d       	ldd	r18, Z+25	; 0x19
    524e:	91 89       	ldd	r25, Z+17	; 0x11
    5250:	29 13       	cpse	r18, r25
    5252:	02 c0       	rjmp	.+4      	; 0x5258 <_ZN3RTC6WeckerEv+0x20>
    5254:	80 61       	ori	r24, 0x10	; 16
    5256:	80 8f       	std	Z+24, r24	; 0x18
    5258:	08 95       	ret

0000525a <_ZN3RTC14ausgabezeitneuEv>:
    525a:	fc 01       	movw	r30, r24
    525c:	90 89       	ldd	r25, Z+16	; 0x10
    525e:	8d ec       	ldi	r24, 0xCD	; 205
    5260:	98 9f       	mul	r25, r24
    5262:	21 2d       	mov	r18, r1
    5264:	11 24       	eor	r1, r1
    5266:	26 95       	lsr	r18
    5268:	26 95       	lsr	r18
    526a:	26 95       	lsr	r18
    526c:	30 e3       	ldi	r19, 0x30	; 48
    526e:	32 0f       	add	r19, r18
    5270:	30 83       	st	Z, r19
    5272:	22 0f       	add	r18, r18
    5274:	32 2f       	mov	r19, r18
    5276:	33 0f       	add	r19, r19
    5278:	33 0f       	add	r19, r19
    527a:	23 0f       	add	r18, r19
    527c:	92 1b       	sub	r25, r18
    527e:	90 5d       	subi	r25, 0xD0	; 208
    5280:	91 83       	std	Z+1, r25	; 0x01
    5282:	91 89       	ldd	r25, Z+17	; 0x11
    5284:	98 9f       	mul	r25, r24
    5286:	21 2d       	mov	r18, r1
    5288:	11 24       	eor	r1, r1
    528a:	26 95       	lsr	r18
    528c:	26 95       	lsr	r18
    528e:	26 95       	lsr	r18
    5290:	30 e3       	ldi	r19, 0x30	; 48
    5292:	32 0f       	add	r19, r18
    5294:	33 83       	std	Z+3, r19	; 0x03
    5296:	22 0f       	add	r18, r18
    5298:	32 2f       	mov	r19, r18
    529a:	33 0f       	add	r19, r19
    529c:	33 0f       	add	r19, r19
    529e:	23 0f       	add	r18, r19
    52a0:	92 1b       	sub	r25, r18
    52a2:	90 5d       	subi	r25, 0xD0	; 208
    52a4:	94 83       	std	Z+4, r25	; 0x04
    52a6:	92 89       	ldd	r25, Z+18	; 0x12
    52a8:	98 9f       	mul	r25, r24
    52aa:	81 2d       	mov	r24, r1
    52ac:	11 24       	eor	r1, r1
    52ae:	86 95       	lsr	r24
    52b0:	86 95       	lsr	r24
    52b2:	86 95       	lsr	r24
    52b4:	20 e3       	ldi	r18, 0x30	; 48
    52b6:	28 0f       	add	r18, r24
    52b8:	26 83       	std	Z+6, r18	; 0x06
    52ba:	88 0f       	add	r24, r24
    52bc:	28 2f       	mov	r18, r24
    52be:	22 0f       	add	r18, r18
    52c0:	22 0f       	add	r18, r18
    52c2:	82 0f       	add	r24, r18
    52c4:	98 1b       	sub	r25, r24
    52c6:	90 5d       	subi	r25, 0xD0	; 208
    52c8:	97 83       	std	Z+7, r25	; 0x07
    52ca:	08 95       	ret

000052cc <_ZN3RTC15ausgabedatumneuEv>:
    52cc:	fc 01       	movw	r30, r24
    52ce:	94 89       	ldd	r25, Z+20	; 0x14
    52d0:	8d ec       	ldi	r24, 0xCD	; 205
    52d2:	98 9f       	mul	r25, r24
    52d4:	21 2d       	mov	r18, r1
    52d6:	11 24       	eor	r1, r1
    52d8:	26 95       	lsr	r18
    52da:	26 95       	lsr	r18
    52dc:	26 95       	lsr	r18
    52de:	30 e3       	ldi	r19, 0x30	; 48
    52e0:	32 0f       	add	r19, r18
    52e2:	30 87       	std	Z+8, r19	; 0x08
    52e4:	22 0f       	add	r18, r18
    52e6:	32 2f       	mov	r19, r18
    52e8:	33 0f       	add	r19, r19
    52ea:	33 0f       	add	r19, r19
    52ec:	23 0f       	add	r18, r19
    52ee:	92 1b       	sub	r25, r18
    52f0:	90 5d       	subi	r25, 0xD0	; 208
    52f2:	91 87       	std	Z+9, r25	; 0x09
    52f4:	96 89       	ldd	r25, Z+22	; 0x16
    52f6:	98 9f       	mul	r25, r24
    52f8:	21 2d       	mov	r18, r1
    52fa:	11 24       	eor	r1, r1
    52fc:	26 95       	lsr	r18
    52fe:	26 95       	lsr	r18
    5300:	26 95       	lsr	r18
    5302:	30 e3       	ldi	r19, 0x30	; 48
    5304:	32 0f       	add	r19, r18
    5306:	33 87       	std	Z+11, r19	; 0x0b
    5308:	22 0f       	add	r18, r18
    530a:	32 2f       	mov	r19, r18
    530c:	33 0f       	add	r19, r19
    530e:	33 0f       	add	r19, r19
    5310:	23 0f       	add	r18, r19
    5312:	92 1b       	sub	r25, r18
    5314:	90 5d       	subi	r25, 0xD0	; 208
    5316:	94 87       	std	Z+12, r25	; 0x0c
    5318:	97 89       	ldd	r25, Z+23	; 0x17
    531a:	98 9f       	mul	r25, r24
    531c:	81 2d       	mov	r24, r1
    531e:	11 24       	eor	r1, r1
    5320:	86 95       	lsr	r24
    5322:	86 95       	lsr	r24
    5324:	86 95       	lsr	r24
    5326:	20 e3       	ldi	r18, 0x30	; 48
    5328:	28 0f       	add	r18, r24
    532a:	26 87       	std	Z+14, r18	; 0x0e
    532c:	88 0f       	add	r24, r24
    532e:	28 2f       	mov	r18, r24
    5330:	22 0f       	add	r18, r18
    5332:	22 0f       	add	r18, r18
    5334:	82 0f       	add	r24, r18
    5336:	98 1b       	sub	r25, r24
    5338:	90 5d       	subi	r25, 0xD0	; 208
    533a:	97 87       	std	Z+15, r25	; 0x0f
    533c:	08 95       	ret

0000533e <_ZN3RTCC1Ev>:
    533e:	cf 93       	push	r28
    5340:	df 93       	push	r29
    5342:	ec 01       	movw	r28, r24
    5344:	1a 8a       	std	Y+18, r1	; 0x12
    5346:	1b 8a       	std	Y+19, r1	; 0x13
    5348:	19 8a       	std	Y+17, r1	; 0x11
    534a:	18 8a       	std	Y+16, r1	; 0x10
    534c:	1c 8a       	std	Y+20, r1	; 0x14
    534e:	1e 8a       	std	Y+22, r1	; 0x16
    5350:	1f 8a       	std	Y+23, r1	; 0x17
    5352:	1d 8a       	std	Y+21, r1	; 0x15
    5354:	88 e2       	ldi	r24, 0x28	; 40
    5356:	89 8f       	std	Y+25, r24	; 0x19
    5358:	8a e0       	ldi	r24, 0x0A	; 10
    535a:	8a 8f       	std	Y+26, r24	; 0x1a
    535c:	1c 8e       	std	Y+28, r1	; 0x1c
    535e:	1b 8e       	std	Y+27, r1	; 0x1b
    5360:	1e 8e       	std	Y+30, r1	; 0x1e
    5362:	1d 8e       	std	Y+29, r1	; 0x1d
    5364:	de 01       	movw	r26, r28
    5366:	fe 01       	movw	r30, r28
    5368:	38 96       	adiw	r30, 0x08	; 8
    536a:	80 e0       	ldi	r24, 0x00	; 0
    536c:	1d 92       	st	X+, r1
    536e:	11 92       	st	Z+, r1
    5370:	8f 5f       	subi	r24, 0xFF	; 255
    5372:	88 30       	cpi	r24, 0x08	; 8
    5374:	d9 f7       	brne	.-10     	; 0x536c <_ZN3RTCC1Ev+0x2e>
    5376:	8a e3       	ldi	r24, 0x3A	; 58
    5378:	8a 83       	std	Y+2, r24	; 0x02
    537a:	8d 83       	std	Y+5, r24	; 0x05
    537c:	8e e2       	ldi	r24, 0x2E	; 46
    537e:	8a 87       	std	Y+10, r24	; 0x0a
    5380:	8d 87       	std	Y+13, r24	; 0x0d
    5382:	ce 01       	movw	r24, r28
    5384:	6a df       	rcall	.-300    	; 0x525a <_ZN3RTC14ausgabezeitneuEv>
    5386:	ce 01       	movw	r24, r28
    5388:	a1 df       	rcall	.-190    	; 0x52cc <_ZN3RTC15ausgabedatumneuEv>
    538a:	df 91       	pop	r29
    538c:	cf 91       	pop	r28
    538e:	08 95       	ret

00005390 <_ZN3RTC8kalenderEv>:
    5390:	fc 01       	movw	r30, r24
    5392:	26 89       	ldd	r18, Z+22	; 0x16
    5394:	32 2f       	mov	r19, r18
    5396:	3d 7f       	andi	r19, 0xFD	; 253
    5398:	34 30       	cpi	r19, 0x04	; 4
    539a:	11 f0       	breq	.+4      	; 0x53a0 <_ZN3RTC8kalenderEv+0x10>
    539c:	39 30       	cpi	r19, 0x09	; 9
    539e:	91 f4       	brne	.+36     	; 0x53c4 <_ZN3RTC8kalenderEv+0x34>
    53a0:	fc 01       	movw	r30, r24
    53a2:	34 89       	ldd	r19, Z+20	; 0x14
    53a4:	3f 31       	cpi	r19, 0x1F	; 31
    53a6:	b0 f1       	brcs	.+108    	; 0x5414 <_ZN3RTC8kalenderEv+0x84>
    53a8:	31 e0       	ldi	r19, 0x01	; 1
    53aa:	34 8b       	std	Z+20, r19	; 0x14
    53ac:	2f 5f       	subi	r18, 0xFF	; 255
    53ae:	2d 30       	cpi	r18, 0x0D	; 13
    53b0:	10 f4       	brcc	.+4      	; 0x53b6 <_ZN3RTC8kalenderEv+0x26>
    53b2:	26 8b       	std	Z+22, r18	; 0x16
    53b4:	2f c0       	rjmp	.+94     	; 0x5414 <_ZN3RTC8kalenderEv+0x84>
    53b6:	21 e0       	ldi	r18, 0x01	; 1
    53b8:	fc 01       	movw	r30, r24
    53ba:	26 8b       	std	Z+22, r18	; 0x16
    53bc:	27 89       	ldd	r18, Z+23	; 0x17
    53be:	2f 5f       	subi	r18, 0xFF	; 255
    53c0:	27 8b       	std	Z+23, r18	; 0x17
    53c2:	28 c0       	rjmp	.+80     	; 0x5414 <_ZN3RTC8kalenderEv+0x84>
    53c4:	22 30       	cpi	r18, 0x02	; 2
    53c6:	a9 f4       	brne	.+42     	; 0x53f2 <_ZN3RTC8kalenderEv+0x62>
    53c8:	fc 01       	movw	r30, r24
    53ca:	27 89       	ldd	r18, Z+23	; 0x17
    53cc:	23 70       	andi	r18, 0x03	; 3
    53ce:	41 f4       	brne	.+16     	; 0x53e0 <_ZN3RTC8kalenderEv+0x50>
    53d0:	24 89       	ldd	r18, Z+20	; 0x14
    53d2:	2e 31       	cpi	r18, 0x1E	; 30
    53d4:	f8 f0       	brcs	.+62     	; 0x5414 <_ZN3RTC8kalenderEv+0x84>
    53d6:	21 e0       	ldi	r18, 0x01	; 1
    53d8:	24 8b       	std	Z+20, r18	; 0x14
    53da:	23 e0       	ldi	r18, 0x03	; 3
    53dc:	26 8b       	std	Z+22, r18	; 0x16
    53de:	1a c0       	rjmp	.+52     	; 0x5414 <_ZN3RTC8kalenderEv+0x84>
    53e0:	fc 01       	movw	r30, r24
    53e2:	24 89       	ldd	r18, Z+20	; 0x14
    53e4:	2d 31       	cpi	r18, 0x1D	; 29
    53e6:	b0 f0       	brcs	.+44     	; 0x5414 <_ZN3RTC8kalenderEv+0x84>
    53e8:	21 e0       	ldi	r18, 0x01	; 1
    53ea:	24 8b       	std	Z+20, r18	; 0x14
    53ec:	23 e0       	ldi	r18, 0x03	; 3
    53ee:	26 8b       	std	Z+22, r18	; 0x16
    53f0:	11 c0       	rjmp	.+34     	; 0x5414 <_ZN3RTC8kalenderEv+0x84>
    53f2:	fc 01       	movw	r30, r24
    53f4:	34 89       	ldd	r19, Z+20	; 0x14
    53f6:	30 32       	cpi	r19, 0x20	; 32
    53f8:	68 f0       	brcs	.+26     	; 0x5414 <_ZN3RTC8kalenderEv+0x84>
    53fa:	31 e0       	ldi	r19, 0x01	; 1
    53fc:	34 8b       	std	Z+20, r19	; 0x14
    53fe:	2f 5f       	subi	r18, 0xFF	; 255
    5400:	2d 30       	cpi	r18, 0x0D	; 13
    5402:	10 f4       	brcc	.+4      	; 0x5408 <_ZN3RTC8kalenderEv+0x78>
    5404:	26 8b       	std	Z+22, r18	; 0x16
    5406:	06 c0       	rjmp	.+12     	; 0x5414 <_ZN3RTC8kalenderEv+0x84>
    5408:	21 e0       	ldi	r18, 0x01	; 1
    540a:	fc 01       	movw	r30, r24
    540c:	26 8b       	std	Z+22, r18	; 0x16
    540e:	27 89       	ldd	r18, Z+23	; 0x17
    5410:	2f 5f       	subi	r18, 0xFF	; 255
    5412:	27 8b       	std	Z+23, r18	; 0x17
    5414:	5b cf       	rjmp	.-330    	; 0x52cc <_ZN3RTC15ausgabedatumneuEv>
    5416:	08 95       	ret

00005418 <_ZN3RTC4zeitEv>:
    5418:	cf 93       	push	r28
    541a:	df 93       	push	r29
    541c:	ec 01       	movw	r28, r24
    541e:	8a 89       	ldd	r24, Y+18	; 0x12
    5420:	8c 53       	subi	r24, 0x3C	; 60
    5422:	8d 38       	cpi	r24, 0x8D	; 141
    5424:	c0 f4       	brcc	.+48     	; 0x5456 <_ZN3RTC4zeitEv+0x3e>
    5426:	1a 8a       	std	Y+18, r1	; 0x12
    5428:	89 89       	ldd	r24, Y+17	; 0x11
    542a:	8f 5f       	subi	r24, 0xFF	; 255
    542c:	89 8b       	std	Y+17, r24	; 0x11
    542e:	98 8d       	ldd	r25, Y+24	; 0x18
    5430:	94 60       	ori	r25, 0x04	; 4
    5432:	98 8f       	std	Y+24, r25	; 0x18
    5434:	8c 33       	cpi	r24, 0x3C	; 60
    5436:	68 f0       	brcs	.+26     	; 0x5452 <_ZN3RTC4zeitEv+0x3a>
    5438:	19 8a       	std	Y+17, r1	; 0x11
    543a:	88 89       	ldd	r24, Y+16	; 0x10
    543c:	8f 5f       	subi	r24, 0xFF	; 255
    543e:	88 31       	cpi	r24, 0x18	; 24
    5440:	10 f4       	brcc	.+4      	; 0x5446 <_ZN3RTC4zeitEv+0x2e>
    5442:	88 8b       	std	Y+16, r24	; 0x10
    5444:	06 c0       	rjmp	.+12     	; 0x5452 <_ZN3RTC4zeitEv+0x3a>
    5446:	18 8a       	std	Y+16, r1	; 0x10
    5448:	8c 89       	ldd	r24, Y+20	; 0x14
    544a:	8f 5f       	subi	r24, 0xFF	; 255
    544c:	8c 8b       	std	Y+20, r24	; 0x14
    544e:	ce 01       	movw	r24, r28
    5450:	9f df       	rcall	.-194    	; 0x5390 <_ZN3RTC8kalenderEv>
    5452:	ce 01       	movw	r24, r28
    5454:	f1 de       	rcall	.-542    	; 0x5238 <_ZN3RTC6WeckerEv>
    5456:	ce 01       	movw	r24, r28
    5458:	00 df       	rcall	.-512    	; 0x525a <_ZN3RTC14ausgabezeitneuEv>
    545a:	28 8d       	ldd	r18, Y+24	; 0x18
    545c:	25 ff       	sbrs	r18, 5
    545e:	0a c0       	rjmp	.+20     	; 0x5474 <_ZN3RTC4zeitEv+0x5c>
    5460:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5462:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5464:	01 97       	sbiw	r24, 0x01	; 1
    5466:	9c 8f       	std	Y+28, r25	; 0x1c
    5468:	8b 8f       	std	Y+27, r24	; 0x1b
    546a:	89 2b       	or	r24, r25
    546c:	19 f4       	brne	.+6      	; 0x5474 <_ZN3RTC4zeitEv+0x5c>
    546e:	2f 7d       	andi	r18, 0xDF	; 223
    5470:	21 60       	ori	r18, 0x01	; 1
    5472:	28 8f       	std	Y+24, r18	; 0x18
    5474:	88 8d       	ldd	r24, Y+24	; 0x18
    5476:	86 ff       	sbrs	r24, 6
    5478:	05 c0       	rjmp	.+10     	; 0x5484 <_ZN3RTC4zeitEv+0x6c>
    547a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    547c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    547e:	01 96       	adiw	r24, 0x01	; 1
    5480:	9e 8f       	std	Y+30, r25	; 0x1e
    5482:	8d 8f       	std	Y+29, r24	; 0x1d
    5484:	80 e0       	ldi	r24, 0x00	; 0
    5486:	df 91       	pop	r29
    5488:	cf 91       	pop	r28
    548a:	08 95       	ret

0000548c <_ZN3RTC8RTCstartEv>:

void RTC::RTCstart(){
    548c:	fc 01       	movw	r30, r24
	//Einstellungen des Ausgabebuffers
	msg_uhr[0]='0';
    548e:	80 e3       	ldi	r24, 0x30	; 48
    5490:	80 83       	st	Z, r24
	msg_uhr[1]='0';
    5492:	81 83       	std	Z+1, r24	; 0x01
	msg_uhr[2]=':';
    5494:	9a e3       	ldi	r25, 0x3A	; 58
    5496:	92 83       	std	Z+2, r25	; 0x02
	msg_uhr[3]='0';
    5498:	83 83       	std	Z+3, r24	; 0x03
	msg_uhr[4]='0';
    549a:	84 83       	std	Z+4, r24	; 0x04
	msg_uhr[5]=':';
    549c:	95 83       	std	Z+5, r25	; 0x05
	msg_uhr[6]='0';
    549e:	86 83       	std	Z+6, r24	; 0x06
	msg_uhr[7]='0';
    54a0:	87 83       	std	Z+7, r24	; 0x07
	//Timer2 als 1ms Timer fuer die RTC
	//asynchron mit 32.768 kHz (noch synchrom)
	TCNT2 = TIMER2RTCTIME;
    54a2:	10 92 b2 00 	sts	0x00B2, r1
	ASSR |= (1<<AS2);
    54a6:	e6 eb       	ldi	r30, 0xB6	; 182
    54a8:	f0 e0       	ldi	r31, 0x00	; 0
    54aa:	80 81       	ld	r24, Z
    54ac:	80 62       	ori	r24, 0x20	; 32
    54ae:	80 83       	st	Z, r24
	TIMSK2 = (1<<TOIE2);
    54b0:	81 e0       	ldi	r24, 0x01	; 1
    54b2:	80 93 70 00 	sts	0x0070, r24
	TCCR2B = (1<<CS22) | (1<<CS20);		//Vorteiler 256
    54b6:	85 e0       	ldi	r24, 0x05	; 5
    54b8:	80 93 b1 00 	sts	0x00B1, r24
    54bc:	08 95       	ret

000054be <_ZN3RTC7RTCstopEv>:
}

void RTC::RTCstop(){
	TCCR2B &= ~((1<<CS22) | (1<<CS21));
    54be:	e1 eb       	ldi	r30, 0xB1	; 177
    54c0:	f0 e0       	ldi	r31, 0x00	; 0
    54c2:	80 81       	ld	r24, Z
    54c4:	89 7f       	andi	r24, 0xF9	; 249
    54c6:	80 83       	st	Z, r24
    54c8:	08 95       	ret

000054ca <_ZN5SOUNDD1Ev>:
	setfrequenci(1000);//1KHz
	off();
} //SOUND

// default destructor
SOUND::~SOUND()
    54ca:	08 95       	ret

000054cc <_ZN5SOUND2onEv>:
	TCNT0 = 0;
	on();
}

void SOUND::on(){
	if ((interupts&(1<<Soundactiv)))
    54cc:	fc 01       	movw	r30, r24
    54ce:	20 81       	ld	r18, Z
    54d0:	20 ff       	sbrs	r18, 0
    54d2:	04 c0       	rjmp	.+8      	; 0x54dc <_ZN5SOUND2onEv+0x10>
	{
		TCCR0B |= prescaler;
    54d4:	25 b5       	in	r18, 0x25	; 37
    54d6:	81 81       	ldd	r24, Z+1	; 0x01
    54d8:	82 2b       	or	r24, r18
    54da:	85 bd       	out	0x25, r24	; 37
    54dc:	08 95       	ret

000054de <_ZN5SOUND3offEv>:
	}
}

void SOUND::off(){
	TCCR0B &= ~((1<<CS00)|(1<<CS01)|(1<<CS02));
    54de:	85 b5       	in	r24, 0x25	; 37
    54e0:	88 7f       	andi	r24, 0xF8	; 248
    54e2:	85 bd       	out	0x25, r24	; 37
    54e4:	08 95       	ret

000054e6 <_ZN5SOUND12setfrequenciEj>:
{
} //~SOUND


//WERT = f_CPU/(f*1024)
void SOUND::setfrequenci(uint16_t frequenz){
    54e6:	0f 93       	push	r16
    54e8:	1f 93       	push	r17
    54ea:	cf 93       	push	r28
    54ec:	df 93       	push	r29
    54ee:	ec 01       	movw	r28, r24
    54f0:	8b 01       	movw	r16, r22
	off();
    54f2:	f5 df       	rcall	.-22     	; 0x54de <_ZN5SOUND3offEv>
	float WERT = F_CPU/256.0;
	WERT /= (frequenz);
    54f4:	b8 01       	movw	r22, r16
    54f6:	80 e0       	ldi	r24, 0x00	; 0
    54f8:	90 e0       	ldi	r25, 0x00	; 0
    54fa:	8f d1       	rcall	.+798    	; 0x581a <__floatunsisf>
    54fc:	9b 01       	movw	r18, r22
    54fe:	ac 01       	movw	r20, r24
    5500:	60 e0       	ldi	r22, 0x00	; 0
    5502:	74 e2       	ldi	r23, 0x24	; 36
    5504:	84 ef       	ldi	r24, 0xF4	; 244
    5506:	96 e4       	ldi	r25, 0x46	; 70
    5508:	ef d0       	rcall	.+478    	; 0x56e8 <__divsf3>
	OCR0A = (uint8_t)WERT;
    550a:	5b d1       	rcall	.+694    	; 0x57c2 <__fixunssfsi>
    550c:	67 bd       	out	0x27, r22	; 39
	TCNT0 = 0;
    550e:	16 bc       	out	0x26, r1	; 38
	on();
    5510:	ce 01       	movw	r24, r28
    5512:	dc df       	rcall	.-72     	; 0x54cc <_ZN5SOUND2onEv>
}
    5514:	df 91       	pop	r29
    5516:	cf 91       	pop	r28
    5518:	1f 91       	pop	r17
    551a:	0f 91       	pop	r16
    551c:	08 95       	ret

0000551e <_ZN5SOUNDC1Ev>:


#include "SOUND.h"

// default constructor
SOUND::SOUND()
    551e:	cf 93       	push	r28
    5520:	df 93       	push	r29
    5522:	ec 01       	movw	r28, r24
{
	//interuptregister initialisieren
	interupts = 0;
    5524:	18 82       	st	Y, r1
	PORTB &= ~(1<<PORTB3); //Pullups ausschalten
    5526:	2b 98       	cbi	0x05, 3	; 5
	DDRB |= (1<<PORTB3); //Ausgang schalten
    5528:	23 9a       	sbi	0x04, 3	; 4
	//Not inverting PWM, Phase correct
	TCCR0A |= (1<<COM0A0) | (1<<WGM00);
    552a:	84 b5       	in	r24, 0x24	; 36
    552c:	81 64       	ori	r24, 0x41	; 65
    552e:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<WGM02);
    5530:	85 b5       	in	r24, 0x25	; 37
    5532:	88 60       	ori	r24, 0x08	; 8
    5534:	85 bd       	out	0x25, r24	; 37
	fuer	8		1MHz		3.90625KHz
			64		125KHz		488.28Hz
			256		31.25KHz	122.07Hz
			1024	7.8125KHz	30.52Hz
*/
	prescaler = (1<<CS02); //256
    5536:	84 e0       	ldi	r24, 0x04	; 4
    5538:	89 83       	std	Y+1, r24	; 0x01
	setfrequenci(1000);//1KHz
    553a:	68 ee       	ldi	r22, 0xE8	; 232
    553c:	73 e0       	ldi	r23, 0x03	; 3
    553e:	ce 01       	movw	r24, r28
    5540:	d2 df       	rcall	.-92     	; 0x54e6 <_ZN5SOUND12setfrequenciEj>
	off();
    5542:	ce 01       	movw	r24, r28
    5544:	cc df       	rcall	.-104    	; 0x54de <_ZN5SOUND3offEv>
} //SOUND
    5546:	df 91       	pop	r29
    5548:	cf 91       	pop	r28
    554a:	08 95       	ret

0000554c <__subsf3>:
    554c:	50 58       	subi	r21, 0x80	; 128

0000554e <__addsf3>:
    554e:	bb 27       	eor	r27, r27
    5550:	aa 27       	eor	r26, r26
    5552:	0e d0       	rcall	.+28     	; 0x5570 <__addsf3x>
    5554:	27 c2       	rjmp	.+1102   	; 0x59a4 <__fp_round>
    5556:	f0 d1       	rcall	.+992    	; 0x5938 <__fp_pscA>
    5558:	30 f0       	brcs	.+12     	; 0x5566 <__addsf3+0x18>
    555a:	f5 d1       	rcall	.+1002   	; 0x5946 <__fp_pscB>
    555c:	20 f0       	brcs	.+8      	; 0x5566 <__addsf3+0x18>
    555e:	31 f4       	brne	.+12     	; 0x556c <__addsf3+0x1e>
    5560:	9f 3f       	cpi	r25, 0xFF	; 255
    5562:	11 f4       	brne	.+4      	; 0x5568 <__addsf3+0x1a>
    5564:	1e f4       	brtc	.+6      	; 0x556c <__addsf3+0x1e>
    5566:	c0 c1       	rjmp	.+896    	; 0x58e8 <__fp_nan>
    5568:	0e f4       	brtc	.+2      	; 0x556c <__addsf3+0x1e>
    556a:	e0 95       	com	r30
    556c:	e7 fb       	bst	r30, 7
    556e:	b6 c1       	rjmp	.+876    	; 0x58dc <__fp_inf>

00005570 <__addsf3x>:
    5570:	e9 2f       	mov	r30, r25
    5572:	3a d2       	rcall	.+1140   	; 0x59e8 <__fp_split3>
    5574:	80 f3       	brcs	.-32     	; 0x5556 <__addsf3+0x8>
    5576:	ba 17       	cp	r27, r26
    5578:	62 07       	cpc	r22, r18
    557a:	73 07       	cpc	r23, r19
    557c:	84 07       	cpc	r24, r20
    557e:	95 07       	cpc	r25, r21
    5580:	18 f0       	brcs	.+6      	; 0x5588 <__addsf3x+0x18>
    5582:	71 f4       	brne	.+28     	; 0x55a0 <__addsf3x+0x30>
    5584:	9e f5       	brtc	.+102    	; 0x55ec <__addsf3x+0x7c>
    5586:	52 c2       	rjmp	.+1188   	; 0x5a2c <__fp_zero>
    5588:	0e f4       	brtc	.+2      	; 0x558c <__addsf3x+0x1c>
    558a:	e0 95       	com	r30
    558c:	0b 2e       	mov	r0, r27
    558e:	ba 2f       	mov	r27, r26
    5590:	a0 2d       	mov	r26, r0
    5592:	0b 01       	movw	r0, r22
    5594:	b9 01       	movw	r22, r18
    5596:	90 01       	movw	r18, r0
    5598:	0c 01       	movw	r0, r24
    559a:	ca 01       	movw	r24, r20
    559c:	a0 01       	movw	r20, r0
    559e:	11 24       	eor	r1, r1
    55a0:	ff 27       	eor	r31, r31
    55a2:	59 1b       	sub	r21, r25
    55a4:	99 f0       	breq	.+38     	; 0x55cc <__addsf3x+0x5c>
    55a6:	59 3f       	cpi	r21, 0xF9	; 249
    55a8:	50 f4       	brcc	.+20     	; 0x55be <__addsf3x+0x4e>
    55aa:	50 3e       	cpi	r21, 0xE0	; 224
    55ac:	68 f1       	brcs	.+90     	; 0x5608 <__addsf3x+0x98>
    55ae:	1a 16       	cp	r1, r26
    55b0:	f0 40       	sbci	r31, 0x00	; 0
    55b2:	a2 2f       	mov	r26, r18
    55b4:	23 2f       	mov	r18, r19
    55b6:	34 2f       	mov	r19, r20
    55b8:	44 27       	eor	r20, r20
    55ba:	58 5f       	subi	r21, 0xF8	; 248
    55bc:	f3 cf       	rjmp	.-26     	; 0x55a4 <__addsf3x+0x34>
    55be:	46 95       	lsr	r20
    55c0:	37 95       	ror	r19
    55c2:	27 95       	ror	r18
    55c4:	a7 95       	ror	r26
    55c6:	f0 40       	sbci	r31, 0x00	; 0
    55c8:	53 95       	inc	r21
    55ca:	c9 f7       	brne	.-14     	; 0x55be <__addsf3x+0x4e>
    55cc:	7e f4       	brtc	.+30     	; 0x55ec <__addsf3x+0x7c>
    55ce:	1f 16       	cp	r1, r31
    55d0:	ba 0b       	sbc	r27, r26
    55d2:	62 0b       	sbc	r22, r18
    55d4:	73 0b       	sbc	r23, r19
    55d6:	84 0b       	sbc	r24, r20
    55d8:	ba f0       	brmi	.+46     	; 0x5608 <__addsf3x+0x98>
    55da:	91 50       	subi	r25, 0x01	; 1
    55dc:	a1 f0       	breq	.+40     	; 0x5606 <__addsf3x+0x96>
    55de:	ff 0f       	add	r31, r31
    55e0:	bb 1f       	adc	r27, r27
    55e2:	66 1f       	adc	r22, r22
    55e4:	77 1f       	adc	r23, r23
    55e6:	88 1f       	adc	r24, r24
    55e8:	c2 f7       	brpl	.-16     	; 0x55da <__addsf3x+0x6a>
    55ea:	0e c0       	rjmp	.+28     	; 0x5608 <__addsf3x+0x98>
    55ec:	ba 0f       	add	r27, r26
    55ee:	62 1f       	adc	r22, r18
    55f0:	73 1f       	adc	r23, r19
    55f2:	84 1f       	adc	r24, r20
    55f4:	48 f4       	brcc	.+18     	; 0x5608 <__addsf3x+0x98>
    55f6:	87 95       	ror	r24
    55f8:	77 95       	ror	r23
    55fa:	67 95       	ror	r22
    55fc:	b7 95       	ror	r27
    55fe:	f7 95       	ror	r31
    5600:	9e 3f       	cpi	r25, 0xFE	; 254
    5602:	08 f0       	brcs	.+2      	; 0x5606 <__addsf3x+0x96>
    5604:	b3 cf       	rjmp	.-154    	; 0x556c <__addsf3+0x1e>
    5606:	93 95       	inc	r25
    5608:	88 0f       	add	r24, r24
    560a:	08 f0       	brcs	.+2      	; 0x560e <__addsf3x+0x9e>
    560c:	99 27       	eor	r25, r25
    560e:	ee 0f       	add	r30, r30
    5610:	97 95       	ror	r25
    5612:	87 95       	ror	r24
    5614:	08 95       	ret
    5616:	90 d1       	rcall	.+800    	; 0x5938 <__fp_pscA>
    5618:	58 f0       	brcs	.+22     	; 0x5630 <__addsf3x+0xc0>
    561a:	80 e8       	ldi	r24, 0x80	; 128
    561c:	91 e0       	ldi	r25, 0x01	; 1
    561e:	09 f4       	brne	.+2      	; 0x5622 <__addsf3x+0xb2>
    5620:	9e ef       	ldi	r25, 0xFE	; 254
    5622:	91 d1       	rcall	.+802    	; 0x5946 <__fp_pscB>
    5624:	28 f0       	brcs	.+10     	; 0x5630 <__addsf3x+0xc0>
    5626:	40 e8       	ldi	r20, 0x80	; 128
    5628:	51 e0       	ldi	r21, 0x01	; 1
    562a:	59 f4       	brne	.+22     	; 0x5642 <atan2+0xe>
    562c:	5e ef       	ldi	r21, 0xFE	; 254
    562e:	09 c0       	rjmp	.+18     	; 0x5642 <atan2+0xe>
    5630:	5b c1       	rjmp	.+694    	; 0x58e8 <__fp_nan>
    5632:	fc c1       	rjmp	.+1016   	; 0x5a2c <__fp_zero>

00005634 <atan2>:
    5634:	e9 2f       	mov	r30, r25
    5636:	e0 78       	andi	r30, 0x80	; 128
    5638:	d7 d1       	rcall	.+942    	; 0x59e8 <__fp_split3>
    563a:	68 f3       	brcs	.-38     	; 0x5616 <__addsf3x+0xa6>
    563c:	09 2e       	mov	r0, r25
    563e:	05 2a       	or	r0, r21
    5640:	c1 f3       	breq	.-16     	; 0x5632 <__addsf3x+0xc2>
    5642:	26 17       	cp	r18, r22
    5644:	37 07       	cpc	r19, r23
    5646:	48 07       	cpc	r20, r24
    5648:	59 07       	cpc	r21, r25
    564a:	38 f0       	brcs	.+14     	; 0x565a <atan2+0x26>
    564c:	0e 2e       	mov	r0, r30
    564e:	07 f8       	bld	r0, 7
    5650:	e0 25       	eor	r30, r0
    5652:	69 f0       	breq	.+26     	; 0x566e <atan2+0x3a>
    5654:	e0 25       	eor	r30, r0
    5656:	e0 64       	ori	r30, 0x40	; 64
    5658:	0a c0       	rjmp	.+20     	; 0x566e <atan2+0x3a>
    565a:	ef 63       	ori	r30, 0x3F	; 63
    565c:	07 f8       	bld	r0, 7
    565e:	00 94       	com	r0
    5660:	07 fa       	bst	r0, 7
    5662:	db 01       	movw	r26, r22
    5664:	b9 01       	movw	r22, r18
    5666:	9d 01       	movw	r18, r26
    5668:	dc 01       	movw	r26, r24
    566a:	ca 01       	movw	r24, r20
    566c:	ad 01       	movw	r20, r26
    566e:	ef 93       	push	r30
    5670:	4a d0       	rcall	.+148    	; 0x5706 <__divsf3_pse>
    5672:	98 d1       	rcall	.+816    	; 0x59a4 <__fp_round>
    5674:	0a d0       	rcall	.+20     	; 0x568a <atan>
    5676:	5f 91       	pop	r21
    5678:	55 23       	and	r21, r21
    567a:	31 f0       	breq	.+12     	; 0x5688 <atan2+0x54>
    567c:	2b ed       	ldi	r18, 0xDB	; 219
    567e:	3f e0       	ldi	r19, 0x0F	; 15
    5680:	49 e4       	ldi	r20, 0x49	; 73
    5682:	50 fd       	sbrc	r21, 0
    5684:	49 ec       	ldi	r20, 0xC9	; 201
    5686:	63 cf       	rjmp	.-314    	; 0x554e <__addsf3>
    5688:	08 95       	ret

0000568a <atan>:
    568a:	df 93       	push	r29
    568c:	dd 27       	eor	r29, r29
    568e:	b9 2f       	mov	r27, r25
    5690:	bf 77       	andi	r27, 0x7F	; 127
    5692:	40 e8       	ldi	r20, 0x80	; 128
    5694:	5f e3       	ldi	r21, 0x3F	; 63
    5696:	16 16       	cp	r1, r22
    5698:	17 06       	cpc	r1, r23
    569a:	48 07       	cpc	r20, r24
    569c:	5b 07       	cpc	r21, r27
    569e:	10 f4       	brcc	.+4      	; 0x56a4 <atan+0x1a>
    56a0:	d9 2f       	mov	r29, r25
    56a2:	cf d1       	rcall	.+926    	; 0x5a42 <inverse>
    56a4:	9f 93       	push	r25
    56a6:	8f 93       	push	r24
    56a8:	7f 93       	push	r23
    56aa:	6f 93       	push	r22
    56ac:	3a d2       	rcall	.+1140   	; 0x5b22 <square>
    56ae:	ee eb       	ldi	r30, 0xBE	; 190
    56b0:	f0 e0       	ldi	r31, 0x00	; 0
    56b2:	1d d1       	rcall	.+570    	; 0x58ee <__fp_powser>
    56b4:	77 d1       	rcall	.+750    	; 0x59a4 <__fp_round>
    56b6:	2f 91       	pop	r18
    56b8:	3f 91       	pop	r19
    56ba:	4f 91       	pop	r20
    56bc:	5f 91       	pop	r21
    56be:	d4 d1       	rcall	.+936    	; 0x5a68 <__mulsf3x>
    56c0:	dd 23       	and	r29, r29
    56c2:	49 f0       	breq	.+18     	; 0x56d6 <atan+0x4c>
    56c4:	90 58       	subi	r25, 0x80	; 128
    56c6:	a2 ea       	ldi	r26, 0xA2	; 162
    56c8:	2a ed       	ldi	r18, 0xDA	; 218
    56ca:	3f e0       	ldi	r19, 0x0F	; 15
    56cc:	49 ec       	ldi	r20, 0xC9	; 201
    56ce:	5f e3       	ldi	r21, 0x3F	; 63
    56d0:	d0 78       	andi	r29, 0x80	; 128
    56d2:	5d 27       	eor	r21, r29
    56d4:	4d df       	rcall	.-358    	; 0x5570 <__addsf3x>
    56d6:	df 91       	pop	r29
    56d8:	65 c1       	rjmp	.+714    	; 0x59a4 <__fp_round>

000056da <__cmpsf2>:
    56da:	dc d0       	rcall	.+440    	; 0x5894 <__fp_cmp>
    56dc:	08 f4       	brcc	.+2      	; 0x56e0 <__cmpsf2+0x6>
    56de:	81 e0       	ldi	r24, 0x01	; 1
    56e0:	08 95       	ret

000056e2 <cos>:
    56e2:	39 d1       	rcall	.+626    	; 0x5956 <__fp_rempio2>
    56e4:	e3 95       	inc	r30
    56e6:	6f c1       	rjmp	.+734    	; 0x59c6 <__fp_sinus>

000056e8 <__divsf3>:
    56e8:	0c d0       	rcall	.+24     	; 0x5702 <__divsf3x>
    56ea:	5c c1       	rjmp	.+696    	; 0x59a4 <__fp_round>
    56ec:	2c d1       	rcall	.+600    	; 0x5946 <__fp_pscB>
    56ee:	40 f0       	brcs	.+16     	; 0x5700 <__divsf3+0x18>
    56f0:	23 d1       	rcall	.+582    	; 0x5938 <__fp_pscA>
    56f2:	30 f0       	brcs	.+12     	; 0x5700 <__divsf3+0x18>
    56f4:	21 f4       	brne	.+8      	; 0x56fe <__divsf3+0x16>
    56f6:	5f 3f       	cpi	r21, 0xFF	; 255
    56f8:	19 f0       	breq	.+6      	; 0x5700 <__divsf3+0x18>
    56fa:	f0 c0       	rjmp	.+480    	; 0x58dc <__fp_inf>
    56fc:	51 11       	cpse	r21, r1
    56fe:	97 c1       	rjmp	.+814    	; 0x5a2e <__fp_szero>
    5700:	f3 c0       	rjmp	.+486    	; 0x58e8 <__fp_nan>

00005702 <__divsf3x>:
    5702:	72 d1       	rcall	.+740    	; 0x59e8 <__fp_split3>
    5704:	98 f3       	brcs	.-26     	; 0x56ec <__divsf3+0x4>

00005706 <__divsf3_pse>:
    5706:	99 23       	and	r25, r25
    5708:	c9 f3       	breq	.-14     	; 0x56fc <__divsf3+0x14>
    570a:	55 23       	and	r21, r21
    570c:	b1 f3       	breq	.-20     	; 0x56fa <__divsf3+0x12>
    570e:	95 1b       	sub	r25, r21
    5710:	55 0b       	sbc	r21, r21
    5712:	bb 27       	eor	r27, r27
    5714:	aa 27       	eor	r26, r26
    5716:	62 17       	cp	r22, r18
    5718:	73 07       	cpc	r23, r19
    571a:	84 07       	cpc	r24, r20
    571c:	38 f0       	brcs	.+14     	; 0x572c <__divsf3_pse+0x26>
    571e:	9f 5f       	subi	r25, 0xFF	; 255
    5720:	5f 4f       	sbci	r21, 0xFF	; 255
    5722:	22 0f       	add	r18, r18
    5724:	33 1f       	adc	r19, r19
    5726:	44 1f       	adc	r20, r20
    5728:	aa 1f       	adc	r26, r26
    572a:	a9 f3       	breq	.-22     	; 0x5716 <__divsf3_pse+0x10>
    572c:	33 d0       	rcall	.+102    	; 0x5794 <__divsf3_pse+0x8e>
    572e:	0e 2e       	mov	r0, r30
    5730:	3a f0       	brmi	.+14     	; 0x5740 <__divsf3_pse+0x3a>
    5732:	e0 e8       	ldi	r30, 0x80	; 128
    5734:	30 d0       	rcall	.+96     	; 0x5796 <__divsf3_pse+0x90>
    5736:	91 50       	subi	r25, 0x01	; 1
    5738:	50 40       	sbci	r21, 0x00	; 0
    573a:	e6 95       	lsr	r30
    573c:	00 1c       	adc	r0, r0
    573e:	ca f7       	brpl	.-14     	; 0x5732 <__divsf3_pse+0x2c>
    5740:	29 d0       	rcall	.+82     	; 0x5794 <__divsf3_pse+0x8e>
    5742:	fe 2f       	mov	r31, r30
    5744:	27 d0       	rcall	.+78     	; 0x5794 <__divsf3_pse+0x8e>
    5746:	66 0f       	add	r22, r22
    5748:	77 1f       	adc	r23, r23
    574a:	88 1f       	adc	r24, r24
    574c:	bb 1f       	adc	r27, r27
    574e:	26 17       	cp	r18, r22
    5750:	37 07       	cpc	r19, r23
    5752:	48 07       	cpc	r20, r24
    5754:	ab 07       	cpc	r26, r27
    5756:	b0 e8       	ldi	r27, 0x80	; 128
    5758:	09 f0       	breq	.+2      	; 0x575c <__divsf3_pse+0x56>
    575a:	bb 0b       	sbc	r27, r27
    575c:	80 2d       	mov	r24, r0
    575e:	bf 01       	movw	r22, r30
    5760:	ff 27       	eor	r31, r31
    5762:	93 58       	subi	r25, 0x83	; 131
    5764:	5f 4f       	sbci	r21, 0xFF	; 255
    5766:	2a f0       	brmi	.+10     	; 0x5772 <__divsf3_pse+0x6c>
    5768:	9e 3f       	cpi	r25, 0xFE	; 254
    576a:	51 05       	cpc	r21, r1
    576c:	68 f0       	brcs	.+26     	; 0x5788 <__divsf3_pse+0x82>
    576e:	b6 c0       	rjmp	.+364    	; 0x58dc <__fp_inf>
    5770:	5e c1       	rjmp	.+700    	; 0x5a2e <__fp_szero>
    5772:	5f 3f       	cpi	r21, 0xFF	; 255
    5774:	ec f3       	brlt	.-6      	; 0x5770 <__divsf3_pse+0x6a>
    5776:	98 3e       	cpi	r25, 0xE8	; 232
    5778:	dc f3       	brlt	.-10     	; 0x5770 <__divsf3_pse+0x6a>
    577a:	86 95       	lsr	r24
    577c:	77 95       	ror	r23
    577e:	67 95       	ror	r22
    5780:	b7 95       	ror	r27
    5782:	f7 95       	ror	r31
    5784:	9f 5f       	subi	r25, 0xFF	; 255
    5786:	c9 f7       	brne	.-14     	; 0x577a <__divsf3_pse+0x74>
    5788:	88 0f       	add	r24, r24
    578a:	91 1d       	adc	r25, r1
    578c:	96 95       	lsr	r25
    578e:	87 95       	ror	r24
    5790:	97 f9       	bld	r25, 7
    5792:	08 95       	ret
    5794:	e1 e0       	ldi	r30, 0x01	; 1
    5796:	66 0f       	add	r22, r22
    5798:	77 1f       	adc	r23, r23
    579a:	88 1f       	adc	r24, r24
    579c:	bb 1f       	adc	r27, r27
    579e:	62 17       	cp	r22, r18
    57a0:	73 07       	cpc	r23, r19
    57a2:	84 07       	cpc	r24, r20
    57a4:	ba 07       	cpc	r27, r26
    57a6:	20 f0       	brcs	.+8      	; 0x57b0 <__divsf3_pse+0xaa>
    57a8:	62 1b       	sub	r22, r18
    57aa:	73 0b       	sbc	r23, r19
    57ac:	84 0b       	sbc	r24, r20
    57ae:	ba 0b       	sbc	r27, r26
    57b0:	ee 1f       	adc	r30, r30
    57b2:	88 f7       	brcc	.-30     	; 0x5796 <__divsf3_pse+0x90>
    57b4:	e0 95       	com	r30
    57b6:	08 95       	ret

000057b8 <__fixsfsi>:
    57b8:	04 d0       	rcall	.+8      	; 0x57c2 <__fixunssfsi>
    57ba:	68 94       	set
    57bc:	b1 11       	cpse	r27, r1
    57be:	37 c1       	rjmp	.+622    	; 0x5a2e <__fp_szero>
    57c0:	08 95       	ret

000057c2 <__fixunssfsi>:
    57c2:	1a d1       	rcall	.+564    	; 0x59f8 <__fp_splitA>
    57c4:	88 f0       	brcs	.+34     	; 0x57e8 <__fixunssfsi+0x26>
    57c6:	9f 57       	subi	r25, 0x7F	; 127
    57c8:	90 f0       	brcs	.+36     	; 0x57ee <__fixunssfsi+0x2c>
    57ca:	b9 2f       	mov	r27, r25
    57cc:	99 27       	eor	r25, r25
    57ce:	b7 51       	subi	r27, 0x17	; 23
    57d0:	a0 f0       	brcs	.+40     	; 0x57fa <__fixunssfsi+0x38>
    57d2:	d1 f0       	breq	.+52     	; 0x5808 <__fixunssfsi+0x46>
    57d4:	66 0f       	add	r22, r22
    57d6:	77 1f       	adc	r23, r23
    57d8:	88 1f       	adc	r24, r24
    57da:	99 1f       	adc	r25, r25
    57dc:	1a f0       	brmi	.+6      	; 0x57e4 <__fixunssfsi+0x22>
    57de:	ba 95       	dec	r27
    57e0:	c9 f7       	brne	.-14     	; 0x57d4 <__fixunssfsi+0x12>
    57e2:	12 c0       	rjmp	.+36     	; 0x5808 <__fixunssfsi+0x46>
    57e4:	b1 30       	cpi	r27, 0x01	; 1
    57e6:	81 f0       	breq	.+32     	; 0x5808 <__fixunssfsi+0x46>
    57e8:	21 d1       	rcall	.+578    	; 0x5a2c <__fp_zero>
    57ea:	b1 e0       	ldi	r27, 0x01	; 1
    57ec:	08 95       	ret
    57ee:	1e c1       	rjmp	.+572    	; 0x5a2c <__fp_zero>
    57f0:	67 2f       	mov	r22, r23
    57f2:	78 2f       	mov	r23, r24
    57f4:	88 27       	eor	r24, r24
    57f6:	b8 5f       	subi	r27, 0xF8	; 248
    57f8:	39 f0       	breq	.+14     	; 0x5808 <__fixunssfsi+0x46>
    57fa:	b9 3f       	cpi	r27, 0xF9	; 249
    57fc:	cc f3       	brlt	.-14     	; 0x57f0 <__fixunssfsi+0x2e>
    57fe:	86 95       	lsr	r24
    5800:	77 95       	ror	r23
    5802:	67 95       	ror	r22
    5804:	b3 95       	inc	r27
    5806:	d9 f7       	brne	.-10     	; 0x57fe <__fixunssfsi+0x3c>
    5808:	3e f4       	brtc	.+14     	; 0x5818 <__fixunssfsi+0x56>
    580a:	90 95       	com	r25
    580c:	80 95       	com	r24
    580e:	70 95       	com	r23
    5810:	61 95       	neg	r22
    5812:	7f 4f       	sbci	r23, 0xFF	; 255
    5814:	8f 4f       	sbci	r24, 0xFF	; 255
    5816:	9f 4f       	sbci	r25, 0xFF	; 255
    5818:	08 95       	ret

0000581a <__floatunsisf>:
    581a:	e8 94       	clt
    581c:	09 c0       	rjmp	.+18     	; 0x5830 <__floatsisf+0x12>

0000581e <__floatsisf>:
    581e:	97 fb       	bst	r25, 7
    5820:	3e f4       	brtc	.+14     	; 0x5830 <__floatsisf+0x12>
    5822:	90 95       	com	r25
    5824:	80 95       	com	r24
    5826:	70 95       	com	r23
    5828:	61 95       	neg	r22
    582a:	7f 4f       	sbci	r23, 0xFF	; 255
    582c:	8f 4f       	sbci	r24, 0xFF	; 255
    582e:	9f 4f       	sbci	r25, 0xFF	; 255
    5830:	99 23       	and	r25, r25
    5832:	a9 f0       	breq	.+42     	; 0x585e <__floatsisf+0x40>
    5834:	f9 2f       	mov	r31, r25
    5836:	96 e9       	ldi	r25, 0x96	; 150
    5838:	bb 27       	eor	r27, r27
    583a:	93 95       	inc	r25
    583c:	f6 95       	lsr	r31
    583e:	87 95       	ror	r24
    5840:	77 95       	ror	r23
    5842:	67 95       	ror	r22
    5844:	b7 95       	ror	r27
    5846:	f1 11       	cpse	r31, r1
    5848:	f8 cf       	rjmp	.-16     	; 0x583a <__floatsisf+0x1c>
    584a:	fa f4       	brpl	.+62     	; 0x588a <__floatsisf+0x6c>
    584c:	bb 0f       	add	r27, r27
    584e:	11 f4       	brne	.+4      	; 0x5854 <__floatsisf+0x36>
    5850:	60 ff       	sbrs	r22, 0
    5852:	1b c0       	rjmp	.+54     	; 0x588a <__floatsisf+0x6c>
    5854:	6f 5f       	subi	r22, 0xFF	; 255
    5856:	7f 4f       	sbci	r23, 0xFF	; 255
    5858:	8f 4f       	sbci	r24, 0xFF	; 255
    585a:	9f 4f       	sbci	r25, 0xFF	; 255
    585c:	16 c0       	rjmp	.+44     	; 0x588a <__floatsisf+0x6c>
    585e:	88 23       	and	r24, r24
    5860:	11 f0       	breq	.+4      	; 0x5866 <__floatsisf+0x48>
    5862:	96 e9       	ldi	r25, 0x96	; 150
    5864:	11 c0       	rjmp	.+34     	; 0x5888 <__floatsisf+0x6a>
    5866:	77 23       	and	r23, r23
    5868:	21 f0       	breq	.+8      	; 0x5872 <__floatsisf+0x54>
    586a:	9e e8       	ldi	r25, 0x8E	; 142
    586c:	87 2f       	mov	r24, r23
    586e:	76 2f       	mov	r23, r22
    5870:	05 c0       	rjmp	.+10     	; 0x587c <__floatsisf+0x5e>
    5872:	66 23       	and	r22, r22
    5874:	71 f0       	breq	.+28     	; 0x5892 <__floatsisf+0x74>
    5876:	96 e8       	ldi	r25, 0x86	; 134
    5878:	86 2f       	mov	r24, r22
    587a:	70 e0       	ldi	r23, 0x00	; 0
    587c:	60 e0       	ldi	r22, 0x00	; 0
    587e:	2a f0       	brmi	.+10     	; 0x588a <__floatsisf+0x6c>
    5880:	9a 95       	dec	r25
    5882:	66 0f       	add	r22, r22
    5884:	77 1f       	adc	r23, r23
    5886:	88 1f       	adc	r24, r24
    5888:	da f7       	brpl	.-10     	; 0x5880 <__floatsisf+0x62>
    588a:	88 0f       	add	r24, r24
    588c:	96 95       	lsr	r25
    588e:	87 95       	ror	r24
    5890:	97 f9       	bld	r25, 7
    5892:	08 95       	ret

00005894 <__fp_cmp>:
    5894:	99 0f       	add	r25, r25
    5896:	00 08       	sbc	r0, r0
    5898:	55 0f       	add	r21, r21
    589a:	aa 0b       	sbc	r26, r26
    589c:	e0 e8       	ldi	r30, 0x80	; 128
    589e:	fe ef       	ldi	r31, 0xFE	; 254
    58a0:	16 16       	cp	r1, r22
    58a2:	17 06       	cpc	r1, r23
    58a4:	e8 07       	cpc	r30, r24
    58a6:	f9 07       	cpc	r31, r25
    58a8:	c0 f0       	brcs	.+48     	; 0x58da <__fp_cmp+0x46>
    58aa:	12 16       	cp	r1, r18
    58ac:	13 06       	cpc	r1, r19
    58ae:	e4 07       	cpc	r30, r20
    58b0:	f5 07       	cpc	r31, r21
    58b2:	98 f0       	brcs	.+38     	; 0x58da <__fp_cmp+0x46>
    58b4:	62 1b       	sub	r22, r18
    58b6:	73 0b       	sbc	r23, r19
    58b8:	84 0b       	sbc	r24, r20
    58ba:	95 0b       	sbc	r25, r21
    58bc:	39 f4       	brne	.+14     	; 0x58cc <__fp_cmp+0x38>
    58be:	0a 26       	eor	r0, r26
    58c0:	61 f0       	breq	.+24     	; 0x58da <__fp_cmp+0x46>
    58c2:	23 2b       	or	r18, r19
    58c4:	24 2b       	or	r18, r20
    58c6:	25 2b       	or	r18, r21
    58c8:	21 f4       	brne	.+8      	; 0x58d2 <__fp_cmp+0x3e>
    58ca:	08 95       	ret
    58cc:	0a 26       	eor	r0, r26
    58ce:	09 f4       	brne	.+2      	; 0x58d2 <__fp_cmp+0x3e>
    58d0:	a1 40       	sbci	r26, 0x01	; 1
    58d2:	a6 95       	lsr	r26
    58d4:	8f ef       	ldi	r24, 0xFF	; 255
    58d6:	81 1d       	adc	r24, r1
    58d8:	81 1d       	adc	r24, r1
    58da:	08 95       	ret

000058dc <__fp_inf>:
    58dc:	97 f9       	bld	r25, 7
    58de:	9f 67       	ori	r25, 0x7F	; 127
    58e0:	80 e8       	ldi	r24, 0x80	; 128
    58e2:	70 e0       	ldi	r23, 0x00	; 0
    58e4:	60 e0       	ldi	r22, 0x00	; 0
    58e6:	08 95       	ret

000058e8 <__fp_nan>:
    58e8:	9f ef       	ldi	r25, 0xFF	; 255
    58ea:	80 ec       	ldi	r24, 0xC0	; 192
    58ec:	08 95       	ret

000058ee <__fp_powser>:
    58ee:	df 93       	push	r29
    58f0:	cf 93       	push	r28
    58f2:	1f 93       	push	r17
    58f4:	0f 93       	push	r16
    58f6:	ff 92       	push	r15
    58f8:	ef 92       	push	r14
    58fa:	df 92       	push	r13
    58fc:	7b 01       	movw	r14, r22
    58fe:	8c 01       	movw	r16, r24
    5900:	68 94       	set
    5902:	05 c0       	rjmp	.+10     	; 0x590e <__fp_powser+0x20>
    5904:	da 2e       	mov	r13, r26
    5906:	ef 01       	movw	r28, r30
    5908:	af d0       	rcall	.+350    	; 0x5a68 <__mulsf3x>
    590a:	fe 01       	movw	r30, r28
    590c:	e8 94       	clt
    590e:	a5 91       	lpm	r26, Z+
    5910:	25 91       	lpm	r18, Z+
    5912:	35 91       	lpm	r19, Z+
    5914:	45 91       	lpm	r20, Z+
    5916:	55 91       	lpm	r21, Z+
    5918:	ae f3       	brts	.-22     	; 0x5904 <__fp_powser+0x16>
    591a:	ef 01       	movw	r28, r30
    591c:	29 de       	rcall	.-942    	; 0x5570 <__addsf3x>
    591e:	fe 01       	movw	r30, r28
    5920:	97 01       	movw	r18, r14
    5922:	a8 01       	movw	r20, r16
    5924:	da 94       	dec	r13
    5926:	79 f7       	brne	.-34     	; 0x5906 <__fp_powser+0x18>
    5928:	df 90       	pop	r13
    592a:	ef 90       	pop	r14
    592c:	ff 90       	pop	r15
    592e:	0f 91       	pop	r16
    5930:	1f 91       	pop	r17
    5932:	cf 91       	pop	r28
    5934:	df 91       	pop	r29
    5936:	08 95       	ret

00005938 <__fp_pscA>:
    5938:	00 24       	eor	r0, r0
    593a:	0a 94       	dec	r0
    593c:	16 16       	cp	r1, r22
    593e:	17 06       	cpc	r1, r23
    5940:	18 06       	cpc	r1, r24
    5942:	09 06       	cpc	r0, r25
    5944:	08 95       	ret

00005946 <__fp_pscB>:
    5946:	00 24       	eor	r0, r0
    5948:	0a 94       	dec	r0
    594a:	12 16       	cp	r1, r18
    594c:	13 06       	cpc	r1, r19
    594e:	14 06       	cpc	r1, r20
    5950:	05 06       	cpc	r0, r21
    5952:	08 95       	ret
    5954:	c9 cf       	rjmp	.-110    	; 0x58e8 <__fp_nan>

00005956 <__fp_rempio2>:
    5956:	50 d0       	rcall	.+160    	; 0x59f8 <__fp_splitA>
    5958:	e8 f3       	brcs	.-6      	; 0x5954 <__fp_pscB+0xe>
    595a:	e8 94       	clt
    595c:	e0 e0       	ldi	r30, 0x00	; 0
    595e:	bb 27       	eor	r27, r27
    5960:	9f 57       	subi	r25, 0x7F	; 127
    5962:	f0 f0       	brcs	.+60     	; 0x59a0 <__fp_rempio2+0x4a>
    5964:	2a ed       	ldi	r18, 0xDA	; 218
    5966:	3f e0       	ldi	r19, 0x0F	; 15
    5968:	49 ec       	ldi	r20, 0xC9	; 201
    596a:	06 c0       	rjmp	.+12     	; 0x5978 <__fp_rempio2+0x22>
    596c:	ee 0f       	add	r30, r30
    596e:	bb 0f       	add	r27, r27
    5970:	66 1f       	adc	r22, r22
    5972:	77 1f       	adc	r23, r23
    5974:	88 1f       	adc	r24, r24
    5976:	28 f0       	brcs	.+10     	; 0x5982 <__fp_rempio2+0x2c>
    5978:	b2 3a       	cpi	r27, 0xA2	; 162
    597a:	62 07       	cpc	r22, r18
    597c:	73 07       	cpc	r23, r19
    597e:	84 07       	cpc	r24, r20
    5980:	28 f0       	brcs	.+10     	; 0x598c <__fp_rempio2+0x36>
    5982:	b2 5a       	subi	r27, 0xA2	; 162
    5984:	62 0b       	sbc	r22, r18
    5986:	73 0b       	sbc	r23, r19
    5988:	84 0b       	sbc	r24, r20
    598a:	e3 95       	inc	r30
    598c:	9a 95       	dec	r25
    598e:	72 f7       	brpl	.-36     	; 0x596c <__fp_rempio2+0x16>
    5990:	80 38       	cpi	r24, 0x80	; 128
    5992:	30 f4       	brcc	.+12     	; 0x59a0 <__fp_rempio2+0x4a>
    5994:	9a 95       	dec	r25
    5996:	bb 0f       	add	r27, r27
    5998:	66 1f       	adc	r22, r22
    599a:	77 1f       	adc	r23, r23
    599c:	88 1f       	adc	r24, r24
    599e:	d2 f7       	brpl	.-12     	; 0x5994 <__fp_rempio2+0x3e>
    59a0:	90 48       	sbci	r25, 0x80	; 128
    59a2:	e4 c0       	rjmp	.+456    	; 0x5b6c <__fp_mpack_finite>

000059a4 <__fp_round>:
    59a4:	09 2e       	mov	r0, r25
    59a6:	03 94       	inc	r0
    59a8:	00 0c       	add	r0, r0
    59aa:	11 f4       	brne	.+4      	; 0x59b0 <__fp_round+0xc>
    59ac:	88 23       	and	r24, r24
    59ae:	52 f0       	brmi	.+20     	; 0x59c4 <__fp_round+0x20>
    59b0:	bb 0f       	add	r27, r27
    59b2:	40 f4       	brcc	.+16     	; 0x59c4 <__fp_round+0x20>
    59b4:	bf 2b       	or	r27, r31
    59b6:	11 f4       	brne	.+4      	; 0x59bc <__fp_round+0x18>
    59b8:	60 ff       	sbrs	r22, 0
    59ba:	04 c0       	rjmp	.+8      	; 0x59c4 <__fp_round+0x20>
    59bc:	6f 5f       	subi	r22, 0xFF	; 255
    59be:	7f 4f       	sbci	r23, 0xFF	; 255
    59c0:	8f 4f       	sbci	r24, 0xFF	; 255
    59c2:	9f 4f       	sbci	r25, 0xFF	; 255
    59c4:	08 95       	ret

000059c6 <__fp_sinus>:
    59c6:	ef 93       	push	r30
    59c8:	e0 ff       	sbrs	r30, 0
    59ca:	06 c0       	rjmp	.+12     	; 0x59d8 <__fp_sinus+0x12>
    59cc:	a2 ea       	ldi	r26, 0xA2	; 162
    59ce:	2a ed       	ldi	r18, 0xDA	; 218
    59d0:	3f e0       	ldi	r19, 0x0F	; 15
    59d2:	49 ec       	ldi	r20, 0xC9	; 201
    59d4:	5f eb       	ldi	r21, 0xBF	; 191
    59d6:	cc dd       	rcall	.-1128   	; 0x5570 <__addsf3x>
    59d8:	e5 df       	rcall	.-54     	; 0x59a4 <__fp_round>
    59da:	0f 90       	pop	r0
    59dc:	03 94       	inc	r0
    59de:	01 fc       	sbrc	r0, 1
    59e0:	90 58       	subi	r25, 0x80	; 128
    59e2:	eb ee       	ldi	r30, 0xEB	; 235
    59e4:	f0 e0       	ldi	r31, 0x00	; 0
    59e6:	ce c0       	rjmp	.+412    	; 0x5b84 <__fp_powsodd>

000059e8 <__fp_split3>:
    59e8:	57 fd       	sbrc	r21, 7
    59ea:	90 58       	subi	r25, 0x80	; 128
    59ec:	44 0f       	add	r20, r20
    59ee:	55 1f       	adc	r21, r21
    59f0:	59 f0       	breq	.+22     	; 0x5a08 <__fp_splitA+0x10>
    59f2:	5f 3f       	cpi	r21, 0xFF	; 255
    59f4:	71 f0       	breq	.+28     	; 0x5a12 <__fp_splitA+0x1a>
    59f6:	47 95       	ror	r20

000059f8 <__fp_splitA>:
    59f8:	88 0f       	add	r24, r24
    59fa:	97 fb       	bst	r25, 7
    59fc:	99 1f       	adc	r25, r25
    59fe:	61 f0       	breq	.+24     	; 0x5a18 <__fp_splitA+0x20>
    5a00:	9f 3f       	cpi	r25, 0xFF	; 255
    5a02:	79 f0       	breq	.+30     	; 0x5a22 <__fp_splitA+0x2a>
    5a04:	87 95       	ror	r24
    5a06:	08 95       	ret
    5a08:	12 16       	cp	r1, r18
    5a0a:	13 06       	cpc	r1, r19
    5a0c:	14 06       	cpc	r1, r20
    5a0e:	55 1f       	adc	r21, r21
    5a10:	f2 cf       	rjmp	.-28     	; 0x59f6 <__fp_split3+0xe>
    5a12:	46 95       	lsr	r20
    5a14:	f1 df       	rcall	.-30     	; 0x59f8 <__fp_splitA>
    5a16:	08 c0       	rjmp	.+16     	; 0x5a28 <__fp_splitA+0x30>
    5a18:	16 16       	cp	r1, r22
    5a1a:	17 06       	cpc	r1, r23
    5a1c:	18 06       	cpc	r1, r24
    5a1e:	99 1f       	adc	r25, r25
    5a20:	f1 cf       	rjmp	.-30     	; 0x5a04 <__fp_splitA+0xc>
    5a22:	86 95       	lsr	r24
    5a24:	71 05       	cpc	r23, r1
    5a26:	61 05       	cpc	r22, r1
    5a28:	08 94       	sec
    5a2a:	08 95       	ret

00005a2c <__fp_zero>:
    5a2c:	e8 94       	clt

00005a2e <__fp_szero>:
    5a2e:	bb 27       	eor	r27, r27
    5a30:	66 27       	eor	r22, r22
    5a32:	77 27       	eor	r23, r23
    5a34:	cb 01       	movw	r24, r22
    5a36:	97 f9       	bld	r25, 7
    5a38:	08 95       	ret

00005a3a <__gesf2>:
    5a3a:	2c df       	rcall	.-424    	; 0x5894 <__fp_cmp>
    5a3c:	08 f4       	brcc	.+2      	; 0x5a40 <__gesf2+0x6>
    5a3e:	8f ef       	ldi	r24, 0xFF	; 255
    5a40:	08 95       	ret

00005a42 <inverse>:
    5a42:	9b 01       	movw	r18, r22
    5a44:	ac 01       	movw	r20, r24
    5a46:	60 e0       	ldi	r22, 0x00	; 0
    5a48:	70 e0       	ldi	r23, 0x00	; 0
    5a4a:	80 e8       	ldi	r24, 0x80	; 128
    5a4c:	9f e3       	ldi	r25, 0x3F	; 63
    5a4e:	4c ce       	rjmp	.-872    	; 0x56e8 <__divsf3>

00005a50 <__mulsf3>:
    5a50:	0b d0       	rcall	.+22     	; 0x5a68 <__mulsf3x>
    5a52:	a8 cf       	rjmp	.-176    	; 0x59a4 <__fp_round>
    5a54:	71 df       	rcall	.-286    	; 0x5938 <__fp_pscA>
    5a56:	28 f0       	brcs	.+10     	; 0x5a62 <__mulsf3+0x12>
    5a58:	76 df       	rcall	.-276    	; 0x5946 <__fp_pscB>
    5a5a:	18 f0       	brcs	.+6      	; 0x5a62 <__mulsf3+0x12>
    5a5c:	95 23       	and	r25, r21
    5a5e:	09 f0       	breq	.+2      	; 0x5a62 <__mulsf3+0x12>
    5a60:	3d cf       	rjmp	.-390    	; 0x58dc <__fp_inf>
    5a62:	42 cf       	rjmp	.-380    	; 0x58e8 <__fp_nan>
    5a64:	11 24       	eor	r1, r1
    5a66:	e3 cf       	rjmp	.-58     	; 0x5a2e <__fp_szero>

00005a68 <__mulsf3x>:
    5a68:	bf df       	rcall	.-130    	; 0x59e8 <__fp_split3>
    5a6a:	a0 f3       	brcs	.-24     	; 0x5a54 <__mulsf3+0x4>

00005a6c <__mulsf3_pse>:
    5a6c:	95 9f       	mul	r25, r21
    5a6e:	d1 f3       	breq	.-12     	; 0x5a64 <__mulsf3+0x14>
    5a70:	95 0f       	add	r25, r21
    5a72:	50 e0       	ldi	r21, 0x00	; 0
    5a74:	55 1f       	adc	r21, r21
    5a76:	62 9f       	mul	r22, r18
    5a78:	f0 01       	movw	r30, r0
    5a7a:	72 9f       	mul	r23, r18
    5a7c:	bb 27       	eor	r27, r27
    5a7e:	f0 0d       	add	r31, r0
    5a80:	b1 1d       	adc	r27, r1
    5a82:	63 9f       	mul	r22, r19
    5a84:	aa 27       	eor	r26, r26
    5a86:	f0 0d       	add	r31, r0
    5a88:	b1 1d       	adc	r27, r1
    5a8a:	aa 1f       	adc	r26, r26
    5a8c:	64 9f       	mul	r22, r20
    5a8e:	66 27       	eor	r22, r22
    5a90:	b0 0d       	add	r27, r0
    5a92:	a1 1d       	adc	r26, r1
    5a94:	66 1f       	adc	r22, r22
    5a96:	82 9f       	mul	r24, r18
    5a98:	22 27       	eor	r18, r18
    5a9a:	b0 0d       	add	r27, r0
    5a9c:	a1 1d       	adc	r26, r1
    5a9e:	62 1f       	adc	r22, r18
    5aa0:	73 9f       	mul	r23, r19
    5aa2:	b0 0d       	add	r27, r0
    5aa4:	a1 1d       	adc	r26, r1
    5aa6:	62 1f       	adc	r22, r18
    5aa8:	83 9f       	mul	r24, r19
    5aaa:	a0 0d       	add	r26, r0
    5aac:	61 1d       	adc	r22, r1
    5aae:	22 1f       	adc	r18, r18
    5ab0:	74 9f       	mul	r23, r20
    5ab2:	33 27       	eor	r19, r19
    5ab4:	a0 0d       	add	r26, r0
    5ab6:	61 1d       	adc	r22, r1
    5ab8:	23 1f       	adc	r18, r19
    5aba:	84 9f       	mul	r24, r20
    5abc:	60 0d       	add	r22, r0
    5abe:	21 1d       	adc	r18, r1
    5ac0:	82 2f       	mov	r24, r18
    5ac2:	76 2f       	mov	r23, r22
    5ac4:	6a 2f       	mov	r22, r26
    5ac6:	11 24       	eor	r1, r1
    5ac8:	9f 57       	subi	r25, 0x7F	; 127
    5aca:	50 40       	sbci	r21, 0x00	; 0
    5acc:	8a f0       	brmi	.+34     	; 0x5af0 <__mulsf3_pse+0x84>
    5ace:	e1 f0       	breq	.+56     	; 0x5b08 <__mulsf3_pse+0x9c>
    5ad0:	88 23       	and	r24, r24
    5ad2:	4a f0       	brmi	.+18     	; 0x5ae6 <__mulsf3_pse+0x7a>
    5ad4:	ee 0f       	add	r30, r30
    5ad6:	ff 1f       	adc	r31, r31
    5ad8:	bb 1f       	adc	r27, r27
    5ada:	66 1f       	adc	r22, r22
    5adc:	77 1f       	adc	r23, r23
    5ade:	88 1f       	adc	r24, r24
    5ae0:	91 50       	subi	r25, 0x01	; 1
    5ae2:	50 40       	sbci	r21, 0x00	; 0
    5ae4:	a9 f7       	brne	.-22     	; 0x5ad0 <__mulsf3_pse+0x64>
    5ae6:	9e 3f       	cpi	r25, 0xFE	; 254
    5ae8:	51 05       	cpc	r21, r1
    5aea:	70 f0       	brcs	.+28     	; 0x5b08 <__mulsf3_pse+0x9c>
    5aec:	f7 ce       	rjmp	.-530    	; 0x58dc <__fp_inf>
    5aee:	9f cf       	rjmp	.-194    	; 0x5a2e <__fp_szero>
    5af0:	5f 3f       	cpi	r21, 0xFF	; 255
    5af2:	ec f3       	brlt	.-6      	; 0x5aee <__mulsf3_pse+0x82>
    5af4:	98 3e       	cpi	r25, 0xE8	; 232
    5af6:	dc f3       	brlt	.-10     	; 0x5aee <__mulsf3_pse+0x82>
    5af8:	86 95       	lsr	r24
    5afa:	77 95       	ror	r23
    5afc:	67 95       	ror	r22
    5afe:	b7 95       	ror	r27
    5b00:	f7 95       	ror	r31
    5b02:	e7 95       	ror	r30
    5b04:	9f 5f       	subi	r25, 0xFF	; 255
    5b06:	c1 f7       	brne	.-16     	; 0x5af8 <__mulsf3_pse+0x8c>
    5b08:	fe 2b       	or	r31, r30
    5b0a:	88 0f       	add	r24, r24
    5b0c:	91 1d       	adc	r25, r1
    5b0e:	96 95       	lsr	r25
    5b10:	87 95       	ror	r24
    5b12:	97 f9       	bld	r25, 7
    5b14:	08 95       	ret

00005b16 <sin>:
    5b16:	9f 93       	push	r25
    5b18:	1e df       	rcall	.-452    	; 0x5956 <__fp_rempio2>
    5b1a:	0f 90       	pop	r0
    5b1c:	07 fc       	sbrc	r0, 7
    5b1e:	ee 5f       	subi	r30, 0xFE	; 254
    5b20:	52 cf       	rjmp	.-348    	; 0x59c6 <__fp_sinus>

00005b22 <square>:
    5b22:	9b 01       	movw	r18, r22
    5b24:	ac 01       	movw	r20, r24
    5b26:	94 cf       	rjmp	.-216    	; 0x5a50 <__mulsf3>

00005b28 <tan>:
    5b28:	df 93       	push	r29
    5b2a:	d9 2f       	mov	r29, r25
    5b2c:	14 df       	rcall	.-472    	; 0x5956 <__fp_rempio2>
    5b2e:	e6 95       	lsr	r30
    5b30:	d7 95       	ror	r29
    5b32:	2a ed       	ldi	r18, 0xDA	; 218
    5b34:	3f e0       	ldi	r19, 0x0F	; 15
    5b36:	49 e4       	ldi	r20, 0x49	; 73
    5b38:	5f e3       	ldi	r21, 0x3F	; 63
    5b3a:	b3 3a       	cpi	r27, 0xA3	; 163
    5b3c:	62 07       	cpc	r22, r18
    5b3e:	73 07       	cpc	r23, r19
    5b40:	84 07       	cpc	r24, r20
    5b42:	95 07       	cpc	r25, r21
    5b44:	d7 95       	ror	r29
    5b46:	2a f0       	brmi	.+10     	; 0x5b52 <tan+0x2a>
    5b48:	a2 ea       	ldi	r26, 0xA2	; 162
    5b4a:	49 ec       	ldi	r20, 0xC9	; 201
    5b4c:	90 68       	ori	r25, 0x80	; 128
    5b4e:	10 dd       	rcall	.-1504   	; 0x5570 <__addsf3x>
    5b50:	29 df       	rcall	.-430    	; 0x59a4 <__fp_round>
    5b52:	e9 e0       	ldi	r30, 0x09	; 9
    5b54:	f1 e0       	ldi	r31, 0x01	; 1
    5b56:	16 d0       	rcall	.+44     	; 0x5b84 <__fp_powsodd>
    5b58:	dd 0f       	add	r29, r29
    5b5a:	0b f0       	brvs	.+2      	; 0x5b5e <tan+0x36>
    5b5c:	72 df       	rcall	.-284    	; 0x5a42 <inverse>
    5b5e:	dd 0f       	add	r29, r29
    5b60:	0b f4       	brvc	.+2      	; 0x5b64 <tan+0x3c>
    5b62:	90 58       	subi	r25, 0x80	; 128
    5b64:	df 91       	pop	r29
    5b66:	08 95       	ret

00005b68 <__fp_mpack>:
    5b68:	9f 3f       	cpi	r25, 0xFF	; 255
    5b6a:	31 f0       	breq	.+12     	; 0x5b78 <__fp_mpack_finite+0xc>

00005b6c <__fp_mpack_finite>:
    5b6c:	91 50       	subi	r25, 0x01	; 1
    5b6e:	20 f4       	brcc	.+8      	; 0x5b78 <__fp_mpack_finite+0xc>
    5b70:	87 95       	ror	r24
    5b72:	77 95       	ror	r23
    5b74:	67 95       	ror	r22
    5b76:	b7 95       	ror	r27
    5b78:	88 0f       	add	r24, r24
    5b7a:	91 1d       	adc	r25, r1
    5b7c:	96 95       	lsr	r25
    5b7e:	87 95       	ror	r24
    5b80:	97 f9       	bld	r25, 7
    5b82:	08 95       	ret

00005b84 <__fp_powsodd>:
    5b84:	9f 93       	push	r25
    5b86:	8f 93       	push	r24
    5b88:	7f 93       	push	r23
    5b8a:	6f 93       	push	r22
    5b8c:	ff 93       	push	r31
    5b8e:	ef 93       	push	r30
    5b90:	9b 01       	movw	r18, r22
    5b92:	ac 01       	movw	r20, r24
    5b94:	5d df       	rcall	.-326    	; 0x5a50 <__mulsf3>
    5b96:	ef 91       	pop	r30
    5b98:	ff 91       	pop	r31
    5b9a:	a9 de       	rcall	.-686    	; 0x58ee <__fp_powser>
    5b9c:	2f 91       	pop	r18
    5b9e:	3f 91       	pop	r19
    5ba0:	4f 91       	pop	r20
    5ba2:	5f 91       	pop	r21
    5ba4:	55 cf       	rjmp	.-342    	; 0x5a50 <__mulsf3>

00005ba6 <vfprintf>:
    5ba6:	2f 92       	push	r2
    5ba8:	3f 92       	push	r3
    5baa:	4f 92       	push	r4
    5bac:	5f 92       	push	r5
    5bae:	6f 92       	push	r6
    5bb0:	7f 92       	push	r7
    5bb2:	8f 92       	push	r8
    5bb4:	9f 92       	push	r9
    5bb6:	af 92       	push	r10
    5bb8:	bf 92       	push	r11
    5bba:	cf 92       	push	r12
    5bbc:	df 92       	push	r13
    5bbe:	ef 92       	push	r14
    5bc0:	ff 92       	push	r15
    5bc2:	0f 93       	push	r16
    5bc4:	1f 93       	push	r17
    5bc6:	cf 93       	push	r28
    5bc8:	df 93       	push	r29
    5bca:	cd b7       	in	r28, 0x3d	; 61
    5bcc:	de b7       	in	r29, 0x3e	; 62
    5bce:	63 97       	sbiw	r28, 0x13	; 19
    5bd0:	0f b6       	in	r0, 0x3f	; 63
    5bd2:	f8 94       	cli
    5bd4:	de bf       	out	0x3e, r29	; 62
    5bd6:	0f be       	out	0x3f, r0	; 63
    5bd8:	cd bf       	out	0x3d, r28	; 61
    5bda:	7c 01       	movw	r14, r24
    5bdc:	1b 01       	movw	r2, r22
    5bde:	6a 01       	movw	r12, r20
    5be0:	fc 01       	movw	r30, r24
    5be2:	17 82       	std	Z+7, r1	; 0x07
    5be4:	16 82       	std	Z+6, r1	; 0x06
    5be6:	83 81       	ldd	r24, Z+3	; 0x03
    5be8:	81 ff       	sbrs	r24, 1
    5bea:	49 c3       	rjmp	.+1682   	; 0x627e <vfprintf+0x6d8>
    5bec:	be 01       	movw	r22, r28
    5bee:	6f 5f       	subi	r22, 0xFF	; 255
    5bf0:	7f 4f       	sbci	r23, 0xFF	; 255
    5bf2:	4b 01       	movw	r8, r22
    5bf4:	f7 01       	movw	r30, r14
    5bf6:	93 81       	ldd	r25, Z+3	; 0x03
    5bf8:	f1 01       	movw	r30, r2
    5bfa:	93 fd       	sbrc	r25, 3
    5bfc:	85 91       	lpm	r24, Z+
    5bfe:	93 ff       	sbrs	r25, 3
    5c00:	81 91       	ld	r24, Z+
    5c02:	1f 01       	movw	r2, r30
    5c04:	88 23       	and	r24, r24
    5c06:	09 f4       	brne	.+2      	; 0x5c0a <vfprintf+0x64>
    5c08:	36 c3       	rjmp	.+1644   	; 0x6276 <vfprintf+0x6d0>
    5c0a:	85 32       	cpi	r24, 0x25	; 37
    5c0c:	39 f4       	brne	.+14     	; 0x5c1c <vfprintf+0x76>
    5c0e:	93 fd       	sbrc	r25, 3
    5c10:	85 91       	lpm	r24, Z+
    5c12:	93 ff       	sbrs	r25, 3
    5c14:	81 91       	ld	r24, Z+
    5c16:	1f 01       	movw	r2, r30
    5c18:	85 32       	cpi	r24, 0x25	; 37
    5c1a:	31 f4       	brne	.+12     	; 0x5c28 <vfprintf+0x82>
    5c1c:	b7 01       	movw	r22, r14
    5c1e:	90 e0       	ldi	r25, 0x00	; 0
    5c20:	77 d4       	rcall	.+2286   	; 0x6510 <fputc>
    5c22:	56 01       	movw	r10, r12
    5c24:	65 01       	movw	r12, r10
    5c26:	e6 cf       	rjmp	.-52     	; 0x5bf4 <vfprintf+0x4e>
    5c28:	10 e0       	ldi	r17, 0x00	; 0
    5c2a:	51 2c       	mov	r5, r1
    5c2c:	20 e0       	ldi	r18, 0x00	; 0
    5c2e:	20 32       	cpi	r18, 0x20	; 32
    5c30:	a0 f4       	brcc	.+40     	; 0x5c5a <vfprintf+0xb4>
    5c32:	8b 32       	cpi	r24, 0x2B	; 43
    5c34:	69 f0       	breq	.+26     	; 0x5c50 <vfprintf+0xaa>
    5c36:	30 f4       	brcc	.+12     	; 0x5c44 <vfprintf+0x9e>
    5c38:	80 32       	cpi	r24, 0x20	; 32
    5c3a:	59 f0       	breq	.+22     	; 0x5c52 <vfprintf+0xac>
    5c3c:	83 32       	cpi	r24, 0x23	; 35
    5c3e:	69 f4       	brne	.+26     	; 0x5c5a <vfprintf+0xb4>
    5c40:	20 61       	ori	r18, 0x10	; 16
    5c42:	2c c0       	rjmp	.+88     	; 0x5c9c <vfprintf+0xf6>
    5c44:	8d 32       	cpi	r24, 0x2D	; 45
    5c46:	39 f0       	breq	.+14     	; 0x5c56 <vfprintf+0xb0>
    5c48:	80 33       	cpi	r24, 0x30	; 48
    5c4a:	39 f4       	brne	.+14     	; 0x5c5a <vfprintf+0xb4>
    5c4c:	21 60       	ori	r18, 0x01	; 1
    5c4e:	26 c0       	rjmp	.+76     	; 0x5c9c <vfprintf+0xf6>
    5c50:	22 60       	ori	r18, 0x02	; 2
    5c52:	24 60       	ori	r18, 0x04	; 4
    5c54:	23 c0       	rjmp	.+70     	; 0x5c9c <vfprintf+0xf6>
    5c56:	28 60       	ori	r18, 0x08	; 8
    5c58:	21 c0       	rjmp	.+66     	; 0x5c9c <vfprintf+0xf6>
    5c5a:	27 fd       	sbrc	r18, 7
    5c5c:	27 c0       	rjmp	.+78     	; 0x5cac <vfprintf+0x106>
    5c5e:	30 ed       	ldi	r19, 0xD0	; 208
    5c60:	38 0f       	add	r19, r24
    5c62:	3a 30       	cpi	r19, 0x0A	; 10
    5c64:	78 f4       	brcc	.+30     	; 0x5c84 <vfprintf+0xde>
    5c66:	26 ff       	sbrs	r18, 6
    5c68:	06 c0       	rjmp	.+12     	; 0x5c76 <vfprintf+0xd0>
    5c6a:	fa e0       	ldi	r31, 0x0A	; 10
    5c6c:	1f 9f       	mul	r17, r31
    5c6e:	30 0d       	add	r19, r0
    5c70:	11 24       	eor	r1, r1
    5c72:	13 2f       	mov	r17, r19
    5c74:	13 c0       	rjmp	.+38     	; 0x5c9c <vfprintf+0xf6>
    5c76:	6a e0       	ldi	r22, 0x0A	; 10
    5c78:	56 9e       	mul	r5, r22
    5c7a:	30 0d       	add	r19, r0
    5c7c:	11 24       	eor	r1, r1
    5c7e:	53 2e       	mov	r5, r19
    5c80:	20 62       	ori	r18, 0x20	; 32
    5c82:	0c c0       	rjmp	.+24     	; 0x5c9c <vfprintf+0xf6>
    5c84:	8e 32       	cpi	r24, 0x2E	; 46
    5c86:	21 f4       	brne	.+8      	; 0x5c90 <vfprintf+0xea>
    5c88:	26 fd       	sbrc	r18, 6
    5c8a:	f5 c2       	rjmp	.+1514   	; 0x6276 <vfprintf+0x6d0>
    5c8c:	20 64       	ori	r18, 0x40	; 64
    5c8e:	06 c0       	rjmp	.+12     	; 0x5c9c <vfprintf+0xf6>
    5c90:	8c 36       	cpi	r24, 0x6C	; 108
    5c92:	11 f4       	brne	.+4      	; 0x5c98 <vfprintf+0xf2>
    5c94:	20 68       	ori	r18, 0x80	; 128
    5c96:	02 c0       	rjmp	.+4      	; 0x5c9c <vfprintf+0xf6>
    5c98:	88 36       	cpi	r24, 0x68	; 104
    5c9a:	41 f4       	brne	.+16     	; 0x5cac <vfprintf+0x106>
    5c9c:	f1 01       	movw	r30, r2
    5c9e:	93 fd       	sbrc	r25, 3
    5ca0:	85 91       	lpm	r24, Z+
    5ca2:	93 ff       	sbrs	r25, 3
    5ca4:	81 91       	ld	r24, Z+
    5ca6:	1f 01       	movw	r2, r30
    5ca8:	81 11       	cpse	r24, r1
    5caa:	c1 cf       	rjmp	.-126    	; 0x5c2e <vfprintf+0x88>
    5cac:	9b eb       	ldi	r25, 0xBB	; 187
    5cae:	98 0f       	add	r25, r24
    5cb0:	93 30       	cpi	r25, 0x03	; 3
    5cb2:	18 f4       	brcc	.+6      	; 0x5cba <vfprintf+0x114>
    5cb4:	20 61       	ori	r18, 0x10	; 16
    5cb6:	80 5e       	subi	r24, 0xE0	; 224
    5cb8:	06 c0       	rjmp	.+12     	; 0x5cc6 <vfprintf+0x120>
    5cba:	9b e9       	ldi	r25, 0x9B	; 155
    5cbc:	98 0f       	add	r25, r24
    5cbe:	93 30       	cpi	r25, 0x03	; 3
    5cc0:	08 f0       	brcs	.+2      	; 0x5cc4 <vfprintf+0x11e>
    5cc2:	9a c1       	rjmp	.+820    	; 0x5ff8 <vfprintf+0x452>
    5cc4:	2f 7e       	andi	r18, 0xEF	; 239
    5cc6:	26 ff       	sbrs	r18, 6
    5cc8:	16 e0       	ldi	r17, 0x06	; 6
    5cca:	2f 73       	andi	r18, 0x3F	; 63
    5ccc:	72 2e       	mov	r7, r18
    5cce:	85 36       	cpi	r24, 0x65	; 101
    5cd0:	21 f4       	brne	.+8      	; 0x5cda <vfprintf+0x134>
    5cd2:	f2 2f       	mov	r31, r18
    5cd4:	f0 64       	ori	r31, 0x40	; 64
    5cd6:	7f 2e       	mov	r7, r31
    5cd8:	08 c0       	rjmp	.+16     	; 0x5cea <vfprintf+0x144>
    5cda:	86 36       	cpi	r24, 0x66	; 102
    5cdc:	21 f4       	brne	.+8      	; 0x5ce6 <vfprintf+0x140>
    5cde:	62 2f       	mov	r22, r18
    5ce0:	60 68       	ori	r22, 0x80	; 128
    5ce2:	76 2e       	mov	r7, r22
    5ce4:	02 c0       	rjmp	.+4      	; 0x5cea <vfprintf+0x144>
    5ce6:	11 11       	cpse	r17, r1
    5ce8:	11 50       	subi	r17, 0x01	; 1
    5cea:	77 fe       	sbrs	r7, 7
    5cec:	07 c0       	rjmp	.+14     	; 0x5cfc <vfprintf+0x156>
    5cee:	1c 33       	cpi	r17, 0x3C	; 60
    5cf0:	48 f4       	brcc	.+18     	; 0x5d04 <vfprintf+0x15e>
    5cf2:	44 24       	eor	r4, r4
    5cf4:	43 94       	inc	r4
    5cf6:	41 0e       	add	r4, r17
    5cf8:	27 e0       	ldi	r18, 0x07	; 7
    5cfa:	0b c0       	rjmp	.+22     	; 0x5d12 <vfprintf+0x16c>
    5cfc:	18 30       	cpi	r17, 0x08	; 8
    5cfe:	30 f4       	brcc	.+12     	; 0x5d0c <vfprintf+0x166>
    5d00:	21 2f       	mov	r18, r17
    5d02:	06 c0       	rjmp	.+12     	; 0x5d10 <vfprintf+0x16a>
    5d04:	27 e0       	ldi	r18, 0x07	; 7
    5d06:	4c e3       	ldi	r20, 0x3C	; 60
    5d08:	44 2e       	mov	r4, r20
    5d0a:	03 c0       	rjmp	.+6      	; 0x5d12 <vfprintf+0x16c>
    5d0c:	27 e0       	ldi	r18, 0x07	; 7
    5d0e:	17 e0       	ldi	r17, 0x07	; 7
    5d10:	41 2c       	mov	r4, r1
    5d12:	56 01       	movw	r10, r12
    5d14:	74 e0       	ldi	r23, 0x04	; 4
    5d16:	a7 0e       	add	r10, r23
    5d18:	b1 1c       	adc	r11, r1
    5d1a:	f6 01       	movw	r30, r12
    5d1c:	60 81       	ld	r22, Z
    5d1e:	71 81       	ldd	r23, Z+1	; 0x01
    5d20:	82 81       	ldd	r24, Z+2	; 0x02
    5d22:	93 81       	ldd	r25, Z+3	; 0x03
    5d24:	04 2d       	mov	r16, r4
    5d26:	a4 01       	movw	r20, r8
    5d28:	05 d3       	rcall	.+1546   	; 0x6334 <__ftoa_engine>
    5d2a:	6c 01       	movw	r12, r24
    5d2c:	09 81       	ldd	r16, Y+1	; 0x01
    5d2e:	00 ff       	sbrs	r16, 0
    5d30:	02 c0       	rjmp	.+4      	; 0x5d36 <vfprintf+0x190>
    5d32:	03 ff       	sbrs	r16, 3
    5d34:	06 c0       	rjmp	.+12     	; 0x5d42 <vfprintf+0x19c>
    5d36:	71 fc       	sbrc	r7, 1
    5d38:	07 c0       	rjmp	.+14     	; 0x5d48 <vfprintf+0x1a2>
    5d3a:	72 fc       	sbrc	r7, 2
    5d3c:	08 c0       	rjmp	.+16     	; 0x5d4e <vfprintf+0x1a8>
    5d3e:	61 2c       	mov	r6, r1
    5d40:	08 c0       	rjmp	.+16     	; 0x5d52 <vfprintf+0x1ac>
    5d42:	3d e2       	ldi	r19, 0x2D	; 45
    5d44:	63 2e       	mov	r6, r19
    5d46:	05 c0       	rjmp	.+10     	; 0x5d52 <vfprintf+0x1ac>
    5d48:	2b e2       	ldi	r18, 0x2B	; 43
    5d4a:	62 2e       	mov	r6, r18
    5d4c:	02 c0       	rjmp	.+4      	; 0x5d52 <vfprintf+0x1ac>
    5d4e:	90 e2       	ldi	r25, 0x20	; 32
    5d50:	69 2e       	mov	r6, r25
    5d52:	80 2f       	mov	r24, r16
    5d54:	8c 70       	andi	r24, 0x0C	; 12
    5d56:	81 f1       	breq	.+96     	; 0x5db8 <vfprintf+0x212>
    5d58:	66 20       	and	r6, r6
    5d5a:	11 f0       	breq	.+4      	; 0x5d60 <vfprintf+0x1ba>
    5d5c:	84 e0       	ldi	r24, 0x04	; 4
    5d5e:	01 c0       	rjmp	.+2      	; 0x5d62 <vfprintf+0x1bc>
    5d60:	83 e0       	ldi	r24, 0x03	; 3
    5d62:	85 15       	cp	r24, r5
    5d64:	10 f0       	brcs	.+4      	; 0x5d6a <vfprintf+0x1c4>
    5d66:	51 2c       	mov	r5, r1
    5d68:	0a c0       	rjmp	.+20     	; 0x5d7e <vfprintf+0x1d8>
    5d6a:	58 1a       	sub	r5, r24
    5d6c:	73 fc       	sbrc	r7, 3
    5d6e:	07 c0       	rjmp	.+14     	; 0x5d7e <vfprintf+0x1d8>
    5d70:	b7 01       	movw	r22, r14
    5d72:	80 e2       	ldi	r24, 0x20	; 32
    5d74:	90 e0       	ldi	r25, 0x00	; 0
    5d76:	cc d3       	rcall	.+1944   	; 0x6510 <fputc>
    5d78:	5a 94       	dec	r5
    5d7a:	d1 f7       	brne	.-12     	; 0x5d70 <vfprintf+0x1ca>
    5d7c:	f4 cf       	rjmp	.-24     	; 0x5d66 <vfprintf+0x1c0>
    5d7e:	66 20       	and	r6, r6
    5d80:	21 f0       	breq	.+8      	; 0x5d8a <vfprintf+0x1e4>
    5d82:	b7 01       	movw	r22, r14
    5d84:	86 2d       	mov	r24, r6
    5d86:	90 e0       	ldi	r25, 0x00	; 0
    5d88:	c3 d3       	rcall	.+1926   	; 0x6510 <fputc>
    5d8a:	03 fd       	sbrc	r16, 3
    5d8c:	03 c0       	rjmp	.+6      	; 0x5d94 <vfprintf+0x1ee>
    5d8e:	06 e4       	ldi	r16, 0x46	; 70
    5d90:	14 e0       	ldi	r17, 0x04	; 4
    5d92:	02 c0       	rjmp	.+4      	; 0x5d98 <vfprintf+0x1f2>
    5d94:	02 e4       	ldi	r16, 0x42	; 66
    5d96:	14 e0       	ldi	r17, 0x04	; 4
    5d98:	f7 2d       	mov	r31, r7
    5d9a:	f0 71       	andi	r31, 0x10	; 16
    5d9c:	7f 2e       	mov	r7, r31
    5d9e:	f8 01       	movw	r30, r16
    5da0:	84 91       	lpm	r24, Z
    5da2:	88 23       	and	r24, r24
    5da4:	09 f4       	brne	.+2      	; 0x5da8 <vfprintf+0x202>
    5da6:	5e c2       	rjmp	.+1212   	; 0x6264 <vfprintf+0x6be>
    5da8:	71 10       	cpse	r7, r1
    5daa:	80 52       	subi	r24, 0x20	; 32
    5dac:	b7 01       	movw	r22, r14
    5dae:	90 e0       	ldi	r25, 0x00	; 0
    5db0:	af d3       	rcall	.+1886   	; 0x6510 <fputc>
    5db2:	0f 5f       	subi	r16, 0xFF	; 255
    5db4:	1f 4f       	sbci	r17, 0xFF	; 255
    5db6:	f3 cf       	rjmp	.-26     	; 0x5d9e <vfprintf+0x1f8>
    5db8:	77 fe       	sbrs	r7, 7
    5dba:	0f c0       	rjmp	.+30     	; 0x5dda <vfprintf+0x234>
    5dbc:	4c 0c       	add	r4, r12
    5dbe:	04 ff       	sbrs	r16, 4
    5dc0:	04 c0       	rjmp	.+8      	; 0x5dca <vfprintf+0x224>
    5dc2:	8a 81       	ldd	r24, Y+2	; 0x02
    5dc4:	81 33       	cpi	r24, 0x31	; 49
    5dc6:	09 f4       	brne	.+2      	; 0x5dca <vfprintf+0x224>
    5dc8:	4a 94       	dec	r4
    5dca:	14 14       	cp	r1, r4
    5dcc:	74 f5       	brge	.+92     	; 0x5e2a <vfprintf+0x284>
    5dce:	f8 e0       	ldi	r31, 0x08	; 8
    5dd0:	f4 15       	cp	r31, r4
    5dd2:	78 f5       	brcc	.+94     	; 0x5e32 <vfprintf+0x28c>
    5dd4:	88 e0       	ldi	r24, 0x08	; 8
    5dd6:	48 2e       	mov	r4, r24
    5dd8:	2c c0       	rjmp	.+88     	; 0x5e32 <vfprintf+0x28c>
    5dda:	76 fc       	sbrc	r7, 6
    5ddc:	2a c0       	rjmp	.+84     	; 0x5e32 <vfprintf+0x28c>
    5dde:	81 2f       	mov	r24, r17
    5de0:	90 e0       	ldi	r25, 0x00	; 0
    5de2:	8c 15       	cp	r24, r12
    5de4:	9d 05       	cpc	r25, r13
    5de6:	9c f0       	brlt	.+38     	; 0x5e0e <vfprintf+0x268>
    5de8:	6c ef       	ldi	r22, 0xFC	; 252
    5dea:	c6 16       	cp	r12, r22
    5dec:	6f ef       	ldi	r22, 0xFF	; 255
    5dee:	d6 06       	cpc	r13, r22
    5df0:	74 f0       	brlt	.+28     	; 0x5e0e <vfprintf+0x268>
    5df2:	77 2d       	mov	r23, r7
    5df4:	70 68       	ori	r23, 0x80	; 128
    5df6:	77 2e       	mov	r7, r23
    5df8:	0a c0       	rjmp	.+20     	; 0x5e0e <vfprintf+0x268>
    5dfa:	e2 e0       	ldi	r30, 0x02	; 2
    5dfc:	f0 e0       	ldi	r31, 0x00	; 0
    5dfe:	ec 0f       	add	r30, r28
    5e00:	fd 1f       	adc	r31, r29
    5e02:	e1 0f       	add	r30, r17
    5e04:	f1 1d       	adc	r31, r1
    5e06:	80 81       	ld	r24, Z
    5e08:	80 33       	cpi	r24, 0x30	; 48
    5e0a:	19 f4       	brne	.+6      	; 0x5e12 <vfprintf+0x26c>
    5e0c:	11 50       	subi	r17, 0x01	; 1
    5e0e:	11 11       	cpse	r17, r1
    5e10:	f4 cf       	rjmp	.-24     	; 0x5dfa <vfprintf+0x254>
    5e12:	77 fe       	sbrs	r7, 7
    5e14:	0e c0       	rjmp	.+28     	; 0x5e32 <vfprintf+0x28c>
    5e16:	44 24       	eor	r4, r4
    5e18:	43 94       	inc	r4
    5e1a:	41 0e       	add	r4, r17
    5e1c:	81 2f       	mov	r24, r17
    5e1e:	90 e0       	ldi	r25, 0x00	; 0
    5e20:	c8 16       	cp	r12, r24
    5e22:	d9 06       	cpc	r13, r25
    5e24:	2c f4       	brge	.+10     	; 0x5e30 <vfprintf+0x28a>
    5e26:	1c 19       	sub	r17, r12
    5e28:	04 c0       	rjmp	.+8      	; 0x5e32 <vfprintf+0x28c>
    5e2a:	44 24       	eor	r4, r4
    5e2c:	43 94       	inc	r4
    5e2e:	01 c0       	rjmp	.+2      	; 0x5e32 <vfprintf+0x28c>
    5e30:	10 e0       	ldi	r17, 0x00	; 0
    5e32:	77 fe       	sbrs	r7, 7
    5e34:	07 c0       	rjmp	.+14     	; 0x5e44 <vfprintf+0x29e>
    5e36:	1c 14       	cp	r1, r12
    5e38:	1d 04       	cpc	r1, r13
    5e3a:	3c f4       	brge	.+14     	; 0x5e4a <vfprintf+0x2a4>
    5e3c:	96 01       	movw	r18, r12
    5e3e:	2f 5f       	subi	r18, 0xFF	; 255
    5e40:	3f 4f       	sbci	r19, 0xFF	; 255
    5e42:	05 c0       	rjmp	.+10     	; 0x5e4e <vfprintf+0x2a8>
    5e44:	25 e0       	ldi	r18, 0x05	; 5
    5e46:	30 e0       	ldi	r19, 0x00	; 0
    5e48:	02 c0       	rjmp	.+4      	; 0x5e4e <vfprintf+0x2a8>
    5e4a:	21 e0       	ldi	r18, 0x01	; 1
    5e4c:	30 e0       	ldi	r19, 0x00	; 0
    5e4e:	66 20       	and	r6, r6
    5e50:	11 f0       	breq	.+4      	; 0x5e56 <vfprintf+0x2b0>
    5e52:	2f 5f       	subi	r18, 0xFF	; 255
    5e54:	3f 4f       	sbci	r19, 0xFF	; 255
    5e56:	11 23       	and	r17, r17
    5e58:	31 f0       	breq	.+12     	; 0x5e66 <vfprintf+0x2c0>
    5e5a:	41 2f       	mov	r20, r17
    5e5c:	50 e0       	ldi	r21, 0x00	; 0
    5e5e:	4f 5f       	subi	r20, 0xFF	; 255
    5e60:	5f 4f       	sbci	r21, 0xFF	; 255
    5e62:	24 0f       	add	r18, r20
    5e64:	35 1f       	adc	r19, r21
    5e66:	45 2d       	mov	r20, r5
    5e68:	50 e0       	ldi	r21, 0x00	; 0
    5e6a:	24 17       	cp	r18, r20
    5e6c:	35 07       	cpc	r19, r21
    5e6e:	14 f4       	brge	.+4      	; 0x5e74 <vfprintf+0x2ce>
    5e70:	52 1a       	sub	r5, r18
    5e72:	01 c0       	rjmp	.+2      	; 0x5e76 <vfprintf+0x2d0>
    5e74:	51 2c       	mov	r5, r1
    5e76:	87 2d       	mov	r24, r7
    5e78:	89 70       	andi	r24, 0x09	; 9
    5e7a:	41 f4       	brne	.+16     	; 0x5e8c <vfprintf+0x2e6>
    5e7c:	55 20       	and	r5, r5
    5e7e:	31 f0       	breq	.+12     	; 0x5e8c <vfprintf+0x2e6>
    5e80:	b7 01       	movw	r22, r14
    5e82:	80 e2       	ldi	r24, 0x20	; 32
    5e84:	90 e0       	ldi	r25, 0x00	; 0
    5e86:	44 d3       	rcall	.+1672   	; 0x6510 <fputc>
    5e88:	5a 94       	dec	r5
    5e8a:	f8 cf       	rjmp	.-16     	; 0x5e7c <vfprintf+0x2d6>
    5e8c:	66 20       	and	r6, r6
    5e8e:	21 f0       	breq	.+8      	; 0x5e98 <vfprintf+0x2f2>
    5e90:	b7 01       	movw	r22, r14
    5e92:	86 2d       	mov	r24, r6
    5e94:	90 e0       	ldi	r25, 0x00	; 0
    5e96:	3c d3       	rcall	.+1656   	; 0x6510 <fputc>
    5e98:	73 fc       	sbrc	r7, 3
    5e9a:	08 c0       	rjmp	.+16     	; 0x5eac <vfprintf+0x306>
    5e9c:	55 20       	and	r5, r5
    5e9e:	31 f0       	breq	.+12     	; 0x5eac <vfprintf+0x306>
    5ea0:	b7 01       	movw	r22, r14
    5ea2:	80 e3       	ldi	r24, 0x30	; 48
    5ea4:	90 e0       	ldi	r25, 0x00	; 0
    5ea6:	34 d3       	rcall	.+1640   	; 0x6510 <fputc>
    5ea8:	5a 94       	dec	r5
    5eaa:	f8 cf       	rjmp	.-16     	; 0x5e9c <vfprintf+0x2f6>
    5eac:	77 fe       	sbrs	r7, 7
    5eae:	5d c0       	rjmp	.+186    	; 0x5f6a <vfprintf+0x3c4>
    5eb0:	9c 2d       	mov	r25, r12
    5eb2:	8d 2d       	mov	r24, r13
    5eb4:	d7 fe       	sbrs	r13, 7
    5eb6:	02 c0       	rjmp	.+4      	; 0x5ebc <vfprintf+0x316>
    5eb8:	90 e0       	ldi	r25, 0x00	; 0
    5eba:	80 e0       	ldi	r24, 0x00	; 0
    5ebc:	69 2e       	mov	r6, r25
    5ebe:	78 2e       	mov	r7, r24
    5ec0:	40 e0       	ldi	r20, 0x00	; 0
    5ec2:	50 e0       	ldi	r21, 0x00	; 0
    5ec4:	c6 01       	movw	r24, r12
    5ec6:	84 19       	sub	r24, r4
    5ec8:	91 09       	sbc	r25, r1
    5eca:	9d 87       	std	Y+13, r25	; 0x0d
    5ecc:	8c 87       	std	Y+12, r24	; 0x0c
    5ece:	96 01       	movw	r18, r12
    5ed0:	26 19       	sub	r18, r6
    5ed2:	37 09       	sbc	r19, r7
    5ed4:	28 0d       	add	r18, r8
    5ed6:	39 1d       	adc	r19, r9
    5ed8:	81 2f       	mov	r24, r17
    5eda:	90 e0       	ldi	r25, 0x00	; 0
    5edc:	ee 27       	eor	r30, r30
    5ede:	ff 27       	eor	r31, r31
    5ee0:	e8 1b       	sub	r30, r24
    5ee2:	f9 0b       	sbc	r31, r25
    5ee4:	ff 87       	std	Y+15, r31	; 0x0f
    5ee6:	ee 87       	std	Y+14, r30	; 0x0e
    5ee8:	ff ef       	ldi	r31, 0xFF	; 255
    5eea:	6f 16       	cp	r6, r31
    5eec:	7f 06       	cpc	r7, r31
    5eee:	61 f4       	brne	.+24     	; 0x5f08 <vfprintf+0x362>
    5ef0:	b7 01       	movw	r22, r14
    5ef2:	8e e2       	ldi	r24, 0x2E	; 46
    5ef4:	90 e0       	ldi	r25, 0x00	; 0
    5ef6:	2b 8b       	std	Y+19, r18	; 0x13
    5ef8:	3a 8b       	std	Y+18, r19	; 0x12
    5efa:	48 8b       	std	Y+16, r20	; 0x10
    5efc:	59 8b       	std	Y+17, r21	; 0x11
    5efe:	08 d3       	rcall	.+1552   	; 0x6510 <fputc>
    5f00:	59 89       	ldd	r21, Y+17	; 0x11
    5f02:	48 89       	ldd	r20, Y+16	; 0x10
    5f04:	3a 89       	ldd	r19, Y+18	; 0x12
    5f06:	2b 89       	ldd	r18, Y+19	; 0x13
    5f08:	c6 14       	cp	r12, r6
    5f0a:	d7 04       	cpc	r13, r7
    5f0c:	54 f0       	brlt	.+20     	; 0x5f22 <vfprintf+0x37c>
    5f0e:	6c 85       	ldd	r22, Y+12	; 0x0c
    5f10:	7d 85       	ldd	r23, Y+13	; 0x0d
    5f12:	66 15       	cp	r22, r6
    5f14:	77 05       	cpc	r23, r7
    5f16:	2c f4       	brge	.+10     	; 0x5f22 <vfprintf+0x37c>
    5f18:	f9 01       	movw	r30, r18
    5f1a:	e4 0f       	add	r30, r20
    5f1c:	f5 1f       	adc	r31, r21
    5f1e:	81 81       	ldd	r24, Z+1	; 0x01
    5f20:	01 c0       	rjmp	.+2      	; 0x5f24 <vfprintf+0x37e>
    5f22:	80 e3       	ldi	r24, 0x30	; 48
    5f24:	71 e0       	ldi	r23, 0x01	; 1
    5f26:	67 1a       	sub	r6, r23
    5f28:	71 08       	sbc	r7, r1
    5f2a:	4f 5f       	subi	r20, 0xFF	; 255
    5f2c:	5f 4f       	sbci	r21, 0xFF	; 255
    5f2e:	ee 85       	ldd	r30, Y+14	; 0x0e
    5f30:	ff 85       	ldd	r31, Y+15	; 0x0f
    5f32:	6e 16       	cp	r6, r30
    5f34:	7f 06       	cpc	r7, r31
    5f36:	64 f0       	brlt	.+24     	; 0x5f50 <vfprintf+0x3aa>
    5f38:	b7 01       	movw	r22, r14
    5f3a:	90 e0       	ldi	r25, 0x00	; 0
    5f3c:	2b 8b       	std	Y+19, r18	; 0x13
    5f3e:	3a 8b       	std	Y+18, r19	; 0x12
    5f40:	48 8b       	std	Y+16, r20	; 0x10
    5f42:	59 8b       	std	Y+17, r21	; 0x11
    5f44:	e5 d2       	rcall	.+1482   	; 0x6510 <fputc>
    5f46:	2b 89       	ldd	r18, Y+19	; 0x13
    5f48:	3a 89       	ldd	r19, Y+18	; 0x12
    5f4a:	48 89       	ldd	r20, Y+16	; 0x10
    5f4c:	59 89       	ldd	r21, Y+17	; 0x11
    5f4e:	cc cf       	rjmp	.-104    	; 0x5ee8 <vfprintf+0x342>
    5f50:	6c 14       	cp	r6, r12
    5f52:	7d 04       	cpc	r7, r13
    5f54:	39 f4       	brne	.+14     	; 0x5f64 <vfprintf+0x3be>
    5f56:	9a 81       	ldd	r25, Y+2	; 0x02
    5f58:	96 33       	cpi	r25, 0x36	; 54
    5f5a:	18 f4       	brcc	.+6      	; 0x5f62 <vfprintf+0x3bc>
    5f5c:	95 33       	cpi	r25, 0x35	; 53
    5f5e:	11 f4       	brne	.+4      	; 0x5f64 <vfprintf+0x3be>
    5f60:	04 ff       	sbrs	r16, 4
    5f62:	81 e3       	ldi	r24, 0x31	; 49
    5f64:	b7 01       	movw	r22, r14
    5f66:	90 e0       	ldi	r25, 0x00	; 0
    5f68:	45 c0       	rjmp	.+138    	; 0x5ff4 <vfprintf+0x44e>
    5f6a:	8a 81       	ldd	r24, Y+2	; 0x02
    5f6c:	81 33       	cpi	r24, 0x31	; 49
    5f6e:	09 f0       	breq	.+2      	; 0x5f72 <vfprintf+0x3cc>
    5f70:	0f 7e       	andi	r16, 0xEF	; 239
    5f72:	b7 01       	movw	r22, r14
    5f74:	90 e0       	ldi	r25, 0x00	; 0
    5f76:	cc d2       	rcall	.+1432   	; 0x6510 <fputc>
    5f78:	11 11       	cpse	r17, r1
    5f7a:	05 c0       	rjmp	.+10     	; 0x5f86 <vfprintf+0x3e0>
    5f7c:	74 fe       	sbrs	r7, 4
    5f7e:	16 c0       	rjmp	.+44     	; 0x5fac <vfprintf+0x406>
    5f80:	85 e4       	ldi	r24, 0x45	; 69
    5f82:	90 e0       	ldi	r25, 0x00	; 0
    5f84:	15 c0       	rjmp	.+42     	; 0x5fb0 <vfprintf+0x40a>
    5f86:	b7 01       	movw	r22, r14
    5f88:	8e e2       	ldi	r24, 0x2E	; 46
    5f8a:	90 e0       	ldi	r25, 0x00	; 0
    5f8c:	c1 d2       	rcall	.+1410   	; 0x6510 <fputc>
    5f8e:	82 e0       	ldi	r24, 0x02	; 2
    5f90:	66 24       	eor	r6, r6
    5f92:	63 94       	inc	r6
    5f94:	68 0e       	add	r6, r24
    5f96:	f4 01       	movw	r30, r8
    5f98:	e8 0f       	add	r30, r24
    5f9a:	f1 1d       	adc	r31, r1
    5f9c:	80 81       	ld	r24, Z
    5f9e:	b7 01       	movw	r22, r14
    5fa0:	90 e0       	ldi	r25, 0x00	; 0
    5fa2:	b6 d2       	rcall	.+1388   	; 0x6510 <fputc>
    5fa4:	11 50       	subi	r17, 0x01	; 1
    5fa6:	51 f3       	breq	.-44     	; 0x5f7c <vfprintf+0x3d6>
    5fa8:	86 2d       	mov	r24, r6
    5faa:	f2 cf       	rjmp	.-28     	; 0x5f90 <vfprintf+0x3ea>
    5fac:	85 e6       	ldi	r24, 0x65	; 101
    5fae:	90 e0       	ldi	r25, 0x00	; 0
    5fb0:	b7 01       	movw	r22, r14
    5fb2:	ae d2       	rcall	.+1372   	; 0x6510 <fputc>
    5fb4:	d7 fc       	sbrc	r13, 7
    5fb6:	05 c0       	rjmp	.+10     	; 0x5fc2 <vfprintf+0x41c>
    5fb8:	c1 14       	cp	r12, r1
    5fba:	d1 04       	cpc	r13, r1
    5fbc:	39 f4       	brne	.+14     	; 0x5fcc <vfprintf+0x426>
    5fbe:	04 ff       	sbrs	r16, 4
    5fc0:	05 c0       	rjmp	.+10     	; 0x5fcc <vfprintf+0x426>
    5fc2:	d1 94       	neg	r13
    5fc4:	c1 94       	neg	r12
    5fc6:	d1 08       	sbc	r13, r1
    5fc8:	8d e2       	ldi	r24, 0x2D	; 45
    5fca:	01 c0       	rjmp	.+2      	; 0x5fce <vfprintf+0x428>
    5fcc:	8b e2       	ldi	r24, 0x2B	; 43
    5fce:	b7 01       	movw	r22, r14
    5fd0:	90 e0       	ldi	r25, 0x00	; 0
    5fd2:	9e d2       	rcall	.+1340   	; 0x6510 <fputc>
    5fd4:	80 e3       	ldi	r24, 0x30	; 48
    5fd6:	6a e0       	ldi	r22, 0x0A	; 10
    5fd8:	c6 16       	cp	r12, r22
    5fda:	d1 04       	cpc	r13, r1
    5fdc:	2c f0       	brlt	.+10     	; 0x5fe8 <vfprintf+0x442>
    5fde:	8f 5f       	subi	r24, 0xFF	; 255
    5fe0:	fa e0       	ldi	r31, 0x0A	; 10
    5fe2:	cf 1a       	sub	r12, r31
    5fe4:	d1 08       	sbc	r13, r1
    5fe6:	f7 cf       	rjmp	.-18     	; 0x5fd6 <vfprintf+0x430>
    5fe8:	b7 01       	movw	r22, r14
    5fea:	90 e0       	ldi	r25, 0x00	; 0
    5fec:	91 d2       	rcall	.+1314   	; 0x6510 <fputc>
    5fee:	b7 01       	movw	r22, r14
    5ff0:	c6 01       	movw	r24, r12
    5ff2:	c0 96       	adiw	r24, 0x30	; 48
    5ff4:	8d d2       	rcall	.+1306   	; 0x6510 <fputc>
    5ff6:	36 c1       	rjmp	.+620    	; 0x6264 <vfprintf+0x6be>
    5ff8:	83 36       	cpi	r24, 0x63	; 99
    5ffa:	31 f0       	breq	.+12     	; 0x6008 <vfprintf+0x462>
    5ffc:	83 37       	cpi	r24, 0x73	; 115
    5ffe:	79 f0       	breq	.+30     	; 0x601e <vfprintf+0x478>
    6000:	83 35       	cpi	r24, 0x53	; 83
    6002:	09 f0       	breq	.+2      	; 0x6006 <vfprintf+0x460>
    6004:	54 c0       	rjmp	.+168    	; 0x60ae <vfprintf+0x508>
    6006:	20 c0       	rjmp	.+64     	; 0x6048 <vfprintf+0x4a2>
    6008:	56 01       	movw	r10, r12
    600a:	72 e0       	ldi	r23, 0x02	; 2
    600c:	a7 0e       	add	r10, r23
    600e:	b1 1c       	adc	r11, r1
    6010:	f6 01       	movw	r30, r12
    6012:	80 81       	ld	r24, Z
    6014:	89 83       	std	Y+1, r24	; 0x01
    6016:	01 e0       	ldi	r16, 0x01	; 1
    6018:	10 e0       	ldi	r17, 0x00	; 0
    601a:	64 01       	movw	r12, r8
    601c:	13 c0       	rjmp	.+38     	; 0x6044 <vfprintf+0x49e>
    601e:	56 01       	movw	r10, r12
    6020:	f2 e0       	ldi	r31, 0x02	; 2
    6022:	af 0e       	add	r10, r31
    6024:	b1 1c       	adc	r11, r1
    6026:	f6 01       	movw	r30, r12
    6028:	c0 80       	ld	r12, Z
    602a:	d1 80       	ldd	r13, Z+1	; 0x01
    602c:	26 ff       	sbrs	r18, 6
    602e:	03 c0       	rjmp	.+6      	; 0x6036 <vfprintf+0x490>
    6030:	61 2f       	mov	r22, r17
    6032:	70 e0       	ldi	r23, 0x00	; 0
    6034:	02 c0       	rjmp	.+4      	; 0x603a <vfprintf+0x494>
    6036:	6f ef       	ldi	r22, 0xFF	; 255
    6038:	7f ef       	ldi	r23, 0xFF	; 255
    603a:	c6 01       	movw	r24, r12
    603c:	2b 8b       	std	Y+19, r18	; 0x13
    603e:	5d d2       	rcall	.+1210   	; 0x64fa <strnlen>
    6040:	8c 01       	movw	r16, r24
    6042:	2b 89       	ldd	r18, Y+19	; 0x13
    6044:	2f 77       	andi	r18, 0x7F	; 127
    6046:	14 c0       	rjmp	.+40     	; 0x6070 <vfprintf+0x4ca>
    6048:	56 01       	movw	r10, r12
    604a:	f2 e0       	ldi	r31, 0x02	; 2
    604c:	af 0e       	add	r10, r31
    604e:	b1 1c       	adc	r11, r1
    6050:	f6 01       	movw	r30, r12
    6052:	c0 80       	ld	r12, Z
    6054:	d1 80       	ldd	r13, Z+1	; 0x01
    6056:	26 ff       	sbrs	r18, 6
    6058:	03 c0       	rjmp	.+6      	; 0x6060 <vfprintf+0x4ba>
    605a:	61 2f       	mov	r22, r17
    605c:	70 e0       	ldi	r23, 0x00	; 0
    605e:	02 c0       	rjmp	.+4      	; 0x6064 <vfprintf+0x4be>
    6060:	6f ef       	ldi	r22, 0xFF	; 255
    6062:	7f ef       	ldi	r23, 0xFF	; 255
    6064:	c6 01       	movw	r24, r12
    6066:	2b 8b       	std	Y+19, r18	; 0x13
    6068:	3d d2       	rcall	.+1146   	; 0x64e4 <strnlen_P>
    606a:	8c 01       	movw	r16, r24
    606c:	2b 89       	ldd	r18, Y+19	; 0x13
    606e:	20 68       	ori	r18, 0x80	; 128
    6070:	72 2e       	mov	r7, r18
    6072:	23 fd       	sbrc	r18, 3
    6074:	18 c0       	rjmp	.+48     	; 0x60a6 <vfprintf+0x500>
    6076:	85 2d       	mov	r24, r5
    6078:	90 e0       	ldi	r25, 0x00	; 0
    607a:	08 17       	cp	r16, r24
    607c:	19 07       	cpc	r17, r25
    607e:	98 f4       	brcc	.+38     	; 0x60a6 <vfprintf+0x500>
    6080:	b7 01       	movw	r22, r14
    6082:	80 e2       	ldi	r24, 0x20	; 32
    6084:	90 e0       	ldi	r25, 0x00	; 0
    6086:	44 d2       	rcall	.+1160   	; 0x6510 <fputc>
    6088:	5a 94       	dec	r5
    608a:	f5 cf       	rjmp	.-22     	; 0x6076 <vfprintf+0x4d0>
    608c:	f6 01       	movw	r30, r12
    608e:	77 fc       	sbrc	r7, 7
    6090:	85 91       	lpm	r24, Z+
    6092:	77 fe       	sbrs	r7, 7
    6094:	81 91       	ld	r24, Z+
    6096:	6f 01       	movw	r12, r30
    6098:	b7 01       	movw	r22, r14
    609a:	90 e0       	ldi	r25, 0x00	; 0
    609c:	39 d2       	rcall	.+1138   	; 0x6510 <fputc>
    609e:	51 10       	cpse	r5, r1
    60a0:	5a 94       	dec	r5
    60a2:	01 50       	subi	r16, 0x01	; 1
    60a4:	11 09       	sbc	r17, r1
    60a6:	01 15       	cp	r16, r1
    60a8:	11 05       	cpc	r17, r1
    60aa:	81 f7       	brne	.-32     	; 0x608c <vfprintf+0x4e6>
    60ac:	db c0       	rjmp	.+438    	; 0x6264 <vfprintf+0x6be>
    60ae:	84 36       	cpi	r24, 0x64	; 100
    60b0:	11 f0       	breq	.+4      	; 0x60b6 <vfprintf+0x510>
    60b2:	89 36       	cpi	r24, 0x69	; 105
    60b4:	49 f5       	brne	.+82     	; 0x6108 <vfprintf+0x562>
    60b6:	56 01       	movw	r10, r12
    60b8:	27 ff       	sbrs	r18, 7
    60ba:	09 c0       	rjmp	.+18     	; 0x60ce <vfprintf+0x528>
    60bc:	f4 e0       	ldi	r31, 0x04	; 4
    60be:	af 0e       	add	r10, r31
    60c0:	b1 1c       	adc	r11, r1
    60c2:	f6 01       	movw	r30, r12
    60c4:	60 81       	ld	r22, Z
    60c6:	71 81       	ldd	r23, Z+1	; 0x01
    60c8:	82 81       	ldd	r24, Z+2	; 0x02
    60ca:	93 81       	ldd	r25, Z+3	; 0x03
    60cc:	0a c0       	rjmp	.+20     	; 0x60e2 <vfprintf+0x53c>
    60ce:	f2 e0       	ldi	r31, 0x02	; 2
    60d0:	af 0e       	add	r10, r31
    60d2:	b1 1c       	adc	r11, r1
    60d4:	f6 01       	movw	r30, r12
    60d6:	60 81       	ld	r22, Z
    60d8:	71 81       	ldd	r23, Z+1	; 0x01
    60da:	88 27       	eor	r24, r24
    60dc:	77 fd       	sbrc	r23, 7
    60de:	80 95       	com	r24
    60e0:	98 2f       	mov	r25, r24
    60e2:	02 2f       	mov	r16, r18
    60e4:	0f 76       	andi	r16, 0x6F	; 111
    60e6:	97 ff       	sbrs	r25, 7
    60e8:	08 c0       	rjmp	.+16     	; 0x60fa <vfprintf+0x554>
    60ea:	90 95       	com	r25
    60ec:	80 95       	com	r24
    60ee:	70 95       	com	r23
    60f0:	61 95       	neg	r22
    60f2:	7f 4f       	sbci	r23, 0xFF	; 255
    60f4:	8f 4f       	sbci	r24, 0xFF	; 255
    60f6:	9f 4f       	sbci	r25, 0xFF	; 255
    60f8:	00 68       	ori	r16, 0x80	; 128
    60fa:	2a e0       	ldi	r18, 0x0A	; 10
    60fc:	30 e0       	ldi	r19, 0x00	; 0
    60fe:	a4 01       	movw	r20, r8
    6100:	67 d2       	rcall	.+1230   	; 0x65d0 <__ultoa_invert>
    6102:	c8 2e       	mov	r12, r24
    6104:	c8 18       	sub	r12, r8
    6106:	3d c0       	rjmp	.+122    	; 0x6182 <vfprintf+0x5dc>
    6108:	02 2f       	mov	r16, r18
    610a:	85 37       	cpi	r24, 0x75	; 117
    610c:	21 f4       	brne	.+8      	; 0x6116 <vfprintf+0x570>
    610e:	0f 7e       	andi	r16, 0xEF	; 239
    6110:	2a e0       	ldi	r18, 0x0A	; 10
    6112:	30 e0       	ldi	r19, 0x00	; 0
    6114:	1d c0       	rjmp	.+58     	; 0x6150 <vfprintf+0x5aa>
    6116:	09 7f       	andi	r16, 0xF9	; 249
    6118:	8f 36       	cpi	r24, 0x6F	; 111
    611a:	91 f0       	breq	.+36     	; 0x6140 <vfprintf+0x59a>
    611c:	18 f4       	brcc	.+6      	; 0x6124 <vfprintf+0x57e>
    611e:	88 35       	cpi	r24, 0x58	; 88
    6120:	59 f0       	breq	.+22     	; 0x6138 <vfprintf+0x592>
    6122:	a9 c0       	rjmp	.+338    	; 0x6276 <vfprintf+0x6d0>
    6124:	80 37       	cpi	r24, 0x70	; 112
    6126:	19 f0       	breq	.+6      	; 0x612e <vfprintf+0x588>
    6128:	88 37       	cpi	r24, 0x78	; 120
    612a:	11 f0       	breq	.+4      	; 0x6130 <vfprintf+0x58a>
    612c:	a4 c0       	rjmp	.+328    	; 0x6276 <vfprintf+0x6d0>
    612e:	00 61       	ori	r16, 0x10	; 16
    6130:	04 ff       	sbrs	r16, 4
    6132:	09 c0       	rjmp	.+18     	; 0x6146 <vfprintf+0x5a0>
    6134:	04 60       	ori	r16, 0x04	; 4
    6136:	07 c0       	rjmp	.+14     	; 0x6146 <vfprintf+0x5a0>
    6138:	24 ff       	sbrs	r18, 4
    613a:	08 c0       	rjmp	.+16     	; 0x614c <vfprintf+0x5a6>
    613c:	06 60       	ori	r16, 0x06	; 6
    613e:	06 c0       	rjmp	.+12     	; 0x614c <vfprintf+0x5a6>
    6140:	28 e0       	ldi	r18, 0x08	; 8
    6142:	30 e0       	ldi	r19, 0x00	; 0
    6144:	05 c0       	rjmp	.+10     	; 0x6150 <vfprintf+0x5aa>
    6146:	20 e1       	ldi	r18, 0x10	; 16
    6148:	30 e0       	ldi	r19, 0x00	; 0
    614a:	02 c0       	rjmp	.+4      	; 0x6150 <vfprintf+0x5aa>
    614c:	20 e1       	ldi	r18, 0x10	; 16
    614e:	32 e0       	ldi	r19, 0x02	; 2
    6150:	56 01       	movw	r10, r12
    6152:	07 ff       	sbrs	r16, 7
    6154:	09 c0       	rjmp	.+18     	; 0x6168 <vfprintf+0x5c2>
    6156:	f4 e0       	ldi	r31, 0x04	; 4
    6158:	af 0e       	add	r10, r31
    615a:	b1 1c       	adc	r11, r1
    615c:	f6 01       	movw	r30, r12
    615e:	60 81       	ld	r22, Z
    6160:	71 81       	ldd	r23, Z+1	; 0x01
    6162:	82 81       	ldd	r24, Z+2	; 0x02
    6164:	93 81       	ldd	r25, Z+3	; 0x03
    6166:	08 c0       	rjmp	.+16     	; 0x6178 <vfprintf+0x5d2>
    6168:	f2 e0       	ldi	r31, 0x02	; 2
    616a:	af 0e       	add	r10, r31
    616c:	b1 1c       	adc	r11, r1
    616e:	f6 01       	movw	r30, r12
    6170:	60 81       	ld	r22, Z
    6172:	71 81       	ldd	r23, Z+1	; 0x01
    6174:	80 e0       	ldi	r24, 0x00	; 0
    6176:	90 e0       	ldi	r25, 0x00	; 0
    6178:	a4 01       	movw	r20, r8
    617a:	2a d2       	rcall	.+1108   	; 0x65d0 <__ultoa_invert>
    617c:	c8 2e       	mov	r12, r24
    617e:	c8 18       	sub	r12, r8
    6180:	0f 77       	andi	r16, 0x7F	; 127
    6182:	06 ff       	sbrs	r16, 6
    6184:	0b c0       	rjmp	.+22     	; 0x619c <vfprintf+0x5f6>
    6186:	20 2f       	mov	r18, r16
    6188:	2e 7f       	andi	r18, 0xFE	; 254
    618a:	c1 16       	cp	r12, r17
    618c:	50 f4       	brcc	.+20     	; 0x61a2 <vfprintf+0x5fc>
    618e:	04 ff       	sbrs	r16, 4
    6190:	0a c0       	rjmp	.+20     	; 0x61a6 <vfprintf+0x600>
    6192:	02 fd       	sbrc	r16, 2
    6194:	08 c0       	rjmp	.+16     	; 0x61a6 <vfprintf+0x600>
    6196:	20 2f       	mov	r18, r16
    6198:	2e 7e       	andi	r18, 0xEE	; 238
    619a:	05 c0       	rjmp	.+10     	; 0x61a6 <vfprintf+0x600>
    619c:	dc 2c       	mov	r13, r12
    619e:	20 2f       	mov	r18, r16
    61a0:	03 c0       	rjmp	.+6      	; 0x61a8 <vfprintf+0x602>
    61a2:	dc 2c       	mov	r13, r12
    61a4:	01 c0       	rjmp	.+2      	; 0x61a8 <vfprintf+0x602>
    61a6:	d1 2e       	mov	r13, r17
    61a8:	24 ff       	sbrs	r18, 4
    61aa:	0d c0       	rjmp	.+26     	; 0x61c6 <vfprintf+0x620>
    61ac:	fe 01       	movw	r30, r28
    61ae:	ec 0d       	add	r30, r12
    61b0:	f1 1d       	adc	r31, r1
    61b2:	80 81       	ld	r24, Z
    61b4:	80 33       	cpi	r24, 0x30	; 48
    61b6:	11 f4       	brne	.+4      	; 0x61bc <vfprintf+0x616>
    61b8:	29 7e       	andi	r18, 0xE9	; 233
    61ba:	09 c0       	rjmp	.+18     	; 0x61ce <vfprintf+0x628>
    61bc:	22 ff       	sbrs	r18, 2
    61be:	06 c0       	rjmp	.+12     	; 0x61cc <vfprintf+0x626>
    61c0:	d3 94       	inc	r13
    61c2:	d3 94       	inc	r13
    61c4:	04 c0       	rjmp	.+8      	; 0x61ce <vfprintf+0x628>
    61c6:	82 2f       	mov	r24, r18
    61c8:	86 78       	andi	r24, 0x86	; 134
    61ca:	09 f0       	breq	.+2      	; 0x61ce <vfprintf+0x628>
    61cc:	d3 94       	inc	r13
    61ce:	23 fd       	sbrc	r18, 3
    61d0:	12 c0       	rjmp	.+36     	; 0x61f6 <vfprintf+0x650>
    61d2:	20 ff       	sbrs	r18, 0
    61d4:	06 c0       	rjmp	.+12     	; 0x61e2 <vfprintf+0x63c>
    61d6:	1c 2d       	mov	r17, r12
    61d8:	d5 14       	cp	r13, r5
    61da:	18 f4       	brcc	.+6      	; 0x61e2 <vfprintf+0x63c>
    61dc:	15 0d       	add	r17, r5
    61de:	1d 19       	sub	r17, r13
    61e0:	d5 2c       	mov	r13, r5
    61e2:	d5 14       	cp	r13, r5
    61e4:	60 f4       	brcc	.+24     	; 0x61fe <vfprintf+0x658>
    61e6:	b7 01       	movw	r22, r14
    61e8:	80 e2       	ldi	r24, 0x20	; 32
    61ea:	90 e0       	ldi	r25, 0x00	; 0
    61ec:	2b 8b       	std	Y+19, r18	; 0x13
    61ee:	90 d1       	rcall	.+800    	; 0x6510 <fputc>
    61f0:	d3 94       	inc	r13
    61f2:	2b 89       	ldd	r18, Y+19	; 0x13
    61f4:	f6 cf       	rjmp	.-20     	; 0x61e2 <vfprintf+0x63c>
    61f6:	d5 14       	cp	r13, r5
    61f8:	10 f4       	brcc	.+4      	; 0x61fe <vfprintf+0x658>
    61fa:	5d 18       	sub	r5, r13
    61fc:	01 c0       	rjmp	.+2      	; 0x6200 <vfprintf+0x65a>
    61fe:	51 2c       	mov	r5, r1
    6200:	24 ff       	sbrs	r18, 4
    6202:	11 c0       	rjmp	.+34     	; 0x6226 <vfprintf+0x680>
    6204:	b7 01       	movw	r22, r14
    6206:	80 e3       	ldi	r24, 0x30	; 48
    6208:	90 e0       	ldi	r25, 0x00	; 0
    620a:	2b 8b       	std	Y+19, r18	; 0x13
    620c:	81 d1       	rcall	.+770    	; 0x6510 <fputc>
    620e:	2b 89       	ldd	r18, Y+19	; 0x13
    6210:	22 ff       	sbrs	r18, 2
    6212:	16 c0       	rjmp	.+44     	; 0x6240 <vfprintf+0x69a>
    6214:	21 ff       	sbrs	r18, 1
    6216:	03 c0       	rjmp	.+6      	; 0x621e <vfprintf+0x678>
    6218:	88 e5       	ldi	r24, 0x58	; 88
    621a:	90 e0       	ldi	r25, 0x00	; 0
    621c:	02 c0       	rjmp	.+4      	; 0x6222 <vfprintf+0x67c>
    621e:	88 e7       	ldi	r24, 0x78	; 120
    6220:	90 e0       	ldi	r25, 0x00	; 0
    6222:	b7 01       	movw	r22, r14
    6224:	0c c0       	rjmp	.+24     	; 0x623e <vfprintf+0x698>
    6226:	82 2f       	mov	r24, r18
    6228:	86 78       	andi	r24, 0x86	; 134
    622a:	51 f0       	breq	.+20     	; 0x6240 <vfprintf+0x69a>
    622c:	21 fd       	sbrc	r18, 1
    622e:	02 c0       	rjmp	.+4      	; 0x6234 <vfprintf+0x68e>
    6230:	80 e2       	ldi	r24, 0x20	; 32
    6232:	01 c0       	rjmp	.+2      	; 0x6236 <vfprintf+0x690>
    6234:	8b e2       	ldi	r24, 0x2B	; 43
    6236:	27 fd       	sbrc	r18, 7
    6238:	8d e2       	ldi	r24, 0x2D	; 45
    623a:	b7 01       	movw	r22, r14
    623c:	90 e0       	ldi	r25, 0x00	; 0
    623e:	68 d1       	rcall	.+720    	; 0x6510 <fputc>
    6240:	c1 16       	cp	r12, r17
    6242:	30 f4       	brcc	.+12     	; 0x6250 <vfprintf+0x6aa>
    6244:	b7 01       	movw	r22, r14
    6246:	80 e3       	ldi	r24, 0x30	; 48
    6248:	90 e0       	ldi	r25, 0x00	; 0
    624a:	62 d1       	rcall	.+708    	; 0x6510 <fputc>
    624c:	11 50       	subi	r17, 0x01	; 1
    624e:	f8 cf       	rjmp	.-16     	; 0x6240 <vfprintf+0x69a>
    6250:	ca 94       	dec	r12
    6252:	f4 01       	movw	r30, r8
    6254:	ec 0d       	add	r30, r12
    6256:	f1 1d       	adc	r31, r1
    6258:	80 81       	ld	r24, Z
    625a:	b7 01       	movw	r22, r14
    625c:	90 e0       	ldi	r25, 0x00	; 0
    625e:	58 d1       	rcall	.+688    	; 0x6510 <fputc>
    6260:	c1 10       	cpse	r12, r1
    6262:	f6 cf       	rjmp	.-20     	; 0x6250 <vfprintf+0x6aa>
    6264:	55 20       	and	r5, r5
    6266:	09 f4       	brne	.+2      	; 0x626a <vfprintf+0x6c4>
    6268:	dd cc       	rjmp	.-1606   	; 0x5c24 <vfprintf+0x7e>
    626a:	b7 01       	movw	r22, r14
    626c:	80 e2       	ldi	r24, 0x20	; 32
    626e:	90 e0       	ldi	r25, 0x00	; 0
    6270:	4f d1       	rcall	.+670    	; 0x6510 <fputc>
    6272:	5a 94       	dec	r5
    6274:	f7 cf       	rjmp	.-18     	; 0x6264 <vfprintf+0x6be>
    6276:	f7 01       	movw	r30, r14
    6278:	86 81       	ldd	r24, Z+6	; 0x06
    627a:	97 81       	ldd	r25, Z+7	; 0x07
    627c:	02 c0       	rjmp	.+4      	; 0x6282 <vfprintf+0x6dc>
    627e:	8f ef       	ldi	r24, 0xFF	; 255
    6280:	9f ef       	ldi	r25, 0xFF	; 255
    6282:	63 96       	adiw	r28, 0x13	; 19
    6284:	0f b6       	in	r0, 0x3f	; 63
    6286:	f8 94       	cli
    6288:	de bf       	out	0x3e, r29	; 62
    628a:	0f be       	out	0x3f, r0	; 63
    628c:	cd bf       	out	0x3d, r28	; 61
    628e:	df 91       	pop	r29
    6290:	cf 91       	pop	r28
    6292:	1f 91       	pop	r17
    6294:	0f 91       	pop	r16
    6296:	ff 90       	pop	r15
    6298:	ef 90       	pop	r14
    629a:	df 90       	pop	r13
    629c:	cf 90       	pop	r12
    629e:	bf 90       	pop	r11
    62a0:	af 90       	pop	r10
    62a2:	9f 90       	pop	r9
    62a4:	8f 90       	pop	r8
    62a6:	7f 90       	pop	r7
    62a8:	6f 90       	pop	r6
    62aa:	5f 90       	pop	r5
    62ac:	4f 90       	pop	r4
    62ae:	3f 90       	pop	r3
    62b0:	2f 90       	pop	r2
    62b2:	08 95       	ret

000062b4 <__udivmodhi4>:
    62b4:	aa 1b       	sub	r26, r26
    62b6:	bb 1b       	sub	r27, r27
    62b8:	51 e1       	ldi	r21, 0x11	; 17
    62ba:	07 c0       	rjmp	.+14     	; 0x62ca <__udivmodhi4_ep>

000062bc <__udivmodhi4_loop>:
    62bc:	aa 1f       	adc	r26, r26
    62be:	bb 1f       	adc	r27, r27
    62c0:	a6 17       	cp	r26, r22
    62c2:	b7 07       	cpc	r27, r23
    62c4:	10 f0       	brcs	.+4      	; 0x62ca <__udivmodhi4_ep>
    62c6:	a6 1b       	sub	r26, r22
    62c8:	b7 0b       	sbc	r27, r23

000062ca <__udivmodhi4_ep>:
    62ca:	88 1f       	adc	r24, r24
    62cc:	99 1f       	adc	r25, r25
    62ce:	5a 95       	dec	r21
    62d0:	a9 f7       	brne	.-22     	; 0x62bc <__udivmodhi4_loop>
    62d2:	80 95       	com	r24
    62d4:	90 95       	com	r25
    62d6:	bc 01       	movw	r22, r24
    62d8:	cd 01       	movw	r24, r26
    62da:	08 95       	ret

000062dc <__divmodhi4>:
    62dc:	97 fb       	bst	r25, 7
    62de:	07 2e       	mov	r0, r23
    62e0:	16 f4       	brtc	.+4      	; 0x62e6 <__divmodhi4+0xa>
    62e2:	00 94       	com	r0
    62e4:	06 d0       	rcall	.+12     	; 0x62f2 <__divmodhi4_neg1>
    62e6:	77 fd       	sbrc	r23, 7
    62e8:	08 d0       	rcall	.+16     	; 0x62fa <__divmodhi4_neg2>
    62ea:	e4 df       	rcall	.-56     	; 0x62b4 <__udivmodhi4>
    62ec:	07 fc       	sbrc	r0, 7
    62ee:	05 d0       	rcall	.+10     	; 0x62fa <__divmodhi4_neg2>
    62f0:	3e f4       	brtc	.+14     	; 0x6300 <__divmodhi4_exit>

000062f2 <__divmodhi4_neg1>:
    62f2:	90 95       	com	r25
    62f4:	81 95       	neg	r24
    62f6:	9f 4f       	sbci	r25, 0xFF	; 255
    62f8:	08 95       	ret

000062fa <__divmodhi4_neg2>:
    62fa:	70 95       	com	r23
    62fc:	61 95       	neg	r22
    62fe:	7f 4f       	sbci	r23, 0xFF	; 255

00006300 <__divmodhi4_exit>:
    6300:	08 95       	ret

00006302 <__tablejump2__>:
    6302:	ee 0f       	add	r30, r30
    6304:	ff 1f       	adc	r31, r31

00006306 <__tablejump__>:
    6306:	05 90       	lpm	r0, Z+
    6308:	f4 91       	lpm	r31, Z
    630a:	e0 2d       	mov	r30, r0
    630c:	09 94       	ijmp

0000630e <__umulhisi3>:
    630e:	a2 9f       	mul	r26, r18
    6310:	b0 01       	movw	r22, r0
    6312:	b3 9f       	mul	r27, r19
    6314:	c0 01       	movw	r24, r0
    6316:	a3 9f       	mul	r26, r19
    6318:	70 0d       	add	r23, r0
    631a:	81 1d       	adc	r24, r1
    631c:	11 24       	eor	r1, r1
    631e:	91 1d       	adc	r25, r1
    6320:	b2 9f       	mul	r27, r18
    6322:	70 0d       	add	r23, r0
    6324:	81 1d       	adc	r24, r1
    6326:	11 24       	eor	r1, r1
    6328:	91 1d       	adc	r25, r1
    632a:	08 95       	ret

0000632c <__tablejump_elpm__>:
    632c:	07 90       	elpm	r0, Z+
    632e:	f6 91       	elpm	r31, Z
    6330:	e0 2d       	mov	r30, r0
    6332:	09 94       	ijmp

00006334 <__ftoa_engine>:
    6334:	28 30       	cpi	r18, 0x08	; 8
    6336:	08 f0       	brcs	.+2      	; 0x633a <__ftoa_engine+0x6>
    6338:	27 e0       	ldi	r18, 0x07	; 7
    633a:	33 27       	eor	r19, r19
    633c:	da 01       	movw	r26, r20
    633e:	99 0f       	add	r25, r25
    6340:	31 1d       	adc	r19, r1
    6342:	87 fd       	sbrc	r24, 7
    6344:	91 60       	ori	r25, 0x01	; 1
    6346:	00 96       	adiw	r24, 0x00	; 0
    6348:	61 05       	cpc	r22, r1
    634a:	71 05       	cpc	r23, r1
    634c:	39 f4       	brne	.+14     	; 0x635c <__ftoa_engine+0x28>
    634e:	32 60       	ori	r19, 0x02	; 2
    6350:	2e 5f       	subi	r18, 0xFE	; 254
    6352:	3d 93       	st	X+, r19
    6354:	30 e3       	ldi	r19, 0x30	; 48
    6356:	2a 95       	dec	r18
    6358:	e1 f7       	brne	.-8      	; 0x6352 <__ftoa_engine+0x1e>
    635a:	08 95       	ret
    635c:	9f 3f       	cpi	r25, 0xFF	; 255
    635e:	30 f0       	brcs	.+12     	; 0x636c <__ftoa_engine+0x38>
    6360:	80 38       	cpi	r24, 0x80	; 128
    6362:	71 05       	cpc	r23, r1
    6364:	61 05       	cpc	r22, r1
    6366:	09 f0       	breq	.+2      	; 0x636a <__ftoa_engine+0x36>
    6368:	3c 5f       	subi	r19, 0xFC	; 252
    636a:	3c 5f       	subi	r19, 0xFC	; 252
    636c:	3d 93       	st	X+, r19
    636e:	91 30       	cpi	r25, 0x01	; 1
    6370:	08 f0       	brcs	.+2      	; 0x6374 <__ftoa_engine+0x40>
    6372:	80 68       	ori	r24, 0x80	; 128
    6374:	91 1d       	adc	r25, r1
    6376:	df 93       	push	r29
    6378:	cf 93       	push	r28
    637a:	1f 93       	push	r17
    637c:	0f 93       	push	r16
    637e:	ff 92       	push	r15
    6380:	ef 92       	push	r14
    6382:	19 2f       	mov	r17, r25
    6384:	98 7f       	andi	r25, 0xF8	; 248
    6386:	96 95       	lsr	r25
    6388:	e9 2f       	mov	r30, r25
    638a:	96 95       	lsr	r25
    638c:	96 95       	lsr	r25
    638e:	e9 0f       	add	r30, r25
    6390:	ff 27       	eor	r31, r31
    6392:	ec 55       	subi	r30, 0x5C	; 92
    6394:	fb 4f       	sbci	r31, 0xFB	; 251
    6396:	99 27       	eor	r25, r25
    6398:	33 27       	eor	r19, r19
    639a:	ee 24       	eor	r14, r14
    639c:	ff 24       	eor	r15, r15
    639e:	a7 01       	movw	r20, r14
    63a0:	e7 01       	movw	r28, r14
    63a2:	05 90       	lpm	r0, Z+
    63a4:	08 94       	sec
    63a6:	07 94       	ror	r0
    63a8:	28 f4       	brcc	.+10     	; 0x63b4 <__ftoa_engine+0x80>
    63aa:	36 0f       	add	r19, r22
    63ac:	e7 1e       	adc	r14, r23
    63ae:	f8 1e       	adc	r15, r24
    63b0:	49 1f       	adc	r20, r25
    63b2:	51 1d       	adc	r21, r1
    63b4:	66 0f       	add	r22, r22
    63b6:	77 1f       	adc	r23, r23
    63b8:	88 1f       	adc	r24, r24
    63ba:	99 1f       	adc	r25, r25
    63bc:	06 94       	lsr	r0
    63be:	a1 f7       	brne	.-24     	; 0x63a8 <__ftoa_engine+0x74>
    63c0:	05 90       	lpm	r0, Z+
    63c2:	07 94       	ror	r0
    63c4:	28 f4       	brcc	.+10     	; 0x63d0 <__ftoa_engine+0x9c>
    63c6:	e7 0e       	add	r14, r23
    63c8:	f8 1e       	adc	r15, r24
    63ca:	49 1f       	adc	r20, r25
    63cc:	56 1f       	adc	r21, r22
    63ce:	c1 1d       	adc	r28, r1
    63d0:	77 0f       	add	r23, r23
    63d2:	88 1f       	adc	r24, r24
    63d4:	99 1f       	adc	r25, r25
    63d6:	66 1f       	adc	r22, r22
    63d8:	06 94       	lsr	r0
    63da:	a1 f7       	brne	.-24     	; 0x63c4 <__ftoa_engine+0x90>
    63dc:	05 90       	lpm	r0, Z+
    63de:	07 94       	ror	r0
    63e0:	28 f4       	brcc	.+10     	; 0x63ec <__ftoa_engine+0xb8>
    63e2:	f8 0e       	add	r15, r24
    63e4:	49 1f       	adc	r20, r25
    63e6:	56 1f       	adc	r21, r22
    63e8:	c7 1f       	adc	r28, r23
    63ea:	d1 1d       	adc	r29, r1
    63ec:	88 0f       	add	r24, r24
    63ee:	99 1f       	adc	r25, r25
    63f0:	66 1f       	adc	r22, r22
    63f2:	77 1f       	adc	r23, r23
    63f4:	06 94       	lsr	r0
    63f6:	a1 f7       	brne	.-24     	; 0x63e0 <__ftoa_engine+0xac>
    63f8:	05 90       	lpm	r0, Z+
    63fa:	07 94       	ror	r0
    63fc:	20 f4       	brcc	.+8      	; 0x6406 <__ftoa_engine+0xd2>
    63fe:	49 0f       	add	r20, r25
    6400:	56 1f       	adc	r21, r22
    6402:	c7 1f       	adc	r28, r23
    6404:	d8 1f       	adc	r29, r24
    6406:	99 0f       	add	r25, r25
    6408:	66 1f       	adc	r22, r22
    640a:	77 1f       	adc	r23, r23
    640c:	88 1f       	adc	r24, r24
    640e:	06 94       	lsr	r0
    6410:	a9 f7       	brne	.-22     	; 0x63fc <__ftoa_engine+0xc8>
    6412:	84 91       	lpm	r24, Z
    6414:	10 95       	com	r17
    6416:	17 70       	andi	r17, 0x07	; 7
    6418:	41 f0       	breq	.+16     	; 0x642a <__ftoa_engine+0xf6>
    641a:	d6 95       	lsr	r29
    641c:	c7 95       	ror	r28
    641e:	57 95       	ror	r21
    6420:	47 95       	ror	r20
    6422:	f7 94       	ror	r15
    6424:	e7 94       	ror	r14
    6426:	1a 95       	dec	r17
    6428:	c1 f7       	brne	.-16     	; 0x641a <__ftoa_engine+0xe6>
    642a:	ea e4       	ldi	r30, 0x4A	; 74
    642c:	f4 e0       	ldi	r31, 0x04	; 4
    642e:	68 94       	set
    6430:	15 90       	lpm	r1, Z+
    6432:	15 91       	lpm	r17, Z+
    6434:	35 91       	lpm	r19, Z+
    6436:	65 91       	lpm	r22, Z+
    6438:	95 91       	lpm	r25, Z+
    643a:	05 90       	lpm	r0, Z+
    643c:	7f e2       	ldi	r23, 0x2F	; 47
    643e:	73 95       	inc	r23
    6440:	e1 18       	sub	r14, r1
    6442:	f1 0a       	sbc	r15, r17
    6444:	43 0b       	sbc	r20, r19
    6446:	56 0b       	sbc	r21, r22
    6448:	c9 0b       	sbc	r28, r25
    644a:	d0 09       	sbc	r29, r0
    644c:	c0 f7       	brcc	.-16     	; 0x643e <__ftoa_engine+0x10a>
    644e:	e1 0c       	add	r14, r1
    6450:	f1 1e       	adc	r15, r17
    6452:	43 1f       	adc	r20, r19
    6454:	56 1f       	adc	r21, r22
    6456:	c9 1f       	adc	r28, r25
    6458:	d0 1d       	adc	r29, r0
    645a:	7e f4       	brtc	.+30     	; 0x647a <__ftoa_engine+0x146>
    645c:	70 33       	cpi	r23, 0x30	; 48
    645e:	11 f4       	brne	.+4      	; 0x6464 <__ftoa_engine+0x130>
    6460:	8a 95       	dec	r24
    6462:	e6 cf       	rjmp	.-52     	; 0x6430 <__ftoa_engine+0xfc>
    6464:	e8 94       	clt
    6466:	01 50       	subi	r16, 0x01	; 1
    6468:	30 f0       	brcs	.+12     	; 0x6476 <__ftoa_engine+0x142>
    646a:	08 0f       	add	r16, r24
    646c:	0a f4       	brpl	.+2      	; 0x6470 <__ftoa_engine+0x13c>
    646e:	00 27       	eor	r16, r16
    6470:	02 17       	cp	r16, r18
    6472:	08 f4       	brcc	.+2      	; 0x6476 <__ftoa_engine+0x142>
    6474:	20 2f       	mov	r18, r16
    6476:	23 95       	inc	r18
    6478:	02 2f       	mov	r16, r18
    647a:	7a 33       	cpi	r23, 0x3A	; 58
    647c:	28 f0       	brcs	.+10     	; 0x6488 <__ftoa_engine+0x154>
    647e:	79 e3       	ldi	r23, 0x39	; 57
    6480:	7d 93       	st	X+, r23
    6482:	2a 95       	dec	r18
    6484:	e9 f7       	brne	.-6      	; 0x6480 <__ftoa_engine+0x14c>
    6486:	10 c0       	rjmp	.+32     	; 0x64a8 <__ftoa_engine+0x174>
    6488:	7d 93       	st	X+, r23
    648a:	2a 95       	dec	r18
    648c:	89 f6       	brne	.-94     	; 0x6430 <__ftoa_engine+0xfc>
    648e:	06 94       	lsr	r0
    6490:	97 95       	ror	r25
    6492:	67 95       	ror	r22
    6494:	37 95       	ror	r19
    6496:	17 95       	ror	r17
    6498:	17 94       	ror	r1
    649a:	e1 18       	sub	r14, r1
    649c:	f1 0a       	sbc	r15, r17
    649e:	43 0b       	sbc	r20, r19
    64a0:	56 0b       	sbc	r21, r22
    64a2:	c9 0b       	sbc	r28, r25
    64a4:	d0 09       	sbc	r29, r0
    64a6:	98 f0       	brcs	.+38     	; 0x64ce <__ftoa_engine+0x19a>
    64a8:	23 95       	inc	r18
    64aa:	7e 91       	ld	r23, -X
    64ac:	73 95       	inc	r23
    64ae:	7a 33       	cpi	r23, 0x3A	; 58
    64b0:	08 f0       	brcs	.+2      	; 0x64b4 <__ftoa_engine+0x180>
    64b2:	70 e3       	ldi	r23, 0x30	; 48
    64b4:	7c 93       	st	X, r23
    64b6:	20 13       	cpse	r18, r16
    64b8:	b8 f7       	brcc	.-18     	; 0x64a8 <__ftoa_engine+0x174>
    64ba:	7e 91       	ld	r23, -X
    64bc:	70 61       	ori	r23, 0x10	; 16
    64be:	7d 93       	st	X+, r23
    64c0:	30 f0       	brcs	.+12     	; 0x64ce <__ftoa_engine+0x19a>
    64c2:	83 95       	inc	r24
    64c4:	71 e3       	ldi	r23, 0x31	; 49
    64c6:	7d 93       	st	X+, r23
    64c8:	70 e3       	ldi	r23, 0x30	; 48
    64ca:	2a 95       	dec	r18
    64cc:	e1 f7       	brne	.-8      	; 0x64c6 <__ftoa_engine+0x192>
    64ce:	11 24       	eor	r1, r1
    64d0:	ef 90       	pop	r14
    64d2:	ff 90       	pop	r15
    64d4:	0f 91       	pop	r16
    64d6:	1f 91       	pop	r17
    64d8:	cf 91       	pop	r28
    64da:	df 91       	pop	r29
    64dc:	99 27       	eor	r25, r25
    64de:	87 fd       	sbrc	r24, 7
    64e0:	90 95       	com	r25
    64e2:	08 95       	ret

000064e4 <strnlen_P>:
    64e4:	fc 01       	movw	r30, r24
    64e6:	05 90       	lpm	r0, Z+
    64e8:	61 50       	subi	r22, 0x01	; 1
    64ea:	70 40       	sbci	r23, 0x00	; 0
    64ec:	01 10       	cpse	r0, r1
    64ee:	d8 f7       	brcc	.-10     	; 0x64e6 <strnlen_P+0x2>
    64f0:	80 95       	com	r24
    64f2:	90 95       	com	r25
    64f4:	8e 0f       	add	r24, r30
    64f6:	9f 1f       	adc	r25, r31
    64f8:	08 95       	ret

000064fa <strnlen>:
    64fa:	fc 01       	movw	r30, r24
    64fc:	61 50       	subi	r22, 0x01	; 1
    64fe:	70 40       	sbci	r23, 0x00	; 0
    6500:	01 90       	ld	r0, Z+
    6502:	01 10       	cpse	r0, r1
    6504:	d8 f7       	brcc	.-10     	; 0x64fc <strnlen+0x2>
    6506:	80 95       	com	r24
    6508:	90 95       	com	r25
    650a:	8e 0f       	add	r24, r30
    650c:	9f 1f       	adc	r25, r31
    650e:	08 95       	ret

00006510 <fputc>:
    6510:	0f 93       	push	r16
    6512:	1f 93       	push	r17
    6514:	cf 93       	push	r28
    6516:	df 93       	push	r29
    6518:	18 2f       	mov	r17, r24
    651a:	09 2f       	mov	r16, r25
    651c:	eb 01       	movw	r28, r22
    651e:	8b 81       	ldd	r24, Y+3	; 0x03
    6520:	81 fd       	sbrc	r24, 1
    6522:	03 c0       	rjmp	.+6      	; 0x652a <fputc+0x1a>
    6524:	8f ef       	ldi	r24, 0xFF	; 255
    6526:	9f ef       	ldi	r25, 0xFF	; 255
    6528:	20 c0       	rjmp	.+64     	; 0x656a <fputc+0x5a>
    652a:	82 ff       	sbrs	r24, 2
    652c:	10 c0       	rjmp	.+32     	; 0x654e <fputc+0x3e>
    652e:	4e 81       	ldd	r20, Y+6	; 0x06
    6530:	5f 81       	ldd	r21, Y+7	; 0x07
    6532:	2c 81       	ldd	r18, Y+4	; 0x04
    6534:	3d 81       	ldd	r19, Y+5	; 0x05
    6536:	42 17       	cp	r20, r18
    6538:	53 07       	cpc	r21, r19
    653a:	7c f4       	brge	.+30     	; 0x655a <fputc+0x4a>
    653c:	e8 81       	ld	r30, Y
    653e:	f9 81       	ldd	r31, Y+1	; 0x01
    6540:	9f 01       	movw	r18, r30
    6542:	2f 5f       	subi	r18, 0xFF	; 255
    6544:	3f 4f       	sbci	r19, 0xFF	; 255
    6546:	39 83       	std	Y+1, r19	; 0x01
    6548:	28 83       	st	Y, r18
    654a:	10 83       	st	Z, r17
    654c:	06 c0       	rjmp	.+12     	; 0x655a <fputc+0x4a>
    654e:	e8 85       	ldd	r30, Y+8	; 0x08
    6550:	f9 85       	ldd	r31, Y+9	; 0x09
    6552:	81 2f       	mov	r24, r17
    6554:	09 95       	icall
    6556:	89 2b       	or	r24, r25
    6558:	29 f7       	brne	.-54     	; 0x6524 <fputc+0x14>
    655a:	2e 81       	ldd	r18, Y+6	; 0x06
    655c:	3f 81       	ldd	r19, Y+7	; 0x07
    655e:	2f 5f       	subi	r18, 0xFF	; 255
    6560:	3f 4f       	sbci	r19, 0xFF	; 255
    6562:	3f 83       	std	Y+7, r19	; 0x07
    6564:	2e 83       	std	Y+6, r18	; 0x06
    6566:	81 2f       	mov	r24, r17
    6568:	90 2f       	mov	r25, r16
    656a:	df 91       	pop	r29
    656c:	cf 91       	pop	r28
    656e:	1f 91       	pop	r17
    6570:	0f 91       	pop	r16
    6572:	08 95       	ret

00006574 <sprintf>:
    6574:	0f 93       	push	r16
    6576:	1f 93       	push	r17
    6578:	cf 93       	push	r28
    657a:	df 93       	push	r29
    657c:	cd b7       	in	r28, 0x3d	; 61
    657e:	de b7       	in	r29, 0x3e	; 62
    6580:	2e 97       	sbiw	r28, 0x0e	; 14
    6582:	0f b6       	in	r0, 0x3f	; 63
    6584:	f8 94       	cli
    6586:	de bf       	out	0x3e, r29	; 62
    6588:	0f be       	out	0x3f, r0	; 63
    658a:	cd bf       	out	0x3d, r28	; 61
    658c:	0d 89       	ldd	r16, Y+21	; 0x15
    658e:	1e 89       	ldd	r17, Y+22	; 0x16
    6590:	86 e0       	ldi	r24, 0x06	; 6
    6592:	8c 83       	std	Y+4, r24	; 0x04
    6594:	1a 83       	std	Y+2, r17	; 0x02
    6596:	09 83       	std	Y+1, r16	; 0x01
    6598:	8f ef       	ldi	r24, 0xFF	; 255
    659a:	9f e7       	ldi	r25, 0x7F	; 127
    659c:	9e 83       	std	Y+6, r25	; 0x06
    659e:	8d 83       	std	Y+5, r24	; 0x05
    65a0:	ae 01       	movw	r20, r28
    65a2:	47 5e       	subi	r20, 0xE7	; 231
    65a4:	5f 4f       	sbci	r21, 0xFF	; 255
    65a6:	6f 89       	ldd	r22, Y+23	; 0x17
    65a8:	78 8d       	ldd	r23, Y+24	; 0x18
    65aa:	ce 01       	movw	r24, r28
    65ac:	01 96       	adiw	r24, 0x01	; 1
    65ae:	fb da       	rcall	.-2570   	; 0x5ba6 <vfprintf>
    65b0:	ef 81       	ldd	r30, Y+7	; 0x07
    65b2:	f8 85       	ldd	r31, Y+8	; 0x08
    65b4:	e0 0f       	add	r30, r16
    65b6:	f1 1f       	adc	r31, r17
    65b8:	10 82       	st	Z, r1
    65ba:	2e 96       	adiw	r28, 0x0e	; 14
    65bc:	0f b6       	in	r0, 0x3f	; 63
    65be:	f8 94       	cli
    65c0:	de bf       	out	0x3e, r29	; 62
    65c2:	0f be       	out	0x3f, r0	; 63
    65c4:	cd bf       	out	0x3d, r28	; 61
    65c6:	df 91       	pop	r29
    65c8:	cf 91       	pop	r28
    65ca:	1f 91       	pop	r17
    65cc:	0f 91       	pop	r16
    65ce:	08 95       	ret

000065d0 <__ultoa_invert>:
    65d0:	fa 01       	movw	r30, r20
    65d2:	aa 27       	eor	r26, r26
    65d4:	28 30       	cpi	r18, 0x08	; 8
    65d6:	51 f1       	breq	.+84     	; 0x662c <__ultoa_invert+0x5c>
    65d8:	20 31       	cpi	r18, 0x10	; 16
    65da:	81 f1       	breq	.+96     	; 0x663c <__ultoa_invert+0x6c>
    65dc:	e8 94       	clt
    65de:	6f 93       	push	r22
    65e0:	6e 7f       	andi	r22, 0xFE	; 254
    65e2:	6e 5f       	subi	r22, 0xFE	; 254
    65e4:	7f 4f       	sbci	r23, 0xFF	; 255
    65e6:	8f 4f       	sbci	r24, 0xFF	; 255
    65e8:	9f 4f       	sbci	r25, 0xFF	; 255
    65ea:	af 4f       	sbci	r26, 0xFF	; 255
    65ec:	b1 e0       	ldi	r27, 0x01	; 1
    65ee:	3e d0       	rcall	.+124    	; 0x666c <__ultoa_invert+0x9c>
    65f0:	b4 e0       	ldi	r27, 0x04	; 4
    65f2:	3c d0       	rcall	.+120    	; 0x666c <__ultoa_invert+0x9c>
    65f4:	67 0f       	add	r22, r23
    65f6:	78 1f       	adc	r23, r24
    65f8:	89 1f       	adc	r24, r25
    65fa:	9a 1f       	adc	r25, r26
    65fc:	a1 1d       	adc	r26, r1
    65fe:	68 0f       	add	r22, r24
    6600:	79 1f       	adc	r23, r25
    6602:	8a 1f       	adc	r24, r26
    6604:	91 1d       	adc	r25, r1
    6606:	a1 1d       	adc	r26, r1
    6608:	6a 0f       	add	r22, r26
    660a:	71 1d       	adc	r23, r1
    660c:	81 1d       	adc	r24, r1
    660e:	91 1d       	adc	r25, r1
    6610:	a1 1d       	adc	r26, r1
    6612:	20 d0       	rcall	.+64     	; 0x6654 <__ultoa_invert+0x84>
    6614:	09 f4       	brne	.+2      	; 0x6618 <__ultoa_invert+0x48>
    6616:	68 94       	set
    6618:	3f 91       	pop	r19
    661a:	2a e0       	ldi	r18, 0x0A	; 10
    661c:	26 9f       	mul	r18, r22
    661e:	11 24       	eor	r1, r1
    6620:	30 19       	sub	r19, r0
    6622:	30 5d       	subi	r19, 0xD0	; 208
    6624:	31 93       	st	Z+, r19
    6626:	de f6       	brtc	.-74     	; 0x65de <__ultoa_invert+0xe>
    6628:	cf 01       	movw	r24, r30
    662a:	08 95       	ret
    662c:	46 2f       	mov	r20, r22
    662e:	47 70       	andi	r20, 0x07	; 7
    6630:	40 5d       	subi	r20, 0xD0	; 208
    6632:	41 93       	st	Z+, r20
    6634:	b3 e0       	ldi	r27, 0x03	; 3
    6636:	0f d0       	rcall	.+30     	; 0x6656 <__ultoa_invert+0x86>
    6638:	c9 f7       	brne	.-14     	; 0x662c <__ultoa_invert+0x5c>
    663a:	f6 cf       	rjmp	.-20     	; 0x6628 <__ultoa_invert+0x58>
    663c:	46 2f       	mov	r20, r22
    663e:	4f 70       	andi	r20, 0x0F	; 15
    6640:	40 5d       	subi	r20, 0xD0	; 208
    6642:	4a 33       	cpi	r20, 0x3A	; 58
    6644:	18 f0       	brcs	.+6      	; 0x664c <__ultoa_invert+0x7c>
    6646:	49 5d       	subi	r20, 0xD9	; 217
    6648:	31 fd       	sbrc	r19, 1
    664a:	40 52       	subi	r20, 0x20	; 32
    664c:	41 93       	st	Z+, r20
    664e:	02 d0       	rcall	.+4      	; 0x6654 <__ultoa_invert+0x84>
    6650:	a9 f7       	brne	.-22     	; 0x663c <__ultoa_invert+0x6c>
    6652:	ea cf       	rjmp	.-44     	; 0x6628 <__ultoa_invert+0x58>
    6654:	b4 e0       	ldi	r27, 0x04	; 4
    6656:	a6 95       	lsr	r26
    6658:	97 95       	ror	r25
    665a:	87 95       	ror	r24
    665c:	77 95       	ror	r23
    665e:	67 95       	ror	r22
    6660:	ba 95       	dec	r27
    6662:	c9 f7       	brne	.-14     	; 0x6656 <__ultoa_invert+0x86>
    6664:	00 97       	sbiw	r24, 0x00	; 0
    6666:	61 05       	cpc	r22, r1
    6668:	71 05       	cpc	r23, r1
    666a:	08 95       	ret
    666c:	9b 01       	movw	r18, r22
    666e:	ac 01       	movw	r20, r24
    6670:	0a 2e       	mov	r0, r26
    6672:	06 94       	lsr	r0
    6674:	57 95       	ror	r21
    6676:	47 95       	ror	r20
    6678:	37 95       	ror	r19
    667a:	27 95       	ror	r18
    667c:	ba 95       	dec	r27
    667e:	c9 f7       	brne	.-14     	; 0x6672 <__ultoa_invert+0xa2>
    6680:	62 0f       	add	r22, r18
    6682:	73 1f       	adc	r23, r19
    6684:	84 1f       	adc	r24, r20
    6686:	95 1f       	adc	r25, r21
    6688:	a0 1d       	adc	r26, r0
    668a:	08 95       	ret

0000668c <__do_global_dtors>:
    668c:	15 e0       	ldi	r17, 0x05	; 5
    668e:	c6 e4       	ldi	r28, 0x46	; 70
    6690:	d5 e0       	ldi	r29, 0x05	; 5
    6692:	00 e0       	ldi	r16, 0x00	; 0
    6694:	05 c0       	rjmp	.+10     	; 0x66a0 <__do_global_dtors+0x14>
    6696:	22 97       	sbiw	r28, 0x02	; 2
    6698:	01 09       	sbc	r16, r1
    669a:	fe 01       	movw	r30, r28
    669c:	0b bf       	out	0x3b, r16	; 59
    669e:	46 de       	rcall	.-884    	; 0x632c <__tablejump_elpm__>
    66a0:	c8 34       	cpi	r28, 0x48	; 72
    66a2:	d1 07       	cpc	r29, r17
    66a4:	80 e0       	ldi	r24, 0x00	; 0
    66a6:	08 07       	cpc	r16, r24
    66a8:	b1 f7       	brne	.-20     	; 0x6696 <__do_global_dtors+0xa>
    66aa:	f8 94       	cli

000066ac <__stop_program>:
    66ac:	ff cf       	rjmp	.-2      	; 0x66ac <__stop_program>
