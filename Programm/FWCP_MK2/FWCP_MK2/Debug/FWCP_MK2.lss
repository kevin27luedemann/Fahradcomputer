
FWCP_MK2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000226  00800100  00007334  000073c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00007334  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000d51  00800326  00800326  000075ee  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000075ee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000764c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004d8  00000000  00000000  0000768c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000b4a3  00000000  00000000  00007b64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001baf  00000000  00000000  00013007  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000040b8  00000000  00000000  00014bb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000012ec  00000000  00000000  00018c70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001600  00000000  00000000  00019f5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00008162  00000000  00000000  0001b55c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004e8  00000000  00000000  000236be  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	9c c2       	rjmp	.+1336   	; 0x53a <__dtors_end>
       2:	00 00       	nop
       4:	c4 c2       	rjmp	.+1416   	; 0x58e <__bad_interrupt>
       6:	00 00       	nop
       8:	c2 c2       	rjmp	.+1412   	; 0x58e <__bad_interrupt>
       a:	00 00       	nop
       c:	c0 c2       	rjmp	.+1408   	; 0x58e <__bad_interrupt>
       e:	00 00       	nop
      10:	be c2       	rjmp	.+1404   	; 0x58e <__bad_interrupt>
      12:	00 00       	nop
      14:	bc c2       	rjmp	.+1400   	; 0x58e <__bad_interrupt>
      16:	00 00       	nop
      18:	ba c2       	rjmp	.+1396   	; 0x58e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b8 c2       	rjmp	.+1392   	; 0x58e <__bad_interrupt>
      1e:	00 00       	nop
      20:	b6 c2       	rjmp	.+1388   	; 0x58e <__bad_interrupt>
      22:	00 00       	nop
      24:	b4 c2       	rjmp	.+1384   	; 0x58e <__bad_interrupt>
      26:	00 00       	nop
      28:	b2 c2       	rjmp	.+1380   	; 0x58e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0c 94 2d 1a 	jmp	0x345a	; 0x345a <__vector_11>
      30:	ae c2       	rjmp	.+1372   	; 0x58e <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 49 1a 	jmp	0x3492	; 0x3492 <__vector_13>
      38:	aa c2       	rjmp	.+1364   	; 0x58e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a8 c2       	rjmp	.+1360   	; 0x58e <__bad_interrupt>
      3e:	00 00       	nop
      40:	a6 c2       	rjmp	.+1356   	; 0x58e <__bad_interrupt>
      42:	00 00       	nop
      44:	a4 c2       	rjmp	.+1352   	; 0x58e <__bad_interrupt>
      46:	00 00       	nop
      48:	a2 c2       	rjmp	.+1348   	; 0x58e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a0 c2       	rjmp	.+1344   	; 0x58e <__bad_interrupt>
      4e:	00 00       	nop
      50:	9e c2       	rjmp	.+1340   	; 0x58e <__bad_interrupt>
      52:	00 00       	nop
      54:	9c c2       	rjmp	.+1336   	; 0x58e <__bad_interrupt>
      56:	00 00       	nop
      58:	9a c2       	rjmp	.+1332   	; 0x58e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	98 c2       	rjmp	.+1328   	; 0x58e <__bad_interrupt>
      5e:	00 00       	nop
      60:	96 c2       	rjmp	.+1324   	; 0x58e <__bad_interrupt>
      62:	00 00       	nop
      64:	94 c2       	rjmp	.+1320   	; 0x58e <__bad_interrupt>
      66:	00 00       	nop
      68:	92 c2       	rjmp	.+1316   	; 0x58e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	90 c2       	rjmp	.+1312   	; 0x58e <__bad_interrupt>
      6e:	00 00       	nop
      70:	8e c2       	rjmp	.+1308   	; 0x58e <__bad_interrupt>
      72:	00 00       	nop
      74:	8c c2       	rjmp	.+1304   	; 0x58e <__bad_interrupt>
      76:	00 00       	nop
      78:	8a c2       	rjmp	.+1300   	; 0x58e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	88 c2       	rjmp	.+1296   	; 0x58e <__bad_interrupt>
      7e:	00 00       	nop
      80:	86 c2       	rjmp	.+1292   	; 0x58e <__bad_interrupt>
      82:	00 00       	nop
      84:	84 c2       	rjmp	.+1288   	; 0x58e <__bad_interrupt>
      86:	00 00       	nop
      88:	82 c2       	rjmp	.+1284   	; 0x58e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	aa 17       	cp	r26, r26
      8e:	d0 17       	cp	r29, r16
      90:	f7 17       	cp	r31, r23
      92:	1f 18       	sub	r1, r15
      94:	46 18       	sub	r4, r6
      96:	70 18       	sub	r7, r0
      98:	99 18       	sub	r9, r9
      9a:	c3 18       	sub	r12, r3
      9c:	3a 19       	sub	r19, r10
      9e:	64 19       	sub	r22, r4
      a0:	f3 1f       	adc	r31, r19
      a2:	f9 1f       	adc	r31, r25
      a4:	ff 1f       	adc	r31, r31
      a6:	05 20       	and	r0, r5
      a8:	0b 20       	and	r0, r11
      aa:	11 20       	and	r1, r1
      ac:	17 20       	and	r1, r7
      ae:	1d 20       	and	r1, r13
      b0:	08 4a       	sbci	r16, 0xA8	; 168
      b2:	d7 3b       	cpi	r29, 0xB7	; 183
      b4:	3b ce       	rjmp	.-906    	; 0xfffffd2c <__eeprom_end+0xff7efd2c>
      b6:	01 6e       	ori	r16, 0xE1	; 225
      b8:	84 bc       	out	0x24, r8	; 36
      ba:	bf fd       	.word	0xfdbf	; ????
      bc:	c1 2f       	mov	r28, r17
      be:	3d 6c       	ori	r19, 0xCD	; 205
      c0:	74 31       	cpi	r23, 0x14	; 20
      c2:	9a bd       	out	0x2a, r25	; 42
      c4:	56 83       	std	Z+6, r21	; 0x06
      c6:	3d da       	rcall	.-2950   	; 0xfffff542 <__eeprom_end+0xff7ef542>
      c8:	3d 00       	.word	0x003d	; ????
      ca:	c7 7f       	andi	r28, 0xF7	; 247
      cc:	11 be       	out	0x31, r1	; 49
      ce:	d9 e4       	ldi	r29, 0x49	; 73
      d0:	bb 4c       	sbci	r27, 0xCB	; 203
      d2:	3e 91       	ld	r19, -X
      d4:	6b aa       	std	Y+51, r6	; 0x33
      d6:	aa be       	out	0x3a, r10	; 58
      d8:	00 00       	nop
      da:	00 80       	ld	r0, Z
      dc:	3f 05       	cpc	r19, r15
      de:	a8 4c       	sbci	r26, 0xC8	; 200
      e0:	cd b2       	in	r12, 0x1d	; 29
      e2:	d4 4e       	sbci	r29, 0xE4	; 228
      e4:	b9 38       	cpi	r27, 0x89	; 137
      e6:	36 a9       	ldd	r19, Z+54	; 0x36
      e8:	02 0c       	add	r0, r2
      ea:	50 b9       	out	0x00, r21	; 0
      ec:	91 86       	std	Z+9, r9	; 0x09
      ee:	88 08       	sbc	r8, r8
      f0:	3c a6       	std	Y+44, r3	; 0x2c
      f2:	aa aa       	std	Y+50, r10	; 0x32
      f4:	2a be       	out	0x3a, r2	; 58
      f6:	00 00       	nop
      f8:	00 80       	ld	r0, Z
      fa:	3f 06       	cpc	r3, r31
      fc:	64 ec       	ldi	r22, 0xC4	; 196
      fe:	1b 3c       	cpi	r17, 0xCB	; 203
     100:	04 bc       	out	0x24, r0	; 36
     102:	16 3e       	cpi	r17, 0xE6	; 230
     104:	3b e5       	ldi	r19, 0x5B	; 91
     106:	b9 3c       	cpi	r27, 0xC9	; 201
     108:	c9 3c       	cpi	r28, 0xC9	; 201
     10a:	37 c2       	rjmp	.+1134   	; 0x57a <__do_global_ctors+0xa>
     10c:	9e 5a       	subi	r25, 0xAE	; 174
     10e:	3d 66       	ori	r19, 0x6D	; 109
     110:	04 98       	cbi	0x00, 4	; 0
     112:	08 3e       	cpi	r16, 0xE8	; 232
     114:	ea 69       	ori	r30, 0x9A	; 154
     116:	aa aa       	std	Y+50, r10	; 0x32
     118:	3e 00       	.word	0x003e	; ????
     11a:	00 00       	nop
     11c:	80 3f       	cpi	r24, 0xF0	; 240

0000011e <__trampolines_end>:
     11e:	00 e0       	ldi	r16, 0x00	; 0
     120:	f8 fc       	.word	0xfcf8	; ????
     122:	fe 1e       	adc	r15, r30
     124:	07 07       	cpc	r16, r23
     126:	07 07       	cpc	r16, r23
     128:	1e fe       	.word	0xfe1e	; ????
     12a:	fc f8       	.word	0xf8fc	; ????
     12c:	f0 00       	.word	0x00f0	; ????
     12e:	00 07       	cpc	r16, r16
     130:	0f 3f       	cpi	r16, 0xFF	; 255
     132:	3f 7c       	andi	r19, 0xCF	; 207
     134:	70 70       	andi	r23, 0x00	; 0
     136:	70 70       	andi	r23, 0x00	; 0
     138:	7c 3f       	cpi	r23, 0xFC	; 252
     13a:	1f 1f       	adc	r17, r31
     13c:	07 00       	.word	0x0007	; ????
     13e:	00 00       	nop
     140:	00 06       	cpc	r0, r16
     142:	07 07       	cpc	r16, r23
     144:	ff ff       	.word	0xffff	; ????
     146:	ff ff       	.word	0xffff	; ????
	...
     154:	7f 7f       	andi	r23, 0xFF	; 255
     156:	7f 7f       	andi	r23, 0xFF	; 255
     158:	00 00       	nop
     15a:	00 00       	nop
     15c:	00 00       	nop
     15e:	00 38       	cpi	r16, 0x80	; 128
     160:	3c 3e       	cpi	r19, 0xEC	; 236
     162:	3e 0f       	add	r19, r30
     164:	07 07       	cpc	r16, r23
     166:	07 cf       	rjmp	.-498    	; 0xffffff76 <__eeprom_end+0xff7eff76>
     168:	ff fe       	.word	0xfeff	; ????
     16a:	fe 38       	cpi	r31, 0x8E	; 142
     16c:	00 00       	nop
     16e:	00 40       	sbci	r16, 0x00	; 0
     170:	40 60       	ori	r20, 0x00	; 0
     172:	70 78       	andi	r23, 0x80	; 128
     174:	7c 7e       	andi	r23, 0xEC	; 236
     176:	7f 77       	andi	r23, 0x7F	; 127
     178:	73 71       	andi	r23, 0x13	; 19
     17a:	70 70       	andi	r23, 0x00	; 0
     17c:	00 00       	nop
     17e:	00 18       	sub	r0, r0
     180:	1c 1e       	adc	r1, r28
     182:	1e 0f       	add	r17, r30
     184:	c7 c7       	rjmp	.+3982   	; 0x1114 <_ZN7Display6analogEhhhh+0x350>
     186:	e7 ff       	sbrs	r30, 7
     188:	fe be       	out	0x3e, r15	; 62
     18a:	9c 00       	.word	0x009c	; ????
     18c:	00 00       	nop
     18e:	00 0c       	add	r0, r0
     190:	1c 3c       	cpi	r17, 0xCC	; 204
     192:	3c 78       	andi	r19, 0x8C	; 140
     194:	70 70       	andi	r23, 0x00	; 0
     196:	70 79       	andi	r23, 0x90	; 144
     198:	7f 3f       	cpi	r23, 0xFF	; 255
     19a:	1f 0f       	add	r17, r31
     19c:	00 00       	nop
     19e:	00 00       	nop
     1a0:	80 c0       	rjmp	.+256    	; 0x2a2 <_ZL7font5x8+0x44>
     1a2:	e0 70       	andi	r30, 0x00	; 0
     1a4:	38 1c       	adc	r3, r8
     1a6:	1e ff       	.word	0xff1e	; ????
     1a8:	ff ff       	.word	0xffff	; ????
     1aa:	ff 00       	.word	0x00ff	; ????
     1ac:	00 00       	nop
     1ae:	06 07       	cpc	r16, r22
     1b0:	07 07       	cpc	r16, r23
     1b2:	06 06       	cpc	r0, r22
     1b4:	06 06       	cpc	r0, r22
     1b6:	06 7f       	andi	r16, 0xF6	; 246
     1b8:	7f 7f       	andi	r23, 0xFF	; 255
     1ba:	7f 06       	cpc	r7, r31
     1bc:	06 00       	.word	0x0006	; ????
     1be:	00 00       	nop
     1c0:	00 00       	nop
     1c2:	f0 ff       	sbrs	r31, 0
     1c4:	ff ff       	.word	0xffff	; ????
     1c6:	e7 e7       	ldi	r30, 0x77	; 119
     1c8:	e7 e7       	ldi	r30, 0x77	; 119
     1ca:	c7 87       	std	Z+15, r28	; 0x0f
     1cc:	00 00       	nop
     1ce:	00 00       	nop
     1d0:	38 78       	andi	r19, 0x88	; 136
     1d2:	71 70       	andi	r23, 0x01	; 1
     1d4:	70 70       	andi	r23, 0x00	; 0
     1d6:	70 70       	andi	r23, 0x00	; 0
     1d8:	39 3f       	cpi	r19, 0xF9	; 249
     1da:	3f 1f       	adc	r19, r31
     1dc:	0f 00       	.word	0x000f	; ????
     1de:	00 80       	ld	r0, Z
     1e0:	e0 f0       	brcs	.+56     	; 0x21a <__trampolines_end+0xfc>
     1e2:	f8 fc       	.word	0xfcf8	; ????
     1e4:	7f 7f       	andi	r23, 0xFF	; 255
     1e6:	6f 67       	ori	r22, 0x7F	; 127
     1e8:	e1 e1       	ldi	r30, 0x11	; 17
     1ea:	c0 80       	ld	r12, Z
     1ec:	00 00       	nop
     1ee:	00 0f       	add	r16, r16
     1f0:	1f 3f       	cpi	r17, 0xFF	; 255
     1f2:	3f 78       	andi	r19, 0x8F	; 143
     1f4:	70 70       	andi	r23, 0x00	; 0
     1f6:	70 70       	andi	r23, 0x00	; 0
     1f8:	78 3f       	cpi	r23, 0xF8	; 248
     1fa:	3f 1f       	adc	r19, r31
     1fc:	0f 00       	.word	0x000f	; ????
     1fe:	00 07       	cpc	r16, r16
     200:	07 07       	cpc	r16, r23
     202:	07 07       	cpc	r16, r23
     204:	c7 e7       	ldi	r28, 0x77	; 119
     206:	f7 ff       	sbrs	r31, 7
     208:	7f 3f       	cpi	r23, 0xFF	; 255
     20a:	1f 07       	cpc	r17, r31
     20c:	03 01       	movw	r0, r6
     20e:	00 20       	and	r0, r0
     210:	38 7c       	andi	r19, 0xC8	; 200
     212:	7e 3f       	cpi	r23, 0xFE	; 254
     214:	0f 07       	cpc	r16, r31
     216:	03 00       	.word	0x0003	; ????
	...
     220:	00 1c       	adc	r0, r0
     222:	be fe       	.word	0xfebe	; ????
     224:	ff e7       	ldi	r31, 0x7F	; 127
     226:	c3 c3       	rjmp	.+1926   	; 0x9ae <_ZN7Display9draw_lineEhhhf+0x10a>
     228:	e7 ff       	sbrs	r30, 7
     22a:	fe be       	out	0x3e, r15	; 62
     22c:	1c 00       	.word	0x001c	; ????
     22e:	00 00       	nop
     230:	0e 3f       	cpi	r16, 0xFE	; 254
     232:	3f 7f       	andi	r19, 0xFF	; 255
     234:	71 60       	ori	r23, 0x01	; 1
     236:	60 60       	ori	r22, 0x00	; 0
     238:	71 7f       	andi	r23, 0xF1	; 241
     23a:	3f 3f       	cpi	r19, 0xFF	; 255
     23c:	0f 00       	.word	0x000f	; ????
     23e:	00 78       	andi	r16, 0x80	; 128
     240:	fc fe       	.word	0xfefc	; ????
     242:	fe 8f       	std	Y+30, r31	; 0x1e
     244:	07 07       	cpc	r16, r23
     246:	07 07       	cpc	r16, r23
     248:	8f fe       	.word	0xfe8f	; ????
     24a:	fe fc       	.word	0xfcfe	; ????
     24c:	f8 00       	.word	0x00f8	; ????
     24e:	00 00       	nop
     250:	00 01       	movw	r0, r0
     252:	43 43       	sbci	r20, 0x33	; 51
     254:	73 7b       	andi	r23, 0xB3	; 179
     256:	7f 7f       	andi	r23, 0xFF	; 255
     258:	1f 0f       	add	r17, r31
     25a:	07 03       	mulsu	r16, r23
	...

0000025e <_ZL7font5x8>:
     25e:	00 00 5f 00 00 00 07 00 07 00 14 7f 14 7f 14 24     .._............$
     26e:	2a 7f 2a 12 23 13 08 64 62 36 49 55 22 50 00 05     *.*.#..db6IU"P..
     27e:	03 00 00 00 1c 22 41 00 00 41 22 1c 00 14 08 3e     ....."A..A"....>
     28e:	08 14 08 08 3e 08 08 00 50 30 00 00 08 08 08 08     ....>...P0......
     29e:	08 00 60 60 00 00 20 10 08 04 02 3e 51 49 45 3e     ..``.. ....>QIE>
     2ae:	00 42 7f 40 00 42 61 51 49 46 21 41 45 4b 31 18     .B.@.BaQIF!AEK1.
     2be:	14 12 7f 10 27 45 45 45 39 3c 4a 49 49 30 01 71     ....'EEE9<JII0.q
     2ce:	09 05 03 36 49 49 49 36 06 49 49 29 1e 00 36 36     ...6III6.II)..66
     2de:	00 00 00 56 36 00 00 08 14 22 41 00 14 14 14 14     ...V6...."A.....
     2ee:	14 00 41 22 14 08 02 01 51 09 06 32 49 79 41 3e     ..A"....Q..2IyA>
     2fe:	7e 11 11 11 7e 7f 49 49 49 36 3e 41 41 41 22 7f     ~...~.III6>AAA".
     30e:	41 41 22 1c 7f 49 49 49 41 7f 09 09 09 01 3e 41     AA"..IIIA.....>A
     31e:	49 49 7a 7f 08 08 08 7f 00 41 7f 41 00 20 40 41     IIz......A.A. @A
     32e:	3f 01 7f 08 14 22 41 7f 40 40 40 40 7f 02 0c 02     ?...."A.@@@@....
     33e:	7f 7f 04 08 10 7f 3e 41 41 41 3e 7f 09 09 09 06     ......>AAA>.....
     34e:	3e 41 51 21 5e 7f 09 19 29 46 46 49 49 49 31 01     >AQ!^...)FFIII1.
     35e:	01 7f 01 01 3f 40 40 40 3f 1f 20 40 20 1f 3f 40     ....?@@@?. @ .?@
     36e:	38 40 3f 63 14 08 14 63 07 08 70 08 07 61 51 49     8@?c...c..p..aQI
     37e:	45 43 00 7f 41 41 00 02 04 08 10 20 00 41 41 7f     EC..AA..... .AA.
     38e:	00 04 02 01 02 04 40 40 40 40 40 00 01 02 04 00     ......@@@@@.....
     39e:	20 54 54 54 78 7f 48 44 44 38 38 44 44 44 20 38      TTTx.HDD88DDD 8
     3ae:	44 44 48 7f 38 54 54 54 18 08 7e 09 01 02 0c 52     DDH.8TTT..~....R
     3be:	52 52 3e 7f 08 04 04 78 00 44 7d 40 00 20 40 44     RR>....x.D}@. @D
     3ce:	3d 00 7f 10 28 44 00 00 41 7f 40 00 7c 04 18 04     =...(D..A.@.|...
     3de:	78 7c 08 04 04 78 38 44 44 44 38 7c 14 14 14 08     x|...x8DDD8|....
     3ee:	08 14 14 18 7c 7c 08 04 04 08 48 54 54 54 20 04     ....||....HTTT .
     3fe:	3f 44 40 20 3c 40 40 20 7c 1c 20 40 20 1c 3c 40     ?D@ <@@ |. @ .<@
     40e:	30 40 3c 44 28 10 28 44 0c 50 50 50 3c 44 64 54     0@<D(.(D.PPP<DdT
     41e:	4c 44 00 08 36 41 00 00 00 7f 00 00 00 41 36 08     LD..6A.......A6.
     42e:	00 10 08 08 10 08                                   ......

00000434 <__c.2179>:
     434:	6e 61 6e 00                                         nan.

00000438 <__c.2177>:
     438:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     448:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     458:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     468:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     478:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     488:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     498:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     4a8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     4b8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     4c8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     4d8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     4e8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     4f8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     508:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     518:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     528:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000536 <__ctors_start>:
     536:	3f 23       	and	r19, r31

00000538 <__ctors_end>:
     538:	70 23       	and	r23, r16

0000053a <__dtors_end>:
     53a:	11 24       	eor	r1, r1
     53c:	1f be       	out	0x3f, r1	; 63
     53e:	cf ef       	ldi	r28, 0xFF	; 255
     540:	d0 e4       	ldi	r29, 0x40	; 64
     542:	de bf       	out	0x3e, r29	; 62
     544:	cd bf       	out	0x3d, r28	; 61

00000546 <__do_copy_data>:
     546:	13 e0       	ldi	r17, 0x03	; 3
     548:	a0 e0       	ldi	r26, 0x00	; 0
     54a:	b1 e0       	ldi	r27, 0x01	; 1
     54c:	e4 e3       	ldi	r30, 0x34	; 52
     54e:	f3 e7       	ldi	r31, 0x73	; 115
     550:	00 e0       	ldi	r16, 0x00	; 0
     552:	0b bf       	out	0x3b, r16	; 59
     554:	02 c0       	rjmp	.+4      	; 0x55a <__do_copy_data+0x14>
     556:	07 90       	elpm	r0, Z+
     558:	0d 92       	st	X+, r0
     55a:	a6 32       	cpi	r26, 0x26	; 38
     55c:	b1 07       	cpc	r27, r17
     55e:	d9 f7       	brne	.-10     	; 0x556 <__do_copy_data+0x10>

00000560 <__do_clear_bss>:
     560:	20 e1       	ldi	r18, 0x10	; 16
     562:	a6 e2       	ldi	r26, 0x26	; 38
     564:	b3 e0       	ldi	r27, 0x03	; 3
     566:	01 c0       	rjmp	.+2      	; 0x56a <.do_clear_bss_start>

00000568 <.do_clear_bss_loop>:
     568:	1d 92       	st	X+, r1

0000056a <.do_clear_bss_start>:
     56a:	a7 37       	cpi	r26, 0x77	; 119
     56c:	b2 07       	cpc	r27, r18
     56e:	e1 f7       	brne	.-8      	; 0x568 <.do_clear_bss_loop>

00000570 <__do_global_ctors>:
     570:	12 e0       	ldi	r17, 0x02	; 2
     572:	cc e9       	ldi	r28, 0x9C	; 156
     574:	d2 e0       	ldi	r29, 0x02	; 2
     576:	04 c0       	rjmp	.+8      	; 0x580 <__do_global_ctors+0x10>
     578:	21 97       	sbiw	r28, 0x01	; 1
     57a:	fe 01       	movw	r30, r28
     57c:	0e 94 b7 37 	call	0x6f6e	; 0x6f6e <__tablejump2__>
     580:	cb 39       	cpi	r28, 0x9B	; 155
     582:	d1 07       	cpc	r29, r17
     584:	c9 f7       	brne	.-14     	; 0x578 <__do_global_ctors+0x8>
     586:	0e 94 36 23 	call	0x466c	; 0x466c <main>
     58a:	0c 94 8e 39 	jmp	0x731c	; 0x731c <__do_global_dtors>

0000058e <__bad_interrupt>:
     58e:	38 cd       	rjmp	.-1424   	; 0x0 <__vectors>

00000590 <_ZN7DisplayD1Ev>:
	else{
		for(uint8_t i = 0; i < 7; i++){
			Displayframe[x+(y/8)*SSD1306_WIDTH+i] |= 0;
		}
	}
}
     590:	9c 5f       	subi	r25, 0xFC	; 252
     592:	0c 94 49 26 	jmp	0x4c92	; 0x4c92 <_ZN3I2CD1Ev>
     596:	08 95       	ret

00000598 <_ZN7Display10clearFrameEv>:
     598:	fc 01       	movw	r30, r24
     59a:	9c 5f       	subi	r25, 0xFC	; 252
     59c:	11 92       	st	Z+, r1
     59e:	e8 17       	cp	r30, r24
     5a0:	f9 07       	cpc	r31, r25
     5a2:	e1 f7       	brne	.-8      	; 0x59c <_ZN7Display10clearFrameEv+0x4>
     5a4:	08 95       	ret

000005a6 <_ZN7Display15ssd1306_commandEh>:
     5a6:	1f 93       	push	r17
     5a8:	cf 93       	push	r28
     5aa:	df 93       	push	r29
     5ac:	16 2f       	mov	r17, r22
     5ae:	ec 01       	movw	r28, r24
     5b0:	dc 5f       	subi	r29, 0xFC	; 252
     5b2:	ce 01       	movw	r24, r28
     5b4:	0e 94 4a 26 	call	0x4c94	; 0x4c94 <_ZN3I2C9twi_startEv>
     5b8:	68 e7       	ldi	r22, 0x78	; 120
     5ba:	ce 01       	movw	r24, r28
     5bc:	0e 94 52 26 	call	0x4ca4	; 0x4ca4 <_ZN3I2C9twi_writeEh>
     5c0:	60 e0       	ldi	r22, 0x00	; 0
     5c2:	ce 01       	movw	r24, r28
     5c4:	0e 94 52 26 	call	0x4ca4	; 0x4ca4 <_ZN3I2C9twi_writeEh>
     5c8:	61 2f       	mov	r22, r17
     5ca:	ce 01       	movw	r24, r28
     5cc:	0e 94 52 26 	call	0x4ca4	; 0x4ca4 <_ZN3I2C9twi_writeEh>
     5d0:	ce 01       	movw	r24, r28
     5d2:	0e 94 4e 26 	call	0x4c9c	; 0x4c9c <_ZN3I2C8twi_stopEv>
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	1f 91       	pop	r17
     5dc:	08 95       	ret

000005de <_ZN7Display17InitializeDisplayEv>:
     5de:	cf 93       	push	r28
     5e0:	df 93       	push	r29
     5e2:	ec 01       	movw	r28, r24
     5e4:	6e ea       	ldi	r22, 0xAE	; 174
     5e6:	df df       	rcall	.-66     	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     5e8:	65 ed       	ldi	r22, 0xD5	; 213
     5ea:	ce 01       	movw	r24, r28
     5ec:	dc df       	rcall	.-72     	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     5ee:	60 e8       	ldi	r22, 0x80	; 128
     5f0:	ce 01       	movw	r24, r28
     5f2:	d9 df       	rcall	.-78     	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     5f4:	68 ea       	ldi	r22, 0xA8	; 168
     5f6:	ce 01       	movw	r24, r28
     5f8:	d6 df       	rcall	.-84     	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     5fa:	6f e3       	ldi	r22, 0x3F	; 63
     5fc:	ce 01       	movw	r24, r28
     5fe:	d3 df       	rcall	.-90     	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     600:	63 ed       	ldi	r22, 0xD3	; 211
     602:	ce 01       	movw	r24, r28
     604:	d0 df       	rcall	.-96     	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     606:	60 e0       	ldi	r22, 0x00	; 0
     608:	ce 01       	movw	r24, r28
     60a:	cd df       	rcall	.-102    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     60c:	60 e4       	ldi	r22, 0x40	; 64
     60e:	ce 01       	movw	r24, r28
     610:	ca df       	rcall	.-108    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     612:	6d e8       	ldi	r22, 0x8D	; 141
     614:	ce 01       	movw	r24, r28
     616:	c7 df       	rcall	.-114    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     618:	64 e1       	ldi	r22, 0x14	; 20
     61a:	ce 01       	movw	r24, r28
     61c:	c4 df       	rcall	.-120    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     61e:	60 e2       	ldi	r22, 0x20	; 32
     620:	ce 01       	movw	r24, r28
     622:	c1 df       	rcall	.-126    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     624:	60 e0       	ldi	r22, 0x00	; 0
     626:	ce 01       	movw	r24, r28
     628:	be df       	rcall	.-132    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     62a:	61 ea       	ldi	r22, 0xA1	; 161
     62c:	ce 01       	movw	r24, r28
     62e:	bb df       	rcall	.-138    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     630:	68 ec       	ldi	r22, 0xC8	; 200
     632:	ce 01       	movw	r24, r28
     634:	b8 df       	rcall	.-144    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     636:	6a ed       	ldi	r22, 0xDA	; 218
     638:	ce 01       	movw	r24, r28
     63a:	b5 df       	rcall	.-150    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     63c:	62 e1       	ldi	r22, 0x12	; 18
     63e:	ce 01       	movw	r24, r28
     640:	b2 df       	rcall	.-156    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     642:	61 e8       	ldi	r22, 0x81	; 129
     644:	ce 01       	movw	r24, r28
     646:	af df       	rcall	.-162    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     648:	6f ec       	ldi	r22, 0xCF	; 207
     64a:	ce 01       	movw	r24, r28
     64c:	ac df       	rcall	.-168    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     64e:	69 ed       	ldi	r22, 0xD9	; 217
     650:	ce 01       	movw	r24, r28
     652:	a9 df       	rcall	.-174    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     654:	61 ef       	ldi	r22, 0xF1	; 241
     656:	ce 01       	movw	r24, r28
     658:	a6 df       	rcall	.-180    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     65a:	6b ed       	ldi	r22, 0xDB	; 219
     65c:	ce 01       	movw	r24, r28
     65e:	a3 df       	rcall	.-186    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     660:	60 e4       	ldi	r22, 0x40	; 64
     662:	ce 01       	movw	r24, r28
     664:	a0 df       	rcall	.-192    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     666:	64 ea       	ldi	r22, 0xA4	; 164
     668:	ce 01       	movw	r24, r28
     66a:	9d df       	rcall	.-198    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     66c:	66 ea       	ldi	r22, 0xA6	; 166
     66e:	ce 01       	movw	r24, r28
     670:	9a df       	rcall	.-204    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     672:	6f ea       	ldi	r22, 0xAF	; 175
     674:	ce 01       	movw	r24, r28
     676:	97 df       	rcall	.-210    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     678:	df 91       	pop	r29
     67a:	cf 91       	pop	r28
     67c:	08 95       	ret

0000067e <_ZN7DisplayC1Ev>:
     67e:	cf 93       	push	r28
     680:	df 93       	push	r29
     682:	ec 01       	movw	r28, r24
     684:	9c 5f       	subi	r25, 0xFC	; 252
     686:	0e 94 45 26 	call	0x4c8a	; 0x4c8a <_ZN3I2CC1Ev>
     68a:	ce 01       	movw	r24, r28
     68c:	a8 df       	rcall	.-176    	; 0x5de <_ZN7Display17InitializeDisplayEv>
     68e:	df 91       	pop	r29
     690:	cf 91       	pop	r28
     692:	08 95       	ret

00000694 <_ZN7Display6invertEh>:
     694:	66 23       	and	r22, r22
     696:	19 f0       	breq	.+6      	; 0x69e <_ZN7Display6invertEh+0xa>
     698:	67 ea       	ldi	r22, 0xA7	; 167
     69a:	85 cf       	rjmp	.-246    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     69c:	08 95       	ret
     69e:	66 ea       	ldi	r22, 0xA6	; 166
     6a0:	82 cf       	rjmp	.-252    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     6a2:	08 95       	ret

000006a4 <_ZN7Display9sendFrameEv>:
     6a4:	ef 92       	push	r14
     6a6:	ff 92       	push	r15
     6a8:	0f 93       	push	r16
     6aa:	1f 93       	push	r17
     6ac:	cf 93       	push	r28
     6ae:	df 93       	push	r29
     6b0:	ec 01       	movw	r28, r24
     6b2:	61 e2       	ldi	r22, 0x21	; 33
     6b4:	78 df       	rcall	.-272    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     6b6:	60 e0       	ldi	r22, 0x00	; 0
     6b8:	ce 01       	movw	r24, r28
     6ba:	75 df       	rcall	.-278    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     6bc:	6f e7       	ldi	r22, 0x7F	; 127
     6be:	ce 01       	movw	r24, r28
     6c0:	72 df       	rcall	.-284    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     6c2:	62 e2       	ldi	r22, 0x22	; 34
     6c4:	ce 01       	movw	r24, r28
     6c6:	6f df       	rcall	.-290    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     6c8:	60 e0       	ldi	r22, 0x00	; 0
     6ca:	ce 01       	movw	r24, r28
     6cc:	6c df       	rcall	.-296    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     6ce:	67 e0       	ldi	r22, 0x07	; 7
     6d0:	ce 01       	movw	r24, r28
     6d2:	69 df       	rcall	.-302    	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
     6d4:	8e 01       	movw	r16, r28
     6d6:	1c 5f       	subi	r17, 0xFC	; 252
     6d8:	c8 01       	movw	r24, r16
     6da:	0e 94 4a 26 	call	0x4c94	; 0x4c94 <_ZN3I2C9twi_startEv>
     6de:	68 e7       	ldi	r22, 0x78	; 120
     6e0:	c8 01       	movw	r24, r16
     6e2:	0e 94 52 26 	call	0x4ca4	; 0x4ca4 <_ZN3I2C9twi_writeEh>
     6e6:	60 e4       	ldi	r22, 0x40	; 64
     6e8:	c8 01       	movw	r24, r16
     6ea:	0e 94 52 26 	call	0x4ca4	; 0x4ca4 <_ZN3I2C9twi_writeEh>
     6ee:	78 01       	movw	r14, r16
     6f0:	69 91       	ld	r22, Y+
     6f2:	c8 01       	movw	r24, r16
     6f4:	0e 94 52 26 	call	0x4ca4	; 0x4ca4 <_ZN3I2C9twi_writeEh>
     6f8:	ce 15       	cp	r28, r14
     6fa:	df 05       	cpc	r29, r15
     6fc:	c9 f7       	brne	.-14     	; 0x6f0 <_ZN7Display9sendFrameEv+0x4c>
     6fe:	c8 01       	movw	r24, r16
     700:	0e 94 4e 26 	call	0x4c9c	; 0x4c9c <_ZN3I2C8twi_stopEv>
     704:	df 91       	pop	r29
     706:	cf 91       	pop	r28
     708:	1f 91       	pop	r17
     70a:	0f 91       	pop	r16
     70c:	ff 90       	pop	r15
     70e:	ef 90       	pop	r14
     710:	08 95       	ret

00000712 <_ZN7Display9drawPixelEhhh>:
     712:	66 23       	and	r22, r22
     714:	ac f1       	brlt	.+106    	; 0x780 <_ZN7Display9drawPixelEhhh+0x6e>
     716:	40 34       	cpi	r20, 0x40	; 64
     718:	98 f5       	brcc	.+102    	; 0x780 <_ZN7Display9drawPixelEhhh+0x6e>
     71a:	21 11       	cpse	r18, r1
     71c:	19 c0       	rjmp	.+50     	; 0x750 <_ZN7Display9drawPixelEhhh+0x3e>
     71e:	24 2f       	mov	r18, r20
     720:	26 95       	lsr	r18
     722:	26 95       	lsr	r18
     724:	26 95       	lsr	r18
     726:	50 e8       	ldi	r21, 0x80	; 128
     728:	25 9f       	mul	r18, r21
     72a:	90 01       	movw	r18, r0
     72c:	11 24       	eor	r1, r1
     72e:	26 0f       	add	r18, r22
     730:	31 1d       	adc	r19, r1
     732:	fc 01       	movw	r30, r24
     734:	e2 0f       	add	r30, r18
     736:	f3 1f       	adc	r31, r19
     738:	47 70       	andi	r20, 0x07	; 7
     73a:	81 e0       	ldi	r24, 0x01	; 1
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	02 c0       	rjmp	.+4      	; 0x744 <_ZN7Display9drawPixelEhhh+0x32>
     740:	88 0f       	add	r24, r24
     742:	99 1f       	adc	r25, r25
     744:	4a 95       	dec	r20
     746:	e2 f7       	brpl	.-8      	; 0x740 <_ZN7Display9drawPixelEhhh+0x2e>
     748:	90 81       	ld	r25, Z
     74a:	89 2b       	or	r24, r25
     74c:	80 83       	st	Z, r24
     74e:	08 95       	ret
     750:	24 2f       	mov	r18, r20
     752:	26 95       	lsr	r18
     754:	26 95       	lsr	r18
     756:	26 95       	lsr	r18
     758:	30 e8       	ldi	r19, 0x80	; 128
     75a:	23 9f       	mul	r18, r19
     75c:	f0 01       	movw	r30, r0
     75e:	11 24       	eor	r1, r1
     760:	e6 0f       	add	r30, r22
     762:	f1 1d       	adc	r31, r1
     764:	e8 0f       	add	r30, r24
     766:	f9 1f       	adc	r31, r25
     768:	47 70       	andi	r20, 0x07	; 7
     76a:	81 e0       	ldi	r24, 0x01	; 1
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	02 c0       	rjmp	.+4      	; 0x774 <_ZN7Display9drawPixelEhhh+0x62>
     770:	88 0f       	add	r24, r24
     772:	99 1f       	adc	r25, r25
     774:	4a 95       	dec	r20
     776:	e2 f7       	brpl	.-8      	; 0x770 <_ZN7Display9drawPixelEhhh+0x5e>
     778:	80 95       	com	r24
     77a:	90 81       	ld	r25, Z
     77c:	89 23       	and	r24, r25
     77e:	80 83       	st	Z, r24
     780:	08 95       	ret

00000782 <_ZN7Display9drawVLineEhhh>:
     782:	ff 92       	push	r15
     784:	0f 93       	push	r16
     786:	1f 93       	push	r17
     788:	cf 93       	push	r28
     78a:	df 93       	push	r29
     78c:	22 23       	and	r18, r18
     78e:	69 f0       	breq	.+26     	; 0x7aa <_ZN7Display9drawVLineEhhh+0x28>
     790:	c4 2f       	mov	r28, r20
     792:	f6 2e       	mov	r15, r22
     794:	8c 01       	movw	r16, r24
     796:	d2 2f       	mov	r29, r18
     798:	d4 0f       	add	r29, r20
     79a:	20 e0       	ldi	r18, 0x00	; 0
     79c:	4c 2f       	mov	r20, r28
     79e:	6f 2d       	mov	r22, r15
     7a0:	c8 01       	movw	r24, r16
     7a2:	b7 df       	rcall	.-146    	; 0x712 <_ZN7Display9drawPixelEhhh>
     7a4:	cf 5f       	subi	r28, 0xFF	; 255
     7a6:	cd 13       	cpse	r28, r29
     7a8:	f8 cf       	rjmp	.-16     	; 0x79a <_ZN7Display9drawVLineEhhh+0x18>
     7aa:	df 91       	pop	r29
     7ac:	cf 91       	pop	r28
     7ae:	1f 91       	pop	r17
     7b0:	0f 91       	pop	r16
     7b2:	ff 90       	pop	r15
     7b4:	08 95       	ret

000007b6 <_ZN7Display9drawHLineEhhh>:
     7b6:	ff 92       	push	r15
     7b8:	0f 93       	push	r16
     7ba:	1f 93       	push	r17
     7bc:	cf 93       	push	r28
     7be:	df 93       	push	r29
     7c0:	22 23       	and	r18, r18
     7c2:	69 f0       	breq	.+26     	; 0x7de <_ZN7Display9drawHLineEhhh+0x28>
     7c4:	f4 2e       	mov	r15, r20
     7c6:	c6 2f       	mov	r28, r22
     7c8:	8c 01       	movw	r16, r24
     7ca:	d2 2f       	mov	r29, r18
     7cc:	d6 0f       	add	r29, r22
     7ce:	20 e0       	ldi	r18, 0x00	; 0
     7d0:	4f 2d       	mov	r20, r15
     7d2:	6c 2f       	mov	r22, r28
     7d4:	c8 01       	movw	r24, r16
     7d6:	9d df       	rcall	.-198    	; 0x712 <_ZN7Display9drawPixelEhhh>
     7d8:	cf 5f       	subi	r28, 0xFF	; 255
     7da:	cd 13       	cpse	r28, r29
     7dc:	f8 cf       	rjmp	.-16     	; 0x7ce <_ZN7Display9drawHLineEhhh+0x18>
     7de:	df 91       	pop	r29
     7e0:	cf 91       	pop	r28
     7e2:	1f 91       	pop	r17
     7e4:	0f 91       	pop	r16
     7e6:	ff 90       	pop	r15
     7e8:	08 95       	ret

000007ea <_ZN7Display13drawRectangleEhhhhh>:
     7ea:	5f 92       	push	r5
     7ec:	6f 92       	push	r6
     7ee:	7f 92       	push	r7
     7f0:	8f 92       	push	r8
     7f2:	9f 92       	push	r9
     7f4:	af 92       	push	r10
     7f6:	bf 92       	push	r11
     7f8:	cf 92       	push	r12
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	cf 93       	push	r28
     806:	df 93       	push	r29
     808:	6c 01       	movw	r12, r24
     80a:	76 2e       	mov	r7, r22
     80c:	84 2e       	mov	r8, r20
     80e:	c2 2f       	mov	r28, r18
     810:	a2 2e       	mov	r10, r18
     812:	a6 1a       	sub	r10, r22
     814:	a3 94       	inc	r10
     816:	d0 2f       	mov	r29, r16
     818:	d4 1b       	sub	r29, r20
     81a:	ee 20       	and	r14, r14
     81c:	29 f0       	breq	.+10     	; 0x828 <_ZN7Display13drawRectangleEhhhhh+0x3e>
     81e:	b1 2c       	mov	r11, r1
     820:	1a 14       	cp	r1, r10
     822:	1b 04       	cpc	r1, r11
     824:	24 f1       	brlt	.+72     	; 0x86e <_ZN7Display13drawRectangleEhhhhh+0x84>
     826:	2e c0       	rjmp	.+92     	; 0x884 <_ZN7Display13drawRectangleEhhhhh+0x9a>
     828:	2a 2d       	mov	r18, r10
     82a:	c5 df       	rcall	.-118    	; 0x7b6 <_ZN7Display9drawHLineEhhh>
     82c:	2a 2d       	mov	r18, r10
     82e:	40 2f       	mov	r20, r16
     830:	67 2d       	mov	r22, r7
     832:	c6 01       	movw	r24, r12
     834:	c0 df       	rcall	.-128    	; 0x7b6 <_ZN7Display9drawHLineEhhh>
     836:	2d 2f       	mov	r18, r29
     838:	48 2d       	mov	r20, r8
     83a:	67 2d       	mov	r22, r7
     83c:	c6 01       	movw	r24, r12
     83e:	a1 df       	rcall	.-190    	; 0x782 <_ZN7Display9drawVLineEhhh>
     840:	2d 2f       	mov	r18, r29
     842:	48 2d       	mov	r20, r8
     844:	6c 2f       	mov	r22, r28
     846:	c6 01       	movw	r24, r12
     848:	9c df       	rcall	.-200    	; 0x782 <_ZN7Display9drawVLineEhhh>
     84a:	1c c0       	rjmp	.+56     	; 0x884 <_ZN7Display13drawRectangleEhhhhh+0x9a>
     84c:	4c 2f       	mov	r20, r28
     84e:	48 0d       	add	r20, r8
     850:	20 e0       	ldi	r18, 0x00	; 0
     852:	69 2d       	mov	r22, r9
     854:	c6 01       	movw	r24, r12
     856:	5d df       	rcall	.-326    	; 0x712 <_ZN7Display9drawPixelEhhh>
     858:	21 96       	adiw	r28, 0x01	; 1
     85a:	0c 17       	cp	r16, r28
     85c:	1d 07       	cpc	r17, r29
     85e:	b4 f7       	brge	.-20     	; 0x84c <_ZN7Display13drawRectangleEhhhhh+0x62>
     860:	8f ef       	ldi	r24, 0xFF	; 255
     862:	e8 1a       	sub	r14, r24
     864:	f8 0a       	sbc	r15, r24
     866:	ea 14       	cp	r14, r10
     868:	fb 04       	cpc	r15, r11
     86a:	3c f0       	brlt	.+14     	; 0x87a <_ZN7Display13drawRectangleEhhhhh+0x90>
     86c:	0b c0       	rjmp	.+22     	; 0x884 <_ZN7Display13drawRectangleEhhhhh+0x9a>
     86e:	e1 2c       	mov	r14, r1
     870:	f1 2c       	mov	r15, r1
     872:	0d 2f       	mov	r16, r29
     874:	10 e0       	ldi	r17, 0x00	; 0
     876:	51 2c       	mov	r5, r1
     878:	61 2c       	mov	r6, r1
     87a:	c5 2d       	mov	r28, r5
     87c:	d6 2d       	mov	r29, r6
     87e:	97 2c       	mov	r9, r7
     880:	9e 0c       	add	r9, r14
     882:	e4 cf       	rjmp	.-56     	; 0x84c <_ZN7Display13drawRectangleEhhhhh+0x62>
     884:	df 91       	pop	r29
     886:	cf 91       	pop	r28
     888:	1f 91       	pop	r17
     88a:	0f 91       	pop	r16
     88c:	ff 90       	pop	r15
     88e:	ef 90       	pop	r14
     890:	df 90       	pop	r13
     892:	cf 90       	pop	r12
     894:	bf 90       	pop	r11
     896:	af 90       	pop	r10
     898:	9f 90       	pop	r9
     89a:	8f 90       	pop	r8
     89c:	7f 90       	pop	r7
     89e:	6f 90       	pop	r6
     8a0:	5f 90       	pop	r5
     8a2:	08 95       	ret

000008a4 <_ZN7Display9draw_lineEhhhf>:
     8a4:	3f 92       	push	r3
     8a6:	4f 92       	push	r4
     8a8:	5f 92       	push	r5
     8aa:	6f 92       	push	r6
     8ac:	7f 92       	push	r7
     8ae:	8f 92       	push	r8
     8b0:	9f 92       	push	r9
     8b2:	af 92       	push	r10
     8b4:	bf 92       	push	r11
     8b6:	cf 92       	push	r12
     8b8:	df 92       	push	r13
     8ba:	ef 92       	push	r14
     8bc:	ff 92       	push	r15
     8be:	0f 93       	push	r16
     8c0:	1f 93       	push	r17
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	cd b7       	in	r28, 0x3d	; 61
     8c8:	de b7       	in	r29, 0x3e	; 62
     8ca:	2c 97       	sbiw	r28, 0x0c	; 12
     8cc:	0f b6       	in	r0, 0x3f	; 63
     8ce:	f8 94       	cli
     8d0:	de bf       	out	0x3e, r29	; 62
     8d2:	0f be       	out	0x3f, r0	; 63
     8d4:	cd bf       	out	0x3d, r28	; 61
     8d6:	22 23       	and	r18, r18
     8d8:	09 f4       	brne	.+2      	; 0x8dc <_ZN7Display9draw_lineEhhhf+0x38>
     8da:	70 c0       	rjmp	.+224    	; 0x9bc <_ZN7Display9draw_lineEhhhf+0x118>
     8dc:	47 01       	movw	r8, r14
     8de:	58 01       	movw	r10, r16
     8e0:	02 2f       	mov	r16, r18
     8e2:	44 2e       	mov	r4, r20
     8e4:	f6 2e       	mov	r15, r22
     8e6:	9a 87       	std	Y+10, r25	; 0x0a
     8e8:	89 87       	std	Y+9, r24	; 0x09
     8ea:	c5 01       	movw	r24, r10
     8ec:	b4 01       	movw	r22, r8
     8ee:	0e 94 3b 31 	call	0x6276	; 0x6276 <cos>
     8f2:	69 83       	std	Y+1, r22	; 0x01
     8f4:	7a 83       	std	Y+2, r23	; 0x02
     8f6:	8b 83       	std	Y+3, r24	; 0x03
     8f8:	9c 83       	std	Y+4, r25	; 0x04
     8fa:	c5 01       	movw	r24, r10
     8fc:	b4 01       	movw	r22, r8
     8fe:	0e 94 55 33 	call	0x66aa	; 0x66aa <sin>
     902:	6d 83       	std	Y+5, r22	; 0x05
     904:	7e 83       	std	Y+6, r23	; 0x06
     906:	8f 83       	std	Y+7, r24	; 0x07
     908:	98 87       	std	Y+8, r25	; 0x08
     90a:	01 50       	subi	r16, 0x01	; 1
     90c:	10 e0       	ldi	r17, 0x00	; 0
     90e:	0f 5f       	subi	r16, 0xFF	; 255
     910:	1f 4f       	sbci	r17, 0xFF	; 255
     912:	c1 2c       	mov	r12, r1
     914:	d1 2c       	mov	r13, r1
     916:	51 2c       	mov	r5, r1
     918:	61 2c       	mov	r6, r1
     91a:	71 2c       	mov	r7, r1
     91c:	8f 2c       	mov	r8, r15
     91e:	91 2c       	mov	r9, r1
     920:	a1 2c       	mov	r10, r1
     922:	b1 2c       	mov	r11, r1
     924:	dc 86       	std	Y+12, r13	; 0x0c
     926:	cb 86       	std	Y+11, r12	; 0x0b
     928:	2b 85       	ldd	r18, Y+11	; 0x0b
     92a:	3c 85       	ldd	r19, Y+12	; 0x0c
     92c:	b9 01       	movw	r22, r18
     92e:	33 0f       	add	r19, r19
     930:	88 0b       	sbc	r24, r24
     932:	99 0b       	sbc	r25, r25
     934:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     938:	2d 81       	ldd	r18, Y+5	; 0x05
     93a:	3e 81       	ldd	r19, Y+6	; 0x06
     93c:	4f 81       	ldd	r20, Y+7	; 0x07
     93e:	58 85       	ldd	r21, Y+8	; 0x08
     940:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     944:	6b 01       	movw	r12, r22
     946:	7c 01       	movw	r14, r24
     948:	c3 01       	movw	r24, r6
     94a:	b2 01       	movw	r22, r4
     94c:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     950:	9b 01       	movw	r18, r22
     952:	ac 01       	movw	r20, r24
     954:	c7 01       	movw	r24, r14
     956:	b6 01       	movw	r22, r12
     958:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
     95c:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
     960:	36 2e       	mov	r3, r22
     962:	6b 85       	ldd	r22, Y+11	; 0x0b
     964:	7c 85       	ldd	r23, Y+12	; 0x0c
     966:	71 95       	neg	r23
     968:	61 95       	neg	r22
     96a:	71 09       	sbc	r23, r1
     96c:	07 2e       	mov	r0, r23
     96e:	00 0c       	add	r0, r0
     970:	88 0b       	sbc	r24, r24
     972:	99 0b       	sbc	r25, r25
     974:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     978:	29 81       	ldd	r18, Y+1	; 0x01
     97a:	3a 81       	ldd	r19, Y+2	; 0x02
     97c:	4b 81       	ldd	r20, Y+3	; 0x03
     97e:	5c 81       	ldd	r21, Y+4	; 0x04
     980:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     984:	6b 01       	movw	r12, r22
     986:	7c 01       	movw	r14, r24
     988:	c5 01       	movw	r24, r10
     98a:	b4 01       	movw	r22, r8
     98c:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     990:	9b 01       	movw	r18, r22
     992:	ac 01       	movw	r20, r24
     994:	c7 01       	movw	r24, r14
     996:	b6 01       	movw	r22, r12
     998:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
     99c:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
     9a0:	20 e0       	ldi	r18, 0x00	; 0
     9a2:	43 2d       	mov	r20, r3
     9a4:	89 85       	ldd	r24, Y+9	; 0x09
     9a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     9a8:	b4 de       	rcall	.-664    	; 0x712 <_ZN7Display9drawPixelEhhh>
     9aa:	8b 85       	ldd	r24, Y+11	; 0x0b
     9ac:	9c 85       	ldd	r25, Y+12	; 0x0c
     9ae:	01 96       	adiw	r24, 0x01	; 1
     9b0:	9c 87       	std	Y+12, r25	; 0x0c
     9b2:	8b 87       	std	Y+11, r24	; 0x0b
     9b4:	80 17       	cp	r24, r16
     9b6:	91 07       	cpc	r25, r17
     9b8:	09 f0       	breq	.+2      	; 0x9bc <_ZN7Display9draw_lineEhhhf+0x118>
     9ba:	b6 cf       	rjmp	.-148    	; 0x928 <_ZN7Display9draw_lineEhhhf+0x84>
     9bc:	2c 96       	adiw	r28, 0x0c	; 12
     9be:	0f b6       	in	r0, 0x3f	; 63
     9c0:	f8 94       	cli
     9c2:	de bf       	out	0x3e, r29	; 62
     9c4:	0f be       	out	0x3f, r0	; 63
     9c6:	cd bf       	out	0x3d, r28	; 61
     9c8:	df 91       	pop	r29
     9ca:	cf 91       	pop	r28
     9cc:	1f 91       	pop	r17
     9ce:	0f 91       	pop	r16
     9d0:	ff 90       	pop	r15
     9d2:	ef 90       	pop	r14
     9d4:	df 90       	pop	r13
     9d6:	cf 90       	pop	r12
     9d8:	bf 90       	pop	r11
     9da:	af 90       	pop	r10
     9dc:	9f 90       	pop	r9
     9de:	8f 90       	pop	r8
     9e0:	7f 90       	pop	r7
     9e2:	6f 90       	pop	r6
     9e4:	5f 90       	pop	r5
     9e6:	4f 90       	pop	r4
     9e8:	3f 90       	pop	r3
     9ea:	08 95       	ret

000009ec <_ZN7Display13draw_triangleEhhhff>:
     9ec:	2f 92       	push	r2
     9ee:	3f 92       	push	r3
     9f0:	4f 92       	push	r4
     9f2:	5f 92       	push	r5
     9f4:	6f 92       	push	r6
     9f6:	7f 92       	push	r7
     9f8:	8f 92       	push	r8
     9fa:	9f 92       	push	r9
     9fc:	af 92       	push	r10
     9fe:	bf 92       	push	r11
     a00:	cf 92       	push	r12
     a02:	df 92       	push	r13
     a04:	ef 92       	push	r14
     a06:	ff 92       	push	r15
     a08:	0f 93       	push	r16
     a0a:	1f 93       	push	r17
     a0c:	cf 93       	push	r28
     a0e:	df 93       	push	r29
     a10:	cd b7       	in	r28, 0x3d	; 61
     a12:	de b7       	in	r29, 0x3e	; 62
     a14:	2f 97       	sbiw	r28, 0x0f	; 15
     a16:	0f b6       	in	r0, 0x3f	; 63
     a18:	f8 94       	cli
     a1a:	de bf       	out	0x3e, r29	; 62
     a1c:	0f be       	out	0x3f, r0	; 63
     a1e:	cd bf       	out	0x3d, r28	; 61
     a20:	9e 83       	std	Y+6, r25	; 0x06
     a22:	8d 83       	std	Y+5, r24	; 0x05
     a24:	6f 87       	std	Y+15, r22	; 0x0f
     a26:	34 2e       	mov	r3, r20
     a28:	72 2e       	mov	r7, r18
     a2a:	e9 82       	std	Y+1, r14	; 0x01
     a2c:	fa 82       	std	Y+2, r15	; 0x02
     a2e:	0b 83       	std	Y+3, r16	; 0x03
     a30:	1c 83       	std	Y+4, r17	; 0x04
     a32:	c6 01       	movw	r24, r12
     a34:	b5 01       	movw	r22, r10
     a36:	25 e3       	ldi	r18, 0x35	; 53
     a38:	3a ef       	ldi	r19, 0xFA	; 250
     a3a:	4e e8       	ldi	r20, 0x8E	; 142
     a3c:	5c e3       	ldi	r21, 0x3C	; 60
     a3e:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     a42:	4b 01       	movw	r8, r22
     a44:	5c 01       	movw	r10, r24
     a46:	25 e3       	ldi	r18, 0x35	; 53
     a48:	3a ef       	ldi	r19, 0xFA	; 250
     a4a:	4e e8       	ldi	r20, 0x8E	; 142
     a4c:	5c e3       	ldi	r21, 0x3C	; 60
     a4e:	c8 01       	movw	r24, r16
     a50:	b7 01       	movw	r22, r14
     a52:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     a56:	69 83       	std	Y+1, r22	; 0x01
     a58:	7a 83       	std	Y+2, r23	; 0x02
     a5a:	8b 83       	std	Y+3, r24	; 0x03
     a5c:	9c 83       	std	Y+4, r25	; 0x04
     a5e:	67 2c       	mov	r6, r7
     a60:	66 94       	lsr	r6
     a62:	85 01       	movw	r16, r10
     a64:	74 01       	movw	r14, r8
     a66:	26 2d       	mov	r18, r6
     a68:	43 2d       	mov	r20, r3
     a6a:	6f 85       	ldd	r22, Y+15	; 0x0f
     a6c:	8d 81       	ldd	r24, Y+5	; 0x05
     a6e:	9e 81       	ldd	r25, Y+6	; 0x06
     a70:	19 df       	rcall	.-462    	; 0x8a4 <_ZN7Display9draw_lineEhhhf>
     a72:	2b ed       	ldi	r18, 0xDB	; 219
     a74:	3f e0       	ldi	r19, 0x0F	; 15
     a76:	49 e4       	ldi	r20, 0x49	; 73
     a78:	50 e4       	ldi	r21, 0x40	; 64
     a7a:	c5 01       	movw	r24, r10
     a7c:	b4 01       	movw	r22, r8
     a7e:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
     a82:	7b 01       	movw	r14, r22
     a84:	8c 01       	movw	r16, r24
     a86:	26 2d       	mov	r18, r6
     a88:	43 2d       	mov	r20, r3
     a8a:	6f 85       	ldd	r22, Y+15	; 0x0f
     a8c:	8d 81       	ldd	r24, Y+5	; 0x05
     a8e:	9e 81       	ldd	r25, Y+6	; 0x06
     a90:	09 df       	rcall	.-494    	; 0x8a4 <_ZN7Display9draw_lineEhhhf>
     a92:	69 81       	ldd	r22, Y+1	; 0x01
     a94:	7a 81       	ldd	r23, Y+2	; 0x02
     a96:	8b 81       	ldd	r24, Y+3	; 0x03
     a98:	9c 81       	ldd	r25, Y+4	; 0x04
     a9a:	0e 94 a0 33 	call	0x6740	; 0x6740 <tan>
     a9e:	6b 01       	movw	r12, r22
     aa0:	7c 01       	movw	r14, r24
     aa2:	66 2d       	mov	r22, r6
     aa4:	70 e0       	ldi	r23, 0x00	; 0
     aa6:	80 e0       	ldi	r24, 0x00	; 0
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     aae:	a7 01       	movw	r20, r14
     ab0:	96 01       	movw	r18, r12
     ab2:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     ab6:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
     aba:	6b 87       	std	Y+11, r22	; 0x0b
     abc:	2b ed       	ldi	r18, 0xDB	; 219
     abe:	3f e0       	ldi	r19, 0x0F	; 15
     ac0:	49 ec       	ldi	r20, 0xC9	; 201
     ac2:	5f e3       	ldi	r21, 0x3F	; 63
     ac4:	c5 01       	movw	r24, r10
     ac6:	b4 01       	movw	r22, r8
     ac8:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
     acc:	6f 83       	std	Y+7, r22	; 0x07
     ace:	78 87       	std	Y+8, r23	; 0x08
     ad0:	89 87       	std	Y+9, r24	; 0x09
     ad2:	9a 87       	std	Y+10, r25	; 0x0a
     ad4:	7b 01       	movw	r14, r22
     ad6:	8c 01       	movw	r16, r24
     ad8:	2b 85       	ldd	r18, Y+11	; 0x0b
     ada:	43 2d       	mov	r20, r3
     adc:	6f 85       	ldd	r22, Y+15	; 0x0f
     ade:	8d 81       	ldd	r24, Y+5	; 0x05
     ae0:	9e 81       	ldd	r25, Y+6	; 0x06
     ae2:	e0 de       	rcall	.-576    	; 0x8a4 <_ZN7Display9draw_lineEhhhf>
     ae4:	69 81       	ldd	r22, Y+1	; 0x01
     ae6:	7a 81       	ldd	r23, Y+2	; 0x02
     ae8:	8b 81       	ldd	r24, Y+3	; 0x03
     aea:	9c 81       	ldd	r25, Y+4	; 0x04
     aec:	0e 94 3b 31 	call	0x6276	; 0x6276 <cos>
     af0:	6b 01       	movw	r12, r22
     af2:	7c 01       	movw	r14, r24
     af4:	67 2d       	mov	r22, r7
     af6:	70 e0       	ldi	r23, 0x00	; 0
     af8:	80 e0       	ldi	r24, 0x00	; 0
     afa:	90 e0       	ldi	r25, 0x00	; 0
     afc:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     b00:	2b 01       	movw	r4, r22
     b02:	3c 01       	movw	r6, r24
     b04:	a7 01       	movw	r20, r14
     b06:	96 01       	movw	r18, r12
     b08:	c7 01       	movw	r24, r14
     b0a:	b6 01       	movw	r22, r12
     b0c:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
     b10:	9b 01       	movw	r18, r22
     b12:	ac 01       	movw	r20, r24
     b14:	c3 01       	movw	r24, r6
     b16:	b2 01       	movw	r22, r4
     b18:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
     b1c:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
     b20:	26 2e       	mov	r2, r22
     b22:	2b 85       	ldd	r18, Y+11	; 0x0b
     b24:	62 2f       	mov	r22, r18
     b26:	70 e0       	ldi	r23, 0x00	; 0
     b28:	80 e0       	ldi	r24, 0x00	; 0
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     b30:	6b 87       	std	Y+11, r22	; 0x0b
     b32:	7c 87       	std	Y+12, r23	; 0x0c
     b34:	8d 87       	std	Y+13, r24	; 0x0d
     b36:	9e 87       	std	Y+14, r25	; 0x0e
     b38:	6f 81       	ldd	r22, Y+7	; 0x07
     b3a:	78 85       	ldd	r23, Y+8	; 0x08
     b3c:	89 85       	ldd	r24, Y+9	; 0x09
     b3e:	9a 85       	ldd	r25, Y+10	; 0x0a
     b40:	0e 94 3b 31 	call	0x6276	; 0x6276 <cos>
     b44:	6b 01       	movw	r12, r22
     b46:	7c 01       	movw	r14, r24
     b48:	ef 85       	ldd	r30, Y+15	; 0x0f
     b4a:	6e 2f       	mov	r22, r30
     b4c:	70 e0       	ldi	r23, 0x00	; 0
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     b56:	2b 01       	movw	r4, r22
     b58:	3c 01       	movw	r6, r24
     b5a:	a7 01       	movw	r20, r14
     b5c:	96 01       	movw	r18, r12
     b5e:	6b 85       	ldd	r22, Y+11	; 0x0b
     b60:	7c 85       	ldd	r23, Y+12	; 0x0c
     b62:	8d 85       	ldd	r24, Y+13	; 0x0d
     b64:	9e 85       	ldd	r25, Y+14	; 0x0e
     b66:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     b6a:	9b 01       	movw	r18, r22
     b6c:	ac 01       	movw	r20, r24
     b6e:	c3 01       	movw	r24, r6
     b70:	b2 01       	movw	r22, r4
     b72:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
     b76:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
     b7a:	6f 87       	std	Y+15, r22	; 0x0f
     b7c:	6f 81       	ldd	r22, Y+7	; 0x07
     b7e:	78 85       	ldd	r23, Y+8	; 0x08
     b80:	89 85       	ldd	r24, Y+9	; 0x09
     b82:	9a 85       	ldd	r25, Y+10	; 0x0a
     b84:	0e 94 55 33 	call	0x66aa	; 0x66aa <sin>
     b88:	2b 01       	movw	r4, r22
     b8a:	3c 01       	movw	r6, r24
     b8c:	63 2d       	mov	r22, r3
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	80 e0       	ldi	r24, 0x00	; 0
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     b98:	6b 01       	movw	r12, r22
     b9a:	7c 01       	movw	r14, r24
     b9c:	a3 01       	movw	r20, r6
     b9e:	92 01       	movw	r18, r4
     ba0:	6b 85       	ldd	r22, Y+11	; 0x0b
     ba2:	7c 85       	ldd	r23, Y+12	; 0x0c
     ba4:	8d 85       	ldd	r24, Y+13	; 0x0d
     ba6:	9e 85       	ldd	r25, Y+14	; 0x0e
     ba8:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     bac:	9b 01       	movw	r18, r22
     bae:	ac 01       	movw	r20, r24
     bb0:	c7 01       	movw	r24, r14
     bb2:	b6 01       	movw	r22, r12
     bb4:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
     bb8:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
     bbc:	d6 2e       	mov	r13, r22
     bbe:	a5 01       	movw	r20, r10
     bc0:	94 01       	movw	r18, r8
     bc2:	69 81       	ldd	r22, Y+1	; 0x01
     bc4:	7a 81       	ldd	r23, Y+2	; 0x02
     bc6:	8b 81       	ldd	r24, Y+3	; 0x03
     bc8:	9c 81       	ldd	r25, Y+4	; 0x04
     bca:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
     bce:	7b 01       	movw	r14, r22
     bd0:	8c 01       	movw	r16, r24
     bd2:	22 2d       	mov	r18, r2
     bd4:	4d 2d       	mov	r20, r13
     bd6:	6f 85       	ldd	r22, Y+15	; 0x0f
     bd8:	8d 81       	ldd	r24, Y+5	; 0x05
     bda:	9e 81       	ldd	r25, Y+6	; 0x06
     bdc:	63 de       	rcall	.-826    	; 0x8a4 <_ZN7Display9draw_lineEhhhf>
     bde:	29 81       	ldd	r18, Y+1	; 0x01
     be0:	3a 81       	ldd	r19, Y+2	; 0x02
     be2:	4b 81       	ldd	r20, Y+3	; 0x03
     be4:	5c 81       	ldd	r21, Y+4	; 0x04
     be6:	c5 01       	movw	r24, r10
     be8:	b4 01       	movw	r22, r8
     bea:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
     bee:	2b ed       	ldi	r18, 0xDB	; 219
     bf0:	3f e0       	ldi	r19, 0x0F	; 15
     bf2:	49 e4       	ldi	r20, 0x49	; 73
     bf4:	50 e4       	ldi	r21, 0x40	; 64
     bf6:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
     bfa:	7b 01       	movw	r14, r22
     bfc:	8c 01       	movw	r16, r24
     bfe:	22 2d       	mov	r18, r2
     c00:	4d 2d       	mov	r20, r13
     c02:	6f 85       	ldd	r22, Y+15	; 0x0f
     c04:	8d 81       	ldd	r24, Y+5	; 0x05
     c06:	9e 81       	ldd	r25, Y+6	; 0x06
     c08:	4d de       	rcall	.-870    	; 0x8a4 <_ZN7Display9draw_lineEhhhf>
     c0a:	2f 96       	adiw	r28, 0x0f	; 15
     c0c:	0f b6       	in	r0, 0x3f	; 63
     c0e:	f8 94       	cli
     c10:	de bf       	out	0x3e, r29	; 62
     c12:	0f be       	out	0x3f, r0	; 63
     c14:	cd bf       	out	0x3d, r28	; 61
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	1f 91       	pop	r17
     c1c:	0f 91       	pop	r16
     c1e:	ff 90       	pop	r15
     c20:	ef 90       	pop	r14
     c22:	df 90       	pop	r13
     c24:	cf 90       	pop	r12
     c26:	bf 90       	pop	r11
     c28:	af 90       	pop	r10
     c2a:	9f 90       	pop	r9
     c2c:	8f 90       	pop	r8
     c2e:	7f 90       	pop	r7
     c30:	6f 90       	pop	r6
     c32:	5f 90       	pop	r5
     c34:	4f 90       	pop	r4
     c36:	3f 90       	pop	r3
     c38:	2f 90       	pop	r2
     c3a:	08 95       	ret

00000c3c <_ZN7Display9draw_ASCIEhhh>:
     c3c:	0f 93       	push	r16
     c3e:	1f 93       	push	r17
     c40:	cf 93       	push	r28
     c42:	df 93       	push	r29
     c44:	61 32       	cpi	r22, 0x21	; 33
     c46:	08 f4       	brcc	.+2      	; 0xc4a <_ZN7Display9draw_ASCIEhhh+0xe>
     c48:	3e c0       	rjmp	.+124    	; 0xcc6 <_ZN7Display9draw_ASCIEhhh+0x8a>
     c4a:	a4 2f       	mov	r26, r20
     c4c:	b0 e0       	ldi	r27, 0x00	; 0
     c4e:	02 2f       	mov	r16, r18
     c50:	06 95       	lsr	r16
     c52:	06 95       	lsr	r16
     c54:	06 95       	lsr	r16
     c56:	30 e8       	ldi	r19, 0x80	; 128
     c58:	03 9f       	mul	r16, r19
     c5a:	80 01       	movw	r16, r0
     c5c:	11 24       	eor	r1, r1
     c5e:	61 52       	subi	r22, 0x21	; 33
     c60:	70 e0       	ldi	r23, 0x00	; 0
     c62:	fb 01       	movw	r30, r22
     c64:	ee 0f       	add	r30, r30
     c66:	ff 1f       	adc	r31, r31
     c68:	ee 0f       	add	r30, r30
     c6a:	ff 1f       	adc	r31, r31
     c6c:	e6 0f       	add	r30, r22
     c6e:	f7 1f       	adc	r31, r23
     c70:	e2 5a       	subi	r30, 0xA2	; 162
     c72:	fd 4f       	sbci	r31, 0xFD	; 253
     c74:	ad 01       	movw	r20, r26
     c76:	40 0f       	add	r20, r16
     c78:	51 1f       	adc	r21, r17
     c7a:	ec 01       	movw	r28, r24
     c7c:	c4 0f       	add	r28, r20
     c7e:	d5 1f       	adc	r29, r21
     c80:	00 58       	subi	r16, 0x80	; 128
     c82:	1f 4f       	sbci	r17, 0xFF	; 255
     c84:	a0 0f       	add	r26, r16
     c86:	b1 1f       	adc	r27, r17
     c88:	a8 0f       	add	r26, r24
     c8a:	b9 1f       	adc	r27, r25
     c8c:	4b 5f       	subi	r20, 0xFB	; 251
     c8e:	5f 4f       	sbci	r21, 0xFF	; 255
     c90:	48 0f       	add	r20, r24
     c92:	59 1f       	adc	r21, r25
     c94:	27 70       	andi	r18, 0x07	; 7
     c96:	64 91       	lpm	r22, Z
     c98:	70 e0       	ldi	r23, 0x00	; 0
     c9a:	02 2e       	mov	r0, r18
     c9c:	02 c0       	rjmp	.+4      	; 0xca2 <_ZN7Display9draw_ASCIEhhh+0x66>
     c9e:	66 0f       	add	r22, r22
     ca0:	77 1f       	adc	r23, r23
     ca2:	0a 94       	dec	r0
     ca4:	e2 f7       	brpl	.-8      	; 0xc9e <_ZN7Display9draw_ASCIEhhh+0x62>
     ca6:	98 81       	ld	r25, Y
     ca8:	96 2b       	or	r25, r22
     caa:	99 93       	st	Y+, r25
     cac:	67 2f       	mov	r22, r23
     cae:	77 27       	eor	r23, r23
     cb0:	61 15       	cp	r22, r1
     cb2:	71 05       	cpc	r23, r1
     cb4:	19 f0       	breq	.+6      	; 0xcbc <_ZN7Display9draw_ASCIEhhh+0x80>
     cb6:	8c 91       	ld	r24, X
     cb8:	68 2b       	or	r22, r24
     cba:	6c 93       	st	X, r22
     cbc:	31 96       	adiw	r30, 0x01	; 1
     cbe:	11 96       	adiw	r26, 0x01	; 1
     cc0:	c4 17       	cp	r28, r20
     cc2:	d5 07       	cpc	r29, r21
     cc4:	41 f7       	brne	.-48     	; 0xc96 <_ZN7Display9draw_ASCIEhhh+0x5a>
     cc6:	df 91       	pop	r29
     cc8:	cf 91       	pop	r28
     cca:	1f 91       	pop	r17
     ccc:	0f 91       	pop	r16
     cce:	08 95       	ret

00000cd0 <_ZN7Display16draw_number16x16Ehhh>:
     cd0:	cf 92       	push	r12
     cd2:	df 92       	push	r13
     cd4:	ef 92       	push	r14
     cd6:	ff 92       	push	r15
     cd8:	0f 93       	push	r16
     cda:	1f 93       	push	r17
     cdc:	cf 93       	push	r28
     cde:	df 93       	push	r29
     ce0:	6a 30       	cpi	r22, 0x0A	; 10
     ce2:	08 f0       	brcs	.+2      	; 0xce6 <_ZN7Display16draw_number16x16Ehhh+0x16>
     ce4:	66 c0       	rjmp	.+204    	; 0xdb2 <_ZN7Display16draw_number16x16Ehhh+0xe2>
     ce6:	50 e0       	ldi	r21, 0x00	; 0
     ce8:	02 2f       	mov	r16, r18
     cea:	06 95       	lsr	r16
     cec:	06 95       	lsr	r16
     cee:	06 95       	lsr	r16
     cf0:	10 e0       	ldi	r17, 0x00	; 0
     cf2:	d8 01       	movw	r26, r16
     cf4:	b6 95       	lsr	r27
     cf6:	ba 2f       	mov	r27, r26
     cf8:	aa 27       	eor	r26, r26
     cfa:	b7 95       	ror	r27
     cfc:	a7 95       	ror	r26
     cfe:	0f 5f       	subi	r16, 0xFF	; 255
     d00:	1f 4f       	sbci	r17, 0xFF	; 255
     d02:	16 95       	lsr	r17
     d04:	10 2f       	mov	r17, r16
     d06:	00 27       	eor	r16, r16
     d08:	17 95       	ror	r17
     d0a:	07 95       	ror	r16
     d0c:	7d 01       	movw	r14, r26
     d0e:	30 e8       	ldi	r19, 0x80	; 128
     d10:	e3 0e       	add	r14, r19
     d12:	f1 1c       	adc	r15, r1
     d14:	e4 0e       	add	r14, r20
     d16:	f5 1e       	adc	r15, r21
     d18:	e8 0e       	add	r14, r24
     d1a:	f9 1e       	adc	r15, r25
     d1c:	ea 01       	movw	r28, r20
     d1e:	c0 0f       	add	r28, r16
     d20:	d1 1f       	adc	r29, r17
     d22:	60 97       	sbiw	r28, 0x10	; 16
     d24:	c8 0f       	add	r28, r24
     d26:	d9 1f       	adc	r29, r25
     d28:	04 0f       	add	r16, r20
     d2a:	15 1f       	adc	r17, r21
     d2c:	00 59       	subi	r16, 0x90	; 144
     d2e:	1f 4f       	sbci	r17, 0xFF	; 255
     d30:	08 0f       	add	r16, r24
     d32:	19 1f       	adc	r17, r25
     d34:	a4 0f       	add	r26, r20
     d36:	b5 1f       	adc	r27, r21
     d38:	a8 0f       	add	r26, r24
     d3a:	b9 1f       	adc	r27, r25
     d3c:	80 e2       	ldi	r24, 0x20	; 32
     d3e:	68 9f       	mul	r22, r24
     d40:	b0 01       	movw	r22, r0
     d42:	11 24       	eor	r1, r1
     d44:	40 e0       	ldi	r20, 0x00	; 0
     d46:	50 e0       	ldi	r21, 0x00	; 0
     d48:	27 70       	andi	r18, 0x07	; 7
     d4a:	fa 01       	movw	r30, r20
     d4c:	e6 0f       	add	r30, r22
     d4e:	f7 1f       	adc	r31, r23
     d50:	e2 5e       	subi	r30, 0xE2	; 226
     d52:	fe 4f       	sbci	r31, 0xFE	; 254
     d54:	e4 91       	lpm	r30, Z
     d56:	f0 e0       	ldi	r31, 0x00	; 0
     d58:	02 2e       	mov	r0, r18
     d5a:	02 c0       	rjmp	.+4      	; 0xd60 <_ZN7Display16draw_number16x16Ehhh+0x90>
     d5c:	ee 0f       	add	r30, r30
     d5e:	ff 1f       	adc	r31, r31
     d60:	0a 94       	dec	r0
     d62:	e2 f7       	brpl	.-8      	; 0xd5c <_ZN7Display16draw_number16x16Ehhh+0x8c>
     d64:	40 31       	cpi	r20, 0x10	; 16
     d66:	68 f4       	brcc	.+26     	; 0xd82 <_ZN7Display16draw_number16x16Ehhh+0xb2>
     d68:	8c 91       	ld	r24, X
     d6a:	8e 2b       	or	r24, r30
     d6c:	8c 93       	st	X, r24
     d6e:	cf 2e       	mov	r12, r31
     d70:	dd 24       	eor	r13, r13
     d72:	c1 14       	cp	r12, r1
     d74:	d1 04       	cpc	r13, r1
     d76:	89 f0       	breq	.+34     	; 0xd9a <_ZN7Display16draw_number16x16Ehhh+0xca>
     d78:	f7 01       	movw	r30, r14
     d7a:	80 81       	ld	r24, Z
     d7c:	8c 29       	or	r24, r12
     d7e:	80 83       	st	Z, r24
     d80:	0c c0       	rjmp	.+24     	; 0xd9a <_ZN7Display16draw_number16x16Ehhh+0xca>
     d82:	88 81       	ld	r24, Y
     d84:	8e 2b       	or	r24, r30
     d86:	88 83       	st	Y, r24
     d88:	cf 2e       	mov	r12, r31
     d8a:	dd 24       	eor	r13, r13
     d8c:	c1 14       	cp	r12, r1
     d8e:	d1 04       	cpc	r13, r1
     d90:	21 f0       	breq	.+8      	; 0xd9a <_ZN7Display16draw_number16x16Ehhh+0xca>
     d92:	f8 01       	movw	r30, r16
     d94:	80 81       	ld	r24, Z
     d96:	8c 29       	or	r24, r12
     d98:	80 83       	st	Z, r24
     d9a:	4f 5f       	subi	r20, 0xFF	; 255
     d9c:	5f 4f       	sbci	r21, 0xFF	; 255
     d9e:	ff ef       	ldi	r31, 0xFF	; 255
     da0:	ef 1a       	sub	r14, r31
     da2:	ff 0a       	sbc	r15, r31
     da4:	21 96       	adiw	r28, 0x01	; 1
     da6:	0f 5f       	subi	r16, 0xFF	; 255
     da8:	1f 4f       	sbci	r17, 0xFF	; 255
     daa:	11 96       	adiw	r26, 0x01	; 1
     dac:	40 32       	cpi	r20, 0x20	; 32
     dae:	51 05       	cpc	r21, r1
     db0:	61 f6       	brne	.-104    	; 0xd4a <_ZN7Display16draw_number16x16Ehhh+0x7a>
     db2:	df 91       	pop	r29
     db4:	cf 91       	pop	r28
     db6:	1f 91       	pop	r17
     db8:	0f 91       	pop	r16
     dba:	ff 90       	pop	r15
     dbc:	ef 90       	pop	r14
     dbe:	df 90       	pop	r13
     dc0:	cf 90       	pop	r12
     dc2:	08 95       	ret

00000dc4 <_ZN7Display6analogEhhhh>:

void Display::analog(uint8_t stunde, uint8_t minute, uint8_t sekunde, uint8_t sekanzeige){
     dc4:	2f 92       	push	r2
     dc6:	3f 92       	push	r3
     dc8:	4f 92       	push	r4
     dca:	5f 92       	push	r5
     dcc:	6f 92       	push	r6
     dce:	7f 92       	push	r7
     dd0:	8f 92       	push	r8
     dd2:	9f 92       	push	r9
     dd4:	af 92       	push	r10
     dd6:	bf 92       	push	r11
     dd8:	cf 92       	push	r12
     dda:	df 92       	push	r13
     ddc:	ef 92       	push	r14
     dde:	ff 92       	push	r15
     de0:	0f 93       	push	r16
     de2:	1f 93       	push	r17
     de4:	cf 93       	push	r28
     de6:	df 93       	push	r29
     de8:	cd b7       	in	r28, 0x3d	; 61
     dea:	de b7       	in	r29, 0x3e	; 62
     dec:	27 97       	sbiw	r28, 0x07	; 7
     dee:	0f b6       	in	r0, 0x3f	; 63
     df0:	f8 94       	cli
     df2:	de bf       	out	0x3e, r29	; 62
     df4:	0f be       	out	0x3f, r0	; 63
     df6:	cd bf       	out	0x3d, r28	; 61
     df8:	9f 83       	std	Y+7, r25	; 0x07
     dfa:	8e 83       	std	Y+6, r24	; 0x06
     dfc:	6d 83       	std	Y+5, r22	; 0x05
     dfe:	34 2e       	mov	r3, r20
	uint8_t Px=32-1;
	uint8_t Py=32-1;
	uint8_t x=0,y=0;
	float winkel=0;
	
	if (sekanzeige)
     e00:	00 23       	and	r16, r16
     e02:	09 f4       	brne	.+2      	; 0xe06 <_ZN7Display6analogEhhhh+0x42>
     e04:	26 c1       	rjmp	.+588    	; 0x1052 <_ZN7Display6analogEhhhh+0x28e>
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
     e06:	62 2f       	mov	r22, r18
     e08:	70 e0       	ldi	r23, 0x00	; 0
     e0a:	80 e0       	ldi	r24, 0x00	; 0
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     e12:	20 e0       	ldi	r18, 0x00	; 0
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	40 ec       	ldi	r20, 0xC0	; 192
     e18:	50 e4       	ldi	r21, 0x40	; 64
     e1a:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     e1e:	2b ed       	ldi	r18, 0xDB	; 219
     e20:	3f e0       	ldi	r19, 0x0F	; 15
     e22:	49 e4       	ldi	r20, 0x49	; 73
     e24:	50 e4       	ldi	r21, 0x40	; 64
     e26:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     e2a:	20 e0       	ldi	r18, 0x00	; 0
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	44 e3       	ldi	r20, 0x34	; 52
     e30:	53 e4       	ldi	r21, 0x43	; 67
     e32:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
     e36:	2b ed       	ldi	r18, 0xDB	; 219
     e38:	3f e0       	ldi	r19, 0x0F	; 15
     e3a:	49 ec       	ldi	r20, 0xC9	; 201
     e3c:	5f e3       	ldi	r21, 0x3F	; 63
     e3e:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
     e42:	6b 01       	movw	r12, r22
     e44:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     e46:	0e 94 3b 31 	call	0x6276	; 0x6276 <cos>
     e4a:	4b 01       	movw	r8, r22
     e4c:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e4e:	c7 01       	movw	r24, r14
     e50:	b6 01       	movw	r22, r12
     e52:	0e 94 55 33 	call	0x66aa	; 0x66aa <sin>
     e56:	2b 01       	movw	r4, r22
     e58:	3c 01       	movw	r6, r24
     e5a:	00 e0       	ldi	r16, 0x00	; 0
     e5c:	10 e0       	ldi	r17, 0x00	; 0
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e5e:	b8 01       	movw	r22, r16
     e60:	01 2e       	mov	r0, r17
     e62:	00 0c       	add	r0, r0
     e64:	88 0b       	sbc	r24, r24
     e66:	99 0b       	sbc	r25, r25
     e68:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     e6c:	6b 01       	movw	r12, r22
     e6e:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e70:	a3 01       	movw	r20, r6
     e72:	92 01       	movw	r18, r4
     e74:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     e78:	20 e0       	ldi	r18, 0x00	; 0
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	48 ef       	ldi	r20, 0xF8	; 248
     e7e:	51 e4       	ldi	r21, 0x41	; 65
     e80:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
     e84:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
     e88:	26 2e       	mov	r2, r22
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e8a:	a5 01       	movw	r20, r10
     e8c:	94 01       	movw	r18, r8
     e8e:	c7 01       	movw	r24, r14
     e90:	b6 01       	movw	r22, r12
     e92:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     e96:	20 e0       	ldi	r18, 0x00	; 0
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	48 ef       	ldi	r20, 0xF8	; 248
     e9c:	51 e4       	ldi	r21, 0x41	; 65
     e9e:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
     ea2:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     ea6:	20 e0       	ldi	r18, 0x00	; 0
     ea8:	42 2d       	mov	r20, r2
     eaa:	8e 81       	ldd	r24, Y+6	; 0x06
     eac:	9f 81       	ldd	r25, Y+7	; 0x07
     eae:	31 dc       	rcall	.-1950   	; 0x712 <_ZN7Display9drawPixelEhhh>
     eb0:	0f 5f       	subi	r16, 0xFF	; 255
     eb2:	1f 4f       	sbci	r17, 0xFF	; 255
	float winkel=0;
	
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
     eb4:	09 31       	cpi	r16, 0x19	; 25
     eb6:	11 05       	cpc	r17, r1
     eb8:	91 f6       	brne	.-92     	; 0xe5e <_ZN7Display6analogEhhhh+0x9a>
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
     eba:	63 2d       	mov	r22, r3
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	80 e0       	ldi	r24, 0x00	; 0
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     ec6:	69 83       	std	Y+1, r22	; 0x01
     ec8:	7a 83       	std	Y+2, r23	; 0x02
     eca:	8b 83       	std	Y+3, r24	; 0x03
     ecc:	9c 83       	std	Y+4, r25	; 0x04
     ece:	20 e0       	ldi	r18, 0x00	; 0
     ed0:	30 e0       	ldi	r19, 0x00	; 0
     ed2:	40 ec       	ldi	r20, 0xC0	; 192
     ed4:	50 e4       	ldi	r21, 0x40	; 64
     ed6:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     eda:	2b ed       	ldi	r18, 0xDB	; 219
     edc:	3f e0       	ldi	r19, 0x0F	; 15
     ede:	49 e4       	ldi	r20, 0x49	; 73
     ee0:	50 e4       	ldi	r21, 0x40	; 64
     ee2:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     ee6:	20 e0       	ldi	r18, 0x00	; 0
     ee8:	30 e0       	ldi	r19, 0x00	; 0
     eea:	44 e3       	ldi	r20, 0x34	; 52
     eec:	53 e4       	ldi	r21, 0x43	; 67
     eee:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
     ef2:	2b ed       	ldi	r18, 0xDB	; 219
     ef4:	3f e0       	ldi	r19, 0x0F	; 15
     ef6:	49 ec       	ldi	r20, 0xC9	; 201
     ef8:	5f e3       	ldi	r21, 0x3F	; 63
     efa:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
     efe:	6b 01       	movw	r12, r22
     f00:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     f02:	0e 94 3b 31 	call	0x6276	; 0x6276 <cos>
     f06:	2b 01       	movw	r4, r22
     f08:	3c 01       	movw	r6, r24
			y=(uint8_t) i*sin(winkel)+Py;
     f0a:	c7 01       	movw	r24, r14
     f0c:	b6 01       	movw	r22, r12
     f0e:	0e 94 55 33 	call	0x66aa	; 0x66aa <sin>
     f12:	4b 01       	movw	r8, r22
     f14:	5c 01       	movw	r10, r24
     f16:	00 e0       	ldi	r16, 0x00	; 0
     f18:	10 e0       	ldi	r17, 0x00	; 0

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     f1a:	b8 01       	movw	r22, r16
     f1c:	01 2e       	mov	r0, r17
     f1e:	00 0c       	add	r0, r0
     f20:	88 0b       	sbc	r24, r24
     f22:	99 0b       	sbc	r25, r25
     f24:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     f28:	6b 01       	movw	r12, r22
     f2a:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     f2c:	a5 01       	movw	r20, r10
     f2e:	94 01       	movw	r18, r8
     f30:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     f34:	20 e0       	ldi	r18, 0x00	; 0
     f36:	30 e0       	ldi	r19, 0x00	; 0
     f38:	48 ef       	ldi	r20, 0xF8	; 248
     f3a:	51 e4       	ldi	r21, 0x41	; 65
     f3c:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
     f40:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
     f44:	36 2e       	mov	r3, r22

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     f46:	a3 01       	movw	r20, r6
     f48:	92 01       	movw	r18, r4
     f4a:	c7 01       	movw	r24, r14
     f4c:	b6 01       	movw	r22, r12
     f4e:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     f52:	20 e0       	ldi	r18, 0x00	; 0
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	48 ef       	ldi	r20, 0xF8	; 248
     f58:	51 e4       	ldi	r21, 0x41	; 65
     f5a:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
     f5e:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     f62:	20 e0       	ldi	r18, 0x00	; 0
     f64:	43 2d       	mov	r20, r3
     f66:	8e 81       	ldd	r24, Y+6	; 0x06
     f68:	9f 81       	ldd	r25, Y+7	; 0x07
     f6a:	d3 db       	rcall	.-2138   	; 0x712 <_ZN7Display9drawPixelEhhh>
     f6c:	0f 5f       	subi	r16, 0xFF	; 255
     f6e:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
     f70:	05 31       	cpi	r16, 0x15	; 21
     f72:	11 05       	cpc	r17, r1
     f74:	91 f6       	brne	.-92     	; 0xf1a <_ZN7Display6analogEhhhh+0x156>
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
     f76:	2d 81       	ldd	r18, Y+5	; 0x05
     f78:	62 2f       	mov	r22, r18
     f7a:	70 e0       	ldi	r23, 0x00	; 0
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	40 ef       	ldi	r20, 0xF0	; 240
     f8a:	51 e4       	ldi	r21, 0x41	; 65
     f8c:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     f90:	6b 01       	movw	r12, r22
     f92:	7c 01       	movw	r14, r24
     f94:	20 e0       	ldi	r18, 0x00	; 0
     f96:	30 e0       	ldi	r19, 0x00	; 0
     f98:	40 e0       	ldi	r20, 0x00	; 0
     f9a:	5f e3       	ldi	r21, 0x3F	; 63
     f9c:	69 81       	ldd	r22, Y+1	; 0x01
     f9e:	7a 81       	ldd	r23, Y+2	; 0x02
     fa0:	8b 81       	ldd	r24, Y+3	; 0x03
     fa2:	9c 81       	ldd	r25, Y+4	; 0x04
     fa4:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     fa8:	9b 01       	movw	r18, r22
     faa:	ac 01       	movw	r20, r24
     fac:	c7 01       	movw	r24, r14
     fae:	b6 01       	movw	r22, r12
     fb0:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
     fb4:	2b ed       	ldi	r18, 0xDB	; 219
     fb6:	3f e0       	ldi	r19, 0x0F	; 15
     fb8:	49 e4       	ldi	r20, 0x49	; 73
     fba:	50 e4       	ldi	r21, 0x40	; 64
     fbc:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
     fc0:	20 e0       	ldi	r18, 0x00	; 0
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	44 e3       	ldi	r20, 0x34	; 52
     fc6:	53 e4       	ldi	r21, 0x43	; 67
     fc8:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
     fcc:	2b ed       	ldi	r18, 0xDB	; 219
     fce:	3f e0       	ldi	r19, 0x0F	; 15
     fd0:	49 ec       	ldi	r20, 0xC9	; 201
     fd2:	5f e3       	ldi	r21, 0x3F	; 63
     fd4:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
     fd8:	6b 01       	movw	r12, r22
     fda:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
     fdc:	0e 94 3b 31 	call	0x6276	; 0x6276 <cos>
     fe0:	4b 01       	movw	r8, r22
     fe2:	5c 01       	movw	r10, r24
			y= (uint8_t) i*sin(winkel) +Py;
     fe4:	c7 01       	movw	r24, r14
     fe6:	b6 01       	movw	r22, r12
     fe8:	0e 94 55 33 	call	0x66aa	; 0x66aa <sin>
     fec:	2b 01       	movw	r4, r22
     fee:	3c 01       	movw	r6, r24
     ff0:	00 e0       	ldi	r16, 0x00	; 0
     ff2:	10 e0       	ldi	r17, 0x00	; 0

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
     ff4:	b8 01       	movw	r22, r16
     ff6:	01 2e       	mov	r0, r17
     ff8:	00 0c       	add	r0, r0
     ffa:	88 0b       	sbc	r24, r24
     ffc:	99 0b       	sbc	r25, r25
     ffe:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    1002:	6b 01       	movw	r12, r22
    1004:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    1006:	a3 01       	movw	r20, r6
    1008:	92 01       	movw	r18, r4
    100a:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    100e:	20 e0       	ldi	r18, 0x00	; 0
    1010:	30 e0       	ldi	r19, 0x00	; 0
    1012:	48 ef       	ldi	r20, 0xF8	; 248
    1014:	51 e4       	ldi	r21, 0x41	; 65
    1016:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    101a:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
    101e:	36 2e       	mov	r3, r22

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    1020:	a5 01       	movw	r20, r10
    1022:	94 01       	movw	r18, r8
    1024:	c7 01       	movw	r24, r14
    1026:	b6 01       	movw	r22, r12
    1028:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    102c:	20 e0       	ldi	r18, 0x00	; 0
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	48 ef       	ldi	r20, 0xF8	; 248
    1032:	51 e4       	ldi	r21, 0x41	; 65
    1034:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    1038:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	43 2d       	mov	r20, r3
    1040:	8e 81       	ldd	r24, Y+6	; 0x06
    1042:	9f 81       	ldd	r25, Y+7	; 0x07
    1044:	66 db       	rcall	.-2356   	; 0x712 <_ZN7Display9drawPixelEhhh>
    1046:	0f 5f       	subi	r16, 0xFF	; 255
    1048:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    104a:	0d 30       	cpi	r16, 0x0D	; 13
    104c:	11 05       	cpc	r17, r1
    104e:	91 f6       	brne	.-92     	; 0xff4 <_ZN7Display6analogEhhhh+0x230>
    1050:	cb c0       	rjmp	.+406    	; 0x11e8 <_ZN7Display6analogEhhhh+0x424>
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
    1052:	64 2f       	mov	r22, r20
    1054:	70 e0       	ldi	r23, 0x00	; 0
    1056:	80 e0       	ldi	r24, 0x00	; 0
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    105e:	69 83       	std	Y+1, r22	; 0x01
    1060:	7a 83       	std	Y+2, r23	; 0x02
    1062:	8b 83       	std	Y+3, r24	; 0x03
    1064:	9c 83       	std	Y+4, r25	; 0x04
    1066:	20 e0       	ldi	r18, 0x00	; 0
    1068:	30 e0       	ldi	r19, 0x00	; 0
    106a:	40 ec       	ldi	r20, 0xC0	; 192
    106c:	50 e4       	ldi	r21, 0x40	; 64
    106e:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    1072:	2b ed       	ldi	r18, 0xDB	; 219
    1074:	3f e0       	ldi	r19, 0x0F	; 15
    1076:	49 e4       	ldi	r20, 0x49	; 73
    1078:	50 e4       	ldi	r21, 0x40	; 64
    107a:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    107e:	20 e0       	ldi	r18, 0x00	; 0
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	44 e3       	ldi	r20, 0x34	; 52
    1084:	53 e4       	ldi	r21, 0x43	; 67
    1086:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
    108a:	2b ed       	ldi	r18, 0xDB	; 219
    108c:	3f e0       	ldi	r19, 0x0F	; 15
    108e:	49 ec       	ldi	r20, 0xC9	; 201
    1090:	5f e3       	ldi	r21, 0x3F	; 63
    1092:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
    1096:	6b 01       	movw	r12, r22
    1098:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
    109a:	0e 94 3b 31 	call	0x6276	; 0x6276 <cos>
    109e:	2b 01       	movw	r4, r22
    10a0:	3c 01       	movw	r6, r24
			y=(uint8_t) i*sin(winkel)+Py;
    10a2:	c7 01       	movw	r24, r14
    10a4:	b6 01       	movw	r22, r12
    10a6:	0e 94 55 33 	call	0x66aa	; 0x66aa <sin>
    10aa:	4b 01       	movw	r8, r22
    10ac:	5c 01       	movw	r10, r24
    10ae:	00 e0       	ldi	r16, 0x00	; 0
    10b0:	10 e0       	ldi	r17, 0x00	; 0
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    10b2:	b8 01       	movw	r22, r16
    10b4:	01 2e       	mov	r0, r17
    10b6:	00 0c       	add	r0, r0
    10b8:	88 0b       	sbc	r24, r24
    10ba:	99 0b       	sbc	r25, r25
    10bc:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    10c0:	6b 01       	movw	r12, r22
    10c2:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
    10c4:	a5 01       	movw	r20, r10
    10c6:	94 01       	movw	r18, r8
    10c8:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    10cc:	20 e0       	ldi	r18, 0x00	; 0
    10ce:	30 e0       	ldi	r19, 0x00	; 0
    10d0:	48 ef       	ldi	r20, 0xF8	; 248
    10d2:	51 e4       	ldi	r21, 0x41	; 65
    10d4:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    10d8:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
    10dc:	36 2e       	mov	r3, r22
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    10de:	a3 01       	movw	r20, r6
    10e0:	92 01       	movw	r18, r4
    10e2:	c7 01       	movw	r24, r14
    10e4:	b6 01       	movw	r22, r12
    10e6:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    10ea:	20 e0       	ldi	r18, 0x00	; 0
    10ec:	30 e0       	ldi	r19, 0x00	; 0
    10ee:	48 ef       	ldi	r20, 0xF8	; 248
    10f0:	51 e4       	ldi	r21, 0x41	; 65
    10f2:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    10f6:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
    10fa:	20 e0       	ldi	r18, 0x00	; 0
    10fc:	43 2d       	mov	r20, r3
    10fe:	8e 81       	ldd	r24, Y+6	; 0x06
    1100:	9f 81       	ldd	r25, Y+7	; 0x07
    1102:	07 db       	rcall	.-2546   	; 0x712 <_ZN7Display9drawPixelEhhh>
    1104:	0f 5f       	subi	r16, 0xFF	; 255
    1106:	1f 4f       	sbci	r17, 0xFF	; 255
		}
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
    1108:	09 31       	cpi	r16, 0x19	; 25
    110a:	11 05       	cpc	r17, r1
    110c:	91 f6       	brne	.-92     	; 0x10b2 <_ZN7Display6analogEhhhh+0x2ee>
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
    110e:	ed 81       	ldd	r30, Y+5	; 0x05
    1110:	6e 2f       	mov	r22, r30
    1112:	70 e0       	ldi	r23, 0x00	; 0
    1114:	80 e0       	ldi	r24, 0x00	; 0
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    111c:	20 e0       	ldi	r18, 0x00	; 0
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	40 ef       	ldi	r20, 0xF0	; 240
    1122:	51 e4       	ldi	r21, 0x41	; 65
    1124:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    1128:	6b 01       	movw	r12, r22
    112a:	7c 01       	movw	r14, r24
    112c:	20 e0       	ldi	r18, 0x00	; 0
    112e:	30 e0       	ldi	r19, 0x00	; 0
    1130:	40 e0       	ldi	r20, 0x00	; 0
    1132:	5f e3       	ldi	r21, 0x3F	; 63
    1134:	69 81       	ldd	r22, Y+1	; 0x01
    1136:	7a 81       	ldd	r23, Y+2	; 0x02
    1138:	8b 81       	ldd	r24, Y+3	; 0x03
    113a:	9c 81       	ldd	r25, Y+4	; 0x04
    113c:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    1140:	9b 01       	movw	r18, r22
    1142:	ac 01       	movw	r20, r24
    1144:	c7 01       	movw	r24, r14
    1146:	b6 01       	movw	r22, r12
    1148:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    114c:	2b ed       	ldi	r18, 0xDB	; 219
    114e:	3f e0       	ldi	r19, 0x0F	; 15
    1150:	49 e4       	ldi	r20, 0x49	; 73
    1152:	50 e4       	ldi	r21, 0x40	; 64
    1154:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    1158:	20 e0       	ldi	r18, 0x00	; 0
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	44 e3       	ldi	r20, 0x34	; 52
    115e:	53 e4       	ldi	r21, 0x43	; 67
    1160:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
    1164:	2b ed       	ldi	r18, 0xDB	; 219
    1166:	3f e0       	ldi	r19, 0x0F	; 15
    1168:	49 ec       	ldi	r20, 0xC9	; 201
    116a:	5f e3       	ldi	r21, 0x3F	; 63
    116c:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
    1170:	6b 01       	movw	r12, r22
    1172:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
    1174:	0e 94 3b 31 	call	0x6276	; 0x6276 <cos>
    1178:	4b 01       	movw	r8, r22
    117a:	5c 01       	movw	r10, r24
			y= (uint8_t) i*sin(winkel) +Py;
    117c:	c7 01       	movw	r24, r14
    117e:	b6 01       	movw	r22, r12
    1180:	0e 94 55 33 	call	0x66aa	; 0x66aa <sin>
    1184:	2b 01       	movw	r4, r22
    1186:	3c 01       	movw	r6, r24
    1188:	00 e0       	ldi	r16, 0x00	; 0
    118a:	10 e0       	ldi	r17, 0x00	; 0

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    118c:	b8 01       	movw	r22, r16
    118e:	01 2e       	mov	r0, r17
    1190:	00 0c       	add	r0, r0
    1192:	88 0b       	sbc	r24, r24
    1194:	99 0b       	sbc	r25, r25
    1196:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    119a:	6b 01       	movw	r12, r22
    119c:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    119e:	a3 01       	movw	r20, r6
    11a0:	92 01       	movw	r18, r4
    11a2:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    11a6:	20 e0       	ldi	r18, 0x00	; 0
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	48 ef       	ldi	r20, 0xF8	; 248
    11ac:	51 e4       	ldi	r21, 0x41	; 65
    11ae:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    11b2:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
    11b6:	36 2e       	mov	r3, r22

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    11b8:	a5 01       	movw	r20, r10
    11ba:	94 01       	movw	r18, r8
    11bc:	c7 01       	movw	r24, r14
    11be:	b6 01       	movw	r22, r12
    11c0:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    11c4:	20 e0       	ldi	r18, 0x00	; 0
    11c6:	30 e0       	ldi	r19, 0x00	; 0
    11c8:	48 ef       	ldi	r20, 0xF8	; 248
    11ca:	51 e4       	ldi	r21, 0x41	; 65
    11cc:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    11d0:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    11d4:	20 e0       	ldi	r18, 0x00	; 0
    11d6:	43 2d       	mov	r20, r3
    11d8:	8e 81       	ldd	r24, Y+6	; 0x06
    11da:	9f 81       	ldd	r25, Y+7	; 0x07
    11dc:	9a da       	rcall	.-2764   	; 0x712 <_ZN7Display9drawPixelEhhh>
    11de:	0f 5f       	subi	r16, 0xFF	; 255
    11e0:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    11e2:	01 31       	cpi	r16, 0x11	; 17
    11e4:	11 05       	cpc	r17, r1
    11e6:	91 f6       	brne	.-92     	; 0x118c <_ZN7Display6analogEhhhh+0x3c8>
		}
	}
	

	//Anzeige der Zahlen
	draw_ASCI('1',32-charsize,0);
    11e8:	20 e0       	ldi	r18, 0x00	; 0
    11ea:	4a e1       	ldi	r20, 0x1A	; 26
    11ec:	61 e3       	ldi	r22, 0x31	; 49
    11ee:	8e 81       	ldd	r24, Y+6	; 0x06
    11f0:	9f 81       	ldd	r25, Y+7	; 0x07
    11f2:	24 dd       	rcall	.-1464   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('2',32,0);
    11f4:	20 e0       	ldi	r18, 0x00	; 0
    11f6:	40 e2       	ldi	r20, 0x20	; 32
    11f8:	62 e3       	ldi	r22, 0x32	; 50
    11fa:	8e 81       	ldd	r24, Y+6	; 0x06
    11fc:	9f 81       	ldd	r25, Y+7	; 0x07
    11fe:	1e dd       	rcall	.-1476   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('3',64-charsize,4*charhighte-charhighte/2);
    1200:	2c e1       	ldi	r18, 0x1C	; 28
    1202:	4a e3       	ldi	r20, 0x3A	; 58
    1204:	63 e3       	ldi	r22, 0x33	; 51
    1206:	8e 81       	ldd	r24, Y+6	; 0x06
    1208:	9f 81       	ldd	r25, Y+7	; 0x07
    120a:	18 dd       	rcall	.-1488   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('6',32-charsize/2,7*charhighte);
    120c:	28 e3       	ldi	r18, 0x38	; 56
    120e:	4d e1       	ldi	r20, 0x1D	; 29
    1210:	66 e3       	ldi	r22, 0x36	; 54
    1212:	8e 81       	ldd	r24, Y+6	; 0x06
    1214:	9f 81       	ldd	r25, Y+7	; 0x07
    1216:	12 dd       	rcall	.-1500   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('9',0,4*charhighte-charhighte/2);
    1218:	2c e1       	ldi	r18, 0x1C	; 28
    121a:	40 e0       	ldi	r20, 0x00	; 0
    121c:	69 e3       	ldi	r22, 0x39	; 57
    121e:	8e 81       	ldd	r24, Y+6	; 0x06
    1220:	9f 81       	ldd	r25, Y+7	; 0x07
    1222:	0c dd       	rcall	.-1512   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>

	//anzeige des Rings fuer die Restlichen Stunden Zahlen
	//1
	drawPixel(26*cos((30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1224:	20 e0       	ldi	r18, 0x00	; 0
    1226:	48 e0       	ldi	r20, 0x08	; 8
    1228:	6c e2       	ldi	r22, 0x2C	; 44
    122a:	8e 81       	ldd	r24, Y+6	; 0x06
    122c:	9f 81       	ldd	r25, Y+7	; 0x07
    122e:	71 da       	rcall	.-2846   	; 0x712 <_ZN7Display9drawPixelEhhh>
	//2
	drawPixel(26*cos((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1230:	20 e0       	ldi	r18, 0x00	; 0
    1232:	42 e1       	ldi	r20, 0x12	; 18
    1234:	65 e3       	ldi	r22, 0x35	; 53
    1236:	8e 81       	ldd	r24, Y+6	; 0x06
    1238:	9f 81       	ldd	r25, Y+7	; 0x07
    123a:	6b da       	rcall	.-2858   	; 0x712 <_ZN7Display9drawPixelEhhh>
	//4
	drawPixel(26*cos((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    123c:	20 e0       	ldi	r18, 0x00	; 0
    123e:	4c e2       	ldi	r20, 0x2C	; 44
    1240:	65 e3       	ldi	r22, 0x35	; 53
    1242:	8e 81       	ldd	r24, Y+6	; 0x06
    1244:	9f 81       	ldd	r25, Y+7	; 0x07
    1246:	65 da       	rcall	.-2870   	; 0x712 <_ZN7Display9drawPixelEhhh>
	//5
	drawPixel(26*cos((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1248:	20 e0       	ldi	r18, 0x00	; 0
    124a:	45 e3       	ldi	r20, 0x35	; 53
    124c:	6b e2       	ldi	r22, 0x2B	; 43
    124e:	8e 81       	ldd	r24, Y+6	; 0x06
    1250:	9f 81       	ldd	r25, Y+7	; 0x07
    1252:	5f da       	rcall	.-2882   	; 0x712 <_ZN7Display9drawPixelEhhh>
	//7
	drawPixel(26*cos((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1254:	20 e0       	ldi	r18, 0x00	; 0
    1256:	45 e3       	ldi	r20, 0x35	; 53
    1258:	61 e1       	ldi	r22, 0x11	; 17
    125a:	8e 81       	ldd	r24, Y+6	; 0x06
    125c:	9f 81       	ldd	r25, Y+7	; 0x07
    125e:	59 da       	rcall	.-2894   	; 0x712 <_ZN7Display9drawPixelEhhh>
	//8
	drawPixel(26*cos((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1260:	20 e0       	ldi	r18, 0x00	; 0
    1262:	4c e2       	ldi	r20, 0x2C	; 44
    1264:	68 e0       	ldi	r22, 0x08	; 8
    1266:	8e 81       	ldd	r24, Y+6	; 0x06
    1268:	9f 81       	ldd	r25, Y+7	; 0x07
    126a:	53 da       	rcall	.-2906   	; 0x712 <_ZN7Display9drawPixelEhhh>
	//10
	drawPixel(26*cos((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    126c:	20 e0       	ldi	r18, 0x00	; 0
    126e:	41 e1       	ldi	r20, 0x11	; 17
    1270:	68 e0       	ldi	r22, 0x08	; 8
    1272:	8e 81       	ldd	r24, Y+6	; 0x06
    1274:	9f 81       	ldd	r25, Y+7	; 0x07
    1276:	4d da       	rcall	.-2918   	; 0x712 <_ZN7Display9drawPixelEhhh>
	//11
	drawPixel(26*cos((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1278:	20 e0       	ldi	r18, 0x00	; 0
    127a:	48 e0       	ldi	r20, 0x08	; 8
    127c:	62 e1       	ldi	r22, 0x12	; 18
    127e:	8e 81       	ldd	r24, Y+6	; 0x06
    1280:	9f 81       	ldd	r25, Y+7	; 0x07
    1282:	47 da       	rcall	.-2930   	; 0x712 <_ZN7Display9drawPixelEhhh>
}
    1284:	27 96       	adiw	r28, 0x07	; 7
    1286:	0f b6       	in	r0, 0x3f	; 63
    1288:	f8 94       	cli
    128a:	de bf       	out	0x3e, r29	; 62
    128c:	0f be       	out	0x3f, r0	; 63
    128e:	cd bf       	out	0x3d, r28	; 61
    1290:	df 91       	pop	r29
    1292:	cf 91       	pop	r28
    1294:	1f 91       	pop	r17
    1296:	0f 91       	pop	r16
    1298:	ff 90       	pop	r15
    129a:	ef 90       	pop	r14
    129c:	df 90       	pop	r13
    129e:	cf 90       	pop	r12
    12a0:	bf 90       	pop	r11
    12a2:	af 90       	pop	r10
    12a4:	9f 90       	pop	r9
    12a6:	8f 90       	pop	r8
    12a8:	7f 90       	pop	r7
    12aa:	6f 90       	pop	r6
    12ac:	5f 90       	pop	r5
    12ae:	4f 90       	pop	r4
    12b0:	3f 90       	pop	r3
    12b2:	2f 90       	pop	r2
    12b4:	08 95       	ret

000012b6 <_Z8ADC_Readh>:
		oled.draw_pikachu();
		break;
	default:
		break;
	}
}
    12b6:	ec e7       	ldi	r30, 0x7C	; 124
    12b8:	f0 e0       	ldi	r31, 0x00	; 0
    12ba:	90 81       	ld	r25, Z
    12bc:	8f 71       	andi	r24, 0x1F	; 31
    12be:	90 7e       	andi	r25, 0xE0	; 224
    12c0:	89 2b       	or	r24, r25
    12c2:	80 83       	st	Z, r24
    12c4:	ea e7       	ldi	r30, 0x7A	; 122
    12c6:	f0 e0       	ldi	r31, 0x00	; 0
    12c8:	80 81       	ld	r24, Z
    12ca:	80 64       	ori	r24, 0x40	; 64
    12cc:	80 83       	st	Z, r24
    12ce:	80 81       	ld	r24, Z
    12d0:	86 fd       	sbrc	r24, 6
    12d2:	fd cf       	rjmp	.-6      	; 0x12ce <_Z8ADC_Readh+0x18>
    12d4:	80 91 78 00 	lds	r24, 0x0078
    12d8:	90 91 79 00 	lds	r25, 0x0079
    12dc:	08 95       	ret

000012de <_Z14Batteriestatusv>:
    12de:	cf 92       	push	r12
    12e0:	df 92       	push	r13
    12e2:	ef 92       	push	r14
    12e4:	ff 92       	push	r15
    12e6:	80 e0       	ldi	r24, 0x00	; 0
    12e8:	e6 df       	rcall	.-52     	; 0x12b6 <_Z8ADC_Readh>
    12ea:	bc 01       	movw	r22, r24
    12ec:	80 e0       	ldi	r24, 0x00	; 0
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	0e 94 d7 31 	call	0x63ae	; 0x63ae <__floatunsisf>
    12f4:	20 e0       	ldi	r18, 0x00	; 0
    12f6:	30 ec       	ldi	r19, 0xC0	; 192
    12f8:	4f e7       	ldi	r20, 0x7F	; 127
    12fa:	54 e4       	ldi	r21, 0x44	; 68
    12fc:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
    1300:	2c e5       	ldi	r18, 0x5C	; 92
    1302:	3f e8       	ldi	r19, 0x8F	; 143
    1304:	42 e5       	ldi	r20, 0x52	; 82
    1306:	50 e4       	ldi	r21, 0x40	; 64
    1308:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    130c:	2d e0       	ldi	r18, 0x0D	; 13
    130e:	31 e7       	ldi	r19, 0x71	; 113
    1310:	40 e0       	ldi	r20, 0x00	; 0
    1312:	50 e4       	ldi	r21, 0x40	; 64
    1314:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    1318:	60 93 3b 03 	sts	0x033B, r22
    131c:	70 93 3c 03 	sts	0x033C, r23
    1320:	80 93 3d 03 	sts	0x033D, r24
    1324:	90 93 3e 03 	sts	0x033E, r25
    1328:	26 e6       	ldi	r18, 0x66	; 102
    132a:	36 e6       	ldi	r19, 0x66	; 102
    132c:	46 e6       	ldi	r20, 0x66	; 102
    132e:	50 e4       	ldi	r21, 0x40	; 64
    1330:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
    1334:	28 e9       	ldi	r18, 0x98	; 152
    1336:	39 e9       	ldi	r19, 0x99	; 153
    1338:	49 e1       	ldi	r20, 0x19	; 25
    133a:	5f e3       	ldi	r21, 0x3F	; 63
    133c:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
    1340:	20 e0       	ldi	r18, 0x00	; 0
    1342:	30 e0       	ldi	r19, 0x00	; 0
    1344:	48 ec       	ldi	r20, 0xC8	; 200
    1346:	52 e4       	ldi	r21, 0x42	; 66
    1348:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    134c:	6b 01       	movw	r12, r22
    134e:	7c 01       	movw	r14, r24
    1350:	20 e0       	ldi	r18, 0x00	; 0
    1352:	30 e0       	ldi	r19, 0x00	; 0
    1354:	40 e2       	ldi	r20, 0x20	; 32
    1356:	51 e4       	ldi	r21, 0x41	; 65
    1358:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    135c:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
    1360:	8d ec       	ldi	r24, 0xCD	; 205
    1362:	68 9f       	mul	r22, r24
    1364:	81 2d       	mov	r24, r1
    1366:	11 24       	eor	r1, r1
    1368:	86 95       	lsr	r24
    136a:	86 95       	lsr	r24
    136c:	86 95       	lsr	r24
    136e:	88 0f       	add	r24, r24
    1370:	28 2f       	mov	r18, r24
    1372:	22 0f       	add	r18, r18
    1374:	22 0f       	add	r18, r18
    1376:	82 0f       	add	r24, r18
    1378:	96 2f       	mov	r25, r22
    137a:	98 1b       	sub	r25, r24
    137c:	95 30       	cpi	r25, 0x05	; 5
    137e:	70 f0       	brcs	.+28     	; 0x139c <_Z14Batteriestatusv+0xbe>
    1380:	c7 01       	movw	r24, r14
    1382:	b6 01       	movw	r22, r12
    1384:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
    1388:	70 e0       	ldi	r23, 0x00	; 0
    138a:	6f 5f       	subi	r22, 0xFF	; 255
    138c:	7f 4f       	sbci	r23, 0xFF	; 255
    138e:	07 2e       	mov	r0, r23
    1390:	00 0c       	add	r0, r0
    1392:	88 0b       	sbc	r24, r24
    1394:	99 0b       	sbc	r25, r25
    1396:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    139a:	09 c0       	rjmp	.+18     	; 0x13ae <_Z14Batteriestatusv+0xd0>
    139c:	c7 01       	movw	r24, r14
    139e:	b6 01       	movw	r22, r12
    13a0:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
    13a4:	70 e0       	ldi	r23, 0x00	; 0
    13a6:	80 e0       	ldi	r24, 0x00	; 0
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	0e 94 d7 31 	call	0x63ae	; 0x63ae <__floatunsisf>
    13ae:	0e 94 a6 31 	call	0x634c	; 0x634c <__fixsfsi>
    13b2:	86 2f       	mov	r24, r22
    13b4:	ff 90       	pop	r15
    13b6:	ef 90       	pop	r14
    13b8:	df 90       	pop	r13
    13ba:	cf 90       	pop	r12
    13bc:	08 95       	ret

000013be <_Z12EEPROM_Writejh>:
    13be:	f8 94       	cli
    13c0:	f9 99       	sbic	0x1f, 1	; 31
    13c2:	fe cf       	rjmp	.-4      	; 0x13c0 <_Z12EEPROM_Writejh+0x2>
    13c4:	92 bd       	out	0x22, r25	; 34
    13c6:	81 bd       	out	0x21, r24	; 33
    13c8:	60 bd       	out	0x20, r22	; 32
    13ca:	fa 9a       	sbi	0x1f, 2	; 31
    13cc:	f9 9a       	sbi	0x1f, 1	; 31
    13ce:	78 94       	sei
    13d0:	08 95       	ret

000013d2 <_Z11EEPROM_Readj>:
    13d2:	f8 94       	cli
    13d4:	f9 99       	sbic	0x1f, 1	; 31
    13d6:	fe cf       	rjmp	.-4      	; 0x13d4 <_Z11EEPROM_Readj+0x2>
    13d8:	92 bd       	out	0x22, r25	; 34
    13da:	81 bd       	out	0x21, r24	; 33
    13dc:	f8 9a       	sbi	0x1f, 0	; 31
    13de:	78 94       	sei
    13e0:	80 b5       	in	r24, 0x20	; 32
    13e2:	08 95       	ret

000013e4 <_Z14willkommenpagev>:
    13e4:	cf 92       	push	r12
    13e6:	df 92       	push	r13
    13e8:	ff 92       	push	r15
    13ea:	0f 93       	push	r16
    13ec:	1f 93       	push	r17
    13ee:	cf 93       	push	r28
    13f0:	df 93       	push	r29
    13f2:	cd b7       	in	r28, 0x3d	; 61
    13f4:	de b7       	in	r29, 0x3e	; 62
    13f6:	64 97       	sbiw	r28, 0x14	; 20
    13f8:	0f b6       	in	r0, 0x3f	; 63
    13fa:	f8 94       	cli
    13fc:	de bf       	out	0x3e, r29	; 62
    13fe:	0f be       	out	0x3f, r0	; 63
    1400:	cd bf       	out	0x3d, r28	; 61
    1402:	8e e3       	ldi	r24, 0x3E	; 62
    1404:	9c e0       	ldi	r25, 0x0C	; 12
    1406:	c8 d8       	rcall	.-3696   	; 0x598 <_ZN7Display10clearFrameEv>
    1408:	8f e0       	ldi	r24, 0x0F	; 15
    140a:	e0 e0       	ldi	r30, 0x00	; 0
    140c:	f1 e0       	ldi	r31, 0x01	; 1
    140e:	de 01       	movw	r26, r28
    1410:	11 96       	adiw	r26, 0x01	; 1
    1412:	01 90       	ld	r0, Z+
    1414:	0d 92       	st	X+, r0
    1416:	8a 95       	dec	r24
    1418:	e1 f7       	brne	.-8      	; 0x1412 <_Z14willkommenpagev+0x2e>
    141a:	8e 01       	movw	r16, r28
    141c:	0f 5f       	subi	r16, 0xFF	; 255
    141e:	1f 4f       	sbci	r17, 0xFF	; 255
    1420:	68 01       	movw	r12, r16
    1422:	f1 2c       	mov	r15, r1
    1424:	f6 01       	movw	r30, r12
    1426:	61 91       	ld	r22, Z+
    1428:	6f 01       	movw	r12, r30
    142a:	20 e0       	ldi	r18, 0x00	; 0
    142c:	4f 2d       	mov	r20, r15
    142e:	8e e3       	ldi	r24, 0x3E	; 62
    1430:	9c e0       	ldi	r25, 0x0C	; 12
    1432:	04 dc       	rcall	.-2040   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1434:	f6 e0       	ldi	r31, 0x06	; 6
    1436:	ff 0e       	add	r15, r31
    1438:	24 e5       	ldi	r18, 0x54	; 84
    143a:	f2 12       	cpse	r15, r18
    143c:	f3 cf       	rjmp	.-26     	; 0x1424 <_Z14willkommenpagev+0x40>
    143e:	8f e0       	ldi	r24, 0x0F	; 15
    1440:	ef e0       	ldi	r30, 0x0F	; 15
    1442:	f1 e0       	ldi	r31, 0x01	; 1
    1444:	de 01       	movw	r26, r28
    1446:	11 96       	adiw	r26, 0x01	; 1
    1448:	01 90       	ld	r0, Z+
    144a:	0d 92       	st	X+, r0
    144c:	8a 95       	dec	r24
    144e:	e1 f7       	brne	.-8      	; 0x1448 <_Z14willkommenpagev+0x64>
    1450:	68 01       	movw	r12, r16
    1452:	f1 2c       	mov	r15, r1
    1454:	f6 01       	movw	r30, r12
    1456:	61 91       	ld	r22, Z+
    1458:	6f 01       	movw	r12, r30
    145a:	28 e0       	ldi	r18, 0x08	; 8
    145c:	4f 2d       	mov	r20, r15
    145e:	8e e3       	ldi	r24, 0x3E	; 62
    1460:	9c e0       	ldi	r25, 0x0C	; 12
    1462:	ec db       	rcall	.-2088   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1464:	f6 e0       	ldi	r31, 0x06	; 6
    1466:	ff 0e       	add	r15, r31
    1468:	24 e5       	ldi	r18, 0x54	; 84
    146a:	f2 12       	cpse	r15, r18
    146c:	f3 cf       	rjmp	.-26     	; 0x1454 <_Z14willkommenpagev+0x70>
    146e:	80 e4       	ldi	r24, 0x40	; 64
    1470:	8f 93       	push	r24
    1472:	86 e0       	ldi	r24, 0x06	; 6
    1474:	8f 93       	push	r24
    1476:	86 e6       	ldi	r24, 0x66	; 102
    1478:	8f 93       	push	r24
    147a:	8f 93       	push	r24
    147c:	8e e1       	ldi	r24, 0x1E	; 30
    147e:	91 e0       	ldi	r25, 0x01	; 1
    1480:	9f 93       	push	r25
    1482:	8f 93       	push	r24
    1484:	ce 01       	movw	r24, r28
    1486:	01 96       	adiw	r24, 0x01	; 1
    1488:	9f 93       	push	r25
    148a:	8f 93       	push	r24
    148c:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
    1490:	0f b6       	in	r0, 0x3f	; 63
    1492:	f8 94       	cli
    1494:	de bf       	out	0x3e, r29	; 62
    1496:	0f be       	out	0x3f, r0	; 63
    1498:	cd bf       	out	0x3d, r28	; 61
    149a:	88 23       	and	r24, r24
    149c:	a9 f0       	breq	.+42     	; 0x14c8 <_Z14willkommenpagev+0xe4>
    149e:	81 50       	subi	r24, 0x01	; 1
    14a0:	9e 01       	movw	r18, r28
    14a2:	28 0f       	add	r18, r24
    14a4:	31 1d       	adc	r19, r1
    14a6:	f9 01       	movw	r30, r18
    14a8:	32 96       	adiw	r30, 0x02	; 2
    14aa:	6f 01       	movw	r12, r30
    14ac:	f1 2c       	mov	r15, r1
    14ae:	f8 01       	movw	r30, r16
    14b0:	61 91       	ld	r22, Z+
    14b2:	8f 01       	movw	r16, r30
    14b4:	20 e2       	ldi	r18, 0x20	; 32
    14b6:	4f 2d       	mov	r20, r15
    14b8:	8e e3       	ldi	r24, 0x3E	; 62
    14ba:	9c e0       	ldi	r25, 0x0C	; 12
    14bc:	bf db       	rcall	.-2178   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    14be:	f6 e0       	ldi	r31, 0x06	; 6
    14c0:	ff 0e       	add	r15, r31
    14c2:	0c 15       	cp	r16, r12
    14c4:	1d 05       	cpc	r17, r13
    14c6:	99 f7       	brne	.-26     	; 0x14ae <_Z14willkommenpagev+0xca>
    14c8:	8e e3       	ldi	r24, 0x3E	; 62
    14ca:	9c e0       	ldi	r25, 0x0C	; 12
    14cc:	eb d8       	rcall	.-3626   	; 0x6a4 <_ZN7Display9sendFrameEv>
    14ce:	8e e3       	ldi	r24, 0x3E	; 62
    14d0:	9c e0       	ldi	r25, 0x0C	; 12
    14d2:	62 d8       	rcall	.-3900   	; 0x598 <_ZN7Display10clearFrameEv>
    14d4:	85 e0       	ldi	r24, 0x05	; 5
    14d6:	2f e7       	ldi	r18, 0x7F	; 127
    14d8:	38 e3       	ldi	r19, 0x38	; 56
    14da:	91 e0       	ldi	r25, 0x01	; 1
    14dc:	21 50       	subi	r18, 0x01	; 1
    14de:	30 40       	sbci	r19, 0x00	; 0
    14e0:	90 40       	sbci	r25, 0x00	; 0
    14e2:	e1 f7       	brne	.-8      	; 0x14dc <_Z14willkommenpagev+0xf8>
    14e4:	00 c0       	rjmp	.+0      	; 0x14e6 <_Z14willkommenpagev+0x102>
    14e6:	00 00       	nop
    14e8:	ef e7       	ldi	r30, 0x7F	; 127
    14ea:	f8 e3       	ldi	r31, 0x38	; 56
    14ec:	21 e0       	ldi	r18, 0x01	; 1
    14ee:	e1 50       	subi	r30, 0x01	; 1
    14f0:	f0 40       	sbci	r31, 0x00	; 0
    14f2:	20 40       	sbci	r18, 0x00	; 0
    14f4:	e1 f7       	brne	.-8      	; 0x14ee <_Z14willkommenpagev+0x10a>
    14f6:	00 c0       	rjmp	.+0      	; 0x14f8 <_Z14willkommenpagev+0x114>
    14f8:	00 00       	nop
    14fa:	81 50       	subi	r24, 0x01	; 1
    14fc:	61 f7       	brne	.-40     	; 0x14d6 <_Z14willkommenpagev+0xf2>
    14fe:	64 96       	adiw	r28, 0x14	; 20
    1500:	0f b6       	in	r0, 0x3f	; 63
    1502:	f8 94       	cli
    1504:	de bf       	out	0x3e, r29	; 62
    1506:	0f be       	out	0x3f, r0	; 63
    1508:	cd bf       	out	0x3d, r28	; 61
    150a:	df 91       	pop	r29
    150c:	cf 91       	pop	r28
    150e:	1f 91       	pop	r17
    1510:	0f 91       	pop	r16
    1512:	ff 90       	pop	r15
    1514:	df 90       	pop	r13
    1516:	cf 90       	pop	r12
    1518:	08 95       	ret

0000151a <_Z6headerh>:
    151a:	ef 92       	push	r14
    151c:	ff 92       	push	r15
    151e:	0f 93       	push	r16
    1520:	1f 93       	push	r17
    1522:	cf 93       	push	r28
    1524:	df 93       	push	r29
    1526:	cd b7       	in	r28, 0x3d	; 61
    1528:	de b7       	in	r29, 0x3e	; 62
    152a:	64 97       	sbiw	r28, 0x14	; 20
    152c:	0f b6       	in	r0, 0x3f	; 63
    152e:	f8 94       	cli
    1530:	de bf       	out	0x3e, r29	; 62
    1532:	0f be       	out	0x3f, r0	; 63
    1534:	cd bf       	out	0x3d, r28	; 61
    1536:	81 30       	cpi	r24, 0x01	; 1
    1538:	09 f4       	brne	.+2      	; 0x153c <_Z6headerh+0x22>
    153a:	4d c0       	rjmp	.+154    	; 0x15d6 <_Z6headerh+0xbc>
    153c:	20 f0       	brcs	.+8      	; 0x1546 <_Z6headerh+0x2c>
    153e:	82 30       	cpi	r24, 0x02	; 2
    1540:	09 f4       	brne	.+2      	; 0x1544 <_Z6headerh+0x2a>
    1542:	7f c0       	rjmp	.+254    	; 0x1642 <_Z6headerh+0x128>
    1544:	b2 c0       	rjmp	.+356    	; 0x16aa <_Z6headerh+0x190>
    1546:	0f 2e       	mov	r0, r31
    1548:	ff e3       	ldi	r31, 0x3F	; 63
    154a:	ef 2e       	mov	r14, r31
    154c:	f0 e1       	ldi	r31, 0x10	; 16
    154e:	ff 2e       	mov	r15, r31
    1550:	f0 2d       	mov	r31, r0
    1552:	10 e0       	ldi	r17, 0x00	; 0
    1554:	f7 01       	movw	r30, r14
    1556:	61 91       	ld	r22, Z+
    1558:	7f 01       	movw	r14, r30
    155a:	20 e0       	ldi	r18, 0x00	; 0
    155c:	41 2f       	mov	r20, r17
    155e:	8e e3       	ldi	r24, 0x3E	; 62
    1560:	9c e0       	ldi	r25, 0x0C	; 12
    1562:	6c db       	rcall	.-2344   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1564:	1a 5f       	subi	r17, 0xFA	; 250
    1566:	10 33       	cpi	r17, 0x30	; 48
    1568:	a9 f7       	brne	.-22     	; 0x1554 <_Z6headerh+0x3a>
    156a:	b9 de       	rcall	.-654    	; 0x12de <_Z14Batteriestatusv>
    156c:	28 2f       	mov	r18, r24
    156e:	08 2e       	mov	r0, r24
    1570:	00 0c       	add	r0, r0
    1572:	33 0b       	sbc	r19, r19
    1574:	3f 93       	push	r19
    1576:	8f 93       	push	r24
    1578:	8c e2       	ldi	r24, 0x2C	; 44
    157a:	91 e0       	ldi	r25, 0x01	; 1
    157c:	9f 93       	push	r25
    157e:	8f 93       	push	r24
    1580:	ce 01       	movw	r24, r28
    1582:	01 96       	adiw	r24, 0x01	; 1
    1584:	9f 93       	push	r25
    1586:	8f 93       	push	r24
    1588:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
    158c:	15 e1       	ldi	r17, 0x15	; 21
    158e:	18 1b       	sub	r17, r24
    1590:	0f 90       	pop	r0
    1592:	0f 90       	pop	r0
    1594:	0f 90       	pop	r0
    1596:	0f 90       	pop	r0
    1598:	0f 90       	pop	r0
    159a:	0f 90       	pop	r0
    159c:	15 31       	cpi	r17, 0x15	; 21
    159e:	08 f0       	brcs	.+2      	; 0x15a2 <_Z6headerh+0x88>
    15a0:	84 c0       	rjmp	.+264    	; 0x16aa <_Z6headerh+0x190>
    15a2:	01 2f       	mov	r16, r17
    15a4:	00 0f       	add	r16, r16
    15a6:	01 0f       	add	r16, r17
    15a8:	00 0f       	add	r16, r16
    15aa:	7c 01       	movw	r14, r24
    15ac:	ff 24       	eor	r15, r15
    15ae:	e1 e0       	ldi	r30, 0x01	; 1
    15b0:	f0 e0       	ldi	r31, 0x00	; 0
    15b2:	ec 0f       	add	r30, r28
    15b4:	fd 1f       	adc	r31, r29
    15b6:	e1 0f       	add	r30, r17
    15b8:	f1 1d       	adc	r31, r1
    15ba:	ee 0d       	add	r30, r14
    15bc:	ff 1d       	adc	r31, r15
    15be:	75 97       	sbiw	r30, 0x15	; 21
    15c0:	20 e0       	ldi	r18, 0x00	; 0
    15c2:	40 2f       	mov	r20, r16
    15c4:	60 81       	ld	r22, Z
    15c6:	8e e3       	ldi	r24, 0x3E	; 62
    15c8:	9c e0       	ldi	r25, 0x0C	; 12
    15ca:	38 db       	rcall	.-2448   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    15cc:	1f 5f       	subi	r17, 0xFF	; 255
    15ce:	0a 5f       	subi	r16, 0xFA	; 250
    15d0:	15 31       	cpi	r17, 0x15	; 21
    15d2:	69 f7       	brne	.-38     	; 0x15ae <_Z6headerh+0x94>
    15d4:	6a c0       	rjmp	.+212    	; 0x16aa <_Z6headerh+0x190>
    15d6:	83 de       	rcall	.-762    	; 0x12de <_Z14Batteriestatusv>
    15d8:	28 2f       	mov	r18, r24
    15da:	08 2e       	mov	r0, r24
    15dc:	00 0c       	add	r0, r0
    15de:	33 0b       	sbc	r19, r19
    15e0:	3f 93       	push	r19
    15e2:	8f 93       	push	r24
    15e4:	8c e2       	ldi	r24, 0x2C	; 44
    15e6:	91 e0       	ldi	r25, 0x01	; 1
    15e8:	9f 93       	push	r25
    15ea:	8f 93       	push	r24
    15ec:	ce 01       	movw	r24, r28
    15ee:	01 96       	adiw	r24, 0x01	; 1
    15f0:	9f 93       	push	r25
    15f2:	8f 93       	push	r24
    15f4:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
    15f8:	15 e1       	ldi	r17, 0x15	; 21
    15fa:	18 1b       	sub	r17, r24
    15fc:	0f 90       	pop	r0
    15fe:	0f 90       	pop	r0
    1600:	0f 90       	pop	r0
    1602:	0f 90       	pop	r0
    1604:	0f 90       	pop	r0
    1606:	0f 90       	pop	r0
    1608:	15 31       	cpi	r17, 0x15	; 21
    160a:	08 f0       	brcs	.+2      	; 0x160e <_Z6headerh+0xf4>
    160c:	4e c0       	rjmp	.+156    	; 0x16aa <_Z6headerh+0x190>
    160e:	01 2f       	mov	r16, r17
    1610:	00 0f       	add	r16, r16
    1612:	01 0f       	add	r16, r17
    1614:	00 0f       	add	r16, r16
    1616:	7c 01       	movw	r14, r24
    1618:	ff 24       	eor	r15, r15
    161a:	e1 e0       	ldi	r30, 0x01	; 1
    161c:	f0 e0       	ldi	r31, 0x00	; 0
    161e:	ec 0f       	add	r30, r28
    1620:	fd 1f       	adc	r31, r29
    1622:	e1 0f       	add	r30, r17
    1624:	f1 1d       	adc	r31, r1
    1626:	ee 0d       	add	r30, r14
    1628:	ff 1d       	adc	r31, r15
    162a:	75 97       	sbiw	r30, 0x15	; 21
    162c:	20 e0       	ldi	r18, 0x00	; 0
    162e:	40 2f       	mov	r20, r16
    1630:	60 81       	ld	r22, Z
    1632:	8e e3       	ldi	r24, 0x3E	; 62
    1634:	9c e0       	ldi	r25, 0x0C	; 12
    1636:	02 db       	rcall	.-2556   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1638:	1f 5f       	subi	r17, 0xFF	; 255
    163a:	0a 5f       	subi	r16, 0xFA	; 250
    163c:	15 31       	cpi	r17, 0x15	; 21
    163e:	69 f7       	brne	.-38     	; 0x161a <_Z6headerh+0x100>
    1640:	34 c0       	rjmp	.+104    	; 0x16aa <_Z6headerh+0x190>
    1642:	4d de       	rcall	.-870    	; 0x12de <_Z14Batteriestatusv>
    1644:	28 2f       	mov	r18, r24
    1646:	08 2e       	mov	r0, r24
    1648:	00 0c       	add	r0, r0
    164a:	33 0b       	sbc	r19, r19
    164c:	3f 93       	push	r19
    164e:	8f 93       	push	r24
    1650:	81 e3       	ldi	r24, 0x31	; 49
    1652:	91 e0       	ldi	r25, 0x01	; 1
    1654:	9f 93       	push	r25
    1656:	8f 93       	push	r24
    1658:	ce 01       	movw	r24, r28
    165a:	01 96       	adiw	r24, 0x01	; 1
    165c:	9f 93       	push	r25
    165e:	8f 93       	push	r24
    1660:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
    1664:	15 e1       	ldi	r17, 0x15	; 21
    1666:	18 1b       	sub	r17, r24
    1668:	0f 90       	pop	r0
    166a:	0f 90       	pop	r0
    166c:	0f 90       	pop	r0
    166e:	0f 90       	pop	r0
    1670:	0f 90       	pop	r0
    1672:	0f 90       	pop	r0
    1674:	15 31       	cpi	r17, 0x15	; 21
    1676:	c8 f4       	brcc	.+50     	; 0x16aa <_Z6headerh+0x190>
    1678:	01 2f       	mov	r16, r17
    167a:	00 0f       	add	r16, r16
    167c:	01 0f       	add	r16, r17
    167e:	00 0f       	add	r16, r16
    1680:	7c 01       	movw	r14, r24
    1682:	ff 24       	eor	r15, r15
    1684:	e1 e0       	ldi	r30, 0x01	; 1
    1686:	f0 e0       	ldi	r31, 0x00	; 0
    1688:	ec 0f       	add	r30, r28
    168a:	fd 1f       	adc	r31, r29
    168c:	e1 0f       	add	r30, r17
    168e:	f1 1d       	adc	r31, r1
    1690:	ee 0d       	add	r30, r14
    1692:	ff 1d       	adc	r31, r15
    1694:	75 97       	sbiw	r30, 0x15	; 21
    1696:	20 e0       	ldi	r18, 0x00	; 0
    1698:	40 2f       	mov	r20, r16
    169a:	60 81       	ld	r22, Z
    169c:	8e e3       	ldi	r24, 0x3E	; 62
    169e:	9c e0       	ldi	r25, 0x0C	; 12
    16a0:	cd da       	rcall	.-2662   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    16a2:	1f 5f       	subi	r17, 0xFF	; 255
    16a4:	0a 5f       	subi	r16, 0xFA	; 250
    16a6:	15 31       	cpi	r17, 0x15	; 21
    16a8:	69 f7       	brne	.-38     	; 0x1684 <_Z6headerh+0x16a>
    16aa:	64 96       	adiw	r28, 0x14	; 20
    16ac:	0f b6       	in	r0, 0x3f	; 63
    16ae:	f8 94       	cli
    16b0:	de bf       	out	0x3e, r29	; 62
    16b2:	0f be       	out	0x3f, r0	; 63
    16b4:	cd bf       	out	0x3d, r28	; 61
    16b6:	df 91       	pop	r29
    16b8:	cf 91       	pop	r28
    16ba:	1f 91       	pop	r17
    16bc:	0f 91       	pop	r16
    16be:	ff 90       	pop	r15
    16c0:	ef 90       	pop	r14
    16c2:	08 95       	ret

000016c4 <_Z6bottomh>:
    16c4:	0f 93       	push	r16
    16c6:	1f 93       	push	r17
    16c8:	cf 93       	push	r28
    16ca:	88 23       	and	r24, r24
    16cc:	19 f0       	breq	.+6      	; 0x16d4 <_Z6bottomh+0x10>
    16ce:	81 30       	cpi	r24, 0x01	; 1
    16d0:	81 f0       	breq	.+32     	; 0x16f2 <_Z6bottomh+0x2e>
    16d2:	1d c0       	rjmp	.+58     	; 0x170e <_Z6bottomh+0x4a>
    16d4:	07 e4       	ldi	r16, 0x47	; 71
    16d6:	10 e1       	ldi	r17, 0x10	; 16
    16d8:	c0 e5       	ldi	r28, 0x50	; 80
    16da:	f8 01       	movw	r30, r16
    16dc:	61 91       	ld	r22, Z+
    16de:	8f 01       	movw	r16, r30
    16e0:	28 e3       	ldi	r18, 0x38	; 56
    16e2:	4c 2f       	mov	r20, r28
    16e4:	8e e3       	ldi	r24, 0x3E	; 62
    16e6:	9c e0       	ldi	r25, 0x0C	; 12
    16e8:	a9 da       	rcall	.-2734   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    16ea:	ca 5f       	subi	r28, 0xFA	; 250
    16ec:	c0 38       	cpi	r28, 0x80	; 128
    16ee:	a9 f7       	brne	.-22     	; 0x16da <_Z6bottomh+0x16>
    16f0:	0e c0       	rjmp	.+28     	; 0x170e <_Z6bottomh+0x4a>
    16f2:	07 e4       	ldi	r16, 0x47	; 71
    16f4:	10 e1       	ldi	r17, 0x10	; 16
    16f6:	c5 e0       	ldi	r28, 0x05	; 5
    16f8:	f8 01       	movw	r30, r16
    16fa:	61 91       	ld	r22, Z+
    16fc:	8f 01       	movw	r16, r30
    16fe:	28 e3       	ldi	r18, 0x38	; 56
    1700:	4c 2f       	mov	r20, r28
    1702:	8e e3       	ldi	r24, 0x3E	; 62
    1704:	9c e0       	ldi	r25, 0x0C	; 12
    1706:	9a da       	rcall	.-2764   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1708:	ca 5f       	subi	r28, 0xFA	; 250
    170a:	c5 33       	cpi	r28, 0x35	; 53
    170c:	a9 f7       	brne	.-22     	; 0x16f8 <_Z6bottomh+0x34>
    170e:	cf 91       	pop	r28
    1710:	1f 91       	pop	r17
    1712:	0f 91       	pop	r16
    1714:	08 95       	ret

00001716 <_Z16anzeige_richtungfhh>:
    1716:	cf 92       	push	r12
    1718:	df 92       	push	r13
    171a:	ef 92       	push	r14
    171c:	ff 92       	push	r15
    171e:	cf 93       	push	r28
    1720:	df 93       	push	r29
    1722:	6b 01       	movw	r12, r22
    1724:	7c 01       	movw	r14, r24
    1726:	d4 2f       	mov	r29, r20
    1728:	c2 2f       	mov	r28, r18
    172a:	20 e0       	ldi	r18, 0x00	; 0
    172c:	30 e0       	ldi	r19, 0x00	; 0
    172e:	40 eb       	ldi	r20, 0xB0	; 176
    1730:	51 e4       	ldi	r21, 0x41	; 65
    1732:	0e 94 37 31 	call	0x626e	; 0x626e <__cmpsf2>
    1736:	88 23       	and	r24, r24
    1738:	54 f0       	brlt	.+20     	; 0x174e <_Z16anzeige_richtungfhh+0x38>
    173a:	20 e0       	ldi	r18, 0x00	; 0
    173c:	30 e0       	ldi	r19, 0x00	; 0
    173e:	49 ea       	ldi	r20, 0xA9	; 169
    1740:	53 e4       	ldi	r21, 0x43	; 67
    1742:	c7 01       	movw	r24, r14
    1744:	b6 01       	movw	r22, r12
    1746:	0e 94 e7 32 	call	0x65ce	; 0x65ce <__gesf2>
    174a:	88 23       	and	r24, r24
    174c:	54 f0       	brlt	.+20     	; 0x1762 <_Z16anzeige_richtungfhh+0x4c>
    174e:	2c 2f       	mov	r18, r28
    1750:	22 0f       	add	r18, r18
    1752:	22 0f       	add	r18, r18
    1754:	22 0f       	add	r18, r18
    1756:	4d 2f       	mov	r20, r29
    1758:	6e e4       	ldi	r22, 0x4E	; 78
    175a:	8e e3       	ldi	r24, 0x3E	; 62
    175c:	9c e0       	ldi	r25, 0x0C	; 12
    175e:	6e da       	rcall	.-2852   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1760:	ab c0       	rjmp	.+342    	; 0x18b8 <_Z16anzeige_richtungfhh+0x1a2>
    1762:	20 e0       	ldi	r18, 0x00	; 0
    1764:	30 e0       	ldi	r19, 0x00	; 0
    1766:	48 e8       	ldi	r20, 0x88	; 136
    1768:	52 e4       	ldi	r21, 0x42	; 66
    176a:	c7 01       	movw	r24, r14
    176c:	b6 01       	movw	r22, r12
    176e:	0e 94 37 31 	call	0x626e	; 0x626e <__cmpsf2>
    1772:	88 23       	and	r24, r24
    1774:	94 f4       	brge	.+36     	; 0x179a <_Z16anzeige_richtungfhh+0x84>
    1776:	cc 0f       	add	r28, r28
    1778:	cc 0f       	add	r28, r28
    177a:	cc 0f       	add	r28, r28
    177c:	4d ef       	ldi	r20, 0xFD	; 253
    177e:	4d 0f       	add	r20, r29
    1780:	2c 2f       	mov	r18, r28
    1782:	6e e4       	ldi	r22, 0x4E	; 78
    1784:	8e e3       	ldi	r24, 0x3E	; 62
    1786:	9c e0       	ldi	r25, 0x0C	; 12
    1788:	59 da       	rcall	.-2894   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    178a:	43 e0       	ldi	r20, 0x03	; 3
    178c:	4d 0f       	add	r20, r29
    178e:	2c 2f       	mov	r18, r28
    1790:	6f e4       	ldi	r22, 0x4F	; 79
    1792:	8e e3       	ldi	r24, 0x3E	; 62
    1794:	9c e0       	ldi	r25, 0x0C	; 12
    1796:	52 da       	rcall	.-2908   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1798:	8f c0       	rjmp	.+286    	; 0x18b8 <_Z16anzeige_richtungfhh+0x1a2>
    179a:	20 e0       	ldi	r18, 0x00	; 0
    179c:	30 e0       	ldi	r19, 0x00	; 0
    179e:	42 ee       	ldi	r20, 0xE2	; 226
    17a0:	52 e4       	ldi	r21, 0x42	; 66
    17a2:	c7 01       	movw	r24, r14
    17a4:	b6 01       	movw	r22, r12
    17a6:	0e 94 37 31 	call	0x626e	; 0x626e <__cmpsf2>
    17aa:	88 23       	and	r24, r24
    17ac:	54 f4       	brge	.+20     	; 0x17c2 <_Z16anzeige_richtungfhh+0xac>
    17ae:	2c 2f       	mov	r18, r28
    17b0:	22 0f       	add	r18, r18
    17b2:	22 0f       	add	r18, r18
    17b4:	22 0f       	add	r18, r18
    17b6:	4d 2f       	mov	r20, r29
    17b8:	6f e4       	ldi	r22, 0x4F	; 79
    17ba:	8e e3       	ldi	r24, 0x3E	; 62
    17bc:	9c e0       	ldi	r25, 0x0C	; 12
    17be:	3e da       	rcall	.-2948   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    17c0:	7b c0       	rjmp	.+246    	; 0x18b8 <_Z16anzeige_richtungfhh+0x1a2>
    17c2:	20 e0       	ldi	r18, 0x00	; 0
    17c4:	30 e0       	ldi	r19, 0x00	; 0
    17c6:	4e e1       	ldi	r20, 0x1E	; 30
    17c8:	53 e4       	ldi	r21, 0x43	; 67
    17ca:	c7 01       	movw	r24, r14
    17cc:	b6 01       	movw	r22, r12
    17ce:	0e 94 37 31 	call	0x626e	; 0x626e <__cmpsf2>
    17d2:	88 23       	and	r24, r24
    17d4:	94 f4       	brge	.+36     	; 0x17fa <_Z16anzeige_richtungfhh+0xe4>
    17d6:	cc 0f       	add	r28, r28
    17d8:	cc 0f       	add	r28, r28
    17da:	cc 0f       	add	r28, r28
    17dc:	4d ef       	ldi	r20, 0xFD	; 253
    17de:	4d 0f       	add	r20, r29
    17e0:	2c 2f       	mov	r18, r28
    17e2:	63 e5       	ldi	r22, 0x53	; 83
    17e4:	8e e3       	ldi	r24, 0x3E	; 62
    17e6:	9c e0       	ldi	r25, 0x0C	; 12
    17e8:	29 da       	rcall	.-2990   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    17ea:	43 e0       	ldi	r20, 0x03	; 3
    17ec:	4d 0f       	add	r20, r29
    17ee:	2c 2f       	mov	r18, r28
    17f0:	6f e4       	ldi	r22, 0x4F	; 79
    17f2:	8e e3       	ldi	r24, 0x3E	; 62
    17f4:	9c e0       	ldi	r25, 0x0C	; 12
    17f6:	22 da       	rcall	.-3004   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    17f8:	5f c0       	rjmp	.+190    	; 0x18b8 <_Z16anzeige_richtungfhh+0x1a2>
    17fa:	20 e0       	ldi	r18, 0x00	; 0
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	4b e4       	ldi	r20, 0x4B	; 75
    1800:	53 e4       	ldi	r21, 0x43	; 67
    1802:	c7 01       	movw	r24, r14
    1804:	b6 01       	movw	r22, r12
    1806:	0e 94 37 31 	call	0x626e	; 0x626e <__cmpsf2>
    180a:	88 23       	and	r24, r24
    180c:	54 f4       	brge	.+20     	; 0x1822 <_Z16anzeige_richtungfhh+0x10c>
    180e:	2c 2f       	mov	r18, r28
    1810:	22 0f       	add	r18, r18
    1812:	22 0f       	add	r18, r18
    1814:	22 0f       	add	r18, r18
    1816:	4d 2f       	mov	r20, r29
    1818:	63 e5       	ldi	r22, 0x53	; 83
    181a:	8e e3       	ldi	r24, 0x3E	; 62
    181c:	9c e0       	ldi	r25, 0x0C	; 12
    181e:	0e da       	rcall	.-3044   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1820:	4b c0       	rjmp	.+150    	; 0x18b8 <_Z16anzeige_richtungfhh+0x1a2>
    1822:	20 e0       	ldi	r18, 0x00	; 0
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	48 e7       	ldi	r20, 0x78	; 120
    1828:	53 e4       	ldi	r21, 0x43	; 67
    182a:	c7 01       	movw	r24, r14
    182c:	b6 01       	movw	r22, r12
    182e:	0e 94 37 31 	call	0x626e	; 0x626e <__cmpsf2>
    1832:	88 23       	and	r24, r24
    1834:	94 f4       	brge	.+36     	; 0x185a <_Z16anzeige_richtungfhh+0x144>
    1836:	cc 0f       	add	r28, r28
    1838:	cc 0f       	add	r28, r28
    183a:	cc 0f       	add	r28, r28
    183c:	4d ef       	ldi	r20, 0xFD	; 253
    183e:	4d 0f       	add	r20, r29
    1840:	2c 2f       	mov	r18, r28
    1842:	63 e5       	ldi	r22, 0x53	; 83
    1844:	8e e3       	ldi	r24, 0x3E	; 62
    1846:	9c e0       	ldi	r25, 0x0C	; 12
    1848:	f9 d9       	rcall	.-3086   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    184a:	43 e0       	ldi	r20, 0x03	; 3
    184c:	4d 0f       	add	r20, r29
    184e:	2c 2f       	mov	r18, r28
    1850:	67 e5       	ldi	r22, 0x57	; 87
    1852:	8e e3       	ldi	r24, 0x3E	; 62
    1854:	9c e0       	ldi	r25, 0x0C	; 12
    1856:	f2 d9       	rcall	.-3100   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1858:	2f c0       	rjmp	.+94     	; 0x18b8 <_Z16anzeige_richtungfhh+0x1a2>
    185a:	20 e0       	ldi	r18, 0x00	; 0
    185c:	30 e8       	ldi	r19, 0x80	; 128
    185e:	42 e9       	ldi	r20, 0x92	; 146
    1860:	53 e4       	ldi	r21, 0x43	; 67
    1862:	c7 01       	movw	r24, r14
    1864:	b6 01       	movw	r22, r12
    1866:	0e 94 37 31 	call	0x626e	; 0x626e <__cmpsf2>
    186a:	88 23       	and	r24, r24
    186c:	54 f4       	brge	.+20     	; 0x1882 <_Z16anzeige_richtungfhh+0x16c>
    186e:	2c 2f       	mov	r18, r28
    1870:	22 0f       	add	r18, r18
    1872:	22 0f       	add	r18, r18
    1874:	22 0f       	add	r18, r18
    1876:	4d 2f       	mov	r20, r29
    1878:	67 e5       	ldi	r22, 0x57	; 87
    187a:	8e e3       	ldi	r24, 0x3E	; 62
    187c:	9c e0       	ldi	r25, 0x0C	; 12
    187e:	de d9       	rcall	.-3140   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1880:	1b c0       	rjmp	.+54     	; 0x18b8 <_Z16anzeige_richtungfhh+0x1a2>
    1882:	20 e0       	ldi	r18, 0x00	; 0
    1884:	30 e0       	ldi	r19, 0x00	; 0
    1886:	49 ea       	ldi	r20, 0xA9	; 169
    1888:	53 e4       	ldi	r21, 0x43	; 67
    188a:	c7 01       	movw	r24, r14
    188c:	b6 01       	movw	r22, r12
    188e:	0e 94 37 31 	call	0x626e	; 0x626e <__cmpsf2>
    1892:	88 23       	and	r24, r24
    1894:	8c f4       	brge	.+34     	; 0x18b8 <_Z16anzeige_richtungfhh+0x1a2>
    1896:	cc 0f       	add	r28, r28
    1898:	cc 0f       	add	r28, r28
    189a:	cc 0f       	add	r28, r28
    189c:	4d ef       	ldi	r20, 0xFD	; 253
    189e:	4d 0f       	add	r20, r29
    18a0:	2c 2f       	mov	r18, r28
    18a2:	6e e4       	ldi	r22, 0x4E	; 78
    18a4:	8e e3       	ldi	r24, 0x3E	; 62
    18a6:	9c e0       	ldi	r25, 0x0C	; 12
    18a8:	c9 d9       	rcall	.-3182   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    18aa:	43 e0       	ldi	r20, 0x03	; 3
    18ac:	4d 0f       	add	r20, r29
    18ae:	2c 2f       	mov	r18, r28
    18b0:	67 e5       	ldi	r22, 0x57	; 87
    18b2:	8e e3       	ldi	r24, 0x3E	; 62
    18b4:	9c e0       	ldi	r25, 0x0C	; 12
    18b6:	c2 d9       	rcall	.-3196   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    18b8:	df 91       	pop	r29
    18ba:	cf 91       	pop	r28
    18bc:	ff 90       	pop	r15
    18be:	ef 90       	pop	r14
    18c0:	df 90       	pop	r13
    18c2:	cf 90       	pop	r12
    18c4:	08 95       	ret

000018c6 <_Z13anzeige_nadelhhf>:
    18c6:	af 92       	push	r10
    18c8:	bf 92       	push	r11
    18ca:	cf 92       	push	r12
    18cc:	df 92       	push	r13
    18ce:	ef 92       	push	r14
    18d0:	ff 92       	push	r15
    18d2:	0f 93       	push	r16
    18d4:	1f 93       	push	r17
    18d6:	59 01       	movw	r10, r18
    18d8:	6a 01       	movw	r12, r20
    18da:	e1 2c       	mov	r14, r1
    18dc:	f1 2c       	mov	r15, r1
    18de:	0c e8       	ldi	r16, 0x8C	; 140
    18e0:	12 e4       	ldi	r17, 0x42	; 66
    18e2:	24 e1       	ldi	r18, 0x14	; 20
    18e4:	46 2f       	mov	r20, r22
    18e6:	68 2f       	mov	r22, r24
    18e8:	8e e3       	ldi	r24, 0x3E	; 62
    18ea:	9c e0       	ldi	r25, 0x0C	; 12
    18ec:	7f d8       	rcall	.-3842   	; 0x9ec <_ZN7Display13draw_triangleEhhhff>
    18ee:	1f 91       	pop	r17
    18f0:	0f 91       	pop	r16
    18f2:	ff 90       	pop	r15
    18f4:	ef 90       	pop	r14
    18f6:	df 90       	pop	r13
    18f8:	cf 90       	pop	r12
    18fa:	bf 90       	pop	r11
    18fc:	af 90       	pop	r10
    18fe:	08 95       	ret

00001900 <_Z19anzeige_kleinenadelhhf>:
    1900:	af 92       	push	r10
    1902:	bf 92       	push	r11
    1904:	cf 92       	push	r12
    1906:	df 92       	push	r13
    1908:	ef 92       	push	r14
    190a:	ff 92       	push	r15
    190c:	0f 93       	push	r16
    190e:	1f 93       	push	r17
    1910:	59 01       	movw	r10, r18
    1912:	6a 01       	movw	r12, r20
    1914:	e1 2c       	mov	r14, r1
    1916:	f1 2c       	mov	r15, r1
    1918:	0c e8       	ldi	r16, 0x8C	; 140
    191a:	12 e4       	ldi	r17, 0x42	; 66
    191c:	2a e0       	ldi	r18, 0x0A	; 10
    191e:	46 2f       	mov	r20, r22
    1920:	68 2f       	mov	r22, r24
    1922:	8e e3       	ldi	r24, 0x3E	; 62
    1924:	9c e0       	ldi	r25, 0x0C	; 12
    1926:	62 d8       	rcall	.-3900   	; 0x9ec <_ZN7Display13draw_triangleEhhhff>
    1928:	1f 91       	pop	r17
    192a:	0f 91       	pop	r16
    192c:	ff 90       	pop	r15
    192e:	ef 90       	pop	r14
    1930:	df 90       	pop	r13
    1932:	cf 90       	pop	r12
    1934:	bf 90       	pop	r11
    1936:	af 90       	pop	r10
    1938:	08 95       	ret

0000193a <_Z9GOL_seitev>:
    193a:	ef e3       	ldi	r30, 0x3F	; 63
    193c:	f3 e0       	ldi	r31, 0x03	; 3
    193e:	ae e3       	ldi	r26, 0x3E	; 62
    1940:	bc e0       	ldi	r27, 0x0C	; 12
    1942:	2f e3       	ldi	r18, 0x3F	; 63
    1944:	37 e0       	ldi	r19, 0x07	; 7
    1946:	81 91       	ld	r24, Z+
    1948:	8d 93       	st	X+, r24
    194a:	e2 17       	cp	r30, r18
    194c:	f3 07       	cpc	r31, r19
    194e:	d9 f7       	brne	.-10     	; 0x1946 <_Z9GOL_seitev+0xc>
    1950:	08 95       	ret

00001952 <_Z11menue_hauptv>:
    1952:	cf 92       	push	r12
    1954:	df 92       	push	r13
    1956:	ef 92       	push	r14
    1958:	ff 92       	push	r15
    195a:	1f 93       	push	r17
    195c:	cf 93       	push	r28
    195e:	df 93       	push	r29
    1960:	cd b7       	in	r28, 0x3d	; 61
    1962:	de b7       	in	r29, 0x3e	; 62
    1964:	64 97       	sbiw	r28, 0x14	; 20
    1966:	0f b6       	in	r0, 0x3f	; 63
    1968:	f8 94       	cli
    196a:	de bf       	out	0x3e, r29	; 62
    196c:	0f be       	out	0x3f, r0	; 63
    196e:	cd bf       	out	0x3d, r28	; 61
    1970:	8e e3       	ldi	r24, 0x3E	; 62
    1972:	9c e0       	ldi	r25, 0x0C	; 12
    1974:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    1978:	80 e1       	ldi	r24, 0x10	; 16
    197a:	e6 e3       	ldi	r30, 0x36	; 54
    197c:	f1 e0       	ldi	r31, 0x01	; 1
    197e:	de 01       	movw	r26, r28
    1980:	11 96       	adiw	r26, 0x01	; 1
    1982:	01 90       	ld	r0, Z+
    1984:	0d 92       	st	X+, r0
    1986:	8a 95       	dec	r24
    1988:	e1 f7       	brne	.-8      	; 0x1982 <_Z11menue_hauptv+0x30>
    198a:	ce 01       	movw	r24, r28
    198c:	01 96       	adiw	r24, 0x01	; 1
    198e:	7c 01       	movw	r14, r24
    1990:	6c 01       	movw	r12, r24
    1992:	10 e0       	ldi	r17, 0x00	; 0
    1994:	f6 01       	movw	r30, r12
    1996:	61 91       	ld	r22, Z+
    1998:	6f 01       	movw	r12, r30
    199a:	20 e0       	ldi	r18, 0x00	; 0
    199c:	41 2f       	mov	r20, r17
    199e:	8e e3       	ldi	r24, 0x3E	; 62
    19a0:	9c e0       	ldi	r25, 0x0C	; 12
    19a2:	4c d9       	rcall	.-3432   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    19a4:	1a 5f       	subi	r17, 0xFA	; 250
    19a6:	1a 35       	cpi	r17, 0x5A	; 90
    19a8:	a9 f7       	brne	.-22     	; 0x1994 <_Z11menue_hauptv+0x42>
    19aa:	81 e1       	ldi	r24, 0x11	; 17
    19ac:	e6 e4       	ldi	r30, 0x46	; 70
    19ae:	f1 e0       	ldi	r31, 0x01	; 1
    19b0:	de 01       	movw	r26, r28
    19b2:	11 96       	adiw	r26, 0x01	; 1
    19b4:	01 90       	ld	r0, Z+
    19b6:	0d 92       	st	X+, r0
    19b8:	8a 95       	dec	r24
    19ba:	e1 f7       	brne	.-8      	; 0x19b4 <_Z11menue_hauptv+0x62>
    19bc:	67 01       	movw	r12, r14
    19be:	10 e0       	ldi	r17, 0x00	; 0
    19c0:	f6 01       	movw	r30, r12
    19c2:	61 91       	ld	r22, Z+
    19c4:	6f 01       	movw	r12, r30
    19c6:	28 e0       	ldi	r18, 0x08	; 8
    19c8:	41 2f       	mov	r20, r17
    19ca:	8e e3       	ldi	r24, 0x3E	; 62
    19cc:	9c e0       	ldi	r25, 0x0C	; 12
    19ce:	36 d9       	rcall	.-3476   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    19d0:	1a 5f       	subi	r17, 0xFA	; 250
    19d2:	10 36       	cpi	r17, 0x60	; 96
    19d4:	a9 f7       	brne	.-22     	; 0x19c0 <_Z11menue_hauptv+0x6e>
    19d6:	8a e0       	ldi	r24, 0x0A	; 10
    19d8:	e7 e5       	ldi	r30, 0x57	; 87
    19da:	f1 e0       	ldi	r31, 0x01	; 1
    19dc:	de 01       	movw	r26, r28
    19de:	11 96       	adiw	r26, 0x01	; 1
    19e0:	01 90       	ld	r0, Z+
    19e2:	0d 92       	st	X+, r0
    19e4:	8a 95       	dec	r24
    19e6:	e1 f7       	brne	.-8      	; 0x19e0 <_Z11menue_hauptv+0x8e>
    19e8:	67 01       	movw	r12, r14
    19ea:	10 e0       	ldi	r17, 0x00	; 0
    19ec:	f6 01       	movw	r30, r12
    19ee:	61 91       	ld	r22, Z+
    19f0:	6f 01       	movw	r12, r30
    19f2:	20 e1       	ldi	r18, 0x10	; 16
    19f4:	41 2f       	mov	r20, r17
    19f6:	8e e3       	ldi	r24, 0x3E	; 62
    19f8:	9c e0       	ldi	r25, 0x0C	; 12
    19fa:	20 d9       	rcall	.-3520   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    19fc:	1a 5f       	subi	r17, 0xFA	; 250
    19fe:	16 33       	cpi	r17, 0x36	; 54
    1a00:	a9 f7       	brne	.-22     	; 0x19ec <_Z11menue_hauptv+0x9a>
    1a02:	8b e0       	ldi	r24, 0x0B	; 11
    1a04:	e1 e6       	ldi	r30, 0x61	; 97
    1a06:	f1 e0       	ldi	r31, 0x01	; 1
    1a08:	de 01       	movw	r26, r28
    1a0a:	11 96       	adiw	r26, 0x01	; 1
    1a0c:	01 90       	ld	r0, Z+
    1a0e:	0d 92       	st	X+, r0
    1a10:	8a 95       	dec	r24
    1a12:	e1 f7       	brne	.-8      	; 0x1a0c <_Z11menue_hauptv+0xba>
    1a14:	67 01       	movw	r12, r14
    1a16:	10 e0       	ldi	r17, 0x00	; 0
    1a18:	f6 01       	movw	r30, r12
    1a1a:	61 91       	ld	r22, Z+
    1a1c:	6f 01       	movw	r12, r30
    1a1e:	28 e1       	ldi	r18, 0x18	; 24
    1a20:	41 2f       	mov	r20, r17
    1a22:	8e e3       	ldi	r24, 0x3E	; 62
    1a24:	9c e0       	ldi	r25, 0x0C	; 12
    1a26:	0a d9       	rcall	.-3564   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1a28:	1a 5f       	subi	r17, 0xFA	; 250
    1a2a:	1c 33       	cpi	r17, 0x3C	; 60
    1a2c:	a9 f7       	brne	.-22     	; 0x1a18 <_Z11menue_hauptv+0xc6>
    1a2e:	80 e1       	ldi	r24, 0x10	; 16
    1a30:	ec e6       	ldi	r30, 0x6C	; 108
    1a32:	f1 e0       	ldi	r31, 0x01	; 1
    1a34:	de 01       	movw	r26, r28
    1a36:	11 96       	adiw	r26, 0x01	; 1
    1a38:	01 90       	ld	r0, Z+
    1a3a:	0d 92       	st	X+, r0
    1a3c:	8a 95       	dec	r24
    1a3e:	e1 f7       	brne	.-8      	; 0x1a38 <_Z11menue_hauptv+0xe6>
    1a40:	67 01       	movw	r12, r14
    1a42:	10 e0       	ldi	r17, 0x00	; 0
    1a44:	f6 01       	movw	r30, r12
    1a46:	61 91       	ld	r22, Z+
    1a48:	6f 01       	movw	r12, r30
    1a4a:	20 e2       	ldi	r18, 0x20	; 32
    1a4c:	41 2f       	mov	r20, r17
    1a4e:	8e e3       	ldi	r24, 0x3E	; 62
    1a50:	9c e0       	ldi	r25, 0x0C	; 12
    1a52:	f4 d8       	rcall	.-3608   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1a54:	1a 5f       	subi	r17, 0xFA	; 250
    1a56:	1a 35       	cpi	r17, 0x5A	; 90
    1a58:	a9 f7       	brne	.-22     	; 0x1a44 <_Z11menue_hauptv+0xf2>
    1a5a:	8e e0       	ldi	r24, 0x0E	; 14
    1a5c:	ec e7       	ldi	r30, 0x7C	; 124
    1a5e:	f1 e0       	ldi	r31, 0x01	; 1
    1a60:	de 01       	movw	r26, r28
    1a62:	11 96       	adiw	r26, 0x01	; 1
    1a64:	01 90       	ld	r0, Z+
    1a66:	0d 92       	st	X+, r0
    1a68:	8a 95       	dec	r24
    1a6a:	e1 f7       	brne	.-8      	; 0x1a64 <_Z11menue_hauptv+0x112>
    1a6c:	67 01       	movw	r12, r14
    1a6e:	10 e0       	ldi	r17, 0x00	; 0
    1a70:	f6 01       	movw	r30, r12
    1a72:	61 91       	ld	r22, Z+
    1a74:	6f 01       	movw	r12, r30
    1a76:	28 e2       	ldi	r18, 0x28	; 40
    1a78:	41 2f       	mov	r20, r17
    1a7a:	8e e3       	ldi	r24, 0x3E	; 62
    1a7c:	9c e0       	ldi	r25, 0x0C	; 12
    1a7e:	de d8       	rcall	.-3652   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1a80:	1a 5f       	subi	r17, 0xFA	; 250
    1a82:	1e 34       	cpi	r17, 0x4E	; 78
    1a84:	a9 f7       	brne	.-22     	; 0x1a70 <_Z11menue_hauptv+0x11e>
    1a86:	8e e0       	ldi	r24, 0x0E	; 14
    1a88:	ea e8       	ldi	r30, 0x8A	; 138
    1a8a:	f1 e0       	ldi	r31, 0x01	; 1
    1a8c:	de 01       	movw	r26, r28
    1a8e:	11 96       	adiw	r26, 0x01	; 1
    1a90:	01 90       	ld	r0, Z+
    1a92:	0d 92       	st	X+, r0
    1a94:	8a 95       	dec	r24
    1a96:	e1 f7       	brne	.-8      	; 0x1a90 <_Z11menue_hauptv+0x13e>
    1a98:	10 e0       	ldi	r17, 0x00	; 0
    1a9a:	f7 01       	movw	r30, r14
    1a9c:	61 91       	ld	r22, Z+
    1a9e:	7f 01       	movw	r14, r30
    1aa0:	20 e3       	ldi	r18, 0x30	; 48
    1aa2:	41 2f       	mov	r20, r17
    1aa4:	8e e3       	ldi	r24, 0x3E	; 62
    1aa6:	9c e0       	ldi	r25, 0x0C	; 12
    1aa8:	c9 d8       	rcall	.-3694   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1aaa:	1a 5f       	subi	r17, 0xFA	; 250
    1aac:	1e 34       	cpi	r17, 0x4E	; 78
    1aae:	a9 f7       	brne	.-22     	; 0x1a9a <_Z11menue_hauptv+0x148>
    1ab0:	64 96       	adiw	r28, 0x14	; 20
    1ab2:	0f b6       	in	r0, 0x3f	; 63
    1ab4:	f8 94       	cli
    1ab6:	de bf       	out	0x3e, r29	; 62
    1ab8:	0f be       	out	0x3f, r0	; 63
    1aba:	cd bf       	out	0x3d, r28	; 61
    1abc:	df 91       	pop	r29
    1abe:	cf 91       	pop	r28
    1ac0:	1f 91       	pop	r17
    1ac2:	ff 90       	pop	r15
    1ac4:	ef 90       	pop	r14
    1ac6:	df 90       	pop	r13
    1ac8:	cf 90       	pop	r12
    1aca:	08 95       	ret

00001acc <_Z11menue_einstv>:
    1acc:	cf 92       	push	r12
    1ace:	df 92       	push	r13
    1ad0:	ef 92       	push	r14
    1ad2:	ff 92       	push	r15
    1ad4:	1f 93       	push	r17
    1ad6:	cf 93       	push	r28
    1ad8:	df 93       	push	r29
    1ada:	cd b7       	in	r28, 0x3d	; 61
    1adc:	de b7       	in	r29, 0x3e	; 62
    1ade:	64 97       	sbiw	r28, 0x14	; 20
    1ae0:	0f b6       	in	r0, 0x3f	; 63
    1ae2:	f8 94       	cli
    1ae4:	de bf       	out	0x3e, r29	; 62
    1ae6:	0f be       	out	0x3f, r0	; 63
    1ae8:	cd bf       	out	0x3d, r28	; 61
    1aea:	8e e3       	ldi	r24, 0x3E	; 62
    1aec:	9c e0       	ldi	r25, 0x0C	; 12
    1aee:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    1af2:	81 e1       	ldi	r24, 0x11	; 17
    1af4:	e8 e9       	ldi	r30, 0x98	; 152
    1af6:	f1 e0       	ldi	r31, 0x01	; 1
    1af8:	de 01       	movw	r26, r28
    1afa:	11 96       	adiw	r26, 0x01	; 1
    1afc:	01 90       	ld	r0, Z+
    1afe:	0d 92       	st	X+, r0
    1b00:	8a 95       	dec	r24
    1b02:	e1 f7       	brne	.-8      	; 0x1afc <_Z11menue_einstv+0x30>
    1b04:	ce 01       	movw	r24, r28
    1b06:	01 96       	adiw	r24, 0x01	; 1
    1b08:	6c 01       	movw	r12, r24
    1b0a:	7c 01       	movw	r14, r24
    1b0c:	10 e0       	ldi	r17, 0x00	; 0
    1b0e:	f7 01       	movw	r30, r14
    1b10:	61 91       	ld	r22, Z+
    1b12:	7f 01       	movw	r14, r30
    1b14:	20 e0       	ldi	r18, 0x00	; 0
    1b16:	41 2f       	mov	r20, r17
    1b18:	8e e3       	ldi	r24, 0x3E	; 62
    1b1a:	9c e0       	ldi	r25, 0x0C	; 12
    1b1c:	8f d8       	rcall	.-3810   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1b1e:	1a 5f       	subi	r17, 0xFA	; 250
    1b20:	10 36       	cpi	r17, 0x60	; 96
    1b22:	a9 f7       	brne	.-22     	; 0x1b0e <_Z11menue_einstv+0x42>
    1b24:	8f e0       	ldi	r24, 0x0F	; 15
    1b26:	e9 ea       	ldi	r30, 0xA9	; 169
    1b28:	f1 e0       	ldi	r31, 0x01	; 1
    1b2a:	de 01       	movw	r26, r28
    1b2c:	11 96       	adiw	r26, 0x01	; 1
    1b2e:	01 90       	ld	r0, Z+
    1b30:	0d 92       	st	X+, r0
    1b32:	8a 95       	dec	r24
    1b34:	e1 f7       	brne	.-8      	; 0x1b2e <_Z11menue_einstv+0x62>
    1b36:	76 01       	movw	r14, r12
    1b38:	10 e0       	ldi	r17, 0x00	; 0
    1b3a:	f7 01       	movw	r30, r14
    1b3c:	61 91       	ld	r22, Z+
    1b3e:	7f 01       	movw	r14, r30
    1b40:	28 e0       	ldi	r18, 0x08	; 8
    1b42:	41 2f       	mov	r20, r17
    1b44:	8e e3       	ldi	r24, 0x3E	; 62
    1b46:	9c e0       	ldi	r25, 0x0C	; 12
    1b48:	79 d8       	rcall	.-3854   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1b4a:	1a 5f       	subi	r17, 0xFA	; 250
    1b4c:	14 35       	cpi	r17, 0x54	; 84
    1b4e:	a9 f7       	brne	.-22     	; 0x1b3a <_Z11menue_einstv+0x6e>
    1b50:	81 e1       	ldi	r24, 0x11	; 17
    1b52:	e8 eb       	ldi	r30, 0xB8	; 184
    1b54:	f1 e0       	ldi	r31, 0x01	; 1
    1b56:	de 01       	movw	r26, r28
    1b58:	11 96       	adiw	r26, 0x01	; 1
    1b5a:	01 90       	ld	r0, Z+
    1b5c:	0d 92       	st	X+, r0
    1b5e:	8a 95       	dec	r24
    1b60:	e1 f7       	brne	.-8      	; 0x1b5a <_Z11menue_einstv+0x8e>
    1b62:	76 01       	movw	r14, r12
    1b64:	10 e0       	ldi	r17, 0x00	; 0
    1b66:	f7 01       	movw	r30, r14
    1b68:	61 91       	ld	r22, Z+
    1b6a:	7f 01       	movw	r14, r30
    1b6c:	20 e1       	ldi	r18, 0x10	; 16
    1b6e:	41 2f       	mov	r20, r17
    1b70:	8e e3       	ldi	r24, 0x3E	; 62
    1b72:	9c e0       	ldi	r25, 0x0C	; 12
    1b74:	63 d8       	rcall	.-3898   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1b76:	1a 5f       	subi	r17, 0xFA	; 250
    1b78:	10 36       	cpi	r17, 0x60	; 96
    1b7a:	a9 f7       	brne	.-22     	; 0x1b66 <_Z11menue_einstv+0x9a>
    1b7c:	83 e1       	ldi	r24, 0x13	; 19
    1b7e:	e9 ec       	ldi	r30, 0xC9	; 201
    1b80:	f1 e0       	ldi	r31, 0x01	; 1
    1b82:	de 01       	movw	r26, r28
    1b84:	11 96       	adiw	r26, 0x01	; 1
    1b86:	01 90       	ld	r0, Z+
    1b88:	0d 92       	st	X+, r0
    1b8a:	8a 95       	dec	r24
    1b8c:	e1 f7       	brne	.-8      	; 0x1b86 <_Z11menue_einstv+0xba>
    1b8e:	76 01       	movw	r14, r12
    1b90:	10 e0       	ldi	r17, 0x00	; 0
    1b92:	f7 01       	movw	r30, r14
    1b94:	61 91       	ld	r22, Z+
    1b96:	7f 01       	movw	r14, r30
    1b98:	28 e1       	ldi	r18, 0x18	; 24
    1b9a:	41 2f       	mov	r20, r17
    1b9c:	8e e3       	ldi	r24, 0x3E	; 62
    1b9e:	9c e0       	ldi	r25, 0x0C	; 12
    1ba0:	4d d8       	rcall	.-3942   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1ba2:	1a 5f       	subi	r17, 0xFA	; 250
    1ba4:	1c 36       	cpi	r17, 0x6C	; 108
    1ba6:	a9 f7       	brne	.-22     	; 0x1b92 <_Z11menue_einstv+0xc6>
    1ba8:	8b e0       	ldi	r24, 0x0B	; 11
    1baa:	ec ed       	ldi	r30, 0xDC	; 220
    1bac:	f1 e0       	ldi	r31, 0x01	; 1
    1bae:	de 01       	movw	r26, r28
    1bb0:	11 96       	adiw	r26, 0x01	; 1
    1bb2:	01 90       	ld	r0, Z+
    1bb4:	0d 92       	st	X+, r0
    1bb6:	8a 95       	dec	r24
    1bb8:	e1 f7       	brne	.-8      	; 0x1bb2 <_Z11menue_einstv+0xe6>
    1bba:	10 e0       	ldi	r17, 0x00	; 0
    1bbc:	f6 01       	movw	r30, r12
    1bbe:	61 91       	ld	r22, Z+
    1bc0:	6f 01       	movw	r12, r30
    1bc2:	20 e2       	ldi	r18, 0x20	; 32
    1bc4:	41 2f       	mov	r20, r17
    1bc6:	8e e3       	ldi	r24, 0x3E	; 62
    1bc8:	9c e0       	ldi	r25, 0x0C	; 12
    1bca:	38 d8       	rcall	.-3984   	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1bcc:	1a 5f       	subi	r17, 0xFA	; 250
    1bce:	1c 33       	cpi	r17, 0x3C	; 60
    1bd0:	a9 f7       	brne	.-22     	; 0x1bbc <_Z11menue_einstv+0xf0>
    1bd2:	64 96       	adiw	r28, 0x14	; 20
    1bd4:	0f b6       	in	r0, 0x3f	; 63
    1bd6:	f8 94       	cli
    1bd8:	de bf       	out	0x3e, r29	; 62
    1bda:	0f be       	out	0x3f, r0	; 63
    1bdc:	cd bf       	out	0x3d, r28	; 61
    1bde:	df 91       	pop	r29
    1be0:	cf 91       	pop	r28
    1be2:	1f 91       	pop	r17
    1be4:	ff 90       	pop	r15
    1be6:	ef 90       	pop	r14
    1be8:	df 90       	pop	r13
    1bea:	cf 90       	pop	r12
    1bec:	08 95       	ret

00001bee <_Z9menue_uhrv>:
    1bee:	cf 92       	push	r12
    1bf0:	df 92       	push	r13
    1bf2:	ef 92       	push	r14
    1bf4:	ff 92       	push	r15
    1bf6:	1f 93       	push	r17
    1bf8:	cf 93       	push	r28
    1bfa:	df 93       	push	r29
    1bfc:	cd b7       	in	r28, 0x3d	; 61
    1bfe:	de b7       	in	r29, 0x3e	; 62
    1c00:	64 97       	sbiw	r28, 0x14	; 20
    1c02:	0f b6       	in	r0, 0x3f	; 63
    1c04:	f8 94       	cli
    1c06:	de bf       	out	0x3e, r29	; 62
    1c08:	0f be       	out	0x3f, r0	; 63
    1c0a:	cd bf       	out	0x3d, r28	; 61
    1c0c:	8e e3       	ldi	r24, 0x3E	; 62
    1c0e:	9c e0       	ldi	r25, 0x0C	; 12
    1c10:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    1c14:	86 e0       	ldi	r24, 0x06	; 6
    1c16:	e7 ee       	ldi	r30, 0xE7	; 231
    1c18:	f1 e0       	ldi	r31, 0x01	; 1
    1c1a:	de 01       	movw	r26, r28
    1c1c:	11 96       	adiw	r26, 0x01	; 1
    1c1e:	01 90       	ld	r0, Z+
    1c20:	0d 92       	st	X+, r0
    1c22:	8a 95       	dec	r24
    1c24:	e1 f7       	brne	.-8      	; 0x1c1e <_Z9menue_uhrv+0x30>
    1c26:	ce 01       	movw	r24, r28
    1c28:	01 96       	adiw	r24, 0x01	; 1
    1c2a:	7c 01       	movw	r14, r24
    1c2c:	6c 01       	movw	r12, r24
    1c2e:	10 e0       	ldi	r17, 0x00	; 0
    1c30:	f6 01       	movw	r30, r12
    1c32:	61 91       	ld	r22, Z+
    1c34:	6f 01       	movw	r12, r30
    1c36:	20 e0       	ldi	r18, 0x00	; 0
    1c38:	41 2f       	mov	r20, r17
    1c3a:	8e e3       	ldi	r24, 0x3E	; 62
    1c3c:	9c e0       	ldi	r25, 0x0C	; 12
    1c3e:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1c42:	1a 5f       	subi	r17, 0xFA	; 250
    1c44:	1e 31       	cpi	r17, 0x1E	; 30
    1c46:	a1 f7       	brne	.-24     	; 0x1c30 <_Z9menue_uhrv+0x42>
    1c48:	8b e0       	ldi	r24, 0x0B	; 11
    1c4a:	ed ee       	ldi	r30, 0xED	; 237
    1c4c:	f1 e0       	ldi	r31, 0x01	; 1
    1c4e:	de 01       	movw	r26, r28
    1c50:	11 96       	adiw	r26, 0x01	; 1
    1c52:	01 90       	ld	r0, Z+
    1c54:	0d 92       	st	X+, r0
    1c56:	8a 95       	dec	r24
    1c58:	e1 f7       	brne	.-8      	; 0x1c52 <_Z9menue_uhrv+0x64>
    1c5a:	67 01       	movw	r12, r14
    1c5c:	10 e0       	ldi	r17, 0x00	; 0
    1c5e:	f6 01       	movw	r30, r12
    1c60:	61 91       	ld	r22, Z+
    1c62:	6f 01       	movw	r12, r30
    1c64:	28 e0       	ldi	r18, 0x08	; 8
    1c66:	41 2f       	mov	r20, r17
    1c68:	8e e3       	ldi	r24, 0x3E	; 62
    1c6a:	9c e0       	ldi	r25, 0x0C	; 12
    1c6c:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1c70:	1a 5f       	subi	r17, 0xFA	; 250
    1c72:	1c 33       	cpi	r17, 0x3C	; 60
    1c74:	a1 f7       	brne	.-24     	; 0x1c5e <_Z9menue_uhrv+0x70>
    1c76:	88 e0       	ldi	r24, 0x08	; 8
    1c78:	e8 ef       	ldi	r30, 0xF8	; 248
    1c7a:	f1 e0       	ldi	r31, 0x01	; 1
    1c7c:	de 01       	movw	r26, r28
    1c7e:	11 96       	adiw	r26, 0x01	; 1
    1c80:	01 90       	ld	r0, Z+
    1c82:	0d 92       	st	X+, r0
    1c84:	8a 95       	dec	r24
    1c86:	e1 f7       	brne	.-8      	; 0x1c80 <_Z9menue_uhrv+0x92>
    1c88:	67 01       	movw	r12, r14
    1c8a:	10 e0       	ldi	r17, 0x00	; 0
    1c8c:	f6 01       	movw	r30, r12
    1c8e:	61 91       	ld	r22, Z+
    1c90:	6f 01       	movw	r12, r30
    1c92:	20 e1       	ldi	r18, 0x10	; 16
    1c94:	41 2f       	mov	r20, r17
    1c96:	8e e3       	ldi	r24, 0x3E	; 62
    1c98:	9c e0       	ldi	r25, 0x0C	; 12
    1c9a:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1c9e:	1a 5f       	subi	r17, 0xFA	; 250
    1ca0:	1a 32       	cpi	r17, 0x2A	; 42
    1ca2:	a1 f7       	brne	.-24     	; 0x1c8c <_Z9menue_uhrv+0x9e>
    1ca4:	89 e0       	ldi	r24, 0x09	; 9
    1ca6:	e0 e0       	ldi	r30, 0x00	; 0
    1ca8:	f2 e0       	ldi	r31, 0x02	; 2
    1caa:	de 01       	movw	r26, r28
    1cac:	11 96       	adiw	r26, 0x01	; 1
    1cae:	01 90       	ld	r0, Z+
    1cb0:	0d 92       	st	X+, r0
    1cb2:	8a 95       	dec	r24
    1cb4:	e1 f7       	brne	.-8      	; 0x1cae <_Z9menue_uhrv+0xc0>
    1cb6:	67 01       	movw	r12, r14
    1cb8:	10 e0       	ldi	r17, 0x00	; 0
    1cba:	f6 01       	movw	r30, r12
    1cbc:	61 91       	ld	r22, Z+
    1cbe:	6f 01       	movw	r12, r30
    1cc0:	28 e1       	ldi	r18, 0x18	; 24
    1cc2:	41 2f       	mov	r20, r17
    1cc4:	8e e3       	ldi	r24, 0x3E	; 62
    1cc6:	9c e0       	ldi	r25, 0x0C	; 12
    1cc8:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1ccc:	1a 5f       	subi	r17, 0xFA	; 250
    1cce:	10 33       	cpi	r17, 0x30	; 48
    1cd0:	a1 f7       	brne	.-24     	; 0x1cba <_Z9menue_uhrv+0xcc>
    1cd2:	8c e0       	ldi	r24, 0x0C	; 12
    1cd4:	e9 e0       	ldi	r30, 0x09	; 9
    1cd6:	f2 e0       	ldi	r31, 0x02	; 2
    1cd8:	de 01       	movw	r26, r28
    1cda:	11 96       	adiw	r26, 0x01	; 1
    1cdc:	01 90       	ld	r0, Z+
    1cde:	0d 92       	st	X+, r0
    1ce0:	8a 95       	dec	r24
    1ce2:	e1 f7       	brne	.-8      	; 0x1cdc <_Z9menue_uhrv+0xee>
    1ce4:	10 e0       	ldi	r17, 0x00	; 0
    1ce6:	f7 01       	movw	r30, r14
    1ce8:	61 91       	ld	r22, Z+
    1cea:	7f 01       	movw	r14, r30
    1cec:	20 e2       	ldi	r18, 0x20	; 32
    1cee:	41 2f       	mov	r20, r17
    1cf0:	8e e3       	ldi	r24, 0x3E	; 62
    1cf2:	9c e0       	ldi	r25, 0x0C	; 12
    1cf4:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1cf8:	1a 5f       	subi	r17, 0xFA	; 250
    1cfa:	12 34       	cpi	r17, 0x42	; 66
    1cfc:	a1 f7       	brne	.-24     	; 0x1ce6 <_Z9menue_uhrv+0xf8>
    1cfe:	64 96       	adiw	r28, 0x14	; 20
    1d00:	0f b6       	in	r0, 0x3f	; 63
    1d02:	f8 94       	cli
    1d04:	de bf       	out	0x3e, r29	; 62
    1d06:	0f be       	out	0x3f, r0	; 63
    1d08:	cd bf       	out	0x3d, r28	; 61
    1d0a:	df 91       	pop	r29
    1d0c:	cf 91       	pop	r28
    1d0e:	1f 91       	pop	r17
    1d10:	ff 90       	pop	r15
    1d12:	ef 90       	pop	r14
    1d14:	df 90       	pop	r13
    1d16:	cf 90       	pop	r12
    1d18:	08 95       	ret

00001d1a <_Z12find_gravityv>:
    1d1a:	cf 92       	push	r12
    1d1c:	df 92       	push	r13
    1d1e:	ef 92       	push	r14
    1d20:	ff 92       	push	r15
    1d22:	1f 93       	push	r17
    1d24:	cf 93       	push	r28
    1d26:	df 93       	push	r29
    1d28:	cd b7       	in	r28, 0x3d	; 61
    1d2a:	de b7       	in	r29, 0x3e	; 62
    1d2c:	64 97       	sbiw	r28, 0x14	; 20
    1d2e:	0f b6       	in	r0, 0x3f	; 63
    1d30:	f8 94       	cli
    1d32:	de bf       	out	0x3e, r29	; 62
    1d34:	0f be       	out	0x3f, r0	; 63
    1d36:	cd bf       	out	0x3d, r28	; 61
    1d38:	8e e3       	ldi	r24, 0x3E	; 62
    1d3a:	9c e0       	ldi	r25, 0x0C	; 12
    1d3c:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    1d40:	80 e0       	ldi	r24, 0x00	; 0
    1d42:	eb db       	rcall	.-2090   	; 0x151a <_Z6headerh>
    1d44:	80 e0       	ldi	r24, 0x00	; 0
    1d46:	be dc       	rcall	.-1668   	; 0x16c4 <_Z6bottomh>
    1d48:	85 e1       	ldi	r24, 0x15	; 21
    1d4a:	e5 e1       	ldi	r30, 0x15	; 21
    1d4c:	f2 e0       	ldi	r31, 0x02	; 2
    1d4e:	de 01       	movw	r26, r28
    1d50:	11 96       	adiw	r26, 0x01	; 1
    1d52:	01 90       	ld	r0, Z+
    1d54:	0d 92       	st	X+, r0
    1d56:	8a 95       	dec	r24
    1d58:	e1 f7       	brne	.-8      	; 0x1d52 <_Z12find_gravityv+0x38>
    1d5a:	9e 01       	movw	r18, r28
    1d5c:	2f 5f       	subi	r18, 0xFF	; 255
    1d5e:	3f 4f       	sbci	r19, 0xFF	; 255
    1d60:	69 01       	movw	r12, r18
    1d62:	79 01       	movw	r14, r18
    1d64:	10 e0       	ldi	r17, 0x00	; 0
    1d66:	f7 01       	movw	r30, r14
    1d68:	61 91       	ld	r22, Z+
    1d6a:	7f 01       	movw	r14, r30
    1d6c:	20 e1       	ldi	r18, 0x10	; 16
    1d6e:	41 2f       	mov	r20, r17
    1d70:	8e e3       	ldi	r24, 0x3E	; 62
    1d72:	9c e0       	ldi	r25, 0x0C	; 12
    1d74:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1d78:	1a 5f       	subi	r17, 0xFA	; 250
    1d7a:	18 37       	cpi	r17, 0x78	; 120
    1d7c:	a1 f7       	brne	.-24     	; 0x1d66 <_Z12find_gravityv+0x4c>
    1d7e:	8d e0       	ldi	r24, 0x0D	; 13
    1d80:	ea e2       	ldi	r30, 0x2A	; 42
    1d82:	f2 e0       	ldi	r31, 0x02	; 2
    1d84:	de 01       	movw	r26, r28
    1d86:	11 96       	adiw	r26, 0x01	; 1
    1d88:	01 90       	ld	r0, Z+
    1d8a:	0d 92       	st	X+, r0
    1d8c:	8a 95       	dec	r24
    1d8e:	e1 f7       	brne	.-8      	; 0x1d88 <_Z12find_gravityv+0x6e>
    1d90:	76 01       	movw	r14, r12
    1d92:	10 e0       	ldi	r17, 0x00	; 0
    1d94:	f7 01       	movw	r30, r14
    1d96:	61 91       	ld	r22, Z+
    1d98:	7f 01       	movw	r14, r30
    1d9a:	28 e1       	ldi	r18, 0x18	; 24
    1d9c:	41 2f       	mov	r20, r17
    1d9e:	8e e3       	ldi	r24, 0x3E	; 62
    1da0:	9c e0       	ldi	r25, 0x0C	; 12
    1da2:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1da6:	1a 5f       	subi	r17, 0xFA	; 250
    1da8:	18 34       	cpi	r17, 0x48	; 72
    1daa:	a1 f7       	brne	.-24     	; 0x1d94 <_Z12find_gravityv+0x7a>
    1dac:	80 91 37 03 	lds	r24, 0x0337
    1db0:	86 30       	cpi	r24, 0x06	; 6
    1db2:	48 f5       	brcc	.+82     	; 0x1e06 <_Z12find_gravityv+0xec>
    1db4:	1f 92       	push	r1
    1db6:	8f 93       	push	r24
    1db8:	87 e3       	ldi	r24, 0x37	; 55
    1dba:	92 e0       	ldi	r25, 0x02	; 2
    1dbc:	9f 93       	push	r25
    1dbe:	8f 93       	push	r24
    1dc0:	ce 01       	movw	r24, r28
    1dc2:	01 96       	adiw	r24, 0x01	; 1
    1dc4:	9f 93       	push	r25
    1dc6:	8f 93       	push	r24
    1dc8:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
    1dcc:	0f 90       	pop	r0
    1dce:	0f 90       	pop	r0
    1dd0:	0f 90       	pop	r0
    1dd2:	0f 90       	pop	r0
    1dd4:	0f 90       	pop	r0
    1dd6:	0f 90       	pop	r0
    1dd8:	88 23       	and	r24, r24
    1dda:	a9 f0       	breq	.+42     	; 0x1e06 <_Z12find_gravityv+0xec>
    1ddc:	81 50       	subi	r24, 0x01	; 1
    1dde:	9e 01       	movw	r18, r28
    1de0:	28 0f       	add	r18, r24
    1de2:	31 1d       	adc	r19, r1
    1de4:	f9 01       	movw	r30, r18
    1de6:	32 96       	adiw	r30, 0x02	; 2
    1de8:	7f 01       	movw	r14, r30
    1dea:	10 e0       	ldi	r17, 0x00	; 0
    1dec:	f6 01       	movw	r30, r12
    1dee:	61 91       	ld	r22, Z+
    1df0:	6f 01       	movw	r12, r30
    1df2:	28 e2       	ldi	r18, 0x28	; 40
    1df4:	41 2f       	mov	r20, r17
    1df6:	8e e3       	ldi	r24, 0x3E	; 62
    1df8:	9c e0       	ldi	r25, 0x0C	; 12
    1dfa:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1dfe:	1a 5f       	subi	r17, 0xFA	; 250
    1e00:	ce 14       	cp	r12, r14
    1e02:	df 04       	cpc	r13, r15
    1e04:	99 f7       	brne	.-26     	; 0x1dec <_Z12find_gravityv+0xd2>
    1e06:	64 96       	adiw	r28, 0x14	; 20
    1e08:	0f b6       	in	r0, 0x3f	; 63
    1e0a:	f8 94       	cli
    1e0c:	de bf       	out	0x3e, r29	; 62
    1e0e:	0f be       	out	0x3f, r0	; 63
    1e10:	cd bf       	out	0x3d, r28	; 61
    1e12:	df 91       	pop	r29
    1e14:	cf 91       	pop	r28
    1e16:	1f 91       	pop	r17
    1e18:	ff 90       	pop	r15
    1e1a:	ef 90       	pop	r14
    1e1c:	df 90       	pop	r13
    1e1e:	cf 90       	pop	r12
    1e20:	08 95       	ret

00001e22 <_Z11uhranzeigenv>:
    1e22:	cf 92       	push	r12
    1e24:	df 92       	push	r13
    1e26:	ff 92       	push	r15
    1e28:	0f 93       	push	r16
    1e2a:	1f 93       	push	r17
    1e2c:	cf 93       	push	r28
    1e2e:	df 93       	push	r29
    1e30:	cd b7       	in	r28, 0x3d	; 61
    1e32:	de b7       	in	r29, 0x3e	; 62
    1e34:	64 97       	sbiw	r28, 0x14	; 20
    1e36:	0f b6       	in	r0, 0x3f	; 63
    1e38:	f8 94       	cli
    1e3a:	de bf       	out	0x3e, r29	; 62
    1e3c:	0f be       	out	0x3f, r0	; 63
    1e3e:	cd bf       	out	0x3d, r28	; 61
    1e40:	8e e3       	ldi	r24, 0x3E	; 62
    1e42:	9c e0       	ldi	r25, 0x0C	; 12
    1e44:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    1e48:	ef e3       	ldi	r30, 0x3F	; 63
    1e4a:	f0 e1       	ldi	r31, 0x10	; 16
    1e4c:	01 e0       	ldi	r16, 0x01	; 1
    1e4e:	22 89       	ldd	r18, Z+18	; 0x12
    1e50:	41 89       	ldd	r20, Z+17	; 0x11
    1e52:	60 89       	ldd	r22, Z+16	; 0x10
    1e54:	8e e3       	ldi	r24, 0x3E	; 62
    1e56:	9c e0       	ldi	r25, 0x0C	; 12
    1e58:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <_ZN7Display6analogEhhhh>
    1e5c:	0f 2e       	mov	r0, r31
    1e5e:	ff e3       	ldi	r31, 0x3F	; 63
    1e60:	cf 2e       	mov	r12, r31
    1e62:	f0 e1       	ldi	r31, 0x10	; 16
    1e64:	df 2e       	mov	r13, r31
    1e66:	f0 2d       	mov	r31, r0
    1e68:	11 e4       	ldi	r17, 0x41	; 65
    1e6a:	f6 01       	movw	r30, r12
    1e6c:	61 91       	ld	r22, Z+
    1e6e:	6f 01       	movw	r12, r30
    1e70:	20 e0       	ldi	r18, 0x00	; 0
    1e72:	41 2f       	mov	r20, r17
    1e74:	8e e3       	ldi	r24, 0x3E	; 62
    1e76:	9c e0       	ldi	r25, 0x0C	; 12
    1e78:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1e7c:	1a 5f       	subi	r17, 0xFA	; 250
    1e7e:	11 37       	cpi	r17, 0x71	; 113
    1e80:	a1 f7       	brne	.-24     	; 0x1e6a <_Z11uhranzeigenv+0x48>
    1e82:	0f 2e       	mov	r0, r31
    1e84:	f7 e4       	ldi	r31, 0x47	; 71
    1e86:	cf 2e       	mov	r12, r31
    1e88:	f0 e1       	ldi	r31, 0x10	; 16
    1e8a:	df 2e       	mov	r13, r31
    1e8c:	f0 2d       	mov	r31, r0
    1e8e:	11 e4       	ldi	r17, 0x41	; 65
    1e90:	f6 01       	movw	r30, r12
    1e92:	61 91       	ld	r22, Z+
    1e94:	6f 01       	movw	r12, r30
    1e96:	28 e3       	ldi	r18, 0x38	; 56
    1e98:	41 2f       	mov	r20, r17
    1e9a:	8e e3       	ldi	r24, 0x3E	; 62
    1e9c:	9c e0       	ldi	r25, 0x0C	; 12
    1e9e:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1ea2:	1a 5f       	subi	r17, 0xFA	; 250
    1ea4:	11 37       	cpi	r17, 0x71	; 113
    1ea6:	a1 f7       	brne	.-24     	; 0x1e90 <_Z11uhranzeigenv+0x6e>
    1ea8:	1a da       	rcall	.-3020   	; 0x12de <_Z14Batteriestatusv>
    1eaa:	28 2f       	mov	r18, r24
    1eac:	08 2e       	mov	r0, r24
    1eae:	00 0c       	add	r0, r0
    1eb0:	33 0b       	sbc	r19, r19
    1eb2:	3f 93       	push	r19
    1eb4:	8f 93       	push	r24
    1eb6:	81 e3       	ldi	r24, 0x31	; 49
    1eb8:	91 e0       	ldi	r25, 0x01	; 1
    1eba:	9f 93       	push	r25
    1ebc:	8f 93       	push	r24
    1ebe:	ce 01       	movw	r24, r28
    1ec0:	01 96       	adiw	r24, 0x01	; 1
    1ec2:	9f 93       	push	r25
    1ec4:	8f 93       	push	r24
    1ec6:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
    1eca:	0f 90       	pop	r0
    1ecc:	0f 90       	pop	r0
    1ece:	0f 90       	pop	r0
    1ed0:	0f 90       	pop	r0
    1ed2:	0f 90       	pop	r0
    1ed4:	0f 90       	pop	r0
    1ed6:	88 23       	and	r24, r24
    1ed8:	51 f1       	breq	.+84     	; 0x1f2e <_Z11uhranzeigenv+0x10c>
    1eda:	8e 01       	movw	r16, r28
    1edc:	0f 5f       	subi	r16, 0xFF	; 255
    1ede:	1f 4f       	sbci	r17, 0xFF	; 255
    1ee0:	81 50       	subi	r24, 0x01	; 1
    1ee2:	c8 2e       	mov	r12, r24
    1ee4:	d1 2c       	mov	r13, r1
    1ee6:	ff ef       	ldi	r31, 0xFF	; 255
    1ee8:	cf 1a       	sub	r12, r31
    1eea:	df 0a       	sbc	r13, r31
    1eec:	c0 0e       	add	r12, r16
    1eee:	d1 1e       	adc	r13, r17
    1ef0:	0f 2e       	mov	r0, r31
    1ef2:	f9 e4       	ldi	r31, 0x49	; 73
    1ef4:	ff 2e       	mov	r15, r31
    1ef6:	f0 2d       	mov	r31, r0
    1ef8:	f8 01       	movw	r30, r16
    1efa:	61 91       	ld	r22, Z+
    1efc:	8f 01       	movw	r16, r30
    1efe:	86 2f       	mov	r24, r22
    1f00:	87 7f       	andi	r24, 0xF7	; 247
    1f02:	85 32       	cpi	r24, 0x25	; 37
    1f04:	39 f4       	brne	.+14     	; 0x1f14 <_Z11uhranzeigenv+0xf2>
    1f06:	28 e1       	ldi	r18, 0x18	; 24
    1f08:	4f 2d       	mov	r20, r15
    1f0a:	8e e3       	ldi	r24, 0x3E	; 62
    1f0c:	9c e0       	ldi	r25, 0x0C	; 12
    1f0e:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1f12:	08 c0       	rjmp	.+16     	; 0x1f24 <_Z11uhranzeigenv+0x102>
    1f14:	60 53       	subi	r22, 0x30	; 48
    1f16:	24 e1       	ldi	r18, 0x14	; 20
    1f18:	4d ef       	ldi	r20, 0xFD	; 253
    1f1a:	4f 0d       	add	r20, r15
    1f1c:	8e e3       	ldi	r24, 0x3E	; 62
    1f1e:	9c e0       	ldi	r25, 0x0C	; 12
    1f20:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    1f24:	f0 e1       	ldi	r31, 0x10	; 16
    1f26:	ff 0e       	add	r15, r31
    1f28:	0c 15       	cp	r16, r12
    1f2a:	1d 05       	cpc	r17, r13
    1f2c:	29 f7       	brne	.-54     	; 0x1ef8 <_Z11uhranzeigenv+0xd6>
    1f2e:	64 96       	adiw	r28, 0x14	; 20
    1f30:	0f b6       	in	r0, 0x3f	; 63
    1f32:	f8 94       	cli
    1f34:	de bf       	out	0x3e, r29	; 62
    1f36:	0f be       	out	0x3f, r0	; 63
    1f38:	cd bf       	out	0x3d, r28	; 61
    1f3a:	df 91       	pop	r29
    1f3c:	cf 91       	pop	r28
    1f3e:	1f 91       	pop	r17
    1f40:	0f 91       	pop	r16
    1f42:	ff 90       	pop	r15
    1f44:	df 90       	pop	r13
    1f46:	cf 90       	pop	r12
    1f48:	08 95       	ret

00001f4a <_Z14uhranzeigenminv>:
    1f4a:	0f 93       	push	r16
    1f4c:	1f 93       	push	r17
    1f4e:	cf 93       	push	r28
    1f50:	df 93       	push	r29
    1f52:	8e e3       	ldi	r24, 0x3E	; 62
    1f54:	9c e0       	ldi	r25, 0x0C	; 12
    1f56:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    1f5a:	82 e0       	ldi	r24, 0x02	; 2
    1f5c:	de da       	rcall	.-2628   	; 0x151a <_Z6headerh>
    1f5e:	ef e3       	ldi	r30, 0x3F	; 63
    1f60:	f0 e1       	ldi	r31, 0x10	; 16
    1f62:	00 e0       	ldi	r16, 0x00	; 0
    1f64:	22 89       	ldd	r18, Z+18	; 0x12
    1f66:	41 89       	ldd	r20, Z+17	; 0x11
    1f68:	60 89       	ldd	r22, Z+16	; 0x10
    1f6a:	8e e3       	ldi	r24, 0x3E	; 62
    1f6c:	9c e0       	ldi	r25, 0x0C	; 12
    1f6e:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <_ZN7Display6analogEhhhh>
    1f72:	0f e3       	ldi	r16, 0x3F	; 63
    1f74:	10 e1       	ldi	r17, 0x10	; 16
    1f76:	c1 e4       	ldi	r28, 0x41	; 65
    1f78:	f8 01       	movw	r30, r16
    1f7a:	61 91       	ld	r22, Z+
    1f7c:	8f 01       	movw	r16, r30
    1f7e:	20 e0       	ldi	r18, 0x00	; 0
    1f80:	4c 2f       	mov	r20, r28
    1f82:	8e e3       	ldi	r24, 0x3E	; 62
    1f84:	9c e0       	ldi	r25, 0x0C	; 12
    1f86:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1f8a:	ca 5f       	subi	r28, 0xFA	; 250
    1f8c:	cf 35       	cpi	r28, 0x5F	; 95
    1f8e:	a1 f7       	brne	.-24     	; 0x1f78 <_Z14uhranzeigenminv+0x2e>
    1f90:	07 e4       	ldi	r16, 0x47	; 71
    1f92:	10 e1       	ldi	r17, 0x10	; 16
    1f94:	c1 e4       	ldi	r28, 0x41	; 65
    1f96:	f8 01       	movw	r30, r16
    1f98:	61 91       	ld	r22, Z+
    1f9a:	8f 01       	movw	r16, r30
    1f9c:	28 e3       	ldi	r18, 0x38	; 56
    1f9e:	4c 2f       	mov	r20, r28
    1fa0:	8e e3       	ldi	r24, 0x3E	; 62
    1fa2:	9c e0       	ldi	r25, 0x0C	; 12
    1fa4:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    1fa8:	ca 5f       	subi	r28, 0xFA	; 250
    1faa:	c1 37       	cpi	r28, 0x71	; 113
    1fac:	a1 f7       	brne	.-24     	; 0x1f96 <_Z14uhranzeigenminv+0x4c>
    1fae:	cf e3       	ldi	r28, 0x3F	; 63
    1fb0:	d0 e1       	ldi	r29, 0x10	; 16
    1fb2:	68 81       	ld	r22, Y
    1fb4:	60 53       	subi	r22, 0x30	; 48
    1fb6:	2d e0       	ldi	r18, 0x0D	; 13
    1fb8:	46 e4       	ldi	r20, 0x46	; 70
    1fba:	8e e3       	ldi	r24, 0x3E	; 62
    1fbc:	9c e0       	ldi	r25, 0x0C	; 12
    1fbe:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    1fc2:	69 81       	ldd	r22, Y+1	; 0x01
    1fc4:	60 53       	subi	r22, 0x30	; 48
    1fc6:	2d e0       	ldi	r18, 0x0D	; 13
    1fc8:	46 e5       	ldi	r20, 0x56	; 86
    1fca:	8e e3       	ldi	r24, 0x3E	; 62
    1fcc:	9c e0       	ldi	r25, 0x0C	; 12
    1fce:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    1fd2:	6b 81       	ldd	r22, Y+3	; 0x03
    1fd4:	60 53       	subi	r22, 0x30	; 48
    1fd6:	22 e2       	ldi	r18, 0x22	; 34
    1fd8:	46 e4       	ldi	r20, 0x46	; 70
    1fda:	8e e3       	ldi	r24, 0x3E	; 62
    1fdc:	9c e0       	ldi	r25, 0x0C	; 12
    1fde:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    1fe2:	6c 81       	ldd	r22, Y+4	; 0x04
    1fe4:	60 53       	subi	r22, 0x30	; 48
    1fe6:	22 e2       	ldi	r18, 0x22	; 34
    1fe8:	46 e5       	ldi	r20, 0x56	; 86
    1fea:	8e e3       	ldi	r24, 0x3E	; 62
    1fec:	9c e0       	ldi	r25, 0x0C	; 12
    1fee:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    1ff2:	df 91       	pop	r29
    1ff4:	cf 91       	pop	r28
    1ff6:	1f 91       	pop	r17
    1ff8:	0f 91       	pop	r16
    1ffa:	08 95       	ret

00001ffc <_Z13Weckeranzeigev>:
    1ffc:	0f 93       	push	r16
    1ffe:	1f 93       	push	r17
    2000:	cf 93       	push	r28
    2002:	8e e3       	ldi	r24, 0x3E	; 62
    2004:	9c e0       	ldi	r25, 0x0C	; 12
    2006:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    200a:	81 e0       	ldi	r24, 0x01	; 1
    200c:	5b db       	rcall	.-2378   	; 0x16c4 <_Z6bottomh>
    200e:	81 e0       	ldi	r24, 0x01	; 1
    2010:	84 da       	rcall	.-2808   	; 0x151a <_Z6headerh>
    2012:	0f e3       	ldi	r16, 0x3F	; 63
    2014:	10 e1       	ldi	r17, 0x10	; 16
    2016:	f8 01       	movw	r30, r16
    2018:	60 81       	ld	r22, Z
    201a:	60 53       	subi	r22, 0x30	; 48
    201c:	2d e0       	ldi	r18, 0x0D	; 13
    201e:	45 e0       	ldi	r20, 0x05	; 5
    2020:	8e e3       	ldi	r24, 0x3E	; 62
    2022:	9c e0       	ldi	r25, 0x0C	; 12
    2024:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    2028:	f8 01       	movw	r30, r16
    202a:	61 81       	ldd	r22, Z+1	; 0x01
    202c:	60 53       	subi	r22, 0x30	; 48
    202e:	2d e0       	ldi	r18, 0x0D	; 13
    2030:	45 e1       	ldi	r20, 0x15	; 21
    2032:	8e e3       	ldi	r24, 0x3E	; 62
    2034:	9c e0       	ldi	r25, 0x0C	; 12
    2036:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    203a:	f8 01       	movw	r30, r16
    203c:	63 81       	ldd	r22, Z+3	; 0x03
    203e:	60 53       	subi	r22, 0x30	; 48
    2040:	22 e2       	ldi	r18, 0x22	; 34
    2042:	45 e0       	ldi	r20, 0x05	; 5
    2044:	8e e3       	ldi	r24, 0x3E	; 62
    2046:	9c e0       	ldi	r25, 0x0C	; 12
    2048:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    204c:	f8 01       	movw	r30, r16
    204e:	64 81       	ldd	r22, Z+4	; 0x04
    2050:	60 53       	subi	r22, 0x30	; 48
    2052:	22 e2       	ldi	r18, 0x22	; 34
    2054:	45 e1       	ldi	r20, 0x15	; 21
    2056:	8e e3       	ldi	r24, 0x3E	; 62
    2058:	9c e0       	ldi	r25, 0x0C	; 12
    205a:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    205e:	f8 01       	movw	r30, r16
    2060:	62 8d       	ldd	r22, Z+26	; 0x1a
    2062:	cd ec       	ldi	r28, 0xCD	; 205
    2064:	6c 9f       	mul	r22, r28
    2066:	61 2d       	mov	r22, r1
    2068:	11 24       	eor	r1, r1
    206a:	66 95       	lsr	r22
    206c:	66 95       	lsr	r22
    206e:	66 95       	lsr	r22
    2070:	2d e0       	ldi	r18, 0x0D	; 13
    2072:	46 e4       	ldi	r20, 0x46	; 70
    2074:	8e e3       	ldi	r24, 0x3E	; 62
    2076:	9c e0       	ldi	r25, 0x0C	; 12
    2078:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    207c:	f8 01       	movw	r30, r16
    207e:	62 8d       	ldd	r22, Z+26	; 0x1a
    2080:	6c 9f       	mul	r22, r28
    2082:	81 2d       	mov	r24, r1
    2084:	11 24       	eor	r1, r1
    2086:	86 95       	lsr	r24
    2088:	86 95       	lsr	r24
    208a:	86 95       	lsr	r24
    208c:	88 0f       	add	r24, r24
    208e:	98 2f       	mov	r25, r24
    2090:	99 0f       	add	r25, r25
    2092:	99 0f       	add	r25, r25
    2094:	89 0f       	add	r24, r25
    2096:	68 1b       	sub	r22, r24
    2098:	2d e0       	ldi	r18, 0x0D	; 13
    209a:	46 e5       	ldi	r20, 0x56	; 86
    209c:	8e e3       	ldi	r24, 0x3E	; 62
    209e:	9c e0       	ldi	r25, 0x0C	; 12
    20a0:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    20a4:	f8 01       	movw	r30, r16
    20a6:	61 8d       	ldd	r22, Z+25	; 0x19
    20a8:	6c 9f       	mul	r22, r28
    20aa:	61 2d       	mov	r22, r1
    20ac:	11 24       	eor	r1, r1
    20ae:	66 95       	lsr	r22
    20b0:	66 95       	lsr	r22
    20b2:	66 95       	lsr	r22
    20b4:	22 e2       	ldi	r18, 0x22	; 34
    20b6:	46 e4       	ldi	r20, 0x46	; 70
    20b8:	8e e3       	ldi	r24, 0x3E	; 62
    20ba:	9c e0       	ldi	r25, 0x0C	; 12
    20bc:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    20c0:	f8 01       	movw	r30, r16
    20c2:	61 8d       	ldd	r22, Z+25	; 0x19
    20c4:	6c 9f       	mul	r22, r28
    20c6:	c1 2d       	mov	r28, r1
    20c8:	11 24       	eor	r1, r1
    20ca:	c6 95       	lsr	r28
    20cc:	c6 95       	lsr	r28
    20ce:	c6 95       	lsr	r28
    20d0:	cc 0f       	add	r28, r28
    20d2:	8c 2f       	mov	r24, r28
    20d4:	88 0f       	add	r24, r24
    20d6:	88 0f       	add	r24, r24
    20d8:	c8 0f       	add	r28, r24
    20da:	6c 1b       	sub	r22, r28
    20dc:	22 e2       	ldi	r18, 0x22	; 34
    20de:	46 e5       	ldi	r20, 0x56	; 86
    20e0:	8e e3       	ldi	r24, 0x3E	; 62
    20e2:	9c e0       	ldi	r25, 0x0C	; 12
    20e4:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    20e8:	f8 01       	movw	r30, r16
    20ea:	80 8d       	ldd	r24, Z+24	; 0x18
    20ec:	83 ff       	sbrs	r24, 3
    20ee:	07 c0       	rjmp	.+14     	; 0x20fe <_Z13Weckeranzeigev+0x102>
    20f0:	20 e0       	ldi	r18, 0x00	; 0
    20f2:	40 e0       	ldi	r20, 0x00	; 0
    20f4:	6f e6       	ldi	r22, 0x6F	; 111
    20f6:	8e e3       	ldi	r24, 0x3E	; 62
    20f8:	9c e0       	ldi	r25, 0x0C	; 12
    20fa:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    20fe:	80 91 39 03 	lds	r24, 0x0339
    2102:	90 91 3a 03 	lds	r25, 0x033A
    2106:	94 ff       	sbrs	r25, 4
    2108:	09 c0       	rjmp	.+18     	; 0x211c <_Z13Weckeranzeigev+0x120>
    210a:	60 91 37 03 	lds	r22, 0x0337
    210e:	60 5d       	subi	r22, 0xD0	; 208
    2110:	20 e0       	ldi	r18, 0x00	; 0
    2112:	46 e0       	ldi	r20, 0x06	; 6
    2114:	8e e3       	ldi	r24, 0x3E	; 62
    2116:	9c e0       	ldi	r25, 0x0C	; 12
    2118:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    211c:	cf 91       	pop	r28
    211e:	1f 91       	pop	r17
    2120:	0f 91       	pop	r16
    2122:	08 95       	ret

00002124 <_Z12fahradschirmddddm>:
    2124:	2f 92       	push	r2
    2126:	3f 92       	push	r3
    2128:	4f 92       	push	r4
    212a:	5f 92       	push	r5
    212c:	6f 92       	push	r6
    212e:	7f 92       	push	r7
    2130:	8f 92       	push	r8
    2132:	9f 92       	push	r9
    2134:	af 92       	push	r10
    2136:	bf 92       	push	r11
    2138:	cf 92       	push	r12
    213a:	df 92       	push	r13
    213c:	ef 92       	push	r14
    213e:	ff 92       	push	r15
    2140:	0f 93       	push	r16
    2142:	1f 93       	push	r17
    2144:	cf 93       	push	r28
    2146:	df 93       	push	r29
    2148:	cd b7       	in	r28, 0x3d	; 61
    214a:	de b7       	in	r29, 0x3e	; 62
    214c:	61 97       	sbiw	r28, 0x11	; 17
    214e:	0f b6       	in	r0, 0x3f	; 63
    2150:	f8 94       	cli
    2152:	de bf       	out	0x3e, r29	; 62
    2154:	0f be       	out	0x3f, r0	; 63
    2156:	cd bf       	out	0x3d, r28	; 61
    2158:	96 2e       	mov	r9, r22
    215a:	7f 87       	std	Y+15, r23	; 0x0f
    215c:	88 2e       	mov	r8, r24
    215e:	39 2e       	mov	r3, r25
    2160:	2b 87       	std	Y+11, r18	; 0x0b
    2162:	3c 87       	std	Y+12, r19	; 0x0c
    2164:	4d 87       	std	Y+13, r20	; 0x0d
    2166:	5e 87       	std	Y+14, r21	; 0x0e
    2168:	08 8b       	std	Y+16, r16	; 0x10
    216a:	19 8b       	std	Y+17, r17	; 0x11
    216c:	2d 2c       	mov	r2, r13
    216e:	7e a0       	ldd	r7, Y+38	; 0x26
    2170:	6f a0       	ldd	r6, Y+39	; 0x27
    2172:	58 a4       	ldd	r5, Y+40	; 0x28
    2174:	49 a4       	ldd	r4, Y+41	; 0x29
    2176:	8e e3       	ldi	r24, 0x3E	; 62
    2178:	9c e0       	ldi	r25, 0x0C	; 12
    217a:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    217e:	81 e0       	ldi	r24, 0x01	; 1
    2180:	cc d9       	rcall	.-3176   	; 0x151a <_Z6headerh>
    2182:	80 e0       	ldi	r24, 0x00	; 0
    2184:	9f da       	rcall	.-2754   	; 0x16c4 <_Z6bottomh>
    2186:	20 e8       	ldi	r18, 0x80	; 128
    2188:	47 e3       	ldi	r20, 0x37	; 55
    218a:	60 e0       	ldi	r22, 0x00	; 0
    218c:	8e e3       	ldi	r24, 0x3E	; 62
    218e:	9c e0       	ldi	r25, 0x0C	; 12
    2190:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN7Display9drawHLineEhhh>
    2194:	25 e4       	ldi	r18, 0x45	; 69
    2196:	4f e0       	ldi	r20, 0x0F	; 15
    2198:	60 e0       	ldi	r22, 0x00	; 0
    219a:	8e e3       	ldi	r24, 0x3E	; 62
    219c:	9c e0       	ldi	r25, 0x0C	; 12
    219e:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN7Display9drawHLineEhhh>
    21a2:	2b e3       	ldi	r18, 0x3B	; 59
    21a4:	48 e0       	ldi	r20, 0x08	; 8
    21a6:	65 e4       	ldi	r22, 0x45	; 69
    21a8:	8e e3       	ldi	r24, 0x3E	; 62
    21aa:	9c e0       	ldi	r25, 0x0C	; 12
    21ac:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN7Display9drawHLineEhhh>
    21b0:	20 e1       	ldi	r18, 0x10	; 16
    21b2:	40 e0       	ldi	r20, 0x00	; 0
    21b4:	65 e4       	ldi	r22, 0x45	; 69
    21b6:	8e e3       	ldi	r24, 0x3E	; 62
    21b8:	9c e0       	ldi	r25, 0x0C	; 12
    21ba:	0e 94 c1 03 	call	0x782	; 0x782 <_ZN7Display9drawVLineEhhh>
    21be:	21 e4       	ldi	r18, 0x41	; 65
    21c0:	48 e2       	ldi	r20, 0x28	; 40
    21c2:	6f e3       	ldi	r22, 0x3F	; 63
    21c4:	8e e3       	ldi	r24, 0x3E	; 62
    21c6:	9c e0       	ldi	r25, 0x0C	; 12
    21c8:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN7Display9drawHLineEhhh>
    21cc:	20 e3       	ldi	r18, 0x30	; 48
    21ce:	40 e1       	ldi	r20, 0x10	; 16
    21d0:	6f e3       	ldi	r22, 0x3F	; 63
    21d2:	8e e3       	ldi	r24, 0x3E	; 62
    21d4:	9c e0       	ldi	r25, 0x0C	; 12
    21d6:	0e 94 c1 03 	call	0x782	; 0x782 <_ZN7Display9drawVLineEhhh>
    21da:	21 e4       	ldi	r18, 0x41	; 65
    21dc:	48 e1       	ldi	r20, 0x18	; 24
    21de:	6f e3       	ldi	r22, 0x3F	; 63
    21e0:	8e e3       	ldi	r24, 0x3E	; 62
    21e2:	9c e0       	ldi	r25, 0x0C	; 12
    21e4:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN7Display9drawHLineEhhh>
    21e8:	0f e3       	ldi	r16, 0x3F	; 63
    21ea:	10 e1       	ldi	r17, 0x10	; 16
    21ec:	f8 01       	movw	r30, r16
    21ee:	60 81       	ld	r22, Z
    21f0:	60 53       	subi	r22, 0x30	; 48
    21f2:	20 e0       	ldi	r18, 0x00	; 0
    21f4:	40 e0       	ldi	r20, 0x00	; 0
    21f6:	8e e3       	ldi	r24, 0x3E	; 62
    21f8:	9c e0       	ldi	r25, 0x0C	; 12
    21fa:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    21fe:	f8 01       	movw	r30, r16
    2200:	61 81       	ldd	r22, Z+1	; 0x01
    2202:	60 53       	subi	r22, 0x30	; 48
    2204:	20 e0       	ldi	r18, 0x00	; 0
    2206:	40 e1       	ldi	r20, 0x10	; 16
    2208:	8e e3       	ldi	r24, 0x3E	; 62
    220a:	9c e0       	ldi	r25, 0x0C	; 12
    220c:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    2210:	f8 01       	movw	r30, r16
    2212:	63 81       	ldd	r22, Z+3	; 0x03
    2214:	60 53       	subi	r22, 0x30	; 48
    2216:	20 e0       	ldi	r18, 0x00	; 0
    2218:	45 e2       	ldi	r20, 0x25	; 37
    221a:	8e e3       	ldi	r24, 0x3E	; 62
    221c:	9c e0       	ldi	r25, 0x0C	; 12
    221e:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    2222:	f8 01       	movw	r30, r16
    2224:	64 81       	ldd	r22, Z+4	; 0x04
    2226:	60 53       	subi	r22, 0x30	; 48
    2228:	20 e0       	ldi	r18, 0x00	; 0
    222a:	45 e3       	ldi	r20, 0x35	; 53
    222c:	8e e3       	ldi	r24, 0x3E	; 62
    222e:	9c e0       	ldi	r25, 0x0C	; 12
    2230:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    2234:	3f 92       	push	r3
    2236:	8f 92       	push	r8
    2238:	ff 85       	ldd	r31, Y+15	; 0x0f
    223a:	ff 93       	push	r31
    223c:	9f 92       	push	r9
    223e:	88 e4       	ldi	r24, 0x48	; 72
    2240:	92 e0       	ldi	r25, 0x02	; 2
    2242:	9f 93       	push	r25
    2244:	8f 93       	push	r24
    2246:	ce 01       	movw	r24, r28
    2248:	01 96       	adiw	r24, 0x01	; 1
    224a:	9f 93       	push	r25
    224c:	8f 93       	push	r24
    224e:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
    2252:	28 e0       	ldi	r18, 0x08	; 8
    2254:	02 2f       	mov	r16, r18
    2256:	08 1b       	sub	r16, r24
    2258:	0f b6       	in	r0, 0x3f	; 63
    225a:	f8 94       	cli
    225c:	de bf       	out	0x3e, r29	; 62
    225e:	0f be       	out	0x3f, r0	; 63
    2260:	cd bf       	out	0x3d, r28	; 61
    2262:	08 30       	cpi	r16, 0x08	; 8
    2264:	18 f5       	brcc	.+70     	; 0x22ac <_Z12fahradschirmddddm+0x188>
    2266:	10 2f       	mov	r17, r16
    2268:	12 95       	swap	r17
    226a:	10 7f       	andi	r17, 0xF0	; 240
    226c:	4c 01       	movw	r8, r24
    226e:	99 24       	eor	r9, r9
    2270:	e1 e0       	ldi	r30, 0x01	; 1
    2272:	f0 e0       	ldi	r31, 0x00	; 0
    2274:	ec 0f       	add	r30, r28
    2276:	fd 1f       	adc	r31, r29
    2278:	e0 0f       	add	r30, r16
    227a:	f1 1d       	adc	r31, r1
    227c:	e8 0d       	add	r30, r8
    227e:	f9 1d       	adc	r31, r9
    2280:	38 97       	sbiw	r30, 0x08	; 8
    2282:	60 81       	ld	r22, Z
    2284:	6e 32       	cpi	r22, 0x2E	; 46
    2286:	39 f4       	brne	.+14     	; 0x2296 <_Z12fahradschirmddddm+0x172>
    2288:	20 e2       	ldi	r18, 0x20	; 32
    228a:	41 2f       	mov	r20, r17
    228c:	8e e3       	ldi	r24, 0x3E	; 62
    228e:	9c e0       	ldi	r25, 0x0C	; 12
    2290:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2294:	07 c0       	rjmp	.+14     	; 0x22a4 <_Z12fahradschirmddddm+0x180>
    2296:	60 53       	subi	r22, 0x30	; 48
    2298:	28 e1       	ldi	r18, 0x18	; 24
    229a:	41 2f       	mov	r20, r17
    229c:	8e e3       	ldi	r24, 0x3E	; 62
    229e:	9c e0       	ldi	r25, 0x0C	; 12
    22a0:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    22a4:	0f 5f       	subi	r16, 0xFF	; 255
    22a6:	10 5f       	subi	r17, 0xF0	; 240
    22a8:	08 30       	cpi	r16, 0x08	; 8
    22aa:	11 f7       	brne	.-60     	; 0x2270 <_Z12fahradschirmddddm+0x14c>
    22ac:	2b 85       	ldd	r18, Y+11	; 0x0b
    22ae:	3c 85       	ldd	r19, Y+12	; 0x0c
    22b0:	4d 85       	ldd	r20, Y+13	; 0x0d
    22b2:	5e 85       	ldd	r21, Y+14	; 0x0e
    22b4:	67 e2       	ldi	r22, 0x27	; 39
    22b6:	8f e1       	ldi	r24, 0x1F	; 31
    22b8:	23 db       	rcall	.-2490   	; 0x1900 <_Z19anzeige_kleinenadelhhf>
    22ba:	39 89       	ldd	r19, Y+17	; 0x11
    22bc:	3f 93       	push	r19
    22be:	88 89       	ldd	r24, Y+16	; 0x10
    22c0:	8f 93       	push	r24
    22c2:	ff 92       	push	r15
    22c4:	ef 92       	push	r14
    22c6:	8e e4       	ldi	r24, 0x4E	; 78
    22c8:	92 e0       	ldi	r25, 0x02	; 2
    22ca:	9f 93       	push	r25
    22cc:	8f 93       	push	r24
    22ce:	ce 01       	movw	r24, r28
    22d0:	01 96       	adiw	r24, 0x01	; 1
    22d2:	9f 93       	push	r25
    22d4:	8f 93       	push	r24
    22d6:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
    22da:	0f b6       	in	r0, 0x3f	; 63
    22dc:	f8 94       	cli
    22de:	de bf       	out	0x3e, r29	; 62
    22e0:	0f be       	out	0x3f, r0	; 63
    22e2:	cd bf       	out	0x3d, r28	; 61
    22e4:	88 23       	and	r24, r24
    22e6:	e9 f0       	breq	.+58     	; 0x2322 <_Z12fahradschirmddddm+0x1fe>
    22e8:	8e 01       	movw	r16, r28
    22ea:	0f 5f       	subi	r16, 0xFF	; 255
    22ec:	1f 4f       	sbci	r17, 0xFF	; 255
    22ee:	81 50       	subi	r24, 0x01	; 1
    22f0:	e8 2e       	mov	r14, r24
    22f2:	f1 2c       	mov	r15, r1
    22f4:	ff ef       	ldi	r31, 0xFF	; 255
    22f6:	ef 1a       	sub	r14, r31
    22f8:	ff 0a       	sbc	r15, r31
    22fa:	e0 0e       	add	r14, r16
    22fc:	f1 1e       	adc	r15, r17
    22fe:	0f 2e       	mov	r0, r31
    2300:	f6 e4       	ldi	r31, 0x46	; 70
    2302:	df 2e       	mov	r13, r31
    2304:	f0 2d       	mov	r31, r0
    2306:	f8 01       	movw	r30, r16
    2308:	61 91       	ld	r22, Z+
    230a:	8f 01       	movw	r16, r30
    230c:	20 e1       	ldi	r18, 0x10	; 16
    230e:	4d 2d       	mov	r20, r13
    2310:	8e e3       	ldi	r24, 0x3E	; 62
    2312:	9c e0       	ldi	r25, 0x0C	; 12
    2314:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2318:	f6 e0       	ldi	r31, 0x06	; 6
    231a:	df 0e       	add	r13, r31
    231c:	0e 15       	cp	r16, r14
    231e:	1f 05       	cpc	r17, r15
    2320:	91 f7       	brne	.-28     	; 0x2306 <_Z12fahradschirmddddm+0x1e2>
    2322:	2f 92       	push	r2
    2324:	cf 92       	push	r12
    2326:	bf 92       	push	r11
    2328:	af 92       	push	r10
    232a:	84 e5       	ldi	r24, 0x54	; 84
    232c:	92 e0       	ldi	r25, 0x02	; 2
    232e:	9f 93       	push	r25
    2330:	8f 93       	push	r24
    2332:	ce 01       	movw	r24, r28
    2334:	01 96       	adiw	r24, 0x01	; 1
    2336:	9f 93       	push	r25
    2338:	8f 93       	push	r24
    233a:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
    233e:	0f b6       	in	r0, 0x3f	; 63
    2340:	f8 94       	cli
    2342:	de bf       	out	0x3e, r29	; 62
    2344:	0f be       	out	0x3f, r0	; 63
    2346:	cd bf       	out	0x3d, r28	; 61
    2348:	88 23       	and	r24, r24
    234a:	e9 f0       	breq	.+58     	; 0x2386 <_Z12fahradschirmddddm+0x262>
    234c:	8e 01       	movw	r16, r28
    234e:	0f 5f       	subi	r16, 0xFF	; 255
    2350:	1f 4f       	sbci	r17, 0xFF	; 255
    2352:	81 50       	subi	r24, 0x01	; 1
    2354:	c8 2e       	mov	r12, r24
    2356:	d1 2c       	mov	r13, r1
    2358:	3f ef       	ldi	r19, 0xFF	; 255
    235a:	c3 1a       	sub	r12, r19
    235c:	d3 0a       	sbc	r13, r19
    235e:	c0 0e       	add	r12, r16
    2360:	d1 1e       	adc	r13, r17
    2362:	0f 2e       	mov	r0, r31
    2364:	f6 e4       	ldi	r31, 0x46	; 70
    2366:	ff 2e       	mov	r15, r31
    2368:	f0 2d       	mov	r31, r0
    236a:	f8 01       	movw	r30, r16
    236c:	61 91       	ld	r22, Z+
    236e:	8f 01       	movw	r16, r30
    2370:	28 e2       	ldi	r18, 0x28	; 40
    2372:	4f 2d       	mov	r20, r15
    2374:	8e e3       	ldi	r24, 0x3E	; 62
    2376:	9c e0       	ldi	r25, 0x0C	; 12
    2378:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    237c:	f6 e0       	ldi	r31, 0x06	; 6
    237e:	ff 0e       	add	r15, r31
    2380:	0c 15       	cp	r16, r12
    2382:	1d 05       	cpc	r17, r13
    2384:	91 f7       	brne	.-28     	; 0x236a <_Z12fahradschirmddddm+0x246>
    2386:	4f 92       	push	r4
    2388:	5f 92       	push	r5
    238a:	6f 92       	push	r6
    238c:	7f 92       	push	r7
    238e:	8d e5       	ldi	r24, 0x5D	; 93
    2390:	92 e0       	ldi	r25, 0x02	; 2
    2392:	9f 93       	push	r25
    2394:	8f 93       	push	r24
    2396:	ce 01       	movw	r24, r28
    2398:	01 96       	adiw	r24, 0x01	; 1
    239a:	9f 93       	push	r25
    239c:	8f 93       	push	r24
    239e:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
    23a2:	0f b6       	in	r0, 0x3f	; 63
    23a4:	f8 94       	cli
    23a6:	de bf       	out	0x3e, r29	; 62
    23a8:	0f be       	out	0x3f, r0	; 63
    23aa:	cd bf       	out	0x3d, r28	; 61
    23ac:	88 23       	and	r24, r24
    23ae:	e9 f0       	breq	.+58     	; 0x23ea <_Z12fahradschirmddddm+0x2c6>
    23b0:	8e 01       	movw	r16, r28
    23b2:	0f 5f       	subi	r16, 0xFF	; 255
    23b4:	1f 4f       	sbci	r17, 0xFF	; 255
    23b6:	81 50       	subi	r24, 0x01	; 1
    23b8:	c8 2e       	mov	r12, r24
    23ba:	d1 2c       	mov	r13, r1
    23bc:	3f ef       	ldi	r19, 0xFF	; 255
    23be:	c3 1a       	sub	r12, r19
    23c0:	d3 0a       	sbc	r13, r19
    23c2:	c0 0e       	add	r12, r16
    23c4:	d1 1e       	adc	r13, r17
    23c6:	0f 2e       	mov	r0, r31
    23c8:	f6 e4       	ldi	r31, 0x46	; 70
    23ca:	ff 2e       	mov	r15, r31
    23cc:	f0 2d       	mov	r31, r0
    23ce:	f8 01       	movw	r30, r16
    23d0:	61 91       	ld	r22, Z+
    23d2:	8f 01       	movw	r16, r30
    23d4:	20 e3       	ldi	r18, 0x30	; 48
    23d6:	4f 2d       	mov	r20, r15
    23d8:	8e e3       	ldi	r24, 0x3E	; 62
    23da:	9c e0       	ldi	r25, 0x0C	; 12
    23dc:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    23e0:	f6 e0       	ldi	r31, 0x06	; 6
    23e2:	ff 0e       	add	r15, r31
    23e4:	0c 15       	cp	r16, r12
    23e6:	1d 05       	cpc	r17, r13
    23e8:	91 f7       	brne	.-28     	; 0x23ce <_Z12fahradschirmddddm+0x2aa>
    23ea:	61 96       	adiw	r28, 0x11	; 17
    23ec:	0f b6       	in	r0, 0x3f	; 63
    23ee:	f8 94       	cli
    23f0:	de bf       	out	0x3e, r29	; 62
    23f2:	0f be       	out	0x3f, r0	; 63
    23f4:	cd bf       	out	0x3d, r28	; 61
    23f6:	df 91       	pop	r29
    23f8:	cf 91       	pop	r28
    23fa:	1f 91       	pop	r17
    23fc:	0f 91       	pop	r16
    23fe:	ff 90       	pop	r15
    2400:	ef 90       	pop	r14
    2402:	df 90       	pop	r13
    2404:	cf 90       	pop	r12
    2406:	bf 90       	pop	r11
    2408:	af 90       	pop	r10
    240a:	9f 90       	pop	r9
    240c:	8f 90       	pop	r8
    240e:	7f 90       	pop	r7
    2410:	6f 90       	pop	r6
    2412:	5f 90       	pop	r5
    2414:	4f 90       	pop	r4
    2416:	3f 90       	pop	r3
    2418:	2f 90       	pop	r2
    241a:	08 95       	ret

0000241c <_Z14Gaineinstellenv>:
    241c:	cf 92       	push	r12
    241e:	df 92       	push	r13
    2420:	ef 92       	push	r14
    2422:	ff 92       	push	r15
    2424:	1f 93       	push	r17
    2426:	cf 93       	push	r28
    2428:	df 93       	push	r29
    242a:	cd b7       	in	r28, 0x3d	; 61
    242c:	de b7       	in	r29, 0x3e	; 62
    242e:	64 97       	sbiw	r28, 0x14	; 20
    2430:	0f b6       	in	r0, 0x3f	; 63
    2432:	f8 94       	cli
    2434:	de bf       	out	0x3e, r29	; 62
    2436:	0f be       	out	0x3f, r0	; 63
    2438:	cd bf       	out	0x3d, r28	; 61
    243a:	8e e3       	ldi	r24, 0x3E	; 62
    243c:	9c e0       	ldi	r25, 0x0C	; 12
    243e:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    2442:	88 e0       	ldi	r24, 0x08	; 8
    2444:	e2 e6       	ldi	r30, 0x62	; 98
    2446:	f2 e0       	ldi	r31, 0x02	; 2
    2448:	de 01       	movw	r26, r28
    244a:	11 96       	adiw	r26, 0x01	; 1
    244c:	01 90       	ld	r0, Z+
    244e:	0d 92       	st	X+, r0
    2450:	8a 95       	dec	r24
    2452:	e1 f7       	brne	.-8      	; 0x244c <_Z14Gaineinstellenv+0x30>
    2454:	ce 01       	movw	r24, r28
    2456:	01 96       	adiw	r24, 0x01	; 1
    2458:	7c 01       	movw	r14, r24
    245a:	6c 01       	movw	r12, r24
    245c:	10 e0       	ldi	r17, 0x00	; 0
    245e:	f6 01       	movw	r30, r12
    2460:	61 91       	ld	r22, Z+
    2462:	6f 01       	movw	r12, r30
    2464:	20 e0       	ldi	r18, 0x00	; 0
    2466:	41 2f       	mov	r20, r17
    2468:	8e e3       	ldi	r24, 0x3E	; 62
    246a:	9c e0       	ldi	r25, 0x0C	; 12
    246c:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2470:	1a 5f       	subi	r17, 0xFA	; 250
    2472:	1a 32       	cpi	r17, 0x2A	; 42
    2474:	a1 f7       	brne	.-24     	; 0x245e <_Z14Gaineinstellenv+0x42>
    2476:	88 e0       	ldi	r24, 0x08	; 8
    2478:	ea e6       	ldi	r30, 0x6A	; 106
    247a:	f2 e0       	ldi	r31, 0x02	; 2
    247c:	de 01       	movw	r26, r28
    247e:	11 96       	adiw	r26, 0x01	; 1
    2480:	01 90       	ld	r0, Z+
    2482:	0d 92       	st	X+, r0
    2484:	8a 95       	dec	r24
    2486:	e1 f7       	brne	.-8      	; 0x2480 <_Z14Gaineinstellenv+0x64>
    2488:	67 01       	movw	r12, r14
    248a:	10 e0       	ldi	r17, 0x00	; 0
    248c:	f6 01       	movw	r30, r12
    248e:	61 91       	ld	r22, Z+
    2490:	6f 01       	movw	r12, r30
    2492:	28 e0       	ldi	r18, 0x08	; 8
    2494:	41 2f       	mov	r20, r17
    2496:	8e e3       	ldi	r24, 0x3E	; 62
    2498:	9c e0       	ldi	r25, 0x0C	; 12
    249a:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    249e:	1a 5f       	subi	r17, 0xFA	; 250
    24a0:	1a 32       	cpi	r17, 0x2A	; 42
    24a2:	a1 f7       	brne	.-24     	; 0x248c <_Z14Gaineinstellenv+0x70>
    24a4:	88 e0       	ldi	r24, 0x08	; 8
    24a6:	e2 e7       	ldi	r30, 0x72	; 114
    24a8:	f2 e0       	ldi	r31, 0x02	; 2
    24aa:	de 01       	movw	r26, r28
    24ac:	11 96       	adiw	r26, 0x01	; 1
    24ae:	01 90       	ld	r0, Z+
    24b0:	0d 92       	st	X+, r0
    24b2:	8a 95       	dec	r24
    24b4:	e1 f7       	brne	.-8      	; 0x24ae <_Z14Gaineinstellenv+0x92>
    24b6:	67 01       	movw	r12, r14
    24b8:	10 e0       	ldi	r17, 0x00	; 0
    24ba:	f6 01       	movw	r30, r12
    24bc:	61 91       	ld	r22, Z+
    24be:	6f 01       	movw	r12, r30
    24c0:	20 e1       	ldi	r18, 0x10	; 16
    24c2:	41 2f       	mov	r20, r17
    24c4:	8e e3       	ldi	r24, 0x3E	; 62
    24c6:	9c e0       	ldi	r25, 0x0C	; 12
    24c8:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    24cc:	1a 5f       	subi	r17, 0xFA	; 250
    24ce:	1a 32       	cpi	r17, 0x2A	; 42
    24d0:	a1 f7       	brne	.-24     	; 0x24ba <_Z14Gaineinstellenv+0x9e>
    24d2:	88 e0       	ldi	r24, 0x08	; 8
    24d4:	ea e7       	ldi	r30, 0x7A	; 122
    24d6:	f2 e0       	ldi	r31, 0x02	; 2
    24d8:	de 01       	movw	r26, r28
    24da:	11 96       	adiw	r26, 0x01	; 1
    24dc:	01 90       	ld	r0, Z+
    24de:	0d 92       	st	X+, r0
    24e0:	8a 95       	dec	r24
    24e2:	e1 f7       	brne	.-8      	; 0x24dc <_Z14Gaineinstellenv+0xc0>
    24e4:	67 01       	movw	r12, r14
    24e6:	10 e0       	ldi	r17, 0x00	; 0
    24e8:	f6 01       	movw	r30, r12
    24ea:	61 91       	ld	r22, Z+
    24ec:	6f 01       	movw	r12, r30
    24ee:	28 e1       	ldi	r18, 0x18	; 24
    24f0:	41 2f       	mov	r20, r17
    24f2:	8e e3       	ldi	r24, 0x3E	; 62
    24f4:	9c e0       	ldi	r25, 0x0C	; 12
    24f6:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    24fa:	1a 5f       	subi	r17, 0xFA	; 250
    24fc:	1a 32       	cpi	r17, 0x2A	; 42
    24fe:	a1 f7       	brne	.-24     	; 0x24e8 <_Z14Gaineinstellenv+0xcc>
    2500:	88 e0       	ldi	r24, 0x08	; 8
    2502:	e2 e8       	ldi	r30, 0x82	; 130
    2504:	f2 e0       	ldi	r31, 0x02	; 2
    2506:	de 01       	movw	r26, r28
    2508:	11 96       	adiw	r26, 0x01	; 1
    250a:	01 90       	ld	r0, Z+
    250c:	0d 92       	st	X+, r0
    250e:	8a 95       	dec	r24
    2510:	e1 f7       	brne	.-8      	; 0x250a <_Z14Gaineinstellenv+0xee>
    2512:	67 01       	movw	r12, r14
    2514:	10 e0       	ldi	r17, 0x00	; 0
    2516:	f6 01       	movw	r30, r12
    2518:	61 91       	ld	r22, Z+
    251a:	6f 01       	movw	r12, r30
    251c:	20 e2       	ldi	r18, 0x20	; 32
    251e:	41 2f       	mov	r20, r17
    2520:	8e e3       	ldi	r24, 0x3E	; 62
    2522:	9c e0       	ldi	r25, 0x0C	; 12
    2524:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2528:	1a 5f       	subi	r17, 0xFA	; 250
    252a:	1a 32       	cpi	r17, 0x2A	; 42
    252c:	a1 f7       	brne	.-24     	; 0x2516 <_Z14Gaineinstellenv+0xfa>
    252e:	88 e0       	ldi	r24, 0x08	; 8
    2530:	ea e8       	ldi	r30, 0x8A	; 138
    2532:	f2 e0       	ldi	r31, 0x02	; 2
    2534:	de 01       	movw	r26, r28
    2536:	11 96       	adiw	r26, 0x01	; 1
    2538:	01 90       	ld	r0, Z+
    253a:	0d 92       	st	X+, r0
    253c:	8a 95       	dec	r24
    253e:	e1 f7       	brne	.-8      	; 0x2538 <_Z14Gaineinstellenv+0x11c>
    2540:	67 01       	movw	r12, r14
    2542:	10 e0       	ldi	r17, 0x00	; 0
    2544:	f6 01       	movw	r30, r12
    2546:	61 91       	ld	r22, Z+
    2548:	6f 01       	movw	r12, r30
    254a:	28 e2       	ldi	r18, 0x28	; 40
    254c:	41 2f       	mov	r20, r17
    254e:	8e e3       	ldi	r24, 0x3E	; 62
    2550:	9c e0       	ldi	r25, 0x0C	; 12
    2552:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2556:	1a 5f       	subi	r17, 0xFA	; 250
    2558:	1a 32       	cpi	r17, 0x2A	; 42
    255a:	a1 f7       	brne	.-24     	; 0x2544 <_Z14Gaineinstellenv+0x128>
    255c:	88 e0       	ldi	r24, 0x08	; 8
    255e:	e2 e9       	ldi	r30, 0x92	; 146
    2560:	f2 e0       	ldi	r31, 0x02	; 2
    2562:	de 01       	movw	r26, r28
    2564:	11 96       	adiw	r26, 0x01	; 1
    2566:	01 90       	ld	r0, Z+
    2568:	0d 92       	st	X+, r0
    256a:	8a 95       	dec	r24
    256c:	e1 f7       	brne	.-8      	; 0x2566 <_Z14Gaineinstellenv+0x14a>
    256e:	67 01       	movw	r12, r14
    2570:	10 e0       	ldi	r17, 0x00	; 0
    2572:	f6 01       	movw	r30, r12
    2574:	61 91       	ld	r22, Z+
    2576:	6f 01       	movw	r12, r30
    2578:	20 e3       	ldi	r18, 0x30	; 48
    257a:	41 2f       	mov	r20, r17
    257c:	8e e3       	ldi	r24, 0x3E	; 62
    257e:	9c e0       	ldi	r25, 0x0C	; 12
    2580:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2584:	1a 5f       	subi	r17, 0xFA	; 250
    2586:	1a 32       	cpi	r17, 0x2A	; 42
    2588:	a1 f7       	brne	.-24     	; 0x2572 <_Z14Gaineinstellenv+0x156>
    258a:	88 e0       	ldi	r24, 0x08	; 8
    258c:	ea e9       	ldi	r30, 0x9A	; 154
    258e:	f2 e0       	ldi	r31, 0x02	; 2
    2590:	de 01       	movw	r26, r28
    2592:	11 96       	adiw	r26, 0x01	; 1
    2594:	01 90       	ld	r0, Z+
    2596:	0d 92       	st	X+, r0
    2598:	8a 95       	dec	r24
    259a:	e1 f7       	brne	.-8      	; 0x2594 <_Z14Gaineinstellenv+0x178>
    259c:	10 e0       	ldi	r17, 0x00	; 0
    259e:	f7 01       	movw	r30, r14
    25a0:	61 91       	ld	r22, Z+
    25a2:	7f 01       	movw	r14, r30
    25a4:	28 e3       	ldi	r18, 0x38	; 56
    25a6:	41 2f       	mov	r20, r17
    25a8:	8e e3       	ldi	r24, 0x3E	; 62
    25aa:	9c e0       	ldi	r25, 0x0C	; 12
    25ac:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    25b0:	1a 5f       	subi	r17, 0xFA	; 250
    25b2:	1a 32       	cpi	r17, 0x2A	; 42
    25b4:	a1 f7       	brne	.-24     	; 0x259e <_Z14Gaineinstellenv+0x182>
    25b6:	64 96       	adiw	r28, 0x14	; 20
    25b8:	0f b6       	in	r0, 0x3f	; 63
    25ba:	f8 94       	cli
    25bc:	de bf       	out	0x3e, r29	; 62
    25be:	0f be       	out	0x3f, r0	; 63
    25c0:	cd bf       	out	0x3d, r28	; 61
    25c2:	df 91       	pop	r29
    25c4:	cf 91       	pop	r28
    25c6:	1f 91       	pop	r17
    25c8:	ff 90       	pop	r15
    25ca:	ef 90       	pop	r14
    25cc:	df 90       	pop	r13
    25ce:	cf 90       	pop	r12
    25d0:	08 95       	ret

000025d2 <_Z15anzeige_kompassd>:
    25d2:	9f 92       	push	r9
    25d4:	af 92       	push	r10
    25d6:	bf 92       	push	r11
    25d8:	cf 92       	push	r12
    25da:	df 92       	push	r13
    25dc:	ef 92       	push	r14
    25de:	ff 92       	push	r15
    25e0:	0f 93       	push	r16
    25e2:	1f 93       	push	r17
    25e4:	cf 93       	push	r28
    25e6:	df 93       	push	r29
    25e8:	cd b7       	in	r28, 0x3d	; 61
    25ea:	de b7       	in	r29, 0x3e	; 62
    25ec:	64 97       	sbiw	r28, 0x14	; 20
    25ee:	0f b6       	in	r0, 0x3f	; 63
    25f0:	f8 94       	cli
    25f2:	de bf       	out	0x3e, r29	; 62
    25f4:	0f be       	out	0x3f, r0	; 63
    25f6:	cd bf       	out	0x3d, r28	; 61
    25f8:	96 2e       	mov	r9, r22
    25fa:	a7 2e       	mov	r10, r23
    25fc:	b8 2e       	mov	r11, r24
    25fe:	e9 2e       	mov	r14, r25
    2600:	8e e3       	ldi	r24, 0x3E	; 62
    2602:	9c e0       	ldi	r25, 0x0C	; 12
    2604:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    2608:	0f 2e       	mov	r0, r31
    260a:	ff e3       	ldi	r31, 0x3F	; 63
    260c:	cf 2e       	mov	r12, r31
    260e:	f0 e1       	ldi	r31, 0x10	; 16
    2610:	df 2e       	mov	r13, r31
    2612:	f0 2d       	mov	r31, r0
    2614:	11 e4       	ldi	r17, 0x41	; 65
    2616:	f6 01       	movw	r30, r12
    2618:	61 91       	ld	r22, Z+
    261a:	6f 01       	movw	r12, r30
    261c:	20 e0       	ldi	r18, 0x00	; 0
    261e:	41 2f       	mov	r20, r17
    2620:	8e e3       	ldi	r24, 0x3E	; 62
    2622:	9c e0       	ldi	r25, 0x0C	; 12
    2624:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2628:	1a 5f       	subi	r17, 0xFA	; 250
    262a:	11 37       	cpi	r17, 0x71	; 113
    262c:	a1 f7       	brne	.-24     	; 0x2616 <_Z15anzeige_kompassd+0x44>
    262e:	0f 2e       	mov	r0, r31
    2630:	f7 e4       	ldi	r31, 0x47	; 71
    2632:	cf 2e       	mov	r12, r31
    2634:	f0 e1       	ldi	r31, 0x10	; 16
    2636:	df 2e       	mov	r13, r31
    2638:	f0 2d       	mov	r31, r0
    263a:	11 e4       	ldi	r17, 0x41	; 65
    263c:	f6 01       	movw	r30, r12
    263e:	61 91       	ld	r22, Z+
    2640:	6f 01       	movw	r12, r30
    2642:	28 e3       	ldi	r18, 0x38	; 56
    2644:	41 2f       	mov	r20, r17
    2646:	8e e3       	ldi	r24, 0x3E	; 62
    2648:	9c e0       	ldi	r25, 0x0C	; 12
    264a:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    264e:	1a 5f       	subi	r17, 0xFA	; 250
    2650:	11 37       	cpi	r17, 0x71	; 113
    2652:	a1 f7       	brne	.-24     	; 0x263c <_Z15anzeige_kompassd+0x6a>
    2654:	ef 92       	push	r14
    2656:	bf 92       	push	r11
    2658:	af 92       	push	r10
    265a:	9f 92       	push	r9
    265c:	82 ea       	ldi	r24, 0xA2	; 162
    265e:	92 e0       	ldi	r25, 0x02	; 2
    2660:	9f 93       	push	r25
    2662:	8f 93       	push	r24
    2664:	ce 01       	movw	r24, r28
    2666:	01 96       	adiw	r24, 0x01	; 1
    2668:	9f 93       	push	r25
    266a:	8f 93       	push	r24
    266c:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
    2670:	0f b6       	in	r0, 0x3f	; 63
    2672:	f8 94       	cli
    2674:	de bf       	out	0x3e, r29	; 62
    2676:	0f be       	out	0x3f, r0	; 63
    2678:	cd bf       	out	0x3d, r28	; 61
    267a:	88 23       	and	r24, r24
    267c:	e9 f0       	breq	.+58     	; 0x26b8 <_Z15anzeige_kompassd+0xe6>
    267e:	8e 01       	movw	r16, r28
    2680:	0f 5f       	subi	r16, 0xFF	; 255
    2682:	1f 4f       	sbci	r17, 0xFF	; 255
    2684:	81 50       	subi	r24, 0x01	; 1
    2686:	c8 2e       	mov	r12, r24
    2688:	d1 2c       	mov	r13, r1
    268a:	3f ef       	ldi	r19, 0xFF	; 255
    268c:	c3 1a       	sub	r12, r19
    268e:	d3 0a       	sbc	r13, r19
    2690:	c0 0e       	add	r12, r16
    2692:	d1 1e       	adc	r13, r17
    2694:	0f 2e       	mov	r0, r31
    2696:	f1 e4       	ldi	r31, 0x41	; 65
    2698:	ff 2e       	mov	r15, r31
    269a:	f0 2d       	mov	r31, r0
    269c:	f8 01       	movw	r30, r16
    269e:	61 91       	ld	r22, Z+
    26a0:	8f 01       	movw	r16, r30
    26a2:	20 e3       	ldi	r18, 0x30	; 48
    26a4:	4f 2d       	mov	r20, r15
    26a6:	8e e3       	ldi	r24, 0x3E	; 62
    26a8:	9c e0       	ldi	r25, 0x0C	; 12
    26aa:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    26ae:	f6 e0       	ldi	r31, 0x06	; 6
    26b0:	ff 0e       	add	r15, r31
    26b2:	0c 15       	cp	r16, r12
    26b4:	1d 05       	cpc	r17, r13
    26b6:	91 f7       	brne	.-28     	; 0x269c <_Z15anzeige_kompassd+0xca>
    26b8:	29 2d       	mov	r18, r9
    26ba:	3a 2d       	mov	r19, r10
    26bc:	4b 2d       	mov	r20, r11
    26be:	5e 2d       	mov	r21, r14
    26c0:	6f e1       	ldi	r22, 0x1F	; 31
    26c2:	8f e1       	ldi	r24, 0x1F	; 31
    26c4:	00 d9       	rcall	.-3584   	; 0x18c6 <_Z13anzeige_nadelhhf>
    26c6:	23 e0       	ldi	r18, 0x03	; 3
    26c8:	40 e5       	ldi	r20, 0x50	; 80
    26ca:	69 2d       	mov	r22, r9
    26cc:	7a 2d       	mov	r23, r10
    26ce:	8b 2d       	mov	r24, r11
    26d0:	9e 2d       	mov	r25, r14
    26d2:	21 d8       	rcall	.-4030   	; 0x1716 <_Z16anzeige_richtungfhh>
    26d4:	64 96       	adiw	r28, 0x14	; 20
    26d6:	0f b6       	in	r0, 0x3f	; 63
    26d8:	f8 94       	cli
    26da:	de bf       	out	0x3e, r29	; 62
    26dc:	0f be       	out	0x3f, r0	; 63
    26de:	cd bf       	out	0x3d, r28	; 61
    26e0:	df 91       	pop	r29
    26e2:	cf 91       	pop	r28
    26e4:	1f 91       	pop	r17
    26e6:	0f 91       	pop	r16
    26e8:	ff 90       	pop	r15
    26ea:	ef 90       	pop	r14
    26ec:	df 90       	pop	r13
    26ee:	cf 90       	pop	r12
    26f0:	bf 90       	pop	r11
    26f2:	af 90       	pop	r10
    26f4:	9f 90       	pop	r9
    26f6:	08 95       	ret

000026f8 <_Z10timerseitev>:
    26f8:	cf 92       	push	r12
    26fa:	df 92       	push	r13
    26fc:	ef 92       	push	r14
    26fe:	ff 92       	push	r15
    2700:	0f 93       	push	r16
    2702:	1f 93       	push	r17
    2704:	cf 93       	push	r28
    2706:	df 93       	push	r29
    2708:	cd b7       	in	r28, 0x3d	; 61
    270a:	de b7       	in	r29, 0x3e	; 62
    270c:	64 97       	sbiw	r28, 0x14	; 20
    270e:	0f b6       	in	r0, 0x3f	; 63
    2710:	f8 94       	cli
    2712:	de bf       	out	0x3e, r29	; 62
    2714:	0f be       	out	0x3f, r0	; 63
    2716:	cd bf       	out	0x3d, r28	; 61
    2718:	8e e3       	ldi	r24, 0x3E	; 62
    271a:	9c e0       	ldi	r25, 0x0C	; 12
    271c:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    2720:	88 e0       	ldi	r24, 0x08	; 8
    2722:	ed ea       	ldi	r30, 0xAD	; 173
    2724:	f2 e0       	ldi	r31, 0x02	; 2
    2726:	de 01       	movw	r26, r28
    2728:	11 96       	adiw	r26, 0x01	; 1
    272a:	01 90       	ld	r0, Z+
    272c:	0d 92       	st	X+, r0
    272e:	8a 95       	dec	r24
    2730:	e1 f7       	brne	.-8      	; 0x272a <_Z10timerseitev+0x32>
    2732:	ce 01       	movw	r24, r28
    2734:	01 96       	adiw	r24, 0x01	; 1
    2736:	6c 01       	movw	r12, r24
    2738:	7c 01       	movw	r14, r24
    273a:	10 e0       	ldi	r17, 0x00	; 0
    273c:	f7 01       	movw	r30, r14
    273e:	61 91       	ld	r22, Z+
    2740:	7f 01       	movw	r14, r30
    2742:	20 e0       	ldi	r18, 0x00	; 0
    2744:	41 2f       	mov	r20, r17
    2746:	8e e3       	ldi	r24, 0x3E	; 62
    2748:	9c e0       	ldi	r25, 0x0C	; 12
    274a:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    274e:	1a 5f       	subi	r17, 0xFA	; 250
    2750:	1a 32       	cpi	r17, 0x2A	; 42
    2752:	a1 f7       	brne	.-24     	; 0x273c <_Z10timerseitev+0x44>
    2754:	60 91 37 03 	lds	r22, 0x0337
    2758:	66 23       	and	r22, r22
    275a:	39 f0       	breq	.+14     	; 0x276a <_Z10timerseitev+0x72>
    275c:	60 5d       	subi	r22, 0xD0	; 208
    275e:	20 e0       	ldi	r18, 0x00	; 0
    2760:	4a e2       	ldi	r20, 0x2A	; 42
    2762:	8e e3       	ldi	r24, 0x3E	; 62
    2764:	9c e0       	ldi	r25, 0x0C	; 12
    2766:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    276a:	e0 90 5a 10 	lds	r14, 0x105A
    276e:	f0 90 5b 10 	lds	r15, 0x105B
    2772:	00 e1       	ldi	r16, 0x10	; 16
    2774:	1e e0       	ldi	r17, 0x0E	; 14
    2776:	c7 01       	movw	r24, r14
    2778:	b8 01       	movw	r22, r16
    277a:	0e 94 6e 37 	call	0x6edc	; 0x6edc <__udivmodhi4>
    277e:	ab 01       	movw	r20, r22
    2780:	9c 01       	movw	r18, r24
    2782:	a9 e8       	ldi	r26, 0x89	; 137
    2784:	b8 e8       	ldi	r27, 0x88	; 136
    2786:	0e 94 c6 37 	call	0x6f8c	; 0x6f8c <__umulhisi3>
    278a:	fc 01       	movw	r30, r24
    278c:	f6 95       	lsr	r31
    278e:	e7 95       	ror	r30
    2790:	f2 95       	swap	r31
    2792:	e2 95       	swap	r30
    2794:	ef 70       	andi	r30, 0x0F	; 15
    2796:	ef 27       	eor	r30, r31
    2798:	ff 70       	andi	r31, 0x0F	; 15
    279a:	ef 27       	eor	r30, r31
    279c:	97 01       	movw	r18, r14
    279e:	0e 94 c6 37 	call	0x6f8c	; 0x6f8c <__umulhisi3>
    27a2:	96 95       	lsr	r25
    27a4:	87 95       	ror	r24
    27a6:	92 95       	swap	r25
    27a8:	82 95       	swap	r24
    27aa:	8f 70       	andi	r24, 0x0F	; 15
    27ac:	89 27       	eor	r24, r25
    27ae:	9f 70       	andi	r25, 0x0F	; 15
    27b0:	89 27       	eor	r24, r25
    27b2:	6c e3       	ldi	r22, 0x3C	; 60
    27b4:	68 9f       	mul	r22, r24
    27b6:	90 01       	movw	r18, r0
    27b8:	69 9f       	mul	r22, r25
    27ba:	30 0d       	add	r19, r0
    27bc:	11 24       	eor	r1, r1
    27be:	c7 01       	movw	r24, r14
    27c0:	82 1b       	sub	r24, r18
    27c2:	93 0b       	sbc	r25, r19
    27c4:	9c 01       	movw	r18, r24
    27c6:	ca 01       	movw	r24, r20
    27c8:	99 27       	eor	r25, r25
    27ca:	91 95       	neg	r25
    27cc:	81 95       	neg	r24
    27ce:	91 09       	sbc	r25, r1
    27d0:	b8 01       	movw	r22, r16
    27d2:	0e 94 82 37 	call	0x6f04	; 0x6f04 <__divmodhi4>
    27d6:	cb 01       	movw	r24, r22
    27d8:	6a e0       	ldi	r22, 0x0A	; 10
    27da:	70 e0       	ldi	r23, 0x00	; 0
    27dc:	0e 94 82 37 	call	0x6f04	; 0x6f04 <__divmodhi4>
    27e0:	69 83       	std	Y+1, r22	; 0x01
    27e2:	9d ec       	ldi	r25, 0xCD	; 205
    27e4:	49 9f       	mul	r20, r25
    27e6:	31 2d       	mov	r19, r1
    27e8:	11 24       	eor	r1, r1
    27ea:	36 95       	lsr	r19
    27ec:	36 95       	lsr	r19
    27ee:	36 95       	lsr	r19
    27f0:	33 0f       	add	r19, r19
    27f2:	83 2f       	mov	r24, r19
    27f4:	88 0f       	add	r24, r24
    27f6:	88 0f       	add	r24, r24
    27f8:	38 0f       	add	r19, r24
    27fa:	43 1b       	sub	r20, r19
    27fc:	4a 83       	std	Y+2, r20	; 0x02
    27fe:	4a e3       	ldi	r20, 0x3A	; 58
    2800:	4b 83       	std	Y+3, r20	; 0x03
    2802:	e9 9f       	mul	r30, r25
    2804:	31 2d       	mov	r19, r1
    2806:	11 24       	eor	r1, r1
    2808:	36 95       	lsr	r19
    280a:	36 95       	lsr	r19
    280c:	36 95       	lsr	r19
    280e:	3c 83       	std	Y+4, r19	; 0x04
    2810:	33 0f       	add	r19, r19
    2812:	83 2f       	mov	r24, r19
    2814:	88 0f       	add	r24, r24
    2816:	88 0f       	add	r24, r24
    2818:	38 0f       	add	r19, r24
    281a:	e3 1b       	sub	r30, r19
    281c:	ed 83       	std	Y+5, r30	; 0x05
    281e:	4e 83       	std	Y+6, r20	; 0x06
    2820:	29 9f       	mul	r18, r25
    2822:	91 2d       	mov	r25, r1
    2824:	11 24       	eor	r1, r1
    2826:	96 95       	lsr	r25
    2828:	96 95       	lsr	r25
    282a:	96 95       	lsr	r25
    282c:	9f 83       	std	Y+7, r25	; 0x07
    282e:	99 0f       	add	r25, r25
    2830:	89 2f       	mov	r24, r25
    2832:	88 0f       	add	r24, r24
    2834:	88 0f       	add	r24, r24
    2836:	98 0f       	add	r25, r24
    2838:	29 1b       	sub	r18, r25
    283a:	28 87       	std	Y+8, r18	; 0x08
    283c:	10 e0       	ldi	r17, 0x00	; 0
    283e:	f6 01       	movw	r30, r12
    2840:	61 91       	ld	r22, Z+
    2842:	6f 01       	movw	r12, r30
    2844:	6a 33       	cpi	r22, 0x3A	; 58
    2846:	39 f4       	brne	.+14     	; 0x2856 <_Z10timerseitev+0x15e>
    2848:	24 e1       	ldi	r18, 0x14	; 20
    284a:	41 2f       	mov	r20, r17
    284c:	8e e3       	ldi	r24, 0x3E	; 62
    284e:	9c e0       	ldi	r25, 0x0C	; 12
    2850:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2854:	06 c0       	rjmp	.+12     	; 0x2862 <_Z10timerseitev+0x16a>
    2856:	20 e1       	ldi	r18, 0x10	; 16
    2858:	41 2f       	mov	r20, r17
    285a:	8e e3       	ldi	r24, 0x3E	; 62
    285c:	9c e0       	ldi	r25, 0x0C	; 12
    285e:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    2862:	10 5f       	subi	r17, 0xF0	; 240
    2864:	10 38       	cpi	r17, 0x80	; 128
    2866:	59 f7       	brne	.-42     	; 0x283e <_Z10timerseitev+0x146>
    2868:	64 96       	adiw	r28, 0x14	; 20
    286a:	0f b6       	in	r0, 0x3f	; 63
    286c:	f8 94       	cli
    286e:	de bf       	out	0x3e, r29	; 62
    2870:	0f be       	out	0x3f, r0	; 63
    2872:	cd bf       	out	0x3d, r28	; 61
    2874:	df 91       	pop	r29
    2876:	cf 91       	pop	r28
    2878:	1f 91       	pop	r17
    287a:	0f 91       	pop	r16
    287c:	ff 90       	pop	r15
    287e:	ef 90       	pop	r14
    2880:	df 90       	pop	r13
    2882:	cf 90       	pop	r12
    2884:	08 95       	ret

00002886 <_Z13Stoppuhrseitev>:
    2886:	cf 92       	push	r12
    2888:	df 92       	push	r13
    288a:	ef 92       	push	r14
    288c:	ff 92       	push	r15
    288e:	0f 93       	push	r16
    2890:	1f 93       	push	r17
    2892:	cf 93       	push	r28
    2894:	df 93       	push	r29
    2896:	cd b7       	in	r28, 0x3d	; 61
    2898:	de b7       	in	r29, 0x3e	; 62
    289a:	64 97       	sbiw	r28, 0x14	; 20
    289c:	0f b6       	in	r0, 0x3f	; 63
    289e:	f8 94       	cli
    28a0:	de bf       	out	0x3e, r29	; 62
    28a2:	0f be       	out	0x3f, r0	; 63
    28a4:	cd bf       	out	0x3d, r28	; 61
    28a6:	8e e3       	ldi	r24, 0x3E	; 62
    28a8:	9c e0       	ldi	r25, 0x0C	; 12
    28aa:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
    28ae:	8b e0       	ldi	r24, 0x0B	; 11
    28b0:	e5 eb       	ldi	r30, 0xB5	; 181
    28b2:	f2 e0       	ldi	r31, 0x02	; 2
    28b4:	de 01       	movw	r26, r28
    28b6:	11 96       	adiw	r26, 0x01	; 1
    28b8:	01 90       	ld	r0, Z+
    28ba:	0d 92       	st	X+, r0
    28bc:	8a 95       	dec	r24
    28be:	e1 f7       	brne	.-8      	; 0x28b8 <_Z13Stoppuhrseitev+0x32>
    28c0:	ce 01       	movw	r24, r28
    28c2:	01 96       	adiw	r24, 0x01	; 1
    28c4:	6c 01       	movw	r12, r24
    28c6:	7c 01       	movw	r14, r24
    28c8:	10 e0       	ldi	r17, 0x00	; 0
    28ca:	f7 01       	movw	r30, r14
    28cc:	61 91       	ld	r22, Z+
    28ce:	7f 01       	movw	r14, r30
    28d0:	20 e0       	ldi	r18, 0x00	; 0
    28d2:	41 2f       	mov	r20, r17
    28d4:	8e e3       	ldi	r24, 0x3E	; 62
    28d6:	9c e0       	ldi	r25, 0x0C	; 12
    28d8:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    28dc:	1a 5f       	subi	r17, 0xFA	; 250
    28de:	1c 33       	cpi	r17, 0x3C	; 60
    28e0:	a1 f7       	brne	.-24     	; 0x28ca <_Z13Stoppuhrseitev+0x44>
    28e2:	e0 90 5c 10 	lds	r14, 0x105C
    28e6:	f0 90 5d 10 	lds	r15, 0x105D
    28ea:	00 e1       	ldi	r16, 0x10	; 16
    28ec:	1e e0       	ldi	r17, 0x0E	; 14
    28ee:	c7 01       	movw	r24, r14
    28f0:	b8 01       	movw	r22, r16
    28f2:	0e 94 6e 37 	call	0x6edc	; 0x6edc <__udivmodhi4>
    28f6:	ab 01       	movw	r20, r22
    28f8:	9c 01       	movw	r18, r24
    28fa:	a9 e8       	ldi	r26, 0x89	; 137
    28fc:	b8 e8       	ldi	r27, 0x88	; 136
    28fe:	0e 94 c6 37 	call	0x6f8c	; 0x6f8c <__umulhisi3>
    2902:	fc 01       	movw	r30, r24
    2904:	f6 95       	lsr	r31
    2906:	e7 95       	ror	r30
    2908:	f2 95       	swap	r31
    290a:	e2 95       	swap	r30
    290c:	ef 70       	andi	r30, 0x0F	; 15
    290e:	ef 27       	eor	r30, r31
    2910:	ff 70       	andi	r31, 0x0F	; 15
    2912:	ef 27       	eor	r30, r31
    2914:	97 01       	movw	r18, r14
    2916:	0e 94 c6 37 	call	0x6f8c	; 0x6f8c <__umulhisi3>
    291a:	96 95       	lsr	r25
    291c:	87 95       	ror	r24
    291e:	92 95       	swap	r25
    2920:	82 95       	swap	r24
    2922:	8f 70       	andi	r24, 0x0F	; 15
    2924:	89 27       	eor	r24, r25
    2926:	9f 70       	andi	r25, 0x0F	; 15
    2928:	89 27       	eor	r24, r25
    292a:	6c e3       	ldi	r22, 0x3C	; 60
    292c:	68 9f       	mul	r22, r24
    292e:	90 01       	movw	r18, r0
    2930:	69 9f       	mul	r22, r25
    2932:	30 0d       	add	r19, r0
    2934:	11 24       	eor	r1, r1
    2936:	c7 01       	movw	r24, r14
    2938:	82 1b       	sub	r24, r18
    293a:	93 0b       	sbc	r25, r19
    293c:	9c 01       	movw	r18, r24
    293e:	ca 01       	movw	r24, r20
    2940:	99 27       	eor	r25, r25
    2942:	91 95       	neg	r25
    2944:	81 95       	neg	r24
    2946:	91 09       	sbc	r25, r1
    2948:	b8 01       	movw	r22, r16
    294a:	0e 94 82 37 	call	0x6f04	; 0x6f04 <__divmodhi4>
    294e:	cb 01       	movw	r24, r22
    2950:	6a e0       	ldi	r22, 0x0A	; 10
    2952:	70 e0       	ldi	r23, 0x00	; 0
    2954:	0e 94 82 37 	call	0x6f04	; 0x6f04 <__divmodhi4>
    2958:	69 83       	std	Y+1, r22	; 0x01
    295a:	9d ec       	ldi	r25, 0xCD	; 205
    295c:	49 9f       	mul	r20, r25
    295e:	31 2d       	mov	r19, r1
    2960:	11 24       	eor	r1, r1
    2962:	36 95       	lsr	r19
    2964:	36 95       	lsr	r19
    2966:	36 95       	lsr	r19
    2968:	33 0f       	add	r19, r19
    296a:	83 2f       	mov	r24, r19
    296c:	88 0f       	add	r24, r24
    296e:	88 0f       	add	r24, r24
    2970:	38 0f       	add	r19, r24
    2972:	43 1b       	sub	r20, r19
    2974:	4a 83       	std	Y+2, r20	; 0x02
    2976:	4a e3       	ldi	r20, 0x3A	; 58
    2978:	4b 83       	std	Y+3, r20	; 0x03
    297a:	e9 9f       	mul	r30, r25
    297c:	31 2d       	mov	r19, r1
    297e:	11 24       	eor	r1, r1
    2980:	36 95       	lsr	r19
    2982:	36 95       	lsr	r19
    2984:	36 95       	lsr	r19
    2986:	3c 83       	std	Y+4, r19	; 0x04
    2988:	33 0f       	add	r19, r19
    298a:	83 2f       	mov	r24, r19
    298c:	88 0f       	add	r24, r24
    298e:	88 0f       	add	r24, r24
    2990:	38 0f       	add	r19, r24
    2992:	e3 1b       	sub	r30, r19
    2994:	ed 83       	std	Y+5, r30	; 0x05
    2996:	4e 83       	std	Y+6, r20	; 0x06
    2998:	29 9f       	mul	r18, r25
    299a:	91 2d       	mov	r25, r1
    299c:	11 24       	eor	r1, r1
    299e:	96 95       	lsr	r25
    29a0:	96 95       	lsr	r25
    29a2:	96 95       	lsr	r25
    29a4:	9f 83       	std	Y+7, r25	; 0x07
    29a6:	99 0f       	add	r25, r25
    29a8:	89 2f       	mov	r24, r25
    29aa:	88 0f       	add	r24, r24
    29ac:	88 0f       	add	r24, r24
    29ae:	98 0f       	add	r25, r24
    29b0:	29 1b       	sub	r18, r25
    29b2:	28 87       	std	Y+8, r18	; 0x08
    29b4:	10 e0       	ldi	r17, 0x00	; 0
    29b6:	f6 01       	movw	r30, r12
    29b8:	61 91       	ld	r22, Z+
    29ba:	6f 01       	movw	r12, r30
    29bc:	6a 33       	cpi	r22, 0x3A	; 58
    29be:	39 f4       	brne	.+14     	; 0x29ce <_Z13Stoppuhrseitev+0x148>
    29c0:	24 e1       	ldi	r18, 0x14	; 20
    29c2:	41 2f       	mov	r20, r17
    29c4:	8e e3       	ldi	r24, 0x3E	; 62
    29c6:	9c e0       	ldi	r25, 0x0C	; 12
    29c8:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    29cc:	06 c0       	rjmp	.+12     	; 0x29da <_Z13Stoppuhrseitev+0x154>
    29ce:	20 e1       	ldi	r18, 0x10	; 16
    29d0:	41 2f       	mov	r20, r17
    29d2:	8e e3       	ldi	r24, 0x3E	; 62
    29d4:	9c e0       	ldi	r25, 0x0C	; 12
    29d6:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    29da:	10 5f       	subi	r17, 0xF0	; 240
    29dc:	10 38       	cpi	r17, 0x80	; 128
    29de:	59 f7       	brne	.-42     	; 0x29b6 <_Z13Stoppuhrseitev+0x130>
    29e0:	64 96       	adiw	r28, 0x14	; 20
    29e2:	0f b6       	in	r0, 0x3f	; 63
    29e4:	f8 94       	cli
    29e6:	de bf       	out	0x3e, r29	; 62
    29e8:	0f be       	out	0x3f, r0	; 63
    29ea:	cd bf       	out	0x3d, r28	; 61
    29ec:	df 91       	pop	r29
    29ee:	cf 91       	pop	r28
    29f0:	1f 91       	pop	r17
    29f2:	0f 91       	pop	r16
    29f4:	ff 90       	pop	r15
    29f6:	ef 90       	pop	r14
    29f8:	df 90       	pop	r13
    29fa:	cf 90       	pop	r12
    29fc:	08 95       	ret

000029fe <_Z11Wanderseitev>:

void Wanderseite(){
    29fe:	7f 92       	push	r7
    2a00:	8f 92       	push	r8
    2a02:	9f 92       	push	r9
    2a04:	af 92       	push	r10
    2a06:	bf 92       	push	r11
    2a08:	cf 92       	push	r12
    2a0a:	df 92       	push	r13
    2a0c:	ef 92       	push	r14
    2a0e:	ff 92       	push	r15
    2a10:	0f 93       	push	r16
    2a12:	1f 93       	push	r17
    2a14:	cf 93       	push	r28
    2a16:	df 93       	push	r29
    2a18:	cd b7       	in	r28, 0x3d	; 61
    2a1a:	de b7       	in	r29, 0x3e	; 62
    2a1c:	64 97       	sbiw	r28, 0x14	; 20
    2a1e:	0f b6       	in	r0, 0x3f	; 63
    2a20:	f8 94       	cli
    2a22:	de bf       	out	0x3e, r29	; 62
    2a24:	0f be       	out	0x3f, r0	; 63
    2a26:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	uint8_t buffersize=0;
	oled.clearFrame();
    2a28:	8e e3       	ldi	r24, 0x3E	; 62
    2a2a:	9c e0       	ldi	r25, 0x0C	; 12
    2a2c:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
	header(0);
    2a30:	80 e0       	ldi	r24, 0x00	; 0
    2a32:	0e 94 8d 0a 	call	0x151a	; 0x151a <_Z6headerh>
	bottom(0);
    2a36:	80 e0       	ldi	r24, 0x00	; 0
    2a38:	0e 94 62 0b 	call	0x16c4	; 0x16c4 <_Z6bottomh>
	
	Accelerometer.readtempera();
    2a3c:	81 e4       	ldi	r24, 0x41	; 65
    2a3e:	9b e0       	ldi	r25, 0x0B	; 11
    2a40:	0e 94 ad 2a 	call	0x555a	; 0x555a <_ZN7LSM303D11readtemperaEv>
	Accelerometer.readacc();
    2a44:	81 e4       	ldi	r24, 0x41	; 65
    2a46:	9b e0       	ldi	r25, 0x0B	; 11
    2a48:	0e 94 ae 29 	call	0x535c	; 0x535c <_ZN7LSM303D7readaccEv>
	
	//Linse
	//Range: Page 1 to Page 6 (8 bis (7*8-1) 53)
	//ganz rechts SSDWIDTH-(53-8)
	#define libelle	(53.0-8.0)
	oled.drawRectangle(SSD1306_WIDTH-libelle,8,SSD1306_WIDTH-1,53,0);
    2a4c:	e1 2c       	mov	r14, r1
    2a4e:	05 e3       	ldi	r16, 0x35	; 53
    2a50:	2f e7       	ldi	r18, 0x7F	; 127
    2a52:	48 e0       	ldi	r20, 0x08	; 8
    2a54:	63 e5       	ldi	r22, 0x53	; 83
    2a56:	8e e3       	ldi	r24, 0x3E	; 62
    2a58:	9c e0       	ldi	r25, 0x0C	; 12
    2a5a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <_ZN7Display13drawRectangleEhhhhh>
	oled.drawVLine(SSD1306_WIDTH-libelle/2.0,8,libelle);
    2a5e:	2d e2       	ldi	r18, 0x2D	; 45
    2a60:	48 e0       	ldi	r20, 0x08	; 8
    2a62:	69 e6       	ldi	r22, 0x69	; 105
    2a64:	8e e3       	ldi	r24, 0x3E	; 62
    2a66:	9c e0       	ldi	r25, 0x0C	; 12
    2a68:	0e 94 c1 03 	call	0x782	; 0x782 <_ZN7Display9drawVLineEhhh>
	oled.drawHLine(SSD1306_WIDTH-libelle,SSD1306_HEIGHT/2,libelle);
    2a6c:	2d e2       	ldi	r18, 0x2D	; 45
    2a6e:	40 e2       	ldi	r20, 0x20	; 32
    2a70:	63 e5       	ldi	r22, 0x53	; 83
    2a72:	8e e3       	ldi	r24, 0x3E	; 62
    2a74:	9c e0       	ldi	r25, 0x0C	; 12
    2a76:	0e 94 db 03 	call	0x7b6	; 0x7b6 <_ZN7Display9drawHLineEhhh>
	//Draw libelle uber die Winkel max ist 90 und -90 in beide richtungen
	#define bereichgroese libelle/M_PI*2.0
	#define breite 4
	#define xpos SSD1306_WIDTH-libelle/2.0-breite/2.0
	#define ypos SSD1306_HEIGHT/2.0-breite/2.0
	float rollpix = Accelerometer.roll*bereichgroese;
    2a7a:	01 e4       	ldi	r16, 0x41	; 65
    2a7c:	1b e0       	ldi	r17, 0x0B	; 11
    2a7e:	20 e0       	ldi	r18, 0x00	; 0
    2a80:	30 e0       	ldi	r19, 0x00	; 0
    2a82:	44 e3       	ldi	r20, 0x34	; 52
    2a84:	52 e4       	ldi	r21, 0x42	; 66
    2a86:	f8 01       	movw	r30, r16
    2a88:	60 85       	ldd	r22, Z+8	; 0x08
    2a8a:	71 85       	ldd	r23, Z+9	; 0x09
    2a8c:	82 85       	ldd	r24, Z+10	; 0x0a
    2a8e:	93 85       	ldd	r25, Z+11	; 0x0b
    2a90:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    2a94:	2b ed       	ldi	r18, 0xDB	; 219
    2a96:	3f e0       	ldi	r19, 0x0F	; 15
    2a98:	49 e4       	ldi	r20, 0x49	; 73
    2a9a:	50 e4       	ldi	r21, 0x40	; 64
    2a9c:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
    2aa0:	9b 01       	movw	r18, r22
    2aa2:	ac 01       	movw	r20, r24
    2aa4:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    2aa8:	6b 01       	movw	r12, r22
    2aaa:	7c 01       	movw	r14, r24
	float pitchpix = Accelerometer.pitch*bereichgroese;
    2aac:	f8 01       	movw	r30, r16
    2aae:	84 84       	ldd	r8, Z+12	; 0x0c
    2ab0:	95 84       	ldd	r9, Z+13	; 0x0d
    2ab2:	a6 84       	ldd	r10, Z+14	; 0x0e
    2ab4:	b7 84       	ldd	r11, Z+15	; 0x0f
	if (rollpix<libelle/2.0 && pitchpix<libelle/2.0)
    2ab6:	20 e0       	ldi	r18, 0x00	; 0
    2ab8:	30 e0       	ldi	r19, 0x00	; 0
    2aba:	44 eb       	ldi	r20, 0xB4	; 180
    2abc:	51 e4       	ldi	r21, 0x41	; 65
    2abe:	0e 94 37 31 	call	0x626e	; 0x626e <__cmpsf2>
    2ac2:	88 23       	and	r24, r24
    2ac4:	0c f0       	brlt	.+2      	; 0x2ac8 <_Z11Wanderseitev+0xca>
    2ac6:	4f c0       	rjmp	.+158    	; 0x2b66 <_Z11Wanderseitev+0x168>
	#define bereichgroese libelle/M_PI*2.0
	#define breite 4
	#define xpos SSD1306_WIDTH-libelle/2.0-breite/2.0
	#define ypos SSD1306_HEIGHT/2.0-breite/2.0
	float rollpix = Accelerometer.roll*bereichgroese;
	float pitchpix = Accelerometer.pitch*bereichgroese;
    2ac8:	20 e0       	ldi	r18, 0x00	; 0
    2aca:	30 e0       	ldi	r19, 0x00	; 0
    2acc:	44 e3       	ldi	r20, 0x34	; 52
    2ace:	52 e4       	ldi	r21, 0x42	; 66
    2ad0:	c5 01       	movw	r24, r10
    2ad2:	b4 01       	movw	r22, r8
    2ad4:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    2ad8:	2b ed       	ldi	r18, 0xDB	; 219
    2ada:	3f e0       	ldi	r19, 0x0F	; 15
    2adc:	49 e4       	ldi	r20, 0x49	; 73
    2ade:	50 e4       	ldi	r21, 0x40	; 64
    2ae0:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
    2ae4:	9b 01       	movw	r18, r22
    2ae6:	ac 01       	movw	r20, r24
    2ae8:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    2aec:	4b 01       	movw	r8, r22
    2aee:	5c 01       	movw	r10, r24
	if (rollpix<libelle/2.0 && pitchpix<libelle/2.0)
    2af0:	20 e0       	ldi	r18, 0x00	; 0
    2af2:	30 e0       	ldi	r19, 0x00	; 0
    2af4:	44 eb       	ldi	r20, 0xB4	; 180
    2af6:	51 e4       	ldi	r21, 0x41	; 65
    2af8:	0e 94 37 31 	call	0x626e	; 0x626e <__cmpsf2>
    2afc:	88 23       	and	r24, r24
    2afe:	9c f5       	brge	.+102    	; 0x2b66 <_Z11Wanderseitev+0x168>
	{
		oled.drawRectangle(xpos-rollpix,ypos+pitchpix,xpos+breite-rollpix,ypos+breite+pitchpix,1);
    2b00:	20 e0       	ldi	r18, 0x00	; 0
    2b02:	30 e0       	ldi	r19, 0x00	; 0
    2b04:	48 e0       	ldi	r20, 0x08	; 8
    2b06:	52 e4       	ldi	r21, 0x42	; 66
    2b08:	c5 01       	movw	r24, r10
    2b0a:	b4 01       	movw	r22, r8
    2b0c:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    2b10:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
    2b14:	06 2f       	mov	r16, r22
    2b16:	a7 01       	movw	r20, r14
    2b18:	96 01       	movw	r18, r12
    2b1a:	60 e0       	ldi	r22, 0x00	; 0
    2b1c:	70 e0       	ldi	r23, 0x00	; 0
    2b1e:	87 ed       	ldi	r24, 0xD7	; 215
    2b20:	92 e4       	ldi	r25, 0x42	; 66
    2b22:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
    2b26:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
    2b2a:	76 2e       	mov	r7, r22
    2b2c:	20 e0       	ldi	r18, 0x00	; 0
    2b2e:	30 e0       	ldi	r19, 0x00	; 0
    2b30:	40 ef       	ldi	r20, 0xF0	; 240
    2b32:	51 e4       	ldi	r21, 0x41	; 65
    2b34:	c5 01       	movw	r24, r10
    2b36:	b4 01       	movw	r22, r8
    2b38:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    2b3c:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
    2b40:	16 2f       	mov	r17, r22
    2b42:	a7 01       	movw	r20, r14
    2b44:	96 01       	movw	r18, r12
    2b46:	60 e0       	ldi	r22, 0x00	; 0
    2b48:	70 e0       	ldi	r23, 0x00	; 0
    2b4a:	8f ec       	ldi	r24, 0xCF	; 207
    2b4c:	92 e4       	ldi	r25, 0x42	; 66
    2b4e:	0e 94 70 30 	call	0x60e0	; 0x60e0 <__subsf3>
    2b52:	0e 94 ab 31 	call	0x6356	; 0x6356 <__fixunssfsi>
    2b56:	ee 24       	eor	r14, r14
    2b58:	e3 94       	inc	r14
    2b5a:	27 2d       	mov	r18, r7
    2b5c:	41 2f       	mov	r20, r17
    2b5e:	8e e3       	ldi	r24, 0x3E	; 62
    2b60:	9c e0       	ldi	r25, 0x0C	; 12
    2b62:	0e 94 f5 03 	call	0x7ea	; 0x7ea <_ZN7Display13drawRectangleEhhhhh>
	//Text debugging
	//buffersize=sprintf(buffer,"r:%.1f",Accelerometer.roll*180.0/M_PI);
	//for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,2*charhighte);}
	//buffersize=sprintf(buffer,"p:%.1f",Accelerometer.pitch*180.0/M_PI);
	//for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
	buffersize=sprintf(buffer,"%i",Accelerometer.achsen_A[0]);
    2b66:	e1 e4       	ldi	r30, 0x41	; 65
    2b68:	fb e0       	ldi	r31, 0x0B	; 11
    2b6a:	81 81       	ldd	r24, Z+1	; 0x01
    2b6c:	8f 93       	push	r24
    2b6e:	80 81       	ld	r24, Z
    2b70:	8f 93       	push	r24
    2b72:	8e ec       	ldi	r24, 0xCE	; 206
    2b74:	92 e0       	ldi	r25, 0x02	; 2
    2b76:	9f 93       	push	r25
    2b78:	8f 93       	push	r24
    2b7a:	ce 01       	movw	r24, r28
    2b7c:	01 96       	adiw	r24, 0x01	; 1
    2b7e:	9f 93       	push	r25
    2b80:	8f 93       	push	r24
    2b82:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,2*charhighte);}
    2b86:	0f 90       	pop	r0
    2b88:	0f 90       	pop	r0
    2b8a:	0f 90       	pop	r0
    2b8c:	0f 90       	pop	r0
    2b8e:	0f 90       	pop	r0
    2b90:	0f 90       	pop	r0
    2b92:	88 23       	and	r24, r24
    2b94:	d1 f0       	breq	.+52     	; 0x2bca <_Z11Wanderseitev+0x1cc>
    2b96:	8e 01       	movw	r16, r28
    2b98:	0f 5f       	subi	r16, 0xFF	; 255
    2b9a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b9c:	81 50       	subi	r24, 0x01	; 1
    2b9e:	c8 2e       	mov	r12, r24
    2ba0:	d1 2c       	mov	r13, r1
    2ba2:	ff ef       	ldi	r31, 0xFF	; 255
    2ba4:	cf 1a       	sub	r12, r31
    2ba6:	df 0a       	sbc	r13, r31
    2ba8:	c0 0e       	add	r12, r16
    2baa:	d1 1e       	adc	r13, r17
    2bac:	f1 2c       	mov	r15, r1
    2bae:	f8 01       	movw	r30, r16
    2bb0:	61 91       	ld	r22, Z+
    2bb2:	8f 01       	movw	r16, r30
    2bb4:	20 e1       	ldi	r18, 0x10	; 16
    2bb6:	4f 2d       	mov	r20, r15
    2bb8:	8e e3       	ldi	r24, 0x3E	; 62
    2bba:	9c e0       	ldi	r25, 0x0C	; 12
    2bbc:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2bc0:	f6 e0       	ldi	r31, 0x06	; 6
    2bc2:	ff 0e       	add	r15, r31
    2bc4:	0c 15       	cp	r16, r12
    2bc6:	1d 05       	cpc	r17, r13
    2bc8:	91 f7       	brne	.-28     	; 0x2bae <_Z11Wanderseitev+0x1b0>
	buffersize=sprintf(buffer,"%i",Accelerometer.achsen_A[1]);
    2bca:	e1 e4       	ldi	r30, 0x41	; 65
    2bcc:	fb e0       	ldi	r31, 0x0B	; 11
    2bce:	83 81       	ldd	r24, Z+3	; 0x03
    2bd0:	8f 93       	push	r24
    2bd2:	82 81       	ldd	r24, Z+2	; 0x02
    2bd4:	8f 93       	push	r24
    2bd6:	8e ec       	ldi	r24, 0xCE	; 206
    2bd8:	92 e0       	ldi	r25, 0x02	; 2
    2bda:	9f 93       	push	r25
    2bdc:	8f 93       	push	r24
    2bde:	ce 01       	movw	r24, r28
    2be0:	01 96       	adiw	r24, 0x01	; 1
    2be2:	9f 93       	push	r25
    2be4:	8f 93       	push	r24
    2be6:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
    2bea:	0f 90       	pop	r0
    2bec:	0f 90       	pop	r0
    2bee:	0f 90       	pop	r0
    2bf0:	0f 90       	pop	r0
    2bf2:	0f 90       	pop	r0
    2bf4:	0f 90       	pop	r0
    2bf6:	88 23       	and	r24, r24
    2bf8:	d1 f0       	breq	.+52     	; 0x2c2e <_Z11Wanderseitev+0x230>
    2bfa:	8e 01       	movw	r16, r28
    2bfc:	0f 5f       	subi	r16, 0xFF	; 255
    2bfe:	1f 4f       	sbci	r17, 0xFF	; 255
    2c00:	81 50       	subi	r24, 0x01	; 1
    2c02:	c8 2e       	mov	r12, r24
    2c04:	d1 2c       	mov	r13, r1
    2c06:	8f ef       	ldi	r24, 0xFF	; 255
    2c08:	c8 1a       	sub	r12, r24
    2c0a:	d8 0a       	sbc	r13, r24
    2c0c:	c0 0e       	add	r12, r16
    2c0e:	d1 1e       	adc	r13, r17
    2c10:	f1 2c       	mov	r15, r1
    2c12:	f8 01       	movw	r30, r16
    2c14:	61 91       	ld	r22, Z+
    2c16:	8f 01       	movw	r16, r30
    2c18:	28 e1       	ldi	r18, 0x18	; 24
    2c1a:	4f 2d       	mov	r20, r15
    2c1c:	8e e3       	ldi	r24, 0x3E	; 62
    2c1e:	9c e0       	ldi	r25, 0x0C	; 12
    2c20:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2c24:	f6 e0       	ldi	r31, 0x06	; 6
    2c26:	ff 0e       	add	r15, r31
    2c28:	0c 15       	cp	r16, r12
    2c2a:	1d 05       	cpc	r17, r13
    2c2c:	91 f7       	brne	.-28     	; 0x2c12 <_Z11Wanderseitev+0x214>
	buffersize=sprintf(buffer,"%i",Accelerometer.achsen_A[2]);
    2c2e:	e1 e4       	ldi	r30, 0x41	; 65
    2c30:	fb e0       	ldi	r31, 0x0B	; 11
    2c32:	85 81       	ldd	r24, Z+5	; 0x05
    2c34:	8f 93       	push	r24
    2c36:	84 81       	ldd	r24, Z+4	; 0x04
    2c38:	8f 93       	push	r24
    2c3a:	8e ec       	ldi	r24, 0xCE	; 206
    2c3c:	92 e0       	ldi	r25, 0x02	; 2
    2c3e:	9f 93       	push	r25
    2c40:	8f 93       	push	r24
    2c42:	ce 01       	movw	r24, r28
    2c44:	01 96       	adiw	r24, 0x01	; 1
    2c46:	9f 93       	push	r25
    2c48:	8f 93       	push	r24
    2c4a:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,4*charhighte);}
    2c4e:	0f 90       	pop	r0
    2c50:	0f 90       	pop	r0
    2c52:	0f 90       	pop	r0
    2c54:	0f 90       	pop	r0
    2c56:	0f 90       	pop	r0
    2c58:	0f 90       	pop	r0
    2c5a:	88 23       	and	r24, r24
    2c5c:	d1 f0       	breq	.+52     	; 0x2c92 <_Z11Wanderseitev+0x294>
    2c5e:	8e 01       	movw	r16, r28
    2c60:	0f 5f       	subi	r16, 0xFF	; 255
    2c62:	1f 4f       	sbci	r17, 0xFF	; 255
    2c64:	81 50       	subi	r24, 0x01	; 1
    2c66:	c8 2e       	mov	r12, r24
    2c68:	d1 2c       	mov	r13, r1
    2c6a:	8f ef       	ldi	r24, 0xFF	; 255
    2c6c:	c8 1a       	sub	r12, r24
    2c6e:	d8 0a       	sbc	r13, r24
    2c70:	c0 0e       	add	r12, r16
    2c72:	d1 1e       	adc	r13, r17
    2c74:	f1 2c       	mov	r15, r1
    2c76:	f8 01       	movw	r30, r16
    2c78:	61 91       	ld	r22, Z+
    2c7a:	8f 01       	movw	r16, r30
    2c7c:	20 e2       	ldi	r18, 0x20	; 32
    2c7e:	4f 2d       	mov	r20, r15
    2c80:	8e e3       	ldi	r24, 0x3E	; 62
    2c82:	9c e0       	ldi	r25, 0x0C	; 12
    2c84:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2c88:	f6 e0       	ldi	r31, 0x06	; 6
    2c8a:	ff 0e       	add	r15, r31
    2c8c:	0c 15       	cp	r16, r12
    2c8e:	1d 05       	cpc	r17, r13
    2c90:	91 f7       	brne	.-28     	; 0x2c76 <_Z11Wanderseitev+0x278>
	buffersize=sprintf(buffer,"%u",Accelerometer.Schrittzaehler);
    2c92:	e1 e4       	ldi	r30, 0x41	; 65
    2c94:	fb e0       	ldi	r31, 0x0B	; 11
    2c96:	81 89       	ldd	r24, Z+17	; 0x11
    2c98:	8f 93       	push	r24
    2c9a:	80 89       	ldd	r24, Z+16	; 0x10
    2c9c:	8f 93       	push	r24
    2c9e:	81 ed       	ldi	r24, 0xD1	; 209
    2ca0:	92 e0       	ldi	r25, 0x02	; 2
    2ca2:	9f 93       	push	r25
    2ca4:	8f 93       	push	r24
    2ca6:	ce 01       	movw	r24, r28
    2ca8:	01 96       	adiw	r24, 0x01	; 1
    2caa:	9f 93       	push	r25
    2cac:	8f 93       	push	r24
    2cae:	0e 94 01 39 	call	0x7202	; 0x7202 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,5*charhighte);}
    2cb2:	0f 90       	pop	r0
    2cb4:	0f 90       	pop	r0
    2cb6:	0f 90       	pop	r0
    2cb8:	0f 90       	pop	r0
    2cba:	0f 90       	pop	r0
    2cbc:	0f 90       	pop	r0
    2cbe:	88 23       	and	r24, r24
    2cc0:	d1 f0       	breq	.+52     	; 0x2cf6 <_Z11Wanderseitev+0x2f8>
    2cc2:	8e 01       	movw	r16, r28
    2cc4:	0f 5f       	subi	r16, 0xFF	; 255
    2cc6:	1f 4f       	sbci	r17, 0xFF	; 255
    2cc8:	81 50       	subi	r24, 0x01	; 1
    2cca:	c8 2e       	mov	r12, r24
    2ccc:	d1 2c       	mov	r13, r1
    2cce:	8f ef       	ldi	r24, 0xFF	; 255
    2cd0:	c8 1a       	sub	r12, r24
    2cd2:	d8 0a       	sbc	r13, r24
    2cd4:	c0 0e       	add	r12, r16
    2cd6:	d1 1e       	adc	r13, r17
    2cd8:	f1 2c       	mov	r15, r1
    2cda:	f8 01       	movw	r30, r16
    2cdc:	61 91       	ld	r22, Z+
    2cde:	8f 01       	movw	r16, r30
    2ce0:	28 e2       	ldi	r18, 0x28	; 40
    2ce2:	4f 2d       	mov	r20, r15
    2ce4:	8e e3       	ldi	r24, 0x3E	; 62
    2ce6:	9c e0       	ldi	r25, 0x0C	; 12
    2ce8:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2cec:	f6 e0       	ldi	r31, 0x06	; 6
    2cee:	ff 0e       	add	r15, r31
    2cf0:	0c 15       	cp	r16, r12
    2cf2:	1d 05       	cpc	r17, r13
    2cf4:	91 f7       	brne	.-28     	; 0x2cda <_Z11Wanderseitev+0x2dc>
}
    2cf6:	64 96       	adiw	r28, 0x14	; 20
    2cf8:	0f b6       	in	r0, 0x3f	; 63
    2cfa:	f8 94       	cli
    2cfc:	de bf       	out	0x3e, r29	; 62
    2cfe:	0f be       	out	0x3f, r0	; 63
    2d00:	cd bf       	out	0x3d, r28	; 61
    2d02:	df 91       	pop	r29
    2d04:	cf 91       	pop	r28
    2d06:	1f 91       	pop	r17
    2d08:	0f 91       	pop	r16
    2d0a:	ff 90       	pop	r15
    2d0c:	ef 90       	pop	r14
    2d0e:	df 90       	pop	r13
    2d10:	cf 90       	pop	r12
    2d12:	bf 90       	pop	r11
    2d14:	af 90       	pop	r10
    2d16:	9f 90       	pop	r9
    2d18:	8f 90       	pop	r8
    2d1a:	7f 90       	pop	r7
    2d1c:	08 95       	ret

00002d1e <_Z13uhreinstellenv>:

void uhreinstellen(){
    2d1e:	2f 92       	push	r2
    2d20:	3f 92       	push	r3
    2d22:	4f 92       	push	r4
    2d24:	5f 92       	push	r5
    2d26:	6f 92       	push	r6
    2d28:	7f 92       	push	r7
    2d2a:	8f 92       	push	r8
    2d2c:	9f 92       	push	r9
    2d2e:	af 92       	push	r10
    2d30:	bf 92       	push	r11
    2d32:	cf 92       	push	r12
    2d34:	df 92       	push	r13
    2d36:	ef 92       	push	r14
    2d38:	ff 92       	push	r15
    2d3a:	0f 93       	push	r16
    2d3c:	1f 93       	push	r17
    2d3e:	cf 93       	push	r28
    2d40:	df 93       	push	r29
    2d42:	cd b7       	in	r28, 0x3d	; 61
    2d44:	de b7       	in	r29, 0x3e	; 62
    2d46:	66 97       	sbiw	r28, 0x16	; 22
    2d48:	0f b6       	in	r0, 0x3f	; 63
    2d4a:	f8 94       	cli
    2d4c:	de bf       	out	0x3e, r29	; 62
    2d4e:	0f be       	out	0x3f, r0	; 63
    2d50:	cd bf       	out	0x3d, r28	; 61
	rtc.RTCstop();
    2d52:	8f e3       	ldi	r24, 0x3F	; 63
    2d54:	90 e1       	ldi	r25, 0x10	; 16
    2d56:	0e 94 29 30 	call	0x6052	; 0x6052 <_ZN3RTC7RTCstopEv>
	
	oled.clearFrame();
    2d5a:	8e e3       	ldi	r24, 0x3E	; 62
    2d5c:	9c e0       	ldi	r25, 0x0C	; 12
    2d5e:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
    2d62:	91 2c       	mov	r9, r1
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2d64:	0f 2e       	mov	r0, r31
    2d66:	ff e0       	ldi	r31, 0x0F	; 15
    2d68:	7f 2e       	mov	r7, r31
    2d6a:	f0 2d       	mov	r31, r0
    2d6c:	ce 01       	movw	r24, r28
    2d6e:	01 96       	adiw	r24, 0x01	; 1
    2d70:	2c 01       	movw	r4, r24
    2d72:	f1 2c       	mov	r15, r1
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2d74:	8d 8b       	std	Y+21, r24	; 0x15
    2d76:	5e 8a       	std	Y+22, r5	; 0x16
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2d78:	0f 2e       	mov	r0, r31
    2d7a:	ff e3       	ldi	r31, 0x3F	; 63
    2d7c:	cf 2e       	mov	r12, r31
    2d7e:	f0 e1       	ldi	r31, 0x10	; 16
    2d80:	df 2e       	mov	r13, r31
    2d82:	f0 2d       	mov	r31, r0
    2d84:	0f 2e       	mov	r0, r31
    2d86:	fd ec       	ldi	r31, 0xCD	; 205
    2d88:	8f 2e       	mov	r8, r31
    2d8a:	f0 2d       	mov	r31, r0
		buffer[1]=rtc.Stunden%10;
		buffer[2]=':';
		buffer[3]=rtc.Minuten/10;
		buffer[4]=rtc.Minuten%10;
		buffer[5]=' ';
    2d8c:	68 94       	set
    2d8e:	ee 24       	eor	r14, r14
    2d90:	e5 f8       	bld	r14, 5
		buffer[6]=rtc.Tag/10;
		buffer[7]=rtc.Tag%10;
		buffer[8]='.';
    2d92:	0f 2e       	mov	r0, r31
    2d94:	fe e2       	ldi	r31, 0x2E	; 46
    2d96:	6f 2e       	mov	r6, r31
    2d98:	f0 2d       	mov	r31, r0
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2d9a:	e4 ed       	ldi	r30, 0xD4	; 212
    2d9c:	f2 e0       	ldi	r31, 0x02	; 2
    2d9e:	d2 01       	movw	r26, r4
    2da0:	87 2d       	mov	r24, r7
    2da2:	01 90       	ld	r0, Z+
    2da4:	0d 92       	st	X+, r0
    2da6:	8a 95       	dec	r24
    2da8:	e1 f7       	brne	.-8      	; 0x2da2 <_Z13uhreinstellenv+0x84>
    2daa:	52 01       	movw	r10, r4
    2dac:	12 01       	movw	r2, r4
    2dae:	1f 2d       	mov	r17, r15
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
    2db0:	f1 01       	movw	r30, r2
    2db2:	61 91       	ld	r22, Z+
    2db4:	1f 01       	movw	r2, r30
    2db6:	2f 2d       	mov	r18, r15
    2db8:	41 2f       	mov	r20, r17
    2dba:	8e e3       	ldi	r24, 0x3E	; 62
    2dbc:	9c e0       	ldi	r25, 0x0C	; 12
    2dbe:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2dc2:	1a 5f       	subi	r17, 0xFA	; 250
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
    2dc4:	14 35       	cpi	r17, 0x54	; 84
    2dc6:	a1 f7       	brne	.-24     	; 0x2db0 <_Z13uhreinstellenv+0x92>
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2dc8:	ef e0       	ldi	r30, 0x0F	; 15
    2dca:	f1 e0       	ldi	r31, 0x01	; 1
    2dcc:	d2 01       	movw	r26, r4
    2dce:	87 2d       	mov	r24, r7
    2dd0:	01 90       	ld	r0, Z+
    2dd2:	0d 92       	st	X+, r0
    2dd4:	8a 95       	dec	r24
    2dd6:	e1 f7       	brne	.-8      	; 0x2dd0 <_Z13uhreinstellenv+0xb2>
    2dd8:	2d 88       	ldd	r2, Y+21	; 0x15
    2dda:	3e 88       	ldd	r3, Y+22	; 0x16
    2ddc:	1f 2d       	mov	r17, r15
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
    2dde:	f1 01       	movw	r30, r2
    2de0:	61 91       	ld	r22, Z+
    2de2:	1f 01       	movw	r2, r30
    2de4:	28 e0       	ldi	r18, 0x08	; 8
    2de6:	41 2f       	mov	r20, r17
    2de8:	8e e3       	ldi	r24, 0x3E	; 62
    2dea:	9c e0       	ldi	r25, 0x0C	; 12
    2dec:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2df0:	1a 5f       	subi	r17, 0xFA	; 250
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
		for(uint8_t i = 0; i<buffersize;i++){
    2df2:	14 35       	cpi	r17, 0x54	; 84
    2df4:	a1 f7       	brne	.-24     	; 0x2dde <_Z13uhreinstellenv+0xc0>
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2df6:	f6 01       	movw	r30, r12
    2df8:	90 89       	ldd	r25, Z+16	; 0x10
    2dfa:	98 9d       	mul	r25, r8
    2dfc:	81 2d       	mov	r24, r1
    2dfe:	11 24       	eor	r1, r1
    2e00:	86 95       	lsr	r24
    2e02:	86 95       	lsr	r24
    2e04:	86 95       	lsr	r24
    2e06:	89 83       	std	Y+1, r24	; 0x01
		buffer[1]=rtc.Stunden%10;
    2e08:	88 0f       	add	r24, r24
    2e0a:	28 2f       	mov	r18, r24
    2e0c:	22 0f       	add	r18, r18
    2e0e:	22 0f       	add	r18, r18
    2e10:	82 0f       	add	r24, r18
    2e12:	98 1b       	sub	r25, r24
    2e14:	9a 83       	std	Y+2, r25	; 0x02
		buffer[2]=':';
    2e16:	fa e3       	ldi	r31, 0x3A	; 58
    2e18:	fb 83       	std	Y+3, r31	; 0x03
		buffer[3]=rtc.Minuten/10;
    2e1a:	f6 01       	movw	r30, r12
    2e1c:	91 89       	ldd	r25, Z+17	; 0x11
    2e1e:	98 9d       	mul	r25, r8
    2e20:	81 2d       	mov	r24, r1
    2e22:	11 24       	eor	r1, r1
    2e24:	86 95       	lsr	r24
    2e26:	86 95       	lsr	r24
    2e28:	86 95       	lsr	r24
    2e2a:	8c 83       	std	Y+4, r24	; 0x04
		buffer[4]=rtc.Minuten%10;
    2e2c:	88 0f       	add	r24, r24
    2e2e:	28 2f       	mov	r18, r24
    2e30:	22 0f       	add	r18, r18
    2e32:	22 0f       	add	r18, r18
    2e34:	82 0f       	add	r24, r18
    2e36:	98 1b       	sub	r25, r24
    2e38:	9d 83       	std	Y+5, r25	; 0x05
		buffer[5]=' ';
    2e3a:	ee 82       	std	Y+6, r14	; 0x06
		buffer[6]=rtc.Tag/10;
    2e3c:	94 89       	ldd	r25, Z+20	; 0x14
    2e3e:	98 9d       	mul	r25, r8
    2e40:	81 2d       	mov	r24, r1
    2e42:	11 24       	eor	r1, r1
    2e44:	86 95       	lsr	r24
    2e46:	86 95       	lsr	r24
    2e48:	86 95       	lsr	r24
    2e4a:	8f 83       	std	Y+7, r24	; 0x07
		buffer[7]=rtc.Tag%10;
    2e4c:	88 0f       	add	r24, r24
    2e4e:	28 2f       	mov	r18, r24
    2e50:	22 0f       	add	r18, r18
    2e52:	22 0f       	add	r18, r18
    2e54:	82 0f       	add	r24, r18
    2e56:	98 1b       	sub	r25, r24
    2e58:	98 87       	std	Y+8, r25	; 0x08
		buffer[8]='.';
    2e5a:	69 86       	std	Y+9, r6	; 0x09
		buffer[9]=rtc.Monat/10;
    2e5c:	96 89       	ldd	r25, Z+22	; 0x16
    2e5e:	98 9d       	mul	r25, r8
    2e60:	81 2d       	mov	r24, r1
    2e62:	11 24       	eor	r1, r1
    2e64:	86 95       	lsr	r24
    2e66:	86 95       	lsr	r24
    2e68:	86 95       	lsr	r24
    2e6a:	8a 87       	std	Y+10, r24	; 0x0a
		buffer[10]=rtc.Monat%10;
    2e6c:	88 0f       	add	r24, r24
    2e6e:	28 2f       	mov	r18, r24
    2e70:	22 0f       	add	r18, r18
    2e72:	22 0f       	add	r18, r18
    2e74:	82 0f       	add	r24, r18
    2e76:	98 1b       	sub	r25, r24
    2e78:	9b 87       	std	Y+11, r25	; 0x0b
		buffer[11]='.';
    2e7a:	6c 86       	std	Y+12, r6	; 0x0c
		buffer[12]=rtc.Jahr/10;
    2e7c:	97 89       	ldd	r25, Z+23	; 0x17
    2e7e:	98 9d       	mul	r25, r8
    2e80:	81 2d       	mov	r24, r1
    2e82:	11 24       	eor	r1, r1
    2e84:	86 95       	lsr	r24
    2e86:	86 95       	lsr	r24
    2e88:	86 95       	lsr	r24
    2e8a:	8d 87       	std	Y+13, r24	; 0x0d
		buffer[13]=rtc.Jahr%10;
    2e8c:	88 0f       	add	r24, r24
    2e8e:	28 2f       	mov	r18, r24
    2e90:	22 0f       	add	r18, r18
    2e92:	22 0f       	add	r18, r18
    2e94:	82 0f       	add	r24, r18
    2e96:	98 1b       	sub	r25, r24
    2e98:	9e 87       	std	Y+14, r25	; 0x0e
    2e9a:	0d 89       	ldd	r16, Y+21	; 0x15
    2e9c:	1e 89       	ldd	r17, Y+22	; 0x16
    2e9e:	2f 2c       	mov	r2, r15
    2ea0:	33 24       	eor	r3, r3
    2ea2:	33 94       	inc	r3
    2ea4:	05 c0       	rjmp	.+10     	; 0x2eb0 <_Z13uhreinstellenv+0x192>
    2ea6:	33 94       	inc	r3
    2ea8:	0f 5f       	subi	r16, 0xFF	; 255
    2eaa:	1f 4f       	sbci	r17, 0xFF	; 255
    2eac:	f0 e1       	ldi	r31, 0x10	; 16
    2eae:	2f 0e       	add	r2, r31
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
			if(i!=2){
    2eb0:	83 e0       	ldi	r24, 0x03	; 3
    2eb2:	38 16       	cp	r3, r24
    2eb4:	61 f0       	breq	.+24     	; 0x2ece <_Z13uhreinstellenv+0x1b0>
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
    2eb6:	20 e1       	ldi	r18, 0x10	; 16
    2eb8:	42 2d       	mov	r20, r2
    2eba:	f8 01       	movw	r30, r16
    2ebc:	60 81       	ld	r22, Z
    2ebe:	8e e3       	ldi	r24, 0x3E	; 62
    2ec0:	9c e0       	ldi	r25, 0x0C	; 12
    2ec2:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    2ec6:	f4 e0       	ldi	r31, 0x04	; 4
    2ec8:	f3 15       	cp	r31, r3
    2eca:	68 f7       	brcc	.-38     	; 0x2ea6 <_Z13uhreinstellenv+0x188>
    2ecc:	08 c0       	rjmp	.+16     	; 0x2ede <_Z13uhreinstellenv+0x1c0>
			if(i!=2){
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
    2ece:	24 e1       	ldi	r18, 0x14	; 20
    2ed0:	48 e2       	ldi	r20, 0x28	; 40
    2ed2:	6b 81       	ldd	r22, Y+3	; 0x03
    2ed4:	8e e3       	ldi	r24, 0x3E	; 62
    2ed6:	9c e0       	ldi	r25, 0x0C	; 12
    2ed8:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2edc:	e4 cf       	rjmp	.-56     	; 0x2ea6 <_Z13uhreinstellenv+0x188>
    2ede:	8e 01       	movw	r16, r28
    2ee0:	09 5f       	subi	r16, 0xF9	; 249
    2ee2:	1f 4f       	sbci	r17, 0xFF	; 255
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    2ee4:	2f 2c       	mov	r2, r15
    2ee6:	0f 2e       	mov	r0, r31
    2ee8:	f6 e0       	ldi	r31, 0x06	; 6
    2eea:	3f 2e       	mov	r3, r31
    2eec:	f0 2d       	mov	r31, r0
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
			if(i!=8 && i!=11){
    2eee:	88 e0       	ldi	r24, 0x08	; 8
    2ef0:	38 16       	cp	r3, r24
    2ef2:	61 f0       	breq	.+24     	; 0x2f0c <_Z13uhreinstellenv+0x1ee>
    2ef4:	9b e0       	ldi	r25, 0x0B	; 11
    2ef6:	39 16       	cp	r3, r25
    2ef8:	49 f0       	breq	.+18     	; 0x2f0c <_Z13uhreinstellenv+0x1ee>
				oled.draw_number16x16(buffer[i],i*numbersmalsize-6*numbersmalsize,4*charhighte);
    2efa:	2e 2d       	mov	r18, r14
    2efc:	42 2d       	mov	r20, r2
    2efe:	f8 01       	movw	r30, r16
    2f00:	60 81       	ld	r22, Z
    2f02:	8e e3       	ldi	r24, 0x3E	; 62
    2f04:	9c e0       	ldi	r25, 0x0C	; 12
    2f06:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN7Display16draw_number16x16Ehhh>
    2f0a:	09 c0       	rjmp	.+18     	; 0x2f1e <_Z13uhreinstellenv+0x200>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
    2f0c:	28 e2       	ldi	r18, 0x28	; 40
    2f0e:	48 e0       	ldi	r20, 0x08	; 8
    2f10:	42 0d       	add	r20, r2
    2f12:	f8 01       	movw	r30, r16
    2f14:	60 81       	ld	r22, Z
    2f16:	8e e3       	ldi	r24, 0x3E	; 62
    2f18:	9c e0       	ldi	r25, 0x0C	; 12
    2f1a:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
    2f1e:	33 94       	inc	r3
    2f20:	0f 5f       	subi	r16, 0xFF	; 255
    2f22:	1f 4f       	sbci	r17, 0xFF	; 255
    2f24:	f0 e1       	ldi	r31, 0x10	; 16
    2f26:	2f 0e       	add	r2, r31
    2f28:	8e e0       	ldi	r24, 0x0E	; 14
    2f2a:	38 12       	cpse	r3, r24
    2f2c:	e0 cf       	rjmp	.-64     	; 0x2eee <_Z13uhreinstellenv+0x1d0>
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
			}
		}

		oled.sendFrame();
    2f2e:	8e e3       	ldi	r24, 0x3E	; 62
    2f30:	9c e0       	ldi	r25, 0x0C	; 12
    2f32:	0e 94 52 03 	call	0x6a4	; 0x6a4 <_ZN7Display9sendFrameEv>
		oled.clearFrame();
    2f36:	8e e3       	ldi	r24, 0x3E	; 62
    2f38:	9c e0       	ldi	r25, 0x0C	; 12
    2f3a:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
		switch (pos) {
    2f3e:	89 2d       	mov	r24, r9
    2f40:	90 e0       	ldi	r25, 0x00	; 0
    2f42:	8a 30       	cpi	r24, 0x0A	; 10
    2f44:	91 05       	cpc	r25, r1
    2f46:	08 f0       	brcs	.+2      	; 0x2f4a <_Z13uhreinstellenv+0x22c>
    2f48:	2c c2       	rjmp	.+1112   	; 0x33a2 <_Z13uhreinstellenv+0x684>
    2f4a:	fc 01       	movw	r30, r24
    2f4c:	ea 5b       	subi	r30, 0xBA	; 186
    2f4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f50:	0c 94 b7 37 	jmp	0x6f6e	; 0x6f6e <__tablejump2__>
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    2f54:	82 e3       	ldi	r24, 0x32	; 50
    2f56:	9c e0       	ldi	r25, 0x0C	; 12
    2f58:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <_ZN9Interface17ZahlenausTastaturEv>
    2f5c:	88 0f       	add	r24, r24
    2f5e:	98 2f       	mov	r25, r24
    2f60:	99 0f       	add	r25, r25
    2f62:	99 0f       	add	r25, r25
    2f64:	89 0f       	add	r24, r25
				if(rtc.Stunden>=24){
    2f66:	88 31       	cpi	r24, 0x18	; 24
    2f68:	08 f4       	brcc	.+2      	; 0x2f6c <_Z13uhreinstellenv+0x24e>
    2f6a:	5a c2       	rjmp	.+1204   	; 0x3420 <_Z13uhreinstellenv+0x702>
					rtc.Stunden=0;
    2f6c:	f6 01       	movw	r30, r12
    2f6e:	10 8a       	std	Z+16, r1	; 0x10
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    2f70:	e3 ee       	ldi	r30, 0xE3	; 227
    2f72:	f2 e0       	ldi	r31, 0x02	; 2
    2f74:	d2 01       	movw	r26, r4
    2f76:	87 2d       	mov	r24, r7
    2f78:	01 90       	ld	r0, Z+
    2f7a:	0d 92       	st	X+, r0
    2f7c:	8a 95       	dec	r24
    2f7e:	e1 f7       	brne	.-8      	; 0x2f78 <_Z13uhreinstellenv+0x25a>
    2f80:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    2f82:	f5 01       	movw	r30, r10
    2f84:	61 91       	ld	r22, Z+
    2f86:	5f 01       	movw	r10, r30
    2f88:	28 e3       	ldi	r18, 0x38	; 56
    2f8a:	41 2f       	mov	r20, r17
    2f8c:	8e e3       	ldi	r24, 0x3E	; 62
    2f8e:	9c e0       	ldi	r25, 0x0C	; 12
    2f90:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2f94:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    2f96:	14 35       	cpi	r17, 0x54	; 84
    2f98:	a1 f7       	brne	.-24     	; 0x2f82 <_Z13uhreinstellenv+0x264>
		switch (pos) {
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    2f9a:	99 24       	eor	r9, r9
    2f9c:	9a 94       	dec	r9
    2f9e:	42 c2       	rjmp	.+1156   	; 0x3424 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    2fa0:	82 e3       	ldi	r24, 0x32	; 50
    2fa2:	9c e0       	ldi	r25, 0x0C	; 12
    2fa4:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <_ZN9Interface17ZahlenausTastaturEv>
    2fa8:	f6 01       	movw	r30, r12
    2faa:	20 89       	ldd	r18, Z+16	; 0x10
    2fac:	90 e0       	ldi	r25, 0x00	; 0
    2fae:	82 0f       	add	r24, r18
    2fb0:	91 1d       	adc	r25, r1
				if(rtc.Stunden>=24){
    2fb2:	88 31       	cpi	r24, 0x18	; 24
    2fb4:	10 f4       	brcc	.+4      	; 0x2fba <_Z13uhreinstellenv+0x29c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    2fb6:	80 8b       	std	Z+16, r24	; 0x10
    2fb8:	35 c2       	rjmp	.+1130   	; 0x3424 <_Z13uhreinstellenv+0x706>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
    2fba:	f6 01       	movw	r30, r12
    2fbc:	10 8a       	std	Z+16, r1	; 0x10
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    2fbe:	e3 ee       	ldi	r30, 0xE3	; 227
    2fc0:	f2 e0       	ldi	r31, 0x02	; 2
    2fc2:	d2 01       	movw	r26, r4
    2fc4:	87 2d       	mov	r24, r7
    2fc6:	01 90       	ld	r0, Z+
    2fc8:	0d 92       	st	X+, r0
    2fca:	8a 95       	dec	r24
    2fcc:	e1 f7       	brne	.-8      	; 0x2fc6 <_Z13uhreinstellenv+0x2a8>
    2fce:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    2fd0:	f5 01       	movw	r30, r10
    2fd2:	61 91       	ld	r22, Z+
    2fd4:	5f 01       	movw	r10, r30
    2fd6:	28 e3       	ldi	r18, 0x38	; 56
    2fd8:	41 2f       	mov	r20, r17
    2fda:	8e e3       	ldi	r24, 0x3E	; 62
    2fdc:	9c e0       	ldi	r25, 0x0C	; 12
    2fde:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    2fe2:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    2fe4:	14 35       	cpi	r17, 0x54	; 84
    2fe6:	a1 f7       	brne	.-24     	; 0x2fd0 <_Z13uhreinstellenv+0x2b2>
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    2fe8:	99 24       	eor	r9, r9
    2fea:	9a 94       	dec	r9
    2fec:	1b c2       	rjmp	.+1078   	; 0x3424 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    2fee:	82 e3       	ldi	r24, 0x32	; 50
    2ff0:	9c e0       	ldi	r25, 0x0C	; 12
    2ff2:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <_ZN9Interface17ZahlenausTastaturEv>
    2ff6:	88 0f       	add	r24, r24
    2ff8:	98 2f       	mov	r25, r24
    2ffa:	99 0f       	add	r25, r25
    2ffc:	99 0f       	add	r25, r25
    2ffe:	89 0f       	add	r24, r25
				if(rtc.Minuten>=60){
    3000:	8c 33       	cpi	r24, 0x3C	; 60
    3002:	18 f4       	brcc	.+6      	; 0x300a <_Z13uhreinstellenv+0x2ec>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    3004:	f6 01       	movw	r30, r12
    3006:	81 8b       	std	Z+17, r24	; 0x11
    3008:	0d c2       	rjmp	.+1050   	; 0x3424 <_Z13uhreinstellenv+0x706>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    300a:	f6 01       	movw	r30, r12
    300c:	11 8a       	std	Z+17, r1	; 0x11
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    300e:	e2 ef       	ldi	r30, 0xF2	; 242
    3010:	f2 e0       	ldi	r31, 0x02	; 2
    3012:	d2 01       	movw	r26, r4
    3014:	87 2d       	mov	r24, r7
    3016:	01 90       	ld	r0, Z+
    3018:	0d 92       	st	X+, r0
    301a:	8a 95       	dec	r24
    301c:	e1 f7       	brne	.-8      	; 0x3016 <_Z13uhreinstellenv+0x2f8>
    301e:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3020:	f5 01       	movw	r30, r10
    3022:	61 91       	ld	r22, Z+
    3024:	5f 01       	movw	r10, r30
    3026:	28 e3       	ldi	r18, 0x38	; 56
    3028:	41 2f       	mov	r20, r17
    302a:	8e e3       	ldi	r24, 0x3E	; 62
    302c:	9c e0       	ldi	r25, 0x0C	; 12
    302e:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    3032:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3034:	14 35       	cpi	r17, 0x54	; 84
    3036:	a1 f7       	brne	.-24     	; 0x3020 <_Z13uhreinstellenv+0x302>
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    3038:	99 24       	eor	r9, r9
    303a:	93 94       	inc	r9
    303c:	f3 c1       	rjmp	.+998    	; 0x3424 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    303e:	82 e3       	ldi	r24, 0x32	; 50
    3040:	9c e0       	ldi	r25, 0x0C	; 12
    3042:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <_ZN9Interface17ZahlenausTastaturEv>
    3046:	f6 01       	movw	r30, r12
    3048:	21 89       	ldd	r18, Z+17	; 0x11
    304a:	90 e0       	ldi	r25, 0x00	; 0
    304c:	82 0f       	add	r24, r18
    304e:	91 1d       	adc	r25, r1
				if(rtc.Minuten>=60){
    3050:	8c 33       	cpi	r24, 0x3C	; 60
    3052:	10 f4       	brcc	.+4      	; 0x3058 <_Z13uhreinstellenv+0x33a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    3054:	81 8b       	std	Z+17, r24	; 0x11
    3056:	e6 c1       	rjmp	.+972    	; 0x3424 <_Z13uhreinstellenv+0x706>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    3058:	f6 01       	movw	r30, r12
    305a:	11 8a       	std	Z+17, r1	; 0x11
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    305c:	e2 ef       	ldi	r30, 0xF2	; 242
    305e:	f2 e0       	ldi	r31, 0x02	; 2
    3060:	d2 01       	movw	r26, r4
    3062:	87 2d       	mov	r24, r7
    3064:	01 90       	ld	r0, Z+
    3066:	0d 92       	st	X+, r0
    3068:	8a 95       	dec	r24
    306a:	e1 f7       	brne	.-8      	; 0x3064 <_Z13uhreinstellenv+0x346>
    306c:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    306e:	f5 01       	movw	r30, r10
    3070:	61 91       	ld	r22, Z+
    3072:	5f 01       	movw	r10, r30
    3074:	28 e3       	ldi	r18, 0x38	; 56
    3076:	41 2f       	mov	r20, r17
    3078:	8e e3       	ldi	r24, 0x3E	; 62
    307a:	9c e0       	ldi	r25, 0x0C	; 12
    307c:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    3080:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3082:	14 35       	cpi	r17, 0x54	; 84
    3084:	a1 f7       	brne	.-24     	; 0x306e <_Z13uhreinstellenv+0x350>
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    3086:	99 24       	eor	r9, r9
    3088:	93 94       	inc	r9
    308a:	cc c1       	rjmp	.+920    	; 0x3424 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    308c:	82 e3       	ldi	r24, 0x32	; 50
    308e:	9c e0       	ldi	r25, 0x0C	; 12
    3090:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <_ZN9Interface17ZahlenausTastaturEv>
    3094:	88 0f       	add	r24, r24
    3096:	98 2f       	mov	r25, r24
    3098:	99 0f       	add	r25, r25
    309a:	99 0f       	add	r25, r25
    309c:	89 0f       	add	r24, r25
				if(rtc.Tag>=32){
    309e:	80 32       	cpi	r24, 0x20	; 32
    30a0:	18 f4       	brcc	.+6      	; 0x30a8 <_Z13uhreinstellenv+0x38a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    30a2:	f6 01       	movw	r30, r12
    30a4:	84 8b       	std	Z+20, r24	; 0x14
    30a6:	be c1       	rjmp	.+892    	; 0x3424 <_Z13uhreinstellenv+0x706>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    30a8:	f6 01       	movw	r30, r12
    30aa:	14 8a       	std	Z+20, r1	; 0x14
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    30ac:	8b e0       	ldi	r24, 0x0B	; 11
    30ae:	e1 e0       	ldi	r30, 0x01	; 1
    30b0:	f3 e0       	ldi	r31, 0x03	; 3
    30b2:	d2 01       	movw	r26, r4
    30b4:	01 90       	ld	r0, Z+
    30b6:	0d 92       	st	X+, r0
    30b8:	8a 95       	dec	r24
    30ba:	e1 f7       	brne	.-8      	; 0x30b4 <_Z13uhreinstellenv+0x396>
    30bc:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    30be:	f5 01       	movw	r30, r10
    30c0:	61 91       	ld	r22, Z+
    30c2:	5f 01       	movw	r10, r30
    30c4:	28 e3       	ldi	r18, 0x38	; 56
    30c6:	41 2f       	mov	r20, r17
    30c8:	8e e3       	ldi	r24, 0x3E	; 62
    30ca:	9c e0       	ldi	r25, 0x0C	; 12
    30cc:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    30d0:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    30d2:	1c 33       	cpi	r17, 0x3C	; 60
    30d4:	a1 f7       	brne	.-24     	; 0x30be <_Z13uhreinstellenv+0x3a0>
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    30d6:	0f 2e       	mov	r0, r31
    30d8:	f3 e0       	ldi	r31, 0x03	; 3
    30da:	9f 2e       	mov	r9, r31
    30dc:	f0 2d       	mov	r31, r0
    30de:	a2 c1       	rjmp	.+836    	; 0x3424 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    30e0:	82 e3       	ldi	r24, 0x32	; 50
    30e2:	9c e0       	ldi	r25, 0x0C	; 12
    30e4:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <_ZN9Interface17ZahlenausTastaturEv>
    30e8:	f6 01       	movw	r30, r12
    30ea:	24 89       	ldd	r18, Z+20	; 0x14
    30ec:	90 e0       	ldi	r25, 0x00	; 0
    30ee:	82 0f       	add	r24, r18
    30f0:	91 1d       	adc	r25, r1
				if(rtc.Tag>=32){
    30f2:	80 32       	cpi	r24, 0x20	; 32
    30f4:	10 f4       	brcc	.+4      	; 0x30fa <_Z13uhreinstellenv+0x3dc>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    30f6:	84 8b       	std	Z+20, r24	; 0x14
    30f8:	95 c1       	rjmp	.+810    	; 0x3424 <_Z13uhreinstellenv+0x706>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    30fa:	f6 01       	movw	r30, r12
    30fc:	14 8a       	std	Z+20, r1	; 0x14
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    30fe:	8b e0       	ldi	r24, 0x0B	; 11
    3100:	e1 e0       	ldi	r30, 0x01	; 1
    3102:	f3 e0       	ldi	r31, 0x03	; 3
    3104:	d2 01       	movw	r26, r4
    3106:	01 90       	ld	r0, Z+
    3108:	0d 92       	st	X+, r0
    310a:	8a 95       	dec	r24
    310c:	e1 f7       	brne	.-8      	; 0x3106 <_Z13uhreinstellenv+0x3e8>
    310e:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3110:	f5 01       	movw	r30, r10
    3112:	61 91       	ld	r22, Z+
    3114:	5f 01       	movw	r10, r30
    3116:	28 e3       	ldi	r18, 0x38	; 56
    3118:	41 2f       	mov	r20, r17
    311a:	8e e3       	ldi	r24, 0x3E	; 62
    311c:	9c e0       	ldi	r25, 0x0C	; 12
    311e:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    3122:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3124:	1c 33       	cpi	r17, 0x3C	; 60
    3126:	a1 f7       	brne	.-24     	; 0x3110 <_Z13uhreinstellenv+0x3f2>
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    3128:	0f 2e       	mov	r0, r31
    312a:	f3 e0       	ldi	r31, 0x03	; 3
    312c:	9f 2e       	mov	r9, r31
    312e:	f0 2d       	mov	r31, r0
    3130:	79 c1       	rjmp	.+754    	; 0x3424 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    3132:	82 e3       	ldi	r24, 0x32	; 50
    3134:	9c e0       	ldi	r25, 0x0C	; 12
    3136:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <_ZN9Interface17ZahlenausTastaturEv>
    313a:	88 0f       	add	r24, r24
    313c:	98 2f       	mov	r25, r24
    313e:	99 0f       	add	r25, r25
    3140:	99 0f       	add	r25, r25
    3142:	89 0f       	add	r24, r25
				if(rtc.Monat>=13){
    3144:	8d 30       	cpi	r24, 0x0D	; 13
    3146:	18 f4       	brcc	.+6      	; 0x314e <_Z13uhreinstellenv+0x430>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    3148:	f6 01       	movw	r30, r12
    314a:	86 8b       	std	Z+22, r24	; 0x16
    314c:	6b c1       	rjmp	.+726    	; 0x3424 <_Z13uhreinstellenv+0x706>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    314e:	f6 01       	movw	r30, r12
    3150:	16 8a       	std	Z+22, r1	; 0x16
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    3152:	8d e0       	ldi	r24, 0x0D	; 13
    3154:	ec e0       	ldi	r30, 0x0C	; 12
    3156:	f3 e0       	ldi	r31, 0x03	; 3
    3158:	d2 01       	movw	r26, r4
    315a:	01 90       	ld	r0, Z+
    315c:	0d 92       	st	X+, r0
    315e:	8a 95       	dec	r24
    3160:	e1 f7       	brne	.-8      	; 0x315a <_Z13uhreinstellenv+0x43c>
    3162:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3164:	f5 01       	movw	r30, r10
    3166:	61 91       	ld	r22, Z+
    3168:	5f 01       	movw	r10, r30
    316a:	28 e3       	ldi	r18, 0x38	; 56
    316c:	41 2f       	mov	r20, r17
    316e:	8e e3       	ldi	r24, 0x3E	; 62
    3170:	9c e0       	ldi	r25, 0x0C	; 12
    3172:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    3176:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3178:	18 34       	cpi	r17, 0x48	; 72
    317a:	a1 f7       	brne	.-24     	; 0x3164 <_Z13uhreinstellenv+0x446>
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    317c:	0f 2e       	mov	r0, r31
    317e:	f5 e0       	ldi	r31, 0x05	; 5
    3180:	9f 2e       	mov	r9, r31
    3182:	f0 2d       	mov	r31, r0
    3184:	4f c1       	rjmp	.+670    	; 0x3424 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    3186:	82 e3       	ldi	r24, 0x32	; 50
    3188:	9c e0       	ldi	r25, 0x0C	; 12
    318a:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <_ZN9Interface17ZahlenausTastaturEv>
    318e:	f6 01       	movw	r30, r12
    3190:	26 89       	ldd	r18, Z+22	; 0x16
    3192:	90 e0       	ldi	r25, 0x00	; 0
    3194:	82 0f       	add	r24, r18
    3196:	91 1d       	adc	r25, r1
				if(rtc.Monat>=13){
    3198:	8d 30       	cpi	r24, 0x0D	; 13
    319a:	10 f4       	brcc	.+4      	; 0x31a0 <_Z13uhreinstellenv+0x482>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    319c:	86 8b       	std	Z+22, r24	; 0x16
    319e:	1d c0       	rjmp	.+58     	; 0x31da <_Z13uhreinstellenv+0x4bc>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    31a0:	f6 01       	movw	r30, r12
    31a2:	16 8a       	std	Z+22, r1	; 0x16
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    31a4:	8d e0       	ldi	r24, 0x0D	; 13
    31a6:	ec e0       	ldi	r30, 0x0C	; 12
    31a8:	f3 e0       	ldi	r31, 0x03	; 3
    31aa:	d2 01       	movw	r26, r4
    31ac:	01 90       	ld	r0, Z+
    31ae:	0d 92       	st	X+, r0
    31b0:	8a 95       	dec	r24
    31b2:	e1 f7       	brne	.-8      	; 0x31ac <_Z13uhreinstellenv+0x48e>
    31b4:	2d 88       	ldd	r2, Y+21	; 0x15
    31b6:	3e 88       	ldd	r3, Y+22	; 0x16
    31b8:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    31ba:	f1 01       	movw	r30, r2
    31bc:	61 91       	ld	r22, Z+
    31be:	1f 01       	movw	r2, r30
    31c0:	28 e3       	ldi	r18, 0x38	; 56
    31c2:	41 2f       	mov	r20, r17
    31c4:	8e e3       	ldi	r24, 0x3E	; 62
    31c6:	9c e0       	ldi	r25, 0x0C	; 12
    31c8:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    31cc:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    31ce:	18 34       	cpi	r17, 0x48	; 72
    31d0:	a1 f7       	brne	.-24     	; 0x31ba <_Z13uhreinstellenv+0x49c>
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    31d2:	0f 2e       	mov	r0, r31
    31d4:	f5 e0       	ldi	r31, 0x05	; 5
    31d6:	9f 2e       	mov	r9, r31
    31d8:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
    31da:	f6 01       	movw	r30, r12
    31dc:	96 89       	ldd	r25, Z+22	; 0x16
    31de:	89 2f       	mov	r24, r25
    31e0:	8d 7f       	andi	r24, 0xFD	; 253
    31e2:	84 30       	cpi	r24, 0x04	; 4
    31e4:	11 f0       	breq	.+4      	; 0x31ea <_Z13uhreinstellenv+0x4cc>
    31e6:	89 30       	cpi	r24, 0x09	; 9
    31e8:	09 f5       	brne	.+66     	; 0x322c <_Z13uhreinstellenv+0x50e>
					if(rtc.Tag>=31){
    31ea:	f6 01       	movw	r30, r12
    31ec:	84 89       	ldd	r24, Z+20	; 0x14
    31ee:	8f 31       	cpi	r24, 0x1F	; 31
    31f0:	08 f4       	brcc	.+2      	; 0x31f4 <_Z13uhreinstellenv+0x4d6>
    31f2:	d8 c0       	rjmp	.+432    	; 0x33a4 <_Z13uhreinstellenv+0x686>
						rtc.Tag=0;
    31f4:	14 8a       	std	Z+20, r1	; 0x14
						rtc.Monat=0;
    31f6:	16 8a       	std	Z+22, r1	; 0x16
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    31f8:	8b e0       	ldi	r24, 0x0B	; 11
    31fa:	e1 e0       	ldi	r30, 0x01	; 1
    31fc:	f3 e0       	ldi	r31, 0x03	; 3
    31fe:	d2 01       	movw	r26, r4
    3200:	01 90       	ld	r0, Z+
    3202:	0d 92       	st	X+, r0
    3204:	8a 95       	dec	r24
    3206:	e1 f7       	brne	.-8      	; 0x3200 <_Z13uhreinstellenv+0x4e2>
    3208:	1f 2d       	mov	r17, r15
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    320a:	f5 01       	movw	r30, r10
    320c:	61 91       	ld	r22, Z+
    320e:	5f 01       	movw	r10, r30
    3210:	28 e3       	ldi	r18, 0x38	; 56
    3212:	41 2f       	mov	r20, r17
    3214:	8e e3       	ldi	r24, 0x3E	; 62
    3216:	9c e0       	ldi	r25, 0x0C	; 12
    3218:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    321c:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    321e:	1c 33       	cpi	r17, 0x3C	; 60
    3220:	a1 f7       	brne	.-24     	; 0x320a <_Z13uhreinstellenv+0x4ec>
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    3222:	0f 2e       	mov	r0, r31
    3224:	f3 e0       	ldi	r31, 0x03	; 3
    3226:	9f 2e       	mov	r9, r31
    3228:	f0 2d       	mov	r31, r0
    322a:	fc c0       	rjmp	.+504    	; 0x3424 <_Z13uhreinstellenv+0x706>
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
						}
					}
				}
				else if(rtc.Monat==2){
    322c:	92 30       	cpi	r25, 0x02	; 2
    322e:	09 f0       	breq	.+2      	; 0x3232 <_Z13uhreinstellenv+0x514>
    3230:	b9 c0       	rjmp	.+370    	; 0x33a4 <_Z13uhreinstellenv+0x686>
					if(rtc.Tag>=30){
    3232:	f6 01       	movw	r30, r12
    3234:	84 89       	ldd	r24, Z+20	; 0x14
    3236:	8e 31       	cpi	r24, 0x1E	; 30
    3238:	08 f4       	brcc	.+2      	; 0x323c <_Z13uhreinstellenv+0x51e>
    323a:	b4 c0       	rjmp	.+360    	; 0x33a4 <_Z13uhreinstellenv+0x686>
						rtc.Tag=0;
    323c:	14 8a       	std	Z+20, r1	; 0x14
						rtc.Monat=0;
    323e:	16 8a       	std	Z+22, r1	; 0x16
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    3240:	8b e0       	ldi	r24, 0x0B	; 11
    3242:	e1 e0       	ldi	r30, 0x01	; 1
    3244:	f3 e0       	ldi	r31, 0x03	; 3
    3246:	d2 01       	movw	r26, r4
    3248:	01 90       	ld	r0, Z+
    324a:	0d 92       	st	X+, r0
    324c:	8a 95       	dec	r24
    324e:	e1 f7       	brne	.-8      	; 0x3248 <_Z13uhreinstellenv+0x52a>
    3250:	1f 2d       	mov	r17, r15
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3252:	f5 01       	movw	r30, r10
    3254:	61 91       	ld	r22, Z+
    3256:	5f 01       	movw	r10, r30
    3258:	28 e3       	ldi	r18, 0x38	; 56
    325a:	41 2f       	mov	r20, r17
    325c:	8e e3       	ldi	r24, 0x3E	; 62
    325e:	9c e0       	ldi	r25, 0x0C	; 12
    3260:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    3264:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    3266:	1c 33       	cpi	r17, 0x3C	; 60
    3268:	a1 f7       	brne	.-24     	; 0x3252 <_Z13uhreinstellenv+0x534>
				}
				else if(rtc.Monat==2){
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    326a:	0f 2e       	mov	r0, r31
    326c:	f3 e0       	ldi	r31, 0x03	; 3
    326e:	9f 2e       	mov	r9, r31
    3270:	f0 2d       	mov	r31, r0
    3272:	d8 c0       	rjmp	.+432    	; 0x3424 <_Z13uhreinstellenv+0x706>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    3274:	82 e3       	ldi	r24, 0x32	; 50
    3276:	9c e0       	ldi	r25, 0x0C	; 12
    3278:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <_ZN9Interface17ZahlenausTastaturEv>
    327c:	88 0f       	add	r24, r24
    327e:	98 2f       	mov	r25, r24
    3280:	99 0f       	add	r25, r25
    3282:	99 0f       	add	r25, r25
    3284:	89 0f       	add	r24, r25
				if(rtc.Jahr>=50){
    3286:	82 33       	cpi	r24, 0x32	; 50
    3288:	18 f4       	brcc	.+6      	; 0x3290 <_Z13uhreinstellenv+0x572>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    328a:	f6 01       	movw	r30, r12
    328c:	87 8b       	std	Z+23, r24	; 0x17
    328e:	ca c0       	rjmp	.+404    	; 0x3424 <_Z13uhreinstellenv+0x706>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    3290:	f6 01       	movw	r30, r12
    3292:	17 8a       	std	Z+23, r1	; 0x17
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    3294:	8c e0       	ldi	r24, 0x0C	; 12
    3296:	e9 e1       	ldi	r30, 0x19	; 25
    3298:	f3 e0       	ldi	r31, 0x03	; 3
    329a:	d2 01       	movw	r26, r4
    329c:	01 90       	ld	r0, Z+
    329e:	0d 92       	st	X+, r0
    32a0:	8a 95       	dec	r24
    32a2:	e1 f7       	brne	.-8      	; 0x329c <_Z13uhreinstellenv+0x57e>
    32a4:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    32a6:	f5 01       	movw	r30, r10
    32a8:	61 91       	ld	r22, Z+
    32aa:	5f 01       	movw	r10, r30
    32ac:	28 e3       	ldi	r18, 0x38	; 56
    32ae:	41 2f       	mov	r20, r17
    32b0:	8e e3       	ldi	r24, 0x3E	; 62
    32b2:	9c e0       	ldi	r25, 0x0C	; 12
    32b4:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    32b8:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    32ba:	12 34       	cpi	r17, 0x42	; 66
    32bc:	a1 f7       	brne	.-24     	; 0x32a6 <_Z13uhreinstellenv+0x588>
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    32be:	0f 2e       	mov	r0, r31
    32c0:	f7 e0       	ldi	r31, 0x07	; 7
    32c2:	9f 2e       	mov	r9, r31
    32c4:	f0 2d       	mov	r31, r0
    32c6:	ae c0       	rjmp	.+348    	; 0x3424 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    32c8:	82 e3       	ldi	r24, 0x32	; 50
    32ca:	9c e0       	ldi	r25, 0x0C	; 12
    32cc:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <_ZN9Interface17ZahlenausTastaturEv>
    32d0:	f6 01       	movw	r30, r12
    32d2:	27 89       	ldd	r18, Z+23	; 0x17
    32d4:	90 e0       	ldi	r25, 0x00	; 0
    32d6:	82 0f       	add	r24, r18
    32d8:	91 1d       	adc	r25, r1
				if(rtc.Jahr>=50){
    32da:	82 33       	cpi	r24, 0x32	; 50
    32dc:	08 f4       	brcc	.+2      	; 0x32e0 <_Z13uhreinstellenv+0x5c2>
    32de:	99 c0       	rjmp	.+306    	; 0x3412 <_Z13uhreinstellenv+0x6f4>
					rtc.Jahr=0;
    32e0:	17 8a       	std	Z+23, r1	; 0x17
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    32e2:	8c e0       	ldi	r24, 0x0C	; 12
    32e4:	e9 e1       	ldi	r30, 0x19	; 25
    32e6:	f3 e0       	ldi	r31, 0x03	; 3
    32e8:	d2 01       	movw	r26, r4
    32ea:	01 90       	ld	r0, Z+
    32ec:	0d 92       	st	X+, r0
    32ee:	8a 95       	dec	r24
    32f0:	e1 f7       	brne	.-8      	; 0x32ea <_Z13uhreinstellenv+0x5cc>
    32f2:	2d 88       	ldd	r2, Y+21	; 0x15
    32f4:	3e 88       	ldd	r3, Y+22	; 0x16
    32f6:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    32f8:	f1 01       	movw	r30, r2
    32fa:	61 91       	ld	r22, Z+
    32fc:	1f 01       	movw	r2, r30
    32fe:	28 e3       	ldi	r18, 0x38	; 56
    3300:	41 2f       	mov	r20, r17
    3302:	8e e3       	ldi	r24, 0x3E	; 62
    3304:	9c e0       	ldi	r25, 0x0C	; 12
    3306:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    330a:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    330c:	12 34       	cpi	r17, 0x42	; 66
    330e:	a1 f7       	brne	.-24     	; 0x32f8 <_Z13uhreinstellenv+0x5da>
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    3310:	0f 2e       	mov	r0, r31
    3312:	f7 e0       	ldi	r31, 0x07	; 7
    3314:	9f 2e       	mov	r9, r31
    3316:	f0 2d       	mov	r31, r0
    3318:	7e c0       	rjmp	.+252    	; 0x3416 <_Z13uhreinstellenv+0x6f8>
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==2){
					if(rtc.Jahr%4==0){
    331a:	f6 01       	movw	r30, r12
    331c:	17 89       	ldd	r17, Z+23	; 0x17
    331e:	13 70       	andi	r17, 0x03	; 3
    3320:	f9 f4       	brne	.+62     	; 0x3360 <_Z13uhreinstellenv+0x642>
						if (rtc.Tag>=30)
    3322:	84 89       	ldd	r24, Z+20	; 0x14
    3324:	8e 31       	cpi	r24, 0x1E	; 30
    3326:	f0 f1       	brcs	.+124    	; 0x33a4 <_Z13uhreinstellenv+0x686>
						{
							rtc.Tag=0;
    3328:	14 8a       	std	Z+20, r1	; 0x14
							rtc.Monat=0;
    332a:	16 8a       	std	Z+22, r1	; 0x16
							rtc.Jahr=0;
    332c:	17 8a       	std	Z+23, r1	; 0x17
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    332e:	8b e0       	ldi	r24, 0x0B	; 11
    3330:	e1 e0       	ldi	r30, 0x01	; 1
    3332:	f3 e0       	ldi	r31, 0x03	; 3
    3334:	d2 01       	movw	r26, r4
    3336:	01 90       	ld	r0, Z+
    3338:	0d 92       	st	X+, r0
    333a:	8a 95       	dec	r24
    333c:	e1 f7       	brne	.-8      	; 0x3336 <_Z13uhreinstellenv+0x618>
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    333e:	f5 01       	movw	r30, r10
    3340:	61 91       	ld	r22, Z+
    3342:	5f 01       	movw	r10, r30
    3344:	28 e3       	ldi	r18, 0x38	; 56
    3346:	41 2f       	mov	r20, r17
    3348:	8e e3       	ldi	r24, 0x3E	; 62
    334a:	9c e0       	ldi	r25, 0x0C	; 12
    334c:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    3350:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    3352:	1c 33       	cpi	r17, 0x3C	; 60
    3354:	a1 f7       	brne	.-24     	; 0x333e <_Z13uhreinstellenv+0x620>
						if (rtc.Tag>=30)
						{
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    3356:	0f 2e       	mov	r0, r31
    3358:	f3 e0       	ldi	r31, 0x03	; 3
    335a:	9f 2e       	mov	r9, r31
    335c:	f0 2d       	mov	r31, r0
    335e:	62 c0       	rjmp	.+196    	; 0x3424 <_Z13uhreinstellenv+0x706>
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
							}
						}
					}
					else{
						if(rtc.Tag>=29){
    3360:	f6 01       	movw	r30, r12
    3362:	84 89       	ldd	r24, Z+20	; 0x14
    3364:	8d 31       	cpi	r24, 0x1D	; 29
    3366:	f0 f0       	brcs	.+60     	; 0x33a4 <_Z13uhreinstellenv+0x686>
							rtc.Tag=0;
    3368:	14 8a       	std	Z+20, r1	; 0x14
							rtc.Monat=0;
    336a:	16 8a       	std	Z+22, r1	; 0x16
							rtc.Jahr=0;
    336c:	17 8a       	std	Z+23, r1	; 0x17
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    336e:	8b e0       	ldi	r24, 0x0B	; 11
    3370:	e1 e0       	ldi	r30, 0x01	; 1
    3372:	f3 e0       	ldi	r31, 0x03	; 3
    3374:	d2 01       	movw	r26, r4
    3376:	01 90       	ld	r0, Z+
    3378:	0d 92       	st	X+, r0
    337a:	8a 95       	dec	r24
    337c:	e1 f7       	brne	.-8      	; 0x3376 <_Z13uhreinstellenv+0x658>
    337e:	1f 2d       	mov	r17, r15
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3380:	f5 01       	movw	r30, r10
    3382:	61 91       	ld	r22, Z+
    3384:	5f 01       	movw	r10, r30
    3386:	28 e3       	ldi	r18, 0x38	; 56
    3388:	41 2f       	mov	r20, r17
    338a:	8e e3       	ldi	r24, 0x3E	; 62
    338c:	9c e0       	ldi	r25, 0x0C	; 12
    338e:	0e 94 1e 06 	call	0xc3c	; 0xc3c <_ZN7Display9draw_ASCIEhhh>
    3392:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    3394:	1c 33       	cpi	r17, 0x3C	; 60
    3396:	a1 f7       	brne	.-24     	; 0x3380 <_Z13uhreinstellenv+0x662>
					else{
						if(rtc.Tag>=29){
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    3398:	0f 2e       	mov	r0, r31
    339a:	f3 e0       	ldi	r31, 0x03	; 3
    339c:	9f 2e       	mov	r9, r31
    339e:	f0 2d       	mov	r31, r0
    33a0:	41 c0       	rjmp	.+130    	; 0x3424 <_Z13uhreinstellenv+0x706>
						}
					}
				}
				break;
			default:
				pos++;
    33a2:	93 94       	inc	r9
				break;
		}
		pos++;
    33a4:	93 94       	inc	r9
	
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
    33a6:	fa e0       	ldi	r31, 0x0A	; 10
    33a8:	f9 15       	cp	r31, r9
    33aa:	08 f0       	brcs	.+2      	; 0x33ae <_Z13uhreinstellenv+0x690>
    33ac:	f6 cc       	rjmp	.-1556   	; 0x2d9a <_Z13uhreinstellenv+0x7c>
				break;
		}
		pos++;
	}
	
	rtc.Sekunden		= 0;
    33ae:	0f e3       	ldi	r16, 0x3F	; 63
    33b0:	10 e1       	ldi	r17, 0x10	; 16
    33b2:	f8 01       	movw	r30, r16
    33b4:	12 8a       	std	Z+18, r1	; 0x12
	rtc.HundSekunden	= 0;
    33b6:	13 8a       	std	Z+19, r1	; 0x13
	//speichern der neuen Zeit im EEPROM
	EEPROM_Write(EEMINUTEN,rtc.Minuten);
    33b8:	61 89       	ldd	r22, Z+17	; 0x11
    33ba:	80 e0       	ldi	r24, 0x00	; 0
    33bc:	90 e0       	ldi	r25, 0x00	; 0
    33be:	0e 94 df 09 	call	0x13be	; 0x13be <_Z12EEPROM_Writejh>
	EEPROM_Write(EESTUNDEN,rtc.Stunden);
    33c2:	f8 01       	movw	r30, r16
    33c4:	60 89       	ldd	r22, Z+16	; 0x10
    33c6:	81 e0       	ldi	r24, 0x01	; 1
    33c8:	90 e0       	ldi	r25, 0x00	; 0
    33ca:	0e 94 df 09 	call	0x13be	; 0x13be <_Z12EEPROM_Writejh>
	EEPROM_Write(EETAGE,rtc.Tag);
    33ce:	f8 01       	movw	r30, r16
    33d0:	64 89       	ldd	r22, Z+20	; 0x14
    33d2:	82 e0       	ldi	r24, 0x02	; 2
    33d4:	90 e0       	ldi	r25, 0x00	; 0
    33d6:	0e 94 df 09 	call	0x13be	; 0x13be <_Z12EEPROM_Writejh>
	EEPROM_Write(EEMONAT,rtc.Monat);
    33da:	f8 01       	movw	r30, r16
    33dc:	66 89       	ldd	r22, Z+22	; 0x16
    33de:	83 e0       	ldi	r24, 0x03	; 3
    33e0:	90 e0       	ldi	r25, 0x00	; 0
    33e2:	0e 94 df 09 	call	0x13be	; 0x13be <_Z12EEPROM_Writejh>
	EEPROM_Write(EEJAHR,rtc.Jahr);
    33e6:	f8 01       	movw	r30, r16
    33e8:	67 89       	ldd	r22, Z+23	; 0x17
    33ea:	84 e0       	ldi	r24, 0x04	; 4
    33ec:	90 e0       	ldi	r25, 0x00	; 0
    33ee:	0e 94 df 09 	call	0x13be	; 0x13be <_Z12EEPROM_Writejh>
	
	oled.clearFrame();
    33f2:	8e e3       	ldi	r24, 0x3E	; 62
    33f4:	9c e0       	ldi	r25, 0x0C	; 12
    33f6:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
	rtc.ausgabedatumneu();
    33fa:	c8 01       	movw	r24, r16
    33fc:	0e 94 2f 2f 	call	0x5e5e	; 0x5e5e <_ZN3RTC15ausgabedatumneuEv>
	rtc.ausgabezeitneu();
    3400:	c8 01       	movw	r24, r16
    3402:	0e 94 f6 2e 	call	0x5dec	; 0x5dec <_ZN3RTC14ausgabezeitneuEv>
	rtc.RTCstart();
    3406:	c8 01       	movw	r24, r16
    3408:	0e 94 10 30 	call	0x6020	; 0x6020 <_ZN3RTC8RTCstartEv>
    340c:	0d c0       	rjmp	.+26     	; 0x3428 <_Z13uhreinstellenv+0x70a>
				break;
			default:
				pos++;
				break;
		}
		pos++;
    340e:	93 94       	inc	r9
    3410:	c4 cc       	rjmp	.-1656   	; 0x2d9a <_Z13uhreinstellenv+0x7c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    3412:	f6 01       	movw	r30, r12
    3414:	87 8b       	std	Z+23, r24	; 0x17
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==2){
    3416:	f6 01       	movw	r30, r12
    3418:	86 89       	ldd	r24, Z+22	; 0x16
    341a:	82 30       	cpi	r24, 0x02	; 2
    341c:	c1 f7       	brne	.-16     	; 0x340e <_Z13uhreinstellenv+0x6f0>
    341e:	7d cf       	rjmp	.-262    	; 0x331a <_Z13uhreinstellenv+0x5fc>

		oled.sendFrame();
		oled.clearFrame();
		switch (pos) {
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    3420:	f6 01       	movw	r30, r12
    3422:	80 8b       	std	Z+16, r24	; 0x10
				break;
			default:
				pos++;
				break;
		}
		pos++;
    3424:	93 94       	inc	r9
    3426:	b9 cc       	rjmp	.-1678   	; 0x2d9a <_Z13uhreinstellenv+0x7c>
	
	oled.clearFrame();
	rtc.ausgabedatumneu();
	rtc.ausgabezeitneu();
	rtc.RTCstart();
}
    3428:	66 96       	adiw	r28, 0x16	; 22
    342a:	0f b6       	in	r0, 0x3f	; 63
    342c:	f8 94       	cli
    342e:	de bf       	out	0x3e, r29	; 62
    3430:	0f be       	out	0x3f, r0	; 63
    3432:	cd bf       	out	0x3d, r28	; 61
    3434:	df 91       	pop	r29
    3436:	cf 91       	pop	r28
    3438:	1f 91       	pop	r17
    343a:	0f 91       	pop	r16
    343c:	ff 90       	pop	r15
    343e:	ef 90       	pop	r14
    3440:	df 90       	pop	r13
    3442:	cf 90       	pop	r12
    3444:	bf 90       	pop	r11
    3446:	af 90       	pop	r10
    3448:	9f 90       	pop	r9
    344a:	8f 90       	pop	r8
    344c:	7f 90       	pop	r7
    344e:	6f 90       	pop	r6
    3450:	5f 90       	pop	r5
    3452:	4f 90       	pop	r4
    3454:	3f 90       	pop	r3
    3456:	2f 90       	pop	r2
    3458:	08 95       	ret

0000345a <__vector_11>:
#include "EEPROM.h"
//Ausgelagerte Sammlung der einzelnen Seitenlayouts
uint8_t FPS;
#include "Seiten.h"

ISR(TIMER2_OVF_vect){	//Vektor fuer die RTC
    345a:	1f 92       	push	r1
    345c:	0f 92       	push	r0
    345e:	0f b6       	in	r0, 0x3f	; 63
    3460:	0f 92       	push	r0
    3462:	11 24       	eor	r1, r1
    3464:	0b b6       	in	r0, 0x3b	; 59
    3466:	0f 92       	push	r0
    3468:	8f 93       	push	r24
    346a:	ef 93       	push	r30
    346c:	ff 93       	push	r31
	//TCNT2=TIMER2RTCTIME;
	rtc.Sekunden++;
    346e:	ef e3       	ldi	r30, 0x3F	; 63
    3470:	f0 e1       	ldi	r31, 0x10	; 16
    3472:	82 89       	ldd	r24, Z+18	; 0x12
    3474:	8f 5f       	subi	r24, 0xFF	; 255
    3476:	82 8b       	std	Z+18, r24	; 0x12
	rtc.interupts|= (1<<sekundeninterupt);
    3478:	80 8d       	ldd	r24, Z+24	; 0x18
    347a:	82 60       	ori	r24, 0x02	; 2
    347c:	80 8f       	std	Z+24, r24	; 0x18
}
    347e:	ff 91       	pop	r31
    3480:	ef 91       	pop	r30
    3482:	8f 91       	pop	r24
    3484:	0f 90       	pop	r0
    3486:	0b be       	out	0x3b, r0	; 59
    3488:	0f 90       	pop	r0
    348a:	0f be       	out	0x3f, r0	; 63
    348c:	0f 90       	pop	r0
    348e:	1f 90       	pop	r1
    3490:	18 95       	reti

00003492 <__vector_13>:

ISR(TIMER1_COMPA_vect){
    3492:	1f 92       	push	r1
    3494:	0f 92       	push	r0
    3496:	0f b6       	in	r0, 0x3f	; 63
    3498:	0f 92       	push	r0
    349a:	11 24       	eor	r1, r1
    349c:	8f 93       	push	r24
	statusreg |= (1<<updaterate);
    349e:	80 91 38 03 	lds	r24, 0x0338
    34a2:	81 60       	ori	r24, 0x01	; 1
    34a4:	80 93 38 03 	sts	0x0338, r24
}
    34a8:	8f 91       	pop	r24
    34aa:	0f 90       	pop	r0
    34ac:	0f be       	out	0x3f, r0	; 63
    34ae:	0f 90       	pop	r0
    34b0:	1f 90       	pop	r1
    34b2:	18 95       	reti

000034b4 <_Z15geschwindigkeitf>:

double geschw;
double strecke;
double maxgeschw;
uint32_t Fahrtzeit;
void geschwindigkeit(float durch){
    34b4:	cf 92       	push	r12
    34b6:	df 92       	push	r13
    34b8:	ef 92       	push	r14
    34ba:	ff 92       	push	r15
    34bc:	cf 93       	push	r28
    34be:	df 93       	push	r29
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
    34c0:	e4 e8       	ldi	r30, 0x84	; 132
    34c2:	f0 e0       	ldi	r31, 0x00	; 0
    34c4:	c0 81       	ld	r28, Z
    34c6:	d1 81       	ldd	r29, Z+1	; 0x01
	TCNT1 = 0;
    34c8:	11 82       	std	Z+1, r1	; 0x01
    34ca:	10 82       	st	Z, r1
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
    34cc:	2b ed       	ldi	r18, 0xDB	; 219
    34ce:	3f e0       	ldi	r19, 0x0F	; 15
    34d0:	49 e4       	ldi	r20, 0x49	; 73
    34d2:	50 e4       	ldi	r21, 0x40	; 64
    34d4:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    34d8:	26 e6       	ldi	r18, 0x66	; 102
    34da:	36 e6       	ldi	r19, 0x66	; 102
    34dc:	46 e6       	ldi	r20, 0x66	; 102
    34de:	50 e4       	ldi	r21, 0x40	; 64
    34e0:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    34e4:	6b 01       	movw	r12, r22
    34e6:	7c 01       	movw	r14, r24
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
	TCNT1 = 0;
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
    34e8:	be 01       	movw	r22, r28
    34ea:	80 e0       	ldi	r24, 0x00	; 0
    34ec:	90 e0       	ldi	r25, 0x00	; 0
    34ee:	0e 94 d7 31 	call	0x63ae	; 0x63ae <__floatunsisf>
    34f2:	20 e0       	ldi	r18, 0x00	; 0
    34f4:	30 e0       	ldi	r19, 0x00	; 0
    34f6:	40 e0       	ldi	r20, 0x00	; 0
    34f8:	5e e3       	ldi	r21, 0x3E	; 62
    34fa:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    34fe:	2d eb       	ldi	r18, 0xBD	; 189
    3500:	37 e3       	ldi	r19, 0x37	; 55
    3502:	46 e8       	ldi	r20, 0x86	; 134
    3504:	5a e3       	ldi	r21, 0x3A	; 58
    3506:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    350a:	2a e0       	ldi	r18, 0x0A	; 10
    350c:	37 ed       	ldi	r19, 0xD7	; 215
    350e:	43 ea       	ldi	r20, 0xA3	; 163
    3510:	5b e3       	ldi	r21, 0x3B	; 59
    3512:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    3516:	9b 01       	movw	r18, r22
    3518:	ac 01       	movw	r20, r24
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
    351a:	c7 01       	movw	r24, r14
    351c:	b6 01       	movw	r22, r12
    351e:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
    3522:	20 91 32 03 	lds	r18, 0x0332
    3526:	30 91 33 03 	lds	r19, 0x0333
    352a:	40 91 34 03 	lds	r20, 0x0334
    352e:	50 91 35 03 	lds	r21, 0x0335
    3532:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
	geschw /= 2.0;
    3536:	20 e0       	ldi	r18, 0x00	; 0
    3538:	30 e0       	ldi	r19, 0x00	; 0
    353a:	40 e0       	ldi	r20, 0x00	; 0
    353c:	5f e3       	ldi	r21, 0x3F	; 63
    353e:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    3542:	6b 01       	movw	r12, r22
    3544:	7c 01       	movw	r14, r24
	if (geschw >=160)
    3546:	20 e0       	ldi	r18, 0x00	; 0
    3548:	30 e0       	ldi	r19, 0x00	; 0
    354a:	40 e2       	ldi	r20, 0x20	; 32
    354c:	53 e4       	ldi	r21, 0x43	; 67
    354e:	0e 94 e7 32 	call	0x65ce	; 0x65ce <__gesf2>
    3552:	88 23       	and	r24, r24
    3554:	4c f4       	brge	.+18     	; 0x3568 <_Z15geschwindigkeitf+0xb4>
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
	geschw /= 2.0;
    3556:	c0 92 32 03 	sts	0x0332, r12
    355a:	d0 92 33 03 	sts	0x0333, r13
    355e:	e0 92 34 03 	sts	0x0334, r14
    3562:	f0 92 35 03 	sts	0x0335, r15
    3566:	08 c0       	rjmp	.+16     	; 0x3578 <_Z15geschwindigkeitf+0xc4>
	if (geschw >=160)
	{
		geschw=0;
    3568:	10 92 32 03 	sts	0x0332, r1
    356c:	10 92 33 03 	sts	0x0333, r1
    3570:	10 92 34 03 	sts	0x0334, r1
    3574:	10 92 35 03 	sts	0x0335, r1
	}
}
    3578:	df 91       	pop	r29
    357a:	cf 91       	pop	r28
    357c:	ff 90       	pop	r15
    357e:	ef 90       	pop	r14
    3580:	df 90       	pop	r13
    3582:	cf 90       	pop	r12
    3584:	08 95       	ret

00003586 <_Z13reed_debouncePVhh>:

uint8_t reed_debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( (*port & (1 << pin)) )
    3586:	fc 01       	movw	r30, r24
    3588:	20 81       	ld	r18, Z
    358a:	30 e0       	ldi	r19, 0x00	; 0
    358c:	06 2e       	mov	r0, r22
    358e:	02 c0       	rjmp	.+4      	; 0x3594 <_Z13reed_debouncePVhh+0xe>
    3590:	35 95       	asr	r19
    3592:	27 95       	ror	r18
    3594:	0a 94       	dec	r0
    3596:	e2 f7       	brpl	.-8      	; 0x3590 <_Z13reed_debouncePVhh+0xa>
    3598:	20 ff       	sbrs	r18, 0
    359a:	16 c0       	rjmp	.+44     	; 0x35c8 <_Z13reed_debouncePVhh+0x42>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    359c:	ef e0       	ldi	r30, 0x0F	; 15
    359e:	f7 e2       	ldi	r31, 0x27	; 39
    35a0:	31 97       	sbiw	r30, 0x01	; 1
    35a2:	f1 f7       	brne	.-4      	; 0x35a0 <_Z13reed_debouncePVhh+0x1a>
    35a4:	00 c0       	rjmp	.+0      	; 0x35a6 <_Z13reed_debouncePVhh+0x20>
    35a6:	00 00       	nop
	{
		/* Pin wurde auf Masse gezogen, ms warten   */
		_delay_ms(REEDMS);
		if ( !(*port & (1 << pin)) )
    35a8:	fc 01       	movw	r30, r24
    35aa:	80 81       	ld	r24, Z
    35ac:	90 e0       	ldi	r25, 0x00	; 0
    35ae:	02 c0       	rjmp	.+4      	; 0x35b4 <_Z13reed_debouncePVhh+0x2e>
    35b0:	95 95       	asr	r25
    35b2:	87 95       	ror	r24
    35b4:	6a 95       	dec	r22
    35b6:	e2 f7       	brpl	.-8      	; 0x35b0 <_Z13reed_debouncePVhh+0x2a>
    35b8:	80 fd       	sbrc	r24, 0
    35ba:	08 c0       	rjmp	.+16     	; 0x35cc <_Z13reed_debouncePVhh+0x46>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    35bc:	f2 e0       	ldi	r31, 0x02	; 2
    35be:	fa 95       	dec	r31
    35c0:	f1 f7       	brne	.-4      	; 0x35be <_Z13reed_debouncePVhh+0x38>
    35c2:	00 c0       	rjmp	.+0      	; 0x35c4 <_Z13reed_debouncePVhh+0x3e>
		{
			/* Anwender Zeit zum Loslassen des Tasters geben */
			_delay_us(1);
			return 1;
    35c4:	81 e0       	ldi	r24, 0x01	; 1
    35c6:	08 95       	ret
		}
	}
	return 0;
    35c8:	80 e0       	ldi	r24, 0x00	; 0
    35ca:	08 95       	ret
    35cc:	80 e0       	ldi	r24, 0x00	; 0
}
    35ce:	08 95       	ret

000035d0 <_Z9inittimerh>:
		=> N=64 bei OCR1A=2604-1 bei f=24
		=> CS11 und CS10
*/

void inittimer(uint8_t stat){
	TCNT1 = 0;
    35d0:	10 92 85 00 	sts	0x0085, r1
    35d4:	10 92 84 00 	sts	0x0084, r1
	if (stat==1)
    35d8:	81 30       	cpi	r24, 0x01	; 1
    35da:	31 f4       	brne	.+12     	; 0x35e8 <_Z9inittimerh+0x18>
	{
		TIMSK1 = 0;
    35dc:	10 92 6f 00 	sts	0x006F, r1
		TCCR1B = ((1<<CS12) | (1<<CS10));
    35e0:	85 e0       	ldi	r24, 0x05	; 5
    35e2:	80 93 81 00 	sts	0x0081, r24
    35e6:	08 95       	ret
	}
	else if (stat==2)
    35e8:	82 30       	cpi	r24, 0x02	; 2
    35ea:	61 f4       	brne	.+24     	; 0x3604 <_Z9inittimerh+0x34>
	{
		OCR1A = 2603*2;
    35ec:	86 e5       	ldi	r24, 0x56	; 86
    35ee:	94 e1       	ldi	r25, 0x14	; 20
    35f0:	90 93 89 00 	sts	0x0089, r25
    35f4:	80 93 88 00 	sts	0x0088, r24
		TCCR1B = (1<<WGM12)|(1<<CS11)|(1<<CS10);
    35f8:	8b e0       	ldi	r24, 0x0B	; 11
    35fa:	80 93 81 00 	sts	0x0081, r24
		TIMSK1 = (1<<OCIE1A);
    35fe:	82 e0       	ldi	r24, 0x02	; 2
    3600:	80 93 6f 00 	sts	0x006F, r24
    3604:	08 95       	ret

00003606 <_Z15initialisierungv>:
         //Tasthandler
         eingabehandler(Tastatur.Taster());
    }
}

void initialisierung(){
    3606:	cf 93       	push	r28
    3608:	df 93       	push	r29
	//nullen der Flagregister
	rtc.interupts=0;
    360a:	10 92 57 10 	sts	0x1057, r1
	anzeige=0;
    360e:	10 92 3a 03 	sts	0x033A, r1
    3612:	10 92 39 03 	sts	0x0339, r1
	statusreg=0;
    3616:	10 92 38 03 	sts	0x0338, r1
	pos=0;
    361a:	10 92 37 03 	sts	0x0337, r1
	FPS=0;
    361e:	10 92 36 03 	sts	0x0336, r1
	//initialisieren des Zaehler fuer die Winkelgeschw sowie den Timer
	geschw=0;
    3622:	10 92 32 03 	sts	0x0332, r1
    3626:	10 92 33 03 	sts	0x0333, r1
    362a:	10 92 34 03 	sts	0x0334, r1
    362e:	10 92 35 03 	sts	0x0335, r1
	strecke = 0;
    3632:	10 92 2e 03 	sts	0x032E, r1
    3636:	10 92 2f 03 	sts	0x032F, r1
    363a:	10 92 30 03 	sts	0x0330, r1
    363e:	10 92 31 03 	sts	0x0331, r1
	maxgeschw = 0;
    3642:	10 92 2a 03 	sts	0x032A, r1
    3646:	10 92 2b 03 	sts	0x032B, r1
    364a:	10 92 2c 03 	sts	0x032C, r1
    364e:	10 92 2d 03 	sts	0x032D, r1
	Fahrtzeit = 0;
    3652:	10 92 26 03 	sts	0x0326, r1
    3656:	10 92 27 03 	sts	0x0327, r1
    365a:	10 92 28 03 	sts	0x0328, r1
    365e:	10 92 29 03 	sts	0x0329, r1
	inittimer(0);
    3662:	80 e0       	ldi	r24, 0x00	; 0
    3664:	b5 df       	rcall	.-150    	; 0x35d0 <_Z9inittimerh>
	//Tastatur inm Contruktor initialisiert
	//Eingang fuer den Reedkontak schalten mit internem Pullup
	DDRA |= ((1<<PORTA6));
    3666:	0e 9a       	sbi	0x01, 6	; 1
	PORTA |= (1<<PORTA6);
    3668:	16 9a       	sbi	0x02, 6	; 2
	//Display
	oled.InitializeDisplay();
    366a:	8e e3       	ldi	r24, 0x3E	; 62
    366c:	9c e0       	ldi	r25, 0x0C	; 12
    366e:	0e 94 ef 02 	call	0x5de	; 0x5de <_ZN7Display17InitializeDisplayEv>
	//initialisierung wird im konstruktor vorgenommen
	oled.clearFrame();
    3672:	8e e3       	ldi	r24, 0x3E	; 62
    3674:	9c e0       	ldi	r25, 0x0C	; 12
    3676:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
	//HMC5883L initialisieren
	//kompass.initialize_HMC5883L();
	//initialisierung wird im Konstruktor erledigt
	
	//ADC Initialisieren auf CH0
	ADMUX = (1<<REFS0);
    367a:	80 e4       	ldi	r24, 0x40	; 64
    367c:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
    3680:	ea e7       	ldi	r30, 0x7A	; 122
    3682:	f0 e0       	ldi	r31, 0x00	; 0
    3684:	83 e0       	ldi	r24, 0x03	; 3
    3686:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN);
    3688:	80 81       	ld	r24, Z
    368a:	80 68       	ori	r24, 0x80	; 128
    368c:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
    368e:	80 81       	ld	r24, Z
    3690:	80 64       	ori	r24, 0x40	; 64
    3692:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC) ) {}
    3694:	80 81       	ld	r24, Z
    3696:	86 fd       	sbrc	r24, 6
    3698:	fd cf       	rjmp	.-6      	; 0x3694 <_Z15initialisierungv+0x8e>
	(void) ADCW;
    369a:	80 91 78 00 	lds	r24, 0x0078
    369e:	90 91 79 00 	lds	r25, 0x0079
	//Wilkommensanzeige
	willkommenpage();
    36a2:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <_Z14willkommenpagev>
	//Uhreinstellungen
	//uhreinstellen();
	//*************************************************
	//Nur Test, damit es schneller geht beim Start
	rtc.Sekunden= 0;
    36a6:	cf e3       	ldi	r28, 0x3F	; 63
    36a8:	d0 e1       	ldi	r29, 0x10	; 16
    36aa:	1a 8a       	std	Y+18, r1	; 0x12
	rtc.Minuten	= EEPROM_Read(EEMINUTEN);
    36ac:	80 e0       	ldi	r24, 0x00	; 0
    36ae:	90 e0       	ldi	r25, 0x00	; 0
    36b0:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <_Z11EEPROM_Readj>
    36b4:	89 8b       	std	Y+17, r24	; 0x11
	rtc.Stunden	= EEPROM_Read(EESTUNDEN);
    36b6:	81 e0       	ldi	r24, 0x01	; 1
    36b8:	90 e0       	ldi	r25, 0x00	; 0
    36ba:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <_Z11EEPROM_Readj>
    36be:	88 8b       	std	Y+16, r24	; 0x10
	rtc.Tag		= EEPROM_Read(EETAGE);
    36c0:	82 e0       	ldi	r24, 0x02	; 2
    36c2:	90 e0       	ldi	r25, 0x00	; 0
    36c4:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <_Z11EEPROM_Readj>
    36c8:	8c 8b       	std	Y+20, r24	; 0x14
	rtc.Monat	= EEPROM_Read(EEMONAT);
    36ca:	83 e0       	ldi	r24, 0x03	; 3
    36cc:	90 e0       	ldi	r25, 0x00	; 0
    36ce:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <_Z11EEPROM_Readj>
    36d2:	8e 8b       	std	Y+22, r24	; 0x16
	rtc.Jahr	= EEPROM_Read(EEJAHR);
    36d4:	84 e0       	ldi	r24, 0x04	; 4
    36d6:	90 e0       	ldi	r25, 0x00	; 0
    36d8:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <_Z11EEPROM_Readj>
    36dc:	8f 8b       	std	Y+23, r24	; 0x17
	rtc.ausgabedatumneu();
    36de:	ce 01       	movw	r24, r28
    36e0:	0e 94 2f 2f 	call	0x5e5e	; 0x5e5e <_ZN3RTC15ausgabedatumneuEv>
	//rtc.dummyeinst();
	//*********************************
	rtc.RTCstart();
    36e4:	ce 01       	movw	r24, r28
    36e6:	0e 94 10 30 	call	0x6020	; 0x6020 <_ZN3RTC8RTCstartEv>
	//ausgabe starten
	rtc.interupts|=(0<<minuteninterupt)|(0<<sekundeninterupt);
	inittimer(2);
    36ea:	82 e0       	ldi	r24, 0x02	; 2
    36ec:	71 df       	rcall	.-286    	; 0x35d0 <_Z9inittimerh>
	anzeige|=(1<<Uhrflag);
    36ee:	80 91 39 03 	lds	r24, 0x0339
    36f2:	90 91 3a 03 	lds	r25, 0x033A
    36f6:	82 60       	ori	r24, 0x02	; 2
    36f8:	90 93 3a 03 	sts	0x033A, r25
    36fc:	80 93 39 03 	sts	0x0339, r24
	sei();
    3700:	78 94       	sei
}
    3702:	df 91       	pop	r29
    3704:	cf 91       	pop	r28
    3706:	08 95       	ret

00003708 <_Z19maininterupthandlerv>:
	//interupt dierekt aus der rtc
	//if((rtc.interupts & (1<<hundinterupt))){
	//rtc.zeit();
	//rtc.interupts&=~(1<<hundinterupt);
	//}
	if ((anzeige&(1<<Fahradflag)))
    3708:	80 91 39 03 	lds	r24, 0x0339
    370c:	80 ff       	sbrs	r24, 0
    370e:	1f c0       	rjmp	.+62     	; 0x374e <_Z19maininterupthandlerv+0x46>
	{
		//debounce Funktion fuer den Reedswitch
		if (reed_debounce(&PINA,PINA7))
    3710:	67 e0       	ldi	r22, 0x07	; 7
    3712:	80 e2       	ldi	r24, 0x20	; 32
    3714:	90 e0       	ldi	r25, 0x00	; 0
    3716:	37 df       	rcall	.-402    	; 0x3586 <_Z13reed_debouncePVhh>
    3718:	88 23       	and	r24, r24
    371a:	31 f0       	breq	.+12     	; 0x3728 <_Z19maininterupthandlerv+0x20>
		{
			//Durchmesser ist 28 Zoll
			geschwindigkeit(28.0*2.54/100.0);
    371c:	63 e3       	ldi	r22, 0x33	; 51
    371e:	71 e1       	ldi	r23, 0x11	; 17
    3720:	86 e3       	ldi	r24, 0x36	; 54
    3722:	9f e3       	ldi	r25, 0x3F	; 63
    3724:	c7 de       	rcall	.-626    	; 0x34b4 <_Z15geschwindigkeitf>
    3726:	13 c0       	rjmp	.+38     	; 0x374e <_Z19maininterupthandlerv+0x46>
		}
		//Hier mit werden geschwindigkeiten, die kleiner als 2.6km/h betragen gefiltert
		//Somit wird die letzte Geschwindigkeit nach 3 Sekunden geloescht
		//Das ist noch nicht die beste Variante
		else if (TCNT1>23437)
    3728:	80 91 84 00 	lds	r24, 0x0084
    372c:	90 91 85 00 	lds	r25, 0x0085
    3730:	8e 38       	cpi	r24, 0x8E	; 142
    3732:	9b 45       	sbci	r25, 0x5B	; 91
    3734:	60 f0       	brcs	.+24     	; 0x374e <_Z19maininterupthandlerv+0x46>
		{
			TCNT1=0;
    3736:	10 92 85 00 	sts	0x0085, r1
    373a:	10 92 84 00 	sts	0x0084, r1
			geschw=0;
    373e:	10 92 32 03 	sts	0x0332, r1
    3742:	10 92 33 03 	sts	0x0333, r1
    3746:	10 92 34 03 	sts	0x0334, r1
    374a:	10 92 35 03 	sts	0x0335, r1
		}
	}
	if ((rtc.interupts&(1<<Weckeractiv)))
    374e:	80 91 57 10 	lds	r24, 0x1057
    3752:	98 2f       	mov	r25, r24
    3754:	98 71       	andi	r25, 0x18	; 24
	{
		if ((rtc.interupts&(1<<Weckerein)))
    3756:	98 31       	cpi	r25, 0x18	; 24
    3758:	61 f4       	brne	.+24     	; 0x3772 <_Z19maininterupthandlerv+0x6a>
		{
			anzeige |= (1<<blinkflag) | (1<<refreshdisplay);
    375a:	20 91 39 03 	lds	r18, 0x0339
    375e:	30 91 3a 03 	lds	r19, 0x033A
    3762:	30 6c       	ori	r19, 0xC0	; 192
    3764:	30 93 3a 03 	sts	0x033A, r19
    3768:	20 93 39 03 	sts	0x0339, r18
			rtc.interupts &= ~(1<<Weckerein);
    376c:	87 7f       	andi	r24, 0xF7	; 247
    376e:	80 93 57 10 	sts	0x1057, r24
    3772:	08 95       	ret

00003774 <_Z14anzeigehandlerv>:
		}
	}
}

void anzeigehandler(){
    3774:	4f 92       	push	r4
    3776:	5f 92       	push	r5
    3778:	6f 92       	push	r6
    377a:	7f 92       	push	r7
    377c:	af 92       	push	r10
    377e:	bf 92       	push	r11
    3780:	cf 92       	push	r12
    3782:	df 92       	push	r13
    3784:	ef 92       	push	r14
    3786:	ff 92       	push	r15
    3788:	0f 93       	push	r16
    378a:	1f 93       	push	r17
    378c:	cf 93       	push	r28
    378e:	df 93       	push	r29
	//Handler fuer 1Hz Flag
	if ((statusreg&(1<<updaterate)))
    3790:	80 91 38 03 	lds	r24, 0x0338
    3794:	80 ff       	sbrs	r24, 0
    3796:	88 c0       	rjmp	.+272    	; 0x38a8 <_Z14anzeigehandlerv+0x134>
	{
		FPS++;
    3798:	80 91 36 03 	lds	r24, 0x0336
    379c:	8f 5f       	subi	r24, 0xFF	; 255
    379e:	80 93 36 03 	sts	0x0336, r24
		if ((anzeige&(1<<Kompasflag)))
    37a2:	80 91 39 03 	lds	r24, 0x0339
    37a6:	90 91 3a 03 	lds	r25, 0x033A
    37aa:	87 ff       	sbrs	r24, 7
    37ac:	1e c0       	rjmp	.+60     	; 0x37ea <_Z14anzeigehandlerv+0x76>
		{
			Accelerometer.readacc();
    37ae:	81 e4       	ldi	r24, 0x41	; 65
    37b0:	9b e0       	ldi	r25, 0x0B	; 11
    37b2:	0e 94 ae 29 	call	0x535c	; 0x535c <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    37b6:	e1 e4       	ldi	r30, 0x41	; 65
    37b8:	fb e0       	ldi	r31, 0x0B	; 11
    37ba:	04 85       	ldd	r16, Z+12	; 0x0c
    37bc:	15 85       	ldd	r17, Z+13	; 0x0d
    37be:	26 85       	ldd	r18, Z+14	; 0x0e
    37c0:	37 85       	ldd	r19, Z+15	; 0x0f
    37c2:	40 85       	ldd	r20, Z+8	; 0x08
    37c4:	51 85       	ldd	r21, Z+9	; 0x09
    37c6:	62 85       	ldd	r22, Z+10	; 0x0a
    37c8:	73 85       	ldd	r23, Z+11	; 0x0b
    37ca:	8e e5       	ldi	r24, 0x5E	; 94
    37cc:	90 e1       	ldi	r25, 0x10	; 16
    37ce:	0e 94 5a 28 	call	0x50b4	; 0x50b4 <_ZN7Kompass5angleEdd>
    37d2:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    37d6:	80 91 39 03 	lds	r24, 0x0339
    37da:	90 91 3a 03 	lds	r25, 0x033A
    37de:	90 68       	ori	r25, 0x80	; 128
    37e0:	90 93 3a 03 	sts	0x033A, r25
    37e4:	80 93 39 03 	sts	0x0339, r24
    37e8:	5a c0       	rjmp	.+180    	; 0x389e <_Z14anzeigehandlerv+0x12a>
		}
		else if ((anzeige&(1<<Fahradflag)))
    37ea:	80 ff       	sbrs	r24, 0
    37ec:	4a c0       	rjmp	.+148    	; 0x3882 <_Z14anzeigehandlerv+0x10e>
		{
			Accelerometer.readacc();
    37ee:	81 e4       	ldi	r24, 0x41	; 65
    37f0:	9b e0       	ldi	r25, 0x0B	; 11
    37f2:	0e 94 ae 29 	call	0x535c	; 0x535c <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    37f6:	e0 90 26 03 	lds	r14, 0x0326
    37fa:	f0 90 27 03 	lds	r15, 0x0327
    37fe:	c0 91 28 03 	lds	r28, 0x0328
    3802:	d0 91 29 03 	lds	r29, 0x0329
    3806:	a0 90 2a 03 	lds	r10, 0x032A
    380a:	b0 90 2b 03 	lds	r11, 0x032B
    380e:	c0 90 2c 03 	lds	r12, 0x032C
    3812:	d0 90 2d 03 	lds	r13, 0x032D
    3816:	40 90 2e 03 	lds	r4, 0x032E
    381a:	50 90 2f 03 	lds	r5, 0x032F
    381e:	60 90 30 03 	lds	r6, 0x0330
    3822:	70 90 31 03 	lds	r7, 0x0331
    3826:	e1 e4       	ldi	r30, 0x41	; 65
    3828:	fb e0       	ldi	r31, 0x0B	; 11
    382a:	04 85       	ldd	r16, Z+12	; 0x0c
    382c:	15 85       	ldd	r17, Z+13	; 0x0d
    382e:	26 85       	ldd	r18, Z+14	; 0x0e
    3830:	37 85       	ldd	r19, Z+15	; 0x0f
    3832:	40 85       	ldd	r20, Z+8	; 0x08
    3834:	51 85       	ldd	r21, Z+9	; 0x09
    3836:	62 85       	ldd	r22, Z+10	; 0x0a
    3838:	73 85       	ldd	r23, Z+11	; 0x0b
    383a:	8e e5       	ldi	r24, 0x5E	; 94
    383c:	90 e1       	ldi	r25, 0x10	; 16
    383e:	0e 94 5a 28 	call	0x50b4	; 0x50b4 <_ZN7Kompass5angleEdd>
    3842:	9b 01       	movw	r18, r22
    3844:	ac 01       	movw	r20, r24
    3846:	60 91 32 03 	lds	r22, 0x0332
    384a:	70 91 33 03 	lds	r23, 0x0333
    384e:	80 91 34 03 	lds	r24, 0x0334
    3852:	90 91 35 03 	lds	r25, 0x0335
    3856:	df 93       	push	r29
    3858:	cf 93       	push	r28
    385a:	ff 92       	push	r15
    385c:	ef 92       	push	r14
    385e:	83 01       	movw	r16, r6
    3860:	72 01       	movw	r14, r4
    3862:	0e 94 92 10 	call	0x2124	; 0x2124 <_Z12fahradschirmddddm>
			//fahradschirm(geschw,kompass.angle(0,0),strecke,maxgeschw, Fahrtzeit);
			anzeige|=(1<<refreshdisplay);
    3866:	80 91 39 03 	lds	r24, 0x0339
    386a:	90 91 3a 03 	lds	r25, 0x033A
    386e:	90 68       	ori	r25, 0x80	; 128
    3870:	90 93 3a 03 	sts	0x033A, r25
    3874:	80 93 39 03 	sts	0x0339, r24
    3878:	0f 90       	pop	r0
    387a:	0f 90       	pop	r0
    387c:	0f 90       	pop	r0
    387e:	0f 90       	pop	r0
    3880:	0e c0       	rjmp	.+28     	; 0x389e <_Z14anzeigehandlerv+0x12a>
		}
		else if ((anzeige&(1<<Wanderflag))&&!(anzeige&(1<<Einstellungsflag)))
    3882:	93 ff       	sbrs	r25, 3
    3884:	0c c0       	rjmp	.+24     	; 0x389e <_Z14anzeigehandlerv+0x12a>
    3886:	94 fd       	sbrc	r25, 4
    3888:	0a c0       	rjmp	.+20     	; 0x389e <_Z14anzeigehandlerv+0x12a>
		{
			Wanderseite();
    388a:	b9 d8       	rcall	.-3726   	; 0x29fe <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    388c:	80 91 39 03 	lds	r24, 0x0339
    3890:	90 91 3a 03 	lds	r25, 0x033A
    3894:	90 68       	ori	r25, 0x80	; 128
    3896:	90 93 3a 03 	sts	0x033A, r25
    389a:	80 93 39 03 	sts	0x0339, r24
		}
		statusreg &= ~(1<<updaterate);
    389e:	80 91 38 03 	lds	r24, 0x0338
    38a2:	8e 7f       	andi	r24, 0xFE	; 254
    38a4:	80 93 38 03 	sts	0x0338, r24
	}
	if ((rtc.interupts & (1<<sekundeninterupt)))
    38a8:	80 91 57 10 	lds	r24, 0x1057
    38ac:	81 ff       	sbrs	r24, 1
    38ae:	c5 c1       	rjmp	.+906    	; 0x3c3a <_Z14anzeigehandlerv+0x4c6>
	{
		rtc.zeit();
    38b0:	8f e3       	ldi	r24, 0x3F	; 63
    38b2:	90 e1       	ldi	r25, 0x10	; 16
    38b4:	0e 94 d5 2f 	call	0x5faa	; 0x5faa <_ZN3RTC4zeitEv>
		//Handler fuer die Anzeige der Seiten
		//Die einzelnen Funktionen beschreiben nur den Framebuffer und nicht dierekt das Display
		if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))
    38b8:	80 91 39 03 	lds	r24, 0x0339
    38bc:	90 91 3a 03 	lds	r25, 0x033A
    38c0:	9c 01       	movw	r18, r24
    38c2:	22 70       	andi	r18, 0x02	; 2
    38c4:	30 72       	andi	r19, 0x20	; 32
    38c6:	22 30       	cpi	r18, 0x02	; 2
    38c8:	30 42       	sbci	r19, 0x20	; 32
    38ca:	61 f4       	brne	.+24     	; 0x38e4 <_Z14anzeigehandlerv+0x170>
		{
			menue_uhr();
    38cc:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <_Z9menue_uhrv>
			anzeige|=(1<<refreshdisplay);
    38d0:	80 91 39 03 	lds	r24, 0x0339
    38d4:	90 91 3a 03 	lds	r25, 0x033A
    38d8:	90 68       	ori	r25, 0x80	; 128
    38da:	90 93 3a 03 	sts	0x033A, r25
    38de:	80 93 39 03 	sts	0x0339, r24
    38e2:	8f c1       	rjmp	.+798    	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
    38e4:	9c 01       	movw	r18, r24
    38e6:	22 27       	eor	r18, r18
    38e8:	30 73       	andi	r19, 0x30	; 48
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))
    38ea:	21 15       	cp	r18, r1
    38ec:	30 43       	sbci	r19, 0x30	; 48
    38ee:	61 f4       	brne	.+24     	; 0x3908 <_Z14anzeigehandlerv+0x194>
		{
			menue_einst();
    38f0:	0e 94 66 0d 	call	0x1acc	; 0x1acc <_Z11menue_einstv>
			anzeige|=(1<<refreshdisplay);
    38f4:	80 91 39 03 	lds	r24, 0x0339
    38f8:	90 91 3a 03 	lds	r25, 0x033A
    38fc:	90 68       	ori	r25, 0x80	; 128
    38fe:	90 93 3a 03 	sts	0x033A, r25
    3902:	80 93 39 03 	sts	0x0339, r24
    3906:	7d c1       	rjmp	.+762    	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<menueflag)))
    3908:	95 ff       	sbrs	r25, 5
    390a:	0c c0       	rjmp	.+24     	; 0x3924 <_Z14anzeigehandlerv+0x1b0>
		{
			menue_haupt();
    390c:	0e 94 a9 0c 	call	0x1952	; 0x1952 <_Z11menue_hauptv>
			anzeige|=(1<<refreshdisplay);
    3910:	80 91 39 03 	lds	r24, 0x0339
    3914:	90 91 3a 03 	lds	r25, 0x033A
    3918:	90 68       	ori	r25, 0x80	; 128
    391a:	90 93 3a 03 	sts	0x033A, r25
    391e:	80 93 39 03 	sts	0x0339, r24
    3922:	6f c1       	rjmp	.+734    	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3924:	91 ff       	sbrs	r25, 1
    3926:	0c c0       	rjmp	.+24     	; 0x3940 <_Z14anzeigehandlerv+0x1cc>
		{
			Gaineinstellen();
    3928:	0e 94 0e 12 	call	0x241c	; 0x241c <_Z14Gaineinstellenv>
			anzeige|=(1<<refreshdisplay);
    392c:	80 91 39 03 	lds	r24, 0x0339
    3930:	90 91 3a 03 	lds	r25, 0x033A
    3934:	90 68       	ori	r25, 0x80	; 128
    3936:	90 93 3a 03 	sts	0x033A, r25
    393a:	80 93 39 03 	sts	0x0339, r24
    393e:	61 c1       	rjmp	.+706    	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Uhrflag)))
    3940:	81 ff       	sbrs	r24, 1
    3942:	0c c0       	rjmp	.+24     	; 0x395c <_Z14anzeigehandlerv+0x1e8>
		{
			uhranzeigen();
    3944:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <_Z11uhranzeigenv>
			anzeige|=(1<<refreshdisplay);
    3948:	80 91 39 03 	lds	r24, 0x0339
    394c:	90 91 3a 03 	lds	r25, 0x033A
    3950:	90 68       	ori	r25, 0x80	; 128
    3952:	90 93 3a 03 	sts	0x033A, r25
    3956:	80 93 39 03 	sts	0x0339, r24
    395a:	53 c1       	rjmp	.+678    	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Kompasflag)))
    395c:	87 ff       	sbrs	r24, 7
    395e:	1e c0       	rjmp	.+60     	; 0x399c <_Z14anzeigehandlerv+0x228>
		{
			Accelerometer.readacc();
    3960:	81 e4       	ldi	r24, 0x41	; 65
    3962:	9b e0       	ldi	r25, 0x0B	; 11
    3964:	0e 94 ae 29 	call	0x535c	; 0x535c <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    3968:	e1 e4       	ldi	r30, 0x41	; 65
    396a:	fb e0       	ldi	r31, 0x0B	; 11
    396c:	04 85       	ldd	r16, Z+12	; 0x0c
    396e:	15 85       	ldd	r17, Z+13	; 0x0d
    3970:	26 85       	ldd	r18, Z+14	; 0x0e
    3972:	37 85       	ldd	r19, Z+15	; 0x0f
    3974:	40 85       	ldd	r20, Z+8	; 0x08
    3976:	51 85       	ldd	r21, Z+9	; 0x09
    3978:	62 85       	ldd	r22, Z+10	; 0x0a
    397a:	73 85       	ldd	r23, Z+11	; 0x0b
    397c:	8e e5       	ldi	r24, 0x5E	; 94
    397e:	90 e1       	ldi	r25, 0x10	; 16
    3980:	0e 94 5a 28 	call	0x50b4	; 0x50b4 <_ZN7Kompass5angleEdd>
    3984:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    3988:	80 91 39 03 	lds	r24, 0x0339
    398c:	90 91 3a 03 	lds	r25, 0x033A
    3990:	90 68       	ori	r25, 0x80	; 128
    3992:	90 93 3a 03 	sts	0x033A, r25
    3996:	80 93 39 03 	sts	0x0339, r24
    399a:	33 c1       	rjmp	.+614    	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Fahradflag)))
    399c:	80 ff       	sbrs	r24, 0
    399e:	a1 c0       	rjmp	.+322    	; 0x3ae2 <_Z14anzeigehandlerv+0x36e>
		{
			if (geschw>maxgeschw)
    39a0:	c0 90 32 03 	lds	r12, 0x0332
    39a4:	d0 90 33 03 	lds	r13, 0x0333
    39a8:	e0 90 34 03 	lds	r14, 0x0334
    39ac:	f0 90 35 03 	lds	r15, 0x0335
    39b0:	20 91 2a 03 	lds	r18, 0x032A
    39b4:	30 91 2b 03 	lds	r19, 0x032B
    39b8:	40 91 2c 03 	lds	r20, 0x032C
    39bc:	50 91 2d 03 	lds	r21, 0x032D
    39c0:	c7 01       	movw	r24, r14
    39c2:	b6 01       	movw	r22, r12
    39c4:	0e 94 e7 32 	call	0x65ce	; 0x65ce <__gesf2>
    39c8:	18 16       	cp	r1, r24
    39ca:	44 f4       	brge	.+16     	; 0x39dc <_Z14anzeigehandlerv+0x268>
			{
				maxgeschw=geschw;
    39cc:	c0 92 2a 03 	sts	0x032A, r12
    39d0:	d0 92 2b 03 	sts	0x032B, r13
    39d4:	e0 92 2c 03 	sts	0x032C, r14
    39d8:	f0 92 2d 03 	sts	0x032D, r15
			}
			if (geschw >= 1.0)
    39dc:	20 e0       	ldi	r18, 0x00	; 0
    39de:	30 e0       	ldi	r19, 0x00	; 0
    39e0:	40 e8       	ldi	r20, 0x80	; 128
    39e2:	5f e3       	ldi	r21, 0x3F	; 63
    39e4:	c7 01       	movw	r24, r14
    39e6:	b6 01       	movw	r22, r12
    39e8:	0e 94 e7 32 	call	0x65ce	; 0x65ce <__gesf2>
    39ec:	88 23       	and	r24, r24
    39ee:	9c f0       	brlt	.+38     	; 0x3a16 <_Z14anzeigehandlerv+0x2a2>
			{
				Fahrtzeit++;
    39f0:	80 91 26 03 	lds	r24, 0x0326
    39f4:	90 91 27 03 	lds	r25, 0x0327
    39f8:	a0 91 28 03 	lds	r26, 0x0328
    39fc:	b0 91 29 03 	lds	r27, 0x0329
    3a00:	01 96       	adiw	r24, 0x01	; 1
    3a02:	a1 1d       	adc	r26, r1
    3a04:	b1 1d       	adc	r27, r1
    3a06:	80 93 26 03 	sts	0x0326, r24
    3a0a:	90 93 27 03 	sts	0x0327, r25
    3a0e:	a0 93 28 03 	sts	0x0328, r26
    3a12:	b0 93 29 03 	sts	0x0329, r27
			}
			strecke+=geschw/3.6;
    3a16:	26 e6       	ldi	r18, 0x66	; 102
    3a18:	36 e6       	ldi	r19, 0x66	; 102
    3a1a:	46 e6       	ldi	r20, 0x66	; 102
    3a1c:	50 e4       	ldi	r21, 0x40	; 64
    3a1e:	c7 01       	movw	r24, r14
    3a20:	b6 01       	movw	r22, r12
    3a22:	0e 94 3e 31 	call	0x627c	; 0x627c <__divsf3>
    3a26:	9b 01       	movw	r18, r22
    3a28:	ac 01       	movw	r20, r24
    3a2a:	60 91 2e 03 	lds	r22, 0x032E
    3a2e:	70 91 2f 03 	lds	r23, 0x032F
    3a32:	80 91 30 03 	lds	r24, 0x0330
    3a36:	90 91 31 03 	lds	r25, 0x0331
    3a3a:	0e 94 71 30 	call	0x60e2	; 0x60e2 <__addsf3>
    3a3e:	60 93 2e 03 	sts	0x032E, r22
    3a42:	70 93 2f 03 	sts	0x032F, r23
    3a46:	80 93 30 03 	sts	0x0330, r24
    3a4a:	90 93 31 03 	sts	0x0331, r25
			Accelerometer.readacc();
    3a4e:	81 e4       	ldi	r24, 0x41	; 65
    3a50:	9b e0       	ldi	r25, 0x0B	; 11
    3a52:	0e 94 ae 29 	call	0x535c	; 0x535c <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    3a56:	e0 90 26 03 	lds	r14, 0x0326
    3a5a:	f0 90 27 03 	lds	r15, 0x0327
    3a5e:	c0 91 28 03 	lds	r28, 0x0328
    3a62:	d0 91 29 03 	lds	r29, 0x0329
    3a66:	a0 90 2a 03 	lds	r10, 0x032A
    3a6a:	b0 90 2b 03 	lds	r11, 0x032B
    3a6e:	c0 90 2c 03 	lds	r12, 0x032C
    3a72:	d0 90 2d 03 	lds	r13, 0x032D
    3a76:	40 90 2e 03 	lds	r4, 0x032E
    3a7a:	50 90 2f 03 	lds	r5, 0x032F
    3a7e:	60 90 30 03 	lds	r6, 0x0330
    3a82:	70 90 31 03 	lds	r7, 0x0331
    3a86:	e1 e4       	ldi	r30, 0x41	; 65
    3a88:	fb e0       	ldi	r31, 0x0B	; 11
    3a8a:	04 85       	ldd	r16, Z+12	; 0x0c
    3a8c:	15 85       	ldd	r17, Z+13	; 0x0d
    3a8e:	26 85       	ldd	r18, Z+14	; 0x0e
    3a90:	37 85       	ldd	r19, Z+15	; 0x0f
    3a92:	40 85       	ldd	r20, Z+8	; 0x08
    3a94:	51 85       	ldd	r21, Z+9	; 0x09
    3a96:	62 85       	ldd	r22, Z+10	; 0x0a
    3a98:	73 85       	ldd	r23, Z+11	; 0x0b
    3a9a:	8e e5       	ldi	r24, 0x5E	; 94
    3a9c:	90 e1       	ldi	r25, 0x10	; 16
    3a9e:	0e 94 5a 28 	call	0x50b4	; 0x50b4 <_ZN7Kompass5angleEdd>
    3aa2:	9b 01       	movw	r18, r22
    3aa4:	ac 01       	movw	r20, r24
    3aa6:	60 91 32 03 	lds	r22, 0x0332
    3aaa:	70 91 33 03 	lds	r23, 0x0333
    3aae:	80 91 34 03 	lds	r24, 0x0334
    3ab2:	90 91 35 03 	lds	r25, 0x0335
    3ab6:	df 93       	push	r29
    3ab8:	cf 93       	push	r28
    3aba:	ff 92       	push	r15
    3abc:	ef 92       	push	r14
    3abe:	83 01       	movw	r16, r6
    3ac0:	72 01       	movw	r14, r4
    3ac2:	0e 94 92 10 	call	0x2124	; 0x2124 <_Z12fahradschirmddddm>
			//Fuer Testzwecke entfernt um neue Methode zu testen, siehe Oben
			//if (rtc.Sekunden%2)
			//{
				//geschw=0;
			//}
			anzeige|=(1<<refreshdisplay);
    3ac6:	80 91 39 03 	lds	r24, 0x0339
    3aca:	90 91 3a 03 	lds	r25, 0x033A
    3ace:	90 68       	ori	r25, 0x80	; 128
    3ad0:	90 93 3a 03 	sts	0x033A, r25
    3ad4:	80 93 39 03 	sts	0x0339, r24
    3ad8:	0f 90       	pop	r0
    3ada:	0f 90       	pop	r0
    3adc:	0f 90       	pop	r0
    3ade:	0f 90       	pop	r0
    3ae0:	90 c0       	rjmp	.+288    	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    3ae2:	83 ff       	sbrs	r24, 3
    3ae4:	0c c0       	rjmp	.+24     	; 0x3afe <_Z14anzeigehandlerv+0x38a>
		{
			Stoppuhrseite();
    3ae6:	0e 94 43 14 	call	0x2886	; 0x2886 <_Z13Stoppuhrseitev>
			anzeige|=(1<<refreshdisplay);
    3aea:	80 91 39 03 	lds	r24, 0x0339
    3aee:	90 91 3a 03 	lds	r25, 0x033A
    3af2:	90 68       	ori	r25, 0x80	; 128
    3af4:	90 93 3a 03 	sts	0x033A, r25
    3af8:	80 93 39 03 	sts	0x0339, r24
    3afc:	82 c0       	rjmp	.+260    	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Timerflag)))
    3afe:	82 ff       	sbrs	r24, 2
    3b00:	18 c0       	rjmp	.+48     	; 0x3b32 <_Z14anzeigehandlerv+0x3be>
		{
			if (rtc.interupts&(1<<Alarm))
    3b02:	20 91 57 10 	lds	r18, 0x1057
    3b06:	20 ff       	sbrs	r18, 0
    3b08:	08 c0       	rjmp	.+16     	; 0x3b1a <_Z14anzeigehandlerv+0x3a6>
			{
				anzeige |= (1<<blinkflag);
    3b0a:	90 64       	ori	r25, 0x40	; 64
    3b0c:	90 93 3a 03 	sts	0x033A, r25
    3b10:	80 93 39 03 	sts	0x0339, r24
				rtc.interupts &= ~(1<<Alarm);
    3b14:	2e 7f       	andi	r18, 0xFE	; 254
    3b16:	20 93 57 10 	sts	0x1057, r18
			}
			timerseite();
    3b1a:	0e 94 7c 13 	call	0x26f8	; 0x26f8 <_Z10timerseitev>
			anzeige|=(1<<refreshdisplay);
    3b1e:	80 91 39 03 	lds	r24, 0x0339
    3b22:	90 91 3a 03 	lds	r25, 0x033A
    3b26:	90 68       	ori	r25, 0x80	; 128
    3b28:	90 93 3a 03 	sts	0x033A, r25
    3b2c:	80 93 39 03 	sts	0x0339, r24
    3b30:	68 c0       	rjmp	.+208    	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Druckflag)))
    3b32:	92 ff       	sbrs	r25, 2
    3b34:	10 c0       	rjmp	.+32     	; 0x3b56 <_Z14anzeigehandlerv+0x3e2>
		{
			gol.iteration();
    3b36:	8f e3       	ldi	r24, 0x3F	; 63
    3b38:	93 e0       	ldi	r25, 0x03	; 3
    3b3a:	0e 94 a9 25 	call	0x4b52	; 0x4b52 <_ZN3GOL9iterationEv>
			GOL_seite();
    3b3e:	0e 94 9d 0c 	call	0x193a	; 0x193a <_Z9GOL_seitev>
			anzeige |= (1<<refreshdisplay);
    3b42:	80 91 39 03 	lds	r24, 0x0339
    3b46:	90 91 3a 03 	lds	r25, 0x033A
    3b4a:	90 68       	ori	r25, 0x80	; 128
    3b4c:	90 93 3a 03 	sts	0x033A, r25
    3b50:	80 93 39 03 	sts	0x0339, r24
    3b54:	56 c0       	rjmp	.+172    	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Einstellungsflag)&&(anzeige&(1<<Wanderflag))))
    3b56:	ac 01       	movw	r20, r24
    3b58:	44 27       	eor	r20, r20
    3b5a:	58 70       	andi	r21, 0x08	; 8
    3b5c:	9c 01       	movw	r18, r24
    3b5e:	22 27       	eor	r18, r18
    3b60:	38 71       	andi	r19, 0x18	; 24
    3b62:	21 15       	cp	r18, r1
    3b64:	38 41       	sbci	r19, 0x18	; 24
    3b66:	41 f5       	brne	.+80     	; 0x3bb8 <_Z14anzeigehandlerv+0x444>
		{
			if (pos<7)
    3b68:	80 91 37 03 	lds	r24, 0x0337
    3b6c:	87 30       	cpi	r24, 0x07	; 7
    3b6e:	18 f4       	brcc	.+6      	; 0x3b76 <_Z14anzeigehandlerv+0x402>
			{
				pos--;
    3b70:	81 50       	subi	r24, 0x01	; 1
    3b72:	80 93 37 03 	sts	0x0337, r24
			}
			if (pos<6)
    3b76:	80 91 37 03 	lds	r24, 0x0337
    3b7a:	86 30       	cpi	r24, 0x06	; 6
    3b7c:	20 f4       	brcc	.+8      	; 0x3b86 <_Z14anzeigehandlerv+0x412>
			{
				Accelerometer.get_gravity();
    3b7e:	81 e4       	ldi	r24, 0x41	; 65
    3b80:	9b e0       	ldi	r25, 0x0B	; 11
    3b82:	0e 94 71 2b 	call	0x56e2	; 0x56e2 <_ZN7LSM303D11get_gravityEv>
			}
			if (pos==0)
    3b86:	80 91 37 03 	lds	r24, 0x0337
    3b8a:	81 11       	cpse	r24, r1
    3b8c:	09 c0       	rjmp	.+18     	; 0x3ba0 <_Z14anzeigehandlerv+0x42c>
			{
				anzeige &= ~(1<<Einstellungsflag);
    3b8e:	80 91 39 03 	lds	r24, 0x0339
    3b92:	90 91 3a 03 	lds	r25, 0x033A
    3b96:	9f 7e       	andi	r25, 0xEF	; 239
    3b98:	90 93 3a 03 	sts	0x033A, r25
    3b9c:	80 93 39 03 	sts	0x0339, r24
			}
			find_gravity();
    3ba0:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <_Z12find_gravityv>
			anzeige |= (1<<refreshdisplay);
    3ba4:	80 91 39 03 	lds	r24, 0x0339
    3ba8:	90 91 3a 03 	lds	r25, 0x033A
    3bac:	90 68       	ori	r25, 0x80	; 128
    3bae:	90 93 3a 03 	sts	0x033A, r25
    3bb2:	80 93 39 03 	sts	0x0339, r24
    3bb6:	25 c0       	rjmp	.+74     	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Wanderflag)))
    3bb8:	45 2b       	or	r20, r21
    3bba:	99 f0       	breq	.+38     	; 0x3be2 <_Z14anzeigehandlerv+0x46e>
		{
			Accelerometer.schritt(rtc.Sekunden%2);
    3bbc:	60 91 51 10 	lds	r22, 0x1051
    3bc0:	61 70       	andi	r22, 0x01	; 1
    3bc2:	81 e4       	ldi	r24, 0x41	; 65
    3bc4:	9b e0       	ldi	r25, 0x0B	; 11
    3bc6:	0e 94 d3 2b 	call	0x57a6	; 0x57a6 <_ZN7LSM303D7schrittEh>
			Wanderseite();
    3bca:	0e 94 ff 14 	call	0x29fe	; 0x29fe <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    3bce:	80 91 39 03 	lds	r24, 0x0339
    3bd2:	90 91 3a 03 	lds	r25, 0x033A
    3bd6:	90 68       	ori	r25, 0x80	; 128
    3bd8:	90 93 3a 03 	sts	0x033A, r25
    3bdc:	80 93 39 03 	sts	0x0339, r24
    3be0:	10 c0       	rjmp	.+32     	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
    3be2:	80 74       	andi	r24, 0x40	; 64
    3be4:	90 71       	andi	r25, 0x10	; 16
		}
		else if ((anzeige&(1<<Weckeranzeigeflag))&&(anzeige&(1<<Einstellungsflag)))
    3be6:	80 34       	cpi	r24, 0x40	; 64
    3be8:	90 41       	sbci	r25, 0x10	; 16
    3bea:	59 f4       	brne	.+22     	; 0x3c02 <_Z14anzeigehandlerv+0x48e>
		{
			Weckeranzeige();
    3bec:	0e 94 fe 0f 	call	0x1ffc	; 0x1ffc <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3bf0:	80 91 39 03 	lds	r24, 0x0339
    3bf4:	90 91 3a 03 	lds	r25, 0x033A
    3bf8:	90 68       	ori	r25, 0x80	; 128
    3bfa:	90 93 3a 03 	sts	0x033A, r25
    3bfe:	80 93 39 03 	sts	0x0339, r24
		}
		if ((anzeige&(1<<blinkflag)))
    3c02:	80 91 39 03 	lds	r24, 0x0339
    3c06:	90 91 3a 03 	lds	r25, 0x033A
    3c0a:	96 ff       	sbrs	r25, 6
    3c0c:	0f c0       	rjmp	.+30     	; 0x3c2c <_Z14anzeigehandlerv+0x4b8>
		{
			oled.invert(rtc.Sekunden%2);
    3c0e:	60 91 51 10 	lds	r22, 0x1051
    3c12:	61 70       	andi	r22, 0x01	; 1
    3c14:	8e e3       	ldi	r24, 0x3E	; 62
    3c16:	9c e0       	ldi	r25, 0x0C	; 12
    3c18:	0e 94 4a 03 	call	0x694	; 0x694 <_ZN7Display6invertEh>
			LED.toggle();
    3c1c:	80 e3       	ldi	r24, 0x30	; 48
    3c1e:	9c e0       	ldi	r25, 0x0C	; 12
    3c20:	0e 94 97 2e 	call	0x5d2e	; 0x5d2e <_ZN6Output6toggleEv>
			Vibrationsmotor.on();
    3c24:	8e e2       	ldi	r24, 0x2E	; 46
    3c26:	9c e0       	ldi	r25, 0x0C	; 12
    3c28:	0e 94 de 2d 	call	0x5bbc	; 0x5bbc <_ZN6Output2onEv>
		}
		FPS=0;
    3c2c:	10 92 36 03 	sts	0x0336, r1
		rtc.interupts&=~(1<<sekundeninterupt);
    3c30:	ef e3       	ldi	r30, 0x3F	; 63
    3c32:	f0 e1       	ldi	r31, 0x10	; 16
    3c34:	80 8d       	ldd	r24, Z+24	; 0x18
    3c36:	8d 7f       	andi	r24, 0xFD	; 253
    3c38:	80 8f       	std	Z+24, r24	; 0x18
	}
	//Minuteninterrupt
	if ((rtc.interupts&(1<<minuteninterupt)))
    3c3a:	80 91 57 10 	lds	r24, 0x1057
    3c3e:	82 ff       	sbrs	r24, 2
    3c40:	22 c0       	rjmp	.+68     	; 0x3c86 <_Z14anzeigehandlerv+0x512>
	{
		if ((anzeige&(1<<Uhrflaggross)))
    3c42:	80 91 39 03 	lds	r24, 0x0339
    3c46:	85 ff       	sbrs	r24, 5
    3c48:	0c c0       	rjmp	.+24     	; 0x3c62 <_Z14anzeigehandlerv+0x4ee>
		{
			uhranzeigenmin();
    3c4a:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <_Z14uhranzeigenminv>
			anzeige|=(1<<refreshdisplay);
    3c4e:	80 91 39 03 	lds	r24, 0x0339
    3c52:	90 91 3a 03 	lds	r25, 0x033A
    3c56:	90 68       	ori	r25, 0x80	; 128
    3c58:	90 93 3a 03 	sts	0x033A, r25
    3c5c:	80 93 39 03 	sts	0x0339, r24
    3c60:	0d c0       	rjmp	.+26     	; 0x3c7c <_Z14anzeigehandlerv+0x508>
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    3c62:	86 ff       	sbrs	r24, 6
    3c64:	0b c0       	rjmp	.+22     	; 0x3c7c <_Z14anzeigehandlerv+0x508>
		{
			Weckeranzeige();
    3c66:	0e 94 fe 0f 	call	0x1ffc	; 0x1ffc <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3c6a:	80 91 39 03 	lds	r24, 0x0339
    3c6e:	90 91 3a 03 	lds	r25, 0x033A
    3c72:	90 68       	ori	r25, 0x80	; 128
    3c74:	90 93 3a 03 	sts	0x033A, r25
    3c78:	80 93 39 03 	sts	0x0339, r24
		}
		rtc.interupts&=~(1<<minuteninterupt);
    3c7c:	ef e3       	ldi	r30, 0x3F	; 63
    3c7e:	f0 e1       	ldi	r31, 0x10	; 16
    3c80:	80 8d       	ldd	r24, Z+24	; 0x18
    3c82:	8b 7f       	andi	r24, 0xFB	; 251
    3c84:	80 8f       	std	Z+24, r24	; 0x18
	}
	//neuen Framebuffer an das Dispay senden
	if ((anzeige&(1<<refreshdisplay)))
    3c86:	80 91 39 03 	lds	r24, 0x0339
    3c8a:	90 91 3a 03 	lds	r25, 0x033A
    3c8e:	99 23       	and	r25, r25
    3c90:	6c f4       	brge	.+26     	; 0x3cac <_Z14anzeigehandlerv+0x538>
	{
		oled.sendFrame();
    3c92:	8e e3       	ldi	r24, 0x3E	; 62
    3c94:	9c e0       	ldi	r25, 0x0C	; 12
    3c96:	0e 94 52 03 	call	0x6a4	; 0x6a4 <_ZN7Display9sendFrameEv>
		anzeige&=~(1<<refreshdisplay);
    3c9a:	80 91 39 03 	lds	r24, 0x0339
    3c9e:	90 91 3a 03 	lds	r25, 0x033A
    3ca2:	9f 77       	andi	r25, 0x7F	; 127
    3ca4:	90 93 3a 03 	sts	0x033A, r25
    3ca8:	80 93 39 03 	sts	0x0339, r24
	}
}
    3cac:	df 91       	pop	r29
    3cae:	cf 91       	pop	r28
    3cb0:	1f 91       	pop	r17
    3cb2:	0f 91       	pop	r16
    3cb4:	ff 90       	pop	r15
    3cb6:	ef 90       	pop	r14
    3cb8:	df 90       	pop	r13
    3cba:	cf 90       	pop	r12
    3cbc:	bf 90       	pop	r11
    3cbe:	af 90       	pop	r10
    3cc0:	7f 90       	pop	r7
    3cc2:	6f 90       	pop	r6
    3cc4:	5f 90       	pop	r5
    3cc6:	4f 90       	pop	r4
    3cc8:	08 95       	ret

00003cca <_Z14eingabehandlerh>:

void eingabehandler(uint8_t taste){
	if (taste!='A')
    3cca:	81 34       	cpi	r24, 0x41	; 65
    3ccc:	09 f4       	brne	.+2      	; 0x3cd0 <_Z14eingabehandlerh+0x6>
    3cce:	cd c4       	rjmp	.+2458   	; 0x466a <__stack+0x56b>
	{
		rtc.interupts |= (1<<sekundeninterupt);
    3cd0:	ef e3       	ldi	r30, 0x3F	; 63
    3cd2:	f0 e1       	ldi	r31, 0x10	; 16
    3cd4:	90 8d       	ldd	r25, Z+24	; 0x18
    3cd6:	29 2f       	mov	r18, r25
    3cd8:	22 60       	ori	r18, 0x02	; 2
    3cda:	20 8f       	std	Z+24, r18	; 0x18
		if (anzeige==255)
    3cdc:	20 91 39 03 	lds	r18, 0x0339
    3ce0:	30 91 3a 03 	lds	r19, 0x033A
    3ce4:	2f 3f       	cpi	r18, 0xFF	; 255
    3ce6:	31 05       	cpc	r19, r1
    3ce8:	61 f4       	brne	.+24     	; 0x3d02 <_Z14eingabehandlerh+0x38>
		{
			oled.ssd1306_command(SSD1306_DISPLAYON);
    3cea:	6f ea       	ldi	r22, 0xAF	; 175
    3cec:	8e e3       	ldi	r24, 0x3E	; 62
    3cee:	9c e0       	ldi	r25, 0x0C	; 12
    3cf0:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display15ssd1306_commandEh>
			//entweder display aus oder das Menue starten
			anzeige=(1<<menueflag);
    3cf4:	80 e0       	ldi	r24, 0x00	; 0
    3cf6:	90 e2       	ldi	r25, 0x20	; 32
    3cf8:	90 93 3a 03 	sts	0x033A, r25
    3cfc:	80 93 39 03 	sts	0x0339, r24
    3d00:	08 95       	ret
    3d02:	a9 01       	movw	r20, r18
    3d04:	42 70       	andi	r20, 0x02	; 2
    3d06:	50 72       	andi	r21, 0x20	; 32
		}
		//gleicher Handler wie oben, aber hier speziell fuer die Bearbeitung von Tastereingaben mit switch fuer die Tasten
		//es sind einfach so viele Tasten moeglich
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))	//Menue der Uhr
    3d08:	42 30       	cpi	r20, 0x02	; 2
    3d0a:	50 42       	sbci	r21, 0x20	; 32
    3d0c:	e9 f5       	brne	.+122    	; 0x3d88 <_Z14eingabehandlerh+0xbe>
		{
			anzeige&=~((1<<menueflag)|(1<<Uhrflag));
    3d0e:	2d 7f       	andi	r18, 0xFD	; 253
    3d10:	3f 7d       	andi	r19, 0xDF	; 223
			switch (taste)
    3d12:	83 33       	cpi	r24, 0x33	; 51
    3d14:	c1 f0       	breq	.+48     	; 0x3d46 <_Z14eingabehandlerh+0x7c>
    3d16:	28 f4       	brcc	.+10     	; 0x3d22 <_Z14eingabehandlerh+0x58>
    3d18:	81 33       	cpi	r24, 0x31	; 49
    3d1a:	41 f0       	breq	.+16     	; 0x3d2c <_Z14eingabehandlerh+0x62>
    3d1c:	82 33       	cpi	r24, 0x32	; 50
    3d1e:	61 f0       	breq	.+24     	; 0x3d38 <_Z14eingabehandlerh+0x6e>
    3d20:	2c c0       	rjmp	.+88     	; 0x3d7a <_Z14eingabehandlerh+0xb0>
    3d22:	84 33       	cpi	r24, 0x34	; 52
    3d24:	b9 f0       	breq	.+46     	; 0x3d54 <_Z14eingabehandlerh+0x8a>
    3d26:	85 33       	cpi	r24, 0x35	; 53
    3d28:	f1 f0       	breq	.+60     	; 0x3d66 <_Z14eingabehandlerh+0x9c>
    3d2a:	27 c0       	rjmp	.+78     	; 0x3d7a <_Z14eingabehandlerh+0xb0>
			{
				case '1':
				//Wechseln auf die Uhr
				anzeige|=(1<<Uhrflag);
    3d2c:	22 60       	ori	r18, 0x02	; 2
    3d2e:	30 93 3a 03 	sts	0x033A, r19
    3d32:	20 93 39 03 	sts	0x0339, r18
				break;
    3d36:	08 95       	ret
				
				case '2':
				//starten der Stoppuhr APP
				anzeige|=(1<<refreshdisplay) | (1<<Stoppuhrflag);
    3d38:	28 60       	ori	r18, 0x08	; 8
    3d3a:	30 68       	ori	r19, 0x80	; 128
    3d3c:	30 93 3a 03 	sts	0x033A, r19
    3d40:	20 93 39 03 	sts	0x0339, r18
				break;
    3d44:	08 95       	ret
				
				case '3':
				//Starten der Timer APP	
				anzeige|=(1<<Timerflag) | (1<<Einstellungsflag);
    3d46:	24 60       	ori	r18, 0x04	; 4
    3d48:	30 61       	ori	r19, 0x10	; 16
    3d4a:	30 93 3a 03 	sts	0x033A, r19
    3d4e:	20 93 39 03 	sts	0x0339, r18
				break;
    3d52:	08 95       	ret
				
				case '4':
				rtc.interupts |=(1<<minuteninterupt);
    3d54:	96 60       	ori	r25, 0x06	; 6
    3d56:	90 93 57 10 	sts	0x1057, r25
				anzeige |= (1<<Weckeranzeigeflag);
    3d5a:	20 64       	ori	r18, 0x40	; 64
    3d5c:	30 93 3a 03 	sts	0x033A, r19
    3d60:	20 93 39 03 	sts	0x0339, r18
				break;
    3d64:	08 95       	ret
				
				case '5':
				//Wechseln auf grosse Uhr
				rtc.interupts |=(1<<minuteninterupt);
    3d66:	96 60       	ori	r25, 0x06	; 6
    3d68:	90 93 57 10 	sts	0x1057, r25
				anzeige |=(1<<Uhrflaggross) | (1<<refreshdisplay);
    3d6c:	20 62       	ori	r18, 0x20	; 32
    3d6e:	30 68       	ori	r19, 0x80	; 128
    3d70:	30 93 3a 03 	sts	0x033A, r19
    3d74:	20 93 39 03 	sts	0x0339, r18
				break;
    3d78:	08 95       	ret
				
				default:
				//menueflag erneu setzen
				anzeige|=(1<<menueflag)|(1<<Uhrflag);
    3d7a:	22 60       	ori	r18, 0x02	; 2
    3d7c:	30 62       	ori	r19, 0x20	; 32
    3d7e:	30 93 3a 03 	sts	0x033A, r19
    3d82:	20 93 39 03 	sts	0x0339, r18
				break;
    3d86:	45 c4       	rjmp	.+2186   	; 0x4612 <__stack+0x513>
    3d88:	a9 01       	movw	r20, r18
    3d8a:	44 27       	eor	r20, r20
    3d8c:	50 73       	andi	r21, 0x30	; 48
			}
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))	//Menue der Einstellungen
    3d8e:	41 15       	cp	r20, r1
    3d90:	50 43       	sbci	r21, 0x30	; 48
    3d92:	09 f0       	breq	.+2      	; 0x3d96 <_Z14eingabehandlerh+0xcc>
    3d94:	55 c0       	rjmp	.+170    	; 0x3e40 <_Z14eingabehandlerh+0x176>
		{
			anzeige&=~((1<<menueflag)|(1<<Einstellungsflag));
    3d96:	3f 7c       	andi	r19, 0xCF	; 207
    3d98:	30 93 3a 03 	sts	0x033A, r19
    3d9c:	20 93 39 03 	sts	0x0339, r18
			switch (taste)
    3da0:	83 33       	cpi	r24, 0x33	; 51
    3da2:	f9 f0       	breq	.+62     	; 0x3de2 <_Z14eingabehandlerh+0x118>
    3da4:	28 f4       	brcc	.+10     	; 0x3db0 <_Z14eingabehandlerh+0xe6>
    3da6:	81 33       	cpi	r24, 0x31	; 49
    3da8:	41 f0       	breq	.+16     	; 0x3dba <_Z14eingabehandlerh+0xf0>
    3daa:	82 33       	cpi	r24, 0x32	; 50
    3dac:	a1 f0       	breq	.+40     	; 0x3dd6 <_Z14eingabehandlerh+0x10c>
    3dae:	42 c0       	rjmp	.+132    	; 0x3e34 <_Z14eingabehandlerh+0x16a>
    3db0:	84 33       	cpi	r24, 0x34	; 52
    3db2:	41 f1       	breq	.+80     	; 0x3e04 <_Z14eingabehandlerh+0x13a>
    3db4:	85 33       	cpi	r24, 0x35	; 53
    3db6:	69 f1       	breq	.+90     	; 0x3e12 <_Z14eingabehandlerh+0x148>
    3db8:	3d c0       	rjmp	.+122    	; 0x3e34 <_Z14eingabehandlerh+0x16a>
			{
				case '1':
				//zuruecksetzen der Kalibrierung, da passive Kallibrierung eingebaut
				kompass.kallibrierung_ruecksetzen();
    3dba:	8e e5       	ldi	r24, 0x5E	; 94
    3dbc:	90 e1       	ldi	r25, 0x10	; 16
    3dbe:	0e 94 97 29 	call	0x532e	; 0x532e <_ZN7Kompass25kallibrierung_ruecksetzenEv>
				anzeige|=(1<<Kompasflag);
    3dc2:	80 91 39 03 	lds	r24, 0x0339
    3dc6:	90 91 3a 03 	lds	r25, 0x033A
    3dca:	80 68       	ori	r24, 0x80	; 128
    3dcc:	90 93 3a 03 	sts	0x033A, r25
    3dd0:	80 93 39 03 	sts	0x0339, r24
				break;
    3dd4:	08 95       	ret
				case '2':
				//Gaineinstellung fuer den Kompass
				anzeige|=(1<<Kompasgaineinstellenflag);
    3dd6:	32 60       	ori	r19, 0x02	; 2
    3dd8:	30 93 3a 03 	sts	0x033A, r19
    3ddc:	20 93 39 03 	sts	0x0339, r18
				break;
    3de0:	08 95       	ret
				case '3':
				//dies ist eine der wenigen Funktinen, die die Handler Strucktur nicht anwenden, da sie die rtc anhaellt
				uhreinstellen();
    3de2:	0e 94 8f 16 	call	0x2d1e	; 0x2d1e <_Z13uhreinstellenv>
				rtc.interupts |= (1<<minuteninterupt);
    3de6:	ef e3       	ldi	r30, 0x3F	; 63
    3de8:	f0 e1       	ldi	r31, 0x10	; 16
    3dea:	80 8d       	ldd	r24, Z+24	; 0x18
    3dec:	84 60       	ori	r24, 0x04	; 4
    3dee:	80 8f       	std	Z+24, r24	; 0x18
				anzeige|=(1<<Uhrflaggross);
    3df0:	80 91 39 03 	lds	r24, 0x0339
    3df4:	90 91 3a 03 	lds	r25, 0x033A
    3df8:	80 62       	ori	r24, 0x20	; 32
    3dfa:	90 93 3a 03 	sts	0x033A, r25
    3dfe:	80 93 39 03 	sts	0x0339, r24
				break;
    3e02:	08 95       	ret
				case '4':
				anzeige |= (1<<Einstellungsflag) | (1<<Weckeranzeigeflag);
    3e04:	20 64       	ori	r18, 0x40	; 64
    3e06:	30 61       	ori	r19, 0x10	; 16
    3e08:	30 93 3a 03 	sts	0x033A, r19
    3e0c:	20 93 39 03 	sts	0x0339, r18
				break;
    3e10:	08 95       	ret
				case '5':
				Accelerometer.ACCStreammode();
    3e12:	81 e4       	ldi	r24, 0x41	; 65
    3e14:	9b e0       	ldi	r25, 0x0B	; 11
    3e16:	0e 94 18 2b 	call	0x5630	; 0x5630 <_ZN7LSM303D13ACCStreammodeEv>
				pos=7;
    3e1a:	87 e0       	ldi	r24, 0x07	; 7
    3e1c:	80 93 37 03 	sts	0x0337, r24
				anzeige |= (1<<Einstellungsflag) | (1<<Wanderflag);
    3e20:	80 91 39 03 	lds	r24, 0x0339
    3e24:	90 91 3a 03 	lds	r25, 0x033A
    3e28:	98 61       	ori	r25, 0x18	; 24
    3e2a:	90 93 3a 03 	sts	0x033A, r25
    3e2e:	80 93 39 03 	sts	0x0339, r24
				break;
    3e32:	08 95       	ret
				default:
				//Menueflag neu setzten
				anzeige|=(1<<menueflag)|(1<<Einstellungsflag);
    3e34:	30 63       	ori	r19, 0x30	; 48
    3e36:	30 93 3a 03 	sts	0x033A, r19
    3e3a:	20 93 39 03 	sts	0x0339, r18
				break;
    3e3e:	e9 c3       	rjmp	.+2002   	; 0x4612 <__stack+0x513>
			}
		}
		else if ((anzeige&(1<<menueflag)))	//nur das grosse menue
    3e40:	35 ff       	sbrs	r19, 5
    3e42:	50 c0       	rjmp	.+160    	; 0x3ee4 <_Z14eingabehandlerh+0x21a>
		{
			anzeige&=~(1<<menueflag);
    3e44:	3f 7d       	andi	r19, 0xDF	; 223
    3e46:	30 93 3a 03 	sts	0x033A, r19
    3e4a:	20 93 39 03 	sts	0x0339, r18
			switch (taste)
    3e4e:	83 33       	cpi	r24, 0x33	; 51
    3e50:	11 f1       	breq	.+68     	; 0x3e96 <_Z14eingabehandlerh+0x1cc>
    3e52:	28 f4       	brcc	.+10     	; 0x3e5e <_Z14eingabehandlerh+0x194>
    3e54:	81 33       	cpi	r24, 0x31	; 49
    3e56:	49 f0       	breq	.+18     	; 0x3e6a <_Z14eingabehandlerh+0x1a0>
    3e58:	82 33       	cpi	r24, 0x32	; 50
    3e5a:	79 f0       	breq	.+30     	; 0x3e7a <_Z14eingabehandlerh+0x1b0>
    3e5c:	3d c0       	rjmp	.+122    	; 0x3ed8 <_Z14eingabehandlerh+0x20e>
    3e5e:	85 33       	cpi	r24, 0x35	; 53
    3e60:	39 f1       	breq	.+78     	; 0x3eb0 <_Z14eingabehandlerh+0x1e6>
    3e62:	f8 f0       	brcs	.+62     	; 0x3ea2 <_Z14eingabehandlerh+0x1d8>
    3e64:	86 33       	cpi	r24, 0x36	; 54
    3e66:	51 f1       	breq	.+84     	; 0x3ebc <_Z14eingabehandlerh+0x1f2>
    3e68:	37 c0       	rjmp	.+110    	; 0x3ed8 <_Z14eingabehandlerh+0x20e>
			{
				case '1':
				anzeige|=(1<<Fahradflag);
    3e6a:	21 60       	ori	r18, 0x01	; 1
    3e6c:	30 93 3a 03 	sts	0x033A, r19
    3e70:	20 93 39 03 	sts	0x0339, r18
				//starten des Timers fuer die geschwindigkeit
				inittimer(1);
    3e74:	81 e0       	ldi	r24, 0x01	; 1
    3e76:	ac cb       	rjmp	.-2216   	; 0x35d0 <_Z9inittimerh>
				break;
    3e78:	08 95       	ret
				
				case '2':
				//Wanderanzeige schalten
				Accelerometer.ACCStreammode();
    3e7a:	81 e4       	ldi	r24, 0x41	; 65
    3e7c:	9b e0       	ldi	r25, 0x0B	; 11
    3e7e:	0e 94 18 2b 	call	0x5630	; 0x5630 <_ZN7LSM303D13ACCStreammodeEv>
				anzeige|=(1<<refreshdisplay) | (1<<Wanderflag);
    3e82:	80 91 39 03 	lds	r24, 0x0339
    3e86:	90 91 3a 03 	lds	r25, 0x033A
    3e8a:	98 68       	ori	r25, 0x88	; 136
    3e8c:	90 93 3a 03 	sts	0x033A, r25
    3e90:	80 93 39 03 	sts	0x0339, r24
				break;
    3e94:	08 95       	ret
				
				case '3':
				anzeige|=(1<<Kompasflag);
    3e96:	20 68       	ori	r18, 0x80	; 128
    3e98:	30 93 3a 03 	sts	0x033A, r19
    3e9c:	20 93 39 03 	sts	0x0339, r18
				break;
    3ea0:	08 95       	ret
				
				case '4':
				//Menue der Uhr
				anzeige|=(1<<menueflag) | (1<<Uhrflag);
    3ea2:	22 60       	ori	r18, 0x02	; 2
    3ea4:	30 62       	ori	r19, 0x20	; 32
    3ea6:	30 93 3a 03 	sts	0x033A, r19
    3eaa:	20 93 39 03 	sts	0x0339, r18
				break;
    3eae:	08 95       	ret
				
				case '5':
				//menue der Einstellungen
				anzeige|=(1<<menueflag) | (1<<Einstellungsflag);
    3eb0:	30 63       	ori	r19, 0x30	; 48
    3eb2:	30 93 3a 03 	sts	0x033A, r19
    3eb6:	20 93 39 03 	sts	0x0339, r18
				break;
    3eba:	08 95       	ret
				
				case '6':
				//Display ausschalten
				//anzeige=255;
				oled.clearFrame();
    3ebc:	8e e3       	ldi	r24, 0x3E	; 62
    3ebe:	9c e0       	ldi	r25, 0x0C	; 12
    3ec0:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN7Display10clearFrameEv>
				anzeige|=(1<<refreshdisplay);
    3ec4:	80 91 39 03 	lds	r24, 0x0339
    3ec8:	90 91 3a 03 	lds	r25, 0x033A
    3ecc:	90 68       	ori	r25, 0x80	; 128
    3ece:	90 93 3a 03 	sts	0x033A, r25
    3ed2:	80 93 39 03 	sts	0x0339, r24
				break;
    3ed6:	08 95       	ret
				//gol.set_startvalue();
				//anzeige |= (1<<Druckflag);
				//break;
				default:
				//menueflag erneut setzen um abschalten zu verhindern
				anzeige|=(1<<menueflag);
    3ed8:	30 62       	ori	r19, 0x20	; 32
    3eda:	30 93 3a 03 	sts	0x033A, r19
    3ede:	20 93 39 03 	sts	0x0339, r18
				break;
    3ee2:	97 c3       	rjmp	.+1838   	; 0x4612 <__stack+0x513>
    3ee4:	a9 01       	movw	r20, r18
    3ee6:	40 74       	andi	r20, 0x40	; 64
    3ee8:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag))&&(anzeige&(1<<Weckeranzeigeflag)))
    3eea:	40 34       	cpi	r20, 0x40	; 64
    3eec:	50 41       	sbci	r21, 0x10	; 16
    3eee:	09 f0       	breq	.+2      	; 0x3ef2 <_Z14eingabehandlerh+0x228>
    3ef0:	66 c0       	rjmp	.+204    	; 0x3fbe <_Z14eingabehandlerh+0x2f4>
		{
			switch (pos)
    3ef2:	40 91 37 03 	lds	r20, 0x0337
    3ef6:	41 30       	cpi	r20, 0x01	; 1
    3ef8:	01 f1       	breq	.+64     	; 0x3f3a <_Z14eingabehandlerh+0x270>
    3efa:	28 f0       	brcs	.+10     	; 0x3f06 <_Z14eingabehandlerh+0x23c>
    3efc:	42 30       	cpi	r20, 0x02	; 2
    3efe:	69 f1       	breq	.+90     	; 0x3f5a <_Z14eingabehandlerh+0x290>
    3f00:	43 30       	cpi	r20, 0x03	; 3
    3f02:	f1 f1       	breq	.+124    	; 0x3f80 <_Z14eingabehandlerh+0x2b6>
    3f04:	86 c3       	rjmp	.+1804   	; 0x4612 <__stack+0x513>
			{
				case 0:
				rtc.WStunden=0;
    3f06:	ef e3       	ldi	r30, 0x3F	; 63
    3f08:	f0 e1       	ldi	r31, 0x10	; 16
    3f0a:	12 8e       	std	Z+26, r1	; 0x1a
				rtc.WMinuten=0;
    3f0c:	11 8e       	std	Z+25, r1	; 0x19
				rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
    3f0e:	97 7e       	andi	r25, 0xE7	; 231
    3f10:	92 60       	ori	r25, 0x02	; 2
    3f12:	90 8f       	std	Z+24, r25	; 0x18
				switch (taste)
    3f14:	83 32       	cpi	r24, 0x23	; 35
    3f16:	09 f4       	brne	.+2      	; 0x3f1a <_Z14eingabehandlerh+0x250>
    3f18:	7c c3       	rjmp	.+1784   	; 0x4612 <__stack+0x513>
    3f1a:	8a 32       	cpi	r24, 0x2A	; 42
    3f1c:	09 f4       	brne	.+2      	; 0x3f20 <_Z14eingabehandlerh+0x256>
    3f1e:	79 c3       	rjmp	.+1778   	; 0x4612 <__stack+0x513>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden=(taste-'0')*10;
    3f20:	98 2f       	mov	r25, r24
    3f22:	99 0f       	add	r25, r25
    3f24:	90 56       	subi	r25, 0x60	; 96
    3f26:	29 2f       	mov	r18, r25
    3f28:	22 0f       	add	r18, r18
    3f2a:	22 0f       	add	r18, r18
    3f2c:	92 0f       	add	r25, r18
    3f2e:	90 93 59 10 	sts	0x1059, r25
					pos++;
    3f32:	91 e0       	ldi	r25, 0x01	; 1
    3f34:	90 93 37 03 	sts	0x0337, r25
					break;
    3f38:	6c c3       	rjmp	.+1752   	; 0x4612 <__stack+0x513>
				}
				break;
				case 1:
				switch (taste)
    3f3a:	83 32       	cpi	r24, 0x23	; 35
    3f3c:	09 f4       	brne	.+2      	; 0x3f40 <_Z14eingabehandlerh+0x276>
    3f3e:	69 c3       	rjmp	.+1746   	; 0x4612 <__stack+0x513>
    3f40:	8a 32       	cpi	r24, 0x2A	; 42
    3f42:	09 f4       	brne	.+2      	; 0x3f46 <_Z14eingabehandlerh+0x27c>
    3f44:	66 c3       	rjmp	.+1740   	; 0x4612 <__stack+0x513>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden+=(taste-'0');
    3f46:	ef e3       	ldi	r30, 0x3F	; 63
    3f48:	f0 e1       	ldi	r31, 0x10	; 16
    3f4a:	92 8d       	ldd	r25, Z+26	; 0x1a
    3f4c:	90 53       	subi	r25, 0x30	; 48
    3f4e:	98 0f       	add	r25, r24
    3f50:	92 8f       	std	Z+26, r25	; 0x1a
					pos++;
    3f52:	92 e0       	ldi	r25, 0x02	; 2
    3f54:	90 93 37 03 	sts	0x0337, r25
					break;
    3f58:	5c c3       	rjmp	.+1720   	; 0x4612 <__stack+0x513>
				}
				break;
				case 2:
				switch (taste)
    3f5a:	83 32       	cpi	r24, 0x23	; 35
    3f5c:	09 f4       	brne	.+2      	; 0x3f60 <_Z14eingabehandlerh+0x296>
    3f5e:	59 c3       	rjmp	.+1714   	; 0x4612 <__stack+0x513>
    3f60:	8a 32       	cpi	r24, 0x2A	; 42
    3f62:	09 f4       	brne	.+2      	; 0x3f66 <_Z14eingabehandlerh+0x29c>
    3f64:	56 c3       	rjmp	.+1708   	; 0x4612 <__stack+0x513>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten=(taste-'0')*10;
    3f66:	98 2f       	mov	r25, r24
    3f68:	99 0f       	add	r25, r25
    3f6a:	90 56       	subi	r25, 0x60	; 96
    3f6c:	29 2f       	mov	r18, r25
    3f6e:	22 0f       	add	r18, r18
    3f70:	22 0f       	add	r18, r18
    3f72:	92 0f       	add	r25, r18
    3f74:	90 93 58 10 	sts	0x1058, r25
					pos++;
    3f78:	93 e0       	ldi	r25, 0x03	; 3
    3f7a:	90 93 37 03 	sts	0x0337, r25
					break;
    3f7e:	49 c3       	rjmp	.+1682   	; 0x4612 <__stack+0x513>
				}
				break;
				case 3:
				switch (taste)
    3f80:	83 32       	cpi	r24, 0x23	; 35
    3f82:	41 f0       	breq	.+16     	; 0x3f94 <_Z14eingabehandlerh+0x2ca>
    3f84:	8a 32       	cpi	r24, 0x2A	; 42
    3f86:	31 f0       	breq	.+12     	; 0x3f94 <_Z14eingabehandlerh+0x2ca>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten+=(taste-'0');
    3f88:	ef e3       	ldi	r30, 0x3F	; 63
    3f8a:	f0 e1       	ldi	r31, 0x10	; 16
    3f8c:	41 8d       	ldd	r20, Z+25	; 0x19
    3f8e:	40 53       	subi	r20, 0x30	; 48
    3f90:	48 0f       	add	r20, r24
    3f92:	41 8f       	std	Z+25, r20	; 0x19
					pos++;
					break;
				}
				pos=0;
    3f94:	10 92 37 03 	sts	0x0337, r1
				if (!(rtc.WStunden>=24) && !(rtc.WMinuten>=60))
    3f98:	40 91 59 10 	lds	r20, 0x1059
    3f9c:	48 31       	cpi	r20, 0x18	; 24
    3f9e:	08 f0       	brcs	.+2      	; 0x3fa2 <_Z14eingabehandlerh+0x2d8>
    3fa0:	38 c3       	rjmp	.+1648   	; 0x4612 <__stack+0x513>
    3fa2:	40 91 58 10 	lds	r20, 0x1058
    3fa6:	4c 33       	cpi	r20, 0x3C	; 60
    3fa8:	08 f0       	brcs	.+2      	; 0x3fac <_Z14eingabehandlerh+0x2e2>
    3faa:	33 c3       	rjmp	.+1638   	; 0x4612 <__stack+0x513>
				{
					anzeige&=~(1<<Einstellungsflag);
    3fac:	3f 7e       	andi	r19, 0xEF	; 239
    3fae:	30 93 3a 03 	sts	0x033A, r19
    3fb2:	20 93 39 03 	sts	0x0339, r18
					rtc.interupts|=(1<<Weckerein);
					rtc.interupts|=(1<<minuteninterupt);
    3fb6:	9e 60       	ori	r25, 0x0E	; 14
    3fb8:	90 93 57 10 	sts	0x1057, r25
    3fbc:	2a c3       	rjmp	.+1620   	; 0x4612 <__stack+0x513>
				}
				break;
			}
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3fbe:	31 ff       	sbrs	r19, 1
    3fc0:	4a c0       	rjmp	.+148    	; 0x4056 <_Z14eingabehandlerh+0x38c>
		{
			anzeige&=~(1<<Kompasgaineinstellenflag);
    3fc2:	a9 01       	movw	r20, r18
    3fc4:	5d 7f       	andi	r21, 0xFD	; 253
			anzeige|=(1<<Kompasflag);
    3fc6:	40 68       	ori	r20, 0x80	; 128
    3fc8:	50 93 3a 03 	sts	0x033A, r21
    3fcc:	40 93 39 03 	sts	0x0339, r20
			switch (taste) {
    3fd0:	48 2f       	mov	r20, r24
    3fd2:	50 e0       	ldi	r21, 0x00	; 0
    3fd4:	fa 01       	movw	r30, r20
    3fd6:	f1 97       	sbiw	r30, 0x31	; 49
    3fd8:	e8 30       	cpi	r30, 0x08	; 8
    3fda:	f1 05       	cpc	r31, r1
    3fdc:	a0 f5       	brcc	.+104    	; 0x4046 <_Z14eingabehandlerh+0x37c>
    3fde:	e0 5b       	subi	r30, 0xB0	; 176
    3fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    3fe2:	0c 94 b7 37 	jmp	0x6f6e	; 0x6f6e <__tablejump2__>
				case '1':
				kompass.HMC5883L_command(0x01,HMCGAIN1370);
    3fe6:	40 e0       	ldi	r20, 0x00	; 0
    3fe8:	61 e0       	ldi	r22, 0x01	; 1
    3fea:	8e e5       	ldi	r24, 0x5E	; 94
    3fec:	90 e1       	ldi	r25, 0x10	; 16
    3fee:	70 c7       	rjmp	.+3808   	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3ff0:	08 95       	ret
				case '2':
				kompass.HMC5883L_command(0x01,HMCGAIN1090);
    3ff2:	40 e2       	ldi	r20, 0x20	; 32
    3ff4:	61 e0       	ldi	r22, 0x01	; 1
    3ff6:	8e e5       	ldi	r24, 0x5E	; 94
    3ff8:	90 e1       	ldi	r25, 0x10	; 16
    3ffa:	6a c7       	rjmp	.+3796   	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3ffc:	08 95       	ret
				case '3':
				kompass.HMC5883L_command(0x01,HMCGAIN820);
    3ffe:	40 e4       	ldi	r20, 0x40	; 64
    4000:	61 e0       	ldi	r22, 0x01	; 1
    4002:	8e e5       	ldi	r24, 0x5E	; 94
    4004:	90 e1       	ldi	r25, 0x10	; 16
    4006:	64 c7       	rjmp	.+3784   	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4008:	08 95       	ret
				case '4':
				kompass.HMC5883L_command(0x01,HMCGAIN660);
    400a:	40 e6       	ldi	r20, 0x60	; 96
    400c:	61 e0       	ldi	r22, 0x01	; 1
    400e:	8e e5       	ldi	r24, 0x5E	; 94
    4010:	90 e1       	ldi	r25, 0x10	; 16
    4012:	5e c7       	rjmp	.+3772   	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4014:	08 95       	ret
				case '5':
				kompass.HMC5883L_command(0x01,HMCGAIN440);
    4016:	40 e8       	ldi	r20, 0x80	; 128
    4018:	61 e0       	ldi	r22, 0x01	; 1
    401a:	8e e5       	ldi	r24, 0x5E	; 94
    401c:	90 e1       	ldi	r25, 0x10	; 16
    401e:	58 c7       	rjmp	.+3760   	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4020:	08 95       	ret
				case '6':
				kompass.HMC5883L_command(0x01,HMCGAIN390);
    4022:	40 ea       	ldi	r20, 0xA0	; 160
    4024:	61 e0       	ldi	r22, 0x01	; 1
    4026:	8e e5       	ldi	r24, 0x5E	; 94
    4028:	90 e1       	ldi	r25, 0x10	; 16
    402a:	52 c7       	rjmp	.+3748   	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    402c:	08 95       	ret
				case '7':
				kompass.HMC5883L_command(0x01,HMCGAIN330);
    402e:	40 ec       	ldi	r20, 0xC0	; 192
    4030:	61 e0       	ldi	r22, 0x01	; 1
    4032:	8e e5       	ldi	r24, 0x5E	; 94
    4034:	90 e1       	ldi	r25, 0x10	; 16
    4036:	4c c7       	rjmp	.+3736   	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4038:	08 95       	ret
				case '8':
				kompass.HMC5883L_command(0x01,HMCGAIN230);
    403a:	40 ee       	ldi	r20, 0xE0	; 224
    403c:	61 e0       	ldi	r22, 0x01	; 1
    403e:	8e e5       	ldi	r24, 0x5E	; 94
    4040:	90 e1       	ldi	r25, 0x10	; 16
    4042:	46 c7       	rjmp	.+3724   	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4044:	08 95       	ret
				default:
				anzeige &=~(1<<Kompasflag);
    4046:	2f 77       	andi	r18, 0x7F	; 127
    4048:	3d 7f       	andi	r19, 0xFD	; 253
				anzeige|=(1<<Kompasgaineinstellenflag);
    404a:	32 60       	ori	r19, 0x02	; 2
    404c:	30 93 3a 03 	sts	0x033A, r19
    4050:	20 93 39 03 	sts	0x0339, r18
				break;
    4054:	de c2       	rjmp	.+1468   	; 0x4612 <__stack+0x513>
    4056:	a9 01       	movw	r20, r18
    4058:	44 70       	andi	r20, 0x04	; 4
    405a:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag)) && (anzeige&(1<<Timerflag)))
    405c:	44 30       	cpi	r20, 0x04	; 4
    405e:	50 41       	sbci	r21, 0x10	; 16
    4060:	09 f0       	breq	.+2      	; 0x4064 <_Z14eingabehandlerh+0x39a>
    4062:	5e c1       	rjmp	.+700    	; 0x4320 <__stack+0x221>
		{
			switch (pos)
    4064:	40 91 37 03 	lds	r20, 0x0337
    4068:	42 30       	cpi	r20, 0x02	; 2
    406a:	09 f4       	brne	.+2      	; 0x406e <_Z14eingabehandlerh+0x3a4>
    406c:	71 c0       	rjmp	.+226    	; 0x4150 <__stack+0x51>
    406e:	30 f4       	brcc	.+12     	; 0x407c <_Z14eingabehandlerh+0x3b2>
    4070:	44 23       	and	r20, r20
    4072:	69 f0       	breq	.+26     	; 0x408e <_Z14eingabehandlerh+0x3c4>
    4074:	41 30       	cpi	r20, 0x01	; 1
    4076:	09 f4       	brne	.+2      	; 0x407a <_Z14eingabehandlerh+0x3b0>
    4078:	3f c0       	rjmp	.+126    	; 0x40f8 <_Z14eingabehandlerh+0x42e>
    407a:	cb c2       	rjmp	.+1430   	; 0x4612 <__stack+0x513>
    407c:	44 30       	cpi	r20, 0x04	; 4
    407e:	09 f4       	brne	.+2      	; 0x4082 <_Z14eingabehandlerh+0x3b8>
    4080:	d2 c0       	rjmp	.+420    	; 0x4226 <__stack+0x127>
    4082:	08 f4       	brcc	.+2      	; 0x4086 <_Z14eingabehandlerh+0x3bc>
    4084:	9c c0       	rjmp	.+312    	; 0x41be <__stack+0xbf>
    4086:	45 30       	cpi	r20, 0x05	; 5
    4088:	09 f4       	brne	.+2      	; 0x408c <_Z14eingabehandlerh+0x3c2>
    408a:	04 c1       	rjmp	.+520    	; 0x4294 <__stack+0x195>
    408c:	c2 c2       	rjmp	.+1412   	; 0x4612 <__stack+0x513>
			{
				case 0:
					switch (taste)
    408e:	83 32       	cpi	r24, 0x23	; 35
    4090:	19 f0       	breq	.+6      	; 0x4098 <_Z14eingabehandlerh+0x3ce>
    4092:	8a 32       	cpi	r24, 0x2A	; 42
    4094:	41 f0       	breq	.+16     	; 0x40a6 <_Z14eingabehandlerh+0x3dc>
    4096:	19 c0       	rjmp	.+50     	; 0x40ca <_Z14eingabehandlerh+0x400>
					{
						case '#':
							pos=0;
    4098:	10 92 37 03 	sts	0x0337, r1
							rtc.Timerzahler=0;
    409c:	10 92 5b 10 	sts	0x105B, r1
    40a0:	10 92 5a 10 	sts	0x105A, r1
							break;
    40a4:	08 95       	ret
						case '*':
							pos=0;
    40a6:	10 92 37 03 	sts	0x0337, r1
							rtc.Timerzahler++;
    40aa:	ef e3       	ldi	r30, 0x3F	; 63
    40ac:	f0 e1       	ldi	r31, 0x10	; 16
    40ae:	43 8d       	ldd	r20, Z+27	; 0x1b
    40b0:	54 8d       	ldd	r21, Z+28	; 0x1c
    40b2:	4f 5f       	subi	r20, 0xFF	; 255
    40b4:	5f 4f       	sbci	r21, 0xFF	; 255
    40b6:	54 8f       	std	Z+28, r21	; 0x1c
    40b8:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    40ba:	3f 7e       	andi	r19, 0xEF	; 239
    40bc:	30 93 3a 03 	sts	0x033A, r19
    40c0:	20 93 39 03 	sts	0x0339, r18
							rtc.interupts|=(1<<Timerlauft);
    40c4:	92 62       	ori	r25, 0x22	; 34
    40c6:	90 8f       	std	Z+24, r25	; 0x18
							break;
    40c8:	ca c2       	rjmp	.+1428   	; 0x465e <__stack+0x55f>
						default:
						rtc.Timerzahler=(taste-'0')*10;
    40ca:	28 2f       	mov	r18, r24
    40cc:	30 e0       	ldi	r19, 0x00	; 0
    40ce:	20 53       	subi	r18, 0x30	; 48
    40d0:	31 09       	sbc	r19, r1
    40d2:	a9 01       	movw	r20, r18
    40d4:	44 0f       	add	r20, r20
    40d6:	55 1f       	adc	r21, r21
    40d8:	22 0f       	add	r18, r18
    40da:	33 1f       	adc	r19, r19
    40dc:	22 0f       	add	r18, r18
    40de:	33 1f       	adc	r19, r19
    40e0:	22 0f       	add	r18, r18
    40e2:	33 1f       	adc	r19, r19
    40e4:	24 0f       	add	r18, r20
    40e6:	35 1f       	adc	r19, r21
    40e8:	30 93 5b 10 	sts	0x105B, r19
    40ec:	20 93 5a 10 	sts	0x105A, r18
						pos++;
    40f0:	91 e0       	ldi	r25, 0x01	; 1
    40f2:	90 93 37 03 	sts	0x0337, r25
						break;
    40f6:	8d c2       	rjmp	.+1306   	; 0x4612 <__stack+0x513>
					}
					break;
				case 1:
					switch (taste)
    40f8:	83 32       	cpi	r24, 0x23	; 35
    40fa:	19 f0       	breq	.+6      	; 0x4102 <__stack+0x3>
    40fc:	8a 32       	cpi	r24, 0x2A	; 42
    40fe:	41 f0       	breq	.+16     	; 0x4110 <__stack+0x11>
    4100:	19 c0       	rjmp	.+50     	; 0x4134 <__stack+0x35>
					{
						case '#':
							pos=0;
    4102:	10 92 37 03 	sts	0x0337, r1
							rtc.Timerzahler=0;
    4106:	10 92 5b 10 	sts	0x105B, r1
    410a:	10 92 5a 10 	sts	0x105A, r1
							break;
    410e:	08 95       	ret
						case '*':
							pos=0;
    4110:	10 92 37 03 	sts	0x0337, r1
							rtc.Timerzahler++;
    4114:	ef e3       	ldi	r30, 0x3F	; 63
    4116:	f0 e1       	ldi	r31, 0x10	; 16
    4118:	43 8d       	ldd	r20, Z+27	; 0x1b
    411a:	54 8d       	ldd	r21, Z+28	; 0x1c
    411c:	4f 5f       	subi	r20, 0xFF	; 255
    411e:	5f 4f       	sbci	r21, 0xFF	; 255
    4120:	54 8f       	std	Z+28, r21	; 0x1c
    4122:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    4124:	3f 7e       	andi	r19, 0xEF	; 239
    4126:	30 93 3a 03 	sts	0x033A, r19
    412a:	20 93 39 03 	sts	0x0339, r18
							rtc.interupts|=(1<<Timerlauft);
    412e:	92 62       	ori	r25, 0x22	; 34
    4130:	90 8f       	std	Z+24, r25	; 0x18
							break;
    4132:	95 c2       	rjmp	.+1322   	; 0x465e <__stack+0x55f>
						default:
						rtc.Timerzahler+=(taste-'0');
    4134:	ef e3       	ldi	r30, 0x3F	; 63
    4136:	f0 e1       	ldi	r31, 0x10	; 16
    4138:	23 8d       	ldd	r18, Z+27	; 0x1b
    413a:	34 8d       	ldd	r19, Z+28	; 0x1c
    413c:	20 53       	subi	r18, 0x30	; 48
    413e:	31 09       	sbc	r19, r1
    4140:	28 0f       	add	r18, r24
    4142:	31 1d       	adc	r19, r1
    4144:	34 8f       	std	Z+28, r19	; 0x1c
    4146:	23 8f       	std	Z+27, r18	; 0x1b
						pos++;
    4148:	92 e0       	ldi	r25, 0x02	; 2
    414a:	90 93 37 03 	sts	0x0337, r25
						break;
    414e:	61 c2       	rjmp	.+1218   	; 0x4612 <__stack+0x513>
					}
					break;
				case 2:
					switch (taste)
    4150:	83 32       	cpi	r24, 0x23	; 35
    4152:	19 f0       	breq	.+6      	; 0x415a <__stack+0x5b>
    4154:	8a 32       	cpi	r24, 0x2A	; 42
    4156:	41 f0       	breq	.+16     	; 0x4168 <__stack+0x69>
    4158:	19 c0       	rjmp	.+50     	; 0x418c <__stack+0x8d>
					{
						case '#':
							pos=0;
    415a:	10 92 37 03 	sts	0x0337, r1
							rtc.Timerzahler=0;
    415e:	10 92 5b 10 	sts	0x105B, r1
    4162:	10 92 5a 10 	sts	0x105A, r1
							break;
    4166:	08 95       	ret
						case '*':
							pos=0;
    4168:	10 92 37 03 	sts	0x0337, r1
							rtc.Timerzahler++;
    416c:	ef e3       	ldi	r30, 0x3F	; 63
    416e:	f0 e1       	ldi	r31, 0x10	; 16
    4170:	43 8d       	ldd	r20, Z+27	; 0x1b
    4172:	54 8d       	ldd	r21, Z+28	; 0x1c
    4174:	4f 5f       	subi	r20, 0xFF	; 255
    4176:	5f 4f       	sbci	r21, 0xFF	; 255
    4178:	54 8f       	std	Z+28, r21	; 0x1c
    417a:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    417c:	3f 7e       	andi	r19, 0xEF	; 239
    417e:	30 93 3a 03 	sts	0x033A, r19
    4182:	20 93 39 03 	sts	0x0339, r18
							rtc.interupts|=(1<<Timerlauft);;
    4186:	92 62       	ori	r25, 0x22	; 34
    4188:	90 8f       	std	Z+24, r25	; 0x18
							break;
    418a:	69 c2       	rjmp	.+1234   	; 0x465e <__stack+0x55f>
						default:
						rtc.Timerzahler+=(taste-'0')*10*60;
    418c:	ef e3       	ldi	r30, 0x3F	; 63
    418e:	f0 e1       	ldi	r31, 0x10	; 16
    4190:	48 2f       	mov	r20, r24
    4192:	50 e0       	ldi	r21, 0x00	; 0
    4194:	40 53       	subi	r20, 0x30	; 48
    4196:	51 09       	sbc	r21, r1
    4198:	28 e5       	ldi	r18, 0x58	; 88
    419a:	32 e0       	ldi	r19, 0x02	; 2
    419c:	42 9f       	mul	r20, r18
    419e:	b0 01       	movw	r22, r0
    41a0:	43 9f       	mul	r20, r19
    41a2:	70 0d       	add	r23, r0
    41a4:	52 9f       	mul	r21, r18
    41a6:	70 0d       	add	r23, r0
    41a8:	11 24       	eor	r1, r1
    41aa:	23 8d       	ldd	r18, Z+27	; 0x1b
    41ac:	34 8d       	ldd	r19, Z+28	; 0x1c
    41ae:	26 0f       	add	r18, r22
    41b0:	37 1f       	adc	r19, r23
    41b2:	34 8f       	std	Z+28, r19	; 0x1c
    41b4:	23 8f       	std	Z+27, r18	; 0x1b
						pos++;
    41b6:	93 e0       	ldi	r25, 0x03	; 3
    41b8:	90 93 37 03 	sts	0x0337, r25
						break;
    41bc:	2a c2       	rjmp	.+1108   	; 0x4612 <__stack+0x513>
					}
					break;
				case 3:
					switch (taste)
    41be:	83 32       	cpi	r24, 0x23	; 35
    41c0:	19 f0       	breq	.+6      	; 0x41c8 <__stack+0xc9>
    41c2:	8a 32       	cpi	r24, 0x2A	; 42
    41c4:	41 f0       	breq	.+16     	; 0x41d6 <__stack+0xd7>
    41c6:	19 c0       	rjmp	.+50     	; 0x41fa <__stack+0xfb>
					{
						case '#':
							pos=0;
    41c8:	10 92 37 03 	sts	0x0337, r1
							rtc.Timerzahler=0;
    41cc:	10 92 5b 10 	sts	0x105B, r1
    41d0:	10 92 5a 10 	sts	0x105A, r1
							break;
    41d4:	08 95       	ret
						case '*':
							pos=0;
    41d6:	10 92 37 03 	sts	0x0337, r1
							rtc.Timerzahler++;
    41da:	ef e3       	ldi	r30, 0x3F	; 63
    41dc:	f0 e1       	ldi	r31, 0x10	; 16
    41de:	43 8d       	ldd	r20, Z+27	; 0x1b
    41e0:	54 8d       	ldd	r21, Z+28	; 0x1c
    41e2:	4f 5f       	subi	r20, 0xFF	; 255
    41e4:	5f 4f       	sbci	r21, 0xFF	; 255
    41e6:	54 8f       	std	Z+28, r21	; 0x1c
    41e8:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    41ea:	3f 7e       	andi	r19, 0xEF	; 239
    41ec:	30 93 3a 03 	sts	0x033A, r19
    41f0:	20 93 39 03 	sts	0x0339, r18
							rtc.interupts|=(1<<Timerlauft);
    41f4:	92 62       	ori	r25, 0x22	; 34
    41f6:	90 8f       	std	Z+24, r25	; 0x18
							break;
    41f8:	32 c2       	rjmp	.+1124   	; 0x465e <__stack+0x55f>
						default:
						rtc.Timerzahler+=(taste-'0')*60;
    41fa:	ef e3       	ldi	r30, 0x3F	; 63
    41fc:	f0 e1       	ldi	r31, 0x10	; 16
    41fe:	48 2f       	mov	r20, r24
    4200:	50 e0       	ldi	r21, 0x00	; 0
    4202:	40 53       	subi	r20, 0x30	; 48
    4204:	51 09       	sbc	r21, r1
    4206:	9c e3       	ldi	r25, 0x3C	; 60
    4208:	94 9f       	mul	r25, r20
    420a:	b0 01       	movw	r22, r0
    420c:	95 9f       	mul	r25, r21
    420e:	70 0d       	add	r23, r0
    4210:	11 24       	eor	r1, r1
    4212:	23 8d       	ldd	r18, Z+27	; 0x1b
    4214:	34 8d       	ldd	r19, Z+28	; 0x1c
    4216:	26 0f       	add	r18, r22
    4218:	37 1f       	adc	r19, r23
    421a:	34 8f       	std	Z+28, r19	; 0x1c
    421c:	23 8f       	std	Z+27, r18	; 0x1b
						pos++;
    421e:	94 e0       	ldi	r25, 0x04	; 4
    4220:	90 93 37 03 	sts	0x0337, r25
						break;
    4224:	f6 c1       	rjmp	.+1004   	; 0x4612 <__stack+0x513>
					}
					break;
				case 4:
					switch (taste)
    4226:	83 32       	cpi	r24, 0x23	; 35
    4228:	19 f0       	breq	.+6      	; 0x4230 <__stack+0x131>
    422a:	8a 32       	cpi	r24, 0x2A	; 42
    422c:	41 f0       	breq	.+16     	; 0x423e <__stack+0x13f>
    422e:	19 c0       	rjmp	.+50     	; 0x4262 <__stack+0x163>
					{
						case '#':
							pos=0;
    4230:	10 92 37 03 	sts	0x0337, r1
							rtc.Timerzahler=0;
    4234:	10 92 5b 10 	sts	0x105B, r1
    4238:	10 92 5a 10 	sts	0x105A, r1
							break;
    423c:	08 95       	ret
						case '*':
							pos=0;
    423e:	10 92 37 03 	sts	0x0337, r1
							rtc.Timerzahler++;
    4242:	ef e3       	ldi	r30, 0x3F	; 63
    4244:	f0 e1       	ldi	r31, 0x10	; 16
    4246:	43 8d       	ldd	r20, Z+27	; 0x1b
    4248:	54 8d       	ldd	r21, Z+28	; 0x1c
    424a:	4f 5f       	subi	r20, 0xFF	; 255
    424c:	5f 4f       	sbci	r21, 0xFF	; 255
    424e:	54 8f       	std	Z+28, r21	; 0x1c
    4250:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    4252:	3f 7e       	andi	r19, 0xEF	; 239
    4254:	30 93 3a 03 	sts	0x033A, r19
    4258:	20 93 39 03 	sts	0x0339, r18
							rtc.interupts|=(1<<Timerlauft);
    425c:	92 62       	ori	r25, 0x22	; 34
    425e:	90 8f       	std	Z+24, r25	; 0x18
							break;
    4260:	fe c1       	rjmp	.+1020   	; 0x465e <__stack+0x55f>
						default:
						rtc.Timerzahler+=(taste-'0')*10*3600;
    4262:	ef e3       	ldi	r30, 0x3F	; 63
    4264:	f0 e1       	ldi	r31, 0x10	; 16
    4266:	48 2f       	mov	r20, r24
    4268:	50 e0       	ldi	r21, 0x00	; 0
    426a:	40 53       	subi	r20, 0x30	; 48
    426c:	51 09       	sbc	r21, r1
    426e:	20 ea       	ldi	r18, 0xA0	; 160
    4270:	3c e8       	ldi	r19, 0x8C	; 140
    4272:	42 9f       	mul	r20, r18
    4274:	b0 01       	movw	r22, r0
    4276:	43 9f       	mul	r20, r19
    4278:	70 0d       	add	r23, r0
    427a:	52 9f       	mul	r21, r18
    427c:	70 0d       	add	r23, r0
    427e:	11 24       	eor	r1, r1
    4280:	23 8d       	ldd	r18, Z+27	; 0x1b
    4282:	34 8d       	ldd	r19, Z+28	; 0x1c
    4284:	26 0f       	add	r18, r22
    4286:	37 1f       	adc	r19, r23
    4288:	34 8f       	std	Z+28, r19	; 0x1c
    428a:	23 8f       	std	Z+27, r18	; 0x1b
						pos++;
    428c:	95 e0       	ldi	r25, 0x05	; 5
    428e:	90 93 37 03 	sts	0x0337, r25
						break;
    4292:	bf c1       	rjmp	.+894    	; 0x4612 <__stack+0x513>
					}
					break;
				case 5:
					switch (taste)
    4294:	83 32       	cpi	r24, 0x23	; 35
    4296:	19 f0       	breq	.+6      	; 0x429e <__stack+0x19f>
    4298:	8a 32       	cpi	r24, 0x2A	; 42
    429a:	31 f0       	breq	.+12     	; 0x42a8 <__stack+0x1a9>
    429c:	15 c0       	rjmp	.+42     	; 0x42c8 <__stack+0x1c9>
					{
						case '#':
							pos=0;
							rtc.Timerzahler=0;
    429e:	10 92 5b 10 	sts	0x105B, r1
    42a2:	10 92 5a 10 	sts	0x105A, r1
							break;
    42a6:	25 c0       	rjmp	.+74     	; 0x42f2 <__stack+0x1f3>
						case '*':
							pos=0;
							rtc.Timerzahler++;
    42a8:	ef e3       	ldi	r30, 0x3F	; 63
    42aa:	f0 e1       	ldi	r31, 0x10	; 16
    42ac:	43 8d       	ldd	r20, Z+27	; 0x1b
    42ae:	54 8d       	ldd	r21, Z+28	; 0x1c
    42b0:	4f 5f       	subi	r20, 0xFF	; 255
    42b2:	5f 4f       	sbci	r21, 0xFF	; 255
    42b4:	54 8f       	std	Z+28, r21	; 0x1c
    42b6:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    42b8:	3f 7e       	andi	r19, 0xEF	; 239
    42ba:	30 93 3a 03 	sts	0x033A, r19
    42be:	20 93 39 03 	sts	0x0339, r18
							rtc.interupts|=(1<<Timerlauft);
    42c2:	92 62       	ori	r25, 0x22	; 34
    42c4:	90 8f       	std	Z+24, r25	; 0x18
							break;
    42c6:	15 c0       	rjmp	.+42     	; 0x42f2 <__stack+0x1f3>
						default:
						rtc.Timerzahler+=(taste-'0')*3600;
    42c8:	ef e3       	ldi	r30, 0x3F	; 63
    42ca:	f0 e1       	ldi	r31, 0x10	; 16
    42cc:	48 2f       	mov	r20, r24
    42ce:	50 e0       	ldi	r21, 0x00	; 0
    42d0:	40 53       	subi	r20, 0x30	; 48
    42d2:	51 09       	sbc	r21, r1
    42d4:	20 e1       	ldi	r18, 0x10	; 16
    42d6:	3e e0       	ldi	r19, 0x0E	; 14
    42d8:	42 9f       	mul	r20, r18
    42da:	b0 01       	movw	r22, r0
    42dc:	43 9f       	mul	r20, r19
    42de:	70 0d       	add	r23, r0
    42e0:	52 9f       	mul	r21, r18
    42e2:	70 0d       	add	r23, r0
    42e4:	11 24       	eor	r1, r1
    42e6:	23 8d       	ldd	r18, Z+27	; 0x1b
    42e8:	34 8d       	ldd	r19, Z+28	; 0x1c
    42ea:	26 0f       	add	r18, r22
    42ec:	37 1f       	adc	r19, r23
    42ee:	34 8f       	std	Z+28, r19	; 0x1c
    42f0:	23 8f       	std	Z+27, r18	; 0x1b
						pos++;
						break;
					}
					pos=0;
    42f2:	10 92 37 03 	sts	0x0337, r1
					rtc.Timerzahler++;
    42f6:	ef e3       	ldi	r30, 0x3F	; 63
    42f8:	f0 e1       	ldi	r31, 0x10	; 16
    42fa:	23 8d       	ldd	r18, Z+27	; 0x1b
    42fc:	34 8d       	ldd	r19, Z+28	; 0x1c
    42fe:	2f 5f       	subi	r18, 0xFF	; 255
    4300:	3f 4f       	sbci	r19, 0xFF	; 255
    4302:	34 8f       	std	Z+28, r19	; 0x1c
    4304:	23 8f       	std	Z+27, r18	; 0x1b
					anzeige&=~(1<<Einstellungsflag);
    4306:	20 91 39 03 	lds	r18, 0x0339
    430a:	30 91 3a 03 	lds	r19, 0x033A
    430e:	3f 7e       	andi	r19, 0xEF	; 239
    4310:	30 93 3a 03 	sts	0x033A, r19
    4314:	20 93 39 03 	sts	0x0339, r18
					rtc.interupts|=(1<<Timerlauft);
    4318:	90 8d       	ldd	r25, Z+24	; 0x18
    431a:	90 62       	ori	r25, 0x20	; 32
    431c:	90 8f       	std	Z+24, r25	; 0x18
					break;
    431e:	79 c1       	rjmp	.+754    	; 0x4612 <__stack+0x513>
    4320:	a9 01       	movw	r20, r18
    4322:	44 27       	eor	r20, r20
    4324:	58 71       	andi	r21, 0x18	; 24
				default:
					break;
			}
		}
		else if (((anzeige&(1<<Einstellungsflag))&&(anzeige&(1<<Wanderflag))))
    4326:	41 15       	cp	r20, r1
    4328:	58 41       	sbci	r21, 0x18	; 24
    432a:	d9 f4       	brne	.+54     	; 0x4362 <__stack+0x263>
		{
			if (pos==7)
    432c:	90 91 37 03 	lds	r25, 0x0337
    4330:	97 30       	cpi	r25, 0x07	; 7
    4332:	61 f4       	brne	.+24     	; 0x434c <__stack+0x24d>
			{
				if (taste == '*')
    4334:	8a 32       	cpi	r24, 0x2A	; 42
    4336:	69 f4       	brne	.+26     	; 0x4352 <__stack+0x253>
				{
					pos=6;
    4338:	86 e0       	ldi	r24, 0x06	; 6
    433a:	80 93 37 03 	sts	0x0337, r24
		}
		else if (anzeige==0)
		{
			anzeige|=(1<<menueflag);
		}
		if ((anzeige&(1<<blinkflag)))
    433e:	20 91 39 03 	lds	r18, 0x0339
    4342:	30 91 3a 03 	lds	r19, 0x033A
    4346:	36 fd       	sbrc	r19, 6
    4348:	6c c1       	rjmp	.+728    	; 0x4622 <__stack+0x523>
    434a:	08 95       	ret
				{
					pos=6;
				}
			}
			else{
				pos=6;
    434c:	96 e0       	ldi	r25, 0x06	; 6
    434e:	90 93 37 03 	sts	0x0337, r25
			}
			if (taste=='0')
    4352:	80 33       	cpi	r24, 0x30	; 48
    4354:	09 f0       	breq	.+2      	; 0x4358 <__stack+0x259>
    4356:	5d c1       	rjmp	.+698    	; 0x4612 <__stack+0x513>
			{
				Accelerometer.Schrittzaehler = 0;
    4358:	10 92 52 0b 	sts	0x0B52, r1
    435c:	10 92 51 0b 	sts	0x0B51, r1
    4360:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    4362:	23 ff       	sbrs	r18, 3
    4364:	22 c0       	rjmp	.+68     	; 0x43aa <__stack+0x2ab>
		{
			if (taste=='*')
    4366:	8a 32       	cpi	r24, 0x2A	; 42
    4368:	59 f4       	brne	.+22     	; 0x4380 <__stack+0x281>
			{
				if ((rtc.interupts&(1<<Stoppuhrlauft)))
    436a:	96 ff       	sbrs	r25, 6
    436c:	05 c0       	rjmp	.+10     	; 0x4378 <__stack+0x279>
				{
					rtc.interupts&=~(1<<Stoppuhrlauft);
    436e:	9f 7b       	andi	r25, 0xBF	; 191
    4370:	92 60       	ori	r25, 0x02	; 2
    4372:	90 93 57 10 	sts	0x1057, r25
    4376:	73 c1       	rjmp	.+742    	; 0x465e <__stack+0x55f>
				}
				else{
					rtc.interupts|=(1<<Stoppuhrlauft);
    4378:	92 64       	ori	r25, 0x42	; 66
    437a:	90 93 57 10 	sts	0x1057, r25
    437e:	6f c1       	rjmp	.+734    	; 0x465e <__stack+0x55f>
				}
			}
			else if (taste=='0')
    4380:	80 33       	cpi	r24, 0x30	; 48
    4382:	29 f4       	brne	.+10     	; 0x438e <__stack+0x28f>
			{
				rtc.Stoppuhrzahler=0;
    4384:	10 92 5d 10 	sts	0x105D, r1
    4388:	10 92 5c 10 	sts	0x105C, r1
    438c:	08 95       	ret
			}
			else if (taste=='#')
    438e:	83 32       	cpi	r24, 0x23	; 35
    4390:	09 f0       	breq	.+2      	; 0x4394 <__stack+0x295>
    4392:	6b c1       	rjmp	.+726    	; 0x466a <__stack+0x56b>
			{
				anzeige&=~((1<<Stoppuhrflag));
				rtc.interupts&=~(1<<Stoppuhrlauft);
    4394:	9f 7b       	andi	r25, 0xBF	; 191
    4396:	92 60       	ori	r25, 0x02	; 2
    4398:	90 93 57 10 	sts	0x1057, r25
			{
				rtc.Stoppuhrzahler=0;
			}
			else if (taste=='#')
			{
				anzeige&=~((1<<Stoppuhrflag));
    439c:	27 7f       	andi	r18, 0xF7	; 247
				rtc.interupts&=~(1<<Stoppuhrlauft);
				anzeige|=(1<<menueflag);
    439e:	30 62       	ori	r19, 0x20	; 32
    43a0:	30 93 3a 03 	sts	0x033A, r19
    43a4:	20 93 39 03 	sts	0x0339, r18
    43a8:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflag)))
    43aa:	21 ff       	sbrs	r18, 1
    43ac:	29 c0       	rjmp	.+82     	; 0x4400 <__stack+0x301>
		{
			if (taste=='#')
    43ae:	83 32       	cpi	r24, 0x23	; 35
    43b0:	49 f4       	brne	.+18     	; 0x43c4 <__stack+0x2c5>
			{
				pos=0;
    43b2:	10 92 37 03 	sts	0x0337, r1
				anzeige&=~(1<<Uhrflag);
    43b6:	2d 7f       	andi	r18, 0xFD	; 253
				anzeige|=(1<<menueflag);
    43b8:	30 62       	ori	r19, 0x20	; 32
    43ba:	30 93 3a 03 	sts	0x033A, r19
    43be:	20 93 39 03 	sts	0x0339, r18
    43c2:	08 95       	ret
			}
			else if (taste=='*')
    43c4:	8a 32       	cpi	r24, 0x2A	; 42
    43c6:	49 f4       	brne	.+18     	; 0x43da <__stack+0x2db>
			{
				pos++;
    43c8:	80 91 37 03 	lds	r24, 0x0337
    43cc:	8f 5f       	subi	r24, 0xFF	; 255
				if (pos>1)
    43ce:	82 30       	cpi	r24, 0x02	; 2
    43d0:	08 f4       	brcc	.+2      	; 0x43d4 <__stack+0x2d5>
    43d2:	43 c1       	rjmp	.+646    	; 0x465a <__stack+0x55b>
				{
					pos=0;
    43d4:	10 92 37 03 	sts	0x0337, r1
    43d8:	42 c1       	rjmp	.+644    	; 0x465e <__stack+0x55f>
				}
			}
			else if (taste=='0')
    43da:	80 33       	cpi	r24, 0x30	; 48
    43dc:	09 f0       	breq	.+2      	; 0x43e0 <__stack+0x2e1>
    43de:	45 c1       	rjmp	.+650    	; 0x466a <__stack+0x56b>
			{
				if (LED.ison())
    43e0:	80 e3       	ldi	r24, 0x30	; 48
    43e2:	9c e0       	ldi	r25, 0x0C	; 12
    43e4:	0e 94 1b 2e 	call	0x5c36	; 0x5c36 <_ZN6Output4isonEv>
    43e8:	88 23       	and	r24, r24
    43ea:	29 f0       	breq	.+10     	; 0x43f6 <__stack+0x2f7>
				{
					LED.off();
    43ec:	80 e3       	ldi	r24, 0x30	; 48
    43ee:	9c e0       	ldi	r25, 0x0C	; 12
    43f0:	0c 94 56 2e 	jmp	0x5cac	; 0x5cac <_ZN6Output3offEv>
    43f4:	08 95       	ret
				}
				else{
					LED.on();
    43f6:	80 e3       	ldi	r24, 0x30	; 48
    43f8:	9c e0       	ldi	r25, 0x0C	; 12
    43fa:	0c 94 de 2d 	jmp	0x5bbc	; 0x5bbc <_ZN6Output2onEv>
    43fe:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Kompasflag)))
    4400:	27 ff       	sbrs	r18, 7
    4402:	1d c0       	rjmp	.+58     	; 0x443e <__stack+0x33f>
		{
			if (taste=='#')
    4404:	83 32       	cpi	r24, 0x23	; 35
    4406:	41 f4       	brne	.+16     	; 0x4418 <__stack+0x319>
			{
				anzeige&=~(1<<Kompasflag);
    4408:	c9 01       	movw	r24, r18
    440a:	8f 77       	andi	r24, 0x7F	; 127
				anzeige|=(1<<menueflag);
    440c:	90 62       	ori	r25, 0x20	; 32
    440e:	90 93 3a 03 	sts	0x033A, r25
    4412:	80 93 39 03 	sts	0x0339, r24
    4416:	08 95       	ret
			}
			else if (taste=='0')
    4418:	80 33       	cpi	r24, 0x30	; 48
    441a:	09 f0       	breq	.+2      	; 0x441e <__stack+0x31f>
    441c:	fa c0       	rjmp	.+500    	; 0x4612 <__stack+0x513>
			{
				if (LED.ison())
    441e:	80 e3       	ldi	r24, 0x30	; 48
    4420:	9c e0       	ldi	r25, 0x0C	; 12
    4422:	0e 94 1b 2e 	call	0x5c36	; 0x5c36 <_ZN6Output4isonEv>
    4426:	88 23       	and	r24, r24
    4428:	29 f0       	breq	.+10     	; 0x4434 <__stack+0x335>
				{
					LED.off();
    442a:	80 e3       	ldi	r24, 0x30	; 48
    442c:	9c e0       	ldi	r25, 0x0C	; 12
    442e:	0c 94 56 2e 	jmp	0x5cac	; 0x5cac <_ZN6Output3offEv>
    4432:	08 95       	ret
				}
				else{
					LED.on();
    4434:	80 e3       	ldi	r24, 0x30	; 48
    4436:	9c e0       	ldi	r25, 0x0C	; 12
    4438:	0c 94 de 2d 	jmp	0x5bbc	; 0x5bbc <_ZN6Output2onEv>
    443c:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Fahradflag)))
    443e:	20 ff       	sbrs	r18, 0
    4440:	3a c0       	rjmp	.+116    	; 0x44b6 <__stack+0x3b7>
		{
			if (taste=='#')
    4442:	83 32       	cpi	r24, 0x23	; 35
    4444:	51 f4       	brne	.+20     	; 0x445a <__stack+0x35b>
			{
				anzeige&=~(1<<Fahradflag);
    4446:	c9 01       	movw	r24, r18
    4448:	8e 7f       	andi	r24, 0xFE	; 254
				anzeige|=(1<<menueflag);
    444a:	90 62       	ori	r25, 0x20	; 32
    444c:	90 93 3a 03 	sts	0x033A, r25
    4450:	80 93 39 03 	sts	0x0339, r24
				inittimer(2);
    4454:	82 e0       	ldi	r24, 0x02	; 2
    4456:	bc c8       	rjmp	.-3720   	; 0x35d0 <_Z9inittimerh>
    4458:	08 95       	ret
			}
			else if (taste=='*')
    445a:	8a 32       	cpi	r24, 0x2A	; 42
    445c:	c9 f4       	brne	.+50     	; 0x4490 <__stack+0x391>
			{
				maxgeschw = 0;
    445e:	10 92 2a 03 	sts	0x032A, r1
    4462:	10 92 2b 03 	sts	0x032B, r1
    4466:	10 92 2c 03 	sts	0x032C, r1
    446a:	10 92 2d 03 	sts	0x032D, r1
				strecke = 0;
    446e:	10 92 2e 03 	sts	0x032E, r1
    4472:	10 92 2f 03 	sts	0x032F, r1
    4476:	10 92 30 03 	sts	0x0330, r1
    447a:	10 92 31 03 	sts	0x0331, r1
				Fahrtzeit = 0;
    447e:	10 92 26 03 	sts	0x0326, r1
    4482:	10 92 27 03 	sts	0x0327, r1
    4486:	10 92 28 03 	sts	0x0328, r1
    448a:	10 92 29 03 	sts	0x0329, r1
    448e:	e7 c0       	rjmp	.+462    	; 0x465e <__stack+0x55f>
			}
			else if (taste=='0')
    4490:	80 33       	cpi	r24, 0x30	; 48
    4492:	09 f0       	breq	.+2      	; 0x4496 <__stack+0x397>
    4494:	ea c0       	rjmp	.+468    	; 0x466a <__stack+0x56b>
			{
				if (LED.ison())
    4496:	80 e3       	ldi	r24, 0x30	; 48
    4498:	9c e0       	ldi	r25, 0x0C	; 12
    449a:	0e 94 1b 2e 	call	0x5c36	; 0x5c36 <_ZN6Output4isonEv>
    449e:	88 23       	and	r24, r24
    44a0:	29 f0       	breq	.+10     	; 0x44ac <__stack+0x3ad>
				{
					LED.off();
    44a2:	80 e3       	ldi	r24, 0x30	; 48
    44a4:	9c e0       	ldi	r25, 0x0C	; 12
    44a6:	0c 94 56 2e 	jmp	0x5cac	; 0x5cac <_ZN6Output3offEv>
    44aa:	08 95       	ret
				}
				else{
					LED.on();
    44ac:	80 e3       	ldi	r24, 0x30	; 48
    44ae:	9c e0       	ldi	r25, 0x0C	; 12
    44b0:	0c 94 de 2d 	jmp	0x5bbc	; 0x5bbc <_ZN6Output2onEv>
    44b4:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Druckflag)))
    44b6:	32 ff       	sbrs	r19, 2
    44b8:	1d c0       	rjmp	.+58     	; 0x44f4 <__stack+0x3f5>
		{
			if (taste=='#')
    44ba:	83 32       	cpi	r24, 0x23	; 35
    44bc:	41 f4       	brne	.+16     	; 0x44ce <__stack+0x3cf>
			{
				anzeige&=~(1<<Druckflag);
    44be:	c9 01       	movw	r24, r18
    44c0:	9b 7f       	andi	r25, 0xFB	; 251
				anzeige|=(1<<menueflag);
    44c2:	90 62       	ori	r25, 0x20	; 32
    44c4:	90 93 3a 03 	sts	0x033A, r25
    44c8:	80 93 39 03 	sts	0x0339, r24
    44cc:	08 95       	ret
			}
			else if (taste=='*')
			{
				//Baro.set_Pressure0(Baro.Press);
			}
			else if (taste=='0')
    44ce:	80 33       	cpi	r24, 0x30	; 48
    44d0:	09 f0       	breq	.+2      	; 0x44d4 <__stack+0x3d5>
    44d2:	9f c0       	rjmp	.+318    	; 0x4612 <__stack+0x513>
			{
				if (LED.ison())
    44d4:	80 e3       	ldi	r24, 0x30	; 48
    44d6:	9c e0       	ldi	r25, 0x0C	; 12
    44d8:	0e 94 1b 2e 	call	0x5c36	; 0x5c36 <_ZN6Output4isonEv>
    44dc:	88 23       	and	r24, r24
    44de:	29 f0       	breq	.+10     	; 0x44ea <__stack+0x3eb>
				{
					LED.off();
    44e0:	80 e3       	ldi	r24, 0x30	; 48
    44e2:	9c e0       	ldi	r25, 0x0C	; 12
    44e4:	0c 94 56 2e 	jmp	0x5cac	; 0x5cac <_ZN6Output3offEv>
    44e8:	08 95       	ret
				}
				else{
					LED.on();
    44ea:	80 e3       	ldi	r24, 0x30	; 48
    44ec:	9c e0       	ldi	r25, 0x0C	; 12
    44ee:	0c 94 de 2d 	jmp	0x5bbc	; 0x5bbc <_ZN6Output2onEv>
    44f2:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Timerflag)))
    44f4:	22 ff       	sbrs	r18, 2
    44f6:	25 c0       	rjmp	.+74     	; 0x4542 <__stack+0x443>
		{
			if (taste=='#')
    44f8:	83 32       	cpi	r24, 0x23	; 35
    44fa:	09 f0       	breq	.+2      	; 0x44fe <__stack+0x3ff>
    44fc:	8a c0       	rjmp	.+276    	; 0x4612 <__stack+0x513>
			{
				anzeige&=~((1<<Timerflag)|(1<<blinkflag));
    44fe:	2b 7f       	andi	r18, 0xFB	; 251
    4500:	3f 7b       	andi	r19, 0xBF	; 191
    4502:	30 93 3a 03 	sts	0x033A, r19
    4506:	20 93 39 03 	sts	0x0339, r18
				rtc.interupts&=~((1<<Timerlauft)|(1<<Alarm));
    450a:	89 2f       	mov	r24, r25
    450c:	8e 7d       	andi	r24, 0xDE	; 222
    450e:	82 60       	ori	r24, 0x02	; 2
    4510:	80 93 57 10 	sts	0x1057, r24
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    4514:	60 e0       	ldi	r22, 0x00	; 0
    4516:	8e e3       	ldi	r24, 0x3E	; 62
    4518:	9c e0       	ldi	r25, 0x0C	; 12
    451a:	0e 94 4a 03 	call	0x694	; 0x694 <_ZN7Display6invertEh>
				LED.off();
    451e:	80 e3       	ldi	r24, 0x30	; 48
    4520:	9c e0       	ldi	r25, 0x0C	; 12
    4522:	0e 94 56 2e 	call	0x5cac	; 0x5cac <_ZN6Output3offEv>
				Vibrationsmotor.off();
    4526:	8e e2       	ldi	r24, 0x2E	; 46
    4528:	9c e0       	ldi	r25, 0x0C	; 12
    452a:	0e 94 56 2e 	call	0x5cac	; 0x5cac <_ZN6Output3offEv>
				
				anzeige|=(1<<menueflag);
    452e:	80 91 39 03 	lds	r24, 0x0339
    4532:	90 91 3a 03 	lds	r25, 0x033A
    4536:	90 62       	ori	r25, 0x20	; 32
    4538:	90 93 3a 03 	sts	0x033A, r25
    453c:	80 93 39 03 	sts	0x0339, r24
    4540:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflaggross)))
    4542:	25 ff       	sbrs	r18, 5
    4544:	25 c0       	rjmp	.+74     	; 0x4590 <__stack+0x491>
		{
			if (taste=='#')
    4546:	83 32       	cpi	r24, 0x23	; 35
    4548:	41 f4       	brne	.+16     	; 0x455a <__stack+0x45b>
			{
				anzeige&=~(1<<Uhrflaggross);
    454a:	c9 01       	movw	r24, r18
    454c:	8f 7d       	andi	r24, 0xDF	; 223
				anzeige|=(1<<menueflag);
    454e:	90 62       	ori	r25, 0x20	; 32
    4550:	90 93 3a 03 	sts	0x033A, r25
    4554:	80 93 39 03 	sts	0x0339, r24
    4558:	08 95       	ret
			}
			else if (taste=='0')
    455a:	80 33       	cpi	r24, 0x30	; 48
    455c:	09 f0       	breq	.+2      	; 0x4560 <__stack+0x461>
    455e:	59 c0       	rjmp	.+178    	; 0x4612 <__stack+0x513>
			{
				if (LED.ison())
    4560:	80 e3       	ldi	r24, 0x30	; 48
    4562:	9c e0       	ldi	r25, 0x0C	; 12
    4564:	0e 94 1b 2e 	call	0x5c36	; 0x5c36 <_ZN6Output4isonEv>
    4568:	88 23       	and	r24, r24
    456a:	49 f0       	breq	.+18     	; 0x457e <__stack+0x47f>
				{
					LED.off();
    456c:	80 e3       	ldi	r24, 0x30	; 48
    456e:	9c e0       	ldi	r25, 0x0C	; 12
    4570:	0e 94 56 2e 	call	0x5cac	; 0x5cac <_ZN6Output3offEv>
					Lautsprecher.off();
    4574:	8f e3       	ldi	r24, 0x3F	; 63
    4576:	9b e0       	ldi	r25, 0x0B	; 11
    4578:	0c 94 39 30 	jmp	0x6072	; 0x6072 <_ZN5SOUND3offEv>
    457c:	08 95       	ret
				}
				else{
					LED.on();
    457e:	80 e3       	ldi	r24, 0x30	; 48
    4580:	9c e0       	ldi	r25, 0x0C	; 12
    4582:	0e 94 de 2d 	call	0x5bbc	; 0x5bbc <_ZN6Output2onEv>
					Lautsprecher.on();
    4586:	8f e3       	ldi	r24, 0x3F	; 63
    4588:	9b e0       	ldi	r25, 0x0B	; 11
    458a:	0c 94 30 30 	jmp	0x6060	; 0x6060 <_ZN5SOUND2onEv>
    458e:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Wanderflag)))
    4590:	33 ff       	sbrs	r19, 3
    4592:	0e c0       	rjmp	.+28     	; 0x45b0 <__stack+0x4b1>
		{
			if (taste=='#')
    4594:	83 32       	cpi	r24, 0x23	; 35
    4596:	e9 f5       	brne	.+122    	; 0x4612 <__stack+0x513>
			{
				anzeige &= ~(1<<Wanderflag);
    4598:	c9 01       	movw	r24, r18
    459a:	97 7f       	andi	r25, 0xF7	; 247
				anzeige |= (1<<menueflag);
    459c:	90 62       	ori	r25, 0x20	; 32
    459e:	90 93 3a 03 	sts	0x033A, r25
    45a2:	80 93 39 03 	sts	0x0339, r24
				Accelerometer.ACCBypassmode();
    45a6:	81 e4       	ldi	r24, 0x41	; 65
    45a8:	9b e0       	ldi	r25, 0x0B	; 11
    45aa:	0c 94 1c 2b 	jmp	0x5638	; 0x5638 <_ZN7LSM303D13ACCBypassmodeEv>
    45ae:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    45b0:	26 ff       	sbrs	r18, 6
    45b2:	26 c0       	rjmp	.+76     	; 0x4600 <__stack+0x501>
		{
			if (taste=='#')
    45b4:	83 32       	cpi	r24, 0x23	; 35
    45b6:	41 f4       	brne	.+16     	; 0x45c8 <__stack+0x4c9>
			{
				anzeige&=~(1<<Weckeranzeigeflag);
    45b8:	c9 01       	movw	r24, r18
    45ba:	8f 7b       	andi	r24, 0xBF	; 191
				anzeige|=(1<<menueflag);
    45bc:	90 62       	ori	r25, 0x20	; 32
    45be:	90 93 3a 03 	sts	0x033A, r25
    45c2:	80 93 39 03 	sts	0x0339, r24
    45c6:	08 95       	ret
			}
			if (taste=='*')
    45c8:	8a 32       	cpi	r24, 0x2A	; 42
    45ca:	09 f0       	breq	.+2      	; 0x45ce <__stack+0x4cf>
    45cc:	4e c0       	rjmp	.+156    	; 0x466a <__stack+0x56b>
			{
				if (rtc.interupts&(1<<Weckeractiv))
    45ce:	94 ff       	sbrs	r25, 4
    45d0:	06 c0       	rjmp	.+12     	; 0x45de <__stack+0x4df>
				{
					rtc.interupts &= ~((1<<Weckerein) | (1<<Weckeractiv));
    45d2:	89 2f       	mov	r24, r25
    45d4:	87 7e       	andi	r24, 0xE7	; 231
    45d6:	82 60       	ori	r24, 0x02	; 2
    45d8:	80 93 57 10 	sts	0x1057, r24
    45dc:	0b c0       	rjmp	.+22     	; 0x45f4 <__stack+0x4f5>
				}
				else if ((rtc.interupts&(1<<Weckerein)))
    45de:	93 ff       	sbrs	r25, 3
    45e0:	06 c0       	rjmp	.+12     	; 0x45ee <__stack+0x4ef>
				{
					rtc.interupts &= ~(1<<Weckerein);
    45e2:	89 2f       	mov	r24, r25
    45e4:	87 7f       	andi	r24, 0xF7	; 247
    45e6:	82 60       	ori	r24, 0x02	; 2
    45e8:	80 93 57 10 	sts	0x1057, r24
    45ec:	03 c0       	rjmp	.+6      	; 0x45f4 <__stack+0x4f5>
				}
				else{
					rtc.interupts |= (1<<Weckerein);
    45ee:	9a 60       	ori	r25, 0x0A	; 10
    45f0:	90 93 57 10 	sts	0x1057, r25
				}
				rtc.interupts|=(1<<minuteninterupt);
    45f4:	ef e3       	ldi	r30, 0x3F	; 63
    45f6:	f0 e1       	ldi	r31, 0x10	; 16
    45f8:	80 8d       	ldd	r24, Z+24	; 0x18
    45fa:	84 60       	ori	r24, 0x04	; 4
    45fc:	80 8f       	std	Z+24, r24	; 0x18
    45fe:	2f c0       	rjmp	.+94     	; 0x465e <__stack+0x55f>
			}
		}
		else if (anzeige==0)
    4600:	23 2b       	or	r18, r19
    4602:	39 f4       	brne	.+14     	; 0x4612 <__stack+0x513>
		{
			anzeige|=(1<<menueflag);
    4604:	80 e0       	ldi	r24, 0x00	; 0
    4606:	90 e2       	ldi	r25, 0x20	; 32
    4608:	90 93 3a 03 	sts	0x033A, r25
    460c:	80 93 39 03 	sts	0x0339, r24
    4610:	08 95       	ret
		}
		if ((anzeige&(1<<blinkflag)))
    4612:	20 91 39 03 	lds	r18, 0x0339
    4616:	30 91 3a 03 	lds	r19, 0x033A
    461a:	36 ff       	sbrs	r19, 6
    461c:	26 c0       	rjmp	.+76     	; 0x466a <__stack+0x56b>
		{
			if (taste=='*')
    461e:	8a 32       	cpi	r24, 0x2A	; 42
    4620:	21 f5       	brne	.+72     	; 0x466a <__stack+0x56b>
			{
				anzeige &=~(1<<blinkflag);
    4622:	3f 7b       	andi	r19, 0xBF	; 191
    4624:	30 93 3a 03 	sts	0x033A, r19
    4628:	20 93 39 03 	sts	0x0339, r18
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    462c:	60 e0       	ldi	r22, 0x00	; 0
    462e:	8e e3       	ldi	r24, 0x3E	; 62
    4630:	9c e0       	ldi	r25, 0x0C	; 12
    4632:	0e 94 4a 03 	call	0x694	; 0x694 <_ZN7Display6invertEh>
				LED.off();
    4636:	80 e3       	ldi	r24, 0x30	; 48
    4638:	9c e0       	ldi	r25, 0x0C	; 12
    463a:	0e 94 56 2e 	call	0x5cac	; 0x5cac <_ZN6Output3offEv>
				Vibrationsmotor.off();
    463e:	8e e2       	ldi	r24, 0x2E	; 46
    4640:	9c e0       	ldi	r25, 0x0C	; 12
    4642:	0e 94 56 2e 	call	0x5cac	; 0x5cac <_ZN6Output3offEv>
				if ((rtc.interupts&(1<<Weckeractiv)))
    4646:	80 91 57 10 	lds	r24, 0x1057
    464a:	98 2f       	mov	r25, r24
    464c:	98 71       	andi	r25, 0x18	; 24
				{
					if ((rtc.interupts&(1<<Weckerein)))
    464e:	98 31       	cpi	r25, 0x18	; 24
    4650:	61 f4       	brne	.+24     	; 0x466a <__stack+0x56b>
					{
						rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
						rtc.interupts &= ~(1<<Alarm);
    4652:	86 7e       	andi	r24, 0xE6	; 230
    4654:	80 93 57 10 	sts	0x1057, r24
    4658:	08 95       	ret
				anzeige&=~(1<<Uhrflag);
				anzeige|=(1<<menueflag);
			}
			else if (taste=='*')
			{
				pos++;
    465a:	80 93 37 03 	sts	0x0337, r24
		}
		else if (anzeige==0)
		{
			anzeige|=(1<<menueflag);
		}
		if ((anzeige&(1<<blinkflag)))
    465e:	20 91 39 03 	lds	r18, 0x0339
    4662:	30 91 3a 03 	lds	r19, 0x033A
    4666:	36 fd       	sbrc	r19, 6
    4668:	dc cf       	rjmp	.-72     	; 0x4622 <__stack+0x523>
    466a:	08 95       	ret

0000466c <main>:
void eingabehandler(uint8_t taste);

int main(void)
{
	//initialisierung
	initialisierung();
    466c:	0e 94 03 1b 	call	0x3606	; 0x3606 <_Z15initialisierungv>
    while(1)
    {
         //Steuerung der interupts durch Handler
         maininterupthandler();
    4670:	4b d8       	rcall	.-3946   	; 0x3708 <_Z19maininterupthandlerv>
         //Steuerung der Anzeige alle Sekunde zur aktualisierung maximale Aktulisierungsrate ist 1Hz
         anzeigehandler();
    4672:	80 d8       	rcall	.-3840   	; 0x3774 <_Z14anzeigehandlerv>
         //Tasthandler
         eingabehandler(Tastatur.Taster());
    4674:	82 e3       	ldi	r24, 0x32	; 50
    4676:	9c e0       	ldi	r25, 0x0C	; 12
    4678:	70 d3       	rcall	.+1760   	; 0x4d5a <_ZN9Interface6TasterEv>
    467a:	27 db       	rcall	.-2482   	; 0x3cca <_Z14eingabehandlerh>
void inittimer(uint8_t stat);
void maininterupthandler();
void anzeigehandler();
void eingabehandler(uint8_t taste);

int main(void)
    467c:	f9 cf       	rjmp	.-14     	; 0x4670 <main+0x4>

0000467e <_GLOBAL__sub_I_kompass>:
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    467e:	8e e5       	ldi	r24, 0x5E	; 94
    4680:	90 e1       	ldi	r25, 0x10	; 16
    4682:	40 d4       	rcall	.+2176   	; 0x4f04 <_ZN7KompassC1Ev>

#include "RTC.h"
RTC rtc;
    4684:	8f e3       	ldi	r24, 0x3F	; 63
    4686:	90 e1       	ldi	r25, 0x10	; 16
    4688:	0e 94 68 2f 	call	0x5ed0	; 0x5ed0 <_ZN3RTCC1Ev>

#include "Display.h"
Display oled;
    468c:	8e e3       	ldi	r24, 0x3E	; 62
    468e:	9c e0       	ldi	r25, 0x0C	; 12
    4690:	0e 94 3f 03 	call	0x67e	; 0x67e <_ZN7DisplayC1Ev>

#include "Interface.h"
Interface Tastatur;
    4694:	82 e3       	ldi	r24, 0x32	; 50
    4696:	9c e0       	ldi	r25, 0x0C	; 12
    4698:	26 d3       	rcall	.+1612   	; 0x4ce6 <_ZN9InterfaceC1Ev>

#include "Output.h"
Output LED('B',PORTB1);
    469a:	41 e0       	ldi	r20, 0x01	; 1
    469c:	62 e4       	ldi	r22, 0x42	; 66
    469e:	80 e3       	ldi	r24, 0x30	; 48
    46a0:	9c e0       	ldi	r25, 0x0C	; 12
    46a2:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <_ZN6OutputC1Ehh>
Output Vibrationsmotor('B',PORTB2);
    46a6:	42 e0       	ldi	r20, 0x02	; 2
    46a8:	62 e4       	ldi	r22, 0x42	; 66
    46aa:	8e e2       	ldi	r24, 0x2E	; 46
    46ac:	9c e0       	ldi	r25, 0x0C	; 12
    46ae:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <_ZN6OutputC1Ehh>
Output IRLED('D',PORTD7);
    46b2:	47 e0       	ldi	r20, 0x07	; 7
    46b4:	64 e4       	ldi	r22, 0x44	; 68
    46b6:	8c e2       	ldi	r24, 0x2C	; 44
    46b8:	9c e0       	ldi	r25, 0x0C	; 12
    46ba:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <_ZN6OutputC1Ehh>
Output Sound('B',PORTB3);
    46be:	43 e0       	ldi	r20, 0x03	; 3
    46c0:	62 e4       	ldi	r22, 0x42	; 66
    46c2:	8a e2       	ldi	r24, 0x2A	; 42
    46c4:	9c e0       	ldi	r25, 0x0C	; 12
    46c6:	0e 94 a3 2d 	call	0x5b46	; 0x5b46 <_ZN6OutputC1Ehh>

#include "LSM303D.h"
LSM303D Accelerometer;
    46ca:	81 e4       	ldi	r24, 0x41	; 65
    46cc:	9b e0       	ldi	r25, 0x0B	; 11
    46ce:	cb d7       	rcall	.+3990   	; 0x5666 <_ZN7LSM303DC1Ev>

//#include "Pressure.h"
//Pressure Baro;

#include "SOUND.h"
SOUND Lautsprecher;
    46d0:	8f e3       	ldi	r24, 0x3F	; 63
    46d2:	9b e0       	ldi	r25, 0x0B	; 11
    46d4:	0e 94 59 30 	call	0x60b2	; 0x60b2 <_ZN5SOUNDC1Ev>

#include "GOL.h"
GOL gol;
    46d8:	8f e3       	ldi	r24, 0x3F	; 63
    46da:	93 e0       	ldi	r25, 0x03	; 3
    46dc:	49 c0       	rjmp	.+146    	; 0x4770 <_ZN3GOLC1Ev>
    46de:	08 95       	ret

000046e0 <_GLOBAL__sub_D_kompass>:
    46e0:	8f e3       	ldi	r24, 0x3F	; 63
    46e2:	93 e0       	ldi	r25, 0x03	; 3
    46e4:	26 d0       	rcall	.+76     	; 0x4732 <_ZN3GOLD1Ev>

//#include "Pressure.h"
//Pressure Baro;

#include "SOUND.h"
SOUND Lautsprecher;
    46e6:	8f e3       	ldi	r24, 0x3F	; 63
    46e8:	9b e0       	ldi	r25, 0x0B	; 11
    46ea:	0e 94 2f 30 	call	0x605e	; 0x605e <_ZN5SOUNDD1Ev>
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);

#include "LSM303D.h"
LSM303D Accelerometer;
    46ee:	81 e4       	ldi	r24, 0x41	; 65
    46f0:	9b e0       	ldi	r25, 0x0B	; 11
    46f2:	31 d6       	rcall	.+3170   	; 0x5356 <_ZN7LSM303DD1Ev>

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);
    46f4:	8a e2       	ldi	r24, 0x2A	; 42
    46f6:	9c e0       	ldi	r25, 0x0C	; 12
    46f8:	0e 94 dd 2d 	call	0x5bba	; 0x5bba <_ZN6OutputD1Ev>
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
    46fc:	8c e2       	ldi	r24, 0x2C	; 44
    46fe:	9c e0       	ldi	r25, 0x0C	; 12
    4700:	0e 94 dd 2d 	call	0x5bba	; 0x5bba <_ZN6OutputD1Ev>
#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
    4704:	8e e2       	ldi	r24, 0x2E	; 46
    4706:	9c e0       	ldi	r25, 0x0C	; 12
    4708:	0e 94 dd 2d 	call	0x5bba	; 0x5bba <_ZN6OutputD1Ev>

#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
    470c:	80 e3       	ldi	r24, 0x30	; 48
    470e:	9c e0       	ldi	r25, 0x0C	; 12
    4710:	0e 94 dd 2d 	call	0x5bba	; 0x5bba <_ZN6OutputD1Ev>

#include "Display.h"
Display oled;

#include "Interface.h"
Interface Tastatur;
    4714:	82 e3       	ldi	r24, 0x32	; 50
    4716:	9c e0       	ldi	r25, 0x0C	; 12
    4718:	f9 d2       	rcall	.+1522   	; 0x4d0c <_ZN9InterfaceD1Ev>

#include "RTC.h"
RTC rtc;

#include "Display.h"
Display oled;
    471a:	8e e3       	ldi	r24, 0x3E	; 62
    471c:	9c e0       	ldi	r25, 0x0C	; 12
    471e:	0e 94 c8 02 	call	0x590	; 0x590 <_ZN7DisplayD1Ev>

#include "Kompass.h"
Kompass kompass;

#include "RTC.h"
RTC rtc;
    4722:	8f e3       	ldi	r24, 0x3F	; 63
    4724:	90 e1       	ldi	r25, 0x10	; 16
    4726:	0e 94 e4 2e 	call	0x5dc8	; 0x5dc8 <_ZN3RTCD1Ev>
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    472a:	8e e5       	ldi	r24, 0x5E	; 94
    472c:	90 e1       	ldi	r25, 0x10	; 16
    472e:	cd c3       	rjmp	.+1946   	; 0x4eca <_ZN7KompassD1Ev>
    4730:	08 95       	ret

00004732 <_ZN3GOLD1Ev>:
		*y -= GOL_HIGHT;
	}
}

void GOL::set_value(uint8_t x, uint8_t y){
	playground_2[x+(y/8)*GOL_WIDTH] |= (1<<y&7);
    4732:	08 95       	ret

00004734 <_ZN3GOL17delete_playgroundEh>:
    4734:	61 11       	cpse	r22, r1
    4736:	09 c0       	rjmp	.+18     	; 0x474a <_ZN3GOL17delete_playgroundEh+0x16>
    4738:	fc 01       	movw	r30, r24
    473a:	9c 5f       	subi	r25, 0xFC	; 252
    473c:	dc 01       	movw	r26, r24
    473e:	11 92       	st	Z+, r1
    4740:	1d 92       	st	X+, r1
    4742:	8e 17       	cp	r24, r30
    4744:	9f 07       	cpc	r25, r31
    4746:	d9 f7       	brne	.-10     	; 0x473e <_ZN3GOL17delete_playgroundEh+0xa>
    4748:	08 95       	ret
    474a:	61 30       	cpi	r22, 0x01	; 1
    474c:	39 f4       	brne	.+14     	; 0x475c <_ZN3GOL17delete_playgroundEh+0x28>
    474e:	fc 01       	movw	r30, r24
    4750:	9c 5f       	subi	r25, 0xFC	; 252
    4752:	11 92       	st	Z+, r1
    4754:	e8 17       	cp	r30, r24
    4756:	f9 07       	cpc	r31, r25
    4758:	e1 f7       	brne	.-8      	; 0x4752 <_ZN3GOL17delete_playgroundEh+0x1e>
    475a:	08 95       	ret
    475c:	62 30       	cpi	r22, 0x02	; 2
    475e:	39 f4       	brne	.+14     	; 0x476e <_ZN3GOL17delete_playgroundEh+0x3a>
    4760:	fc 01       	movw	r30, r24
    4762:	fc 5f       	subi	r31, 0xFC	; 252
    4764:	98 5f       	subi	r25, 0xF8	; 248
    4766:	11 92       	st	Z+, r1
    4768:	e8 17       	cp	r30, r24
    476a:	f9 07       	cpc	r31, r25
    476c:	e1 f7       	brne	.-8      	; 0x4766 <_ZN3GOL17delete_playgroundEh+0x32>
    476e:	08 95       	ret

00004770 <_ZN3GOLC1Ev>:
    4770:	60 e0       	ldi	r22, 0x00	; 0
    4772:	e0 cf       	rjmp	.-64     	; 0x4734 <_ZN3GOL17delete_playgroundEh>
    4774:	08 95       	ret

00004776 <_ZN3GOL7check_xEPa>:
    4776:	fb 01       	movw	r30, r22
    4778:	80 81       	ld	r24, Z
    477a:	88 23       	and	r24, r24
    477c:	14 f4       	brge	.+4      	; 0x4782 <_ZN3GOL7check_xEPa+0xc>
    477e:	80 58       	subi	r24, 0x80	; 128
    4780:	80 83       	st	Z, r24
    4782:	08 95       	ret

00004784 <_ZN3GOL7check_yEPa>:
    4784:	fb 01       	movw	r30, r22
    4786:	80 81       	ld	r24, Z
    4788:	88 23       	and	r24, r24
    478a:	1c f4       	brge	.+6      	; 0x4792 <_ZN3GOL7check_yEPa+0xe>
    478c:	80 5c       	subi	r24, 0xC0	; 192
    478e:	80 83       	st	Z, r24
    4790:	08 95       	ret
    4792:	80 34       	cpi	r24, 0x40	; 64
    4794:	1c f0       	brlt	.+6      	; 0x479c <_ZN3GOL7check_yEPa+0x18>
    4796:	80 54       	subi	r24, 0x40	; 64
    4798:	fb 01       	movw	r30, r22
    479a:	80 83       	st	Z, r24
    479c:	08 95       	ret

0000479e <_ZN3GOL9build_sumEhh>:
    479e:	af 92       	push	r10
    47a0:	bf 92       	push	r11
    47a2:	cf 92       	push	r12
    47a4:	df 92       	push	r13
    47a6:	ef 92       	push	r14
    47a8:	ff 92       	push	r15
    47aa:	0f 93       	push	r16
    47ac:	1f 93       	push	r17
    47ae:	cf 93       	push	r28
    47b0:	df 93       	push	r29
    47b2:	00 d0       	rcall	.+0      	; 0x47b4 <_ZN3GOL9build_sumEhh+0x16>
    47b4:	cd b7       	in	r28, 0x3d	; 61
    47b6:	de b7       	in	r29, 0x3e	; 62
    47b8:	8c 01       	movw	r16, r24
    47ba:	a6 2e       	mov	r10, r22
    47bc:	e4 2e       	mov	r14, r20
    47be:	19 82       	std	Y+1, r1	; 0x01
    47c0:	dd 24       	eor	r13, r13
    47c2:	d3 94       	inc	r13
    47c4:	d6 0e       	add	r13, r22
    47c6:	da 82       	std	Y+2, r13	; 0x02
    47c8:	be 01       	movw	r22, r28
    47ca:	6e 5f       	subi	r22, 0xFE	; 254
    47cc:	7f 4f       	sbci	r23, 0xFF	; 255
    47ce:	d3 df       	rcall	.-90     	; 0x4776 <_ZN3GOL7check_xEPa>
    47d0:	e9 82       	std	Y+1, r14	; 0x01
    47d2:	be 01       	movw	r22, r28
    47d4:	6f 5f       	subi	r22, 0xFF	; 255
    47d6:	7f 4f       	sbci	r23, 0xFF	; 255
    47d8:	c8 01       	movw	r24, r16
    47da:	d4 df       	rcall	.-88     	; 0x4784 <_ZN3GOL7check_yEPa>
    47dc:	39 81       	ldd	r19, Y+1	; 0x01
    47de:	81 e0       	ldi	r24, 0x01	; 1
    47e0:	90 e0       	ldi	r25, 0x00	; 0
    47e2:	03 2e       	mov	r0, r19
    47e4:	02 c0       	rjmp	.+4      	; 0x47ea <_ZN3GOL9build_sumEhh+0x4c>
    47e6:	88 0f       	add	r24, r24
    47e8:	99 1f       	adc	r25, r25
    47ea:	0a 94       	dec	r0
    47ec:	e2 f7       	brpl	.-8      	; 0x47e6 <_ZN3GOL9build_sumEhh+0x48>
    47ee:	87 70       	andi	r24, 0x07	; 7
    47f0:	99 27       	eor	r25, r25
    47f2:	ea 81       	ldd	r30, Y+2	; 0x02
    47f4:	0e 2e       	mov	r0, r30
    47f6:	00 0c       	add	r0, r0
    47f8:	ff 0b       	sbc	r31, r31
    47fa:	23 2f       	mov	r18, r19
    47fc:	33 23       	and	r19, r19
    47fe:	14 f4       	brge	.+4      	; 0x4804 <_ZN3GOL9build_sumEhh+0x66>
    4800:	27 e0       	ldi	r18, 0x07	; 7
    4802:	23 0f       	add	r18, r19
    4804:	25 95       	asr	r18
    4806:	25 95       	asr	r18
    4808:	25 95       	asr	r18
    480a:	30 e8       	ldi	r19, 0x80	; 128
    480c:	23 03       	mulsu	r18, r19
    480e:	e0 0d       	add	r30, r0
    4810:	f1 1d       	adc	r31, r1
    4812:	11 24       	eor	r1, r1
    4814:	e0 0f       	add	r30, r16
    4816:	f1 1f       	adc	r31, r17
    4818:	20 81       	ld	r18, Z
    481a:	30 e0       	ldi	r19, 0x00	; 0
    481c:	82 23       	and	r24, r18
    481e:	93 23       	and	r25, r19
    4820:	ff 24       	eor	r15, r15
    4822:	f3 94       	inc	r15
    4824:	89 2b       	or	r24, r25
    4826:	09 f4       	brne	.+2      	; 0x482a <_ZN3GOL9build_sumEhh+0x8c>
    4828:	f1 2c       	mov	r15, r1
    482a:	bb 24       	eor	r11, r11
    482c:	ba 94       	dec	r11
    482e:	ba 0c       	add	r11, r10
    4830:	ba 82       	std	Y+2, r11	; 0x02
    4832:	be 01       	movw	r22, r28
    4834:	6e 5f       	subi	r22, 0xFE	; 254
    4836:	7f 4f       	sbci	r23, 0xFF	; 255
    4838:	c8 01       	movw	r24, r16
    483a:	9d df       	rcall	.-198    	; 0x4776 <_ZN3GOL7check_xEPa>
    483c:	e9 82       	std	Y+1, r14	; 0x01
    483e:	be 01       	movw	r22, r28
    4840:	6f 5f       	subi	r22, 0xFF	; 255
    4842:	7f 4f       	sbci	r23, 0xFF	; 255
    4844:	c8 01       	movw	r24, r16
    4846:	9e df       	rcall	.-196    	; 0x4784 <_ZN3GOL7check_yEPa>
    4848:	49 81       	ldd	r20, Y+1	; 0x01
    484a:	81 e0       	ldi	r24, 0x01	; 1
    484c:	90 e0       	ldi	r25, 0x00	; 0
    484e:	04 2e       	mov	r0, r20
    4850:	02 c0       	rjmp	.+4      	; 0x4856 <_ZN3GOL9build_sumEhh+0xb8>
    4852:	88 0f       	add	r24, r24
    4854:	99 1f       	adc	r25, r25
    4856:	0a 94       	dec	r0
    4858:	e2 f7       	brpl	.-8      	; 0x4852 <_ZN3GOL9build_sumEhh+0xb4>
    485a:	9c 01       	movw	r18, r24
    485c:	27 70       	andi	r18, 0x07	; 7
    485e:	33 27       	eor	r19, r19
    4860:	ea 81       	ldd	r30, Y+2	; 0x02
    4862:	0e 2e       	mov	r0, r30
    4864:	00 0c       	add	r0, r0
    4866:	ff 0b       	sbc	r31, r31
    4868:	84 2f       	mov	r24, r20
    486a:	44 23       	and	r20, r20
    486c:	14 f4       	brge	.+4      	; 0x4872 <_ZN3GOL9build_sumEhh+0xd4>
    486e:	87 e0       	ldi	r24, 0x07	; 7
    4870:	84 0f       	add	r24, r20
    4872:	48 2f       	mov	r20, r24
    4874:	45 95       	asr	r20
    4876:	45 95       	asr	r20
    4878:	45 95       	asr	r20
    487a:	50 e8       	ldi	r21, 0x80	; 128
    487c:	45 03       	mulsu	r20, r21
    487e:	e0 0d       	add	r30, r0
    4880:	f1 1d       	adc	r31, r1
    4882:	11 24       	eor	r1, r1
    4884:	e0 0f       	add	r30, r16
    4886:	f1 1f       	adc	r31, r17
    4888:	80 81       	ld	r24, Z
    488a:	90 e0       	ldi	r25, 0x00	; 0
    488c:	82 23       	and	r24, r18
    488e:	93 23       	and	r25, r19
    4890:	89 2b       	or	r24, r25
    4892:	09 f0       	breq	.+2      	; 0x4896 <_ZN3GOL9build_sumEhh+0xf8>
    4894:	f3 94       	inc	r15
    4896:	aa 82       	std	Y+2, r10	; 0x02
    4898:	be 01       	movw	r22, r28
    489a:	6e 5f       	subi	r22, 0xFE	; 254
    489c:	7f 4f       	sbci	r23, 0xFF	; 255
    489e:	c8 01       	movw	r24, r16
    48a0:	6a df       	rcall	.-300    	; 0x4776 <_ZN3GOL7check_xEPa>
    48a2:	cc 24       	eor	r12, r12
    48a4:	c3 94       	inc	r12
    48a6:	ce 0c       	add	r12, r14
    48a8:	c9 82       	std	Y+1, r12	; 0x01
    48aa:	be 01       	movw	r22, r28
    48ac:	6f 5f       	subi	r22, 0xFF	; 255
    48ae:	7f 4f       	sbci	r23, 0xFF	; 255
    48b0:	c8 01       	movw	r24, r16
    48b2:	68 df       	rcall	.-304    	; 0x4784 <_ZN3GOL7check_yEPa>
    48b4:	49 81       	ldd	r20, Y+1	; 0x01
    48b6:	81 e0       	ldi	r24, 0x01	; 1
    48b8:	90 e0       	ldi	r25, 0x00	; 0
    48ba:	04 2e       	mov	r0, r20
    48bc:	02 c0       	rjmp	.+4      	; 0x48c2 <_ZN3GOL9build_sumEhh+0x124>
    48be:	88 0f       	add	r24, r24
    48c0:	99 1f       	adc	r25, r25
    48c2:	0a 94       	dec	r0
    48c4:	e2 f7       	brpl	.-8      	; 0x48be <_ZN3GOL9build_sumEhh+0x120>
    48c6:	9c 01       	movw	r18, r24
    48c8:	27 70       	andi	r18, 0x07	; 7
    48ca:	33 27       	eor	r19, r19
    48cc:	ea 81       	ldd	r30, Y+2	; 0x02
    48ce:	0e 2e       	mov	r0, r30
    48d0:	00 0c       	add	r0, r0
    48d2:	ff 0b       	sbc	r31, r31
    48d4:	84 2f       	mov	r24, r20
    48d6:	44 23       	and	r20, r20
    48d8:	14 f4       	brge	.+4      	; 0x48de <_ZN3GOL9build_sumEhh+0x140>
    48da:	87 e0       	ldi	r24, 0x07	; 7
    48dc:	84 0f       	add	r24, r20
    48de:	48 2f       	mov	r20, r24
    48e0:	45 95       	asr	r20
    48e2:	45 95       	asr	r20
    48e4:	45 95       	asr	r20
    48e6:	50 e8       	ldi	r21, 0x80	; 128
    48e8:	45 03       	mulsu	r20, r21
    48ea:	e0 0d       	add	r30, r0
    48ec:	f1 1d       	adc	r31, r1
    48ee:	11 24       	eor	r1, r1
    48f0:	e0 0f       	add	r30, r16
    48f2:	f1 1f       	adc	r31, r17
    48f4:	80 81       	ld	r24, Z
    48f6:	90 e0       	ldi	r25, 0x00	; 0
    48f8:	82 23       	and	r24, r18
    48fa:	93 23       	and	r25, r19
    48fc:	89 2b       	or	r24, r25
    48fe:	09 f0       	breq	.+2      	; 0x4902 <_ZN3GOL9build_sumEhh+0x164>
    4900:	f3 94       	inc	r15
    4902:	aa 82       	std	Y+2, r10	; 0x02
    4904:	be 01       	movw	r22, r28
    4906:	6e 5f       	subi	r22, 0xFE	; 254
    4908:	7f 4f       	sbci	r23, 0xFF	; 255
    490a:	c8 01       	movw	r24, r16
    490c:	34 df       	rcall	.-408    	; 0x4776 <_ZN3GOL7check_xEPa>
    490e:	ea 94       	dec	r14
    4910:	e9 82       	std	Y+1, r14	; 0x01
    4912:	be 01       	movw	r22, r28
    4914:	6f 5f       	subi	r22, 0xFF	; 255
    4916:	7f 4f       	sbci	r23, 0xFF	; 255
    4918:	c8 01       	movw	r24, r16
    491a:	34 df       	rcall	.-408    	; 0x4784 <_ZN3GOL7check_yEPa>
    491c:	49 81       	ldd	r20, Y+1	; 0x01
    491e:	81 e0       	ldi	r24, 0x01	; 1
    4920:	90 e0       	ldi	r25, 0x00	; 0
    4922:	04 2e       	mov	r0, r20
    4924:	02 c0       	rjmp	.+4      	; 0x492a <_ZN3GOL9build_sumEhh+0x18c>
    4926:	88 0f       	add	r24, r24
    4928:	99 1f       	adc	r25, r25
    492a:	0a 94       	dec	r0
    492c:	e2 f7       	brpl	.-8      	; 0x4926 <_ZN3GOL9build_sumEhh+0x188>
    492e:	9c 01       	movw	r18, r24
    4930:	27 70       	andi	r18, 0x07	; 7
    4932:	33 27       	eor	r19, r19
    4934:	ea 81       	ldd	r30, Y+2	; 0x02
    4936:	0e 2e       	mov	r0, r30
    4938:	00 0c       	add	r0, r0
    493a:	ff 0b       	sbc	r31, r31
    493c:	84 2f       	mov	r24, r20
    493e:	44 23       	and	r20, r20
    4940:	14 f4       	brge	.+4      	; 0x4946 <_ZN3GOL9build_sumEhh+0x1a8>
    4942:	87 e0       	ldi	r24, 0x07	; 7
    4944:	84 0f       	add	r24, r20
    4946:	48 2f       	mov	r20, r24
    4948:	45 95       	asr	r20
    494a:	45 95       	asr	r20
    494c:	45 95       	asr	r20
    494e:	50 e8       	ldi	r21, 0x80	; 128
    4950:	45 03       	mulsu	r20, r21
    4952:	e0 0d       	add	r30, r0
    4954:	f1 1d       	adc	r31, r1
    4956:	11 24       	eor	r1, r1
    4958:	e0 0f       	add	r30, r16
    495a:	f1 1f       	adc	r31, r17
    495c:	80 81       	ld	r24, Z
    495e:	90 e0       	ldi	r25, 0x00	; 0
    4960:	82 23       	and	r24, r18
    4962:	93 23       	and	r25, r19
    4964:	89 2b       	or	r24, r25
    4966:	09 f0       	breq	.+2      	; 0x496a <_ZN3GOL9build_sumEhh+0x1cc>
    4968:	f3 94       	inc	r15
    496a:	ba 82       	std	Y+2, r11	; 0x02
    496c:	be 01       	movw	r22, r28
    496e:	6e 5f       	subi	r22, 0xFE	; 254
    4970:	7f 4f       	sbci	r23, 0xFF	; 255
    4972:	c8 01       	movw	r24, r16
    4974:	00 df       	rcall	.-512    	; 0x4776 <_ZN3GOL7check_xEPa>
    4976:	e9 82       	std	Y+1, r14	; 0x01
    4978:	be 01       	movw	r22, r28
    497a:	6f 5f       	subi	r22, 0xFF	; 255
    497c:	7f 4f       	sbci	r23, 0xFF	; 255
    497e:	c8 01       	movw	r24, r16
    4980:	01 df       	rcall	.-510    	; 0x4784 <_ZN3GOL7check_yEPa>
    4982:	49 81       	ldd	r20, Y+1	; 0x01
    4984:	81 e0       	ldi	r24, 0x01	; 1
    4986:	90 e0       	ldi	r25, 0x00	; 0
    4988:	04 2e       	mov	r0, r20
    498a:	02 c0       	rjmp	.+4      	; 0x4990 <_ZN3GOL9build_sumEhh+0x1f2>
    498c:	88 0f       	add	r24, r24
    498e:	99 1f       	adc	r25, r25
    4990:	0a 94       	dec	r0
    4992:	e2 f7       	brpl	.-8      	; 0x498c <_ZN3GOL9build_sumEhh+0x1ee>
    4994:	9c 01       	movw	r18, r24
    4996:	27 70       	andi	r18, 0x07	; 7
    4998:	33 27       	eor	r19, r19
    499a:	ea 81       	ldd	r30, Y+2	; 0x02
    499c:	0e 2e       	mov	r0, r30
    499e:	00 0c       	add	r0, r0
    49a0:	ff 0b       	sbc	r31, r31
    49a2:	84 2f       	mov	r24, r20
    49a4:	44 23       	and	r20, r20
    49a6:	14 f4       	brge	.+4      	; 0x49ac <_ZN3GOL9build_sumEhh+0x20e>
    49a8:	87 e0       	ldi	r24, 0x07	; 7
    49aa:	84 0f       	add	r24, r20
    49ac:	48 2f       	mov	r20, r24
    49ae:	45 95       	asr	r20
    49b0:	45 95       	asr	r20
    49b2:	45 95       	asr	r20
    49b4:	50 e8       	ldi	r21, 0x80	; 128
    49b6:	45 03       	mulsu	r20, r21
    49b8:	e0 0d       	add	r30, r0
    49ba:	f1 1d       	adc	r31, r1
    49bc:	11 24       	eor	r1, r1
    49be:	e0 0f       	add	r30, r16
    49c0:	f1 1f       	adc	r31, r17
    49c2:	80 81       	ld	r24, Z
    49c4:	90 e0       	ldi	r25, 0x00	; 0
    49c6:	82 23       	and	r24, r18
    49c8:	93 23       	and	r25, r19
    49ca:	89 2b       	or	r24, r25
    49cc:	09 f0       	breq	.+2      	; 0x49d0 <_ZN3GOL9build_sumEhh+0x232>
    49ce:	f3 94       	inc	r15
    49d0:	da 82       	std	Y+2, r13	; 0x02
    49d2:	be 01       	movw	r22, r28
    49d4:	6e 5f       	subi	r22, 0xFE	; 254
    49d6:	7f 4f       	sbci	r23, 0xFF	; 255
    49d8:	c8 01       	movw	r24, r16
    49da:	cd de       	rcall	.-614    	; 0x4776 <_ZN3GOL7check_xEPa>
    49dc:	c9 82       	std	Y+1, r12	; 0x01
    49de:	be 01       	movw	r22, r28
    49e0:	6f 5f       	subi	r22, 0xFF	; 255
    49e2:	7f 4f       	sbci	r23, 0xFF	; 255
    49e4:	c8 01       	movw	r24, r16
    49e6:	ce de       	rcall	.-612    	; 0x4784 <_ZN3GOL7check_yEPa>
    49e8:	49 81       	ldd	r20, Y+1	; 0x01
    49ea:	81 e0       	ldi	r24, 0x01	; 1
    49ec:	90 e0       	ldi	r25, 0x00	; 0
    49ee:	04 2e       	mov	r0, r20
    49f0:	02 c0       	rjmp	.+4      	; 0x49f6 <_ZN3GOL9build_sumEhh+0x258>
    49f2:	88 0f       	add	r24, r24
    49f4:	99 1f       	adc	r25, r25
    49f6:	0a 94       	dec	r0
    49f8:	e2 f7       	brpl	.-8      	; 0x49f2 <_ZN3GOL9build_sumEhh+0x254>
    49fa:	9c 01       	movw	r18, r24
    49fc:	27 70       	andi	r18, 0x07	; 7
    49fe:	33 27       	eor	r19, r19
    4a00:	ea 81       	ldd	r30, Y+2	; 0x02
    4a02:	0e 2e       	mov	r0, r30
    4a04:	00 0c       	add	r0, r0
    4a06:	ff 0b       	sbc	r31, r31
    4a08:	84 2f       	mov	r24, r20
    4a0a:	44 23       	and	r20, r20
    4a0c:	14 f4       	brge	.+4      	; 0x4a12 <_ZN3GOL9build_sumEhh+0x274>
    4a0e:	87 e0       	ldi	r24, 0x07	; 7
    4a10:	84 0f       	add	r24, r20
    4a12:	48 2f       	mov	r20, r24
    4a14:	45 95       	asr	r20
    4a16:	45 95       	asr	r20
    4a18:	45 95       	asr	r20
    4a1a:	50 e8       	ldi	r21, 0x80	; 128
    4a1c:	45 03       	mulsu	r20, r21
    4a1e:	e0 0d       	add	r30, r0
    4a20:	f1 1d       	adc	r31, r1
    4a22:	11 24       	eor	r1, r1
    4a24:	e0 0f       	add	r30, r16
    4a26:	f1 1f       	adc	r31, r17
    4a28:	80 81       	ld	r24, Z
    4a2a:	90 e0       	ldi	r25, 0x00	; 0
    4a2c:	82 23       	and	r24, r18
    4a2e:	93 23       	and	r25, r19
    4a30:	89 2b       	or	r24, r25
    4a32:	09 f0       	breq	.+2      	; 0x4a36 <_ZN3GOL9build_sumEhh+0x298>
    4a34:	f3 94       	inc	r15
    4a36:	ba 82       	std	Y+2, r11	; 0x02
    4a38:	be 01       	movw	r22, r28
    4a3a:	6e 5f       	subi	r22, 0xFE	; 254
    4a3c:	7f 4f       	sbci	r23, 0xFF	; 255
    4a3e:	c8 01       	movw	r24, r16
    4a40:	9a de       	rcall	.-716    	; 0x4776 <_ZN3GOL7check_xEPa>
    4a42:	c9 82       	std	Y+1, r12	; 0x01
    4a44:	be 01       	movw	r22, r28
    4a46:	6f 5f       	subi	r22, 0xFF	; 255
    4a48:	7f 4f       	sbci	r23, 0xFF	; 255
    4a4a:	c8 01       	movw	r24, r16
    4a4c:	9b de       	rcall	.-714    	; 0x4784 <_ZN3GOL7check_yEPa>
    4a4e:	39 81       	ldd	r19, Y+1	; 0x01
    4a50:	81 e0       	ldi	r24, 0x01	; 1
    4a52:	90 e0       	ldi	r25, 0x00	; 0
    4a54:	03 2e       	mov	r0, r19
    4a56:	02 c0       	rjmp	.+4      	; 0x4a5c <_ZN3GOL9build_sumEhh+0x2be>
    4a58:	88 0f       	add	r24, r24
    4a5a:	99 1f       	adc	r25, r25
    4a5c:	0a 94       	dec	r0
    4a5e:	e2 f7       	brpl	.-8      	; 0x4a58 <_ZN3GOL9build_sumEhh+0x2ba>
    4a60:	87 70       	andi	r24, 0x07	; 7
    4a62:	99 27       	eor	r25, r25
    4a64:	ea 81       	ldd	r30, Y+2	; 0x02
    4a66:	0e 2e       	mov	r0, r30
    4a68:	00 0c       	add	r0, r0
    4a6a:	ff 0b       	sbc	r31, r31
    4a6c:	23 2f       	mov	r18, r19
    4a6e:	33 23       	and	r19, r19
    4a70:	14 f4       	brge	.+4      	; 0x4a76 <_ZN3GOL9build_sumEhh+0x2d8>
    4a72:	27 e0       	ldi	r18, 0x07	; 7
    4a74:	23 0f       	add	r18, r19
    4a76:	25 95       	asr	r18
    4a78:	25 95       	asr	r18
    4a7a:	25 95       	asr	r18
    4a7c:	30 e8       	ldi	r19, 0x80	; 128
    4a7e:	23 03       	mulsu	r18, r19
    4a80:	e0 0d       	add	r30, r0
    4a82:	f1 1d       	adc	r31, r1
    4a84:	11 24       	eor	r1, r1
    4a86:	e0 0f       	add	r30, r16
    4a88:	f1 1f       	adc	r31, r17
    4a8a:	20 81       	ld	r18, Z
    4a8c:	30 e0       	ldi	r19, 0x00	; 0
    4a8e:	82 23       	and	r24, r18
    4a90:	93 23       	and	r25, r19
    4a92:	89 2b       	or	r24, r25
    4a94:	09 f0       	breq	.+2      	; 0x4a98 <_ZN3GOL9build_sumEhh+0x2fa>
    4a96:	f3 94       	inc	r15
    4a98:	da 82       	std	Y+2, r13	; 0x02
    4a9a:	be 01       	movw	r22, r28
    4a9c:	6e 5f       	subi	r22, 0xFE	; 254
    4a9e:	7f 4f       	sbci	r23, 0xFF	; 255
    4aa0:	c8 01       	movw	r24, r16
    4aa2:	69 de       	rcall	.-814    	; 0x4776 <_ZN3GOL7check_xEPa>
    4aa4:	e9 82       	std	Y+1, r14	; 0x01
    4aa6:	be 01       	movw	r22, r28
    4aa8:	6f 5f       	subi	r22, 0xFF	; 255
    4aaa:	7f 4f       	sbci	r23, 0xFF	; 255
    4aac:	c8 01       	movw	r24, r16
    4aae:	6a de       	rcall	.-812    	; 0x4784 <_ZN3GOL7check_yEPa>
    4ab0:	39 81       	ldd	r19, Y+1	; 0x01
    4ab2:	81 e0       	ldi	r24, 0x01	; 1
    4ab4:	90 e0       	ldi	r25, 0x00	; 0
    4ab6:	03 2e       	mov	r0, r19
    4ab8:	02 c0       	rjmp	.+4      	; 0x4abe <_ZN3GOL9build_sumEhh+0x320>
    4aba:	88 0f       	add	r24, r24
    4abc:	99 1f       	adc	r25, r25
    4abe:	0a 94       	dec	r0
    4ac0:	e2 f7       	brpl	.-8      	; 0x4aba <_ZN3GOL9build_sumEhh+0x31c>
    4ac2:	ac 01       	movw	r20, r24
    4ac4:	47 70       	andi	r20, 0x07	; 7
    4ac6:	55 27       	eor	r21, r21
    4ac8:	8a 81       	ldd	r24, Y+2	; 0x02
    4aca:	08 2e       	mov	r0, r24
    4acc:	00 0c       	add	r0, r0
    4ace:	99 0b       	sbc	r25, r25
    4ad0:	23 2f       	mov	r18, r19
    4ad2:	33 23       	and	r19, r19
    4ad4:	14 f4       	brge	.+4      	; 0x4ada <_ZN3GOL9build_sumEhh+0x33c>
    4ad6:	27 e0       	ldi	r18, 0x07	; 7
    4ad8:	23 0f       	add	r18, r19
    4ada:	25 95       	asr	r18
    4adc:	25 95       	asr	r18
    4ade:	25 95       	asr	r18
    4ae0:	30 e8       	ldi	r19, 0x80	; 128
    4ae2:	23 03       	mulsu	r18, r19
    4ae4:	80 0d       	add	r24, r0
    4ae6:	91 1d       	adc	r25, r1
    4ae8:	11 24       	eor	r1, r1
    4aea:	f8 01       	movw	r30, r16
    4aec:	e8 0f       	add	r30, r24
    4aee:	f9 1f       	adc	r31, r25
    4af0:	20 81       	ld	r18, Z
    4af2:	30 e0       	ldi	r19, 0x00	; 0
    4af4:	ca 01       	movw	r24, r20
    4af6:	82 23       	and	r24, r18
    4af8:	93 23       	and	r25, r19
    4afa:	89 2b       	or	r24, r25
    4afc:	09 f0       	breq	.+2      	; 0x4b00 <_ZN3GOL9build_sumEhh+0x362>
    4afe:	f3 94       	inc	r15
    4b00:	8f 2d       	mov	r24, r15
    4b02:	0f 90       	pop	r0
    4b04:	0f 90       	pop	r0
    4b06:	df 91       	pop	r29
    4b08:	cf 91       	pop	r28
    4b0a:	1f 91       	pop	r17
    4b0c:	0f 91       	pop	r16
    4b0e:	ff 90       	pop	r15
    4b10:	ef 90       	pop	r14
    4b12:	df 90       	pop	r13
    4b14:	cf 90       	pop	r12
    4b16:	bf 90       	pop	r11
    4b18:	af 90       	pop	r10
    4b1a:	08 95       	ret

00004b1c <_ZN3GOL12delete_valueEhh>:
}

void GOL::delete_value(uint8_t x, uint8_t y){
	playground_2[x+(y/8)*GOL_WIDTH] &= ~(1<<y&7);
    4b1c:	e4 2f       	mov	r30, r20
    4b1e:	e6 95       	lsr	r30
    4b20:	e6 95       	lsr	r30
    4b22:	e6 95       	lsr	r30
    4b24:	20 e8       	ldi	r18, 0x80	; 128
    4b26:	e2 9f       	mul	r30, r18
    4b28:	f0 01       	movw	r30, r0
    4b2a:	11 24       	eor	r1, r1
    4b2c:	e6 0f       	add	r30, r22
    4b2e:	f1 1d       	adc	r31, r1
    4b30:	8e 0f       	add	r24, r30
    4b32:	9f 1f       	adc	r25, r31
    4b34:	fc 01       	movw	r30, r24
    4b36:	fc 5f       	subi	r31, 0xFC	; 252
    4b38:	81 e0       	ldi	r24, 0x01	; 1
    4b3a:	90 e0       	ldi	r25, 0x00	; 0
    4b3c:	02 c0       	rjmp	.+4      	; 0x4b42 <_ZN3GOL12delete_valueEhh+0x26>
    4b3e:	88 0f       	add	r24, r24
    4b40:	99 1f       	adc	r25, r25
    4b42:	4a 95       	dec	r20
    4b44:	e2 f7       	brpl	.-8      	; 0x4b3e <_ZN3GOL12delete_valueEhh+0x22>
    4b46:	87 70       	andi	r24, 0x07	; 7
    4b48:	80 95       	com	r24
    4b4a:	90 81       	ld	r25, Z
    4b4c:	89 23       	and	r24, r25
    4b4e:	80 83       	st	Z, r24
    4b50:	08 95       	ret

00004b52 <_ZN3GOL9iterationEv>:
// default destructor
GOL::~GOL()
{
} //~GOL

void GOL::iteration(){
    4b52:	4f 92       	push	r4
    4b54:	5f 92       	push	r5
    4b56:	6f 92       	push	r6
    4b58:	7f 92       	push	r7
    4b5a:	8f 92       	push	r8
    4b5c:	9f 92       	push	r9
    4b5e:	af 92       	push	r10
    4b60:	bf 92       	push	r11
    4b62:	cf 92       	push	r12
    4b64:	df 92       	push	r13
    4b66:	ef 92       	push	r14
    4b68:	ff 92       	push	r15
    4b6a:	0f 93       	push	r16
    4b6c:	1f 93       	push	r17
    4b6e:	cf 93       	push	r28
    4b70:	df 93       	push	r29
    4b72:	7c 01       	movw	r14, r24
	uint8_t summe=0;
	delete_playground(2);
    4b74:	62 e0       	ldi	r22, 0x02	; 2
    4b76:	de dd       	rcall	.-1092   	; 0x4734 <_ZN3GOL17delete_playgroundEh>
    4b78:	c1 2c       	mov	r12, r1
    4b7a:	d1 2c       	mov	r13, r1
// default destructor
GOL::~GOL()
{
} //~GOL

void GOL::iteration(){
    4b7c:	51 2c       	mov	r5, r1
    4b7e:	41 2c       	mov	r4, r1
		*y -= GOL_HIGHT;
	}
}

void GOL::set_value(uint8_t x, uint8_t y){
	playground_2[x+(y/8)*GOL_WIDTH] |= (1<<y&7);
    4b80:	aa 24       	eor	r10, r10
    4b82:	a3 94       	inc	r10
    4b84:	b1 2c       	mov	r11, r1
    4b86:	9a 2c       	mov	r9, r10
    4b88:	8b 2c       	mov	r8, r11
			summe = build_sum(x,y);
			if (summe > 3 || summe < 2)
			{
				delete_value(x,y);
			}
			else if (summe == 3 && !playground[x+(y/8)*GOL_WIDTH]&(1<<y&7))
    4b8a:	75 2c       	mov	r7, r5
    4b8c:	64 2c       	mov	r6, r4
    4b8e:	5e c0       	rjmp	.+188    	; 0x4c4c <_ZN3GOL9iterationEv+0xfa>
    4b90:	1c 2f       	mov	r17, r28
	uint8_t summe=0;
	delete_playground(2);
	for (uint8_t x = 0; x<GOL_WIDTH; x++)
	{
		for (uint8_t y=0; y<GOL_HIGHT;y++){
			summe = build_sum(x,y);
    4b92:	4c 2f       	mov	r20, r28
    4b94:	60 2f       	mov	r22, r16
    4b96:	c7 01       	movw	r24, r14
    4b98:	02 de       	rcall	.-1020   	; 0x479e <_ZN3GOL9build_sumEhh>
			if (summe > 3 || summe < 2)
    4b9a:	9e ef       	ldi	r25, 0xFE	; 254
    4b9c:	98 0f       	add	r25, r24
    4b9e:	92 30       	cpi	r25, 0x02	; 2
    4ba0:	28 f0       	brcs	.+10     	; 0x4bac <_ZN3GOL9iterationEv+0x5a>
			{
				delete_value(x,y);
    4ba2:	4c 2f       	mov	r20, r28
    4ba4:	60 2f       	mov	r22, r16
    4ba6:	c7 01       	movw	r24, r14
    4ba8:	b9 df       	rcall	.-142    	; 0x4b1c <_ZN3GOL12delete_valueEhh>
    4baa:	44 c0       	rjmp	.+136    	; 0x4c34 <_ZN3GOL9iterationEv+0xe2>
			}
			else if (summe == 3 && !playground[x+(y/8)*GOL_WIDTH]&(1<<y&7))
    4bac:	83 30       	cpi	r24, 0x03	; 3
    4bae:	59 f5       	brne	.+86     	; 0x4c06 <_ZN3GOL9iterationEv+0xb4>
    4bb0:	8c 2f       	mov	r24, r28
    4bb2:	86 95       	lsr	r24
    4bb4:	86 95       	lsr	r24
    4bb6:	86 95       	lsr	r24
    4bb8:	96 01       	movw	r18, r12
    4bba:	90 e8       	ldi	r25, 0x80	; 128
    4bbc:	89 9f       	mul	r24, r25
    4bbe:	20 0d       	add	r18, r0
    4bc0:	31 1d       	adc	r19, r1
    4bc2:	11 24       	eor	r1, r1
    4bc4:	a5 01       	movw	r20, r10
    4bc6:	0c 2e       	mov	r0, r28
    4bc8:	02 c0       	rjmp	.+4      	; 0x4bce <_ZN3GOL9iterationEv+0x7c>
    4bca:	44 0f       	add	r20, r20
    4bcc:	55 1f       	adc	r21, r21
    4bce:	0a 94       	dec	r0
    4bd0:	e2 f7       	brpl	.-8      	; 0x4bca <_ZN3GOL9iterationEv+0x78>
    4bd2:	ba 01       	movw	r22, r20
    4bd4:	67 70       	andi	r22, 0x07	; 7
    4bd6:	77 27       	eor	r23, r23
    4bd8:	f7 01       	movw	r30, r14
    4bda:	e2 0f       	add	r30, r18
    4bdc:	f3 1f       	adc	r31, r19
    4bde:	89 2d       	mov	r24, r9
    4be0:	98 2d       	mov	r25, r8
    4be2:	e0 81       	ld	r30, Z
    4be4:	ee 23       	and	r30, r30
    4be6:	11 f0       	breq	.+4      	; 0x4bec <_ZN3GOL9iterationEv+0x9a>
    4be8:	87 2d       	mov	r24, r7
    4bea:	96 2d       	mov	r25, r6
    4bec:	86 23       	and	r24, r22
    4bee:	97 23       	and	r25, r23
    4bf0:	89 2b       	or	r24, r25
    4bf2:	49 f0       	breq	.+18     	; 0x4c06 <_ZN3GOL9iterationEv+0xb4>
		*y -= GOL_HIGHT;
	}
}

void GOL::set_value(uint8_t x, uint8_t y){
	playground_2[x+(y/8)*GOL_WIDTH] |= (1<<y&7);
    4bf4:	2e 0d       	add	r18, r14
    4bf6:	3f 1d       	adc	r19, r15
    4bf8:	f9 01       	movw	r30, r18
    4bfa:	fc 5f       	subi	r31, 0xFC	; 252
    4bfc:	47 70       	andi	r20, 0x07	; 7
    4bfe:	80 81       	ld	r24, Z
    4c00:	48 2b       	or	r20, r24
    4c02:	40 83       	st	Z, r20
    4c04:	17 c0       	rjmp	.+46     	; 0x4c34 <_ZN3GOL9iterationEv+0xe2>
    4c06:	16 95       	lsr	r17
    4c08:	16 95       	lsr	r17
    4c0a:	16 95       	lsr	r17
    4c0c:	f6 01       	movw	r30, r12
    4c0e:	90 e8       	ldi	r25, 0x80	; 128
    4c10:	19 9f       	mul	r17, r25
    4c12:	e0 0d       	add	r30, r0
    4c14:	f1 1d       	adc	r31, r1
    4c16:	11 24       	eor	r1, r1
    4c18:	ee 0d       	add	r30, r14
    4c1a:	ff 1d       	adc	r31, r15
    4c1c:	fc 5f       	subi	r31, 0xFC	; 252
    4c1e:	c5 01       	movw	r24, r10
    4c20:	0c 2e       	mov	r0, r28
    4c22:	02 c0       	rjmp	.+4      	; 0x4c28 <_ZN3GOL9iterationEv+0xd6>
    4c24:	88 0f       	add	r24, r24
    4c26:	99 1f       	adc	r25, r25
    4c28:	0a 94       	dec	r0
    4c2a:	e2 f7       	brpl	.-8      	; 0x4c24 <_ZN3GOL9iterationEv+0xd2>
    4c2c:	87 70       	andi	r24, 0x07	; 7
    4c2e:	90 81       	ld	r25, Z
    4c30:	89 2b       	or	r24, r25
    4c32:	80 83       	st	Z, r24
    4c34:	21 96       	adiw	r28, 0x01	; 1
void GOL::iteration(){
	uint8_t summe=0;
	delete_playground(2);
	for (uint8_t x = 0; x<GOL_WIDTH; x++)
	{
		for (uint8_t y=0; y<GOL_HIGHT;y++){
    4c36:	c0 34       	cpi	r28, 0x40	; 64
    4c38:	d1 05       	cpc	r29, r1
    4c3a:	09 f0       	breq	.+2      	; 0x4c3e <_ZN3GOL9iterationEv+0xec>
    4c3c:	a9 cf       	rjmp	.-174    	; 0x4b90 <_ZN3GOL9iterationEv+0x3e>
    4c3e:	8f ef       	ldi	r24, 0xFF	; 255
    4c40:	c8 1a       	sub	r12, r24
    4c42:	d8 0a       	sbc	r13, r24
} //~GOL

void GOL::iteration(){
	uint8_t summe=0;
	delete_playground(2);
	for (uint8_t x = 0; x<GOL_WIDTH; x++)
    4c44:	90 e8       	ldi	r25, 0x80	; 128
    4c46:	c9 16       	cp	r12, r25
    4c48:	d1 04       	cpc	r13, r1
    4c4a:	21 f0       	breq	.+8      	; 0x4c54 <_ZN3GOL9iterationEv+0x102>
    4c4c:	0c 2d       	mov	r16, r12
// default destructor
GOL::~GOL()
{
} //~GOL

void GOL::iteration(){
    4c4e:	c5 2d       	mov	r28, r5
    4c50:	d4 2d       	mov	r29, r4
    4c52:	9e cf       	rjmp	.-196    	; 0x4b90 <_ZN3GOL9iterationEv+0x3e>
    4c54:	f7 01       	movw	r30, r14
    4c56:	fc 5f       	subi	r31, 0xFC	; 252
    4c58:	d7 01       	movw	r26, r14
    4c5a:	98 ef       	ldi	r25, 0xF8	; 248
    4c5c:	f9 1a       	sub	r15, r25
			}
		}
	}
	for (uint16_t i=0; i<GOL_SIZE;i++)
	{
		playground[i]=playground_2[i];
    4c5e:	81 91       	ld	r24, Z+
    4c60:	8d 93       	st	X+, r24
			else{
				set_value(x,y);
			}
		}
	}
	for (uint16_t i=0; i<GOL_SIZE;i++)
    4c62:	ee 15       	cp	r30, r14
    4c64:	ff 05       	cpc	r31, r15
    4c66:	d9 f7       	brne	.-10     	; 0x4c5e <_ZN3GOL9iterationEv+0x10c>
	{
		playground[i]=playground_2[i];
	}
}
    4c68:	df 91       	pop	r29
    4c6a:	cf 91       	pop	r28
    4c6c:	1f 91       	pop	r17
    4c6e:	0f 91       	pop	r16
    4c70:	ff 90       	pop	r15
    4c72:	ef 90       	pop	r14
    4c74:	df 90       	pop	r13
    4c76:	cf 90       	pop	r12
    4c78:	bf 90       	pop	r11
    4c7a:	af 90       	pop	r10
    4c7c:	9f 90       	pop	r9
    4c7e:	8f 90       	pop	r8
    4c80:	7f 90       	pop	r7
    4c82:	6f 90       	pop	r6
    4c84:	5f 90       	pop	r5
    4c86:	4f 90       	pop	r4
    4c88:	08 95       	ret

00004c8a <_ZN3I2CC1Ev>:
void I2C::twi_ack(){
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
}
void I2C::twi_nack(){
	TWCR = (1<<TWINT) | (1<<TWEN);
	TWCR &= ~(1<<TWEA);
    4c8a:	82 e0       	ldi	r24, 0x02	; 2
    4c8c:	80 93 b8 00 	sts	0x00B8, r24
    4c90:	08 95       	ret

00004c92 <_ZN3I2CD1Ev>:
    4c92:	08 95       	ret

00004c94 <_ZN3I2C9twi_startEv>:
    4c94:	84 ea       	ldi	r24, 0xA4	; 164
    4c96:	80 93 bc 00 	sts	0x00BC, r24
    4c9a:	08 95       	ret

00004c9c <_ZN3I2C8twi_stopEv>:
    4c9c:	84 e9       	ldi	r24, 0x94	; 148
    4c9e:	80 93 bc 00 	sts	0x00BC, r24
    4ca2:	08 95       	ret

00004ca4 <_ZN3I2C9twi_writeEh>:
}

void I2C::twi_write(uint8_t data){
	while(!(TWCR & (1<<TWINT)));
    4ca4:	ec eb       	ldi	r30, 0xBC	; 188
    4ca6:	f0 e0       	ldi	r31, 0x00	; 0
    4ca8:	80 81       	ld	r24, Z
    4caa:	88 23       	and	r24, r24
    4cac:	ec f7       	brge	.-6      	; 0x4ca8 <_ZN3I2C9twi_writeEh+0x4>
	TWDR = data;
    4cae:	60 93 bb 00 	sts	0x00BB, r22
	TWCR = (1<<TWINT) | (1<<TWEN);
    4cb2:	84 e8       	ldi	r24, 0x84	; 132
    4cb4:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    4cb8:	ec eb       	ldi	r30, 0xBC	; 188
    4cba:	f0 e0       	ldi	r31, 0x00	; 0
    4cbc:	80 81       	ld	r24, Z
    4cbe:	88 23       	and	r24, r24
    4cc0:	ec f7       	brge	.-6      	; 0x4cbc <_ZN3I2C9twi_writeEh+0x18>
}
    4cc2:	08 95       	ret

00004cc4 <_ZN3I2C8twi_readEh>:

uint8_t I2C::twi_read(uint8_t ack){
	if (ack)
    4cc4:	66 23       	and	r22, r22
    4cc6:	21 f0       	breq	.+8      	; 0x4cd0 <_ZN3I2C8twi_readEh+0xc>
	{
		TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    4cc8:	84 ec       	ldi	r24, 0xC4	; 196
    4cca:	80 93 bc 00 	sts	0x00BC, r24
    4cce:	03 c0       	rjmp	.+6      	; 0x4cd6 <_ZN3I2C8twi_readEh+0x12>
	}
	else{
		TWCR = (1<<TWINT) | (1<<TWEN);
    4cd0:	84 e8       	ldi	r24, 0x84	; 132
    4cd2:	80 93 bc 00 	sts	0x00BC, r24
	}
	
	while(!(TWCR & (1<<TWINT)));
    4cd6:	ec eb       	ldi	r30, 0xBC	; 188
    4cd8:	f0 e0       	ldi	r31, 0x00	; 0
    4cda:	80 81       	ld	r24, Z
    4cdc:	88 23       	and	r24, r24
    4cde:	ec f7       	brge	.-6      	; 0x4cda <_ZN3I2C8twi_readEh+0x16>
	return TWDR;
    4ce0:	80 91 bb 00 	lds	r24, 0x00BB
    4ce4:	08 95       	ret

00004ce6 <_ZN9InterfaceC1Ev>:
		default:
		abfrage = 0;
		break;
	}
	return abfrage;
}
    4ce6:	2a b1       	in	r18, 0x0a	; 10
    4ce8:	20 66       	ori	r18, 0x60	; 96
    4cea:	2a b9       	out	0x0a, r18	; 10
    4cec:	28 b1       	in	r18, 0x08	; 8
    4cee:	23 7f       	andi	r18, 0xF3	; 243
    4cf0:	28 b9       	out	0x08, r18	; 8
    4cf2:	27 b1       	in	r18, 0x07	; 7
    4cf4:	2c 60       	ori	r18, 0x0C	; 12
    4cf6:	27 b9       	out	0x07, r18	; 7
    4cf8:	2a b1       	in	r18, 0x0a	; 10
    4cfa:	23 7e       	andi	r18, 0xE3	; 227
    4cfc:	2a b9       	out	0x0a, r18	; 10
    4cfe:	fc 01       	movw	r30, r24
    4d00:	0c 96       	adiw	r24, 0x0c	; 12
    4d02:	11 92       	st	Z+, r1
    4d04:	e8 17       	cp	r30, r24
    4d06:	f9 07       	cpc	r31, r25
    4d08:	e1 f7       	brne	.-8      	; 0x4d02 <_ZN9InterfaceC1Ev+0x1c>
    4d0a:	08 95       	ret

00004d0c <_ZN9InterfaceD1Ev>:
    4d0c:	08 95       	ret

00004d0e <_ZN9Interface7paradebEPVhhPh>:
    4d0e:	fb 01       	movw	r30, r22
    4d10:	80 81       	ld	r24, Z
    4d12:	90 e0       	ldi	r25, 0x00	; 0
    4d14:	04 2e       	mov	r0, r20
    4d16:	02 c0       	rjmp	.+4      	; 0x4d1c <_ZN9Interface7paradebEPVhhPh+0xe>
    4d18:	95 95       	asr	r25
    4d1a:	87 95       	ror	r24
    4d1c:	0a 94       	dec	r0
    4d1e:	e2 f7       	brpl	.-8      	; 0x4d18 <_ZN9Interface7paradebEPVhhPh+0xa>
    4d20:	80 ff       	sbrs	r24, 0
    4d22:	05 c0       	rjmp	.+10     	; 0x4d2e <_ZN9Interface7paradebEPVhhPh+0x20>
    4d24:	81 e0       	ldi	r24, 0x01	; 1
    4d26:	f9 01       	movw	r30, r18
    4d28:	80 83       	st	Z, r24
    4d2a:	80 e0       	ldi	r24, 0x00	; 0
    4d2c:	08 95       	ret
    4d2e:	f9 01       	movw	r30, r18
    4d30:	80 81       	ld	r24, Z
    4d32:	81 30       	cpi	r24, 0x01	; 1
    4d34:	71 f4       	brne	.+28     	; 0x4d52 <_ZN9Interface7paradebEPVhhPh+0x44>
    4d36:	fb 01       	movw	r30, r22
    4d38:	60 81       	ld	r22, Z
    4d3a:	70 e0       	ldi	r23, 0x00	; 0
    4d3c:	fb 01       	movw	r30, r22
    4d3e:	02 c0       	rjmp	.+4      	; 0x4d44 <_ZN9Interface7paradebEPVhhPh+0x36>
    4d40:	f5 95       	asr	r31
    4d42:	e7 95       	ror	r30
    4d44:	4a 95       	dec	r20
    4d46:	e2 f7       	brpl	.-8      	; 0x4d40 <_ZN9Interface7paradebEPVhhPh+0x32>
    4d48:	e0 fd       	sbrc	r30, 0
    4d4a:	03 c0       	rjmp	.+6      	; 0x4d52 <_ZN9Interface7paradebEPVhhPh+0x44>
    4d4c:	f9 01       	movw	r30, r18
    4d4e:	10 82       	st	Z, r1
    4d50:	08 95       	ret
    4d52:	f9 01       	movw	r30, r18
    4d54:	10 82       	st	Z, r1
    4d56:	80 e0       	ldi	r24, 0x00	; 0
    4d58:	08 95       	ret

00004d5a <_ZN9Interface6TasterEv>:

uint8_t Interface::Taster(){
    4d5a:	1f 93       	push	r17
    4d5c:	cf 93       	push	r28
    4d5e:	df 93       	push	r29
    4d60:	ec 01       	movw	r28, r24
	uint8_t taste = 'A';
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
    4d62:	43 9a       	sbi	0x08, 3	; 8
    4d64:	82 e0       	ldi	r24, 0x02	; 2
    4d66:	8a 95       	dec	r24
    4d68:	f1 f7       	brne	.-4      	; 0x4d66 <_ZN9Interface6TasterEv+0xc>
    4d6a:	00 c0       	rjmp	.+0      	; 0x4d6c <_ZN9Interface6TasterEv+0x12>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[2])){//debounce(&PIND,PIND4)){
    4d6c:	9e 01       	movw	r18, r28
    4d6e:	2e 5f       	subi	r18, 0xFE	; 254
    4d70:	3f 4f       	sbci	r19, 0xFF	; 255
    4d72:	44 e0       	ldi	r20, 0x04	; 4
    4d74:	69 e2       	ldi	r22, 0x29	; 41
    4d76:	70 e0       	ldi	r23, 0x00	; 0
    4d78:	ce 01       	movw	r24, r28
    4d7a:	c9 df       	rcall	.-110    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4d7c:	81 11       	cpse	r24, r1
    4d7e:	14 c0       	rjmp	.+40     	; 0x4da8 <_ZN9Interface6TasterEv+0x4e>
		taste = '3';
	}
	else if (paradeb(&PIND,PIND3,&stat[1]))//debounce(&PIND,PIND3))
    4d80:	9e 01       	movw	r18, r28
    4d82:	2f 5f       	subi	r18, 0xFF	; 255
    4d84:	3f 4f       	sbci	r19, 0xFF	; 255
    4d86:	43 e0       	ldi	r20, 0x03	; 3
    4d88:	69 e2       	ldi	r22, 0x29	; 41
    4d8a:	70 e0       	ldi	r23, 0x00	; 0
    4d8c:	ce 01       	movw	r24, r28
    4d8e:	bf df       	rcall	.-130    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4d90:	81 11       	cpse	r24, r1
    4d92:	0c c0       	rjmp	.+24     	; 0x4dac <_ZN9Interface6TasterEv+0x52>
	{
		taste = '2';
	}
	else if (paradeb(&PIND,PIND2,&stat[0]))//debounce(&PIND,PIND2))
    4d94:	9e 01       	movw	r18, r28
    4d96:	42 e0       	ldi	r20, 0x02	; 2
    4d98:	69 e2       	ldi	r22, 0x29	; 41
    4d9a:	70 e0       	ldi	r23, 0x00	; 0
    4d9c:	ce 01       	movw	r24, r28
    4d9e:	b7 df       	rcall	.-146    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4da0:	88 23       	and	r24, r24
    4da2:	31 f0       	breq	.+12     	; 0x4db0 <_ZN9Interface6TasterEv+0x56>
	{
		taste = '1';
    4da4:	11 e3       	ldi	r17, 0x31	; 49
    4da6:	05 c0       	rjmp	.+10     	; 0x4db2 <_ZN9Interface6TasterEv+0x58>
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[2])){//debounce(&PIND,PIND4)){
		taste = '3';
    4da8:	13 e3       	ldi	r17, 0x33	; 51
    4daa:	03 c0       	rjmp	.+6      	; 0x4db2 <_ZN9Interface6TasterEv+0x58>
	}
	else if (paradeb(&PIND,PIND3,&stat[1]))//debounce(&PIND,PIND3))
	{
		taste = '2';
    4dac:	12 e3       	ldi	r17, 0x32	; 50
    4dae:	01 c0       	rjmp	.+2      	; 0x4db2 <_ZN9Interface6TasterEv+0x58>
	}
	return abfrage;
}

uint8_t Interface::Taster(){
	uint8_t taste = 'A';
    4db0:	11 e4       	ldi	r17, 0x41	; 65
	}
	else if (paradeb(&PIND,PIND2,&stat[0]))//debounce(&PIND,PIND2))
	{
		taste = '1';
	}
	PORTC &= ~(1<<PORTC3);
    4db2:	43 98       	cbi	0x08, 3	; 8
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
    4db4:	42 9a       	sbi	0x08, 2	; 8
    4db6:	82 e0       	ldi	r24, 0x02	; 2
    4db8:	8a 95       	dec	r24
    4dba:	f1 f7       	brne	.-4      	; 0x4db8 <_ZN9Interface6TasterEv+0x5e>
    4dbc:	00 c0       	rjmp	.+0      	; 0x4dbe <_ZN9Interface6TasterEv+0x64>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[5])){//debounce(&PIND,PIND4)){
    4dbe:	9e 01       	movw	r18, r28
    4dc0:	2b 5f       	subi	r18, 0xFB	; 251
    4dc2:	3f 4f       	sbci	r19, 0xFF	; 255
    4dc4:	44 e0       	ldi	r20, 0x04	; 4
    4dc6:	69 e2       	ldi	r22, 0x29	; 41
    4dc8:	70 e0       	ldi	r23, 0x00	; 0
    4dca:	ce 01       	movw	r24, r28
    4dcc:	a0 df       	rcall	.-192    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4dce:	81 11       	cpse	r24, r1
    4dd0:	16 c0       	rjmp	.+44     	; 0x4dfe <_ZN9Interface6TasterEv+0xa4>
		taste = '6';
	}
	else if (paradeb(&PIND,PIND3,&stat[4]))//debounce(&PIND,PIND3))
    4dd2:	9e 01       	movw	r18, r28
    4dd4:	2c 5f       	subi	r18, 0xFC	; 252
    4dd6:	3f 4f       	sbci	r19, 0xFF	; 255
    4dd8:	43 e0       	ldi	r20, 0x03	; 3
    4dda:	69 e2       	ldi	r22, 0x29	; 41
    4ddc:	70 e0       	ldi	r23, 0x00	; 0
    4dde:	ce 01       	movw	r24, r28
    4de0:	96 df       	rcall	.-212    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4de2:	81 11       	cpse	r24, r1
    4de4:	0e c0       	rjmp	.+28     	; 0x4e02 <_ZN9Interface6TasterEv+0xa8>
	{
		taste = '5';
	}
	else if (paradeb(&PIND,PIND2,&stat[3]))//debounce(&PIND,PIND2))
    4de6:	9e 01       	movw	r18, r28
    4de8:	2d 5f       	subi	r18, 0xFD	; 253
    4dea:	3f 4f       	sbci	r19, 0xFF	; 255
    4dec:	42 e0       	ldi	r20, 0x02	; 2
    4dee:	69 e2       	ldi	r22, 0x29	; 41
    4df0:	70 e0       	ldi	r23, 0x00	; 0
    4df2:	ce 01       	movw	r24, r28
    4df4:	8c df       	rcall	.-232    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4df6:	88 23       	and	r24, r24
    4df8:	29 f0       	breq	.+10     	; 0x4e04 <_ZN9Interface6TasterEv+0xaa>
	{
		taste = '4';
    4dfa:	14 e3       	ldi	r17, 0x34	; 52
    4dfc:	03 c0       	rjmp	.+6      	; 0x4e04 <_ZN9Interface6TasterEv+0xaa>
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[5])){//debounce(&PIND,PIND4)){
		taste = '6';
    4dfe:	16 e3       	ldi	r17, 0x36	; 54
    4e00:	01 c0       	rjmp	.+2      	; 0x4e04 <_ZN9Interface6TasterEv+0xaa>
	}
	else if (paradeb(&PIND,PIND3,&stat[4]))//debounce(&PIND,PIND3))
	{
		taste = '5';
    4e02:	15 e3       	ldi	r17, 0x35	; 53
	}
	else if (paradeb(&PIND,PIND2,&stat[3]))//debounce(&PIND,PIND2))
	{
		taste = '4';
	}
	PORTC &= ~(1<<PORTC2);
    4e04:	42 98       	cbi	0x08, 2	; 8
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
    4e06:	5e 9a       	sbi	0x0b, 6	; 11
    4e08:	82 e0       	ldi	r24, 0x02	; 2
    4e0a:	8a 95       	dec	r24
    4e0c:	f1 f7       	brne	.-4      	; 0x4e0a <_ZN9Interface6TasterEv+0xb0>
    4e0e:	00 c0       	rjmp	.+0      	; 0x4e10 <_ZN9Interface6TasterEv+0xb6>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[8])){//debounce(&PIND,PIND4)){
    4e10:	9e 01       	movw	r18, r28
    4e12:	28 5f       	subi	r18, 0xF8	; 248
    4e14:	3f 4f       	sbci	r19, 0xFF	; 255
    4e16:	44 e0       	ldi	r20, 0x04	; 4
    4e18:	69 e2       	ldi	r22, 0x29	; 41
    4e1a:	70 e0       	ldi	r23, 0x00	; 0
    4e1c:	ce 01       	movw	r24, r28
    4e1e:	77 df       	rcall	.-274    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4e20:	81 11       	cpse	r24, r1
    4e22:	16 c0       	rjmp	.+44     	; 0x4e50 <_ZN9Interface6TasterEv+0xf6>
		taste = '9';
	}
	else if (paradeb(&PIND,PIND3,&stat[7]))//debounce(&PIND,PIND3))
    4e24:	9e 01       	movw	r18, r28
    4e26:	29 5f       	subi	r18, 0xF9	; 249
    4e28:	3f 4f       	sbci	r19, 0xFF	; 255
    4e2a:	43 e0       	ldi	r20, 0x03	; 3
    4e2c:	69 e2       	ldi	r22, 0x29	; 41
    4e2e:	70 e0       	ldi	r23, 0x00	; 0
    4e30:	ce 01       	movw	r24, r28
    4e32:	6d df       	rcall	.-294    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4e34:	81 11       	cpse	r24, r1
    4e36:	0e c0       	rjmp	.+28     	; 0x4e54 <_ZN9Interface6TasterEv+0xfa>
	{
		taste = '8';
	}
	else if (paradeb(&PIND,PIND2,&stat[6]))//debounce(&PIND,PIND2))
    4e38:	9e 01       	movw	r18, r28
    4e3a:	2a 5f       	subi	r18, 0xFA	; 250
    4e3c:	3f 4f       	sbci	r19, 0xFF	; 255
    4e3e:	42 e0       	ldi	r20, 0x02	; 2
    4e40:	69 e2       	ldi	r22, 0x29	; 41
    4e42:	70 e0       	ldi	r23, 0x00	; 0
    4e44:	ce 01       	movw	r24, r28
    4e46:	63 df       	rcall	.-314    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4e48:	88 23       	and	r24, r24
    4e4a:	29 f0       	breq	.+10     	; 0x4e56 <_ZN9Interface6TasterEv+0xfc>
	{
		taste = '7';
    4e4c:	17 e3       	ldi	r17, 0x37	; 55
    4e4e:	03 c0       	rjmp	.+6      	; 0x4e56 <_ZN9Interface6TasterEv+0xfc>
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[8])){//debounce(&PIND,PIND4)){
		taste = '9';
    4e50:	19 e3       	ldi	r17, 0x39	; 57
    4e52:	01 c0       	rjmp	.+2      	; 0x4e56 <_ZN9Interface6TasterEv+0xfc>
	}
	else if (paradeb(&PIND,PIND3,&stat[7]))//debounce(&PIND,PIND3))
	{
		taste = '8';
    4e54:	18 e3       	ldi	r17, 0x38	; 56
	}
	else if (paradeb(&PIND,PIND2,&stat[6]))//debounce(&PIND,PIND2))
	{
		taste = '7';
	}
	PORTD &= ~(1<<PORTD6);
    4e56:	5e 98       	cbi	0x0b, 6	; 11
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
    4e58:	5d 9a       	sbi	0x0b, 5	; 11
    4e5a:	82 e0       	ldi	r24, 0x02	; 2
    4e5c:	8a 95       	dec	r24
    4e5e:	f1 f7       	brne	.-4      	; 0x4e5c <_ZN9Interface6TasterEv+0x102>
    4e60:	00 c0       	rjmp	.+0      	; 0x4e62 <_ZN9Interface6TasterEv+0x108>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[11])){//debounce(&PIND,PIND4)){
    4e62:	9e 01       	movw	r18, r28
    4e64:	25 5f       	subi	r18, 0xF5	; 245
    4e66:	3f 4f       	sbci	r19, 0xFF	; 255
    4e68:	44 e0       	ldi	r20, 0x04	; 4
    4e6a:	69 e2       	ldi	r22, 0x29	; 41
    4e6c:	70 e0       	ldi	r23, 0x00	; 0
    4e6e:	ce 01       	movw	r24, r28
    4e70:	4e df       	rcall	.-356    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4e72:	81 11       	cpse	r24, r1
    4e74:	16 c0       	rjmp	.+44     	; 0x4ea2 <_ZN9Interface6TasterEv+0x148>
		taste = '#';
	}
	else if (paradeb(&PIND,PIND3,&stat[10]))//debounce(&PIND,PIND3))
    4e76:	9e 01       	movw	r18, r28
    4e78:	26 5f       	subi	r18, 0xF6	; 246
    4e7a:	3f 4f       	sbci	r19, 0xFF	; 255
    4e7c:	43 e0       	ldi	r20, 0x03	; 3
    4e7e:	69 e2       	ldi	r22, 0x29	; 41
    4e80:	70 e0       	ldi	r23, 0x00	; 0
    4e82:	ce 01       	movw	r24, r28
    4e84:	44 df       	rcall	.-376    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4e86:	81 11       	cpse	r24, r1
    4e88:	0e c0       	rjmp	.+28     	; 0x4ea6 <_ZN9Interface6TasterEv+0x14c>
	{
		taste = '0';
	}
	else if (paradeb(&PIND,PIND2,&stat[9]))//debounce(&PIND,PIND2))
    4e8a:	9e 01       	movw	r18, r28
    4e8c:	27 5f       	subi	r18, 0xF7	; 247
    4e8e:	3f 4f       	sbci	r19, 0xFF	; 255
    4e90:	42 e0       	ldi	r20, 0x02	; 2
    4e92:	69 e2       	ldi	r22, 0x29	; 41
    4e94:	70 e0       	ldi	r23, 0x00	; 0
    4e96:	ce 01       	movw	r24, r28
    4e98:	3a df       	rcall	.-396    	; 0x4d0e <_ZN9Interface7paradebEPVhhPh>
    4e9a:	88 23       	and	r24, r24
    4e9c:	29 f0       	breq	.+10     	; 0x4ea8 <_ZN9Interface6TasterEv+0x14e>
	{
		taste = '*';
    4e9e:	1a e2       	ldi	r17, 0x2A	; 42
    4ea0:	03 c0       	rjmp	.+6      	; 0x4ea8 <_ZN9Interface6TasterEv+0x14e>
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[11])){//debounce(&PIND,PIND4)){
		taste = '#';
    4ea2:	13 e2       	ldi	r17, 0x23	; 35
    4ea4:	01 c0       	rjmp	.+2      	; 0x4ea8 <_ZN9Interface6TasterEv+0x14e>
	}
	else if (paradeb(&PIND,PIND3,&stat[10]))//debounce(&PIND,PIND3))
	{
		taste = '0';
    4ea6:	10 e3       	ldi	r17, 0x30	; 48
	}
	else if (paradeb(&PIND,PIND2,&stat[9]))//debounce(&PIND,PIND2))
	{
		taste = '*';
	}
	PORTD &= ~(1<<PORTD5);
    4ea8:	5d 98       	cbi	0x0b, 5	; 11
	
	return taste;
}
    4eaa:	81 2f       	mov	r24, r17
    4eac:	df 91       	pop	r29
    4eae:	cf 91       	pop	r28
    4eb0:	1f 91       	pop	r17
    4eb2:	08 95       	ret

00004eb4 <_ZN9Interface17ZahlenausTastaturEv>:

uint8_t Interface::ZahlenausTastatur(){
    4eb4:	cf 93       	push	r28
    4eb6:	df 93       	push	r29
    4eb8:	ec 01       	movw	r28, r24
	while(true){
		uint8_t taste = Taster();
    4eba:	ce 01       	movw	r24, r28
    4ebc:	4e df       	rcall	.-356    	; 0x4d5a <_ZN9Interface6TasterEv>
		if(taste>='0' && taste<='9'){
    4ebe:	80 53       	subi	r24, 0x30	; 48
    4ec0:	8a 30       	cpi	r24, 0x0A	; 10
    4ec2:	d8 f7       	brcc	.-10     	; 0x4eba <_ZN9Interface17ZahlenausTastaturEv+0x6>
			return taste - '0';
		}
	}
}
    4ec4:	df 91       	pop	r29
    4ec6:	cf 91       	pop	r28
    4ec8:	08 95       	ret

00004eca <_ZN7KompassD1Ev>:
	for (uint8_t i=0;i<3;i++)
	{
		achsen[i]=0;
		offset[i]=0;
	}
}
    4eca:	06 96       	adiw	r24, 0x06	; 6
    4ecc:	e2 ce       	rjmp	.-572    	; 0x4c92 <_ZN3I2CD1Ev>
    4ece:	08 95       	ret

00004ed0 <_ZN7Kompass16HMC5883L_commandEhh>:
    4ed0:	0f 93       	push	r16
    4ed2:	1f 93       	push	r17
    4ed4:	cf 93       	push	r28
    4ed6:	df 93       	push	r29
    4ed8:	06 2f       	mov	r16, r22
    4eda:	14 2f       	mov	r17, r20
    4edc:	ec 01       	movw	r28, r24
    4ede:	26 96       	adiw	r28, 0x06	; 6
    4ee0:	ce 01       	movw	r24, r28
    4ee2:	d8 de       	rcall	.-592    	; 0x4c94 <_ZN3I2C9twi_startEv>
    4ee4:	6c e3       	ldi	r22, 0x3C	; 60
    4ee6:	ce 01       	movw	r24, r28
    4ee8:	dd de       	rcall	.-582    	; 0x4ca4 <_ZN3I2C9twi_writeEh>
    4eea:	60 2f       	mov	r22, r16
    4eec:	ce 01       	movw	r24, r28
    4eee:	da de       	rcall	.-588    	; 0x4ca4 <_ZN3I2C9twi_writeEh>
    4ef0:	61 2f       	mov	r22, r17
    4ef2:	ce 01       	movw	r24, r28
    4ef4:	d7 de       	rcall	.-594    	; 0x4ca4 <_ZN3I2C9twi_writeEh>
    4ef6:	ce 01       	movw	r24, r28
    4ef8:	d1 de       	rcall	.-606    	; 0x4c9c <_ZN3I2C8twi_stopEv>
    4efa:	df 91       	pop	r29
    4efc:	cf 91       	pop	r28
    4efe:	1f 91       	pop	r17
    4f00:	0f 91       	pop	r16
    4f02:	08 95       	ret

00004f04 <_ZN7KompassC1Ev>:
    4f04:	cf 93       	push	r28
    4f06:	df 93       	push	r29
    4f08:	ec 01       	movw	r28, r24
    4f0a:	06 96       	adiw	r24, 0x06	; 6
    4f0c:	be de       	rcall	.-644    	; 0x4c8a <_ZN3I2CC1Ev>
    4f0e:	40 e7       	ldi	r20, 0x70	; 112
    4f10:	60 e0       	ldi	r22, 0x00	; 0
    4f12:	ce 01       	movw	r24, r28
    4f14:	dd df       	rcall	.-70     	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
    4f16:	40 e2       	ldi	r20, 0x20	; 32
    4f18:	61 e0       	ldi	r22, 0x01	; 1
    4f1a:	ce 01       	movw	r24, r28
    4f1c:	d9 df       	rcall	.-78     	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
    4f1e:	41 e0       	ldi	r20, 0x01	; 1
    4f20:	62 e0       	ldi	r22, 0x02	; 2
    4f22:	ce 01       	movw	r24, r28
    4f24:	d5 df       	rcall	.-86     	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
    4f26:	19 82       	std	Y+1, r1	; 0x01
    4f28:	18 82       	st	Y, r1
    4f2a:	18 86       	std	Y+8, r1	; 0x08
    4f2c:	1f 82       	std	Y+7, r1	; 0x07
    4f2e:	1b 82       	std	Y+3, r1	; 0x03
    4f30:	1a 82       	std	Y+2, r1	; 0x02
    4f32:	1a 86       	std	Y+10, r1	; 0x0a
    4f34:	19 86       	std	Y+9, r1	; 0x09
    4f36:	1d 82       	std	Y+5, r1	; 0x05
    4f38:	1c 82       	std	Y+4, r1	; 0x04
    4f3a:	1c 86       	std	Y+12, r1	; 0x0c
    4f3c:	1b 86       	std	Y+11, r1	; 0x0b
    4f3e:	df 91       	pop	r29
    4f40:	cf 91       	pop	r28
    4f42:	08 95       	ret

00004f44 <_ZN7Kompass20HMC5883L_readHeadingEv>:

uint8_t Kompass::HMC5883L_readHeading(){
    4f44:	af 92       	push	r10
    4f46:	bf 92       	push	r11
    4f48:	cf 92       	push	r12
    4f4a:	df 92       	push	r13
    4f4c:	ef 92       	push	r14
    4f4e:	ff 92       	push	r15
    4f50:	1f 93       	push	r17
    4f52:	cf 93       	push	r28
    4f54:	df 93       	push	r29
    4f56:	00 d0       	rcall	.+0      	; 0x4f58 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14>
    4f58:	00 d0       	rcall	.+0      	; 0x4f5a <_ZN7Kompass20HMC5883L_readHeadingEv+0x16>
    4f5a:	00 d0       	rcall	.+0      	; 0x4f5c <_ZN7Kompass20HMC5883L_readHeadingEv+0x18>
    4f5c:	cd b7       	in	r28, 0x3d	; 61
    4f5e:	de b7       	in	r29, 0x3e	; 62
    4f60:	5c 01       	movw	r10, r24
	cli();
    4f62:	f8 94       	cli
	uint8_t heading[6];
	i2c.twi_start();
    4f64:	6c 01       	movw	r12, r24
    4f66:	26 e0       	ldi	r18, 0x06	; 6
    4f68:	c2 0e       	add	r12, r18
    4f6a:	d1 1c       	adc	r13, r1
    4f6c:	c6 01       	movw	r24, r12
    4f6e:	92 de       	rcall	.-732    	; 0x4c94 <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCWRITEADRESSE);
    4f70:	6c e3       	ldi	r22, 0x3C	; 60
    4f72:	c6 01       	movw	r24, r12
    4f74:	97 de       	rcall	.-722    	; 0x4ca4 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(0x03);
    4f76:	63 e0       	ldi	r22, 0x03	; 3
    4f78:	c6 01       	movw	r24, r12
    4f7a:	94 de       	rcall	.-728    	; 0x4ca4 <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    4f7c:	c6 01       	movw	r24, r12
    4f7e:	8a de       	rcall	.-748    	; 0x4c94 <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCREADADRESSE);
    4f80:	6d e3       	ldi	r22, 0x3D	; 61
    4f82:	c6 01       	movw	r24, r12
    4f84:	8f de       	rcall	.-738    	; 0x4ca4 <_ZN3I2C9twi_writeEh>
    4f86:	ce 01       	movw	r24, r28
    4f88:	01 96       	adiw	r24, 0x01	; 1
    4f8a:	7c 01       	movw	r14, r24
	
	for(uint8_t i=0; i<6;i++){
    4f8c:	10 e0       	ldi	r17, 0x00	; 0
		if (i<5)
    4f8e:	15 30       	cpi	r17, 0x05	; 5
    4f90:	30 f4       	brcc	.+12     	; 0x4f9e <_ZN7Kompass20HMC5883L_readHeadingEv+0x5a>
		{
			heading[i]=i2c.twi_read(1);
    4f92:	61 e0       	ldi	r22, 0x01	; 1
    4f94:	c6 01       	movw	r24, r12
    4f96:	96 de       	rcall	.-724    	; 0x4cc4 <_ZN3I2C8twi_readEh>
    4f98:	f7 01       	movw	r30, r14
    4f9a:	80 83       	st	Z, r24
    4f9c:	05 c0       	rjmp	.+10     	; 0x4fa8 <_ZN7Kompass20HMC5883L_readHeadingEv+0x64>
		}
		else
		{
			heading[i]=i2c.twi_read(0);
    4f9e:	60 e0       	ldi	r22, 0x00	; 0
    4fa0:	c6 01       	movw	r24, r12
    4fa2:	90 de       	rcall	.-736    	; 0x4cc4 <_ZN3I2C8twi_readEh>
    4fa4:	f7 01       	movw	r30, r14
    4fa6:	80 83       	st	Z, r24
	i2c.twi_write(HMCWRITEADRESSE);
	i2c.twi_write(0x03);
	i2c.twi_start();
	i2c.twi_write(HMCREADADRESSE);
	
	for(uint8_t i=0; i<6;i++){
    4fa8:	1f 5f       	subi	r17, 0xFF	; 255
    4faa:	ff ef       	ldi	r31, 0xFF	; 255
    4fac:	ef 1a       	sub	r14, r31
    4fae:	ff 0a       	sbc	r15, r31
    4fb0:	16 30       	cpi	r17, 0x06	; 6
    4fb2:	69 f7       	brne	.-38     	; 0x4f8e <_ZN7Kompass20HMC5883L_readHeadingEv+0x4a>
		{
			heading[i]=i2c.twi_read(0);
		}
		
	}
	i2c.twi_stop();
    4fb4:	c6 01       	movw	r24, r12
    4fb6:	72 de       	rcall	.-796    	; 0x4c9c <_ZN3I2C8twi_stopEv>
	achsen[0] =(int16_t) (heading[1] | (heading[0] << 8));
    4fb8:	89 81       	ldd	r24, Y+1	; 0x01
    4fba:	90 e0       	ldi	r25, 0x00	; 0
    4fbc:	98 2f       	mov	r25, r24
    4fbe:	88 27       	eor	r24, r24
    4fc0:	2a 81       	ldd	r18, Y+2	; 0x02
    4fc2:	82 2b       	or	r24, r18
    4fc4:	f5 01       	movw	r30, r10
    4fc6:	91 83       	std	Z+1, r25	; 0x01
    4fc8:	80 83       	st	Z, r24
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
    4fca:	8b 81       	ldd	r24, Y+3	; 0x03
    4fcc:	90 e0       	ldi	r25, 0x00	; 0
    4fce:	98 2f       	mov	r25, r24
    4fd0:	88 27       	eor	r24, r24
    4fd2:	2c 81       	ldd	r18, Y+4	; 0x04
    4fd4:	82 2b       	or	r24, r18
    4fd6:	93 83       	std	Z+3, r25	; 0x03
    4fd8:	82 83       	std	Z+2, r24	; 0x02
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
    4fda:	8d 81       	ldd	r24, Y+5	; 0x05
    4fdc:	90 e0       	ldi	r25, 0x00	; 0
    4fde:	98 2f       	mov	r25, r24
    4fe0:	88 27       	eor	r24, r24
    4fe2:	2e 81       	ldd	r18, Y+6	; 0x06
    4fe4:	82 2b       	or	r24, r18
    4fe6:	95 83       	std	Z+5, r25	; 0x05
    4fe8:	84 83       	std	Z+4, r24	; 0x04
	sei();
    4fea:	78 94       	sei
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
    4fec:	80 81       	ld	r24, Z
    4fee:	91 81       	ldd	r25, Z+1	; 0x01
    4ff0:	81 15       	cp	r24, r1
    4ff2:	90 4f       	sbci	r25, 0xF0	; 240
    4ff4:	09 f4       	brne	.+2      	; 0x4ff8 <_ZN7Kompass20HMC5883L_readHeadingEv+0xb4>
    4ff6:	49 c0       	rjmp	.+146    	; 0x508a <_ZN7Kompass20HMC5883L_readHeadingEv+0x146>
    4ff8:	f5 01       	movw	r30, r10
    4ffa:	82 81       	ldd	r24, Z+2	; 0x02
    4ffc:	93 81       	ldd	r25, Z+3	; 0x03
    4ffe:	81 15       	cp	r24, r1
    5000:	90 4f       	sbci	r25, 0xF0	; 240
    5002:	09 f4       	brne	.+2      	; 0x5006 <_ZN7Kompass20HMC5883L_readHeadingEv+0xc2>
    5004:	44 c0       	rjmp	.+136    	; 0x508e <_ZN7Kompass20HMC5883L_readHeadingEv+0x14a>
    5006:	f5 01       	movw	r30, r10
    5008:	84 81       	ldd	r24, Z+4	; 0x04
    500a:	95 81       	ldd	r25, Z+5	; 0x05
    500c:	81 15       	cp	r24, r1
    500e:	90 4f       	sbci	r25, 0xF0	; 240
    5010:	09 f4       	brne	.+2      	; 0x5014 <_ZN7Kompass20HMC5883L_readHeadingEv+0xd0>
    5012:	3f c0       	rjmp	.+126    	; 0x5092 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14e>
    5014:	f5 01       	movw	r30, r10
    5016:	26 e0       	ldi	r18, 0x06	; 6
    5018:	a2 0e       	add	r10, r18
    501a:	b1 1c       	adc	r11, r1
    501c:	df 01       	movw	r26, r30
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
			if(achsen[i]>max[i]){
    501e:	80 81       	ld	r24, Z
    5020:	91 81       	ldd	r25, Z+1	; 0x01
    5022:	25 85       	ldd	r18, Z+13	; 0x0d
    5024:	36 85       	ldd	r19, Z+14	; 0x0e
    5026:	28 17       	cp	r18, r24
    5028:	39 07       	cpc	r19, r25
    502a:	84 f4       	brge	.+32     	; 0x504c <_ZN7Kompass20HMC5883L_readHeadingEv+0x108>
				max[i]=achsen[i];
    502c:	96 87       	std	Z+14, r25	; 0x0e
    502e:	85 87       	std	Z+13, r24	; 0x0d
				offset[i]=(max[i]+min[i])/2;
    5030:	23 89       	ldd	r18, Z+19	; 0x13
    5032:	34 89       	ldd	r19, Z+20	; 0x14
    5034:	82 0f       	add	r24, r18
    5036:	93 1f       	adc	r25, r19
    5038:	99 23       	and	r25, r25
    503a:	0c f4       	brge	.+2      	; 0x503e <_ZN7Kompass20HMC5883L_readHeadingEv+0xfa>
    503c:	01 96       	adiw	r24, 0x01	; 1
    503e:	95 95       	asr	r25
    5040:	87 95       	ror	r24
    5042:	18 96       	adiw	r26, 0x08	; 8
    5044:	9c 93       	st	X, r25
    5046:	8e 93       	st	-X, r24
    5048:	17 97       	sbiw	r26, 0x07	; 7
    504a:	19 c0       	rjmp	.+50     	; 0x507e <_ZN7Kompass20HMC5883L_readHeadingEv+0x13a>
			}
			else if(achsen[i]<min[i]){
    504c:	43 89       	ldd	r20, Z+19	; 0x13
    504e:	54 89       	ldd	r21, Z+20	; 0x14
    5050:	84 17       	cp	r24, r20
    5052:	95 07       	cpc	r25, r21
    5054:	74 f4       	brge	.+28     	; 0x5072 <_ZN7Kompass20HMC5883L_readHeadingEv+0x12e>
				min[i]=achsen[i];
    5056:	94 8b       	std	Z+20, r25	; 0x14
    5058:	83 8b       	std	Z+19, r24	; 0x13
				offset[i]=(max[i]+min[i])/2;
    505a:	82 0f       	add	r24, r18
    505c:	93 1f       	adc	r25, r19
    505e:	99 23       	and	r25, r25
    5060:	0c f4       	brge	.+2      	; 0x5064 <_ZN7Kompass20HMC5883L_readHeadingEv+0x120>
    5062:	01 96       	adiw	r24, 0x01	; 1
    5064:	95 95       	asr	r25
    5066:	87 95       	ror	r24
    5068:	18 96       	adiw	r26, 0x08	; 8
    506a:	9c 93       	st	X, r25
    506c:	8e 93       	st	-X, r24
    506e:	17 97       	sbiw	r26, 0x07	; 7
    5070:	06 c0       	rjmp	.+12     	; 0x507e <_ZN7Kompass20HMC5883L_readHeadingEv+0x13a>
			}
			else {
				achsen[i]-=offset[i];
    5072:	27 81       	ldd	r18, Z+7	; 0x07
    5074:	30 85       	ldd	r19, Z+8	; 0x08
    5076:	82 1b       	sub	r24, r18
    5078:	93 0b       	sbc	r25, r19
    507a:	91 83       	std	Z+1, r25	; 0x01
    507c:	80 83       	st	Z, r24
    507e:	32 96       	adiw	r30, 0x02	; 2
		return 1;
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
    5080:	ea 15       	cp	r30, r10
    5082:	fb 05       	cpc	r31, r11
    5084:	59 f6       	brne	.-106    	; 0x501c <_ZN7Kompass20HMC5883L_readHeadingEv+0xd8>
				achsen[i]-=offset[i];
			}
		}
	}
	
	return 0;
    5086:	80 e0       	ldi	r24, 0x00	; 0
    5088:	05 c0       	rjmp	.+10     	; 0x5094 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
	sei();
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
	{
		return 1;
    508a:	81 e0       	ldi	r24, 0x01	; 1
    508c:	03 c0       	rjmp	.+6      	; 0x5094 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    508e:	81 e0       	ldi	r24, 0x01	; 1
    5090:	01 c0       	rjmp	.+2      	; 0x5094 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    5092:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	
	return 0;
}
    5094:	26 96       	adiw	r28, 0x06	; 6
    5096:	0f b6       	in	r0, 0x3f	; 63
    5098:	f8 94       	cli
    509a:	de bf       	out	0x3e, r29	; 62
    509c:	0f be       	out	0x3f, r0	; 63
    509e:	cd bf       	out	0x3d, r28	; 61
    50a0:	df 91       	pop	r29
    50a2:	cf 91       	pop	r28
    50a4:	1f 91       	pop	r17
    50a6:	ff 90       	pop	r15
    50a8:	ef 90       	pop	r14
    50aa:	df 90       	pop	r13
    50ac:	cf 90       	pop	r12
    50ae:	bf 90       	pop	r11
    50b0:	af 90       	pop	r10
    50b2:	08 95       	ret

000050b4 <_ZN7Kompass5angleEdd>:

double Kompass::angle(double roll, double pitch){
    50b4:	2f 92       	push	r2
    50b6:	3f 92       	push	r3
    50b8:	4f 92       	push	r4
    50ba:	5f 92       	push	r5
    50bc:	6f 92       	push	r6
    50be:	7f 92       	push	r7
    50c0:	8f 92       	push	r8
    50c2:	9f 92       	push	r9
    50c4:	af 92       	push	r10
    50c6:	bf 92       	push	r11
    50c8:	cf 92       	push	r12
    50ca:	df 92       	push	r13
    50cc:	ef 92       	push	r14
    50ce:	ff 92       	push	r15
    50d0:	0f 93       	push	r16
    50d2:	1f 93       	push	r17
    50d4:	cf 93       	push	r28
    50d6:	df 93       	push	r29
    50d8:	cd b7       	in	r28, 0x3d	; 61
    50da:	de b7       	in	r29, 0x3e	; 62
    50dc:	64 97       	sbiw	r28, 0x14	; 20
    50de:	0f b6       	in	r0, 0x3f	; 63
    50e0:	f8 94       	cli
    50e2:	de bf       	out	0x3e, r29	; 62
    50e4:	0f be       	out	0x3f, r0	; 63
    50e6:	cd bf       	out	0x3d, r28	; 61
    50e8:	1c 01       	movw	r2, r24
    50ea:	4a 01       	movw	r8, r20
    50ec:	5b 01       	movw	r10, r22
    50ee:	68 01       	movw	r12, r16
    50f0:	79 01       	movw	r14, r18
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
    50f2:	28 df       	rcall	.-432    	; 0x4f44 <_ZN7Kompass20HMC5883L_readHeadingEv>
    50f4:	81 11       	cpse	r24, r1
    50f6:	f4 c0       	rjmp	.+488    	; 0x52e0 <_ZN7Kompass5angleEdd+0x22c>
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    50f8:	c7 01       	movw	r24, r14
    50fa:	b6 01       	movw	r22, r12
    50fc:	0e 94 3b 31 	call	0x6276	; 0x6276 <cos>
    5100:	69 83       	std	Y+1, r22	; 0x01
    5102:	7a 83       	std	Y+2, r23	; 0x02
    5104:	8b 83       	std	Y+3, r24	; 0x03
    5106:	9c 83       	std	Y+4, r25	; 0x04
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    5108:	f1 01       	movw	r30, r2
    510a:	62 81       	ldd	r22, Z+2	; 0x02
    510c:	73 81       	ldd	r23, Z+3	; 0x03
    510e:	07 2e       	mov	r0, r23
    5110:	00 0c       	add	r0, r0
    5112:	88 0b       	sbc	r24, r24
    5114:	99 0b       	sbc	r25, r25
    5116:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    511a:	2b 01       	movw	r4, r22
    511c:	3c 01       	movw	r6, r24
    511e:	c5 01       	movw	r24, r10
    5120:	b4 01       	movw	r22, r8
    5122:	0e 94 55 33 	call	0x66aa	; 0x66aa <sin>
    5126:	6d 83       	std	Y+5, r22	; 0x05
    5128:	7e 83       	std	Y+6, r23	; 0x06
    512a:	8f 83       	std	Y+7, r24	; 0x07
    512c:	98 87       	std	Y+8, r25	; 0x08
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    512e:	f1 01       	movw	r30, r2
    5130:	64 81       	ldd	r22, Z+4	; 0x04
    5132:	75 81       	ldd	r23, Z+5	; 0x05
    5134:	07 2e       	mov	r0, r23
    5136:	00 0c       	add	r0, r0
    5138:	88 0b       	sbc	r24, r24
    513a:	99 0b       	sbc	r25, r25
    513c:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    5140:	69 87       	std	Y+9, r22	; 0x09
    5142:	7a 87       	std	Y+10, r23	; 0x0a
    5144:	8b 87       	std	Y+11, r24	; 0x0b
    5146:	9c 87       	std	Y+12, r25	; 0x0c
    5148:	c5 01       	movw	r24, r10
    514a:	b4 01       	movw	r22, r8
    514c:	0e 94 3b 31 	call	0x6276	; 0x6276 <cos>
    5150:	4b 01       	movw	r8, r22
    5152:	5c 01       	movw	r10, r24
    5154:	c7 01       	movw	r24, r14
    5156:	b6 01       	movw	r22, r12
    5158:	0e 94 55 33 	call	0x66aa	; 0x66aa <sin>
    515c:	6d 87       	std	Y+13, r22	; 0x0d
    515e:	7e 87       	std	Y+14, r23	; 0x0e
    5160:	8f 87       	std	Y+15, r24	; 0x0f
    5162:	98 8b       	std	Y+16, r25	; 0x10
		temp_M[1] = achsen[1]*cos(roll);
    5164:	a5 01       	movw	r20, r10
    5166:	94 01       	movw	r18, r8
    5168:	c3 01       	movw	r24, r6
    516a:	b2 01       	movw	r22, r4
    516c:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    5170:	0e 94 a6 31 	call	0x634c	; 0x634c <__fixsfsi>
		temp_M[1]+= achsen[2]*sin(roll);
    5174:	07 2e       	mov	r0, r23
    5176:	00 0c       	add	r0, r0
    5178:	88 0b       	sbc	r24, r24
    517a:	99 0b       	sbc	r25, r25
    517c:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    5180:	6b 01       	movw	r12, r22
    5182:	7c 01       	movw	r14, r24
    5184:	29 85       	ldd	r18, Y+9	; 0x09
    5186:	3a 85       	ldd	r19, Y+10	; 0x0a
    5188:	4b 85       	ldd	r20, Y+11	; 0x0b
    518a:	5c 85       	ldd	r21, Y+12	; 0x0c
    518c:	6d 81       	ldd	r22, Y+5	; 0x05
    518e:	7e 81       	ldd	r23, Y+6	; 0x06
    5190:	8f 81       	ldd	r24, Y+7	; 0x07
    5192:	98 85       	ldd	r25, Y+8	; 0x08
    5194:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    5198:	9b 01       	movw	r18, r22
    519a:	ac 01       	movw	r20, r24
    519c:	c7 01       	movw	r24, r14
    519e:	b6 01       	movw	r22, r12
    51a0:	a0 d7       	rcall	.+3904   	; 0x60e2 <__addsf3>
    51a2:	0e 94 a6 31 	call	0x634c	; 0x634c <__fixsfsi>
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    51a6:	07 2e       	mov	r0, r23
    51a8:	00 0c       	add	r0, r0
    51aa:	88 0b       	sbc	r24, r24
    51ac:	99 0b       	sbc	r25, r25
    51ae:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    51b2:	69 8b       	std	Y+17, r22	; 0x11
    51b4:	7a 8b       	std	Y+18, r23	; 0x12
    51b6:	8b 8b       	std	Y+19, r24	; 0x13
    51b8:	9c 8b       	std	Y+20, r25	; 0x14
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    51ba:	f1 01       	movw	r30, r2
    51bc:	60 81       	ld	r22, Z
    51be:	71 81       	ldd	r23, Z+1	; 0x01
    51c0:	07 2e       	mov	r0, r23
    51c2:	00 0c       	add	r0, r0
    51c4:	88 0b       	sbc	r24, r24
    51c6:	99 0b       	sbc	r25, r25
    51c8:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    51cc:	29 81       	ldd	r18, Y+1	; 0x01
    51ce:	3a 81       	ldd	r19, Y+2	; 0x02
    51d0:	4b 81       	ldd	r20, Y+3	; 0x03
    51d2:	5c 81       	ldd	r21, Y+4	; 0x04
    51d4:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    51d8:	0e 94 a6 31 	call	0x634c	; 0x634c <__fixsfsi>
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    51dc:	07 2e       	mov	r0, r23
    51de:	00 0c       	add	r0, r0
    51e0:	88 0b       	sbc	r24, r24
    51e2:	99 0b       	sbc	r25, r25
    51e4:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    51e8:	6b 01       	movw	r12, r22
    51ea:	7c 01       	movw	r14, r24
    51ec:	2d 81       	ldd	r18, Y+5	; 0x05
    51ee:	3e 81       	ldd	r19, Y+6	; 0x06
    51f0:	4f 81       	ldd	r20, Y+7	; 0x07
    51f2:	58 85       	ldd	r21, Y+8	; 0x08
    51f4:	c3 01       	movw	r24, r6
    51f6:	b2 01       	movw	r22, r4
    51f8:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    51fc:	9b 01       	movw	r18, r22
    51fe:	ac 01       	movw	r20, r24
    5200:	69 81       	ldd	r22, Y+1	; 0x01
    5202:	7a 81       	ldd	r23, Y+2	; 0x02
    5204:	8b 81       	ldd	r24, Y+3	; 0x03
    5206:	9c 81       	ldd	r25, Y+4	; 0x04
    5208:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    520c:	9b 01       	movw	r18, r22
    520e:	ac 01       	movw	r20, r24
    5210:	c7 01       	movw	r24, r14
    5212:	b6 01       	movw	r22, r12
    5214:	66 d7       	rcall	.+3788   	; 0x60e2 <__addsf3>
    5216:	0e 94 a6 31 	call	0x634c	; 0x634c <__fixsfsi>
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    521a:	07 2e       	mov	r0, r23
    521c:	00 0c       	add	r0, r0
    521e:	88 0b       	sbc	r24, r24
    5220:	99 0b       	sbc	r25, r25
    5222:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    5226:	6b 01       	movw	r12, r22
    5228:	7c 01       	movw	r14, r24
    522a:	a5 01       	movw	r20, r10
    522c:	94 01       	movw	r18, r8
    522e:	69 85       	ldd	r22, Y+9	; 0x09
    5230:	7a 85       	ldd	r23, Y+10	; 0x0a
    5232:	8b 85       	ldd	r24, Y+11	; 0x0b
    5234:	9c 85       	ldd	r25, Y+12	; 0x0c
    5236:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    523a:	2d 85       	ldd	r18, Y+13	; 0x0d
    523c:	3e 85       	ldd	r19, Y+14	; 0x0e
    523e:	4f 85       	ldd	r20, Y+15	; 0x0f
    5240:	58 89       	ldd	r21, Y+16	; 0x10
    5242:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    5246:	9b 01       	movw	r18, r22
    5248:	ac 01       	movw	r20, r24
    524a:	c7 01       	movw	r24, r14
    524c:	b6 01       	movw	r22, r12
    524e:	49 d7       	rcall	.+3730   	; 0x60e2 <__addsf3>
    5250:	0e 94 a6 31 	call	0x634c	; 0x634c <__fixsfsi>
		temp_M[1] = achsen[1]*cos(roll);
		temp_M[1]+= achsen[2]*sin(roll);
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    5254:	07 2e       	mov	r0, r23
    5256:	00 0c       	add	r0, r0
    5258:	88 0b       	sbc	r24, r24
    525a:	99 0b       	sbc	r25, r25
    525c:	0e 94 d9 31 	call	0x63b2	; 0x63b2 <__floatsisf>
    5260:	29 89       	ldd	r18, Y+17	; 0x11
    5262:	3a 89       	ldd	r19, Y+18	; 0x12
    5264:	4b 89       	ldd	r20, Y+19	; 0x13
    5266:	5c 89       	ldd	r21, Y+20	; 0x14
    5268:	af d7       	rcall	.+3934   	; 0x61c8 <atan2>
    526a:	20 e0       	ldi	r18, 0x00	; 0
    526c:	30 e0       	ldi	r19, 0x00	; 0
    526e:	44 e3       	ldi	r20, 0x34	; 52
    5270:	53 e4       	ldi	r21, 0x43	; 67
    5272:	0e 94 f2 32 	call	0x65e4	; 0x65e4 <__mulsf3>
    5276:	2b ed       	ldi	r18, 0xDB	; 219
    5278:	3f e0       	ldi	r19, 0x0F	; 15
    527a:	49 e4       	ldi	r20, 0x49	; 73
    527c:	50 e4       	ldi	r21, 0x40	; 64
    527e:	fe d7       	rcall	.+4092   	; 0x627c <__divsf3>
    5280:	20 e0       	ldi	r18, 0x00	; 0
    5282:	30 e0       	ldi	r19, 0x00	; 0
    5284:	44 e3       	ldi	r20, 0x34	; 52
    5286:	53 e4       	ldi	r21, 0x43	; 67
    5288:	2c d7       	rcall	.+3672   	; 0x60e2 <__addsf3>
		//Tilt kompensation
		//deklination
		angle+=2.35;
    528a:	26 e6       	ldi	r18, 0x66	; 102
    528c:	36 e6       	ldi	r19, 0x66	; 102
    528e:	46 e1       	ldi	r20, 0x16	; 22
    5290:	50 e4       	ldi	r21, 0x40	; 64
    5292:	27 d7       	rcall	.+3662   	; 0x60e2 <__addsf3>
    5294:	6b 01       	movw	r12, r22
    5296:	7c 01       	movw	r14, r24
		//Normierung auf %360
		if (angle>=360)
    5298:	20 e0       	ldi	r18, 0x00	; 0
    529a:	30 e0       	ldi	r19, 0x00	; 0
    529c:	44 eb       	ldi	r20, 0xB4	; 180
    529e:	53 e4       	ldi	r21, 0x43	; 67
    52a0:	0e 94 e7 32 	call	0x65ce	; 0x65ce <__gesf2>
    52a4:	88 23       	and	r24, r24
    52a6:	54 f0       	brlt	.+20     	; 0x52bc <_ZN7Kompass5angleEdd+0x208>
		{
			angle-=360;
    52a8:	20 e0       	ldi	r18, 0x00	; 0
    52aa:	30 e0       	ldi	r19, 0x00	; 0
    52ac:	44 eb       	ldi	r20, 0xB4	; 180
    52ae:	53 e4       	ldi	r21, 0x43	; 67
    52b0:	c7 01       	movw	r24, r14
    52b2:	b6 01       	movw	r22, r12
    52b4:	15 d7       	rcall	.+3626   	; 0x60e0 <__subsf3>
    52b6:	6b 01       	movw	r12, r22
    52b8:	7c 01       	movw	r14, r24
    52ba:	1a c0       	rjmp	.+52     	; 0x52f0 <_ZN7Kompass5angleEdd+0x23c>
		}
		else if (angle < 0)
    52bc:	20 e0       	ldi	r18, 0x00	; 0
    52be:	30 e0       	ldi	r19, 0x00	; 0
    52c0:	a9 01       	movw	r20, r18
    52c2:	c7 01       	movw	r24, r14
    52c4:	b6 01       	movw	r22, r12
    52c6:	d3 d7       	rcall	.+4006   	; 0x626e <__cmpsf2>
    52c8:	88 23       	and	r24, r24
    52ca:	94 f4       	brge	.+36     	; 0x52f0 <_ZN7Kompass5angleEdd+0x23c>
		{
			angle+=360;
    52cc:	20 e0       	ldi	r18, 0x00	; 0
    52ce:	30 e0       	ldi	r19, 0x00	; 0
    52d0:	44 eb       	ldi	r20, 0xB4	; 180
    52d2:	53 e4       	ldi	r21, 0x43	; 67
    52d4:	c7 01       	movw	r24, r14
    52d6:	b6 01       	movw	r22, r12
    52d8:	04 d7       	rcall	.+3592   	; 0x60e2 <__addsf3>
    52da:	6b 01       	movw	r12, r22
    52dc:	7c 01       	movw	r14, r24
    52de:	08 c0       	rjmp	.+16     	; 0x52f0 <_ZN7Kompass5angleEdd+0x23c>
double Kompass::angle(double roll, double pitch){
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
    52e0:	0f 2e       	mov	r0, r31
    52e2:	c1 2c       	mov	r12, r1
    52e4:	d1 2c       	mov	r13, r1
    52e6:	f0 e8       	ldi	r31, 0x80	; 128
    52e8:	ef 2e       	mov	r14, r31
    52ea:	ff eb       	ldi	r31, 0xBF	; 191
    52ec:	ff 2e       	mov	r15, r31
    52ee:	f0 2d       	mov	r31, r0
		{
			angle+=360;
		}
	}
	
	HMC5883L_command(0x02,HMCSIGLEMODE);
    52f0:	41 e0       	ldi	r20, 0x01	; 1
    52f2:	62 e0       	ldi	r22, 0x02	; 2
    52f4:	c1 01       	movw	r24, r2
    52f6:	ec dd       	rcall	.-1064   	; 0x4ed0 <_ZN7Kompass16HMC5883L_commandEhh>
	return angle;
}
    52f8:	c7 01       	movw	r24, r14
    52fa:	b6 01       	movw	r22, r12
    52fc:	64 96       	adiw	r28, 0x14	; 20
    52fe:	0f b6       	in	r0, 0x3f	; 63
    5300:	f8 94       	cli
    5302:	de bf       	out	0x3e, r29	; 62
    5304:	0f be       	out	0x3f, r0	; 63
    5306:	cd bf       	out	0x3d, r28	; 61
    5308:	df 91       	pop	r29
    530a:	cf 91       	pop	r28
    530c:	1f 91       	pop	r17
    530e:	0f 91       	pop	r16
    5310:	ff 90       	pop	r15
    5312:	ef 90       	pop	r14
    5314:	df 90       	pop	r13
    5316:	cf 90       	pop	r12
    5318:	bf 90       	pop	r11
    531a:	af 90       	pop	r10
    531c:	9f 90       	pop	r9
    531e:	8f 90       	pop	r8
    5320:	7f 90       	pop	r7
    5322:	6f 90       	pop	r6
    5324:	5f 90       	pop	r5
    5326:	4f 90       	pop	r4
    5328:	3f 90       	pop	r3
    532a:	2f 90       	pop	r2
    532c:	08 95       	ret

0000532e <_ZN7Kompass25kallibrierung_ruecksetzenEv>:

void Kompass::kallibrierung_ruecksetzen(){
    532e:	fc 01       	movw	r30, r24
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    5330:	16 86       	std	Z+14, r1	; 0x0e
    5332:	15 86       	std	Z+13, r1	; 0x0d
		min[i]=0;
    5334:	14 8a       	std	Z+20, r1	; 0x14
    5336:	13 8a       	std	Z+19, r1	; 0x13
		offset[i]=0;
    5338:	10 86       	std	Z+8, r1	; 0x08
    533a:	17 82       	std	Z+7, r1	; 0x07
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    533c:	10 8a       	std	Z+16, r1	; 0x10
    533e:	17 86       	std	Z+15, r1	; 0x0f
		min[i]=0;
    5340:	16 8a       	std	Z+22, r1	; 0x16
    5342:	15 8a       	std	Z+21, r1	; 0x15
		offset[i]=0;
    5344:	12 86       	std	Z+10, r1	; 0x0a
    5346:	11 86       	std	Z+9, r1	; 0x09
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    5348:	12 8a       	std	Z+18, r1	; 0x12
    534a:	11 8a       	std	Z+17, r1	; 0x11
		min[i]=0;
    534c:	10 8e       	std	Z+24, r1	; 0x18
    534e:	17 8a       	std	Z+23, r1	; 0x17
		offset[i]=0;
    5350:	14 86       	std	Z+12, r1	; 0x0c
    5352:	13 86       	std	Z+11, r1	; 0x0b
    5354:	08 95       	ret

00005356 <_ZN7LSM303DD1Ev>:
	//ACC init
	acce_init();
} //LSM303D

// default destructor
LSM303D::~LSM303D()
    5356:	46 96       	adiw	r24, 0x16	; 22
    5358:	9c cc       	rjmp	.-1736   	; 0x4c92 <_ZN3I2CD1Ev>
    535a:	08 95       	ret

0000535c <_ZN7LSM303D7readaccEv>:

void LSM303D::ACCBypassmode(){
	LSM303_command(FIFO_CTRL,0x00);
}

void LSM303D::readacc(){
    535c:	4f 92       	push	r4
    535e:	5f 92       	push	r5
    5360:	6f 92       	push	r6
    5362:	7f 92       	push	r7
    5364:	af 92       	push	r10
    5366:	bf 92       	push	r11
    5368:	cf 92       	push	r12
    536a:	df 92       	push	r13
    536c:	ef 92       	push	r14
    536e:	ff 92       	push	r15
    5370:	1f 93       	push	r17
    5372:	cf 93       	push	r28
    5374:	df 93       	push	r29
    5376:	00 d0       	rcall	.+0      	; 0x5378 <_ZN7LSM303D7readaccEv+0x1c>
    5378:	00 d0       	rcall	.+0      	; 0x537a <_ZN7LSM303D7readaccEv+0x1e>
    537a:	00 d0       	rcall	.+0      	; 0x537c <_ZN7LSM303D7readaccEv+0x20>
    537c:	cd b7       	in	r28, 0x3d	; 61
    537e:	de b7       	in	r29, 0x3e	; 62
    5380:	5c 01       	movw	r10, r24
	cli();
    5382:	f8 94       	cli
	uint8_t input[6];
	i2c.twi_start();
    5384:	6c 01       	movw	r12, r24
    5386:	86 e1       	ldi	r24, 0x16	; 22
    5388:	c8 0e       	add	r12, r24
    538a:	d1 1c       	adc	r13, r1
    538c:	c6 01       	movw	r24, r12
    538e:	82 dc       	rcall	.-1788   	; 0x4c94 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_Write);
    5390:	6a e3       	ldi	r22, 0x3A	; 58
    5392:	c6 01       	movw	r24, r12
    5394:	87 dc       	rcall	.-1778   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(OUT_X_L_A|(1<<7));
    5396:	68 ea       	ldi	r22, 0xA8	; 168
    5398:	c6 01       	movw	r24, r12
    539a:	84 dc       	rcall	.-1784   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    539c:	c6 01       	movw	r24, r12
    539e:	7a dc       	rcall	.-1804   	; 0x4c94 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_READ);
    53a0:	6b e3       	ldi	r22, 0x3B	; 59
    53a2:	c6 01       	movw	r24, r12
    53a4:	7f dc       	rcall	.-1794   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
    53a6:	fe 01       	movw	r30, r28
    53a8:	31 96       	adiw	r30, 0x01	; 1
    53aa:	7f 01       	movw	r14, r30
	
	for(uint8_t i=0; i<6;i++){
    53ac:	10 e0       	ldi	r17, 0x00	; 0
		if (i<5)
    53ae:	15 30       	cpi	r17, 0x05	; 5
    53b0:	30 f4       	brcc	.+12     	; 0x53be <_ZN7LSM303D7readaccEv+0x62>
		{
			input[i]=i2c.twi_read(1);
    53b2:	61 e0       	ldi	r22, 0x01	; 1
    53b4:	c6 01       	movw	r24, r12
    53b6:	86 dc       	rcall	.-1780   	; 0x4cc4 <_ZN3I2C8twi_readEh>
    53b8:	f7 01       	movw	r30, r14
    53ba:	80 83       	st	Z, r24
    53bc:	05 c0       	rjmp	.+10     	; 0x53c8 <_ZN7LSM303D7readaccEv+0x6c>
		}
		else
		{
			input[i]=i2c.twi_read(0);
    53be:	60 e0       	ldi	r22, 0x00	; 0
    53c0:	c6 01       	movw	r24, r12
    53c2:	80 dc       	rcall	.-1792   	; 0x4cc4 <_ZN3I2C8twi_readEh>
    53c4:	f7 01       	movw	r30, r14
    53c6:	80 83       	st	Z, r24
	i2c.twi_write(LSM303D_SA1_Write);
	i2c.twi_write(OUT_X_L_A|(1<<7));
	i2c.twi_start();
	i2c.twi_write(LSM303D_SA1_READ);
	
	for(uint8_t i=0; i<6;i++){
    53c8:	1f 5f       	subi	r17, 0xFF	; 255
    53ca:	ff ef       	ldi	r31, 0xFF	; 255
    53cc:	ef 1a       	sub	r14, r31
    53ce:	ff 0a       	sbc	r15, r31
    53d0:	16 30       	cpi	r17, 0x06	; 6
    53d2:	69 f7       	brne	.-38     	; 0x53ae <_ZN7LSM303D7readaccEv+0x52>
		{
			input[i]=i2c.twi_read(0);
		}
		
	}
	i2c.twi_stop();
    53d4:	c6 01       	movw	r24, r12
    53d6:	62 dc       	rcall	.-1852   	; 0x4c9c <_ZN3I2C8twi_stopEv>
	achsen_A[2] =(int16_t) (input[1]<<8 | input[0]);
    53d8:	6a 81       	ldd	r22, Y+2	; 0x02
    53da:	70 e0       	ldi	r23, 0x00	; 0
    53dc:	76 2f       	mov	r23, r22
    53de:	66 27       	eor	r22, r22
    53e0:	89 81       	ldd	r24, Y+1	; 0x01
    53e2:	68 2b       	or	r22, r24
    53e4:	f5 01       	movw	r30, r10
    53e6:	75 83       	std	Z+5, r23	; 0x05
    53e8:	64 83       	std	Z+4, r22	; 0x04
	achsen_A[0] =(int16_t) (input[3]<<8 | input[2]);
    53ea:	8c 81       	ldd	r24, Y+4	; 0x04
    53ec:	90 e0       	ldi	r25, 0x00	; 0
    53ee:	98 2f       	mov	r25, r24
    53f0:	88 27       	eor	r24, r24
    53f2:	2b 81       	ldd	r18, Y+3	; 0x03
    53f4:	7c 01       	movw	r14, r24
    53f6:	e2 2a       	or	r14, r18
    53f8:	f1 82       	std	Z+1, r15	; 0x01
    53fa:	e0 82       	st	Z, r14
	achsen_A[1] =(int16_t) (input[5]<<8 | input[4]);
    53fc:	2e 81       	ldd	r18, Y+6	; 0x06
    53fe:	30 e0       	ldi	r19, 0x00	; 0
    5400:	32 2f       	mov	r19, r18
    5402:	22 27       	eor	r18, r18
    5404:	8d 81       	ldd	r24, Y+5	; 0x05
    5406:	69 01       	movw	r12, r18
    5408:	c8 2a       	or	r12, r24
    540a:	d3 82       	std	Z+3, r13	; 0x03
    540c:	c2 82       	std	Z+2, r12	; 0x02
	pitch=atan2(achsen_A[2],achsen_A[1])-M_PI_2;
    540e:	07 2e       	mov	r0, r23
    5410:	00 0c       	add	r0, r0
    5412:	88 0b       	sbc	r24, r24
    5414:	99 0b       	sbc	r25, r25
    5416:	cd d7       	rcall	.+3994   	; 0x63b2 <__floatsisf>
    5418:	2b 01       	movw	r4, r22
    541a:	3c 01       	movw	r6, r24
    541c:	b6 01       	movw	r22, r12
    541e:	dd 0c       	add	r13, r13
    5420:	88 0b       	sbc	r24, r24
    5422:	99 0b       	sbc	r25, r25
    5424:	c6 d7       	rcall	.+3980   	; 0x63b2 <__floatsisf>
    5426:	9b 01       	movw	r18, r22
    5428:	ac 01       	movw	r20, r24
    542a:	c3 01       	movw	r24, r6
    542c:	b2 01       	movw	r22, r4
    542e:	cc d6       	rcall	.+3480   	; 0x61c8 <atan2>
    5430:	2b ed       	ldi	r18, 0xDB	; 219
    5432:	3f e0       	ldi	r19, 0x0F	; 15
    5434:	49 ec       	ldi	r20, 0xC9	; 201
    5436:	5f e3       	ldi	r21, 0x3F	; 63
    5438:	53 d6       	rcall	.+3238   	; 0x60e0 <__subsf3>
    543a:	f5 01       	movw	r30, r10
    543c:	64 87       	std	Z+12, r22	; 0x0c
    543e:	75 87       	std	Z+13, r23	; 0x0d
    5440:	86 87       	std	Z+14, r24	; 0x0e
    5442:	97 87       	std	Z+15, r25	; 0x0f
	roll=atan2(achsen_A[2],achsen_A[0])-M_PI_2;
    5444:	b7 01       	movw	r22, r14
    5446:	ff 0c       	add	r15, r15
    5448:	88 0b       	sbc	r24, r24
    544a:	99 0b       	sbc	r25, r25
    544c:	b2 d7       	rcall	.+3940   	; 0x63b2 <__floatsisf>
    544e:	9b 01       	movw	r18, r22
    5450:	ac 01       	movw	r20, r24
    5452:	c3 01       	movw	r24, r6
    5454:	b2 01       	movw	r22, r4
    5456:	b8 d6       	rcall	.+3440   	; 0x61c8 <atan2>
    5458:	2b ed       	ldi	r18, 0xDB	; 219
    545a:	3f e0       	ldi	r19, 0x0F	; 15
    545c:	49 ec       	ldi	r20, 0xC9	; 201
    545e:	5f e3       	ldi	r21, 0x3F	; 63
    5460:	3f d6       	rcall	.+3198   	; 0x60e0 <__subsf3>
    5462:	f5 01       	movw	r30, r10
    5464:	60 87       	std	Z+8, r22	; 0x08
    5466:	71 87       	std	Z+9, r23	; 0x09
    5468:	82 87       	std	Z+10, r24	; 0x0a
    546a:	93 87       	std	Z+11, r25	; 0x0b
	sei();
    546c:	78 94       	sei
}
    546e:	26 96       	adiw	r28, 0x06	; 6
    5470:	0f b6       	in	r0, 0x3f	; 63
    5472:	f8 94       	cli
    5474:	de bf       	out	0x3e, r29	; 62
    5476:	0f be       	out	0x3f, r0	; 63
    5478:	cd bf       	out	0x3d, r28	; 61
    547a:	df 91       	pop	r29
    547c:	cf 91       	pop	r28
    547e:	1f 91       	pop	r17
    5480:	ff 90       	pop	r15
    5482:	ef 90       	pop	r14
    5484:	df 90       	pop	r13
    5486:	cf 90       	pop	r12
    5488:	bf 90       	pop	r11
    548a:	af 90       	pop	r10
    548c:	7f 90       	pop	r7
    548e:	6f 90       	pop	r6
    5490:	5f 90       	pop	r5
    5492:	4f 90       	pop	r4
    5494:	08 95       	ret

00005496 <_ZN7LSM303D12readacc_fastEv>:

void LSM303D::readacc_fast(){
    5496:	af 92       	push	r10
    5498:	bf 92       	push	r11
    549a:	cf 92       	push	r12
    549c:	df 92       	push	r13
    549e:	ef 92       	push	r14
    54a0:	ff 92       	push	r15
    54a2:	1f 93       	push	r17
    54a4:	cf 93       	push	r28
    54a6:	df 93       	push	r29
    54a8:	00 d0       	rcall	.+0      	; 0x54aa <_ZN7LSM303D12readacc_fastEv+0x14>
    54aa:	00 d0       	rcall	.+0      	; 0x54ac <_ZN7LSM303D12readacc_fastEv+0x16>
    54ac:	00 d0       	rcall	.+0      	; 0x54ae <_ZN7LSM303D12readacc_fastEv+0x18>
    54ae:	cd b7       	in	r28, 0x3d	; 61
    54b0:	de b7       	in	r29, 0x3e	; 62
    54b2:	5c 01       	movw	r10, r24
	uint8_t input[6];
	i2c.twi_start();
    54b4:	6c 01       	movw	r12, r24
    54b6:	86 e1       	ldi	r24, 0x16	; 22
    54b8:	c8 0e       	add	r12, r24
    54ba:	d1 1c       	adc	r13, r1
    54bc:	c6 01       	movw	r24, r12
    54be:	ea db       	rcall	.-2092   	; 0x4c94 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_Write);
    54c0:	6a e3       	ldi	r22, 0x3A	; 58
    54c2:	c6 01       	movw	r24, r12
    54c4:	ef db       	rcall	.-2082   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(OUT_X_L_A|(1<<7));
    54c6:	68 ea       	ldi	r22, 0xA8	; 168
    54c8:	c6 01       	movw	r24, r12
    54ca:	ec db       	rcall	.-2088   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    54cc:	c6 01       	movw	r24, r12
    54ce:	e2 db       	rcall	.-2108   	; 0x4c94 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_READ);
    54d0:	6b e3       	ldi	r22, 0x3B	; 59
    54d2:	c6 01       	movw	r24, r12
    54d4:	e7 db       	rcall	.-2098   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
    54d6:	fe 01       	movw	r30, r28
    54d8:	31 96       	adiw	r30, 0x01	; 1
    54da:	7f 01       	movw	r14, r30
	
	for(uint8_t i=0; i<6;i++){
    54dc:	10 e0       	ldi	r17, 0x00	; 0
		if (i<5)
    54de:	15 30       	cpi	r17, 0x05	; 5
    54e0:	30 f4       	brcc	.+12     	; 0x54ee <_ZN7LSM303D12readacc_fastEv+0x58>
		{
			input[i]=i2c.twi_read(1);
    54e2:	61 e0       	ldi	r22, 0x01	; 1
    54e4:	c6 01       	movw	r24, r12
    54e6:	ee db       	rcall	.-2084   	; 0x4cc4 <_ZN3I2C8twi_readEh>
    54e8:	f7 01       	movw	r30, r14
    54ea:	80 83       	st	Z, r24
    54ec:	05 c0       	rjmp	.+10     	; 0x54f8 <_ZN7LSM303D12readacc_fastEv+0x62>
		}
		else
		{
			input[i]=i2c.twi_read(0);
    54ee:	60 e0       	ldi	r22, 0x00	; 0
    54f0:	c6 01       	movw	r24, r12
    54f2:	e8 db       	rcall	.-2096   	; 0x4cc4 <_ZN3I2C8twi_readEh>
    54f4:	f7 01       	movw	r30, r14
    54f6:	80 83       	st	Z, r24
	i2c.twi_write(LSM303D_SA1_Write);
	i2c.twi_write(OUT_X_L_A|(1<<7));
	i2c.twi_start();
	i2c.twi_write(LSM303D_SA1_READ);
	
	for(uint8_t i=0; i<6;i++){
    54f8:	1f 5f       	subi	r17, 0xFF	; 255
    54fa:	ff ef       	ldi	r31, 0xFF	; 255
    54fc:	ef 1a       	sub	r14, r31
    54fe:	ff 0a       	sbc	r15, r31
    5500:	16 30       	cpi	r17, 0x06	; 6
    5502:	69 f7       	brne	.-38     	; 0x54de <_ZN7LSM303D12readacc_fastEv+0x48>
		else
		{
			input[i]=i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    5504:	c6 01       	movw	r24, r12
    5506:	ca db       	rcall	.-2156   	; 0x4c9c <_ZN3I2C8twi_stopEv>
	
	achsen_A[2] =(int16_t) (input[1]<<8 | input[0]);
    5508:	8a 81       	ldd	r24, Y+2	; 0x02
    550a:	90 e0       	ldi	r25, 0x00	; 0
    550c:	98 2f       	mov	r25, r24
    550e:	88 27       	eor	r24, r24
    5510:	29 81       	ldd	r18, Y+1	; 0x01
    5512:	82 2b       	or	r24, r18
    5514:	f5 01       	movw	r30, r10
    5516:	95 83       	std	Z+5, r25	; 0x05
    5518:	84 83       	std	Z+4, r24	; 0x04
	achsen_A[0] =(int16_t) (input[3]<<8 | input[2]);
    551a:	8c 81       	ldd	r24, Y+4	; 0x04
    551c:	90 e0       	ldi	r25, 0x00	; 0
    551e:	98 2f       	mov	r25, r24
    5520:	88 27       	eor	r24, r24
    5522:	2b 81       	ldd	r18, Y+3	; 0x03
    5524:	82 2b       	or	r24, r18
    5526:	91 83       	std	Z+1, r25	; 0x01
    5528:	80 83       	st	Z, r24
	achsen_A[1] =(int16_t) (input[5]<<8 | input[4]);
    552a:	2e 81       	ldd	r18, Y+6	; 0x06
    552c:	30 e0       	ldi	r19, 0x00	; 0
    552e:	32 2f       	mov	r19, r18
    5530:	22 27       	eor	r18, r18
    5532:	8d 81       	ldd	r24, Y+5	; 0x05
    5534:	28 2b       	or	r18, r24
    5536:	33 83       	std	Z+3, r19	; 0x03
    5538:	22 83       	std	Z+2, r18	; 0x02
}
    553a:	26 96       	adiw	r28, 0x06	; 6
    553c:	0f b6       	in	r0, 0x3f	; 63
    553e:	f8 94       	cli
    5540:	de bf       	out	0x3e, r29	; 62
    5542:	0f be       	out	0x3f, r0	; 63
    5544:	cd bf       	out	0x3d, r28	; 61
    5546:	df 91       	pop	r29
    5548:	cf 91       	pop	r28
    554a:	1f 91       	pop	r17
    554c:	ff 90       	pop	r15
    554e:	ef 90       	pop	r14
    5550:	df 90       	pop	r13
    5552:	cf 90       	pop	r12
    5554:	bf 90       	pop	r11
    5556:	af 90       	pop	r10
    5558:	08 95       	ret

0000555a <_ZN7LSM303D11readtemperaEv>:

void LSM303D::readtempera(){
    555a:	af 92       	push	r10
    555c:	bf 92       	push	r11
    555e:	cf 92       	push	r12
    5560:	df 92       	push	r13
    5562:	ef 92       	push	r14
    5564:	ff 92       	push	r15
    5566:	1f 93       	push	r17
    5568:	cf 93       	push	r28
    556a:	df 93       	push	r29
    556c:	00 d0       	rcall	.+0      	; 0x556e <_ZN7LSM303D11readtemperaEv+0x14>
    556e:	cd b7       	in	r28, 0x3d	; 61
    5570:	de b7       	in	r29, 0x3e	; 62
    5572:	6c 01       	movw	r12, r24
	cli();
    5574:	f8 94       	cli
	uint8_t Wert[2];
	i2c.twi_start();
    5576:	7c 01       	movw	r14, r24
    5578:	86 e1       	ldi	r24, 0x16	; 22
    557a:	e8 0e       	add	r14, r24
    557c:	f1 1c       	adc	r15, r1
    557e:	c7 01       	movw	r24, r14
    5580:	89 db       	rcall	.-2286   	; 0x4c94 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_Write);
    5582:	6a e3       	ldi	r22, 0x3A	; 58
    5584:	c7 01       	movw	r24, r14
    5586:	8e db       	rcall	.-2276   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(TEMP_OUT_L_A|(1<<7));
    5588:	65 e8       	ldi	r22, 0x85	; 133
    558a:	c7 01       	movw	r24, r14
    558c:	8b db       	rcall	.-2282   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    558e:	c7 01       	movw	r24, r14
    5590:	81 db       	rcall	.-2302   	; 0x4c94 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_READ);
    5592:	6b e3       	ldi	r22, 0x3B	; 59
    5594:	c7 01       	movw	r24, r14
    5596:	86 db       	rcall	.-2292   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
    5598:	fe 01       	movw	r30, r28
    559a:	31 96       	adiw	r30, 0x01	; 1
    559c:	5f 01       	movw	r10, r30
    559e:	11 e0       	ldi	r17, 0x01	; 1
    55a0:	04 c0       	rjmp	.+8      	; 0x55aa <_ZN7LSM303D11readtemperaEv+0x50>
    55a2:	1f 5f       	subi	r17, 0xFF	; 255
    55a4:	ff ef       	ldi	r31, 0xFF	; 255
    55a6:	af 1a       	sub	r10, r31
    55a8:	bf 0a       	sbc	r11, r31
	for (uint8_t i=0;i<2;i++)
	{
		if (i<1)
    55aa:	11 30       	cpi	r17, 0x01	; 1
    55ac:	29 f4       	brne	.+10     	; 0x55b8 <_ZN7LSM303D11readtemperaEv+0x5e>
		{
			Wert[i] = i2c.twi_read(1);
    55ae:	61 e0       	ldi	r22, 0x01	; 1
    55b0:	c7 01       	movw	r24, r14
    55b2:	88 db       	rcall	.-2288   	; 0x4cc4 <_ZN3I2C8twi_readEh>
    55b4:	89 83       	std	Y+1, r24	; 0x01
    55b6:	f5 cf       	rjmp	.-22     	; 0x55a2 <_ZN7LSM303D11readtemperaEv+0x48>
		}
		else{
			Wert[i] = i2c.twi_read(0);
    55b8:	60 e0       	ldi	r22, 0x00	; 0
    55ba:	c7 01       	movw	r24, r14
    55bc:	83 db       	rcall	.-2298   	; 0x4cc4 <_ZN3I2C8twi_readEh>
    55be:	f5 01       	movw	r30, r10
    55c0:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LSM303D_SA1_Write);
	i2c.twi_write(TEMP_OUT_L_A|(1<<7));
	i2c.twi_start();
	i2c.twi_write(LSM303D_SA1_READ);
	for (uint8_t i=0;i<2;i++)
    55c2:	12 30       	cpi	r17, 0x02	; 2
    55c4:	70 f3       	brcs	.-36     	; 0x55a2 <_ZN7LSM303D11readtemperaEv+0x48>
		}
		else{
			Wert[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    55c6:	c7 01       	movw	r24, r14
    55c8:	69 db       	rcall	.-2350   	; 0x4c9c <_ZN3I2C8twi_stopEv>
	Tempera = (int16_t) (Wert[0]|(Wert[1]<<8));
    55ca:	2a 81       	ldd	r18, Y+2	; 0x02
    55cc:	30 e0       	ldi	r19, 0x00	; 0
    55ce:	32 2f       	mov	r19, r18
    55d0:	22 27       	eor	r18, r18
    55d2:	89 81       	ldd	r24, Y+1	; 0x01
    55d4:	28 2b       	or	r18, r24
	Tempera *= -1;
    55d6:	31 95       	neg	r19
    55d8:	21 95       	neg	r18
    55da:	31 09       	sbc	r19, r1
    55dc:	f6 01       	movw	r30, r12
    55de:	37 83       	std	Z+7, r19	; 0x07
    55e0:	26 83       	std	Z+6, r18	; 0x06
	sei();
    55e2:	78 94       	sei
}
    55e4:	0f 90       	pop	r0
    55e6:	0f 90       	pop	r0
    55e8:	df 91       	pop	r29
    55ea:	cf 91       	pop	r28
    55ec:	1f 91       	pop	r17
    55ee:	ff 90       	pop	r15
    55f0:	ef 90       	pop	r14
    55f2:	df 90       	pop	r13
    55f4:	cf 90       	pop	r12
    55f6:	bf 90       	pop	r11
    55f8:	af 90       	pop	r10
    55fa:	08 95       	ret

000055fc <_ZN7LSM303D14LSM303_commandEhh>:

void LSM303D::LSM303_command(uint8_t reg, uint8_t c){
    55fc:	0f 93       	push	r16
    55fe:	1f 93       	push	r17
    5600:	cf 93       	push	r28
    5602:	df 93       	push	r29
    5604:	06 2f       	mov	r16, r22
    5606:	14 2f       	mov	r17, r20
	i2c.twi_start();
    5608:	ec 01       	movw	r28, r24
    560a:	66 96       	adiw	r28, 0x16	; 22
    560c:	ce 01       	movw	r24, r28
    560e:	42 db       	rcall	.-2428   	; 0x4c94 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_Write);
    5610:	6a e3       	ldi	r22, 0x3A	; 58
    5612:	ce 01       	movw	r24, r28
    5614:	47 db       	rcall	.-2418   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(reg);
    5616:	60 2f       	mov	r22, r16
    5618:	ce 01       	movw	r24, r28
    561a:	44 db       	rcall	.-2424   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(c);
    561c:	61 2f       	mov	r22, r17
    561e:	ce 01       	movw	r24, r28
    5620:	41 db       	rcall	.-2430   	; 0x4ca4 <_ZN3I2C9twi_writeEh>
	i2c.twi_stop();
    5622:	ce 01       	movw	r24, r28
    5624:	3b db       	rcall	.-2442   	; 0x4c9c <_ZN3I2C8twi_stopEv>
}
    5626:	df 91       	pop	r29
    5628:	cf 91       	pop	r28
    562a:	1f 91       	pop	r17
    562c:	0f 91       	pop	r16
    562e:	08 95       	ret

00005630 <_ZN7LSM303D13ACCStreammodeEv>:
	//FIFO Bypass Mode
	ACCBypassmode();
}

void LSM303D::ACCStreammode(){
	LSM303_command(FIFO_CTRL,(1<<FM1));
    5630:	40 e4       	ldi	r20, 0x40	; 64
    5632:	6e e2       	ldi	r22, 0x2E	; 46
    5634:	e3 cf       	rjmp	.-58     	; 0x55fc <_ZN7LSM303D14LSM303_commandEhh>
    5636:	08 95       	ret

00005638 <_ZN7LSM303D13ACCBypassmodeEv>:
}

void LSM303D::ACCBypassmode(){
	LSM303_command(FIFO_CTRL,0x00);
    5638:	40 e0       	ldi	r20, 0x00	; 0
    563a:	6e e2       	ldi	r22, 0x2E	; 46
    563c:	df cf       	rjmp	.-66     	; 0x55fc <_ZN7LSM303D14LSM303_commandEhh>
    563e:	08 95       	ret

00005640 <_ZN7LSM303D9acce_initEv>:
// default destructor
LSM303D::~LSM303D()
{
} //~LSM303D

void LSM303D::acce_init(){
    5640:	cf 93       	push	r28
    5642:	df 93       	push	r29
    5644:	ec 01       	movw	r28, r24
	//ACC Activ und 25Hz ohne Block dataread
	LSM303_command(CTRL1,(1<<AXEN)|(1<<AYEN)|(1<<AZEN)|(1<<AODR2));
    5646:	47 e4       	ldi	r20, 0x47	; 71
    5648:	60 e2       	ldi	r22, 0x20	; 32
    564a:	d8 df       	rcall	.-80     	; 0x55fc <_ZN7LSM303D14LSM303_commandEhh>
	
	//ACC fuer +-2g
	LSM303_command(CTRL2,0x00);
    564c:	40 e0       	ldi	r20, 0x00	; 0
    564e:	61 e2       	ldi	r22, 0x21	; 33
    5650:	ce 01       	movw	r24, r28
    5652:	d4 df       	rcall	.-88     	; 0x55fc <_ZN7LSM303D14LSM303_commandEhh>
	
	//Temperatursensor an
	LSM303_command(CTRL5,(1<<TEMP_EN));
    5654:	40 e8       	ldi	r20, 0x80	; 128
    5656:	64 e2       	ldi	r22, 0x24	; 36
    5658:	ce 01       	movw	r24, r28
    565a:	d0 df       	rcall	.-96     	; 0x55fc <_ZN7LSM303D14LSM303_commandEhh>
	
	//FIFO Bypass Mode
	ACCBypassmode();
    565c:	ce 01       	movw	r24, r28
    565e:	ec df       	rcall	.-40     	; 0x5638 <_ZN7LSM303D13ACCBypassmodeEv>
}
    5660:	df 91       	pop	r29
    5662:	cf 91       	pop	r28
    5664:	08 95       	ret

00005666 <_ZN7LSM303DC1Ev>:


#include "LSM303D.h"

// default constructor
LSM303D::LSM303D()
    5666:	cf 93       	push	r28
    5668:	df 93       	push	r29
    566a:	ec 01       	movw	r28, r24
    566c:	46 96       	adiw	r24, 0x16	; 22
    566e:	0d db       	rcall	.-2534   	; 0x4c8a <_ZN3I2CC1Ev>
{
	//Variablen initialisieren
	Tempera=0;
    5670:	1f 82       	std	Y+7, r1	; 0x07
    5672:	1e 82       	std	Y+6, r1	; 0x06
	roll=0.0;
    5674:	18 86       	std	Y+8, r1	; 0x08
    5676:	19 86       	std	Y+9, r1	; 0x09
    5678:	1a 86       	std	Y+10, r1	; 0x0a
    567a:	1b 86       	std	Y+11, r1	; 0x0b
	pitch=0.0;
    567c:	1c 86       	std	Y+12, r1	; 0x0c
    567e:	1d 86       	std	Y+13, r1	; 0x0d
    5680:	1e 86       	std	Y+14, r1	; 0x0e
    5682:	1f 86       	std	Y+15, r1	; 0x0f
	Schrittzaehler=0;
    5684:	19 8a       	std	Y+17, r1	; 0x11
    5686:	18 8a       	std	Y+16, r1	; 0x10
	gravity=0;
    5688:	1a 8a       	std	Y+18, r1	; 0x12
    568a:	1b 8a       	std	Y+19, r1	; 0x13
    568c:	1c 8a       	std	Y+20, r1	; 0x14
    568e:	1d 8a       	std	Y+21, r1	; 0x15
	higher=0;
    5690:	de 01       	movw	r26, r28
    5692:	a1 52       	subi	r26, 0x21	; 33
    5694:	bf 4f       	sbci	r27, 0xFF	; 255
    5696:	1d 92       	st	X+, r1
    5698:	1d 92       	st	X+, r1
    569a:	1d 92       	st	X+, r1
    569c:	1c 92       	st	X, r1
    569e:	13 97       	sbiw	r26, 0x03	; 3
	lower=0;
    56a0:	fe 01       	movw	r30, r28
    56a2:	ed 51       	subi	r30, 0x1D	; 29
    56a4:	ff 4f       	sbci	r31, 0xFF	; 255
    56a6:	10 82       	st	Z, r1
    56a8:	11 82       	std	Z+1, r1	; 0x01
    56aa:	12 82       	std	Z+2, r1	; 0x02
    56ac:	13 82       	std	Z+3, r1	; 0x03
	threschold=27;	//aus Erfahrung
    56ae:	34 96       	adiw	r30, 0x04	; 4
    56b0:	8b e1       	ldi	r24, 0x1B	; 27
    56b2:	90 e0       	ldi	r25, 0x00	; 0
    56b4:	91 83       	std	Z+1, r25	; 0x01
    56b6:	80 83       	st	Z, r24
	for (uint8_t i=0;i<3;i++)
	{
		achsen_A[i]=0;
    56b8:	19 82       	std	Y+1, r1	; 0x01
    56ba:	18 82       	st	Y, r1
    56bc:	1b 82       	std	Y+3, r1	; 0x03
    56be:	1a 82       	std	Y+2, r1	; 0x02
    56c0:	1d 82       	std	Y+5, r1	; 0x05
    56c2:	1c 82       	std	Y+4, r1	; 0x04
    56c4:	e0 5d       	subi	r30, 0xD0	; 208
    56c6:	f1 09       	sbc	r31, r1
    56c8:	9d 01       	movw	r18, r26
	}
	for (uint8_t i=0;i<50;i++)
	{
		Daten[i]=0;
    56ca:	11 92       	st	Z+, r1
    56cc:	11 92       	st	Z+, r1
    56ce:	11 92       	st	Z+, r1
    56d0:	11 92       	st	Z+, r1
	threschold=27;	//aus Erfahrung
	for (uint8_t i=0;i<3;i++)
	{
		achsen_A[i]=0;
	}
	for (uint8_t i=0;i<50;i++)
    56d2:	e2 17       	cp	r30, r18
    56d4:	f3 07       	cpc	r31, r19
    56d6:	c9 f7       	brne	.-14     	; 0x56ca <_ZN7LSM303DC1Ev+0x64>
	{
		Daten[i]=0;
	}
	
	//ACC init
	acce_init();
    56d8:	ce 01       	movw	r24, r28
    56da:	b2 df       	rcall	.-156    	; 0x5640 <_ZN7LSM303D9acce_initEv>
} //LSM303D
    56dc:	df 91       	pop	r29
    56de:	cf 91       	pop	r28
    56e0:	08 95       	ret

000056e2 <_ZN7LSM303D11get_gravityEv>:
	i2c.twi_write(reg);
	i2c.twi_write(c);
	i2c.twi_stop();
}

void LSM303D::get_gravity(){
    56e2:	8f 92       	push	r8
    56e4:	9f 92       	push	r9
    56e6:	af 92       	push	r10
    56e8:	bf 92       	push	r11
    56ea:	cf 92       	push	r12
    56ec:	df 92       	push	r13
    56ee:	ef 92       	push	r14
    56f0:	ff 92       	push	r15
    56f2:	1f 93       	push	r17
    56f4:	cf 93       	push	r28
    56f6:	df 93       	push	r29
    56f8:	ec 01       	movw	r28, r24
	uint32_t temp=0;
	uint32_t temp2[4];
	cli();
    56fa:	f8 94       	cli
    56fc:	19 e1       	ldi	r17, 0x19	; 25
	i2c.twi_write(c);
	i2c.twi_stop();
}

void LSM303D::get_gravity(){
	uint32_t temp=0;
    56fe:	81 2c       	mov	r8, r1
    5700:	91 2c       	mov	r9, r1
    5702:	54 01       	movw	r10, r8
	uint32_t temp2[4];
	cli();
	for (uint8_t i=0;i<25;i++)
	{
		readacc_fast();
    5704:	ce 01       	movw	r24, r28
    5706:	c7 de       	rcall	.-626    	; 0x5496 <_ZN7LSM303D12readacc_fastEv>
		//readacc();
		temp2[0] = achsen_A[2];
    5708:	ec 81       	ldd	r30, Y+4	; 0x04
    570a:	fd 81       	ldd	r31, Y+5	; 0x05
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
    570c:	a8 81       	ld	r26, Y
    570e:	b9 81       	ldd	r27, Y+1	; 0x01
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
    5710:	4a 81       	ldd	r20, Y+2	; 0x02
    5712:	5b 81       	ldd	r21, Y+3	; 0x03
		readacc_fast();
		//readacc();
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
    5714:	9d 01       	movw	r18, r26
    5716:	0e 94 c0 37 	call	0x6f80	; 0x6f80 <__mulhisi3>
    571a:	6b 01       	movw	r12, r22
    571c:	7c 01       	movw	r14, r24
	for (uint8_t i=0;i<25;i++)
	{
		readacc_fast();
		//readacc();
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
    571e:	9f 01       	movw	r18, r30
    5720:	df 01       	movw	r26, r30
    5722:	0e 94 c0 37 	call	0x6f80	; 0x6f80 <__mulhisi3>
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
		temp2[3] = temp2[0]+temp2[1]+temp2[2];
    5726:	c6 0e       	add	r12, r22
    5728:	d7 1e       	adc	r13, r23
    572a:	e8 1e       	adc	r14, r24
    572c:	f9 1e       	adc	r15, r25
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
    572e:	9a 01       	movw	r18, r20
    5730:	da 01       	movw	r26, r20
    5732:	0e 94 c0 37 	call	0x6f80	; 0x6f80 <__mulhisi3>
		temp2[3] = temp2[0]+temp2[1]+temp2[2];
    5736:	c6 0e       	add	r12, r22
    5738:	d7 1e       	adc	r13, r23
    573a:	e8 1e       	adc	r14, r24
    573c:	f9 1e       	adc	r15, r25
		temp +=sqrt(temp2[3]);
    573e:	c7 01       	movw	r24, r14
    5740:	b6 01       	movw	r22, r12
    5742:	35 d6       	rcall	.+3178   	; 0x63ae <__floatunsisf>
    5744:	bc d7       	rcall	.+3960   	; 0x66be <sqrt>
    5746:	6b 01       	movw	r12, r22
    5748:	7c 01       	movw	r14, r24
    574a:	c5 01       	movw	r24, r10
    574c:	b4 01       	movw	r22, r8
    574e:	2f d6       	rcall	.+3166   	; 0x63ae <__floatunsisf>
    5750:	a7 01       	movw	r20, r14
    5752:	96 01       	movw	r18, r12
    5754:	c6 d4       	rcall	.+2444   	; 0x60e2 <__addsf3>
    5756:	ff d5       	rcall	.+3070   	; 0x6356 <__fixunssfsi>
    5758:	4b 01       	movw	r8, r22
    575a:	5c 01       	movw	r10, r24
    575c:	11 50       	subi	r17, 0x01	; 1

void LSM303D::get_gravity(){
	uint32_t temp=0;
	uint32_t temp2[4];
	cli();
	for (uint8_t i=0;i<25;i++)
    575e:	91 f6       	brne	.-92     	; 0x5704 <_ZN7LSM303D11get_gravityEv+0x22>
		temp2[2]*= temp2[2];
		temp2[3] = temp2[0]+temp2[1]+temp2[2];
		temp +=sqrt(temp2[3]);
	}
	//readacc_fast();
	sei();
    5760:	78 94       	sei
	temp/=25;
    5762:	29 e1       	ldi	r18, 0x19	; 25
    5764:	30 e0       	ldi	r19, 0x00	; 0
    5766:	40 e0       	ldi	r20, 0x00	; 0
    5768:	50 e0       	ldi	r21, 0x00	; 0
    576a:	0e 94 95 37 	call	0x6f2a	; 0x6f2a <__udivmodsi4>
	gravity=(gravity+temp)/2;
    576e:	8a 89       	ldd	r24, Y+18	; 0x12
    5770:	9b 89       	ldd	r25, Y+19	; 0x13
    5772:	ac 89       	ldd	r26, Y+20	; 0x14
    5774:	bd 89       	ldd	r27, Y+21	; 0x15
    5776:	82 0f       	add	r24, r18
    5778:	93 1f       	adc	r25, r19
    577a:	a4 1f       	adc	r26, r20
    577c:	b5 1f       	adc	r27, r21
    577e:	b6 95       	lsr	r27
    5780:	a7 95       	ror	r26
    5782:	97 95       	ror	r25
    5784:	87 95       	ror	r24
    5786:	8a 8b       	std	Y+18, r24	; 0x12
    5788:	9b 8b       	std	Y+19, r25	; 0x13
    578a:	ac 8b       	std	Y+20, r26	; 0x14
    578c:	bd 8b       	std	Y+21, r27	; 0x15
}
    578e:	df 91       	pop	r29
    5790:	cf 91       	pop	r28
    5792:	1f 91       	pop	r17
    5794:	ff 90       	pop	r15
    5796:	ef 90       	pop	r14
    5798:	df 90       	pop	r13
    579a:	cf 90       	pop	r12
    579c:	bf 90       	pop	r11
    579e:	af 90       	pop	r10
    57a0:	9f 90       	pop	r9
    57a2:	8f 90       	pop	r8
    57a4:	08 95       	ret

000057a6 <_ZN7LSM303D7schrittEh>:

void LSM303D::schritt(uint8_t stat){
    57a6:	2f 92       	push	r2
    57a8:	3f 92       	push	r3
    57aa:	4f 92       	push	r4
    57ac:	5f 92       	push	r5
    57ae:	6f 92       	push	r6
    57b0:	7f 92       	push	r7
    57b2:	8f 92       	push	r8
    57b4:	9f 92       	push	r9
    57b6:	af 92       	push	r10
    57b8:	bf 92       	push	r11
    57ba:	cf 92       	push	r12
    57bc:	df 92       	push	r13
    57be:	ef 92       	push	r14
    57c0:	ff 92       	push	r15
    57c2:	0f 93       	push	r16
    57c4:	1f 93       	push	r17
    57c6:	cf 93       	push	r28
    57c8:	df 93       	push	r29
    57ca:	cd b7       	in	r28, 0x3d	; 61
    57cc:	de b7       	in	r29, 0x3e	; 62
    57ce:	29 97       	sbiw	r28, 0x09	; 9
    57d0:	0f b6       	in	r0, 0x3f	; 63
    57d2:	f8 94       	cli
    57d4:	de bf       	out	0x3e, r29	; 62
    57d6:	0f be       	out	0x3f, r0	; 63
    57d8:	cd bf       	out	0x3d, r28	; 61
    57da:	8c 01       	movw	r16, r24
    57dc:	96 2e       	mov	r9, r22
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
		Daten[i+stat*25] = sqrt(temp2[0]+temp2[1]+temp2[2]);
    57de:	89 e1       	ldi	r24, 0x19	; 25
    57e0:	68 9f       	mul	r22, r24
    57e2:	50 01       	movw	r10, r0
    57e4:	11 24       	eor	r1, r1
    57e6:	aa 0c       	add	r10, r10
    57e8:	bb 1c       	adc	r11, r11
    57ea:	aa 0c       	add	r10, r10
    57ec:	bb 1c       	adc	r11, r11
    57ee:	75 01       	movw	r14, r10
    57f0:	97 e1       	ldi	r25, 0x17	; 23
    57f2:	e9 0e       	add	r14, r25
    57f4:	f1 1c       	adc	r15, r1
    57f6:	e0 0e       	add	r14, r16
    57f8:	f1 1e       	adc	r15, r17
    57fa:	ab e7       	ldi	r26, 0x7B	; 123
    57fc:	aa 0e       	add	r10, r26
    57fe:	b1 1c       	adc	r11, r1
    5800:	a0 0e       	add	r10, r16
    5802:	b1 1e       	adc	r11, r17
    5804:	c8 01       	movw	r24, r16
    5806:	87 01       	movw	r16, r14
    5808:	3c 01       	movw	r6, r24
	uint8_t zaehler=0;
	uint8_t temp=0;
	uint32_t temp2[3];
	for (uint8_t i=0;i<25;i++)
	{
		readacc_fast();
    580a:	c3 01       	movw	r24, r6
    580c:	44 de       	rcall	.-888    	; 0x5496 <_ZN7LSM303D12readacc_fastEv>
		temp2[0] = achsen_A[2];
    580e:	f3 01       	movw	r30, r6
    5810:	44 80       	ldd	r4, Z+4	; 0x04
    5812:	55 80       	ldd	r5, Z+5	; 0x05
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
    5814:	a0 81       	ld	r26, Z
    5816:	b1 81       	ldd	r27, Z+1	; 0x01
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
    5818:	42 81       	ldd	r20, Z+2	; 0x02
    581a:	53 81       	ldd	r21, Z+3	; 0x03
	{
		readacc_fast();
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
    581c:	9d 01       	movw	r18, r26
    581e:	0e 94 c0 37 	call	0x6f80	; 0x6f80 <__mulhisi3>
    5822:	6b 01       	movw	r12, r22
    5824:	7c 01       	movw	r14, r24
	uint32_t temp2[3];
	for (uint8_t i=0;i<25;i++)
	{
		readacc_fast();
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
    5826:	92 01       	movw	r18, r4
    5828:	d2 01       	movw	r26, r4
    582a:	0e 94 c0 37 	call	0x6f80	; 0x6f80 <__mulhisi3>
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
		Daten[i+stat*25] = sqrt(temp2[0]+temp2[1]+temp2[2]);
    582e:	c6 0e       	add	r12, r22
    5830:	d7 1e       	adc	r13, r23
    5832:	e8 1e       	adc	r14, r24
    5834:	f9 1e       	adc	r15, r25
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
    5836:	9a 01       	movw	r18, r20
    5838:	da 01       	movw	r26, r20
    583a:	0e 94 c0 37 	call	0x6f80	; 0x6f80 <__mulhisi3>
		Daten[i+stat*25] = sqrt(temp2[0]+temp2[1]+temp2[2]);
    583e:	c6 0e       	add	r12, r22
    5840:	d7 1e       	adc	r13, r23
    5842:	e8 1e       	adc	r14, r24
    5844:	f9 1e       	adc	r15, r25
    5846:	c7 01       	movw	r24, r14
    5848:	b6 01       	movw	r22, r12
    584a:	b1 d5       	rcall	.+2914   	; 0x63ae <__floatunsisf>
    584c:	38 d7       	rcall	.+3696   	; 0x66be <sqrt>
    584e:	83 d5       	rcall	.+2822   	; 0x6356 <__fixunssfsi>
    5850:	d8 01       	movw	r26, r16
    5852:	6d 93       	st	X+, r22
    5854:	7d 93       	st	X+, r23
    5856:	8d 93       	st	X+, r24
    5858:	9d 93       	st	X+, r25
    585a:	8d 01       	movw	r16, r26
	uint8_t counter_L=0;
	uint8_t counter_H=0;
	uint8_t zaehler=0;
	uint8_t temp=0;
	uint32_t temp2[3];
	for (uint8_t i=0;i<25;i++)
    585c:	aa 15       	cp	r26, r10
    585e:	bb 05       	cpc	r27, r11
    5860:	a1 f6       	brne	.-88     	; 0x580a <_ZN7LSM303D7schrittEh+0x64>
    5862:	83 01       	movw	r16, r6
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
		Daten[i+stat*25] = sqrt(temp2[0]+temp2[1]+temp2[2]);
	}
	if (stat)
    5864:	99 20       	and	r9, r9
    5866:	09 f4       	brne	.+2      	; 0x586a <_ZN7LSM303D7schrittEh+0xc4>
    5868:	55 c1       	rjmp	.+682    	; 0x5b14 <_ZN7LSM303D7schrittEh+0x36e>
	{
		//THreshold ausrechnen
		for (uint8_t i=0;i<50;i++)
		{
			if (Daten[i]>=gravity)
    586a:	f3 01       	movw	r30, r6
    586c:	82 88       	ldd	r8, Z+18	; 0x12
    586e:	93 88       	ldd	r9, Z+19	; 0x13
    5870:	a4 88       	ldd	r10, Z+20	; 0x14
    5872:	b5 88       	ldd	r11, Z+21	; 0x15
    5874:	c3 01       	movw	r24, r6
    5876:	47 96       	adiw	r24, 0x17	; 23
    5878:	9b 83       	std	Y+3, r25	; 0x03
    587a:	8a 83       	std	Y+2, r24	; 0x02
    587c:	73 01       	movw	r14, r6
    587e:	9f ed       	ldi	r25, 0xDF	; 223
    5880:	e9 0e       	add	r14, r25
    5882:	f1 1c       	adc	r15, r1
    5884:	ea 81       	ldd	r30, Y+2	; 0x02
    5886:	fb 81       	ldd	r31, Y+3	; 0x03
    5888:	20 e0       	ldi	r18, 0x00	; 0
    588a:	71 2c       	mov	r7, r1
			{
				higher+=Daten[i];
				counter_H++;
			}
			else{
				lower+=Daten[i];
    588c:	b8 01       	movw	r22, r16
    588e:	6d 51       	subi	r22, 0x1D	; 29
    5890:	7f 4f       	sbci	r23, 0xFF	; 255
		//THreshold ausrechnen
		for (uint8_t i=0;i<50;i++)
		{
			if (Daten[i]>=gravity)
			{
				higher+=Daten[i];
    5892:	a7 01       	movw	r20, r14
    5894:	37 2d       	mov	r19, r7
    5896:	6f 01       	movw	r12, r30
    5898:	cb 01       	movw	r24, r22
    589a:	bf 01       	movw	r22, r30
    589c:	1c 01       	movw	r2, r24
	if (stat)
	{
		//THreshold ausrechnen
		for (uint8_t i=0;i<50;i++)
		{
			if (Daten[i]>=gravity)
    589e:	f6 01       	movw	r30, r12
    58a0:	81 91       	ld	r24, Z+
    58a2:	91 91       	ld	r25, Z+
    58a4:	a1 91       	ld	r26, Z+
    58a6:	b1 91       	ld	r27, Z+
    58a8:	6f 01       	movw	r12, r30
    58aa:	88 15       	cp	r24, r8
    58ac:	99 05       	cpc	r25, r9
    58ae:	aa 05       	cpc	r26, r10
    58b0:	bb 05       	cpc	r27, r11
    58b2:	78 f0       	brcs	.+30     	; 0x58d2 <_ZN7LSM303D7schrittEh+0x12c>
			{
				higher+=Daten[i];
    58b4:	fa 01       	movw	r30, r20
    58b6:	40 80       	ld	r4, Z
    58b8:	51 80       	ldd	r5, Z+1	; 0x01
    58ba:	62 80       	ldd	r6, Z+2	; 0x02
    58bc:	73 80       	ldd	r7, Z+3	; 0x03
    58be:	84 0d       	add	r24, r4
    58c0:	95 1d       	adc	r25, r5
    58c2:	a6 1d       	adc	r26, r6
    58c4:	b7 1d       	adc	r27, r7
    58c6:	80 83       	st	Z, r24
    58c8:	91 83       	std	Z+1, r25	; 0x01
    58ca:	a2 83       	std	Z+2, r26	; 0x02
    58cc:	b3 83       	std	Z+3, r27	; 0x03
				counter_H++;
    58ce:	2f 5f       	subi	r18, 0xFF	; 255
    58d0:	0e c0       	rjmp	.+28     	; 0x58ee <_ZN7LSM303D7schrittEh+0x148>
			}
			else{
				lower+=Daten[i];
    58d2:	f1 01       	movw	r30, r2
    58d4:	40 80       	ld	r4, Z
    58d6:	51 80       	ldd	r5, Z+1	; 0x01
    58d8:	62 80       	ldd	r6, Z+2	; 0x02
    58da:	73 80       	ldd	r7, Z+3	; 0x03
    58dc:	84 0d       	add	r24, r4
    58de:	95 1d       	adc	r25, r5
    58e0:	a6 1d       	adc	r26, r6
    58e2:	b7 1d       	adc	r27, r7
    58e4:	80 83       	st	Z, r24
    58e6:	91 83       	std	Z+1, r25	; 0x01
    58e8:	a2 83       	std	Z+2, r26	; 0x02
    58ea:	b3 83       	std	Z+3, r27	; 0x03
				counter_L++;
    58ec:	3f 5f       	subi	r19, 0xFF	; 255
		Daten[i+stat*25] = sqrt(temp2[0]+temp2[1]+temp2[2]);
	}
	if (stat)
	{
		//THreshold ausrechnen
		for (uint8_t i=0;i<50;i++)
    58ee:	ce 14       	cp	r12, r14
    58f0:	df 04       	cpc	r13, r15
    58f2:	a9 f6       	brne	.-86     	; 0x589e <_ZN7LSM303D7schrittEh+0xf8>
    58f4:	73 2e       	mov	r7, r19
    58f6:	7b 83       	std	Y+3, r23	; 0x03
    58f8:	6a 83       	std	Y+2, r22	; 0x02
			else{
				lower+=Daten[i];
				counter_L++;
			}
		}
		higher/=counter_H;
    58fa:	68 01       	movw	r12, r16
    58fc:	ff ed       	ldi	r31, 0xDF	; 223
    58fe:	cf 0e       	add	r12, r31
    5900:	d1 1c       	adc	r13, r1
    5902:	30 e0       	ldi	r19, 0x00	; 0
    5904:	40 e0       	ldi	r20, 0x00	; 0
    5906:	50 e0       	ldi	r21, 0x00	; 0
    5908:	d6 01       	movw	r26, r12
    590a:	6d 91       	ld	r22, X+
    590c:	7d 91       	ld	r23, X+
    590e:	8d 91       	ld	r24, X+
    5910:	9c 91       	ld	r25, X
    5912:	0e 94 95 37 	call	0x6f2a	; 0x6f2a <__udivmodsi4>
    5916:	82 2e       	mov	r8, r18
    5918:	93 2e       	mov	r9, r19
    591a:	a4 2e       	mov	r10, r20
    591c:	b5 2e       	mov	r11, r21
    591e:	f6 01       	movw	r30, r12
    5920:	20 83       	st	Z, r18
    5922:	31 83       	std	Z+1, r19	; 0x01
    5924:	42 83       	std	Z+2, r20	; 0x02
    5926:	53 83       	std	Z+3, r21	; 0x03
		lower/=counter_L;
    5928:	68 01       	movw	r12, r16
    592a:	f3 ee       	ldi	r31, 0xE3	; 227
    592c:	cf 0e       	add	r12, r31
    592e:	d1 1c       	adc	r13, r1
    5930:	27 2d       	mov	r18, r7
    5932:	30 e0       	ldi	r19, 0x00	; 0
    5934:	40 e0       	ldi	r20, 0x00	; 0
    5936:	50 e0       	ldi	r21, 0x00	; 0
    5938:	d6 01       	movw	r26, r12
    593a:	6d 91       	ld	r22, X+
    593c:	7d 91       	ld	r23, X+
    593e:	8d 91       	ld	r24, X+
    5940:	9c 91       	ld	r25, X
    5942:	0e 94 95 37 	call	0x6f2a	; 0x6f2a <__udivmodsi4>
    5946:	42 2e       	mov	r4, r18
    5948:	53 2e       	mov	r5, r19
    594a:	64 2e       	mov	r6, r20
    594c:	75 2e       	mov	r7, r21
    594e:	f6 01       	movw	r30, r12
    5950:	20 83       	st	Z, r18
    5952:	31 83       	std	Z+1, r19	; 0x01
    5954:	42 83       	std	Z+2, r20	; 0x02
    5956:	53 83       	std	Z+3, r21	; 0x03

void LSM303D::schritt(uint8_t stat){
	uint8_t counter_L=0;
	uint8_t counter_H=0;
	uint8_t zaehler=0;
	uint8_t temp=0;
    5958:	30 e0       	ldi	r19, 0x00	; 0
}

void LSM303D::schritt(uint8_t stat){
	uint8_t counter_L=0;
	uint8_t counter_H=0;
	uint8_t zaehler=0;
    595a:	20 e0       	ldi	r18, 0x00	; 0
			else if (temp == 3 && Daten[i]-threschold>lower)
			{
				zaehler++;
				temp = 4;
			}
			else if (temp == 4 && Daten[i]-threschold>higher)
    595c:	34 96       	adiw	r30, 0x04	; 4
			{
				temp = 1;
    595e:	cc 24       	eor	r12, r12
    5960:	c3 94       	inc	r12
				zaehler++;
				temp = 2;
			}
			else if (temp == 2 && Daten[i]+threschold<lower)
			{
				temp = 3;
    5962:	0f 2e       	mov	r0, r31
    5964:	f3 e0       	ldi	r31, 0x03	; 3
    5966:	df 2e       	mov	r13, r31
    5968:	f0 2d       	mov	r31, r0
				
			}
			else if (temp == 1 && Daten[i]+threschold<higher)
			{
				zaehler++;
				temp = 2;
    596a:	68 94       	set
    596c:	22 24       	eor	r2, r2
    596e:	21 f8       	bld	r2, 1
			{
				if (Daten[i]+threschold<lower)
				{
					temp = 3;
				}
				else if (Daten[i]-threschold>higher)
    5970:	31 2c       	mov	r3, r1
    5972:	29 83       	std	Y+1, r18	; 0x01
    5974:	8a 81       	ldd	r24, Y+2	; 0x02
    5976:	9b 81       	ldd	r25, Y+3	; 0x03
    5978:	9d 83       	std	Y+5, r25	; 0x05
    597a:	8c 83       	std	Y+4, r24	; 0x04
    597c:	1b 83       	std	Y+3, r17	; 0x03
    597e:	0a 83       	std	Y+2, r16	; 0x02
		}
		higher/=counter_H;
		lower/=counter_L;
		for (uint8_t i=0;i<50;i++)
		{
			if (temp == 0)
    5980:	31 11       	cpse	r19, r1
    5982:	25 c0       	rjmp	.+74     	; 0x59ce <_ZN7LSM303D7schrittEh+0x228>
			{
				if (Daten[i]+threschold<lower)
    5984:	ac 81       	ldd	r26, Y+4	; 0x04
    5986:	bd 81       	ldd	r27, Y+5	; 0x05
    5988:	4d 91       	ld	r20, X+
    598a:	5d 91       	ld	r21, X+
    598c:	6d 91       	ld	r22, X+
    598e:	7c 91       	ld	r23, X
    5990:	80 81       	ld	r24, Z
    5992:	91 81       	ldd	r25, Z+1	; 0x01
    5994:	09 2e       	mov	r0, r25
    5996:	00 0c       	add	r0, r0
    5998:	aa 0b       	sbc	r26, r26
    599a:	bb 0b       	sbc	r27, r27
    599c:	8a 01       	movw	r16, r20
    599e:	9b 01       	movw	r18, r22
    59a0:	08 0f       	add	r16, r24
    59a2:	19 1f       	adc	r17, r25
    59a4:	2a 1f       	adc	r18, r26
    59a6:	3b 1f       	adc	r19, r27
    59a8:	04 15       	cp	r16, r4
    59aa:	15 05       	cpc	r17, r5
    59ac:	26 05       	cpc	r18, r6
    59ae:	37 05       	cpc	r19, r7
    59b0:	08 f4       	brcc	.+2      	; 0x59b4 <_ZN7LSM303D7schrittEh+0x20e>
    59b2:	8c c0       	rjmp	.+280    	; 0x5acc <_ZN7LSM303D7schrittEh+0x326>
				{
					temp = 3;
				}
				else if (Daten[i]-threschold>higher)
    59b4:	48 1b       	sub	r20, r24
    59b6:	59 0b       	sbc	r21, r25
    59b8:	6a 0b       	sbc	r22, r26
    59ba:	7b 0b       	sbc	r23, r27
    59bc:	3c 2d       	mov	r19, r12
    59be:	84 16       	cp	r8, r20
    59c0:	95 06       	cpc	r9, r21
    59c2:	a6 06       	cpc	r10, r22
    59c4:	b7 06       	cpc	r11, r23
    59c6:	08 f4       	brcc	.+2      	; 0x59ca <_ZN7LSM303D7schrittEh+0x224>
    59c8:	84 c0       	rjmp	.+264    	; 0x5ad2 <_ZN7LSM303D7schrittEh+0x32c>
    59ca:	33 2d       	mov	r19, r3
    59cc:	82 c0       	rjmp	.+260    	; 0x5ad2 <_ZN7LSM303D7schrittEh+0x32c>
				{
					temp = 1;
				}
				
			}
			else if (temp == 1 && Daten[i]+threschold<higher)
    59ce:	31 30       	cpi	r19, 0x01	; 1
    59d0:	01 f5       	brne	.+64     	; 0x5a12 <_ZN7LSM303D7schrittEh+0x26c>
    59d2:	40 81       	ld	r20, Z
    59d4:	51 81       	ldd	r21, Z+1	; 0x01
    59d6:	05 2e       	mov	r0, r21
    59d8:	00 0c       	add	r0, r0
    59da:	66 0b       	sbc	r22, r22
    59dc:	77 0b       	sbc	r23, r23
    59de:	ac 81       	ldd	r26, Y+4	; 0x04
    59e0:	bd 81       	ldd	r27, Y+5	; 0x05
    59e2:	8d 91       	ld	r24, X+
    59e4:	9d 91       	ld	r25, X+
    59e6:	0d 90       	ld	r0, X+
    59e8:	bc 91       	ld	r27, X
    59ea:	a0 2d       	mov	r26, r0
    59ec:	8e 83       	std	Y+6, r24	; 0x06
    59ee:	9f 83       	std	Y+7, r25	; 0x07
    59f0:	a8 87       	std	Y+8, r26	; 0x08
    59f2:	b9 87       	std	Y+9, r27	; 0x09
    59f4:	84 0f       	add	r24, r20
    59f6:	95 1f       	adc	r25, r21
    59f8:	a6 1f       	adc	r26, r22
    59fa:	b7 1f       	adc	r27, r23
    59fc:	88 15       	cp	r24, r8
    59fe:	99 05       	cpc	r25, r9
    5a00:	aa 05       	cpc	r26, r10
    5a02:	bb 05       	cpc	r27, r11
    5a04:	08 f0       	brcs	.+2      	; 0x5a08 <_ZN7LSM303D7schrittEh+0x262>
    5a06:	65 c0       	rjmp	.+202    	; 0x5ad2 <_ZN7LSM303D7schrittEh+0x32c>
			{
				zaehler++;
    5a08:	b9 81       	ldd	r27, Y+1	; 0x01
    5a0a:	bf 5f       	subi	r27, 0xFF	; 255
    5a0c:	b9 83       	std	Y+1, r27	; 0x01
				temp = 2;
    5a0e:	32 2d       	mov	r19, r2
    5a10:	60 c0       	rjmp	.+192    	; 0x5ad2 <_ZN7LSM303D7schrittEh+0x32c>
			}
			else if (temp == 2 && Daten[i]+threschold<lower)
    5a12:	32 30       	cpi	r19, 0x02	; 2
    5a14:	e1 f4       	brne	.+56     	; 0x5a4e <_ZN7LSM303D7schrittEh+0x2a8>
    5a16:	40 81       	ld	r20, Z
    5a18:	51 81       	ldd	r21, Z+1	; 0x01
    5a1a:	05 2e       	mov	r0, r21
    5a1c:	00 0c       	add	r0, r0
    5a1e:	66 0b       	sbc	r22, r22
    5a20:	77 0b       	sbc	r23, r23
    5a22:	ac 81       	ldd	r26, Y+4	; 0x04
    5a24:	bd 81       	ldd	r27, Y+5	; 0x05
    5a26:	8d 91       	ld	r24, X+
    5a28:	9d 91       	ld	r25, X+
    5a2a:	0d 90       	ld	r0, X+
    5a2c:	bc 91       	ld	r27, X
    5a2e:	a0 2d       	mov	r26, r0
    5a30:	8e 83       	std	Y+6, r24	; 0x06
    5a32:	9f 83       	std	Y+7, r25	; 0x07
    5a34:	a8 87       	std	Y+8, r26	; 0x08
    5a36:	b9 87       	std	Y+9, r27	; 0x09
    5a38:	84 0f       	add	r24, r20
    5a3a:	95 1f       	adc	r25, r21
    5a3c:	a6 1f       	adc	r26, r22
    5a3e:	b7 1f       	adc	r27, r23
    5a40:	84 15       	cp	r24, r4
    5a42:	95 05       	cpc	r25, r5
    5a44:	a6 05       	cpc	r26, r6
    5a46:	b7 05       	cpc	r27, r7
    5a48:	08 f4       	brcc	.+2      	; 0x5a4c <_ZN7LSM303D7schrittEh+0x2a6>
    5a4a:	42 c0       	rjmp	.+132    	; 0x5ad0 <_ZN7LSM303D7schrittEh+0x32a>
    5a4c:	42 c0       	rjmp	.+132    	; 0x5ad2 <_ZN7LSM303D7schrittEh+0x32c>
			{
				temp = 3;
			}
			else if (temp == 3 && Daten[i]-threschold>lower)
    5a4e:	33 30       	cpi	r19, 0x03	; 3
    5a50:	f9 f4       	brne	.+62     	; 0x5a90 <_ZN7LSM303D7schrittEh+0x2ea>
    5a52:	40 81       	ld	r20, Z
    5a54:	51 81       	ldd	r21, Z+1	; 0x01
    5a56:	05 2e       	mov	r0, r21
    5a58:	00 0c       	add	r0, r0
    5a5a:	66 0b       	sbc	r22, r22
    5a5c:	77 0b       	sbc	r23, r23
    5a5e:	ac 81       	ldd	r26, Y+4	; 0x04
    5a60:	bd 81       	ldd	r27, Y+5	; 0x05
    5a62:	8d 91       	ld	r24, X+
    5a64:	9d 91       	ld	r25, X+
    5a66:	0d 90       	ld	r0, X+
    5a68:	bc 91       	ld	r27, X
    5a6a:	a0 2d       	mov	r26, r0
    5a6c:	8e 83       	std	Y+6, r24	; 0x06
    5a6e:	9f 83       	std	Y+7, r25	; 0x07
    5a70:	a8 87       	std	Y+8, r26	; 0x08
    5a72:	b9 87       	std	Y+9, r27	; 0x09
    5a74:	84 1b       	sub	r24, r20
    5a76:	95 0b       	sbc	r25, r21
    5a78:	a6 0b       	sbc	r26, r22
    5a7a:	b7 0b       	sbc	r27, r23
    5a7c:	48 16       	cp	r4, r24
    5a7e:	59 06       	cpc	r5, r25
    5a80:	6a 06       	cpc	r6, r26
    5a82:	7b 06       	cpc	r7, r27
    5a84:	30 f5       	brcc	.+76     	; 0x5ad2 <_ZN7LSM303D7schrittEh+0x32c>
			{
				zaehler++;
    5a86:	b9 81       	ldd	r27, Y+1	; 0x01
    5a88:	bf 5f       	subi	r27, 0xFF	; 255
    5a8a:	b9 83       	std	Y+1, r27	; 0x01
				temp = 4;
    5a8c:	34 e0       	ldi	r19, 0x04	; 4
    5a8e:	21 c0       	rjmp	.+66     	; 0x5ad2 <_ZN7LSM303D7schrittEh+0x32c>
			}
			else if (temp == 4 && Daten[i]-threschold>higher)
    5a90:	34 30       	cpi	r19, 0x04	; 4
    5a92:	f9 f4       	brne	.+62     	; 0x5ad2 <_ZN7LSM303D7schrittEh+0x32c>
    5a94:	40 81       	ld	r20, Z
    5a96:	51 81       	ldd	r21, Z+1	; 0x01
    5a98:	05 2e       	mov	r0, r21
    5a9a:	00 0c       	add	r0, r0
    5a9c:	66 0b       	sbc	r22, r22
    5a9e:	77 0b       	sbc	r23, r23
    5aa0:	ac 81       	ldd	r26, Y+4	; 0x04
    5aa2:	bd 81       	ldd	r27, Y+5	; 0x05
    5aa4:	8d 91       	ld	r24, X+
    5aa6:	9d 91       	ld	r25, X+
    5aa8:	0d 90       	ld	r0, X+
    5aaa:	bc 91       	ld	r27, X
    5aac:	a0 2d       	mov	r26, r0
    5aae:	8e 83       	std	Y+6, r24	; 0x06
    5ab0:	9f 83       	std	Y+7, r25	; 0x07
    5ab2:	a8 87       	std	Y+8, r26	; 0x08
    5ab4:	b9 87       	std	Y+9, r27	; 0x09
    5ab6:	84 1b       	sub	r24, r20
    5ab8:	95 0b       	sbc	r25, r21
    5aba:	a6 0b       	sbc	r26, r22
    5abc:	b7 0b       	sbc	r27, r23
    5abe:	88 16       	cp	r8, r24
    5ac0:	99 06       	cpc	r9, r25
    5ac2:	aa 06       	cpc	r10, r26
    5ac4:	bb 06       	cpc	r11, r27
    5ac6:	28 f4       	brcc	.+10     	; 0x5ad2 <_ZN7LSM303D7schrittEh+0x32c>
			{
				temp = 1;
    5ac8:	3c 2d       	mov	r19, r12
    5aca:	03 c0       	rjmp	.+6      	; 0x5ad2 <_ZN7LSM303D7schrittEh+0x32c>
		{
			if (temp == 0)
			{
				if (Daten[i]+threschold<lower)
				{
					temp = 3;
    5acc:	3d 2d       	mov	r19, r13
    5ace:	01 c0       	rjmp	.+2      	; 0x5ad2 <_ZN7LSM303D7schrittEh+0x32c>
				zaehler++;
				temp = 2;
			}
			else if (temp == 2 && Daten[i]+threschold<lower)
			{
				temp = 3;
    5ad0:	3d 2d       	mov	r19, r13
    5ad2:	8c 81       	ldd	r24, Y+4	; 0x04
    5ad4:	9d 81       	ldd	r25, Y+5	; 0x05
    5ad6:	04 96       	adiw	r24, 0x04	; 4
    5ad8:	9d 83       	std	Y+5, r25	; 0x05
    5ada:	8c 83       	std	Y+4, r24	; 0x04
				counter_L++;
			}
		}
		higher/=counter_H;
		lower/=counter_L;
		for (uint8_t i=0;i<50;i++)
    5adc:	8e 15       	cp	r24, r14
    5ade:	9f 05       	cpc	r25, r15
    5ae0:	09 f0       	breq	.+2      	; 0x5ae4 <_ZN7LSM303D7schrittEh+0x33e>
    5ae2:	4e cf       	rjmp	.-356    	; 0x5980 <_ZN7LSM303D7schrittEh+0x1da>
    5ae4:	29 81       	ldd	r18, Y+1	; 0x01
    5ae6:	0a 81       	ldd	r16, Y+2	; 0x02
    5ae8:	1b 81       	ldd	r17, Y+3	; 0x03
			else if (temp == 4 && Daten[i]-threschold>higher)
			{
				temp = 1;
			}
		}
		if (zaehler==1)
    5aea:	21 30       	cpi	r18, 0x01	; 1
    5aec:	59 f4       	brne	.+22     	; 0x5b04 <_ZN7LSM303D7schrittEh+0x35e>
		{
			Schrittzaehler++;
    5aee:	d8 01       	movw	r26, r16
    5af0:	50 96       	adiw	r26, 0x10	; 16
    5af2:	8d 91       	ld	r24, X+
    5af4:	9c 91       	ld	r25, X
    5af6:	51 97       	sbiw	r26, 0x11	; 17
    5af8:	01 96       	adiw	r24, 0x01	; 1
    5afa:	51 96       	adiw	r26, 0x11	; 17
    5afc:	9c 93       	st	X, r25
    5afe:	8e 93       	st	-X, r24
    5b00:	50 97       	sbiw	r26, 0x10	; 16
    5b02:	08 c0       	rjmp	.+16     	; 0x5b14 <_ZN7LSM303D7schrittEh+0x36e>
		}
		else{
			Schrittzaehler+=zaehler/2;
    5b04:	26 95       	lsr	r18
    5b06:	f8 01       	movw	r30, r16
    5b08:	80 89       	ldd	r24, Z+16	; 0x10
    5b0a:	91 89       	ldd	r25, Z+17	; 0x11
    5b0c:	82 0f       	add	r24, r18
    5b0e:	91 1d       	adc	r25, r1
    5b10:	91 8b       	std	Z+17, r25	; 0x11
    5b12:	80 8b       	std	Z+16, r24	; 0x10
		}
	}
}
    5b14:	29 96       	adiw	r28, 0x09	; 9
    5b16:	0f b6       	in	r0, 0x3f	; 63
    5b18:	f8 94       	cli
    5b1a:	de bf       	out	0x3e, r29	; 62
    5b1c:	0f be       	out	0x3f, r0	; 63
    5b1e:	cd bf       	out	0x3d, r28	; 61
    5b20:	df 91       	pop	r29
    5b22:	cf 91       	pop	r28
    5b24:	1f 91       	pop	r17
    5b26:	0f 91       	pop	r16
    5b28:	ff 90       	pop	r15
    5b2a:	ef 90       	pop	r14
    5b2c:	df 90       	pop	r13
    5b2e:	cf 90       	pop	r12
    5b30:	bf 90       	pop	r11
    5b32:	af 90       	pop	r10
    5b34:	9f 90       	pop	r9
    5b36:	8f 90       	pop	r8
    5b38:	7f 90       	pop	r7
    5b3a:	6f 90       	pop	r6
    5b3c:	5f 90       	pop	r5
    5b3e:	4f 90       	pop	r4
    5b40:	3f 90       	pop	r3
    5b42:	2f 90       	pop	r2
    5b44:	08 95       	ret

00005b46 <_ZN6OutputC1Ehh>:
#include "Output.h"

// default constructor
Output::Output(uint8_t Portpraefix, uint8_t Pinnumber)
{
	Pin=Pinnumber;
    5b46:	fc 01       	movw	r30, r24
    5b48:	41 83       	std	Z+1, r20	; 0x01
	Port=Portpraefix;
    5b4a:	60 83       	st	Z, r22
	switch (Portpraefix)
    5b4c:	62 34       	cpi	r22, 0x42	; 66
    5b4e:	a1 f0       	breq	.+40     	; 0x5b78 <_ZN6OutputC1Ehh+0x32>
    5b50:	18 f4       	brcc	.+6      	; 0x5b58 <_ZN6OutputC1Ehh+0x12>
    5b52:	61 34       	cpi	r22, 0x41	; 65
    5b54:	31 f0       	breq	.+12     	; 0x5b62 <_ZN6OutputC1Ehh+0x1c>
    5b56:	08 95       	ret
    5b58:	63 34       	cpi	r22, 0x43	; 67
    5b5a:	c9 f0       	breq	.+50     	; 0x5b8e <_ZN6OutputC1Ehh+0x48>
    5b5c:	64 34       	cpi	r22, 0x44	; 68
    5b5e:	11 f1       	breq	.+68     	; 0x5ba4 <_ZN6OutputC1Ehh+0x5e>
    5b60:	08 95       	ret
	{
		case 'A':
			DDRA |= (1<<Pin);
    5b62:	21 b1       	in	r18, 0x01	; 1
    5b64:	81 e0       	ldi	r24, 0x01	; 1
    5b66:	90 e0       	ldi	r25, 0x00	; 0
    5b68:	02 c0       	rjmp	.+4      	; 0x5b6e <_ZN6OutputC1Ehh+0x28>
    5b6a:	88 0f       	add	r24, r24
    5b6c:	99 1f       	adc	r25, r25
    5b6e:	4a 95       	dec	r20
    5b70:	e2 f7       	brpl	.-8      	; 0x5b6a <_ZN6OutputC1Ehh+0x24>
    5b72:	82 2b       	or	r24, r18
    5b74:	81 b9       	out	0x01, r24	; 1
			break;
    5b76:	08 95       	ret
		case 'B':
			DDRB |= (1<<Pin);
    5b78:	24 b1       	in	r18, 0x04	; 4
    5b7a:	81 e0       	ldi	r24, 0x01	; 1
    5b7c:	90 e0       	ldi	r25, 0x00	; 0
    5b7e:	02 c0       	rjmp	.+4      	; 0x5b84 <_ZN6OutputC1Ehh+0x3e>
    5b80:	88 0f       	add	r24, r24
    5b82:	99 1f       	adc	r25, r25
    5b84:	4a 95       	dec	r20
    5b86:	e2 f7       	brpl	.-8      	; 0x5b80 <_ZN6OutputC1Ehh+0x3a>
    5b88:	82 2b       	or	r24, r18
    5b8a:	84 b9       	out	0x04, r24	; 4
			break;
    5b8c:	08 95       	ret
		case 'C':
			DDRC |= (1<<Pin);
    5b8e:	27 b1       	in	r18, 0x07	; 7
    5b90:	81 e0       	ldi	r24, 0x01	; 1
    5b92:	90 e0       	ldi	r25, 0x00	; 0
    5b94:	02 c0       	rjmp	.+4      	; 0x5b9a <_ZN6OutputC1Ehh+0x54>
    5b96:	88 0f       	add	r24, r24
    5b98:	99 1f       	adc	r25, r25
    5b9a:	4a 95       	dec	r20
    5b9c:	e2 f7       	brpl	.-8      	; 0x5b96 <_ZN6OutputC1Ehh+0x50>
    5b9e:	82 2b       	or	r24, r18
    5ba0:	87 b9       	out	0x07, r24	; 7
			break;
    5ba2:	08 95       	ret
		case 'D':
			DDRD |= (1<<Pin);
    5ba4:	2a b1       	in	r18, 0x0a	; 10
    5ba6:	81 e0       	ldi	r24, 0x01	; 1
    5ba8:	90 e0       	ldi	r25, 0x00	; 0
    5baa:	02 c0       	rjmp	.+4      	; 0x5bb0 <_ZN6OutputC1Ehh+0x6a>
    5bac:	88 0f       	add	r24, r24
    5bae:	99 1f       	adc	r25, r25
    5bb0:	4a 95       	dec	r20
    5bb2:	e2 f7       	brpl	.-8      	; 0x5bac <_ZN6OutputC1Ehh+0x66>
    5bb4:	82 2b       	or	r24, r18
    5bb6:	8a b9       	out	0x0a, r24	; 10
    5bb8:	08 95       	ret

00005bba <_ZN6OutputD1Ev>:
			break;
	}
} //Output

// default destructor
Output::~Output()
    5bba:	08 95       	ret

00005bbc <_ZN6Output2onEv>:
{
} //~Output

void Output::on(){
    5bbc:	fc 01       	movw	r30, r24
	switch (Port)
    5bbe:	90 81       	ld	r25, Z
    5bc0:	92 34       	cpi	r25, 0x42	; 66
    5bc2:	a9 f0       	breq	.+42     	; 0x5bee <_ZN6Output2onEv+0x32>
    5bc4:	18 f4       	brcc	.+6      	; 0x5bcc <_ZN6Output2onEv+0x10>
    5bc6:	91 34       	cpi	r25, 0x41	; 65
    5bc8:	31 f0       	breq	.+12     	; 0x5bd6 <_ZN6Output2onEv+0x1a>
    5bca:	08 95       	ret
    5bcc:	93 34       	cpi	r25, 0x43	; 67
    5bce:	d9 f0       	breq	.+54     	; 0x5c06 <_ZN6Output2onEv+0x4a>
    5bd0:	94 34       	cpi	r25, 0x44	; 68
    5bd2:	29 f1       	breq	.+74     	; 0x5c1e <_ZN6Output2onEv+0x62>
    5bd4:	08 95       	ret
	{
		case 'A':
			PORTA |= (1<<Pin);
    5bd6:	22 b1       	in	r18, 0x02	; 2
    5bd8:	81 e0       	ldi	r24, 0x01	; 1
    5bda:	90 e0       	ldi	r25, 0x00	; 0
    5bdc:	01 80       	ldd	r0, Z+1	; 0x01
    5bde:	02 c0       	rjmp	.+4      	; 0x5be4 <_ZN6Output2onEv+0x28>
    5be0:	88 0f       	add	r24, r24
    5be2:	99 1f       	adc	r25, r25
    5be4:	0a 94       	dec	r0
    5be6:	e2 f7       	brpl	.-8      	; 0x5be0 <_ZN6Output2onEv+0x24>
    5be8:	82 2b       	or	r24, r18
    5bea:	82 b9       	out	0x02, r24	; 2
			break;
    5bec:	08 95       	ret
		case 'B':
			PORTB |= (1<<Pin);
    5bee:	25 b1       	in	r18, 0x05	; 5
    5bf0:	81 e0       	ldi	r24, 0x01	; 1
    5bf2:	90 e0       	ldi	r25, 0x00	; 0
    5bf4:	01 80       	ldd	r0, Z+1	; 0x01
    5bf6:	02 c0       	rjmp	.+4      	; 0x5bfc <_ZN6Output2onEv+0x40>
    5bf8:	88 0f       	add	r24, r24
    5bfa:	99 1f       	adc	r25, r25
    5bfc:	0a 94       	dec	r0
    5bfe:	e2 f7       	brpl	.-8      	; 0x5bf8 <_ZN6Output2onEv+0x3c>
    5c00:	82 2b       	or	r24, r18
    5c02:	85 b9       	out	0x05, r24	; 5
			break;
    5c04:	08 95       	ret
		case 'C':
			PORTC |= (1<<Pin);
    5c06:	28 b1       	in	r18, 0x08	; 8
    5c08:	81 e0       	ldi	r24, 0x01	; 1
    5c0a:	90 e0       	ldi	r25, 0x00	; 0
    5c0c:	01 80       	ldd	r0, Z+1	; 0x01
    5c0e:	02 c0       	rjmp	.+4      	; 0x5c14 <_ZN6Output2onEv+0x58>
    5c10:	88 0f       	add	r24, r24
    5c12:	99 1f       	adc	r25, r25
    5c14:	0a 94       	dec	r0
    5c16:	e2 f7       	brpl	.-8      	; 0x5c10 <_ZN6Output2onEv+0x54>
    5c18:	82 2b       	or	r24, r18
    5c1a:	88 b9       	out	0x08, r24	; 8
			break;
    5c1c:	08 95       	ret
		case 'D':
			PORTD |= (1<<Pin);
    5c1e:	2b b1       	in	r18, 0x0b	; 11
    5c20:	81 e0       	ldi	r24, 0x01	; 1
    5c22:	90 e0       	ldi	r25, 0x00	; 0
    5c24:	01 80       	ldd	r0, Z+1	; 0x01
    5c26:	02 c0       	rjmp	.+4      	; 0x5c2c <_ZN6Output2onEv+0x70>
    5c28:	88 0f       	add	r24, r24
    5c2a:	99 1f       	adc	r25, r25
    5c2c:	0a 94       	dec	r0
    5c2e:	e2 f7       	brpl	.-8      	; 0x5c28 <_ZN6Output2onEv+0x6c>
    5c30:	82 2b       	or	r24, r18
    5c32:	8b b9       	out	0x0b, r24	; 11
    5c34:	08 95       	ret

00005c36 <_ZN6Output4isonEv>:
		default:
			break;
	}
}

uint8_t Output::ison(){
    5c36:	fc 01       	movw	r30, r24
	uint8_t returnparam=0;
	switch (Port)
    5c38:	90 81       	ld	r25, Z
    5c3a:	92 34       	cpi	r25, 0x42	; 66
    5c3c:	a1 f0       	breq	.+40     	; 0x5c66 <_ZN6Output4isonEv+0x30>
    5c3e:	18 f4       	brcc	.+6      	; 0x5c46 <_ZN6Output4isonEv+0x10>
    5c40:	91 34       	cpi	r25, 0x41	; 65
    5c42:	31 f0       	breq	.+12     	; 0x5c50 <_ZN6Output4isonEv+0x1a>
    5c44:	31 c0       	rjmp	.+98     	; 0x5ca8 <_ZN6Output4isonEv+0x72>
    5c46:	93 34       	cpi	r25, 0x43	; 67
    5c48:	c9 f0       	breq	.+50     	; 0x5c7c <_ZN6Output4isonEv+0x46>
    5c4a:	94 34       	cpi	r25, 0x44	; 68
    5c4c:	11 f1       	breq	.+68     	; 0x5c92 <_ZN6Output4isonEv+0x5c>
    5c4e:	2c c0       	rjmp	.+88     	; 0x5ca8 <_ZN6Output4isonEv+0x72>
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    5c50:	22 b1       	in	r18, 0x02	; 2
    5c52:	30 e0       	ldi	r19, 0x00	; 0
    5c54:	c9 01       	movw	r24, r18
    5c56:	01 80       	ldd	r0, Z+1	; 0x01
    5c58:	02 c0       	rjmp	.+4      	; 0x5c5e <_ZN6Output4isonEv+0x28>
    5c5a:	95 95       	asr	r25
    5c5c:	87 95       	ror	r24
    5c5e:	0a 94       	dec	r0
    5c60:	e2 f7       	brpl	.-8      	; 0x5c5a <_ZN6Output4isonEv+0x24>
    5c62:	81 70       	andi	r24, 0x01	; 1
    5c64:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    5c66:	25 b1       	in	r18, 0x05	; 5
    5c68:	30 e0       	ldi	r19, 0x00	; 0
    5c6a:	c9 01       	movw	r24, r18
    5c6c:	01 80       	ldd	r0, Z+1	; 0x01
    5c6e:	02 c0       	rjmp	.+4      	; 0x5c74 <_ZN6Output4isonEv+0x3e>
    5c70:	95 95       	asr	r25
    5c72:	87 95       	ror	r24
    5c74:	0a 94       	dec	r0
    5c76:	e2 f7       	brpl	.-8      	; 0x5c70 <_ZN6Output4isonEv+0x3a>
    5c78:	81 70       	andi	r24, 0x01	; 1
    5c7a:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    5c7c:	28 b1       	in	r18, 0x08	; 8
    5c7e:	30 e0       	ldi	r19, 0x00	; 0
    5c80:	c9 01       	movw	r24, r18
    5c82:	01 80       	ldd	r0, Z+1	; 0x01
    5c84:	02 c0       	rjmp	.+4      	; 0x5c8a <_ZN6Output4isonEv+0x54>
    5c86:	95 95       	asr	r25
    5c88:	87 95       	ror	r24
    5c8a:	0a 94       	dec	r0
    5c8c:	e2 f7       	brpl	.-8      	; 0x5c86 <_ZN6Output4isonEv+0x50>
    5c8e:	81 70       	andi	r24, 0x01	; 1
    5c90:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    5c92:	2b b1       	in	r18, 0x0b	; 11
    5c94:	30 e0       	ldi	r19, 0x00	; 0
    5c96:	c9 01       	movw	r24, r18
    5c98:	01 80       	ldd	r0, Z+1	; 0x01
    5c9a:	02 c0       	rjmp	.+4      	; 0x5ca0 <_ZN6Output4isonEv+0x6a>
    5c9c:	95 95       	asr	r25
    5c9e:	87 95       	ror	r24
    5ca0:	0a 94       	dec	r0
    5ca2:	e2 f7       	brpl	.-8      	; 0x5c9c <_ZN6Output4isonEv+0x66>
    5ca4:	81 70       	andi	r24, 0x01	; 1
    5ca6:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		default:
		returnparam = 2;
    5ca8:	82 e0       	ldi	r24, 0x02	; 2
			break;
	}
	return returnparam;
}
    5caa:	08 95       	ret

00005cac <_ZN6Output3offEv>:

void Output::off(){
    5cac:	fc 01       	movw	r30, r24
	switch (Port)
    5cae:	90 81       	ld	r25, Z
    5cb0:	92 34       	cpi	r25, 0x42	; 66
    5cb2:	b1 f0       	breq	.+44     	; 0x5ce0 <_ZN6Output3offEv+0x34>
    5cb4:	18 f4       	brcc	.+6      	; 0x5cbc <_ZN6Output3offEv+0x10>
    5cb6:	91 34       	cpi	r25, 0x41	; 65
    5cb8:	31 f0       	breq	.+12     	; 0x5cc6 <_ZN6Output3offEv+0x1a>
    5cba:	08 95       	ret
    5cbc:	93 34       	cpi	r25, 0x43	; 67
    5cbe:	e9 f0       	breq	.+58     	; 0x5cfa <_ZN6Output3offEv+0x4e>
    5cc0:	94 34       	cpi	r25, 0x44	; 68
    5cc2:	41 f1       	breq	.+80     	; 0x5d14 <_ZN6Output3offEv+0x68>
    5cc4:	08 95       	ret
	{
		case 'A':
			PORTA &= ~(1<<Pin);
    5cc6:	22 b1       	in	r18, 0x02	; 2
    5cc8:	81 e0       	ldi	r24, 0x01	; 1
    5cca:	90 e0       	ldi	r25, 0x00	; 0
    5ccc:	01 80       	ldd	r0, Z+1	; 0x01
    5cce:	02 c0       	rjmp	.+4      	; 0x5cd4 <_ZN6Output3offEv+0x28>
    5cd0:	88 0f       	add	r24, r24
    5cd2:	99 1f       	adc	r25, r25
    5cd4:	0a 94       	dec	r0
    5cd6:	e2 f7       	brpl	.-8      	; 0x5cd0 <_ZN6Output3offEv+0x24>
    5cd8:	80 95       	com	r24
    5cda:	82 23       	and	r24, r18
    5cdc:	82 b9       	out	0x02, r24	; 2
			break;
    5cde:	08 95       	ret
		case 'B':
			PORTB &= ~(1<<Pin);
    5ce0:	25 b1       	in	r18, 0x05	; 5
    5ce2:	81 e0       	ldi	r24, 0x01	; 1
    5ce4:	90 e0       	ldi	r25, 0x00	; 0
    5ce6:	01 80       	ldd	r0, Z+1	; 0x01
    5ce8:	02 c0       	rjmp	.+4      	; 0x5cee <_ZN6Output3offEv+0x42>
    5cea:	88 0f       	add	r24, r24
    5cec:	99 1f       	adc	r25, r25
    5cee:	0a 94       	dec	r0
    5cf0:	e2 f7       	brpl	.-8      	; 0x5cea <_ZN6Output3offEv+0x3e>
    5cf2:	80 95       	com	r24
    5cf4:	82 23       	and	r24, r18
    5cf6:	85 b9       	out	0x05, r24	; 5
			break;
    5cf8:	08 95       	ret
		case 'C':
			PORTC &= ~(1<<Pin);
    5cfa:	28 b1       	in	r18, 0x08	; 8
    5cfc:	81 e0       	ldi	r24, 0x01	; 1
    5cfe:	90 e0       	ldi	r25, 0x00	; 0
    5d00:	01 80       	ldd	r0, Z+1	; 0x01
    5d02:	02 c0       	rjmp	.+4      	; 0x5d08 <_ZN6Output3offEv+0x5c>
    5d04:	88 0f       	add	r24, r24
    5d06:	99 1f       	adc	r25, r25
    5d08:	0a 94       	dec	r0
    5d0a:	e2 f7       	brpl	.-8      	; 0x5d04 <_ZN6Output3offEv+0x58>
    5d0c:	80 95       	com	r24
    5d0e:	82 23       	and	r24, r18
    5d10:	88 b9       	out	0x08, r24	; 8
			break;
    5d12:	08 95       	ret
		case 'D':
			PORTD &= ~(1<<Pin);
    5d14:	2b b1       	in	r18, 0x0b	; 11
    5d16:	81 e0       	ldi	r24, 0x01	; 1
    5d18:	90 e0       	ldi	r25, 0x00	; 0
    5d1a:	01 80       	ldd	r0, Z+1	; 0x01
    5d1c:	02 c0       	rjmp	.+4      	; 0x5d22 <_ZN6Output3offEv+0x76>
    5d1e:	88 0f       	add	r24, r24
    5d20:	99 1f       	adc	r25, r25
    5d22:	0a 94       	dec	r0
    5d24:	e2 f7       	brpl	.-8      	; 0x5d1e <_ZN6Output3offEv+0x72>
    5d26:	80 95       	com	r24
    5d28:	82 23       	and	r24, r18
    5d2a:	8b b9       	out	0x0b, r24	; 11
    5d2c:	08 95       	ret

00005d2e <_ZN6Output6toggleEv>:
		default:
			break;
	}
}

void Output::toggle(){
    5d2e:	fc 01       	movw	r30, r24
	switch (Port)
    5d30:	90 81       	ld	r25, Z
    5d32:	92 34       	cpi	r25, 0x42	; 66
    5d34:	c9 f0       	breq	.+50     	; 0x5d68 <_ZN6Output6toggleEv+0x3a>
    5d36:	18 f4       	brcc	.+6      	; 0x5d3e <_ZN6Output6toggleEv+0x10>
    5d38:	91 34       	cpi	r25, 0x41	; 65
    5d3a:	31 f0       	breq	.+12     	; 0x5d48 <_ZN6Output6toggleEv+0x1a>
    5d3c:	08 95       	ret
    5d3e:	93 34       	cpi	r25, 0x43	; 67
    5d40:	19 f1       	breq	.+70     	; 0x5d88 <_ZN6Output6toggleEv+0x5a>
    5d42:	94 34       	cpi	r25, 0x44	; 68
    5d44:	89 f1       	breq	.+98     	; 0x5da8 <_ZN6Output6toggleEv+0x7a>
    5d46:	08 95       	ret
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    5d48:	82 b1       	in	r24, 0x02	; 2
    5d4a:	90 e0       	ldi	r25, 0x00	; 0
    5d4c:	01 80       	ldd	r0, Z+1	; 0x01
    5d4e:	02 c0       	rjmp	.+4      	; 0x5d54 <_ZN6Output6toggleEv+0x26>
    5d50:	95 95       	asr	r25
    5d52:	87 95       	ror	r24
    5d54:	0a 94       	dec	r0
    5d56:	e2 f7       	brpl	.-8      	; 0x5d50 <_ZN6Output6toggleEv+0x22>
    5d58:	80 ff       	sbrs	r24, 0
    5d5a:	03 c0       	rjmp	.+6      	; 0x5d62 <_ZN6Output6toggleEv+0x34>
			{
				off();
    5d5c:	cf 01       	movw	r24, r30
    5d5e:	a6 cf       	rjmp	.-180    	; 0x5cac <_ZN6Output3offEv>
    5d60:	08 95       	ret
			}
			else{
				on();
    5d62:	cf 01       	movw	r24, r30
    5d64:	2b cf       	rjmp	.-426    	; 0x5bbc <_ZN6Output2onEv>
    5d66:	08 95       	ret
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    5d68:	85 b1       	in	r24, 0x05	; 5
    5d6a:	90 e0       	ldi	r25, 0x00	; 0
    5d6c:	01 80       	ldd	r0, Z+1	; 0x01
    5d6e:	02 c0       	rjmp	.+4      	; 0x5d74 <_ZN6Output6toggleEv+0x46>
    5d70:	95 95       	asr	r25
    5d72:	87 95       	ror	r24
    5d74:	0a 94       	dec	r0
    5d76:	e2 f7       	brpl	.-8      	; 0x5d70 <_ZN6Output6toggleEv+0x42>
    5d78:	80 ff       	sbrs	r24, 0
    5d7a:	03 c0       	rjmp	.+6      	; 0x5d82 <_ZN6Output6toggleEv+0x54>
			{
				off();
    5d7c:	cf 01       	movw	r24, r30
    5d7e:	96 cf       	rjmp	.-212    	; 0x5cac <_ZN6Output3offEv>
    5d80:	08 95       	ret
			}
			else{
				on();
    5d82:	cf 01       	movw	r24, r30
    5d84:	1b cf       	rjmp	.-458    	; 0x5bbc <_ZN6Output2onEv>
    5d86:	08 95       	ret
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    5d88:	88 b1       	in	r24, 0x08	; 8
    5d8a:	90 e0       	ldi	r25, 0x00	; 0
    5d8c:	01 80       	ldd	r0, Z+1	; 0x01
    5d8e:	02 c0       	rjmp	.+4      	; 0x5d94 <_ZN6Output6toggleEv+0x66>
    5d90:	95 95       	asr	r25
    5d92:	87 95       	ror	r24
    5d94:	0a 94       	dec	r0
    5d96:	e2 f7       	brpl	.-8      	; 0x5d90 <_ZN6Output6toggleEv+0x62>
    5d98:	80 ff       	sbrs	r24, 0
    5d9a:	03 c0       	rjmp	.+6      	; 0x5da2 <_ZN6Output6toggleEv+0x74>
			{
				off();
    5d9c:	cf 01       	movw	r24, r30
    5d9e:	86 cf       	rjmp	.-244    	; 0x5cac <_ZN6Output3offEv>
    5da0:	08 95       	ret
			}
			else{
				on();
    5da2:	cf 01       	movw	r24, r30
    5da4:	0b cf       	rjmp	.-490    	; 0x5bbc <_ZN6Output2onEv>
    5da6:	08 95       	ret
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    5da8:	8b b1       	in	r24, 0x0b	; 11
    5daa:	90 e0       	ldi	r25, 0x00	; 0
    5dac:	01 80       	ldd	r0, Z+1	; 0x01
    5dae:	02 c0       	rjmp	.+4      	; 0x5db4 <_ZN6Output6toggleEv+0x86>
    5db0:	95 95       	asr	r25
    5db2:	87 95       	ror	r24
    5db4:	0a 94       	dec	r0
    5db6:	e2 f7       	brpl	.-8      	; 0x5db0 <_ZN6Output6toggleEv+0x82>
    5db8:	80 ff       	sbrs	r24, 0
    5dba:	03 c0       	rjmp	.+6      	; 0x5dc2 <_ZN6Output6toggleEv+0x94>
			{
				off();
    5dbc:	cf 01       	movw	r24, r30
    5dbe:	76 cf       	rjmp	.-276    	; 0x5cac <_ZN6Output3offEv>
    5dc0:	08 95       	ret
			}
			else{
				on();
    5dc2:	cf 01       	movw	r24, r30
    5dc4:	fb ce       	rjmp	.-522    	; 0x5bbc <_ZN6Output2onEv>
    5dc6:	08 95       	ret

00005dc8 <_ZN3RTCD1Ev>:
	Tag=7;
	Monat=9;
	Jahr=15;
	ausgabedatumneu();
	ausgabezeitneu();
}
    5dc8:	08 95       	ret

00005dca <_ZN3RTC6WeckerEv>:
    5dca:	fc 01       	movw	r30, r24
    5dcc:	80 8d       	ldd	r24, Z+24	; 0x18
    5dce:	83 ff       	sbrs	r24, 3
    5dd0:	0c c0       	rjmp	.+24     	; 0x5dea <_ZN3RTC6WeckerEv+0x20>
    5dd2:	84 fd       	sbrc	r24, 4
    5dd4:	0a c0       	rjmp	.+20     	; 0x5dea <_ZN3RTC6WeckerEv+0x20>
    5dd6:	22 8d       	ldd	r18, Z+26	; 0x1a
    5dd8:	90 89       	ldd	r25, Z+16	; 0x10
    5dda:	29 13       	cpse	r18, r25
    5ddc:	06 c0       	rjmp	.+12     	; 0x5dea <_ZN3RTC6WeckerEv+0x20>
    5dde:	21 8d       	ldd	r18, Z+25	; 0x19
    5de0:	91 89       	ldd	r25, Z+17	; 0x11
    5de2:	29 13       	cpse	r18, r25
    5de4:	02 c0       	rjmp	.+4      	; 0x5dea <_ZN3RTC6WeckerEv+0x20>
    5de6:	80 61       	ori	r24, 0x10	; 16
    5de8:	80 8f       	std	Z+24, r24	; 0x18
    5dea:	08 95       	ret

00005dec <_ZN3RTC14ausgabezeitneuEv>:
    5dec:	fc 01       	movw	r30, r24
    5dee:	20 89       	ldd	r18, Z+16	; 0x10
    5df0:	9d ec       	ldi	r25, 0xCD	; 205
    5df2:	29 9f       	mul	r18, r25
    5df4:	81 2d       	mov	r24, r1
    5df6:	11 24       	eor	r1, r1
    5df8:	86 95       	lsr	r24
    5dfa:	86 95       	lsr	r24
    5dfc:	86 95       	lsr	r24
    5dfe:	30 e3       	ldi	r19, 0x30	; 48
    5e00:	38 0f       	add	r19, r24
    5e02:	30 83       	st	Z, r19
    5e04:	88 0f       	add	r24, r24
    5e06:	38 2f       	mov	r19, r24
    5e08:	33 0f       	add	r19, r19
    5e0a:	33 0f       	add	r19, r19
    5e0c:	83 0f       	add	r24, r19
    5e0e:	28 1b       	sub	r18, r24
    5e10:	20 5d       	subi	r18, 0xD0	; 208
    5e12:	21 83       	std	Z+1, r18	; 0x01
    5e14:	21 89       	ldd	r18, Z+17	; 0x11
    5e16:	29 9f       	mul	r18, r25
    5e18:	81 2d       	mov	r24, r1
    5e1a:	11 24       	eor	r1, r1
    5e1c:	86 95       	lsr	r24
    5e1e:	86 95       	lsr	r24
    5e20:	86 95       	lsr	r24
    5e22:	30 e3       	ldi	r19, 0x30	; 48
    5e24:	38 0f       	add	r19, r24
    5e26:	33 83       	std	Z+3, r19	; 0x03
    5e28:	88 0f       	add	r24, r24
    5e2a:	38 2f       	mov	r19, r24
    5e2c:	33 0f       	add	r19, r19
    5e2e:	33 0f       	add	r19, r19
    5e30:	83 0f       	add	r24, r19
    5e32:	28 1b       	sub	r18, r24
    5e34:	20 5d       	subi	r18, 0xD0	; 208
    5e36:	24 83       	std	Z+4, r18	; 0x04
    5e38:	82 89       	ldd	r24, Z+18	; 0x12
    5e3a:	89 9f       	mul	r24, r25
    5e3c:	91 2d       	mov	r25, r1
    5e3e:	11 24       	eor	r1, r1
    5e40:	96 95       	lsr	r25
    5e42:	96 95       	lsr	r25
    5e44:	96 95       	lsr	r25
    5e46:	20 e3       	ldi	r18, 0x30	; 48
    5e48:	29 0f       	add	r18, r25
    5e4a:	26 83       	std	Z+6, r18	; 0x06
    5e4c:	99 0f       	add	r25, r25
    5e4e:	29 2f       	mov	r18, r25
    5e50:	22 0f       	add	r18, r18
    5e52:	22 0f       	add	r18, r18
    5e54:	92 0f       	add	r25, r18
    5e56:	89 1b       	sub	r24, r25
    5e58:	80 5d       	subi	r24, 0xD0	; 208
    5e5a:	87 83       	std	Z+7, r24	; 0x07
    5e5c:	08 95       	ret

00005e5e <_ZN3RTC15ausgabedatumneuEv>:
    5e5e:	fc 01       	movw	r30, r24
    5e60:	24 89       	ldd	r18, Z+20	; 0x14
    5e62:	9d ec       	ldi	r25, 0xCD	; 205
    5e64:	29 9f       	mul	r18, r25
    5e66:	81 2d       	mov	r24, r1
    5e68:	11 24       	eor	r1, r1
    5e6a:	86 95       	lsr	r24
    5e6c:	86 95       	lsr	r24
    5e6e:	86 95       	lsr	r24
    5e70:	30 e3       	ldi	r19, 0x30	; 48
    5e72:	38 0f       	add	r19, r24
    5e74:	30 87       	std	Z+8, r19	; 0x08
    5e76:	88 0f       	add	r24, r24
    5e78:	38 2f       	mov	r19, r24
    5e7a:	33 0f       	add	r19, r19
    5e7c:	33 0f       	add	r19, r19
    5e7e:	83 0f       	add	r24, r19
    5e80:	28 1b       	sub	r18, r24
    5e82:	20 5d       	subi	r18, 0xD0	; 208
    5e84:	21 87       	std	Z+9, r18	; 0x09
    5e86:	26 89       	ldd	r18, Z+22	; 0x16
    5e88:	29 9f       	mul	r18, r25
    5e8a:	81 2d       	mov	r24, r1
    5e8c:	11 24       	eor	r1, r1
    5e8e:	86 95       	lsr	r24
    5e90:	86 95       	lsr	r24
    5e92:	86 95       	lsr	r24
    5e94:	30 e3       	ldi	r19, 0x30	; 48
    5e96:	38 0f       	add	r19, r24
    5e98:	33 87       	std	Z+11, r19	; 0x0b
    5e9a:	88 0f       	add	r24, r24
    5e9c:	38 2f       	mov	r19, r24
    5e9e:	33 0f       	add	r19, r19
    5ea0:	33 0f       	add	r19, r19
    5ea2:	83 0f       	add	r24, r19
    5ea4:	28 1b       	sub	r18, r24
    5ea6:	20 5d       	subi	r18, 0xD0	; 208
    5ea8:	24 87       	std	Z+12, r18	; 0x0c
    5eaa:	87 89       	ldd	r24, Z+23	; 0x17
    5eac:	89 9f       	mul	r24, r25
    5eae:	91 2d       	mov	r25, r1
    5eb0:	11 24       	eor	r1, r1
    5eb2:	96 95       	lsr	r25
    5eb4:	96 95       	lsr	r25
    5eb6:	96 95       	lsr	r25
    5eb8:	20 e3       	ldi	r18, 0x30	; 48
    5eba:	29 0f       	add	r18, r25
    5ebc:	26 87       	std	Z+14, r18	; 0x0e
    5ebe:	99 0f       	add	r25, r25
    5ec0:	29 2f       	mov	r18, r25
    5ec2:	22 0f       	add	r18, r18
    5ec4:	22 0f       	add	r18, r18
    5ec6:	92 0f       	add	r25, r18
    5ec8:	89 1b       	sub	r24, r25
    5eca:	80 5d       	subi	r24, 0xD0	; 208
    5ecc:	87 87       	std	Z+15, r24	; 0x0f
    5ece:	08 95       	ret

00005ed0 <_ZN3RTCC1Ev>:
    5ed0:	cf 93       	push	r28
    5ed2:	df 93       	push	r29
    5ed4:	ec 01       	movw	r28, r24
    5ed6:	1a 8a       	std	Y+18, r1	; 0x12
    5ed8:	1b 8a       	std	Y+19, r1	; 0x13
    5eda:	19 8a       	std	Y+17, r1	; 0x11
    5edc:	18 8a       	std	Y+16, r1	; 0x10
    5ede:	1c 8a       	std	Y+20, r1	; 0x14
    5ee0:	1e 8a       	std	Y+22, r1	; 0x16
    5ee2:	1f 8a       	std	Y+23, r1	; 0x17
    5ee4:	1d 8a       	std	Y+21, r1	; 0x15
    5ee6:	88 e2       	ldi	r24, 0x28	; 40
    5ee8:	89 8f       	std	Y+25, r24	; 0x19
    5eea:	8a e0       	ldi	r24, 0x0A	; 10
    5eec:	8a 8f       	std	Y+26, r24	; 0x1a
    5eee:	1c 8e       	std	Y+28, r1	; 0x1c
    5ef0:	1b 8e       	std	Y+27, r1	; 0x1b
    5ef2:	1e 8e       	std	Y+30, r1	; 0x1e
    5ef4:	1d 8e       	std	Y+29, r1	; 0x1d
    5ef6:	fe 01       	movw	r30, r28
    5ef8:	ce 01       	movw	r24, r28
    5efa:	08 96       	adiw	r24, 0x08	; 8
    5efc:	dc 01       	movw	r26, r24
    5efe:	11 92       	st	Z+, r1
    5f00:	1d 92       	st	X+, r1
    5f02:	e8 17       	cp	r30, r24
    5f04:	f9 07       	cpc	r31, r25
    5f06:	d9 f7       	brne	.-10     	; 0x5efe <_ZN3RTCC1Ev+0x2e>
    5f08:	8a e3       	ldi	r24, 0x3A	; 58
    5f0a:	8a 83       	std	Y+2, r24	; 0x02
    5f0c:	8d 83       	std	Y+5, r24	; 0x05
    5f0e:	8e e2       	ldi	r24, 0x2E	; 46
    5f10:	8a 87       	std	Y+10, r24	; 0x0a
    5f12:	8d 87       	std	Y+13, r24	; 0x0d
    5f14:	ce 01       	movw	r24, r28
    5f16:	6a df       	rcall	.-300    	; 0x5dec <_ZN3RTC14ausgabezeitneuEv>
    5f18:	ce 01       	movw	r24, r28
    5f1a:	a1 df       	rcall	.-190    	; 0x5e5e <_ZN3RTC15ausgabedatumneuEv>
    5f1c:	df 91       	pop	r29
    5f1e:	cf 91       	pop	r28
    5f20:	08 95       	ret

00005f22 <_ZN3RTC8kalenderEv>:
    5f22:	fc 01       	movw	r30, r24
    5f24:	26 89       	ldd	r18, Z+22	; 0x16
    5f26:	32 2f       	mov	r19, r18
    5f28:	3d 7f       	andi	r19, 0xFD	; 253
    5f2a:	34 30       	cpi	r19, 0x04	; 4
    5f2c:	11 f0       	breq	.+4      	; 0x5f32 <_ZN3RTC8kalenderEv+0x10>
    5f2e:	39 30       	cpi	r19, 0x09	; 9
    5f30:	91 f4       	brne	.+36     	; 0x5f56 <_ZN3RTC8kalenderEv+0x34>
    5f32:	fc 01       	movw	r30, r24
    5f34:	34 89       	ldd	r19, Z+20	; 0x14
    5f36:	3f 31       	cpi	r19, 0x1F	; 31
    5f38:	b0 f1       	brcs	.+108    	; 0x5fa6 <_ZN3RTC8kalenderEv+0x84>
    5f3a:	31 e0       	ldi	r19, 0x01	; 1
    5f3c:	34 8b       	std	Z+20, r19	; 0x14
    5f3e:	2f 5f       	subi	r18, 0xFF	; 255
    5f40:	2d 30       	cpi	r18, 0x0D	; 13
    5f42:	10 f4       	brcc	.+4      	; 0x5f48 <_ZN3RTC8kalenderEv+0x26>
    5f44:	26 8b       	std	Z+22, r18	; 0x16
    5f46:	2f c0       	rjmp	.+94     	; 0x5fa6 <_ZN3RTC8kalenderEv+0x84>
    5f48:	21 e0       	ldi	r18, 0x01	; 1
    5f4a:	fc 01       	movw	r30, r24
    5f4c:	26 8b       	std	Z+22, r18	; 0x16
    5f4e:	27 89       	ldd	r18, Z+23	; 0x17
    5f50:	2f 5f       	subi	r18, 0xFF	; 255
    5f52:	27 8b       	std	Z+23, r18	; 0x17
    5f54:	28 c0       	rjmp	.+80     	; 0x5fa6 <_ZN3RTC8kalenderEv+0x84>
    5f56:	22 30       	cpi	r18, 0x02	; 2
    5f58:	a9 f4       	brne	.+42     	; 0x5f84 <_ZN3RTC8kalenderEv+0x62>
    5f5a:	fc 01       	movw	r30, r24
    5f5c:	27 89       	ldd	r18, Z+23	; 0x17
    5f5e:	23 70       	andi	r18, 0x03	; 3
    5f60:	41 f4       	brne	.+16     	; 0x5f72 <_ZN3RTC8kalenderEv+0x50>
    5f62:	24 89       	ldd	r18, Z+20	; 0x14
    5f64:	2e 31       	cpi	r18, 0x1E	; 30
    5f66:	f8 f0       	brcs	.+62     	; 0x5fa6 <_ZN3RTC8kalenderEv+0x84>
    5f68:	21 e0       	ldi	r18, 0x01	; 1
    5f6a:	24 8b       	std	Z+20, r18	; 0x14
    5f6c:	23 e0       	ldi	r18, 0x03	; 3
    5f6e:	26 8b       	std	Z+22, r18	; 0x16
    5f70:	1a c0       	rjmp	.+52     	; 0x5fa6 <_ZN3RTC8kalenderEv+0x84>
    5f72:	fc 01       	movw	r30, r24
    5f74:	24 89       	ldd	r18, Z+20	; 0x14
    5f76:	2d 31       	cpi	r18, 0x1D	; 29
    5f78:	b0 f0       	brcs	.+44     	; 0x5fa6 <_ZN3RTC8kalenderEv+0x84>
    5f7a:	21 e0       	ldi	r18, 0x01	; 1
    5f7c:	24 8b       	std	Z+20, r18	; 0x14
    5f7e:	23 e0       	ldi	r18, 0x03	; 3
    5f80:	26 8b       	std	Z+22, r18	; 0x16
    5f82:	11 c0       	rjmp	.+34     	; 0x5fa6 <_ZN3RTC8kalenderEv+0x84>
    5f84:	fc 01       	movw	r30, r24
    5f86:	34 89       	ldd	r19, Z+20	; 0x14
    5f88:	30 32       	cpi	r19, 0x20	; 32
    5f8a:	68 f0       	brcs	.+26     	; 0x5fa6 <_ZN3RTC8kalenderEv+0x84>
    5f8c:	31 e0       	ldi	r19, 0x01	; 1
    5f8e:	34 8b       	std	Z+20, r19	; 0x14
    5f90:	2f 5f       	subi	r18, 0xFF	; 255
    5f92:	2d 30       	cpi	r18, 0x0D	; 13
    5f94:	10 f4       	brcc	.+4      	; 0x5f9a <_ZN3RTC8kalenderEv+0x78>
    5f96:	26 8b       	std	Z+22, r18	; 0x16
    5f98:	06 c0       	rjmp	.+12     	; 0x5fa6 <_ZN3RTC8kalenderEv+0x84>
    5f9a:	21 e0       	ldi	r18, 0x01	; 1
    5f9c:	fc 01       	movw	r30, r24
    5f9e:	26 8b       	std	Z+22, r18	; 0x16
    5fa0:	27 89       	ldd	r18, Z+23	; 0x17
    5fa2:	2f 5f       	subi	r18, 0xFF	; 255
    5fa4:	27 8b       	std	Z+23, r18	; 0x17
    5fa6:	5b cf       	rjmp	.-330    	; 0x5e5e <_ZN3RTC15ausgabedatumneuEv>
    5fa8:	08 95       	ret

00005faa <_ZN3RTC4zeitEv>:
    5faa:	cf 93       	push	r28
    5fac:	df 93       	push	r29
    5fae:	ec 01       	movw	r28, r24
    5fb0:	8a 89       	ldd	r24, Y+18	; 0x12
    5fb2:	8c 53       	subi	r24, 0x3C	; 60
    5fb4:	8d 38       	cpi	r24, 0x8D	; 141
    5fb6:	c0 f4       	brcc	.+48     	; 0x5fe8 <_ZN3RTC4zeitEv+0x3e>
    5fb8:	1a 8a       	std	Y+18, r1	; 0x12
    5fba:	89 89       	ldd	r24, Y+17	; 0x11
    5fbc:	8f 5f       	subi	r24, 0xFF	; 255
    5fbe:	89 8b       	std	Y+17, r24	; 0x11
    5fc0:	98 8d       	ldd	r25, Y+24	; 0x18
    5fc2:	94 60       	ori	r25, 0x04	; 4
    5fc4:	98 8f       	std	Y+24, r25	; 0x18
    5fc6:	8c 33       	cpi	r24, 0x3C	; 60
    5fc8:	68 f0       	brcs	.+26     	; 0x5fe4 <_ZN3RTC4zeitEv+0x3a>
    5fca:	19 8a       	std	Y+17, r1	; 0x11
    5fcc:	88 89       	ldd	r24, Y+16	; 0x10
    5fce:	8f 5f       	subi	r24, 0xFF	; 255
    5fd0:	88 31       	cpi	r24, 0x18	; 24
    5fd2:	10 f4       	brcc	.+4      	; 0x5fd8 <_ZN3RTC4zeitEv+0x2e>
    5fd4:	88 8b       	std	Y+16, r24	; 0x10
    5fd6:	06 c0       	rjmp	.+12     	; 0x5fe4 <_ZN3RTC4zeitEv+0x3a>
    5fd8:	18 8a       	std	Y+16, r1	; 0x10
    5fda:	8c 89       	ldd	r24, Y+20	; 0x14
    5fdc:	8f 5f       	subi	r24, 0xFF	; 255
    5fde:	8c 8b       	std	Y+20, r24	; 0x14
    5fe0:	ce 01       	movw	r24, r28
    5fe2:	9f df       	rcall	.-194    	; 0x5f22 <_ZN3RTC8kalenderEv>
    5fe4:	ce 01       	movw	r24, r28
    5fe6:	f1 de       	rcall	.-542    	; 0x5dca <_ZN3RTC6WeckerEv>
    5fe8:	ce 01       	movw	r24, r28
    5fea:	00 df       	rcall	.-512    	; 0x5dec <_ZN3RTC14ausgabezeitneuEv>
    5fec:	88 8d       	ldd	r24, Y+24	; 0x18
    5fee:	85 ff       	sbrs	r24, 5
    5ff0:	0b c0       	rjmp	.+22     	; 0x6008 <_ZN3RTC4zeitEv+0x5e>
    5ff2:	2b 8d       	ldd	r18, Y+27	; 0x1b
    5ff4:	3c 8d       	ldd	r19, Y+28	; 0x1c
    5ff6:	21 50       	subi	r18, 0x01	; 1
    5ff8:	31 09       	sbc	r19, r1
    5ffa:	3c 8f       	std	Y+28, r19	; 0x1c
    5ffc:	2b 8f       	std	Y+27, r18	; 0x1b
    5ffe:	23 2b       	or	r18, r19
    6000:	19 f4       	brne	.+6      	; 0x6008 <_ZN3RTC4zeitEv+0x5e>
    6002:	8f 7d       	andi	r24, 0xDF	; 223
    6004:	81 60       	ori	r24, 0x01	; 1
    6006:	88 8f       	std	Y+24, r24	; 0x18
    6008:	88 8d       	ldd	r24, Y+24	; 0x18
    600a:	86 ff       	sbrs	r24, 6
    600c:	05 c0       	rjmp	.+10     	; 0x6018 <_ZN3RTC4zeitEv+0x6e>
    600e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    6010:	9e 8d       	ldd	r25, Y+30	; 0x1e
    6012:	01 96       	adiw	r24, 0x01	; 1
    6014:	9e 8f       	std	Y+30, r25	; 0x1e
    6016:	8d 8f       	std	Y+29, r24	; 0x1d
    6018:	80 e0       	ldi	r24, 0x00	; 0
    601a:	df 91       	pop	r29
    601c:	cf 91       	pop	r28
    601e:	08 95       	ret

00006020 <_ZN3RTC8RTCstartEv>:

void RTC::RTCstart(){
    6020:	fc 01       	movw	r30, r24
	//Einstellungen des Ausgabebuffers
	msg_uhr[0]='0';
    6022:	80 e3       	ldi	r24, 0x30	; 48
    6024:	80 83       	st	Z, r24
	msg_uhr[1]='0';
    6026:	81 83       	std	Z+1, r24	; 0x01
	msg_uhr[2]=':';
    6028:	9a e3       	ldi	r25, 0x3A	; 58
    602a:	92 83       	std	Z+2, r25	; 0x02
	msg_uhr[3]='0';
    602c:	83 83       	std	Z+3, r24	; 0x03
	msg_uhr[4]='0';
    602e:	84 83       	std	Z+4, r24	; 0x04
	msg_uhr[5]=':';
    6030:	95 83       	std	Z+5, r25	; 0x05
	msg_uhr[6]='0';
    6032:	86 83       	std	Z+6, r24	; 0x06
	msg_uhr[7]='0';
    6034:	87 83       	std	Z+7, r24	; 0x07
	//Timer2 als 1ms Timer fuer die RTC
	//asynchron mit 32.768 kHz (noch synchrom)
	TCNT2 = TIMER2RTCTIME;
    6036:	10 92 b2 00 	sts	0x00B2, r1
	ASSR |= (1<<AS2);
    603a:	e6 eb       	ldi	r30, 0xB6	; 182
    603c:	f0 e0       	ldi	r31, 0x00	; 0
    603e:	80 81       	ld	r24, Z
    6040:	80 62       	ori	r24, 0x20	; 32
    6042:	80 83       	st	Z, r24
	TIMSK2 = (1<<TOIE2);
    6044:	81 e0       	ldi	r24, 0x01	; 1
    6046:	80 93 70 00 	sts	0x0070, r24
	TCCR2B = (1<<CS22) | (1<<CS20);		//Vorteiler 256
    604a:	85 e0       	ldi	r24, 0x05	; 5
    604c:	80 93 b1 00 	sts	0x00B1, r24
    6050:	08 95       	ret

00006052 <_ZN3RTC7RTCstopEv>:
}

void RTC::RTCstop(){
	TCCR2B &= ~((1<<CS22) | (1<<CS21));
    6052:	e1 eb       	ldi	r30, 0xB1	; 177
    6054:	f0 e0       	ldi	r31, 0x00	; 0
    6056:	80 81       	ld	r24, Z
    6058:	89 7f       	andi	r24, 0xF9	; 249
    605a:	80 83       	st	Z, r24
    605c:	08 95       	ret

0000605e <_ZN5SOUNDD1Ev>:
	setfrequenci(1000);//1KHz
	off();
} //SOUND

// default destructor
SOUND::~SOUND()
    605e:	08 95       	ret

00006060 <_ZN5SOUND2onEv>:
	TCNT0 = 0;
	on();
}

void SOUND::on(){
	if ((interupts&(1<<Soundactiv)))
    6060:	fc 01       	movw	r30, r24
    6062:	20 81       	ld	r18, Z
    6064:	20 ff       	sbrs	r18, 0
    6066:	04 c0       	rjmp	.+8      	; 0x6070 <_ZN5SOUND2onEv+0x10>
	{
		TCCR0B |= prescaler;
    6068:	25 b5       	in	r18, 0x25	; 37
    606a:	81 81       	ldd	r24, Z+1	; 0x01
    606c:	82 2b       	or	r24, r18
    606e:	85 bd       	out	0x25, r24	; 37
    6070:	08 95       	ret

00006072 <_ZN5SOUND3offEv>:
	}
}

void SOUND::off(){
	TCCR0B &= ~((1<<CS00)|(1<<CS01)|(1<<CS02));
    6072:	85 b5       	in	r24, 0x25	; 37
    6074:	88 7f       	andi	r24, 0xF8	; 248
    6076:	85 bd       	out	0x25, r24	; 37
    6078:	08 95       	ret

0000607a <_ZN5SOUND12setfrequenciEj>:
{
} //~SOUND


//WERT = f_CPU/(f*1024)
void SOUND::setfrequenci(uint16_t frequenz){
    607a:	0f 93       	push	r16
    607c:	1f 93       	push	r17
    607e:	cf 93       	push	r28
    6080:	df 93       	push	r29
    6082:	8c 01       	movw	r16, r24
    6084:	eb 01       	movw	r28, r22
	off();
    6086:	f5 df       	rcall	.-22     	; 0x6072 <_ZN5SOUND3offEv>
	float WERT = F_CPU/256.0;
	WERT /= (frequenz);
    6088:	be 01       	movw	r22, r28
    608a:	80 e0       	ldi	r24, 0x00	; 0
    608c:	90 e0       	ldi	r25, 0x00	; 0
    608e:	8f d1       	rcall	.+798    	; 0x63ae <__floatunsisf>
    6090:	9b 01       	movw	r18, r22
    6092:	ac 01       	movw	r20, r24
    6094:	60 e0       	ldi	r22, 0x00	; 0
    6096:	74 e2       	ldi	r23, 0x24	; 36
    6098:	84 ef       	ldi	r24, 0xF4	; 244
    609a:	96 e4       	ldi	r25, 0x46	; 70
    609c:	ef d0       	rcall	.+478    	; 0x627c <__divsf3>
	OCR0A = (uint8_t)WERT;
    609e:	5b d1       	rcall	.+694    	; 0x6356 <__fixunssfsi>
    60a0:	67 bd       	out	0x27, r22	; 39
	TCNT0 = 0;
    60a2:	16 bc       	out	0x26, r1	; 38
	on();
    60a4:	c8 01       	movw	r24, r16
    60a6:	dc df       	rcall	.-72     	; 0x6060 <_ZN5SOUND2onEv>
}
    60a8:	df 91       	pop	r29
    60aa:	cf 91       	pop	r28
    60ac:	1f 91       	pop	r17
    60ae:	0f 91       	pop	r16
    60b0:	08 95       	ret

000060b2 <_ZN5SOUNDC1Ev>:


#include "SOUND.h"

// default constructor
SOUND::SOUND()
    60b2:	cf 93       	push	r28
    60b4:	df 93       	push	r29
    60b6:	ec 01       	movw	r28, r24
{
	//interuptregister initialisieren
	interupts = 0;
    60b8:	18 82       	st	Y, r1
	PORTB &= ~(1<<PORTB3); //Pullups ausschalten
    60ba:	2b 98       	cbi	0x05, 3	; 5
	DDRB |= (1<<PORTB3); //Ausgang schalten
    60bc:	23 9a       	sbi	0x04, 3	; 4
	//Not inverting PWM, Phase correct
	TCCR0A |= (1<<COM0A0) | (1<<WGM00);
    60be:	84 b5       	in	r24, 0x24	; 36
    60c0:	81 64       	ori	r24, 0x41	; 65
    60c2:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<WGM02);
    60c4:	85 b5       	in	r24, 0x25	; 37
    60c6:	88 60       	ori	r24, 0x08	; 8
    60c8:	85 bd       	out	0x25, r24	; 37
	fuer	8		1MHz		3.90625KHz
			64		125KHz		488.28Hz
			256		31.25KHz	122.07Hz
			1024	7.8125KHz	30.52Hz
*/
	prescaler = (1<<CS02); //256
    60ca:	84 e0       	ldi	r24, 0x04	; 4
    60cc:	89 83       	std	Y+1, r24	; 0x01
	setfrequenci(1000);//1KHz
    60ce:	68 ee       	ldi	r22, 0xE8	; 232
    60d0:	73 e0       	ldi	r23, 0x03	; 3
    60d2:	ce 01       	movw	r24, r28
    60d4:	d2 df       	rcall	.-92     	; 0x607a <_ZN5SOUND12setfrequenciEj>
	off();
    60d6:	ce 01       	movw	r24, r28
    60d8:	cc df       	rcall	.-104    	; 0x6072 <_ZN5SOUND3offEv>
} //SOUND
    60da:	df 91       	pop	r29
    60dc:	cf 91       	pop	r28
    60de:	08 95       	ret

000060e0 <__subsf3>:
    60e0:	50 58       	subi	r21, 0x80	; 128

000060e2 <__addsf3>:
    60e2:	bb 27       	eor	r27, r27
    60e4:	aa 27       	eor	r26, r26
    60e6:	0e d0       	rcall	.+28     	; 0x6104 <__addsf3x>
    60e8:	27 c2       	rjmp	.+1102   	; 0x6538 <__fp_round>
    60ea:	f0 d1       	rcall	.+992    	; 0x64cc <__fp_pscA>
    60ec:	30 f0       	brcs	.+12     	; 0x60fa <__addsf3+0x18>
    60ee:	f5 d1       	rcall	.+1002   	; 0x64da <__fp_pscB>
    60f0:	20 f0       	brcs	.+8      	; 0x60fa <__addsf3+0x18>
    60f2:	31 f4       	brne	.+12     	; 0x6100 <__addsf3+0x1e>
    60f4:	9f 3f       	cpi	r25, 0xFF	; 255
    60f6:	11 f4       	brne	.+4      	; 0x60fc <__addsf3+0x1a>
    60f8:	1e f4       	brtc	.+6      	; 0x6100 <__addsf3+0x1e>
    60fa:	c0 c1       	rjmp	.+896    	; 0x647c <__fp_nan>
    60fc:	0e f4       	brtc	.+2      	; 0x6100 <__addsf3+0x1e>
    60fe:	e0 95       	com	r30
    6100:	e7 fb       	bst	r30, 7
    6102:	b6 c1       	rjmp	.+876    	; 0x6470 <__fp_inf>

00006104 <__addsf3x>:
    6104:	e9 2f       	mov	r30, r25
    6106:	3a d2       	rcall	.+1140   	; 0x657c <__fp_split3>
    6108:	80 f3       	brcs	.-32     	; 0x60ea <__addsf3+0x8>
    610a:	ba 17       	cp	r27, r26
    610c:	62 07       	cpc	r22, r18
    610e:	73 07       	cpc	r23, r19
    6110:	84 07       	cpc	r24, r20
    6112:	95 07       	cpc	r25, r21
    6114:	18 f0       	brcs	.+6      	; 0x611c <__addsf3x+0x18>
    6116:	71 f4       	brne	.+28     	; 0x6134 <__addsf3x+0x30>
    6118:	9e f5       	brtc	.+102    	; 0x6180 <__addsf3x+0x7c>
    611a:	52 c2       	rjmp	.+1188   	; 0x65c0 <__fp_zero>
    611c:	0e f4       	brtc	.+2      	; 0x6120 <__addsf3x+0x1c>
    611e:	e0 95       	com	r30
    6120:	0b 2e       	mov	r0, r27
    6122:	ba 2f       	mov	r27, r26
    6124:	a0 2d       	mov	r26, r0
    6126:	0b 01       	movw	r0, r22
    6128:	b9 01       	movw	r22, r18
    612a:	90 01       	movw	r18, r0
    612c:	0c 01       	movw	r0, r24
    612e:	ca 01       	movw	r24, r20
    6130:	a0 01       	movw	r20, r0
    6132:	11 24       	eor	r1, r1
    6134:	ff 27       	eor	r31, r31
    6136:	59 1b       	sub	r21, r25
    6138:	99 f0       	breq	.+38     	; 0x6160 <__addsf3x+0x5c>
    613a:	59 3f       	cpi	r21, 0xF9	; 249
    613c:	50 f4       	brcc	.+20     	; 0x6152 <__addsf3x+0x4e>
    613e:	50 3e       	cpi	r21, 0xE0	; 224
    6140:	68 f1       	brcs	.+90     	; 0x619c <__addsf3x+0x98>
    6142:	1a 16       	cp	r1, r26
    6144:	f0 40       	sbci	r31, 0x00	; 0
    6146:	a2 2f       	mov	r26, r18
    6148:	23 2f       	mov	r18, r19
    614a:	34 2f       	mov	r19, r20
    614c:	44 27       	eor	r20, r20
    614e:	58 5f       	subi	r21, 0xF8	; 248
    6150:	f3 cf       	rjmp	.-26     	; 0x6138 <__addsf3x+0x34>
    6152:	46 95       	lsr	r20
    6154:	37 95       	ror	r19
    6156:	27 95       	ror	r18
    6158:	a7 95       	ror	r26
    615a:	f0 40       	sbci	r31, 0x00	; 0
    615c:	53 95       	inc	r21
    615e:	c9 f7       	brne	.-14     	; 0x6152 <__addsf3x+0x4e>
    6160:	7e f4       	brtc	.+30     	; 0x6180 <__addsf3x+0x7c>
    6162:	1f 16       	cp	r1, r31
    6164:	ba 0b       	sbc	r27, r26
    6166:	62 0b       	sbc	r22, r18
    6168:	73 0b       	sbc	r23, r19
    616a:	84 0b       	sbc	r24, r20
    616c:	ba f0       	brmi	.+46     	; 0x619c <__addsf3x+0x98>
    616e:	91 50       	subi	r25, 0x01	; 1
    6170:	a1 f0       	breq	.+40     	; 0x619a <__addsf3x+0x96>
    6172:	ff 0f       	add	r31, r31
    6174:	bb 1f       	adc	r27, r27
    6176:	66 1f       	adc	r22, r22
    6178:	77 1f       	adc	r23, r23
    617a:	88 1f       	adc	r24, r24
    617c:	c2 f7       	brpl	.-16     	; 0x616e <__addsf3x+0x6a>
    617e:	0e c0       	rjmp	.+28     	; 0x619c <__addsf3x+0x98>
    6180:	ba 0f       	add	r27, r26
    6182:	62 1f       	adc	r22, r18
    6184:	73 1f       	adc	r23, r19
    6186:	84 1f       	adc	r24, r20
    6188:	48 f4       	brcc	.+18     	; 0x619c <__addsf3x+0x98>
    618a:	87 95       	ror	r24
    618c:	77 95       	ror	r23
    618e:	67 95       	ror	r22
    6190:	b7 95       	ror	r27
    6192:	f7 95       	ror	r31
    6194:	9e 3f       	cpi	r25, 0xFE	; 254
    6196:	08 f0       	brcs	.+2      	; 0x619a <__addsf3x+0x96>
    6198:	b3 cf       	rjmp	.-154    	; 0x6100 <__addsf3+0x1e>
    619a:	93 95       	inc	r25
    619c:	88 0f       	add	r24, r24
    619e:	08 f0       	brcs	.+2      	; 0x61a2 <__addsf3x+0x9e>
    61a0:	99 27       	eor	r25, r25
    61a2:	ee 0f       	add	r30, r30
    61a4:	97 95       	ror	r25
    61a6:	87 95       	ror	r24
    61a8:	08 95       	ret
    61aa:	90 d1       	rcall	.+800    	; 0x64cc <__fp_pscA>
    61ac:	58 f0       	brcs	.+22     	; 0x61c4 <__addsf3x+0xc0>
    61ae:	80 e8       	ldi	r24, 0x80	; 128
    61b0:	91 e0       	ldi	r25, 0x01	; 1
    61b2:	09 f4       	brne	.+2      	; 0x61b6 <__addsf3x+0xb2>
    61b4:	9e ef       	ldi	r25, 0xFE	; 254
    61b6:	91 d1       	rcall	.+802    	; 0x64da <__fp_pscB>
    61b8:	28 f0       	brcs	.+10     	; 0x61c4 <__addsf3x+0xc0>
    61ba:	40 e8       	ldi	r20, 0x80	; 128
    61bc:	51 e0       	ldi	r21, 0x01	; 1
    61be:	59 f4       	brne	.+22     	; 0x61d6 <atan2+0xe>
    61c0:	5e ef       	ldi	r21, 0xFE	; 254
    61c2:	09 c0       	rjmp	.+18     	; 0x61d6 <atan2+0xe>
    61c4:	5b c1       	rjmp	.+694    	; 0x647c <__fp_nan>
    61c6:	fc c1       	rjmp	.+1016   	; 0x65c0 <__fp_zero>

000061c8 <atan2>:
    61c8:	e9 2f       	mov	r30, r25
    61ca:	e0 78       	andi	r30, 0x80	; 128
    61cc:	d7 d1       	rcall	.+942    	; 0x657c <__fp_split3>
    61ce:	68 f3       	brcs	.-38     	; 0x61aa <__addsf3x+0xa6>
    61d0:	09 2e       	mov	r0, r25
    61d2:	05 2a       	or	r0, r21
    61d4:	c1 f3       	breq	.-16     	; 0x61c6 <__addsf3x+0xc2>
    61d6:	26 17       	cp	r18, r22
    61d8:	37 07       	cpc	r19, r23
    61da:	48 07       	cpc	r20, r24
    61dc:	59 07       	cpc	r21, r25
    61de:	38 f0       	brcs	.+14     	; 0x61ee <atan2+0x26>
    61e0:	0e 2e       	mov	r0, r30
    61e2:	07 f8       	bld	r0, 7
    61e4:	e0 25       	eor	r30, r0
    61e6:	69 f0       	breq	.+26     	; 0x6202 <atan2+0x3a>
    61e8:	e0 25       	eor	r30, r0
    61ea:	e0 64       	ori	r30, 0x40	; 64
    61ec:	0a c0       	rjmp	.+20     	; 0x6202 <atan2+0x3a>
    61ee:	ef 63       	ori	r30, 0x3F	; 63
    61f0:	07 f8       	bld	r0, 7
    61f2:	00 94       	com	r0
    61f4:	07 fa       	bst	r0, 7
    61f6:	db 01       	movw	r26, r22
    61f8:	b9 01       	movw	r22, r18
    61fa:	9d 01       	movw	r18, r26
    61fc:	dc 01       	movw	r26, r24
    61fe:	ca 01       	movw	r24, r20
    6200:	ad 01       	movw	r20, r26
    6202:	ef 93       	push	r30
    6204:	4a d0       	rcall	.+148    	; 0x629a <__divsf3_pse>
    6206:	98 d1       	rcall	.+816    	; 0x6538 <__fp_round>
    6208:	0a d0       	rcall	.+20     	; 0x621e <atan>
    620a:	5f 91       	pop	r21
    620c:	55 23       	and	r21, r21
    620e:	31 f0       	breq	.+12     	; 0x621c <atan2+0x54>
    6210:	2b ed       	ldi	r18, 0xDB	; 219
    6212:	3f e0       	ldi	r19, 0x0F	; 15
    6214:	49 e4       	ldi	r20, 0x49	; 73
    6216:	50 fd       	sbrc	r21, 0
    6218:	49 ec       	ldi	r20, 0xC9	; 201
    621a:	63 cf       	rjmp	.-314    	; 0x60e2 <__addsf3>
    621c:	08 95       	ret

0000621e <atan>:
    621e:	df 93       	push	r29
    6220:	dd 27       	eor	r29, r29
    6222:	b9 2f       	mov	r27, r25
    6224:	bf 77       	andi	r27, 0x7F	; 127
    6226:	40 e8       	ldi	r20, 0x80	; 128
    6228:	5f e3       	ldi	r21, 0x3F	; 63
    622a:	16 16       	cp	r1, r22
    622c:	17 06       	cpc	r1, r23
    622e:	48 07       	cpc	r20, r24
    6230:	5b 07       	cpc	r21, r27
    6232:	10 f4       	brcc	.+4      	; 0x6238 <atan+0x1a>
    6234:	d9 2f       	mov	r29, r25
    6236:	cf d1       	rcall	.+926    	; 0x65d6 <inverse>
    6238:	9f 93       	push	r25
    623a:	8f 93       	push	r24
    623c:	7f 93       	push	r23
    623e:	6f 93       	push	r22
    6240:	7c d2       	rcall	.+1272   	; 0x673a <square>
    6242:	e0 eb       	ldi	r30, 0xB0	; 176
    6244:	f0 e0       	ldi	r31, 0x00	; 0
    6246:	1d d1       	rcall	.+570    	; 0x6482 <__fp_powser>
    6248:	77 d1       	rcall	.+750    	; 0x6538 <__fp_round>
    624a:	2f 91       	pop	r18
    624c:	3f 91       	pop	r19
    624e:	4f 91       	pop	r20
    6250:	5f 91       	pop	r21
    6252:	d4 d1       	rcall	.+936    	; 0x65fc <__mulsf3x>
    6254:	dd 23       	and	r29, r29
    6256:	49 f0       	breq	.+18     	; 0x626a <atan+0x4c>
    6258:	90 58       	subi	r25, 0x80	; 128
    625a:	a2 ea       	ldi	r26, 0xA2	; 162
    625c:	2a ed       	ldi	r18, 0xDA	; 218
    625e:	3f e0       	ldi	r19, 0x0F	; 15
    6260:	49 ec       	ldi	r20, 0xC9	; 201
    6262:	5f e3       	ldi	r21, 0x3F	; 63
    6264:	d0 78       	andi	r29, 0x80	; 128
    6266:	5d 27       	eor	r21, r29
    6268:	4d df       	rcall	.-358    	; 0x6104 <__addsf3x>
    626a:	df 91       	pop	r29
    626c:	65 c1       	rjmp	.+714    	; 0x6538 <__fp_round>

0000626e <__cmpsf2>:
    626e:	dc d0       	rcall	.+440    	; 0x6428 <__fp_cmp>
    6270:	08 f4       	brcc	.+2      	; 0x6274 <__cmpsf2+0x6>
    6272:	81 e0       	ldi	r24, 0x01	; 1
    6274:	08 95       	ret

00006276 <cos>:
    6276:	39 d1       	rcall	.+626    	; 0x64ea <__fp_rempio2>
    6278:	e3 95       	inc	r30
    627a:	6f c1       	rjmp	.+734    	; 0x655a <__fp_sinus>

0000627c <__divsf3>:
    627c:	0c d0       	rcall	.+24     	; 0x6296 <__divsf3x>
    627e:	5c c1       	rjmp	.+696    	; 0x6538 <__fp_round>
    6280:	2c d1       	rcall	.+600    	; 0x64da <__fp_pscB>
    6282:	40 f0       	brcs	.+16     	; 0x6294 <__divsf3+0x18>
    6284:	23 d1       	rcall	.+582    	; 0x64cc <__fp_pscA>
    6286:	30 f0       	brcs	.+12     	; 0x6294 <__divsf3+0x18>
    6288:	21 f4       	brne	.+8      	; 0x6292 <__divsf3+0x16>
    628a:	5f 3f       	cpi	r21, 0xFF	; 255
    628c:	19 f0       	breq	.+6      	; 0x6294 <__divsf3+0x18>
    628e:	f0 c0       	rjmp	.+480    	; 0x6470 <__fp_inf>
    6290:	51 11       	cpse	r21, r1
    6292:	97 c1       	rjmp	.+814    	; 0x65c2 <__fp_szero>
    6294:	f3 c0       	rjmp	.+486    	; 0x647c <__fp_nan>

00006296 <__divsf3x>:
    6296:	72 d1       	rcall	.+740    	; 0x657c <__fp_split3>
    6298:	98 f3       	brcs	.-26     	; 0x6280 <__divsf3+0x4>

0000629a <__divsf3_pse>:
    629a:	99 23       	and	r25, r25
    629c:	c9 f3       	breq	.-14     	; 0x6290 <__divsf3+0x14>
    629e:	55 23       	and	r21, r21
    62a0:	b1 f3       	breq	.-20     	; 0x628e <__divsf3+0x12>
    62a2:	95 1b       	sub	r25, r21
    62a4:	55 0b       	sbc	r21, r21
    62a6:	bb 27       	eor	r27, r27
    62a8:	aa 27       	eor	r26, r26
    62aa:	62 17       	cp	r22, r18
    62ac:	73 07       	cpc	r23, r19
    62ae:	84 07       	cpc	r24, r20
    62b0:	38 f0       	brcs	.+14     	; 0x62c0 <__divsf3_pse+0x26>
    62b2:	9f 5f       	subi	r25, 0xFF	; 255
    62b4:	5f 4f       	sbci	r21, 0xFF	; 255
    62b6:	22 0f       	add	r18, r18
    62b8:	33 1f       	adc	r19, r19
    62ba:	44 1f       	adc	r20, r20
    62bc:	aa 1f       	adc	r26, r26
    62be:	a9 f3       	breq	.-22     	; 0x62aa <__divsf3_pse+0x10>
    62c0:	33 d0       	rcall	.+102    	; 0x6328 <__divsf3_pse+0x8e>
    62c2:	0e 2e       	mov	r0, r30
    62c4:	3a f0       	brmi	.+14     	; 0x62d4 <__divsf3_pse+0x3a>
    62c6:	e0 e8       	ldi	r30, 0x80	; 128
    62c8:	30 d0       	rcall	.+96     	; 0x632a <__divsf3_pse+0x90>
    62ca:	91 50       	subi	r25, 0x01	; 1
    62cc:	50 40       	sbci	r21, 0x00	; 0
    62ce:	e6 95       	lsr	r30
    62d0:	00 1c       	adc	r0, r0
    62d2:	ca f7       	brpl	.-14     	; 0x62c6 <__divsf3_pse+0x2c>
    62d4:	29 d0       	rcall	.+82     	; 0x6328 <__divsf3_pse+0x8e>
    62d6:	fe 2f       	mov	r31, r30
    62d8:	27 d0       	rcall	.+78     	; 0x6328 <__divsf3_pse+0x8e>
    62da:	66 0f       	add	r22, r22
    62dc:	77 1f       	adc	r23, r23
    62de:	88 1f       	adc	r24, r24
    62e0:	bb 1f       	adc	r27, r27
    62e2:	26 17       	cp	r18, r22
    62e4:	37 07       	cpc	r19, r23
    62e6:	48 07       	cpc	r20, r24
    62e8:	ab 07       	cpc	r26, r27
    62ea:	b0 e8       	ldi	r27, 0x80	; 128
    62ec:	09 f0       	breq	.+2      	; 0x62f0 <__divsf3_pse+0x56>
    62ee:	bb 0b       	sbc	r27, r27
    62f0:	80 2d       	mov	r24, r0
    62f2:	bf 01       	movw	r22, r30
    62f4:	ff 27       	eor	r31, r31
    62f6:	93 58       	subi	r25, 0x83	; 131
    62f8:	5f 4f       	sbci	r21, 0xFF	; 255
    62fa:	2a f0       	brmi	.+10     	; 0x6306 <__divsf3_pse+0x6c>
    62fc:	9e 3f       	cpi	r25, 0xFE	; 254
    62fe:	51 05       	cpc	r21, r1
    6300:	68 f0       	brcs	.+26     	; 0x631c <__divsf3_pse+0x82>
    6302:	b6 c0       	rjmp	.+364    	; 0x6470 <__fp_inf>
    6304:	5e c1       	rjmp	.+700    	; 0x65c2 <__fp_szero>
    6306:	5f 3f       	cpi	r21, 0xFF	; 255
    6308:	ec f3       	brlt	.-6      	; 0x6304 <__divsf3_pse+0x6a>
    630a:	98 3e       	cpi	r25, 0xE8	; 232
    630c:	dc f3       	brlt	.-10     	; 0x6304 <__divsf3_pse+0x6a>
    630e:	86 95       	lsr	r24
    6310:	77 95       	ror	r23
    6312:	67 95       	ror	r22
    6314:	b7 95       	ror	r27
    6316:	f7 95       	ror	r31
    6318:	9f 5f       	subi	r25, 0xFF	; 255
    631a:	c9 f7       	brne	.-14     	; 0x630e <__divsf3_pse+0x74>
    631c:	88 0f       	add	r24, r24
    631e:	91 1d       	adc	r25, r1
    6320:	96 95       	lsr	r25
    6322:	87 95       	ror	r24
    6324:	97 f9       	bld	r25, 7
    6326:	08 95       	ret
    6328:	e1 e0       	ldi	r30, 0x01	; 1
    632a:	66 0f       	add	r22, r22
    632c:	77 1f       	adc	r23, r23
    632e:	88 1f       	adc	r24, r24
    6330:	bb 1f       	adc	r27, r27
    6332:	62 17       	cp	r22, r18
    6334:	73 07       	cpc	r23, r19
    6336:	84 07       	cpc	r24, r20
    6338:	ba 07       	cpc	r27, r26
    633a:	20 f0       	brcs	.+8      	; 0x6344 <__divsf3_pse+0xaa>
    633c:	62 1b       	sub	r22, r18
    633e:	73 0b       	sbc	r23, r19
    6340:	84 0b       	sbc	r24, r20
    6342:	ba 0b       	sbc	r27, r26
    6344:	ee 1f       	adc	r30, r30
    6346:	88 f7       	brcc	.-30     	; 0x632a <__divsf3_pse+0x90>
    6348:	e0 95       	com	r30
    634a:	08 95       	ret

0000634c <__fixsfsi>:
    634c:	04 d0       	rcall	.+8      	; 0x6356 <__fixunssfsi>
    634e:	68 94       	set
    6350:	b1 11       	cpse	r27, r1
    6352:	37 c1       	rjmp	.+622    	; 0x65c2 <__fp_szero>
    6354:	08 95       	ret

00006356 <__fixunssfsi>:
    6356:	1a d1       	rcall	.+564    	; 0x658c <__fp_splitA>
    6358:	88 f0       	brcs	.+34     	; 0x637c <__fixunssfsi+0x26>
    635a:	9f 57       	subi	r25, 0x7F	; 127
    635c:	90 f0       	brcs	.+36     	; 0x6382 <__fixunssfsi+0x2c>
    635e:	b9 2f       	mov	r27, r25
    6360:	99 27       	eor	r25, r25
    6362:	b7 51       	subi	r27, 0x17	; 23
    6364:	a0 f0       	brcs	.+40     	; 0x638e <__fixunssfsi+0x38>
    6366:	d1 f0       	breq	.+52     	; 0x639c <__fixunssfsi+0x46>
    6368:	66 0f       	add	r22, r22
    636a:	77 1f       	adc	r23, r23
    636c:	88 1f       	adc	r24, r24
    636e:	99 1f       	adc	r25, r25
    6370:	1a f0       	brmi	.+6      	; 0x6378 <__fixunssfsi+0x22>
    6372:	ba 95       	dec	r27
    6374:	c9 f7       	brne	.-14     	; 0x6368 <__fixunssfsi+0x12>
    6376:	12 c0       	rjmp	.+36     	; 0x639c <__fixunssfsi+0x46>
    6378:	b1 30       	cpi	r27, 0x01	; 1
    637a:	81 f0       	breq	.+32     	; 0x639c <__fixunssfsi+0x46>
    637c:	21 d1       	rcall	.+578    	; 0x65c0 <__fp_zero>
    637e:	b1 e0       	ldi	r27, 0x01	; 1
    6380:	08 95       	ret
    6382:	1e c1       	rjmp	.+572    	; 0x65c0 <__fp_zero>
    6384:	67 2f       	mov	r22, r23
    6386:	78 2f       	mov	r23, r24
    6388:	88 27       	eor	r24, r24
    638a:	b8 5f       	subi	r27, 0xF8	; 248
    638c:	39 f0       	breq	.+14     	; 0x639c <__fixunssfsi+0x46>
    638e:	b9 3f       	cpi	r27, 0xF9	; 249
    6390:	cc f3       	brlt	.-14     	; 0x6384 <__fixunssfsi+0x2e>
    6392:	86 95       	lsr	r24
    6394:	77 95       	ror	r23
    6396:	67 95       	ror	r22
    6398:	b3 95       	inc	r27
    639a:	d9 f7       	brne	.-10     	; 0x6392 <__fixunssfsi+0x3c>
    639c:	3e f4       	brtc	.+14     	; 0x63ac <__fixunssfsi+0x56>
    639e:	90 95       	com	r25
    63a0:	80 95       	com	r24
    63a2:	70 95       	com	r23
    63a4:	61 95       	neg	r22
    63a6:	7f 4f       	sbci	r23, 0xFF	; 255
    63a8:	8f 4f       	sbci	r24, 0xFF	; 255
    63aa:	9f 4f       	sbci	r25, 0xFF	; 255
    63ac:	08 95       	ret

000063ae <__floatunsisf>:
    63ae:	e8 94       	clt
    63b0:	09 c0       	rjmp	.+18     	; 0x63c4 <__floatsisf+0x12>

000063b2 <__floatsisf>:
    63b2:	97 fb       	bst	r25, 7
    63b4:	3e f4       	brtc	.+14     	; 0x63c4 <__floatsisf+0x12>
    63b6:	90 95       	com	r25
    63b8:	80 95       	com	r24
    63ba:	70 95       	com	r23
    63bc:	61 95       	neg	r22
    63be:	7f 4f       	sbci	r23, 0xFF	; 255
    63c0:	8f 4f       	sbci	r24, 0xFF	; 255
    63c2:	9f 4f       	sbci	r25, 0xFF	; 255
    63c4:	99 23       	and	r25, r25
    63c6:	a9 f0       	breq	.+42     	; 0x63f2 <__floatsisf+0x40>
    63c8:	f9 2f       	mov	r31, r25
    63ca:	96 e9       	ldi	r25, 0x96	; 150
    63cc:	bb 27       	eor	r27, r27
    63ce:	93 95       	inc	r25
    63d0:	f6 95       	lsr	r31
    63d2:	87 95       	ror	r24
    63d4:	77 95       	ror	r23
    63d6:	67 95       	ror	r22
    63d8:	b7 95       	ror	r27
    63da:	f1 11       	cpse	r31, r1
    63dc:	f8 cf       	rjmp	.-16     	; 0x63ce <__floatsisf+0x1c>
    63de:	fa f4       	brpl	.+62     	; 0x641e <__floatsisf+0x6c>
    63e0:	bb 0f       	add	r27, r27
    63e2:	11 f4       	brne	.+4      	; 0x63e8 <__floatsisf+0x36>
    63e4:	60 ff       	sbrs	r22, 0
    63e6:	1b c0       	rjmp	.+54     	; 0x641e <__floatsisf+0x6c>
    63e8:	6f 5f       	subi	r22, 0xFF	; 255
    63ea:	7f 4f       	sbci	r23, 0xFF	; 255
    63ec:	8f 4f       	sbci	r24, 0xFF	; 255
    63ee:	9f 4f       	sbci	r25, 0xFF	; 255
    63f0:	16 c0       	rjmp	.+44     	; 0x641e <__floatsisf+0x6c>
    63f2:	88 23       	and	r24, r24
    63f4:	11 f0       	breq	.+4      	; 0x63fa <__floatsisf+0x48>
    63f6:	96 e9       	ldi	r25, 0x96	; 150
    63f8:	11 c0       	rjmp	.+34     	; 0x641c <__floatsisf+0x6a>
    63fa:	77 23       	and	r23, r23
    63fc:	21 f0       	breq	.+8      	; 0x6406 <__floatsisf+0x54>
    63fe:	9e e8       	ldi	r25, 0x8E	; 142
    6400:	87 2f       	mov	r24, r23
    6402:	76 2f       	mov	r23, r22
    6404:	05 c0       	rjmp	.+10     	; 0x6410 <__floatsisf+0x5e>
    6406:	66 23       	and	r22, r22
    6408:	71 f0       	breq	.+28     	; 0x6426 <__floatsisf+0x74>
    640a:	96 e8       	ldi	r25, 0x86	; 134
    640c:	86 2f       	mov	r24, r22
    640e:	70 e0       	ldi	r23, 0x00	; 0
    6410:	60 e0       	ldi	r22, 0x00	; 0
    6412:	2a f0       	brmi	.+10     	; 0x641e <__floatsisf+0x6c>
    6414:	9a 95       	dec	r25
    6416:	66 0f       	add	r22, r22
    6418:	77 1f       	adc	r23, r23
    641a:	88 1f       	adc	r24, r24
    641c:	da f7       	brpl	.-10     	; 0x6414 <__floatsisf+0x62>
    641e:	88 0f       	add	r24, r24
    6420:	96 95       	lsr	r25
    6422:	87 95       	ror	r24
    6424:	97 f9       	bld	r25, 7
    6426:	08 95       	ret

00006428 <__fp_cmp>:
    6428:	99 0f       	add	r25, r25
    642a:	00 08       	sbc	r0, r0
    642c:	55 0f       	add	r21, r21
    642e:	aa 0b       	sbc	r26, r26
    6430:	e0 e8       	ldi	r30, 0x80	; 128
    6432:	fe ef       	ldi	r31, 0xFE	; 254
    6434:	16 16       	cp	r1, r22
    6436:	17 06       	cpc	r1, r23
    6438:	e8 07       	cpc	r30, r24
    643a:	f9 07       	cpc	r31, r25
    643c:	c0 f0       	brcs	.+48     	; 0x646e <__fp_cmp+0x46>
    643e:	12 16       	cp	r1, r18
    6440:	13 06       	cpc	r1, r19
    6442:	e4 07       	cpc	r30, r20
    6444:	f5 07       	cpc	r31, r21
    6446:	98 f0       	brcs	.+38     	; 0x646e <__fp_cmp+0x46>
    6448:	62 1b       	sub	r22, r18
    644a:	73 0b       	sbc	r23, r19
    644c:	84 0b       	sbc	r24, r20
    644e:	95 0b       	sbc	r25, r21
    6450:	39 f4       	brne	.+14     	; 0x6460 <__fp_cmp+0x38>
    6452:	0a 26       	eor	r0, r26
    6454:	61 f0       	breq	.+24     	; 0x646e <__fp_cmp+0x46>
    6456:	23 2b       	or	r18, r19
    6458:	24 2b       	or	r18, r20
    645a:	25 2b       	or	r18, r21
    645c:	21 f4       	brne	.+8      	; 0x6466 <__fp_cmp+0x3e>
    645e:	08 95       	ret
    6460:	0a 26       	eor	r0, r26
    6462:	09 f4       	brne	.+2      	; 0x6466 <__fp_cmp+0x3e>
    6464:	a1 40       	sbci	r26, 0x01	; 1
    6466:	a6 95       	lsr	r26
    6468:	8f ef       	ldi	r24, 0xFF	; 255
    646a:	81 1d       	adc	r24, r1
    646c:	81 1d       	adc	r24, r1
    646e:	08 95       	ret

00006470 <__fp_inf>:
    6470:	97 f9       	bld	r25, 7
    6472:	9f 67       	ori	r25, 0x7F	; 127
    6474:	80 e8       	ldi	r24, 0x80	; 128
    6476:	70 e0       	ldi	r23, 0x00	; 0
    6478:	60 e0       	ldi	r22, 0x00	; 0
    647a:	08 95       	ret

0000647c <__fp_nan>:
    647c:	9f ef       	ldi	r25, 0xFF	; 255
    647e:	80 ec       	ldi	r24, 0xC0	; 192
    6480:	08 95       	ret

00006482 <__fp_powser>:
    6482:	df 93       	push	r29
    6484:	cf 93       	push	r28
    6486:	1f 93       	push	r17
    6488:	0f 93       	push	r16
    648a:	ff 92       	push	r15
    648c:	ef 92       	push	r14
    648e:	df 92       	push	r13
    6490:	7b 01       	movw	r14, r22
    6492:	8c 01       	movw	r16, r24
    6494:	68 94       	set
    6496:	05 c0       	rjmp	.+10     	; 0x64a2 <__fp_powser+0x20>
    6498:	da 2e       	mov	r13, r26
    649a:	ef 01       	movw	r28, r30
    649c:	af d0       	rcall	.+350    	; 0x65fc <__mulsf3x>
    649e:	fe 01       	movw	r30, r28
    64a0:	e8 94       	clt
    64a2:	a5 91       	lpm	r26, Z+
    64a4:	25 91       	lpm	r18, Z+
    64a6:	35 91       	lpm	r19, Z+
    64a8:	45 91       	lpm	r20, Z+
    64aa:	55 91       	lpm	r21, Z+
    64ac:	ae f3       	brts	.-22     	; 0x6498 <__fp_powser+0x16>
    64ae:	ef 01       	movw	r28, r30
    64b0:	29 de       	rcall	.-942    	; 0x6104 <__addsf3x>
    64b2:	fe 01       	movw	r30, r28
    64b4:	97 01       	movw	r18, r14
    64b6:	a8 01       	movw	r20, r16
    64b8:	da 94       	dec	r13
    64ba:	79 f7       	brne	.-34     	; 0x649a <__fp_powser+0x18>
    64bc:	df 90       	pop	r13
    64be:	ef 90       	pop	r14
    64c0:	ff 90       	pop	r15
    64c2:	0f 91       	pop	r16
    64c4:	1f 91       	pop	r17
    64c6:	cf 91       	pop	r28
    64c8:	df 91       	pop	r29
    64ca:	08 95       	ret

000064cc <__fp_pscA>:
    64cc:	00 24       	eor	r0, r0
    64ce:	0a 94       	dec	r0
    64d0:	16 16       	cp	r1, r22
    64d2:	17 06       	cpc	r1, r23
    64d4:	18 06       	cpc	r1, r24
    64d6:	09 06       	cpc	r0, r25
    64d8:	08 95       	ret

000064da <__fp_pscB>:
    64da:	00 24       	eor	r0, r0
    64dc:	0a 94       	dec	r0
    64de:	12 16       	cp	r1, r18
    64e0:	13 06       	cpc	r1, r19
    64e2:	14 06       	cpc	r1, r20
    64e4:	05 06       	cpc	r0, r21
    64e6:	08 95       	ret
    64e8:	c9 cf       	rjmp	.-110    	; 0x647c <__fp_nan>

000064ea <__fp_rempio2>:
    64ea:	50 d0       	rcall	.+160    	; 0x658c <__fp_splitA>
    64ec:	e8 f3       	brcs	.-6      	; 0x64e8 <__fp_pscB+0xe>
    64ee:	e8 94       	clt
    64f0:	e0 e0       	ldi	r30, 0x00	; 0
    64f2:	bb 27       	eor	r27, r27
    64f4:	9f 57       	subi	r25, 0x7F	; 127
    64f6:	f0 f0       	brcs	.+60     	; 0x6534 <__fp_rempio2+0x4a>
    64f8:	2a ed       	ldi	r18, 0xDA	; 218
    64fa:	3f e0       	ldi	r19, 0x0F	; 15
    64fc:	49 ec       	ldi	r20, 0xC9	; 201
    64fe:	06 c0       	rjmp	.+12     	; 0x650c <__fp_rempio2+0x22>
    6500:	ee 0f       	add	r30, r30
    6502:	bb 0f       	add	r27, r27
    6504:	66 1f       	adc	r22, r22
    6506:	77 1f       	adc	r23, r23
    6508:	88 1f       	adc	r24, r24
    650a:	28 f0       	brcs	.+10     	; 0x6516 <__fp_rempio2+0x2c>
    650c:	b2 3a       	cpi	r27, 0xA2	; 162
    650e:	62 07       	cpc	r22, r18
    6510:	73 07       	cpc	r23, r19
    6512:	84 07       	cpc	r24, r20
    6514:	28 f0       	brcs	.+10     	; 0x6520 <__fp_rempio2+0x36>
    6516:	b2 5a       	subi	r27, 0xA2	; 162
    6518:	62 0b       	sbc	r22, r18
    651a:	73 0b       	sbc	r23, r19
    651c:	84 0b       	sbc	r24, r20
    651e:	e3 95       	inc	r30
    6520:	9a 95       	dec	r25
    6522:	72 f7       	brpl	.-36     	; 0x6500 <__fp_rempio2+0x16>
    6524:	80 38       	cpi	r24, 0x80	; 128
    6526:	30 f4       	brcc	.+12     	; 0x6534 <__fp_rempio2+0x4a>
    6528:	9a 95       	dec	r25
    652a:	bb 0f       	add	r27, r27
    652c:	66 1f       	adc	r22, r22
    652e:	77 1f       	adc	r23, r23
    6530:	88 1f       	adc	r24, r24
    6532:	d2 f7       	brpl	.-12     	; 0x6528 <__fp_rempio2+0x3e>
    6534:	90 48       	sbci	r25, 0x80	; 128
    6536:	26 c1       	rjmp	.+588    	; 0x6784 <__fp_mpack_finite>

00006538 <__fp_round>:
    6538:	09 2e       	mov	r0, r25
    653a:	03 94       	inc	r0
    653c:	00 0c       	add	r0, r0
    653e:	11 f4       	brne	.+4      	; 0x6544 <__fp_round+0xc>
    6540:	88 23       	and	r24, r24
    6542:	52 f0       	brmi	.+20     	; 0x6558 <__fp_round+0x20>
    6544:	bb 0f       	add	r27, r27
    6546:	40 f4       	brcc	.+16     	; 0x6558 <__fp_round+0x20>
    6548:	bf 2b       	or	r27, r31
    654a:	11 f4       	brne	.+4      	; 0x6550 <__fp_round+0x18>
    654c:	60 ff       	sbrs	r22, 0
    654e:	04 c0       	rjmp	.+8      	; 0x6558 <__fp_round+0x20>
    6550:	6f 5f       	subi	r22, 0xFF	; 255
    6552:	7f 4f       	sbci	r23, 0xFF	; 255
    6554:	8f 4f       	sbci	r24, 0xFF	; 255
    6556:	9f 4f       	sbci	r25, 0xFF	; 255
    6558:	08 95       	ret

0000655a <__fp_sinus>:
    655a:	ef 93       	push	r30
    655c:	e0 ff       	sbrs	r30, 0
    655e:	06 c0       	rjmp	.+12     	; 0x656c <__fp_sinus+0x12>
    6560:	a2 ea       	ldi	r26, 0xA2	; 162
    6562:	2a ed       	ldi	r18, 0xDA	; 218
    6564:	3f e0       	ldi	r19, 0x0F	; 15
    6566:	49 ec       	ldi	r20, 0xC9	; 201
    6568:	5f eb       	ldi	r21, 0xBF	; 191
    656a:	cc dd       	rcall	.-1128   	; 0x6104 <__addsf3x>
    656c:	e5 df       	rcall	.-54     	; 0x6538 <__fp_round>
    656e:	0f 90       	pop	r0
    6570:	03 94       	inc	r0
    6572:	01 fc       	sbrc	r0, 1
    6574:	90 58       	subi	r25, 0x80	; 128
    6576:	ed ed       	ldi	r30, 0xDD	; 221
    6578:	f0 e0       	ldi	r31, 0x00	; 0
    657a:	17 c1       	rjmp	.+558    	; 0x67aa <__fp_powsodd>

0000657c <__fp_split3>:
    657c:	57 fd       	sbrc	r21, 7
    657e:	90 58       	subi	r25, 0x80	; 128
    6580:	44 0f       	add	r20, r20
    6582:	55 1f       	adc	r21, r21
    6584:	59 f0       	breq	.+22     	; 0x659c <__fp_splitA+0x10>
    6586:	5f 3f       	cpi	r21, 0xFF	; 255
    6588:	71 f0       	breq	.+28     	; 0x65a6 <__fp_splitA+0x1a>
    658a:	47 95       	ror	r20

0000658c <__fp_splitA>:
    658c:	88 0f       	add	r24, r24
    658e:	97 fb       	bst	r25, 7
    6590:	99 1f       	adc	r25, r25
    6592:	61 f0       	breq	.+24     	; 0x65ac <__fp_splitA+0x20>
    6594:	9f 3f       	cpi	r25, 0xFF	; 255
    6596:	79 f0       	breq	.+30     	; 0x65b6 <__fp_splitA+0x2a>
    6598:	87 95       	ror	r24
    659a:	08 95       	ret
    659c:	12 16       	cp	r1, r18
    659e:	13 06       	cpc	r1, r19
    65a0:	14 06       	cpc	r1, r20
    65a2:	55 1f       	adc	r21, r21
    65a4:	f2 cf       	rjmp	.-28     	; 0x658a <__fp_split3+0xe>
    65a6:	46 95       	lsr	r20
    65a8:	f1 df       	rcall	.-30     	; 0x658c <__fp_splitA>
    65aa:	08 c0       	rjmp	.+16     	; 0x65bc <__fp_splitA+0x30>
    65ac:	16 16       	cp	r1, r22
    65ae:	17 06       	cpc	r1, r23
    65b0:	18 06       	cpc	r1, r24
    65b2:	99 1f       	adc	r25, r25
    65b4:	f1 cf       	rjmp	.-30     	; 0x6598 <__fp_splitA+0xc>
    65b6:	86 95       	lsr	r24
    65b8:	71 05       	cpc	r23, r1
    65ba:	61 05       	cpc	r22, r1
    65bc:	08 94       	sec
    65be:	08 95       	ret

000065c0 <__fp_zero>:
    65c0:	e8 94       	clt

000065c2 <__fp_szero>:
    65c2:	bb 27       	eor	r27, r27
    65c4:	66 27       	eor	r22, r22
    65c6:	77 27       	eor	r23, r23
    65c8:	cb 01       	movw	r24, r22
    65ca:	97 f9       	bld	r25, 7
    65cc:	08 95       	ret

000065ce <__gesf2>:
    65ce:	2c df       	rcall	.-424    	; 0x6428 <__fp_cmp>
    65d0:	08 f4       	brcc	.+2      	; 0x65d4 <__gesf2+0x6>
    65d2:	8f ef       	ldi	r24, 0xFF	; 255
    65d4:	08 95       	ret

000065d6 <inverse>:
    65d6:	9b 01       	movw	r18, r22
    65d8:	ac 01       	movw	r20, r24
    65da:	60 e0       	ldi	r22, 0x00	; 0
    65dc:	70 e0       	ldi	r23, 0x00	; 0
    65de:	80 e8       	ldi	r24, 0x80	; 128
    65e0:	9f e3       	ldi	r25, 0x3F	; 63
    65e2:	4c ce       	rjmp	.-872    	; 0x627c <__divsf3>

000065e4 <__mulsf3>:
    65e4:	0b d0       	rcall	.+22     	; 0x65fc <__mulsf3x>
    65e6:	a8 cf       	rjmp	.-176    	; 0x6538 <__fp_round>
    65e8:	71 df       	rcall	.-286    	; 0x64cc <__fp_pscA>
    65ea:	28 f0       	brcs	.+10     	; 0x65f6 <__mulsf3+0x12>
    65ec:	76 df       	rcall	.-276    	; 0x64da <__fp_pscB>
    65ee:	18 f0       	brcs	.+6      	; 0x65f6 <__mulsf3+0x12>
    65f0:	95 23       	and	r25, r21
    65f2:	09 f0       	breq	.+2      	; 0x65f6 <__mulsf3+0x12>
    65f4:	3d cf       	rjmp	.-390    	; 0x6470 <__fp_inf>
    65f6:	42 cf       	rjmp	.-380    	; 0x647c <__fp_nan>
    65f8:	11 24       	eor	r1, r1
    65fa:	e3 cf       	rjmp	.-58     	; 0x65c2 <__fp_szero>

000065fc <__mulsf3x>:
    65fc:	bf df       	rcall	.-130    	; 0x657c <__fp_split3>
    65fe:	a0 f3       	brcs	.-24     	; 0x65e8 <__mulsf3+0x4>

00006600 <__mulsf3_pse>:
    6600:	95 9f       	mul	r25, r21
    6602:	d1 f3       	breq	.-12     	; 0x65f8 <__mulsf3+0x14>
    6604:	95 0f       	add	r25, r21
    6606:	50 e0       	ldi	r21, 0x00	; 0
    6608:	55 1f       	adc	r21, r21
    660a:	62 9f       	mul	r22, r18
    660c:	f0 01       	movw	r30, r0
    660e:	72 9f       	mul	r23, r18
    6610:	bb 27       	eor	r27, r27
    6612:	f0 0d       	add	r31, r0
    6614:	b1 1d       	adc	r27, r1
    6616:	63 9f       	mul	r22, r19
    6618:	aa 27       	eor	r26, r26
    661a:	f0 0d       	add	r31, r0
    661c:	b1 1d       	adc	r27, r1
    661e:	aa 1f       	adc	r26, r26
    6620:	64 9f       	mul	r22, r20
    6622:	66 27       	eor	r22, r22
    6624:	b0 0d       	add	r27, r0
    6626:	a1 1d       	adc	r26, r1
    6628:	66 1f       	adc	r22, r22
    662a:	82 9f       	mul	r24, r18
    662c:	22 27       	eor	r18, r18
    662e:	b0 0d       	add	r27, r0
    6630:	a1 1d       	adc	r26, r1
    6632:	62 1f       	adc	r22, r18
    6634:	73 9f       	mul	r23, r19
    6636:	b0 0d       	add	r27, r0
    6638:	a1 1d       	adc	r26, r1
    663a:	62 1f       	adc	r22, r18
    663c:	83 9f       	mul	r24, r19
    663e:	a0 0d       	add	r26, r0
    6640:	61 1d       	adc	r22, r1
    6642:	22 1f       	adc	r18, r18
    6644:	74 9f       	mul	r23, r20
    6646:	33 27       	eor	r19, r19
    6648:	a0 0d       	add	r26, r0
    664a:	61 1d       	adc	r22, r1
    664c:	23 1f       	adc	r18, r19
    664e:	84 9f       	mul	r24, r20
    6650:	60 0d       	add	r22, r0
    6652:	21 1d       	adc	r18, r1
    6654:	82 2f       	mov	r24, r18
    6656:	76 2f       	mov	r23, r22
    6658:	6a 2f       	mov	r22, r26
    665a:	11 24       	eor	r1, r1
    665c:	9f 57       	subi	r25, 0x7F	; 127
    665e:	50 40       	sbci	r21, 0x00	; 0
    6660:	8a f0       	brmi	.+34     	; 0x6684 <__mulsf3_pse+0x84>
    6662:	e1 f0       	breq	.+56     	; 0x669c <__mulsf3_pse+0x9c>
    6664:	88 23       	and	r24, r24
    6666:	4a f0       	brmi	.+18     	; 0x667a <__mulsf3_pse+0x7a>
    6668:	ee 0f       	add	r30, r30
    666a:	ff 1f       	adc	r31, r31
    666c:	bb 1f       	adc	r27, r27
    666e:	66 1f       	adc	r22, r22
    6670:	77 1f       	adc	r23, r23
    6672:	88 1f       	adc	r24, r24
    6674:	91 50       	subi	r25, 0x01	; 1
    6676:	50 40       	sbci	r21, 0x00	; 0
    6678:	a9 f7       	brne	.-22     	; 0x6664 <__mulsf3_pse+0x64>
    667a:	9e 3f       	cpi	r25, 0xFE	; 254
    667c:	51 05       	cpc	r21, r1
    667e:	70 f0       	brcs	.+28     	; 0x669c <__mulsf3_pse+0x9c>
    6680:	f7 ce       	rjmp	.-530    	; 0x6470 <__fp_inf>
    6682:	9f cf       	rjmp	.-194    	; 0x65c2 <__fp_szero>
    6684:	5f 3f       	cpi	r21, 0xFF	; 255
    6686:	ec f3       	brlt	.-6      	; 0x6682 <__mulsf3_pse+0x82>
    6688:	98 3e       	cpi	r25, 0xE8	; 232
    668a:	dc f3       	brlt	.-10     	; 0x6682 <__mulsf3_pse+0x82>
    668c:	86 95       	lsr	r24
    668e:	77 95       	ror	r23
    6690:	67 95       	ror	r22
    6692:	b7 95       	ror	r27
    6694:	f7 95       	ror	r31
    6696:	e7 95       	ror	r30
    6698:	9f 5f       	subi	r25, 0xFF	; 255
    669a:	c1 f7       	brne	.-16     	; 0x668c <__mulsf3_pse+0x8c>
    669c:	fe 2b       	or	r31, r30
    669e:	88 0f       	add	r24, r24
    66a0:	91 1d       	adc	r25, r1
    66a2:	96 95       	lsr	r25
    66a4:	87 95       	ror	r24
    66a6:	97 f9       	bld	r25, 7
    66a8:	08 95       	ret

000066aa <sin>:
    66aa:	9f 93       	push	r25
    66ac:	1e df       	rcall	.-452    	; 0x64ea <__fp_rempio2>
    66ae:	0f 90       	pop	r0
    66b0:	07 fc       	sbrc	r0, 7
    66b2:	ee 5f       	subi	r30, 0xFE	; 254
    66b4:	52 cf       	rjmp	.-348    	; 0x655a <__fp_sinus>
    66b6:	11 f4       	brne	.+4      	; 0x66bc <sin+0x12>
    66b8:	0e f4       	brtc	.+2      	; 0x66bc <sin+0x12>
    66ba:	e0 ce       	rjmp	.-576    	; 0x647c <__fp_nan>
    66bc:	61 c0       	rjmp	.+194    	; 0x6780 <__fp_mpack>

000066be <sqrt>:
    66be:	66 df       	rcall	.-308    	; 0x658c <__fp_splitA>
    66c0:	d0 f3       	brcs	.-12     	; 0x66b6 <sin+0xc>
    66c2:	99 23       	and	r25, r25
    66c4:	d9 f3       	breq	.-10     	; 0x66bc <sin+0x12>
    66c6:	ce f3       	brts	.-14     	; 0x66ba <sin+0x10>
    66c8:	9f 57       	subi	r25, 0x7F	; 127
    66ca:	55 0b       	sbc	r21, r21
    66cc:	87 ff       	sbrs	r24, 7
    66ce:	66 d0       	rcall	.+204    	; 0x679c <__fp_norm2>
    66d0:	00 24       	eor	r0, r0
    66d2:	a0 e6       	ldi	r26, 0x60	; 96
    66d4:	40 ea       	ldi	r20, 0xA0	; 160
    66d6:	90 01       	movw	r18, r0
    66d8:	80 58       	subi	r24, 0x80	; 128
    66da:	56 95       	lsr	r21
    66dc:	97 95       	ror	r25
    66de:	28 f4       	brcc	.+10     	; 0x66ea <sqrt+0x2c>
    66e0:	80 5c       	subi	r24, 0xC0	; 192
    66e2:	66 0f       	add	r22, r22
    66e4:	77 1f       	adc	r23, r23
    66e6:	88 1f       	adc	r24, r24
    66e8:	20 f0       	brcs	.+8      	; 0x66f2 <sqrt+0x34>
    66ea:	26 17       	cp	r18, r22
    66ec:	37 07       	cpc	r19, r23
    66ee:	48 07       	cpc	r20, r24
    66f0:	30 f4       	brcc	.+12     	; 0x66fe <sqrt+0x40>
    66f2:	62 1b       	sub	r22, r18
    66f4:	73 0b       	sbc	r23, r19
    66f6:	84 0b       	sbc	r24, r20
    66f8:	20 29       	or	r18, r0
    66fa:	31 29       	or	r19, r1
    66fc:	4a 2b       	or	r20, r26
    66fe:	a6 95       	lsr	r26
    6700:	17 94       	ror	r1
    6702:	07 94       	ror	r0
    6704:	20 25       	eor	r18, r0
    6706:	31 25       	eor	r19, r1
    6708:	4a 27       	eor	r20, r26
    670a:	58 f7       	brcc	.-42     	; 0x66e2 <sqrt+0x24>
    670c:	66 0f       	add	r22, r22
    670e:	77 1f       	adc	r23, r23
    6710:	88 1f       	adc	r24, r24
    6712:	20 f0       	brcs	.+8      	; 0x671c <sqrt+0x5e>
    6714:	26 17       	cp	r18, r22
    6716:	37 07       	cpc	r19, r23
    6718:	48 07       	cpc	r20, r24
    671a:	30 f4       	brcc	.+12     	; 0x6728 <sqrt+0x6a>
    671c:	62 0b       	sbc	r22, r18
    671e:	73 0b       	sbc	r23, r19
    6720:	84 0b       	sbc	r24, r20
    6722:	20 0d       	add	r18, r0
    6724:	31 1d       	adc	r19, r1
    6726:	41 1d       	adc	r20, r1
    6728:	a0 95       	com	r26
    672a:	81 f7       	brne	.-32     	; 0x670c <sqrt+0x4e>
    672c:	b9 01       	movw	r22, r18
    672e:	84 2f       	mov	r24, r20
    6730:	91 58       	subi	r25, 0x81	; 129
    6732:	88 0f       	add	r24, r24
    6734:	96 95       	lsr	r25
    6736:	87 95       	ror	r24
    6738:	08 95       	ret

0000673a <square>:
    673a:	9b 01       	movw	r18, r22
    673c:	ac 01       	movw	r20, r24
    673e:	52 cf       	rjmp	.-348    	; 0x65e4 <__mulsf3>

00006740 <tan>:
    6740:	df 93       	push	r29
    6742:	d9 2f       	mov	r29, r25
    6744:	d2 de       	rcall	.-604    	; 0x64ea <__fp_rempio2>
    6746:	e6 95       	lsr	r30
    6748:	d7 95       	ror	r29
    674a:	2a ed       	ldi	r18, 0xDA	; 218
    674c:	3f e0       	ldi	r19, 0x0F	; 15
    674e:	49 e4       	ldi	r20, 0x49	; 73
    6750:	5f e3       	ldi	r21, 0x3F	; 63
    6752:	b3 3a       	cpi	r27, 0xA3	; 163
    6754:	62 07       	cpc	r22, r18
    6756:	73 07       	cpc	r23, r19
    6758:	84 07       	cpc	r24, r20
    675a:	95 07       	cpc	r25, r21
    675c:	d7 95       	ror	r29
    675e:	2a f0       	brmi	.+10     	; 0x676a <tan+0x2a>
    6760:	a2 ea       	ldi	r26, 0xA2	; 162
    6762:	49 ec       	ldi	r20, 0xC9	; 201
    6764:	90 68       	ori	r25, 0x80	; 128
    6766:	ce dc       	rcall	.-1636   	; 0x6104 <__addsf3x>
    6768:	e7 de       	rcall	.-562    	; 0x6538 <__fp_round>
    676a:	eb ef       	ldi	r30, 0xFB	; 251
    676c:	f0 e0       	ldi	r31, 0x00	; 0
    676e:	1d d0       	rcall	.+58     	; 0x67aa <__fp_powsodd>
    6770:	dd 0f       	add	r29, r29
    6772:	0b f0       	brvs	.+2      	; 0x6776 <tan+0x36>
    6774:	30 df       	rcall	.-416    	; 0x65d6 <inverse>
    6776:	dd 0f       	add	r29, r29
    6778:	0b f4       	brvc	.+2      	; 0x677c <tan+0x3c>
    677a:	90 58       	subi	r25, 0x80	; 128
    677c:	df 91       	pop	r29
    677e:	08 95       	ret

00006780 <__fp_mpack>:
    6780:	9f 3f       	cpi	r25, 0xFF	; 255
    6782:	31 f0       	breq	.+12     	; 0x6790 <__fp_mpack_finite+0xc>

00006784 <__fp_mpack_finite>:
    6784:	91 50       	subi	r25, 0x01	; 1
    6786:	20 f4       	brcc	.+8      	; 0x6790 <__fp_mpack_finite+0xc>
    6788:	87 95       	ror	r24
    678a:	77 95       	ror	r23
    678c:	67 95       	ror	r22
    678e:	b7 95       	ror	r27
    6790:	88 0f       	add	r24, r24
    6792:	91 1d       	adc	r25, r1
    6794:	96 95       	lsr	r25
    6796:	87 95       	ror	r24
    6798:	97 f9       	bld	r25, 7
    679a:	08 95       	ret

0000679c <__fp_norm2>:
    679c:	91 50       	subi	r25, 0x01	; 1
    679e:	50 40       	sbci	r21, 0x00	; 0
    67a0:	66 0f       	add	r22, r22
    67a2:	77 1f       	adc	r23, r23
    67a4:	88 1f       	adc	r24, r24
    67a6:	d2 f7       	brpl	.-12     	; 0x679c <__fp_norm2>
    67a8:	08 95       	ret

000067aa <__fp_powsodd>:
    67aa:	9f 93       	push	r25
    67ac:	8f 93       	push	r24
    67ae:	7f 93       	push	r23
    67b0:	6f 93       	push	r22
    67b2:	ff 93       	push	r31
    67b4:	ef 93       	push	r30
    67b6:	9b 01       	movw	r18, r22
    67b8:	ac 01       	movw	r20, r24
    67ba:	14 df       	rcall	.-472    	; 0x65e4 <__mulsf3>
    67bc:	ef 91       	pop	r30
    67be:	ff 91       	pop	r31
    67c0:	60 de       	rcall	.-832    	; 0x6482 <__fp_powser>
    67c2:	2f 91       	pop	r18
    67c4:	3f 91       	pop	r19
    67c6:	4f 91       	pop	r20
    67c8:	5f 91       	pop	r21
    67ca:	0c cf       	rjmp	.-488    	; 0x65e4 <__mulsf3>

000067cc <vfprintf>:
    67cc:	2f 92       	push	r2
    67ce:	3f 92       	push	r3
    67d0:	4f 92       	push	r4
    67d2:	5f 92       	push	r5
    67d4:	6f 92       	push	r6
    67d6:	7f 92       	push	r7
    67d8:	8f 92       	push	r8
    67da:	9f 92       	push	r9
    67dc:	af 92       	push	r10
    67de:	bf 92       	push	r11
    67e0:	cf 92       	push	r12
    67e2:	df 92       	push	r13
    67e4:	ef 92       	push	r14
    67e6:	ff 92       	push	r15
    67e8:	0f 93       	push	r16
    67ea:	1f 93       	push	r17
    67ec:	cf 93       	push	r28
    67ee:	df 93       	push	r29
    67f0:	cd b7       	in	r28, 0x3d	; 61
    67f2:	de b7       	in	r29, 0x3e	; 62
    67f4:	63 97       	sbiw	r28, 0x13	; 19
    67f6:	0f b6       	in	r0, 0x3f	; 63
    67f8:	f8 94       	cli
    67fa:	de bf       	out	0x3e, r29	; 62
    67fc:	0f be       	out	0x3f, r0	; 63
    67fe:	cd bf       	out	0x3d, r28	; 61
    6800:	6c 01       	movw	r12, r24
    6802:	4b 01       	movw	r8, r22
    6804:	2a 01       	movw	r4, r20
    6806:	fc 01       	movw	r30, r24
    6808:	17 82       	std	Z+7, r1	; 0x07
    680a:	16 82       	std	Z+6, r1	; 0x06
    680c:	83 81       	ldd	r24, Z+3	; 0x03
    680e:	81 ff       	sbrs	r24, 1
    6810:	29 c3       	rjmp	.+1618   	; 0x6e64 <vfprintf+0x698>
    6812:	ae 01       	movw	r20, r28
    6814:	4f 5f       	subi	r20, 0xFF	; 255
    6816:	5f 4f       	sbci	r21, 0xFF	; 255
    6818:	3a 01       	movw	r6, r20
    681a:	f6 01       	movw	r30, r12
    681c:	93 81       	ldd	r25, Z+3	; 0x03
    681e:	f4 01       	movw	r30, r8
    6820:	93 fd       	sbrc	r25, 3
    6822:	85 91       	lpm	r24, Z+
    6824:	93 ff       	sbrs	r25, 3
    6826:	81 91       	ld	r24, Z+
    6828:	4f 01       	movw	r8, r30
    682a:	88 23       	and	r24, r24
    682c:	09 f4       	brne	.+2      	; 0x6830 <vfprintf+0x64>
    682e:	16 c3       	rjmp	.+1580   	; 0x6e5c <vfprintf+0x690>
    6830:	85 32       	cpi	r24, 0x25	; 37
    6832:	39 f4       	brne	.+14     	; 0x6842 <vfprintf+0x76>
    6834:	93 fd       	sbrc	r25, 3
    6836:	85 91       	lpm	r24, Z+
    6838:	93 ff       	sbrs	r25, 3
    683a:	81 91       	ld	r24, Z+
    683c:	4f 01       	movw	r8, r30
    683e:	85 32       	cpi	r24, 0x25	; 37
    6840:	31 f4       	brne	.+12     	; 0x684e <vfprintf+0x82>
    6842:	b6 01       	movw	r22, r12
    6844:	90 e0       	ldi	r25, 0x00	; 0
    6846:	a5 d4       	rcall	.+2378   	; 0x7192 <fputc>
    6848:	52 01       	movw	r10, r4
    684a:	25 01       	movw	r4, r10
    684c:	e6 cf       	rjmp	.-52     	; 0x681a <vfprintf+0x4e>
    684e:	10 e0       	ldi	r17, 0x00	; 0
    6850:	f1 2c       	mov	r15, r1
    6852:	20 e0       	ldi	r18, 0x00	; 0
    6854:	20 32       	cpi	r18, 0x20	; 32
    6856:	a0 f4       	brcc	.+40     	; 0x6880 <vfprintf+0xb4>
    6858:	8b 32       	cpi	r24, 0x2B	; 43
    685a:	69 f0       	breq	.+26     	; 0x6876 <vfprintf+0xaa>
    685c:	30 f4       	brcc	.+12     	; 0x686a <vfprintf+0x9e>
    685e:	80 32       	cpi	r24, 0x20	; 32
    6860:	59 f0       	breq	.+22     	; 0x6878 <vfprintf+0xac>
    6862:	83 32       	cpi	r24, 0x23	; 35
    6864:	69 f4       	brne	.+26     	; 0x6880 <vfprintf+0xb4>
    6866:	20 61       	ori	r18, 0x10	; 16
    6868:	2c c0       	rjmp	.+88     	; 0x68c2 <vfprintf+0xf6>
    686a:	8d 32       	cpi	r24, 0x2D	; 45
    686c:	39 f0       	breq	.+14     	; 0x687c <vfprintf+0xb0>
    686e:	80 33       	cpi	r24, 0x30	; 48
    6870:	39 f4       	brne	.+14     	; 0x6880 <vfprintf+0xb4>
    6872:	21 60       	ori	r18, 0x01	; 1
    6874:	26 c0       	rjmp	.+76     	; 0x68c2 <vfprintf+0xf6>
    6876:	22 60       	ori	r18, 0x02	; 2
    6878:	24 60       	ori	r18, 0x04	; 4
    687a:	23 c0       	rjmp	.+70     	; 0x68c2 <vfprintf+0xf6>
    687c:	28 60       	ori	r18, 0x08	; 8
    687e:	21 c0       	rjmp	.+66     	; 0x68c2 <vfprintf+0xf6>
    6880:	27 fd       	sbrc	r18, 7
    6882:	27 c0       	rjmp	.+78     	; 0x68d2 <vfprintf+0x106>
    6884:	30 ed       	ldi	r19, 0xD0	; 208
    6886:	38 0f       	add	r19, r24
    6888:	3a 30       	cpi	r19, 0x0A	; 10
    688a:	78 f4       	brcc	.+30     	; 0x68aa <vfprintf+0xde>
    688c:	26 ff       	sbrs	r18, 6
    688e:	06 c0       	rjmp	.+12     	; 0x689c <vfprintf+0xd0>
    6890:	fa e0       	ldi	r31, 0x0A	; 10
    6892:	1f 9f       	mul	r17, r31
    6894:	30 0d       	add	r19, r0
    6896:	11 24       	eor	r1, r1
    6898:	13 2f       	mov	r17, r19
    689a:	13 c0       	rjmp	.+38     	; 0x68c2 <vfprintf+0xf6>
    689c:	4a e0       	ldi	r20, 0x0A	; 10
    689e:	f4 9e       	mul	r15, r20
    68a0:	30 0d       	add	r19, r0
    68a2:	11 24       	eor	r1, r1
    68a4:	f3 2e       	mov	r15, r19
    68a6:	20 62       	ori	r18, 0x20	; 32
    68a8:	0c c0       	rjmp	.+24     	; 0x68c2 <vfprintf+0xf6>
    68aa:	8e 32       	cpi	r24, 0x2E	; 46
    68ac:	21 f4       	brne	.+8      	; 0x68b6 <vfprintf+0xea>
    68ae:	26 fd       	sbrc	r18, 6
    68b0:	d5 c2       	rjmp	.+1450   	; 0x6e5c <vfprintf+0x690>
    68b2:	20 64       	ori	r18, 0x40	; 64
    68b4:	06 c0       	rjmp	.+12     	; 0x68c2 <vfprintf+0xf6>
    68b6:	8c 36       	cpi	r24, 0x6C	; 108
    68b8:	11 f4       	brne	.+4      	; 0x68be <vfprintf+0xf2>
    68ba:	20 68       	ori	r18, 0x80	; 128
    68bc:	02 c0       	rjmp	.+4      	; 0x68c2 <vfprintf+0xf6>
    68be:	88 36       	cpi	r24, 0x68	; 104
    68c0:	41 f4       	brne	.+16     	; 0x68d2 <vfprintf+0x106>
    68c2:	f4 01       	movw	r30, r8
    68c4:	93 fd       	sbrc	r25, 3
    68c6:	85 91       	lpm	r24, Z+
    68c8:	93 ff       	sbrs	r25, 3
    68ca:	81 91       	ld	r24, Z+
    68cc:	4f 01       	movw	r8, r30
    68ce:	81 11       	cpse	r24, r1
    68d0:	c1 cf       	rjmp	.-126    	; 0x6854 <vfprintf+0x88>
    68d2:	9b eb       	ldi	r25, 0xBB	; 187
    68d4:	98 0f       	add	r25, r24
    68d6:	93 30       	cpi	r25, 0x03	; 3
    68d8:	18 f4       	brcc	.+6      	; 0x68e0 <vfprintf+0x114>
    68da:	20 61       	ori	r18, 0x10	; 16
    68dc:	80 5e       	subi	r24, 0xE0	; 224
    68de:	06 c0       	rjmp	.+12     	; 0x68ec <vfprintf+0x120>
    68e0:	9b e9       	ldi	r25, 0x9B	; 155
    68e2:	98 0f       	add	r25, r24
    68e4:	93 30       	cpi	r25, 0x03	; 3
    68e6:	08 f0       	brcs	.+2      	; 0x68ea <vfprintf+0x11e>
    68e8:	64 c1       	rjmp	.+712    	; 0x6bb2 <vfprintf+0x3e6>
    68ea:	2f 7e       	andi	r18, 0xEF	; 239
    68ec:	26 ff       	sbrs	r18, 6
    68ee:	16 e0       	ldi	r17, 0x06	; 6
    68f0:	2f 73       	andi	r18, 0x3F	; 63
    68f2:	32 2e       	mov	r3, r18
    68f4:	85 36       	cpi	r24, 0x65	; 101
    68f6:	19 f4       	brne	.+6      	; 0x68fe <vfprintf+0x132>
    68f8:	20 64       	ori	r18, 0x40	; 64
    68fa:	32 2e       	mov	r3, r18
    68fc:	08 c0       	rjmp	.+16     	; 0x690e <vfprintf+0x142>
    68fe:	86 36       	cpi	r24, 0x66	; 102
    6900:	21 f4       	brne	.+8      	; 0x690a <vfprintf+0x13e>
    6902:	f2 2f       	mov	r31, r18
    6904:	f0 68       	ori	r31, 0x80	; 128
    6906:	3f 2e       	mov	r3, r31
    6908:	02 c0       	rjmp	.+4      	; 0x690e <vfprintf+0x142>
    690a:	11 11       	cpse	r17, r1
    690c:	11 50       	subi	r17, 0x01	; 1
    690e:	37 fe       	sbrs	r3, 7
    6910:	07 c0       	rjmp	.+14     	; 0x6920 <vfprintf+0x154>
    6912:	1c 33       	cpi	r17, 0x3C	; 60
    6914:	50 f4       	brcc	.+20     	; 0x692a <vfprintf+0x15e>
    6916:	ee 24       	eor	r14, r14
    6918:	e3 94       	inc	r14
    691a:	e1 0e       	add	r14, r17
    691c:	27 e0       	ldi	r18, 0x07	; 7
    691e:	0b c0       	rjmp	.+22     	; 0x6936 <vfprintf+0x16a>
    6920:	18 30       	cpi	r17, 0x08	; 8
    6922:	38 f0       	brcs	.+14     	; 0x6932 <vfprintf+0x166>
    6924:	27 e0       	ldi	r18, 0x07	; 7
    6926:	17 e0       	ldi	r17, 0x07	; 7
    6928:	05 c0       	rjmp	.+10     	; 0x6934 <vfprintf+0x168>
    692a:	27 e0       	ldi	r18, 0x07	; 7
    692c:	4c e3       	ldi	r20, 0x3C	; 60
    692e:	e4 2e       	mov	r14, r20
    6930:	02 c0       	rjmp	.+4      	; 0x6936 <vfprintf+0x16a>
    6932:	21 2f       	mov	r18, r17
    6934:	e1 2c       	mov	r14, r1
    6936:	52 01       	movw	r10, r4
    6938:	44 e0       	ldi	r20, 0x04	; 4
    693a:	a4 0e       	add	r10, r20
    693c:	b1 1c       	adc	r11, r1
    693e:	f2 01       	movw	r30, r4
    6940:	60 81       	ld	r22, Z
    6942:	71 81       	ldd	r23, Z+1	; 0x01
    6944:	82 81       	ldd	r24, Z+2	; 0x02
    6946:	93 81       	ldd	r25, Z+3	; 0x03
    6948:	0e 2d       	mov	r16, r14
    694a:	a3 01       	movw	r20, r6
    694c:	34 d3       	rcall	.+1640   	; 0x6fb6 <__ftoa_engine>
    694e:	2c 01       	movw	r4, r24
    6950:	09 81       	ldd	r16, Y+1	; 0x01
    6952:	00 ff       	sbrs	r16, 0
    6954:	02 c0       	rjmp	.+4      	; 0x695a <vfprintf+0x18e>
    6956:	03 ff       	sbrs	r16, 3
    6958:	07 c0       	rjmp	.+14     	; 0x6968 <vfprintf+0x19c>
    695a:	31 fc       	sbrc	r3, 1
    695c:	08 c0       	rjmp	.+16     	; 0x696e <vfprintf+0x1a2>
    695e:	32 fe       	sbrs	r3, 2
    6960:	09 c0       	rjmp	.+18     	; 0x6974 <vfprintf+0x1a8>
    6962:	30 e2       	ldi	r19, 0x20	; 32
    6964:	23 2e       	mov	r2, r19
    6966:	07 c0       	rjmp	.+14     	; 0x6976 <vfprintf+0x1aa>
    6968:	2d e2       	ldi	r18, 0x2D	; 45
    696a:	22 2e       	mov	r2, r18
    696c:	04 c0       	rjmp	.+8      	; 0x6976 <vfprintf+0x1aa>
    696e:	9b e2       	ldi	r25, 0x2B	; 43
    6970:	29 2e       	mov	r2, r25
    6972:	01 c0       	rjmp	.+2      	; 0x6976 <vfprintf+0x1aa>
    6974:	21 2c       	mov	r2, r1
    6976:	80 2f       	mov	r24, r16
    6978:	8c 70       	andi	r24, 0x0C	; 12
    697a:	19 f0       	breq	.+6      	; 0x6982 <vfprintf+0x1b6>
    697c:	21 10       	cpse	r2, r1
    697e:	51 c2       	rjmp	.+1186   	; 0x6e22 <vfprintf+0x656>
    6980:	8d c2       	rjmp	.+1306   	; 0x6e9c <vfprintf+0x6d0>
    6982:	37 fe       	sbrs	r3, 7
    6984:	0f c0       	rjmp	.+30     	; 0x69a4 <vfprintf+0x1d8>
    6986:	e4 0c       	add	r14, r4
    6988:	04 ff       	sbrs	r16, 4
    698a:	04 c0       	rjmp	.+8      	; 0x6994 <vfprintf+0x1c8>
    698c:	8a 81       	ldd	r24, Y+2	; 0x02
    698e:	81 33       	cpi	r24, 0x31	; 49
    6990:	09 f4       	brne	.+2      	; 0x6994 <vfprintf+0x1c8>
    6992:	ea 94       	dec	r14
    6994:	1e 14       	cp	r1, r14
    6996:	74 f5       	brge	.+92     	; 0x69f4 <vfprintf+0x228>
    6998:	f8 e0       	ldi	r31, 0x08	; 8
    699a:	fe 15       	cp	r31, r14
    699c:	78 f5       	brcc	.+94     	; 0x69fc <vfprintf+0x230>
    699e:	88 e0       	ldi	r24, 0x08	; 8
    69a0:	e8 2e       	mov	r14, r24
    69a2:	2c c0       	rjmp	.+88     	; 0x69fc <vfprintf+0x230>
    69a4:	36 fc       	sbrc	r3, 6
    69a6:	2a c0       	rjmp	.+84     	; 0x69fc <vfprintf+0x230>
    69a8:	81 2f       	mov	r24, r17
    69aa:	90 e0       	ldi	r25, 0x00	; 0
    69ac:	84 15       	cp	r24, r4
    69ae:	95 05       	cpc	r25, r5
    69b0:	9c f0       	brlt	.+38     	; 0x69d8 <vfprintf+0x20c>
    69b2:	2c ef       	ldi	r18, 0xFC	; 252
    69b4:	42 16       	cp	r4, r18
    69b6:	2f ef       	ldi	r18, 0xFF	; 255
    69b8:	52 06       	cpc	r5, r18
    69ba:	74 f0       	brlt	.+28     	; 0x69d8 <vfprintf+0x20c>
    69bc:	43 2d       	mov	r20, r3
    69be:	40 68       	ori	r20, 0x80	; 128
    69c0:	34 2e       	mov	r3, r20
    69c2:	0a c0       	rjmp	.+20     	; 0x69d8 <vfprintf+0x20c>
    69c4:	e2 e0       	ldi	r30, 0x02	; 2
    69c6:	f0 e0       	ldi	r31, 0x00	; 0
    69c8:	ec 0f       	add	r30, r28
    69ca:	fd 1f       	adc	r31, r29
    69cc:	e1 0f       	add	r30, r17
    69ce:	f1 1d       	adc	r31, r1
    69d0:	80 81       	ld	r24, Z
    69d2:	80 33       	cpi	r24, 0x30	; 48
    69d4:	19 f4       	brne	.+6      	; 0x69dc <vfprintf+0x210>
    69d6:	11 50       	subi	r17, 0x01	; 1
    69d8:	11 11       	cpse	r17, r1
    69da:	f4 cf       	rjmp	.-24     	; 0x69c4 <vfprintf+0x1f8>
    69dc:	37 fe       	sbrs	r3, 7
    69de:	0e c0       	rjmp	.+28     	; 0x69fc <vfprintf+0x230>
    69e0:	ee 24       	eor	r14, r14
    69e2:	e3 94       	inc	r14
    69e4:	e1 0e       	add	r14, r17
    69e6:	81 2f       	mov	r24, r17
    69e8:	90 e0       	ldi	r25, 0x00	; 0
    69ea:	48 16       	cp	r4, r24
    69ec:	59 06       	cpc	r5, r25
    69ee:	2c f4       	brge	.+10     	; 0x69fa <vfprintf+0x22e>
    69f0:	14 19       	sub	r17, r4
    69f2:	04 c0       	rjmp	.+8      	; 0x69fc <vfprintf+0x230>
    69f4:	ee 24       	eor	r14, r14
    69f6:	e3 94       	inc	r14
    69f8:	01 c0       	rjmp	.+2      	; 0x69fc <vfprintf+0x230>
    69fa:	10 e0       	ldi	r17, 0x00	; 0
    69fc:	37 fe       	sbrs	r3, 7
    69fe:	06 c0       	rjmp	.+12     	; 0x6a0c <vfprintf+0x240>
    6a00:	14 14       	cp	r1, r4
    6a02:	15 04       	cpc	r1, r5
    6a04:	34 f4       	brge	.+12     	; 0x6a12 <vfprintf+0x246>
    6a06:	c2 01       	movw	r24, r4
    6a08:	01 96       	adiw	r24, 0x01	; 1
    6a0a:	05 c0       	rjmp	.+10     	; 0x6a16 <vfprintf+0x24a>
    6a0c:	85 e0       	ldi	r24, 0x05	; 5
    6a0e:	90 e0       	ldi	r25, 0x00	; 0
    6a10:	02 c0       	rjmp	.+4      	; 0x6a16 <vfprintf+0x24a>
    6a12:	81 e0       	ldi	r24, 0x01	; 1
    6a14:	90 e0       	ldi	r25, 0x00	; 0
    6a16:	21 10       	cpse	r2, r1
    6a18:	01 96       	adiw	r24, 0x01	; 1
    6a1a:	11 23       	and	r17, r17
    6a1c:	31 f0       	breq	.+12     	; 0x6a2a <vfprintf+0x25e>
    6a1e:	21 2f       	mov	r18, r17
    6a20:	30 e0       	ldi	r19, 0x00	; 0
    6a22:	2f 5f       	subi	r18, 0xFF	; 255
    6a24:	3f 4f       	sbci	r19, 0xFF	; 255
    6a26:	82 0f       	add	r24, r18
    6a28:	93 1f       	adc	r25, r19
    6a2a:	2f 2d       	mov	r18, r15
    6a2c:	30 e0       	ldi	r19, 0x00	; 0
    6a2e:	82 17       	cp	r24, r18
    6a30:	93 07       	cpc	r25, r19
    6a32:	14 f4       	brge	.+4      	; 0x6a38 <vfprintf+0x26c>
    6a34:	f8 1a       	sub	r15, r24
    6a36:	01 c0       	rjmp	.+2      	; 0x6a3a <vfprintf+0x26e>
    6a38:	f1 2c       	mov	r15, r1
    6a3a:	83 2d       	mov	r24, r3
    6a3c:	89 70       	andi	r24, 0x09	; 9
    6a3e:	41 f4       	brne	.+16     	; 0x6a50 <vfprintf+0x284>
    6a40:	ff 20       	and	r15, r15
    6a42:	31 f0       	breq	.+12     	; 0x6a50 <vfprintf+0x284>
    6a44:	b6 01       	movw	r22, r12
    6a46:	80 e2       	ldi	r24, 0x20	; 32
    6a48:	90 e0       	ldi	r25, 0x00	; 0
    6a4a:	a3 d3       	rcall	.+1862   	; 0x7192 <fputc>
    6a4c:	fa 94       	dec	r15
    6a4e:	f8 cf       	rjmp	.-16     	; 0x6a40 <vfprintf+0x274>
    6a50:	22 20       	and	r2, r2
    6a52:	21 f0       	breq	.+8      	; 0x6a5c <vfprintf+0x290>
    6a54:	b6 01       	movw	r22, r12
    6a56:	82 2d       	mov	r24, r2
    6a58:	90 e0       	ldi	r25, 0x00	; 0
    6a5a:	9b d3       	rcall	.+1846   	; 0x7192 <fputc>
    6a5c:	33 fc       	sbrc	r3, 3
    6a5e:	08 c0       	rjmp	.+16     	; 0x6a70 <vfprintf+0x2a4>
    6a60:	ff 20       	and	r15, r15
    6a62:	31 f0       	breq	.+12     	; 0x6a70 <vfprintf+0x2a4>
    6a64:	b6 01       	movw	r22, r12
    6a66:	80 e3       	ldi	r24, 0x30	; 48
    6a68:	90 e0       	ldi	r25, 0x00	; 0
    6a6a:	93 d3       	rcall	.+1830   	; 0x7192 <fputc>
    6a6c:	fa 94       	dec	r15
    6a6e:	f8 cf       	rjmp	.-16     	; 0x6a60 <vfprintf+0x294>
    6a70:	37 fe       	sbrs	r3, 7
    6a72:	58 c0       	rjmp	.+176    	; 0x6b24 <vfprintf+0x358>
    6a74:	94 2d       	mov	r25, r4
    6a76:	85 2d       	mov	r24, r5
    6a78:	57 fe       	sbrs	r5, 7
    6a7a:	02 c0       	rjmp	.+4      	; 0x6a80 <vfprintf+0x2b4>
    6a7c:	90 e0       	ldi	r25, 0x00	; 0
    6a7e:	80 e0       	ldi	r24, 0x00	; 0
    6a80:	29 2e       	mov	r2, r25
    6a82:	38 2e       	mov	r3, r24
    6a84:	20 e0       	ldi	r18, 0x00	; 0
    6a86:	30 e0       	ldi	r19, 0x00	; 0
    6a88:	a2 01       	movw	r20, r4
    6a8a:	4e 19       	sub	r20, r14
    6a8c:	51 09       	sbc	r21, r1
    6a8e:	5d 87       	std	Y+13, r21	; 0x0d
    6a90:	4c 87       	std	Y+12, r20	; 0x0c
    6a92:	a2 01       	movw	r20, r4
    6a94:	42 19       	sub	r20, r2
    6a96:	53 09       	sbc	r21, r3
    6a98:	5f 87       	std	Y+15, r21	; 0x0f
    6a9a:	4e 87       	std	Y+14, r20	; 0x0e
    6a9c:	61 2f       	mov	r22, r17
    6a9e:	70 e0       	ldi	r23, 0x00	; 0
    6aa0:	44 27       	eor	r20, r20
    6aa2:	55 27       	eor	r21, r21
    6aa4:	46 1b       	sub	r20, r22
    6aa6:	57 0b       	sbc	r21, r23
    6aa8:	59 8b       	std	Y+17, r21	; 0x11
    6aaa:	48 8b       	std	Y+16, r20	; 0x10
    6aac:	5f ef       	ldi	r21, 0xFF	; 255
    6aae:	25 16       	cp	r2, r21
    6ab0:	35 06       	cpc	r3, r21
    6ab2:	41 f4       	brne	.+16     	; 0x6ac4 <vfprintf+0x2f8>
    6ab4:	b6 01       	movw	r22, r12
    6ab6:	8e e2       	ldi	r24, 0x2E	; 46
    6ab8:	90 e0       	ldi	r25, 0x00	; 0
    6aba:	2a 8b       	std	Y+18, r18	; 0x12
    6abc:	3b 8b       	std	Y+19, r19	; 0x13
    6abe:	69 d3       	rcall	.+1746   	; 0x7192 <fputc>
    6ac0:	3b 89       	ldd	r19, Y+19	; 0x13
    6ac2:	2a 89       	ldd	r18, Y+18	; 0x12
    6ac4:	42 14       	cp	r4, r2
    6ac6:	53 04       	cpc	r5, r3
    6ac8:	6c f0       	brlt	.+26     	; 0x6ae4 <vfprintf+0x318>
    6aca:	4c 85       	ldd	r20, Y+12	; 0x0c
    6acc:	5d 85       	ldd	r21, Y+13	; 0x0d
    6ace:	42 15       	cp	r20, r2
    6ad0:	53 05       	cpc	r21, r3
    6ad2:	44 f4       	brge	.+16     	; 0x6ae4 <vfprintf+0x318>
    6ad4:	ee 85       	ldd	r30, Y+14	; 0x0e
    6ad6:	ff 85       	ldd	r31, Y+15	; 0x0f
    6ad8:	e2 0f       	add	r30, r18
    6ada:	f3 1f       	adc	r31, r19
    6adc:	e6 0d       	add	r30, r6
    6ade:	f7 1d       	adc	r31, r7
    6ae0:	81 81       	ldd	r24, Z+1	; 0x01
    6ae2:	01 c0       	rjmp	.+2      	; 0x6ae6 <vfprintf+0x31a>
    6ae4:	80 e3       	ldi	r24, 0x30	; 48
    6ae6:	51 e0       	ldi	r21, 0x01	; 1
    6ae8:	25 1a       	sub	r2, r21
    6aea:	31 08       	sbc	r3, r1
    6aec:	2f 5f       	subi	r18, 0xFF	; 255
    6aee:	3f 4f       	sbci	r19, 0xFF	; 255
    6af0:	48 89       	ldd	r20, Y+16	; 0x10
    6af2:	59 89       	ldd	r21, Y+17	; 0x11
    6af4:	24 16       	cp	r2, r20
    6af6:	35 06       	cpc	r3, r21
    6af8:	44 f0       	brlt	.+16     	; 0x6b0a <vfprintf+0x33e>
    6afa:	b6 01       	movw	r22, r12
    6afc:	90 e0       	ldi	r25, 0x00	; 0
    6afe:	2a 8b       	std	Y+18, r18	; 0x12
    6b00:	3b 8b       	std	Y+19, r19	; 0x13
    6b02:	47 d3       	rcall	.+1678   	; 0x7192 <fputc>
    6b04:	2a 89       	ldd	r18, Y+18	; 0x12
    6b06:	3b 89       	ldd	r19, Y+19	; 0x13
    6b08:	d1 cf       	rjmp	.-94     	; 0x6aac <vfprintf+0x2e0>
    6b0a:	24 14       	cp	r2, r4
    6b0c:	35 04       	cpc	r3, r5
    6b0e:	39 f4       	brne	.+14     	; 0x6b1e <vfprintf+0x352>
    6b10:	9a 81       	ldd	r25, Y+2	; 0x02
    6b12:	96 33       	cpi	r25, 0x36	; 54
    6b14:	18 f4       	brcc	.+6      	; 0x6b1c <vfprintf+0x350>
    6b16:	95 33       	cpi	r25, 0x35	; 53
    6b18:	11 f4       	brne	.+4      	; 0x6b1e <vfprintf+0x352>
    6b1a:	04 ff       	sbrs	r16, 4
    6b1c:	81 e3       	ldi	r24, 0x31	; 49
    6b1e:	b6 01       	movw	r22, r12
    6b20:	90 e0       	ldi	r25, 0x00	; 0
    6b22:	45 c0       	rjmp	.+138    	; 0x6bae <vfprintf+0x3e2>
    6b24:	8a 81       	ldd	r24, Y+2	; 0x02
    6b26:	81 33       	cpi	r24, 0x31	; 49
    6b28:	09 f0       	breq	.+2      	; 0x6b2c <vfprintf+0x360>
    6b2a:	0f 7e       	andi	r16, 0xEF	; 239
    6b2c:	b6 01       	movw	r22, r12
    6b2e:	90 e0       	ldi	r25, 0x00	; 0
    6b30:	30 d3       	rcall	.+1632   	; 0x7192 <fputc>
    6b32:	11 11       	cpse	r17, r1
    6b34:	05 c0       	rjmp	.+10     	; 0x6b40 <vfprintf+0x374>
    6b36:	34 fc       	sbrc	r3, 4
    6b38:	16 c0       	rjmp	.+44     	; 0x6b66 <vfprintf+0x39a>
    6b3a:	85 e6       	ldi	r24, 0x65	; 101
    6b3c:	90 e0       	ldi	r25, 0x00	; 0
    6b3e:	15 c0       	rjmp	.+42     	; 0x6b6a <vfprintf+0x39e>
    6b40:	b6 01       	movw	r22, r12
    6b42:	8e e2       	ldi	r24, 0x2E	; 46
    6b44:	90 e0       	ldi	r25, 0x00	; 0
    6b46:	25 d3       	rcall	.+1610   	; 0x7192 <fputc>
    6b48:	82 e0       	ldi	r24, 0x02	; 2
    6b4a:	ee 24       	eor	r14, r14
    6b4c:	e3 94       	inc	r14
    6b4e:	e8 0e       	add	r14, r24
    6b50:	f3 01       	movw	r30, r6
    6b52:	e8 0f       	add	r30, r24
    6b54:	f1 1d       	adc	r31, r1
    6b56:	80 81       	ld	r24, Z
    6b58:	b6 01       	movw	r22, r12
    6b5a:	90 e0       	ldi	r25, 0x00	; 0
    6b5c:	1a d3       	rcall	.+1588   	; 0x7192 <fputc>
    6b5e:	11 50       	subi	r17, 0x01	; 1
    6b60:	8e 2d       	mov	r24, r14
    6b62:	99 f7       	brne	.-26     	; 0x6b4a <vfprintf+0x37e>
    6b64:	e8 cf       	rjmp	.-48     	; 0x6b36 <vfprintf+0x36a>
    6b66:	85 e4       	ldi	r24, 0x45	; 69
    6b68:	90 e0       	ldi	r25, 0x00	; 0
    6b6a:	b6 01       	movw	r22, r12
    6b6c:	12 d3       	rcall	.+1572   	; 0x7192 <fputc>
    6b6e:	57 fc       	sbrc	r5, 7
    6b70:	05 c0       	rjmp	.+10     	; 0x6b7c <vfprintf+0x3b0>
    6b72:	41 14       	cp	r4, r1
    6b74:	51 04       	cpc	r5, r1
    6b76:	39 f4       	brne	.+14     	; 0x6b86 <vfprintf+0x3ba>
    6b78:	04 ff       	sbrs	r16, 4
    6b7a:	05 c0       	rjmp	.+10     	; 0x6b86 <vfprintf+0x3ba>
    6b7c:	51 94       	neg	r5
    6b7e:	41 94       	neg	r4
    6b80:	51 08       	sbc	r5, r1
    6b82:	8d e2       	ldi	r24, 0x2D	; 45
    6b84:	01 c0       	rjmp	.+2      	; 0x6b88 <vfprintf+0x3bc>
    6b86:	8b e2       	ldi	r24, 0x2B	; 43
    6b88:	b6 01       	movw	r22, r12
    6b8a:	90 e0       	ldi	r25, 0x00	; 0
    6b8c:	02 d3       	rcall	.+1540   	; 0x7192 <fputc>
    6b8e:	80 e3       	ldi	r24, 0x30	; 48
    6b90:	9a e0       	ldi	r25, 0x0A	; 10
    6b92:	49 16       	cp	r4, r25
    6b94:	51 04       	cpc	r5, r1
    6b96:	2c f0       	brlt	.+10     	; 0x6ba2 <vfprintf+0x3d6>
    6b98:	8f 5f       	subi	r24, 0xFF	; 255
    6b9a:	5a e0       	ldi	r21, 0x0A	; 10
    6b9c:	45 1a       	sub	r4, r21
    6b9e:	51 08       	sbc	r5, r1
    6ba0:	f7 cf       	rjmp	.-18     	; 0x6b90 <vfprintf+0x3c4>
    6ba2:	b6 01       	movw	r22, r12
    6ba4:	90 e0       	ldi	r25, 0x00	; 0
    6ba6:	f5 d2       	rcall	.+1514   	; 0x7192 <fputc>
    6ba8:	b6 01       	movw	r22, r12
    6baa:	c2 01       	movw	r24, r4
    6bac:	c0 96       	adiw	r24, 0x30	; 48
    6bae:	f1 d2       	rcall	.+1506   	; 0x7192 <fputc>
    6bb0:	4c c1       	rjmp	.+664    	; 0x6e4a <vfprintf+0x67e>
    6bb2:	83 36       	cpi	r24, 0x63	; 99
    6bb4:	31 f0       	breq	.+12     	; 0x6bc2 <vfprintf+0x3f6>
    6bb6:	83 37       	cpi	r24, 0x73	; 115
    6bb8:	79 f0       	breq	.+30     	; 0x6bd8 <vfprintf+0x40c>
    6bba:	83 35       	cpi	r24, 0x53	; 83
    6bbc:	09 f0       	breq	.+2      	; 0x6bc0 <vfprintf+0x3f4>
    6bbe:	54 c0       	rjmp	.+168    	; 0x6c68 <vfprintf+0x49c>
    6bc0:	20 c0       	rjmp	.+64     	; 0x6c02 <vfprintf+0x436>
    6bc2:	52 01       	movw	r10, r4
    6bc4:	e2 e0       	ldi	r30, 0x02	; 2
    6bc6:	ae 0e       	add	r10, r30
    6bc8:	b1 1c       	adc	r11, r1
    6bca:	f2 01       	movw	r30, r4
    6bcc:	80 81       	ld	r24, Z
    6bce:	89 83       	std	Y+1, r24	; 0x01
    6bd0:	01 e0       	ldi	r16, 0x01	; 1
    6bd2:	10 e0       	ldi	r17, 0x00	; 0
    6bd4:	23 01       	movw	r4, r6
    6bd6:	13 c0       	rjmp	.+38     	; 0x6bfe <vfprintf+0x432>
    6bd8:	52 01       	movw	r10, r4
    6bda:	f2 e0       	ldi	r31, 0x02	; 2
    6bdc:	af 0e       	add	r10, r31
    6bde:	b1 1c       	adc	r11, r1
    6be0:	f2 01       	movw	r30, r4
    6be2:	40 80       	ld	r4, Z
    6be4:	51 80       	ldd	r5, Z+1	; 0x01
    6be6:	26 ff       	sbrs	r18, 6
    6be8:	03 c0       	rjmp	.+6      	; 0x6bf0 <vfprintf+0x424>
    6bea:	61 2f       	mov	r22, r17
    6bec:	70 e0       	ldi	r23, 0x00	; 0
    6bee:	02 c0       	rjmp	.+4      	; 0x6bf4 <vfprintf+0x428>
    6bf0:	6f ef       	ldi	r22, 0xFF	; 255
    6bf2:	7f ef       	ldi	r23, 0xFF	; 255
    6bf4:	c2 01       	movw	r24, r4
    6bf6:	2a 8b       	std	Y+18, r18	; 0x12
    6bf8:	c1 d2       	rcall	.+1410   	; 0x717c <strnlen>
    6bfa:	8c 01       	movw	r16, r24
    6bfc:	2a 89       	ldd	r18, Y+18	; 0x12
    6bfe:	2f 77       	andi	r18, 0x7F	; 127
    6c00:	14 c0       	rjmp	.+40     	; 0x6c2a <vfprintf+0x45e>
    6c02:	52 01       	movw	r10, r4
    6c04:	f2 e0       	ldi	r31, 0x02	; 2
    6c06:	af 0e       	add	r10, r31
    6c08:	b1 1c       	adc	r11, r1
    6c0a:	f2 01       	movw	r30, r4
    6c0c:	40 80       	ld	r4, Z
    6c0e:	51 80       	ldd	r5, Z+1	; 0x01
    6c10:	26 ff       	sbrs	r18, 6
    6c12:	03 c0       	rjmp	.+6      	; 0x6c1a <vfprintf+0x44e>
    6c14:	61 2f       	mov	r22, r17
    6c16:	70 e0       	ldi	r23, 0x00	; 0
    6c18:	02 c0       	rjmp	.+4      	; 0x6c1e <vfprintf+0x452>
    6c1a:	6f ef       	ldi	r22, 0xFF	; 255
    6c1c:	7f ef       	ldi	r23, 0xFF	; 255
    6c1e:	c2 01       	movw	r24, r4
    6c20:	2a 8b       	std	Y+18, r18	; 0x12
    6c22:	a1 d2       	rcall	.+1346   	; 0x7166 <strnlen_P>
    6c24:	8c 01       	movw	r16, r24
    6c26:	2a 89       	ldd	r18, Y+18	; 0x12
    6c28:	20 68       	ori	r18, 0x80	; 128
    6c2a:	32 2e       	mov	r3, r18
    6c2c:	23 fd       	sbrc	r18, 3
    6c2e:	18 c0       	rjmp	.+48     	; 0x6c60 <vfprintf+0x494>
    6c30:	8f 2d       	mov	r24, r15
    6c32:	90 e0       	ldi	r25, 0x00	; 0
    6c34:	08 17       	cp	r16, r24
    6c36:	19 07       	cpc	r17, r25
    6c38:	98 f4       	brcc	.+38     	; 0x6c60 <vfprintf+0x494>
    6c3a:	b6 01       	movw	r22, r12
    6c3c:	80 e2       	ldi	r24, 0x20	; 32
    6c3e:	90 e0       	ldi	r25, 0x00	; 0
    6c40:	a8 d2       	rcall	.+1360   	; 0x7192 <fputc>
    6c42:	fa 94       	dec	r15
    6c44:	f5 cf       	rjmp	.-22     	; 0x6c30 <vfprintf+0x464>
    6c46:	f2 01       	movw	r30, r4
    6c48:	37 fc       	sbrc	r3, 7
    6c4a:	85 91       	lpm	r24, Z+
    6c4c:	37 fe       	sbrs	r3, 7
    6c4e:	81 91       	ld	r24, Z+
    6c50:	2f 01       	movw	r4, r30
    6c52:	b6 01       	movw	r22, r12
    6c54:	90 e0       	ldi	r25, 0x00	; 0
    6c56:	9d d2       	rcall	.+1338   	; 0x7192 <fputc>
    6c58:	f1 10       	cpse	r15, r1
    6c5a:	fa 94       	dec	r15
    6c5c:	01 50       	subi	r16, 0x01	; 1
    6c5e:	11 09       	sbc	r17, r1
    6c60:	01 15       	cp	r16, r1
    6c62:	11 05       	cpc	r17, r1
    6c64:	81 f7       	brne	.-32     	; 0x6c46 <vfprintf+0x47a>
    6c66:	f1 c0       	rjmp	.+482    	; 0x6e4a <vfprintf+0x67e>
    6c68:	84 36       	cpi	r24, 0x64	; 100
    6c6a:	11 f0       	breq	.+4      	; 0x6c70 <vfprintf+0x4a4>
    6c6c:	89 36       	cpi	r24, 0x69	; 105
    6c6e:	51 f5       	brne	.+84     	; 0x6cc4 <vfprintf+0x4f8>
    6c70:	52 01       	movw	r10, r4
    6c72:	27 ff       	sbrs	r18, 7
    6c74:	09 c0       	rjmp	.+18     	; 0x6c88 <vfprintf+0x4bc>
    6c76:	f4 e0       	ldi	r31, 0x04	; 4
    6c78:	af 0e       	add	r10, r31
    6c7a:	b1 1c       	adc	r11, r1
    6c7c:	f2 01       	movw	r30, r4
    6c7e:	60 81       	ld	r22, Z
    6c80:	71 81       	ldd	r23, Z+1	; 0x01
    6c82:	82 81       	ldd	r24, Z+2	; 0x02
    6c84:	93 81       	ldd	r25, Z+3	; 0x03
    6c86:	0a c0       	rjmp	.+20     	; 0x6c9c <vfprintf+0x4d0>
    6c88:	f2 e0       	ldi	r31, 0x02	; 2
    6c8a:	af 0e       	add	r10, r31
    6c8c:	b1 1c       	adc	r11, r1
    6c8e:	f2 01       	movw	r30, r4
    6c90:	60 81       	ld	r22, Z
    6c92:	71 81       	ldd	r23, Z+1	; 0x01
    6c94:	07 2e       	mov	r0, r23
    6c96:	00 0c       	add	r0, r0
    6c98:	88 0b       	sbc	r24, r24
    6c9a:	99 0b       	sbc	r25, r25
    6c9c:	2f 76       	andi	r18, 0x6F	; 111
    6c9e:	32 2e       	mov	r3, r18
    6ca0:	97 ff       	sbrs	r25, 7
    6ca2:	09 c0       	rjmp	.+18     	; 0x6cb6 <vfprintf+0x4ea>
    6ca4:	90 95       	com	r25
    6ca6:	80 95       	com	r24
    6ca8:	70 95       	com	r23
    6caa:	61 95       	neg	r22
    6cac:	7f 4f       	sbci	r23, 0xFF	; 255
    6cae:	8f 4f       	sbci	r24, 0xFF	; 255
    6cb0:	9f 4f       	sbci	r25, 0xFF	; 255
    6cb2:	20 68       	ori	r18, 0x80	; 128
    6cb4:	32 2e       	mov	r3, r18
    6cb6:	2a e0       	ldi	r18, 0x0A	; 10
    6cb8:	30 e0       	ldi	r19, 0x00	; 0
    6cba:	a3 01       	movw	r20, r6
    6cbc:	d1 d2       	rcall	.+1442   	; 0x7260 <__ultoa_invert>
    6cbe:	e8 2e       	mov	r14, r24
    6cc0:	e6 18       	sub	r14, r6
    6cc2:	3e c0       	rjmp	.+124    	; 0x6d40 <vfprintf+0x574>
    6cc4:	02 2f       	mov	r16, r18
    6cc6:	85 37       	cpi	r24, 0x75	; 117
    6cc8:	21 f4       	brne	.+8      	; 0x6cd2 <vfprintf+0x506>
    6cca:	0f 7e       	andi	r16, 0xEF	; 239
    6ccc:	2a e0       	ldi	r18, 0x0A	; 10
    6cce:	30 e0       	ldi	r19, 0x00	; 0
    6cd0:	1d c0       	rjmp	.+58     	; 0x6d0c <vfprintf+0x540>
    6cd2:	09 7f       	andi	r16, 0xF9	; 249
    6cd4:	8f 36       	cpi	r24, 0x6F	; 111
    6cd6:	91 f0       	breq	.+36     	; 0x6cfc <vfprintf+0x530>
    6cd8:	18 f4       	brcc	.+6      	; 0x6ce0 <vfprintf+0x514>
    6cda:	88 35       	cpi	r24, 0x58	; 88
    6cdc:	59 f0       	breq	.+22     	; 0x6cf4 <vfprintf+0x528>
    6cde:	be c0       	rjmp	.+380    	; 0x6e5c <vfprintf+0x690>
    6ce0:	80 37       	cpi	r24, 0x70	; 112
    6ce2:	19 f0       	breq	.+6      	; 0x6cea <vfprintf+0x51e>
    6ce4:	88 37       	cpi	r24, 0x78	; 120
    6ce6:	11 f0       	breq	.+4      	; 0x6cec <vfprintf+0x520>
    6ce8:	b9 c0       	rjmp	.+370    	; 0x6e5c <vfprintf+0x690>
    6cea:	00 61       	ori	r16, 0x10	; 16
    6cec:	04 ff       	sbrs	r16, 4
    6cee:	09 c0       	rjmp	.+18     	; 0x6d02 <vfprintf+0x536>
    6cf0:	04 60       	ori	r16, 0x04	; 4
    6cf2:	07 c0       	rjmp	.+14     	; 0x6d02 <vfprintf+0x536>
    6cf4:	24 ff       	sbrs	r18, 4
    6cf6:	08 c0       	rjmp	.+16     	; 0x6d08 <vfprintf+0x53c>
    6cf8:	06 60       	ori	r16, 0x06	; 6
    6cfa:	06 c0       	rjmp	.+12     	; 0x6d08 <vfprintf+0x53c>
    6cfc:	28 e0       	ldi	r18, 0x08	; 8
    6cfe:	30 e0       	ldi	r19, 0x00	; 0
    6d00:	05 c0       	rjmp	.+10     	; 0x6d0c <vfprintf+0x540>
    6d02:	20 e1       	ldi	r18, 0x10	; 16
    6d04:	30 e0       	ldi	r19, 0x00	; 0
    6d06:	02 c0       	rjmp	.+4      	; 0x6d0c <vfprintf+0x540>
    6d08:	20 e1       	ldi	r18, 0x10	; 16
    6d0a:	32 e0       	ldi	r19, 0x02	; 2
    6d0c:	52 01       	movw	r10, r4
    6d0e:	07 ff       	sbrs	r16, 7
    6d10:	09 c0       	rjmp	.+18     	; 0x6d24 <vfprintf+0x558>
    6d12:	f4 e0       	ldi	r31, 0x04	; 4
    6d14:	af 0e       	add	r10, r31
    6d16:	b1 1c       	adc	r11, r1
    6d18:	f2 01       	movw	r30, r4
    6d1a:	60 81       	ld	r22, Z
    6d1c:	71 81       	ldd	r23, Z+1	; 0x01
    6d1e:	82 81       	ldd	r24, Z+2	; 0x02
    6d20:	93 81       	ldd	r25, Z+3	; 0x03
    6d22:	08 c0       	rjmp	.+16     	; 0x6d34 <vfprintf+0x568>
    6d24:	f2 e0       	ldi	r31, 0x02	; 2
    6d26:	af 0e       	add	r10, r31
    6d28:	b1 1c       	adc	r11, r1
    6d2a:	f2 01       	movw	r30, r4
    6d2c:	60 81       	ld	r22, Z
    6d2e:	71 81       	ldd	r23, Z+1	; 0x01
    6d30:	80 e0       	ldi	r24, 0x00	; 0
    6d32:	90 e0       	ldi	r25, 0x00	; 0
    6d34:	a3 01       	movw	r20, r6
    6d36:	94 d2       	rcall	.+1320   	; 0x7260 <__ultoa_invert>
    6d38:	e8 2e       	mov	r14, r24
    6d3a:	e6 18       	sub	r14, r6
    6d3c:	0f 77       	andi	r16, 0x7F	; 127
    6d3e:	30 2e       	mov	r3, r16
    6d40:	36 fe       	sbrs	r3, 6
    6d42:	0b c0       	rjmp	.+22     	; 0x6d5a <vfprintf+0x58e>
    6d44:	33 2d       	mov	r19, r3
    6d46:	3e 7f       	andi	r19, 0xFE	; 254
    6d48:	e1 16       	cp	r14, r17
    6d4a:	50 f4       	brcc	.+20     	; 0x6d60 <vfprintf+0x594>
    6d4c:	34 fe       	sbrs	r3, 4
    6d4e:	0a c0       	rjmp	.+20     	; 0x6d64 <vfprintf+0x598>
    6d50:	32 fc       	sbrc	r3, 2
    6d52:	08 c0       	rjmp	.+16     	; 0x6d64 <vfprintf+0x598>
    6d54:	33 2d       	mov	r19, r3
    6d56:	3e 7e       	andi	r19, 0xEE	; 238
    6d58:	05 c0       	rjmp	.+10     	; 0x6d64 <vfprintf+0x598>
    6d5a:	0e 2d       	mov	r16, r14
    6d5c:	33 2d       	mov	r19, r3
    6d5e:	03 c0       	rjmp	.+6      	; 0x6d66 <vfprintf+0x59a>
    6d60:	0e 2d       	mov	r16, r14
    6d62:	01 c0       	rjmp	.+2      	; 0x6d66 <vfprintf+0x59a>
    6d64:	01 2f       	mov	r16, r17
    6d66:	34 ff       	sbrs	r19, 4
    6d68:	0c c0       	rjmp	.+24     	; 0x6d82 <vfprintf+0x5b6>
    6d6a:	fe 01       	movw	r30, r28
    6d6c:	ee 0d       	add	r30, r14
    6d6e:	f1 1d       	adc	r31, r1
    6d70:	80 81       	ld	r24, Z
    6d72:	80 33       	cpi	r24, 0x30	; 48
    6d74:	11 f4       	brne	.+4      	; 0x6d7a <vfprintf+0x5ae>
    6d76:	39 7e       	andi	r19, 0xE9	; 233
    6d78:	08 c0       	rjmp	.+16     	; 0x6d8a <vfprintf+0x5be>
    6d7a:	32 ff       	sbrs	r19, 2
    6d7c:	05 c0       	rjmp	.+10     	; 0x6d88 <vfprintf+0x5bc>
    6d7e:	0e 5f       	subi	r16, 0xFE	; 254
    6d80:	04 c0       	rjmp	.+8      	; 0x6d8a <vfprintf+0x5be>
    6d82:	83 2f       	mov	r24, r19
    6d84:	86 78       	andi	r24, 0x86	; 134
    6d86:	09 f0       	breq	.+2      	; 0x6d8a <vfprintf+0x5be>
    6d88:	0f 5f       	subi	r16, 0xFF	; 255
    6d8a:	33 fd       	sbrc	r19, 3
    6d8c:	12 c0       	rjmp	.+36     	; 0x6db2 <vfprintf+0x5e6>
    6d8e:	30 ff       	sbrs	r19, 0
    6d90:	06 c0       	rjmp	.+12     	; 0x6d9e <vfprintf+0x5d2>
    6d92:	1e 2d       	mov	r17, r14
    6d94:	0f 15       	cp	r16, r15
    6d96:	18 f4       	brcc	.+6      	; 0x6d9e <vfprintf+0x5d2>
    6d98:	1f 0d       	add	r17, r15
    6d9a:	10 1b       	sub	r17, r16
    6d9c:	0f 2d       	mov	r16, r15
    6d9e:	0f 15       	cp	r16, r15
    6da0:	60 f4       	brcc	.+24     	; 0x6dba <vfprintf+0x5ee>
    6da2:	b6 01       	movw	r22, r12
    6da4:	80 e2       	ldi	r24, 0x20	; 32
    6da6:	90 e0       	ldi	r25, 0x00	; 0
    6da8:	3b 8b       	std	Y+19, r19	; 0x13
    6daa:	f3 d1       	rcall	.+998    	; 0x7192 <fputc>
    6dac:	0f 5f       	subi	r16, 0xFF	; 255
    6dae:	3b 89       	ldd	r19, Y+19	; 0x13
    6db0:	f6 cf       	rjmp	.-20     	; 0x6d9e <vfprintf+0x5d2>
    6db2:	0f 15       	cp	r16, r15
    6db4:	10 f4       	brcc	.+4      	; 0x6dba <vfprintf+0x5ee>
    6db6:	f0 1a       	sub	r15, r16
    6db8:	01 c0       	rjmp	.+2      	; 0x6dbc <vfprintf+0x5f0>
    6dba:	f1 2c       	mov	r15, r1
    6dbc:	34 ff       	sbrs	r19, 4
    6dbe:	11 c0       	rjmp	.+34     	; 0x6de2 <vfprintf+0x616>
    6dc0:	b6 01       	movw	r22, r12
    6dc2:	80 e3       	ldi	r24, 0x30	; 48
    6dc4:	90 e0       	ldi	r25, 0x00	; 0
    6dc6:	3b 8b       	std	Y+19, r19	; 0x13
    6dc8:	e4 d1       	rcall	.+968    	; 0x7192 <fputc>
    6dca:	3b 89       	ldd	r19, Y+19	; 0x13
    6dcc:	32 ff       	sbrs	r19, 2
    6dce:	16 c0       	rjmp	.+44     	; 0x6dfc <vfprintf+0x630>
    6dd0:	31 fd       	sbrc	r19, 1
    6dd2:	03 c0       	rjmp	.+6      	; 0x6dda <vfprintf+0x60e>
    6dd4:	88 e7       	ldi	r24, 0x78	; 120
    6dd6:	90 e0       	ldi	r25, 0x00	; 0
    6dd8:	02 c0       	rjmp	.+4      	; 0x6dde <vfprintf+0x612>
    6dda:	88 e5       	ldi	r24, 0x58	; 88
    6ddc:	90 e0       	ldi	r25, 0x00	; 0
    6dde:	b6 01       	movw	r22, r12
    6de0:	0c c0       	rjmp	.+24     	; 0x6dfa <vfprintf+0x62e>
    6de2:	83 2f       	mov	r24, r19
    6de4:	86 78       	andi	r24, 0x86	; 134
    6de6:	51 f0       	breq	.+20     	; 0x6dfc <vfprintf+0x630>
    6de8:	31 ff       	sbrs	r19, 1
    6dea:	02 c0       	rjmp	.+4      	; 0x6df0 <vfprintf+0x624>
    6dec:	8b e2       	ldi	r24, 0x2B	; 43
    6dee:	01 c0       	rjmp	.+2      	; 0x6df2 <vfprintf+0x626>
    6df0:	80 e2       	ldi	r24, 0x20	; 32
    6df2:	37 fd       	sbrc	r19, 7
    6df4:	8d e2       	ldi	r24, 0x2D	; 45
    6df6:	b6 01       	movw	r22, r12
    6df8:	90 e0       	ldi	r25, 0x00	; 0
    6dfa:	cb d1       	rcall	.+918    	; 0x7192 <fputc>
    6dfc:	e1 16       	cp	r14, r17
    6dfe:	30 f4       	brcc	.+12     	; 0x6e0c <vfprintf+0x640>
    6e00:	b6 01       	movw	r22, r12
    6e02:	80 e3       	ldi	r24, 0x30	; 48
    6e04:	90 e0       	ldi	r25, 0x00	; 0
    6e06:	c5 d1       	rcall	.+906    	; 0x7192 <fputc>
    6e08:	11 50       	subi	r17, 0x01	; 1
    6e0a:	f8 cf       	rjmp	.-16     	; 0x6dfc <vfprintf+0x630>
    6e0c:	ea 94       	dec	r14
    6e0e:	f3 01       	movw	r30, r6
    6e10:	ee 0d       	add	r30, r14
    6e12:	f1 1d       	adc	r31, r1
    6e14:	80 81       	ld	r24, Z
    6e16:	b6 01       	movw	r22, r12
    6e18:	90 e0       	ldi	r25, 0x00	; 0
    6e1a:	bb d1       	rcall	.+886    	; 0x7192 <fputc>
    6e1c:	e1 10       	cpse	r14, r1
    6e1e:	f6 cf       	rjmp	.-20     	; 0x6e0c <vfprintf+0x640>
    6e20:	14 c0       	rjmp	.+40     	; 0x6e4a <vfprintf+0x67e>
    6e22:	f4 e0       	ldi	r31, 0x04	; 4
    6e24:	ff 15       	cp	r31, r15
    6e26:	48 f5       	brcc	.+82     	; 0x6e7a <vfprintf+0x6ae>
    6e28:	84 e0       	ldi	r24, 0x04	; 4
    6e2a:	f8 1a       	sub	r15, r24
    6e2c:	33 fe       	sbrs	r3, 3
    6e2e:	1d c0       	rjmp	.+58     	; 0x6e6a <vfprintf+0x69e>
    6e30:	21 10       	cpse	r2, r1
    6e32:	24 c0       	rjmp	.+72     	; 0x6e7c <vfprintf+0x6b0>
    6e34:	03 ff       	sbrs	r16, 3
    6e36:	27 c0       	rjmp	.+78     	; 0x6e86 <vfprintf+0x6ba>
    6e38:	04 e3       	ldi	r16, 0x34	; 52
    6e3a:	14 e0       	ldi	r17, 0x04	; 4
    6e3c:	f3 2d       	mov	r31, r3
    6e3e:	f0 71       	andi	r31, 0x10	; 16
    6e40:	3f 2e       	mov	r3, r31
    6e42:	f8 01       	movw	r30, r16
    6e44:	84 91       	lpm	r24, Z
    6e46:	81 11       	cpse	r24, r1
    6e48:	21 c0       	rjmp	.+66     	; 0x6e8c <vfprintf+0x6c0>
    6e4a:	ff 20       	and	r15, r15
    6e4c:	09 f4       	brne	.+2      	; 0x6e50 <vfprintf+0x684>
    6e4e:	fd cc       	rjmp	.-1542   	; 0x684a <vfprintf+0x7e>
    6e50:	b6 01       	movw	r22, r12
    6e52:	80 e2       	ldi	r24, 0x20	; 32
    6e54:	90 e0       	ldi	r25, 0x00	; 0
    6e56:	9d d1       	rcall	.+826    	; 0x7192 <fputc>
    6e58:	fa 94       	dec	r15
    6e5a:	f7 cf       	rjmp	.-18     	; 0x6e4a <vfprintf+0x67e>
    6e5c:	f6 01       	movw	r30, r12
    6e5e:	86 81       	ldd	r24, Z+6	; 0x06
    6e60:	97 81       	ldd	r25, Z+7	; 0x07
    6e62:	23 c0       	rjmp	.+70     	; 0x6eaa <vfprintf+0x6de>
    6e64:	8f ef       	ldi	r24, 0xFF	; 255
    6e66:	9f ef       	ldi	r25, 0xFF	; 255
    6e68:	20 c0       	rjmp	.+64     	; 0x6eaa <vfprintf+0x6de>
    6e6a:	b6 01       	movw	r22, r12
    6e6c:	80 e2       	ldi	r24, 0x20	; 32
    6e6e:	90 e0       	ldi	r25, 0x00	; 0
    6e70:	90 d1       	rcall	.+800    	; 0x7192 <fputc>
    6e72:	fa 94       	dec	r15
    6e74:	f1 10       	cpse	r15, r1
    6e76:	f9 cf       	rjmp	.-14     	; 0x6e6a <vfprintf+0x69e>
    6e78:	db cf       	rjmp	.-74     	; 0x6e30 <vfprintf+0x664>
    6e7a:	f1 2c       	mov	r15, r1
    6e7c:	b6 01       	movw	r22, r12
    6e7e:	82 2d       	mov	r24, r2
    6e80:	90 e0       	ldi	r25, 0x00	; 0
    6e82:	87 d1       	rcall	.+782    	; 0x7192 <fputc>
    6e84:	d7 cf       	rjmp	.-82     	; 0x6e34 <vfprintf+0x668>
    6e86:	08 e3       	ldi	r16, 0x38	; 56
    6e88:	14 e0       	ldi	r17, 0x04	; 4
    6e8a:	d8 cf       	rjmp	.-80     	; 0x6e3c <vfprintf+0x670>
    6e8c:	31 10       	cpse	r3, r1
    6e8e:	80 52       	subi	r24, 0x20	; 32
    6e90:	b6 01       	movw	r22, r12
    6e92:	90 e0       	ldi	r25, 0x00	; 0
    6e94:	7e d1       	rcall	.+764    	; 0x7192 <fputc>
    6e96:	0f 5f       	subi	r16, 0xFF	; 255
    6e98:	1f 4f       	sbci	r17, 0xFF	; 255
    6e9a:	d3 cf       	rjmp	.-90     	; 0x6e42 <vfprintf+0x676>
    6e9c:	23 e0       	ldi	r18, 0x03	; 3
    6e9e:	2f 15       	cp	r18, r15
    6ea0:	10 f4       	brcc	.+4      	; 0x6ea6 <vfprintf+0x6da>
    6ea2:	83 e0       	ldi	r24, 0x03	; 3
    6ea4:	c2 cf       	rjmp	.-124    	; 0x6e2a <vfprintf+0x65e>
    6ea6:	f1 2c       	mov	r15, r1
    6ea8:	c5 cf       	rjmp	.-118    	; 0x6e34 <vfprintf+0x668>
    6eaa:	63 96       	adiw	r28, 0x13	; 19
    6eac:	0f b6       	in	r0, 0x3f	; 63
    6eae:	f8 94       	cli
    6eb0:	de bf       	out	0x3e, r29	; 62
    6eb2:	0f be       	out	0x3f, r0	; 63
    6eb4:	cd bf       	out	0x3d, r28	; 61
    6eb6:	df 91       	pop	r29
    6eb8:	cf 91       	pop	r28
    6eba:	1f 91       	pop	r17
    6ebc:	0f 91       	pop	r16
    6ebe:	ff 90       	pop	r15
    6ec0:	ef 90       	pop	r14
    6ec2:	df 90       	pop	r13
    6ec4:	cf 90       	pop	r12
    6ec6:	bf 90       	pop	r11
    6ec8:	af 90       	pop	r10
    6eca:	9f 90       	pop	r9
    6ecc:	8f 90       	pop	r8
    6ece:	7f 90       	pop	r7
    6ed0:	6f 90       	pop	r6
    6ed2:	5f 90       	pop	r5
    6ed4:	4f 90       	pop	r4
    6ed6:	3f 90       	pop	r3
    6ed8:	2f 90       	pop	r2
    6eda:	08 95       	ret

00006edc <__udivmodhi4>:
    6edc:	aa 1b       	sub	r26, r26
    6ede:	bb 1b       	sub	r27, r27
    6ee0:	51 e1       	ldi	r21, 0x11	; 17
    6ee2:	07 c0       	rjmp	.+14     	; 0x6ef2 <__udivmodhi4_ep>

00006ee4 <__udivmodhi4_loop>:
    6ee4:	aa 1f       	adc	r26, r26
    6ee6:	bb 1f       	adc	r27, r27
    6ee8:	a6 17       	cp	r26, r22
    6eea:	b7 07       	cpc	r27, r23
    6eec:	10 f0       	brcs	.+4      	; 0x6ef2 <__udivmodhi4_ep>
    6eee:	a6 1b       	sub	r26, r22
    6ef0:	b7 0b       	sbc	r27, r23

00006ef2 <__udivmodhi4_ep>:
    6ef2:	88 1f       	adc	r24, r24
    6ef4:	99 1f       	adc	r25, r25
    6ef6:	5a 95       	dec	r21
    6ef8:	a9 f7       	brne	.-22     	; 0x6ee4 <__udivmodhi4_loop>
    6efa:	80 95       	com	r24
    6efc:	90 95       	com	r25
    6efe:	bc 01       	movw	r22, r24
    6f00:	cd 01       	movw	r24, r26
    6f02:	08 95       	ret

00006f04 <__divmodhi4>:
    6f04:	97 fb       	bst	r25, 7
    6f06:	07 2e       	mov	r0, r23
    6f08:	16 f4       	brtc	.+4      	; 0x6f0e <__divmodhi4+0xa>
    6f0a:	00 94       	com	r0
    6f0c:	06 d0       	rcall	.+12     	; 0x6f1a <__divmodhi4_neg1>
    6f0e:	77 fd       	sbrc	r23, 7
    6f10:	08 d0       	rcall	.+16     	; 0x6f22 <__divmodhi4_neg2>
    6f12:	e4 df       	rcall	.-56     	; 0x6edc <__udivmodhi4>
    6f14:	07 fc       	sbrc	r0, 7
    6f16:	05 d0       	rcall	.+10     	; 0x6f22 <__divmodhi4_neg2>
    6f18:	3e f4       	brtc	.+14     	; 0x6f28 <__divmodhi4_exit>

00006f1a <__divmodhi4_neg1>:
    6f1a:	90 95       	com	r25
    6f1c:	81 95       	neg	r24
    6f1e:	9f 4f       	sbci	r25, 0xFF	; 255
    6f20:	08 95       	ret

00006f22 <__divmodhi4_neg2>:
    6f22:	70 95       	com	r23
    6f24:	61 95       	neg	r22
    6f26:	7f 4f       	sbci	r23, 0xFF	; 255

00006f28 <__divmodhi4_exit>:
    6f28:	08 95       	ret

00006f2a <__udivmodsi4>:
    6f2a:	a1 e2       	ldi	r26, 0x21	; 33
    6f2c:	1a 2e       	mov	r1, r26
    6f2e:	aa 1b       	sub	r26, r26
    6f30:	bb 1b       	sub	r27, r27
    6f32:	fd 01       	movw	r30, r26
    6f34:	0d c0       	rjmp	.+26     	; 0x6f50 <__udivmodsi4_ep>

00006f36 <__udivmodsi4_loop>:
    6f36:	aa 1f       	adc	r26, r26
    6f38:	bb 1f       	adc	r27, r27
    6f3a:	ee 1f       	adc	r30, r30
    6f3c:	ff 1f       	adc	r31, r31
    6f3e:	a2 17       	cp	r26, r18
    6f40:	b3 07       	cpc	r27, r19
    6f42:	e4 07       	cpc	r30, r20
    6f44:	f5 07       	cpc	r31, r21
    6f46:	20 f0       	brcs	.+8      	; 0x6f50 <__udivmodsi4_ep>
    6f48:	a2 1b       	sub	r26, r18
    6f4a:	b3 0b       	sbc	r27, r19
    6f4c:	e4 0b       	sbc	r30, r20
    6f4e:	f5 0b       	sbc	r31, r21

00006f50 <__udivmodsi4_ep>:
    6f50:	66 1f       	adc	r22, r22
    6f52:	77 1f       	adc	r23, r23
    6f54:	88 1f       	adc	r24, r24
    6f56:	99 1f       	adc	r25, r25
    6f58:	1a 94       	dec	r1
    6f5a:	69 f7       	brne	.-38     	; 0x6f36 <__udivmodsi4_loop>
    6f5c:	60 95       	com	r22
    6f5e:	70 95       	com	r23
    6f60:	80 95       	com	r24
    6f62:	90 95       	com	r25
    6f64:	9b 01       	movw	r18, r22
    6f66:	ac 01       	movw	r20, r24
    6f68:	bd 01       	movw	r22, r26
    6f6a:	cf 01       	movw	r24, r30
    6f6c:	08 95       	ret

00006f6e <__tablejump2__>:
    6f6e:	ee 0f       	add	r30, r30
    6f70:	ff 1f       	adc	r31, r31
    6f72:	00 24       	eor	r0, r0
    6f74:	00 1c       	adc	r0, r0
    6f76:	0b be       	out	0x3b, r0	; 59
    6f78:	07 90       	elpm	r0, Z+
    6f7a:	f6 91       	elpm	r31, Z
    6f7c:	e0 2d       	mov	r30, r0
    6f7e:	09 94       	ijmp

00006f80 <__mulhisi3>:
    6f80:	05 d0       	rcall	.+10     	; 0x6f8c <__umulhisi3>
    6f82:	33 23       	and	r19, r19
    6f84:	12 f4       	brpl	.+4      	; 0x6f8a <__mulhisi3+0xa>
    6f86:	8a 1b       	sub	r24, r26
    6f88:	9b 0b       	sbc	r25, r27
    6f8a:	10 c0       	rjmp	.+32     	; 0x6fac <__usmulhisi3_tail>

00006f8c <__umulhisi3>:
    6f8c:	a2 9f       	mul	r26, r18
    6f8e:	b0 01       	movw	r22, r0
    6f90:	b3 9f       	mul	r27, r19
    6f92:	c0 01       	movw	r24, r0
    6f94:	a3 9f       	mul	r26, r19
    6f96:	70 0d       	add	r23, r0
    6f98:	81 1d       	adc	r24, r1
    6f9a:	11 24       	eor	r1, r1
    6f9c:	91 1d       	adc	r25, r1
    6f9e:	b2 9f       	mul	r27, r18
    6fa0:	70 0d       	add	r23, r0
    6fa2:	81 1d       	adc	r24, r1
    6fa4:	11 24       	eor	r1, r1
    6fa6:	91 1d       	adc	r25, r1
    6fa8:	08 95       	ret

00006faa <__usmulhisi3>:
    6faa:	f0 df       	rcall	.-32     	; 0x6f8c <__umulhisi3>

00006fac <__usmulhisi3_tail>:
    6fac:	b7 ff       	sbrs	r27, 7
    6fae:	08 95       	ret
    6fb0:	82 1b       	sub	r24, r18
    6fb2:	93 0b       	sbc	r25, r19
    6fb4:	08 95       	ret

00006fb6 <__ftoa_engine>:
    6fb6:	28 30       	cpi	r18, 0x08	; 8
    6fb8:	08 f0       	brcs	.+2      	; 0x6fbc <__ftoa_engine+0x6>
    6fba:	27 e0       	ldi	r18, 0x07	; 7
    6fbc:	33 27       	eor	r19, r19
    6fbe:	da 01       	movw	r26, r20
    6fc0:	99 0f       	add	r25, r25
    6fc2:	31 1d       	adc	r19, r1
    6fc4:	87 fd       	sbrc	r24, 7
    6fc6:	91 60       	ori	r25, 0x01	; 1
    6fc8:	00 96       	adiw	r24, 0x00	; 0
    6fca:	61 05       	cpc	r22, r1
    6fcc:	71 05       	cpc	r23, r1
    6fce:	39 f4       	brne	.+14     	; 0x6fde <__ftoa_engine+0x28>
    6fd0:	32 60       	ori	r19, 0x02	; 2
    6fd2:	2e 5f       	subi	r18, 0xFE	; 254
    6fd4:	3d 93       	st	X+, r19
    6fd6:	30 e3       	ldi	r19, 0x30	; 48
    6fd8:	2a 95       	dec	r18
    6fda:	e1 f7       	brne	.-8      	; 0x6fd4 <__ftoa_engine+0x1e>
    6fdc:	08 95       	ret
    6fde:	9f 3f       	cpi	r25, 0xFF	; 255
    6fe0:	30 f0       	brcs	.+12     	; 0x6fee <__ftoa_engine+0x38>
    6fe2:	80 38       	cpi	r24, 0x80	; 128
    6fe4:	71 05       	cpc	r23, r1
    6fe6:	61 05       	cpc	r22, r1
    6fe8:	09 f0       	breq	.+2      	; 0x6fec <__ftoa_engine+0x36>
    6fea:	3c 5f       	subi	r19, 0xFC	; 252
    6fec:	3c 5f       	subi	r19, 0xFC	; 252
    6fee:	3d 93       	st	X+, r19
    6ff0:	91 30       	cpi	r25, 0x01	; 1
    6ff2:	08 f0       	brcs	.+2      	; 0x6ff6 <__ftoa_engine+0x40>
    6ff4:	80 68       	ori	r24, 0x80	; 128
    6ff6:	91 1d       	adc	r25, r1
    6ff8:	df 93       	push	r29
    6ffa:	cf 93       	push	r28
    6ffc:	1f 93       	push	r17
    6ffe:	0f 93       	push	r16
    7000:	ff 92       	push	r15
    7002:	ef 92       	push	r14
    7004:	19 2f       	mov	r17, r25
    7006:	98 7f       	andi	r25, 0xF8	; 248
    7008:	96 95       	lsr	r25
    700a:	e9 2f       	mov	r30, r25
    700c:	96 95       	lsr	r25
    700e:	96 95       	lsr	r25
    7010:	e9 0f       	add	r30, r25
    7012:	ff 27       	eor	r31, r31
    7014:	ea 56       	subi	r30, 0x6A	; 106
    7016:	fb 4f       	sbci	r31, 0xFB	; 251
    7018:	99 27       	eor	r25, r25
    701a:	33 27       	eor	r19, r19
    701c:	ee 24       	eor	r14, r14
    701e:	ff 24       	eor	r15, r15
    7020:	a7 01       	movw	r20, r14
    7022:	e7 01       	movw	r28, r14
    7024:	05 90       	lpm	r0, Z+
    7026:	08 94       	sec
    7028:	07 94       	ror	r0
    702a:	28 f4       	brcc	.+10     	; 0x7036 <__ftoa_engine+0x80>
    702c:	36 0f       	add	r19, r22
    702e:	e7 1e       	adc	r14, r23
    7030:	f8 1e       	adc	r15, r24
    7032:	49 1f       	adc	r20, r25
    7034:	51 1d       	adc	r21, r1
    7036:	66 0f       	add	r22, r22
    7038:	77 1f       	adc	r23, r23
    703a:	88 1f       	adc	r24, r24
    703c:	99 1f       	adc	r25, r25
    703e:	06 94       	lsr	r0
    7040:	a1 f7       	brne	.-24     	; 0x702a <__ftoa_engine+0x74>
    7042:	05 90       	lpm	r0, Z+
    7044:	07 94       	ror	r0
    7046:	28 f4       	brcc	.+10     	; 0x7052 <__ftoa_engine+0x9c>
    7048:	e7 0e       	add	r14, r23
    704a:	f8 1e       	adc	r15, r24
    704c:	49 1f       	adc	r20, r25
    704e:	56 1f       	adc	r21, r22
    7050:	c1 1d       	adc	r28, r1
    7052:	77 0f       	add	r23, r23
    7054:	88 1f       	adc	r24, r24
    7056:	99 1f       	adc	r25, r25
    7058:	66 1f       	adc	r22, r22
    705a:	06 94       	lsr	r0
    705c:	a1 f7       	brne	.-24     	; 0x7046 <__ftoa_engine+0x90>
    705e:	05 90       	lpm	r0, Z+
    7060:	07 94       	ror	r0
    7062:	28 f4       	brcc	.+10     	; 0x706e <__ftoa_engine+0xb8>
    7064:	f8 0e       	add	r15, r24
    7066:	49 1f       	adc	r20, r25
    7068:	56 1f       	adc	r21, r22
    706a:	c7 1f       	adc	r28, r23
    706c:	d1 1d       	adc	r29, r1
    706e:	88 0f       	add	r24, r24
    7070:	99 1f       	adc	r25, r25
    7072:	66 1f       	adc	r22, r22
    7074:	77 1f       	adc	r23, r23
    7076:	06 94       	lsr	r0
    7078:	a1 f7       	brne	.-24     	; 0x7062 <__ftoa_engine+0xac>
    707a:	05 90       	lpm	r0, Z+
    707c:	07 94       	ror	r0
    707e:	20 f4       	brcc	.+8      	; 0x7088 <__ftoa_engine+0xd2>
    7080:	49 0f       	add	r20, r25
    7082:	56 1f       	adc	r21, r22
    7084:	c7 1f       	adc	r28, r23
    7086:	d8 1f       	adc	r29, r24
    7088:	99 0f       	add	r25, r25
    708a:	66 1f       	adc	r22, r22
    708c:	77 1f       	adc	r23, r23
    708e:	88 1f       	adc	r24, r24
    7090:	06 94       	lsr	r0
    7092:	a9 f7       	brne	.-22     	; 0x707e <__ftoa_engine+0xc8>
    7094:	84 91       	lpm	r24, Z
    7096:	10 95       	com	r17
    7098:	17 70       	andi	r17, 0x07	; 7
    709a:	41 f0       	breq	.+16     	; 0x70ac <__ftoa_engine+0xf6>
    709c:	d6 95       	lsr	r29
    709e:	c7 95       	ror	r28
    70a0:	57 95       	ror	r21
    70a2:	47 95       	ror	r20
    70a4:	f7 94       	ror	r15
    70a6:	e7 94       	ror	r14
    70a8:	1a 95       	dec	r17
    70aa:	c1 f7       	brne	.-16     	; 0x709c <__ftoa_engine+0xe6>
    70ac:	ec e3       	ldi	r30, 0x3C	; 60
    70ae:	f4 e0       	ldi	r31, 0x04	; 4
    70b0:	68 94       	set
    70b2:	15 90       	lpm	r1, Z+
    70b4:	15 91       	lpm	r17, Z+
    70b6:	35 91       	lpm	r19, Z+
    70b8:	65 91       	lpm	r22, Z+
    70ba:	95 91       	lpm	r25, Z+
    70bc:	05 90       	lpm	r0, Z+
    70be:	7f e2       	ldi	r23, 0x2F	; 47
    70c0:	73 95       	inc	r23
    70c2:	e1 18       	sub	r14, r1
    70c4:	f1 0a       	sbc	r15, r17
    70c6:	43 0b       	sbc	r20, r19
    70c8:	56 0b       	sbc	r21, r22
    70ca:	c9 0b       	sbc	r28, r25
    70cc:	d0 09       	sbc	r29, r0
    70ce:	c0 f7       	brcc	.-16     	; 0x70c0 <__ftoa_engine+0x10a>
    70d0:	e1 0c       	add	r14, r1
    70d2:	f1 1e       	adc	r15, r17
    70d4:	43 1f       	adc	r20, r19
    70d6:	56 1f       	adc	r21, r22
    70d8:	c9 1f       	adc	r28, r25
    70da:	d0 1d       	adc	r29, r0
    70dc:	7e f4       	brtc	.+30     	; 0x70fc <__ftoa_engine+0x146>
    70de:	70 33       	cpi	r23, 0x30	; 48
    70e0:	11 f4       	brne	.+4      	; 0x70e6 <__ftoa_engine+0x130>
    70e2:	8a 95       	dec	r24
    70e4:	e6 cf       	rjmp	.-52     	; 0x70b2 <__ftoa_engine+0xfc>
    70e6:	e8 94       	clt
    70e8:	01 50       	subi	r16, 0x01	; 1
    70ea:	30 f0       	brcs	.+12     	; 0x70f8 <__ftoa_engine+0x142>
    70ec:	08 0f       	add	r16, r24
    70ee:	0a f4       	brpl	.+2      	; 0x70f2 <__ftoa_engine+0x13c>
    70f0:	00 27       	eor	r16, r16
    70f2:	02 17       	cp	r16, r18
    70f4:	08 f4       	brcc	.+2      	; 0x70f8 <__ftoa_engine+0x142>
    70f6:	20 2f       	mov	r18, r16
    70f8:	23 95       	inc	r18
    70fa:	02 2f       	mov	r16, r18
    70fc:	7a 33       	cpi	r23, 0x3A	; 58
    70fe:	28 f0       	brcs	.+10     	; 0x710a <__ftoa_engine+0x154>
    7100:	79 e3       	ldi	r23, 0x39	; 57
    7102:	7d 93       	st	X+, r23
    7104:	2a 95       	dec	r18
    7106:	e9 f7       	brne	.-6      	; 0x7102 <__ftoa_engine+0x14c>
    7108:	10 c0       	rjmp	.+32     	; 0x712a <__ftoa_engine+0x174>
    710a:	7d 93       	st	X+, r23
    710c:	2a 95       	dec	r18
    710e:	89 f6       	brne	.-94     	; 0x70b2 <__ftoa_engine+0xfc>
    7110:	06 94       	lsr	r0
    7112:	97 95       	ror	r25
    7114:	67 95       	ror	r22
    7116:	37 95       	ror	r19
    7118:	17 95       	ror	r17
    711a:	17 94       	ror	r1
    711c:	e1 18       	sub	r14, r1
    711e:	f1 0a       	sbc	r15, r17
    7120:	43 0b       	sbc	r20, r19
    7122:	56 0b       	sbc	r21, r22
    7124:	c9 0b       	sbc	r28, r25
    7126:	d0 09       	sbc	r29, r0
    7128:	98 f0       	brcs	.+38     	; 0x7150 <__ftoa_engine+0x19a>
    712a:	23 95       	inc	r18
    712c:	7e 91       	ld	r23, -X
    712e:	73 95       	inc	r23
    7130:	7a 33       	cpi	r23, 0x3A	; 58
    7132:	08 f0       	brcs	.+2      	; 0x7136 <__ftoa_engine+0x180>
    7134:	70 e3       	ldi	r23, 0x30	; 48
    7136:	7c 93       	st	X, r23
    7138:	20 13       	cpse	r18, r16
    713a:	b8 f7       	brcc	.-18     	; 0x712a <__ftoa_engine+0x174>
    713c:	7e 91       	ld	r23, -X
    713e:	70 61       	ori	r23, 0x10	; 16
    7140:	7d 93       	st	X+, r23
    7142:	30 f0       	brcs	.+12     	; 0x7150 <__ftoa_engine+0x19a>
    7144:	83 95       	inc	r24
    7146:	71 e3       	ldi	r23, 0x31	; 49
    7148:	7d 93       	st	X+, r23
    714a:	70 e3       	ldi	r23, 0x30	; 48
    714c:	2a 95       	dec	r18
    714e:	e1 f7       	brne	.-8      	; 0x7148 <__ftoa_engine+0x192>
    7150:	11 24       	eor	r1, r1
    7152:	ef 90       	pop	r14
    7154:	ff 90       	pop	r15
    7156:	0f 91       	pop	r16
    7158:	1f 91       	pop	r17
    715a:	cf 91       	pop	r28
    715c:	df 91       	pop	r29
    715e:	99 27       	eor	r25, r25
    7160:	87 fd       	sbrc	r24, 7
    7162:	90 95       	com	r25
    7164:	08 95       	ret

00007166 <strnlen_P>:
    7166:	fc 01       	movw	r30, r24
    7168:	05 90       	lpm	r0, Z+
    716a:	61 50       	subi	r22, 0x01	; 1
    716c:	70 40       	sbci	r23, 0x00	; 0
    716e:	01 10       	cpse	r0, r1
    7170:	d8 f7       	brcc	.-10     	; 0x7168 <strnlen_P+0x2>
    7172:	80 95       	com	r24
    7174:	90 95       	com	r25
    7176:	8e 0f       	add	r24, r30
    7178:	9f 1f       	adc	r25, r31
    717a:	08 95       	ret

0000717c <strnlen>:
    717c:	fc 01       	movw	r30, r24
    717e:	61 50       	subi	r22, 0x01	; 1
    7180:	70 40       	sbci	r23, 0x00	; 0
    7182:	01 90       	ld	r0, Z+
    7184:	01 10       	cpse	r0, r1
    7186:	d8 f7       	brcc	.-10     	; 0x717e <strnlen+0x2>
    7188:	80 95       	com	r24
    718a:	90 95       	com	r25
    718c:	8e 0f       	add	r24, r30
    718e:	9f 1f       	adc	r25, r31
    7190:	08 95       	ret

00007192 <fputc>:
    7192:	0f 93       	push	r16
    7194:	1f 93       	push	r17
    7196:	cf 93       	push	r28
    7198:	df 93       	push	r29
    719a:	fb 01       	movw	r30, r22
    719c:	23 81       	ldd	r18, Z+3	; 0x03
    719e:	21 fd       	sbrc	r18, 1
    71a0:	03 c0       	rjmp	.+6      	; 0x71a8 <fputc+0x16>
    71a2:	8f ef       	ldi	r24, 0xFF	; 255
    71a4:	9f ef       	ldi	r25, 0xFF	; 255
    71a6:	28 c0       	rjmp	.+80     	; 0x71f8 <fputc+0x66>
    71a8:	22 ff       	sbrs	r18, 2
    71aa:	16 c0       	rjmp	.+44     	; 0x71d8 <fputc+0x46>
    71ac:	46 81       	ldd	r20, Z+6	; 0x06
    71ae:	57 81       	ldd	r21, Z+7	; 0x07
    71b0:	24 81       	ldd	r18, Z+4	; 0x04
    71b2:	35 81       	ldd	r19, Z+5	; 0x05
    71b4:	42 17       	cp	r20, r18
    71b6:	53 07       	cpc	r21, r19
    71b8:	44 f4       	brge	.+16     	; 0x71ca <fputc+0x38>
    71ba:	a0 81       	ld	r26, Z
    71bc:	b1 81       	ldd	r27, Z+1	; 0x01
    71be:	9d 01       	movw	r18, r26
    71c0:	2f 5f       	subi	r18, 0xFF	; 255
    71c2:	3f 4f       	sbci	r19, 0xFF	; 255
    71c4:	31 83       	std	Z+1, r19	; 0x01
    71c6:	20 83       	st	Z, r18
    71c8:	8c 93       	st	X, r24
    71ca:	26 81       	ldd	r18, Z+6	; 0x06
    71cc:	37 81       	ldd	r19, Z+7	; 0x07
    71ce:	2f 5f       	subi	r18, 0xFF	; 255
    71d0:	3f 4f       	sbci	r19, 0xFF	; 255
    71d2:	37 83       	std	Z+7, r19	; 0x07
    71d4:	26 83       	std	Z+6, r18	; 0x06
    71d6:	10 c0       	rjmp	.+32     	; 0x71f8 <fputc+0x66>
    71d8:	eb 01       	movw	r28, r22
    71da:	09 2f       	mov	r16, r25
    71dc:	18 2f       	mov	r17, r24
    71de:	00 84       	ldd	r0, Z+8	; 0x08
    71e0:	f1 85       	ldd	r31, Z+9	; 0x09
    71e2:	e0 2d       	mov	r30, r0
    71e4:	09 95       	icall
    71e6:	89 2b       	or	r24, r25
    71e8:	e1 f6       	brne	.-72     	; 0x71a2 <fputc+0x10>
    71ea:	8e 81       	ldd	r24, Y+6	; 0x06
    71ec:	9f 81       	ldd	r25, Y+7	; 0x07
    71ee:	01 96       	adiw	r24, 0x01	; 1
    71f0:	9f 83       	std	Y+7, r25	; 0x07
    71f2:	8e 83       	std	Y+6, r24	; 0x06
    71f4:	81 2f       	mov	r24, r17
    71f6:	90 2f       	mov	r25, r16
    71f8:	df 91       	pop	r29
    71fa:	cf 91       	pop	r28
    71fc:	1f 91       	pop	r17
    71fe:	0f 91       	pop	r16
    7200:	08 95       	ret

00007202 <sprintf>:
    7202:	0f 93       	push	r16
    7204:	1f 93       	push	r17
    7206:	cf 93       	push	r28
    7208:	df 93       	push	r29
    720a:	cd b7       	in	r28, 0x3d	; 61
    720c:	de b7       	in	r29, 0x3e	; 62
    720e:	2e 97       	sbiw	r28, 0x0e	; 14
    7210:	0f b6       	in	r0, 0x3f	; 63
    7212:	f8 94       	cli
    7214:	de bf       	out	0x3e, r29	; 62
    7216:	0f be       	out	0x3f, r0	; 63
    7218:	cd bf       	out	0x3d, r28	; 61
    721a:	0d 89       	ldd	r16, Y+21	; 0x15
    721c:	1e 89       	ldd	r17, Y+22	; 0x16
    721e:	86 e0       	ldi	r24, 0x06	; 6
    7220:	8c 83       	std	Y+4, r24	; 0x04
    7222:	1a 83       	std	Y+2, r17	; 0x02
    7224:	09 83       	std	Y+1, r16	; 0x01
    7226:	8f ef       	ldi	r24, 0xFF	; 255
    7228:	9f e7       	ldi	r25, 0x7F	; 127
    722a:	9e 83       	std	Y+6, r25	; 0x06
    722c:	8d 83       	std	Y+5, r24	; 0x05
    722e:	ae 01       	movw	r20, r28
    7230:	47 5e       	subi	r20, 0xE7	; 231
    7232:	5f 4f       	sbci	r21, 0xFF	; 255
    7234:	6f 89       	ldd	r22, Y+23	; 0x17
    7236:	78 8d       	ldd	r23, Y+24	; 0x18
    7238:	ce 01       	movw	r24, r28
    723a:	01 96       	adiw	r24, 0x01	; 1
    723c:	c7 da       	rcall	.-2674   	; 0x67cc <vfprintf>
    723e:	2f 81       	ldd	r18, Y+7	; 0x07
    7240:	38 85       	ldd	r19, Y+8	; 0x08
    7242:	f8 01       	movw	r30, r16
    7244:	e2 0f       	add	r30, r18
    7246:	f3 1f       	adc	r31, r19
    7248:	10 82       	st	Z, r1
    724a:	2e 96       	adiw	r28, 0x0e	; 14
    724c:	0f b6       	in	r0, 0x3f	; 63
    724e:	f8 94       	cli
    7250:	de bf       	out	0x3e, r29	; 62
    7252:	0f be       	out	0x3f, r0	; 63
    7254:	cd bf       	out	0x3d, r28	; 61
    7256:	df 91       	pop	r29
    7258:	cf 91       	pop	r28
    725a:	1f 91       	pop	r17
    725c:	0f 91       	pop	r16
    725e:	08 95       	ret

00007260 <__ultoa_invert>:
    7260:	fa 01       	movw	r30, r20
    7262:	aa 27       	eor	r26, r26
    7264:	28 30       	cpi	r18, 0x08	; 8
    7266:	51 f1       	breq	.+84     	; 0x72bc <__ultoa_invert+0x5c>
    7268:	20 31       	cpi	r18, 0x10	; 16
    726a:	81 f1       	breq	.+96     	; 0x72cc <__ultoa_invert+0x6c>
    726c:	e8 94       	clt
    726e:	6f 93       	push	r22
    7270:	6e 7f       	andi	r22, 0xFE	; 254
    7272:	6e 5f       	subi	r22, 0xFE	; 254
    7274:	7f 4f       	sbci	r23, 0xFF	; 255
    7276:	8f 4f       	sbci	r24, 0xFF	; 255
    7278:	9f 4f       	sbci	r25, 0xFF	; 255
    727a:	af 4f       	sbci	r26, 0xFF	; 255
    727c:	b1 e0       	ldi	r27, 0x01	; 1
    727e:	3e d0       	rcall	.+124    	; 0x72fc <__ultoa_invert+0x9c>
    7280:	b4 e0       	ldi	r27, 0x04	; 4
    7282:	3c d0       	rcall	.+120    	; 0x72fc <__ultoa_invert+0x9c>
    7284:	67 0f       	add	r22, r23
    7286:	78 1f       	adc	r23, r24
    7288:	89 1f       	adc	r24, r25
    728a:	9a 1f       	adc	r25, r26
    728c:	a1 1d       	adc	r26, r1
    728e:	68 0f       	add	r22, r24
    7290:	79 1f       	adc	r23, r25
    7292:	8a 1f       	adc	r24, r26
    7294:	91 1d       	adc	r25, r1
    7296:	a1 1d       	adc	r26, r1
    7298:	6a 0f       	add	r22, r26
    729a:	71 1d       	adc	r23, r1
    729c:	81 1d       	adc	r24, r1
    729e:	91 1d       	adc	r25, r1
    72a0:	a1 1d       	adc	r26, r1
    72a2:	20 d0       	rcall	.+64     	; 0x72e4 <__ultoa_invert+0x84>
    72a4:	09 f4       	brne	.+2      	; 0x72a8 <__ultoa_invert+0x48>
    72a6:	68 94       	set
    72a8:	3f 91       	pop	r19
    72aa:	2a e0       	ldi	r18, 0x0A	; 10
    72ac:	26 9f       	mul	r18, r22
    72ae:	11 24       	eor	r1, r1
    72b0:	30 19       	sub	r19, r0
    72b2:	30 5d       	subi	r19, 0xD0	; 208
    72b4:	31 93       	st	Z+, r19
    72b6:	de f6       	brtc	.-74     	; 0x726e <__ultoa_invert+0xe>
    72b8:	cf 01       	movw	r24, r30
    72ba:	08 95       	ret
    72bc:	46 2f       	mov	r20, r22
    72be:	47 70       	andi	r20, 0x07	; 7
    72c0:	40 5d       	subi	r20, 0xD0	; 208
    72c2:	41 93       	st	Z+, r20
    72c4:	b3 e0       	ldi	r27, 0x03	; 3
    72c6:	0f d0       	rcall	.+30     	; 0x72e6 <__ultoa_invert+0x86>
    72c8:	c9 f7       	brne	.-14     	; 0x72bc <__ultoa_invert+0x5c>
    72ca:	f6 cf       	rjmp	.-20     	; 0x72b8 <__ultoa_invert+0x58>
    72cc:	46 2f       	mov	r20, r22
    72ce:	4f 70       	andi	r20, 0x0F	; 15
    72d0:	40 5d       	subi	r20, 0xD0	; 208
    72d2:	4a 33       	cpi	r20, 0x3A	; 58
    72d4:	18 f0       	brcs	.+6      	; 0x72dc <__ultoa_invert+0x7c>
    72d6:	49 5d       	subi	r20, 0xD9	; 217
    72d8:	31 fd       	sbrc	r19, 1
    72da:	40 52       	subi	r20, 0x20	; 32
    72dc:	41 93       	st	Z+, r20
    72de:	02 d0       	rcall	.+4      	; 0x72e4 <__ultoa_invert+0x84>
    72e0:	a9 f7       	brne	.-22     	; 0x72cc <__ultoa_invert+0x6c>
    72e2:	ea cf       	rjmp	.-44     	; 0x72b8 <__ultoa_invert+0x58>
    72e4:	b4 e0       	ldi	r27, 0x04	; 4
    72e6:	a6 95       	lsr	r26
    72e8:	97 95       	ror	r25
    72ea:	87 95       	ror	r24
    72ec:	77 95       	ror	r23
    72ee:	67 95       	ror	r22
    72f0:	ba 95       	dec	r27
    72f2:	c9 f7       	brne	.-14     	; 0x72e6 <__ultoa_invert+0x86>
    72f4:	00 97       	sbiw	r24, 0x00	; 0
    72f6:	61 05       	cpc	r22, r1
    72f8:	71 05       	cpc	r23, r1
    72fa:	08 95       	ret
    72fc:	9b 01       	movw	r18, r22
    72fe:	ac 01       	movw	r20, r24
    7300:	0a 2e       	mov	r0, r26
    7302:	06 94       	lsr	r0
    7304:	57 95       	ror	r21
    7306:	47 95       	ror	r20
    7308:	37 95       	ror	r19
    730a:	27 95       	ror	r18
    730c:	ba 95       	dec	r27
    730e:	c9 f7       	brne	.-14     	; 0x7302 <__ultoa_invert+0xa2>
    7310:	62 0f       	add	r22, r18
    7312:	73 1f       	adc	r23, r19
    7314:	84 1f       	adc	r24, r20
    7316:	95 1f       	adc	r25, r21
    7318:	a0 1d       	adc	r26, r0
    731a:	08 95       	ret

0000731c <__do_global_dtors>:
    731c:	12 e0       	ldi	r17, 0x02	; 2
    731e:	cc e9       	ldi	r28, 0x9C	; 156
    7320:	d2 e0       	ldi	r29, 0x02	; 2
    7322:	03 c0       	rjmp	.+6      	; 0x732a <__do_global_dtors+0xe>
    7324:	fe 01       	movw	r30, r28
    7326:	23 de       	rcall	.-954    	; 0x6f6e <__tablejump2__>
    7328:	21 96       	adiw	r28, 0x01	; 1
    732a:	cd 39       	cpi	r28, 0x9D	; 157
    732c:	d1 07       	cpc	r29, r17
    732e:	d1 f7       	brne	.-12     	; 0x7324 <__do_global_dtors+0x8>
    7330:	f8 94       	cli

00007332 <__stop_program>:
    7332:	ff cf       	rjmp	.-2      	; 0x7332 <__stop_program>
