
FWCP_MK2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000244  00800100  0000696a  000069fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000696a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000478  00800344  00800344  00006c42  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00006c42  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000428  00000000  00000000  00006c9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000975b  00000000  00000000  000070c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000193a  00000000  00000000  00010821  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00003826  00000000  00000000  0001215b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000106c  00000000  00000000  00015984  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001370  00000000  00000000  000169f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000071b9  00000000  00000000  00017d60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000400  00000000  00000000  0001ef19  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	d0 c2       	rjmp	.+1440   	; 0x5a2 <__dtors_end>
       2:	00 00       	nop
       4:	fd c2       	rjmp	.+1530   	; 0x600 <__bad_interrupt>
       6:	00 00       	nop
       8:	fb c2       	rjmp	.+1526   	; 0x600 <__bad_interrupt>
       a:	00 00       	nop
       c:	f9 c2       	rjmp	.+1522   	; 0x600 <__bad_interrupt>
       e:	00 00       	nop
      10:	f7 c2       	rjmp	.+1518   	; 0x600 <__bad_interrupt>
      12:	00 00       	nop
      14:	f5 c2       	rjmp	.+1514   	; 0x600 <__bad_interrupt>
      16:	00 00       	nop
      18:	f3 c2       	rjmp	.+1510   	; 0x600 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f1 c2       	rjmp	.+1506   	; 0x600 <__bad_interrupt>
      1e:	00 00       	nop
      20:	ef c2       	rjmp	.+1502   	; 0x600 <__bad_interrupt>
      22:	00 00       	nop
      24:	ed c2       	rjmp	.+1498   	; 0x600 <__bad_interrupt>
      26:	00 00       	nop
      28:	eb c2       	rjmp	.+1494   	; 0x600 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0c 94 20 1b 	jmp	0x3640	; 0x3640 <__vector_11>
      30:	e7 c2       	rjmp	.+1486   	; 0x600 <__bad_interrupt>
      32:	00 00       	nop
      34:	e5 c2       	rjmp	.+1482   	; 0x600 <__bad_interrupt>
      36:	00 00       	nop
      38:	e3 c2       	rjmp	.+1478   	; 0x600 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	e1 c2       	rjmp	.+1474   	; 0x600 <__bad_interrupt>
      3e:	00 00       	nop
      40:	df c2       	rjmp	.+1470   	; 0x600 <__bad_interrupt>
      42:	00 00       	nop
      44:	dd c2       	rjmp	.+1466   	; 0x600 <__bad_interrupt>
      46:	00 00       	nop
      48:	db c2       	rjmp	.+1462   	; 0x600 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	d9 c2       	rjmp	.+1458   	; 0x600 <__bad_interrupt>
      4e:	00 00       	nop
      50:	d7 c2       	rjmp	.+1454   	; 0x600 <__bad_interrupt>
      52:	00 00       	nop
      54:	d5 c2       	rjmp	.+1450   	; 0x600 <__bad_interrupt>
      56:	00 00       	nop
      58:	d3 c2       	rjmp	.+1446   	; 0x600 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d1 c2       	rjmp	.+1442   	; 0x600 <__bad_interrupt>
      5e:	00 00       	nop
      60:	cf c2       	rjmp	.+1438   	; 0x600 <__bad_interrupt>
      62:	00 00       	nop
      64:	cd c2       	rjmp	.+1434   	; 0x600 <__bad_interrupt>
      66:	00 00       	nop
      68:	cb c2       	rjmp	.+1430   	; 0x600 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	c9 c2       	rjmp	.+1426   	; 0x600 <__bad_interrupt>
      6e:	00 00       	nop
      70:	c7 c2       	rjmp	.+1422   	; 0x600 <__bad_interrupt>
      72:	00 00       	nop
      74:	c5 c2       	rjmp	.+1418   	; 0x600 <__bad_interrupt>
      76:	00 00       	nop
      78:	c3 c2       	rjmp	.+1414   	; 0x600 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c1 c2       	rjmp	.+1410   	; 0x600 <__bad_interrupt>
      7e:	00 00       	nop
      80:	bf c2       	rjmp	.+1406   	; 0x600 <__bad_interrupt>
      82:	00 00       	nop
      84:	bd c2       	rjmp	.+1402   	; 0x600 <__bad_interrupt>
      86:	00 00       	nop
      88:	bb c2       	rjmp	.+1398   	; 0x600 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	71 18       	sub	r7, r1
      8e:	99 18       	sub	r9, r9
      90:	c3 18       	sub	r12, r3
      92:	ee 18       	sub	r14, r14
      94:	18 19       	sub	r17, r8
      96:	41 19       	sub	r20, r1
      98:	69 19       	sub	r22, r9
      9a:	92 19       	sub	r25, r2
      9c:	0a 1a       	sub	r0, r26
      9e:	35 1a       	sub	r3, r21
      a0:	fc 1e       	adc	r15, r28
      a2:	07 1f       	adc	r16, r23
      a4:	0d 1f       	adc	r16, r29
      a6:	13 1f       	adc	r17, r19
      a8:	1a 1f       	adc	r17, r26
      aa:	20 1f       	adc	r18, r16
      ac:	2e 1f       	adc	r18, r30
      ae:	bd 1f       	adc	r27, r29
      b0:	c3 1f       	adc	r28, r19
      b2:	c9 1f       	adc	r28, r25
      b4:	cf 1f       	adc	r28, r31
      b6:	d5 1f       	adc	r29, r21
      b8:	db 1f       	adc	r29, r27
      ba:	e1 1f       	adc	r30, r17
      bc:	e7 1f       	adc	r30, r23
      be:	08 4a       	sbci	r16, 0xA8	; 168
      c0:	d7 3b       	cpi	r29, 0xB7	; 183
      c2:	3b ce       	rjmp	.-906    	; 0xfffffd3a <__eeprom_end+0xff7efd3a>
      c4:	01 6e       	ori	r16, 0xE1	; 225
      c6:	84 bc       	out	0x24, r8	; 36
      c8:	bf fd       	.word	0xfdbf	; ????
      ca:	c1 2f       	mov	r28, r17
      cc:	3d 6c       	ori	r19, 0xCD	; 205
      ce:	74 31       	cpi	r23, 0x14	; 20
      d0:	9a bd       	out	0x2a, r25	; 42
      d2:	56 83       	std	Z+6, r21	; 0x06
      d4:	3d da       	rcall	.-2950   	; 0xfffff550 <__eeprom_end+0xff7ef550>
      d6:	3d 00       	.word	0x003d	; ????
      d8:	c7 7f       	andi	r28, 0xF7	; 247
      da:	11 be       	out	0x31, r1	; 49
      dc:	d9 e4       	ldi	r29, 0x49	; 73
      de:	bb 4c       	sbci	r27, 0xCB	; 203
      e0:	3e 91       	ld	r19, -X
      e2:	6b aa       	std	Y+51, r6	; 0x33
      e4:	aa be       	out	0x3a, r10	; 58
      e6:	00 00       	nop
      e8:	00 80       	ld	r0, Z
      ea:	3f 05       	cpc	r19, r15
      ec:	a8 4c       	sbci	r26, 0xC8	; 200
      ee:	cd b2       	in	r12, 0x1d	; 29
      f0:	d4 4e       	sbci	r29, 0xE4	; 228
      f2:	b9 38       	cpi	r27, 0x89	; 137
      f4:	36 a9       	ldd	r19, Z+54	; 0x36
      f6:	02 0c       	add	r0, r2
      f8:	50 b9       	out	0x00, r21	; 0
      fa:	91 86       	std	Z+9, r9	; 0x09
      fc:	88 08       	sbc	r8, r8
      fe:	3c a6       	std	Y+44, r3	; 0x2c
     100:	aa aa       	std	Y+50, r10	; 0x32
     102:	2a be       	out	0x3a, r2	; 58
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	3f 08       	sbc	r3, r15
     10a:	00 00       	nop
     10c:	00 be       	out	0x30, r0	; 48
     10e:	92 24       	eor	r9, r2
     110:	49 12       	cpse	r4, r25
     112:	3e ab       	std	Y+54, r19	; 0x36
     114:	aa aa       	std	Y+50, r10	; 0x32
     116:	2a be       	out	0x3a, r2	; 58
     118:	cd cc       	rjmp	.-1638   	; 0xfffffab4 <__eeprom_end+0xff7efab4>
     11a:	cc 4c       	sbci	r28, 0xCC	; 204
     11c:	3e 00       	.word	0x003e	; ????
     11e:	00 00       	nop
     120:	80 be       	out	0x30, r8	; 48
     122:	ab aa       	std	Y+51, r10	; 0x33
     124:	aa aa       	std	Y+50, r10	; 0x32
     126:	3e 00       	.word	0x003e	; ????
     128:	00 00       	nop
     12a:	00 bf       	out	0x30, r16	; 48
     12c:	00 00       	nop
     12e:	00 80       	ld	r0, Z
     130:	3f 00       	.word	0x003f	; ????
     132:	00 00       	nop
     134:	00 00       	nop
     136:	08 41       	sbci	r16, 0x18	; 24
     138:	78 d3       	rcall	.+1776   	; 0x82a <_ZN7Display9drawVLineEhhh+0x1e>
     13a:	bb 43       	sbci	r27, 0x3B	; 59
     13c:	87 d1       	rcall	.+782    	; 0x44c <_ZL7font5x8+0x186>
     13e:	13 3d       	cpi	r17, 0xD3	; 211
     140:	19 0e       	add	r1, r25
     142:	3c c3       	rjmp	.+1656   	; 0x7bc <_ZN7Display9drawPixelEhhh+0x24>
     144:	bd 42       	sbci	r27, 0x2D	; 45
     146:	82 ad       	ldd	r24, Z+58	; 0x3a
     148:	2b 3e       	cpi	r18, 0xEB	; 235
     14a:	68 ec       	ldi	r22, 0xC8	; 200
     14c:	82 76       	andi	r24, 0x62	; 98
     14e:	be d9       	rcall	.-3204   	; 0xfffff4cc <__eeprom_end+0xff7ef4cc>
     150:	8f e1       	ldi	r24, 0x1F	; 31
     152:	a9 3e       	cpi	r26, 0xE9	; 233
     154:	4c 80       	ldd	r4, Y+4	; 0x04
     156:	ef ff       	.word	0xffef	; ????
     158:	be 01       	movw	r22, r28
     15a:	c4 ff       	sbrs	r28, 4
     15c:	7f 3f       	cpi	r23, 0xFF	; 255
     15e:	00 00       	nop
     160:	00 00       	nop
     162:	00 06       	cpc	r0, r16
     164:	64 ec       	ldi	r22, 0xC4	; 196
     166:	1b 3c       	cpi	r17, 0xCB	; 203
     168:	04 bc       	out	0x24, r0	; 36
     16a:	16 3e       	cpi	r17, 0xE6	; 230
     16c:	3b e5       	ldi	r19, 0x5B	; 91
     16e:	b9 3c       	cpi	r27, 0xC9	; 201
     170:	c9 3c       	cpi	r28, 0xC9	; 201
     172:	37 c2       	rjmp	.+1134   	; 0x5e2 <__do_global_ctors+0xa>
     174:	9e 5a       	subi	r25, 0xAE	; 174
     176:	3d 66       	ori	r19, 0x6D	; 109
     178:	04 98       	cbi	0x00, 4	; 0
     17a:	08 3e       	cpi	r16, 0xE8	; 232
     17c:	ea 69       	ori	r30, 0x9A	; 154
     17e:	aa aa       	std	Y+50, r10	; 0x32
     180:	3e 00       	.word	0x003e	; ????
     182:	00 00       	nop
     184:	80 3f       	cpi	r24, 0xF0	; 240

00000186 <__trampolines_end>:
     186:	00 e0       	ldi	r16, 0x00	; 0
     188:	f8 fc       	.word	0xfcf8	; ????
     18a:	fe 1e       	adc	r15, r30
     18c:	07 07       	cpc	r16, r23
     18e:	07 07       	cpc	r16, r23
     190:	1e fe       	.word	0xfe1e	; ????
     192:	fc f8       	.word	0xf8fc	; ????
     194:	f0 00       	.word	0x00f0	; ????
     196:	00 07       	cpc	r16, r16
     198:	0f 3f       	cpi	r16, 0xFF	; 255
     19a:	3f 7c       	andi	r19, 0xCF	; 207
     19c:	70 70       	andi	r23, 0x00	; 0
     19e:	70 70       	andi	r23, 0x00	; 0
     1a0:	7c 3f       	cpi	r23, 0xFC	; 252
     1a2:	1f 1f       	adc	r17, r31
     1a4:	07 00       	.word	0x0007	; ????
     1a6:	00 00       	nop
     1a8:	00 06       	cpc	r0, r16
     1aa:	07 07       	cpc	r16, r23
     1ac:	ff ff       	.word	0xffff	; ????
     1ae:	ff ff       	.word	0xffff	; ????
	...
     1bc:	7f 7f       	andi	r23, 0xFF	; 255
     1be:	7f 7f       	andi	r23, 0xFF	; 255
     1c0:	00 00       	nop
     1c2:	00 00       	nop
     1c4:	00 00       	nop
     1c6:	00 38       	cpi	r16, 0x80	; 128
     1c8:	3c 3e       	cpi	r19, 0xEC	; 236
     1ca:	3e 0f       	add	r19, r30
     1cc:	07 07       	cpc	r16, r23
     1ce:	07 cf       	rjmp	.-498    	; 0xffffffde <__eeprom_end+0xff7effde>
     1d0:	ff fe       	.word	0xfeff	; ????
     1d2:	fe 38       	cpi	r31, 0x8E	; 142
     1d4:	00 00       	nop
     1d6:	00 40       	sbci	r16, 0x00	; 0
     1d8:	40 60       	ori	r20, 0x00	; 0
     1da:	70 78       	andi	r23, 0x80	; 128
     1dc:	7c 7e       	andi	r23, 0xEC	; 236
     1de:	7f 77       	andi	r23, 0x7F	; 127
     1e0:	73 71       	andi	r23, 0x13	; 19
     1e2:	70 70       	andi	r23, 0x00	; 0
     1e4:	00 00       	nop
     1e6:	00 18       	sub	r0, r0
     1e8:	1c 1e       	adc	r1, r28
     1ea:	1e 0f       	add	r17, r30
     1ec:	c7 c7       	rjmp	.+3982   	; 0x117c <_ZN7Display6analogEhhhh+0x3fc>
     1ee:	e7 ff       	sbrs	r30, 7
     1f0:	fe be       	out	0x3e, r15	; 62
     1f2:	9c 00       	.word	0x009c	; ????
     1f4:	00 00       	nop
     1f6:	00 0c       	add	r0, r0
     1f8:	1c 3c       	cpi	r17, 0xCC	; 204
     1fa:	3c 78       	andi	r19, 0x8C	; 140
     1fc:	70 70       	andi	r23, 0x00	; 0
     1fe:	70 79       	andi	r23, 0x90	; 144
     200:	7f 3f       	cpi	r23, 0xFF	; 255
     202:	1f 0f       	add	r17, r31
     204:	00 00       	nop
     206:	00 00       	nop
     208:	80 c0       	rjmp	.+256    	; 0x30a <_ZL7font5x8+0x44>
     20a:	e0 70       	andi	r30, 0x00	; 0
     20c:	38 1c       	adc	r3, r8
     20e:	1e ff       	.word	0xff1e	; ????
     210:	ff ff       	.word	0xffff	; ????
     212:	ff 00       	.word	0x00ff	; ????
     214:	00 00       	nop
     216:	06 07       	cpc	r16, r22
     218:	07 07       	cpc	r16, r23
     21a:	06 06       	cpc	r0, r22
     21c:	06 06       	cpc	r0, r22
     21e:	06 7f       	andi	r16, 0xF6	; 246
     220:	7f 7f       	andi	r23, 0xFF	; 255
     222:	7f 06       	cpc	r7, r31
     224:	06 00       	.word	0x0006	; ????
     226:	00 00       	nop
     228:	00 00       	nop
     22a:	f0 ff       	sbrs	r31, 0
     22c:	ff ff       	.word	0xffff	; ????
     22e:	e7 e7       	ldi	r30, 0x77	; 119
     230:	e7 e7       	ldi	r30, 0x77	; 119
     232:	c7 87       	std	Z+15, r28	; 0x0f
     234:	00 00       	nop
     236:	00 00       	nop
     238:	38 78       	andi	r19, 0x88	; 136
     23a:	71 70       	andi	r23, 0x01	; 1
     23c:	70 70       	andi	r23, 0x00	; 0
     23e:	70 70       	andi	r23, 0x00	; 0
     240:	39 3f       	cpi	r19, 0xF9	; 249
     242:	3f 1f       	adc	r19, r31
     244:	0f 00       	.word	0x000f	; ????
     246:	00 80       	ld	r0, Z
     248:	e0 f0       	brcs	.+56     	; 0x282 <__trampolines_end+0xfc>
     24a:	f8 fc       	.word	0xfcf8	; ????
     24c:	7f 7f       	andi	r23, 0xFF	; 255
     24e:	6f 67       	ori	r22, 0x7F	; 127
     250:	e1 e1       	ldi	r30, 0x11	; 17
     252:	c0 80       	ld	r12, Z
     254:	00 00       	nop
     256:	00 0f       	add	r16, r16
     258:	1f 3f       	cpi	r17, 0xFF	; 255
     25a:	3f 78       	andi	r19, 0x8F	; 143
     25c:	70 70       	andi	r23, 0x00	; 0
     25e:	70 70       	andi	r23, 0x00	; 0
     260:	78 3f       	cpi	r23, 0xF8	; 248
     262:	3f 1f       	adc	r19, r31
     264:	0f 00       	.word	0x000f	; ????
     266:	00 07       	cpc	r16, r16
     268:	07 07       	cpc	r16, r23
     26a:	07 07       	cpc	r16, r23
     26c:	c7 e7       	ldi	r28, 0x77	; 119
     26e:	f7 ff       	sbrs	r31, 7
     270:	7f 3f       	cpi	r23, 0xFF	; 255
     272:	1f 07       	cpc	r17, r31
     274:	03 01       	movw	r0, r6
     276:	00 20       	and	r0, r0
     278:	38 7c       	andi	r19, 0xC8	; 200
     27a:	7e 3f       	cpi	r23, 0xFE	; 254
     27c:	0f 07       	cpc	r16, r31
     27e:	03 00       	.word	0x0003	; ????
	...
     288:	00 1c       	adc	r0, r0
     28a:	be fe       	.word	0xfebe	; ????
     28c:	ff e7       	ldi	r31, 0x7F	; 127
     28e:	c3 c3       	rjmp	.+1926   	; 0xa16 <_ZN7Display13draw_triangleEhhhff+0x5e>
     290:	e7 ff       	sbrs	r30, 7
     292:	fe be       	out	0x3e, r15	; 62
     294:	1c 00       	.word	0x001c	; ????
     296:	00 00       	nop
     298:	0e 3f       	cpi	r16, 0xFE	; 254
     29a:	3f 7f       	andi	r19, 0xFF	; 255
     29c:	71 60       	ori	r23, 0x01	; 1
     29e:	60 60       	ori	r22, 0x00	; 0
     2a0:	71 7f       	andi	r23, 0xF1	; 241
     2a2:	3f 3f       	cpi	r19, 0xFF	; 255
     2a4:	0f 00       	.word	0x000f	; ????
     2a6:	00 78       	andi	r16, 0x80	; 128
     2a8:	fc fe       	.word	0xfefc	; ????
     2aa:	fe 8f       	std	Y+30, r31	; 0x1e
     2ac:	07 07       	cpc	r16, r23
     2ae:	07 07       	cpc	r16, r23
     2b0:	8f fe       	.word	0xfe8f	; ????
     2b2:	fe fc       	.word	0xfcfe	; ????
     2b4:	f8 00       	.word	0x00f8	; ????
     2b6:	00 00       	nop
     2b8:	00 01       	movw	r0, r0
     2ba:	43 43       	sbci	r20, 0x33	; 51
     2bc:	73 7b       	andi	r23, 0xB3	; 179
     2be:	7f 7f       	andi	r23, 0xFF	; 255
     2c0:	1f 0f       	add	r17, r31
     2c2:	07 03       	mulsu	r16, r23
	...

000002c6 <_ZL7font5x8>:
     2c6:	00 00 5f 00 00 00 07 00 07 00 14 7f 14 7f 14 24     .._............$
     2d6:	2a 7f 2a 12 23 13 08 64 62 36 49 55 22 50 00 05     *.*.#..db6IU"P..
     2e6:	03 00 00 00 1c 22 41 00 00 41 22 1c 00 14 08 3e     ....."A..A"....>
     2f6:	08 14 08 08 3e 08 08 00 50 30 00 00 08 08 08 08     ....>...P0......
     306:	08 00 60 60 00 00 20 10 08 04 02 3e 51 49 45 3e     ..``.. ....>QIE>
     316:	00 42 7f 40 00 42 61 51 49 46 21 41 45 4b 31 18     .B.@.BaQIF!AEK1.
     326:	14 12 7f 10 27 45 45 45 39 3c 4a 49 49 30 01 71     ....'EEE9<JII0.q
     336:	09 05 03 36 49 49 49 36 06 49 49 29 1e 00 36 36     ...6III6.II)..66
     346:	00 00 00 56 36 00 00 08 14 22 41 00 14 14 14 14     ...V6...."A.....
     356:	14 00 41 22 14 08 02 01 51 09 06 32 49 79 41 3e     ..A"....Q..2IyA>
     366:	7e 11 11 11 7e 7f 49 49 49 36 3e 41 41 41 22 7f     ~...~.III6>AAA".
     376:	41 41 22 1c 7f 49 49 49 41 7f 09 09 09 01 3e 41     AA"..IIIA.....>A
     386:	49 49 7a 7f 08 08 08 7f 00 41 7f 41 00 20 40 41     IIz......A.A. @A
     396:	3f 01 7f 08 14 22 41 7f 40 40 40 40 7f 02 0c 02     ?...."A.@@@@....
     3a6:	7f 7f 04 08 10 7f 3e 41 41 41 3e 7f 09 09 09 06     ......>AAA>.....
     3b6:	3e 41 51 21 5e 7f 09 19 29 46 46 49 49 49 31 01     >AQ!^...)FFIII1.
     3c6:	01 7f 01 01 3f 40 40 40 3f 1f 20 40 20 1f 3f 40     ....?@@@?. @ .?@
     3d6:	38 40 3f 63 14 08 14 63 07 08 70 08 07 61 51 49     8@?c...c..p..aQI
     3e6:	45 43 00 7f 41 41 00 02 04 08 10 20 00 41 41 7f     EC..AA..... .AA.
     3f6:	00 04 02 01 02 04 40 40 40 40 40 00 01 02 04 00     ......@@@@@.....
     406:	20 54 54 54 78 7f 48 44 44 38 38 44 44 44 20 38      TTTx.HDD88DDD 8
     416:	44 44 48 7f 38 54 54 54 18 08 7e 09 01 02 0c 52     DDH.8TTT..~....R
     426:	52 52 3e 7f 08 04 04 78 00 44 7d 40 00 20 40 44     RR>....x.D}@. @D
     436:	3d 00 7f 10 28 44 00 00 41 7f 40 00 7c 04 18 04     =...(D..A.@.|...
     446:	78 7c 08 04 04 78 38 44 44 44 38 7c 14 14 14 08     x|...x8DDD8|....
     456:	08 14 14 18 7c 7c 08 04 04 08 48 54 54 54 20 04     ....||....HTTT .
     466:	3f 44 40 20 3c 40 40 20 7c 1c 20 40 20 1c 3c 40     ?D@ <@@ |. @ .<@
     476:	30 40 3c 44 28 10 28 44 0c 50 50 50 3c 44 64 54     0@<D(.(D.PPP<DdT
     486:	4c 44 00 08 36 41 00 00 00 7f 00 00 00 41 36 08     LD..6A.......A6.
     496:	00 10 08 08 10 08                                   ......

0000049c <__c.2161>:
     49c:	6e 61 6e 00                                         nan.

000004a0 <__c.2159>:
     4a0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     4b0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     4c0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     4d0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     4e0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     4f0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     500:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     510:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     520:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     530:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     540:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     550:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     560:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     570:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     580:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     590:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000059e <__ctors_start>:
     59e:	dc 22       	and	r13, r28

000005a0 <__ctors_end>:
     5a0:	05 23       	and	r16, r21

000005a2 <__dtors_end>:
     5a2:	11 24       	eor	r1, r1
     5a4:	1f be       	out	0x3f, r1	; 63
     5a6:	cf ef       	ldi	r28, 0xFF	; 255
     5a8:	d0 e4       	ldi	r29, 0x40	; 64
     5aa:	de bf       	out	0x3e, r29	; 62
     5ac:	cd bf       	out	0x3d, r28	; 61

000005ae <__do_copy_data>:
     5ae:	13 e0       	ldi	r17, 0x03	; 3
     5b0:	a0 e0       	ldi	r26, 0x00	; 0
     5b2:	b1 e0       	ldi	r27, 0x01	; 1
     5b4:	ea e6       	ldi	r30, 0x6A	; 106
     5b6:	f9 e6       	ldi	r31, 0x69	; 105
     5b8:	00 e0       	ldi	r16, 0x00	; 0
     5ba:	0b bf       	out	0x3b, r16	; 59
     5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <__do_copy_data+0x14>
     5be:	07 90       	elpm	r0, Z+
     5c0:	0d 92       	st	X+, r0
     5c2:	a4 34       	cpi	r26, 0x44	; 68
     5c4:	b1 07       	cpc	r27, r17
     5c6:	d9 f7       	brne	.-10     	; 0x5be <__do_copy_data+0x10>

000005c8 <__do_clear_bss>:
     5c8:	27 e0       	ldi	r18, 0x07	; 7
     5ca:	a4 e4       	ldi	r26, 0x44	; 68
     5cc:	b3 e0       	ldi	r27, 0x03	; 3
     5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <.do_clear_bss_start>

000005d0 <.do_clear_bss_loop>:
     5d0:	1d 92       	st	X+, r1

000005d2 <.do_clear_bss_start>:
     5d2:	ac 3b       	cpi	r26, 0xBC	; 188
     5d4:	b2 07       	cpc	r27, r18
     5d6:	e1 f7       	brne	.-8      	; 0x5d0 <.do_clear_bss_loop>

000005d8 <__do_global_ctors>:
     5d8:	15 e0       	ldi	r17, 0x05	; 5
     5da:	c0 ea       	ldi	r28, 0xA0	; 160
     5dc:	d5 e0       	ldi	r29, 0x05	; 5
     5de:	00 e0       	ldi	r16, 0x00	; 0
     5e0:	06 c0       	rjmp	.+12     	; 0x5ee <__do_global_ctors+0x16>
     5e2:	22 97       	sbiw	r28, 0x02	; 2
     5e4:	01 09       	sbc	r16, r1
     5e6:	fe 01       	movw	r30, r28
     5e8:	0b bf       	out	0x3b, r16	; 59
     5ea:	0e 94 f4 32 	call	0x65e8	; 0x65e8 <__tablejump_elpm__>
     5ee:	ce 39       	cpi	r28, 0x9E	; 158
     5f0:	d1 07       	cpc	r29, r17
     5f2:	80 e0       	ldi	r24, 0x00	; 0
     5f4:	08 07       	cpc	r16, r24
     5f6:	a9 f7       	brne	.-22     	; 0x5e2 <__do_global_ctors+0xa>
     5f8:	0e 94 d4 22 	call	0x45a8	; 0x45a8 <main>
     5fc:	0c 94 a4 34 	jmp	0x6948	; 0x6948 <__do_global_dtors>

00000600 <__bad_interrupt>:
     600:	ff cc       	rjmp	.-1538   	; 0x0 <__vectors>

00000602 <_ZN7DisplayD1Ev>:
		for (uint8_t j = 0;j<64;j++)
		{
			Displayframe[i*SSD1306_WIDTH+j]=pgm_read_byte(&Glurak[i][j]);
		}
	}
}
     602:	9c 5f       	subi	r25, 0xFC	; 252
     604:	0c 94 29 23 	jmp	0x4652	; 0x4652 <_ZN3I2CD1Ev>
     608:	08 95       	ret

0000060a <_ZN7Display10clearFrameEv>:
     60a:	fc 01       	movw	r30, r24
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	11 92       	st	Z+, r1
     612:	2f 5f       	subi	r18, 0xFF	; 255
     614:	3f 4f       	sbci	r19, 0xFF	; 255
     616:	21 15       	cp	r18, r1
     618:	84 e0       	ldi	r24, 0x04	; 4
     61a:	38 07       	cpc	r19, r24
     61c:	c9 f7       	brne	.-14     	; 0x610 <_ZN7Display10clearFrameEv+0x6>
     61e:	08 95       	ret

00000620 <_ZN7Display15ssd1306_commandEh>:
     620:	1f 93       	push	r17
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	16 2f       	mov	r17, r22
     628:	ec 01       	movw	r28, r24
     62a:	dc 5f       	subi	r29, 0xFC	; 252
     62c:	ce 01       	movw	r24, r28
     62e:	0e 94 2a 23 	call	0x4654	; 0x4654 <_ZN3I2C9twi_startEv>
     632:	68 e7       	ldi	r22, 0x78	; 120
     634:	ce 01       	movw	r24, r28
     636:	0e 94 32 23 	call	0x4664	; 0x4664 <_ZN3I2C9twi_writeEh>
     63a:	60 e0       	ldi	r22, 0x00	; 0
     63c:	ce 01       	movw	r24, r28
     63e:	0e 94 32 23 	call	0x4664	; 0x4664 <_ZN3I2C9twi_writeEh>
     642:	61 2f       	mov	r22, r17
     644:	ce 01       	movw	r24, r28
     646:	0e 94 32 23 	call	0x4664	; 0x4664 <_ZN3I2C9twi_writeEh>
     64a:	ce 01       	movw	r24, r28
     64c:	0e 94 2e 23 	call	0x465c	; 0x465c <_ZN3I2C8twi_stopEv>
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	08 95       	ret

00000658 <_ZN7Display17InitializeDisplayEv>:
     658:	cf 93       	push	r28
     65a:	df 93       	push	r29
     65c:	ec 01       	movw	r28, r24
     65e:	6e ea       	ldi	r22, 0xAE	; 174
     660:	df df       	rcall	.-66     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     662:	65 ed       	ldi	r22, 0xD5	; 213
     664:	ce 01       	movw	r24, r28
     666:	dc df       	rcall	.-72     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     668:	60 e8       	ldi	r22, 0x80	; 128
     66a:	ce 01       	movw	r24, r28
     66c:	d9 df       	rcall	.-78     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     66e:	68 ea       	ldi	r22, 0xA8	; 168
     670:	ce 01       	movw	r24, r28
     672:	d6 df       	rcall	.-84     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     674:	6f e3       	ldi	r22, 0x3F	; 63
     676:	ce 01       	movw	r24, r28
     678:	d3 df       	rcall	.-90     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     67a:	63 ed       	ldi	r22, 0xD3	; 211
     67c:	ce 01       	movw	r24, r28
     67e:	d0 df       	rcall	.-96     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	ce 01       	movw	r24, r28
     684:	cd df       	rcall	.-102    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     686:	60 e4       	ldi	r22, 0x40	; 64
     688:	ce 01       	movw	r24, r28
     68a:	ca df       	rcall	.-108    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     68c:	6d e8       	ldi	r22, 0x8D	; 141
     68e:	ce 01       	movw	r24, r28
     690:	c7 df       	rcall	.-114    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     692:	64 e1       	ldi	r22, 0x14	; 20
     694:	ce 01       	movw	r24, r28
     696:	c4 df       	rcall	.-120    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     698:	60 e2       	ldi	r22, 0x20	; 32
     69a:	ce 01       	movw	r24, r28
     69c:	c1 df       	rcall	.-126    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	ce 01       	movw	r24, r28
     6a2:	be df       	rcall	.-132    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6a4:	61 ea       	ldi	r22, 0xA1	; 161
     6a6:	ce 01       	movw	r24, r28
     6a8:	bb df       	rcall	.-138    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6aa:	68 ec       	ldi	r22, 0xC8	; 200
     6ac:	ce 01       	movw	r24, r28
     6ae:	b8 df       	rcall	.-144    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6b0:	6a ed       	ldi	r22, 0xDA	; 218
     6b2:	ce 01       	movw	r24, r28
     6b4:	b5 df       	rcall	.-150    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6b6:	62 e1       	ldi	r22, 0x12	; 18
     6b8:	ce 01       	movw	r24, r28
     6ba:	b2 df       	rcall	.-156    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6bc:	61 e8       	ldi	r22, 0x81	; 129
     6be:	ce 01       	movw	r24, r28
     6c0:	af df       	rcall	.-162    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6c2:	6f ec       	ldi	r22, 0xCF	; 207
     6c4:	ce 01       	movw	r24, r28
     6c6:	ac df       	rcall	.-168    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6c8:	69 ed       	ldi	r22, 0xD9	; 217
     6ca:	ce 01       	movw	r24, r28
     6cc:	a9 df       	rcall	.-174    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6ce:	61 ef       	ldi	r22, 0xF1	; 241
     6d0:	ce 01       	movw	r24, r28
     6d2:	a6 df       	rcall	.-180    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6d4:	6b ed       	ldi	r22, 0xDB	; 219
     6d6:	ce 01       	movw	r24, r28
     6d8:	a3 df       	rcall	.-186    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6da:	60 e4       	ldi	r22, 0x40	; 64
     6dc:	ce 01       	movw	r24, r28
     6de:	a0 df       	rcall	.-192    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6e0:	64 ea       	ldi	r22, 0xA4	; 164
     6e2:	ce 01       	movw	r24, r28
     6e4:	9d df       	rcall	.-198    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6e6:	66 ea       	ldi	r22, 0xA6	; 166
     6e8:	ce 01       	movw	r24, r28
     6ea:	9a df       	rcall	.-204    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6ec:	6f ea       	ldi	r22, 0xAF	; 175
     6ee:	ce 01       	movw	r24, r28
     6f0:	97 df       	rcall	.-210    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <_ZN7DisplayC1Ev>:
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	ec 01       	movw	r28, r24
     6fe:	9c 5f       	subi	r25, 0xFC	; 252
     700:	0e 94 25 23 	call	0x464a	; 0x464a <_ZN3I2CC1Ev>
     704:	ce 01       	movw	r24, r28
     706:	a8 df       	rcall	.-176    	; 0x658 <_ZN7Display17InitializeDisplayEv>
     708:	df 91       	pop	r29
     70a:	cf 91       	pop	r28
     70c:	08 95       	ret

0000070e <_ZN7Display6invertEh>:
     70e:	66 23       	and	r22, r22
     710:	19 f0       	breq	.+6      	; 0x718 <_ZN7Display6invertEh+0xa>
     712:	67 ea       	ldi	r22, 0xA7	; 167
     714:	85 cf       	rjmp	.-246    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     716:	08 95       	ret
     718:	66 ea       	ldi	r22, 0xA6	; 166
     71a:	82 cf       	rjmp	.-252    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     71c:	08 95       	ret

0000071e <_ZN7Display9sendFrameEv>:
     71e:	ef 92       	push	r14
     720:	ff 92       	push	r15
     722:	0f 93       	push	r16
     724:	1f 93       	push	r17
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	8c 01       	movw	r16, r24
     72c:	61 e2       	ldi	r22, 0x21	; 33
     72e:	78 df       	rcall	.-272    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     730:	60 e0       	ldi	r22, 0x00	; 0
     732:	c8 01       	movw	r24, r16
     734:	75 df       	rcall	.-278    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     736:	6f e7       	ldi	r22, 0x7F	; 127
     738:	c8 01       	movw	r24, r16
     73a:	72 df       	rcall	.-284    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     73c:	62 e2       	ldi	r22, 0x22	; 34
     73e:	c8 01       	movw	r24, r16
     740:	6f df       	rcall	.-290    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	c8 01       	movw	r24, r16
     746:	6c df       	rcall	.-296    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     748:	67 e0       	ldi	r22, 0x07	; 7
     74a:	c8 01       	movw	r24, r16
     74c:	69 df       	rcall	.-302    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     74e:	78 01       	movw	r14, r16
     750:	8c ef       	ldi	r24, 0xFC	; 252
     752:	f8 1a       	sub	r15, r24
     754:	c7 01       	movw	r24, r14
     756:	0e 94 2a 23 	call	0x4654	; 0x4654 <_ZN3I2C9twi_startEv>
     75a:	68 e7       	ldi	r22, 0x78	; 120
     75c:	c7 01       	movw	r24, r14
     75e:	0e 94 32 23 	call	0x4664	; 0x4664 <_ZN3I2C9twi_writeEh>
     762:	60 e4       	ldi	r22, 0x40	; 64
     764:	c7 01       	movw	r24, r14
     766:	0e 94 32 23 	call	0x4664	; 0x4664 <_ZN3I2C9twi_writeEh>
     76a:	c0 e0       	ldi	r28, 0x00	; 0
     76c:	d0 e0       	ldi	r29, 0x00	; 0
     76e:	f8 01       	movw	r30, r16
     770:	61 91       	ld	r22, Z+
     772:	8f 01       	movw	r16, r30
     774:	c7 01       	movw	r24, r14
     776:	0e 94 32 23 	call	0x4664	; 0x4664 <_ZN3I2C9twi_writeEh>
     77a:	21 96       	adiw	r28, 0x01	; 1
     77c:	c1 15       	cp	r28, r1
     77e:	f4 e0       	ldi	r31, 0x04	; 4
     780:	df 07       	cpc	r29, r31
     782:	a9 f7       	brne	.-22     	; 0x76e <_ZN7Display9sendFrameEv+0x50>
     784:	c7 01       	movw	r24, r14
     786:	0e 94 2e 23 	call	0x465c	; 0x465c <_ZN3I2C8twi_stopEv>
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	1f 91       	pop	r17
     790:	0f 91       	pop	r16
     792:	ff 90       	pop	r15
     794:	ef 90       	pop	r14
     796:	08 95       	ret

00000798 <_ZN7Display9drawPixelEhhh>:
     798:	66 23       	and	r22, r22
     79a:	bc f1       	brlt	.+110    	; 0x80a <_ZN7Display9drawPixelEhhh+0x72>
     79c:	40 34       	cpi	r20, 0x40	; 64
     79e:	a8 f5       	brcc	.+106    	; 0x80a <_ZN7Display9drawPixelEhhh+0x72>
     7a0:	21 11       	cpse	r18, r1
     7a2:	19 c0       	rjmp	.+50     	; 0x7d6 <_ZN7Display9drawPixelEhhh+0x3e>
     7a4:	e4 2f       	mov	r30, r20
     7a6:	e6 95       	lsr	r30
     7a8:	e6 95       	lsr	r30
     7aa:	e6 95       	lsr	r30
     7ac:	20 e8       	ldi	r18, 0x80	; 128
     7ae:	e2 9f       	mul	r30, r18
     7b0:	f0 01       	movw	r30, r0
     7b2:	11 24       	eor	r1, r1
     7b4:	e6 0f       	add	r30, r22
     7b6:	f1 1d       	adc	r31, r1
     7b8:	e8 0f       	add	r30, r24
     7ba:	f9 1f       	adc	r31, r25
     7bc:	47 70       	andi	r20, 0x07	; 7
     7be:	21 e0       	ldi	r18, 0x01	; 1
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	c9 01       	movw	r24, r18
     7c4:	02 c0       	rjmp	.+4      	; 0x7ca <_ZN7Display9drawPixelEhhh+0x32>
     7c6:	88 0f       	add	r24, r24
     7c8:	99 1f       	adc	r25, r25
     7ca:	4a 95       	dec	r20
     7cc:	e2 f7       	brpl	.-8      	; 0x7c6 <_ZN7Display9drawPixelEhhh+0x2e>
     7ce:	90 81       	ld	r25, Z
     7d0:	89 2b       	or	r24, r25
     7d2:	80 83       	st	Z, r24
     7d4:	08 95       	ret
     7d6:	e4 2f       	mov	r30, r20
     7d8:	e6 95       	lsr	r30
     7da:	e6 95       	lsr	r30
     7dc:	e6 95       	lsr	r30
     7de:	30 e8       	ldi	r19, 0x80	; 128
     7e0:	e3 9f       	mul	r30, r19
     7e2:	f0 01       	movw	r30, r0
     7e4:	11 24       	eor	r1, r1
     7e6:	e6 0f       	add	r30, r22
     7e8:	f1 1d       	adc	r31, r1
     7ea:	e8 0f       	add	r30, r24
     7ec:	f9 1f       	adc	r31, r25
     7ee:	47 70       	andi	r20, 0x07	; 7
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	9c 01       	movw	r18, r24
     7f6:	02 c0       	rjmp	.+4      	; 0x7fc <_ZN7Display9drawPixelEhhh+0x64>
     7f8:	22 0f       	add	r18, r18
     7fa:	33 1f       	adc	r19, r19
     7fc:	4a 95       	dec	r20
     7fe:	e2 f7       	brpl	.-8      	; 0x7f8 <_ZN7Display9drawPixelEhhh+0x60>
     800:	a9 01       	movw	r20, r18
     802:	40 95       	com	r20
     804:	80 81       	ld	r24, Z
     806:	48 23       	and	r20, r24
     808:	40 83       	st	Z, r20
     80a:	08 95       	ret

0000080c <_ZN7Display9drawVLineEhhh>:
     80c:	ff 92       	push	r15
     80e:	0f 93       	push	r16
     810:	1f 93       	push	r17
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	ec 01       	movw	r28, r24
     818:	06 2f       	mov	r16, r22
     81a:	22 23       	and	r18, r18
     81c:	59 f0       	breq	.+22     	; 0x834 <_ZN7Display9drawVLineEhhh+0x28>
     81e:	f2 2e       	mov	r15, r18
     820:	f4 0e       	add	r15, r20
     822:	14 2f       	mov	r17, r20
     824:	20 e0       	ldi	r18, 0x00	; 0
     826:	41 2f       	mov	r20, r17
     828:	60 2f       	mov	r22, r16
     82a:	ce 01       	movw	r24, r28
     82c:	b5 df       	rcall	.-150    	; 0x798 <_ZN7Display9drawPixelEhhh>
     82e:	1f 5f       	subi	r17, 0xFF	; 255
     830:	1f 11       	cpse	r17, r15
     832:	f8 cf       	rjmp	.-16     	; 0x824 <_ZN7Display9drawVLineEhhh+0x18>
     834:	df 91       	pop	r29
     836:	cf 91       	pop	r28
     838:	1f 91       	pop	r17
     83a:	0f 91       	pop	r16
     83c:	ff 90       	pop	r15
     83e:	08 95       	ret

00000840 <_ZN7Display9drawHLineEhhh>:
     840:	ff 92       	push	r15
     842:	0f 93       	push	r16
     844:	1f 93       	push	r17
     846:	cf 93       	push	r28
     848:	df 93       	push	r29
     84a:	ec 01       	movw	r28, r24
     84c:	04 2f       	mov	r16, r20
     84e:	22 23       	and	r18, r18
     850:	59 f0       	breq	.+22     	; 0x868 <_ZN7Display9drawHLineEhhh+0x28>
     852:	f2 2e       	mov	r15, r18
     854:	f6 0e       	add	r15, r22
     856:	16 2f       	mov	r17, r22
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	40 2f       	mov	r20, r16
     85c:	61 2f       	mov	r22, r17
     85e:	ce 01       	movw	r24, r28
     860:	9b df       	rcall	.-202    	; 0x798 <_ZN7Display9drawPixelEhhh>
     862:	1f 5f       	subi	r17, 0xFF	; 255
     864:	1f 11       	cpse	r17, r15
     866:	f8 cf       	rjmp	.-16     	; 0x858 <_ZN7Display9drawHLineEhhh+0x18>
     868:	df 91       	pop	r29
     86a:	cf 91       	pop	r28
     86c:	1f 91       	pop	r17
     86e:	0f 91       	pop	r16
     870:	ff 90       	pop	r15
     872:	08 95       	ret

00000874 <_ZN7Display9draw_lineEhhhf>:
     874:	2f 92       	push	r2
     876:	3f 92       	push	r3
     878:	4f 92       	push	r4
     87a:	5f 92       	push	r5
     87c:	6f 92       	push	r6
     87e:	7f 92       	push	r7
     880:	8f 92       	push	r8
     882:	9f 92       	push	r9
     884:	af 92       	push	r10
     886:	bf 92       	push	r11
     888:	cf 92       	push	r12
     88a:	df 92       	push	r13
     88c:	ef 92       	push	r14
     88e:	ff 92       	push	r15
     890:	0f 93       	push	r16
     892:	1f 93       	push	r17
     894:	cf 93       	push	r28
     896:	df 93       	push	r29
     898:	cd b7       	in	r28, 0x3d	; 61
     89a:	de b7       	in	r29, 0x3e	; 62
     89c:	2b 97       	sbiw	r28, 0x0b	; 11
     89e:	0f b6       	in	r0, 0x3f	; 63
     8a0:	f8 94       	cli
     8a2:	de bf       	out	0x3e, r29	; 62
     8a4:	0f be       	out	0x3f, r0	; 63
     8a6:	cd bf       	out	0x3d, r28	; 61
     8a8:	1c 01       	movw	r2, r24
     8aa:	d6 2e       	mov	r13, r22
     8ac:	c4 2e       	mov	r12, r20
     8ae:	29 83       	std	Y+1, r18	; 0x01
     8b0:	22 23       	and	r18, r18
     8b2:	09 f4       	brne	.+2      	; 0x8b6 <_ZN7Display9draw_lineEhhhf+0x42>
     8b4:	68 c0       	rjmp	.+208    	; 0x986 <_ZN7Display9draw_lineEhhhf+0x112>
     8b6:	c8 01       	movw	r24, r16
     8b8:	b7 01       	movw	r22, r14
     8ba:	0e 94 8a 2c 	call	0x5914	; 0x5914 <cos>
     8be:	2b 01       	movw	r4, r22
     8c0:	3c 01       	movw	r6, r24
     8c2:	c8 01       	movw	r24, r16
     8c4:	b7 01       	movw	r22, r14
     8c6:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <sin>
     8ca:	4b 01       	movw	r8, r22
     8cc:	5c 01       	movw	r10, r24
     8ce:	1b 86       	std	Y+11, r1	; 0x0b
     8d0:	1a 86       	std	Y+10, r1	; 0x0a
     8d2:	8c 2d       	mov	r24, r12
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	a0 e0       	ldi	r26, 0x00	; 0
     8d8:	b0 e0       	ldi	r27, 0x00	; 0
     8da:	8a 83       	std	Y+2, r24	; 0x02
     8dc:	9b 83       	std	Y+3, r25	; 0x03
     8de:	ac 83       	std	Y+4, r26	; 0x04
     8e0:	bd 83       	std	Y+5, r27	; 0x05
     8e2:	8d 2d       	mov	r24, r13
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	b0 e0       	ldi	r27, 0x00	; 0
     8ea:	8e 83       	std	Y+6, r24	; 0x06
     8ec:	9f 83       	std	Y+7, r25	; 0x07
     8ee:	a8 87       	std	Y+8, r26	; 0x08
     8f0:	b9 87       	std	Y+9, r27	; 0x09
     8f2:	aa 85       	ldd	r26, Y+10	; 0x0a
     8f4:	bb 85       	ldd	r27, Y+11	; 0x0b
     8f6:	bd 01       	movw	r22, r26
     8f8:	88 27       	eor	r24, r24
     8fa:	77 fd       	sbrc	r23, 7
     8fc:	80 95       	com	r24
     8fe:	98 2f       	mov	r25, r24
     900:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     904:	a5 01       	movw	r20, r10
     906:	94 01       	movw	r18, r8
     908:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     90c:	6b 01       	movw	r12, r22
     90e:	7c 01       	movw	r14, r24
     910:	6a 81       	ldd	r22, Y+2	; 0x02
     912:	7b 81       	ldd	r23, Y+3	; 0x03
     914:	8c 81       	ldd	r24, Y+4	; 0x04
     916:	9d 81       	ldd	r25, Y+5	; 0x05
     918:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     91c:	9b 01       	movw	r18, r22
     91e:	ac 01       	movw	r20, r24
     920:	c7 01       	movw	r24, r14
     922:	b6 01       	movw	r22, r12
     924:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     928:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
     92c:	16 2f       	mov	r17, r22
     92e:	6a 85       	ldd	r22, Y+10	; 0x0a
     930:	7b 85       	ldd	r23, Y+11	; 0x0b
     932:	71 95       	neg	r23
     934:	61 95       	neg	r22
     936:	71 09       	sbc	r23, r1
     938:	88 27       	eor	r24, r24
     93a:	77 fd       	sbrc	r23, 7
     93c:	80 95       	com	r24
     93e:	98 2f       	mov	r25, r24
     940:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     944:	a3 01       	movw	r20, r6
     946:	92 01       	movw	r18, r4
     948:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     94c:	6b 01       	movw	r12, r22
     94e:	7c 01       	movw	r14, r24
     950:	6e 81       	ldd	r22, Y+6	; 0x06
     952:	7f 81       	ldd	r23, Y+7	; 0x07
     954:	88 85       	ldd	r24, Y+8	; 0x08
     956:	99 85       	ldd	r25, Y+9	; 0x09
     958:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     95c:	9b 01       	movw	r18, r22
     95e:	ac 01       	movw	r20, r24
     960:	c7 01       	movw	r24, r14
     962:	b6 01       	movw	r22, r12
     964:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     968:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
     96c:	20 e0       	ldi	r18, 0x00	; 0
     96e:	41 2f       	mov	r20, r17
     970:	c1 01       	movw	r24, r2
     972:	12 df       	rcall	.-476    	; 0x798 <_ZN7Display9drawPixelEhhh>
     974:	ea 85       	ldd	r30, Y+10	; 0x0a
     976:	fb 85       	ldd	r31, Y+11	; 0x0b
     978:	31 96       	adiw	r30, 0x01	; 1
     97a:	fb 87       	std	Y+11, r31	; 0x0b
     97c:	ea 87       	std	Y+10, r30	; 0x0a
     97e:	f9 81       	ldd	r31, Y+1	; 0x01
     980:	ef 17       	cp	r30, r31
     982:	08 f4       	brcc	.+2      	; 0x986 <_ZN7Display9draw_lineEhhhf+0x112>
     984:	b6 cf       	rjmp	.-148    	; 0x8f2 <_ZN7Display9draw_lineEhhhf+0x7e>
     986:	2b 96       	adiw	r28, 0x0b	; 11
     988:	0f b6       	in	r0, 0x3f	; 63
     98a:	f8 94       	cli
     98c:	de bf       	out	0x3e, r29	; 62
     98e:	0f be       	out	0x3f, r0	; 63
     990:	cd bf       	out	0x3d, r28	; 61
     992:	df 91       	pop	r29
     994:	cf 91       	pop	r28
     996:	1f 91       	pop	r17
     998:	0f 91       	pop	r16
     99a:	ff 90       	pop	r15
     99c:	ef 90       	pop	r14
     99e:	df 90       	pop	r13
     9a0:	cf 90       	pop	r12
     9a2:	bf 90       	pop	r11
     9a4:	af 90       	pop	r10
     9a6:	9f 90       	pop	r9
     9a8:	8f 90       	pop	r8
     9aa:	7f 90       	pop	r7
     9ac:	6f 90       	pop	r6
     9ae:	5f 90       	pop	r5
     9b0:	4f 90       	pop	r4
     9b2:	3f 90       	pop	r3
     9b4:	2f 90       	pop	r2
     9b6:	08 95       	ret

000009b8 <_ZN7Display13draw_triangleEhhhff>:
     9b8:	2f 92       	push	r2
     9ba:	3f 92       	push	r3
     9bc:	4f 92       	push	r4
     9be:	5f 92       	push	r5
     9c0:	6f 92       	push	r6
     9c2:	7f 92       	push	r7
     9c4:	8f 92       	push	r8
     9c6:	9f 92       	push	r9
     9c8:	af 92       	push	r10
     9ca:	bf 92       	push	r11
     9cc:	cf 92       	push	r12
     9ce:	df 92       	push	r13
     9d0:	ef 92       	push	r14
     9d2:	ff 92       	push	r15
     9d4:	0f 93       	push	r16
     9d6:	1f 93       	push	r17
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	cd b7       	in	r28, 0x3d	; 61
     9de:	de b7       	in	r29, 0x3e	; 62
     9e0:	60 97       	sbiw	r28, 0x10	; 16
     9e2:	0f b6       	in	r0, 0x3f	; 63
     9e4:	f8 94       	cli
     9e6:	de bf       	out	0x3e, r29	; 62
     9e8:	0f be       	out	0x3f, r0	; 63
     9ea:	cd bf       	out	0x3d, r28	; 61
     9ec:	1c 01       	movw	r2, r24
     9ee:	6f 87       	std	Y+15, r22	; 0x0f
     9f0:	4d 83       	std	Y+5, r20	; 0x05
     9f2:	29 83       	std	Y+1, r18	; 0x01
     9f4:	c6 01       	movw	r24, r12
     9f6:	b5 01       	movw	r22, r10
     9f8:	25 e3       	ldi	r18, 0x35	; 53
     9fa:	3a ef       	ldi	r19, 0xFA	; 250
     9fc:	4e e8       	ldi	r20, 0x8E	; 142
     9fe:	5c e3       	ldi	r21, 0x3C	; 60
     a00:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     a04:	4b 01       	movw	r8, r22
     a06:	5c 01       	movw	r10, r24
     a08:	25 e3       	ldi	r18, 0x35	; 53
     a0a:	3a ef       	ldi	r19, 0xFA	; 250
     a0c:	4e e8       	ldi	r20, 0x8E	; 142
     a0e:	5c e3       	ldi	r21, 0x3C	; 60
     a10:	c8 01       	movw	r24, r16
     a12:	b7 01       	movw	r22, r14
     a14:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     a18:	6e 83       	std	Y+6, r22	; 0x06
     a1a:	7f 83       	std	Y+7, r23	; 0x07
     a1c:	88 87       	std	Y+8, r24	; 0x08
     a1e:	99 87       	std	Y+9, r25	; 0x09
     a20:	79 80       	ldd	r7, Y+1	; 0x01
     a22:	76 94       	lsr	r7
     a24:	85 01       	movw	r16, r10
     a26:	74 01       	movw	r14, r8
     a28:	27 2d       	mov	r18, r7
     a2a:	4d 81       	ldd	r20, Y+5	; 0x05
     a2c:	6f 85       	ldd	r22, Y+15	; 0x0f
     a2e:	c1 01       	movw	r24, r2
     a30:	21 df       	rcall	.-446    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     a32:	2b ed       	ldi	r18, 0xDB	; 219
     a34:	3f e0       	ldi	r19, 0x0F	; 15
     a36:	49 e4       	ldi	r20, 0x49	; 73
     a38:	50 e4       	ldi	r21, 0x40	; 64
     a3a:	c5 01       	movw	r24, r10
     a3c:	b4 01       	movw	r22, r8
     a3e:	0e 94 bf 2b 	call	0x577e	; 0x577e <__subsf3>
     a42:	7b 01       	movw	r14, r22
     a44:	8c 01       	movw	r16, r24
     a46:	27 2d       	mov	r18, r7
     a48:	4d 81       	ldd	r20, Y+5	; 0x05
     a4a:	6f 85       	ldd	r22, Y+15	; 0x0f
     a4c:	c1 01       	movw	r24, r2
     a4e:	12 df       	rcall	.-476    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     a50:	6e 81       	ldd	r22, Y+6	; 0x06
     a52:	7f 81       	ldd	r23, Y+7	; 0x07
     a54:	88 85       	ldd	r24, Y+8	; 0x08
     a56:	99 85       	ldd	r25, Y+9	; 0x09
     a58:	0e 94 f2 2e 	call	0x5de4	; 0x5de4 <tan>
     a5c:	6b 01       	movw	r12, r22
     a5e:	7c 01       	movw	r14, r24
     a60:	67 2d       	mov	r22, r7
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	80 e0       	ldi	r24, 0x00	; 0
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     a6c:	a7 01       	movw	r20, r14
     a6e:	96 01       	movw	r18, r12
     a70:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     a74:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
     a78:	68 8b       	std	Y+16, r22	; 0x10
     a7a:	2b ed       	ldi	r18, 0xDB	; 219
     a7c:	3f e0       	ldi	r19, 0x0F	; 15
     a7e:	49 ec       	ldi	r20, 0xC9	; 201
     a80:	5f e3       	ldi	r21, 0x3F	; 63
     a82:	c5 01       	movw	r24, r10
     a84:	b4 01       	movw	r22, r8
     a86:	0e 94 bf 2b 	call	0x577e	; 0x577e <__subsf3>
     a8a:	6a 87       	std	Y+10, r22	; 0x0a
     a8c:	7b 87       	std	Y+11, r23	; 0x0b
     a8e:	8c 87       	std	Y+12, r24	; 0x0c
     a90:	9d 87       	std	Y+13, r25	; 0x0d
     a92:	7b 01       	movw	r14, r22
     a94:	8c 01       	movw	r16, r24
     a96:	28 89       	ldd	r18, Y+16	; 0x10
     a98:	4d 81       	ldd	r20, Y+5	; 0x05
     a9a:	6f 85       	ldd	r22, Y+15	; 0x0f
     a9c:	c1 01       	movw	r24, r2
     a9e:	ea de       	rcall	.-556    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     aa0:	6e 81       	ldd	r22, Y+6	; 0x06
     aa2:	7f 81       	ldd	r23, Y+7	; 0x07
     aa4:	88 85       	ldd	r24, Y+8	; 0x08
     aa6:	99 85       	ldd	r25, Y+9	; 0x09
     aa8:	0e 94 8a 2c 	call	0x5914	; 0x5914 <cos>
     aac:	6b 01       	movw	r12, r22
     aae:	7c 01       	movw	r14, r24
     ab0:	29 81       	ldd	r18, Y+1	; 0x01
     ab2:	62 2f       	mov	r22, r18
     ab4:	70 e0       	ldi	r23, 0x00	; 0
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     abe:	2b 01       	movw	r4, r22
     ac0:	3c 01       	movw	r6, r24
     ac2:	a7 01       	movw	r20, r14
     ac4:	96 01       	movw	r18, r12
     ac6:	c7 01       	movw	r24, r14
     ac8:	b6 01       	movw	r22, r12
     aca:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     ace:	9b 01       	movw	r18, r22
     ad0:	ac 01       	movw	r20, r24
     ad2:	c3 01       	movw	r24, r6
     ad4:	b2 01       	movw	r22, r4
     ad6:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
     ada:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
     ade:	6e 87       	std	Y+14, r22	; 0x0e
     ae0:	e8 89       	ldd	r30, Y+16	; 0x10
     ae2:	6e 2f       	mov	r22, r30
     ae4:	70 e0       	ldi	r23, 0x00	; 0
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     aee:	69 83       	std	Y+1, r22	; 0x01
     af0:	7a 83       	std	Y+2, r23	; 0x02
     af2:	8b 83       	std	Y+3, r24	; 0x03
     af4:	9c 83       	std	Y+4, r25	; 0x04
     af6:	6a 85       	ldd	r22, Y+10	; 0x0a
     af8:	7b 85       	ldd	r23, Y+11	; 0x0b
     afa:	8c 85       	ldd	r24, Y+12	; 0x0c
     afc:	9d 85       	ldd	r25, Y+13	; 0x0d
     afe:	0e 94 8a 2c 	call	0x5914	; 0x5914 <cos>
     b02:	6b 01       	movw	r12, r22
     b04:	7c 01       	movw	r14, r24
     b06:	ff 85       	ldd	r31, Y+15	; 0x0f
     b08:	6f 2f       	mov	r22, r31
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	80 e0       	ldi	r24, 0x00	; 0
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     b14:	2b 01       	movw	r4, r22
     b16:	3c 01       	movw	r6, r24
     b18:	a7 01       	movw	r20, r14
     b1a:	96 01       	movw	r18, r12
     b1c:	69 81       	ldd	r22, Y+1	; 0x01
     b1e:	7a 81       	ldd	r23, Y+2	; 0x02
     b20:	8b 81       	ldd	r24, Y+3	; 0x03
     b22:	9c 81       	ldd	r25, Y+4	; 0x04
     b24:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     b28:	9b 01       	movw	r18, r22
     b2a:	ac 01       	movw	r20, r24
     b2c:	c3 01       	movw	r24, r6
     b2e:	b2 01       	movw	r22, r4
     b30:	0e 94 bf 2b 	call	0x577e	; 0x577e <__subsf3>
     b34:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
     b38:	6f 87       	std	Y+15, r22	; 0x0f
     b3a:	6a 85       	ldd	r22, Y+10	; 0x0a
     b3c:	7b 85       	ldd	r23, Y+11	; 0x0b
     b3e:	8c 85       	ldd	r24, Y+12	; 0x0c
     b40:	9d 85       	ldd	r25, Y+13	; 0x0d
     b42:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <sin>
     b46:	6b 01       	movw	r12, r22
     b48:	7c 01       	movw	r14, r24
     b4a:	2d 81       	ldd	r18, Y+5	; 0x05
     b4c:	62 2f       	mov	r22, r18
     b4e:	70 e0       	ldi	r23, 0x00	; 0
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     b58:	2b 01       	movw	r4, r22
     b5a:	3c 01       	movw	r6, r24
     b5c:	a7 01       	movw	r20, r14
     b5e:	96 01       	movw	r18, r12
     b60:	69 81       	ldd	r22, Y+1	; 0x01
     b62:	7a 81       	ldd	r23, Y+2	; 0x02
     b64:	8b 81       	ldd	r24, Y+3	; 0x03
     b66:	9c 81       	ldd	r25, Y+4	; 0x04
     b68:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     b6c:	9b 01       	movw	r18, r22
     b6e:	ac 01       	movw	r20, r24
     b70:	c3 01       	movw	r24, r6
     b72:	b2 01       	movw	r22, r4
     b74:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     b78:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
     b7c:	d6 2e       	mov	r13, r22
     b7e:	a5 01       	movw	r20, r10
     b80:	94 01       	movw	r18, r8
     b82:	6e 81       	ldd	r22, Y+6	; 0x06
     b84:	7f 81       	ldd	r23, Y+7	; 0x07
     b86:	88 85       	ldd	r24, Y+8	; 0x08
     b88:	99 85       	ldd	r25, Y+9	; 0x09
     b8a:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     b8e:	7b 01       	movw	r14, r22
     b90:	8c 01       	movw	r16, r24
     b92:	2e 85       	ldd	r18, Y+14	; 0x0e
     b94:	4d 2d       	mov	r20, r13
     b96:	6f 85       	ldd	r22, Y+15	; 0x0f
     b98:	c1 01       	movw	r24, r2
     b9a:	6c de       	rcall	.-808    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     b9c:	2e 81       	ldd	r18, Y+6	; 0x06
     b9e:	3f 81       	ldd	r19, Y+7	; 0x07
     ba0:	48 85       	ldd	r20, Y+8	; 0x08
     ba2:	59 85       	ldd	r21, Y+9	; 0x09
     ba4:	c5 01       	movw	r24, r10
     ba6:	b4 01       	movw	r22, r8
     ba8:	0e 94 bf 2b 	call	0x577e	; 0x577e <__subsf3>
     bac:	2b ed       	ldi	r18, 0xDB	; 219
     bae:	3f e0       	ldi	r19, 0x0F	; 15
     bb0:	49 e4       	ldi	r20, 0x49	; 73
     bb2:	50 e4       	ldi	r21, 0x40	; 64
     bb4:	0e 94 bf 2b 	call	0x577e	; 0x577e <__subsf3>
     bb8:	7b 01       	movw	r14, r22
     bba:	8c 01       	movw	r16, r24
     bbc:	2e 85       	ldd	r18, Y+14	; 0x0e
     bbe:	4d 2d       	mov	r20, r13
     bc0:	6f 85       	ldd	r22, Y+15	; 0x0f
     bc2:	c1 01       	movw	r24, r2
     bc4:	57 de       	rcall	.-850    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     bc6:	60 96       	adiw	r28, 0x10	; 16
     bc8:	0f b6       	in	r0, 0x3f	; 63
     bca:	f8 94       	cli
     bcc:	de bf       	out	0x3e, r29	; 62
     bce:	0f be       	out	0x3f, r0	; 63
     bd0:	cd bf       	out	0x3d, r28	; 61
     bd2:	df 91       	pop	r29
     bd4:	cf 91       	pop	r28
     bd6:	1f 91       	pop	r17
     bd8:	0f 91       	pop	r16
     bda:	ff 90       	pop	r15
     bdc:	ef 90       	pop	r14
     bde:	df 90       	pop	r13
     be0:	cf 90       	pop	r12
     be2:	bf 90       	pop	r11
     be4:	af 90       	pop	r10
     be6:	9f 90       	pop	r9
     be8:	8f 90       	pop	r8
     bea:	7f 90       	pop	r7
     bec:	6f 90       	pop	r6
     bee:	5f 90       	pop	r5
     bf0:	4f 90       	pop	r4
     bf2:	3f 90       	pop	r3
     bf4:	2f 90       	pop	r2
     bf6:	08 95       	ret

00000bf8 <_ZN7Display9draw_ASCIEhhh>:
     bf8:	0f 93       	push	r16
     bfa:	1f 93       	push	r17
     bfc:	cf 93       	push	r28
     bfe:	df 93       	push	r29
     c00:	61 32       	cpi	r22, 0x21	; 33
     c02:	08 f4       	brcc	.+2      	; 0xc06 <_ZN7Display9draw_ASCIEhhh+0xe>
     c04:	42 c0       	rjmp	.+132    	; 0xc8a <_ZN7Display9draw_ASCIEhhh+0x92>
     c06:	a4 2f       	mov	r26, r20
     c08:	b0 e0       	ldi	r27, 0x00	; 0
     c0a:	02 2f       	mov	r16, r18
     c0c:	06 95       	lsr	r16
     c0e:	06 95       	lsr	r16
     c10:	06 95       	lsr	r16
     c12:	30 e8       	ldi	r19, 0x80	; 128
     c14:	03 9f       	mul	r16, r19
     c16:	80 01       	movw	r16, r0
     c18:	11 24       	eor	r1, r1
     c1a:	ed 01       	movw	r28, r26
     c1c:	c0 0f       	add	r28, r16
     c1e:	d1 1f       	adc	r29, r17
     c20:	00 58       	subi	r16, 0x80	; 128
     c22:	1f 4f       	sbci	r17, 0xFF	; 255
     c24:	0a 0f       	add	r16, r26
     c26:	1b 1f       	adc	r17, r27
     c28:	61 52       	subi	r22, 0x21	; 33
     c2a:	46 2f       	mov	r20, r22
     c2c:	50 e0       	ldi	r21, 0x00	; 0
     c2e:	fa 01       	movw	r30, r20
     c30:	ee 0f       	add	r30, r30
     c32:	ff 1f       	adc	r31, r31
     c34:	ee 0f       	add	r30, r30
     c36:	ff 1f       	adc	r31, r31
     c38:	e4 0f       	add	r30, r20
     c3a:	f5 1f       	adc	r31, r21
     c3c:	ea 53       	subi	r30, 0x3A	; 58
     c3e:	fd 4f       	sbci	r31, 0xFD	; 253
     c40:	dc 01       	movw	r26, r24
     c42:	ac 0f       	add	r26, r28
     c44:	bd 1f       	adc	r27, r29
     c46:	ae 01       	movw	r20, r28
     c48:	05 96       	adiw	r24, 0x05	; 5
     c4a:	8c 0f       	add	r24, r28
     c4c:	9d 1f       	adc	r25, r29
     c4e:	27 70       	andi	r18, 0x07	; 7
     c50:	64 91       	lpm	r22, Z
     c52:	70 e0       	ldi	r23, 0x00	; 0
     c54:	02 2e       	mov	r0, r18
     c56:	02 c0       	rjmp	.+4      	; 0xc5c <_ZN7Display9draw_ASCIEhhh+0x64>
     c58:	66 0f       	add	r22, r22
     c5a:	77 1f       	adc	r23, r23
     c5c:	0a 94       	dec	r0
     c5e:	e2 f7       	brpl	.-8      	; 0xc58 <_ZN7Display9draw_ASCIEhhh+0x60>
     c60:	3c 91       	ld	r19, X
     c62:	36 2b       	or	r19, r22
     c64:	3c 93       	st	X, r19
     c66:	67 2f       	mov	r22, r23
     c68:	77 27       	eor	r23, r23
     c6a:	61 15       	cp	r22, r1
     c6c:	71 05       	cpc	r23, r1
     c6e:	41 f0       	breq	.+16     	; 0xc80 <_ZN7Display9draw_ASCIEhhh+0x88>
     c70:	ed 01       	movw	r28, r26
     c72:	c4 1b       	sub	r28, r20
     c74:	d5 0b       	sbc	r29, r21
     c76:	c0 0f       	add	r28, r16
     c78:	d1 1f       	adc	r29, r17
     c7a:	38 81       	ld	r19, Y
     c7c:	63 2b       	or	r22, r19
     c7e:	68 83       	st	Y, r22
     c80:	31 96       	adiw	r30, 0x01	; 1
     c82:	11 96       	adiw	r26, 0x01	; 1
     c84:	a8 17       	cp	r26, r24
     c86:	b9 07       	cpc	r27, r25
     c88:	19 f7       	brne	.-58     	; 0xc50 <_ZN7Display9draw_ASCIEhhh+0x58>
     c8a:	df 91       	pop	r29
     c8c:	cf 91       	pop	r28
     c8e:	1f 91       	pop	r17
     c90:	0f 91       	pop	r16
     c92:	08 95       	ret

00000c94 <_ZN7Display16draw_number16x16Ehhh>:

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
     c94:	ef 92       	push	r14
     c96:	ff 92       	push	r15
     c98:	0f 93       	push	r16
     c9a:	1f 93       	push	r17
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
	uint16_t symbol;
	if(number>=0 && number<10){
     ca0:	6a 30       	cpi	r22, 0x0A	; 10
     ca2:	08 f0       	brcs	.+2      	; 0xca6 <_ZN7Display16draw_number16x16Ehhh+0x12>
     ca4:	66 c0       	rjmp	.+204    	; 0xd72 <_ZN7Display16draw_number16x16Ehhh+0xde>
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     ca6:	50 e0       	ldi	r21, 0x00	; 0
     ca8:	02 2f       	mov	r16, r18
     caa:	06 95       	lsr	r16
     cac:	06 95       	lsr	r16
     cae:	06 95       	lsr	r16
     cb0:	10 e0       	ldi	r17, 0x00	; 0
     cb2:	d8 01       	movw	r26, r16
     cb4:	b6 95       	lsr	r27
     cb6:	ba 2f       	mov	r27, r26
     cb8:	aa 27       	eor	r26, r26
     cba:	b7 95       	ror	r27
     cbc:	a7 95       	ror	r26
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     cbe:	0f 5f       	subi	r16, 0xFF	; 255
     cc0:	1f 4f       	sbci	r17, 0xFF	; 255
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     cc2:	16 95       	lsr	r17
     cc4:	10 2f       	mov	r17, r16
     cc6:	00 27       	eor	r16, r16
     cc8:	17 95       	ror	r17
     cca:	07 95       	ror	r16
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     ccc:	7d 01       	movw	r14, r26
     cce:	30 e8       	ldi	r19, 0x80	; 128
     cd0:	e3 0e       	add	r14, r19
     cd2:	f1 1c       	adc	r15, r1
     cd4:	e4 0e       	add	r14, r20
     cd6:	f5 1e       	adc	r15, r21
     cd8:	e8 0e       	add	r14, r24
     cda:	f9 1e       	adc	r15, r25
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     cdc:	ea 01       	movw	r28, r20
     cde:	c0 0f       	add	r28, r16
     ce0:	d1 1f       	adc	r29, r17
     ce2:	60 97       	sbiw	r28, 0x10	; 16
     ce4:	c8 0f       	add	r28, r24
     ce6:	d9 1f       	adc	r29, r25
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     ce8:	04 0f       	add	r16, r20
     cea:	15 1f       	adc	r17, r21
     cec:	00 59       	subi	r16, 0x90	; 144
     cee:	1f 4f       	sbci	r17, 0xFF	; 255
     cf0:	08 0f       	add	r16, r24
     cf2:	19 1f       	adc	r17, r25
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     cf4:	a4 0f       	add	r26, r20
     cf6:	b5 1f       	adc	r27, r21
     cf8:	a8 0f       	add	r26, r24
     cfa:	b9 1f       	adc	r27, r25
     cfc:	e0 e2       	ldi	r30, 0x20	; 32
     cfe:	6e 9f       	mul	r22, r30
     d00:	c0 01       	movw	r24, r0
     d02:	11 24       	eor	r1, r1
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d04:	40 e0       	ldi	r20, 0x00	; 0
     d06:	50 e0       	ldi	r21, 0x00	; 0
     d08:	8a 57       	subi	r24, 0x7A	; 122
     d0a:	9e 4f       	sbci	r25, 0xFE	; 254
void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
     d0c:	27 70       	andi	r18, 0x07	; 7
     d0e:	fc 01       	movw	r30, r24
     d10:	e4 0f       	add	r30, r20
     d12:	f5 1f       	adc	r31, r21

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
     d14:	e4 91       	lpm	r30, Z
     d16:	f0 e0       	ldi	r31, 0x00	; 0
			symbol = symbol << y%8;
     d18:	02 2e       	mov	r0, r18
     d1a:	02 c0       	rjmp	.+4      	; 0xd20 <_ZN7Display16draw_number16x16Ehhh+0x8c>
     d1c:	ee 0f       	add	r30, r30
     d1e:	ff 1f       	adc	r31, r31
     d20:	0a 94       	dec	r0
     d22:	e2 f7       	brpl	.-8      	; 0xd1c <_ZN7Display16draw_number16x16Ehhh+0x88>
			if(i<16){
     d24:	40 31       	cpi	r20, 0x10	; 16
     d26:	68 f4       	brcc	.+26     	; 0xd42 <_ZN7Display16draw_number16x16Ehhh+0xae>
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d28:	3c 91       	ld	r19, X
     d2a:	3e 2b       	or	r19, r30
     d2c:	3c 93       	st	X, r19
				if(((symbol&0xFF00)>>8)==0){
     d2e:	6f 2f       	mov	r22, r31
     d30:	77 27       	eor	r23, r23
     d32:	61 15       	cp	r22, r1
     d34:	71 05       	cpc	r23, r1
     d36:	89 f0       	breq	.+34     	; 0xd5a <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d38:	f7 01       	movw	r30, r14
     d3a:	30 81       	ld	r19, Z
     d3c:	36 2b       	or	r19, r22
     d3e:	30 83       	st	Z, r19
     d40:	0c c0       	rjmp	.+24     	; 0xd5a <_ZN7Display16draw_number16x16Ehhh+0xc6>
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     d42:	38 81       	ld	r19, Y
     d44:	3e 2b       	or	r19, r30
     d46:	38 83       	st	Y, r19
				if(((symbol&0xFF00)>>8)==0){
     d48:	6f 2f       	mov	r22, r31
     d4a:	77 27       	eor	r23, r23
     d4c:	61 15       	cp	r22, r1
     d4e:	71 05       	cpc	r23, r1
     d50:	21 f0       	breq	.+8      	; 0xd5a <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d52:	f8 01       	movw	r30, r16
     d54:	30 81       	ld	r19, Z
     d56:	36 2b       	or	r19, r22
     d58:	30 83       	st	Z, r19
     d5a:	4f 5f       	subi	r20, 0xFF	; 255
     d5c:	5f 4f       	sbci	r21, 0xFF	; 255
     d5e:	ff ef       	ldi	r31, 0xFF	; 255
     d60:	ef 1a       	sub	r14, r31
     d62:	ff 0a       	sbc	r15, r31
     d64:	21 96       	adiw	r28, 0x01	; 1
     d66:	0f 5f       	subi	r16, 0xFF	; 255
     d68:	1f 4f       	sbci	r17, 0xFF	; 255
     d6a:	11 96       	adiw	r26, 0x01	; 1
}

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
     d6c:	40 32       	cpi	r20, 0x20	; 32
     d6e:	51 05       	cpc	r21, r1
     d70:	71 f6       	brne	.-100    	; 0xd0e <_ZN7Display16draw_number16x16Ehhh+0x7a>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
				}
			}
		}
	}
}
     d72:	df 91       	pop	r29
     d74:	cf 91       	pop	r28
     d76:	1f 91       	pop	r17
     d78:	0f 91       	pop	r16
     d7a:	ff 90       	pop	r15
     d7c:	ef 90       	pop	r14
     d7e:	08 95       	ret

00000d80 <_ZN7Display6analogEhhhh>:

void Display::analog(uint8_t stunde, uint8_t minute, uint8_t sekunde, uint8_t sekanzeige){
     d80:	2f 92       	push	r2
     d82:	3f 92       	push	r3
     d84:	4f 92       	push	r4
     d86:	5f 92       	push	r5
     d88:	6f 92       	push	r6
     d8a:	7f 92       	push	r7
     d8c:	8f 92       	push	r8
     d8e:	9f 92       	push	r9
     d90:	af 92       	push	r10
     d92:	bf 92       	push	r11
     d94:	cf 92       	push	r12
     d96:	df 92       	push	r13
     d98:	ef 92       	push	r14
     d9a:	ff 92       	push	r15
     d9c:	0f 93       	push	r16
     d9e:	1f 93       	push	r17
     da0:	cf 93       	push	r28
     da2:	df 93       	push	r29
     da4:	cd b7       	in	r28, 0x3d	; 61
     da6:	de b7       	in	r29, 0x3e	; 62
     da8:	27 97       	sbiw	r28, 0x07	; 7
     daa:	0f b6       	in	r0, 0x3f	; 63
     dac:	f8 94       	cli
     dae:	de bf       	out	0x3e, r29	; 62
     db0:	0f be       	out	0x3f, r0	; 63
     db2:	cd bf       	out	0x3d, r28	; 61
     db4:	9f 83       	std	Y+7, r25	; 0x07
     db6:	8e 83       	std	Y+6, r24	; 0x06
     db8:	6d 83       	std	Y+5, r22	; 0x05
     dba:	34 2e       	mov	r3, r20
	uint8_t Px=32-1;
	uint8_t Py=32-1;
	uint8_t x=0,y=0;
	float winkel=0;
	
	if (sekanzeige)
     dbc:	00 23       	and	r16, r16
     dbe:	09 f4       	brne	.+2      	; 0xdc2 <_ZN7Display6analogEhhhh+0x42>
     dc0:	26 c1       	rjmp	.+588    	; 0x100e <_ZN7Display6analogEhhhh+0x28e>
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
     dc2:	62 2f       	mov	r22, r18
     dc4:	70 e0       	ldi	r23, 0x00	; 0
     dc6:	80 e0       	ldi	r24, 0x00	; 0
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     dce:	20 e0       	ldi	r18, 0x00	; 0
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	40 ec       	ldi	r20, 0xC0	; 192
     dd4:	50 e4       	ldi	r21, 0x40	; 64
     dd6:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     dda:	2b ed       	ldi	r18, 0xDB	; 219
     ddc:	3f e0       	ldi	r19, 0x0F	; 15
     dde:	49 e4       	ldi	r20, 0x49	; 73
     de0:	50 e4       	ldi	r21, 0x40	; 64
     de2:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     de6:	20 e0       	ldi	r18, 0x00	; 0
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	44 e3       	ldi	r20, 0x34	; 52
     dec:	53 e4       	ldi	r21, 0x43	; 67
     dee:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
     df2:	2b ed       	ldi	r18, 0xDB	; 219
     df4:	3f e0       	ldi	r19, 0x0F	; 15
     df6:	49 ec       	ldi	r20, 0xC9	; 201
     df8:	5f e3       	ldi	r21, 0x3F	; 63
     dfa:	0e 94 bf 2b 	call	0x577e	; 0x577e <__subsf3>
     dfe:	6b 01       	movw	r12, r22
     e00:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     e02:	0e 94 8a 2c 	call	0x5914	; 0x5914 <cos>
     e06:	2b 01       	movw	r4, r22
     e08:	3c 01       	movw	r6, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e0a:	c7 01       	movw	r24, r14
     e0c:	b6 01       	movw	r22, r12
     e0e:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <sin>
     e12:	4b 01       	movw	r8, r22
     e14:	5c 01       	movw	r10, r24
     e16:	00 e0       	ldi	r16, 0x00	; 0
     e18:	10 e0       	ldi	r17, 0x00	; 0
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e1a:	b8 01       	movw	r22, r16
     e1c:	88 27       	eor	r24, r24
     e1e:	77 fd       	sbrc	r23, 7
     e20:	80 95       	com	r24
     e22:	98 2f       	mov	r25, r24
     e24:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     e28:	6b 01       	movw	r12, r22
     e2a:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e2c:	a5 01       	movw	r20, r10
     e2e:	94 01       	movw	r18, r8
     e30:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     e34:	20 e0       	ldi	r18, 0x00	; 0
     e36:	30 e0       	ldi	r19, 0x00	; 0
     e38:	48 ef       	ldi	r20, 0xF8	; 248
     e3a:	51 e4       	ldi	r21, 0x41	; 65
     e3c:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     e40:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
     e44:	26 2e       	mov	r2, r22
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e46:	a3 01       	movw	r20, r6
     e48:	92 01       	movw	r18, r4
     e4a:	c7 01       	movw	r24, r14
     e4c:	b6 01       	movw	r22, r12
     e4e:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     e52:	20 e0       	ldi	r18, 0x00	; 0
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	48 ef       	ldi	r20, 0xF8	; 248
     e58:	51 e4       	ldi	r21, 0x41	; 65
     e5a:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     e5e:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     e62:	20 e0       	ldi	r18, 0x00	; 0
     e64:	42 2d       	mov	r20, r2
     e66:	8e 81       	ldd	r24, Y+6	; 0x06
     e68:	9f 81       	ldd	r25, Y+7	; 0x07
     e6a:	96 dc       	rcall	.-1748   	; 0x798 <_ZN7Display9drawPixelEhhh>
     e6c:	0f 5f       	subi	r16, 0xFF	; 255
     e6e:	1f 4f       	sbci	r17, 0xFF	; 255
	float winkel=0;
	
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
     e70:	09 31       	cpi	r16, 0x19	; 25
     e72:	11 05       	cpc	r17, r1
     e74:	91 f6       	brne	.-92     	; 0xe1a <_ZN7Display6analogEhhhh+0x9a>
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
     e76:	63 2d       	mov	r22, r3
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     e82:	69 83       	std	Y+1, r22	; 0x01
     e84:	7a 83       	std	Y+2, r23	; 0x02
     e86:	8b 83       	std	Y+3, r24	; 0x03
     e88:	9c 83       	std	Y+4, r25	; 0x04
     e8a:	20 e0       	ldi	r18, 0x00	; 0
     e8c:	30 e0       	ldi	r19, 0x00	; 0
     e8e:	40 ec       	ldi	r20, 0xC0	; 192
     e90:	50 e4       	ldi	r21, 0x40	; 64
     e92:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     e96:	2b ed       	ldi	r18, 0xDB	; 219
     e98:	3f e0       	ldi	r19, 0x0F	; 15
     e9a:	49 e4       	ldi	r20, 0x49	; 73
     e9c:	50 e4       	ldi	r21, 0x40	; 64
     e9e:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	44 e3       	ldi	r20, 0x34	; 52
     ea8:	53 e4       	ldi	r21, 0x43	; 67
     eaa:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
     eae:	2b ed       	ldi	r18, 0xDB	; 219
     eb0:	3f e0       	ldi	r19, 0x0F	; 15
     eb2:	49 ec       	ldi	r20, 0xC9	; 201
     eb4:	5f e3       	ldi	r21, 0x3F	; 63
     eb6:	0e 94 bf 2b 	call	0x577e	; 0x577e <__subsf3>
     eba:	6b 01       	movw	r12, r22
     ebc:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     ebe:	0e 94 8a 2c 	call	0x5914	; 0x5914 <cos>
     ec2:	4b 01       	movw	r8, r22
     ec4:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
     ec6:	c7 01       	movw	r24, r14
     ec8:	b6 01       	movw	r22, r12
     eca:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <sin>
     ece:	2b 01       	movw	r4, r22
     ed0:	3c 01       	movw	r6, r24
     ed2:	00 e0       	ldi	r16, 0x00	; 0
     ed4:	10 e0       	ldi	r17, 0x00	; 0

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     ed6:	b8 01       	movw	r22, r16
     ed8:	88 27       	eor	r24, r24
     eda:	77 fd       	sbrc	r23, 7
     edc:	80 95       	com	r24
     ede:	98 2f       	mov	r25, r24
     ee0:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     ee4:	6b 01       	movw	r12, r22
     ee6:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     ee8:	a3 01       	movw	r20, r6
     eea:	92 01       	movw	r18, r4
     eec:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	48 ef       	ldi	r20, 0xF8	; 248
     ef6:	51 e4       	ldi	r21, 0x41	; 65
     ef8:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     efc:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
     f00:	36 2e       	mov	r3, r22

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     f02:	a5 01       	movw	r20, r10
     f04:	94 01       	movw	r18, r8
     f06:	c7 01       	movw	r24, r14
     f08:	b6 01       	movw	r22, r12
     f0a:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     f0e:	20 e0       	ldi	r18, 0x00	; 0
     f10:	30 e0       	ldi	r19, 0x00	; 0
     f12:	48 ef       	ldi	r20, 0xF8	; 248
     f14:	51 e4       	ldi	r21, 0x41	; 65
     f16:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     f1a:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     f1e:	20 e0       	ldi	r18, 0x00	; 0
     f20:	43 2d       	mov	r20, r3
     f22:	8e 81       	ldd	r24, Y+6	; 0x06
     f24:	9f 81       	ldd	r25, Y+7	; 0x07
     f26:	38 dc       	rcall	.-1936   	; 0x798 <_ZN7Display9drawPixelEhhh>
     f28:	0f 5f       	subi	r16, 0xFF	; 255
     f2a:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
     f2c:	05 31       	cpi	r16, 0x15	; 21
     f2e:	11 05       	cpc	r17, r1
     f30:	91 f6       	brne	.-92     	; 0xed6 <_ZN7Display6analogEhhhh+0x156>
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
     f32:	2d 81       	ldd	r18, Y+5	; 0x05
     f34:	62 2f       	mov	r22, r18
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	80 e0       	ldi	r24, 0x00	; 0
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	40 ef       	ldi	r20, 0xF0	; 240
     f46:	51 e4       	ldi	r21, 0x41	; 65
     f48:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     f4c:	6b 01       	movw	r12, r22
     f4e:	7c 01       	movw	r14, r24
     f50:	20 e0       	ldi	r18, 0x00	; 0
     f52:	30 e0       	ldi	r19, 0x00	; 0
     f54:	40 e0       	ldi	r20, 0x00	; 0
     f56:	5f e3       	ldi	r21, 0x3F	; 63
     f58:	69 81       	ldd	r22, Y+1	; 0x01
     f5a:	7a 81       	ldd	r23, Y+2	; 0x02
     f5c:	8b 81       	ldd	r24, Y+3	; 0x03
     f5e:	9c 81       	ldd	r25, Y+4	; 0x04
     f60:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     f64:	9b 01       	movw	r18, r22
     f66:	ac 01       	movw	r20, r24
     f68:	c7 01       	movw	r24, r14
     f6a:	b6 01       	movw	r22, r12
     f6c:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     f70:	2b ed       	ldi	r18, 0xDB	; 219
     f72:	3f e0       	ldi	r19, 0x0F	; 15
     f74:	49 e4       	ldi	r20, 0x49	; 73
     f76:	50 e4       	ldi	r21, 0x40	; 64
     f78:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     f7c:	20 e0       	ldi	r18, 0x00	; 0
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	44 e3       	ldi	r20, 0x34	; 52
     f82:	53 e4       	ldi	r21, 0x43	; 67
     f84:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
     f88:	2b ed       	ldi	r18, 0xDB	; 219
     f8a:	3f e0       	ldi	r19, 0x0F	; 15
     f8c:	49 ec       	ldi	r20, 0xC9	; 201
     f8e:	5f e3       	ldi	r21, 0x3F	; 63
     f90:	0e 94 bf 2b 	call	0x577e	; 0x577e <__subsf3>
     f94:	6b 01       	movw	r12, r22
     f96:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
     f98:	0e 94 8a 2c 	call	0x5914	; 0x5914 <cos>
     f9c:	2b 01       	movw	r4, r22
     f9e:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
     fa0:	c7 01       	movw	r24, r14
     fa2:	b6 01       	movw	r22, r12
     fa4:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <sin>
     fa8:	4b 01       	movw	r8, r22
     faa:	5c 01       	movw	r10, r24
     fac:	00 e0       	ldi	r16, 0x00	; 0
     fae:	10 e0       	ldi	r17, 0x00	; 0

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
     fb0:	b8 01       	movw	r22, r16
     fb2:	88 27       	eor	r24, r24
     fb4:	77 fd       	sbrc	r23, 7
     fb6:	80 95       	com	r24
     fb8:	98 2f       	mov	r25, r24
     fba:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
     fbe:	6b 01       	movw	r12, r22
     fc0:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
     fc2:	a5 01       	movw	r20, r10
     fc4:	94 01       	movw	r18, r8
     fc6:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     fca:	20 e0       	ldi	r18, 0x00	; 0
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	48 ef       	ldi	r20, 0xF8	; 248
     fd0:	51 e4       	ldi	r21, 0x41	; 65
     fd2:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     fd6:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
     fda:	36 2e       	mov	r3, r22

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
     fdc:	a3 01       	movw	r20, r6
     fde:	92 01       	movw	r18, r4
     fe0:	c7 01       	movw	r24, r14
     fe2:	b6 01       	movw	r22, r12
     fe4:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
     fe8:	20 e0       	ldi	r18, 0x00	; 0
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	48 ef       	ldi	r20, 0xF8	; 248
     fee:	51 e4       	ldi	r21, 0x41	; 65
     ff0:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
     ff4:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
     ff8:	20 e0       	ldi	r18, 0x00	; 0
     ffa:	43 2d       	mov	r20, r3
     ffc:	8e 81       	ldd	r24, Y+6	; 0x06
     ffe:	9f 81       	ldd	r25, Y+7	; 0x07
    1000:	cb db       	rcall	.-2154   	; 0x798 <_ZN7Display9drawPixelEhhh>
    1002:	0f 5f       	subi	r16, 0xFF	; 255
    1004:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    1006:	0d 30       	cpi	r16, 0x0D	; 13
    1008:	11 05       	cpc	r17, r1
    100a:	91 f6       	brne	.-92     	; 0xfb0 <_ZN7Display6analogEhhhh+0x230>
    100c:	cb c0       	rjmp	.+406    	; 0x11a4 <_ZN7Display6analogEhhhh+0x424>
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
    100e:	64 2f       	mov	r22, r20
    1010:	70 e0       	ldi	r23, 0x00	; 0
    1012:	80 e0       	ldi	r24, 0x00	; 0
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
    101a:	69 83       	std	Y+1, r22	; 0x01
    101c:	7a 83       	std	Y+2, r23	; 0x02
    101e:	8b 83       	std	Y+3, r24	; 0x03
    1020:	9c 83       	std	Y+4, r25	; 0x04
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	40 ec       	ldi	r20, 0xC0	; 192
    1028:	50 e4       	ldi	r21, 0x40	; 64
    102a:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    102e:	2b ed       	ldi	r18, 0xDB	; 219
    1030:	3f e0       	ldi	r19, 0x0F	; 15
    1032:	49 e4       	ldi	r20, 0x49	; 73
    1034:	50 e4       	ldi	r21, 0x40	; 64
    1036:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    103a:	20 e0       	ldi	r18, 0x00	; 0
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	44 e3       	ldi	r20, 0x34	; 52
    1040:	53 e4       	ldi	r21, 0x43	; 67
    1042:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
    1046:	2b ed       	ldi	r18, 0xDB	; 219
    1048:	3f e0       	ldi	r19, 0x0F	; 15
    104a:	49 ec       	ldi	r20, 0xC9	; 201
    104c:	5f e3       	ldi	r21, 0x3F	; 63
    104e:	0e 94 bf 2b 	call	0x577e	; 0x577e <__subsf3>
    1052:	6b 01       	movw	r12, r22
    1054:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
    1056:	0e 94 8a 2c 	call	0x5914	; 0x5914 <cos>
    105a:	4b 01       	movw	r8, r22
    105c:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
    105e:	c7 01       	movw	r24, r14
    1060:	b6 01       	movw	r22, r12
    1062:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <sin>
    1066:	2b 01       	movw	r4, r22
    1068:	3c 01       	movw	r6, r24
    106a:	00 e0       	ldi	r16, 0x00	; 0
    106c:	10 e0       	ldi	r17, 0x00	; 0
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    106e:	b8 01       	movw	r22, r16
    1070:	88 27       	eor	r24, r24
    1072:	77 fd       	sbrc	r23, 7
    1074:	80 95       	com	r24
    1076:	98 2f       	mov	r25, r24
    1078:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
    107c:	6b 01       	movw	r12, r22
    107e:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
    1080:	a3 01       	movw	r20, r6
    1082:	92 01       	movw	r18, r4
    1084:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    1088:	20 e0       	ldi	r18, 0x00	; 0
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	48 ef       	ldi	r20, 0xF8	; 248
    108e:	51 e4       	ldi	r21, 0x41	; 65
    1090:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
    1094:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
    1098:	36 2e       	mov	r3, r22
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    109a:	a5 01       	movw	r20, r10
    109c:	94 01       	movw	r18, r8
    109e:	c7 01       	movw	r24, r14
    10a0:	b6 01       	movw	r22, r12
    10a2:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    10a6:	20 e0       	ldi	r18, 0x00	; 0
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	48 ef       	ldi	r20, 0xF8	; 248
    10ac:	51 e4       	ldi	r21, 0x41	; 65
    10ae:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
    10b2:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
    10b6:	20 e0       	ldi	r18, 0x00	; 0
    10b8:	43 2d       	mov	r20, r3
    10ba:	8e 81       	ldd	r24, Y+6	; 0x06
    10bc:	9f 81       	ldd	r25, Y+7	; 0x07
    10be:	6c db       	rcall	.-2344   	; 0x798 <_ZN7Display9drawPixelEhhh>
    10c0:	0f 5f       	subi	r16, 0xFF	; 255
    10c2:	1f 4f       	sbci	r17, 0xFF	; 255
		}
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
    10c4:	09 31       	cpi	r16, 0x19	; 25
    10c6:	11 05       	cpc	r17, r1
    10c8:	91 f6       	brne	.-92     	; 0x106e <_ZN7Display6analogEhhhh+0x2ee>
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
    10ca:	ed 81       	ldd	r30, Y+5	; 0x05
    10cc:	6e 2f       	mov	r22, r30
    10ce:	70 e0       	ldi	r23, 0x00	; 0
    10d0:	80 e0       	ldi	r24, 0x00	; 0
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
    10d8:	20 e0       	ldi	r18, 0x00	; 0
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	40 ef       	ldi	r20, 0xF0	; 240
    10de:	51 e4       	ldi	r21, 0x41	; 65
    10e0:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    10e4:	6b 01       	movw	r12, r22
    10e6:	7c 01       	movw	r14, r24
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	40 e0       	ldi	r20, 0x00	; 0
    10ee:	5f e3       	ldi	r21, 0x3F	; 63
    10f0:	69 81       	ldd	r22, Y+1	; 0x01
    10f2:	7a 81       	ldd	r23, Y+2	; 0x02
    10f4:	8b 81       	ldd	r24, Y+3	; 0x03
    10f6:	9c 81       	ldd	r25, Y+4	; 0x04
    10f8:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    10fc:	9b 01       	movw	r18, r22
    10fe:	ac 01       	movw	r20, r24
    1100:	c7 01       	movw	r24, r14
    1102:	b6 01       	movw	r22, r12
    1104:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
    1108:	2b ed       	ldi	r18, 0xDB	; 219
    110a:	3f e0       	ldi	r19, 0x0F	; 15
    110c:	49 e4       	ldi	r20, 0x49	; 73
    110e:	50 e4       	ldi	r21, 0x40	; 64
    1110:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    1114:	20 e0       	ldi	r18, 0x00	; 0
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	44 e3       	ldi	r20, 0x34	; 52
    111a:	53 e4       	ldi	r21, 0x43	; 67
    111c:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
    1120:	2b ed       	ldi	r18, 0xDB	; 219
    1122:	3f e0       	ldi	r19, 0x0F	; 15
    1124:	49 ec       	ldi	r20, 0xC9	; 201
    1126:	5f e3       	ldi	r21, 0x3F	; 63
    1128:	0e 94 bf 2b 	call	0x577e	; 0x577e <__subsf3>
    112c:	6b 01       	movw	r12, r22
    112e:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
    1130:	0e 94 8a 2c 	call	0x5914	; 0x5914 <cos>
    1134:	2b 01       	movw	r4, r22
    1136:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
    1138:	c7 01       	movw	r24, r14
    113a:	b6 01       	movw	r22, r12
    113c:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <sin>
    1140:	4b 01       	movw	r8, r22
    1142:	5c 01       	movw	r10, r24
    1144:	00 e0       	ldi	r16, 0x00	; 0
    1146:	10 e0       	ldi	r17, 0x00	; 0

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    1148:	b8 01       	movw	r22, r16
    114a:	88 27       	eor	r24, r24
    114c:	77 fd       	sbrc	r23, 7
    114e:	80 95       	com	r24
    1150:	98 2f       	mov	r25, r24
    1152:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
    1156:	6b 01       	movw	r12, r22
    1158:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    115a:	a5 01       	movw	r20, r10
    115c:	94 01       	movw	r18, r8
    115e:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    1162:	20 e0       	ldi	r18, 0x00	; 0
    1164:	30 e0       	ldi	r19, 0x00	; 0
    1166:	48 ef       	ldi	r20, 0xF8	; 248
    1168:	51 e4       	ldi	r21, 0x41	; 65
    116a:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
    116e:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
    1172:	36 2e       	mov	r3, r22

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    1174:	a3 01       	movw	r20, r6
    1176:	92 01       	movw	r18, r4
    1178:	c7 01       	movw	r24, r14
    117a:	b6 01       	movw	r22, r12
    117c:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	48 ef       	ldi	r20, 0xF8	; 248
    1186:	51 e4       	ldi	r21, 0x41	; 65
    1188:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
    118c:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    1190:	20 e0       	ldi	r18, 0x00	; 0
    1192:	43 2d       	mov	r20, r3
    1194:	8e 81       	ldd	r24, Y+6	; 0x06
    1196:	9f 81       	ldd	r25, Y+7	; 0x07
    1198:	ff da       	rcall	.-2562   	; 0x798 <_ZN7Display9drawPixelEhhh>
    119a:	0f 5f       	subi	r16, 0xFF	; 255
    119c:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    119e:	01 31       	cpi	r16, 0x11	; 17
    11a0:	11 05       	cpc	r17, r1
    11a2:	91 f6       	brne	.-92     	; 0x1148 <_ZN7Display6analogEhhhh+0x3c8>
		}
	}
	

	//Anzeige der Zahlen
	draw_ASCI('1',32-charsize,0);
    11a4:	20 e0       	ldi	r18, 0x00	; 0
    11a6:	4a e1       	ldi	r20, 0x1A	; 26
    11a8:	61 e3       	ldi	r22, 0x31	; 49
    11aa:	8e 81       	ldd	r24, Y+6	; 0x06
    11ac:	9f 81       	ldd	r25, Y+7	; 0x07
    11ae:	24 dd       	rcall	.-1464   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('2',32,0);
    11b0:	20 e0       	ldi	r18, 0x00	; 0
    11b2:	40 e2       	ldi	r20, 0x20	; 32
    11b4:	62 e3       	ldi	r22, 0x32	; 50
    11b6:	8e 81       	ldd	r24, Y+6	; 0x06
    11b8:	9f 81       	ldd	r25, Y+7	; 0x07
    11ba:	1e dd       	rcall	.-1476   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('3',64-charsize,4*charhighte-charhighte/2);
    11bc:	2c e1       	ldi	r18, 0x1C	; 28
    11be:	4a e3       	ldi	r20, 0x3A	; 58
    11c0:	63 e3       	ldi	r22, 0x33	; 51
    11c2:	8e 81       	ldd	r24, Y+6	; 0x06
    11c4:	9f 81       	ldd	r25, Y+7	; 0x07
    11c6:	18 dd       	rcall	.-1488   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('6',32-charsize/2,7*charhighte);
    11c8:	28 e3       	ldi	r18, 0x38	; 56
    11ca:	4d e1       	ldi	r20, 0x1D	; 29
    11cc:	66 e3       	ldi	r22, 0x36	; 54
    11ce:	8e 81       	ldd	r24, Y+6	; 0x06
    11d0:	9f 81       	ldd	r25, Y+7	; 0x07
    11d2:	12 dd       	rcall	.-1500   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('9',0,4*charhighte-charhighte/2);
    11d4:	2c e1       	ldi	r18, 0x1C	; 28
    11d6:	40 e0       	ldi	r20, 0x00	; 0
    11d8:	69 e3       	ldi	r22, 0x39	; 57
    11da:	8e 81       	ldd	r24, Y+6	; 0x06
    11dc:	9f 81       	ldd	r25, Y+7	; 0x07
    11de:	0c dd       	rcall	.-1512   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>

	//anzeige des Rings fuer die Restlichen Stunden Zahlen
	//1
	drawPixel(26*cos((30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11e0:	20 e0       	ldi	r18, 0x00	; 0
    11e2:	48 e0       	ldi	r20, 0x08	; 8
    11e4:	6c e2       	ldi	r22, 0x2C	; 44
    11e6:	8e 81       	ldd	r24, Y+6	; 0x06
    11e8:	9f 81       	ldd	r25, Y+7	; 0x07
    11ea:	d6 da       	rcall	.-2644   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//2
	drawPixel(26*cos((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11ec:	20 e0       	ldi	r18, 0x00	; 0
    11ee:	42 e1       	ldi	r20, 0x12	; 18
    11f0:	65 e3       	ldi	r22, 0x35	; 53
    11f2:	8e 81       	ldd	r24, Y+6	; 0x06
    11f4:	9f 81       	ldd	r25, Y+7	; 0x07
    11f6:	d0 da       	rcall	.-2656   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//4
	drawPixel(26*cos((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11f8:	20 e0       	ldi	r18, 0x00	; 0
    11fa:	4c e2       	ldi	r20, 0x2C	; 44
    11fc:	65 e3       	ldi	r22, 0x35	; 53
    11fe:	8e 81       	ldd	r24, Y+6	; 0x06
    1200:	9f 81       	ldd	r25, Y+7	; 0x07
    1202:	ca da       	rcall	.-2668   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//5
	drawPixel(26*cos((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1204:	20 e0       	ldi	r18, 0x00	; 0
    1206:	45 e3       	ldi	r20, 0x35	; 53
    1208:	6b e2       	ldi	r22, 0x2B	; 43
    120a:	8e 81       	ldd	r24, Y+6	; 0x06
    120c:	9f 81       	ldd	r25, Y+7	; 0x07
    120e:	c4 da       	rcall	.-2680   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//7
	drawPixel(26*cos((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1210:	20 e0       	ldi	r18, 0x00	; 0
    1212:	45 e3       	ldi	r20, 0x35	; 53
    1214:	61 e1       	ldi	r22, 0x11	; 17
    1216:	8e 81       	ldd	r24, Y+6	; 0x06
    1218:	9f 81       	ldd	r25, Y+7	; 0x07
    121a:	be da       	rcall	.-2692   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//8
	drawPixel(26*cos((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    121c:	20 e0       	ldi	r18, 0x00	; 0
    121e:	4c e2       	ldi	r20, 0x2C	; 44
    1220:	68 e0       	ldi	r22, 0x08	; 8
    1222:	8e 81       	ldd	r24, Y+6	; 0x06
    1224:	9f 81       	ldd	r25, Y+7	; 0x07
    1226:	b8 da       	rcall	.-2704   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//10
	drawPixel(26*cos((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1228:	20 e0       	ldi	r18, 0x00	; 0
    122a:	41 e1       	ldi	r20, 0x11	; 17
    122c:	68 e0       	ldi	r22, 0x08	; 8
    122e:	8e 81       	ldd	r24, Y+6	; 0x06
    1230:	9f 81       	ldd	r25, Y+7	; 0x07
    1232:	b2 da       	rcall	.-2716   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//11
	drawPixel(26*cos((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1234:	20 e0       	ldi	r18, 0x00	; 0
    1236:	48 e0       	ldi	r20, 0x08	; 8
    1238:	62 e1       	ldi	r22, 0x12	; 18
    123a:	8e 81       	ldd	r24, Y+6	; 0x06
    123c:	9f 81       	ldd	r25, Y+7	; 0x07
    123e:	ac da       	rcall	.-2728   	; 0x798 <_ZN7Display9drawPixelEhhh>
}
    1240:	27 96       	adiw	r28, 0x07	; 7
    1242:	0f b6       	in	r0, 0x3f	; 63
    1244:	f8 94       	cli
    1246:	de bf       	out	0x3e, r29	; 62
    1248:	0f be       	out	0x3f, r0	; 63
    124a:	cd bf       	out	0x3d, r28	; 61
    124c:	df 91       	pop	r29
    124e:	cf 91       	pop	r28
    1250:	1f 91       	pop	r17
    1252:	0f 91       	pop	r16
    1254:	ff 90       	pop	r15
    1256:	ef 90       	pop	r14
    1258:	df 90       	pop	r13
    125a:	cf 90       	pop	r12
    125c:	bf 90       	pop	r11
    125e:	af 90       	pop	r10
    1260:	9f 90       	pop	r9
    1262:	8f 90       	pop	r8
    1264:	7f 90       	pop	r7
    1266:	6f 90       	pop	r6
    1268:	5f 90       	pop	r5
    126a:	4f 90       	pop	r4
    126c:	3f 90       	pop	r3
    126e:	2f 90       	pop	r2
    1270:	08 95       	ret

00001272 <_Z8ADC_Readh>:
		oled.draw_pikachu();
		break;
	default:
		break;
	}
}
    1272:	ec e7       	ldi	r30, 0x7C	; 124
    1274:	f0 e0       	ldi	r31, 0x00	; 0
    1276:	90 81       	ld	r25, Z
    1278:	8f 71       	andi	r24, 0x1F	; 31
    127a:	90 7e       	andi	r25, 0xE0	; 224
    127c:	98 2b       	or	r25, r24
    127e:	90 83       	st	Z, r25
    1280:	ea e7       	ldi	r30, 0x7A	; 122
    1282:	f0 e0       	ldi	r31, 0x00	; 0
    1284:	80 81       	ld	r24, Z
    1286:	80 64       	ori	r24, 0x40	; 64
    1288:	80 83       	st	Z, r24
    128a:	80 81       	ld	r24, Z
    128c:	86 fd       	sbrc	r24, 6
    128e:	fd cf       	rjmp	.-6      	; 0x128a <_Z8ADC_Readh+0x18>
    1290:	80 91 78 00 	lds	r24, 0x0078
    1294:	90 91 79 00 	lds	r25, 0x0079
    1298:	08 95       	ret

0000129a <_Z14Batteriestatusv>:
    129a:	cf 92       	push	r12
    129c:	df 92       	push	r13
    129e:	ef 92       	push	r14
    12a0:	ff 92       	push	r15
    12a2:	80 e0       	ldi	r24, 0x00	; 0
    12a4:	e6 df       	rcall	.-52     	; 0x1272 <_Z8ADC_Readh>
    12a6:	bc 01       	movw	r22, r24
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	0e 94 26 2d 	call	0x5a4c	; 0x5a4c <__floatunsisf>
    12b0:	20 e0       	ldi	r18, 0x00	; 0
    12b2:	30 ec       	ldi	r19, 0xC0	; 192
    12b4:	4f e7       	ldi	r20, 0x7F	; 127
    12b6:	54 e4       	ldi	r21, 0x44	; 68
    12b8:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
    12bc:	2c e5       	ldi	r18, 0x5C	; 92
    12be:	3f e8       	ldi	r19, 0x8F	; 143
    12c0:	42 e5       	ldi	r20, 0x52	; 82
    12c2:	50 e4       	ldi	r21, 0x40	; 64
    12c4:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    12c8:	2d e0       	ldi	r18, 0x0D	; 13
    12ca:	31 e7       	ldi	r19, 0x71	; 113
    12cc:	40 e0       	ldi	r20, 0x00	; 0
    12ce:	50 e4       	ldi	r21, 0x40	; 64
    12d0:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    12d4:	60 93 57 03 	sts	0x0357, r22
    12d8:	70 93 58 03 	sts	0x0358, r23
    12dc:	80 93 59 03 	sts	0x0359, r24
    12e0:	90 93 5a 03 	sts	0x035A, r25
    12e4:	20 e0       	ldi	r18, 0x00	; 0
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	40 e4       	ldi	r20, 0x40	; 64
    12ea:	50 e4       	ldi	r21, 0x40	; 64
    12ec:	0e 94 bf 2b 	call	0x577e	; 0x577e <__subsf3>
    12f0:	28 e9       	ldi	r18, 0x98	; 152
    12f2:	39 e9       	ldi	r19, 0x99	; 153
    12f4:	49 e9       	ldi	r20, 0x99	; 153
    12f6:	5f e3       	ldi	r21, 0x3F	; 63
    12f8:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
    12fc:	20 e0       	ldi	r18, 0x00	; 0
    12fe:	30 e0       	ldi	r19, 0x00	; 0
    1300:	48 ec       	ldi	r20, 0xC8	; 200
    1302:	52 e4       	ldi	r21, 0x42	; 66
    1304:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    1308:	6b 01       	movw	r12, r22
    130a:	7c 01       	movw	r14, r24
    130c:	20 e0       	ldi	r18, 0x00	; 0
    130e:	30 e0       	ldi	r19, 0x00	; 0
    1310:	40 e2       	ldi	r20, 0x20	; 32
    1312:	51 e4       	ldi	r21, 0x41	; 65
    1314:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    1318:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
    131c:	8d ec       	ldi	r24, 0xCD	; 205
    131e:	68 9f       	mul	r22, r24
    1320:	81 2d       	mov	r24, r1
    1322:	11 24       	eor	r1, r1
    1324:	86 95       	lsr	r24
    1326:	86 95       	lsr	r24
    1328:	86 95       	lsr	r24
    132a:	88 0f       	add	r24, r24
    132c:	98 2f       	mov	r25, r24
    132e:	99 0f       	add	r25, r25
    1330:	99 0f       	add	r25, r25
    1332:	89 0f       	add	r24, r25
    1334:	68 1b       	sub	r22, r24
    1336:	65 30       	cpi	r22, 0x05	; 5
    1338:	70 f0       	brcs	.+28     	; 0x1356 <_Z14Batteriestatusv+0xbc>
    133a:	c7 01       	movw	r24, r14
    133c:	b6 01       	movw	r22, r12
    133e:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	6f 5f       	subi	r22, 0xFF	; 255
    1346:	7f 4f       	sbci	r23, 0xFF	; 255
    1348:	88 27       	eor	r24, r24
    134a:	77 fd       	sbrc	r23, 7
    134c:	80 95       	com	r24
    134e:	98 2f       	mov	r25, r24
    1350:	0e 94 28 2d 	call	0x5a50	; 0x5a50 <__floatsisf>
    1354:	09 c0       	rjmp	.+18     	; 0x1368 <_Z14Batteriestatusv+0xce>
    1356:	c7 01       	movw	r24, r14
    1358:	b6 01       	movw	r22, r12
    135a:	0e 94 fa 2c 	call	0x59f4	; 0x59f4 <__fixunssfsi>
    135e:	70 e0       	ldi	r23, 0x00	; 0
    1360:	80 e0       	ldi	r24, 0x00	; 0
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	0e 94 26 2d 	call	0x5a4c	; 0x5a4c <__floatunsisf>
    1368:	0e 94 f5 2c 	call	0x59ea	; 0x59ea <__fixsfsi>
    136c:	86 2f       	mov	r24, r22
    136e:	ff 90       	pop	r15
    1370:	ef 90       	pop	r14
    1372:	df 90       	pop	r13
    1374:	cf 90       	pop	r12
    1376:	08 95       	ret

00001378 <_Z14willkommenpagev>:
    1378:	cf 92       	push	r12
    137a:	df 92       	push	r13
    137c:	ef 92       	push	r14
    137e:	ff 92       	push	r15
    1380:	0f 93       	push	r16
    1382:	1f 93       	push	r17
    1384:	cf 93       	push	r28
    1386:	df 93       	push	r29
    1388:	cd b7       	in	r28, 0x3d	; 61
    138a:	de b7       	in	r29, 0x3e	; 62
    138c:	64 97       	sbiw	r28, 0x14	; 20
    138e:	0f b6       	in	r0, 0x3f	; 63
    1390:	f8 94       	cli
    1392:	de bf       	out	0x3e, r29	; 62
    1394:	0f be       	out	0x3f, r0	; 63
    1396:	cd bf       	out	0x3d, r28	; 61
    1398:	83 e8       	ldi	r24, 0x83	; 131
    139a:	93 e0       	ldi	r25, 0x03	; 3
    139c:	36 d9       	rcall	.-3476   	; 0x60a <_ZN7Display10clearFrameEv>
    139e:	8f e0       	ldi	r24, 0x0F	; 15
    13a0:	e0 e0       	ldi	r30, 0x00	; 0
    13a2:	f1 e0       	ldi	r31, 0x01	; 1
    13a4:	8e 01       	movw	r16, r28
    13a6:	0f 5f       	subi	r16, 0xFF	; 255
    13a8:	1f 4f       	sbci	r17, 0xFF	; 255
    13aa:	d8 01       	movw	r26, r16
    13ac:	01 90       	ld	r0, Z+
    13ae:	0d 92       	st	X+, r0
    13b0:	8a 95       	dec	r24
    13b2:	e1 f7       	brne	.-8      	; 0x13ac <_Z14willkommenpagev+0x34>
    13b4:	c0 2e       	mov	r12, r16
    13b6:	d1 2e       	mov	r13, r17
    13b8:	78 01       	movw	r14, r16
    13ba:	10 e0       	ldi	r17, 0x00	; 0
    13bc:	f7 01       	movw	r30, r14
    13be:	61 91       	ld	r22, Z+
    13c0:	7f 01       	movw	r14, r30
    13c2:	20 e0       	ldi	r18, 0x00	; 0
    13c4:	41 2f       	mov	r20, r17
    13c6:	83 e8       	ldi	r24, 0x83	; 131
    13c8:	93 e0       	ldi	r25, 0x03	; 3
    13ca:	16 dc       	rcall	.-2004   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    13cc:	1a 5f       	subi	r17, 0xFA	; 250
    13ce:	14 35       	cpi	r17, 0x54	; 84
    13d0:	a9 f7       	brne	.-22     	; 0x13bc <_Z14willkommenpagev+0x44>
    13d2:	8f e0       	ldi	r24, 0x0F	; 15
    13d4:	ef e0       	ldi	r30, 0x0F	; 15
    13d6:	f1 e0       	ldi	r31, 0x01	; 1
    13d8:	de 01       	movw	r26, r28
    13da:	11 96       	adiw	r26, 0x01	; 1
    13dc:	01 90       	ld	r0, Z+
    13de:	0d 92       	st	X+, r0
    13e0:	8a 95       	dec	r24
    13e2:	e1 f7       	brne	.-8      	; 0x13dc <_Z14willkommenpagev+0x64>
    13e4:	ec 2c       	mov	r14, r12
    13e6:	fd 2c       	mov	r15, r13
    13e8:	10 e0       	ldi	r17, 0x00	; 0
    13ea:	f7 01       	movw	r30, r14
    13ec:	61 91       	ld	r22, Z+
    13ee:	7f 01       	movw	r14, r30
    13f0:	28 e0       	ldi	r18, 0x08	; 8
    13f2:	41 2f       	mov	r20, r17
    13f4:	83 e8       	ldi	r24, 0x83	; 131
    13f6:	93 e0       	ldi	r25, 0x03	; 3
    13f8:	ff db       	rcall	.-2050   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    13fa:	1a 5f       	subi	r17, 0xFA	; 250
    13fc:	14 35       	cpi	r17, 0x54	; 84
    13fe:	a9 f7       	brne	.-22     	; 0x13ea <_Z14willkommenpagev+0x72>
    1400:	80 e4       	ldi	r24, 0x40	; 64
    1402:	8f 93       	push	r24
    1404:	86 e0       	ldi	r24, 0x06	; 6
    1406:	8f 93       	push	r24
    1408:	86 e6       	ldi	r24, 0x66	; 102
    140a:	8f 93       	push	r24
    140c:	8f 93       	push	r24
    140e:	8e e1       	ldi	r24, 0x1E	; 30
    1410:	91 e0       	ldi	r25, 0x01	; 1
    1412:	9f 93       	push	r25
    1414:	8f 93       	push	r24
    1416:	ce 01       	movw	r24, r28
    1418:	01 96       	adiw	r24, 0x01	; 1
    141a:	9f 93       	push	r25
    141c:	8f 93       	push	r24
    141e:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    1422:	0f b6       	in	r0, 0x3f	; 63
    1424:	f8 94       	cli
    1426:	de bf       	out	0x3e, r29	; 62
    1428:	0f be       	out	0x3f, r0	; 63
    142a:	cd bf       	out	0x3d, r28	; 61
    142c:	88 23       	and	r24, r24
    142e:	c9 f0       	breq	.+50     	; 0x1462 <_Z14willkommenpagev+0xea>
    1430:	81 50       	subi	r24, 0x01	; 1
    1432:	68 94       	set
    1434:	ee 24       	eor	r14, r14
    1436:	e1 f8       	bld	r14, 1
    1438:	f1 2c       	mov	r15, r1
    143a:	ec 0e       	add	r14, r28
    143c:	fd 1e       	adc	r15, r29
    143e:	e8 0e       	add	r14, r24
    1440:	f1 1c       	adc	r15, r1
    1442:	0c 2d       	mov	r16, r12
    1444:	1d 2d       	mov	r17, r13
    1446:	d1 2c       	mov	r13, r1
    1448:	f8 01       	movw	r30, r16
    144a:	61 91       	ld	r22, Z+
    144c:	8f 01       	movw	r16, r30
    144e:	20 e2       	ldi	r18, 0x20	; 32
    1450:	4d 2d       	mov	r20, r13
    1452:	83 e8       	ldi	r24, 0x83	; 131
    1454:	93 e0       	ldi	r25, 0x03	; 3
    1456:	d0 db       	rcall	.-2144   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1458:	f6 e0       	ldi	r31, 0x06	; 6
    145a:	df 0e       	add	r13, r31
    145c:	0e 15       	cp	r16, r14
    145e:	1f 05       	cpc	r17, r15
    1460:	99 f7       	brne	.-26     	; 0x1448 <_Z14willkommenpagev+0xd0>
    1462:	83 e8       	ldi	r24, 0x83	; 131
    1464:	93 e0       	ldi	r25, 0x03	; 3
    1466:	5b d9       	rcall	.-3402   	; 0x71e <_ZN7Display9sendFrameEv>
    1468:	83 e8       	ldi	r24, 0x83	; 131
    146a:	93 e0       	ldi	r25, 0x03	; 3
    146c:	ce d8       	rcall	.-3684   	; 0x60a <_ZN7Display10clearFrameEv>
    146e:	85 e0       	ldi	r24, 0x05	; 5
    1470:	2f e7       	ldi	r18, 0x7F	; 127
    1472:	38 e3       	ldi	r19, 0x38	; 56
    1474:	91 e0       	ldi	r25, 0x01	; 1
    1476:	21 50       	subi	r18, 0x01	; 1
    1478:	30 40       	sbci	r19, 0x00	; 0
    147a:	90 40       	sbci	r25, 0x00	; 0
    147c:	e1 f7       	brne	.-8      	; 0x1476 <_Z14willkommenpagev+0xfe>
    147e:	00 c0       	rjmp	.+0      	; 0x1480 <_Z14willkommenpagev+0x108>
    1480:	00 00       	nop
    1482:	ef e7       	ldi	r30, 0x7F	; 127
    1484:	f8 e3       	ldi	r31, 0x38	; 56
    1486:	21 e0       	ldi	r18, 0x01	; 1
    1488:	e1 50       	subi	r30, 0x01	; 1
    148a:	f0 40       	sbci	r31, 0x00	; 0
    148c:	20 40       	sbci	r18, 0x00	; 0
    148e:	e1 f7       	brne	.-8      	; 0x1488 <_Z14willkommenpagev+0x110>
    1490:	00 c0       	rjmp	.+0      	; 0x1492 <_Z14willkommenpagev+0x11a>
    1492:	00 00       	nop
    1494:	81 50       	subi	r24, 0x01	; 1
    1496:	61 f7       	brne	.-40     	; 0x1470 <_Z14willkommenpagev+0xf8>
    1498:	64 96       	adiw	r28, 0x14	; 20
    149a:	0f b6       	in	r0, 0x3f	; 63
    149c:	f8 94       	cli
    149e:	de bf       	out	0x3e, r29	; 62
    14a0:	0f be       	out	0x3f, r0	; 63
    14a2:	cd bf       	out	0x3d, r28	; 61
    14a4:	df 91       	pop	r29
    14a6:	cf 91       	pop	r28
    14a8:	1f 91       	pop	r17
    14aa:	0f 91       	pop	r16
    14ac:	ff 90       	pop	r15
    14ae:	ef 90       	pop	r14
    14b0:	df 90       	pop	r13
    14b2:	cf 90       	pop	r12
    14b4:	08 95       	ret

000014b6 <_Z6headerh>:
    14b6:	ef 92       	push	r14
    14b8:	ff 92       	push	r15
    14ba:	0f 93       	push	r16
    14bc:	1f 93       	push	r17
    14be:	cf 93       	push	r28
    14c0:	df 93       	push	r29
    14c2:	cd b7       	in	r28, 0x3d	; 61
    14c4:	de b7       	in	r29, 0x3e	; 62
    14c6:	64 97       	sbiw	r28, 0x14	; 20
    14c8:	0f b6       	in	r0, 0x3f	; 63
    14ca:	f8 94       	cli
    14cc:	de bf       	out	0x3e, r29	; 62
    14ce:	0f be       	out	0x3f, r0	; 63
    14d0:	cd bf       	out	0x3d, r28	; 61
    14d2:	81 30       	cpi	r24, 0x01	; 1
    14d4:	09 f4       	brne	.+2      	; 0x14d8 <_Z6headerh+0x22>
    14d6:	51 c0       	rjmp	.+162    	; 0x157a <_Z6headerh+0xc4>
    14d8:	20 f0       	brcs	.+8      	; 0x14e2 <_Z6headerh+0x2c>
    14da:	82 30       	cpi	r24, 0x02	; 2
    14dc:	09 f4       	brne	.+2      	; 0x14e0 <_Z6headerh+0x2a>
    14de:	87 c0       	rjmp	.+270    	; 0x15ee <_Z6headerh+0x138>
    14e0:	be c0       	rjmp	.+380    	; 0x165e <_Z6headerh+0x1a8>
    14e2:	0f 2e       	mov	r0, r31
    14e4:	f4 e8       	ldi	r31, 0x84	; 132
    14e6:	ef 2e       	mov	r14, r31
    14e8:	f7 e0       	ldi	r31, 0x07	; 7
    14ea:	ff 2e       	mov	r15, r31
    14ec:	f0 2d       	mov	r31, r0
    14ee:	10 e0       	ldi	r17, 0x00	; 0
    14f0:	f7 01       	movw	r30, r14
    14f2:	61 91       	ld	r22, Z+
    14f4:	7f 01       	movw	r14, r30
    14f6:	20 e0       	ldi	r18, 0x00	; 0
    14f8:	41 2f       	mov	r20, r17
    14fa:	83 e8       	ldi	r24, 0x83	; 131
    14fc:	93 e0       	ldi	r25, 0x03	; 3
    14fe:	7c db       	rcall	.-2312   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1500:	1a 5f       	subi	r17, 0xFA	; 250
    1502:	10 33       	cpi	r17, 0x30	; 48
    1504:	a9 f7       	brne	.-22     	; 0x14f0 <_Z6headerh+0x3a>
    1506:	c9 de       	rcall	.-622    	; 0x129a <_Z14Batteriestatusv>
    1508:	28 2f       	mov	r18, r24
    150a:	33 27       	eor	r19, r19
    150c:	27 fd       	sbrc	r18, 7
    150e:	30 95       	com	r19
    1510:	3f 93       	push	r19
    1512:	8f 93       	push	r24
    1514:	8c e2       	ldi	r24, 0x2C	; 44
    1516:	91 e0       	ldi	r25, 0x01	; 1
    1518:	9f 93       	push	r25
    151a:	8f 93       	push	r24
    151c:	ce 01       	movw	r24, r28
    151e:	01 96       	adiw	r24, 0x01	; 1
    1520:	9f 93       	push	r25
    1522:	8f 93       	push	r24
    1524:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    1528:	25 e1       	ldi	r18, 0x15	; 21
    152a:	f2 2e       	mov	r15, r18
    152c:	f8 1a       	sub	r15, r24
    152e:	0f 90       	pop	r0
    1530:	0f 90       	pop	r0
    1532:	0f 90       	pop	r0
    1534:	0f 90       	pop	r0
    1536:	0f 90       	pop	r0
    1538:	0f 90       	pop	r0
    153a:	f4 e1       	ldi	r31, 0x14	; 20
    153c:	ff 15       	cp	r31, r15
    153e:	08 f4       	brcc	.+2      	; 0x1542 <_Z6headerh+0x8c>
    1540:	8e c0       	rjmp	.+284    	; 0x165e <_Z6headerh+0x1a8>
    1542:	ef 2c       	mov	r14, r15
    1544:	ee 0c       	add	r14, r14
    1546:	ef 0c       	add	r14, r15
    1548:	ee 0c       	add	r14, r14
    154a:	8c 01       	movw	r16, r24
    154c:	11 27       	eor	r17, r17
    154e:	e1 e0       	ldi	r30, 0x01	; 1
    1550:	f0 e0       	ldi	r31, 0x00	; 0
    1552:	ec 0f       	add	r30, r28
    1554:	fd 1f       	adc	r31, r29
    1556:	ef 0d       	add	r30, r15
    1558:	f1 1d       	adc	r31, r1
    155a:	e0 0f       	add	r30, r16
    155c:	f1 1f       	adc	r31, r17
    155e:	75 97       	sbiw	r30, 0x15	; 21
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	4e 2d       	mov	r20, r14
    1564:	60 81       	ld	r22, Z
    1566:	83 e8       	ldi	r24, 0x83	; 131
    1568:	93 e0       	ldi	r25, 0x03	; 3
    156a:	46 db       	rcall	.-2420   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    156c:	f3 94       	inc	r15
    156e:	26 e0       	ldi	r18, 0x06	; 6
    1570:	e2 0e       	add	r14, r18
    1572:	85 e1       	ldi	r24, 0x15	; 21
    1574:	f8 12       	cpse	r15, r24
    1576:	eb cf       	rjmp	.-42     	; 0x154e <_Z6headerh+0x98>
    1578:	72 c0       	rjmp	.+228    	; 0x165e <_Z6headerh+0x1a8>
    157a:	8f de       	rcall	.-738    	; 0x129a <_Z14Batteriestatusv>
    157c:	28 2f       	mov	r18, r24
    157e:	33 27       	eor	r19, r19
    1580:	27 fd       	sbrc	r18, 7
    1582:	30 95       	com	r19
    1584:	3f 93       	push	r19
    1586:	8f 93       	push	r24
    1588:	8c e2       	ldi	r24, 0x2C	; 44
    158a:	91 e0       	ldi	r25, 0x01	; 1
    158c:	9f 93       	push	r25
    158e:	8f 93       	push	r24
    1590:	ce 01       	movw	r24, r28
    1592:	01 96       	adiw	r24, 0x01	; 1
    1594:	9f 93       	push	r25
    1596:	8f 93       	push	r24
    1598:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    159c:	25 e1       	ldi	r18, 0x15	; 21
    159e:	f2 2e       	mov	r15, r18
    15a0:	f8 1a       	sub	r15, r24
    15a2:	0f 90       	pop	r0
    15a4:	0f 90       	pop	r0
    15a6:	0f 90       	pop	r0
    15a8:	0f 90       	pop	r0
    15aa:	0f 90       	pop	r0
    15ac:	0f 90       	pop	r0
    15ae:	e4 e1       	ldi	r30, 0x14	; 20
    15b0:	ef 15       	cp	r30, r15
    15b2:	08 f4       	brcc	.+2      	; 0x15b6 <_Z6headerh+0x100>
    15b4:	54 c0       	rjmp	.+168    	; 0x165e <_Z6headerh+0x1a8>
    15b6:	ef 2c       	mov	r14, r15
    15b8:	ee 0c       	add	r14, r14
    15ba:	ef 0c       	add	r14, r15
    15bc:	ee 0c       	add	r14, r14
    15be:	8c 01       	movw	r16, r24
    15c0:	11 27       	eor	r17, r17
    15c2:	e1 e0       	ldi	r30, 0x01	; 1
    15c4:	f0 e0       	ldi	r31, 0x00	; 0
    15c6:	ec 0f       	add	r30, r28
    15c8:	fd 1f       	adc	r31, r29
    15ca:	ef 0d       	add	r30, r15
    15cc:	f1 1d       	adc	r31, r1
    15ce:	e0 0f       	add	r30, r16
    15d0:	f1 1f       	adc	r31, r17
    15d2:	75 97       	sbiw	r30, 0x15	; 21
    15d4:	20 e0       	ldi	r18, 0x00	; 0
    15d6:	4e 2d       	mov	r20, r14
    15d8:	60 81       	ld	r22, Z
    15da:	83 e8       	ldi	r24, 0x83	; 131
    15dc:	93 e0       	ldi	r25, 0x03	; 3
    15de:	0c db       	rcall	.-2536   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    15e0:	f3 94       	inc	r15
    15e2:	f6 e0       	ldi	r31, 0x06	; 6
    15e4:	ef 0e       	add	r14, r31
    15e6:	25 e1       	ldi	r18, 0x15	; 21
    15e8:	f2 12       	cpse	r15, r18
    15ea:	eb cf       	rjmp	.-42     	; 0x15c2 <_Z6headerh+0x10c>
    15ec:	38 c0       	rjmp	.+112    	; 0x165e <_Z6headerh+0x1a8>
    15ee:	55 de       	rcall	.-854    	; 0x129a <_Z14Batteriestatusv>
    15f0:	28 2f       	mov	r18, r24
    15f2:	33 27       	eor	r19, r19
    15f4:	27 fd       	sbrc	r18, 7
    15f6:	30 95       	com	r19
    15f8:	3f 93       	push	r19
    15fa:	8f 93       	push	r24
    15fc:	81 e3       	ldi	r24, 0x31	; 49
    15fe:	91 e0       	ldi	r25, 0x01	; 1
    1600:	9f 93       	push	r25
    1602:	8f 93       	push	r24
    1604:	ce 01       	movw	r24, r28
    1606:	01 96       	adiw	r24, 0x01	; 1
    1608:	9f 93       	push	r25
    160a:	8f 93       	push	r24
    160c:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    1610:	25 e1       	ldi	r18, 0x15	; 21
    1612:	f2 2e       	mov	r15, r18
    1614:	f8 1a       	sub	r15, r24
    1616:	0f 90       	pop	r0
    1618:	0f 90       	pop	r0
    161a:	0f 90       	pop	r0
    161c:	0f 90       	pop	r0
    161e:	0f 90       	pop	r0
    1620:	0f 90       	pop	r0
    1622:	e4 e1       	ldi	r30, 0x14	; 20
    1624:	ef 15       	cp	r30, r15
    1626:	d8 f0       	brcs	.+54     	; 0x165e <_Z6headerh+0x1a8>
    1628:	ef 2c       	mov	r14, r15
    162a:	ee 0c       	add	r14, r14
    162c:	ef 0c       	add	r14, r15
    162e:	ee 0c       	add	r14, r14
    1630:	8c 01       	movw	r16, r24
    1632:	11 27       	eor	r17, r17
    1634:	e1 e0       	ldi	r30, 0x01	; 1
    1636:	f0 e0       	ldi	r31, 0x00	; 0
    1638:	ec 0f       	add	r30, r28
    163a:	fd 1f       	adc	r31, r29
    163c:	ef 0d       	add	r30, r15
    163e:	f1 1d       	adc	r31, r1
    1640:	e0 0f       	add	r30, r16
    1642:	f1 1f       	adc	r31, r17
    1644:	75 97       	sbiw	r30, 0x15	; 21
    1646:	20 e0       	ldi	r18, 0x00	; 0
    1648:	4e 2d       	mov	r20, r14
    164a:	60 81       	ld	r22, Z
    164c:	83 e8       	ldi	r24, 0x83	; 131
    164e:	93 e0       	ldi	r25, 0x03	; 3
    1650:	d3 da       	rcall	.-2650   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1652:	f3 94       	inc	r15
    1654:	f6 e0       	ldi	r31, 0x06	; 6
    1656:	ef 0e       	add	r14, r31
    1658:	25 e1       	ldi	r18, 0x15	; 21
    165a:	f2 12       	cpse	r15, r18
    165c:	eb cf       	rjmp	.-42     	; 0x1634 <_Z6headerh+0x17e>
    165e:	64 96       	adiw	r28, 0x14	; 20
    1660:	0f b6       	in	r0, 0x3f	; 63
    1662:	f8 94       	cli
    1664:	de bf       	out	0x3e, r29	; 62
    1666:	0f be       	out	0x3f, r0	; 63
    1668:	cd bf       	out	0x3d, r28	; 61
    166a:	df 91       	pop	r29
    166c:	cf 91       	pop	r28
    166e:	1f 91       	pop	r17
    1670:	0f 91       	pop	r16
    1672:	ff 90       	pop	r15
    1674:	ef 90       	pop	r14
    1676:	08 95       	ret

00001678 <_Z6bottomh>:
    1678:	1f 93       	push	r17
    167a:	cf 93       	push	r28
    167c:	df 93       	push	r29
    167e:	88 23       	and	r24, r24
    1680:	19 f0       	breq	.+6      	; 0x1688 <_Z6bottomh+0x10>
    1682:	81 30       	cpi	r24, 0x01	; 1
    1684:	71 f0       	breq	.+28     	; 0x16a2 <_Z6bottomh+0x2a>
    1686:	19 c0       	rjmp	.+50     	; 0x16ba <_Z6bottomh+0x42>
    1688:	cc e8       	ldi	r28, 0x8C	; 140
    168a:	d7 e0       	ldi	r29, 0x07	; 7
    168c:	10 e5       	ldi	r17, 0x50	; 80
    168e:	69 91       	ld	r22, Y+
    1690:	28 e3       	ldi	r18, 0x38	; 56
    1692:	41 2f       	mov	r20, r17
    1694:	83 e8       	ldi	r24, 0x83	; 131
    1696:	93 e0       	ldi	r25, 0x03	; 3
    1698:	af da       	rcall	.-2722   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    169a:	1a 5f       	subi	r17, 0xFA	; 250
    169c:	10 38       	cpi	r17, 0x80	; 128
    169e:	b9 f7       	brne	.-18     	; 0x168e <_Z6bottomh+0x16>
    16a0:	0c c0       	rjmp	.+24     	; 0x16ba <_Z6bottomh+0x42>
    16a2:	cc e8       	ldi	r28, 0x8C	; 140
    16a4:	d7 e0       	ldi	r29, 0x07	; 7
    16a6:	15 e0       	ldi	r17, 0x05	; 5
    16a8:	69 91       	ld	r22, Y+
    16aa:	28 e3       	ldi	r18, 0x38	; 56
    16ac:	41 2f       	mov	r20, r17
    16ae:	83 e8       	ldi	r24, 0x83	; 131
    16b0:	93 e0       	ldi	r25, 0x03	; 3
    16b2:	a2 da       	rcall	.-2748   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    16b4:	1a 5f       	subi	r17, 0xFA	; 250
    16b6:	15 33       	cpi	r17, 0x35	; 53
    16b8:	b9 f7       	brne	.-18     	; 0x16a8 <_Z6bottomh+0x30>
    16ba:	df 91       	pop	r29
    16bc:	cf 91       	pop	r28
    16be:	1f 91       	pop	r17
    16c0:	08 95       	ret

000016c2 <_Z16anzeige_richtungfhh>:
    16c2:	cf 92       	push	r12
    16c4:	df 92       	push	r13
    16c6:	ef 92       	push	r14
    16c8:	ff 92       	push	r15
    16ca:	cf 93       	push	r28
    16cc:	df 93       	push	r29
    16ce:	6b 01       	movw	r12, r22
    16d0:	7c 01       	movw	r14, r24
    16d2:	c4 2f       	mov	r28, r20
    16d4:	d2 2f       	mov	r29, r18
    16d6:	20 e0       	ldi	r18, 0x00	; 0
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	40 eb       	ldi	r20, 0xB0	; 176
    16dc:	51 e4       	ldi	r21, 0x41	; 65
    16de:	0e 94 86 2c 	call	0x590c	; 0x590c <__cmpsf2>
    16e2:	88 23       	and	r24, r24
    16e4:	54 f0       	brlt	.+20     	; 0x16fa <_Z16anzeige_richtungfhh+0x38>
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	30 e0       	ldi	r19, 0x00	; 0
    16ea:	49 ea       	ldi	r20, 0xA9	; 169
    16ec:	53 e4       	ldi	r21, 0x43	; 67
    16ee:	c7 01       	movw	r24, r14
    16f0:	b6 01       	movw	r22, r12
    16f2:	0e 94 36 2e 	call	0x5c6c	; 0x5c6c <__gesf2>
    16f6:	88 23       	and	r24, r24
    16f8:	54 f0       	brlt	.+20     	; 0x170e <_Z16anzeige_richtungfhh+0x4c>
    16fa:	2d 2f       	mov	r18, r29
    16fc:	22 0f       	add	r18, r18
    16fe:	22 0f       	add	r18, r18
    1700:	22 0f       	add	r18, r18
    1702:	4c 2f       	mov	r20, r28
    1704:	6e e4       	ldi	r22, 0x4E	; 78
    1706:	83 e8       	ldi	r24, 0x83	; 131
    1708:	93 e0       	ldi	r25, 0x03	; 3
    170a:	76 da       	rcall	.-2836   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    170c:	ab c0       	rjmp	.+342    	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    170e:	20 e0       	ldi	r18, 0x00	; 0
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	48 e8       	ldi	r20, 0x88	; 136
    1714:	52 e4       	ldi	r21, 0x42	; 66
    1716:	c7 01       	movw	r24, r14
    1718:	b6 01       	movw	r22, r12
    171a:	0e 94 86 2c 	call	0x590c	; 0x590c <__cmpsf2>
    171e:	88 23       	and	r24, r24
    1720:	94 f4       	brge	.+36     	; 0x1746 <_Z16anzeige_richtungfhh+0x84>
    1722:	dd 0f       	add	r29, r29
    1724:	dd 0f       	add	r29, r29
    1726:	dd 0f       	add	r29, r29
    1728:	4d ef       	ldi	r20, 0xFD	; 253
    172a:	4c 0f       	add	r20, r28
    172c:	2d 2f       	mov	r18, r29
    172e:	6e e4       	ldi	r22, 0x4E	; 78
    1730:	83 e8       	ldi	r24, 0x83	; 131
    1732:	93 e0       	ldi	r25, 0x03	; 3
    1734:	61 da       	rcall	.-2878   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1736:	43 e0       	ldi	r20, 0x03	; 3
    1738:	4c 0f       	add	r20, r28
    173a:	2d 2f       	mov	r18, r29
    173c:	6f e4       	ldi	r22, 0x4F	; 79
    173e:	83 e8       	ldi	r24, 0x83	; 131
    1740:	93 e0       	ldi	r25, 0x03	; 3
    1742:	5a da       	rcall	.-2892   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1744:	8f c0       	rjmp	.+286    	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    1746:	20 e0       	ldi	r18, 0x00	; 0
    1748:	30 e0       	ldi	r19, 0x00	; 0
    174a:	42 ee       	ldi	r20, 0xE2	; 226
    174c:	52 e4       	ldi	r21, 0x42	; 66
    174e:	c7 01       	movw	r24, r14
    1750:	b6 01       	movw	r22, r12
    1752:	0e 94 86 2c 	call	0x590c	; 0x590c <__cmpsf2>
    1756:	88 23       	and	r24, r24
    1758:	54 f4       	brge	.+20     	; 0x176e <_Z16anzeige_richtungfhh+0xac>
    175a:	2d 2f       	mov	r18, r29
    175c:	22 0f       	add	r18, r18
    175e:	22 0f       	add	r18, r18
    1760:	22 0f       	add	r18, r18
    1762:	4c 2f       	mov	r20, r28
    1764:	6f e4       	ldi	r22, 0x4F	; 79
    1766:	83 e8       	ldi	r24, 0x83	; 131
    1768:	93 e0       	ldi	r25, 0x03	; 3
    176a:	46 da       	rcall	.-2932   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    176c:	7b c0       	rjmp	.+246    	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    176e:	20 e0       	ldi	r18, 0x00	; 0
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	4e e1       	ldi	r20, 0x1E	; 30
    1774:	53 e4       	ldi	r21, 0x43	; 67
    1776:	c7 01       	movw	r24, r14
    1778:	b6 01       	movw	r22, r12
    177a:	0e 94 86 2c 	call	0x590c	; 0x590c <__cmpsf2>
    177e:	88 23       	and	r24, r24
    1780:	94 f4       	brge	.+36     	; 0x17a6 <_Z16anzeige_richtungfhh+0xe4>
    1782:	dd 0f       	add	r29, r29
    1784:	dd 0f       	add	r29, r29
    1786:	dd 0f       	add	r29, r29
    1788:	4d ef       	ldi	r20, 0xFD	; 253
    178a:	4c 0f       	add	r20, r28
    178c:	2d 2f       	mov	r18, r29
    178e:	63 e5       	ldi	r22, 0x53	; 83
    1790:	83 e8       	ldi	r24, 0x83	; 131
    1792:	93 e0       	ldi	r25, 0x03	; 3
    1794:	31 da       	rcall	.-2974   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1796:	43 e0       	ldi	r20, 0x03	; 3
    1798:	4c 0f       	add	r20, r28
    179a:	2d 2f       	mov	r18, r29
    179c:	6f e4       	ldi	r22, 0x4F	; 79
    179e:	83 e8       	ldi	r24, 0x83	; 131
    17a0:	93 e0       	ldi	r25, 0x03	; 3
    17a2:	2a da       	rcall	.-2988   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    17a4:	5f c0       	rjmp	.+190    	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    17a6:	20 e0       	ldi	r18, 0x00	; 0
    17a8:	30 e0       	ldi	r19, 0x00	; 0
    17aa:	4b e4       	ldi	r20, 0x4B	; 75
    17ac:	53 e4       	ldi	r21, 0x43	; 67
    17ae:	c7 01       	movw	r24, r14
    17b0:	b6 01       	movw	r22, r12
    17b2:	0e 94 86 2c 	call	0x590c	; 0x590c <__cmpsf2>
    17b6:	88 23       	and	r24, r24
    17b8:	54 f4       	brge	.+20     	; 0x17ce <_Z16anzeige_richtungfhh+0x10c>
    17ba:	2d 2f       	mov	r18, r29
    17bc:	22 0f       	add	r18, r18
    17be:	22 0f       	add	r18, r18
    17c0:	22 0f       	add	r18, r18
    17c2:	4c 2f       	mov	r20, r28
    17c4:	63 e5       	ldi	r22, 0x53	; 83
    17c6:	83 e8       	ldi	r24, 0x83	; 131
    17c8:	93 e0       	ldi	r25, 0x03	; 3
    17ca:	16 da       	rcall	.-3028   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    17cc:	4b c0       	rjmp	.+150    	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    17ce:	20 e0       	ldi	r18, 0x00	; 0
    17d0:	30 e0       	ldi	r19, 0x00	; 0
    17d2:	48 e7       	ldi	r20, 0x78	; 120
    17d4:	53 e4       	ldi	r21, 0x43	; 67
    17d6:	c7 01       	movw	r24, r14
    17d8:	b6 01       	movw	r22, r12
    17da:	0e 94 86 2c 	call	0x590c	; 0x590c <__cmpsf2>
    17de:	88 23       	and	r24, r24
    17e0:	94 f4       	brge	.+36     	; 0x1806 <_Z16anzeige_richtungfhh+0x144>
    17e2:	dd 0f       	add	r29, r29
    17e4:	dd 0f       	add	r29, r29
    17e6:	dd 0f       	add	r29, r29
    17e8:	4d ef       	ldi	r20, 0xFD	; 253
    17ea:	4c 0f       	add	r20, r28
    17ec:	2d 2f       	mov	r18, r29
    17ee:	63 e5       	ldi	r22, 0x53	; 83
    17f0:	83 e8       	ldi	r24, 0x83	; 131
    17f2:	93 e0       	ldi	r25, 0x03	; 3
    17f4:	01 da       	rcall	.-3070   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    17f6:	43 e0       	ldi	r20, 0x03	; 3
    17f8:	4c 0f       	add	r20, r28
    17fa:	2d 2f       	mov	r18, r29
    17fc:	67 e5       	ldi	r22, 0x57	; 87
    17fe:	83 e8       	ldi	r24, 0x83	; 131
    1800:	93 e0       	ldi	r25, 0x03	; 3
    1802:	fa d9       	rcall	.-3084   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1804:	2f c0       	rjmp	.+94     	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    1806:	20 e0       	ldi	r18, 0x00	; 0
    1808:	30 e8       	ldi	r19, 0x80	; 128
    180a:	42 e9       	ldi	r20, 0x92	; 146
    180c:	53 e4       	ldi	r21, 0x43	; 67
    180e:	c7 01       	movw	r24, r14
    1810:	b6 01       	movw	r22, r12
    1812:	0e 94 86 2c 	call	0x590c	; 0x590c <__cmpsf2>
    1816:	88 23       	and	r24, r24
    1818:	54 f4       	brge	.+20     	; 0x182e <_Z16anzeige_richtungfhh+0x16c>
    181a:	2d 2f       	mov	r18, r29
    181c:	22 0f       	add	r18, r18
    181e:	22 0f       	add	r18, r18
    1820:	22 0f       	add	r18, r18
    1822:	4c 2f       	mov	r20, r28
    1824:	67 e5       	ldi	r22, 0x57	; 87
    1826:	83 e8       	ldi	r24, 0x83	; 131
    1828:	93 e0       	ldi	r25, 0x03	; 3
    182a:	e6 d9       	rcall	.-3124   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    182c:	1b c0       	rjmp	.+54     	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	30 e0       	ldi	r19, 0x00	; 0
    1832:	49 ea       	ldi	r20, 0xA9	; 169
    1834:	53 e4       	ldi	r21, 0x43	; 67
    1836:	c7 01       	movw	r24, r14
    1838:	b6 01       	movw	r22, r12
    183a:	0e 94 86 2c 	call	0x590c	; 0x590c <__cmpsf2>
    183e:	88 23       	and	r24, r24
    1840:	8c f4       	brge	.+34     	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    1842:	dd 0f       	add	r29, r29
    1844:	dd 0f       	add	r29, r29
    1846:	dd 0f       	add	r29, r29
    1848:	4d ef       	ldi	r20, 0xFD	; 253
    184a:	4c 0f       	add	r20, r28
    184c:	2d 2f       	mov	r18, r29
    184e:	6e e4       	ldi	r22, 0x4E	; 78
    1850:	83 e8       	ldi	r24, 0x83	; 131
    1852:	93 e0       	ldi	r25, 0x03	; 3
    1854:	d1 d9       	rcall	.-3166   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1856:	43 e0       	ldi	r20, 0x03	; 3
    1858:	4c 0f       	add	r20, r28
    185a:	2d 2f       	mov	r18, r29
    185c:	67 e5       	ldi	r22, 0x57	; 87
    185e:	83 e8       	ldi	r24, 0x83	; 131
    1860:	93 e0       	ldi	r25, 0x03	; 3
    1862:	ca d9       	rcall	.-3180   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1864:	df 91       	pop	r29
    1866:	cf 91       	pop	r28
    1868:	ff 90       	pop	r15
    186a:	ef 90       	pop	r14
    186c:	df 90       	pop	r13
    186e:	cf 90       	pop	r12
    1870:	08 95       	ret

00001872 <_Z13anzeige_nadelhhf>:
    1872:	af 92       	push	r10
    1874:	bf 92       	push	r11
    1876:	cf 92       	push	r12
    1878:	df 92       	push	r13
    187a:	ef 92       	push	r14
    187c:	ff 92       	push	r15
    187e:	0f 93       	push	r16
    1880:	1f 93       	push	r17
    1882:	59 01       	movw	r10, r18
    1884:	6a 01       	movw	r12, r20
    1886:	e1 2c       	mov	r14, r1
    1888:	f1 2c       	mov	r15, r1
    188a:	0c e8       	ldi	r16, 0x8C	; 140
    188c:	12 e4       	ldi	r17, 0x42	; 66
    188e:	24 e1       	ldi	r18, 0x14	; 20
    1890:	46 2f       	mov	r20, r22
    1892:	68 2f       	mov	r22, r24
    1894:	83 e8       	ldi	r24, 0x83	; 131
    1896:	93 e0       	ldi	r25, 0x03	; 3
    1898:	8f d8       	rcall	.-3810   	; 0x9b8 <_ZN7Display13draw_triangleEhhhff>
    189a:	1f 91       	pop	r17
    189c:	0f 91       	pop	r16
    189e:	ff 90       	pop	r15
    18a0:	ef 90       	pop	r14
    18a2:	df 90       	pop	r13
    18a4:	cf 90       	pop	r12
    18a6:	bf 90       	pop	r11
    18a8:	af 90       	pop	r10
    18aa:	08 95       	ret

000018ac <_Z19anzeige_kleinenadelhhf>:
    18ac:	af 92       	push	r10
    18ae:	bf 92       	push	r11
    18b0:	cf 92       	push	r12
    18b2:	df 92       	push	r13
    18b4:	ef 92       	push	r14
    18b6:	ff 92       	push	r15
    18b8:	0f 93       	push	r16
    18ba:	1f 93       	push	r17
    18bc:	59 01       	movw	r10, r18
    18be:	6a 01       	movw	r12, r20
    18c0:	e1 2c       	mov	r14, r1
    18c2:	f1 2c       	mov	r15, r1
    18c4:	0c e8       	ldi	r16, 0x8C	; 140
    18c6:	12 e4       	ldi	r17, 0x42	; 66
    18c8:	2a e0       	ldi	r18, 0x0A	; 10
    18ca:	46 2f       	mov	r20, r22
    18cc:	68 2f       	mov	r22, r24
    18ce:	83 e8       	ldi	r24, 0x83	; 131
    18d0:	93 e0       	ldi	r25, 0x03	; 3
    18d2:	72 d8       	rcall	.-3868   	; 0x9b8 <_ZN7Display13draw_triangleEhhhff>
    18d4:	1f 91       	pop	r17
    18d6:	0f 91       	pop	r16
    18d8:	ff 90       	pop	r15
    18da:	ef 90       	pop	r14
    18dc:	df 90       	pop	r13
    18de:	cf 90       	pop	r12
    18e0:	bf 90       	pop	r11
    18e2:	af 90       	pop	r10
    18e4:	08 95       	ret

000018e6 <_Z11menue_hauptv>:
    18e6:	cf 92       	push	r12
    18e8:	df 92       	push	r13
    18ea:	ef 92       	push	r14
    18ec:	ff 92       	push	r15
    18ee:	0f 93       	push	r16
    18f0:	1f 93       	push	r17
    18f2:	cf 93       	push	r28
    18f4:	df 93       	push	r29
    18f6:	cd b7       	in	r28, 0x3d	; 61
    18f8:	de b7       	in	r29, 0x3e	; 62
    18fa:	64 97       	sbiw	r28, 0x14	; 20
    18fc:	0f b6       	in	r0, 0x3f	; 63
    18fe:	f8 94       	cli
    1900:	de bf       	out	0x3e, r29	; 62
    1902:	0f be       	out	0x3f, r0	; 63
    1904:	cd bf       	out	0x3d, r28	; 61
    1906:	83 e8       	ldi	r24, 0x83	; 131
    1908:	93 e0       	ldi	r25, 0x03	; 3
    190a:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    190e:	80 e1       	ldi	r24, 0x10	; 16
    1910:	e6 e3       	ldi	r30, 0x36	; 54
    1912:	f1 e0       	ldi	r31, 0x01	; 1
    1914:	8e 01       	movw	r16, r28
    1916:	0f 5f       	subi	r16, 0xFF	; 255
    1918:	1f 4f       	sbci	r17, 0xFF	; 255
    191a:	d8 01       	movw	r26, r16
    191c:	01 90       	ld	r0, Z+
    191e:	0d 92       	st	X+, r0
    1920:	8a 95       	dec	r24
    1922:	e1 f7       	brne	.-8      	; 0x191c <_Z11menue_hauptv+0x36>
    1924:	e0 2e       	mov	r14, r16
    1926:	f1 2e       	mov	r15, r17
    1928:	68 01       	movw	r12, r16
    192a:	10 e0       	ldi	r17, 0x00	; 0
    192c:	f6 01       	movw	r30, r12
    192e:	61 91       	ld	r22, Z+
    1930:	6f 01       	movw	r12, r30
    1932:	20 e0       	ldi	r18, 0x00	; 0
    1934:	41 2f       	mov	r20, r17
    1936:	83 e8       	ldi	r24, 0x83	; 131
    1938:	93 e0       	ldi	r25, 0x03	; 3
    193a:	5e d9       	rcall	.-3396   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    193c:	1a 5f       	subi	r17, 0xFA	; 250
    193e:	1a 35       	cpi	r17, 0x5A	; 90
    1940:	a9 f7       	brne	.-22     	; 0x192c <_Z11menue_hauptv+0x46>
    1942:	81 e1       	ldi	r24, 0x11	; 17
    1944:	e6 e4       	ldi	r30, 0x46	; 70
    1946:	f1 e0       	ldi	r31, 0x01	; 1
    1948:	de 01       	movw	r26, r28
    194a:	11 96       	adiw	r26, 0x01	; 1
    194c:	01 90       	ld	r0, Z+
    194e:	0d 92       	st	X+, r0
    1950:	8a 95       	dec	r24
    1952:	e1 f7       	brne	.-8      	; 0x194c <_Z11menue_hauptv+0x66>
    1954:	ce 2c       	mov	r12, r14
    1956:	df 2c       	mov	r13, r15
    1958:	10 e0       	ldi	r17, 0x00	; 0
    195a:	f6 01       	movw	r30, r12
    195c:	61 91       	ld	r22, Z+
    195e:	6f 01       	movw	r12, r30
    1960:	28 e0       	ldi	r18, 0x08	; 8
    1962:	41 2f       	mov	r20, r17
    1964:	83 e8       	ldi	r24, 0x83	; 131
    1966:	93 e0       	ldi	r25, 0x03	; 3
    1968:	47 d9       	rcall	.-3442   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    196a:	1a 5f       	subi	r17, 0xFA	; 250
    196c:	10 36       	cpi	r17, 0x60	; 96
    196e:	a9 f7       	brne	.-22     	; 0x195a <_Z11menue_hauptv+0x74>
    1970:	8a e0       	ldi	r24, 0x0A	; 10
    1972:	e7 e5       	ldi	r30, 0x57	; 87
    1974:	f1 e0       	ldi	r31, 0x01	; 1
    1976:	de 01       	movw	r26, r28
    1978:	11 96       	adiw	r26, 0x01	; 1
    197a:	01 90       	ld	r0, Z+
    197c:	0d 92       	st	X+, r0
    197e:	8a 95       	dec	r24
    1980:	e1 f7       	brne	.-8      	; 0x197a <_Z11menue_hauptv+0x94>
    1982:	ce 2c       	mov	r12, r14
    1984:	df 2c       	mov	r13, r15
    1986:	10 e0       	ldi	r17, 0x00	; 0
    1988:	f6 01       	movw	r30, r12
    198a:	61 91       	ld	r22, Z+
    198c:	6f 01       	movw	r12, r30
    198e:	20 e1       	ldi	r18, 0x10	; 16
    1990:	41 2f       	mov	r20, r17
    1992:	83 e8       	ldi	r24, 0x83	; 131
    1994:	93 e0       	ldi	r25, 0x03	; 3
    1996:	30 d9       	rcall	.-3488   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1998:	1a 5f       	subi	r17, 0xFA	; 250
    199a:	16 33       	cpi	r17, 0x36	; 54
    199c:	a9 f7       	brne	.-22     	; 0x1988 <_Z11menue_hauptv+0xa2>
    199e:	8b e0       	ldi	r24, 0x0B	; 11
    19a0:	e1 e6       	ldi	r30, 0x61	; 97
    19a2:	f1 e0       	ldi	r31, 0x01	; 1
    19a4:	de 01       	movw	r26, r28
    19a6:	11 96       	adiw	r26, 0x01	; 1
    19a8:	01 90       	ld	r0, Z+
    19aa:	0d 92       	st	X+, r0
    19ac:	8a 95       	dec	r24
    19ae:	e1 f7       	brne	.-8      	; 0x19a8 <_Z11menue_hauptv+0xc2>
    19b0:	ce 2c       	mov	r12, r14
    19b2:	df 2c       	mov	r13, r15
    19b4:	10 e0       	ldi	r17, 0x00	; 0
    19b6:	f6 01       	movw	r30, r12
    19b8:	61 91       	ld	r22, Z+
    19ba:	6f 01       	movw	r12, r30
    19bc:	28 e1       	ldi	r18, 0x18	; 24
    19be:	41 2f       	mov	r20, r17
    19c0:	83 e8       	ldi	r24, 0x83	; 131
    19c2:	93 e0       	ldi	r25, 0x03	; 3
    19c4:	19 d9       	rcall	.-3534   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    19c6:	1a 5f       	subi	r17, 0xFA	; 250
    19c8:	1c 33       	cpi	r17, 0x3C	; 60
    19ca:	a9 f7       	brne	.-22     	; 0x19b6 <_Z11menue_hauptv+0xd0>
    19cc:	80 e1       	ldi	r24, 0x10	; 16
    19ce:	ec e6       	ldi	r30, 0x6C	; 108
    19d0:	f1 e0       	ldi	r31, 0x01	; 1
    19d2:	de 01       	movw	r26, r28
    19d4:	11 96       	adiw	r26, 0x01	; 1
    19d6:	01 90       	ld	r0, Z+
    19d8:	0d 92       	st	X+, r0
    19da:	8a 95       	dec	r24
    19dc:	e1 f7       	brne	.-8      	; 0x19d6 <_Z11menue_hauptv+0xf0>
    19de:	ce 2c       	mov	r12, r14
    19e0:	df 2c       	mov	r13, r15
    19e2:	10 e0       	ldi	r17, 0x00	; 0
    19e4:	f6 01       	movw	r30, r12
    19e6:	61 91       	ld	r22, Z+
    19e8:	6f 01       	movw	r12, r30
    19ea:	20 e2       	ldi	r18, 0x20	; 32
    19ec:	41 2f       	mov	r20, r17
    19ee:	83 e8       	ldi	r24, 0x83	; 131
    19f0:	93 e0       	ldi	r25, 0x03	; 3
    19f2:	02 d9       	rcall	.-3580   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    19f4:	1a 5f       	subi	r17, 0xFA	; 250
    19f6:	1a 35       	cpi	r17, 0x5A	; 90
    19f8:	a9 f7       	brne	.-22     	; 0x19e4 <_Z11menue_hauptv+0xfe>
    19fa:	8e e0       	ldi	r24, 0x0E	; 14
    19fc:	ec e7       	ldi	r30, 0x7C	; 124
    19fe:	f1 e0       	ldi	r31, 0x01	; 1
    1a00:	de 01       	movw	r26, r28
    1a02:	11 96       	adiw	r26, 0x01	; 1
    1a04:	01 90       	ld	r0, Z+
    1a06:	0d 92       	st	X+, r0
    1a08:	8a 95       	dec	r24
    1a0a:	e1 f7       	brne	.-8      	; 0x1a04 <_Z11menue_hauptv+0x11e>
    1a0c:	ce 2c       	mov	r12, r14
    1a0e:	df 2c       	mov	r13, r15
    1a10:	10 e0       	ldi	r17, 0x00	; 0
    1a12:	f6 01       	movw	r30, r12
    1a14:	61 91       	ld	r22, Z+
    1a16:	6f 01       	movw	r12, r30
    1a18:	28 e2       	ldi	r18, 0x28	; 40
    1a1a:	41 2f       	mov	r20, r17
    1a1c:	83 e8       	ldi	r24, 0x83	; 131
    1a1e:	93 e0       	ldi	r25, 0x03	; 3
    1a20:	eb d8       	rcall	.-3626   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1a22:	1a 5f       	subi	r17, 0xFA	; 250
    1a24:	1e 34       	cpi	r17, 0x4E	; 78
    1a26:	a9 f7       	brne	.-22     	; 0x1a12 <_Z11menue_hauptv+0x12c>
    1a28:	8e e0       	ldi	r24, 0x0E	; 14
    1a2a:	ea e8       	ldi	r30, 0x8A	; 138
    1a2c:	f1 e0       	ldi	r31, 0x01	; 1
    1a2e:	de 01       	movw	r26, r28
    1a30:	11 96       	adiw	r26, 0x01	; 1
    1a32:	01 90       	ld	r0, Z+
    1a34:	0d 92       	st	X+, r0
    1a36:	8a 95       	dec	r24
    1a38:	e1 f7       	brne	.-8      	; 0x1a32 <_Z11menue_hauptv+0x14c>
    1a3a:	ce 2c       	mov	r12, r14
    1a3c:	df 2c       	mov	r13, r15
    1a3e:	10 e0       	ldi	r17, 0x00	; 0
    1a40:	f6 01       	movw	r30, r12
    1a42:	61 91       	ld	r22, Z+
    1a44:	6f 01       	movw	r12, r30
    1a46:	20 e3       	ldi	r18, 0x30	; 48
    1a48:	41 2f       	mov	r20, r17
    1a4a:	83 e8       	ldi	r24, 0x83	; 131
    1a4c:	93 e0       	ldi	r25, 0x03	; 3
    1a4e:	d4 d8       	rcall	.-3672   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1a50:	1a 5f       	subi	r17, 0xFA	; 250
    1a52:	1e 34       	cpi	r17, 0x4E	; 78
    1a54:	a9 f7       	brne	.-22     	; 0x1a40 <_Z11menue_hauptv+0x15a>
    1a56:	64 96       	adiw	r28, 0x14	; 20
    1a58:	0f b6       	in	r0, 0x3f	; 63
    1a5a:	f8 94       	cli
    1a5c:	de bf       	out	0x3e, r29	; 62
    1a5e:	0f be       	out	0x3f, r0	; 63
    1a60:	cd bf       	out	0x3d, r28	; 61
    1a62:	df 91       	pop	r29
    1a64:	cf 91       	pop	r28
    1a66:	1f 91       	pop	r17
    1a68:	0f 91       	pop	r16
    1a6a:	ff 90       	pop	r15
    1a6c:	ef 90       	pop	r14
    1a6e:	df 90       	pop	r13
    1a70:	cf 90       	pop	r12
    1a72:	08 95       	ret

00001a74 <_Z11menue_einstv>:
    1a74:	af 92       	push	r10
    1a76:	bf 92       	push	r11
    1a78:	df 92       	push	r13
    1a7a:	ef 92       	push	r14
    1a7c:	0f 93       	push	r16
    1a7e:	1f 93       	push	r17
    1a80:	cf 93       	push	r28
    1a82:	df 93       	push	r29
    1a84:	cd b7       	in	r28, 0x3d	; 61
    1a86:	de b7       	in	r29, 0x3e	; 62
    1a88:	64 97       	sbiw	r28, 0x14	; 20
    1a8a:	0f b6       	in	r0, 0x3f	; 63
    1a8c:	f8 94       	cli
    1a8e:	de bf       	out	0x3e, r29	; 62
    1a90:	0f be       	out	0x3f, r0	; 63
    1a92:	cd bf       	out	0x3d, r28	; 61
    1a94:	83 e8       	ldi	r24, 0x83	; 131
    1a96:	93 e0       	ldi	r25, 0x03	; 3
    1a98:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1a9c:	81 e1       	ldi	r24, 0x11	; 17
    1a9e:	e8 e9       	ldi	r30, 0x98	; 152
    1aa0:	f1 e0       	ldi	r31, 0x01	; 1
    1aa2:	8e 01       	movw	r16, r28
    1aa4:	0f 5f       	subi	r16, 0xFF	; 255
    1aa6:	1f 4f       	sbci	r17, 0xFF	; 255
    1aa8:	d8 01       	movw	r26, r16
    1aaa:	01 90       	ld	r0, Z+
    1aac:	0d 92       	st	X+, r0
    1aae:	8a 95       	dec	r24
    1ab0:	e1 f7       	brne	.-8      	; 0x1aaa <_Z11menue_einstv+0x36>
    1ab2:	d0 2e       	mov	r13, r16
    1ab4:	e1 2e       	mov	r14, r17
    1ab6:	58 01       	movw	r10, r16
    1ab8:	10 e0       	ldi	r17, 0x00	; 0
    1aba:	f5 01       	movw	r30, r10
    1abc:	61 91       	ld	r22, Z+
    1abe:	5f 01       	movw	r10, r30
    1ac0:	20 e0       	ldi	r18, 0x00	; 0
    1ac2:	41 2f       	mov	r20, r17
    1ac4:	83 e8       	ldi	r24, 0x83	; 131
    1ac6:	93 e0       	ldi	r25, 0x03	; 3
    1ac8:	97 d8       	rcall	.-3794   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1aca:	1a 5f       	subi	r17, 0xFA	; 250
    1acc:	10 36       	cpi	r17, 0x60	; 96
    1ace:	a9 f7       	brne	.-22     	; 0x1aba <_Z11menue_einstv+0x46>
    1ad0:	86 e1       	ldi	r24, 0x16	; 22
    1ad2:	e9 ea       	ldi	r30, 0xA9	; 169
    1ad4:	f1 e0       	ldi	r31, 0x01	; 1
    1ad6:	de 01       	movw	r26, r28
    1ad8:	11 96       	adiw	r26, 0x01	; 1
    1ada:	01 90       	ld	r0, Z+
    1adc:	0d 92       	st	X+, r0
    1ade:	8a 95       	dec	r24
    1ae0:	e1 f7       	brne	.-8      	; 0x1ada <_Z11menue_einstv+0x66>
    1ae2:	ad 2c       	mov	r10, r13
    1ae4:	be 2c       	mov	r11, r14
    1ae6:	10 e0       	ldi	r17, 0x00	; 0
    1ae8:	f5 01       	movw	r30, r10
    1aea:	61 91       	ld	r22, Z+
    1aec:	5f 01       	movw	r10, r30
    1aee:	28 e0       	ldi	r18, 0x08	; 8
    1af0:	41 2f       	mov	r20, r17
    1af2:	83 e8       	ldi	r24, 0x83	; 131
    1af4:	93 e0       	ldi	r25, 0x03	; 3
    1af6:	80 d8       	rcall	.-3840   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1af8:	1a 5f       	subi	r17, 0xFA	; 250
    1afa:	1e 37       	cpi	r17, 0x7E	; 126
    1afc:	a9 f7       	brne	.-22     	; 0x1ae8 <_Z11menue_einstv+0x74>
    1afe:	81 e1       	ldi	r24, 0x11	; 17
    1b00:	ef eb       	ldi	r30, 0xBF	; 191
    1b02:	f1 e0       	ldi	r31, 0x01	; 1
    1b04:	de 01       	movw	r26, r28
    1b06:	11 96       	adiw	r26, 0x01	; 1
    1b08:	01 90       	ld	r0, Z+
    1b0a:	0d 92       	st	X+, r0
    1b0c:	8a 95       	dec	r24
    1b0e:	e1 f7       	brne	.-8      	; 0x1b08 <_Z11menue_einstv+0x94>
    1b10:	ad 2c       	mov	r10, r13
    1b12:	be 2c       	mov	r11, r14
    1b14:	10 e0       	ldi	r17, 0x00	; 0
    1b16:	f5 01       	movw	r30, r10
    1b18:	61 91       	ld	r22, Z+
    1b1a:	5f 01       	movw	r10, r30
    1b1c:	20 e1       	ldi	r18, 0x10	; 16
    1b1e:	41 2f       	mov	r20, r17
    1b20:	83 e8       	ldi	r24, 0x83	; 131
    1b22:	93 e0       	ldi	r25, 0x03	; 3
    1b24:	69 d8       	rcall	.-3886   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1b26:	1a 5f       	subi	r17, 0xFA	; 250
    1b28:	10 36       	cpi	r17, 0x60	; 96
    1b2a:	a9 f7       	brne	.-22     	; 0x1b16 <_Z11menue_einstv+0xa2>
    1b2c:	83 e1       	ldi	r24, 0x13	; 19
    1b2e:	e0 ed       	ldi	r30, 0xD0	; 208
    1b30:	f1 e0       	ldi	r31, 0x01	; 1
    1b32:	de 01       	movw	r26, r28
    1b34:	11 96       	adiw	r26, 0x01	; 1
    1b36:	01 90       	ld	r0, Z+
    1b38:	0d 92       	st	X+, r0
    1b3a:	8a 95       	dec	r24
    1b3c:	e1 f7       	brne	.-8      	; 0x1b36 <_Z11menue_einstv+0xc2>
    1b3e:	ad 2c       	mov	r10, r13
    1b40:	be 2c       	mov	r11, r14
    1b42:	10 e0       	ldi	r17, 0x00	; 0
    1b44:	f5 01       	movw	r30, r10
    1b46:	61 91       	ld	r22, Z+
    1b48:	5f 01       	movw	r10, r30
    1b4a:	28 e1       	ldi	r18, 0x18	; 24
    1b4c:	41 2f       	mov	r20, r17
    1b4e:	83 e8       	ldi	r24, 0x83	; 131
    1b50:	93 e0       	ldi	r25, 0x03	; 3
    1b52:	52 d8       	rcall	.-3932   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1b54:	1a 5f       	subi	r17, 0xFA	; 250
    1b56:	1c 36       	cpi	r17, 0x6C	; 108
    1b58:	a9 f7       	brne	.-22     	; 0x1b44 <_Z11menue_einstv+0xd0>
    1b5a:	64 96       	adiw	r28, 0x14	; 20
    1b5c:	0f b6       	in	r0, 0x3f	; 63
    1b5e:	f8 94       	cli
    1b60:	de bf       	out	0x3e, r29	; 62
    1b62:	0f be       	out	0x3f, r0	; 63
    1b64:	cd bf       	out	0x3d, r28	; 61
    1b66:	df 91       	pop	r29
    1b68:	cf 91       	pop	r28
    1b6a:	1f 91       	pop	r17
    1b6c:	0f 91       	pop	r16
    1b6e:	ef 90       	pop	r14
    1b70:	df 90       	pop	r13
    1b72:	bf 90       	pop	r11
    1b74:	af 90       	pop	r10
    1b76:	08 95       	ret

00001b78 <_Z9menue_uhrv>:
    1b78:	cf 92       	push	r12
    1b7a:	df 92       	push	r13
    1b7c:	ef 92       	push	r14
    1b7e:	ff 92       	push	r15
    1b80:	0f 93       	push	r16
    1b82:	1f 93       	push	r17
    1b84:	cf 93       	push	r28
    1b86:	df 93       	push	r29
    1b88:	cd b7       	in	r28, 0x3d	; 61
    1b8a:	de b7       	in	r29, 0x3e	; 62
    1b8c:	64 97       	sbiw	r28, 0x14	; 20
    1b8e:	0f b6       	in	r0, 0x3f	; 63
    1b90:	f8 94       	cli
    1b92:	de bf       	out	0x3e, r29	; 62
    1b94:	0f be       	out	0x3f, r0	; 63
    1b96:	cd bf       	out	0x3d, r28	; 61
    1b98:	83 e8       	ldi	r24, 0x83	; 131
    1b9a:	93 e0       	ldi	r25, 0x03	; 3
    1b9c:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1ba0:	86 e0       	ldi	r24, 0x06	; 6
    1ba2:	e3 ee       	ldi	r30, 0xE3	; 227
    1ba4:	f1 e0       	ldi	r31, 0x01	; 1
    1ba6:	8e 01       	movw	r16, r28
    1ba8:	0f 5f       	subi	r16, 0xFF	; 255
    1baa:	1f 4f       	sbci	r17, 0xFF	; 255
    1bac:	d8 01       	movw	r26, r16
    1bae:	01 90       	ld	r0, Z+
    1bb0:	0d 92       	st	X+, r0
    1bb2:	8a 95       	dec	r24
    1bb4:	e1 f7       	brne	.-8      	; 0x1bae <_Z9menue_uhrv+0x36>
    1bb6:	e0 2e       	mov	r14, r16
    1bb8:	f1 2e       	mov	r15, r17
    1bba:	68 01       	movw	r12, r16
    1bbc:	10 e0       	ldi	r17, 0x00	; 0
    1bbe:	f6 01       	movw	r30, r12
    1bc0:	61 91       	ld	r22, Z+
    1bc2:	6f 01       	movw	r12, r30
    1bc4:	20 e0       	ldi	r18, 0x00	; 0
    1bc6:	41 2f       	mov	r20, r17
    1bc8:	83 e8       	ldi	r24, 0x83	; 131
    1bca:	93 e0       	ldi	r25, 0x03	; 3
    1bcc:	15 d8       	rcall	.-4054   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1bce:	1a 5f       	subi	r17, 0xFA	; 250
    1bd0:	1e 31       	cpi	r17, 0x1E	; 30
    1bd2:	a9 f7       	brne	.-22     	; 0x1bbe <_Z9menue_uhrv+0x46>
    1bd4:	8b e0       	ldi	r24, 0x0B	; 11
    1bd6:	e9 ee       	ldi	r30, 0xE9	; 233
    1bd8:	f1 e0       	ldi	r31, 0x01	; 1
    1bda:	de 01       	movw	r26, r28
    1bdc:	11 96       	adiw	r26, 0x01	; 1
    1bde:	01 90       	ld	r0, Z+
    1be0:	0d 92       	st	X+, r0
    1be2:	8a 95       	dec	r24
    1be4:	e1 f7       	brne	.-8      	; 0x1bde <_Z9menue_uhrv+0x66>
    1be6:	ce 2c       	mov	r12, r14
    1be8:	df 2c       	mov	r13, r15
    1bea:	10 e0       	ldi	r17, 0x00	; 0
    1bec:	f6 01       	movw	r30, r12
    1bee:	61 91       	ld	r22, Z+
    1bf0:	6f 01       	movw	r12, r30
    1bf2:	28 e0       	ldi	r18, 0x08	; 8
    1bf4:	41 2f       	mov	r20, r17
    1bf6:	83 e8       	ldi	r24, 0x83	; 131
    1bf8:	93 e0       	ldi	r25, 0x03	; 3
    1bfa:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1bfe:	1a 5f       	subi	r17, 0xFA	; 250
    1c00:	1c 33       	cpi	r17, 0x3C	; 60
    1c02:	a1 f7       	brne	.-24     	; 0x1bec <_Z9menue_uhrv+0x74>
    1c04:	88 e0       	ldi	r24, 0x08	; 8
    1c06:	e4 ef       	ldi	r30, 0xF4	; 244
    1c08:	f1 e0       	ldi	r31, 0x01	; 1
    1c0a:	de 01       	movw	r26, r28
    1c0c:	11 96       	adiw	r26, 0x01	; 1
    1c0e:	01 90       	ld	r0, Z+
    1c10:	0d 92       	st	X+, r0
    1c12:	8a 95       	dec	r24
    1c14:	e1 f7       	brne	.-8      	; 0x1c0e <_Z9menue_uhrv+0x96>
    1c16:	ce 2c       	mov	r12, r14
    1c18:	df 2c       	mov	r13, r15
    1c1a:	10 e0       	ldi	r17, 0x00	; 0
    1c1c:	f6 01       	movw	r30, r12
    1c1e:	61 91       	ld	r22, Z+
    1c20:	6f 01       	movw	r12, r30
    1c22:	20 e1       	ldi	r18, 0x10	; 16
    1c24:	41 2f       	mov	r20, r17
    1c26:	83 e8       	ldi	r24, 0x83	; 131
    1c28:	93 e0       	ldi	r25, 0x03	; 3
    1c2a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1c2e:	1a 5f       	subi	r17, 0xFA	; 250
    1c30:	1a 32       	cpi	r17, 0x2A	; 42
    1c32:	a1 f7       	brne	.-24     	; 0x1c1c <_Z9menue_uhrv+0xa4>
    1c34:	88 e0       	ldi	r24, 0x08	; 8
    1c36:	ec ef       	ldi	r30, 0xFC	; 252
    1c38:	f1 e0       	ldi	r31, 0x01	; 1
    1c3a:	de 01       	movw	r26, r28
    1c3c:	11 96       	adiw	r26, 0x01	; 1
    1c3e:	01 90       	ld	r0, Z+
    1c40:	0d 92       	st	X+, r0
    1c42:	8a 95       	dec	r24
    1c44:	e1 f7       	brne	.-8      	; 0x1c3e <_Z9menue_uhrv+0xc6>
    1c46:	ce 2c       	mov	r12, r14
    1c48:	df 2c       	mov	r13, r15
    1c4a:	10 e0       	ldi	r17, 0x00	; 0
    1c4c:	f6 01       	movw	r30, r12
    1c4e:	61 91       	ld	r22, Z+
    1c50:	6f 01       	movw	r12, r30
    1c52:	28 e1       	ldi	r18, 0x18	; 24
    1c54:	41 2f       	mov	r20, r17
    1c56:	83 e8       	ldi	r24, 0x83	; 131
    1c58:	93 e0       	ldi	r25, 0x03	; 3
    1c5a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1c5e:	1a 5f       	subi	r17, 0xFA	; 250
    1c60:	1a 32       	cpi	r17, 0x2A	; 42
    1c62:	a1 f7       	brne	.-24     	; 0x1c4c <_Z9menue_uhrv+0xd4>
    1c64:	8c e0       	ldi	r24, 0x0C	; 12
    1c66:	e4 e0       	ldi	r30, 0x04	; 4
    1c68:	f2 e0       	ldi	r31, 0x02	; 2
    1c6a:	de 01       	movw	r26, r28
    1c6c:	11 96       	adiw	r26, 0x01	; 1
    1c6e:	01 90       	ld	r0, Z+
    1c70:	0d 92       	st	X+, r0
    1c72:	8a 95       	dec	r24
    1c74:	e1 f7       	brne	.-8      	; 0x1c6e <_Z9menue_uhrv+0xf6>
    1c76:	ce 2c       	mov	r12, r14
    1c78:	df 2c       	mov	r13, r15
    1c7a:	10 e0       	ldi	r17, 0x00	; 0
    1c7c:	f6 01       	movw	r30, r12
    1c7e:	61 91       	ld	r22, Z+
    1c80:	6f 01       	movw	r12, r30
    1c82:	20 e2       	ldi	r18, 0x20	; 32
    1c84:	41 2f       	mov	r20, r17
    1c86:	83 e8       	ldi	r24, 0x83	; 131
    1c88:	93 e0       	ldi	r25, 0x03	; 3
    1c8a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1c8e:	1a 5f       	subi	r17, 0xFA	; 250
    1c90:	12 34       	cpi	r17, 0x42	; 66
    1c92:	a1 f7       	brne	.-24     	; 0x1c7c <_Z9menue_uhrv+0x104>
    1c94:	89 e0       	ldi	r24, 0x09	; 9
    1c96:	e0 e1       	ldi	r30, 0x10	; 16
    1c98:	f2 e0       	ldi	r31, 0x02	; 2
    1c9a:	de 01       	movw	r26, r28
    1c9c:	11 96       	adiw	r26, 0x01	; 1
    1c9e:	01 90       	ld	r0, Z+
    1ca0:	0d 92       	st	X+, r0
    1ca2:	8a 95       	dec	r24
    1ca4:	e1 f7       	brne	.-8      	; 0x1c9e <_Z9menue_uhrv+0x126>
    1ca6:	ce 2c       	mov	r12, r14
    1ca8:	df 2c       	mov	r13, r15
    1caa:	10 e0       	ldi	r17, 0x00	; 0
    1cac:	f6 01       	movw	r30, r12
    1cae:	61 91       	ld	r22, Z+
    1cb0:	6f 01       	movw	r12, r30
    1cb2:	28 e2       	ldi	r18, 0x28	; 40
    1cb4:	41 2f       	mov	r20, r17
    1cb6:	83 e8       	ldi	r24, 0x83	; 131
    1cb8:	93 e0       	ldi	r25, 0x03	; 3
    1cba:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1cbe:	1a 5f       	subi	r17, 0xFA	; 250
    1cc0:	10 33       	cpi	r17, 0x30	; 48
    1cc2:	a1 f7       	brne	.-24     	; 0x1cac <_Z9menue_uhrv+0x134>
    1cc4:	64 96       	adiw	r28, 0x14	; 20
    1cc6:	0f b6       	in	r0, 0x3f	; 63
    1cc8:	f8 94       	cli
    1cca:	de bf       	out	0x3e, r29	; 62
    1ccc:	0f be       	out	0x3f, r0	; 63
    1cce:	cd bf       	out	0x3d, r28	; 61
    1cd0:	df 91       	pop	r29
    1cd2:	cf 91       	pop	r28
    1cd4:	1f 91       	pop	r17
    1cd6:	0f 91       	pop	r16
    1cd8:	ff 90       	pop	r15
    1cda:	ef 90       	pop	r14
    1cdc:	df 90       	pop	r13
    1cde:	cf 90       	pop	r12
    1ce0:	08 95       	ret

00001ce2 <_Z11uhranzeigenv>:
    1ce2:	df 92       	push	r13
    1ce4:	ef 92       	push	r14
    1ce6:	ff 92       	push	r15
    1ce8:	0f 93       	push	r16
    1cea:	1f 93       	push	r17
    1cec:	cf 93       	push	r28
    1cee:	df 93       	push	r29
    1cf0:	cd b7       	in	r28, 0x3d	; 61
    1cf2:	de b7       	in	r29, 0x3e	; 62
    1cf4:	64 97       	sbiw	r28, 0x14	; 20
    1cf6:	0f b6       	in	r0, 0x3f	; 63
    1cf8:	f8 94       	cli
    1cfa:	de bf       	out	0x3e, r29	; 62
    1cfc:	0f be       	out	0x3f, r0	; 63
    1cfe:	cd bf       	out	0x3d, r28	; 61
    1d00:	8c e6       	ldi	r24, 0x6C	; 108
    1d02:	93 e0       	ldi	r25, 0x03	; 3
    1d04:	0e 94 be 29 	call	0x537c	; 0x537c <_ZN8Pressure16READ_TemperatureEv>
    1d08:	83 e8       	ldi	r24, 0x83	; 131
    1d0a:	93 e0       	ldi	r25, 0x03	; 3
    1d0c:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1d10:	01 e0       	ldi	r16, 0x01	; 1
    1d12:	20 91 96 07 	lds	r18, 0x0796
    1d16:	40 91 95 07 	lds	r20, 0x0795
    1d1a:	60 91 94 07 	lds	r22, 0x0794
    1d1e:	83 e8       	ldi	r24, 0x83	; 131
    1d20:	93 e0       	ldi	r25, 0x03	; 3
    1d22:	2e d8       	rcall	.-4004   	; 0xd80 <_ZN7Display6analogEhhhh>
    1d24:	0f 2e       	mov	r0, r31
    1d26:	f4 e8       	ldi	r31, 0x84	; 132
    1d28:	ef 2e       	mov	r14, r31
    1d2a:	f7 e0       	ldi	r31, 0x07	; 7
    1d2c:	ff 2e       	mov	r15, r31
    1d2e:	f0 2d       	mov	r31, r0
    1d30:	11 e4       	ldi	r17, 0x41	; 65
    1d32:	f7 01       	movw	r30, r14
    1d34:	61 91       	ld	r22, Z+
    1d36:	7f 01       	movw	r14, r30
    1d38:	20 e0       	ldi	r18, 0x00	; 0
    1d3a:	41 2f       	mov	r20, r17
    1d3c:	83 e8       	ldi	r24, 0x83	; 131
    1d3e:	93 e0       	ldi	r25, 0x03	; 3
    1d40:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1d44:	1a 5f       	subi	r17, 0xFA	; 250
    1d46:	11 37       	cpi	r17, 0x71	; 113
    1d48:	a1 f7       	brne	.-24     	; 0x1d32 <_Z11uhranzeigenv+0x50>
    1d4a:	0f 2e       	mov	r0, r31
    1d4c:	fc e8       	ldi	r31, 0x8C	; 140
    1d4e:	ef 2e       	mov	r14, r31
    1d50:	f7 e0       	ldi	r31, 0x07	; 7
    1d52:	ff 2e       	mov	r15, r31
    1d54:	f0 2d       	mov	r31, r0
    1d56:	11 e4       	ldi	r17, 0x41	; 65
    1d58:	f7 01       	movw	r30, r14
    1d5a:	61 91       	ld	r22, Z+
    1d5c:	7f 01       	movw	r14, r30
    1d5e:	28 e3       	ldi	r18, 0x38	; 56
    1d60:	41 2f       	mov	r20, r17
    1d62:	83 e8       	ldi	r24, 0x83	; 131
    1d64:	93 e0       	ldi	r25, 0x03	; 3
    1d66:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1d6a:	1a 5f       	subi	r17, 0xFA	; 250
    1d6c:	11 37       	cpi	r17, 0x71	; 113
    1d6e:	a1 f7       	brne	.-24     	; 0x1d58 <_Z11uhranzeigenv+0x76>
    1d70:	94 da       	rcall	.-2776   	; 0x129a <_Z14Batteriestatusv>
    1d72:	28 2f       	mov	r18, r24
    1d74:	33 27       	eor	r19, r19
    1d76:	27 fd       	sbrc	r18, 7
    1d78:	30 95       	com	r19
    1d7a:	3f 93       	push	r19
    1d7c:	8f 93       	push	r24
    1d7e:	81 e3       	ldi	r24, 0x31	; 49
    1d80:	91 e0       	ldi	r25, 0x01	; 1
    1d82:	9f 93       	push	r25
    1d84:	8f 93       	push	r24
    1d86:	ce 01       	movw	r24, r28
    1d88:	01 96       	adiw	r24, 0x01	; 1
    1d8a:	9f 93       	push	r25
    1d8c:	8f 93       	push	r24
    1d8e:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    1d92:	0f 90       	pop	r0
    1d94:	0f 90       	pop	r0
    1d96:	0f 90       	pop	r0
    1d98:	0f 90       	pop	r0
    1d9a:	0f 90       	pop	r0
    1d9c:	0f 90       	pop	r0
    1d9e:	88 23       	and	r24, r24
    1da0:	59 f1       	breq	.+86     	; 0x1df8 <_Z11uhranzeigenv+0x116>
    1da2:	8e 01       	movw	r16, r28
    1da4:	0f 5f       	subi	r16, 0xFF	; 255
    1da6:	1f 4f       	sbci	r17, 0xFF	; 255
    1da8:	81 50       	subi	r24, 0x01	; 1
    1daa:	68 94       	set
    1dac:	ee 24       	eor	r14, r14
    1dae:	e1 f8       	bld	r14, 1
    1db0:	f1 2c       	mov	r15, r1
    1db2:	ec 0e       	add	r14, r28
    1db4:	fd 1e       	adc	r15, r29
    1db6:	e8 0e       	add	r14, r24
    1db8:	f1 1c       	adc	r15, r1
    1dba:	0f 2e       	mov	r0, r31
    1dbc:	f9 e4       	ldi	r31, 0x49	; 73
    1dbe:	df 2e       	mov	r13, r31
    1dc0:	f0 2d       	mov	r31, r0
    1dc2:	f8 01       	movw	r30, r16
    1dc4:	61 91       	ld	r22, Z+
    1dc6:	8f 01       	movw	r16, r30
    1dc8:	86 2f       	mov	r24, r22
    1dca:	87 7f       	andi	r24, 0xF7	; 247
    1dcc:	85 32       	cpi	r24, 0x25	; 37
    1dce:	39 f4       	brne	.+14     	; 0x1dde <_Z11uhranzeigenv+0xfc>
    1dd0:	28 e1       	ldi	r18, 0x18	; 24
    1dd2:	4d 2d       	mov	r20, r13
    1dd4:	83 e8       	ldi	r24, 0x83	; 131
    1dd6:	93 e0       	ldi	r25, 0x03	; 3
    1dd8:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1ddc:	08 c0       	rjmp	.+16     	; 0x1dee <_Z11uhranzeigenv+0x10c>
    1dde:	60 53       	subi	r22, 0x30	; 48
    1de0:	24 e1       	ldi	r18, 0x14	; 20
    1de2:	4d ef       	ldi	r20, 0xFD	; 253
    1de4:	4d 0d       	add	r20, r13
    1de6:	83 e8       	ldi	r24, 0x83	; 131
    1de8:	93 e0       	ldi	r25, 0x03	; 3
    1dea:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1dee:	f0 e1       	ldi	r31, 0x10	; 16
    1df0:	df 0e       	add	r13, r31
    1df2:	0e 15       	cp	r16, r14
    1df4:	1f 05       	cpc	r17, r15
    1df6:	29 f7       	brne	.-54     	; 0x1dc2 <_Z11uhranzeigenv+0xe0>
    1df8:	e0 e7       	ldi	r30, 0x70	; 112
    1dfa:	f3 e0       	ldi	r31, 0x03	; 3
    1dfc:	83 81       	ldd	r24, Z+3	; 0x03
    1dfe:	8f 93       	push	r24
    1e00:	82 81       	ldd	r24, Z+2	; 0x02
    1e02:	8f 93       	push	r24
    1e04:	81 81       	ldd	r24, Z+1	; 0x01
    1e06:	8f 93       	push	r24
    1e08:	80 81       	ld	r24, Z
    1e0a:	8f 93       	push	r24
    1e0c:	89 e1       	ldi	r24, 0x19	; 25
    1e0e:	92 e0       	ldi	r25, 0x02	; 2
    1e10:	9f 93       	push	r25
    1e12:	8f 93       	push	r24
    1e14:	ce 01       	movw	r24, r28
    1e16:	01 96       	adiw	r24, 0x01	; 1
    1e18:	9f 93       	push	r25
    1e1a:	8f 93       	push	r24
    1e1c:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    1e20:	0f b6       	in	r0, 0x3f	; 63
    1e22:	f8 94       	cli
    1e24:	de bf       	out	0x3e, r29	; 62
    1e26:	0f be       	out	0x3f, r0	; 63
    1e28:	cd bf       	out	0x3d, r28	; 61
    1e2a:	88 23       	and	r24, r24
    1e2c:	f1 f0       	breq	.+60     	; 0x1e6a <_Z11uhranzeigenv+0x188>
    1e2e:	8e 01       	movw	r16, r28
    1e30:	0f 5f       	subi	r16, 0xFF	; 255
    1e32:	1f 4f       	sbci	r17, 0xFF	; 255
    1e34:	81 50       	subi	r24, 0x01	; 1
    1e36:	68 94       	set
    1e38:	ee 24       	eor	r14, r14
    1e3a:	e1 f8       	bld	r14, 1
    1e3c:	f1 2c       	mov	r15, r1
    1e3e:	ec 0e       	add	r14, r28
    1e40:	fd 1e       	adc	r15, r29
    1e42:	e8 0e       	add	r14, r24
    1e44:	f1 1c       	adc	r15, r1
    1e46:	0f 2e       	mov	r0, r31
    1e48:	f6 e4       	ldi	r31, 0x46	; 70
    1e4a:	df 2e       	mov	r13, r31
    1e4c:	f0 2d       	mov	r31, r0
    1e4e:	f8 01       	movw	r30, r16
    1e50:	61 91       	ld	r22, Z+
    1e52:	8f 01       	movw	r16, r30
    1e54:	28 e2       	ldi	r18, 0x28	; 40
    1e56:	4d 2d       	mov	r20, r13
    1e58:	83 e8       	ldi	r24, 0x83	; 131
    1e5a:	93 e0       	ldi	r25, 0x03	; 3
    1e5c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1e60:	f6 e0       	ldi	r31, 0x06	; 6
    1e62:	df 0e       	add	r13, r31
    1e64:	0e 15       	cp	r16, r14
    1e66:	1f 05       	cpc	r17, r15
    1e68:	91 f7       	brne	.-28     	; 0x1e4e <_Z11uhranzeigenv+0x16c>
    1e6a:	64 96       	adiw	r28, 0x14	; 20
    1e6c:	0f b6       	in	r0, 0x3f	; 63
    1e6e:	f8 94       	cli
    1e70:	de bf       	out	0x3e, r29	; 62
    1e72:	0f be       	out	0x3f, r0	; 63
    1e74:	cd bf       	out	0x3d, r28	; 61
    1e76:	df 91       	pop	r29
    1e78:	cf 91       	pop	r28
    1e7a:	1f 91       	pop	r17
    1e7c:	0f 91       	pop	r16
    1e7e:	ff 90       	pop	r15
    1e80:	ef 90       	pop	r14
    1e82:	df 90       	pop	r13
    1e84:	08 95       	ret

00001e86 <_Z14uhranzeigenminv>:
    1e86:	0f 93       	push	r16
    1e88:	1f 93       	push	r17
    1e8a:	cf 93       	push	r28
    1e8c:	df 93       	push	r29
    1e8e:	83 e8       	ldi	r24, 0x83	; 131
    1e90:	93 e0       	ldi	r25, 0x03	; 3
    1e92:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1e96:	82 e0       	ldi	r24, 0x02	; 2
    1e98:	0e db       	rcall	.-2532   	; 0x14b6 <_Z6headerh>
    1e9a:	00 e0       	ldi	r16, 0x00	; 0
    1e9c:	20 91 96 07 	lds	r18, 0x0796
    1ea0:	40 91 95 07 	lds	r20, 0x0795
    1ea4:	60 91 94 07 	lds	r22, 0x0794
    1ea8:	83 e8       	ldi	r24, 0x83	; 131
    1eaa:	93 e0       	ldi	r25, 0x03	; 3
    1eac:	0e 94 c0 06 	call	0xd80	; 0xd80 <_ZN7Display6analogEhhhh>
    1eb0:	c4 e8       	ldi	r28, 0x84	; 132
    1eb2:	d7 e0       	ldi	r29, 0x07	; 7
    1eb4:	11 e4       	ldi	r17, 0x41	; 65
    1eb6:	69 91       	ld	r22, Y+
    1eb8:	20 e0       	ldi	r18, 0x00	; 0
    1eba:	41 2f       	mov	r20, r17
    1ebc:	83 e8       	ldi	r24, 0x83	; 131
    1ebe:	93 e0       	ldi	r25, 0x03	; 3
    1ec0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1ec4:	1a 5f       	subi	r17, 0xFA	; 250
    1ec6:	1f 35       	cpi	r17, 0x5F	; 95
    1ec8:	b1 f7       	brne	.-20     	; 0x1eb6 <_Z14uhranzeigenminv+0x30>
    1eca:	cc e8       	ldi	r28, 0x8C	; 140
    1ecc:	d7 e0       	ldi	r29, 0x07	; 7
    1ece:	11 e4       	ldi	r17, 0x41	; 65
    1ed0:	69 91       	ld	r22, Y+
    1ed2:	28 e3       	ldi	r18, 0x38	; 56
    1ed4:	41 2f       	mov	r20, r17
    1ed6:	83 e8       	ldi	r24, 0x83	; 131
    1ed8:	93 e0       	ldi	r25, 0x03	; 3
    1eda:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1ede:	1a 5f       	subi	r17, 0xFA	; 250
    1ee0:	11 37       	cpi	r17, 0x71	; 113
    1ee2:	b1 f7       	brne	.-20     	; 0x1ed0 <_Z14uhranzeigenminv+0x4a>
    1ee4:	60 91 84 07 	lds	r22, 0x0784
    1ee8:	60 53       	subi	r22, 0x30	; 48
    1eea:	2d e0       	ldi	r18, 0x0D	; 13
    1eec:	46 e4       	ldi	r20, 0x46	; 70
    1eee:	83 e8       	ldi	r24, 0x83	; 131
    1ef0:	93 e0       	ldi	r25, 0x03	; 3
    1ef2:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1ef6:	60 91 85 07 	lds	r22, 0x0785
    1efa:	60 53       	subi	r22, 0x30	; 48
    1efc:	2d e0       	ldi	r18, 0x0D	; 13
    1efe:	46 e5       	ldi	r20, 0x56	; 86
    1f00:	83 e8       	ldi	r24, 0x83	; 131
    1f02:	93 e0       	ldi	r25, 0x03	; 3
    1f04:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f08:	60 91 87 07 	lds	r22, 0x0787
    1f0c:	60 53       	subi	r22, 0x30	; 48
    1f0e:	22 e2       	ldi	r18, 0x22	; 34
    1f10:	46 e4       	ldi	r20, 0x46	; 70
    1f12:	83 e8       	ldi	r24, 0x83	; 131
    1f14:	93 e0       	ldi	r25, 0x03	; 3
    1f16:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f1a:	60 91 88 07 	lds	r22, 0x0788
    1f1e:	60 53       	subi	r22, 0x30	; 48
    1f20:	22 e2       	ldi	r18, 0x22	; 34
    1f22:	46 e5       	ldi	r20, 0x56	; 86
    1f24:	83 e8       	ldi	r24, 0x83	; 131
    1f26:	93 e0       	ldi	r25, 0x03	; 3
    1f28:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f2c:	df 91       	pop	r29
    1f2e:	cf 91       	pop	r28
    1f30:	1f 91       	pop	r17
    1f32:	0f 91       	pop	r16
    1f34:	08 95       	ret

00001f36 <_Z13Weckeranzeigev>:
    1f36:	1f 93       	push	r17
    1f38:	cf 93       	push	r28
    1f3a:	df 93       	push	r29
    1f3c:	83 e8       	ldi	r24, 0x83	; 131
    1f3e:	93 e0       	ldi	r25, 0x03	; 3
    1f40:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1f44:	81 e0       	ldi	r24, 0x01	; 1
    1f46:	98 db       	rcall	.-2256   	; 0x1678 <_Z6bottomh>
    1f48:	81 e0       	ldi	r24, 0x01	; 1
    1f4a:	b5 da       	rcall	.-2710   	; 0x14b6 <_Z6headerh>
    1f4c:	60 91 84 07 	lds	r22, 0x0784
    1f50:	60 53       	subi	r22, 0x30	; 48
    1f52:	2d e0       	ldi	r18, 0x0D	; 13
    1f54:	45 e0       	ldi	r20, 0x05	; 5
    1f56:	83 e8       	ldi	r24, 0x83	; 131
    1f58:	93 e0       	ldi	r25, 0x03	; 3
    1f5a:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f5e:	60 91 85 07 	lds	r22, 0x0785
    1f62:	60 53       	subi	r22, 0x30	; 48
    1f64:	2d e0       	ldi	r18, 0x0D	; 13
    1f66:	45 e1       	ldi	r20, 0x15	; 21
    1f68:	83 e8       	ldi	r24, 0x83	; 131
    1f6a:	93 e0       	ldi	r25, 0x03	; 3
    1f6c:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f70:	60 91 87 07 	lds	r22, 0x0787
    1f74:	60 53       	subi	r22, 0x30	; 48
    1f76:	22 e2       	ldi	r18, 0x22	; 34
    1f78:	45 e0       	ldi	r20, 0x05	; 5
    1f7a:	83 e8       	ldi	r24, 0x83	; 131
    1f7c:	93 e0       	ldi	r25, 0x03	; 3
    1f7e:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f82:	60 91 88 07 	lds	r22, 0x0788
    1f86:	60 53       	subi	r22, 0x30	; 48
    1f88:	22 e2       	ldi	r18, 0x22	; 34
    1f8a:	45 e1       	ldi	r20, 0x15	; 21
    1f8c:	83 e8       	ldi	r24, 0x83	; 131
    1f8e:	93 e0       	ldi	r25, 0x03	; 3
    1f90:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f94:	ce e9       	ldi	r28, 0x9E	; 158
    1f96:	d7 e0       	ldi	r29, 0x07	; 7
    1f98:	68 81       	ld	r22, Y
    1f9a:	1d ec       	ldi	r17, 0xCD	; 205
    1f9c:	61 9f       	mul	r22, r17
    1f9e:	61 2d       	mov	r22, r1
    1fa0:	11 24       	eor	r1, r1
    1fa2:	66 95       	lsr	r22
    1fa4:	66 95       	lsr	r22
    1fa6:	66 95       	lsr	r22
    1fa8:	2d e0       	ldi	r18, 0x0D	; 13
    1faa:	46 e4       	ldi	r20, 0x46	; 70
    1fac:	83 e8       	ldi	r24, 0x83	; 131
    1fae:	93 e0       	ldi	r25, 0x03	; 3
    1fb0:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1fb4:	68 81       	ld	r22, Y
    1fb6:	61 9f       	mul	r22, r17
    1fb8:	81 2d       	mov	r24, r1
    1fba:	11 24       	eor	r1, r1
    1fbc:	86 95       	lsr	r24
    1fbe:	86 95       	lsr	r24
    1fc0:	86 95       	lsr	r24
    1fc2:	88 0f       	add	r24, r24
    1fc4:	98 2f       	mov	r25, r24
    1fc6:	99 0f       	add	r25, r25
    1fc8:	99 0f       	add	r25, r25
    1fca:	89 0f       	add	r24, r25
    1fcc:	68 1b       	sub	r22, r24
    1fce:	2d e0       	ldi	r18, 0x0D	; 13
    1fd0:	46 e5       	ldi	r20, 0x56	; 86
    1fd2:	83 e8       	ldi	r24, 0x83	; 131
    1fd4:	93 e0       	ldi	r25, 0x03	; 3
    1fd6:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1fda:	cd e9       	ldi	r28, 0x9D	; 157
    1fdc:	d7 e0       	ldi	r29, 0x07	; 7
    1fde:	68 81       	ld	r22, Y
    1fe0:	61 9f       	mul	r22, r17
    1fe2:	61 2d       	mov	r22, r1
    1fe4:	11 24       	eor	r1, r1
    1fe6:	66 95       	lsr	r22
    1fe8:	66 95       	lsr	r22
    1fea:	66 95       	lsr	r22
    1fec:	22 e2       	ldi	r18, 0x22	; 34
    1fee:	46 e4       	ldi	r20, 0x46	; 70
    1ff0:	83 e8       	ldi	r24, 0x83	; 131
    1ff2:	93 e0       	ldi	r25, 0x03	; 3
    1ff4:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1ff8:	68 81       	ld	r22, Y
    1ffa:	61 9f       	mul	r22, r17
    1ffc:	11 2d       	mov	r17, r1
    1ffe:	11 24       	eor	r1, r1
    2000:	16 95       	lsr	r17
    2002:	16 95       	lsr	r17
    2004:	16 95       	lsr	r17
    2006:	11 0f       	add	r17, r17
    2008:	81 2f       	mov	r24, r17
    200a:	88 0f       	add	r24, r24
    200c:	88 0f       	add	r24, r24
    200e:	18 0f       	add	r17, r24
    2010:	61 1b       	sub	r22, r17
    2012:	22 e2       	ldi	r18, 0x22	; 34
    2014:	46 e5       	ldi	r20, 0x56	; 86
    2016:	83 e8       	ldi	r24, 0x83	; 131
    2018:	93 e0       	ldi	r25, 0x03	; 3
    201a:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    201e:	80 91 9c 07 	lds	r24, 0x079C
    2022:	83 ff       	sbrs	r24, 3
    2024:	07 c0       	rjmp	.+14     	; 0x2034 <_Z13Weckeranzeigev+0xfe>
    2026:	20 e0       	ldi	r18, 0x00	; 0
    2028:	40 e0       	ldi	r20, 0x00	; 0
    202a:	6f e6       	ldi	r22, 0x6F	; 111
    202c:	83 e8       	ldi	r24, 0x83	; 131
    202e:	93 e0       	ldi	r25, 0x03	; 3
    2030:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2034:	80 91 55 03 	lds	r24, 0x0355
    2038:	90 91 56 03 	lds	r25, 0x0356
    203c:	94 ff       	sbrs	r25, 4
    203e:	09 c0       	rjmp	.+18     	; 0x2052 <_Z13Weckeranzeigev+0x11c>
    2040:	60 91 54 03 	lds	r22, 0x0354
    2044:	60 5d       	subi	r22, 0xD0	; 208
    2046:	20 e0       	ldi	r18, 0x00	; 0
    2048:	46 e0       	ldi	r20, 0x06	; 6
    204a:	83 e8       	ldi	r24, 0x83	; 131
    204c:	93 e0       	ldi	r25, 0x03	; 3
    204e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2052:	df 91       	pop	r29
    2054:	cf 91       	pop	r28
    2056:	1f 91       	pop	r17
    2058:	08 95       	ret

0000205a <_Z12fahradschirmddddm>:
    205a:	2f 92       	push	r2
    205c:	3f 92       	push	r3
    205e:	4f 92       	push	r4
    2060:	5f 92       	push	r5
    2062:	6f 92       	push	r6
    2064:	7f 92       	push	r7
    2066:	8f 92       	push	r8
    2068:	9f 92       	push	r9
    206a:	af 92       	push	r10
    206c:	bf 92       	push	r11
    206e:	cf 92       	push	r12
    2070:	df 92       	push	r13
    2072:	ef 92       	push	r14
    2074:	ff 92       	push	r15
    2076:	0f 93       	push	r16
    2078:	1f 93       	push	r17
    207a:	cf 93       	push	r28
    207c:	df 93       	push	r29
    207e:	cd b7       	in	r28, 0x3d	; 61
    2080:	de b7       	in	r29, 0x3e	; 62
    2082:	60 97       	sbiw	r28, 0x10	; 16
    2084:	0f b6       	in	r0, 0x3f	; 63
    2086:	f8 94       	cli
    2088:	de bf       	out	0x3e, r29	; 62
    208a:	0f be       	out	0x3f, r0	; 63
    208c:	cd bf       	out	0x3d, r28	; 61
    208e:	96 2e       	mov	r9, r22
    2090:	27 2e       	mov	r2, r23
    2092:	88 2e       	mov	r8, r24
    2094:	39 2e       	mov	r3, r25
    2096:	29 01       	movw	r4, r18
    2098:	3a 01       	movw	r6, r20
    209a:	0b 87       	std	Y+11, r16	; 0x0b
    209c:	1c 87       	std	Y+12, r17	; 0x0c
    209e:	2d a1       	ldd	r18, Y+37	; 0x25
    20a0:	2d 87       	std	Y+13, r18	; 0x0d
    20a2:	3e a1       	ldd	r19, Y+38	; 0x26
    20a4:	3e 87       	std	Y+14, r19	; 0x0e
    20a6:	8f a1       	ldd	r24, Y+39	; 0x27
    20a8:	8f 87       	std	Y+15, r24	; 0x0f
    20aa:	98 a5       	ldd	r25, Y+40	; 0x28
    20ac:	98 8b       	std	Y+16, r25	; 0x10
    20ae:	83 e8       	ldi	r24, 0x83	; 131
    20b0:	93 e0       	ldi	r25, 0x03	; 3
    20b2:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    20b6:	81 e0       	ldi	r24, 0x01	; 1
    20b8:	fe d9       	rcall	.-3076   	; 0x14b6 <_Z6headerh>
    20ba:	80 e0       	ldi	r24, 0x00	; 0
    20bc:	dd da       	rcall	.-2630   	; 0x1678 <_Z6bottomh>
    20be:	20 e8       	ldi	r18, 0x80	; 128
    20c0:	47 e3       	ldi	r20, 0x37	; 55
    20c2:	60 e0       	ldi	r22, 0x00	; 0
    20c4:	83 e8       	ldi	r24, 0x83	; 131
    20c6:	93 e0       	ldi	r25, 0x03	; 3
    20c8:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    20cc:	25 e4       	ldi	r18, 0x45	; 69
    20ce:	4f e0       	ldi	r20, 0x0F	; 15
    20d0:	60 e0       	ldi	r22, 0x00	; 0
    20d2:	83 e8       	ldi	r24, 0x83	; 131
    20d4:	93 e0       	ldi	r25, 0x03	; 3
    20d6:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    20da:	2b e3       	ldi	r18, 0x3B	; 59
    20dc:	48 e0       	ldi	r20, 0x08	; 8
    20de:	65 e4       	ldi	r22, 0x45	; 69
    20e0:	83 e8       	ldi	r24, 0x83	; 131
    20e2:	93 e0       	ldi	r25, 0x03	; 3
    20e4:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    20e8:	20 e1       	ldi	r18, 0x10	; 16
    20ea:	40 e0       	ldi	r20, 0x00	; 0
    20ec:	65 e4       	ldi	r22, 0x45	; 69
    20ee:	83 e8       	ldi	r24, 0x83	; 131
    20f0:	93 e0       	ldi	r25, 0x03	; 3
    20f2:	0e 94 06 04 	call	0x80c	; 0x80c <_ZN7Display9drawVLineEhhh>
    20f6:	21 e4       	ldi	r18, 0x41	; 65
    20f8:	48 e2       	ldi	r20, 0x28	; 40
    20fa:	6f e3       	ldi	r22, 0x3F	; 63
    20fc:	83 e8       	ldi	r24, 0x83	; 131
    20fe:	93 e0       	ldi	r25, 0x03	; 3
    2100:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    2104:	20 e3       	ldi	r18, 0x30	; 48
    2106:	40 e1       	ldi	r20, 0x10	; 16
    2108:	6f e3       	ldi	r22, 0x3F	; 63
    210a:	83 e8       	ldi	r24, 0x83	; 131
    210c:	93 e0       	ldi	r25, 0x03	; 3
    210e:	0e 94 06 04 	call	0x80c	; 0x80c <_ZN7Display9drawVLineEhhh>
    2112:	21 e4       	ldi	r18, 0x41	; 65
    2114:	48 e1       	ldi	r20, 0x18	; 24
    2116:	6f e3       	ldi	r22, 0x3F	; 63
    2118:	83 e8       	ldi	r24, 0x83	; 131
    211a:	93 e0       	ldi	r25, 0x03	; 3
    211c:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    2120:	60 91 84 07 	lds	r22, 0x0784
    2124:	60 53       	subi	r22, 0x30	; 48
    2126:	20 e0       	ldi	r18, 0x00	; 0
    2128:	40 e0       	ldi	r20, 0x00	; 0
    212a:	83 e8       	ldi	r24, 0x83	; 131
    212c:	93 e0       	ldi	r25, 0x03	; 3
    212e:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2132:	60 91 85 07 	lds	r22, 0x0785
    2136:	60 53       	subi	r22, 0x30	; 48
    2138:	20 e0       	ldi	r18, 0x00	; 0
    213a:	40 e1       	ldi	r20, 0x10	; 16
    213c:	83 e8       	ldi	r24, 0x83	; 131
    213e:	93 e0       	ldi	r25, 0x03	; 3
    2140:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2144:	60 91 87 07 	lds	r22, 0x0787
    2148:	60 53       	subi	r22, 0x30	; 48
    214a:	20 e0       	ldi	r18, 0x00	; 0
    214c:	45 e2       	ldi	r20, 0x25	; 37
    214e:	83 e8       	ldi	r24, 0x83	; 131
    2150:	93 e0       	ldi	r25, 0x03	; 3
    2152:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2156:	60 91 88 07 	lds	r22, 0x0788
    215a:	60 53       	subi	r22, 0x30	; 48
    215c:	20 e0       	ldi	r18, 0x00	; 0
    215e:	45 e3       	ldi	r20, 0x35	; 53
    2160:	83 e8       	ldi	r24, 0x83	; 131
    2162:	93 e0       	ldi	r25, 0x03	; 3
    2164:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2168:	3f 92       	push	r3
    216a:	8f 92       	push	r8
    216c:	2f 92       	push	r2
    216e:	9f 92       	push	r9
    2170:	80 e2       	ldi	r24, 0x20	; 32
    2172:	92 e0       	ldi	r25, 0x02	; 2
    2174:	9f 93       	push	r25
    2176:	8f 93       	push	r24
    2178:	ce 01       	movw	r24, r28
    217a:	01 96       	adiw	r24, 0x01	; 1
    217c:	9f 93       	push	r25
    217e:	8f 93       	push	r24
    2180:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    2184:	28 e0       	ldi	r18, 0x08	; 8
    2186:	02 2f       	mov	r16, r18
    2188:	08 1b       	sub	r16, r24
    218a:	0f b6       	in	r0, 0x3f	; 63
    218c:	f8 94       	cli
    218e:	de bf       	out	0x3e, r29	; 62
    2190:	0f be       	out	0x3f, r0	; 63
    2192:	cd bf       	out	0x3d, r28	; 61
    2194:	08 30       	cpi	r16, 0x08	; 8
    2196:	18 f5       	brcc	.+70     	; 0x21de <_Z12fahradschirmddddm+0x184>
    2198:	10 2f       	mov	r17, r16
    219a:	12 95       	swap	r17
    219c:	10 7f       	andi	r17, 0xF0	; 240
    219e:	4c 01       	movw	r8, r24
    21a0:	99 24       	eor	r9, r9
    21a2:	e1 e0       	ldi	r30, 0x01	; 1
    21a4:	f0 e0       	ldi	r31, 0x00	; 0
    21a6:	ec 0f       	add	r30, r28
    21a8:	fd 1f       	adc	r31, r29
    21aa:	e0 0f       	add	r30, r16
    21ac:	f1 1d       	adc	r31, r1
    21ae:	e8 0d       	add	r30, r8
    21b0:	f9 1d       	adc	r31, r9
    21b2:	38 97       	sbiw	r30, 0x08	; 8
    21b4:	60 81       	ld	r22, Z
    21b6:	6e 32       	cpi	r22, 0x2E	; 46
    21b8:	39 f4       	brne	.+14     	; 0x21c8 <_Z12fahradschirmddddm+0x16e>
    21ba:	20 e2       	ldi	r18, 0x20	; 32
    21bc:	41 2f       	mov	r20, r17
    21be:	83 e8       	ldi	r24, 0x83	; 131
    21c0:	93 e0       	ldi	r25, 0x03	; 3
    21c2:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    21c6:	07 c0       	rjmp	.+14     	; 0x21d6 <_Z12fahradschirmddddm+0x17c>
    21c8:	60 53       	subi	r22, 0x30	; 48
    21ca:	28 e1       	ldi	r18, 0x18	; 24
    21cc:	41 2f       	mov	r20, r17
    21ce:	83 e8       	ldi	r24, 0x83	; 131
    21d0:	93 e0       	ldi	r25, 0x03	; 3
    21d2:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    21d6:	0f 5f       	subi	r16, 0xFF	; 255
    21d8:	10 5f       	subi	r17, 0xF0	; 240
    21da:	08 30       	cpi	r16, 0x08	; 8
    21dc:	11 f7       	brne	.-60     	; 0x21a2 <_Z12fahradschirmddddm+0x148>
    21de:	a3 01       	movw	r20, r6
    21e0:	92 01       	movw	r18, r4
    21e2:	67 e2       	ldi	r22, 0x27	; 39
    21e4:	8f e1       	ldi	r24, 0x1F	; 31
    21e6:	62 db       	rcall	.-2364   	; 0x18ac <_Z19anzeige_kleinenadelhhf>
    21e8:	fc 85       	ldd	r31, Y+12	; 0x0c
    21ea:	ff 93       	push	r31
    21ec:	2b 85       	ldd	r18, Y+11	; 0x0b
    21ee:	2f 93       	push	r18
    21f0:	ff 92       	push	r15
    21f2:	ef 92       	push	r14
    21f4:	86 e2       	ldi	r24, 0x26	; 38
    21f6:	92 e0       	ldi	r25, 0x02	; 2
    21f8:	9f 93       	push	r25
    21fa:	8f 93       	push	r24
    21fc:	ce 01       	movw	r24, r28
    21fe:	01 96       	adiw	r24, 0x01	; 1
    2200:	9f 93       	push	r25
    2202:	8f 93       	push	r24
    2204:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    2208:	88 2e       	mov	r8, r24
    220a:	0f b6       	in	r0, 0x3f	; 63
    220c:	f8 94       	cli
    220e:	de bf       	out	0x3e, r29	; 62
    2210:	0f be       	out	0x3f, r0	; 63
    2212:	cd bf       	out	0x3d, r28	; 61
    2214:	88 20       	and	r8, r8
    2216:	b9 f0       	breq	.+46     	; 0x2246 <_Z12fahradschirmddddm+0x1ec>
    2218:	fe 01       	movw	r30, r28
    221a:	31 96       	adiw	r30, 0x01	; 1
    221c:	7f 01       	movw	r14, r30
    221e:	8f 01       	movw	r16, r30
    2220:	0f 2e       	mov	r0, r31
    2222:	f6 e4       	ldi	r31, 0x46	; 70
    2224:	9f 2e       	mov	r9, r31
    2226:	f0 2d       	mov	r31, r0
    2228:	f8 01       	movw	r30, r16
    222a:	61 91       	ld	r22, Z+
    222c:	8f 01       	movw	r16, r30
    222e:	20 e1       	ldi	r18, 0x10	; 16
    2230:	49 2d       	mov	r20, r9
    2232:	83 e8       	ldi	r24, 0x83	; 131
    2234:	93 e0       	ldi	r25, 0x03	; 3
    2236:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    223a:	f6 e0       	ldi	r31, 0x06	; 6
    223c:	9f 0e       	add	r9, r31
    223e:	90 2f       	mov	r25, r16
    2240:	9e 19       	sub	r25, r14
    2242:	98 15       	cp	r25, r8
    2244:	88 f3       	brcs	.-30     	; 0x2228 <_Z12fahradschirmddddm+0x1ce>
    2246:	df 92       	push	r13
    2248:	cf 92       	push	r12
    224a:	bf 92       	push	r11
    224c:	af 92       	push	r10
    224e:	8c e2       	ldi	r24, 0x2C	; 44
    2250:	92 e0       	ldi	r25, 0x02	; 2
    2252:	9f 93       	push	r25
    2254:	8f 93       	push	r24
    2256:	ce 01       	movw	r24, r28
    2258:	01 96       	adiw	r24, 0x01	; 1
    225a:	9f 93       	push	r25
    225c:	8f 93       	push	r24
    225e:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    2262:	c8 2e       	mov	r12, r24
    2264:	0f b6       	in	r0, 0x3f	; 63
    2266:	f8 94       	cli
    2268:	de bf       	out	0x3e, r29	; 62
    226a:	0f be       	out	0x3f, r0	; 63
    226c:	cd bf       	out	0x3d, r28	; 61
    226e:	88 23       	and	r24, r24
    2270:	b9 f0       	breq	.+46     	; 0x22a0 <_Z12fahradschirmddddm+0x246>
    2272:	ce 01       	movw	r24, r28
    2274:	01 96       	adiw	r24, 0x01	; 1
    2276:	7c 01       	movw	r14, r24
    2278:	8c 01       	movw	r16, r24
    227a:	0f 2e       	mov	r0, r31
    227c:	f6 e4       	ldi	r31, 0x46	; 70
    227e:	df 2e       	mov	r13, r31
    2280:	f0 2d       	mov	r31, r0
    2282:	f8 01       	movw	r30, r16
    2284:	61 91       	ld	r22, Z+
    2286:	8f 01       	movw	r16, r30
    2288:	28 e2       	ldi	r18, 0x28	; 40
    228a:	4d 2d       	mov	r20, r13
    228c:	83 e8       	ldi	r24, 0x83	; 131
    228e:	93 e0       	ldi	r25, 0x03	; 3
    2290:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2294:	f6 e0       	ldi	r31, 0x06	; 6
    2296:	df 0e       	add	r13, r31
    2298:	90 2f       	mov	r25, r16
    229a:	9e 19       	sub	r25, r14
    229c:	9c 15       	cp	r25, r12
    229e:	88 f3       	brcs	.-30     	; 0x2282 <_Z12fahradschirmddddm+0x228>
    22a0:	28 89       	ldd	r18, Y+16	; 0x10
    22a2:	2f 93       	push	r18
    22a4:	3f 85       	ldd	r19, Y+15	; 0x0f
    22a6:	3f 93       	push	r19
    22a8:	8e 85       	ldd	r24, Y+14	; 0x0e
    22aa:	8f 93       	push	r24
    22ac:	9d 85       	ldd	r25, Y+13	; 0x0d
    22ae:	9f 93       	push	r25
    22b0:	85 e3       	ldi	r24, 0x35	; 53
    22b2:	92 e0       	ldi	r25, 0x02	; 2
    22b4:	9f 93       	push	r25
    22b6:	8f 93       	push	r24
    22b8:	ce 01       	movw	r24, r28
    22ba:	01 96       	adiw	r24, 0x01	; 1
    22bc:	9f 93       	push	r25
    22be:	8f 93       	push	r24
    22c0:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    22c4:	c8 2e       	mov	r12, r24
    22c6:	0f b6       	in	r0, 0x3f	; 63
    22c8:	f8 94       	cli
    22ca:	de bf       	out	0x3e, r29	; 62
    22cc:	0f be       	out	0x3f, r0	; 63
    22ce:	cd bf       	out	0x3d, r28	; 61
    22d0:	88 23       	and	r24, r24
    22d2:	c1 f0       	breq	.+48     	; 0x2304 <_Z12fahradschirmddddm+0x2aa>
    22d4:	9e 01       	movw	r18, r28
    22d6:	2f 5f       	subi	r18, 0xFF	; 255
    22d8:	3f 4f       	sbci	r19, 0xFF	; 255
    22da:	79 01       	movw	r14, r18
    22dc:	89 01       	movw	r16, r18
    22de:	0f 2e       	mov	r0, r31
    22e0:	f6 e4       	ldi	r31, 0x46	; 70
    22e2:	df 2e       	mov	r13, r31
    22e4:	f0 2d       	mov	r31, r0
    22e6:	f8 01       	movw	r30, r16
    22e8:	61 91       	ld	r22, Z+
    22ea:	8f 01       	movw	r16, r30
    22ec:	20 e3       	ldi	r18, 0x30	; 48
    22ee:	4d 2d       	mov	r20, r13
    22f0:	83 e8       	ldi	r24, 0x83	; 131
    22f2:	93 e0       	ldi	r25, 0x03	; 3
    22f4:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    22f8:	f6 e0       	ldi	r31, 0x06	; 6
    22fa:	df 0e       	add	r13, r31
    22fc:	90 2f       	mov	r25, r16
    22fe:	9e 19       	sub	r25, r14
    2300:	9c 15       	cp	r25, r12
    2302:	88 f3       	brcs	.-30     	; 0x22e6 <_Z12fahradschirmddddm+0x28c>
    2304:	60 96       	adiw	r28, 0x10	; 16
    2306:	0f b6       	in	r0, 0x3f	; 63
    2308:	f8 94       	cli
    230a:	de bf       	out	0x3e, r29	; 62
    230c:	0f be       	out	0x3f, r0	; 63
    230e:	cd bf       	out	0x3d, r28	; 61
    2310:	df 91       	pop	r29
    2312:	cf 91       	pop	r28
    2314:	1f 91       	pop	r17
    2316:	0f 91       	pop	r16
    2318:	ff 90       	pop	r15
    231a:	ef 90       	pop	r14
    231c:	df 90       	pop	r13
    231e:	cf 90       	pop	r12
    2320:	bf 90       	pop	r11
    2322:	af 90       	pop	r10
    2324:	9f 90       	pop	r9
    2326:	8f 90       	pop	r8
    2328:	7f 90       	pop	r7
    232a:	6f 90       	pop	r6
    232c:	5f 90       	pop	r5
    232e:	4f 90       	pop	r4
    2330:	3f 90       	pop	r3
    2332:	2f 90       	pop	r2
    2334:	08 95       	ret

00002336 <_Z14Gaineinstellenv>:
    2336:	cf 92       	push	r12
    2338:	df 92       	push	r13
    233a:	ef 92       	push	r14
    233c:	ff 92       	push	r15
    233e:	0f 93       	push	r16
    2340:	1f 93       	push	r17
    2342:	cf 93       	push	r28
    2344:	df 93       	push	r29
    2346:	cd b7       	in	r28, 0x3d	; 61
    2348:	de b7       	in	r29, 0x3e	; 62
    234a:	64 97       	sbiw	r28, 0x14	; 20
    234c:	0f b6       	in	r0, 0x3f	; 63
    234e:	f8 94       	cli
    2350:	de bf       	out	0x3e, r29	; 62
    2352:	0f be       	out	0x3f, r0	; 63
    2354:	cd bf       	out	0x3d, r28	; 61
    2356:	83 e8       	ldi	r24, 0x83	; 131
    2358:	93 e0       	ldi	r25, 0x03	; 3
    235a:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    235e:	88 e0       	ldi	r24, 0x08	; 8
    2360:	ea e3       	ldi	r30, 0x3A	; 58
    2362:	f2 e0       	ldi	r31, 0x02	; 2
    2364:	8e 01       	movw	r16, r28
    2366:	0f 5f       	subi	r16, 0xFF	; 255
    2368:	1f 4f       	sbci	r17, 0xFF	; 255
    236a:	d8 01       	movw	r26, r16
    236c:	01 90       	ld	r0, Z+
    236e:	0d 92       	st	X+, r0
    2370:	8a 95       	dec	r24
    2372:	e1 f7       	brne	.-8      	; 0x236c <_Z14Gaineinstellenv+0x36>
    2374:	e0 2e       	mov	r14, r16
    2376:	f1 2e       	mov	r15, r17
    2378:	68 01       	movw	r12, r16
    237a:	10 e0       	ldi	r17, 0x00	; 0
    237c:	f6 01       	movw	r30, r12
    237e:	61 91       	ld	r22, Z+
    2380:	6f 01       	movw	r12, r30
    2382:	20 e0       	ldi	r18, 0x00	; 0
    2384:	41 2f       	mov	r20, r17
    2386:	83 e8       	ldi	r24, 0x83	; 131
    2388:	93 e0       	ldi	r25, 0x03	; 3
    238a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    238e:	1a 5f       	subi	r17, 0xFA	; 250
    2390:	1a 32       	cpi	r17, 0x2A	; 42
    2392:	a1 f7       	brne	.-24     	; 0x237c <_Z14Gaineinstellenv+0x46>
    2394:	88 e0       	ldi	r24, 0x08	; 8
    2396:	e2 e4       	ldi	r30, 0x42	; 66
    2398:	f2 e0       	ldi	r31, 0x02	; 2
    239a:	de 01       	movw	r26, r28
    239c:	11 96       	adiw	r26, 0x01	; 1
    239e:	01 90       	ld	r0, Z+
    23a0:	0d 92       	st	X+, r0
    23a2:	8a 95       	dec	r24
    23a4:	e1 f7       	brne	.-8      	; 0x239e <_Z14Gaineinstellenv+0x68>
    23a6:	ce 2c       	mov	r12, r14
    23a8:	df 2c       	mov	r13, r15
    23aa:	10 e0       	ldi	r17, 0x00	; 0
    23ac:	f6 01       	movw	r30, r12
    23ae:	61 91       	ld	r22, Z+
    23b0:	6f 01       	movw	r12, r30
    23b2:	28 e0       	ldi	r18, 0x08	; 8
    23b4:	41 2f       	mov	r20, r17
    23b6:	83 e8       	ldi	r24, 0x83	; 131
    23b8:	93 e0       	ldi	r25, 0x03	; 3
    23ba:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    23be:	1a 5f       	subi	r17, 0xFA	; 250
    23c0:	1a 32       	cpi	r17, 0x2A	; 42
    23c2:	a1 f7       	brne	.-24     	; 0x23ac <_Z14Gaineinstellenv+0x76>
    23c4:	88 e0       	ldi	r24, 0x08	; 8
    23c6:	ea e4       	ldi	r30, 0x4A	; 74
    23c8:	f2 e0       	ldi	r31, 0x02	; 2
    23ca:	de 01       	movw	r26, r28
    23cc:	11 96       	adiw	r26, 0x01	; 1
    23ce:	01 90       	ld	r0, Z+
    23d0:	0d 92       	st	X+, r0
    23d2:	8a 95       	dec	r24
    23d4:	e1 f7       	brne	.-8      	; 0x23ce <_Z14Gaineinstellenv+0x98>
    23d6:	ce 2c       	mov	r12, r14
    23d8:	df 2c       	mov	r13, r15
    23da:	10 e0       	ldi	r17, 0x00	; 0
    23dc:	f6 01       	movw	r30, r12
    23de:	61 91       	ld	r22, Z+
    23e0:	6f 01       	movw	r12, r30
    23e2:	20 e1       	ldi	r18, 0x10	; 16
    23e4:	41 2f       	mov	r20, r17
    23e6:	83 e8       	ldi	r24, 0x83	; 131
    23e8:	93 e0       	ldi	r25, 0x03	; 3
    23ea:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    23ee:	1a 5f       	subi	r17, 0xFA	; 250
    23f0:	1a 32       	cpi	r17, 0x2A	; 42
    23f2:	a1 f7       	brne	.-24     	; 0x23dc <_Z14Gaineinstellenv+0xa6>
    23f4:	88 e0       	ldi	r24, 0x08	; 8
    23f6:	e2 e5       	ldi	r30, 0x52	; 82
    23f8:	f2 e0       	ldi	r31, 0x02	; 2
    23fa:	de 01       	movw	r26, r28
    23fc:	11 96       	adiw	r26, 0x01	; 1
    23fe:	01 90       	ld	r0, Z+
    2400:	0d 92       	st	X+, r0
    2402:	8a 95       	dec	r24
    2404:	e1 f7       	brne	.-8      	; 0x23fe <_Z14Gaineinstellenv+0xc8>
    2406:	ce 2c       	mov	r12, r14
    2408:	df 2c       	mov	r13, r15
    240a:	10 e0       	ldi	r17, 0x00	; 0
    240c:	f6 01       	movw	r30, r12
    240e:	61 91       	ld	r22, Z+
    2410:	6f 01       	movw	r12, r30
    2412:	28 e1       	ldi	r18, 0x18	; 24
    2414:	41 2f       	mov	r20, r17
    2416:	83 e8       	ldi	r24, 0x83	; 131
    2418:	93 e0       	ldi	r25, 0x03	; 3
    241a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    241e:	1a 5f       	subi	r17, 0xFA	; 250
    2420:	1a 32       	cpi	r17, 0x2A	; 42
    2422:	a1 f7       	brne	.-24     	; 0x240c <_Z14Gaineinstellenv+0xd6>
    2424:	88 e0       	ldi	r24, 0x08	; 8
    2426:	ea e5       	ldi	r30, 0x5A	; 90
    2428:	f2 e0       	ldi	r31, 0x02	; 2
    242a:	de 01       	movw	r26, r28
    242c:	11 96       	adiw	r26, 0x01	; 1
    242e:	01 90       	ld	r0, Z+
    2430:	0d 92       	st	X+, r0
    2432:	8a 95       	dec	r24
    2434:	e1 f7       	brne	.-8      	; 0x242e <_Z14Gaineinstellenv+0xf8>
    2436:	ce 2c       	mov	r12, r14
    2438:	df 2c       	mov	r13, r15
    243a:	10 e0       	ldi	r17, 0x00	; 0
    243c:	f6 01       	movw	r30, r12
    243e:	61 91       	ld	r22, Z+
    2440:	6f 01       	movw	r12, r30
    2442:	20 e2       	ldi	r18, 0x20	; 32
    2444:	41 2f       	mov	r20, r17
    2446:	83 e8       	ldi	r24, 0x83	; 131
    2448:	93 e0       	ldi	r25, 0x03	; 3
    244a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    244e:	1a 5f       	subi	r17, 0xFA	; 250
    2450:	1a 32       	cpi	r17, 0x2A	; 42
    2452:	a1 f7       	brne	.-24     	; 0x243c <_Z14Gaineinstellenv+0x106>
    2454:	88 e0       	ldi	r24, 0x08	; 8
    2456:	e2 e6       	ldi	r30, 0x62	; 98
    2458:	f2 e0       	ldi	r31, 0x02	; 2
    245a:	de 01       	movw	r26, r28
    245c:	11 96       	adiw	r26, 0x01	; 1
    245e:	01 90       	ld	r0, Z+
    2460:	0d 92       	st	X+, r0
    2462:	8a 95       	dec	r24
    2464:	e1 f7       	brne	.-8      	; 0x245e <_Z14Gaineinstellenv+0x128>
    2466:	ce 2c       	mov	r12, r14
    2468:	df 2c       	mov	r13, r15
    246a:	10 e0       	ldi	r17, 0x00	; 0
    246c:	f6 01       	movw	r30, r12
    246e:	61 91       	ld	r22, Z+
    2470:	6f 01       	movw	r12, r30
    2472:	28 e2       	ldi	r18, 0x28	; 40
    2474:	41 2f       	mov	r20, r17
    2476:	83 e8       	ldi	r24, 0x83	; 131
    2478:	93 e0       	ldi	r25, 0x03	; 3
    247a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    247e:	1a 5f       	subi	r17, 0xFA	; 250
    2480:	1a 32       	cpi	r17, 0x2A	; 42
    2482:	a1 f7       	brne	.-24     	; 0x246c <_Z14Gaineinstellenv+0x136>
    2484:	88 e0       	ldi	r24, 0x08	; 8
    2486:	ea e6       	ldi	r30, 0x6A	; 106
    2488:	f2 e0       	ldi	r31, 0x02	; 2
    248a:	de 01       	movw	r26, r28
    248c:	11 96       	adiw	r26, 0x01	; 1
    248e:	01 90       	ld	r0, Z+
    2490:	0d 92       	st	X+, r0
    2492:	8a 95       	dec	r24
    2494:	e1 f7       	brne	.-8      	; 0x248e <_Z14Gaineinstellenv+0x158>
    2496:	ce 2c       	mov	r12, r14
    2498:	df 2c       	mov	r13, r15
    249a:	10 e0       	ldi	r17, 0x00	; 0
    249c:	f6 01       	movw	r30, r12
    249e:	61 91       	ld	r22, Z+
    24a0:	6f 01       	movw	r12, r30
    24a2:	20 e3       	ldi	r18, 0x30	; 48
    24a4:	41 2f       	mov	r20, r17
    24a6:	83 e8       	ldi	r24, 0x83	; 131
    24a8:	93 e0       	ldi	r25, 0x03	; 3
    24aa:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    24ae:	1a 5f       	subi	r17, 0xFA	; 250
    24b0:	1a 32       	cpi	r17, 0x2A	; 42
    24b2:	a1 f7       	brne	.-24     	; 0x249c <_Z14Gaineinstellenv+0x166>
    24b4:	88 e0       	ldi	r24, 0x08	; 8
    24b6:	e2 e7       	ldi	r30, 0x72	; 114
    24b8:	f2 e0       	ldi	r31, 0x02	; 2
    24ba:	de 01       	movw	r26, r28
    24bc:	11 96       	adiw	r26, 0x01	; 1
    24be:	01 90       	ld	r0, Z+
    24c0:	0d 92       	st	X+, r0
    24c2:	8a 95       	dec	r24
    24c4:	e1 f7       	brne	.-8      	; 0x24be <_Z14Gaineinstellenv+0x188>
    24c6:	ce 2c       	mov	r12, r14
    24c8:	df 2c       	mov	r13, r15
    24ca:	10 e0       	ldi	r17, 0x00	; 0
    24cc:	f6 01       	movw	r30, r12
    24ce:	61 91       	ld	r22, Z+
    24d0:	6f 01       	movw	r12, r30
    24d2:	28 e3       	ldi	r18, 0x38	; 56
    24d4:	41 2f       	mov	r20, r17
    24d6:	83 e8       	ldi	r24, 0x83	; 131
    24d8:	93 e0       	ldi	r25, 0x03	; 3
    24da:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    24de:	1a 5f       	subi	r17, 0xFA	; 250
    24e0:	1a 32       	cpi	r17, 0x2A	; 42
    24e2:	a1 f7       	brne	.-24     	; 0x24cc <_Z14Gaineinstellenv+0x196>
    24e4:	64 96       	adiw	r28, 0x14	; 20
    24e6:	0f b6       	in	r0, 0x3f	; 63
    24e8:	f8 94       	cli
    24ea:	de bf       	out	0x3e, r29	; 62
    24ec:	0f be       	out	0x3f, r0	; 63
    24ee:	cd bf       	out	0x3d, r28	; 61
    24f0:	df 91       	pop	r29
    24f2:	cf 91       	pop	r28
    24f4:	1f 91       	pop	r17
    24f6:	0f 91       	pop	r16
    24f8:	ff 90       	pop	r15
    24fa:	ef 90       	pop	r14
    24fc:	df 90       	pop	r13
    24fe:	cf 90       	pop	r12
    2500:	08 95       	ret

00002502 <_Z15anzeige_kompassd>:
    2502:	9f 92       	push	r9
    2504:	af 92       	push	r10
    2506:	bf 92       	push	r11
    2508:	cf 92       	push	r12
    250a:	df 92       	push	r13
    250c:	ef 92       	push	r14
    250e:	ff 92       	push	r15
    2510:	0f 93       	push	r16
    2512:	1f 93       	push	r17
    2514:	cf 93       	push	r28
    2516:	df 93       	push	r29
    2518:	cd b7       	in	r28, 0x3d	; 61
    251a:	de b7       	in	r29, 0x3e	; 62
    251c:	64 97       	sbiw	r28, 0x14	; 20
    251e:	0f b6       	in	r0, 0x3f	; 63
    2520:	f8 94       	cli
    2522:	de bf       	out	0x3e, r29	; 62
    2524:	0f be       	out	0x3f, r0	; 63
    2526:	cd bf       	out	0x3d, r28	; 61
    2528:	c6 2e       	mov	r12, r22
    252a:	d7 2e       	mov	r13, r23
    252c:	e8 2e       	mov	r14, r24
    252e:	f9 2e       	mov	r15, r25
    2530:	8c e6       	ldi	r24, 0x6C	; 108
    2532:	93 e0       	ldi	r25, 0x03	; 3
    2534:	0e 94 46 29 	call	0x528c	; 0x528c <_ZN8Pressure18READ_Pressure_onceEv>
    2538:	8c e6       	ldi	r24, 0x6C	; 108
    253a:	93 e0       	ldi	r25, 0x03	; 3
    253c:	0e 94 be 29 	call	0x537c	; 0x537c <_ZN8Pressure16READ_TemperatureEv>
    2540:	83 e8       	ldi	r24, 0x83	; 131
    2542:	93 e0       	ldi	r25, 0x03	; 3
    2544:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2548:	0f 2e       	mov	r0, r31
    254a:	f4 e8       	ldi	r31, 0x84	; 132
    254c:	af 2e       	mov	r10, r31
    254e:	f7 e0       	ldi	r31, 0x07	; 7
    2550:	bf 2e       	mov	r11, r31
    2552:	f0 2d       	mov	r31, r0
    2554:	11 e4       	ldi	r17, 0x41	; 65
    2556:	f5 01       	movw	r30, r10
    2558:	61 91       	ld	r22, Z+
    255a:	5f 01       	movw	r10, r30
    255c:	20 e0       	ldi	r18, 0x00	; 0
    255e:	41 2f       	mov	r20, r17
    2560:	83 e8       	ldi	r24, 0x83	; 131
    2562:	93 e0       	ldi	r25, 0x03	; 3
    2564:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2568:	1a 5f       	subi	r17, 0xFA	; 250
    256a:	11 37       	cpi	r17, 0x71	; 113
    256c:	a1 f7       	brne	.-24     	; 0x2556 <_Z15anzeige_kompassd+0x54>
    256e:	0f 2e       	mov	r0, r31
    2570:	fc e8       	ldi	r31, 0x8C	; 140
    2572:	af 2e       	mov	r10, r31
    2574:	f7 e0       	ldi	r31, 0x07	; 7
    2576:	bf 2e       	mov	r11, r31
    2578:	f0 2d       	mov	r31, r0
    257a:	11 e4       	ldi	r17, 0x41	; 65
    257c:	f5 01       	movw	r30, r10
    257e:	61 91       	ld	r22, Z+
    2580:	5f 01       	movw	r10, r30
    2582:	28 e3       	ldi	r18, 0x38	; 56
    2584:	41 2f       	mov	r20, r17
    2586:	83 e8       	ldi	r24, 0x83	; 131
    2588:	93 e0       	ldi	r25, 0x03	; 3
    258a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    258e:	1a 5f       	subi	r17, 0xFA	; 250
    2590:	11 37       	cpi	r17, 0x71	; 113
    2592:	a1 f7       	brne	.-24     	; 0x257c <_Z15anzeige_kompassd+0x7a>
    2594:	40 91 6c 03 	lds	r20, 0x036C
    2598:	50 91 6d 03 	lds	r21, 0x036D
    259c:	60 91 6e 03 	lds	r22, 0x036E
    25a0:	70 91 6f 03 	lds	r23, 0x036F
    25a4:	8c e6       	ldi	r24, 0x6C	; 108
    25a6:	93 e0       	ldi	r25, 0x03	; 3
    25a8:	0e 94 2e 2a 	call	0x545c	; 0x545c <_ZN8Pressure8altitudeEd>
    25ac:	9f 93       	push	r25
    25ae:	8f 93       	push	r24
    25b0:	7f 93       	push	r23
    25b2:	6f 93       	push	r22
    25b4:	8a e7       	ldi	r24, 0x7A	; 122
    25b6:	92 e0       	ldi	r25, 0x02	; 2
    25b8:	9f 93       	push	r25
    25ba:	8f 93       	push	r24
    25bc:	ce 01       	movw	r24, r28
    25be:	01 96       	adiw	r24, 0x01	; 1
    25c0:	9f 93       	push	r25
    25c2:	8f 93       	push	r24
    25c4:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    25c8:	0f b6       	in	r0, 0x3f	; 63
    25ca:	f8 94       	cli
    25cc:	de bf       	out	0x3e, r29	; 62
    25ce:	0f be       	out	0x3f, r0	; 63
    25d0:	cd bf       	out	0x3d, r28	; 61
    25d2:	88 23       	and	r24, r24
    25d4:	f1 f0       	breq	.+60     	; 0x2612 <_Z15anzeige_kompassd+0x110>
    25d6:	8e 01       	movw	r16, r28
    25d8:	0f 5f       	subi	r16, 0xFF	; 255
    25da:	1f 4f       	sbci	r17, 0xFF	; 255
    25dc:	81 50       	subi	r24, 0x01	; 1
    25de:	68 94       	set
    25e0:	aa 24       	eor	r10, r10
    25e2:	a1 f8       	bld	r10, 1
    25e4:	b1 2c       	mov	r11, r1
    25e6:	ac 0e       	add	r10, r28
    25e8:	bd 1e       	adc	r11, r29
    25ea:	a8 0e       	add	r10, r24
    25ec:	b1 1c       	adc	r11, r1
    25ee:	0f 2e       	mov	r0, r31
    25f0:	f1 e4       	ldi	r31, 0x41	; 65
    25f2:	9f 2e       	mov	r9, r31
    25f4:	f0 2d       	mov	r31, r0
    25f6:	f8 01       	movw	r30, r16
    25f8:	61 91       	ld	r22, Z+
    25fa:	8f 01       	movw	r16, r30
    25fc:	2a e0       	ldi	r18, 0x0A	; 10
    25fe:	49 2d       	mov	r20, r9
    2600:	83 e8       	ldi	r24, 0x83	; 131
    2602:	93 e0       	ldi	r25, 0x03	; 3
    2604:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2608:	f6 e0       	ldi	r31, 0x06	; 6
    260a:	9f 0e       	add	r9, r31
    260c:	0a 15       	cp	r16, r10
    260e:	1b 05       	cpc	r17, r11
    2610:	91 f7       	brne	.-28     	; 0x25f6 <_Z15anzeige_kompassd+0xf4>
    2612:	e0 e7       	ldi	r30, 0x70	; 112
    2614:	f3 e0       	ldi	r31, 0x03	; 3
    2616:	83 81       	ldd	r24, Z+3	; 0x03
    2618:	8f 93       	push	r24
    261a:	82 81       	ldd	r24, Z+2	; 0x02
    261c:	8f 93       	push	r24
    261e:	81 81       	ldd	r24, Z+1	; 0x01
    2620:	8f 93       	push	r24
    2622:	80 81       	ld	r24, Z
    2624:	8f 93       	push	r24
    2626:	89 e1       	ldi	r24, 0x19	; 25
    2628:	92 e0       	ldi	r25, 0x02	; 2
    262a:	9f 93       	push	r25
    262c:	8f 93       	push	r24
    262e:	ce 01       	movw	r24, r28
    2630:	01 96       	adiw	r24, 0x01	; 1
    2632:	9f 93       	push	r25
    2634:	8f 93       	push	r24
    2636:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    263a:	0f b6       	in	r0, 0x3f	; 63
    263c:	f8 94       	cli
    263e:	de bf       	out	0x3e, r29	; 62
    2640:	0f be       	out	0x3f, r0	; 63
    2642:	cd bf       	out	0x3d, r28	; 61
    2644:	88 23       	and	r24, r24
    2646:	f1 f0       	breq	.+60     	; 0x2684 <_Z15anzeige_kompassd+0x182>
    2648:	8e 01       	movw	r16, r28
    264a:	0f 5f       	subi	r16, 0xFF	; 255
    264c:	1f 4f       	sbci	r17, 0xFF	; 255
    264e:	81 50       	subi	r24, 0x01	; 1
    2650:	68 94       	set
    2652:	aa 24       	eor	r10, r10
    2654:	a1 f8       	bld	r10, 1
    2656:	b1 2c       	mov	r11, r1
    2658:	ac 0e       	add	r10, r28
    265a:	bd 1e       	adc	r11, r29
    265c:	a8 0e       	add	r10, r24
    265e:	b1 1c       	adc	r11, r1
    2660:	0f 2e       	mov	r0, r31
    2662:	f1 e4       	ldi	r31, 0x41	; 65
    2664:	9f 2e       	mov	r9, r31
    2666:	f0 2d       	mov	r31, r0
    2668:	f8 01       	movw	r30, r16
    266a:	61 91       	ld	r22, Z+
    266c:	8f 01       	movw	r16, r30
    266e:	28 e2       	ldi	r18, 0x28	; 40
    2670:	49 2d       	mov	r20, r9
    2672:	83 e8       	ldi	r24, 0x83	; 131
    2674:	93 e0       	ldi	r25, 0x03	; 3
    2676:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    267a:	f6 e0       	ldi	r31, 0x06	; 6
    267c:	9f 0e       	add	r9, r31
    267e:	0a 15       	cp	r16, r10
    2680:	1b 05       	cpc	r17, r11
    2682:	91 f7       	brne	.-28     	; 0x2668 <_Z15anzeige_kompassd+0x166>
    2684:	ff 92       	push	r15
    2686:	ef 92       	push	r14
    2688:	df 92       	push	r13
    268a:	cf 92       	push	r12
    268c:	84 e8       	ldi	r24, 0x84	; 132
    268e:	92 e0       	ldi	r25, 0x02	; 2
    2690:	9f 93       	push	r25
    2692:	8f 93       	push	r24
    2694:	ce 01       	movw	r24, r28
    2696:	01 96       	adiw	r24, 0x01	; 1
    2698:	9f 93       	push	r25
    269a:	8f 93       	push	r24
    269c:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    26a0:	0f b6       	in	r0, 0x3f	; 63
    26a2:	f8 94       	cli
    26a4:	de bf       	out	0x3e, r29	; 62
    26a6:	0f be       	out	0x3f, r0	; 63
    26a8:	cd bf       	out	0x3d, r28	; 61
    26aa:	88 23       	and	r24, r24
    26ac:	f1 f0       	breq	.+60     	; 0x26ea <_Z15anzeige_kompassd+0x1e8>
    26ae:	8e 01       	movw	r16, r28
    26b0:	0f 5f       	subi	r16, 0xFF	; 255
    26b2:	1f 4f       	sbci	r17, 0xFF	; 255
    26b4:	81 50       	subi	r24, 0x01	; 1
    26b6:	68 94       	set
    26b8:	aa 24       	eor	r10, r10
    26ba:	a1 f8       	bld	r10, 1
    26bc:	b1 2c       	mov	r11, r1
    26be:	ac 0e       	add	r10, r28
    26c0:	bd 1e       	adc	r11, r29
    26c2:	a8 0e       	add	r10, r24
    26c4:	b1 1c       	adc	r11, r1
    26c6:	0f 2e       	mov	r0, r31
    26c8:	f1 e4       	ldi	r31, 0x41	; 65
    26ca:	9f 2e       	mov	r9, r31
    26cc:	f0 2d       	mov	r31, r0
    26ce:	f8 01       	movw	r30, r16
    26d0:	61 91       	ld	r22, Z+
    26d2:	8f 01       	movw	r16, r30
    26d4:	20 e3       	ldi	r18, 0x30	; 48
    26d6:	49 2d       	mov	r20, r9
    26d8:	83 e8       	ldi	r24, 0x83	; 131
    26da:	93 e0       	ldi	r25, 0x03	; 3
    26dc:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    26e0:	f6 e0       	ldi	r31, 0x06	; 6
    26e2:	9f 0e       	add	r9, r31
    26e4:	0a 15       	cp	r16, r10
    26e6:	1b 05       	cpc	r17, r11
    26e8:	91 f7       	brne	.-28     	; 0x26ce <_Z15anzeige_kompassd+0x1cc>
    26ea:	2c 2d       	mov	r18, r12
    26ec:	3d 2d       	mov	r19, r13
    26ee:	4e 2d       	mov	r20, r14
    26f0:	5f 2d       	mov	r21, r15
    26f2:	6f e1       	ldi	r22, 0x1F	; 31
    26f4:	8f e1       	ldi	r24, 0x1F	; 31
    26f6:	bd d8       	rcall	.-3718   	; 0x1872 <_Z13anzeige_nadelhhf>
    26f8:	23 e0       	ldi	r18, 0x03	; 3
    26fa:	40 e5       	ldi	r20, 0x50	; 80
    26fc:	6c 2d       	mov	r22, r12
    26fe:	7d 2d       	mov	r23, r13
    2700:	8e 2d       	mov	r24, r14
    2702:	9f 2d       	mov	r25, r15
    2704:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <_Z16anzeige_richtungfhh>
    2708:	64 96       	adiw	r28, 0x14	; 20
    270a:	0f b6       	in	r0, 0x3f	; 63
    270c:	f8 94       	cli
    270e:	de bf       	out	0x3e, r29	; 62
    2710:	0f be       	out	0x3f, r0	; 63
    2712:	cd bf       	out	0x3d, r28	; 61
    2714:	df 91       	pop	r29
    2716:	cf 91       	pop	r28
    2718:	1f 91       	pop	r17
    271a:	0f 91       	pop	r16
    271c:	ff 90       	pop	r15
    271e:	ef 90       	pop	r14
    2720:	df 90       	pop	r13
    2722:	cf 90       	pop	r12
    2724:	bf 90       	pop	r11
    2726:	af 90       	pop	r10
    2728:	9f 90       	pop	r9
    272a:	08 95       	ret

0000272c <_Z10timerseitev>:
    272c:	cf 92       	push	r12
    272e:	df 92       	push	r13
    2730:	ef 92       	push	r14
    2732:	ff 92       	push	r15
    2734:	0f 93       	push	r16
    2736:	1f 93       	push	r17
    2738:	cf 93       	push	r28
    273a:	df 93       	push	r29
    273c:	cd b7       	in	r28, 0x3d	; 61
    273e:	de b7       	in	r29, 0x3e	; 62
    2740:	64 97       	sbiw	r28, 0x14	; 20
    2742:	0f b6       	in	r0, 0x3f	; 63
    2744:	f8 94       	cli
    2746:	de bf       	out	0x3e, r29	; 62
    2748:	0f be       	out	0x3f, r0	; 63
    274a:	cd bf       	out	0x3d, r28	; 61
    274c:	83 e8       	ldi	r24, 0x83	; 131
    274e:	93 e0       	ldi	r25, 0x03	; 3
    2750:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2754:	88 e0       	ldi	r24, 0x08	; 8
    2756:	ef e8       	ldi	r30, 0x8F	; 143
    2758:	f2 e0       	ldi	r31, 0x02	; 2
    275a:	8e 01       	movw	r16, r28
    275c:	0f 5f       	subi	r16, 0xFF	; 255
    275e:	1f 4f       	sbci	r17, 0xFF	; 255
    2760:	d8 01       	movw	r26, r16
    2762:	01 90       	ld	r0, Z+
    2764:	0d 92       	st	X+, r0
    2766:	8a 95       	dec	r24
    2768:	e1 f7       	brne	.-8      	; 0x2762 <_Z10timerseitev+0x36>
    276a:	c0 2e       	mov	r12, r16
    276c:	d1 2e       	mov	r13, r17
    276e:	78 01       	movw	r14, r16
    2770:	10 e0       	ldi	r17, 0x00	; 0
    2772:	f7 01       	movw	r30, r14
    2774:	61 91       	ld	r22, Z+
    2776:	7f 01       	movw	r14, r30
    2778:	20 e0       	ldi	r18, 0x00	; 0
    277a:	41 2f       	mov	r20, r17
    277c:	83 e8       	ldi	r24, 0x83	; 131
    277e:	93 e0       	ldi	r25, 0x03	; 3
    2780:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2784:	1a 5f       	subi	r17, 0xFA	; 250
    2786:	1a 32       	cpi	r17, 0x2A	; 42
    2788:	a1 f7       	brne	.-24     	; 0x2772 <_Z10timerseitev+0x46>
    278a:	60 91 54 03 	lds	r22, 0x0354
    278e:	66 23       	and	r22, r22
    2790:	39 f0       	breq	.+14     	; 0x27a0 <_Z10timerseitev+0x74>
    2792:	60 5d       	subi	r22, 0xD0	; 208
    2794:	20 e0       	ldi	r18, 0x00	; 0
    2796:	4a e2       	ldi	r20, 0x2A	; 42
    2798:	83 e8       	ldi	r24, 0x83	; 131
    279a:	93 e0       	ldi	r25, 0x03	; 3
    279c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    27a0:	e0 91 9f 07 	lds	r30, 0x079F
    27a4:	f0 91 a0 07 	lds	r31, 0x07A0
    27a8:	0f 2e       	mov	r0, r31
    27aa:	f0 e1       	ldi	r31, 0x10	; 16
    27ac:	ef 2e       	mov	r14, r31
    27ae:	fe e0       	ldi	r31, 0x0E	; 14
    27b0:	ff 2e       	mov	r15, r31
    27b2:	f0 2d       	mov	r31, r0
    27b4:	cf 01       	movw	r24, r30
    27b6:	b7 01       	movw	r22, r14
    27b8:	0e 94 b8 32 	call	0x6570	; 0x6570 <__udivmodhi4>
    27bc:	ab 01       	movw	r20, r22
    27be:	9c 01       	movw	r18, r24
    27c0:	a9 e8       	ldi	r26, 0x89	; 137
    27c2:	b8 e8       	ldi	r27, 0x88	; 136
    27c4:	0e 94 e5 32 	call	0x65ca	; 0x65ca <__umulhisi3>
    27c8:	8c 01       	movw	r16, r24
    27ca:	16 95       	lsr	r17
    27cc:	07 95       	ror	r16
    27ce:	12 95       	swap	r17
    27d0:	02 95       	swap	r16
    27d2:	0f 70       	andi	r16, 0x0F	; 15
    27d4:	01 27       	eor	r16, r17
    27d6:	1f 70       	andi	r17, 0x0F	; 15
    27d8:	01 27       	eor	r16, r17
    27da:	9f 01       	movw	r18, r30
    27dc:	0e 94 e5 32 	call	0x65ca	; 0x65ca <__umulhisi3>
    27e0:	96 95       	lsr	r25
    27e2:	87 95       	ror	r24
    27e4:	92 95       	swap	r25
    27e6:	82 95       	swap	r24
    27e8:	8f 70       	andi	r24, 0x0F	; 15
    27ea:	89 27       	eor	r24, r25
    27ec:	9f 70       	andi	r25, 0x0F	; 15
    27ee:	89 27       	eor	r24, r25
    27f0:	6c e3       	ldi	r22, 0x3C	; 60
    27f2:	68 9f       	mul	r22, r24
    27f4:	90 01       	movw	r18, r0
    27f6:	69 9f       	mul	r22, r25
    27f8:	30 0d       	add	r19, r0
    27fa:	11 24       	eor	r1, r1
    27fc:	e2 1b       	sub	r30, r18
    27fe:	f3 0b       	sbc	r31, r19
    2800:	ca 01       	movw	r24, r20
    2802:	99 27       	eor	r25, r25
    2804:	91 95       	neg	r25
    2806:	81 95       	neg	r24
    2808:	91 09       	sbc	r25, r1
    280a:	b7 01       	movw	r22, r14
    280c:	0e 94 cc 32 	call	0x6598	; 0x6598 <__divmodhi4>
    2810:	cb 01       	movw	r24, r22
    2812:	6a e0       	ldi	r22, 0x0A	; 10
    2814:	70 e0       	ldi	r23, 0x00	; 0
    2816:	0e 94 cc 32 	call	0x6598	; 0x6598 <__divmodhi4>
    281a:	69 83       	std	Y+1, r22	; 0x01
    281c:	8d ec       	ldi	r24, 0xCD	; 205
    281e:	48 9f       	mul	r20, r24
    2820:	91 2d       	mov	r25, r1
    2822:	11 24       	eor	r1, r1
    2824:	96 95       	lsr	r25
    2826:	96 95       	lsr	r25
    2828:	96 95       	lsr	r25
    282a:	99 0f       	add	r25, r25
    282c:	29 2f       	mov	r18, r25
    282e:	22 0f       	add	r18, r18
    2830:	22 0f       	add	r18, r18
    2832:	92 0f       	add	r25, r18
    2834:	49 1b       	sub	r20, r25
    2836:	4a 83       	std	Y+2, r20	; 0x02
    2838:	9a e3       	ldi	r25, 0x3A	; 58
    283a:	9b 83       	std	Y+3, r25	; 0x03
    283c:	08 9f       	mul	r16, r24
    283e:	21 2d       	mov	r18, r1
    2840:	11 24       	eor	r1, r1
    2842:	26 95       	lsr	r18
    2844:	26 95       	lsr	r18
    2846:	26 95       	lsr	r18
    2848:	2c 83       	std	Y+4, r18	; 0x04
    284a:	22 0f       	add	r18, r18
    284c:	32 2f       	mov	r19, r18
    284e:	33 0f       	add	r19, r19
    2850:	33 0f       	add	r19, r19
    2852:	23 0f       	add	r18, r19
    2854:	02 1b       	sub	r16, r18
    2856:	0d 83       	std	Y+5, r16	; 0x05
    2858:	9e 83       	std	Y+6, r25	; 0x06
    285a:	e8 9f       	mul	r30, r24
    285c:	81 2d       	mov	r24, r1
    285e:	11 24       	eor	r1, r1
    2860:	86 95       	lsr	r24
    2862:	86 95       	lsr	r24
    2864:	86 95       	lsr	r24
    2866:	8f 83       	std	Y+7, r24	; 0x07
    2868:	88 0f       	add	r24, r24
    286a:	98 2f       	mov	r25, r24
    286c:	99 0f       	add	r25, r25
    286e:	99 0f       	add	r25, r25
    2870:	89 0f       	add	r24, r25
    2872:	e8 1b       	sub	r30, r24
    2874:	e8 87       	std	Y+8, r30	; 0x08
    2876:	ec 2c       	mov	r14, r12
    2878:	fd 2c       	mov	r15, r13
    287a:	10 e0       	ldi	r17, 0x00	; 0
    287c:	f7 01       	movw	r30, r14
    287e:	61 91       	ld	r22, Z+
    2880:	7f 01       	movw	r14, r30
    2882:	6a 33       	cpi	r22, 0x3A	; 58
    2884:	39 f4       	brne	.+14     	; 0x2894 <_Z10timerseitev+0x168>
    2886:	24 e1       	ldi	r18, 0x14	; 20
    2888:	41 2f       	mov	r20, r17
    288a:	83 e8       	ldi	r24, 0x83	; 131
    288c:	93 e0       	ldi	r25, 0x03	; 3
    288e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2892:	06 c0       	rjmp	.+12     	; 0x28a0 <_Z10timerseitev+0x174>
    2894:	20 e1       	ldi	r18, 0x10	; 16
    2896:	41 2f       	mov	r20, r17
    2898:	83 e8       	ldi	r24, 0x83	; 131
    289a:	93 e0       	ldi	r25, 0x03	; 3
    289c:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    28a0:	10 5f       	subi	r17, 0xF0	; 240
    28a2:	10 38       	cpi	r17, 0x80	; 128
    28a4:	59 f7       	brne	.-42     	; 0x287c <_Z10timerseitev+0x150>
    28a6:	64 96       	adiw	r28, 0x14	; 20
    28a8:	0f b6       	in	r0, 0x3f	; 63
    28aa:	f8 94       	cli
    28ac:	de bf       	out	0x3e, r29	; 62
    28ae:	0f be       	out	0x3f, r0	; 63
    28b0:	cd bf       	out	0x3d, r28	; 61
    28b2:	df 91       	pop	r29
    28b4:	cf 91       	pop	r28
    28b6:	1f 91       	pop	r17
    28b8:	0f 91       	pop	r16
    28ba:	ff 90       	pop	r15
    28bc:	ef 90       	pop	r14
    28be:	df 90       	pop	r13
    28c0:	cf 90       	pop	r12
    28c2:	08 95       	ret

000028c4 <_Z13Stoppuhrseitev>:
    28c4:	cf 92       	push	r12
    28c6:	df 92       	push	r13
    28c8:	ef 92       	push	r14
    28ca:	ff 92       	push	r15
    28cc:	0f 93       	push	r16
    28ce:	1f 93       	push	r17
    28d0:	cf 93       	push	r28
    28d2:	df 93       	push	r29
    28d4:	cd b7       	in	r28, 0x3d	; 61
    28d6:	de b7       	in	r29, 0x3e	; 62
    28d8:	64 97       	sbiw	r28, 0x14	; 20
    28da:	0f b6       	in	r0, 0x3f	; 63
    28dc:	f8 94       	cli
    28de:	de bf       	out	0x3e, r29	; 62
    28e0:	0f be       	out	0x3f, r0	; 63
    28e2:	cd bf       	out	0x3d, r28	; 61
    28e4:	83 e8       	ldi	r24, 0x83	; 131
    28e6:	93 e0       	ldi	r25, 0x03	; 3
    28e8:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    28ec:	8b e0       	ldi	r24, 0x0B	; 11
    28ee:	e7 e9       	ldi	r30, 0x97	; 151
    28f0:	f2 e0       	ldi	r31, 0x02	; 2
    28f2:	8e 01       	movw	r16, r28
    28f4:	0f 5f       	subi	r16, 0xFF	; 255
    28f6:	1f 4f       	sbci	r17, 0xFF	; 255
    28f8:	d8 01       	movw	r26, r16
    28fa:	01 90       	ld	r0, Z+
    28fc:	0d 92       	st	X+, r0
    28fe:	8a 95       	dec	r24
    2900:	e1 f7       	brne	.-8      	; 0x28fa <_Z13Stoppuhrseitev+0x36>
    2902:	c0 2e       	mov	r12, r16
    2904:	d1 2e       	mov	r13, r17
    2906:	78 01       	movw	r14, r16
    2908:	10 e0       	ldi	r17, 0x00	; 0
    290a:	f7 01       	movw	r30, r14
    290c:	61 91       	ld	r22, Z+
    290e:	7f 01       	movw	r14, r30
    2910:	20 e0       	ldi	r18, 0x00	; 0
    2912:	41 2f       	mov	r20, r17
    2914:	83 e8       	ldi	r24, 0x83	; 131
    2916:	93 e0       	ldi	r25, 0x03	; 3
    2918:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    291c:	1a 5f       	subi	r17, 0xFA	; 250
    291e:	1c 33       	cpi	r17, 0x3C	; 60
    2920:	a1 f7       	brne	.-24     	; 0x290a <_Z13Stoppuhrseitev+0x46>
    2922:	e0 91 a1 07 	lds	r30, 0x07A1
    2926:	f0 91 a2 07 	lds	r31, 0x07A2
    292a:	0f 2e       	mov	r0, r31
    292c:	f0 e1       	ldi	r31, 0x10	; 16
    292e:	ef 2e       	mov	r14, r31
    2930:	fe e0       	ldi	r31, 0x0E	; 14
    2932:	ff 2e       	mov	r15, r31
    2934:	f0 2d       	mov	r31, r0
    2936:	cf 01       	movw	r24, r30
    2938:	b7 01       	movw	r22, r14
    293a:	0e 94 b8 32 	call	0x6570	; 0x6570 <__udivmodhi4>
    293e:	ab 01       	movw	r20, r22
    2940:	9c 01       	movw	r18, r24
    2942:	a9 e8       	ldi	r26, 0x89	; 137
    2944:	b8 e8       	ldi	r27, 0x88	; 136
    2946:	0e 94 e5 32 	call	0x65ca	; 0x65ca <__umulhisi3>
    294a:	8c 01       	movw	r16, r24
    294c:	16 95       	lsr	r17
    294e:	07 95       	ror	r16
    2950:	12 95       	swap	r17
    2952:	02 95       	swap	r16
    2954:	0f 70       	andi	r16, 0x0F	; 15
    2956:	01 27       	eor	r16, r17
    2958:	1f 70       	andi	r17, 0x0F	; 15
    295a:	01 27       	eor	r16, r17
    295c:	9f 01       	movw	r18, r30
    295e:	0e 94 e5 32 	call	0x65ca	; 0x65ca <__umulhisi3>
    2962:	96 95       	lsr	r25
    2964:	87 95       	ror	r24
    2966:	92 95       	swap	r25
    2968:	82 95       	swap	r24
    296a:	8f 70       	andi	r24, 0x0F	; 15
    296c:	89 27       	eor	r24, r25
    296e:	9f 70       	andi	r25, 0x0F	; 15
    2970:	89 27       	eor	r24, r25
    2972:	6c e3       	ldi	r22, 0x3C	; 60
    2974:	68 9f       	mul	r22, r24
    2976:	90 01       	movw	r18, r0
    2978:	69 9f       	mul	r22, r25
    297a:	30 0d       	add	r19, r0
    297c:	11 24       	eor	r1, r1
    297e:	e2 1b       	sub	r30, r18
    2980:	f3 0b       	sbc	r31, r19
    2982:	ca 01       	movw	r24, r20
    2984:	99 27       	eor	r25, r25
    2986:	91 95       	neg	r25
    2988:	81 95       	neg	r24
    298a:	91 09       	sbc	r25, r1
    298c:	b7 01       	movw	r22, r14
    298e:	0e 94 cc 32 	call	0x6598	; 0x6598 <__divmodhi4>
    2992:	cb 01       	movw	r24, r22
    2994:	6a e0       	ldi	r22, 0x0A	; 10
    2996:	70 e0       	ldi	r23, 0x00	; 0
    2998:	0e 94 cc 32 	call	0x6598	; 0x6598 <__divmodhi4>
    299c:	69 83       	std	Y+1, r22	; 0x01
    299e:	8d ec       	ldi	r24, 0xCD	; 205
    29a0:	48 9f       	mul	r20, r24
    29a2:	91 2d       	mov	r25, r1
    29a4:	11 24       	eor	r1, r1
    29a6:	96 95       	lsr	r25
    29a8:	96 95       	lsr	r25
    29aa:	96 95       	lsr	r25
    29ac:	99 0f       	add	r25, r25
    29ae:	29 2f       	mov	r18, r25
    29b0:	22 0f       	add	r18, r18
    29b2:	22 0f       	add	r18, r18
    29b4:	92 0f       	add	r25, r18
    29b6:	49 1b       	sub	r20, r25
    29b8:	4a 83       	std	Y+2, r20	; 0x02
    29ba:	9a e3       	ldi	r25, 0x3A	; 58
    29bc:	9b 83       	std	Y+3, r25	; 0x03
    29be:	08 9f       	mul	r16, r24
    29c0:	21 2d       	mov	r18, r1
    29c2:	11 24       	eor	r1, r1
    29c4:	26 95       	lsr	r18
    29c6:	26 95       	lsr	r18
    29c8:	26 95       	lsr	r18
    29ca:	2c 83       	std	Y+4, r18	; 0x04
    29cc:	22 0f       	add	r18, r18
    29ce:	32 2f       	mov	r19, r18
    29d0:	33 0f       	add	r19, r19
    29d2:	33 0f       	add	r19, r19
    29d4:	23 0f       	add	r18, r19
    29d6:	02 1b       	sub	r16, r18
    29d8:	0d 83       	std	Y+5, r16	; 0x05
    29da:	9e 83       	std	Y+6, r25	; 0x06
    29dc:	e8 9f       	mul	r30, r24
    29de:	81 2d       	mov	r24, r1
    29e0:	11 24       	eor	r1, r1
    29e2:	86 95       	lsr	r24
    29e4:	86 95       	lsr	r24
    29e6:	86 95       	lsr	r24
    29e8:	8f 83       	std	Y+7, r24	; 0x07
    29ea:	88 0f       	add	r24, r24
    29ec:	98 2f       	mov	r25, r24
    29ee:	99 0f       	add	r25, r25
    29f0:	99 0f       	add	r25, r25
    29f2:	89 0f       	add	r24, r25
    29f4:	e8 1b       	sub	r30, r24
    29f6:	e8 87       	std	Y+8, r30	; 0x08
    29f8:	ec 2c       	mov	r14, r12
    29fa:	fd 2c       	mov	r15, r13
    29fc:	10 e0       	ldi	r17, 0x00	; 0
    29fe:	f7 01       	movw	r30, r14
    2a00:	61 91       	ld	r22, Z+
    2a02:	7f 01       	movw	r14, r30
    2a04:	6a 33       	cpi	r22, 0x3A	; 58
    2a06:	39 f4       	brne	.+14     	; 0x2a16 <_Z13Stoppuhrseitev+0x152>
    2a08:	24 e1       	ldi	r18, 0x14	; 20
    2a0a:	41 2f       	mov	r20, r17
    2a0c:	83 e8       	ldi	r24, 0x83	; 131
    2a0e:	93 e0       	ldi	r25, 0x03	; 3
    2a10:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2a14:	06 c0       	rjmp	.+12     	; 0x2a22 <_Z13Stoppuhrseitev+0x15e>
    2a16:	20 e1       	ldi	r18, 0x10	; 16
    2a18:	41 2f       	mov	r20, r17
    2a1a:	83 e8       	ldi	r24, 0x83	; 131
    2a1c:	93 e0       	ldi	r25, 0x03	; 3
    2a1e:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2a22:	10 5f       	subi	r17, 0xF0	; 240
    2a24:	10 38       	cpi	r17, 0x80	; 128
    2a26:	59 f7       	brne	.-42     	; 0x29fe <_Z13Stoppuhrseitev+0x13a>
    2a28:	64 96       	adiw	r28, 0x14	; 20
    2a2a:	0f b6       	in	r0, 0x3f	; 63
    2a2c:	f8 94       	cli
    2a2e:	de bf       	out	0x3e, r29	; 62
    2a30:	0f be       	out	0x3f, r0	; 63
    2a32:	cd bf       	out	0x3d, r28	; 61
    2a34:	df 91       	pop	r29
    2a36:	cf 91       	pop	r28
    2a38:	1f 91       	pop	r17
    2a3a:	0f 91       	pop	r16
    2a3c:	ff 90       	pop	r15
    2a3e:	ef 90       	pop	r14
    2a40:	df 90       	pop	r13
    2a42:	cf 90       	pop	r12
    2a44:	08 95       	ret

00002a46 <_Z14Pressuresensorv>:
    2a46:	bf 92       	push	r11
    2a48:	cf 92       	push	r12
    2a4a:	df 92       	push	r13
    2a4c:	ef 92       	push	r14
    2a4e:	ff 92       	push	r15
    2a50:	0f 93       	push	r16
    2a52:	1f 93       	push	r17
    2a54:	cf 93       	push	r28
    2a56:	df 93       	push	r29
    2a58:	cd b7       	in	r28, 0x3d	; 61
    2a5a:	de b7       	in	r29, 0x3e	; 62
    2a5c:	64 97       	sbiw	r28, 0x14	; 20
    2a5e:	0f b6       	in	r0, 0x3f	; 63
    2a60:	f8 94       	cli
    2a62:	de bf       	out	0x3e, r29	; 62
    2a64:	0f be       	out	0x3f, r0	; 63
    2a66:	cd bf       	out	0x3d, r28	; 61
    2a68:	8c e6       	ldi	r24, 0x6C	; 108
    2a6a:	93 e0       	ldi	r25, 0x03	; 3
    2a6c:	0e 94 46 29 	call	0x528c	; 0x528c <_ZN8Pressure18READ_Pressure_onceEv>
    2a70:	8c e6       	ldi	r24, 0x6C	; 108
    2a72:	93 e0       	ldi	r25, 0x03	; 3
    2a74:	0e 94 be 29 	call	0x537c	; 0x537c <_ZN8Pressure16READ_TemperatureEv>
    2a78:	83 e8       	ldi	r24, 0x83	; 131
    2a7a:	93 e0       	ldi	r25, 0x03	; 3
    2a7c:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2a80:	80 e0       	ldi	r24, 0x00	; 0
    2a82:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <_Z6headerh>
    2a86:	80 e0       	ldi	r24, 0x00	; 0
    2a88:	0e 94 3c 0b 	call	0x1678	; 0x1678 <_Z6bottomh>
    2a8c:	8e e0       	ldi	r24, 0x0E	; 14
    2a8e:	e2 ea       	ldi	r30, 0xA2	; 162
    2a90:	f2 e0       	ldi	r31, 0x02	; 2
    2a92:	8e 01       	movw	r16, r28
    2a94:	0f 5f       	subi	r16, 0xFF	; 255
    2a96:	1f 4f       	sbci	r17, 0xFF	; 255
    2a98:	d8 01       	movw	r26, r16
    2a9a:	01 90       	ld	r0, Z+
    2a9c:	0d 92       	st	X+, r0
    2a9e:	8a 95       	dec	r24
    2aa0:	e1 f7       	brne	.-8      	; 0x2a9a <_Z14Pressuresensorv+0x54>
    2aa2:	c0 2e       	mov	r12, r16
    2aa4:	d1 2e       	mov	r13, r17
    2aa6:	78 01       	movw	r14, r16
    2aa8:	10 e0       	ldi	r17, 0x00	; 0
    2aaa:	f7 01       	movw	r30, r14
    2aac:	61 91       	ld	r22, Z+
    2aae:	7f 01       	movw	r14, r30
    2ab0:	20 e1       	ldi	r18, 0x10	; 16
    2ab2:	41 2f       	mov	r20, r17
    2ab4:	83 e8       	ldi	r24, 0x83	; 131
    2ab6:	93 e0       	ldi	r25, 0x03	; 3
    2ab8:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2abc:	1a 5f       	subi	r17, 0xFA	; 250
    2abe:	1e 34       	cpi	r17, 0x4E	; 78
    2ac0:	a1 f7       	brne	.-24     	; 0x2aaa <_Z14Pressuresensorv+0x64>
    2ac2:	ec e6       	ldi	r30, 0x6C	; 108
    2ac4:	f3 e0       	ldi	r31, 0x03	; 3
    2ac6:	83 81       	ldd	r24, Z+3	; 0x03
    2ac8:	8f 93       	push	r24
    2aca:	82 81       	ldd	r24, Z+2	; 0x02
    2acc:	8f 93       	push	r24
    2ace:	81 81       	ldd	r24, Z+1	; 0x01
    2ad0:	8f 93       	push	r24
    2ad2:	80 81       	ld	r24, Z
    2ad4:	8f 93       	push	r24
    2ad6:	80 eb       	ldi	r24, 0xB0	; 176
    2ad8:	92 e0       	ldi	r25, 0x02	; 2
    2ada:	9f 93       	push	r25
    2adc:	8f 93       	push	r24
    2ade:	ce 01       	movw	r24, r28
    2ae0:	01 96       	adiw	r24, 0x01	; 1
    2ae2:	9f 93       	push	r25
    2ae4:	8f 93       	push	r24
    2ae6:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    2aea:	0f b6       	in	r0, 0x3f	; 63
    2aec:	f8 94       	cli
    2aee:	de bf       	out	0x3e, r29	; 62
    2af0:	0f be       	out	0x3f, r0	; 63
    2af2:	cd bf       	out	0x3d, r28	; 61
    2af4:	88 23       	and	r24, r24
    2af6:	d1 f0       	breq	.+52     	; 0x2b2c <_Z14Pressuresensorv+0xe6>
    2af8:	81 50       	subi	r24, 0x01	; 1
    2afa:	68 94       	set
    2afc:	ee 24       	eor	r14, r14
    2afe:	e1 f8       	bld	r14, 1
    2b00:	f1 2c       	mov	r15, r1
    2b02:	ec 0e       	add	r14, r28
    2b04:	fd 1e       	adc	r15, r29
    2b06:	e8 0e       	add	r14, r24
    2b08:	f1 1c       	adc	r15, r1
    2b0a:	0c 2d       	mov	r16, r12
    2b0c:	1d 2d       	mov	r17, r13
    2b0e:	b1 2c       	mov	r11, r1
    2b10:	f8 01       	movw	r30, r16
    2b12:	61 91       	ld	r22, Z+
    2b14:	8f 01       	movw	r16, r30
    2b16:	28 e1       	ldi	r18, 0x18	; 24
    2b18:	4b 2d       	mov	r20, r11
    2b1a:	83 e8       	ldi	r24, 0x83	; 131
    2b1c:	93 e0       	ldi	r25, 0x03	; 3
    2b1e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2b22:	f6 e0       	ldi	r31, 0x06	; 6
    2b24:	bf 0e       	add	r11, r31
    2b26:	0e 15       	cp	r16, r14
    2b28:	1f 05       	cpc	r17, r15
    2b2a:	91 f7       	brne	.-28     	; 0x2b10 <_Z14Pressuresensorv+0xca>
    2b2c:	40 91 6c 03 	lds	r20, 0x036C
    2b30:	50 91 6d 03 	lds	r21, 0x036D
    2b34:	60 91 6e 03 	lds	r22, 0x036E
    2b38:	70 91 6f 03 	lds	r23, 0x036F
    2b3c:	8c e6       	ldi	r24, 0x6C	; 108
    2b3e:	93 e0       	ldi	r25, 0x03	; 3
    2b40:	0e 94 2e 2a 	call	0x545c	; 0x545c <_ZN8Pressure8altitudeEd>
    2b44:	9f 93       	push	r25
    2b46:	8f 93       	push	r24
    2b48:	7f 93       	push	r23
    2b4a:	6f 93       	push	r22
    2b4c:	89 eb       	ldi	r24, 0xB9	; 185
    2b4e:	92 e0       	ldi	r25, 0x02	; 2
    2b50:	9f 93       	push	r25
    2b52:	8f 93       	push	r24
    2b54:	ce 01       	movw	r24, r28
    2b56:	01 96       	adiw	r24, 0x01	; 1
    2b58:	9f 93       	push	r25
    2b5a:	8f 93       	push	r24
    2b5c:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    2b60:	0f b6       	in	r0, 0x3f	; 63
    2b62:	f8 94       	cli
    2b64:	de bf       	out	0x3e, r29	; 62
    2b66:	0f be       	out	0x3f, r0	; 63
    2b68:	cd bf       	out	0x3d, r28	; 61
    2b6a:	88 23       	and	r24, r24
    2b6c:	d1 f0       	breq	.+52     	; 0x2ba2 <_Z14Pressuresensorv+0x15c>
    2b6e:	81 50       	subi	r24, 0x01	; 1
    2b70:	68 94       	set
    2b72:	ee 24       	eor	r14, r14
    2b74:	e1 f8       	bld	r14, 1
    2b76:	f1 2c       	mov	r15, r1
    2b78:	ec 0e       	add	r14, r28
    2b7a:	fd 1e       	adc	r15, r29
    2b7c:	e8 0e       	add	r14, r24
    2b7e:	f1 1c       	adc	r15, r1
    2b80:	0c 2d       	mov	r16, r12
    2b82:	1d 2d       	mov	r17, r13
    2b84:	b1 2c       	mov	r11, r1
    2b86:	f8 01       	movw	r30, r16
    2b88:	61 91       	ld	r22, Z+
    2b8a:	8f 01       	movw	r16, r30
    2b8c:	20 e2       	ldi	r18, 0x20	; 32
    2b8e:	4b 2d       	mov	r20, r11
    2b90:	83 e8       	ldi	r24, 0x83	; 131
    2b92:	93 e0       	ldi	r25, 0x03	; 3
    2b94:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2b98:	f6 e0       	ldi	r31, 0x06	; 6
    2b9a:	bf 0e       	add	r11, r31
    2b9c:	0e 15       	cp	r16, r14
    2b9e:	1f 05       	cpc	r17, r15
    2ba0:	91 f7       	brne	.-28     	; 0x2b86 <_Z14Pressuresensorv+0x140>
    2ba2:	e0 e7       	ldi	r30, 0x70	; 112
    2ba4:	f3 e0       	ldi	r31, 0x03	; 3
    2ba6:	83 81       	ldd	r24, Z+3	; 0x03
    2ba8:	8f 93       	push	r24
    2baa:	82 81       	ldd	r24, Z+2	; 0x02
    2bac:	8f 93       	push	r24
    2bae:	81 81       	ldd	r24, Z+1	; 0x01
    2bb0:	8f 93       	push	r24
    2bb2:	80 81       	ld	r24, Z
    2bb4:	8f 93       	push	r24
    2bb6:	89 e1       	ldi	r24, 0x19	; 25
    2bb8:	92 e0       	ldi	r25, 0x02	; 2
    2bba:	9f 93       	push	r25
    2bbc:	8f 93       	push	r24
    2bbe:	ce 01       	movw	r24, r28
    2bc0:	01 96       	adiw	r24, 0x01	; 1
    2bc2:	9f 93       	push	r25
    2bc4:	8f 93       	push	r24
    2bc6:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
    2bca:	0f b6       	in	r0, 0x3f	; 63
    2bcc:	f8 94       	cli
    2bce:	de bf       	out	0x3e, r29	; 62
    2bd0:	0f be       	out	0x3f, r0	; 63
    2bd2:	cd bf       	out	0x3d, r28	; 61
    2bd4:	88 23       	and	r24, r24
    2bd6:	d1 f0       	breq	.+52     	; 0x2c0c <_Z14Pressuresensorv+0x1c6>
    2bd8:	81 50       	subi	r24, 0x01	; 1
    2bda:	68 94       	set
    2bdc:	ee 24       	eor	r14, r14
    2bde:	e1 f8       	bld	r14, 1
    2be0:	f1 2c       	mov	r15, r1
    2be2:	ec 0e       	add	r14, r28
    2be4:	fd 1e       	adc	r15, r29
    2be6:	e8 0e       	add	r14, r24
    2be8:	f1 1c       	adc	r15, r1
    2bea:	0c 2d       	mov	r16, r12
    2bec:	1d 2d       	mov	r17, r13
    2bee:	d1 2c       	mov	r13, r1
    2bf0:	f8 01       	movw	r30, r16
    2bf2:	61 91       	ld	r22, Z+
    2bf4:	8f 01       	movw	r16, r30
    2bf6:	20 e3       	ldi	r18, 0x30	; 48
    2bf8:	4d 2d       	mov	r20, r13
    2bfa:	83 e8       	ldi	r24, 0x83	; 131
    2bfc:	93 e0       	ldi	r25, 0x03	; 3
    2bfe:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2c02:	f6 e0       	ldi	r31, 0x06	; 6
    2c04:	df 0e       	add	r13, r31
    2c06:	0e 15       	cp	r16, r14
    2c08:	1f 05       	cpc	r17, r15
    2c0a:	91 f7       	brne	.-28     	; 0x2bf0 <_Z14Pressuresensorv+0x1aa>
    2c0c:	64 96       	adiw	r28, 0x14	; 20
    2c0e:	0f b6       	in	r0, 0x3f	; 63
    2c10:	f8 94       	cli
    2c12:	de bf       	out	0x3e, r29	; 62
    2c14:	0f be       	out	0x3f, r0	; 63
    2c16:	cd bf       	out	0x3d, r28	; 61
    2c18:	df 91       	pop	r29
    2c1a:	cf 91       	pop	r28
    2c1c:	1f 91       	pop	r17
    2c1e:	0f 91       	pop	r16
    2c20:	ff 90       	pop	r15
    2c22:	ef 90       	pop	r14
    2c24:	df 90       	pop	r13
    2c26:	cf 90       	pop	r12
    2c28:	bf 90       	pop	r11
    2c2a:	08 95       	ret

00002c2c <_Z11Wanderseitev>:

void Wanderseite(){
    2c2c:	bf 92       	push	r11
    2c2e:	cf 92       	push	r12
    2c30:	df 92       	push	r13
    2c32:	ef 92       	push	r14
    2c34:	ff 92       	push	r15
    2c36:	0f 93       	push	r16
    2c38:	1f 93       	push	r17
    2c3a:	cf 93       	push	r28
    2c3c:	df 93       	push	r29
    2c3e:	cd b7       	in	r28, 0x3d	; 61
    2c40:	de b7       	in	r29, 0x3e	; 62
    2c42:	64 97       	sbiw	r28, 0x14	; 20
    2c44:	0f b6       	in	r0, 0x3f	; 63
    2c46:	f8 94       	cli
    2c48:	de bf       	out	0x3e, r29	; 62
    2c4a:	0f be       	out	0x3f, r0	; 63
    2c4c:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	uint8_t buffersize=0;
	oled.clearFrame();
    2c4e:	83 e8       	ldi	r24, 0x83	; 131
    2c50:	93 e0       	ldi	r25, 0x03	; 3
    2c52:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	header(0);
    2c56:	80 e0       	ldi	r24, 0x00	; 0
    2c58:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <_Z6headerh>
	bottom(0);
    2c5c:	80 e0       	ldi	r24, 0x00	; 0
    2c5e:	0e 94 3c 0b 	call	0x1678	; 0x1678 <_Z6bottomh>
	
	Accelerometer.readtempera();
    2c62:	8b e5       	ldi	r24, 0x5B	; 91
    2c64:	93 e0       	ldi	r25, 0x03	; 3
    2c66:	0e 94 f7 26 	call	0x4dee	; 0x4dee <_ZN7LSM303D11readtemperaEv>
	Accelerometer.readacc();
    2c6a:	8b e5       	ldi	r24, 0x5B	; 91
    2c6c:	93 e0       	ldi	r25, 0x03	; 3
    2c6e:	0e 94 5a 26 	call	0x4cb4	; 0x4cb4 <_ZN7LSM303D7readaccEv>
	
	buffersize=sprintf(buffer,"LSM303D Daten:");
    2c72:	8f e0       	ldi	r24, 0x0F	; 15
    2c74:	e7 ec       	ldi	r30, 0xC7	; 199
    2c76:	f2 e0       	ldi	r31, 0x02	; 2
    2c78:	8e 01       	movw	r16, r28
    2c7a:	0f 5f       	subi	r16, 0xFF	; 255
    2c7c:	1f 4f       	sbci	r17, 0xFF	; 255
    2c7e:	d8 01       	movw	r26, r16
    2c80:	01 90       	ld	r0, Z+
    2c82:	0d 92       	st	X+, r0
    2c84:	8a 95       	dec	r24
    2c86:	e1 f7       	brne	.-8      	; 0x2c80 <_Z11Wanderseitev+0x54>
    2c88:	e0 2e       	mov	r14, r16
    2c8a:	f1 2e       	mov	r15, r17
    2c8c:	68 01       	movw	r12, r16
    2c8e:	10 e0       	ldi	r17, 0x00	; 0
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,1*charhighte);}
    2c90:	f6 01       	movw	r30, r12
    2c92:	61 91       	ld	r22, Z+
    2c94:	6f 01       	movw	r12, r30
    2c96:	28 e0       	ldi	r18, 0x08	; 8
    2c98:	41 2f       	mov	r20, r17
    2c9a:	83 e8       	ldi	r24, 0x83	; 131
    2c9c:	93 e0       	ldi	r25, 0x03	; 3
    2c9e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2ca2:	1a 5f       	subi	r17, 0xFA	; 250
    2ca4:	14 35       	cpi	r17, 0x54	; 84
    2ca6:	a1 f7       	brne	.-24     	; 0x2c90 <_Z11Wanderseitev+0x64>
	buffersize=sprintf(buffer,"X: %.1f",Accelerometer.roll*180.0/M_PI);
    2ca8:	20 e0       	ldi	r18, 0x00	; 0
    2caa:	30 e0       	ldi	r19, 0x00	; 0
    2cac:	44 e3       	ldi	r20, 0x34	; 52
    2cae:	53 e4       	ldi	r21, 0x43	; 67
    2cb0:	60 91 63 03 	lds	r22, 0x0363
    2cb4:	70 91 64 03 	lds	r23, 0x0364
    2cb8:	80 91 65 03 	lds	r24, 0x0365
    2cbc:	90 91 66 03 	lds	r25, 0x0366
    2cc0:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    2cc4:	2b ed       	ldi	r18, 0xDB	; 219
    2cc6:	3f e0       	ldi	r19, 0x0F	; 15
    2cc8:	49 e4       	ldi	r20, 0x49	; 73
    2cca:	50 e4       	ldi	r21, 0x40	; 64
    2ccc:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
    2cd0:	9f 93       	push	r25
    2cd2:	8f 93       	push	r24
    2cd4:	7f 93       	push	r23
    2cd6:	6f 93       	push	r22
    2cd8:	86 ed       	ldi	r24, 0xD6	; 214
    2cda:	92 e0       	ldi	r25, 0x02	; 2
    2cdc:	9f 93       	push	r25
    2cde:	8f 93       	push	r24
    2ce0:	ce 01       	movw	r24, r28
    2ce2:	01 96       	adiw	r24, 0x01	; 1
    2ce4:	9f 93       	push	r25
    2ce6:	8f 93       	push	r24
    2ce8:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
    2cec:	0f b6       	in	r0, 0x3f	; 63
    2cee:	f8 94       	cli
    2cf0:	de bf       	out	0x3e, r29	; 62
    2cf2:	0f be       	out	0x3f, r0	; 63
    2cf4:	cd bf       	out	0x3d, r28	; 61
    2cf6:	88 23       	and	r24, r24
    2cf8:	d1 f0       	breq	.+52     	; 0x2d2e <_Z11Wanderseitev+0x102>
    2cfa:	81 50       	subi	r24, 0x01	; 1
    2cfc:	68 94       	set
    2cfe:	cc 24       	eor	r12, r12
    2d00:	c1 f8       	bld	r12, 1
    2d02:	d1 2c       	mov	r13, r1
    2d04:	cc 0e       	add	r12, r28
    2d06:	dd 1e       	adc	r13, r29
    2d08:	c8 0e       	add	r12, r24
    2d0a:	d1 1c       	adc	r13, r1
    2d0c:	0e 2d       	mov	r16, r14
    2d0e:	1f 2d       	mov	r17, r15
    2d10:	b1 2c       	mov	r11, r1
    2d12:	f8 01       	movw	r30, r16
    2d14:	61 91       	ld	r22, Z+
    2d16:	8f 01       	movw	r16, r30
    2d18:	28 e1       	ldi	r18, 0x18	; 24
    2d1a:	4b 2d       	mov	r20, r11
    2d1c:	83 e8       	ldi	r24, 0x83	; 131
    2d1e:	93 e0       	ldi	r25, 0x03	; 3
    2d20:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2d24:	f6 e0       	ldi	r31, 0x06	; 6
    2d26:	bf 0e       	add	r11, r31
    2d28:	0c 15       	cp	r16, r12
    2d2a:	1d 05       	cpc	r17, r13
    2d2c:	91 f7       	brne	.-28     	; 0x2d12 <_Z11Wanderseitev+0xe6>
	buffersize=sprintf(buffer,"Y: %.1f",Accelerometer.pitch*180.0/M_PI);
    2d2e:	20 e0       	ldi	r18, 0x00	; 0
    2d30:	30 e0       	ldi	r19, 0x00	; 0
    2d32:	44 e3       	ldi	r20, 0x34	; 52
    2d34:	53 e4       	ldi	r21, 0x43	; 67
    2d36:	60 91 67 03 	lds	r22, 0x0367
    2d3a:	70 91 68 03 	lds	r23, 0x0368
    2d3e:	80 91 69 03 	lds	r24, 0x0369
    2d42:	90 91 6a 03 	lds	r25, 0x036A
    2d46:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    2d4a:	2b ed       	ldi	r18, 0xDB	; 219
    2d4c:	3f e0       	ldi	r19, 0x0F	; 15
    2d4e:	49 e4       	ldi	r20, 0x49	; 73
    2d50:	50 e4       	ldi	r21, 0x40	; 64
    2d52:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
    2d56:	9f 93       	push	r25
    2d58:	8f 93       	push	r24
    2d5a:	7f 93       	push	r23
    2d5c:	6f 93       	push	r22
    2d5e:	8e ed       	ldi	r24, 0xDE	; 222
    2d60:	92 e0       	ldi	r25, 0x02	; 2
    2d62:	9f 93       	push	r25
    2d64:	8f 93       	push	r24
    2d66:	ce 01       	movw	r24, r28
    2d68:	01 96       	adiw	r24, 0x01	; 1
    2d6a:	9f 93       	push	r25
    2d6c:	8f 93       	push	r24
    2d6e:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,4*charhighte);}
    2d72:	0f b6       	in	r0, 0x3f	; 63
    2d74:	f8 94       	cli
    2d76:	de bf       	out	0x3e, r29	; 62
    2d78:	0f be       	out	0x3f, r0	; 63
    2d7a:	cd bf       	out	0x3d, r28	; 61
    2d7c:	88 23       	and	r24, r24
    2d7e:	d1 f0       	breq	.+52     	; 0x2db4 <_Z11Wanderseitev+0x188>
    2d80:	81 50       	subi	r24, 0x01	; 1
    2d82:	68 94       	set
    2d84:	cc 24       	eor	r12, r12
    2d86:	c1 f8       	bld	r12, 1
    2d88:	d1 2c       	mov	r13, r1
    2d8a:	cc 0e       	add	r12, r28
    2d8c:	dd 1e       	adc	r13, r29
    2d8e:	c8 0e       	add	r12, r24
    2d90:	d1 1c       	adc	r13, r1
    2d92:	0e 2d       	mov	r16, r14
    2d94:	1f 2d       	mov	r17, r15
    2d96:	b1 2c       	mov	r11, r1
    2d98:	f8 01       	movw	r30, r16
    2d9a:	61 91       	ld	r22, Z+
    2d9c:	8f 01       	movw	r16, r30
    2d9e:	20 e2       	ldi	r18, 0x20	; 32
    2da0:	4b 2d       	mov	r20, r11
    2da2:	83 e8       	ldi	r24, 0x83	; 131
    2da4:	93 e0       	ldi	r25, 0x03	; 3
    2da6:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2daa:	f6 e0       	ldi	r31, 0x06	; 6
    2dac:	bf 0e       	add	r11, r31
    2dae:	0c 15       	cp	r16, r12
    2db0:	1d 05       	cpc	r17, r13
    2db2:	91 f7       	brne	.-28     	; 0x2d98 <_Z11Wanderseitev+0x16c>
	buffersize=sprintf(buffer,"Z: %.1i",Accelerometer.achsen_A[2]);
    2db4:	ef e5       	ldi	r30, 0x5F	; 95
    2db6:	f3 e0       	ldi	r31, 0x03	; 3
    2db8:	81 81       	ldd	r24, Z+1	; 0x01
    2dba:	8f 93       	push	r24
    2dbc:	80 81       	ld	r24, Z
    2dbe:	8f 93       	push	r24
    2dc0:	86 ee       	ldi	r24, 0xE6	; 230
    2dc2:	92 e0       	ldi	r25, 0x02	; 2
    2dc4:	9f 93       	push	r25
    2dc6:	8f 93       	push	r24
    2dc8:	ce 01       	movw	r24, r28
    2dca:	01 96       	adiw	r24, 0x01	; 1
    2dcc:	9f 93       	push	r25
    2dce:	8f 93       	push	r24
    2dd0:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,5*charhighte);}	
    2dd4:	0f 90       	pop	r0
    2dd6:	0f 90       	pop	r0
    2dd8:	0f 90       	pop	r0
    2dda:	0f 90       	pop	r0
    2ddc:	0f 90       	pop	r0
    2dde:	0f 90       	pop	r0
    2de0:	88 23       	and	r24, r24
    2de2:	d1 f0       	breq	.+52     	; 0x2e18 <_Z11Wanderseitev+0x1ec>
    2de4:	81 50       	subi	r24, 0x01	; 1
    2de6:	68 94       	set
    2de8:	cc 24       	eor	r12, r12
    2dea:	c1 f8       	bld	r12, 1
    2dec:	d1 2c       	mov	r13, r1
    2dee:	cc 0e       	add	r12, r28
    2df0:	dd 1e       	adc	r13, r29
    2df2:	c8 0e       	add	r12, r24
    2df4:	d1 1c       	adc	r13, r1
    2df6:	0e 2d       	mov	r16, r14
    2df8:	1f 2d       	mov	r17, r15
    2dfa:	b1 2c       	mov	r11, r1
    2dfc:	f8 01       	movw	r30, r16
    2dfe:	61 91       	ld	r22, Z+
    2e00:	8f 01       	movw	r16, r30
    2e02:	28 e2       	ldi	r18, 0x28	; 40
    2e04:	4b 2d       	mov	r20, r11
    2e06:	83 e8       	ldi	r24, 0x83	; 131
    2e08:	93 e0       	ldi	r25, 0x03	; 3
    2e0a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2e0e:	f6 e0       	ldi	r31, 0x06	; 6
    2e10:	bf 0e       	add	r11, r31
    2e12:	0c 15       	cp	r16, r12
    2e14:	1d 05       	cpc	r17, r13
    2e16:	91 f7       	brne	.-28     	; 0x2dfc <_Z11Wanderseitev+0x1d0>
		
	buffersize=sprintf(buffer,"%i C",Accelerometer.Tempera);
    2e18:	e1 e6       	ldi	r30, 0x61	; 97
    2e1a:	f3 e0       	ldi	r31, 0x03	; 3
    2e1c:	81 81       	ldd	r24, Z+1	; 0x01
    2e1e:	8f 93       	push	r24
    2e20:	80 81       	ld	r24, Z
    2e22:	8f 93       	push	r24
    2e24:	8e ee       	ldi	r24, 0xEE	; 238
    2e26:	92 e0       	ldi	r25, 0x02	; 2
    2e28:	9f 93       	push	r25
    2e2a:	8f 93       	push	r24
    2e2c:	ce 01       	movw	r24, r28
    2e2e:	01 96       	adiw	r24, 0x01	; 1
    2e30:	9f 93       	push	r25
    2e32:	8f 93       	push	r24
    2e34:	0e 94 18 34 	call	0x6830	; 0x6830 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,6*charhighte);}
    2e38:	0f 90       	pop	r0
    2e3a:	0f 90       	pop	r0
    2e3c:	0f 90       	pop	r0
    2e3e:	0f 90       	pop	r0
    2e40:	0f 90       	pop	r0
    2e42:	0f 90       	pop	r0
    2e44:	88 23       	and	r24, r24
    2e46:	d1 f0       	breq	.+52     	; 0x2e7c <_Z11Wanderseitev+0x250>
    2e48:	81 50       	subi	r24, 0x01	; 1
    2e4a:	68 94       	set
    2e4c:	cc 24       	eor	r12, r12
    2e4e:	c1 f8       	bld	r12, 1
    2e50:	d1 2c       	mov	r13, r1
    2e52:	cc 0e       	add	r12, r28
    2e54:	dd 1e       	adc	r13, r29
    2e56:	c8 0e       	add	r12, r24
    2e58:	d1 1c       	adc	r13, r1
    2e5a:	0e 2d       	mov	r16, r14
    2e5c:	1f 2d       	mov	r17, r15
    2e5e:	f1 2c       	mov	r15, r1
    2e60:	f8 01       	movw	r30, r16
    2e62:	61 91       	ld	r22, Z+
    2e64:	8f 01       	movw	r16, r30
    2e66:	20 e3       	ldi	r18, 0x30	; 48
    2e68:	4f 2d       	mov	r20, r15
    2e6a:	83 e8       	ldi	r24, 0x83	; 131
    2e6c:	93 e0       	ldi	r25, 0x03	; 3
    2e6e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2e72:	f6 e0       	ldi	r31, 0x06	; 6
    2e74:	ff 0e       	add	r15, r31
    2e76:	0c 15       	cp	r16, r12
    2e78:	1d 05       	cpc	r17, r13
    2e7a:	91 f7       	brne	.-28     	; 0x2e60 <_Z11Wanderseitev+0x234>
	
}
    2e7c:	64 96       	adiw	r28, 0x14	; 20
    2e7e:	0f b6       	in	r0, 0x3f	; 63
    2e80:	f8 94       	cli
    2e82:	de bf       	out	0x3e, r29	; 62
    2e84:	0f be       	out	0x3f, r0	; 63
    2e86:	cd bf       	out	0x3d, r28	; 61
    2e88:	df 91       	pop	r29
    2e8a:	cf 91       	pop	r28
    2e8c:	1f 91       	pop	r17
    2e8e:	0f 91       	pop	r16
    2e90:	ff 90       	pop	r15
    2e92:	ef 90       	pop	r14
    2e94:	df 90       	pop	r13
    2e96:	cf 90       	pop	r12
    2e98:	bf 90       	pop	r11
    2e9a:	08 95       	ret

00002e9c <_Z13uhreinstellenv>:

void uhreinstellen(){
    2e9c:	2f 92       	push	r2
    2e9e:	3f 92       	push	r3
    2ea0:	4f 92       	push	r4
    2ea2:	5f 92       	push	r5
    2ea4:	6f 92       	push	r6
    2ea6:	7f 92       	push	r7
    2ea8:	8f 92       	push	r8
    2eaa:	9f 92       	push	r9
    2eac:	af 92       	push	r10
    2eae:	bf 92       	push	r11
    2eb0:	cf 92       	push	r12
    2eb2:	df 92       	push	r13
    2eb4:	ef 92       	push	r14
    2eb6:	ff 92       	push	r15
    2eb8:	0f 93       	push	r16
    2eba:	1f 93       	push	r17
    2ebc:	cf 93       	push	r28
    2ebe:	df 93       	push	r29
    2ec0:	cd b7       	in	r28, 0x3d	; 61
    2ec2:	de b7       	in	r29, 0x3e	; 62
    2ec4:	66 97       	sbiw	r28, 0x16	; 22
    2ec6:	0f b6       	in	r0, 0x3f	; 63
    2ec8:	f8 94       	cli
    2eca:	de bf       	out	0x3e, r29	; 62
    2ecc:	0f be       	out	0x3f, r0	; 63
    2ece:	cd bf       	out	0x3d, r28	; 61
	rtc.RTCstop();
    2ed0:	84 e8       	ldi	r24, 0x84	; 132
    2ed2:	97 e0       	ldi	r25, 0x07	; 7
    2ed4:	0e 94 b9 2b 	call	0x5772	; 0x5772 <_ZN3RTC7RTCstopEv>
	
	oled.clearFrame();
    2ed8:	83 e8       	ldi	r24, 0x83	; 131
    2eda:	93 e0       	ldi	r25, 0x03	; 3
    2edc:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
    2ee0:	91 2c       	mov	r9, r1
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2ee2:	0f 2e       	mov	r0, r31
    2ee4:	ff e0       	ldi	r31, 0x0F	; 15
    2ee6:	6f 2e       	mov	r6, r31
    2ee8:	f0 2d       	mov	r31, r0
    2eea:	ce 01       	movw	r24, r28
    2eec:	01 96       	adiw	r24, 0x01	; 1
    2eee:	7c 01       	movw	r14, r24
    2ef0:	78 2e       	mov	r7, r24
    2ef2:	8f 2c       	mov	r8, r15
    2ef4:	b1 2c       	mov	r11, r1
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2ef6:	8d 8b       	std	Y+21, r24	; 0x15
    2ef8:	fe 8a       	std	Y+22, r15	; 0x16
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2efa:	0f 2e       	mov	r0, r31
    2efc:	fd ec       	ldi	r31, 0xCD	; 205
    2efe:	af 2e       	mov	r10, r31
    2f00:	f0 2d       	mov	r31, r0
		buffer[1]=rtc.Stunden%10;
		buffer[2]=':';
		buffer[3]=rtc.Minuten/10;
		buffer[4]=rtc.Minuten%10;
		buffer[5]=' ';
		buffer[6]=rtc.Tag/10;
    2f02:	0f 2e       	mov	r0, r31
    2f04:	f8 e9       	ldi	r31, 0x98	; 152
    2f06:	4f 2e       	mov	r4, r31
    2f08:	f7 e0       	ldi	r31, 0x07	; 7
    2f0a:	5f 2e       	mov	r5, r31
    2f0c:	f0 2d       	mov	r31, r0
		buffer[7]=rtc.Tag%10;
		buffer[8]='.';
		buffer[9]=rtc.Monat/10;
    2f0e:	0f 2e       	mov	r0, r31
    2f10:	fa e9       	ldi	r31, 0x9A	; 154
    2f12:	cf 2e       	mov	r12, r31
    2f14:	f7 e0       	ldi	r31, 0x07	; 7
    2f16:	df 2e       	mov	r13, r31
    2f18:	f0 2d       	mov	r31, r0
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2f1a:	e3 ef       	ldi	r30, 0xF3	; 243
    2f1c:	f2 e0       	ldi	r31, 0x02	; 2
    2f1e:	a7 2d       	mov	r26, r7
    2f20:	b8 2d       	mov	r27, r8
    2f22:	86 2d       	mov	r24, r6
    2f24:	01 90       	ld	r0, Z+
    2f26:	0d 92       	st	X+, r0
    2f28:	8a 95       	dec	r24
    2f2a:	e1 f7       	brne	.-8      	; 0x2f24 <_Z13uhreinstellenv+0x88>
    2f2c:	27 2c       	mov	r2, r7
    2f2e:	38 2c       	mov	r3, r8
    2f30:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
    2f32:	f1 01       	movw	r30, r2
    2f34:	61 91       	ld	r22, Z+
    2f36:	1f 01       	movw	r2, r30
    2f38:	2b 2d       	mov	r18, r11
    2f3a:	41 2f       	mov	r20, r17
    2f3c:	83 e8       	ldi	r24, 0x83	; 131
    2f3e:	93 e0       	ldi	r25, 0x03	; 3
    2f40:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2f44:	1a 5f       	subi	r17, 0xFA	; 250
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
    2f46:	14 35       	cpi	r17, 0x54	; 84
    2f48:	a1 f7       	brne	.-24     	; 0x2f32 <_Z13uhreinstellenv+0x96>
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2f4a:	ef e0       	ldi	r30, 0x0F	; 15
    2f4c:	f1 e0       	ldi	r31, 0x01	; 1
    2f4e:	a7 2d       	mov	r26, r7
    2f50:	b8 2d       	mov	r27, r8
    2f52:	86 2d       	mov	r24, r6
    2f54:	01 90       	ld	r0, Z+
    2f56:	0d 92       	st	X+, r0
    2f58:	8a 95       	dec	r24
    2f5a:	e1 f7       	brne	.-8      	; 0x2f54 <_Z13uhreinstellenv+0xb8>
    2f5c:	2d 88       	ldd	r2, Y+21	; 0x15
    2f5e:	3e 88       	ldd	r3, Y+22	; 0x16
    2f60:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
    2f62:	f1 01       	movw	r30, r2
    2f64:	61 91       	ld	r22, Z+
    2f66:	1f 01       	movw	r2, r30
    2f68:	28 e0       	ldi	r18, 0x08	; 8
    2f6a:	41 2f       	mov	r20, r17
    2f6c:	83 e8       	ldi	r24, 0x83	; 131
    2f6e:	93 e0       	ldi	r25, 0x03	; 3
    2f70:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2f74:	1a 5f       	subi	r17, 0xFA	; 250
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
		for(uint8_t i = 0; i<buffersize;i++){
    2f76:	14 35       	cpi	r17, 0x54	; 84
    2f78:	a1 f7       	brne	.-24     	; 0x2f62 <_Z13uhreinstellenv+0xc6>
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2f7a:	e4 e9       	ldi	r30, 0x94	; 148
    2f7c:	f7 e0       	ldi	r31, 0x07	; 7
    2f7e:	80 81       	ld	r24, Z
    2f80:	8a 9d       	mul	r24, r10
    2f82:	91 2d       	mov	r25, r1
    2f84:	11 24       	eor	r1, r1
    2f86:	96 95       	lsr	r25
    2f88:	96 95       	lsr	r25
    2f8a:	96 95       	lsr	r25
    2f8c:	99 83       	std	Y+1, r25	; 0x01
		buffer[1]=rtc.Stunden%10;
    2f8e:	99 0f       	add	r25, r25
    2f90:	29 2f       	mov	r18, r25
    2f92:	22 0f       	add	r18, r18
    2f94:	22 0f       	add	r18, r18
    2f96:	92 0f       	add	r25, r18
    2f98:	89 1b       	sub	r24, r25
    2f9a:	8a 83       	std	Y+2, r24	; 0x02
		buffer[2]=':';
    2f9c:	fa e3       	ldi	r31, 0x3A	; 58
    2f9e:	fb 83       	std	Y+3, r31	; 0x03
		buffer[3]=rtc.Minuten/10;
    2fa0:	e5 e9       	ldi	r30, 0x95	; 149
    2fa2:	f7 e0       	ldi	r31, 0x07	; 7
    2fa4:	80 81       	ld	r24, Z
    2fa6:	8a 9d       	mul	r24, r10
    2fa8:	91 2d       	mov	r25, r1
    2faa:	11 24       	eor	r1, r1
    2fac:	96 95       	lsr	r25
    2fae:	96 95       	lsr	r25
    2fb0:	96 95       	lsr	r25
    2fb2:	9c 83       	std	Y+4, r25	; 0x04
		buffer[4]=rtc.Minuten%10;
    2fb4:	99 0f       	add	r25, r25
    2fb6:	29 2f       	mov	r18, r25
    2fb8:	22 0f       	add	r18, r18
    2fba:	22 0f       	add	r18, r18
    2fbc:	92 0f       	add	r25, r18
    2fbe:	89 1b       	sub	r24, r25
    2fc0:	8d 83       	std	Y+5, r24	; 0x05
		buffer[5]=' ';
    2fc2:	80 e2       	ldi	r24, 0x20	; 32
    2fc4:	8e 83       	std	Y+6, r24	; 0x06
		buffer[6]=rtc.Tag/10;
    2fc6:	f2 01       	movw	r30, r4
    2fc8:	80 81       	ld	r24, Z
    2fca:	8a 9d       	mul	r24, r10
    2fcc:	91 2d       	mov	r25, r1
    2fce:	11 24       	eor	r1, r1
    2fd0:	96 95       	lsr	r25
    2fd2:	96 95       	lsr	r25
    2fd4:	96 95       	lsr	r25
    2fd6:	9f 83       	std	Y+7, r25	; 0x07
		buffer[7]=rtc.Tag%10;
    2fd8:	99 0f       	add	r25, r25
    2fda:	29 2f       	mov	r18, r25
    2fdc:	22 0f       	add	r18, r18
    2fde:	22 0f       	add	r18, r18
    2fe0:	92 0f       	add	r25, r18
    2fe2:	89 1b       	sub	r24, r25
    2fe4:	88 87       	std	Y+8, r24	; 0x08
		buffer[8]='.';
    2fe6:	8e e2       	ldi	r24, 0x2E	; 46
    2fe8:	89 87       	std	Y+9, r24	; 0x09
		buffer[9]=rtc.Monat/10;
    2fea:	f6 01       	movw	r30, r12
    2fec:	90 81       	ld	r25, Z
    2fee:	9a 9d       	mul	r25, r10
    2ff0:	21 2d       	mov	r18, r1
    2ff2:	11 24       	eor	r1, r1
    2ff4:	26 95       	lsr	r18
    2ff6:	26 95       	lsr	r18
    2ff8:	26 95       	lsr	r18
    2ffa:	2a 87       	std	Y+10, r18	; 0x0a
		buffer[10]=rtc.Monat%10;
    2ffc:	22 0f       	add	r18, r18
    2ffe:	32 2f       	mov	r19, r18
    3000:	33 0f       	add	r19, r19
    3002:	33 0f       	add	r19, r19
    3004:	23 0f       	add	r18, r19
    3006:	92 1b       	sub	r25, r18
    3008:	9b 87       	std	Y+11, r25	; 0x0b
		buffer[11]='.';
    300a:	8c 87       	std	Y+12, r24	; 0x0c
		buffer[12]=rtc.Jahr/10;
    300c:	eb e9       	ldi	r30, 0x9B	; 155
    300e:	f7 e0       	ldi	r31, 0x07	; 7
    3010:	80 81       	ld	r24, Z
    3012:	8a 9d       	mul	r24, r10
    3014:	91 2d       	mov	r25, r1
    3016:	11 24       	eor	r1, r1
    3018:	96 95       	lsr	r25
    301a:	96 95       	lsr	r25
    301c:	96 95       	lsr	r25
    301e:	9d 87       	std	Y+13, r25	; 0x0d
		buffer[13]=rtc.Jahr%10;
    3020:	99 0f       	add	r25, r25
    3022:	29 2f       	mov	r18, r25
    3024:	22 0f       	add	r18, r18
    3026:	22 0f       	add	r18, r18
    3028:	92 0f       	add	r25, r18
    302a:	89 1b       	sub	r24, r25
    302c:	8e 87       	std	Y+14, r24	; 0x0e
    302e:	3b 2c       	mov	r3, r11
    3030:	01 e0       	ldi	r16, 0x01	; 1
    3032:	1b 2d       	mov	r17, r11
    3034:	04 c0       	rjmp	.+8      	; 0x303e <_Z13uhreinstellenv+0x1a2>
    3036:	1f 5f       	subi	r17, 0xFF	; 255
    3038:	0f 5f       	subi	r16, 0xFF	; 255
    303a:	f0 e1       	ldi	r31, 0x10	; 16
    303c:	3f 0e       	add	r3, r31
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
			if(i!=2){
    303e:	12 30       	cpi	r17, 0x02	; 2
    3040:	69 f0       	breq	.+26     	; 0x305c <_Z13uhreinstellenv+0x1c0>
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
    3042:	20 e1       	ldi	r18, 0x10	; 16
    3044:	43 2d       	mov	r20, r3
    3046:	f7 01       	movw	r30, r14
    3048:	e1 0f       	add	r30, r17
    304a:	f1 1d       	adc	r31, r1
    304c:	60 81       	ld	r22, Z
    304e:	83 e8       	ldi	r24, 0x83	; 131
    3050:	93 e0       	ldi	r25, 0x03	; 3
    3052:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    3056:	05 30       	cpi	r16, 0x05	; 5
    3058:	70 f3       	brcs	.-36     	; 0x3036 <_Z13uhreinstellenv+0x19a>
    305a:	08 c0       	rjmp	.+16     	; 0x306c <_Z13uhreinstellenv+0x1d0>
			if(i!=2){
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
    305c:	24 e1       	ldi	r18, 0x14	; 20
    305e:	48 e2       	ldi	r20, 0x28	; 40
    3060:	6b 81       	ldd	r22, Y+3	; 0x03
    3062:	83 e8       	ldi	r24, 0x83	; 131
    3064:	93 e0       	ldi	r25, 0x03	; 3
    3066:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    306a:	e5 cf       	rjmp	.-54     	; 0x3036 <_Z13uhreinstellenv+0x19a>
    306c:	8e 01       	movw	r16, r28
    306e:	09 5f       	subi	r16, 0xF9	; 249
    3070:	1f 4f       	sbci	r17, 0xFF	; 255
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    3072:	2b 2c       	mov	r2, r11
    3074:	0f 2e       	mov	r0, r31
    3076:	f6 e0       	ldi	r31, 0x06	; 6
    3078:	3f 2e       	mov	r3, r31
    307a:	f0 2d       	mov	r31, r0
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
			if(i!=8 && i!=11){
    307c:	88 e0       	ldi	r24, 0x08	; 8
    307e:	38 16       	cp	r3, r24
    3080:	61 f0       	breq	.+24     	; 0x309a <_Z13uhreinstellenv+0x1fe>
    3082:	9b e0       	ldi	r25, 0x0B	; 11
    3084:	39 16       	cp	r3, r25
    3086:	49 f0       	breq	.+18     	; 0x309a <_Z13uhreinstellenv+0x1fe>
				oled.draw_number16x16(buffer[i],i*numbersmalsize-6*numbersmalsize,4*charhighte);
    3088:	20 e2       	ldi	r18, 0x20	; 32
    308a:	42 2d       	mov	r20, r2
    308c:	f8 01       	movw	r30, r16
    308e:	60 81       	ld	r22, Z
    3090:	83 e8       	ldi	r24, 0x83	; 131
    3092:	93 e0       	ldi	r25, 0x03	; 3
    3094:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    3098:	09 c0       	rjmp	.+18     	; 0x30ac <_Z13uhreinstellenv+0x210>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
    309a:	28 e2       	ldi	r18, 0x28	; 40
    309c:	48 e0       	ldi	r20, 0x08	; 8
    309e:	42 0d       	add	r20, r2
    30a0:	f8 01       	movw	r30, r16
    30a2:	60 81       	ld	r22, Z
    30a4:	83 e8       	ldi	r24, 0x83	; 131
    30a6:	93 e0       	ldi	r25, 0x03	; 3
    30a8:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
    30ac:	33 94       	inc	r3
    30ae:	0f 5f       	subi	r16, 0xFF	; 255
    30b0:	1f 4f       	sbci	r17, 0xFF	; 255
    30b2:	f0 e1       	ldi	r31, 0x10	; 16
    30b4:	2f 0e       	add	r2, r31
    30b6:	8e e0       	ldi	r24, 0x0E	; 14
    30b8:	38 12       	cpse	r3, r24
    30ba:	e0 cf       	rjmp	.-64     	; 0x307c <_Z13uhreinstellenv+0x1e0>
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
			}
		}

		oled.sendFrame();
    30bc:	83 e8       	ldi	r24, 0x83	; 131
    30be:	93 e0       	ldi	r25, 0x03	; 3
    30c0:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN7Display9sendFrameEv>
		oled.clearFrame();
    30c4:	83 e8       	ldi	r24, 0x83	; 131
    30c6:	93 e0       	ldi	r25, 0x03	; 3
    30c8:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
		switch (pos) {
    30cc:	89 2d       	mov	r24, r9
    30ce:	90 e0       	ldi	r25, 0x00	; 0
    30d0:	8a 30       	cpi	r24, 0x0A	; 10
    30d2:	91 05       	cpc	r25, r1
    30d4:	08 f0       	brcs	.+2      	; 0x30d8 <_Z13uhreinstellenv+0x23c>
    30d6:	47 c2       	rjmp	.+1166   	; 0x3566 <_Z13uhreinstellenv+0x6ca>
    30d8:	fc 01       	movw	r30, r24
    30da:	ea 5b       	subi	r30, 0xBA	; 186
    30dc:	ff 4f       	sbci	r31, 0xFF	; 255
    30de:	0c 94 df 32 	jmp	0x65be	; 0x65be <__tablejump2__>
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    30e2:	82 e8       	ldi	r24, 0x82	; 130
    30e4:	93 e0       	ldi	r25, 0x03	; 3
    30e6:	0e 94 15 24 	call	0x482a	; 0x482a <_ZN9Interface17ZahlenausTastaturEv>
    30ea:	88 0f       	add	r24, r24
    30ec:	98 2f       	mov	r25, r24
    30ee:	99 0f       	add	r25, r25
    30f0:	99 0f       	add	r25, r25
    30f2:	89 0f       	add	r24, r25
				if(rtc.Stunden>=24){
    30f4:	88 31       	cpi	r24, 0x18	; 24
    30f6:	08 f4       	brcc	.+2      	; 0x30fa <_Z13uhreinstellenv+0x25e>
    30f8:	51 c2       	rjmp	.+1186   	; 0x359c <_Z13uhreinstellenv+0x700>
					rtc.Stunden=0;
    30fa:	e4 e9       	ldi	r30, 0x94	; 148
    30fc:	f7 e0       	ldi	r31, 0x07	; 7
    30fe:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    3100:	e2 e0       	ldi	r30, 0x02	; 2
    3102:	f3 e0       	ldi	r31, 0x03	; 3
    3104:	a7 2d       	mov	r26, r7
    3106:	b8 2d       	mov	r27, r8
    3108:	86 2d       	mov	r24, r6
    310a:	01 90       	ld	r0, Z+
    310c:	0d 92       	st	X+, r0
    310e:	8a 95       	dec	r24
    3110:	e1 f7       	brne	.-8      	; 0x310a <_Z13uhreinstellenv+0x26e>
    3112:	2d 88       	ldd	r2, Y+21	; 0x15
    3114:	3e 88       	ldd	r3, Y+22	; 0x16
    3116:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3118:	f1 01       	movw	r30, r2
    311a:	61 91       	ld	r22, Z+
    311c:	1f 01       	movw	r2, r30
    311e:	28 e3       	ldi	r18, 0x38	; 56
    3120:	41 2f       	mov	r20, r17
    3122:	83 e8       	ldi	r24, 0x83	; 131
    3124:	93 e0       	ldi	r25, 0x03	; 3
    3126:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    312a:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    312c:	14 35       	cpi	r17, 0x54	; 84
    312e:	a1 f7       	brne	.-24     	; 0x3118 <_Z13uhreinstellenv+0x27c>
    3130:	39 c2       	rjmp	.+1138   	; 0x35a4 <_Z13uhreinstellenv+0x708>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    3132:	82 e8       	ldi	r24, 0x82	; 130
    3134:	93 e0       	ldi	r25, 0x03	; 3
    3136:	0e 94 15 24 	call	0x482a	; 0x482a <_ZN9Interface17ZahlenausTastaturEv>
    313a:	e4 e9       	ldi	r30, 0x94	; 148
    313c:	f7 e0       	ldi	r31, 0x07	; 7
    313e:	20 81       	ld	r18, Z
    3140:	90 e0       	ldi	r25, 0x00	; 0
    3142:	82 0f       	add	r24, r18
    3144:	91 1d       	adc	r25, r1
				if(rtc.Stunden>=24){
    3146:	88 31       	cpi	r24, 0x18	; 24
    3148:	10 f4       	brcc	.+4      	; 0x314e <_Z13uhreinstellenv+0x2b2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    314a:	80 83       	st	Z, r24
    314c:	5e c2       	rjmp	.+1212   	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
    314e:	e4 e9       	ldi	r30, 0x94	; 148
    3150:	f7 e0       	ldi	r31, 0x07	; 7
    3152:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    3154:	e2 e0       	ldi	r30, 0x02	; 2
    3156:	f3 e0       	ldi	r31, 0x03	; 3
    3158:	a7 2d       	mov	r26, r7
    315a:	b8 2d       	mov	r27, r8
    315c:	86 2d       	mov	r24, r6
    315e:	01 90       	ld	r0, Z+
    3160:	0d 92       	st	X+, r0
    3162:	8a 95       	dec	r24
    3164:	e1 f7       	brne	.-8      	; 0x315e <_Z13uhreinstellenv+0x2c2>
    3166:	2d 88       	ldd	r2, Y+21	; 0x15
    3168:	3e 88       	ldd	r3, Y+22	; 0x16
    316a:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    316c:	f1 01       	movw	r30, r2
    316e:	61 91       	ld	r22, Z+
    3170:	1f 01       	movw	r2, r30
    3172:	28 e3       	ldi	r18, 0x38	; 56
    3174:	41 2f       	mov	r20, r17
    3176:	83 e8       	ldi	r24, 0x83	; 131
    3178:	93 e0       	ldi	r25, 0x03	; 3
    317a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    317e:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3180:	14 35       	cpi	r17, 0x54	; 84
    3182:	a1 f7       	brne	.-24     	; 0x316c <_Z13uhreinstellenv+0x2d0>
    3184:	12 c2       	rjmp	.+1060   	; 0x35aa <_Z13uhreinstellenv+0x70e>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    3186:	82 e8       	ldi	r24, 0x82	; 130
    3188:	93 e0       	ldi	r25, 0x03	; 3
    318a:	0e 94 15 24 	call	0x482a	; 0x482a <_ZN9Interface17ZahlenausTastaturEv>
    318e:	88 0f       	add	r24, r24
    3190:	98 2f       	mov	r25, r24
    3192:	99 0f       	add	r25, r25
    3194:	99 0f       	add	r25, r25
    3196:	89 0f       	add	r24, r25
				if(rtc.Minuten>=60){
    3198:	8c 33       	cpi	r24, 0x3C	; 60
    319a:	20 f4       	brcc	.+8      	; 0x31a4 <_Z13uhreinstellenv+0x308>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    319c:	e5 e9       	ldi	r30, 0x95	; 149
    319e:	f7 e0       	ldi	r31, 0x07	; 7
    31a0:	80 83       	st	Z, r24
    31a2:	33 c2       	rjmp	.+1126   	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    31a4:	e5 e9       	ldi	r30, 0x95	; 149
    31a6:	f7 e0       	ldi	r31, 0x07	; 7
    31a8:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    31aa:	e1 e1       	ldi	r30, 0x11	; 17
    31ac:	f3 e0       	ldi	r31, 0x03	; 3
    31ae:	a7 2d       	mov	r26, r7
    31b0:	b8 2d       	mov	r27, r8
    31b2:	86 2d       	mov	r24, r6
    31b4:	01 90       	ld	r0, Z+
    31b6:	0d 92       	st	X+, r0
    31b8:	8a 95       	dec	r24
    31ba:	e1 f7       	brne	.-8      	; 0x31b4 <_Z13uhreinstellenv+0x318>
    31bc:	2d 88       	ldd	r2, Y+21	; 0x15
    31be:	3e 88       	ldd	r3, Y+22	; 0x16
    31c0:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    31c2:	f1 01       	movw	r30, r2
    31c4:	61 91       	ld	r22, Z+
    31c6:	1f 01       	movw	r2, r30
    31c8:	28 e3       	ldi	r18, 0x38	; 56
    31ca:	41 2f       	mov	r20, r17
    31cc:	83 e8       	ldi	r24, 0x83	; 131
    31ce:	93 e0       	ldi	r25, 0x03	; 3
    31d0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    31d4:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    31d6:	14 35       	cpi	r17, 0x54	; 84
    31d8:	a1 f7       	brne	.-24     	; 0x31c2 <_Z13uhreinstellenv+0x326>
    31da:	ea c1       	rjmp	.+980    	; 0x35b0 <_Z13uhreinstellenv+0x714>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    31dc:	82 e8       	ldi	r24, 0x82	; 130
    31de:	93 e0       	ldi	r25, 0x03	; 3
    31e0:	0e 94 15 24 	call	0x482a	; 0x482a <_ZN9Interface17ZahlenausTastaturEv>
    31e4:	e5 e9       	ldi	r30, 0x95	; 149
    31e6:	f7 e0       	ldi	r31, 0x07	; 7
    31e8:	20 81       	ld	r18, Z
    31ea:	90 e0       	ldi	r25, 0x00	; 0
    31ec:	82 0f       	add	r24, r18
    31ee:	91 1d       	adc	r25, r1
				if(rtc.Minuten>=60){
    31f0:	8c 33       	cpi	r24, 0x3C	; 60
    31f2:	10 f4       	brcc	.+4      	; 0x31f8 <_Z13uhreinstellenv+0x35c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    31f4:	80 83       	st	Z, r24
    31f6:	09 c2       	rjmp	.+1042   	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    31f8:	e5 e9       	ldi	r30, 0x95	; 149
    31fa:	f7 e0       	ldi	r31, 0x07	; 7
    31fc:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    31fe:	e1 e1       	ldi	r30, 0x11	; 17
    3200:	f3 e0       	ldi	r31, 0x03	; 3
    3202:	a7 2d       	mov	r26, r7
    3204:	b8 2d       	mov	r27, r8
    3206:	86 2d       	mov	r24, r6
    3208:	01 90       	ld	r0, Z+
    320a:	0d 92       	st	X+, r0
    320c:	8a 95       	dec	r24
    320e:	e1 f7       	brne	.-8      	; 0x3208 <_Z13uhreinstellenv+0x36c>
    3210:	2d 88       	ldd	r2, Y+21	; 0x15
    3212:	3e 88       	ldd	r3, Y+22	; 0x16
    3214:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3216:	f1 01       	movw	r30, r2
    3218:	61 91       	ld	r22, Z+
    321a:	1f 01       	movw	r2, r30
    321c:	28 e3       	ldi	r18, 0x38	; 56
    321e:	41 2f       	mov	r20, r17
    3220:	83 e8       	ldi	r24, 0x83	; 131
    3222:	93 e0       	ldi	r25, 0x03	; 3
    3224:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3228:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    322a:	14 35       	cpi	r17, 0x54	; 84
    322c:	a1 f7       	brne	.-24     	; 0x3216 <_Z13uhreinstellenv+0x37a>
    322e:	c3 c1       	rjmp	.+902    	; 0x35b6 <_Z13uhreinstellenv+0x71a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    3230:	82 e8       	ldi	r24, 0x82	; 130
    3232:	93 e0       	ldi	r25, 0x03	; 3
    3234:	0e 94 15 24 	call	0x482a	; 0x482a <_ZN9Interface17ZahlenausTastaturEv>
    3238:	88 0f       	add	r24, r24
    323a:	98 2f       	mov	r25, r24
    323c:	99 0f       	add	r25, r25
    323e:	99 0f       	add	r25, r25
    3240:	89 0f       	add	r24, r25
				if(rtc.Tag>=32){
    3242:	80 32       	cpi	r24, 0x20	; 32
    3244:	18 f4       	brcc	.+6      	; 0x324c <_Z13uhreinstellenv+0x3b0>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    3246:	f2 01       	movw	r30, r4
    3248:	80 83       	st	Z, r24
    324a:	df c1       	rjmp	.+958    	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    324c:	f2 01       	movw	r30, r4
    324e:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    3250:	8b e0       	ldi	r24, 0x0B	; 11
    3252:	e0 e2       	ldi	r30, 0x20	; 32
    3254:	f3 e0       	ldi	r31, 0x03	; 3
    3256:	a7 2d       	mov	r26, r7
    3258:	b8 2d       	mov	r27, r8
    325a:	01 90       	ld	r0, Z+
    325c:	0d 92       	st	X+, r0
    325e:	8a 95       	dec	r24
    3260:	e1 f7       	brne	.-8      	; 0x325a <_Z13uhreinstellenv+0x3be>
    3262:	2d 88       	ldd	r2, Y+21	; 0x15
    3264:	3e 88       	ldd	r3, Y+22	; 0x16
    3266:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3268:	f1 01       	movw	r30, r2
    326a:	61 91       	ld	r22, Z+
    326c:	1f 01       	movw	r2, r30
    326e:	28 e3       	ldi	r18, 0x38	; 56
    3270:	41 2f       	mov	r20, r17
    3272:	83 e8       	ldi	r24, 0x83	; 131
    3274:	93 e0       	ldi	r25, 0x03	; 3
    3276:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    327a:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    327c:	1c 33       	cpi	r17, 0x3C	; 60
    327e:	a1 f7       	brne	.-24     	; 0x3268 <_Z13uhreinstellenv+0x3cc>
    3280:	9d c1       	rjmp	.+826    	; 0x35bc <_Z13uhreinstellenv+0x720>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    3282:	82 e8       	ldi	r24, 0x82	; 130
    3284:	93 e0       	ldi	r25, 0x03	; 3
    3286:	0e 94 15 24 	call	0x482a	; 0x482a <_ZN9Interface17ZahlenausTastaturEv>
    328a:	f2 01       	movw	r30, r4
    328c:	20 81       	ld	r18, Z
    328e:	90 e0       	ldi	r25, 0x00	; 0
    3290:	82 0f       	add	r24, r18
    3292:	91 1d       	adc	r25, r1
				if(rtc.Tag>=32){
    3294:	80 32       	cpi	r24, 0x20	; 32
    3296:	10 f4       	brcc	.+4      	; 0x329c <_Z13uhreinstellenv+0x400>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    3298:	80 83       	st	Z, r24
    329a:	b7 c1       	rjmp	.+878    	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    329c:	f2 01       	movw	r30, r4
    329e:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    32a0:	8b e0       	ldi	r24, 0x0B	; 11
    32a2:	e0 e2       	ldi	r30, 0x20	; 32
    32a4:	f3 e0       	ldi	r31, 0x03	; 3
    32a6:	a7 2d       	mov	r26, r7
    32a8:	b8 2d       	mov	r27, r8
    32aa:	01 90       	ld	r0, Z+
    32ac:	0d 92       	st	X+, r0
    32ae:	8a 95       	dec	r24
    32b0:	e1 f7       	brne	.-8      	; 0x32aa <_Z13uhreinstellenv+0x40e>
    32b2:	2d 88       	ldd	r2, Y+21	; 0x15
    32b4:	3e 88       	ldd	r3, Y+22	; 0x16
    32b6:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    32b8:	f1 01       	movw	r30, r2
    32ba:	61 91       	ld	r22, Z+
    32bc:	1f 01       	movw	r2, r30
    32be:	28 e3       	ldi	r18, 0x38	; 56
    32c0:	41 2f       	mov	r20, r17
    32c2:	83 e8       	ldi	r24, 0x83	; 131
    32c4:	93 e0       	ldi	r25, 0x03	; 3
    32c6:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    32ca:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    32cc:	1c 33       	cpi	r17, 0x3C	; 60
    32ce:	a1 f7       	brne	.-24     	; 0x32b8 <_Z13uhreinstellenv+0x41c>
    32d0:	7a c1       	rjmp	.+756    	; 0x35c6 <_Z13uhreinstellenv+0x72a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    32d2:	82 e8       	ldi	r24, 0x82	; 130
    32d4:	93 e0       	ldi	r25, 0x03	; 3
    32d6:	0e 94 15 24 	call	0x482a	; 0x482a <_ZN9Interface17ZahlenausTastaturEv>
    32da:	88 0f       	add	r24, r24
    32dc:	98 2f       	mov	r25, r24
    32de:	99 0f       	add	r25, r25
    32e0:	99 0f       	add	r25, r25
    32e2:	89 0f       	add	r24, r25
				if(rtc.Monat>=13){
    32e4:	8d 30       	cpi	r24, 0x0D	; 13
    32e6:	18 f4       	brcc	.+6      	; 0x32ee <_Z13uhreinstellenv+0x452>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    32e8:	f6 01       	movw	r30, r12
    32ea:	80 83       	st	Z, r24
    32ec:	8e c1       	rjmp	.+796    	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    32ee:	f6 01       	movw	r30, r12
    32f0:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    32f2:	8d e0       	ldi	r24, 0x0D	; 13
    32f4:	eb e2       	ldi	r30, 0x2B	; 43
    32f6:	f3 e0       	ldi	r31, 0x03	; 3
    32f8:	a7 2d       	mov	r26, r7
    32fa:	b8 2d       	mov	r27, r8
    32fc:	01 90       	ld	r0, Z+
    32fe:	0d 92       	st	X+, r0
    3300:	8a 95       	dec	r24
    3302:	e1 f7       	brne	.-8      	; 0x32fc <_Z13uhreinstellenv+0x460>
    3304:	2d 88       	ldd	r2, Y+21	; 0x15
    3306:	3e 88       	ldd	r3, Y+22	; 0x16
    3308:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    330a:	f1 01       	movw	r30, r2
    330c:	61 91       	ld	r22, Z+
    330e:	1f 01       	movw	r2, r30
    3310:	28 e3       	ldi	r18, 0x38	; 56
    3312:	41 2f       	mov	r20, r17
    3314:	83 e8       	ldi	r24, 0x83	; 131
    3316:	93 e0       	ldi	r25, 0x03	; 3
    3318:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    331c:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    331e:	18 34       	cpi	r17, 0x48	; 72
    3320:	a1 f7       	brne	.-24     	; 0x330a <_Z13uhreinstellenv+0x46e>
    3322:	56 c1       	rjmp	.+684    	; 0x35d0 <_Z13uhreinstellenv+0x734>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    3324:	82 e8       	ldi	r24, 0x82	; 130
    3326:	93 e0       	ldi	r25, 0x03	; 3
    3328:	0e 94 15 24 	call	0x482a	; 0x482a <_ZN9Interface17ZahlenausTastaturEv>
    332c:	f6 01       	movw	r30, r12
    332e:	20 81       	ld	r18, Z
    3330:	90 e0       	ldi	r25, 0x00	; 0
    3332:	82 0f       	add	r24, r18
    3334:	91 1d       	adc	r25, r1
				if(rtc.Monat>=13){
    3336:	8d 30       	cpi	r24, 0x0D	; 13
    3338:	10 f4       	brcc	.+4      	; 0x333e <_Z13uhreinstellenv+0x4a2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    333a:	80 83       	st	Z, r24
    333c:	1e c0       	rjmp	.+60     	; 0x337a <_Z13uhreinstellenv+0x4de>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    333e:	f6 01       	movw	r30, r12
    3340:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    3342:	8d e0       	ldi	r24, 0x0D	; 13
    3344:	eb e2       	ldi	r30, 0x2B	; 43
    3346:	f3 e0       	ldi	r31, 0x03	; 3
    3348:	a7 2d       	mov	r26, r7
    334a:	b8 2d       	mov	r27, r8
    334c:	01 90       	ld	r0, Z+
    334e:	0d 92       	st	X+, r0
    3350:	8a 95       	dec	r24
    3352:	e1 f7       	brne	.-8      	; 0x334c <_Z13uhreinstellenv+0x4b0>
    3354:	2d 88       	ldd	r2, Y+21	; 0x15
    3356:	3e 88       	ldd	r3, Y+22	; 0x16
    3358:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    335a:	f1 01       	movw	r30, r2
    335c:	61 91       	ld	r22, Z+
    335e:	1f 01       	movw	r2, r30
    3360:	28 e3       	ldi	r18, 0x38	; 56
    3362:	41 2f       	mov	r20, r17
    3364:	83 e8       	ldi	r24, 0x83	; 131
    3366:	93 e0       	ldi	r25, 0x03	; 3
    3368:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    336c:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    336e:	18 34       	cpi	r17, 0x48	; 72
    3370:	a1 f7       	brne	.-24     	; 0x335a <_Z13uhreinstellenv+0x4be>
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    3372:	0f 2e       	mov	r0, r31
    3374:	f5 e0       	ldi	r31, 0x05	; 5
    3376:	9f 2e       	mov	r9, r31
    3378:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
    337a:	f6 01       	movw	r30, r12
    337c:	90 81       	ld	r25, Z
    337e:	89 2f       	mov	r24, r25
    3380:	8d 7f       	andi	r24, 0xFD	; 253
    3382:	84 30       	cpi	r24, 0x04	; 4
    3384:	11 f0       	breq	.+4      	; 0x338a <_Z13uhreinstellenv+0x4ee>
    3386:	89 30       	cpi	r24, 0x09	; 9
    3388:	09 f5       	brne	.+66     	; 0x33cc <_Z13uhreinstellenv+0x530>
					if(rtc.Tag>=31){
    338a:	f2 01       	movw	r30, r4
    338c:	80 81       	ld	r24, Z
    338e:	8f 31       	cpi	r24, 0x1F	; 31
    3390:	08 f4       	brcc	.+2      	; 0x3394 <_Z13uhreinstellenv+0x4f8>
    3392:	ea c0       	rjmp	.+468    	; 0x3568 <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    3394:	10 82       	st	Z, r1
						rtc.Monat=0;
    3396:	f6 01       	movw	r30, r12
    3398:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    339a:	8b e0       	ldi	r24, 0x0B	; 11
    339c:	e0 e2       	ldi	r30, 0x20	; 32
    339e:	f3 e0       	ldi	r31, 0x03	; 3
    33a0:	a7 2d       	mov	r26, r7
    33a2:	b8 2d       	mov	r27, r8
    33a4:	01 90       	ld	r0, Z+
    33a6:	0d 92       	st	X+, r0
    33a8:	8a 95       	dec	r24
    33aa:	e1 f7       	brne	.-8      	; 0x33a4 <_Z13uhreinstellenv+0x508>
    33ac:	2d 88       	ldd	r2, Y+21	; 0x15
    33ae:	3e 88       	ldd	r3, Y+22	; 0x16
    33b0:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    33b2:	f1 01       	movw	r30, r2
    33b4:	61 91       	ld	r22, Z+
    33b6:	1f 01       	movw	r2, r30
    33b8:	28 e3       	ldi	r18, 0x38	; 56
    33ba:	41 2f       	mov	r20, r17
    33bc:	83 e8       	ldi	r24, 0x83	; 131
    33be:	93 e0       	ldi	r25, 0x03	; 3
    33c0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    33c4:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    33c6:	1c 33       	cpi	r17, 0x3C	; 60
    33c8:	a1 f7       	brne	.-24     	; 0x33b2 <_Z13uhreinstellenv+0x516>
    33ca:	07 c1       	rjmp	.+526    	; 0x35da <_Z13uhreinstellenv+0x73e>
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
						}
					}
				}
				else if(rtc.Monat==2){
    33cc:	92 30       	cpi	r25, 0x02	; 2
    33ce:	09 f0       	breq	.+2      	; 0x33d2 <_Z13uhreinstellenv+0x536>
    33d0:	cb c0       	rjmp	.+406    	; 0x3568 <_Z13uhreinstellenv+0x6cc>
					if(rtc.Tag>=30){
    33d2:	f2 01       	movw	r30, r4
    33d4:	80 81       	ld	r24, Z
    33d6:	8e 31       	cpi	r24, 0x1E	; 30
    33d8:	08 f4       	brcc	.+2      	; 0x33dc <_Z13uhreinstellenv+0x540>
    33da:	c6 c0       	rjmp	.+396    	; 0x3568 <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    33dc:	10 82       	st	Z, r1
						rtc.Monat=0;
    33de:	f6 01       	movw	r30, r12
    33e0:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    33e2:	8b e0       	ldi	r24, 0x0B	; 11
    33e4:	e0 e2       	ldi	r30, 0x20	; 32
    33e6:	f3 e0       	ldi	r31, 0x03	; 3
    33e8:	a7 2d       	mov	r26, r7
    33ea:	b8 2d       	mov	r27, r8
    33ec:	01 90       	ld	r0, Z+
    33ee:	0d 92       	st	X+, r0
    33f0:	8a 95       	dec	r24
    33f2:	e1 f7       	brne	.-8      	; 0x33ec <_Z13uhreinstellenv+0x550>
    33f4:	2d 88       	ldd	r2, Y+21	; 0x15
    33f6:	3e 88       	ldd	r3, Y+22	; 0x16
    33f8:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    33fa:	f1 01       	movw	r30, r2
    33fc:	61 91       	ld	r22, Z+
    33fe:	1f 01       	movw	r2, r30
    3400:	28 e3       	ldi	r18, 0x38	; 56
    3402:	41 2f       	mov	r20, r17
    3404:	83 e8       	ldi	r24, 0x83	; 131
    3406:	93 e0       	ldi	r25, 0x03	; 3
    3408:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    340c:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    340e:	1c 33       	cpi	r17, 0x3C	; 60
    3410:	a1 f7       	brne	.-24     	; 0x33fa <_Z13uhreinstellenv+0x55e>
    3412:	e8 c0       	rjmp	.+464    	; 0x35e4 <_Z13uhreinstellenv+0x748>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    3414:	82 e8       	ldi	r24, 0x82	; 130
    3416:	93 e0       	ldi	r25, 0x03	; 3
    3418:	0e 94 15 24 	call	0x482a	; 0x482a <_ZN9Interface17ZahlenausTastaturEv>
    341c:	88 0f       	add	r24, r24
    341e:	98 2f       	mov	r25, r24
    3420:	99 0f       	add	r25, r25
    3422:	99 0f       	add	r25, r25
    3424:	89 0f       	add	r24, r25
				if(rtc.Jahr>=50){
    3426:	82 33       	cpi	r24, 0x32	; 50
    3428:	20 f4       	brcc	.+8      	; 0x3432 <_Z13uhreinstellenv+0x596>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    342a:	eb e9       	ldi	r30, 0x9B	; 155
    342c:	f7 e0       	ldi	r31, 0x07	; 7
    342e:	80 83       	st	Z, r24
    3430:	ec c0       	rjmp	.+472    	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    3432:	eb e9       	ldi	r30, 0x9B	; 155
    3434:	f7 e0       	ldi	r31, 0x07	; 7
    3436:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    3438:	8c e0       	ldi	r24, 0x0C	; 12
    343a:	e8 e3       	ldi	r30, 0x38	; 56
    343c:	f3 e0       	ldi	r31, 0x03	; 3
    343e:	a7 2d       	mov	r26, r7
    3440:	b8 2d       	mov	r27, r8
    3442:	01 90       	ld	r0, Z+
    3444:	0d 92       	st	X+, r0
    3446:	8a 95       	dec	r24
    3448:	e1 f7       	brne	.-8      	; 0x3442 <_Z13uhreinstellenv+0x5a6>
    344a:	2d 88       	ldd	r2, Y+21	; 0x15
    344c:	3e 88       	ldd	r3, Y+22	; 0x16
    344e:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3450:	f1 01       	movw	r30, r2
    3452:	61 91       	ld	r22, Z+
    3454:	1f 01       	movw	r2, r30
    3456:	28 e3       	ldi	r18, 0x38	; 56
    3458:	41 2f       	mov	r20, r17
    345a:	83 e8       	ldi	r24, 0x83	; 131
    345c:	93 e0       	ldi	r25, 0x03	; 3
    345e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3462:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3464:	12 34       	cpi	r17, 0x42	; 66
    3466:	a1 f7       	brne	.-24     	; 0x3450 <_Z13uhreinstellenv+0x5b4>
    3468:	c2 c0       	rjmp	.+388    	; 0x35ee <_Z13uhreinstellenv+0x752>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    346a:	82 e8       	ldi	r24, 0x82	; 130
    346c:	93 e0       	ldi	r25, 0x03	; 3
    346e:	0e 94 15 24 	call	0x482a	; 0x482a <_ZN9Interface17ZahlenausTastaturEv>
    3472:	eb e9       	ldi	r30, 0x9B	; 155
    3474:	f7 e0       	ldi	r31, 0x07	; 7
    3476:	20 81       	ld	r18, Z
    3478:	90 e0       	ldi	r25, 0x00	; 0
    347a:	82 0f       	add	r24, r18
    347c:	91 1d       	adc	r25, r1
				if(rtc.Jahr>=50){
    347e:	82 33       	cpi	r24, 0x32	; 50
    3480:	10 f4       	brcc	.+4      	; 0x3486 <_Z13uhreinstellenv+0x5ea>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    3482:	80 83       	st	Z, r24
    3484:	1f c0       	rjmp	.+62     	; 0x34c4 <_Z13uhreinstellenv+0x628>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    3486:	eb e9       	ldi	r30, 0x9B	; 155
    3488:	f7 e0       	ldi	r31, 0x07	; 7
    348a:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    348c:	8c e0       	ldi	r24, 0x0C	; 12
    348e:	e8 e3       	ldi	r30, 0x38	; 56
    3490:	f3 e0       	ldi	r31, 0x03	; 3
    3492:	a7 2d       	mov	r26, r7
    3494:	b8 2d       	mov	r27, r8
    3496:	01 90       	ld	r0, Z+
    3498:	0d 92       	st	X+, r0
    349a:	8a 95       	dec	r24
    349c:	e1 f7       	brne	.-8      	; 0x3496 <_Z13uhreinstellenv+0x5fa>
    349e:	2d 88       	ldd	r2, Y+21	; 0x15
    34a0:	3e 88       	ldd	r3, Y+22	; 0x16
    34a2:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    34a4:	f1 01       	movw	r30, r2
    34a6:	61 91       	ld	r22, Z+
    34a8:	1f 01       	movw	r2, r30
    34aa:	28 e3       	ldi	r18, 0x38	; 56
    34ac:	41 2f       	mov	r20, r17
    34ae:	83 e8       	ldi	r24, 0x83	; 131
    34b0:	93 e0       	ldi	r25, 0x03	; 3
    34b2:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    34b6:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    34b8:	12 34       	cpi	r17, 0x42	; 66
    34ba:	a1 f7       	brne	.-24     	; 0x34a4 <_Z13uhreinstellenv+0x608>
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    34bc:	0f 2e       	mov	r0, r31
    34be:	f7 e0       	ldi	r31, 0x07	; 7
    34c0:	9f 2e       	mov	r9, r31
    34c2:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==2){
    34c4:	f6 01       	movw	r30, r12
    34c6:	80 81       	ld	r24, Z
    34c8:	82 30       	cpi	r24, 0x02	; 2
    34ca:	09 f0       	breq	.+2      	; 0x34ce <_Z13uhreinstellenv+0x632>
    34cc:	4d c0       	rjmp	.+154    	; 0x3568 <_Z13uhreinstellenv+0x6cc>
					if(rtc.Jahr%4==0){
    34ce:	eb e9       	ldi	r30, 0x9B	; 155
    34d0:	f7 e0       	ldi	r31, 0x07	; 7
    34d2:	80 81       	ld	r24, Z
    34d4:	83 70       	andi	r24, 0x03	; 3
    34d6:	21 f5       	brne	.+72     	; 0x3520 <_Z13uhreinstellenv+0x684>
						if (rtc.Tag>=30)
    34d8:	f2 01       	movw	r30, r4
    34da:	80 81       	ld	r24, Z
    34dc:	8e 31       	cpi	r24, 0x1E	; 30
    34de:	08 f4       	brcc	.+2      	; 0x34e2 <_Z13uhreinstellenv+0x646>
    34e0:	43 c0       	rjmp	.+134    	; 0x3568 <_Z13uhreinstellenv+0x6cc>
						{
							rtc.Tag=0;
    34e2:	10 82       	st	Z, r1
							rtc.Monat=0;
    34e4:	f6 01       	movw	r30, r12
    34e6:	10 82       	st	Z, r1
							rtc.Jahr=0;
    34e8:	eb e9       	ldi	r30, 0x9B	; 155
    34ea:	f7 e0       	ldi	r31, 0x07	; 7
    34ec:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    34ee:	8b e0       	ldi	r24, 0x0B	; 11
    34f0:	e0 e2       	ldi	r30, 0x20	; 32
    34f2:	f3 e0       	ldi	r31, 0x03	; 3
    34f4:	a7 2d       	mov	r26, r7
    34f6:	b8 2d       	mov	r27, r8
    34f8:	01 90       	ld	r0, Z+
    34fa:	0d 92       	st	X+, r0
    34fc:	8a 95       	dec	r24
    34fe:	e1 f7       	brne	.-8      	; 0x34f8 <_Z13uhreinstellenv+0x65c>
    3500:	2d 88       	ldd	r2, Y+21	; 0x15
    3502:	3e 88       	ldd	r3, Y+22	; 0x16
    3504:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3506:	f1 01       	movw	r30, r2
    3508:	61 91       	ld	r22, Z+
    350a:	1f 01       	movw	r2, r30
    350c:	28 e3       	ldi	r18, 0x38	; 56
    350e:	41 2f       	mov	r20, r17
    3510:	83 e8       	ldi	r24, 0x83	; 131
    3512:	93 e0       	ldi	r25, 0x03	; 3
    3514:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3518:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    351a:	1c 33       	cpi	r17, 0x3C	; 60
    351c:	a1 f7       	brne	.-24     	; 0x3506 <_Z13uhreinstellenv+0x66a>
    351e:	6c c0       	rjmp	.+216    	; 0x35f8 <_Z13uhreinstellenv+0x75c>
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
							}
						}
					}
					else{
						if(rtc.Tag>=29){
    3520:	f2 01       	movw	r30, r4
    3522:	80 81       	ld	r24, Z
    3524:	8d 31       	cpi	r24, 0x1D	; 29
    3526:	00 f1       	brcs	.+64     	; 0x3568 <_Z13uhreinstellenv+0x6cc>
							rtc.Tag=0;
    3528:	10 82       	st	Z, r1
							rtc.Monat=0;
    352a:	f6 01       	movw	r30, r12
    352c:	10 82       	st	Z, r1
							rtc.Jahr=0;
    352e:	eb e9       	ldi	r30, 0x9B	; 155
    3530:	f7 e0       	ldi	r31, 0x07	; 7
    3532:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    3534:	8b e0       	ldi	r24, 0x0B	; 11
    3536:	e0 e2       	ldi	r30, 0x20	; 32
    3538:	f3 e0       	ldi	r31, 0x03	; 3
    353a:	a7 2d       	mov	r26, r7
    353c:	b8 2d       	mov	r27, r8
    353e:	01 90       	ld	r0, Z+
    3540:	0d 92       	st	X+, r0
    3542:	8a 95       	dec	r24
    3544:	e1 f7       	brne	.-8      	; 0x353e <_Z13uhreinstellenv+0x6a2>
    3546:	2d 88       	ldd	r2, Y+21	; 0x15
    3548:	3e 88       	ldd	r3, Y+22	; 0x16
    354a:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    354c:	f1 01       	movw	r30, r2
    354e:	61 91       	ld	r22, Z+
    3550:	1f 01       	movw	r2, r30
    3552:	28 e3       	ldi	r18, 0x38	; 56
    3554:	41 2f       	mov	r20, r17
    3556:	83 e8       	ldi	r24, 0x83	; 131
    3558:	93 e0       	ldi	r25, 0x03	; 3
    355a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    355e:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    3560:	1c 33       	cpi	r17, 0x3C	; 60
    3562:	a1 f7       	brne	.-24     	; 0x354c <_Z13uhreinstellenv+0x6b0>
    3564:	4e c0       	rjmp	.+156    	; 0x3602 <_Z13uhreinstellenv+0x766>
						}
					}
				}
				break;
			default:
				pos++;
    3566:	93 94       	inc	r9
				break;
		}
		pos++;
    3568:	93 94       	inc	r9
	
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
    356a:	fa e0       	ldi	r31, 0x0A	; 10
    356c:	f9 15       	cp	r31, r9
    356e:	08 f0       	brcs	.+2      	; 0x3572 <_Z13uhreinstellenv+0x6d6>
    3570:	d4 cc       	rjmp	.-1624   	; 0x2f1a <_Z13uhreinstellenv+0x7e>
				break;
		}
		pos++;
	}
	
	rtc.Sekunden		= 0;
    3572:	10 92 96 07 	sts	0x0796, r1
	rtc.HundSekunden	= 0;
    3576:	10 92 97 07 	sts	0x0797, r1
	oled.clearFrame();
    357a:	83 e8       	ldi	r24, 0x83	; 131
    357c:	93 e0       	ldi	r25, 0x03	; 3
    357e:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	rtc.ausgabedatumneu();
    3582:	84 e8       	ldi	r24, 0x84	; 132
    3584:	97 e0       	ldi	r25, 0x07	; 7
    3586:	0e 94 ac 2a 	call	0x5558	; 0x5558 <_ZN3RTC15ausgabedatumneuEv>
	rtc.ausgabezeitneu();
    358a:	84 e8       	ldi	r24, 0x84	; 132
    358c:	97 e0       	ldi	r25, 0x07	; 7
    358e:	0e 94 73 2a 	call	0x54e6	; 0x54e6 <_ZN3RTC14ausgabezeitneuEv>
	rtc.RTCstart();
    3592:	84 e8       	ldi	r24, 0x84	; 132
    3594:	97 e0       	ldi	r25, 0x07	; 7
    3596:	0e 94 a0 2b 	call	0x5740	; 0x5740 <_ZN3RTC8RTCstartEv>
    359a:	39 c0       	rjmp	.+114    	; 0x360e <_Z13uhreinstellenv+0x772>

		oled.sendFrame();
		oled.clearFrame();
		switch (pos) {
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    359c:	e4 e9       	ldi	r30, 0x94	; 148
    359e:	f7 e0       	ldi	r31, 0x07	; 7
    35a0:	80 83       	st	Z, r24
    35a2:	33 c0       	rjmp	.+102    	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    35a4:	99 24       	eor	r9, r9
    35a6:	9a 94       	dec	r9
    35a8:	30 c0       	rjmp	.+96     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    35aa:	99 24       	eor	r9, r9
    35ac:	9a 94       	dec	r9
    35ae:	2d c0       	rjmp	.+90     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    35b0:	99 24       	eor	r9, r9
    35b2:	93 94       	inc	r9
    35b4:	2a c0       	rjmp	.+84     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    35b6:	99 24       	eor	r9, r9
    35b8:	93 94       	inc	r9
    35ba:	27 c0       	rjmp	.+78     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    35bc:	0f 2e       	mov	r0, r31
    35be:	f3 e0       	ldi	r31, 0x03	; 3
    35c0:	9f 2e       	mov	r9, r31
    35c2:	f0 2d       	mov	r31, r0
    35c4:	22 c0       	rjmp	.+68     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    35c6:	0f 2e       	mov	r0, r31
    35c8:	f3 e0       	ldi	r31, 0x03	; 3
    35ca:	9f 2e       	mov	r9, r31
    35cc:	f0 2d       	mov	r31, r0
    35ce:	1d c0       	rjmp	.+58     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    35d0:	0f 2e       	mov	r0, r31
    35d2:	f5 e0       	ldi	r31, 0x05	; 5
    35d4:	9f 2e       	mov	r9, r31
    35d6:	f0 2d       	mov	r31, r0
    35d8:	18 c0       	rjmp	.+48     	; 0x360a <_Z13uhreinstellenv+0x76e>
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    35da:	0f 2e       	mov	r0, r31
    35dc:	f3 e0       	ldi	r31, 0x03	; 3
    35de:	9f 2e       	mov	r9, r31
    35e0:	f0 2d       	mov	r31, r0
    35e2:	13 c0       	rjmp	.+38     	; 0x360a <_Z13uhreinstellenv+0x76e>
				}
				else if(rtc.Monat==2){
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    35e4:	0f 2e       	mov	r0, r31
    35e6:	f3 e0       	ldi	r31, 0x03	; 3
    35e8:	9f 2e       	mov	r9, r31
    35ea:	f0 2d       	mov	r31, r0
    35ec:	0e c0       	rjmp	.+28     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    35ee:	0f 2e       	mov	r0, r31
    35f0:	f7 e0       	ldi	r31, 0x07	; 7
    35f2:	9f 2e       	mov	r9, r31
    35f4:	f0 2d       	mov	r31, r0
    35f6:	09 c0       	rjmp	.+18     	; 0x360a <_Z13uhreinstellenv+0x76e>
						if (rtc.Tag>=30)
						{
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    35f8:	0f 2e       	mov	r0, r31
    35fa:	f3 e0       	ldi	r31, 0x03	; 3
    35fc:	9f 2e       	mov	r9, r31
    35fe:	f0 2d       	mov	r31, r0
    3600:	04 c0       	rjmp	.+8      	; 0x360a <_Z13uhreinstellenv+0x76e>
					else{
						if(rtc.Tag>=29){
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    3602:	0f 2e       	mov	r0, r31
    3604:	f3 e0       	ldi	r31, 0x03	; 3
    3606:	9f 2e       	mov	r9, r31
    3608:	f0 2d       	mov	r31, r0
				break;
			default:
				pos++;
				break;
		}
		pos++;
    360a:	93 94       	inc	r9
    360c:	86 cc       	rjmp	.-1780   	; 0x2f1a <_Z13uhreinstellenv+0x7e>
	rtc.HundSekunden	= 0;
	oled.clearFrame();
	rtc.ausgabedatumneu();
	rtc.ausgabezeitneu();
	rtc.RTCstart();
}
    360e:	66 96       	adiw	r28, 0x16	; 22
    3610:	0f b6       	in	r0, 0x3f	; 63
    3612:	f8 94       	cli
    3614:	de bf       	out	0x3e, r29	; 62
    3616:	0f be       	out	0x3f, r0	; 63
    3618:	cd bf       	out	0x3d, r28	; 61
    361a:	df 91       	pop	r29
    361c:	cf 91       	pop	r28
    361e:	1f 91       	pop	r17
    3620:	0f 91       	pop	r16
    3622:	ff 90       	pop	r15
    3624:	ef 90       	pop	r14
    3626:	df 90       	pop	r13
    3628:	cf 90       	pop	r12
    362a:	bf 90       	pop	r11
    362c:	af 90       	pop	r10
    362e:	9f 90       	pop	r9
    3630:	8f 90       	pop	r8
    3632:	7f 90       	pop	r7
    3634:	6f 90       	pop	r6
    3636:	5f 90       	pop	r5
    3638:	4f 90       	pop	r4
    363a:	3f 90       	pop	r3
    363c:	2f 90       	pop	r2
    363e:	08 95       	ret

00003640 <__vector_11>:
uint8_t pos;		//Handler fuer die Einganbe von Zahlen

//Ausgelagerte Sammlung der einzelnen Seitenlayouts
#include "Seiten.h"

ISR(TIMER2_OVF_vect){	//Vektor fuer die RTC
    3640:	1f 92       	push	r1
    3642:	0f 92       	push	r0
    3644:	0f b6       	in	r0, 0x3f	; 63
    3646:	0f 92       	push	r0
    3648:	11 24       	eor	r1, r1
    364a:	0b b6       	in	r0, 0x3b	; 59
    364c:	0f 92       	push	r0
    364e:	8f 93       	push	r24
    3650:	ef 93       	push	r30
    3652:	ff 93       	push	r31
	TCNT2=TIMER2RTCTIME;
    3654:	10 92 b2 00 	sts	0x00B2, r1
	rtc.Sekunden++;
    3658:	e6 e9       	ldi	r30, 0x96	; 150
    365a:	f7 e0       	ldi	r31, 0x07	; 7
    365c:	80 81       	ld	r24, Z
    365e:	8f 5f       	subi	r24, 0xFF	; 255
    3660:	80 83       	st	Z, r24
	rtc.interupts|= (1<<sekundeninterupt);
    3662:	ec e9       	ldi	r30, 0x9C	; 156
    3664:	f7 e0       	ldi	r31, 0x07	; 7
    3666:	80 81       	ld	r24, Z
    3668:	82 60       	ori	r24, 0x02	; 2
    366a:	80 83       	st	Z, r24
}
    366c:	ff 91       	pop	r31
    366e:	ef 91       	pop	r30
    3670:	8f 91       	pop	r24
    3672:	0f 90       	pop	r0
    3674:	0b be       	out	0x3b, r0	; 59
    3676:	0f 90       	pop	r0
    3678:	0f be       	out	0x3f, r0	; 63
    367a:	0f 90       	pop	r0
    367c:	1f 90       	pop	r1
    367e:	18 95       	reti

00003680 <_Z15geschwindigkeitf>:

double geschw;
double strecke;
double maxgeschw;
uint32_t Fahrtzeit;
void geschwindigkeit(float durch){
    3680:	cf 92       	push	r12
    3682:	df 92       	push	r13
    3684:	ef 92       	push	r14
    3686:	ff 92       	push	r15
    3688:	cf 93       	push	r28
    368a:	df 93       	push	r29
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
    368c:	e4 e8       	ldi	r30, 0x84	; 132
    368e:	f0 e0       	ldi	r31, 0x00	; 0
    3690:	c0 81       	ld	r28, Z
    3692:	d1 81       	ldd	r29, Z+1	; 0x01
	TCNT1 = 0;
    3694:	11 82       	std	Z+1, r1	; 0x01
    3696:	10 82       	st	Z, r1
	//Berechnung
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
    3698:	2b ed       	ldi	r18, 0xDB	; 219
    369a:	3f e0       	ldi	r19, 0x0F	; 15
    369c:	49 e4       	ldi	r20, 0x49	; 73
    369e:	50 e4       	ldi	r21, 0x40	; 64
    36a0:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    36a4:	26 e6       	ldi	r18, 0x66	; 102
    36a6:	36 e6       	ldi	r19, 0x66	; 102
    36a8:	46 e6       	ldi	r20, 0x66	; 102
    36aa:	50 e4       	ldi	r21, 0x40	; 64
    36ac:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    36b0:	6b 01       	movw	r12, r22
    36b2:	7c 01       	movw	r14, r24
void geschwindigkeit(float durch){
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
	TCNT1 = 0;
	//Berechnung
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
    36b4:	be 01       	movw	r22, r28
    36b6:	80 e0       	ldi	r24, 0x00	; 0
    36b8:	90 e0       	ldi	r25, 0x00	; 0
    36ba:	0e 94 26 2d 	call	0x5a4c	; 0x5a4c <__floatunsisf>
    36be:	20 e0       	ldi	r18, 0x00	; 0
    36c0:	30 e0       	ldi	r19, 0x00	; 0
    36c2:	40 e0       	ldi	r20, 0x00	; 0
    36c4:	5e e3       	ldi	r21, 0x3E	; 62
    36c6:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    36ca:	2d eb       	ldi	r18, 0xBD	; 189
    36cc:	37 e3       	ldi	r19, 0x37	; 55
    36ce:	46 e8       	ldi	r20, 0x86	; 134
    36d0:	5a e3       	ldi	r21, 0x3A	; 58
    36d2:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    36d6:	2a e0       	ldi	r18, 0x0A	; 10
    36d8:	37 ed       	ldi	r19, 0xD7	; 215
    36da:	43 ea       	ldi	r20, 0xA3	; 163
    36dc:	5b e3       	ldi	r21, 0x3B	; 59
    36de:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
    36e2:	9b 01       	movw	r18, r22
    36e4:	ac 01       	movw	r20, r24
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
    36e6:	c7 01       	movw	r24, r14
    36e8:	b6 01       	movw	r22, r12
    36ea:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
    36ee:	6b 01       	movw	r12, r22
    36f0:	7c 01       	movw	r14, r24
	if (geschw >=160)
    36f2:	20 e0       	ldi	r18, 0x00	; 0
    36f4:	30 e0       	ldi	r19, 0x00	; 0
    36f6:	40 e2       	ldi	r20, 0x20	; 32
    36f8:	53 e4       	ldi	r21, 0x43	; 67
    36fa:	0e 94 36 2e 	call	0x5c6c	; 0x5c6c <__gesf2>
    36fe:	88 23       	and	r24, r24
    3700:	4c f4       	brge	.+18     	; 0x3714 <_Z15geschwindigkeitf+0x94>
	uint16_t zaehlungen = TCNT1;
	TCNT1 = 0;
	//Berechnung
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
    3702:	c0 92 50 03 	sts	0x0350, r12
    3706:	d0 92 51 03 	sts	0x0351, r13
    370a:	e0 92 52 03 	sts	0x0352, r14
    370e:	f0 92 53 03 	sts	0x0353, r15
    3712:	08 c0       	rjmp	.+16     	; 0x3724 <_Z15geschwindigkeitf+0xa4>
	if (geschw >=160)
	{
		geschw=0;
    3714:	10 92 50 03 	sts	0x0350, r1
    3718:	10 92 51 03 	sts	0x0351, r1
    371c:	10 92 52 03 	sts	0x0352, r1
    3720:	10 92 53 03 	sts	0x0353, r1
	}
}
    3724:	df 91       	pop	r29
    3726:	cf 91       	pop	r28
    3728:	ff 90       	pop	r15
    372a:	ef 90       	pop	r14
    372c:	df 90       	pop	r13
    372e:	cf 90       	pop	r12
    3730:	08 95       	ret

00003732 <_Z13reed_debouncePVhh>:

uint8_t reed_debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( (*port & (1 << pin)) )
    3732:	fc 01       	movw	r30, r24
    3734:	20 81       	ld	r18, Z
    3736:	30 e0       	ldi	r19, 0x00	; 0
    3738:	06 2e       	mov	r0, r22
    373a:	02 c0       	rjmp	.+4      	; 0x3740 <_Z13reed_debouncePVhh+0xe>
    373c:	35 95       	asr	r19
    373e:	27 95       	ror	r18
    3740:	0a 94       	dec	r0
    3742:	e2 f7       	brpl	.-8      	; 0x373c <_Z13reed_debouncePVhh+0xa>
    3744:	20 ff       	sbrs	r18, 0
    3746:	17 c0       	rjmp	.+46     	; 0x3776 <_Z13reed_debouncePVhh+0x44>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3748:	ef e0       	ldi	r30, 0x0F	; 15
    374a:	f7 e2       	ldi	r31, 0x27	; 39
    374c:	31 97       	sbiw	r30, 0x01	; 1
    374e:	f1 f7       	brne	.-4      	; 0x374c <_Z13reed_debouncePVhh+0x1a>
    3750:	00 c0       	rjmp	.+0      	; 0x3752 <_Z13reed_debouncePVhh+0x20>
    3752:	00 00       	nop
	{
		/* Pin wurde auf Masse gezogen, ms warten   */
		_delay_ms(REEDMS);
		if ( !(*port & (1 << pin)) )
    3754:	fc 01       	movw	r30, r24
    3756:	80 81       	ld	r24, Z
    3758:	90 e0       	ldi	r25, 0x00	; 0
    375a:	9c 01       	movw	r18, r24
    375c:	02 c0       	rjmp	.+4      	; 0x3762 <_Z13reed_debouncePVhh+0x30>
    375e:	35 95       	asr	r19
    3760:	27 95       	ror	r18
    3762:	6a 95       	dec	r22
    3764:	e2 f7       	brpl	.-8      	; 0x375e <_Z13reed_debouncePVhh+0x2c>
    3766:	20 fd       	sbrc	r18, 0
    3768:	08 c0       	rjmp	.+16     	; 0x377a <_Z13reed_debouncePVhh+0x48>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    376a:	32 e0       	ldi	r19, 0x02	; 2
    376c:	3a 95       	dec	r19
    376e:	f1 f7       	brne	.-4      	; 0x376c <_Z13reed_debouncePVhh+0x3a>
    3770:	00 c0       	rjmp	.+0      	; 0x3772 <_Z13reed_debouncePVhh+0x40>
		{
			/* Anwender Zeit zum Loslassen des Tasters geben */
			_delay_us(1);
			return 1;
    3772:	81 e0       	ldi	r24, 0x01	; 1
    3774:	08 95       	ret
		}
	}
	return 0;
    3776:	80 e0       	ldi	r24, 0x00	; 0
    3778:	08 95       	ret
    377a:	80 e0       	ldi	r24, 0x00	; 0
}
    377c:	08 95       	ret

0000377e <_Z15initialisierungv>:
    }
}

void initialisierung(){
	//nullen der Flagregister
	rtc.interupts=0;
    377e:	10 92 9c 07 	sts	0x079C, r1
	anzeige=0;
    3782:	10 92 56 03 	sts	0x0356, r1
    3786:	10 92 55 03 	sts	0x0355, r1
	pos=0;
    378a:	10 92 54 03 	sts	0x0354, r1
	//initialisieren des Zaehler fuer die Winkelgeschw sowie den Timer
	geschw=0;
    378e:	10 92 50 03 	sts	0x0350, r1
    3792:	10 92 51 03 	sts	0x0351, r1
    3796:	10 92 52 03 	sts	0x0352, r1
    379a:	10 92 53 03 	sts	0x0353, r1
	strecke = 0;
    379e:	10 92 4c 03 	sts	0x034C, r1
    37a2:	10 92 4d 03 	sts	0x034D, r1
    37a6:	10 92 4e 03 	sts	0x034E, r1
    37aa:	10 92 4f 03 	sts	0x034F, r1
	maxgeschw = 0;
    37ae:	10 92 48 03 	sts	0x0348, r1
    37b2:	10 92 49 03 	sts	0x0349, r1
    37b6:	10 92 4a 03 	sts	0x034A, r1
    37ba:	10 92 4b 03 	sts	0x034B, r1
	Fahrtzeit = 0;
    37be:	10 92 44 03 	sts	0x0344, r1
    37c2:	10 92 45 03 	sts	0x0345, r1
    37c6:	10 92 46 03 	sts	0x0346, r1
    37ca:	10 92 47 03 	sts	0x0347, r1
	TCNT1=0;
    37ce:	10 92 85 00 	sts	0x0085, r1
    37d2:	10 92 84 00 	sts	0x0084, r1
	//Tastatur inm Contruktor initialisiert
	//Eingang fuer den Reedkontak schalten mit internem Pullup
	DDRA |= ((1<<PORTA6));
    37d6:	0e 9a       	sbi	0x01, 6	; 1
	PORTA |= (1<<PORTA6);
    37d8:	16 9a       	sbi	0x02, 6	; 2
	//Display
	oled.InitializeDisplay();
    37da:	83 e8       	ldi	r24, 0x83	; 131
    37dc:	93 e0       	ldi	r25, 0x03	; 3
    37de:	0e 94 2c 03 	call	0x658	; 0x658 <_ZN7Display17InitializeDisplayEv>
	//initialisierung wird im konstruktor vorgenommen
	oled.clearFrame();
    37e2:	83 e8       	ldi	r24, 0x83	; 131
    37e4:	93 e0       	ldi	r25, 0x03	; 3
    37e6:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	//HMC5883L initialisieren
	//kompass.initialize_HMC5883L();
	//initialisierung wird im Konstruktor erledigt
	
	//ADC Initialisieren auf CH0
	ADMUX = (1<<REFS0);
    37ea:	80 e4       	ldi	r24, 0x40	; 64
    37ec:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
    37f0:	ea e7       	ldi	r30, 0x7A	; 122
    37f2:	f0 e0       	ldi	r31, 0x00	; 0
    37f4:	83 e0       	ldi	r24, 0x03	; 3
    37f6:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN);
    37f8:	80 81       	ld	r24, Z
    37fa:	80 68       	ori	r24, 0x80	; 128
    37fc:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
    37fe:	80 81       	ld	r24, Z
    3800:	80 64       	ori	r24, 0x40	; 64
    3802:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC) ) {}
    3804:	80 81       	ld	r24, Z
    3806:	86 fd       	sbrc	r24, 6
    3808:	fd cf       	rjmp	.-6      	; 0x3804 <_Z15initialisierungv+0x86>
	(void) ADCW;
    380a:	80 91 78 00 	lds	r24, 0x0078
    380e:	90 91 79 00 	lds	r25, 0x0079
	//Wilkommensanzeige
	willkommenpage();
    3812:	0e 94 bc 09 	call	0x1378	; 0x1378 <_Z14willkommenpagev>
	//Uhreinstellungen
	//uhreinstellen();
	//*************************************************
	//Nur Test, damit es schneller geht beim Start
	rtc.dummyeinst();
    3816:	84 e8       	ldi	r24, 0x84	; 132
    3818:	97 e0       	ldi	r25, 0x07	; 7
    381a:	0e 94 8c 2b 	call	0x5718	; 0x5718 <_ZN3RTC10dummyeinstEv>
	//*********************************
	rtc.RTCstart();
    381e:	84 e8       	ldi	r24, 0x84	; 132
    3820:	97 e0       	ldi	r25, 0x07	; 7
    3822:	0e 94 a0 2b 	call	0x5740	; 0x5740 <_ZN3RTC8RTCstartEv>
	//ausgabe starten
	anzeige|=(1<<Uhrflag);
    3826:	80 91 55 03 	lds	r24, 0x0355
    382a:	90 91 56 03 	lds	r25, 0x0356
    382e:	82 60       	ori	r24, 0x02	; 2
    3830:	90 93 56 03 	sts	0x0356, r25
    3834:	80 93 55 03 	sts	0x0355, r24
	sei();
    3838:	78 94       	sei
    383a:	08 95       	ret

0000383c <_Z19maininterupthandlerv>:
	//interupt dierekt aus der rtc
	//if((rtc.interupts & (1<<hundinterupt))){
	//rtc.zeit();
	//rtc.interupts&=~(1<<hundinterupt);
	//}
	if ((anzeige&(1<<Fahradflag)))
    383c:	80 91 55 03 	lds	r24, 0x0355
    3840:	80 ff       	sbrs	r24, 0
    3842:	0b c0       	rjmp	.+22     	; 0x385a <_Z19maininterupthandlerv+0x1e>
	{
		//debounce Funktion fuer den Reedswitch
		if (reed_debounce(&PINA,PINA7))
    3844:	67 e0       	ldi	r22, 0x07	; 7
    3846:	80 e2       	ldi	r24, 0x20	; 32
    3848:	90 e0       	ldi	r25, 0x00	; 0
    384a:	73 df       	rcall	.-282    	; 0x3732 <_Z13reed_debouncePVhh>
    384c:	88 23       	and	r24, r24
    384e:	29 f0       	breq	.+10     	; 0x385a <_Z19maininterupthandlerv+0x1e>
		{
			//Durchmesser ist 28 Zoll
			geschwindigkeit(28.0*2.54/100.0);
    3850:	63 e3       	ldi	r22, 0x33	; 51
    3852:	71 e1       	ldi	r23, 0x11	; 17
    3854:	86 e3       	ldi	r24, 0x36	; 54
    3856:	9f e3       	ldi	r25, 0x3F	; 63
    3858:	13 df       	rcall	.-474    	; 0x3680 <_Z15geschwindigkeitf>
		}
	}
	if ((rtc.interupts&(1<<Weckeractiv)))
    385a:	20 91 9c 07 	lds	r18, 0x079C
    385e:	82 2f       	mov	r24, r18
    3860:	88 71       	andi	r24, 0x18	; 24
	{
		if ((rtc.interupts&(1<<Weckerein)))
    3862:	88 31       	cpi	r24, 0x18	; 24
    3864:	61 f4       	brne	.+24     	; 0x387e <_Z19maininterupthandlerv+0x42>
		{
			anzeige |= (1<<blinkflag) | (1<<refreshdisplay);
    3866:	80 91 55 03 	lds	r24, 0x0355
    386a:	90 91 56 03 	lds	r25, 0x0356
    386e:	90 6c       	ori	r25, 0xC0	; 192
    3870:	90 93 56 03 	sts	0x0356, r25
    3874:	80 93 55 03 	sts	0x0355, r24
			rtc.interupts &= ~(1<<Weckerein);
    3878:	27 7f       	andi	r18, 0xF7	; 247
    387a:	20 93 9c 07 	sts	0x079C, r18
    387e:	08 95       	ret

00003880 <_Z14anzeigehandlerv>:
		}
	}
}

void anzeigehandler(){
    3880:	4f 92       	push	r4
    3882:	5f 92       	push	r5
    3884:	6f 92       	push	r6
    3886:	7f 92       	push	r7
    3888:	af 92       	push	r10
    388a:	bf 92       	push	r11
    388c:	cf 92       	push	r12
    388e:	df 92       	push	r13
    3890:	ef 92       	push	r14
    3892:	ff 92       	push	r15
    3894:	0f 93       	push	r16
    3896:	1f 93       	push	r17
    3898:	cf 93       	push	r28
    389a:	df 93       	push	r29
	//Handler fuer 1Hz Flag
	if ((rtc.interupts & (1<<sekundeninterupt)))
    389c:	80 91 9c 07 	lds	r24, 0x079C
    38a0:	81 ff       	sbrs	r24, 1
    38a2:	9c c1       	rjmp	.+824    	; 0x3bdc <_Z14anzeigehandlerv+0x35c>
	{
		rtc.zeit();
    38a4:	84 e8       	ldi	r24, 0x84	; 132
    38a6:	97 e0       	ldi	r25, 0x07	; 7
    38a8:	0e 94 52 2b 	call	0x56a4	; 0x56a4 <_ZN3RTC4zeitEv>
		//Handler fuer die Anzeige der Seiten
		//Die einzelnen Funktionen beschreiben nur den Framebuffer und nicht dierekt das Display
		if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))
    38ac:	80 91 55 03 	lds	r24, 0x0355
    38b0:	90 91 56 03 	lds	r25, 0x0356
    38b4:	9c 01       	movw	r18, r24
    38b6:	22 70       	andi	r18, 0x02	; 2
    38b8:	30 72       	andi	r19, 0x20	; 32
    38ba:	22 30       	cpi	r18, 0x02	; 2
    38bc:	30 42       	sbci	r19, 0x20	; 32
    38be:	61 f4       	brne	.+24     	; 0x38d8 <_Z14anzeigehandlerv+0x58>
		{
			menue_uhr();
    38c0:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <_Z9menue_uhrv>
			anzeige|=(1<<refreshdisplay);
    38c4:	80 91 55 03 	lds	r24, 0x0355
    38c8:	90 91 56 03 	lds	r25, 0x0356
    38cc:	90 68       	ori	r25, 0x80	; 128
    38ce:	90 93 56 03 	sts	0x0356, r25
    38d2:	80 93 55 03 	sts	0x0355, r24
    38d6:	68 c1       	rjmp	.+720    	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
    38d8:	9c 01       	movw	r18, r24
    38da:	22 27       	eor	r18, r18
    38dc:	30 73       	andi	r19, 0x30	; 48
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))
    38de:	21 15       	cp	r18, r1
    38e0:	30 43       	sbci	r19, 0x30	; 48
    38e2:	61 f4       	brne	.+24     	; 0x38fc <_Z14anzeigehandlerv+0x7c>
		{
			menue_einst();
    38e4:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <_Z11menue_einstv>
			anzeige|=(1<<refreshdisplay);
    38e8:	80 91 55 03 	lds	r24, 0x0355
    38ec:	90 91 56 03 	lds	r25, 0x0356
    38f0:	90 68       	ori	r25, 0x80	; 128
    38f2:	90 93 56 03 	sts	0x0356, r25
    38f6:	80 93 55 03 	sts	0x0355, r24
    38fa:	56 c1       	rjmp	.+684    	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<menueflag)))
    38fc:	95 ff       	sbrs	r25, 5
    38fe:	0c c0       	rjmp	.+24     	; 0x3918 <_Z14anzeigehandlerv+0x98>
		{
			menue_haupt();
    3900:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <_Z11menue_hauptv>
			anzeige|=(1<<refreshdisplay);
    3904:	80 91 55 03 	lds	r24, 0x0355
    3908:	90 91 56 03 	lds	r25, 0x0356
    390c:	90 68       	ori	r25, 0x80	; 128
    390e:	90 93 56 03 	sts	0x0356, r25
    3912:	80 93 55 03 	sts	0x0355, r24
    3916:	48 c1       	rjmp	.+656    	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3918:	91 ff       	sbrs	r25, 1
    391a:	0c c0       	rjmp	.+24     	; 0x3934 <_Z14anzeigehandlerv+0xb4>
		{
			Gaineinstellen();
    391c:	0e 94 9b 11 	call	0x2336	; 0x2336 <_Z14Gaineinstellenv>
			anzeige|=(1<<refreshdisplay);
    3920:	80 91 55 03 	lds	r24, 0x0355
    3924:	90 91 56 03 	lds	r25, 0x0356
    3928:	90 68       	ori	r25, 0x80	; 128
    392a:	90 93 56 03 	sts	0x0356, r25
    392e:	80 93 55 03 	sts	0x0355, r24
    3932:	3a c1       	rjmp	.+628    	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Uhrflag)))
    3934:	81 ff       	sbrs	r24, 1
    3936:	0c c0       	rjmp	.+24     	; 0x3950 <_Z14anzeigehandlerv+0xd0>
		{
			uhranzeigen();
    3938:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <_Z11uhranzeigenv>
			anzeige|=(1<<refreshdisplay);
    393c:	80 91 55 03 	lds	r24, 0x0355
    3940:	90 91 56 03 	lds	r25, 0x0356
    3944:	90 68       	ori	r25, 0x80	; 128
    3946:	90 93 56 03 	sts	0x0356, r25
    394a:	80 93 55 03 	sts	0x0355, r24
    394e:	2c c1       	rjmp	.+600    	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Kompasflag)))
    3950:	87 ff       	sbrs	r24, 7
    3952:	24 c0       	rjmp	.+72     	; 0x399c <_Z14anzeigehandlerv+0x11c>
		{
			Accelerometer.readacc();
    3954:	8b e5       	ldi	r24, 0x5B	; 91
    3956:	93 e0       	ldi	r25, 0x03	; 3
    3958:	0e 94 5a 26 	call	0x4cb4	; 0x4cb4 <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    395c:	00 91 67 03 	lds	r16, 0x0367
    3960:	10 91 68 03 	lds	r17, 0x0368
    3964:	20 91 69 03 	lds	r18, 0x0369
    3968:	30 91 6a 03 	lds	r19, 0x036A
    396c:	40 91 63 03 	lds	r20, 0x0363
    3970:	50 91 64 03 	lds	r21, 0x0364
    3974:	60 91 65 03 	lds	r22, 0x0365
    3978:	70 91 66 03 	lds	r23, 0x0366
    397c:	83 ea       	ldi	r24, 0xA3	; 163
    397e:	97 e0       	ldi	r25, 0x07	; 7
    3980:	0e 94 15 25 	call	0x4a2a	; 0x4a2a <_ZN7Kompass5angleEdd>
    3984:	0e 94 81 12 	call	0x2502	; 0x2502 <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    3988:	80 91 55 03 	lds	r24, 0x0355
    398c:	90 91 56 03 	lds	r25, 0x0356
    3990:	90 68       	ori	r25, 0x80	; 128
    3992:	90 93 56 03 	sts	0x0356, r25
    3996:	80 93 55 03 	sts	0x0355, r24
    399a:	06 c1       	rjmp	.+524    	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Fahradflag)))
    399c:	80 ff       	sbrs	r24, 0
    399e:	b1 c0       	rjmp	.+354    	; 0x3b02 <_Z14anzeigehandlerv+0x282>
		{
			//fahradschirm(12.3,kompass.angle());
			if (geschw>maxgeschw)
    39a0:	c0 90 50 03 	lds	r12, 0x0350
    39a4:	d0 90 51 03 	lds	r13, 0x0351
    39a8:	e0 90 52 03 	lds	r14, 0x0352
    39ac:	f0 90 53 03 	lds	r15, 0x0353
    39b0:	20 91 48 03 	lds	r18, 0x0348
    39b4:	30 91 49 03 	lds	r19, 0x0349
    39b8:	40 91 4a 03 	lds	r20, 0x034A
    39bc:	50 91 4b 03 	lds	r21, 0x034B
    39c0:	c7 01       	movw	r24, r14
    39c2:	b6 01       	movw	r22, r12
    39c4:	0e 94 36 2e 	call	0x5c6c	; 0x5c6c <__gesf2>
    39c8:	18 16       	cp	r1, r24
    39ca:	44 f4       	brge	.+16     	; 0x39dc <_Z14anzeigehandlerv+0x15c>
			{
				maxgeschw=geschw;
    39cc:	c0 92 48 03 	sts	0x0348, r12
    39d0:	d0 92 49 03 	sts	0x0349, r13
    39d4:	e0 92 4a 03 	sts	0x034A, r14
    39d8:	f0 92 4b 03 	sts	0x034B, r15
			}
			if (geschw != 0)
    39dc:	20 e0       	ldi	r18, 0x00	; 0
    39de:	30 e0       	ldi	r19, 0x00	; 0
    39e0:	a9 01       	movw	r20, r18
    39e2:	c7 01       	movw	r24, r14
    39e4:	b6 01       	movw	r22, r12
    39e6:	0e 94 86 2c 	call	0x590c	; 0x590c <__cmpsf2>
    39ea:	88 23       	and	r24, r24
    39ec:	99 f0       	breq	.+38     	; 0x3a14 <_Z14anzeigehandlerv+0x194>
			{
				Fahrtzeit++;
    39ee:	80 91 44 03 	lds	r24, 0x0344
    39f2:	90 91 45 03 	lds	r25, 0x0345
    39f6:	a0 91 46 03 	lds	r26, 0x0346
    39fa:	b0 91 47 03 	lds	r27, 0x0347
    39fe:	01 96       	adiw	r24, 0x01	; 1
    3a00:	a1 1d       	adc	r26, r1
    3a02:	b1 1d       	adc	r27, r1
    3a04:	80 93 44 03 	sts	0x0344, r24
    3a08:	90 93 45 03 	sts	0x0345, r25
    3a0c:	a0 93 46 03 	sts	0x0346, r26
    3a10:	b0 93 47 03 	sts	0x0347, r27
			}
			strecke+=geschw/3.6;
    3a14:	26 e6       	ldi	r18, 0x66	; 102
    3a16:	36 e6       	ldi	r19, 0x66	; 102
    3a18:	46 e6       	ldi	r20, 0x66	; 102
    3a1a:	50 e4       	ldi	r21, 0x40	; 64
    3a1c:	c7 01       	movw	r24, r14
    3a1e:	b6 01       	movw	r22, r12
    3a20:	0e 94 8d 2c 	call	0x591a	; 0x591a <__divsf3>
    3a24:	9b 01       	movw	r18, r22
    3a26:	ac 01       	movw	r20, r24
    3a28:	60 91 4c 03 	lds	r22, 0x034C
    3a2c:	70 91 4d 03 	lds	r23, 0x034D
    3a30:	80 91 4e 03 	lds	r24, 0x034E
    3a34:	90 91 4f 03 	lds	r25, 0x034F
    3a38:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__addsf3>
    3a3c:	60 93 4c 03 	sts	0x034C, r22
    3a40:	70 93 4d 03 	sts	0x034D, r23
    3a44:	80 93 4e 03 	sts	0x034E, r24
    3a48:	90 93 4f 03 	sts	0x034F, r25
			Accelerometer.readacc();
    3a4c:	8b e5       	ldi	r24, 0x5B	; 91
    3a4e:	93 e0       	ldi	r25, 0x03	; 3
    3a50:	0e 94 5a 26 	call	0x4cb4	; 0x4cb4 <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    3a54:	e0 90 44 03 	lds	r14, 0x0344
    3a58:	f0 90 45 03 	lds	r15, 0x0345
    3a5c:	c0 91 46 03 	lds	r28, 0x0346
    3a60:	d0 91 47 03 	lds	r29, 0x0347
    3a64:	a0 90 48 03 	lds	r10, 0x0348
    3a68:	b0 90 49 03 	lds	r11, 0x0349
    3a6c:	c0 90 4a 03 	lds	r12, 0x034A
    3a70:	d0 90 4b 03 	lds	r13, 0x034B
    3a74:	40 90 4c 03 	lds	r4, 0x034C
    3a78:	50 90 4d 03 	lds	r5, 0x034D
    3a7c:	60 90 4e 03 	lds	r6, 0x034E
    3a80:	70 90 4f 03 	lds	r7, 0x034F
    3a84:	00 91 67 03 	lds	r16, 0x0367
    3a88:	10 91 68 03 	lds	r17, 0x0368
    3a8c:	20 91 69 03 	lds	r18, 0x0369
    3a90:	30 91 6a 03 	lds	r19, 0x036A
    3a94:	40 91 63 03 	lds	r20, 0x0363
    3a98:	50 91 64 03 	lds	r21, 0x0364
    3a9c:	60 91 65 03 	lds	r22, 0x0365
    3aa0:	70 91 66 03 	lds	r23, 0x0366
    3aa4:	83 ea       	ldi	r24, 0xA3	; 163
    3aa6:	97 e0       	ldi	r25, 0x07	; 7
    3aa8:	c0 d7       	rcall	.+3968   	; 0x4a2a <_ZN7Kompass5angleEdd>
    3aaa:	9b 01       	movw	r18, r22
    3aac:	ac 01       	movw	r20, r24
    3aae:	60 91 50 03 	lds	r22, 0x0350
    3ab2:	70 91 51 03 	lds	r23, 0x0351
    3ab6:	80 91 52 03 	lds	r24, 0x0352
    3aba:	90 91 53 03 	lds	r25, 0x0353
    3abe:	df 93       	push	r29
    3ac0:	cf 93       	push	r28
    3ac2:	ff 92       	push	r15
    3ac4:	ef 92       	push	r14
    3ac6:	83 01       	movw	r16, r6
    3ac8:	72 01       	movw	r14, r4
    3aca:	0e 94 2d 10 	call	0x205a	; 0x205a <_Z12fahradschirmddddm>
			if (rtc.Sekunden%2)
    3ace:	80 91 96 07 	lds	r24, 0x0796
    3ad2:	0f 90       	pop	r0
    3ad4:	0f 90       	pop	r0
    3ad6:	0f 90       	pop	r0
    3ad8:	0f 90       	pop	r0
    3ada:	80 ff       	sbrs	r24, 0
    3adc:	08 c0       	rjmp	.+16     	; 0x3aee <_Z14anzeigehandlerv+0x26e>
			{
				geschw=0;
    3ade:	10 92 50 03 	sts	0x0350, r1
    3ae2:	10 92 51 03 	sts	0x0351, r1
    3ae6:	10 92 52 03 	sts	0x0352, r1
    3aea:	10 92 53 03 	sts	0x0353, r1
			}
			anzeige|=(1<<refreshdisplay);
    3aee:	80 91 55 03 	lds	r24, 0x0355
    3af2:	90 91 56 03 	lds	r25, 0x0356
    3af6:	90 68       	ori	r25, 0x80	; 128
    3af8:	90 93 56 03 	sts	0x0356, r25
    3afc:	80 93 55 03 	sts	0x0355, r24
    3b00:	53 c0       	rjmp	.+166    	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    3b02:	83 ff       	sbrs	r24, 3
    3b04:	0c c0       	rjmp	.+24     	; 0x3b1e <_Z14anzeigehandlerv+0x29e>
		{
			Stoppuhrseite();
    3b06:	0e 94 62 14 	call	0x28c4	; 0x28c4 <_Z13Stoppuhrseitev>
			anzeige|=(1<<refreshdisplay);
    3b0a:	80 91 55 03 	lds	r24, 0x0355
    3b0e:	90 91 56 03 	lds	r25, 0x0356
    3b12:	90 68       	ori	r25, 0x80	; 128
    3b14:	90 93 56 03 	sts	0x0356, r25
    3b18:	80 93 55 03 	sts	0x0355, r24
    3b1c:	45 c0       	rjmp	.+138    	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Timerflag)))
    3b1e:	82 ff       	sbrs	r24, 2
    3b20:	18 c0       	rjmp	.+48     	; 0x3b52 <_Z14anzeigehandlerv+0x2d2>
		{
			if (rtc.interupts&(1<<Alarm))
    3b22:	20 91 9c 07 	lds	r18, 0x079C
    3b26:	20 ff       	sbrs	r18, 0
    3b28:	08 c0       	rjmp	.+16     	; 0x3b3a <_Z14anzeigehandlerv+0x2ba>
			{
				anzeige |= (1<<blinkflag);
    3b2a:	90 64       	ori	r25, 0x40	; 64
    3b2c:	90 93 56 03 	sts	0x0356, r25
    3b30:	80 93 55 03 	sts	0x0355, r24
				rtc.interupts &= ~(1<<Alarm);
    3b34:	2e 7f       	andi	r18, 0xFE	; 254
    3b36:	20 93 9c 07 	sts	0x079C, r18
			}
			timerseite();
    3b3a:	0e 94 96 13 	call	0x272c	; 0x272c <_Z10timerseitev>
			anzeige|=(1<<refreshdisplay);
    3b3e:	80 91 55 03 	lds	r24, 0x0355
    3b42:	90 91 56 03 	lds	r25, 0x0356
    3b46:	90 68       	ori	r25, 0x80	; 128
    3b48:	90 93 56 03 	sts	0x0356, r25
    3b4c:	80 93 55 03 	sts	0x0355, r24
    3b50:	2b c0       	rjmp	.+86     	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Druckflag)))
    3b52:	92 ff       	sbrs	r25, 2
    3b54:	0c c0       	rjmp	.+24     	; 0x3b6e <_Z14anzeigehandlerv+0x2ee>
		{
			Pressuresensor();
    3b56:	0e 94 23 15 	call	0x2a46	; 0x2a46 <_Z14Pressuresensorv>
			anzeige |= (1<<refreshdisplay);
    3b5a:	80 91 55 03 	lds	r24, 0x0355
    3b5e:	90 91 56 03 	lds	r25, 0x0356
    3b62:	90 68       	ori	r25, 0x80	; 128
    3b64:	90 93 56 03 	sts	0x0356, r25
    3b68:	80 93 55 03 	sts	0x0355, r24
    3b6c:	1d c0       	rjmp	.+58     	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
		}
		else if ((anzeige&(1<<Wanderflag)))
    3b6e:	93 ff       	sbrs	r25, 3
    3b70:	0b c0       	rjmp	.+22     	; 0x3b88 <_Z14anzeigehandlerv+0x308>
		{
			Wanderseite();
    3b72:	5c d8       	rcall	.-3912   	; 0x2c2c <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    3b74:	80 91 55 03 	lds	r24, 0x0355
    3b78:	90 91 56 03 	lds	r25, 0x0356
    3b7c:	90 68       	ori	r25, 0x80	; 128
    3b7e:	90 93 56 03 	sts	0x0356, r25
    3b82:	80 93 55 03 	sts	0x0355, r24
    3b86:	10 c0       	rjmp	.+32     	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
    3b88:	80 74       	andi	r24, 0x40	; 64
    3b8a:	90 71       	andi	r25, 0x10	; 16
		}
		else if ((anzeige&(1<<Weckeranzeigeflag))&&(anzeige&(1<<Einstellungsflag)))
    3b8c:	80 34       	cpi	r24, 0x40	; 64
    3b8e:	90 41       	sbci	r25, 0x10	; 16
    3b90:	59 f4       	brne	.+22     	; 0x3ba8 <_Z14anzeigehandlerv+0x328>
		{
			Weckeranzeige();
    3b92:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3b96:	80 91 55 03 	lds	r24, 0x0355
    3b9a:	90 91 56 03 	lds	r25, 0x0356
    3b9e:	90 68       	ori	r25, 0x80	; 128
    3ba0:	90 93 56 03 	sts	0x0356, r25
    3ba4:	80 93 55 03 	sts	0x0355, r24
		}
		if ((anzeige&(1<<blinkflag)))
    3ba8:	80 91 55 03 	lds	r24, 0x0355
    3bac:	90 91 56 03 	lds	r25, 0x0356
    3bb0:	96 ff       	sbrs	r25, 6
    3bb2:	0f c0       	rjmp	.+30     	; 0x3bd2 <_Z14anzeigehandlerv+0x352>
		{
			oled.invert(rtc.Sekunden%2);
    3bb4:	60 91 96 07 	lds	r22, 0x0796
    3bb8:	61 70       	andi	r22, 0x01	; 1
    3bba:	83 e8       	ldi	r24, 0x83	; 131
    3bbc:	93 e0       	ldi	r25, 0x03	; 3
    3bbe:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
			LED.toggle();
    3bc2:	80 e8       	ldi	r24, 0x80	; 128
    3bc4:	93 e0       	ldi	r25, 0x03	; 3
    3bc6:	0e 94 af 28 	call	0x515e	; 0x515e <_ZN6Output6toggleEv>
			Vibrationsmotor.on();
    3bca:	8e e7       	ldi	r24, 0x7E	; 126
    3bcc:	93 e0       	ldi	r25, 0x03	; 3
    3bce:	0e 94 d6 27 	call	0x4fac	; 0x4fac <_ZN6Output2onEv>
		}
		rtc.interupts&=~(1<<sekundeninterupt);
    3bd2:	ec e9       	ldi	r30, 0x9C	; 156
    3bd4:	f7 e0       	ldi	r31, 0x07	; 7
    3bd6:	80 81       	ld	r24, Z
    3bd8:	8d 7f       	andi	r24, 0xFD	; 253
    3bda:	80 83       	st	Z, r24
	}
	//Minuteninterrupt
	if ((rtc.interupts&(1<<minuteninterupt)))
    3bdc:	80 91 9c 07 	lds	r24, 0x079C
    3be0:	82 ff       	sbrs	r24, 2
    3be2:	22 c0       	rjmp	.+68     	; 0x3c28 <_Z14anzeigehandlerv+0x3a8>
	{
		if ((anzeige&(1<<Uhrflaggross)))
    3be4:	80 91 55 03 	lds	r24, 0x0355
    3be8:	85 ff       	sbrs	r24, 5
    3bea:	0c c0       	rjmp	.+24     	; 0x3c04 <_Z14anzeigehandlerv+0x384>
		{
			uhranzeigenmin();
    3bec:	0e 94 43 0f 	call	0x1e86	; 0x1e86 <_Z14uhranzeigenminv>
			anzeige|=(1<<refreshdisplay);
    3bf0:	80 91 55 03 	lds	r24, 0x0355
    3bf4:	90 91 56 03 	lds	r25, 0x0356
    3bf8:	90 68       	ori	r25, 0x80	; 128
    3bfa:	90 93 56 03 	sts	0x0356, r25
    3bfe:	80 93 55 03 	sts	0x0355, r24
    3c02:	0d c0       	rjmp	.+26     	; 0x3c1e <_Z14anzeigehandlerv+0x39e>
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    3c04:	86 ff       	sbrs	r24, 6
    3c06:	0b c0       	rjmp	.+22     	; 0x3c1e <_Z14anzeigehandlerv+0x39e>
		{
			Weckeranzeige();
    3c08:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3c0c:	80 91 55 03 	lds	r24, 0x0355
    3c10:	90 91 56 03 	lds	r25, 0x0356
    3c14:	90 68       	ori	r25, 0x80	; 128
    3c16:	90 93 56 03 	sts	0x0356, r25
    3c1a:	80 93 55 03 	sts	0x0355, r24
		}
		rtc.interupts&=~(1<<minuteninterupt);
    3c1e:	ec e9       	ldi	r30, 0x9C	; 156
    3c20:	f7 e0       	ldi	r31, 0x07	; 7
    3c22:	80 81       	ld	r24, Z
    3c24:	8b 7f       	andi	r24, 0xFB	; 251
    3c26:	80 83       	st	Z, r24
	}
	//neuen Framebuffer an das Dispay senden
	if ((anzeige&(1<<refreshdisplay)))
    3c28:	80 91 55 03 	lds	r24, 0x0355
    3c2c:	90 91 56 03 	lds	r25, 0x0356
    3c30:	99 23       	and	r25, r25
    3c32:	6c f4       	brge	.+26     	; 0x3c4e <_Z14anzeigehandlerv+0x3ce>
	{
		oled.sendFrame();
    3c34:	83 e8       	ldi	r24, 0x83	; 131
    3c36:	93 e0       	ldi	r25, 0x03	; 3
    3c38:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN7Display9sendFrameEv>
		anzeige&=~(1<<refreshdisplay);
    3c3c:	80 91 55 03 	lds	r24, 0x0355
    3c40:	90 91 56 03 	lds	r25, 0x0356
    3c44:	9f 77       	andi	r25, 0x7F	; 127
    3c46:	90 93 56 03 	sts	0x0356, r25
    3c4a:	80 93 55 03 	sts	0x0355, r24
	}
}
    3c4e:	df 91       	pop	r29
    3c50:	cf 91       	pop	r28
    3c52:	1f 91       	pop	r17
    3c54:	0f 91       	pop	r16
    3c56:	ff 90       	pop	r15
    3c58:	ef 90       	pop	r14
    3c5a:	df 90       	pop	r13
    3c5c:	cf 90       	pop	r12
    3c5e:	bf 90       	pop	r11
    3c60:	af 90       	pop	r10
    3c62:	7f 90       	pop	r7
    3c64:	6f 90       	pop	r6
    3c66:	5f 90       	pop	r5
    3c68:	4f 90       	pop	r4
    3c6a:	08 95       	ret

00003c6c <_Z14eingabehandlerh>:

void eingabehandler(uint8_t taste){
	if (taste!='A')
    3c6c:	81 34       	cpi	r24, 0x41	; 65
    3c6e:	09 f4       	brne	.+2      	; 0x3c72 <_Z14eingabehandlerh+0x6>
    3c70:	9a c4       	rjmp	.+2356   	; 0x45a6 <__stack+0x4a7>
	{
		rtc.interupts |= (1<<sekundeninterupt);
    3c72:	ec e9       	ldi	r30, 0x9C	; 156
    3c74:	f7 e0       	ldi	r31, 0x07	; 7
    3c76:	90 81       	ld	r25, Z
    3c78:	29 2f       	mov	r18, r25
    3c7a:	22 60       	ori	r18, 0x02	; 2
    3c7c:	20 83       	st	Z, r18
		if (anzeige==255)
    3c7e:	20 91 55 03 	lds	r18, 0x0355
    3c82:	30 91 56 03 	lds	r19, 0x0356
    3c86:	2f 3f       	cpi	r18, 0xFF	; 255
    3c88:	31 05       	cpc	r19, r1
    3c8a:	61 f4       	brne	.+24     	; 0x3ca4 <_Z14eingabehandlerh+0x38>
		{
			oled.ssd1306_command(SSD1306_DISPLAYON);
    3c8c:	6f ea       	ldi	r22, 0xAF	; 175
    3c8e:	83 e8       	ldi	r24, 0x83	; 131
    3c90:	93 e0       	ldi	r25, 0x03	; 3
    3c92:	0e 94 10 03 	call	0x620	; 0x620 <_ZN7Display15ssd1306_commandEh>
			//entweder display aus oder das Menue starten
			anzeige=(1<<menueflag);
    3c96:	80 e0       	ldi	r24, 0x00	; 0
    3c98:	90 e2       	ldi	r25, 0x20	; 32
    3c9a:	90 93 56 03 	sts	0x0356, r25
    3c9e:	80 93 55 03 	sts	0x0355, r24
    3ca2:	08 95       	ret
    3ca4:	a9 01       	movw	r20, r18
    3ca6:	42 70       	andi	r20, 0x02	; 2
    3ca8:	50 72       	andi	r21, 0x20	; 32
		}
		//gleicher Handler wie oben, aber hier speziell fuer die Bearbeitung von Tastereingaben mit switch fuer die Tasten
		//es sind einfach so viele Tasten moeglich
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))	//Menue der Uhr
    3caa:	42 30       	cpi	r20, 0x02	; 2
    3cac:	50 42       	sbci	r21, 0x20	; 32
    3cae:	09 f0       	breq	.+2      	; 0x3cb2 <_Z14eingabehandlerh+0x46>
    3cb0:	50 c0       	rjmp	.+160    	; 0x3d52 <_Z14eingabehandlerh+0xe6>
		{
			anzeige&=~((1<<menueflag)|(1<<Uhrflag));
    3cb2:	2d 7f       	andi	r18, 0xFD	; 253
    3cb4:	3f 7d       	andi	r19, 0xDF	; 223
    3cb6:	30 93 56 03 	sts	0x0356, r19
    3cba:	20 93 55 03 	sts	0x0355, r18
			switch (taste)
    3cbe:	83 33       	cpi	r24, 0x33	; 51
    3cc0:	c9 f0       	breq	.+50     	; 0x3cf4 <_Z14eingabehandlerh+0x88>
    3cc2:	28 f4       	brcc	.+10     	; 0x3cce <_Z14eingabehandlerh+0x62>
    3cc4:	81 33       	cpi	r24, 0x31	; 49
    3cc6:	49 f0       	breq	.+18     	; 0x3cda <_Z14eingabehandlerh+0x6e>
    3cc8:	82 33       	cpi	r24, 0x32	; 50
    3cca:	69 f0       	breq	.+26     	; 0x3ce6 <_Z14eingabehandlerh+0x7a>
    3ccc:	3b c0       	rjmp	.+118    	; 0x3d44 <_Z14eingabehandlerh+0xd8>
    3cce:	85 33       	cpi	r24, 0x35	; 53
    3cd0:	31 f1       	breq	.+76     	; 0x3d1e <_Z14eingabehandlerh+0xb2>
    3cd2:	b8 f0       	brcs	.+46     	; 0x3d02 <_Z14eingabehandlerh+0x96>
    3cd4:	86 33       	cpi	r24, 0x36	; 54
    3cd6:	69 f1       	breq	.+90     	; 0x3d32 <_Z14eingabehandlerh+0xc6>
    3cd8:	35 c0       	rjmp	.+106    	; 0x3d44 <_Z14eingabehandlerh+0xd8>
			{
				case '1':
				//Wechseln auf die Uhr
				anzeige|=(1<<Uhrflag);
    3cda:	22 60       	ori	r18, 0x02	; 2
    3cdc:	30 93 56 03 	sts	0x0356, r19
    3ce0:	20 93 55 03 	sts	0x0355, r18
				break;
    3ce4:	08 95       	ret
				
				case '2':
				//starten der Stoppuhr APP
				anzeige|=(1<<refreshdisplay) | (1<<Stoppuhrflag);
    3ce6:	28 60       	ori	r18, 0x08	; 8
    3ce8:	30 68       	ori	r19, 0x80	; 128
    3cea:	30 93 56 03 	sts	0x0356, r19
    3cee:	20 93 55 03 	sts	0x0355, r18
				break;
    3cf2:	08 95       	ret
				
				case '3':
				//Starten der Timer APP	
				anzeige|=(1<<Timerflag) | (1<<Einstellungsflag);
    3cf4:	24 60       	ori	r18, 0x04	; 4
    3cf6:	30 61       	ori	r19, 0x10	; 16
    3cf8:	30 93 56 03 	sts	0x0356, r19
    3cfc:	20 93 55 03 	sts	0x0355, r18
				break;
    3d00:	08 95       	ret
				
				case '4':
				//Starten der Alarmapp, momentan nicht implementiert
				oled.clearFrame();
    3d02:	83 e8       	ldi	r24, 0x83	; 131
    3d04:	93 e0       	ldi	r25, 0x03	; 3
    3d06:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
				anzeige|=(1<<refreshdisplay);
    3d0a:	80 91 55 03 	lds	r24, 0x0355
    3d0e:	90 91 56 03 	lds	r25, 0x0356
    3d12:	90 68       	ori	r25, 0x80	; 128
    3d14:	90 93 56 03 	sts	0x0356, r25
    3d18:	80 93 55 03 	sts	0x0355, r24
				break;
    3d1c:	08 95       	ret
				
				case '5':
				//Wechseln auf grosse Uhr
				rtc.interupts |=(1<<minuteninterupt);
    3d1e:	96 60       	ori	r25, 0x06	; 6
    3d20:	90 93 9c 07 	sts	0x079C, r25
				anzeige |=(1<<Uhrflaggross) | (1<<refreshdisplay);
    3d24:	20 62       	ori	r18, 0x20	; 32
    3d26:	30 68       	ori	r19, 0x80	; 128
    3d28:	30 93 56 03 	sts	0x0356, r19
    3d2c:	20 93 55 03 	sts	0x0355, r18
				break;
    3d30:	08 95       	ret
				case '6':
				rtc.interupts |=(1<<minuteninterupt);
    3d32:	96 60       	ori	r25, 0x06	; 6
    3d34:	90 93 9c 07 	sts	0x079C, r25
				anzeige |= (1<<Weckeranzeigeflag);
    3d38:	20 64       	ori	r18, 0x40	; 64
    3d3a:	30 93 56 03 	sts	0x0356, r19
    3d3e:	20 93 55 03 	sts	0x0355, r18
				break;
    3d42:	08 95       	ret
				default:
				//menueflag erneu setzen
				anzeige|=(1<<menueflag)|(1<<Uhrflag);
    3d44:	22 60       	ori	r18, 0x02	; 2
    3d46:	30 62       	ori	r19, 0x20	; 32
    3d48:	30 93 56 03 	sts	0x0356, r19
    3d4c:	20 93 55 03 	sts	0x0355, r18
				break;
    3d50:	00 c4       	rjmp	.+2048   	; 0x4552 <__stack+0x453>
    3d52:	a9 01       	movw	r20, r18
    3d54:	44 27       	eor	r20, r20
    3d56:	50 73       	andi	r21, 0x30	; 48
			}
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))	//Menue der Einstellungen
    3d58:	41 15       	cp	r20, r1
    3d5a:	50 43       	sbci	r21, 0x30	; 48
    3d5c:	d9 f5       	brne	.+118    	; 0x3dd4 <_Z14eingabehandlerh+0x168>
		{
			anzeige&=~((1<<menueflag)|(1<<Einstellungsflag));
    3d5e:	3f 7c       	andi	r19, 0xCF	; 207
    3d60:	30 93 56 03 	sts	0x0356, r19
    3d64:	20 93 55 03 	sts	0x0355, r18
			switch (taste)
    3d68:	82 33       	cpi	r24, 0x32	; 50
    3d6a:	b1 f0       	breq	.+44     	; 0x3d98 <_Z14eingabehandlerh+0x12c>
    3d6c:	18 f4       	brcc	.+6      	; 0x3d74 <_Z14eingabehandlerh+0x108>
    3d6e:	81 33       	cpi	r24, 0x31	; 49
    3d70:	31 f0       	breq	.+12     	; 0x3d7e <_Z14eingabehandlerh+0x112>
    3d72:	2a c0       	rjmp	.+84     	; 0x3dc8 <_Z14eingabehandlerh+0x15c>
    3d74:	83 33       	cpi	r24, 0x33	; 51
    3d76:	b1 f0       	breq	.+44     	; 0x3da4 <_Z14eingabehandlerh+0x138>
    3d78:	84 33       	cpi	r24, 0x34	; 52
    3d7a:	f9 f0       	breq	.+62     	; 0x3dba <_Z14eingabehandlerh+0x14e>
    3d7c:	25 c0       	rjmp	.+74     	; 0x3dc8 <_Z14eingabehandlerh+0x15c>
			{
				case '1':
				//zuruecksetzen der Kalibrierung, da passive Kallibrierung eingebaut
				kompass.kallibrierung_ruecksetzen();
    3d7e:	83 ea       	ldi	r24, 0xA3	; 163
    3d80:	97 e0       	ldi	r25, 0x07	; 7
    3d82:	81 d7       	rcall	.+3842   	; 0x4c86 <_ZN7Kompass25kallibrierung_ruecksetzenEv>
				anzeige|=(1<<Kompasflag);
    3d84:	80 91 55 03 	lds	r24, 0x0355
    3d88:	90 91 56 03 	lds	r25, 0x0356
    3d8c:	80 68       	ori	r24, 0x80	; 128
    3d8e:	90 93 56 03 	sts	0x0356, r25
    3d92:	80 93 55 03 	sts	0x0355, r24
				break;
    3d96:	08 95       	ret
				case '2':
				//Gaineinstellung fuer den Kompass
				anzeige|=(1<<Kompasgaineinstellenflag);
    3d98:	32 60       	ori	r19, 0x02	; 2
    3d9a:	30 93 56 03 	sts	0x0356, r19
    3d9e:	20 93 55 03 	sts	0x0355, r18
				break;
    3da2:	08 95       	ret
				case '3':
				//dies ist eine der wenigen Funktinen, die die Handler Strucktur nicht anwenden, da sie die rtc anhaellt
				uhreinstellen();
    3da4:	7b d8       	rcall	.-3850   	; 0x2e9c <_Z13uhreinstellenv>
				anzeige|=(1<<Uhrflag);
    3da6:	80 91 55 03 	lds	r24, 0x0355
    3daa:	90 91 56 03 	lds	r25, 0x0356
    3dae:	82 60       	ori	r24, 0x02	; 2
    3db0:	90 93 56 03 	sts	0x0356, r25
    3db4:	80 93 55 03 	sts	0x0355, r24
				break;
    3db8:	08 95       	ret
				case '4':
				anzeige |= (1<<Einstellungsflag) | (1<<Weckeranzeigeflag);
    3dba:	20 64       	ori	r18, 0x40	; 64
    3dbc:	30 61       	ori	r19, 0x10	; 16
    3dbe:	30 93 56 03 	sts	0x0356, r19
    3dc2:	20 93 55 03 	sts	0x0355, r18
				break;
    3dc6:	08 95       	ret
				default:
				//Menueflag neu setzten
				anzeige|=(1<<menueflag)|(1<<Einstellungsflag);
    3dc8:	30 63       	ori	r19, 0x30	; 48
    3dca:	30 93 56 03 	sts	0x0356, r19
    3dce:	20 93 55 03 	sts	0x0355, r18
				break;
    3dd2:	bf c3       	rjmp	.+1918   	; 0x4552 <__stack+0x453>
			}
		}
		else if ((anzeige&(1<<menueflag)))	//nur das grosse menue
    3dd4:	35 ff       	sbrs	r19, 5
    3dd6:	4e c0       	rjmp	.+156    	; 0x3e74 <_Z14eingabehandlerh+0x208>
		{
			anzeige&=~(1<<menueflag);
    3dd8:	3f 7d       	andi	r19, 0xDF	; 223
    3dda:	30 93 56 03 	sts	0x0356, r19
    3dde:	20 93 55 03 	sts	0x0355, r18
			switch (taste)
    3de2:	48 2f       	mov	r20, r24
    3de4:	50 e0       	ldi	r21, 0x00	; 0
    3de6:	fa 01       	movw	r30, r20
    3de8:	f1 97       	sbiw	r30, 0x31	; 49
    3dea:	e7 30       	cpi	r30, 0x07	; 7
    3dec:	f1 05       	cpc	r31, r1
    3dee:	e0 f5       	brcc	.+120    	; 0x3e68 <_Z14eingabehandlerh+0x1fc>
    3df0:	e0 5b       	subi	r30, 0xB0	; 176
    3df2:	ff 4f       	sbci	r31, 0xFF	; 255
    3df4:	0c 94 df 32 	jmp	0x65be	; 0x65be <__tablejump2__>
			{
				case '1':
				anzeige|=(1<<Fahradflag);
    3df8:	21 60       	ori	r18, 0x01	; 1
    3dfa:	30 93 56 03 	sts	0x0356, r19
    3dfe:	20 93 55 03 	sts	0x0355, r18
				//starten des Timers fuer die geschwindigkeit
				TCCR1B |= ((1<<CS12) | (1<<CS10));
    3e02:	e1 e8       	ldi	r30, 0x81	; 129
    3e04:	f0 e0       	ldi	r31, 0x00	; 0
    3e06:	80 81       	ld	r24, Z
    3e08:	85 60       	ori	r24, 0x05	; 5
    3e0a:	80 83       	st	Z, r24
				break;
    3e0c:	08 95       	ret
				
				case '2':
				//Wanderanzeige schalten
				anzeige|=(1<<refreshdisplay) | (1<<Wanderflag);
    3e0e:	38 68       	ori	r19, 0x88	; 136
    3e10:	30 93 56 03 	sts	0x0356, r19
    3e14:	20 93 55 03 	sts	0x0355, r18
				break;
    3e18:	08 95       	ret
				
				case '3':
				anzeige|=(1<<Kompasflag);
    3e1a:	20 68       	ori	r18, 0x80	; 128
    3e1c:	30 93 56 03 	sts	0x0356, r19
    3e20:	20 93 55 03 	sts	0x0355, r18
				break;
    3e24:	08 95       	ret
				
				case '4':
				//Menue der Uhr
				anzeige|=(1<<menueflag) | (1<<Uhrflag);
    3e26:	22 60       	ori	r18, 0x02	; 2
    3e28:	30 62       	ori	r19, 0x20	; 32
    3e2a:	30 93 56 03 	sts	0x0356, r19
    3e2e:	20 93 55 03 	sts	0x0355, r18
				break;
    3e32:	08 95       	ret
				
				case '5':
				//menue der Einstellungen
				anzeige|=(1<<menueflag) | (1<<Einstellungsflag);
    3e34:	30 63       	ori	r19, 0x30	; 48
    3e36:	30 93 56 03 	sts	0x0356, r19
    3e3a:	20 93 55 03 	sts	0x0355, r18
				break;
    3e3e:	08 95       	ret
				
				case '6':
				//Display ausschalten
				//anzeige=255;
				oled.clearFrame();
    3e40:	83 e8       	ldi	r24, 0x83	; 131
    3e42:	93 e0       	ldi	r25, 0x03	; 3
    3e44:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
				anzeige|=(1<<refreshdisplay);
    3e48:	80 91 55 03 	lds	r24, 0x0355
    3e4c:	90 91 56 03 	lds	r25, 0x0356
    3e50:	90 68       	ori	r25, 0x80	; 128
    3e52:	90 93 56 03 	sts	0x0356, r25
    3e56:	80 93 55 03 	sts	0x0355, r24
				break;
    3e5a:	08 95       	ret
				case '7':
				anzeige |= (1<<Druckflag);
    3e5c:	34 60       	ori	r19, 0x04	; 4
    3e5e:	30 93 56 03 	sts	0x0356, r19
    3e62:	20 93 55 03 	sts	0x0355, r18
				break;
    3e66:	08 95       	ret
				default:
				//menueflag erneut setzen um abschalten zu verhindern
				anzeige|=(1<<menueflag);
    3e68:	30 62       	ori	r19, 0x20	; 32
    3e6a:	30 93 56 03 	sts	0x0356, r19
    3e6e:	20 93 55 03 	sts	0x0355, r18
				break;
    3e72:	6f c3       	rjmp	.+1758   	; 0x4552 <__stack+0x453>
    3e74:	a9 01       	movw	r20, r18
    3e76:	40 74       	andi	r20, 0x40	; 64
    3e78:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag))&&(anzeige&(1<<Weckeranzeigeflag)))
    3e7a:	40 34       	cpi	r20, 0x40	; 64
    3e7c:	50 41       	sbci	r21, 0x10	; 16
    3e7e:	09 f0       	breq	.+2      	; 0x3e82 <_Z14eingabehandlerh+0x216>
    3e80:	68 c0       	rjmp	.+208    	; 0x3f52 <_Z14eingabehandlerh+0x2e6>
		{
			switch (pos)
    3e82:	40 91 54 03 	lds	r20, 0x0354
    3e86:	41 30       	cpi	r20, 0x01	; 1
    3e88:	11 f1       	breq	.+68     	; 0x3ece <_Z14eingabehandlerh+0x262>
    3e8a:	30 f0       	brcs	.+12     	; 0x3e98 <_Z14eingabehandlerh+0x22c>
    3e8c:	42 30       	cpi	r20, 0x02	; 2
    3e8e:	79 f1       	breq	.+94     	; 0x3eee <_Z14eingabehandlerh+0x282>
    3e90:	43 30       	cpi	r20, 0x03	; 3
    3e92:	09 f4       	brne	.+2      	; 0x3e96 <_Z14eingabehandlerh+0x22a>
    3e94:	3f c0       	rjmp	.+126    	; 0x3f14 <_Z14eingabehandlerh+0x2a8>
    3e96:	5d c3       	rjmp	.+1722   	; 0x4552 <__stack+0x453>
			{
				case 0:
				rtc.WStunden=0;
    3e98:	10 92 9e 07 	sts	0x079E, r1
				rtc.WMinuten=0;
    3e9c:	10 92 9d 07 	sts	0x079D, r1
				rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
    3ea0:	97 7e       	andi	r25, 0xE7	; 231
    3ea2:	92 60       	ori	r25, 0x02	; 2
    3ea4:	90 93 9c 07 	sts	0x079C, r25
				switch (taste)
    3ea8:	83 32       	cpi	r24, 0x23	; 35
    3eaa:	09 f4       	brne	.+2      	; 0x3eae <_Z14eingabehandlerh+0x242>
    3eac:	52 c3       	rjmp	.+1700   	; 0x4552 <__stack+0x453>
    3eae:	8a 32       	cpi	r24, 0x2A	; 42
    3eb0:	09 f4       	brne	.+2      	; 0x3eb4 <_Z14eingabehandlerh+0x248>
    3eb2:	4f c3       	rjmp	.+1694   	; 0x4552 <__stack+0x453>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden=(taste-'0')*10;
    3eb4:	98 2f       	mov	r25, r24
    3eb6:	99 0f       	add	r25, r25
    3eb8:	90 56       	subi	r25, 0x60	; 96
    3eba:	29 2f       	mov	r18, r25
    3ebc:	22 0f       	add	r18, r18
    3ebe:	22 0f       	add	r18, r18
    3ec0:	92 0f       	add	r25, r18
    3ec2:	90 93 9e 07 	sts	0x079E, r25
					pos++;
    3ec6:	91 e0       	ldi	r25, 0x01	; 1
    3ec8:	90 93 54 03 	sts	0x0354, r25
					break;
    3ecc:	42 c3       	rjmp	.+1668   	; 0x4552 <__stack+0x453>
				}
				break;
				case 1:
				switch (taste)
    3ece:	83 32       	cpi	r24, 0x23	; 35
    3ed0:	09 f4       	brne	.+2      	; 0x3ed4 <_Z14eingabehandlerh+0x268>
    3ed2:	3f c3       	rjmp	.+1662   	; 0x4552 <__stack+0x453>
    3ed4:	8a 32       	cpi	r24, 0x2A	; 42
    3ed6:	09 f4       	brne	.+2      	; 0x3eda <_Z14eingabehandlerh+0x26e>
    3ed8:	3c c3       	rjmp	.+1656   	; 0x4552 <__stack+0x453>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden+=(taste-'0');
    3eda:	ee e9       	ldi	r30, 0x9E	; 158
    3edc:	f7 e0       	ldi	r31, 0x07	; 7
    3ede:	90 81       	ld	r25, Z
    3ee0:	90 53       	subi	r25, 0x30	; 48
    3ee2:	98 0f       	add	r25, r24
    3ee4:	90 83       	st	Z, r25
					pos++;
    3ee6:	92 e0       	ldi	r25, 0x02	; 2
    3ee8:	90 93 54 03 	sts	0x0354, r25
					break;
    3eec:	32 c3       	rjmp	.+1636   	; 0x4552 <__stack+0x453>
				}
				break;
				case 2:
				switch (taste)
    3eee:	83 32       	cpi	r24, 0x23	; 35
    3ef0:	09 f4       	brne	.+2      	; 0x3ef4 <_Z14eingabehandlerh+0x288>
    3ef2:	2f c3       	rjmp	.+1630   	; 0x4552 <__stack+0x453>
    3ef4:	8a 32       	cpi	r24, 0x2A	; 42
    3ef6:	09 f4       	brne	.+2      	; 0x3efa <_Z14eingabehandlerh+0x28e>
    3ef8:	2c c3       	rjmp	.+1624   	; 0x4552 <__stack+0x453>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten=(taste-'0')*10;
    3efa:	98 2f       	mov	r25, r24
    3efc:	99 0f       	add	r25, r25
    3efe:	90 56       	subi	r25, 0x60	; 96
    3f00:	29 2f       	mov	r18, r25
    3f02:	22 0f       	add	r18, r18
    3f04:	22 0f       	add	r18, r18
    3f06:	92 0f       	add	r25, r18
    3f08:	90 93 9d 07 	sts	0x079D, r25
					pos++;
    3f0c:	93 e0       	ldi	r25, 0x03	; 3
    3f0e:	90 93 54 03 	sts	0x0354, r25
					break;
    3f12:	1f c3       	rjmp	.+1598   	; 0x4552 <__stack+0x453>
				}
				break;
				case 3:
				switch (taste)
    3f14:	83 32       	cpi	r24, 0x23	; 35
    3f16:	41 f0       	breq	.+16     	; 0x3f28 <_Z14eingabehandlerh+0x2bc>
    3f18:	8a 32       	cpi	r24, 0x2A	; 42
    3f1a:	31 f0       	breq	.+12     	; 0x3f28 <_Z14eingabehandlerh+0x2bc>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten+=(taste-'0');
    3f1c:	ed e9       	ldi	r30, 0x9D	; 157
    3f1e:	f7 e0       	ldi	r31, 0x07	; 7
    3f20:	40 81       	ld	r20, Z
    3f22:	40 53       	subi	r20, 0x30	; 48
    3f24:	48 0f       	add	r20, r24
    3f26:	40 83       	st	Z, r20
					pos++;
					break;
				}
				pos=0;
    3f28:	10 92 54 03 	sts	0x0354, r1
				if (!(rtc.WStunden>=24) && !(rtc.WMinuten>=60))
    3f2c:	40 91 9e 07 	lds	r20, 0x079E
    3f30:	48 31       	cpi	r20, 0x18	; 24
    3f32:	08 f0       	brcs	.+2      	; 0x3f36 <_Z14eingabehandlerh+0x2ca>
    3f34:	0e c3       	rjmp	.+1564   	; 0x4552 <__stack+0x453>
    3f36:	40 91 9d 07 	lds	r20, 0x079D
    3f3a:	4c 33       	cpi	r20, 0x3C	; 60
    3f3c:	08 f0       	brcs	.+2      	; 0x3f40 <_Z14eingabehandlerh+0x2d4>
    3f3e:	09 c3       	rjmp	.+1554   	; 0x4552 <__stack+0x453>
				{
					anzeige&=~(1<<Einstellungsflag);
    3f40:	3f 7e       	andi	r19, 0xEF	; 239
    3f42:	30 93 56 03 	sts	0x0356, r19
    3f46:	20 93 55 03 	sts	0x0355, r18
					rtc.interupts|=(1<<Weckerein);
					rtc.interupts|=(1<<minuteninterupt);
    3f4a:	9e 60       	ori	r25, 0x0E	; 14
    3f4c:	90 93 9c 07 	sts	0x079C, r25
    3f50:	00 c3       	rjmp	.+1536   	; 0x4552 <__stack+0x453>
				}
				break;
			}
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3f52:	31 ff       	sbrs	r19, 1
    3f54:	4a c0       	rjmp	.+148    	; 0x3fea <_Z14eingabehandlerh+0x37e>
		{
			anzeige&=~(1<<Kompasgaineinstellenflag);
    3f56:	a9 01       	movw	r20, r18
    3f58:	5d 7f       	andi	r21, 0xFD	; 253
			anzeige|=(1<<Kompasflag);
    3f5a:	40 68       	ori	r20, 0x80	; 128
    3f5c:	50 93 56 03 	sts	0x0356, r21
    3f60:	40 93 55 03 	sts	0x0355, r20
			switch (taste) {
    3f64:	48 2f       	mov	r20, r24
    3f66:	50 e0       	ldi	r21, 0x00	; 0
    3f68:	fa 01       	movw	r30, r20
    3f6a:	f1 97       	sbiw	r30, 0x31	; 49
    3f6c:	e8 30       	cpi	r30, 0x08	; 8
    3f6e:	f1 05       	cpc	r31, r1
    3f70:	a0 f5       	brcc	.+104    	; 0x3fda <_Z14eingabehandlerh+0x36e>
    3f72:	e9 5a       	subi	r30, 0xA9	; 169
    3f74:	ff 4f       	sbci	r31, 0xFF	; 255
    3f76:	0c 94 df 32 	jmp	0x65be	; 0x65be <__tablejump2__>
				case '1':
				kompass.HMC5883L_command(0x01,HMCGAIN1370);
    3f7a:	40 e0       	ldi	r20, 0x00	; 0
    3f7c:	61 e0       	ldi	r22, 0x01	; 1
    3f7e:	83 ea       	ldi	r24, 0xA3	; 163
    3f80:	97 e0       	ldi	r25, 0x07	; 7
    3f82:	61 c4       	rjmp	.+2242   	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3f84:	08 95       	ret
				case '2':
				kompass.HMC5883L_command(0x01,HMCGAIN1090);
    3f86:	40 e2       	ldi	r20, 0x20	; 32
    3f88:	61 e0       	ldi	r22, 0x01	; 1
    3f8a:	83 ea       	ldi	r24, 0xA3	; 163
    3f8c:	97 e0       	ldi	r25, 0x07	; 7
    3f8e:	5b c4       	rjmp	.+2230   	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3f90:	08 95       	ret
				case '3':
				kompass.HMC5883L_command(0x01,HMCGAIN820);
    3f92:	40 e4       	ldi	r20, 0x40	; 64
    3f94:	61 e0       	ldi	r22, 0x01	; 1
    3f96:	83 ea       	ldi	r24, 0xA3	; 163
    3f98:	97 e0       	ldi	r25, 0x07	; 7
    3f9a:	55 c4       	rjmp	.+2218   	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3f9c:	08 95       	ret
				case '4':
				kompass.HMC5883L_command(0x01,HMCGAIN660);
    3f9e:	40 e6       	ldi	r20, 0x60	; 96
    3fa0:	61 e0       	ldi	r22, 0x01	; 1
    3fa2:	83 ea       	ldi	r24, 0xA3	; 163
    3fa4:	97 e0       	ldi	r25, 0x07	; 7
    3fa6:	4f c4       	rjmp	.+2206   	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fa8:	08 95       	ret
				case '5':
				kompass.HMC5883L_command(0x01,HMCGAIN440);
    3faa:	40 e8       	ldi	r20, 0x80	; 128
    3fac:	61 e0       	ldi	r22, 0x01	; 1
    3fae:	83 ea       	ldi	r24, 0xA3	; 163
    3fb0:	97 e0       	ldi	r25, 0x07	; 7
    3fb2:	49 c4       	rjmp	.+2194   	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fb4:	08 95       	ret
				case '6':
				kompass.HMC5883L_command(0x01,HMCGAIN390);
    3fb6:	40 ea       	ldi	r20, 0xA0	; 160
    3fb8:	61 e0       	ldi	r22, 0x01	; 1
    3fba:	83 ea       	ldi	r24, 0xA3	; 163
    3fbc:	97 e0       	ldi	r25, 0x07	; 7
    3fbe:	43 c4       	rjmp	.+2182   	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fc0:	08 95       	ret
				case '7':
				kompass.HMC5883L_command(0x01,HMCGAIN330);
    3fc2:	40 ec       	ldi	r20, 0xC0	; 192
    3fc4:	61 e0       	ldi	r22, 0x01	; 1
    3fc6:	83 ea       	ldi	r24, 0xA3	; 163
    3fc8:	97 e0       	ldi	r25, 0x07	; 7
    3fca:	3d c4       	rjmp	.+2170   	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fcc:	08 95       	ret
				case '8':
				kompass.HMC5883L_command(0x01,HMCGAIN230);
    3fce:	40 ee       	ldi	r20, 0xE0	; 224
    3fd0:	61 e0       	ldi	r22, 0x01	; 1
    3fd2:	83 ea       	ldi	r24, 0xA3	; 163
    3fd4:	97 e0       	ldi	r25, 0x07	; 7
    3fd6:	37 c4       	rjmp	.+2158   	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fd8:	08 95       	ret
				default:
				anzeige &=~(1<<Kompasflag);
    3fda:	2f 77       	andi	r18, 0x7F	; 127
    3fdc:	3d 7f       	andi	r19, 0xFD	; 253
				anzeige|=(1<<Kompasgaineinstellenflag);
    3fde:	32 60       	ori	r19, 0x02	; 2
    3fe0:	30 93 56 03 	sts	0x0356, r19
    3fe4:	20 93 55 03 	sts	0x0355, r18
				break;
    3fe8:	b4 c2       	rjmp	.+1384   	; 0x4552 <__stack+0x453>
    3fea:	a9 01       	movw	r20, r18
    3fec:	44 70       	andi	r20, 0x04	; 4
    3fee:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag)) && (anzeige&(1<<Timerflag)))
    3ff0:	44 30       	cpi	r20, 0x04	; 4
    3ff2:	50 41       	sbci	r21, 0x10	; 16
    3ff4:	09 f0       	breq	.+2      	; 0x3ff8 <_Z14eingabehandlerh+0x38c>
    3ff6:	60 c1       	rjmp	.+704    	; 0x42b8 <__stack+0x1b9>
		{
			switch (pos)
    3ff8:	40 91 54 03 	lds	r20, 0x0354
    3ffc:	42 30       	cpi	r20, 0x02	; 2
    3ffe:	09 f4       	brne	.+2      	; 0x4002 <_Z14eingabehandlerh+0x396>
    4000:	6d c0       	rjmp	.+218    	; 0x40dc <_Z14eingabehandlerh+0x470>
    4002:	28 f4       	brcc	.+10     	; 0x400e <_Z14eingabehandlerh+0x3a2>
    4004:	44 23       	and	r20, r20
    4006:	61 f0       	breq	.+24     	; 0x4020 <_Z14eingabehandlerh+0x3b4>
    4008:	41 30       	cpi	r20, 0x01	; 1
    400a:	d9 f1       	breq	.+118    	; 0x4082 <_Z14eingabehandlerh+0x416>
    400c:	a2 c2       	rjmp	.+1348   	; 0x4552 <__stack+0x453>
    400e:	44 30       	cpi	r20, 0x04	; 4
    4010:	09 f4       	brne	.+2      	; 0x4014 <_Z14eingabehandlerh+0x3a8>
    4012:	d1 c0       	rjmp	.+418    	; 0x41b6 <__stack+0xb7>
    4014:	08 f4       	brcc	.+2      	; 0x4018 <_Z14eingabehandlerh+0x3ac>
    4016:	9a c0       	rjmp	.+308    	; 0x414c <__stack+0x4d>
    4018:	45 30       	cpi	r20, 0x05	; 5
    401a:	09 f4       	brne	.+2      	; 0x401e <_Z14eingabehandlerh+0x3b2>
    401c:	04 c1       	rjmp	.+520    	; 0x4226 <__stack+0x127>
    401e:	99 c2       	rjmp	.+1330   	; 0x4552 <__stack+0x453>
			{
				case 0:
					switch (taste)
    4020:	83 32       	cpi	r24, 0x23	; 35
    4022:	19 f0       	breq	.+6      	; 0x402a <_Z14eingabehandlerh+0x3be>
    4024:	8a 32       	cpi	r24, 0x2A	; 42
    4026:	41 f0       	breq	.+16     	; 0x4038 <_Z14eingabehandlerh+0x3cc>
    4028:	1a c0       	rjmp	.+52     	; 0x405e <_Z14eingabehandlerh+0x3f2>
					{
						case '#':
							pos=0;
    402a:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    402e:	10 92 a0 07 	sts	0x07A0, r1
    4032:	10 92 9f 07 	sts	0x079F, r1
							break;
    4036:	08 95       	ret
						case '*':
							pos=0;
    4038:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    403c:	ef e9       	ldi	r30, 0x9F	; 159
    403e:	f7 e0       	ldi	r31, 0x07	; 7
    4040:	40 81       	ld	r20, Z
    4042:	51 81       	ldd	r21, Z+1	; 0x01
    4044:	4f 5f       	subi	r20, 0xFF	; 255
    4046:	5f 4f       	sbci	r21, 0xFF	; 255
    4048:	51 83       	std	Z+1, r21	; 0x01
    404a:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    404c:	3f 7e       	andi	r19, 0xEF	; 239
    404e:	30 93 56 03 	sts	0x0356, r19
    4052:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    4056:	92 62       	ori	r25, 0x22	; 34
    4058:	90 93 9c 07 	sts	0x079C, r25
							break;
    405c:	9e c2       	rjmp	.+1340   	; 0x459a <__stack+0x49b>
						default:
						rtc.Timerzahler=(taste-'0')*10;
    405e:	48 2f       	mov	r20, r24
    4060:	50 e0       	ldi	r21, 0x00	; 0
    4062:	40 53       	subi	r20, 0x30	; 48
    4064:	51 09       	sbc	r21, r1
    4066:	9a e0       	ldi	r25, 0x0A	; 10
    4068:	94 9f       	mul	r25, r20
    406a:	90 01       	movw	r18, r0
    406c:	95 9f       	mul	r25, r21
    406e:	30 0d       	add	r19, r0
    4070:	11 24       	eor	r1, r1
    4072:	30 93 a0 07 	sts	0x07A0, r19
    4076:	20 93 9f 07 	sts	0x079F, r18
						pos++;
    407a:	91 e0       	ldi	r25, 0x01	; 1
    407c:	90 93 54 03 	sts	0x0354, r25
						break;
    4080:	68 c2       	rjmp	.+1232   	; 0x4552 <__stack+0x453>
					}
					break;
				case 1:
					switch (taste)
    4082:	83 32       	cpi	r24, 0x23	; 35
    4084:	19 f0       	breq	.+6      	; 0x408c <_Z14eingabehandlerh+0x420>
    4086:	8a 32       	cpi	r24, 0x2A	; 42
    4088:	41 f0       	breq	.+16     	; 0x409a <_Z14eingabehandlerh+0x42e>
    408a:	1a c0       	rjmp	.+52     	; 0x40c0 <_Z14eingabehandlerh+0x454>
					{
						case '#':
							pos=0;
    408c:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    4090:	10 92 a0 07 	sts	0x07A0, r1
    4094:	10 92 9f 07 	sts	0x079F, r1
							break;
    4098:	08 95       	ret
						case '*':
							pos=0;
    409a:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    409e:	ef e9       	ldi	r30, 0x9F	; 159
    40a0:	f7 e0       	ldi	r31, 0x07	; 7
    40a2:	40 81       	ld	r20, Z
    40a4:	51 81       	ldd	r21, Z+1	; 0x01
    40a6:	4f 5f       	subi	r20, 0xFF	; 255
    40a8:	5f 4f       	sbci	r21, 0xFF	; 255
    40aa:	51 83       	std	Z+1, r21	; 0x01
    40ac:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    40ae:	3f 7e       	andi	r19, 0xEF	; 239
    40b0:	30 93 56 03 	sts	0x0356, r19
    40b4:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    40b8:	92 62       	ori	r25, 0x22	; 34
    40ba:	90 93 9c 07 	sts	0x079C, r25
							break;
    40be:	6d c2       	rjmp	.+1242   	; 0x459a <__stack+0x49b>
						default:
						rtc.Timerzahler+=(taste-'0');
    40c0:	ef e9       	ldi	r30, 0x9F	; 159
    40c2:	f7 e0       	ldi	r31, 0x07	; 7
    40c4:	20 81       	ld	r18, Z
    40c6:	31 81       	ldd	r19, Z+1	; 0x01
    40c8:	20 53       	subi	r18, 0x30	; 48
    40ca:	31 09       	sbc	r19, r1
    40cc:	28 0f       	add	r18, r24
    40ce:	31 1d       	adc	r19, r1
    40d0:	31 83       	std	Z+1, r19	; 0x01
    40d2:	20 83       	st	Z, r18
						pos++;
    40d4:	92 e0       	ldi	r25, 0x02	; 2
    40d6:	90 93 54 03 	sts	0x0354, r25
						break;
    40da:	3b c2       	rjmp	.+1142   	; 0x4552 <__stack+0x453>
					}
					break;
				case 2:
					switch (taste)
    40dc:	83 32       	cpi	r24, 0x23	; 35
    40de:	19 f0       	breq	.+6      	; 0x40e6 <_Z14eingabehandlerh+0x47a>
    40e0:	8a 32       	cpi	r24, 0x2A	; 42
    40e2:	41 f0       	breq	.+16     	; 0x40f4 <_Z14eingabehandlerh+0x488>
    40e4:	1a c0       	rjmp	.+52     	; 0x411a <__stack+0x1b>
					{
						case '#':
							pos=0;
    40e6:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    40ea:	10 92 a0 07 	sts	0x07A0, r1
    40ee:	10 92 9f 07 	sts	0x079F, r1
							break;
    40f2:	08 95       	ret
						case '*':
							pos=0;
    40f4:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    40f8:	ef e9       	ldi	r30, 0x9F	; 159
    40fa:	f7 e0       	ldi	r31, 0x07	; 7
    40fc:	40 81       	ld	r20, Z
    40fe:	51 81       	ldd	r21, Z+1	; 0x01
    4100:	4f 5f       	subi	r20, 0xFF	; 255
    4102:	5f 4f       	sbci	r21, 0xFF	; 255
    4104:	51 83       	std	Z+1, r21	; 0x01
    4106:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    4108:	3f 7e       	andi	r19, 0xEF	; 239
    410a:	30 93 56 03 	sts	0x0356, r19
    410e:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);;
    4112:	92 62       	ori	r25, 0x22	; 34
    4114:	90 93 9c 07 	sts	0x079C, r25
							break;
    4118:	40 c2       	rjmp	.+1152   	; 0x459a <__stack+0x49b>
						default:
						rtc.Timerzahler+=(taste-'0')*10*60;
    411a:	ef e9       	ldi	r30, 0x9F	; 159
    411c:	f7 e0       	ldi	r31, 0x07	; 7
    411e:	68 2f       	mov	r22, r24
    4120:	70 e0       	ldi	r23, 0x00	; 0
    4122:	60 53       	subi	r22, 0x30	; 48
    4124:	71 09       	sbc	r23, r1
    4126:	28 e5       	ldi	r18, 0x58	; 88
    4128:	32 e0       	ldi	r19, 0x02	; 2
    412a:	62 9f       	mul	r22, r18
    412c:	a0 01       	movw	r20, r0
    412e:	63 9f       	mul	r22, r19
    4130:	50 0d       	add	r21, r0
    4132:	72 9f       	mul	r23, r18
    4134:	50 0d       	add	r21, r0
    4136:	11 24       	eor	r1, r1
    4138:	20 81       	ld	r18, Z
    413a:	31 81       	ldd	r19, Z+1	; 0x01
    413c:	24 0f       	add	r18, r20
    413e:	35 1f       	adc	r19, r21
    4140:	31 83       	std	Z+1, r19	; 0x01
    4142:	20 83       	st	Z, r18
						pos++;
    4144:	93 e0       	ldi	r25, 0x03	; 3
    4146:	90 93 54 03 	sts	0x0354, r25
						break;
    414a:	03 c2       	rjmp	.+1030   	; 0x4552 <__stack+0x453>
					}
					break;
				case 3:
					switch (taste)
    414c:	83 32       	cpi	r24, 0x23	; 35
    414e:	19 f0       	breq	.+6      	; 0x4156 <__stack+0x57>
    4150:	8a 32       	cpi	r24, 0x2A	; 42
    4152:	41 f0       	breq	.+16     	; 0x4164 <__stack+0x65>
    4154:	1a c0       	rjmp	.+52     	; 0x418a <__stack+0x8b>
					{
						case '#':
							pos=0;
    4156:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    415a:	10 92 a0 07 	sts	0x07A0, r1
    415e:	10 92 9f 07 	sts	0x079F, r1
							break;
    4162:	08 95       	ret
						case '*':
							pos=0;
    4164:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    4168:	ef e9       	ldi	r30, 0x9F	; 159
    416a:	f7 e0       	ldi	r31, 0x07	; 7
    416c:	40 81       	ld	r20, Z
    416e:	51 81       	ldd	r21, Z+1	; 0x01
    4170:	4f 5f       	subi	r20, 0xFF	; 255
    4172:	5f 4f       	sbci	r21, 0xFF	; 255
    4174:	51 83       	std	Z+1, r21	; 0x01
    4176:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    4178:	3f 7e       	andi	r19, 0xEF	; 239
    417a:	30 93 56 03 	sts	0x0356, r19
    417e:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    4182:	92 62       	ori	r25, 0x22	; 34
    4184:	90 93 9c 07 	sts	0x079C, r25
							break;
    4188:	08 c2       	rjmp	.+1040   	; 0x459a <__stack+0x49b>
						default:
						rtc.Timerzahler+=(taste-'0')*60;
    418a:	ef e9       	ldi	r30, 0x9F	; 159
    418c:	f7 e0       	ldi	r31, 0x07	; 7
    418e:	28 2f       	mov	r18, r24
    4190:	30 e0       	ldi	r19, 0x00	; 0
    4192:	20 53       	subi	r18, 0x30	; 48
    4194:	31 09       	sbc	r19, r1
    4196:	9c e3       	ldi	r25, 0x3C	; 60
    4198:	92 9f       	mul	r25, r18
    419a:	a0 01       	movw	r20, r0
    419c:	93 9f       	mul	r25, r19
    419e:	50 0d       	add	r21, r0
    41a0:	11 24       	eor	r1, r1
    41a2:	20 81       	ld	r18, Z
    41a4:	31 81       	ldd	r19, Z+1	; 0x01
    41a6:	24 0f       	add	r18, r20
    41a8:	35 1f       	adc	r19, r21
    41aa:	31 83       	std	Z+1, r19	; 0x01
    41ac:	20 83       	st	Z, r18
						pos++;
    41ae:	94 e0       	ldi	r25, 0x04	; 4
    41b0:	90 93 54 03 	sts	0x0354, r25
						break;
    41b4:	ce c1       	rjmp	.+924    	; 0x4552 <__stack+0x453>
					}
					break;
				case 4:
					switch (taste)
    41b6:	83 32       	cpi	r24, 0x23	; 35
    41b8:	19 f0       	breq	.+6      	; 0x41c0 <__stack+0xc1>
    41ba:	8a 32       	cpi	r24, 0x2A	; 42
    41bc:	41 f0       	breq	.+16     	; 0x41ce <__stack+0xcf>
    41be:	1a c0       	rjmp	.+52     	; 0x41f4 <__stack+0xf5>
					{
						case '#':
							pos=0;
    41c0:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    41c4:	10 92 a0 07 	sts	0x07A0, r1
    41c8:	10 92 9f 07 	sts	0x079F, r1
							break;
    41cc:	08 95       	ret
						case '*':
							pos=0;
    41ce:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    41d2:	ef e9       	ldi	r30, 0x9F	; 159
    41d4:	f7 e0       	ldi	r31, 0x07	; 7
    41d6:	40 81       	ld	r20, Z
    41d8:	51 81       	ldd	r21, Z+1	; 0x01
    41da:	4f 5f       	subi	r20, 0xFF	; 255
    41dc:	5f 4f       	sbci	r21, 0xFF	; 255
    41de:	51 83       	std	Z+1, r21	; 0x01
    41e0:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    41e2:	3f 7e       	andi	r19, 0xEF	; 239
    41e4:	30 93 56 03 	sts	0x0356, r19
    41e8:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    41ec:	92 62       	ori	r25, 0x22	; 34
    41ee:	90 93 9c 07 	sts	0x079C, r25
							break;
    41f2:	d3 c1       	rjmp	.+934    	; 0x459a <__stack+0x49b>
						default:
						rtc.Timerzahler+=(taste-'0')*10*3600;
    41f4:	ef e9       	ldi	r30, 0x9F	; 159
    41f6:	f7 e0       	ldi	r31, 0x07	; 7
    41f8:	68 2f       	mov	r22, r24
    41fa:	70 e0       	ldi	r23, 0x00	; 0
    41fc:	60 53       	subi	r22, 0x30	; 48
    41fe:	71 09       	sbc	r23, r1
    4200:	20 ea       	ldi	r18, 0xA0	; 160
    4202:	3c e8       	ldi	r19, 0x8C	; 140
    4204:	62 9f       	mul	r22, r18
    4206:	a0 01       	movw	r20, r0
    4208:	63 9f       	mul	r22, r19
    420a:	50 0d       	add	r21, r0
    420c:	72 9f       	mul	r23, r18
    420e:	50 0d       	add	r21, r0
    4210:	11 24       	eor	r1, r1
    4212:	20 81       	ld	r18, Z
    4214:	31 81       	ldd	r19, Z+1	; 0x01
    4216:	24 0f       	add	r18, r20
    4218:	35 1f       	adc	r19, r21
    421a:	31 83       	std	Z+1, r19	; 0x01
    421c:	20 83       	st	Z, r18
						pos++;
    421e:	95 e0       	ldi	r25, 0x05	; 5
    4220:	90 93 54 03 	sts	0x0354, r25
						break;
    4224:	96 c1       	rjmp	.+812    	; 0x4552 <__stack+0x453>
					}
					break;
				case 5:
					switch (taste)
    4226:	83 32       	cpi	r24, 0x23	; 35
    4228:	19 f0       	breq	.+6      	; 0x4230 <__stack+0x131>
    422a:	8a 32       	cpi	r24, 0x2A	; 42
    422c:	31 f0       	breq	.+12     	; 0x423a <__stack+0x13b>
    422e:	16 c0       	rjmp	.+44     	; 0x425c <__stack+0x15d>
					{
						case '#':
							pos=0;
							rtc.Timerzahler=0;
    4230:	10 92 a0 07 	sts	0x07A0, r1
    4234:	10 92 9f 07 	sts	0x079F, r1
							break;
    4238:	26 c0       	rjmp	.+76     	; 0x4286 <__stack+0x187>
						case '*':
							pos=0;
							rtc.Timerzahler++;
    423a:	ef e9       	ldi	r30, 0x9F	; 159
    423c:	f7 e0       	ldi	r31, 0x07	; 7
    423e:	40 81       	ld	r20, Z
    4240:	51 81       	ldd	r21, Z+1	; 0x01
    4242:	4f 5f       	subi	r20, 0xFF	; 255
    4244:	5f 4f       	sbci	r21, 0xFF	; 255
    4246:	51 83       	std	Z+1, r21	; 0x01
    4248:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    424a:	3f 7e       	andi	r19, 0xEF	; 239
    424c:	30 93 56 03 	sts	0x0356, r19
    4250:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    4254:	92 62       	ori	r25, 0x22	; 34
    4256:	90 93 9c 07 	sts	0x079C, r25
							break;
    425a:	15 c0       	rjmp	.+42     	; 0x4286 <__stack+0x187>
						default:
						rtc.Timerzahler+=(taste-'0')*3600;
    425c:	ef e9       	ldi	r30, 0x9F	; 159
    425e:	f7 e0       	ldi	r31, 0x07	; 7
    4260:	68 2f       	mov	r22, r24
    4262:	70 e0       	ldi	r23, 0x00	; 0
    4264:	60 53       	subi	r22, 0x30	; 48
    4266:	71 09       	sbc	r23, r1
    4268:	20 e1       	ldi	r18, 0x10	; 16
    426a:	3e e0       	ldi	r19, 0x0E	; 14
    426c:	62 9f       	mul	r22, r18
    426e:	a0 01       	movw	r20, r0
    4270:	63 9f       	mul	r22, r19
    4272:	50 0d       	add	r21, r0
    4274:	72 9f       	mul	r23, r18
    4276:	50 0d       	add	r21, r0
    4278:	11 24       	eor	r1, r1
    427a:	20 81       	ld	r18, Z
    427c:	31 81       	ldd	r19, Z+1	; 0x01
    427e:	24 0f       	add	r18, r20
    4280:	35 1f       	adc	r19, r21
    4282:	31 83       	std	Z+1, r19	; 0x01
    4284:	20 83       	st	Z, r18
						pos++;
						break;
					}
					pos=0;
    4286:	10 92 54 03 	sts	0x0354, r1
					rtc.Timerzahler++;
    428a:	ef e9       	ldi	r30, 0x9F	; 159
    428c:	f7 e0       	ldi	r31, 0x07	; 7
    428e:	20 81       	ld	r18, Z
    4290:	31 81       	ldd	r19, Z+1	; 0x01
    4292:	2f 5f       	subi	r18, 0xFF	; 255
    4294:	3f 4f       	sbci	r19, 0xFF	; 255
    4296:	31 83       	std	Z+1, r19	; 0x01
    4298:	20 83       	st	Z, r18
					anzeige&=~(1<<Einstellungsflag);
    429a:	20 91 55 03 	lds	r18, 0x0355
    429e:	30 91 56 03 	lds	r19, 0x0356
    42a2:	3f 7e       	andi	r19, 0xEF	; 239
    42a4:	30 93 56 03 	sts	0x0356, r19
    42a8:	20 93 55 03 	sts	0x0355, r18
					rtc.interupts|=(1<<Timerlauft);
    42ac:	ec e9       	ldi	r30, 0x9C	; 156
    42ae:	f7 e0       	ldi	r31, 0x07	; 7
    42b0:	90 81       	ld	r25, Z
    42b2:	90 62       	ori	r25, 0x20	; 32
    42b4:	90 83       	st	Z, r25
					break;
    42b6:	4d c1       	rjmp	.+666    	; 0x4552 <__stack+0x453>
				default:
					break;
			}
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    42b8:	23 ff       	sbrs	r18, 3
    42ba:	22 c0       	rjmp	.+68     	; 0x4300 <__stack+0x201>
		{
			if (taste=='*')
    42bc:	8a 32       	cpi	r24, 0x2A	; 42
    42be:	59 f4       	brne	.+22     	; 0x42d6 <__stack+0x1d7>
			{
				if ((rtc.interupts&(1<<Stoppuhrlauft)))
    42c0:	96 ff       	sbrs	r25, 6
    42c2:	05 c0       	rjmp	.+10     	; 0x42ce <__stack+0x1cf>
				{
					rtc.interupts&=~(1<<Stoppuhrlauft);
    42c4:	9f 7b       	andi	r25, 0xBF	; 191
    42c6:	92 60       	ori	r25, 0x02	; 2
    42c8:	90 93 9c 07 	sts	0x079C, r25
    42cc:	66 c1       	rjmp	.+716    	; 0x459a <__stack+0x49b>
				}
				else{
					rtc.interupts|=(1<<Stoppuhrlauft);
    42ce:	92 64       	ori	r25, 0x42	; 66
    42d0:	90 93 9c 07 	sts	0x079C, r25
    42d4:	62 c1       	rjmp	.+708    	; 0x459a <__stack+0x49b>
				}
			}
			else if (taste=='0')
    42d6:	80 33       	cpi	r24, 0x30	; 48
    42d8:	29 f4       	brne	.+10     	; 0x42e4 <__stack+0x1e5>
			{
				rtc.Stoppuhrzahler=0;
    42da:	10 92 a2 07 	sts	0x07A2, r1
    42de:	10 92 a1 07 	sts	0x07A1, r1
    42e2:	08 95       	ret
			}
			else if (taste=='#')
    42e4:	83 32       	cpi	r24, 0x23	; 35
    42e6:	09 f0       	breq	.+2      	; 0x42ea <__stack+0x1eb>
    42e8:	5e c1       	rjmp	.+700    	; 0x45a6 <__stack+0x4a7>
			{
				anzeige&=~((1<<Stoppuhrflag));
				rtc.interupts&=~(1<<Stoppuhrlauft);
    42ea:	9f 7b       	andi	r25, 0xBF	; 191
    42ec:	92 60       	ori	r25, 0x02	; 2
    42ee:	90 93 9c 07 	sts	0x079C, r25
			{
				rtc.Stoppuhrzahler=0;
			}
			else if (taste=='#')
			{
				anzeige&=~((1<<Stoppuhrflag));
    42f2:	27 7f       	andi	r18, 0xF7	; 247
				rtc.interupts&=~(1<<Stoppuhrlauft);
				anzeige|=(1<<menueflag);
    42f4:	30 62       	ori	r19, 0x20	; 32
    42f6:	30 93 56 03 	sts	0x0356, r19
    42fa:	20 93 55 03 	sts	0x0355, r18
    42fe:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflag)))
    4300:	21 ff       	sbrs	r18, 1
    4302:	26 c0       	rjmp	.+76     	; 0x4350 <__stack+0x251>
		{
			if (taste=='#')
    4304:	83 32       	cpi	r24, 0x23	; 35
    4306:	49 f4       	brne	.+18     	; 0x431a <__stack+0x21b>
			{
				pos=0;
    4308:	10 92 54 03 	sts	0x0354, r1
				anzeige&=~(1<<Uhrflag);
    430c:	2d 7f       	andi	r18, 0xFD	; 253
				anzeige|=(1<<menueflag);
    430e:	30 62       	ori	r19, 0x20	; 32
    4310:	30 93 56 03 	sts	0x0356, r19
    4314:	20 93 55 03 	sts	0x0355, r18
    4318:	08 95       	ret
			}
			else if (taste=='*')
    431a:	8a 32       	cpi	r24, 0x2A	; 42
    431c:	49 f4       	brne	.+18     	; 0x4330 <__stack+0x231>
			{
				pos++;
    431e:	80 91 54 03 	lds	r24, 0x0354
    4322:	8f 5f       	subi	r24, 0xFF	; 255
				if (pos>1)
    4324:	82 30       	cpi	r24, 0x02	; 2
    4326:	08 f4       	brcc	.+2      	; 0x432a <__stack+0x22b>
    4328:	36 c1       	rjmp	.+620    	; 0x4596 <__stack+0x497>
				{
					pos=0;
    432a:	10 92 54 03 	sts	0x0354, r1
    432e:	35 c1       	rjmp	.+618    	; 0x459a <__stack+0x49b>
				}
			}
			else if (taste=='0')
    4330:	80 33       	cpi	r24, 0x30	; 48
    4332:	09 f0       	breq	.+2      	; 0x4336 <__stack+0x237>
    4334:	38 c1       	rjmp	.+624    	; 0x45a6 <__stack+0x4a7>
			{
				if (LED.ison())
    4336:	80 e8       	ldi	r24, 0x80	; 128
    4338:	93 e0       	ldi	r25, 0x03	; 3
    433a:	81 d6       	rcall	.+3330   	; 0x503e <_ZN6Output4isonEv>
    433c:	88 23       	and	r24, r24
    433e:	21 f0       	breq	.+8      	; 0x4348 <__stack+0x249>
				{
					LED.off();
    4340:	80 e8       	ldi	r24, 0x80	; 128
    4342:	93 e0       	ldi	r25, 0x03	; 3
    4344:	bf c6       	rjmp	.+3454   	; 0x50c4 <_ZN6Output3offEv>
    4346:	08 95       	ret
				}
				else{
					LED.on();
    4348:	80 e8       	ldi	r24, 0x80	; 128
    434a:	93 e0       	ldi	r25, 0x03	; 3
    434c:	2f c6       	rjmp	.+3166   	; 0x4fac <_ZN6Output2onEv>
    434e:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Kompasflag)))
    4350:	27 ff       	sbrs	r18, 7
    4352:	1a c0       	rjmp	.+52     	; 0x4388 <__stack+0x289>
		{
			if (taste=='#')
    4354:	83 32       	cpi	r24, 0x23	; 35
    4356:	41 f4       	brne	.+16     	; 0x4368 <__stack+0x269>
			{
				anzeige&=~(1<<Kompasflag);
    4358:	c9 01       	movw	r24, r18
    435a:	8f 77       	andi	r24, 0x7F	; 127
				anzeige|=(1<<menueflag);
    435c:	90 62       	ori	r25, 0x20	; 32
    435e:	90 93 56 03 	sts	0x0356, r25
    4362:	80 93 55 03 	sts	0x0355, r24
    4366:	08 95       	ret
			}
			else if (taste=='0')
    4368:	80 33       	cpi	r24, 0x30	; 48
    436a:	09 f0       	breq	.+2      	; 0x436e <__stack+0x26f>
    436c:	f2 c0       	rjmp	.+484    	; 0x4552 <__stack+0x453>
			{
				if (LED.ison())
    436e:	80 e8       	ldi	r24, 0x80	; 128
    4370:	93 e0       	ldi	r25, 0x03	; 3
    4372:	65 d6       	rcall	.+3274   	; 0x503e <_ZN6Output4isonEv>
    4374:	88 23       	and	r24, r24
    4376:	21 f0       	breq	.+8      	; 0x4380 <__stack+0x281>
				{
					LED.off();
    4378:	80 e8       	ldi	r24, 0x80	; 128
    437a:	93 e0       	ldi	r25, 0x03	; 3
    437c:	a3 c6       	rjmp	.+3398   	; 0x50c4 <_ZN6Output3offEv>
    437e:	08 95       	ret
				}
				else{
					LED.on();
    4380:	80 e8       	ldi	r24, 0x80	; 128
    4382:	93 e0       	ldi	r25, 0x03	; 3
    4384:	13 c6       	rjmp	.+3110   	; 0x4fac <_ZN6Output2onEv>
    4386:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Fahradflag)))
    4388:	20 ff       	sbrs	r18, 0
    438a:	3a c0       	rjmp	.+116    	; 0x4400 <__stack+0x301>
		{
			if (taste=='#')
    438c:	83 32       	cpi	r24, 0x23	; 35
    438e:	69 f4       	brne	.+26     	; 0x43aa <__stack+0x2ab>
			{
				anzeige&=~(1<<Fahradflag);
    4390:	c9 01       	movw	r24, r18
    4392:	8e 7f       	andi	r24, 0xFE	; 254
				anzeige|=(1<<menueflag);
    4394:	90 62       	ori	r25, 0x20	; 32
    4396:	90 93 56 03 	sts	0x0356, r25
    439a:	80 93 55 03 	sts	0x0355, r24
				TCCR1B &= ~((1<<CS12) | (1<<CS10));
    439e:	e1 e8       	ldi	r30, 0x81	; 129
    43a0:	f0 e0       	ldi	r31, 0x00	; 0
    43a2:	80 81       	ld	r24, Z
    43a4:	8a 7f       	andi	r24, 0xFA	; 250
    43a6:	80 83       	st	Z, r24
    43a8:	08 95       	ret
			}
			else if (taste=='*')
    43aa:	8a 32       	cpi	r24, 0x2A	; 42
    43ac:	c9 f4       	brne	.+50     	; 0x43e0 <__stack+0x2e1>
			{
				maxgeschw = 0;
    43ae:	10 92 48 03 	sts	0x0348, r1
    43b2:	10 92 49 03 	sts	0x0349, r1
    43b6:	10 92 4a 03 	sts	0x034A, r1
    43ba:	10 92 4b 03 	sts	0x034B, r1
				strecke = 0;
    43be:	10 92 4c 03 	sts	0x034C, r1
    43c2:	10 92 4d 03 	sts	0x034D, r1
    43c6:	10 92 4e 03 	sts	0x034E, r1
    43ca:	10 92 4f 03 	sts	0x034F, r1
				Fahrtzeit = 0;
    43ce:	10 92 44 03 	sts	0x0344, r1
    43d2:	10 92 45 03 	sts	0x0345, r1
    43d6:	10 92 46 03 	sts	0x0346, r1
    43da:	10 92 47 03 	sts	0x0347, r1
    43de:	dd c0       	rjmp	.+442    	; 0x459a <__stack+0x49b>
			}
			else if (taste=='0')
    43e0:	80 33       	cpi	r24, 0x30	; 48
    43e2:	09 f0       	breq	.+2      	; 0x43e6 <__stack+0x2e7>
    43e4:	e0 c0       	rjmp	.+448    	; 0x45a6 <__stack+0x4a7>
			{
				if (LED.ison())
    43e6:	80 e8       	ldi	r24, 0x80	; 128
    43e8:	93 e0       	ldi	r25, 0x03	; 3
    43ea:	29 d6       	rcall	.+3154   	; 0x503e <_ZN6Output4isonEv>
    43ec:	88 23       	and	r24, r24
    43ee:	21 f0       	breq	.+8      	; 0x43f8 <__stack+0x2f9>
				{
					LED.off();
    43f0:	80 e8       	ldi	r24, 0x80	; 128
    43f2:	93 e0       	ldi	r25, 0x03	; 3
    43f4:	67 c6       	rjmp	.+3278   	; 0x50c4 <_ZN6Output3offEv>
    43f6:	08 95       	ret
				}
				else{
					LED.on();
    43f8:	80 e8       	ldi	r24, 0x80	; 128
    43fa:	93 e0       	ldi	r25, 0x03	; 3
    43fc:	d7 c5       	rjmp	.+2990   	; 0x4fac <_ZN6Output2onEv>
    43fe:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Druckflag)))
    4400:	32 ff       	sbrs	r19, 2
    4402:	29 c0       	rjmp	.+82     	; 0x4456 <__stack+0x357>
		{
			if (taste=='#')
    4404:	83 32       	cpi	r24, 0x23	; 35
    4406:	41 f4       	brne	.+16     	; 0x4418 <__stack+0x319>
			{
				anzeige&=~(1<<Druckflag);
    4408:	c9 01       	movw	r24, r18
    440a:	9b 7f       	andi	r25, 0xFB	; 251
				anzeige|=(1<<menueflag);
    440c:	90 62       	ori	r25, 0x20	; 32
    440e:	90 93 56 03 	sts	0x0356, r25
    4412:	80 93 55 03 	sts	0x0355, r24
    4416:	08 95       	ret
			}
			else if (taste=='*')
    4418:	8a 32       	cpi	r24, 0x2A	; 42
    441a:	69 f4       	brne	.+26     	; 0x4436 <__stack+0x337>
			{
				Baro.set_Pressure0(Baro.Press);
    441c:	40 91 6c 03 	lds	r20, 0x036C
    4420:	50 91 6d 03 	lds	r21, 0x036D
    4424:	60 91 6e 03 	lds	r22, 0x036E
    4428:	70 91 6f 03 	lds	r23, 0x036F
    442c:	8c e6       	ldi	r24, 0x6C	; 108
    442e:	93 e0       	ldi	r25, 0x03	; 3
    4430:	0e 94 5b 2a 	call	0x54b6	; 0x54b6 <_ZN8Pressure13set_Pressure0Ed>
    4434:	b2 c0       	rjmp	.+356    	; 0x459a <__stack+0x49b>
			}
			else if (taste=='0')
    4436:	80 33       	cpi	r24, 0x30	; 48
    4438:	09 f0       	breq	.+2      	; 0x443c <__stack+0x33d>
    443a:	b5 c0       	rjmp	.+362    	; 0x45a6 <__stack+0x4a7>
			{
				if (LED.ison())
    443c:	80 e8       	ldi	r24, 0x80	; 128
    443e:	93 e0       	ldi	r25, 0x03	; 3
    4440:	fe d5       	rcall	.+3068   	; 0x503e <_ZN6Output4isonEv>
    4442:	88 23       	and	r24, r24
    4444:	21 f0       	breq	.+8      	; 0x444e <__stack+0x34f>
				{
					LED.off();
    4446:	80 e8       	ldi	r24, 0x80	; 128
    4448:	93 e0       	ldi	r25, 0x03	; 3
    444a:	3c c6       	rjmp	.+3192   	; 0x50c4 <_ZN6Output3offEv>
    444c:	08 95       	ret
				}
				else{
					LED.on();
    444e:	80 e8       	ldi	r24, 0x80	; 128
    4450:	93 e0       	ldi	r25, 0x03	; 3
    4452:	ac c5       	rjmp	.+2904   	; 0x4fac <_ZN6Output2onEv>
    4454:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Timerflag)))
    4456:	22 ff       	sbrs	r18, 2
    4458:	23 c0       	rjmp	.+70     	; 0x44a0 <__stack+0x3a1>
		{
			if (taste=='#')
    445a:	83 32       	cpi	r24, 0x23	; 35
    445c:	09 f0       	breq	.+2      	; 0x4460 <__stack+0x361>
    445e:	79 c0       	rjmp	.+242    	; 0x4552 <__stack+0x453>
			{
				anzeige&=~((1<<Timerflag)|(1<<blinkflag));
    4460:	2b 7f       	andi	r18, 0xFB	; 251
    4462:	3f 7b       	andi	r19, 0xBF	; 191
    4464:	30 93 56 03 	sts	0x0356, r19
    4468:	20 93 55 03 	sts	0x0355, r18
				rtc.interupts&=~((1<<Timerlauft)|(1<<Alarm));
    446c:	89 2f       	mov	r24, r25
    446e:	8e 7d       	andi	r24, 0xDE	; 222
    4470:	82 60       	ori	r24, 0x02	; 2
    4472:	80 93 9c 07 	sts	0x079C, r24
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    4476:	60 e0       	ldi	r22, 0x00	; 0
    4478:	83 e8       	ldi	r24, 0x83	; 131
    447a:	93 e0       	ldi	r25, 0x03	; 3
    447c:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
				LED.off();
    4480:	80 e8       	ldi	r24, 0x80	; 128
    4482:	93 e0       	ldi	r25, 0x03	; 3
    4484:	1f d6       	rcall	.+3134   	; 0x50c4 <_ZN6Output3offEv>
				Vibrationsmotor.off();
    4486:	8e e7       	ldi	r24, 0x7E	; 126
    4488:	93 e0       	ldi	r25, 0x03	; 3
    448a:	1c d6       	rcall	.+3128   	; 0x50c4 <_ZN6Output3offEv>
				
				anzeige|=(1<<menueflag);
    448c:	80 91 55 03 	lds	r24, 0x0355
    4490:	90 91 56 03 	lds	r25, 0x0356
    4494:	90 62       	ori	r25, 0x20	; 32
    4496:	90 93 56 03 	sts	0x0356, r25
    449a:	80 93 55 03 	sts	0x0355, r24
    449e:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflaggross)))
    44a0:	25 ff       	sbrs	r18, 5
    44a2:	1a c0       	rjmp	.+52     	; 0x44d8 <__stack+0x3d9>
		{
			if (taste=='#')
    44a4:	83 32       	cpi	r24, 0x23	; 35
    44a6:	41 f4       	brne	.+16     	; 0x44b8 <__stack+0x3b9>
			{
				anzeige&=~(1<<Uhrflaggross);
    44a8:	c9 01       	movw	r24, r18
    44aa:	8f 7d       	andi	r24, 0xDF	; 223
				anzeige|=(1<<menueflag);
    44ac:	90 62       	ori	r25, 0x20	; 32
    44ae:	90 93 56 03 	sts	0x0356, r25
    44b2:	80 93 55 03 	sts	0x0355, r24
    44b6:	08 95       	ret
			}
			else if (taste=='0')
    44b8:	80 33       	cpi	r24, 0x30	; 48
    44ba:	09 f0       	breq	.+2      	; 0x44be <__stack+0x3bf>
    44bc:	4a c0       	rjmp	.+148    	; 0x4552 <__stack+0x453>
			{
				if (LED.ison())
    44be:	80 e8       	ldi	r24, 0x80	; 128
    44c0:	93 e0       	ldi	r25, 0x03	; 3
    44c2:	bd d5       	rcall	.+2938   	; 0x503e <_ZN6Output4isonEv>
    44c4:	88 23       	and	r24, r24
    44c6:	21 f0       	breq	.+8      	; 0x44d0 <__stack+0x3d1>
				{
					LED.off();
    44c8:	80 e8       	ldi	r24, 0x80	; 128
    44ca:	93 e0       	ldi	r25, 0x03	; 3
    44cc:	fb c5       	rjmp	.+3062   	; 0x50c4 <_ZN6Output3offEv>
    44ce:	08 95       	ret
				}
				else{
					LED.on();
    44d0:	80 e8       	ldi	r24, 0x80	; 128
    44d2:	93 e0       	ldi	r25, 0x03	; 3
    44d4:	6b c5       	rjmp	.+2774   	; 0x4fac <_ZN6Output2onEv>
    44d6:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Wanderflag)))
    44d8:	33 ff       	sbrs	r19, 3
    44da:	0a c0       	rjmp	.+20     	; 0x44f0 <__stack+0x3f1>
		{
			if (taste=='#')
    44dc:	83 32       	cpi	r24, 0x23	; 35
    44de:	c9 f5       	brne	.+114    	; 0x4552 <__stack+0x453>
			{
				anzeige &= ~(1<<Wanderflag);
    44e0:	c9 01       	movw	r24, r18
    44e2:	97 7f       	andi	r25, 0xF7	; 247
				anzeige |= (1<<menueflag);
    44e4:	90 62       	ori	r25, 0x20	; 32
    44e6:	90 93 56 03 	sts	0x0356, r25
    44ea:	80 93 55 03 	sts	0x0355, r24
    44ee:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    44f0:	26 ff       	sbrs	r18, 6
    44f2:	26 c0       	rjmp	.+76     	; 0x4540 <__stack+0x441>
		{
			if (taste=='#')
    44f4:	83 32       	cpi	r24, 0x23	; 35
    44f6:	41 f4       	brne	.+16     	; 0x4508 <__stack+0x409>
			{
				anzeige&=~(1<<Weckeranzeigeflag);
    44f8:	c9 01       	movw	r24, r18
    44fa:	8f 7b       	andi	r24, 0xBF	; 191
				anzeige|=(1<<menueflag);
    44fc:	90 62       	ori	r25, 0x20	; 32
    44fe:	90 93 56 03 	sts	0x0356, r25
    4502:	80 93 55 03 	sts	0x0355, r24
    4506:	08 95       	ret
			}
			if (taste=='*')
    4508:	8a 32       	cpi	r24, 0x2A	; 42
    450a:	09 f0       	breq	.+2      	; 0x450e <__stack+0x40f>
    450c:	4c c0       	rjmp	.+152    	; 0x45a6 <__stack+0x4a7>
			{
				if (rtc.interupts&(1<<Weckeractiv))
    450e:	94 ff       	sbrs	r25, 4
    4510:	06 c0       	rjmp	.+12     	; 0x451e <__stack+0x41f>
				{
					rtc.interupts &= ~((1<<Weckerein) | (1<<Weckeractiv));
    4512:	89 2f       	mov	r24, r25
    4514:	87 7e       	andi	r24, 0xE7	; 231
    4516:	82 60       	ori	r24, 0x02	; 2
    4518:	80 93 9c 07 	sts	0x079C, r24
    451c:	0b c0       	rjmp	.+22     	; 0x4534 <__stack+0x435>
				}
				else if ((rtc.interupts&(1<<Weckerein)))
    451e:	93 ff       	sbrs	r25, 3
    4520:	06 c0       	rjmp	.+12     	; 0x452e <__stack+0x42f>
				{
					rtc.interupts &= ~(1<<Weckerein);
    4522:	89 2f       	mov	r24, r25
    4524:	87 7f       	andi	r24, 0xF7	; 247
    4526:	82 60       	ori	r24, 0x02	; 2
    4528:	80 93 9c 07 	sts	0x079C, r24
    452c:	03 c0       	rjmp	.+6      	; 0x4534 <__stack+0x435>
				}
				else{
					rtc.interupts |= (1<<Weckerein);
    452e:	9a 60       	ori	r25, 0x0A	; 10
    4530:	90 93 9c 07 	sts	0x079C, r25
				}
				rtc.interupts|=(1<<minuteninterupt);
    4534:	ec e9       	ldi	r30, 0x9C	; 156
    4536:	f7 e0       	ldi	r31, 0x07	; 7
    4538:	80 81       	ld	r24, Z
    453a:	84 60       	ori	r24, 0x04	; 4
    453c:	80 83       	st	Z, r24
    453e:	2d c0       	rjmp	.+90     	; 0x459a <__stack+0x49b>
			}
		}
		else if (anzeige==0)
    4540:	23 2b       	or	r18, r19
    4542:	39 f4       	brne	.+14     	; 0x4552 <__stack+0x453>
		{
			anzeige|=(1<<menueflag);
    4544:	80 e0       	ldi	r24, 0x00	; 0
    4546:	90 e2       	ldi	r25, 0x20	; 32
    4548:	90 93 56 03 	sts	0x0356, r25
    454c:	80 93 55 03 	sts	0x0355, r24
    4550:	08 95       	ret
		}
		if ((anzeige&(1<<blinkflag)))
    4552:	20 91 55 03 	lds	r18, 0x0355
    4556:	30 91 56 03 	lds	r19, 0x0356
    455a:	36 ff       	sbrs	r19, 6
    455c:	24 c0       	rjmp	.+72     	; 0x45a6 <__stack+0x4a7>
		{
			if (taste=='*')
    455e:	8a 32       	cpi	r24, 0x2A	; 42
    4560:	11 f5       	brne	.+68     	; 0x45a6 <__stack+0x4a7>
			{
				anzeige &=~(1<<blinkflag);
    4562:	3f 7b       	andi	r19, 0xBF	; 191
    4564:	30 93 56 03 	sts	0x0356, r19
    4568:	20 93 55 03 	sts	0x0355, r18
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    456c:	60 e0       	ldi	r22, 0x00	; 0
    456e:	83 e8       	ldi	r24, 0x83	; 131
    4570:	93 e0       	ldi	r25, 0x03	; 3
    4572:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
				LED.off();
    4576:	80 e8       	ldi	r24, 0x80	; 128
    4578:	93 e0       	ldi	r25, 0x03	; 3
    457a:	a4 d5       	rcall	.+2888   	; 0x50c4 <_ZN6Output3offEv>
				Vibrationsmotor.off();
    457c:	8e e7       	ldi	r24, 0x7E	; 126
    457e:	93 e0       	ldi	r25, 0x03	; 3
    4580:	a1 d5       	rcall	.+2882   	; 0x50c4 <_ZN6Output3offEv>
				if ((rtc.interupts&(1<<Weckeractiv)))
    4582:	80 91 9c 07 	lds	r24, 0x079C
    4586:	98 2f       	mov	r25, r24
    4588:	98 71       	andi	r25, 0x18	; 24
				{
					if ((rtc.interupts&(1<<Weckerein)))
    458a:	98 31       	cpi	r25, 0x18	; 24
    458c:	61 f4       	brne	.+24     	; 0x45a6 <__stack+0x4a7>
					{
						rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
						rtc.interupts &= ~(1<<Alarm);
    458e:	86 7e       	andi	r24, 0xE6	; 230
    4590:	80 93 9c 07 	sts	0x079C, r24
    4594:	08 95       	ret
				anzeige&=~(1<<Uhrflag);
				anzeige|=(1<<menueflag);
			}
			else if (taste=='*')
			{
				pos++;
    4596:	80 93 54 03 	sts	0x0354, r24
		}
		else if (anzeige==0)
		{
			anzeige|=(1<<menueflag);
		}
		if ((anzeige&(1<<blinkflag)))
    459a:	20 91 55 03 	lds	r18, 0x0355
    459e:	30 91 56 03 	lds	r19, 0x0356
    45a2:	36 fd       	sbrc	r19, 6
    45a4:	de cf       	rjmp	.-68     	; 0x4562 <__stack+0x463>
    45a6:	08 95       	ret

000045a8 <main>:
void eingabehandler(uint8_t taste);

int main(void)
{
	//initialisierung
	initialisierung();
    45a8:	ea d8       	rcall	.-3628   	; 0x377e <_Z15initialisierungv>
    while(1)
    {
         //Steuerung der interupts durch Handler
         maininterupthandler();
    45aa:	48 d9       	rcall	.-3440   	; 0x383c <_Z19maininterupthandlerv>
         //Steuerung der Anzeige alle Sekunde zur aktualisierung maximale Aktulisierungsrate ist 1Hz
         anzeigehandler();
    45ac:	69 d9       	rcall	.-3374   	; 0x3880 <_Z14anzeigehandlerv>
         //Tasthandler
         eingabehandler(Tastatur.Taster());
    45ae:	82 e8       	ldi	r24, 0x82	; 130
    45b0:	93 e0       	ldi	r25, 0x03	; 3
    45b2:	ad d0       	rcall	.+346    	; 0x470e <_ZN9Interface6TasterEv>
    45b4:	5b db       	rcall	.-2378   	; 0x3c6c <_Z14eingabehandlerh>
    45b6:	f9 cf       	rjmp	.-14     	; 0x45aa <main+0x2>

000045b8 <_GLOBAL__sub_I_kompass>:
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    45b8:	83 ea       	ldi	r24, 0xA3	; 163
    45ba:	97 e0       	ldi	r25, 0x07	; 7
    45bc:	5e d1       	rcall	.+700    	; 0x487a <_ZN7KompassC1Ev>

#include "RTC.h"
RTC rtc;
    45be:	84 e8       	ldi	r24, 0x84	; 132
    45c0:	97 e0       	ldi	r25, 0x07	; 7
    45c2:	0e 94 e5 2a 	call	0x55ca	; 0x55ca <_ZN3RTCC1Ev>

#include "Display.h"
Display oled;
    45c6:	83 e8       	ldi	r24, 0x83	; 131
    45c8:	93 e0       	ldi	r25, 0x03	; 3
    45ca:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <_ZN7DisplayC1Ev>

#include "Interface.h"
Interface Tastatur;
    45ce:	82 e8       	ldi	r24, 0x82	; 130
    45d0:	93 e0       	ldi	r25, 0x03	; 3
    45d2:	69 d0       	rcall	.+210    	; 0x46a6 <_ZN9InterfaceC1Ev>

#include "Output.h"
Output LED('B',PORTB1);
    45d4:	41 e0       	ldi	r20, 0x01	; 1
    45d6:	62 e4       	ldi	r22, 0x42	; 66
    45d8:	80 e8       	ldi	r24, 0x80	; 128
    45da:	93 e0       	ldi	r25, 0x03	; 3
    45dc:	a4 d4       	rcall	.+2376   	; 0x4f26 <_ZN6OutputC1Ehh>
Output Vibrationsmotor('B',PORTB2);
    45de:	42 e0       	ldi	r20, 0x02	; 2
    45e0:	62 e4       	ldi	r22, 0x42	; 66
    45e2:	8e e7       	ldi	r24, 0x7E	; 126
    45e4:	93 e0       	ldi	r25, 0x03	; 3
    45e6:	9f d4       	rcall	.+2366   	; 0x4f26 <_ZN6OutputC1Ehh>
Output IRLED('D',PORTD7);
    45e8:	47 e0       	ldi	r20, 0x07	; 7
    45ea:	64 e4       	ldi	r22, 0x44	; 68
    45ec:	8c e7       	ldi	r24, 0x7C	; 124
    45ee:	93 e0       	ldi	r25, 0x03	; 3
    45f0:	9a d4       	rcall	.+2356   	; 0x4f26 <_ZN6OutputC1Ehh>
Output Sound('B',PORTB3);
    45f2:	43 e0       	ldi	r20, 0x03	; 3
    45f4:	62 e4       	ldi	r22, 0x42	; 66
    45f6:	8a e7       	ldi	r24, 0x7A	; 122
    45f8:	93 e0       	ldi	r25, 0x03	; 3
    45fa:	95 d4       	rcall	.+2346   	; 0x4f26 <_ZN6OutputC1Ehh>

#include "Pressure.h"
Pressure Baro;
    45fc:	8c e6       	ldi	r24, 0x6C	; 108
    45fe:	93 e0       	ldi	r25, 0x03	; 3
    4600:	29 d6       	rcall	.+3154   	; 0x5254 <_ZN8PressureC1Ev>

#include "LSM303D.h"
LSM303D Accelerometer;
    4602:	8b e5       	ldi	r24, 0x5B	; 91
    4604:	93 e0       	ldi	r25, 0x03	; 3
    4606:	75 c4       	rjmp	.+2282   	; 0x4ef2 <_ZN7LSM303DC1Ev>
    4608:	08 95       	ret

0000460a <_GLOBAL__sub_D_kompass>:
    460a:	8b e5       	ldi	r24, 0x5B	; 91
    460c:	93 e0       	ldi	r25, 0x03	; 3
    460e:	4f d3       	rcall	.+1694   	; 0x4cae <_ZN7LSM303DD1Ev>
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);

#include "Pressure.h"
Pressure Baro;
    4610:	8c e6       	ldi	r24, 0x6C	; 108
    4612:	93 e0       	ldi	r25, 0x03	; 3
    4614:	ed d5       	rcall	.+3034   	; 0x51f0 <_ZN8PressureD1Ev>

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);
    4616:	8a e7       	ldi	r24, 0x7A	; 122
    4618:	93 e0       	ldi	r25, 0x03	; 3
    461a:	c7 d4       	rcall	.+2446   	; 0x4faa <_ZN6OutputD1Ev>
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
    461c:	8c e7       	ldi	r24, 0x7C	; 124
    461e:	93 e0       	ldi	r25, 0x03	; 3
    4620:	c4 d4       	rcall	.+2440   	; 0x4faa <_ZN6OutputD1Ev>
#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
    4622:	8e e7       	ldi	r24, 0x7E	; 126
    4624:	93 e0       	ldi	r25, 0x03	; 3
    4626:	c1 d4       	rcall	.+2434   	; 0x4faa <_ZN6OutputD1Ev>

#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
    4628:	80 e8       	ldi	r24, 0x80	; 128
    462a:	93 e0       	ldi	r25, 0x03	; 3
    462c:	be d4       	rcall	.+2428   	; 0x4faa <_ZN6OutputD1Ev>

#include "Display.h"
Display oled;

#include "Interface.h"
Interface Tastatur;
    462e:	82 e8       	ldi	r24, 0x82	; 130
    4630:	93 e0       	ldi	r25, 0x03	; 3
    4632:	46 d0       	rcall	.+140    	; 0x46c0 <_ZN9InterfaceD1Ev>

#include "RTC.h"
RTC rtc;

#include "Display.h"
Display oled;
    4634:	83 e8       	ldi	r24, 0x83	; 131
    4636:	93 e0       	ldi	r25, 0x03	; 3
    4638:	0e 94 01 03 	call	0x602	; 0x602 <_ZN7DisplayD1Ev>

#include "Kompass.h"
Kompass kompass;

#include "RTC.h"
RTC rtc;
    463c:	84 e8       	ldi	r24, 0x84	; 132
    463e:	97 e0       	ldi	r25, 0x07	; 7
    4640:	40 d7       	rcall	.+3712   	; 0x54c2 <_ZN3RTCD1Ev>
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    4642:	83 ea       	ldi	r24, 0xA3	; 163
    4644:	97 e0       	ldi	r25, 0x07	; 7
    4646:	fc c0       	rjmp	.+504    	; 0x4840 <_ZN7KompassD1Ev>
    4648:	08 95       	ret

0000464a <_ZN3I2CC1Ev>:
void I2C::twi_ack(){
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
}
void I2C::twi_nack(){
	TWCR = (1<<TWINT) | (1<<TWEN);
	TWCR &= ~(1<<TWEA);
    464a:	82 e0       	ldi	r24, 0x02	; 2
    464c:	80 93 b8 00 	sts	0x00B8, r24
    4650:	08 95       	ret

00004652 <_ZN3I2CD1Ev>:
    4652:	08 95       	ret

00004654 <_ZN3I2C9twi_startEv>:
    4654:	84 ea       	ldi	r24, 0xA4	; 164
    4656:	80 93 bc 00 	sts	0x00BC, r24
    465a:	08 95       	ret

0000465c <_ZN3I2C8twi_stopEv>:
    465c:	84 e9       	ldi	r24, 0x94	; 148
    465e:	80 93 bc 00 	sts	0x00BC, r24
    4662:	08 95       	ret

00004664 <_ZN3I2C9twi_writeEh>:
}

void I2C::twi_write(uint8_t data){
	while(!(TWCR & (1<<TWINT)));
    4664:	ec eb       	ldi	r30, 0xBC	; 188
    4666:	f0 e0       	ldi	r31, 0x00	; 0
    4668:	80 81       	ld	r24, Z
    466a:	88 23       	and	r24, r24
    466c:	ec f7       	brge	.-6      	; 0x4668 <_ZN3I2C9twi_writeEh+0x4>
	TWDR = data;
    466e:	60 93 bb 00 	sts	0x00BB, r22
	TWCR = (1<<TWINT) | (1<<TWEN);
    4672:	84 e8       	ldi	r24, 0x84	; 132
    4674:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    4678:	ec eb       	ldi	r30, 0xBC	; 188
    467a:	f0 e0       	ldi	r31, 0x00	; 0
    467c:	80 81       	ld	r24, Z
    467e:	88 23       	and	r24, r24
    4680:	ec f7       	brge	.-6      	; 0x467c <_ZN3I2C9twi_writeEh+0x18>
}
    4682:	08 95       	ret

00004684 <_ZN3I2C8twi_readEh>:

uint8_t I2C::twi_read(uint8_t ack){
	if (ack)
    4684:	66 23       	and	r22, r22
    4686:	21 f0       	breq	.+8      	; 0x4690 <_ZN3I2C8twi_readEh+0xc>
	{
		TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    4688:	84 ec       	ldi	r24, 0xC4	; 196
    468a:	80 93 bc 00 	sts	0x00BC, r24
    468e:	03 c0       	rjmp	.+6      	; 0x4696 <_ZN3I2C8twi_readEh+0x12>
	}
	else{
		TWCR = (1<<TWINT) | (1<<TWEN);
    4690:	84 e8       	ldi	r24, 0x84	; 132
    4692:	80 93 bc 00 	sts	0x00BC, r24
	}
	
	while(!(TWCR & (1<<TWINT)));
    4696:	ec eb       	ldi	r30, 0xBC	; 188
    4698:	f0 e0       	ldi	r31, 0x00	; 0
    469a:	80 81       	ld	r24, Z
    469c:	88 23       	and	r24, r24
    469e:	ec f7       	brge	.-6      	; 0x469a <_ZN3I2C8twi_readEh+0x16>
	return TWDR;
    46a0:	80 91 bb 00 	lds	r24, 0x00BB
    46a4:	08 95       	ret

000046a6 <_ZN9InterfaceC1Ev>:
		default:
		abfrage = 0;
		break;
	}
	return abfrage;
}
    46a6:	8a b1       	in	r24, 0x0a	; 10
    46a8:	80 66       	ori	r24, 0x60	; 96
    46aa:	8a b9       	out	0x0a, r24	; 10
    46ac:	88 b1       	in	r24, 0x08	; 8
    46ae:	83 7f       	andi	r24, 0xF3	; 243
    46b0:	88 b9       	out	0x08, r24	; 8
    46b2:	87 b1       	in	r24, 0x07	; 7
    46b4:	8c 60       	ori	r24, 0x0C	; 12
    46b6:	87 b9       	out	0x07, r24	; 7
    46b8:	8a b1       	in	r24, 0x0a	; 10
    46ba:	83 7e       	andi	r24, 0xE3	; 227
    46bc:	8a b9       	out	0x0a, r24	; 10
    46be:	08 95       	ret

000046c0 <_ZN9InterfaceD1Ev>:
    46c0:	08 95       	ret

000046c2 <_ZN9Interface8debounceEPVhh>:
    46c2:	fb 01       	movw	r30, r22
    46c4:	80 81       	ld	r24, Z
    46c6:	90 e0       	ldi	r25, 0x00	; 0
    46c8:	04 2e       	mov	r0, r20
    46ca:	02 c0       	rjmp	.+4      	; 0x46d0 <_ZN9Interface8debounceEPVhh+0xe>
    46cc:	95 95       	asr	r25
    46ce:	87 95       	ror	r24
    46d0:	0a 94       	dec	r0
    46d2:	e2 f7       	brpl	.-8      	; 0x46cc <_ZN9Interface8debounceEPVhh+0xa>
    46d4:	80 ff       	sbrs	r24, 0
    46d6:	17 c0       	rjmp	.+46     	; 0x4706 <_ZN9Interface8debounceEPVhh+0x44>
    46d8:	8f ec       	ldi	r24, 0xCF	; 207
    46da:	97 e0       	ldi	r25, 0x07	; 7
    46dc:	01 97       	sbiw	r24, 0x01	; 1
    46de:	f1 f7       	brne	.-4      	; 0x46dc <_ZN9Interface8debounceEPVhh+0x1a>
    46e0:	00 c0       	rjmp	.+0      	; 0x46e2 <_ZN9Interface8debounceEPVhh+0x20>
    46e2:	00 00       	nop
    46e4:	fb 01       	movw	r30, r22
    46e6:	80 81       	ld	r24, Z
    46e8:	90 e0       	ldi	r25, 0x00	; 0
    46ea:	9c 01       	movw	r18, r24
    46ec:	02 c0       	rjmp	.+4      	; 0x46f2 <_ZN9Interface8debounceEPVhh+0x30>
    46ee:	35 95       	asr	r19
    46f0:	27 95       	ror	r18
    46f2:	4a 95       	dec	r20
    46f4:	e2 f7       	brpl	.-8      	; 0x46ee <_ZN9Interface8debounceEPVhh+0x2c>
    46f6:	20 fd       	sbrc	r18, 0
    46f8:	08 c0       	rjmp	.+16     	; 0x470a <_ZN9Interface8debounceEPVhh+0x48>
    46fa:	3a e1       	ldi	r19, 0x1A	; 26
    46fc:	3a 95       	dec	r19
    46fe:	f1 f7       	brne	.-4      	; 0x46fc <_ZN9Interface8debounceEPVhh+0x3a>
    4700:	00 c0       	rjmp	.+0      	; 0x4702 <_ZN9Interface8debounceEPVhh+0x40>
    4702:	81 e0       	ldi	r24, 0x01	; 1
    4704:	08 95       	ret
    4706:	80 e0       	ldi	r24, 0x00	; 0
    4708:	08 95       	ret
    470a:	80 e0       	ldi	r24, 0x00	; 0
    470c:	08 95       	ret

0000470e <_ZN9Interface6TasterEv>:

uint8_t Interface::Taster(){
    470e:	1f 93       	push	r17
    4710:	cf 93       	push	r28
    4712:	df 93       	push	r29
    4714:	ec 01       	movw	r28, r24
	uint8_t taste = 'A';
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
    4716:	43 9a       	sbi	0x08, 3	; 8
    4718:	82 e0       	ldi	r24, 0x02	; 2
    471a:	8a 95       	dec	r24
    471c:	f1 f7       	brne	.-4      	; 0x471a <_ZN9Interface6TasterEv+0xc>
    471e:	00 c0       	rjmp	.+0      	; 0x4720 <_ZN9Interface6TasterEv+0x12>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    4720:	44 e0       	ldi	r20, 0x04	; 4
    4722:	69 e2       	ldi	r22, 0x29	; 41
    4724:	70 e0       	ldi	r23, 0x00	; 0
    4726:	ce 01       	movw	r24, r28
    4728:	cc df       	rcall	.-104    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    472a:	81 11       	cpse	r24, r1
    472c:	10 c0       	rjmp	.+32     	; 0x474e <_ZN9Interface6TasterEv+0x40>
		taste = '3';
	}
	else if (debounce(&PIND,PIND3))
    472e:	43 e0       	ldi	r20, 0x03	; 3
    4730:	69 e2       	ldi	r22, 0x29	; 41
    4732:	70 e0       	ldi	r23, 0x00	; 0
    4734:	ce 01       	movw	r24, r28
    4736:	c5 df       	rcall	.-118    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    4738:	81 11       	cpse	r24, r1
    473a:	0b c0       	rjmp	.+22     	; 0x4752 <_ZN9Interface6TasterEv+0x44>
	{
		taste = '2';
	}
	else if (debounce(&PIND,PIND2))
    473c:	42 e0       	ldi	r20, 0x02	; 2
    473e:	69 e2       	ldi	r22, 0x29	; 41
    4740:	70 e0       	ldi	r23, 0x00	; 0
    4742:	ce 01       	movw	r24, r28
    4744:	be df       	rcall	.-132    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    4746:	81 11       	cpse	r24, r1
    4748:	06 c0       	rjmp	.+12     	; 0x4756 <_ZN9Interface6TasterEv+0x48>
	}
	return abfrage;
}

uint8_t Interface::Taster(){
	uint8_t taste = 'A';
    474a:	11 e4       	ldi	r17, 0x41	; 65
    474c:	05 c0       	rjmp	.+10     	; 0x4758 <_ZN9Interface6TasterEv+0x4a>
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '3';
    474e:	13 e3       	ldi	r17, 0x33	; 51
    4750:	03 c0       	rjmp	.+6      	; 0x4758 <_ZN9Interface6TasterEv+0x4a>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '2';
    4752:	12 e3       	ldi	r17, 0x32	; 50
    4754:	01 c0       	rjmp	.+2      	; 0x4758 <_ZN9Interface6TasterEv+0x4a>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '1';
    4756:	11 e3       	ldi	r17, 0x31	; 49
	}
	PORTC &= ~(1<<PORTC3);
    4758:	43 98       	cbi	0x08, 3	; 8
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
    475a:	42 9a       	sbi	0x08, 2	; 8
    475c:	82 e0       	ldi	r24, 0x02	; 2
    475e:	8a 95       	dec	r24
    4760:	f1 f7       	brne	.-4      	; 0x475e <_ZN9Interface6TasterEv+0x50>
    4762:	00 c0       	rjmp	.+0      	; 0x4764 <_ZN9Interface6TasterEv+0x56>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    4764:	44 e0       	ldi	r20, 0x04	; 4
    4766:	69 e2       	ldi	r22, 0x29	; 41
    4768:	70 e0       	ldi	r23, 0x00	; 0
    476a:	ce 01       	movw	r24, r28
    476c:	aa df       	rcall	.-172    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    476e:	81 11       	cpse	r24, r1
    4770:	0f c0       	rjmp	.+30     	; 0x4790 <_ZN9Interface6TasterEv+0x82>
		taste = '6';
	}
	else if (debounce(&PIND,PIND3))
    4772:	43 e0       	ldi	r20, 0x03	; 3
    4774:	69 e2       	ldi	r22, 0x29	; 41
    4776:	70 e0       	ldi	r23, 0x00	; 0
    4778:	ce 01       	movw	r24, r28
    477a:	a3 df       	rcall	.-186    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    477c:	81 11       	cpse	r24, r1
    477e:	0a c0       	rjmp	.+20     	; 0x4794 <_ZN9Interface6TasterEv+0x86>
	{
		taste = '5';
	}
	else if (debounce(&PIND,PIND2))
    4780:	42 e0       	ldi	r20, 0x02	; 2
    4782:	69 e2       	ldi	r22, 0x29	; 41
    4784:	70 e0       	ldi	r23, 0x00	; 0
    4786:	ce 01       	movw	r24, r28
    4788:	9c df       	rcall	.-200    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    478a:	81 11       	cpse	r24, r1
    478c:	05 c0       	rjmp	.+10     	; 0x4798 <_ZN9Interface6TasterEv+0x8a>
    478e:	05 c0       	rjmp	.+10     	; 0x479a <_ZN9Interface6TasterEv+0x8c>
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '6';
    4790:	16 e3       	ldi	r17, 0x36	; 54
    4792:	03 c0       	rjmp	.+6      	; 0x479a <_ZN9Interface6TasterEv+0x8c>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '5';
    4794:	15 e3       	ldi	r17, 0x35	; 53
    4796:	01 c0       	rjmp	.+2      	; 0x479a <_ZN9Interface6TasterEv+0x8c>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '4';
    4798:	14 e3       	ldi	r17, 0x34	; 52
	}
	PORTC &= ~(1<<PORTC2);
    479a:	42 98       	cbi	0x08, 2	; 8
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
    479c:	5e 9a       	sbi	0x0b, 6	; 11
    479e:	82 e0       	ldi	r24, 0x02	; 2
    47a0:	8a 95       	dec	r24
    47a2:	f1 f7       	brne	.-4      	; 0x47a0 <_ZN9Interface6TasterEv+0x92>
    47a4:	00 c0       	rjmp	.+0      	; 0x47a6 <_ZN9Interface6TasterEv+0x98>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    47a6:	44 e0       	ldi	r20, 0x04	; 4
    47a8:	69 e2       	ldi	r22, 0x29	; 41
    47aa:	70 e0       	ldi	r23, 0x00	; 0
    47ac:	ce 01       	movw	r24, r28
    47ae:	89 df       	rcall	.-238    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    47b0:	81 11       	cpse	r24, r1
    47b2:	0f c0       	rjmp	.+30     	; 0x47d2 <_ZN9Interface6TasterEv+0xc4>
		taste = '9';
	}
	else if (debounce(&PIND,PIND3))
    47b4:	43 e0       	ldi	r20, 0x03	; 3
    47b6:	69 e2       	ldi	r22, 0x29	; 41
    47b8:	70 e0       	ldi	r23, 0x00	; 0
    47ba:	ce 01       	movw	r24, r28
    47bc:	82 df       	rcall	.-252    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    47be:	81 11       	cpse	r24, r1
    47c0:	0a c0       	rjmp	.+20     	; 0x47d6 <_ZN9Interface6TasterEv+0xc8>
	{
		taste = '8';
	}
	else if (debounce(&PIND,PIND2))
    47c2:	42 e0       	ldi	r20, 0x02	; 2
    47c4:	69 e2       	ldi	r22, 0x29	; 41
    47c6:	70 e0       	ldi	r23, 0x00	; 0
    47c8:	ce 01       	movw	r24, r28
    47ca:	7b df       	rcall	.-266    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    47cc:	81 11       	cpse	r24, r1
    47ce:	05 c0       	rjmp	.+10     	; 0x47da <_ZN9Interface6TasterEv+0xcc>
    47d0:	05 c0       	rjmp	.+10     	; 0x47dc <_ZN9Interface6TasterEv+0xce>
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '9';
    47d2:	19 e3       	ldi	r17, 0x39	; 57
    47d4:	03 c0       	rjmp	.+6      	; 0x47dc <_ZN9Interface6TasterEv+0xce>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '8';
    47d6:	18 e3       	ldi	r17, 0x38	; 56
    47d8:	01 c0       	rjmp	.+2      	; 0x47dc <_ZN9Interface6TasterEv+0xce>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '7';
    47da:	17 e3       	ldi	r17, 0x37	; 55
	}
	PORTD &= ~(1<<PORTD6);
    47dc:	5e 98       	cbi	0x0b, 6	; 11
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
    47de:	5d 9a       	sbi	0x0b, 5	; 11
    47e0:	82 e0       	ldi	r24, 0x02	; 2
    47e2:	8a 95       	dec	r24
    47e4:	f1 f7       	brne	.-4      	; 0x47e2 <_ZN9Interface6TasterEv+0xd4>
    47e6:	00 c0       	rjmp	.+0      	; 0x47e8 <_ZN9Interface6TasterEv+0xda>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    47e8:	44 e0       	ldi	r20, 0x04	; 4
    47ea:	69 e2       	ldi	r22, 0x29	; 41
    47ec:	70 e0       	ldi	r23, 0x00	; 0
    47ee:	ce 01       	movw	r24, r28
    47f0:	68 df       	rcall	.-304    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    47f2:	81 11       	cpse	r24, r1
    47f4:	0f c0       	rjmp	.+30     	; 0x4814 <_ZN9Interface6TasterEv+0x106>
		taste = '#';
	}
	else if (debounce(&PIND,PIND3))
    47f6:	43 e0       	ldi	r20, 0x03	; 3
    47f8:	69 e2       	ldi	r22, 0x29	; 41
    47fa:	70 e0       	ldi	r23, 0x00	; 0
    47fc:	ce 01       	movw	r24, r28
    47fe:	61 df       	rcall	.-318    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    4800:	81 11       	cpse	r24, r1
    4802:	0a c0       	rjmp	.+20     	; 0x4818 <_ZN9Interface6TasterEv+0x10a>
	{
		taste = '0';
	}
	else if (debounce(&PIND,PIND2))
    4804:	42 e0       	ldi	r20, 0x02	; 2
    4806:	69 e2       	ldi	r22, 0x29	; 41
    4808:	70 e0       	ldi	r23, 0x00	; 0
    480a:	ce 01       	movw	r24, r28
    480c:	5a df       	rcall	.-332    	; 0x46c2 <_ZN9Interface8debounceEPVhh>
    480e:	81 11       	cpse	r24, r1
    4810:	05 c0       	rjmp	.+10     	; 0x481c <_ZN9Interface6TasterEv+0x10e>
    4812:	05 c0       	rjmp	.+10     	; 0x481e <_ZN9Interface6TasterEv+0x110>
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '#';
    4814:	13 e2       	ldi	r17, 0x23	; 35
    4816:	03 c0       	rjmp	.+6      	; 0x481e <_ZN9Interface6TasterEv+0x110>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '0';
    4818:	10 e3       	ldi	r17, 0x30	; 48
    481a:	01 c0       	rjmp	.+2      	; 0x481e <_ZN9Interface6TasterEv+0x110>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '*';
    481c:	1a e2       	ldi	r17, 0x2A	; 42
	}
	PORTD &= ~(1<<PORTD5);
    481e:	5d 98       	cbi	0x0b, 5	; 11
	
	return taste;
}
    4820:	81 2f       	mov	r24, r17
    4822:	df 91       	pop	r29
    4824:	cf 91       	pop	r28
    4826:	1f 91       	pop	r17
    4828:	08 95       	ret

0000482a <_ZN9Interface17ZahlenausTastaturEv>:

uint8_t Interface::ZahlenausTastatur(){
    482a:	cf 93       	push	r28
    482c:	df 93       	push	r29
    482e:	ec 01       	movw	r28, r24
	while(true){
		uint8_t taste = Taster();
    4830:	ce 01       	movw	r24, r28
    4832:	6d df       	rcall	.-294    	; 0x470e <_ZN9Interface6TasterEv>
		if(taste>='0' && taste<='9'){
    4834:	80 53       	subi	r24, 0x30	; 48
    4836:	8a 30       	cpi	r24, 0x0A	; 10
    4838:	d8 f7       	brcc	.-10     	; 0x4830 <_ZN9Interface17ZahlenausTastaturEv+0x6>
			return taste - '0';
		}
	}
}
    483a:	df 91       	pop	r29
    483c:	cf 91       	pop	r28
    483e:	08 95       	ret

00004840 <_ZN7KompassD1Ev>:
	for (uint8_t i=0;i<3;i++)
	{
		achsen[i]=0;
		offset[i]=0;
	}
}
    4840:	06 96       	adiw	r24, 0x06	; 6
    4842:	07 cf       	rjmp	.-498    	; 0x4652 <_ZN3I2CD1Ev>
    4844:	08 95       	ret

00004846 <_ZN7Kompass16HMC5883L_commandEhh>:
    4846:	0f 93       	push	r16
    4848:	1f 93       	push	r17
    484a:	cf 93       	push	r28
    484c:	df 93       	push	r29
    484e:	06 2f       	mov	r16, r22
    4850:	14 2f       	mov	r17, r20
    4852:	ec 01       	movw	r28, r24
    4854:	26 96       	adiw	r28, 0x06	; 6
    4856:	ce 01       	movw	r24, r28
    4858:	fd de       	rcall	.-518    	; 0x4654 <_ZN3I2C9twi_startEv>
    485a:	6c e3       	ldi	r22, 0x3C	; 60
    485c:	ce 01       	movw	r24, r28
    485e:	02 df       	rcall	.-508    	; 0x4664 <_ZN3I2C9twi_writeEh>
    4860:	60 2f       	mov	r22, r16
    4862:	ce 01       	movw	r24, r28
    4864:	ff de       	rcall	.-514    	; 0x4664 <_ZN3I2C9twi_writeEh>
    4866:	61 2f       	mov	r22, r17
    4868:	ce 01       	movw	r24, r28
    486a:	fc de       	rcall	.-520    	; 0x4664 <_ZN3I2C9twi_writeEh>
    486c:	ce 01       	movw	r24, r28
    486e:	f6 de       	rcall	.-532    	; 0x465c <_ZN3I2C8twi_stopEv>
    4870:	df 91       	pop	r29
    4872:	cf 91       	pop	r28
    4874:	1f 91       	pop	r17
    4876:	0f 91       	pop	r16
    4878:	08 95       	ret

0000487a <_ZN7KompassC1Ev>:
    487a:	cf 93       	push	r28
    487c:	df 93       	push	r29
    487e:	ec 01       	movw	r28, r24
    4880:	06 96       	adiw	r24, 0x06	; 6
    4882:	e3 de       	rcall	.-570    	; 0x464a <_ZN3I2CC1Ev>
    4884:	40 e7       	ldi	r20, 0x70	; 112
    4886:	60 e0       	ldi	r22, 0x00	; 0
    4888:	ce 01       	movw	r24, r28
    488a:	dd df       	rcall	.-70     	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
    488c:	40 e2       	ldi	r20, 0x20	; 32
    488e:	61 e0       	ldi	r22, 0x01	; 1
    4890:	ce 01       	movw	r24, r28
    4892:	d9 df       	rcall	.-78     	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
    4894:	41 e0       	ldi	r20, 0x01	; 1
    4896:	62 e0       	ldi	r22, 0x02	; 2
    4898:	ce 01       	movw	r24, r28
    489a:	d5 df       	rcall	.-86     	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
    489c:	19 82       	std	Y+1, r1	; 0x01
    489e:	18 82       	st	Y, r1
    48a0:	18 86       	std	Y+8, r1	; 0x08
    48a2:	1f 82       	std	Y+7, r1	; 0x07
    48a4:	1b 82       	std	Y+3, r1	; 0x03
    48a6:	1a 82       	std	Y+2, r1	; 0x02
    48a8:	1a 86       	std	Y+10, r1	; 0x0a
    48aa:	19 86       	std	Y+9, r1	; 0x09
    48ac:	1d 82       	std	Y+5, r1	; 0x05
    48ae:	1c 82       	std	Y+4, r1	; 0x04
    48b0:	1c 86       	std	Y+12, r1	; 0x0c
    48b2:	1b 86       	std	Y+11, r1	; 0x0b
    48b4:	df 91       	pop	r29
    48b6:	cf 91       	pop	r28
    48b8:	08 95       	ret

000048ba <_ZN7Kompass20HMC5883L_readHeadingEv>:

uint8_t Kompass::HMC5883L_readHeading(){
    48ba:	bf 92       	push	r11
    48bc:	cf 92       	push	r12
    48be:	df 92       	push	r13
    48c0:	ef 92       	push	r14
    48c2:	ff 92       	push	r15
    48c4:	0f 93       	push	r16
    48c6:	1f 93       	push	r17
    48c8:	cf 93       	push	r28
    48ca:	df 93       	push	r29
    48cc:	00 d0       	rcall	.+0      	; 0x48ce <_ZN7Kompass20HMC5883L_readHeadingEv+0x14>
    48ce:	00 d0       	rcall	.+0      	; 0x48d0 <_ZN7Kompass20HMC5883L_readHeadingEv+0x16>
    48d0:	00 d0       	rcall	.+0      	; 0x48d2 <_ZN7Kompass20HMC5883L_readHeadingEv+0x18>
    48d2:	cd b7       	in	r28, 0x3d	; 61
    48d4:	de b7       	in	r29, 0x3e	; 62
    48d6:	6c 01       	movw	r12, r24
	cli();
    48d8:	f8 94       	cli
	uint8_t heading[6];
	i2c.twi_start();
    48da:	7c 01       	movw	r14, r24
    48dc:	26 e0       	ldi	r18, 0x06	; 6
    48de:	e2 0e       	add	r14, r18
    48e0:	f1 1c       	adc	r15, r1
    48e2:	c7 01       	movw	r24, r14
    48e4:	b7 de       	rcall	.-658    	; 0x4654 <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCWRITEADRESSE);
    48e6:	6c e3       	ldi	r22, 0x3C	; 60
    48e8:	c7 01       	movw	r24, r14
    48ea:	bc de       	rcall	.-648    	; 0x4664 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(0x03);
    48ec:	63 e0       	ldi	r22, 0x03	; 3
    48ee:	c7 01       	movw	r24, r14
    48f0:	b9 de       	rcall	.-654    	; 0x4664 <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    48f2:	c7 01       	movw	r24, r14
    48f4:	af de       	rcall	.-674    	; 0x4654 <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCREADADRESSE);
    48f6:	6d e3       	ldi	r22, 0x3D	; 61
    48f8:	c7 01       	movw	r24, r14
    48fa:	b4 de       	rcall	.-664    	; 0x4664 <_ZN3I2C9twi_writeEh>
    48fc:	8e 01       	movw	r16, r28
    48fe:	0f 5f       	subi	r16, 0xFF	; 255
    4900:	1f 4f       	sbci	r17, 0xFF	; 255
	
	for(uint8_t i=0; i<6;i++){
    4902:	b1 2c       	mov	r11, r1
		if (i<5)
    4904:	84 e0       	ldi	r24, 0x04	; 4
    4906:	8b 15       	cp	r24, r11
    4908:	30 f0       	brcs	.+12     	; 0x4916 <_ZN7Kompass20HMC5883L_readHeadingEv+0x5c>
		{
			heading[i]=i2c.twi_read(1);
    490a:	61 e0       	ldi	r22, 0x01	; 1
    490c:	c7 01       	movw	r24, r14
    490e:	ba de       	rcall	.-652    	; 0x4684 <_ZN3I2C8twi_readEh>
    4910:	f8 01       	movw	r30, r16
    4912:	80 83       	st	Z, r24
    4914:	05 c0       	rjmp	.+10     	; 0x4920 <_ZN7Kompass20HMC5883L_readHeadingEv+0x66>
		}
		else
		{
			heading[i]=i2c.twi_read(0);
    4916:	60 e0       	ldi	r22, 0x00	; 0
    4918:	c7 01       	movw	r24, r14
    491a:	b4 de       	rcall	.-664    	; 0x4684 <_ZN3I2C8twi_readEh>
    491c:	f8 01       	movw	r30, r16
    491e:	80 83       	st	Z, r24
	i2c.twi_write(HMCWRITEADRESSE);
	i2c.twi_write(0x03);
	i2c.twi_start();
	i2c.twi_write(HMCREADADRESSE);
	
	for(uint8_t i=0; i<6;i++){
    4920:	b3 94       	inc	r11
    4922:	0f 5f       	subi	r16, 0xFF	; 255
    4924:	1f 4f       	sbci	r17, 0xFF	; 255
    4926:	f6 e0       	ldi	r31, 0x06	; 6
    4928:	bf 12       	cpse	r11, r31
    492a:	ec cf       	rjmp	.-40     	; 0x4904 <_ZN7Kompass20HMC5883L_readHeadingEv+0x4a>
		{
			heading[i]=i2c.twi_read(0);
		}
		
	}
	i2c.twi_stop();
    492c:	c7 01       	movw	r24, r14
    492e:	96 de       	rcall	.-724    	; 0x465c <_ZN3I2C8twi_stopEv>
	achsen[0] =(int16_t) (heading[1] | (heading[0] << 8));
    4930:	89 81       	ldd	r24, Y+1	; 0x01
    4932:	90 e0       	ldi	r25, 0x00	; 0
    4934:	98 2f       	mov	r25, r24
    4936:	88 27       	eor	r24, r24
    4938:	2a 81       	ldd	r18, Y+2	; 0x02
    493a:	82 2b       	or	r24, r18
    493c:	f6 01       	movw	r30, r12
    493e:	91 83       	std	Z+1, r25	; 0x01
    4940:	80 83       	st	Z, r24
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
    4942:	8b 81       	ldd	r24, Y+3	; 0x03
    4944:	90 e0       	ldi	r25, 0x00	; 0
    4946:	98 2f       	mov	r25, r24
    4948:	88 27       	eor	r24, r24
    494a:	2c 81       	ldd	r18, Y+4	; 0x04
    494c:	82 2b       	or	r24, r18
    494e:	93 83       	std	Z+3, r25	; 0x03
    4950:	82 83       	std	Z+2, r24	; 0x02
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
    4952:	8d 81       	ldd	r24, Y+5	; 0x05
    4954:	90 e0       	ldi	r25, 0x00	; 0
    4956:	98 2f       	mov	r25, r24
    4958:	88 27       	eor	r24, r24
    495a:	2e 81       	ldd	r18, Y+6	; 0x06
    495c:	82 2b       	or	r24, r18
    495e:	95 83       	std	Z+5, r25	; 0x05
    4960:	84 83       	std	Z+4, r24	; 0x04
	sei();
    4962:	78 94       	sei
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
    4964:	f6 01       	movw	r30, r12
    4966:	80 81       	ld	r24, Z
    4968:	91 81       	ldd	r25, Z+1	; 0x01
    496a:	81 15       	cp	r24, r1
    496c:	90 4f       	sbci	r25, 0xF0	; 240
    496e:	09 f4       	brne	.+2      	; 0x4972 <_ZN7Kompass20HMC5883L_readHeadingEv+0xb8>
    4970:	47 c0       	rjmp	.+142    	; 0x4a00 <_ZN7Kompass20HMC5883L_readHeadingEv+0x146>
    4972:	f6 01       	movw	r30, r12
    4974:	82 81       	ldd	r24, Z+2	; 0x02
    4976:	93 81       	ldd	r25, Z+3	; 0x03
    4978:	81 15       	cp	r24, r1
    497a:	90 4f       	sbci	r25, 0xF0	; 240
    497c:	09 f4       	brne	.+2      	; 0x4980 <_ZN7Kompass20HMC5883L_readHeadingEv+0xc6>
    497e:	42 c0       	rjmp	.+132    	; 0x4a04 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14a>
    4980:	f6 01       	movw	r30, r12
    4982:	84 81       	ldd	r24, Z+4	; 0x04
    4984:	95 81       	ldd	r25, Z+5	; 0x05
    4986:	81 15       	cp	r24, r1
    4988:	90 4f       	sbci	r25, 0xF0	; 240
    498a:	f1 f1       	breq	.+124    	; 0x4a08 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14e>
    498c:	f6 01       	movw	r30, r12
    498e:	83 e0       	ldi	r24, 0x03	; 3
    4990:	df 01       	movw	r26, r30
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
			if(achsen[i]>max[i]){
    4992:	20 81       	ld	r18, Z
    4994:	31 81       	ldd	r19, Z+1	; 0x01
    4996:	45 85       	ldd	r20, Z+13	; 0x0d
    4998:	56 85       	ldd	r21, Z+14	; 0x0e
    499a:	42 17       	cp	r20, r18
    499c:	53 07       	cpc	r21, r19
    499e:	8c f4       	brge	.+34     	; 0x49c2 <_ZN7Kompass20HMC5883L_readHeadingEv+0x108>
				max[i]=achsen[i];
    49a0:	36 87       	std	Z+14, r19	; 0x0e
    49a2:	25 87       	std	Z+13, r18	; 0x0d
				offset[i]=(max[i]+min[i])/2;
    49a4:	43 89       	ldd	r20, Z+19	; 0x13
    49a6:	54 89       	ldd	r21, Z+20	; 0x14
    49a8:	24 0f       	add	r18, r20
    49aa:	35 1f       	adc	r19, r21
    49ac:	33 23       	and	r19, r19
    49ae:	14 f4       	brge	.+4      	; 0x49b4 <_ZN7Kompass20HMC5883L_readHeadingEv+0xfa>
    49b0:	2f 5f       	subi	r18, 0xFF	; 255
    49b2:	3f 4f       	sbci	r19, 0xFF	; 255
    49b4:	35 95       	asr	r19
    49b6:	27 95       	ror	r18
    49b8:	18 96       	adiw	r26, 0x08	; 8
    49ba:	3c 93       	st	X, r19
    49bc:	2e 93       	st	-X, r18
    49be:	17 97       	sbiw	r26, 0x07	; 7
    49c0:	1a c0       	rjmp	.+52     	; 0x49f6 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else if(achsen[i]<min[i]){
    49c2:	63 89       	ldd	r22, Z+19	; 0x13
    49c4:	74 89       	ldd	r23, Z+20	; 0x14
    49c6:	26 17       	cp	r18, r22
    49c8:	37 07       	cpc	r19, r23
    49ca:	7c f4       	brge	.+30     	; 0x49ea <_ZN7Kompass20HMC5883L_readHeadingEv+0x130>
				min[i]=achsen[i];
    49cc:	34 8b       	std	Z+20, r19	; 0x14
    49ce:	23 8b       	std	Z+19, r18	; 0x13
				offset[i]=(max[i]+min[i])/2;
    49d0:	24 0f       	add	r18, r20
    49d2:	35 1f       	adc	r19, r21
    49d4:	33 23       	and	r19, r19
    49d6:	14 f4       	brge	.+4      	; 0x49dc <_ZN7Kompass20HMC5883L_readHeadingEv+0x122>
    49d8:	2f 5f       	subi	r18, 0xFF	; 255
    49da:	3f 4f       	sbci	r19, 0xFF	; 255
    49dc:	35 95       	asr	r19
    49de:	27 95       	ror	r18
    49e0:	18 96       	adiw	r26, 0x08	; 8
    49e2:	3c 93       	st	X, r19
    49e4:	2e 93       	st	-X, r18
    49e6:	17 97       	sbiw	r26, 0x07	; 7
    49e8:	06 c0       	rjmp	.+12     	; 0x49f6 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else {
				achsen[i]-=offset[i];
    49ea:	47 81       	ldd	r20, Z+7	; 0x07
    49ec:	50 85       	ldd	r21, Z+8	; 0x08
    49ee:	24 1b       	sub	r18, r20
    49f0:	35 0b       	sbc	r19, r21
    49f2:	31 83       	std	Z+1, r19	; 0x01
    49f4:	20 83       	st	Z, r18
    49f6:	81 50       	subi	r24, 0x01	; 1
    49f8:	32 96       	adiw	r30, 0x02	; 2
		return 1;
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
    49fa:	81 11       	cpse	r24, r1
    49fc:	c9 cf       	rjmp	.-110    	; 0x4990 <_ZN7Kompass20HMC5883L_readHeadingEv+0xd6>
    49fe:	05 c0       	rjmp	.+10     	; 0x4a0a <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
	sei();
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
	{
		return 1;
    4a00:	81 e0       	ldi	r24, 0x01	; 1
    4a02:	03 c0       	rjmp	.+6      	; 0x4a0a <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    4a04:	81 e0       	ldi	r24, 0x01	; 1
    4a06:	01 c0       	rjmp	.+2      	; 0x4a0a <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    4a08:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	
	return 0;
}
    4a0a:	26 96       	adiw	r28, 0x06	; 6
    4a0c:	0f b6       	in	r0, 0x3f	; 63
    4a0e:	f8 94       	cli
    4a10:	de bf       	out	0x3e, r29	; 62
    4a12:	0f be       	out	0x3f, r0	; 63
    4a14:	cd bf       	out	0x3d, r28	; 61
    4a16:	df 91       	pop	r29
    4a18:	cf 91       	pop	r28
    4a1a:	1f 91       	pop	r17
    4a1c:	0f 91       	pop	r16
    4a1e:	ff 90       	pop	r15
    4a20:	ef 90       	pop	r14
    4a22:	df 90       	pop	r13
    4a24:	cf 90       	pop	r12
    4a26:	bf 90       	pop	r11
    4a28:	08 95       	ret

00004a2a <_ZN7Kompass5angleEdd>:

double Kompass::angle(double roll, double pitch){
    4a2a:	2f 92       	push	r2
    4a2c:	3f 92       	push	r3
    4a2e:	4f 92       	push	r4
    4a30:	5f 92       	push	r5
    4a32:	6f 92       	push	r6
    4a34:	7f 92       	push	r7
    4a36:	8f 92       	push	r8
    4a38:	9f 92       	push	r9
    4a3a:	af 92       	push	r10
    4a3c:	bf 92       	push	r11
    4a3e:	cf 92       	push	r12
    4a40:	df 92       	push	r13
    4a42:	ef 92       	push	r14
    4a44:	ff 92       	push	r15
    4a46:	0f 93       	push	r16
    4a48:	1f 93       	push	r17
    4a4a:	cf 93       	push	r28
    4a4c:	df 93       	push	r29
    4a4e:	cd b7       	in	r28, 0x3d	; 61
    4a50:	de b7       	in	r29, 0x3e	; 62
    4a52:	64 97       	sbiw	r28, 0x14	; 20
    4a54:	0f b6       	in	r0, 0x3f	; 63
    4a56:	f8 94       	cli
    4a58:	de bf       	out	0x3e, r29	; 62
    4a5a:	0f be       	out	0x3f, r0	; 63
    4a5c:	cd bf       	out	0x3d, r28	; 61
    4a5e:	1c 01       	movw	r2, r24
    4a60:	4a 01       	movw	r8, r20
    4a62:	5b 01       	movw	r10, r22
    4a64:	68 01       	movw	r12, r16
    4a66:	79 01       	movw	r14, r18
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
    4a68:	28 df       	rcall	.-432    	; 0x48ba <_ZN7Kompass20HMC5883L_readHeadingEv>
    4a6a:	81 11       	cpse	r24, r1
    4a6c:	e5 c0       	rjmp	.+458    	; 0x4c38 <_ZN7Kompass5angleEdd+0x20e>
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4a6e:	c7 01       	movw	r24, r14
    4a70:	b6 01       	movw	r22, r12
    4a72:	50 d7       	rcall	.+3744   	; 0x5914 <cos>
    4a74:	69 83       	std	Y+1, r22	; 0x01
    4a76:	7a 83       	std	Y+2, r23	; 0x02
    4a78:	8b 83       	std	Y+3, r24	; 0x03
    4a7a:	9c 83       	std	Y+4, r25	; 0x04
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4a7c:	f1 01       	movw	r30, r2
    4a7e:	62 81       	ldd	r22, Z+2	; 0x02
    4a80:	73 81       	ldd	r23, Z+3	; 0x03
    4a82:	88 27       	eor	r24, r24
    4a84:	77 fd       	sbrc	r23, 7
    4a86:	80 95       	com	r24
    4a88:	98 2f       	mov	r25, r24
    4a8a:	e2 d7       	rcall	.+4036   	; 0x5a50 <__floatsisf>
    4a8c:	2b 01       	movw	r4, r22
    4a8e:	3c 01       	movw	r6, r24
    4a90:	c5 01       	movw	r24, r10
    4a92:	b4 01       	movw	r22, r8
    4a94:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <sin>
    4a98:	6d 83       	std	Y+5, r22	; 0x05
    4a9a:	7e 83       	std	Y+6, r23	; 0x06
    4a9c:	8f 83       	std	Y+7, r24	; 0x07
    4a9e:	98 87       	std	Y+8, r25	; 0x08
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    4aa0:	f1 01       	movw	r30, r2
    4aa2:	64 81       	ldd	r22, Z+4	; 0x04
    4aa4:	75 81       	ldd	r23, Z+5	; 0x05
    4aa6:	88 27       	eor	r24, r24
    4aa8:	77 fd       	sbrc	r23, 7
    4aaa:	80 95       	com	r24
    4aac:	98 2f       	mov	r25, r24
    4aae:	d0 d7       	rcall	.+4000   	; 0x5a50 <__floatsisf>
    4ab0:	69 87       	std	Y+9, r22	; 0x09
    4ab2:	7a 87       	std	Y+10, r23	; 0x0a
    4ab4:	8b 87       	std	Y+11, r24	; 0x0b
    4ab6:	9c 87       	std	Y+12, r25	; 0x0c
    4ab8:	c5 01       	movw	r24, r10
    4aba:	b4 01       	movw	r22, r8
    4abc:	2b d7       	rcall	.+3670   	; 0x5914 <cos>
    4abe:	4b 01       	movw	r8, r22
    4ac0:	5c 01       	movw	r10, r24
    4ac2:	c7 01       	movw	r24, r14
    4ac4:	b6 01       	movw	r22, r12
    4ac6:	0e 94 e9 2e 	call	0x5dd2	; 0x5dd2 <sin>
    4aca:	6d 87       	std	Y+13, r22	; 0x0d
    4acc:	7e 87       	std	Y+14, r23	; 0x0e
    4ace:	8f 87       	std	Y+15, r24	; 0x0f
    4ad0:	98 8b       	std	Y+16, r25	; 0x10
		temp_M[1] = achsen[1]*cos(roll);
    4ad2:	a5 01       	movw	r20, r10
    4ad4:	94 01       	movw	r18, r8
    4ad6:	c3 01       	movw	r24, r6
    4ad8:	b2 01       	movw	r22, r4
    4ada:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    4ade:	85 d7       	rcall	.+3850   	; 0x59ea <__fixsfsi>
		temp_M[1]+= achsen[2]*sin(roll);
    4ae0:	88 27       	eor	r24, r24
    4ae2:	77 fd       	sbrc	r23, 7
    4ae4:	80 95       	com	r24
    4ae6:	98 2f       	mov	r25, r24
    4ae8:	b3 d7       	rcall	.+3942   	; 0x5a50 <__floatsisf>
    4aea:	6b 01       	movw	r12, r22
    4aec:	7c 01       	movw	r14, r24
    4aee:	29 85       	ldd	r18, Y+9	; 0x09
    4af0:	3a 85       	ldd	r19, Y+10	; 0x0a
    4af2:	4b 85       	ldd	r20, Y+11	; 0x0b
    4af4:	5c 85       	ldd	r21, Y+12	; 0x0c
    4af6:	6d 81       	ldd	r22, Y+5	; 0x05
    4af8:	7e 81       	ldd	r23, Y+6	; 0x06
    4afa:	8f 81       	ldd	r24, Y+7	; 0x07
    4afc:	98 85       	ldd	r25, Y+8	; 0x08
    4afe:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    4b02:	9b 01       	movw	r18, r22
    4b04:	ac 01       	movw	r20, r24
    4b06:	c7 01       	movw	r24, r14
    4b08:	b6 01       	movw	r22, r12
    4b0a:	3a d6       	rcall	.+3188   	; 0x5780 <__addsf3>
    4b0c:	6e d7       	rcall	.+3804   	; 0x59ea <__fixsfsi>
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4b0e:	88 27       	eor	r24, r24
    4b10:	77 fd       	sbrc	r23, 7
    4b12:	80 95       	com	r24
    4b14:	98 2f       	mov	r25, r24
    4b16:	9c d7       	rcall	.+3896   	; 0x5a50 <__floatsisf>
    4b18:	69 8b       	std	Y+17, r22	; 0x11
    4b1a:	7a 8b       	std	Y+18, r23	; 0x12
    4b1c:	8b 8b       	std	Y+19, r24	; 0x13
    4b1e:	9c 8b       	std	Y+20, r25	; 0x14
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4b20:	f1 01       	movw	r30, r2
    4b22:	60 81       	ld	r22, Z
    4b24:	71 81       	ldd	r23, Z+1	; 0x01
    4b26:	88 27       	eor	r24, r24
    4b28:	77 fd       	sbrc	r23, 7
    4b2a:	80 95       	com	r24
    4b2c:	98 2f       	mov	r25, r24
    4b2e:	90 d7       	rcall	.+3872   	; 0x5a50 <__floatsisf>
    4b30:	29 81       	ldd	r18, Y+1	; 0x01
    4b32:	3a 81       	ldd	r19, Y+2	; 0x02
    4b34:	4b 81       	ldd	r20, Y+3	; 0x03
    4b36:	5c 81       	ldd	r21, Y+4	; 0x04
    4b38:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    4b3c:	56 d7       	rcall	.+3756   	; 0x59ea <__fixsfsi>
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4b3e:	88 27       	eor	r24, r24
    4b40:	77 fd       	sbrc	r23, 7
    4b42:	80 95       	com	r24
    4b44:	98 2f       	mov	r25, r24
    4b46:	84 d7       	rcall	.+3848   	; 0x5a50 <__floatsisf>
    4b48:	6b 01       	movw	r12, r22
    4b4a:	7c 01       	movw	r14, r24
    4b4c:	2d 81       	ldd	r18, Y+5	; 0x05
    4b4e:	3e 81       	ldd	r19, Y+6	; 0x06
    4b50:	4f 81       	ldd	r20, Y+7	; 0x07
    4b52:	58 85       	ldd	r21, Y+8	; 0x08
    4b54:	c3 01       	movw	r24, r6
    4b56:	b2 01       	movw	r22, r4
    4b58:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    4b5c:	9b 01       	movw	r18, r22
    4b5e:	ac 01       	movw	r20, r24
    4b60:	69 81       	ldd	r22, Y+1	; 0x01
    4b62:	7a 81       	ldd	r23, Y+2	; 0x02
    4b64:	8b 81       	ldd	r24, Y+3	; 0x03
    4b66:	9c 81       	ldd	r25, Y+4	; 0x04
    4b68:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    4b6c:	9b 01       	movw	r18, r22
    4b6e:	ac 01       	movw	r20, r24
    4b70:	c7 01       	movw	r24, r14
    4b72:	b6 01       	movw	r22, r12
    4b74:	05 d6       	rcall	.+3082   	; 0x5780 <__addsf3>
    4b76:	39 d7       	rcall	.+3698   	; 0x59ea <__fixsfsi>
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    4b78:	88 27       	eor	r24, r24
    4b7a:	77 fd       	sbrc	r23, 7
    4b7c:	80 95       	com	r24
    4b7e:	98 2f       	mov	r25, r24
    4b80:	67 d7       	rcall	.+3790   	; 0x5a50 <__floatsisf>
    4b82:	6b 01       	movw	r12, r22
    4b84:	7c 01       	movw	r14, r24
    4b86:	a5 01       	movw	r20, r10
    4b88:	94 01       	movw	r18, r8
    4b8a:	69 85       	ldd	r22, Y+9	; 0x09
    4b8c:	7a 85       	ldd	r23, Y+10	; 0x0a
    4b8e:	8b 85       	ldd	r24, Y+11	; 0x0b
    4b90:	9c 85       	ldd	r25, Y+12	; 0x0c
    4b92:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    4b96:	2d 85       	ldd	r18, Y+13	; 0x0d
    4b98:	3e 85       	ldd	r19, Y+14	; 0x0e
    4b9a:	4f 85       	ldd	r20, Y+15	; 0x0f
    4b9c:	58 89       	ldd	r21, Y+16	; 0x10
    4b9e:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    4ba2:	9b 01       	movw	r18, r22
    4ba4:	ac 01       	movw	r20, r24
    4ba6:	c7 01       	movw	r24, r14
    4ba8:	b6 01       	movw	r22, r12
    4baa:	ea d5       	rcall	.+3028   	; 0x5780 <__addsf3>
    4bac:	1e d7       	rcall	.+3644   	; 0x59ea <__fixsfsi>
		temp_M[1] = achsen[1]*cos(roll);
		temp_M[1]+= achsen[2]*sin(roll);
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4bae:	88 27       	eor	r24, r24
    4bb0:	77 fd       	sbrc	r23, 7
    4bb2:	80 95       	com	r24
    4bb4:	98 2f       	mov	r25, r24
    4bb6:	4c d7       	rcall	.+3736   	; 0x5a50 <__floatsisf>
    4bb8:	29 89       	ldd	r18, Y+17	; 0x11
    4bba:	3a 89       	ldd	r19, Y+18	; 0x12
    4bbc:	4b 89       	ldd	r20, Y+19	; 0x13
    4bbe:	5c 89       	ldd	r21, Y+20	; 0x14
    4bc0:	52 d6       	rcall	.+3236   	; 0x5866 <atan2>
    4bc2:	20 e0       	ldi	r18, 0x00	; 0
    4bc4:	30 e0       	ldi	r19, 0x00	; 0
    4bc6:	44 e3       	ldi	r20, 0x34	; 52
    4bc8:	53 e4       	ldi	r21, 0x43	; 67
    4bca:	0e 94 86 2e 	call	0x5d0c	; 0x5d0c <__mulsf3>
    4bce:	2b ed       	ldi	r18, 0xDB	; 219
    4bd0:	3f e0       	ldi	r19, 0x0F	; 15
    4bd2:	49 e4       	ldi	r20, 0x49	; 73
    4bd4:	50 e4       	ldi	r21, 0x40	; 64
    4bd6:	a1 d6       	rcall	.+3394   	; 0x591a <__divsf3>
    4bd8:	20 e0       	ldi	r18, 0x00	; 0
    4bda:	30 e0       	ldi	r19, 0x00	; 0
    4bdc:	44 e3       	ldi	r20, 0x34	; 52
    4bde:	53 e4       	ldi	r21, 0x43	; 67
    4be0:	cf d5       	rcall	.+2974   	; 0x5780 <__addsf3>
		//Tilt kompensation
		//deklination
		angle+=2.35;
    4be2:	26 e6       	ldi	r18, 0x66	; 102
    4be4:	36 e6       	ldi	r19, 0x66	; 102
    4be6:	46 e1       	ldi	r20, 0x16	; 22
    4be8:	50 e4       	ldi	r21, 0x40	; 64
    4bea:	ca d5       	rcall	.+2964   	; 0x5780 <__addsf3>
    4bec:	6b 01       	movw	r12, r22
    4bee:	7c 01       	movw	r14, r24
		//Normierung auf %360
		if (angle>=360)
    4bf0:	20 e0       	ldi	r18, 0x00	; 0
    4bf2:	30 e0       	ldi	r19, 0x00	; 0
    4bf4:	44 eb       	ldi	r20, 0xB4	; 180
    4bf6:	53 e4       	ldi	r21, 0x43	; 67
    4bf8:	0e 94 36 2e 	call	0x5c6c	; 0x5c6c <__gesf2>
    4bfc:	88 23       	and	r24, r24
    4bfe:	54 f0       	brlt	.+20     	; 0x4c14 <_ZN7Kompass5angleEdd+0x1ea>
		{
			angle-=360;
    4c00:	20 e0       	ldi	r18, 0x00	; 0
    4c02:	30 e0       	ldi	r19, 0x00	; 0
    4c04:	44 eb       	ldi	r20, 0xB4	; 180
    4c06:	53 e4       	ldi	r21, 0x43	; 67
    4c08:	c7 01       	movw	r24, r14
    4c0a:	b6 01       	movw	r22, r12
    4c0c:	b8 d5       	rcall	.+2928   	; 0x577e <__subsf3>
    4c0e:	6b 01       	movw	r12, r22
    4c10:	7c 01       	movw	r14, r24
    4c12:	1a c0       	rjmp	.+52     	; 0x4c48 <_ZN7Kompass5angleEdd+0x21e>
		}
		else if (angle < 0)
    4c14:	20 e0       	ldi	r18, 0x00	; 0
    4c16:	30 e0       	ldi	r19, 0x00	; 0
    4c18:	a9 01       	movw	r20, r18
    4c1a:	c7 01       	movw	r24, r14
    4c1c:	b6 01       	movw	r22, r12
    4c1e:	76 d6       	rcall	.+3308   	; 0x590c <__cmpsf2>
    4c20:	88 23       	and	r24, r24
    4c22:	94 f4       	brge	.+36     	; 0x4c48 <_ZN7Kompass5angleEdd+0x21e>
		{
			angle+=360;
    4c24:	20 e0       	ldi	r18, 0x00	; 0
    4c26:	30 e0       	ldi	r19, 0x00	; 0
    4c28:	44 eb       	ldi	r20, 0xB4	; 180
    4c2a:	53 e4       	ldi	r21, 0x43	; 67
    4c2c:	c7 01       	movw	r24, r14
    4c2e:	b6 01       	movw	r22, r12
    4c30:	a7 d5       	rcall	.+2894   	; 0x5780 <__addsf3>
    4c32:	6b 01       	movw	r12, r22
    4c34:	7c 01       	movw	r14, r24
    4c36:	08 c0       	rjmp	.+16     	; 0x4c48 <_ZN7Kompass5angleEdd+0x21e>
double Kompass::angle(double roll, double pitch){
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
    4c38:	0f 2e       	mov	r0, r31
    4c3a:	c1 2c       	mov	r12, r1
    4c3c:	d1 2c       	mov	r13, r1
    4c3e:	f0 e8       	ldi	r31, 0x80	; 128
    4c40:	ef 2e       	mov	r14, r31
    4c42:	ff eb       	ldi	r31, 0xBF	; 191
    4c44:	ff 2e       	mov	r15, r31
    4c46:	f0 2d       	mov	r31, r0
		{
			angle+=360;
		}
	}
	
	HMC5883L_command(0x02,HMCSIGLEMODE);
    4c48:	41 e0       	ldi	r20, 0x01	; 1
    4c4a:	62 e0       	ldi	r22, 0x02	; 2
    4c4c:	c1 01       	movw	r24, r2
    4c4e:	fb dd       	rcall	.-1034   	; 0x4846 <_ZN7Kompass16HMC5883L_commandEhh>
	return angle;
}
    4c50:	c7 01       	movw	r24, r14
    4c52:	b6 01       	movw	r22, r12
    4c54:	64 96       	adiw	r28, 0x14	; 20
    4c56:	0f b6       	in	r0, 0x3f	; 63
    4c58:	f8 94       	cli
    4c5a:	de bf       	out	0x3e, r29	; 62
    4c5c:	0f be       	out	0x3f, r0	; 63
    4c5e:	cd bf       	out	0x3d, r28	; 61
    4c60:	df 91       	pop	r29
    4c62:	cf 91       	pop	r28
    4c64:	1f 91       	pop	r17
    4c66:	0f 91       	pop	r16
    4c68:	ff 90       	pop	r15
    4c6a:	ef 90       	pop	r14
    4c6c:	df 90       	pop	r13
    4c6e:	cf 90       	pop	r12
    4c70:	bf 90       	pop	r11
    4c72:	af 90       	pop	r10
    4c74:	9f 90       	pop	r9
    4c76:	8f 90       	pop	r8
    4c78:	7f 90       	pop	r7
    4c7a:	6f 90       	pop	r6
    4c7c:	5f 90       	pop	r5
    4c7e:	4f 90       	pop	r4
    4c80:	3f 90       	pop	r3
    4c82:	2f 90       	pop	r2
    4c84:	08 95       	ret

00004c86 <_ZN7Kompass25kallibrierung_ruecksetzenEv>:

void Kompass::kallibrierung_ruecksetzen(){
    4c86:	fc 01       	movw	r30, r24
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4c88:	16 86       	std	Z+14, r1	; 0x0e
    4c8a:	15 86       	std	Z+13, r1	; 0x0d
		min[i]=0;
    4c8c:	14 8a       	std	Z+20, r1	; 0x14
    4c8e:	13 8a       	std	Z+19, r1	; 0x13
		offset[i]=0;
    4c90:	10 86       	std	Z+8, r1	; 0x08
    4c92:	17 82       	std	Z+7, r1	; 0x07
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4c94:	10 8a       	std	Z+16, r1	; 0x10
    4c96:	17 86       	std	Z+15, r1	; 0x0f
		min[i]=0;
    4c98:	16 8a       	std	Z+22, r1	; 0x16
    4c9a:	15 8a       	std	Z+21, r1	; 0x15
		offset[i]=0;
    4c9c:	12 86       	std	Z+10, r1	; 0x0a
    4c9e:	11 86       	std	Z+9, r1	; 0x09
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4ca0:	12 8a       	std	Z+18, r1	; 0x12
    4ca2:	11 8a       	std	Z+17, r1	; 0x11
		min[i]=0;
    4ca4:	10 8e       	std	Z+24, r1	; 0x18
    4ca6:	17 8a       	std	Z+23, r1	; 0x17
		offset[i]=0;
    4ca8:	14 86       	std	Z+12, r1	; 0x0c
    4caa:	13 86       	std	Z+11, r1	; 0x0b
    4cac:	08 95       	ret

00004cae <_ZN7LSM303DD1Ev>:
	//FIFO Bypass Mode
	ACCBypassmode();
}

void LSM303D::ACCStreammode(){
	LSM303_command(FIFO_CTRL,(1<<FM1));
    4cae:	40 96       	adiw	r24, 0x10	; 16
    4cb0:	d0 cc       	rjmp	.-1632   	; 0x4652 <_ZN3I2CD1Ev>
    4cb2:	08 95       	ret

00004cb4 <_ZN7LSM303D7readaccEv>:
    4cb4:	6f 92       	push	r6
    4cb6:	7f 92       	push	r7
    4cb8:	8f 92       	push	r8
    4cba:	9f 92       	push	r9
    4cbc:	af 92       	push	r10
    4cbe:	bf 92       	push	r11
    4cc0:	cf 92       	push	r12
    4cc2:	df 92       	push	r13
    4cc4:	ef 92       	push	r14
    4cc6:	ff 92       	push	r15
    4cc8:	1f 93       	push	r17
    4cca:	cf 93       	push	r28
    4ccc:	df 93       	push	r29
    4cce:	00 d0       	rcall	.+0      	; 0x4cd0 <_ZN7LSM303D7readaccEv+0x1c>
    4cd0:	00 d0       	rcall	.+0      	; 0x4cd2 <_ZN7LSM303D7readaccEv+0x1e>
    4cd2:	00 d0       	rcall	.+0      	; 0x4cd4 <_ZN7LSM303D7readaccEv+0x20>
    4cd4:	cd b7       	in	r28, 0x3d	; 61
    4cd6:	de b7       	in	r29, 0x3e	; 62
    4cd8:	3c 01       	movw	r6, r24
    4cda:	f8 94       	cli
    4cdc:	6c 01       	movw	r12, r24
    4cde:	80 e1       	ldi	r24, 0x10	; 16
    4ce0:	c8 0e       	add	r12, r24
    4ce2:	d1 1c       	adc	r13, r1
    4ce4:	c6 01       	movw	r24, r12
    4ce6:	b6 dc       	rcall	.-1684   	; 0x4654 <_ZN3I2C9twi_startEv>
    4ce8:	6a e3       	ldi	r22, 0x3A	; 58
    4cea:	c6 01       	movw	r24, r12
    4cec:	bb dc       	rcall	.-1674   	; 0x4664 <_ZN3I2C9twi_writeEh>
    4cee:	68 ea       	ldi	r22, 0xA8	; 168
    4cf0:	c6 01       	movw	r24, r12
    4cf2:	b8 dc       	rcall	.-1680   	; 0x4664 <_ZN3I2C9twi_writeEh>
    4cf4:	c6 01       	movw	r24, r12
    4cf6:	ae dc       	rcall	.-1700   	; 0x4654 <_ZN3I2C9twi_startEv>
    4cf8:	6b e3       	ldi	r22, 0x3B	; 59
    4cfa:	c6 01       	movw	r24, r12
    4cfc:	b3 dc       	rcall	.-1690   	; 0x4664 <_ZN3I2C9twi_writeEh>
    4cfe:	fe 01       	movw	r30, r28
    4d00:	31 96       	adiw	r30, 0x01	; 1
    4d02:	7f 01       	movw	r14, r30
    4d04:	10 e0       	ldi	r17, 0x00	; 0
    4d06:	15 30       	cpi	r17, 0x05	; 5
    4d08:	30 f4       	brcc	.+12     	; 0x4d16 <_ZN7LSM303D7readaccEv+0x62>
    4d0a:	61 e0       	ldi	r22, 0x01	; 1
    4d0c:	c6 01       	movw	r24, r12
    4d0e:	ba dc       	rcall	.-1676   	; 0x4684 <_ZN3I2C8twi_readEh>
    4d10:	f7 01       	movw	r30, r14
    4d12:	80 83       	st	Z, r24
    4d14:	05 c0       	rjmp	.+10     	; 0x4d20 <_ZN7LSM303D7readaccEv+0x6c>
    4d16:	60 e0       	ldi	r22, 0x00	; 0
    4d18:	c6 01       	movw	r24, r12
    4d1a:	b4 dc       	rcall	.-1688   	; 0x4684 <_ZN3I2C8twi_readEh>
    4d1c:	f7 01       	movw	r30, r14
    4d1e:	80 83       	st	Z, r24
    4d20:	1f 5f       	subi	r17, 0xFF	; 255
    4d22:	ff ef       	ldi	r31, 0xFF	; 255
    4d24:	ef 1a       	sub	r14, r31
    4d26:	ff 0a       	sbc	r15, r31
    4d28:	16 30       	cpi	r17, 0x06	; 6
    4d2a:	69 f7       	brne	.-38     	; 0x4d06 <_ZN7LSM303D7readaccEv+0x52>
    4d2c:	c6 01       	movw	r24, r12
    4d2e:	96 dc       	rcall	.-1748   	; 0x465c <_ZN3I2C8twi_stopEv>
    4d30:	6a 81       	ldd	r22, Y+2	; 0x02
    4d32:	70 e0       	ldi	r23, 0x00	; 0
    4d34:	76 2f       	mov	r23, r22
    4d36:	66 27       	eor	r22, r22
    4d38:	89 81       	ldd	r24, Y+1	; 0x01
    4d3a:	68 2b       	or	r22, r24
    4d3c:	f3 01       	movw	r30, r6
    4d3e:	75 83       	std	Z+5, r23	; 0x05
    4d40:	64 83       	std	Z+4, r22	; 0x04
    4d42:	ac 80       	ldd	r10, Y+4	; 0x04
    4d44:	b1 2c       	mov	r11, r1
    4d46:	ba 2c       	mov	r11, r10
    4d48:	aa 24       	eor	r10, r10
    4d4a:	8b 81       	ldd	r24, Y+3	; 0x03
    4d4c:	a8 2a       	or	r10, r24
    4d4e:	b1 82       	std	Z+1, r11	; 0x01
    4d50:	a0 82       	st	Z, r10
    4d52:	8e 80       	ldd	r8, Y+6	; 0x06
    4d54:	91 2c       	mov	r9, r1
    4d56:	98 2c       	mov	r9, r8
    4d58:	88 24       	eor	r8, r8
    4d5a:	8d 81       	ldd	r24, Y+5	; 0x05
    4d5c:	88 2a       	or	r8, r24
    4d5e:	93 82       	std	Z+3, r9	; 0x03
    4d60:	82 82       	std	Z+2, r8	; 0x02
    4d62:	88 27       	eor	r24, r24
    4d64:	77 fd       	sbrc	r23, 7
    4d66:	80 95       	com	r24
    4d68:	98 2f       	mov	r25, r24
    4d6a:	72 d6       	rcall	.+3300   	; 0x5a50 <__floatsisf>
    4d6c:	6b 01       	movw	r12, r22
    4d6e:	7c 01       	movw	r14, r24
    4d70:	b4 01       	movw	r22, r8
    4d72:	88 27       	eor	r24, r24
    4d74:	77 fd       	sbrc	r23, 7
    4d76:	80 95       	com	r24
    4d78:	98 2f       	mov	r25, r24
    4d7a:	6a d6       	rcall	.+3284   	; 0x5a50 <__floatsisf>
    4d7c:	9b 01       	movw	r18, r22
    4d7e:	ac 01       	movw	r20, r24
    4d80:	c7 01       	movw	r24, r14
    4d82:	b6 01       	movw	r22, r12
    4d84:	70 d5       	rcall	.+2784   	; 0x5866 <atan2>
    4d86:	2b ed       	ldi	r18, 0xDB	; 219
    4d88:	3f e0       	ldi	r19, 0x0F	; 15
    4d8a:	49 ec       	ldi	r20, 0xC9	; 201
    4d8c:	5f e3       	ldi	r21, 0x3F	; 63
    4d8e:	f7 d4       	rcall	.+2542   	; 0x577e <__subsf3>
    4d90:	f3 01       	movw	r30, r6
    4d92:	64 87       	std	Z+12, r22	; 0x0c
    4d94:	75 87       	std	Z+13, r23	; 0x0d
    4d96:	86 87       	std	Z+14, r24	; 0x0e
    4d98:	97 87       	std	Z+15, r25	; 0x0f
    4d9a:	b5 01       	movw	r22, r10
    4d9c:	88 27       	eor	r24, r24
    4d9e:	77 fd       	sbrc	r23, 7
    4da0:	80 95       	com	r24
    4da2:	98 2f       	mov	r25, r24
    4da4:	55 d6       	rcall	.+3242   	; 0x5a50 <__floatsisf>
    4da6:	9b 01       	movw	r18, r22
    4da8:	ac 01       	movw	r20, r24
    4daa:	c7 01       	movw	r24, r14
    4dac:	b6 01       	movw	r22, r12
    4dae:	5b d5       	rcall	.+2742   	; 0x5866 <atan2>
    4db0:	2b ed       	ldi	r18, 0xDB	; 219
    4db2:	3f e0       	ldi	r19, 0x0F	; 15
    4db4:	49 ec       	ldi	r20, 0xC9	; 201
    4db6:	5f e3       	ldi	r21, 0x3F	; 63
    4db8:	e2 d4       	rcall	.+2500   	; 0x577e <__subsf3>
    4dba:	f3 01       	movw	r30, r6
    4dbc:	60 87       	std	Z+8, r22	; 0x08
    4dbe:	71 87       	std	Z+9, r23	; 0x09
    4dc0:	82 87       	std	Z+10, r24	; 0x0a
    4dc2:	93 87       	std	Z+11, r25	; 0x0b
    4dc4:	78 94       	sei
    4dc6:	26 96       	adiw	r28, 0x06	; 6
    4dc8:	0f b6       	in	r0, 0x3f	; 63
    4dca:	f8 94       	cli
    4dcc:	de bf       	out	0x3e, r29	; 62
    4dce:	0f be       	out	0x3f, r0	; 63
    4dd0:	cd bf       	out	0x3d, r28	; 61
    4dd2:	df 91       	pop	r29
    4dd4:	cf 91       	pop	r28
    4dd6:	1f 91       	pop	r17
    4dd8:	ff 90       	pop	r15
    4dda:	ef 90       	pop	r14
    4ddc:	df 90       	pop	r13
    4dde:	cf 90       	pop	r12
    4de0:	bf 90       	pop	r11
    4de2:	af 90       	pop	r10
    4de4:	9f 90       	pop	r9
    4de6:	8f 90       	pop	r8
    4de8:	7f 90       	pop	r7
    4dea:	6f 90       	pop	r6
    4dec:	08 95       	ret

00004dee <_ZN7LSM303D11readtemperaEv>:
    4dee:	cf 92       	push	r12
    4df0:	df 92       	push	r13
    4df2:	ef 92       	push	r14
    4df4:	ff 92       	push	r15
    4df6:	0f 93       	push	r16
    4df8:	1f 93       	push	r17
    4dfa:	cf 93       	push	r28
    4dfc:	df 93       	push	r29
    4dfe:	00 d0       	rcall	.+0      	; 0x4e00 <_ZN7LSM303D11readtemperaEv+0x12>
    4e00:	cd b7       	in	r28, 0x3d	; 61
    4e02:	de b7       	in	r29, 0x3e	; 62
    4e04:	7c 01       	movw	r14, r24
    4e06:	f8 94       	cli
    4e08:	8c 01       	movw	r16, r24
    4e0a:	00 5f       	subi	r16, 0xF0	; 240
    4e0c:	1f 4f       	sbci	r17, 0xFF	; 255
    4e0e:	c8 01       	movw	r24, r16
    4e10:	21 dc       	rcall	.-1982   	; 0x4654 <_ZN3I2C9twi_startEv>
    4e12:	6a e3       	ldi	r22, 0x3A	; 58
    4e14:	c8 01       	movw	r24, r16
    4e16:	26 dc       	rcall	.-1972   	; 0x4664 <_ZN3I2C9twi_writeEh>
    4e18:	65 e8       	ldi	r22, 0x85	; 133
    4e1a:	c8 01       	movw	r24, r16
    4e1c:	23 dc       	rcall	.-1978   	; 0x4664 <_ZN3I2C9twi_writeEh>
    4e1e:	c8 01       	movw	r24, r16
    4e20:	19 dc       	rcall	.-1998   	; 0x4654 <_ZN3I2C9twi_startEv>
    4e22:	6b e3       	ldi	r22, 0x3B	; 59
    4e24:	c8 01       	movw	r24, r16
    4e26:	1e dc       	rcall	.-1988   	; 0x4664 <_ZN3I2C9twi_writeEh>
    4e28:	cc 24       	eor	r12, r12
    4e2a:	c3 94       	inc	r12
    4e2c:	d1 2c       	mov	r13, r1
    4e2e:	02 c0       	rjmp	.+4      	; 0x4e34 <_ZN7LSM303D11readtemperaEv+0x46>
    4e30:	d3 94       	inc	r13
    4e32:	c3 94       	inc	r12
    4e34:	d1 10       	cpse	r13, r1
    4e36:	05 c0       	rjmp	.+10     	; 0x4e42 <_ZN7LSM303D11readtemperaEv+0x54>
    4e38:	61 e0       	ldi	r22, 0x01	; 1
    4e3a:	c8 01       	movw	r24, r16
    4e3c:	23 dc       	rcall	.-1978   	; 0x4684 <_ZN3I2C8twi_readEh>
    4e3e:	89 83       	std	Y+1, r24	; 0x01
    4e40:	f7 cf       	rjmp	.-18     	; 0x4e30 <_ZN7LSM303D11readtemperaEv+0x42>
    4e42:	60 e0       	ldi	r22, 0x00	; 0
    4e44:	c8 01       	movw	r24, r16
    4e46:	1e dc       	rcall	.-1988   	; 0x4684 <_ZN3I2C8twi_readEh>
    4e48:	e1 e0       	ldi	r30, 0x01	; 1
    4e4a:	f0 e0       	ldi	r31, 0x00	; 0
    4e4c:	ec 0f       	add	r30, r28
    4e4e:	fd 1f       	adc	r31, r29
    4e50:	ed 0d       	add	r30, r13
    4e52:	f1 1d       	adc	r31, r1
    4e54:	80 83       	st	Z, r24
    4e56:	81 e0       	ldi	r24, 0x01	; 1
    4e58:	8c 15       	cp	r24, r12
    4e5a:	50 f7       	brcc	.-44     	; 0x4e30 <_ZN7LSM303D11readtemperaEv+0x42>
    4e5c:	c8 01       	movw	r24, r16
    4e5e:	fe db       	rcall	.-2052   	; 0x465c <_ZN3I2C8twi_stopEv>
    4e60:	8a 81       	ldd	r24, Y+2	; 0x02
    4e62:	90 e0       	ldi	r25, 0x00	; 0
    4e64:	98 2f       	mov	r25, r24
    4e66:	88 27       	eor	r24, r24
    4e68:	29 81       	ldd	r18, Y+1	; 0x01
    4e6a:	82 2b       	or	r24, r18
    4e6c:	91 95       	neg	r25
    4e6e:	81 95       	neg	r24
    4e70:	91 09       	sbc	r25, r1
    4e72:	f7 01       	movw	r30, r14
    4e74:	97 83       	std	Z+7, r25	; 0x07
    4e76:	86 83       	std	Z+6, r24	; 0x06
    4e78:	78 94       	sei
    4e7a:	0f 90       	pop	r0
    4e7c:	0f 90       	pop	r0
    4e7e:	df 91       	pop	r29
    4e80:	cf 91       	pop	r28
    4e82:	1f 91       	pop	r17
    4e84:	0f 91       	pop	r16
    4e86:	ff 90       	pop	r15
    4e88:	ef 90       	pop	r14
    4e8a:	df 90       	pop	r13
    4e8c:	cf 90       	pop	r12
    4e8e:	08 95       	ret

00004e90 <_ZN7LSM303D14LSM303_commandEhh>:
    4e90:	0f 93       	push	r16
    4e92:	1f 93       	push	r17
    4e94:	cf 93       	push	r28
    4e96:	df 93       	push	r29
    4e98:	06 2f       	mov	r16, r22
    4e9a:	14 2f       	mov	r17, r20
    4e9c:	ec 01       	movw	r28, r24
    4e9e:	60 96       	adiw	r28, 0x10	; 16
    4ea0:	ce 01       	movw	r24, r28
    4ea2:	d8 db       	rcall	.-2128   	; 0x4654 <_ZN3I2C9twi_startEv>
    4ea4:	6a e3       	ldi	r22, 0x3A	; 58
    4ea6:	ce 01       	movw	r24, r28
    4ea8:	dd db       	rcall	.-2118   	; 0x4664 <_ZN3I2C9twi_writeEh>
    4eaa:	60 2f       	mov	r22, r16
    4eac:	ce 01       	movw	r24, r28
    4eae:	da db       	rcall	.-2124   	; 0x4664 <_ZN3I2C9twi_writeEh>
    4eb0:	61 2f       	mov	r22, r17
    4eb2:	ce 01       	movw	r24, r28
    4eb4:	d7 db       	rcall	.-2130   	; 0x4664 <_ZN3I2C9twi_writeEh>
    4eb6:	ce 01       	movw	r24, r28
    4eb8:	d1 db       	rcall	.-2142   	; 0x465c <_ZN3I2C8twi_stopEv>
    4eba:	df 91       	pop	r29
    4ebc:	cf 91       	pop	r28
    4ebe:	1f 91       	pop	r17
    4ec0:	0f 91       	pop	r16
    4ec2:	08 95       	ret

00004ec4 <_ZN7LSM303D13ACCBypassmodeEv>:
}

void LSM303D::ACCBypassmode(){
	LSM303_command(FIFO_CTRL,0x00);
    4ec4:	40 e0       	ldi	r20, 0x00	; 0
    4ec6:	6e e2       	ldi	r22, 0x2E	; 46
    4ec8:	e3 cf       	rjmp	.-58     	; 0x4e90 <_ZN7LSM303D14LSM303_commandEhh>
    4eca:	08 95       	ret

00004ecc <_ZN7LSM303D9acce_initEv>:
// default destructor
LSM303D::~LSM303D()
{
} //~LSM303D

void LSM303D::acce_init(){
    4ecc:	cf 93       	push	r28
    4ece:	df 93       	push	r29
    4ed0:	ec 01       	movw	r28, r24
	//ACC Activ und 25Hz ohne Block dataread
	LSM303_command(CTRL1,(1<<AXEN)|(1<<AYEN)|(1<<AZEN)|(1<<AODR2));
    4ed2:	47 e4       	ldi	r20, 0x47	; 71
    4ed4:	60 e2       	ldi	r22, 0x20	; 32
    4ed6:	dc df       	rcall	.-72     	; 0x4e90 <_ZN7LSM303D14LSM303_commandEhh>
	
	//ACC fuer +-2g
	LSM303_command(CTRL2,0x00);
    4ed8:	40 e0       	ldi	r20, 0x00	; 0
    4eda:	61 e2       	ldi	r22, 0x21	; 33
    4edc:	ce 01       	movw	r24, r28
    4ede:	d8 df       	rcall	.-80     	; 0x4e90 <_ZN7LSM303D14LSM303_commandEhh>
	
	//Temperatursensor an
	LSM303_command(CTRL5,(1<<TEMP_EN));
    4ee0:	40 e8       	ldi	r20, 0x80	; 128
    4ee2:	64 e2       	ldi	r22, 0x24	; 36
    4ee4:	ce 01       	movw	r24, r28
    4ee6:	d4 df       	rcall	.-88     	; 0x4e90 <_ZN7LSM303D14LSM303_commandEhh>
	
	//FIFO Bypass Mode
	ACCBypassmode();
    4ee8:	ce 01       	movw	r24, r28
    4eea:	ec df       	rcall	.-40     	; 0x4ec4 <_ZN7LSM303D13ACCBypassmodeEv>
}
    4eec:	df 91       	pop	r29
    4eee:	cf 91       	pop	r28
    4ef0:	08 95       	ret

00004ef2 <_ZN7LSM303DC1Ev>:


#include "LSM303D.h"

// default constructor
LSM303D::LSM303D()
    4ef2:	cf 93       	push	r28
    4ef4:	df 93       	push	r29
    4ef6:	ec 01       	movw	r28, r24
    4ef8:	40 96       	adiw	r24, 0x10	; 16
    4efa:	a7 db       	rcall	.-2226   	; 0x464a <_ZN3I2CC1Ev>
{
	//Variablen initialisieren
	Tempera=0;
    4efc:	1f 82       	std	Y+7, r1	; 0x07
    4efe:	1e 82       	std	Y+6, r1	; 0x06
	roll=0.0;
    4f00:	18 86       	std	Y+8, r1	; 0x08
    4f02:	19 86       	std	Y+9, r1	; 0x09
    4f04:	1a 86       	std	Y+10, r1	; 0x0a
    4f06:	1b 86       	std	Y+11, r1	; 0x0b
	pitch=0.0;
    4f08:	1c 86       	std	Y+12, r1	; 0x0c
    4f0a:	1d 86       	std	Y+13, r1	; 0x0d
    4f0c:	1e 86       	std	Y+14, r1	; 0x0e
    4f0e:	1f 86       	std	Y+15, r1	; 0x0f
	for (uint8_t i=0;i<3;i++)
	{
		achsen_A[i]=0;
    4f10:	19 82       	std	Y+1, r1	; 0x01
    4f12:	18 82       	st	Y, r1
    4f14:	1b 82       	std	Y+3, r1	; 0x03
    4f16:	1a 82       	std	Y+2, r1	; 0x02
    4f18:	1d 82       	std	Y+5, r1	; 0x05
    4f1a:	1c 82       	std	Y+4, r1	; 0x04
	}
	
	//ACC init
	acce_init();
    4f1c:	ce 01       	movw	r24, r28
    4f1e:	d6 df       	rcall	.-84     	; 0x4ecc <_ZN7LSM303D9acce_initEv>
} //LSM303D
    4f20:	df 91       	pop	r29
    4f22:	cf 91       	pop	r28
    4f24:	08 95       	ret

00004f26 <_ZN6OutputC1Ehh>:
#include "Output.h"

// default constructor
Output::Output(uint8_t Portpraefix, uint8_t Pinnumber)
{
	Pin=Pinnumber;
    4f26:	fc 01       	movw	r30, r24
    4f28:	41 83       	std	Z+1, r20	; 0x01
	Port=Portpraefix;
    4f2a:	60 83       	st	Z, r22
	switch (Portpraefix)
    4f2c:	62 34       	cpi	r22, 0x42	; 66
    4f2e:	b1 f0       	breq	.+44     	; 0x4f5c <_ZN6OutputC1Ehh+0x36>
    4f30:	18 f4       	brcc	.+6      	; 0x4f38 <_ZN6OutputC1Ehh+0x12>
    4f32:	61 34       	cpi	r22, 0x41	; 65
    4f34:	31 f0       	breq	.+12     	; 0x4f42 <_ZN6OutputC1Ehh+0x1c>
    4f36:	08 95       	ret
    4f38:	63 34       	cpi	r22, 0x43	; 67
    4f3a:	e9 f0       	breq	.+58     	; 0x4f76 <_ZN6OutputC1Ehh+0x50>
    4f3c:	64 34       	cpi	r22, 0x44	; 68
    4f3e:	41 f1       	breq	.+80     	; 0x4f90 <_ZN6OutputC1Ehh+0x6a>
    4f40:	08 95       	ret
	{
		case 'A':
			DDRA |= (1<<Pin);
    4f42:	21 b1       	in	r18, 0x01	; 1
    4f44:	81 e0       	ldi	r24, 0x01	; 1
    4f46:	90 e0       	ldi	r25, 0x00	; 0
    4f48:	bc 01       	movw	r22, r24
    4f4a:	02 c0       	rjmp	.+4      	; 0x4f50 <_ZN6OutputC1Ehh+0x2a>
    4f4c:	66 0f       	add	r22, r22
    4f4e:	77 1f       	adc	r23, r23
    4f50:	4a 95       	dec	r20
    4f52:	e2 f7       	brpl	.-8      	; 0x4f4c <_ZN6OutputC1Ehh+0x26>
    4f54:	ab 01       	movw	r20, r22
    4f56:	42 2b       	or	r20, r18
    4f58:	41 b9       	out	0x01, r20	; 1
			break;
    4f5a:	08 95       	ret
		case 'B':
			DDRB |= (1<<Pin);
    4f5c:	24 b1       	in	r18, 0x04	; 4
    4f5e:	81 e0       	ldi	r24, 0x01	; 1
    4f60:	90 e0       	ldi	r25, 0x00	; 0
    4f62:	fc 01       	movw	r30, r24
    4f64:	02 c0       	rjmp	.+4      	; 0x4f6a <_ZN6OutputC1Ehh+0x44>
    4f66:	ee 0f       	add	r30, r30
    4f68:	ff 1f       	adc	r31, r31
    4f6a:	4a 95       	dec	r20
    4f6c:	e2 f7       	brpl	.-8      	; 0x4f66 <_ZN6OutputC1Ehh+0x40>
    4f6e:	af 01       	movw	r20, r30
    4f70:	42 2b       	or	r20, r18
    4f72:	44 b9       	out	0x04, r20	; 4
			break;
    4f74:	08 95       	ret
		case 'C':
			DDRC |= (1<<Pin);
    4f76:	27 b1       	in	r18, 0x07	; 7
    4f78:	81 e0       	ldi	r24, 0x01	; 1
    4f7a:	90 e0       	ldi	r25, 0x00	; 0
    4f7c:	bc 01       	movw	r22, r24
    4f7e:	02 c0       	rjmp	.+4      	; 0x4f84 <_ZN6OutputC1Ehh+0x5e>
    4f80:	66 0f       	add	r22, r22
    4f82:	77 1f       	adc	r23, r23
    4f84:	4a 95       	dec	r20
    4f86:	e2 f7       	brpl	.-8      	; 0x4f80 <_ZN6OutputC1Ehh+0x5a>
    4f88:	ab 01       	movw	r20, r22
    4f8a:	42 2b       	or	r20, r18
    4f8c:	47 b9       	out	0x07, r20	; 7
			break;
    4f8e:	08 95       	ret
		case 'D':
			DDRD |= (1<<Pin);
    4f90:	2a b1       	in	r18, 0x0a	; 10
    4f92:	81 e0       	ldi	r24, 0x01	; 1
    4f94:	90 e0       	ldi	r25, 0x00	; 0
    4f96:	fc 01       	movw	r30, r24
    4f98:	02 c0       	rjmp	.+4      	; 0x4f9e <_ZN6OutputC1Ehh+0x78>
    4f9a:	ee 0f       	add	r30, r30
    4f9c:	ff 1f       	adc	r31, r31
    4f9e:	4a 95       	dec	r20
    4fa0:	e2 f7       	brpl	.-8      	; 0x4f9a <_ZN6OutputC1Ehh+0x74>
    4fa2:	af 01       	movw	r20, r30
    4fa4:	42 2b       	or	r20, r18
    4fa6:	4a b9       	out	0x0a, r20	; 10
    4fa8:	08 95       	ret

00004faa <_ZN6OutputD1Ev>:
			break;
	}
} //Output

// default destructor
Output::~Output()
    4faa:	08 95       	ret

00004fac <_ZN6Output2onEv>:
{
} //~Output

void Output::on(){
	switch (Port)
    4fac:	fc 01       	movw	r30, r24
    4fae:	20 81       	ld	r18, Z
    4fb0:	22 34       	cpi	r18, 0x42	; 66
    4fb2:	c1 f0       	breq	.+48     	; 0x4fe4 <_ZN6Output2onEv+0x38>
    4fb4:	18 f4       	brcc	.+6      	; 0x4fbc <_ZN6Output2onEv+0x10>
    4fb6:	21 34       	cpi	r18, 0x41	; 65
    4fb8:	31 f0       	breq	.+12     	; 0x4fc6 <_ZN6Output2onEv+0x1a>
    4fba:	08 95       	ret
    4fbc:	23 34       	cpi	r18, 0x43	; 67
    4fbe:	09 f1       	breq	.+66     	; 0x5002 <_ZN6Output2onEv+0x56>
    4fc0:	24 34       	cpi	r18, 0x44	; 68
    4fc2:	71 f1       	breq	.+92     	; 0x5020 <_ZN6Output2onEv+0x74>
    4fc4:	08 95       	ret
	{
		case 'A':
			PORTA |= (1<<Pin);
    4fc6:	42 b1       	in	r20, 0x02	; 2
    4fc8:	21 e0       	ldi	r18, 0x01	; 1
    4fca:	30 e0       	ldi	r19, 0x00	; 0
    4fcc:	b9 01       	movw	r22, r18
    4fce:	fc 01       	movw	r30, r24
    4fd0:	01 80       	ldd	r0, Z+1	; 0x01
    4fd2:	02 c0       	rjmp	.+4      	; 0x4fd8 <_ZN6Output2onEv+0x2c>
    4fd4:	66 0f       	add	r22, r22
    4fd6:	77 1f       	adc	r23, r23
    4fd8:	0a 94       	dec	r0
    4fda:	e2 f7       	brpl	.-8      	; 0x4fd4 <_ZN6Output2onEv+0x28>
    4fdc:	cb 01       	movw	r24, r22
    4fde:	84 2b       	or	r24, r20
    4fe0:	82 b9       	out	0x02, r24	; 2
			break;
    4fe2:	08 95       	ret
		case 'B':
			PORTB |= (1<<Pin);
    4fe4:	45 b1       	in	r20, 0x05	; 5
    4fe6:	21 e0       	ldi	r18, 0x01	; 1
    4fe8:	30 e0       	ldi	r19, 0x00	; 0
    4fea:	b9 01       	movw	r22, r18
    4fec:	fc 01       	movw	r30, r24
    4fee:	01 80       	ldd	r0, Z+1	; 0x01
    4ff0:	02 c0       	rjmp	.+4      	; 0x4ff6 <_ZN6Output2onEv+0x4a>
    4ff2:	66 0f       	add	r22, r22
    4ff4:	77 1f       	adc	r23, r23
    4ff6:	0a 94       	dec	r0
    4ff8:	e2 f7       	brpl	.-8      	; 0x4ff2 <_ZN6Output2onEv+0x46>
    4ffa:	cb 01       	movw	r24, r22
    4ffc:	84 2b       	or	r24, r20
    4ffe:	85 b9       	out	0x05, r24	; 5
			break;
    5000:	08 95       	ret
		case 'C':
			PORTC |= (1<<Pin);
    5002:	48 b1       	in	r20, 0x08	; 8
    5004:	21 e0       	ldi	r18, 0x01	; 1
    5006:	30 e0       	ldi	r19, 0x00	; 0
    5008:	b9 01       	movw	r22, r18
    500a:	fc 01       	movw	r30, r24
    500c:	01 80       	ldd	r0, Z+1	; 0x01
    500e:	02 c0       	rjmp	.+4      	; 0x5014 <_ZN6Output2onEv+0x68>
    5010:	66 0f       	add	r22, r22
    5012:	77 1f       	adc	r23, r23
    5014:	0a 94       	dec	r0
    5016:	e2 f7       	brpl	.-8      	; 0x5010 <_ZN6Output2onEv+0x64>
    5018:	cb 01       	movw	r24, r22
    501a:	84 2b       	or	r24, r20
    501c:	88 b9       	out	0x08, r24	; 8
			break;
    501e:	08 95       	ret
		case 'D':
			PORTD |= (1<<Pin);
    5020:	4b b1       	in	r20, 0x0b	; 11
    5022:	21 e0       	ldi	r18, 0x01	; 1
    5024:	30 e0       	ldi	r19, 0x00	; 0
    5026:	b9 01       	movw	r22, r18
    5028:	fc 01       	movw	r30, r24
    502a:	01 80       	ldd	r0, Z+1	; 0x01
    502c:	02 c0       	rjmp	.+4      	; 0x5032 <_ZN6Output2onEv+0x86>
    502e:	66 0f       	add	r22, r22
    5030:	77 1f       	adc	r23, r23
    5032:	0a 94       	dec	r0
    5034:	e2 f7       	brpl	.-8      	; 0x502e <_ZN6Output2onEv+0x82>
    5036:	cb 01       	movw	r24, r22
    5038:	84 2b       	or	r24, r20
    503a:	8b b9       	out	0x0b, r24	; 11
    503c:	08 95       	ret

0000503e <_ZN6Output4isonEv>:
	}
}

uint8_t Output::ison(){
	uint8_t returnparam=0;
	switch (Port)
    503e:	fc 01       	movw	r30, r24
    5040:	20 81       	ld	r18, Z
    5042:	22 34       	cpi	r18, 0x42	; 66
    5044:	b1 f0       	breq	.+44     	; 0x5072 <_ZN6Output4isonEv+0x34>
    5046:	18 f4       	brcc	.+6      	; 0x504e <_ZN6Output4isonEv+0x10>
    5048:	21 34       	cpi	r18, 0x41	; 65
    504a:	31 f0       	breq	.+12     	; 0x5058 <_ZN6Output4isonEv+0x1a>
    504c:	39 c0       	rjmp	.+114    	; 0x50c0 <_ZN6Output4isonEv+0x82>
    504e:	23 34       	cpi	r18, 0x43	; 67
    5050:	e9 f0       	breq	.+58     	; 0x508c <_ZN6Output4isonEv+0x4e>
    5052:	24 34       	cpi	r18, 0x44	; 68
    5054:	41 f1       	breq	.+80     	; 0x50a6 <_ZN6Output4isonEv+0x68>
    5056:	34 c0       	rjmp	.+104    	; 0x50c0 <_ZN6Output4isonEv+0x82>
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    5058:	22 b1       	in	r18, 0x02	; 2
    505a:	30 e0       	ldi	r19, 0x00	; 0
    505c:	a9 01       	movw	r20, r18
    505e:	fc 01       	movw	r30, r24
    5060:	01 80       	ldd	r0, Z+1	; 0x01
    5062:	02 c0       	rjmp	.+4      	; 0x5068 <_ZN6Output4isonEv+0x2a>
    5064:	55 95       	asr	r21
    5066:	47 95       	ror	r20
    5068:	0a 94       	dec	r0
    506a:	e2 f7       	brpl	.-8      	; 0x5064 <_ZN6Output4isonEv+0x26>
    506c:	ca 01       	movw	r24, r20
    506e:	81 70       	andi	r24, 0x01	; 1
    5070:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    5072:	25 b1       	in	r18, 0x05	; 5
    5074:	30 e0       	ldi	r19, 0x00	; 0
    5076:	a9 01       	movw	r20, r18
    5078:	fc 01       	movw	r30, r24
    507a:	01 80       	ldd	r0, Z+1	; 0x01
    507c:	02 c0       	rjmp	.+4      	; 0x5082 <_ZN6Output4isonEv+0x44>
    507e:	55 95       	asr	r21
    5080:	47 95       	ror	r20
    5082:	0a 94       	dec	r0
    5084:	e2 f7       	brpl	.-8      	; 0x507e <_ZN6Output4isonEv+0x40>
    5086:	ca 01       	movw	r24, r20
    5088:	81 70       	andi	r24, 0x01	; 1
    508a:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    508c:	28 b1       	in	r18, 0x08	; 8
    508e:	30 e0       	ldi	r19, 0x00	; 0
    5090:	a9 01       	movw	r20, r18
    5092:	fc 01       	movw	r30, r24
    5094:	01 80       	ldd	r0, Z+1	; 0x01
    5096:	02 c0       	rjmp	.+4      	; 0x509c <_ZN6Output4isonEv+0x5e>
    5098:	55 95       	asr	r21
    509a:	47 95       	ror	r20
    509c:	0a 94       	dec	r0
    509e:	e2 f7       	brpl	.-8      	; 0x5098 <_ZN6Output4isonEv+0x5a>
    50a0:	ca 01       	movw	r24, r20
    50a2:	81 70       	andi	r24, 0x01	; 1
    50a4:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    50a6:	2b b1       	in	r18, 0x0b	; 11
    50a8:	30 e0       	ldi	r19, 0x00	; 0
    50aa:	a9 01       	movw	r20, r18
    50ac:	fc 01       	movw	r30, r24
    50ae:	01 80       	ldd	r0, Z+1	; 0x01
    50b0:	02 c0       	rjmp	.+4      	; 0x50b6 <_ZN6Output4isonEv+0x78>
    50b2:	55 95       	asr	r21
    50b4:	47 95       	ror	r20
    50b6:	0a 94       	dec	r0
    50b8:	e2 f7       	brpl	.-8      	; 0x50b2 <_ZN6Output4isonEv+0x74>
    50ba:	ca 01       	movw	r24, r20
    50bc:	81 70       	andi	r24, 0x01	; 1
    50be:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		default:
		returnparam = 2;
    50c0:	82 e0       	ldi	r24, 0x02	; 2
			break;
	}
	return returnparam;
}
    50c2:	08 95       	ret

000050c4 <_ZN6Output3offEv>:

void Output::off(){
	switch (Port)
    50c4:	fc 01       	movw	r30, r24
    50c6:	20 81       	ld	r18, Z
    50c8:	22 34       	cpi	r18, 0x42	; 66
    50ca:	c9 f0       	breq	.+50     	; 0x50fe <_ZN6Output3offEv+0x3a>
    50cc:	18 f4       	brcc	.+6      	; 0x50d4 <_ZN6Output3offEv+0x10>
    50ce:	21 34       	cpi	r18, 0x41	; 65
    50d0:	31 f0       	breq	.+12     	; 0x50de <_ZN6Output3offEv+0x1a>
    50d2:	08 95       	ret
    50d4:	23 34       	cpi	r18, 0x43	; 67
    50d6:	19 f1       	breq	.+70     	; 0x511e <_ZN6Output3offEv+0x5a>
    50d8:	24 34       	cpi	r18, 0x44	; 68
    50da:	89 f1       	breq	.+98     	; 0x513e <_ZN6Output3offEv+0x7a>
    50dc:	08 95       	ret
	{
		case 'A':
			PORTA &= ~(1<<Pin);
    50de:	42 b1       	in	r20, 0x02	; 2
    50e0:	21 e0       	ldi	r18, 0x01	; 1
    50e2:	30 e0       	ldi	r19, 0x00	; 0
    50e4:	b9 01       	movw	r22, r18
    50e6:	fc 01       	movw	r30, r24
    50e8:	01 80       	ldd	r0, Z+1	; 0x01
    50ea:	02 c0       	rjmp	.+4      	; 0x50f0 <_ZN6Output3offEv+0x2c>
    50ec:	66 0f       	add	r22, r22
    50ee:	77 1f       	adc	r23, r23
    50f0:	0a 94       	dec	r0
    50f2:	e2 f7       	brpl	.-8      	; 0x50ec <_ZN6Output3offEv+0x28>
    50f4:	cb 01       	movw	r24, r22
    50f6:	80 95       	com	r24
    50f8:	84 23       	and	r24, r20
    50fa:	82 b9       	out	0x02, r24	; 2
			break;
    50fc:	08 95       	ret
		case 'B':
			PORTB &= ~(1<<Pin);
    50fe:	45 b1       	in	r20, 0x05	; 5
    5100:	21 e0       	ldi	r18, 0x01	; 1
    5102:	30 e0       	ldi	r19, 0x00	; 0
    5104:	b9 01       	movw	r22, r18
    5106:	fc 01       	movw	r30, r24
    5108:	01 80       	ldd	r0, Z+1	; 0x01
    510a:	02 c0       	rjmp	.+4      	; 0x5110 <_ZN6Output3offEv+0x4c>
    510c:	66 0f       	add	r22, r22
    510e:	77 1f       	adc	r23, r23
    5110:	0a 94       	dec	r0
    5112:	e2 f7       	brpl	.-8      	; 0x510c <_ZN6Output3offEv+0x48>
    5114:	cb 01       	movw	r24, r22
    5116:	80 95       	com	r24
    5118:	84 23       	and	r24, r20
    511a:	85 b9       	out	0x05, r24	; 5
			break;
    511c:	08 95       	ret
		case 'C':
			PORTC &= ~(1<<Pin);
    511e:	48 b1       	in	r20, 0x08	; 8
    5120:	21 e0       	ldi	r18, 0x01	; 1
    5122:	30 e0       	ldi	r19, 0x00	; 0
    5124:	b9 01       	movw	r22, r18
    5126:	fc 01       	movw	r30, r24
    5128:	01 80       	ldd	r0, Z+1	; 0x01
    512a:	02 c0       	rjmp	.+4      	; 0x5130 <_ZN6Output3offEv+0x6c>
    512c:	66 0f       	add	r22, r22
    512e:	77 1f       	adc	r23, r23
    5130:	0a 94       	dec	r0
    5132:	e2 f7       	brpl	.-8      	; 0x512c <_ZN6Output3offEv+0x68>
    5134:	cb 01       	movw	r24, r22
    5136:	80 95       	com	r24
    5138:	84 23       	and	r24, r20
    513a:	88 b9       	out	0x08, r24	; 8
			break;
    513c:	08 95       	ret
		case 'D':
			PORTD &= ~(1<<Pin);
    513e:	4b b1       	in	r20, 0x0b	; 11
    5140:	21 e0       	ldi	r18, 0x01	; 1
    5142:	30 e0       	ldi	r19, 0x00	; 0
    5144:	b9 01       	movw	r22, r18
    5146:	fc 01       	movw	r30, r24
    5148:	01 80       	ldd	r0, Z+1	; 0x01
    514a:	02 c0       	rjmp	.+4      	; 0x5150 <_ZN6Output3offEv+0x8c>
    514c:	66 0f       	add	r22, r22
    514e:	77 1f       	adc	r23, r23
    5150:	0a 94       	dec	r0
    5152:	e2 f7       	brpl	.-8      	; 0x514c <_ZN6Output3offEv+0x88>
    5154:	cb 01       	movw	r24, r22
    5156:	80 95       	com	r24
    5158:	84 23       	and	r24, r20
    515a:	8b b9       	out	0x0b, r24	; 11
    515c:	08 95       	ret

0000515e <_ZN6Output6toggleEv>:
			break;
	}
}

void Output::toggle(){
	switch (Port)
    515e:	fc 01       	movw	r30, r24
    5160:	20 81       	ld	r18, Z
    5162:	22 34       	cpi	r18, 0x42	; 66
    5164:	c1 f0       	breq	.+48     	; 0x5196 <_ZN6Output6toggleEv+0x38>
    5166:	18 f4       	brcc	.+6      	; 0x516e <_ZN6Output6toggleEv+0x10>
    5168:	21 34       	cpi	r18, 0x41	; 65
    516a:	31 f0       	breq	.+12     	; 0x5178 <_ZN6Output6toggleEv+0x1a>
    516c:	08 95       	ret
    516e:	23 34       	cpi	r18, 0x43	; 67
    5170:	09 f1       	breq	.+66     	; 0x51b4 <_ZN6Output6toggleEv+0x56>
    5172:	24 34       	cpi	r18, 0x44	; 68
    5174:	71 f1       	breq	.+92     	; 0x51d2 <_ZN6Output6toggleEv+0x74>
    5176:	08 95       	ret
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    5178:	22 b1       	in	r18, 0x02	; 2
    517a:	30 e0       	ldi	r19, 0x00	; 0
    517c:	fc 01       	movw	r30, r24
    517e:	01 80       	ldd	r0, Z+1	; 0x01
    5180:	02 c0       	rjmp	.+4      	; 0x5186 <_ZN6Output6toggleEv+0x28>
    5182:	35 95       	asr	r19
    5184:	27 95       	ror	r18
    5186:	0a 94       	dec	r0
    5188:	e2 f7       	brpl	.-8      	; 0x5182 <_ZN6Output6toggleEv+0x24>
    518a:	20 ff       	sbrs	r18, 0
    518c:	02 c0       	rjmp	.+4      	; 0x5192 <_ZN6Output6toggleEv+0x34>
			{
				off();
    518e:	9a cf       	rjmp	.-204    	; 0x50c4 <_ZN6Output3offEv>
    5190:	08 95       	ret
			}
			else{
				on();
    5192:	0c cf       	rjmp	.-488    	; 0x4fac <_ZN6Output2onEv>
    5194:	08 95       	ret
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    5196:	25 b1       	in	r18, 0x05	; 5
    5198:	30 e0       	ldi	r19, 0x00	; 0
    519a:	fc 01       	movw	r30, r24
    519c:	01 80       	ldd	r0, Z+1	; 0x01
    519e:	02 c0       	rjmp	.+4      	; 0x51a4 <_ZN6Output6toggleEv+0x46>
    51a0:	35 95       	asr	r19
    51a2:	27 95       	ror	r18
    51a4:	0a 94       	dec	r0
    51a6:	e2 f7       	brpl	.-8      	; 0x51a0 <_ZN6Output6toggleEv+0x42>
    51a8:	20 ff       	sbrs	r18, 0
    51aa:	02 c0       	rjmp	.+4      	; 0x51b0 <_ZN6Output6toggleEv+0x52>
			{
				off();
    51ac:	8b cf       	rjmp	.-234    	; 0x50c4 <_ZN6Output3offEv>
    51ae:	08 95       	ret
			}
			else{
				on();
    51b0:	fd ce       	rjmp	.-518    	; 0x4fac <_ZN6Output2onEv>
    51b2:	08 95       	ret
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    51b4:	28 b1       	in	r18, 0x08	; 8
    51b6:	30 e0       	ldi	r19, 0x00	; 0
    51b8:	fc 01       	movw	r30, r24
    51ba:	01 80       	ldd	r0, Z+1	; 0x01
    51bc:	02 c0       	rjmp	.+4      	; 0x51c2 <_ZN6Output6toggleEv+0x64>
    51be:	35 95       	asr	r19
    51c0:	27 95       	ror	r18
    51c2:	0a 94       	dec	r0
    51c4:	e2 f7       	brpl	.-8      	; 0x51be <_ZN6Output6toggleEv+0x60>
    51c6:	20 ff       	sbrs	r18, 0
    51c8:	02 c0       	rjmp	.+4      	; 0x51ce <_ZN6Output6toggleEv+0x70>
			{
				off();
    51ca:	7c cf       	rjmp	.-264    	; 0x50c4 <_ZN6Output3offEv>
    51cc:	08 95       	ret
			}
			else{
				on();
    51ce:	ee ce       	rjmp	.-548    	; 0x4fac <_ZN6Output2onEv>
    51d0:	08 95       	ret
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    51d2:	2b b1       	in	r18, 0x0b	; 11
    51d4:	30 e0       	ldi	r19, 0x00	; 0
    51d6:	fc 01       	movw	r30, r24
    51d8:	01 80       	ldd	r0, Z+1	; 0x01
    51da:	02 c0       	rjmp	.+4      	; 0x51e0 <_ZN6Output6toggleEv+0x82>
    51dc:	35 95       	asr	r19
    51de:	27 95       	ror	r18
    51e0:	0a 94       	dec	r0
    51e2:	e2 f7       	brpl	.-8      	; 0x51dc <_ZN6Output6toggleEv+0x7e>
    51e4:	20 ff       	sbrs	r18, 0
    51e6:	02 c0       	rjmp	.+4      	; 0x51ec <_ZN6Output6toggleEv+0x8e>
			{
				off();
    51e8:	6d cf       	rjmp	.-294    	; 0x50c4 <_ZN6Output3offEv>
    51ea:	08 95       	ret
			}
			else{
				on();
    51ec:	df ce       	rjmp	.-578    	; 0x4fac <_ZN6Output2onEv>
    51ee:	08 95       	ret

000051f0 <_ZN8PressureD1Ev>:
	Pressure0=1;
	LPS25H_initialize();
} //Pressure

// default destructor
Pressure::~Pressure()
    51f0:	0d 96       	adiw	r24, 0x0d	; 13
    51f2:	2f ca       	rjmp	.-2978   	; 0x4652 <_ZN3I2CD1Ev>
    51f4:	08 95       	ret

000051f6 <_ZN8Pressure14LPS25H_commandEhh>:
{
} //~Pressure

void Pressure::LPS25H_command(uint8_t add, uint8_t command){
    51f6:	0f 93       	push	r16
    51f8:	1f 93       	push	r17
    51fa:	cf 93       	push	r28
    51fc:	df 93       	push	r29
    51fe:	06 2f       	mov	r16, r22
    5200:	14 2f       	mov	r17, r20
	i2c.twi_start();
    5202:	ec 01       	movw	r28, r24
    5204:	2d 96       	adiw	r28, 0x0d	; 13
    5206:	ce 01       	movw	r24, r28
    5208:	25 da       	rcall	.-2998   	; 0x4654 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    520a:	6a eb       	ldi	r22, 0xBA	; 186
    520c:	ce 01       	movw	r24, r28
    520e:	2a da       	rcall	.-2988   	; 0x4664 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(add);
    5210:	60 2f       	mov	r22, r16
    5212:	ce 01       	movw	r24, r28
    5214:	27 da       	rcall	.-2994   	; 0x4664 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(command);
    5216:	61 2f       	mov	r22, r17
    5218:	ce 01       	movw	r24, r28
    521a:	24 da       	rcall	.-3000   	; 0x4664 <_ZN3I2C9twi_writeEh>
	i2c.twi_stop();
    521c:	ce 01       	movw	r24, r28
    521e:	1e da       	rcall	.-3012   	; 0x465c <_ZN3I2C8twi_stopEv>
}
    5220:	df 91       	pop	r29
    5222:	cf 91       	pop	r28
    5224:	1f 91       	pop	r17
    5226:	0f 91       	pop	r16
    5228:	08 95       	ret

0000522a <_ZN8Pressure17LPS25H_initializeEv>:

void Pressure::LPS25H_initialize(){
    522a:	cf 93       	push	r28
    522c:	df 93       	push	r29
    522e:	ec 01       	movw	r28, r24
	uint8_t temp=0;
	//internal averages Pressure and Temperature (both 8)
	temp &= ~((1<<AVGT1) | (1<<AVGT0) | (1<<AVGP1) | (1<<AVGP0)); 
	LPS25H_command(RES_CONF,temp);
    5230:	40 e0       	ldi	r20, 0x00	; 0
    5232:	60 e1       	ldi	r22, 0x10	; 16
    5234:	e0 df       	rcall	.-64     	; 0x51f6 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//Enable device and set a single shot as well as Lock while reading
	temp |= (1<<PD) | (1<<BDU) | (1<<ODR1);
	LPS25H_command(CTRL_REG1,temp);
    5236:	44 ea       	ldi	r20, 0xA4	; 164
    5238:	60 e2       	ldi	r22, 0x20	; 32
    523a:	ce 01       	movw	r24, r28
    523c:	dc df       	rcall	.-72     	; 0x51f6 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//FIFO on, no watermark no reset, reboot memory content, FIFO MEAN Mode
	temp |= (1<<BOOT) | (1<<FIFO_EN) | (1<<FIFO_MEAN_DEC);
	LPS25H_command(CTRL_REG2,temp);
    523e:	40 ed       	ldi	r20, 0xD0	; 208
    5240:	61 e2       	ldi	r22, 0x21	; 33
    5242:	ce 01       	movw	r24, r28
    5244:	d8 df       	rcall	.-80     	; 0x51f6 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//FIFO Controll register for MEAN Mode und 8 moving averages
	temp|=(1<<F_MODE2) | (1<<F_MODE1) | (1<<WTM_POINT0) | (1<<WTM_POINT1) | (1<<WTM_POINT2);
	LPS25H_command(FIFO_CTRL,temp);
    5246:	47 ec       	ldi	r20, 0xC7	; 199
    5248:	6e e2       	ldi	r22, 0x2E	; 46
    524a:	ce 01       	movw	r24, r28
    524c:	d4 df       	rcall	.-88     	; 0x51f6 <_ZN8Pressure14LPS25H_commandEhh>
	//CTRL_REG4 not set
	//INTERRUPT_CFG not set
	//no threshold used
	//no Pressure offset used
	
}
    524e:	df 91       	pop	r29
    5250:	cf 91       	pop	r28
    5252:	08 95       	ret

00005254 <_ZN8PressureC1Ev>:


#include "Pressure.h"

// default constructor
Pressure::Pressure()
    5254:	cf 93       	push	r28
    5256:	df 93       	push	r29
    5258:	ec 01       	movw	r28, r24
    525a:	0d 96       	adiw	r24, 0x0d	; 13
    525c:	f6 d9       	rcall	.-3092   	; 0x464a <_ZN3I2CC1Ev>
{
	Press = 0;
    525e:	18 82       	st	Y, r1
    5260:	19 82       	std	Y+1, r1	; 0x01
    5262:	1a 82       	std	Y+2, r1	; 0x02
    5264:	1b 82       	std	Y+3, r1	; 0x03
	Tempera = 0;
    5266:	1c 82       	std	Y+4, r1	; 0x04
    5268:	1d 82       	std	Y+5, r1	; 0x05
    526a:	1e 82       	std	Y+6, r1	; 0x06
    526c:	1f 82       	std	Y+7, r1	; 0x07
	Tempoffset = -4;	//Aus Erfahrung
    526e:	8c ef       	ldi	r24, 0xFC	; 252
    5270:	88 87       	std	Y+8, r24	; 0x08
	Pressure0=1;
    5272:	40 e0       	ldi	r20, 0x00	; 0
    5274:	50 e0       	ldi	r21, 0x00	; 0
    5276:	60 e8       	ldi	r22, 0x80	; 128
    5278:	7f e3       	ldi	r23, 0x3F	; 63
    527a:	49 87       	std	Y+9, r20	; 0x09
    527c:	5a 87       	std	Y+10, r21	; 0x0a
    527e:	6b 87       	std	Y+11, r22	; 0x0b
    5280:	7c 87       	std	Y+12, r23	; 0x0c
	LPS25H_initialize();
    5282:	ce 01       	movw	r24, r28
    5284:	d2 df       	rcall	.-92     	; 0x522a <_ZN8Pressure17LPS25H_initializeEv>
} //Pressure
    5286:	df 91       	pop	r29
    5288:	cf 91       	pop	r28
    528a:	08 95       	ret

0000528c <_ZN8Pressure18READ_Pressure_onceEv>:
	//no threshold used
	//no Pressure offset used
	
}

void Pressure::READ_Pressure_once(){
    528c:	af 92       	push	r10
    528e:	bf 92       	push	r11
    5290:	cf 92       	push	r12
    5292:	df 92       	push	r13
    5294:	ef 92       	push	r14
    5296:	ff 92       	push	r15
    5298:	1f 93       	push	r17
    529a:	cf 93       	push	r28
    529c:	df 93       	push	r29
    529e:	00 d0       	rcall	.+0      	; 0x52a0 <_ZN8Pressure18READ_Pressure_onceEv+0x14>
    52a0:	1f 92       	push	r1
    52a2:	cd b7       	in	r28, 0x3d	; 61
    52a4:	de b7       	in	r29, 0x3e	; 62
    52a6:	5c 01       	movw	r10, r24
	uint8_t Wertedruck[3];
	cli();
    52a8:	f8 94       	cli
	i2c.twi_start();
    52aa:	7c 01       	movw	r14, r24
    52ac:	8d e0       	ldi	r24, 0x0D	; 13
    52ae:	e8 0e       	add	r14, r24
    52b0:	f1 1c       	adc	r15, r1
    52b2:	c7 01       	movw	r24, r14
    52b4:	cf d9       	rcall	.-3170   	; 0x4654 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    52b6:	6a eb       	ldi	r22, 0xBA	; 186
    52b8:	c7 01       	movw	r24, r14
    52ba:	d4 d9       	rcall	.-3160   	; 0x4664 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(PRESS_OUT_XL|(1<<autoincrement));
    52bc:	68 ea       	ldi	r22, 0xA8	; 168
    52be:	c7 01       	movw	r24, r14
    52c0:	d1 d9       	rcall	.-3166   	; 0x4664 <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    52c2:	c7 01       	movw	r24, r14
    52c4:	c7 d9       	rcall	.-3186   	; 0x4654 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_READ);
    52c6:	6b eb       	ldi	r22, 0xBB	; 187
    52c8:	c7 01       	movw	r24, r14
    52ca:	cc d9       	rcall	.-3176   	; 0x4664 <_ZN3I2C9twi_writeEh>
    52cc:	fe 01       	movw	r30, r28
    52ce:	31 96       	adiw	r30, 0x01	; 1
    52d0:	6f 01       	movw	r12, r30
	for (uint8_t i=0;i<3;i++)
    52d2:	10 e0       	ldi	r17, 0x00	; 0
	{
		if (i<2)
    52d4:	12 30       	cpi	r17, 0x02	; 2
    52d6:	30 f4       	brcc	.+12     	; 0x52e4 <_ZN8Pressure18READ_Pressure_onceEv+0x58>
		{
			Wertedruck[i] = i2c.twi_read(1);
    52d8:	61 e0       	ldi	r22, 0x01	; 1
    52da:	c7 01       	movw	r24, r14
    52dc:	d3 d9       	rcall	.-3162   	; 0x4684 <_ZN3I2C8twi_readEh>
    52de:	f6 01       	movw	r30, r12
    52e0:	80 83       	st	Z, r24
    52e2:	05 c0       	rjmp	.+10     	; 0x52ee <_ZN8Pressure18READ_Pressure_onceEv+0x62>
		}
		else{
			Wertedruck[i] = i2c.twi_read(0);
    52e4:	60 e0       	ldi	r22, 0x00	; 0
    52e6:	c7 01       	movw	r24, r14
    52e8:	cd d9       	rcall	.-3174   	; 0x4684 <_ZN3I2C8twi_readEh>
    52ea:	f6 01       	movw	r30, r12
    52ec:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_Write);
	i2c.twi_write(PRESS_OUT_XL|(1<<autoincrement));
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_READ);
	for (uint8_t i=0;i<3;i++)
    52ee:	1f 5f       	subi	r17, 0xFF	; 255
    52f0:	ff ef       	ldi	r31, 0xFF	; 255
    52f2:	cf 1a       	sub	r12, r31
    52f4:	df 0a       	sbc	r13, r31
    52f6:	13 30       	cpi	r17, 0x03	; 3
    52f8:	69 f7       	brne	.-38     	; 0x52d4 <_ZN8Pressure18READ_Pressure_onceEv+0x48>
		}
		else{
			Wertedruck[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    52fa:	c7 01       	movw	r24, r14
    52fc:	af d9       	rcall	.-3234   	; 0x465c <_ZN3I2C8twi_stopEv>
	Press = ((double)Wertedruck[2]*65536);
    52fe:	6b 81       	ldd	r22, Y+3	; 0x03
    5300:	70 e0       	ldi	r23, 0x00	; 0
    5302:	80 e0       	ldi	r24, 0x00	; 0
    5304:	90 e0       	ldi	r25, 0x00	; 0
    5306:	a2 d3       	rcall	.+1860   	; 0x5a4c <__floatunsisf>
    5308:	20 e0       	ldi	r18, 0x00	; 0
    530a:	30 e0       	ldi	r19, 0x00	; 0
    530c:	40 e8       	ldi	r20, 0x80	; 128
    530e:	57 e4       	ldi	r21, 0x47	; 71
    5310:	fd d4       	rcall	.+2554   	; 0x5d0c <__mulsf3>
    5312:	6b 01       	movw	r12, r22
    5314:	7c 01       	movw	r14, r24
	Press += ((double)Wertedruck[1]*256);
    5316:	6a 81       	ldd	r22, Y+2	; 0x02
    5318:	70 e0       	ldi	r23, 0x00	; 0
    531a:	80 e0       	ldi	r24, 0x00	; 0
    531c:	90 e0       	ldi	r25, 0x00	; 0
    531e:	96 d3       	rcall	.+1836   	; 0x5a4c <__floatunsisf>
    5320:	20 e0       	ldi	r18, 0x00	; 0
    5322:	30 e0       	ldi	r19, 0x00	; 0
    5324:	40 e8       	ldi	r20, 0x80	; 128
    5326:	53 e4       	ldi	r21, 0x43	; 67
    5328:	f1 d4       	rcall	.+2530   	; 0x5d0c <__mulsf3>
    532a:	9b 01       	movw	r18, r22
    532c:	ac 01       	movw	r20, r24
    532e:	c7 01       	movw	r24, r14
    5330:	b6 01       	movw	r22, r12
    5332:	26 d2       	rcall	.+1100   	; 0x5780 <__addsf3>
    5334:	6b 01       	movw	r12, r22
    5336:	7c 01       	movw	r14, r24
	Press += (double)Wertedruck[0];
    5338:	69 81       	ldd	r22, Y+1	; 0x01
    533a:	70 e0       	ldi	r23, 0x00	; 0
    533c:	80 e0       	ldi	r24, 0x00	; 0
    533e:	90 e0       	ldi	r25, 0x00	; 0
    5340:	85 d3       	rcall	.+1802   	; 0x5a4c <__floatunsisf>
    5342:	9b 01       	movw	r18, r22
    5344:	ac 01       	movw	r20, r24
    5346:	c7 01       	movw	r24, r14
    5348:	b6 01       	movw	r22, r12
    534a:	1a d2       	rcall	.+1076   	; 0x5780 <__addsf3>
	//Press = (Wertedruck[0] + (Wertedruck[1]*256) + (Wertedruck[2]*65536));
	Press/=4096.0;
    534c:	20 e0       	ldi	r18, 0x00	; 0
    534e:	30 e0       	ldi	r19, 0x00	; 0
    5350:	40 e8       	ldi	r20, 0x80	; 128
    5352:	59 e3       	ldi	r21, 0x39	; 57
    5354:	db d4       	rcall	.+2486   	; 0x5d0c <__mulsf3>
    5356:	f5 01       	movw	r30, r10
    5358:	60 83       	st	Z, r22
    535a:	71 83       	std	Z+1, r23	; 0x01
    535c:	82 83       	std	Z+2, r24	; 0x02
    535e:	93 83       	std	Z+3, r25	; 0x03
	sei();
    5360:	78 94       	sei
}
    5362:	0f 90       	pop	r0
    5364:	0f 90       	pop	r0
    5366:	0f 90       	pop	r0
    5368:	df 91       	pop	r29
    536a:	cf 91       	pop	r28
    536c:	1f 91       	pop	r17
    536e:	ff 90       	pop	r15
    5370:	ef 90       	pop	r14
    5372:	df 90       	pop	r13
    5374:	cf 90       	pop	r12
    5376:	bf 90       	pop	r11
    5378:	af 90       	pop	r10
    537a:	08 95       	ret

0000537c <_ZN8Pressure16READ_TemperatureEv>:

void Pressure::READ_Temperature(){
    537c:	cf 92       	push	r12
    537e:	df 92       	push	r13
    5380:	ef 92       	push	r14
    5382:	ff 92       	push	r15
    5384:	0f 93       	push	r16
    5386:	1f 93       	push	r17
    5388:	cf 93       	push	r28
    538a:	df 93       	push	r29
    538c:	00 d0       	rcall	.+0      	; 0x538e <_ZN8Pressure16READ_TemperatureEv+0x12>
    538e:	cd b7       	in	r28, 0x3d	; 61
    5390:	de b7       	in	r29, 0x3e	; 62
    5392:	8c 01       	movw	r16, r24
	cli();
    5394:	f8 94       	cli
	uint8_t Wert[2];
	i2c.twi_start();
    5396:	7c 01       	movw	r14, r24
    5398:	8d e0       	ldi	r24, 0x0D	; 13
    539a:	e8 0e       	add	r14, r24
    539c:	f1 1c       	adc	r15, r1
    539e:	c7 01       	movw	r24, r14
    53a0:	59 d9       	rcall	.-3406   	; 0x4654 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    53a2:	6a eb       	ldi	r22, 0xBA	; 186
    53a4:	c7 01       	movw	r24, r14
    53a6:	5e d9       	rcall	.-3396   	; 0x4664 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(TEMP_OUT_L|(1<<autoincrement));
    53a8:	6b ea       	ldi	r22, 0xAB	; 171
    53aa:	c7 01       	movw	r24, r14
    53ac:	5b d9       	rcall	.-3402   	; 0x4664 <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    53ae:	c7 01       	movw	r24, r14
    53b0:	51 d9       	rcall	.-3422   	; 0x4654 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_READ);
    53b2:	6b eb       	ldi	r22, 0xBB	; 187
    53b4:	c7 01       	movw	r24, r14
    53b6:	56 d9       	rcall	.-3412   	; 0x4664 <_ZN3I2C9twi_writeEh>
    53b8:	cc 24       	eor	r12, r12
    53ba:	c3 94       	inc	r12
    53bc:	d1 2c       	mov	r13, r1
    53be:	02 c0       	rjmp	.+4      	; 0x53c4 <_ZN8Pressure16READ_TemperatureEv+0x48>
    53c0:	d3 94       	inc	r13
    53c2:	c3 94       	inc	r12
	for (uint8_t i=0;i<2;i++)
	{
		if (i<1)
    53c4:	d1 10       	cpse	r13, r1
    53c6:	05 c0       	rjmp	.+10     	; 0x53d2 <_ZN8Pressure16READ_TemperatureEv+0x56>
		{
			Wert[i] = i2c.twi_read(1);
    53c8:	61 e0       	ldi	r22, 0x01	; 1
    53ca:	c7 01       	movw	r24, r14
    53cc:	5b d9       	rcall	.-3402   	; 0x4684 <_ZN3I2C8twi_readEh>
    53ce:	89 83       	std	Y+1, r24	; 0x01
    53d0:	f7 cf       	rjmp	.-18     	; 0x53c0 <_ZN8Pressure16READ_TemperatureEv+0x44>
		}
		else{
			Wert[i] = i2c.twi_read(0);
    53d2:	60 e0       	ldi	r22, 0x00	; 0
    53d4:	c7 01       	movw	r24, r14
    53d6:	56 d9       	rcall	.-3412   	; 0x4684 <_ZN3I2C8twi_readEh>
    53d8:	e1 e0       	ldi	r30, 0x01	; 1
    53da:	f0 e0       	ldi	r31, 0x00	; 0
    53dc:	ec 0f       	add	r30, r28
    53de:	fd 1f       	adc	r31, r29
    53e0:	ed 0d       	add	r30, r13
    53e2:	f1 1d       	adc	r31, r1
    53e4:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_Write);
	i2c.twi_write(TEMP_OUT_L|(1<<autoincrement));
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_READ);
	for (uint8_t i=0;i<2;i++)
    53e6:	e1 e0       	ldi	r30, 0x01	; 1
    53e8:	ec 15       	cp	r30, r12
    53ea:	50 f7       	brcc	.-44     	; 0x53c0 <_ZN8Pressure16READ_TemperatureEv+0x44>
		}
		else{
			Wert[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    53ec:	c7 01       	movw	r24, r14
    53ee:	36 d9       	rcall	.-3476   	; 0x465c <_ZN3I2C8twi_stopEv>
	Tempera = ((int16_t)(Wert[0]+(Wert[1]<<8)))/480.0;
    53f0:	89 81       	ldd	r24, Y+1	; 0x01
    53f2:	6a 81       	ldd	r22, Y+2	; 0x02
    53f4:	70 e0       	ldi	r23, 0x00	; 0
    53f6:	76 2f       	mov	r23, r22
    53f8:	66 27       	eor	r22, r22
    53fa:	68 0f       	add	r22, r24
    53fc:	71 1d       	adc	r23, r1
    53fe:	88 27       	eor	r24, r24
    5400:	77 fd       	sbrc	r23, 7
    5402:	80 95       	com	r24
    5404:	98 2f       	mov	r25, r24
    5406:	24 d3       	rcall	.+1608   	; 0x5a50 <__floatsisf>
    5408:	20 e0       	ldi	r18, 0x00	; 0
    540a:	30 e0       	ldi	r19, 0x00	; 0
    540c:	40 ef       	ldi	r20, 0xF0	; 240
    540e:	53 e4       	ldi	r21, 0x43	; 67
    5410:	84 d2       	rcall	.+1288   	; 0x591a <__divsf3>
    5412:	6b 01       	movw	r12, r22
    5414:	7c 01       	movw	r14, r24
	Tempera+=42.5+Tempoffset;
    5416:	f8 01       	movw	r30, r16
    5418:	60 85       	ldd	r22, Z+8	; 0x08
    541a:	77 27       	eor	r23, r23
    541c:	67 fd       	sbrc	r22, 7
    541e:	70 95       	com	r23
    5420:	87 2f       	mov	r24, r23
    5422:	97 2f       	mov	r25, r23
    5424:	15 d3       	rcall	.+1578   	; 0x5a50 <__floatsisf>
    5426:	20 e0       	ldi	r18, 0x00	; 0
    5428:	30 e0       	ldi	r19, 0x00	; 0
    542a:	4a e2       	ldi	r20, 0x2A	; 42
    542c:	52 e4       	ldi	r21, 0x42	; 66
    542e:	a8 d1       	rcall	.+848    	; 0x5780 <__addsf3>
    5430:	9b 01       	movw	r18, r22
    5432:	ac 01       	movw	r20, r24
    5434:	c7 01       	movw	r24, r14
    5436:	b6 01       	movw	r22, r12
    5438:	a3 d1       	rcall	.+838    	; 0x5780 <__addsf3>
    543a:	f8 01       	movw	r30, r16
    543c:	64 83       	std	Z+4, r22	; 0x04
    543e:	75 83       	std	Z+5, r23	; 0x05
    5440:	86 83       	std	Z+6, r24	; 0x06
    5442:	97 83       	std	Z+7, r25	; 0x07
	sei();
    5444:	78 94       	sei
}
    5446:	0f 90       	pop	r0
    5448:	0f 90       	pop	r0
    544a:	df 91       	pop	r29
    544c:	cf 91       	pop	r28
    544e:	1f 91       	pop	r17
    5450:	0f 91       	pop	r16
    5452:	ff 90       	pop	r15
    5454:	ef 90       	pop	r14
    5456:	df 90       	pop	r13
    5458:	cf 90       	pop	r12
    545a:	08 95       	ret

0000545c <_ZN8Pressure8altitudeEd>:

double Pressure::altitude(double Pressurevalue){
    545c:	8f 92       	push	r8
    545e:	9f 92       	push	r9
    5460:	af 92       	push	r10
    5462:	bf 92       	push	r11
    5464:	cf 92       	push	r12
    5466:	df 92       	push	r13
    5468:	ef 92       	push	r14
    546a:	ff 92       	push	r15
	return (Pressure0*100*log(Pressure0/Pressurevalue)/(1.2041*9.81));
    546c:	fc 01       	movw	r30, r24
    546e:	c1 84       	ldd	r12, Z+9	; 0x09
    5470:	d2 84       	ldd	r13, Z+10	; 0x0a
    5472:	e3 84       	ldd	r14, Z+11	; 0x0b
    5474:	f4 84       	ldd	r15, Z+12	; 0x0c
    5476:	9a 01       	movw	r18, r20
    5478:	ab 01       	movw	r20, r22
    547a:	c7 01       	movw	r24, r14
    547c:	b6 01       	movw	r22, r12
    547e:	4d d2       	rcall	.+1178   	; 0x591a <__divsf3>
    5480:	05 d4       	rcall	.+2058   	; 0x5c8c <log>
    5482:	4b 01       	movw	r8, r22
    5484:	5c 01       	movw	r10, r24
    5486:	20 e0       	ldi	r18, 0x00	; 0
    5488:	30 e0       	ldi	r19, 0x00	; 0
    548a:	48 ec       	ldi	r20, 0xC8	; 200
    548c:	52 e4       	ldi	r21, 0x42	; 66
    548e:	c7 01       	movw	r24, r14
    5490:	b6 01       	movw	r22, r12
    5492:	3c d4       	rcall	.+2168   	; 0x5d0c <__mulsf3>
    5494:	a5 01       	movw	r20, r10
    5496:	94 01       	movw	r18, r8
    5498:	39 d4       	rcall	.+2162   	; 0x5d0c <__mulsf3>
    549a:	2c ed       	ldi	r18, 0xDC	; 220
    549c:	3e ef       	ldi	r19, 0xFE	; 254
    549e:	4c e3       	ldi	r20, 0x3C	; 60
    54a0:	51 e4       	ldi	r21, 0x41	; 65
    54a2:	3b d2       	rcall	.+1142   	; 0x591a <__divsf3>
}
    54a4:	ff 90       	pop	r15
    54a6:	ef 90       	pop	r14
    54a8:	df 90       	pop	r13
    54aa:	cf 90       	pop	r12
    54ac:	bf 90       	pop	r11
    54ae:	af 90       	pop	r10
    54b0:	9f 90       	pop	r9
    54b2:	8f 90       	pop	r8
    54b4:	08 95       	ret

000054b6 <_ZN8Pressure13set_Pressure0Ed>:
void Pressure::set_Pressure0(double Pressurevalue){
	Pressure0=Pressurevalue;
    54b6:	fc 01       	movw	r30, r24
    54b8:	41 87       	std	Z+9, r20	; 0x09
    54ba:	52 87       	std	Z+10, r21	; 0x0a
    54bc:	63 87       	std	Z+11, r22	; 0x0b
    54be:	74 87       	std	Z+12, r23	; 0x0c
    54c0:	08 95       	ret

000054c2 <_ZN3RTCD1Ev>:
		}
		Wecker();
	}
	ausgabezeitneu();
	return 0;
}
    54c2:	08 95       	ret

000054c4 <_ZN3RTC6WeckerEv>:
    54c4:	fc 01       	movw	r30, r24
    54c6:	80 8d       	ldd	r24, Z+24	; 0x18
    54c8:	83 ff       	sbrs	r24, 3
    54ca:	0c c0       	rjmp	.+24     	; 0x54e4 <_ZN3RTC6WeckerEv+0x20>
    54cc:	84 fd       	sbrc	r24, 4
    54ce:	0a c0       	rjmp	.+20     	; 0x54e4 <_ZN3RTC6WeckerEv+0x20>
    54d0:	22 8d       	ldd	r18, Z+26	; 0x1a
    54d2:	90 89       	ldd	r25, Z+16	; 0x10
    54d4:	29 13       	cpse	r18, r25
    54d6:	06 c0       	rjmp	.+12     	; 0x54e4 <_ZN3RTC6WeckerEv+0x20>
    54d8:	21 8d       	ldd	r18, Z+25	; 0x19
    54da:	91 89       	ldd	r25, Z+17	; 0x11
    54dc:	29 13       	cpse	r18, r25
    54de:	02 c0       	rjmp	.+4      	; 0x54e4 <_ZN3RTC6WeckerEv+0x20>
    54e0:	80 61       	ori	r24, 0x10	; 16
    54e2:	80 8f       	std	Z+24, r24	; 0x18
    54e4:	08 95       	ret

000054e6 <_ZN3RTC14ausgabezeitneuEv>:
    54e6:	fc 01       	movw	r30, r24
    54e8:	90 89       	ldd	r25, Z+16	; 0x10
    54ea:	8d ec       	ldi	r24, 0xCD	; 205
    54ec:	98 9f       	mul	r25, r24
    54ee:	21 2d       	mov	r18, r1
    54f0:	11 24       	eor	r1, r1
    54f2:	26 95       	lsr	r18
    54f4:	26 95       	lsr	r18
    54f6:	26 95       	lsr	r18
    54f8:	30 e3       	ldi	r19, 0x30	; 48
    54fa:	32 0f       	add	r19, r18
    54fc:	30 83       	st	Z, r19
    54fe:	22 0f       	add	r18, r18
    5500:	32 2f       	mov	r19, r18
    5502:	33 0f       	add	r19, r19
    5504:	33 0f       	add	r19, r19
    5506:	23 0f       	add	r18, r19
    5508:	92 1b       	sub	r25, r18
    550a:	90 5d       	subi	r25, 0xD0	; 208
    550c:	91 83       	std	Z+1, r25	; 0x01
    550e:	91 89       	ldd	r25, Z+17	; 0x11
    5510:	98 9f       	mul	r25, r24
    5512:	21 2d       	mov	r18, r1
    5514:	11 24       	eor	r1, r1
    5516:	26 95       	lsr	r18
    5518:	26 95       	lsr	r18
    551a:	26 95       	lsr	r18
    551c:	30 e3       	ldi	r19, 0x30	; 48
    551e:	32 0f       	add	r19, r18
    5520:	33 83       	std	Z+3, r19	; 0x03
    5522:	22 0f       	add	r18, r18
    5524:	32 2f       	mov	r19, r18
    5526:	33 0f       	add	r19, r19
    5528:	33 0f       	add	r19, r19
    552a:	23 0f       	add	r18, r19
    552c:	92 1b       	sub	r25, r18
    552e:	90 5d       	subi	r25, 0xD0	; 208
    5530:	94 83       	std	Z+4, r25	; 0x04
    5532:	92 89       	ldd	r25, Z+18	; 0x12
    5534:	98 9f       	mul	r25, r24
    5536:	81 2d       	mov	r24, r1
    5538:	11 24       	eor	r1, r1
    553a:	86 95       	lsr	r24
    553c:	86 95       	lsr	r24
    553e:	86 95       	lsr	r24
    5540:	20 e3       	ldi	r18, 0x30	; 48
    5542:	28 0f       	add	r18, r24
    5544:	26 83       	std	Z+6, r18	; 0x06
    5546:	88 0f       	add	r24, r24
    5548:	28 2f       	mov	r18, r24
    554a:	22 0f       	add	r18, r18
    554c:	22 0f       	add	r18, r18
    554e:	82 0f       	add	r24, r18
    5550:	98 1b       	sub	r25, r24
    5552:	90 5d       	subi	r25, 0xD0	; 208
    5554:	97 83       	std	Z+7, r25	; 0x07
    5556:	08 95       	ret

00005558 <_ZN3RTC15ausgabedatumneuEv>:
    5558:	fc 01       	movw	r30, r24
    555a:	94 89       	ldd	r25, Z+20	; 0x14
    555c:	8d ec       	ldi	r24, 0xCD	; 205
    555e:	98 9f       	mul	r25, r24
    5560:	21 2d       	mov	r18, r1
    5562:	11 24       	eor	r1, r1
    5564:	26 95       	lsr	r18
    5566:	26 95       	lsr	r18
    5568:	26 95       	lsr	r18
    556a:	30 e3       	ldi	r19, 0x30	; 48
    556c:	32 0f       	add	r19, r18
    556e:	30 87       	std	Z+8, r19	; 0x08
    5570:	22 0f       	add	r18, r18
    5572:	32 2f       	mov	r19, r18
    5574:	33 0f       	add	r19, r19
    5576:	33 0f       	add	r19, r19
    5578:	23 0f       	add	r18, r19
    557a:	92 1b       	sub	r25, r18
    557c:	90 5d       	subi	r25, 0xD0	; 208
    557e:	91 87       	std	Z+9, r25	; 0x09
    5580:	96 89       	ldd	r25, Z+22	; 0x16
    5582:	98 9f       	mul	r25, r24
    5584:	21 2d       	mov	r18, r1
    5586:	11 24       	eor	r1, r1
    5588:	26 95       	lsr	r18
    558a:	26 95       	lsr	r18
    558c:	26 95       	lsr	r18
    558e:	30 e3       	ldi	r19, 0x30	; 48
    5590:	32 0f       	add	r19, r18
    5592:	33 87       	std	Z+11, r19	; 0x0b
    5594:	22 0f       	add	r18, r18
    5596:	32 2f       	mov	r19, r18
    5598:	33 0f       	add	r19, r19
    559a:	33 0f       	add	r19, r19
    559c:	23 0f       	add	r18, r19
    559e:	92 1b       	sub	r25, r18
    55a0:	90 5d       	subi	r25, 0xD0	; 208
    55a2:	94 87       	std	Z+12, r25	; 0x0c
    55a4:	97 89       	ldd	r25, Z+23	; 0x17
    55a6:	98 9f       	mul	r25, r24
    55a8:	81 2d       	mov	r24, r1
    55aa:	11 24       	eor	r1, r1
    55ac:	86 95       	lsr	r24
    55ae:	86 95       	lsr	r24
    55b0:	86 95       	lsr	r24
    55b2:	20 e3       	ldi	r18, 0x30	; 48
    55b4:	28 0f       	add	r18, r24
    55b6:	26 87       	std	Z+14, r18	; 0x0e
    55b8:	88 0f       	add	r24, r24
    55ba:	28 2f       	mov	r18, r24
    55bc:	22 0f       	add	r18, r18
    55be:	22 0f       	add	r18, r18
    55c0:	82 0f       	add	r24, r18
    55c2:	98 1b       	sub	r25, r24
    55c4:	90 5d       	subi	r25, 0xD0	; 208
    55c6:	97 87       	std	Z+15, r25	; 0x0f
    55c8:	08 95       	ret

000055ca <_ZN3RTCC1Ev>:
    55ca:	cf 93       	push	r28
    55cc:	df 93       	push	r29
    55ce:	ec 01       	movw	r28, r24
    55d0:	1a 8a       	std	Y+18, r1	; 0x12
    55d2:	1b 8a       	std	Y+19, r1	; 0x13
    55d4:	19 8a       	std	Y+17, r1	; 0x11
    55d6:	18 8a       	std	Y+16, r1	; 0x10
    55d8:	1c 8a       	std	Y+20, r1	; 0x14
    55da:	1e 8a       	std	Y+22, r1	; 0x16
    55dc:	1f 8a       	std	Y+23, r1	; 0x17
    55de:	1d 8a       	std	Y+21, r1	; 0x15
    55e0:	88 e2       	ldi	r24, 0x28	; 40
    55e2:	89 8f       	std	Y+25, r24	; 0x19
    55e4:	8a e0       	ldi	r24, 0x0A	; 10
    55e6:	8a 8f       	std	Y+26, r24	; 0x1a
    55e8:	1c 8e       	std	Y+28, r1	; 0x1c
    55ea:	1b 8e       	std	Y+27, r1	; 0x1b
    55ec:	1e 8e       	std	Y+30, r1	; 0x1e
    55ee:	1d 8e       	std	Y+29, r1	; 0x1d
    55f0:	de 01       	movw	r26, r28
    55f2:	fe 01       	movw	r30, r28
    55f4:	38 96       	adiw	r30, 0x08	; 8
    55f6:	80 e0       	ldi	r24, 0x00	; 0
    55f8:	1d 92       	st	X+, r1
    55fa:	11 92       	st	Z+, r1
    55fc:	8f 5f       	subi	r24, 0xFF	; 255
    55fe:	88 30       	cpi	r24, 0x08	; 8
    5600:	d9 f7       	brne	.-10     	; 0x55f8 <_ZN3RTCC1Ev+0x2e>
    5602:	8a e3       	ldi	r24, 0x3A	; 58
    5604:	8a 83       	std	Y+2, r24	; 0x02
    5606:	8d 83       	std	Y+5, r24	; 0x05
    5608:	8e e2       	ldi	r24, 0x2E	; 46
    560a:	8a 87       	std	Y+10, r24	; 0x0a
    560c:	8d 87       	std	Y+13, r24	; 0x0d
    560e:	ce 01       	movw	r24, r28
    5610:	6a df       	rcall	.-300    	; 0x54e6 <_ZN3RTC14ausgabezeitneuEv>
    5612:	ce 01       	movw	r24, r28
    5614:	a1 df       	rcall	.-190    	; 0x5558 <_ZN3RTC15ausgabedatumneuEv>
    5616:	df 91       	pop	r29
    5618:	cf 91       	pop	r28
    561a:	08 95       	ret

0000561c <_ZN3RTC8kalenderEv>:
    561c:	fc 01       	movw	r30, r24
    561e:	26 89       	ldd	r18, Z+22	; 0x16
    5620:	32 2f       	mov	r19, r18
    5622:	3d 7f       	andi	r19, 0xFD	; 253
    5624:	34 30       	cpi	r19, 0x04	; 4
    5626:	11 f0       	breq	.+4      	; 0x562c <_ZN3RTC8kalenderEv+0x10>
    5628:	39 30       	cpi	r19, 0x09	; 9
    562a:	91 f4       	brne	.+36     	; 0x5650 <_ZN3RTC8kalenderEv+0x34>
    562c:	fc 01       	movw	r30, r24
    562e:	34 89       	ldd	r19, Z+20	; 0x14
    5630:	3f 31       	cpi	r19, 0x1F	; 31
    5632:	b0 f1       	brcs	.+108    	; 0x56a0 <_ZN3RTC8kalenderEv+0x84>
    5634:	31 e0       	ldi	r19, 0x01	; 1
    5636:	34 8b       	std	Z+20, r19	; 0x14
    5638:	2f 5f       	subi	r18, 0xFF	; 255
    563a:	2d 30       	cpi	r18, 0x0D	; 13
    563c:	10 f4       	brcc	.+4      	; 0x5642 <_ZN3RTC8kalenderEv+0x26>
    563e:	26 8b       	std	Z+22, r18	; 0x16
    5640:	2f c0       	rjmp	.+94     	; 0x56a0 <_ZN3RTC8kalenderEv+0x84>
    5642:	21 e0       	ldi	r18, 0x01	; 1
    5644:	fc 01       	movw	r30, r24
    5646:	26 8b       	std	Z+22, r18	; 0x16
    5648:	27 89       	ldd	r18, Z+23	; 0x17
    564a:	2f 5f       	subi	r18, 0xFF	; 255
    564c:	27 8b       	std	Z+23, r18	; 0x17
    564e:	28 c0       	rjmp	.+80     	; 0x56a0 <_ZN3RTC8kalenderEv+0x84>
    5650:	22 30       	cpi	r18, 0x02	; 2
    5652:	a9 f4       	brne	.+42     	; 0x567e <_ZN3RTC8kalenderEv+0x62>
    5654:	fc 01       	movw	r30, r24
    5656:	27 89       	ldd	r18, Z+23	; 0x17
    5658:	23 70       	andi	r18, 0x03	; 3
    565a:	41 f4       	brne	.+16     	; 0x566c <_ZN3RTC8kalenderEv+0x50>
    565c:	24 89       	ldd	r18, Z+20	; 0x14
    565e:	2e 31       	cpi	r18, 0x1E	; 30
    5660:	f8 f0       	brcs	.+62     	; 0x56a0 <_ZN3RTC8kalenderEv+0x84>
    5662:	21 e0       	ldi	r18, 0x01	; 1
    5664:	24 8b       	std	Z+20, r18	; 0x14
    5666:	23 e0       	ldi	r18, 0x03	; 3
    5668:	26 8b       	std	Z+22, r18	; 0x16
    566a:	1a c0       	rjmp	.+52     	; 0x56a0 <_ZN3RTC8kalenderEv+0x84>
    566c:	fc 01       	movw	r30, r24
    566e:	24 89       	ldd	r18, Z+20	; 0x14
    5670:	2d 31       	cpi	r18, 0x1D	; 29
    5672:	b0 f0       	brcs	.+44     	; 0x56a0 <_ZN3RTC8kalenderEv+0x84>
    5674:	21 e0       	ldi	r18, 0x01	; 1
    5676:	24 8b       	std	Z+20, r18	; 0x14
    5678:	23 e0       	ldi	r18, 0x03	; 3
    567a:	26 8b       	std	Z+22, r18	; 0x16
    567c:	11 c0       	rjmp	.+34     	; 0x56a0 <_ZN3RTC8kalenderEv+0x84>
    567e:	fc 01       	movw	r30, r24
    5680:	34 89       	ldd	r19, Z+20	; 0x14
    5682:	30 32       	cpi	r19, 0x20	; 32
    5684:	68 f0       	brcs	.+26     	; 0x56a0 <_ZN3RTC8kalenderEv+0x84>
    5686:	31 e0       	ldi	r19, 0x01	; 1
    5688:	34 8b       	std	Z+20, r19	; 0x14
    568a:	2f 5f       	subi	r18, 0xFF	; 255
    568c:	2d 30       	cpi	r18, 0x0D	; 13
    568e:	10 f4       	brcc	.+4      	; 0x5694 <_ZN3RTC8kalenderEv+0x78>
    5690:	26 8b       	std	Z+22, r18	; 0x16
    5692:	06 c0       	rjmp	.+12     	; 0x56a0 <_ZN3RTC8kalenderEv+0x84>
    5694:	21 e0       	ldi	r18, 0x01	; 1
    5696:	fc 01       	movw	r30, r24
    5698:	26 8b       	std	Z+22, r18	; 0x16
    569a:	27 89       	ldd	r18, Z+23	; 0x17
    569c:	2f 5f       	subi	r18, 0xFF	; 255
    569e:	27 8b       	std	Z+23, r18	; 0x17
    56a0:	5b cf       	rjmp	.-330    	; 0x5558 <_ZN3RTC15ausgabedatumneuEv>
    56a2:	08 95       	ret

000056a4 <_ZN3RTC4zeitEv>:

uint8_t RTC::zeit(){
    56a4:	cf 93       	push	r28
    56a6:	df 93       	push	r29
    56a8:	ec 01       	movw	r28, r24
	//Sekunden++; sitzt im Vektor um Taster besser entprellen zu koennen
	if (Sekunden >= 60 && Sekunden <=200){
    56aa:	8a 89       	ldd	r24, Y+18	; 0x12
    56ac:	8c 53       	subi	r24, 0x3C	; 60
    56ae:	8d 38       	cpi	r24, 0x8D	; 141
    56b0:	c0 f4       	brcc	.+48     	; 0x56e2 <_ZN3RTC4zeitEv+0x3e>
		Sekunden = 0;
    56b2:	1a 8a       	std	Y+18, r1	; 0x12
		Minuten++;
    56b4:	89 89       	ldd	r24, Y+17	; 0x11
    56b6:	8f 5f       	subi	r24, 0xFF	; 255
    56b8:	89 8b       	std	Y+17, r24	; 0x11
		interupts |= (1<<minuteninterupt);
    56ba:	98 8d       	ldd	r25, Y+24	; 0x18
    56bc:	94 60       	ori	r25, 0x04	; 4
    56be:	98 8f       	std	Y+24, r25	; 0x18
		if(Minuten >= 60){
    56c0:	8c 33       	cpi	r24, 0x3C	; 60
    56c2:	68 f0       	brcs	.+26     	; 0x56de <_ZN3RTC4zeitEv+0x3a>
			Minuten = 0;
    56c4:	19 8a       	std	Y+17, r1	; 0x11
			Stunden++;
    56c6:	88 89       	ldd	r24, Y+16	; 0x10
    56c8:	8f 5f       	subi	r24, 0xFF	; 255
			if(Stunden >= 24){
    56ca:	88 31       	cpi	r24, 0x18	; 24
    56cc:	10 f4       	brcc	.+4      	; 0x56d2 <_ZN3RTC4zeitEv+0x2e>
		Sekunden = 0;
		Minuten++;
		interupts |= (1<<minuteninterupt);
		if(Minuten >= 60){
			Minuten = 0;
			Stunden++;
    56ce:	88 8b       	std	Y+16, r24	; 0x10
    56d0:	06 c0       	rjmp	.+12     	; 0x56de <_ZN3RTC4zeitEv+0x3a>
			if(Stunden >= 24){
				Stunden = 0;
    56d2:	18 8a       	std	Y+16, r1	; 0x10
				Tag++;
    56d4:	8c 89       	ldd	r24, Y+20	; 0x14
    56d6:	8f 5f       	subi	r24, 0xFF	; 255
    56d8:	8c 8b       	std	Y+20, r24	; 0x14
				kalender();
    56da:	ce 01       	movw	r24, r28
    56dc:	9f df       	rcall	.-194    	; 0x561c <_ZN3RTC8kalenderEv>
			}
		}
		Wecker();
    56de:	ce 01       	movw	r24, r28
    56e0:	f1 de       	rcall	.-542    	; 0x54c4 <_ZN3RTC6WeckerEv>
	}
	ausgabezeitneu();
    56e2:	ce 01       	movw	r24, r28
    56e4:	00 df       	rcall	.-512    	; 0x54e6 <_ZN3RTC14ausgabezeitneuEv>
	if (interupts&(1<<Timerlauft))
    56e6:	28 8d       	ldd	r18, Y+24	; 0x18
    56e8:	25 ff       	sbrs	r18, 5
    56ea:	0a c0       	rjmp	.+20     	; 0x5700 <_ZN3RTC4zeitEv+0x5c>
	{
		Timerzahler--;
    56ec:	8b 8d       	ldd	r24, Y+27	; 0x1b
    56ee:	9c 8d       	ldd	r25, Y+28	; 0x1c
    56f0:	01 97       	sbiw	r24, 0x01	; 1
    56f2:	9c 8f       	std	Y+28, r25	; 0x1c
    56f4:	8b 8f       	std	Y+27, r24	; 0x1b
		if (Timerzahler<=0)
    56f6:	89 2b       	or	r24, r25
    56f8:	19 f4       	brne	.+6      	; 0x5700 <_ZN3RTC4zeitEv+0x5c>
		{
			interupts|=(1<<Alarm);
			interupts&=~(1<<Timerlauft);
    56fa:	2f 7d       	andi	r18, 0xDF	; 223
    56fc:	21 60       	ori	r18, 0x01	; 1
    56fe:	28 8f       	std	Y+24, r18	; 0x18
		}
	}
	if (interupts&(1<<Stoppuhrlauft))
    5700:	88 8d       	ldd	r24, Y+24	; 0x18
    5702:	86 ff       	sbrs	r24, 6
    5704:	05 c0       	rjmp	.+10     	; 0x5710 <_ZN3RTC4zeitEv+0x6c>
	{
		Stoppuhrzahler++;
    5706:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5708:	9e 8d       	ldd	r25, Y+30	; 0x1e
    570a:	01 96       	adiw	r24, 0x01	; 1
    570c:	9e 8f       	std	Y+30, r25	; 0x1e
    570e:	8d 8f       	std	Y+29, r24	; 0x1d
	}
	return 0;
}
    5710:	80 e0       	ldi	r24, 0x00	; 0
    5712:	df 91       	pop	r29
    5714:	cf 91       	pop	r28
    5716:	08 95       	ret

00005718 <_ZN3RTC10dummyeinstEv>:
	msg_dat[4]='0'+Monat%10;
	msg_dat[6]='0'+Jahr/10;
	msg_dat[7]='0'+Jahr%10;
}

void RTC::dummyeinst(){
    5718:	cf 93       	push	r28
    571a:	df 93       	push	r29
    571c:	ec 01       	movw	r28, r24
	Stunden=10;
    571e:	8a e0       	ldi	r24, 0x0A	; 10
    5720:	88 8b       	std	Y+16, r24	; 0x10
	Minuten=30;
    5722:	8e e1       	ldi	r24, 0x1E	; 30
    5724:	89 8b       	std	Y+17, r24	; 0x11
	Tag=7;
    5726:	87 e0       	ldi	r24, 0x07	; 7
    5728:	8c 8b       	std	Y+20, r24	; 0x14
	Monat=9;
    572a:	89 e0       	ldi	r24, 0x09	; 9
    572c:	8e 8b       	std	Y+22, r24	; 0x16
	Jahr=15;
    572e:	8f e0       	ldi	r24, 0x0F	; 15
    5730:	8f 8b       	std	Y+23, r24	; 0x17
	ausgabedatumneu();
    5732:	ce 01       	movw	r24, r28
    5734:	11 df       	rcall	.-478    	; 0x5558 <_ZN3RTC15ausgabedatumneuEv>
	ausgabezeitneu();
    5736:	ce 01       	movw	r24, r28
    5738:	d6 de       	rcall	.-596    	; 0x54e6 <_ZN3RTC14ausgabezeitneuEv>
}
    573a:	df 91       	pop	r29
    573c:	cf 91       	pop	r28
    573e:	08 95       	ret

00005740 <_ZN3RTC8RTCstartEv>:

void RTC::RTCstart(){
    5740:	fc 01       	movw	r30, r24
	//Einstellungen des Ausgabebuffers
	msg_uhr[0]='0';
    5742:	80 e3       	ldi	r24, 0x30	; 48
    5744:	80 83       	st	Z, r24
	msg_uhr[1]='0';
    5746:	81 83       	std	Z+1, r24	; 0x01
	msg_uhr[2]=':';
    5748:	9a e3       	ldi	r25, 0x3A	; 58
    574a:	92 83       	std	Z+2, r25	; 0x02
	msg_uhr[3]='0';
    574c:	83 83       	std	Z+3, r24	; 0x03
	msg_uhr[4]='0';
    574e:	84 83       	std	Z+4, r24	; 0x04
	msg_uhr[5]=':';
    5750:	95 83       	std	Z+5, r25	; 0x05
	msg_uhr[6]='0';
    5752:	86 83       	std	Z+6, r24	; 0x06
	msg_uhr[7]='0';
    5754:	87 83       	std	Z+7, r24	; 0x07
	//Timer2 als 1ms Timer fuer die RTC
	//asynchron mit 32.768 kHz (noch synchrom)
	TCNT2 = TIMER2RTCTIME;
    5756:	10 92 b2 00 	sts	0x00B2, r1
	ASSR |= (1<<AS2);
    575a:	e6 eb       	ldi	r30, 0xB6	; 182
    575c:	f0 e0       	ldi	r31, 0x00	; 0
    575e:	80 81       	ld	r24, Z
    5760:	80 62       	ori	r24, 0x20	; 32
    5762:	80 83       	st	Z, r24
	TIMSK2 = (1<<TOIE2);
    5764:	81 e0       	ldi	r24, 0x01	; 1
    5766:	80 93 70 00 	sts	0x0070, r24
	TCCR2B = (1<<CS22) | (1<<CS20);		//Vorteiler 256
    576a:	85 e0       	ldi	r24, 0x05	; 5
    576c:	80 93 b1 00 	sts	0x00B1, r24
    5770:	08 95       	ret

00005772 <_ZN3RTC7RTCstopEv>:
}

void RTC::RTCstop(){
	TCCR2B &= ~((1<<CS22) | (1<<CS21));
    5772:	e1 eb       	ldi	r30, 0xB1	; 177
    5774:	f0 e0       	ldi	r31, 0x00	; 0
    5776:	80 81       	ld	r24, Z
    5778:	89 7f       	andi	r24, 0xF9	; 249
    577a:	80 83       	st	Z, r24
    577c:	08 95       	ret

0000577e <__subsf3>:
    577e:	50 58       	subi	r21, 0x80	; 128

00005780 <__addsf3>:
    5780:	bb 27       	eor	r27, r27
    5782:	aa 27       	eor	r26, r26
    5784:	0e d0       	rcall	.+28     	; 0x57a2 <__addsf3x>
    5786:	27 c2       	rjmp	.+1102   	; 0x5bd6 <__fp_round>
    5788:	f0 d1       	rcall	.+992    	; 0x5b6a <__fp_pscA>
    578a:	30 f0       	brcs	.+12     	; 0x5798 <__addsf3+0x18>
    578c:	f5 d1       	rcall	.+1002   	; 0x5b78 <__fp_pscB>
    578e:	20 f0       	brcs	.+8      	; 0x5798 <__addsf3+0x18>
    5790:	31 f4       	brne	.+12     	; 0x579e <__addsf3+0x1e>
    5792:	9f 3f       	cpi	r25, 0xFF	; 255
    5794:	11 f4       	brne	.+4      	; 0x579a <__addsf3+0x1a>
    5796:	1e f4       	brtc	.+6      	; 0x579e <__addsf3+0x1e>
    5798:	c0 c1       	rjmp	.+896    	; 0x5b1a <__fp_nan>
    579a:	0e f4       	brtc	.+2      	; 0x579e <__addsf3+0x1e>
    579c:	e0 95       	com	r30
    579e:	e7 fb       	bst	r30, 7
    57a0:	b6 c1       	rjmp	.+876    	; 0x5b0e <__fp_inf>

000057a2 <__addsf3x>:
    57a2:	e9 2f       	mov	r30, r25
    57a4:	3a d2       	rcall	.+1140   	; 0x5c1a <__fp_split3>
    57a6:	80 f3       	brcs	.-32     	; 0x5788 <__addsf3+0x8>
    57a8:	ba 17       	cp	r27, r26
    57aa:	62 07       	cpc	r22, r18
    57ac:	73 07       	cpc	r23, r19
    57ae:	84 07       	cpc	r24, r20
    57b0:	95 07       	cpc	r25, r21
    57b2:	18 f0       	brcs	.+6      	; 0x57ba <__addsf3x+0x18>
    57b4:	71 f4       	brne	.+28     	; 0x57d2 <__addsf3x+0x30>
    57b6:	9e f5       	brtc	.+102    	; 0x581e <__addsf3x+0x7c>
    57b8:	52 c2       	rjmp	.+1188   	; 0x5c5e <__fp_zero>
    57ba:	0e f4       	brtc	.+2      	; 0x57be <__addsf3x+0x1c>
    57bc:	e0 95       	com	r30
    57be:	0b 2e       	mov	r0, r27
    57c0:	ba 2f       	mov	r27, r26
    57c2:	a0 2d       	mov	r26, r0
    57c4:	0b 01       	movw	r0, r22
    57c6:	b9 01       	movw	r22, r18
    57c8:	90 01       	movw	r18, r0
    57ca:	0c 01       	movw	r0, r24
    57cc:	ca 01       	movw	r24, r20
    57ce:	a0 01       	movw	r20, r0
    57d0:	11 24       	eor	r1, r1
    57d2:	ff 27       	eor	r31, r31
    57d4:	59 1b       	sub	r21, r25
    57d6:	99 f0       	breq	.+38     	; 0x57fe <__addsf3x+0x5c>
    57d8:	59 3f       	cpi	r21, 0xF9	; 249
    57da:	50 f4       	brcc	.+20     	; 0x57f0 <__addsf3x+0x4e>
    57dc:	50 3e       	cpi	r21, 0xE0	; 224
    57de:	68 f1       	brcs	.+90     	; 0x583a <__addsf3x+0x98>
    57e0:	1a 16       	cp	r1, r26
    57e2:	f0 40       	sbci	r31, 0x00	; 0
    57e4:	a2 2f       	mov	r26, r18
    57e6:	23 2f       	mov	r18, r19
    57e8:	34 2f       	mov	r19, r20
    57ea:	44 27       	eor	r20, r20
    57ec:	58 5f       	subi	r21, 0xF8	; 248
    57ee:	f3 cf       	rjmp	.-26     	; 0x57d6 <__addsf3x+0x34>
    57f0:	46 95       	lsr	r20
    57f2:	37 95       	ror	r19
    57f4:	27 95       	ror	r18
    57f6:	a7 95       	ror	r26
    57f8:	f0 40       	sbci	r31, 0x00	; 0
    57fa:	53 95       	inc	r21
    57fc:	c9 f7       	brne	.-14     	; 0x57f0 <__addsf3x+0x4e>
    57fe:	7e f4       	brtc	.+30     	; 0x581e <__addsf3x+0x7c>
    5800:	1f 16       	cp	r1, r31
    5802:	ba 0b       	sbc	r27, r26
    5804:	62 0b       	sbc	r22, r18
    5806:	73 0b       	sbc	r23, r19
    5808:	84 0b       	sbc	r24, r20
    580a:	ba f0       	brmi	.+46     	; 0x583a <__addsf3x+0x98>
    580c:	91 50       	subi	r25, 0x01	; 1
    580e:	a1 f0       	breq	.+40     	; 0x5838 <__addsf3x+0x96>
    5810:	ff 0f       	add	r31, r31
    5812:	bb 1f       	adc	r27, r27
    5814:	66 1f       	adc	r22, r22
    5816:	77 1f       	adc	r23, r23
    5818:	88 1f       	adc	r24, r24
    581a:	c2 f7       	brpl	.-16     	; 0x580c <__addsf3x+0x6a>
    581c:	0e c0       	rjmp	.+28     	; 0x583a <__addsf3x+0x98>
    581e:	ba 0f       	add	r27, r26
    5820:	62 1f       	adc	r22, r18
    5822:	73 1f       	adc	r23, r19
    5824:	84 1f       	adc	r24, r20
    5826:	48 f4       	brcc	.+18     	; 0x583a <__addsf3x+0x98>
    5828:	87 95       	ror	r24
    582a:	77 95       	ror	r23
    582c:	67 95       	ror	r22
    582e:	b7 95       	ror	r27
    5830:	f7 95       	ror	r31
    5832:	9e 3f       	cpi	r25, 0xFE	; 254
    5834:	08 f0       	brcs	.+2      	; 0x5838 <__addsf3x+0x96>
    5836:	b3 cf       	rjmp	.-154    	; 0x579e <__addsf3+0x1e>
    5838:	93 95       	inc	r25
    583a:	88 0f       	add	r24, r24
    583c:	08 f0       	brcs	.+2      	; 0x5840 <__addsf3x+0x9e>
    583e:	99 27       	eor	r25, r25
    5840:	ee 0f       	add	r30, r30
    5842:	97 95       	ror	r25
    5844:	87 95       	ror	r24
    5846:	08 95       	ret
    5848:	90 d1       	rcall	.+800    	; 0x5b6a <__fp_pscA>
    584a:	58 f0       	brcs	.+22     	; 0x5862 <__addsf3x+0xc0>
    584c:	80 e8       	ldi	r24, 0x80	; 128
    584e:	91 e0       	ldi	r25, 0x01	; 1
    5850:	09 f4       	brne	.+2      	; 0x5854 <__addsf3x+0xb2>
    5852:	9e ef       	ldi	r25, 0xFE	; 254
    5854:	91 d1       	rcall	.+802    	; 0x5b78 <__fp_pscB>
    5856:	28 f0       	brcs	.+10     	; 0x5862 <__addsf3x+0xc0>
    5858:	40 e8       	ldi	r20, 0x80	; 128
    585a:	51 e0       	ldi	r21, 0x01	; 1
    585c:	59 f4       	brne	.+22     	; 0x5874 <atan2+0xe>
    585e:	5e ef       	ldi	r21, 0xFE	; 254
    5860:	09 c0       	rjmp	.+18     	; 0x5874 <atan2+0xe>
    5862:	5b c1       	rjmp	.+694    	; 0x5b1a <__fp_nan>
    5864:	fc c1       	rjmp	.+1016   	; 0x5c5e <__fp_zero>

00005866 <atan2>:
    5866:	e9 2f       	mov	r30, r25
    5868:	e0 78       	andi	r30, 0x80	; 128
    586a:	d7 d1       	rcall	.+942    	; 0x5c1a <__fp_split3>
    586c:	68 f3       	brcs	.-38     	; 0x5848 <__addsf3x+0xa6>
    586e:	09 2e       	mov	r0, r25
    5870:	05 2a       	or	r0, r21
    5872:	c1 f3       	breq	.-16     	; 0x5864 <__addsf3x+0xc2>
    5874:	26 17       	cp	r18, r22
    5876:	37 07       	cpc	r19, r23
    5878:	48 07       	cpc	r20, r24
    587a:	59 07       	cpc	r21, r25
    587c:	38 f0       	brcs	.+14     	; 0x588c <atan2+0x26>
    587e:	0e 2e       	mov	r0, r30
    5880:	07 f8       	bld	r0, 7
    5882:	e0 25       	eor	r30, r0
    5884:	69 f0       	breq	.+26     	; 0x58a0 <atan2+0x3a>
    5886:	e0 25       	eor	r30, r0
    5888:	e0 64       	ori	r30, 0x40	; 64
    588a:	0a c0       	rjmp	.+20     	; 0x58a0 <atan2+0x3a>
    588c:	ef 63       	ori	r30, 0x3F	; 63
    588e:	07 f8       	bld	r0, 7
    5890:	00 94       	com	r0
    5892:	07 fa       	bst	r0, 7
    5894:	db 01       	movw	r26, r22
    5896:	b9 01       	movw	r22, r18
    5898:	9d 01       	movw	r18, r26
    589a:	dc 01       	movw	r26, r24
    589c:	ca 01       	movw	r24, r20
    589e:	ad 01       	movw	r20, r26
    58a0:	ef 93       	push	r30
    58a2:	4a d0       	rcall	.+148    	; 0x5938 <__divsf3_pse>
    58a4:	98 d1       	rcall	.+816    	; 0x5bd6 <__fp_round>
    58a6:	0a d0       	rcall	.+20     	; 0x58bc <atan>
    58a8:	5f 91       	pop	r21
    58aa:	55 23       	and	r21, r21
    58ac:	31 f0       	breq	.+12     	; 0x58ba <atan2+0x54>
    58ae:	2b ed       	ldi	r18, 0xDB	; 219
    58b0:	3f e0       	ldi	r19, 0x0F	; 15
    58b2:	49 e4       	ldi	r20, 0x49	; 73
    58b4:	50 fd       	sbrc	r21, 0
    58b6:	49 ec       	ldi	r20, 0xC9	; 201
    58b8:	63 cf       	rjmp	.-314    	; 0x5780 <__addsf3>
    58ba:	08 95       	ret

000058bc <atan>:
    58bc:	df 93       	push	r29
    58be:	dd 27       	eor	r29, r29
    58c0:	b9 2f       	mov	r27, r25
    58c2:	bf 77       	andi	r27, 0x7F	; 127
    58c4:	40 e8       	ldi	r20, 0x80	; 128
    58c6:	5f e3       	ldi	r21, 0x3F	; 63
    58c8:	16 16       	cp	r1, r22
    58ca:	17 06       	cpc	r1, r23
    58cc:	48 07       	cpc	r20, r24
    58ce:	5b 07       	cpc	r21, r27
    58d0:	10 f4       	brcc	.+4      	; 0x58d6 <atan+0x1a>
    58d2:	d9 2f       	mov	r29, r25
    58d4:	cf d1       	rcall	.+926    	; 0x5c74 <inverse>
    58d6:	9f 93       	push	r25
    58d8:	8f 93       	push	r24
    58da:	7f 93       	push	r23
    58dc:	6f 93       	push	r22
    58de:	7f d2       	rcall	.+1278   	; 0x5dde <square>
    58e0:	ee eb       	ldi	r30, 0xBE	; 190
    58e2:	f0 e0       	ldi	r31, 0x00	; 0
    58e4:	1d d1       	rcall	.+570    	; 0x5b20 <__fp_powser>
    58e6:	77 d1       	rcall	.+750    	; 0x5bd6 <__fp_round>
    58e8:	2f 91       	pop	r18
    58ea:	3f 91       	pop	r19
    58ec:	4f 91       	pop	r20
    58ee:	5f 91       	pop	r21
    58f0:	19 d2       	rcall	.+1074   	; 0x5d24 <__mulsf3x>
    58f2:	dd 23       	and	r29, r29
    58f4:	49 f0       	breq	.+18     	; 0x5908 <atan+0x4c>
    58f6:	90 58       	subi	r25, 0x80	; 128
    58f8:	a2 ea       	ldi	r26, 0xA2	; 162
    58fa:	2a ed       	ldi	r18, 0xDA	; 218
    58fc:	3f e0       	ldi	r19, 0x0F	; 15
    58fe:	49 ec       	ldi	r20, 0xC9	; 201
    5900:	5f e3       	ldi	r21, 0x3F	; 63
    5902:	d0 78       	andi	r29, 0x80	; 128
    5904:	5d 27       	eor	r21, r29
    5906:	4d df       	rcall	.-358    	; 0x57a2 <__addsf3x>
    5908:	df 91       	pop	r29
    590a:	65 c1       	rjmp	.+714    	; 0x5bd6 <__fp_round>

0000590c <__cmpsf2>:
    590c:	dc d0       	rcall	.+440    	; 0x5ac6 <__fp_cmp>
    590e:	08 f4       	brcc	.+2      	; 0x5912 <__cmpsf2+0x6>
    5910:	81 e0       	ldi	r24, 0x01	; 1
    5912:	08 95       	ret

00005914 <cos>:
    5914:	39 d1       	rcall	.+626    	; 0x5b88 <__fp_rempio2>
    5916:	e3 95       	inc	r30
    5918:	6f c1       	rjmp	.+734    	; 0x5bf8 <__fp_sinus>

0000591a <__divsf3>:
    591a:	0c d0       	rcall	.+24     	; 0x5934 <__divsf3x>
    591c:	5c c1       	rjmp	.+696    	; 0x5bd6 <__fp_round>
    591e:	2c d1       	rcall	.+600    	; 0x5b78 <__fp_pscB>
    5920:	40 f0       	brcs	.+16     	; 0x5932 <__divsf3+0x18>
    5922:	23 d1       	rcall	.+582    	; 0x5b6a <__fp_pscA>
    5924:	30 f0       	brcs	.+12     	; 0x5932 <__divsf3+0x18>
    5926:	21 f4       	brne	.+8      	; 0x5930 <__divsf3+0x16>
    5928:	5f 3f       	cpi	r21, 0xFF	; 255
    592a:	19 f0       	breq	.+6      	; 0x5932 <__divsf3+0x18>
    592c:	f0 c0       	rjmp	.+480    	; 0x5b0e <__fp_inf>
    592e:	51 11       	cpse	r21, r1
    5930:	97 c1       	rjmp	.+814    	; 0x5c60 <__fp_szero>
    5932:	f3 c0       	rjmp	.+486    	; 0x5b1a <__fp_nan>

00005934 <__divsf3x>:
    5934:	72 d1       	rcall	.+740    	; 0x5c1a <__fp_split3>
    5936:	98 f3       	brcs	.-26     	; 0x591e <__divsf3+0x4>

00005938 <__divsf3_pse>:
    5938:	99 23       	and	r25, r25
    593a:	c9 f3       	breq	.-14     	; 0x592e <__divsf3+0x14>
    593c:	55 23       	and	r21, r21
    593e:	b1 f3       	breq	.-20     	; 0x592c <__divsf3+0x12>
    5940:	95 1b       	sub	r25, r21
    5942:	55 0b       	sbc	r21, r21
    5944:	bb 27       	eor	r27, r27
    5946:	aa 27       	eor	r26, r26
    5948:	62 17       	cp	r22, r18
    594a:	73 07       	cpc	r23, r19
    594c:	84 07       	cpc	r24, r20
    594e:	38 f0       	brcs	.+14     	; 0x595e <__divsf3_pse+0x26>
    5950:	9f 5f       	subi	r25, 0xFF	; 255
    5952:	5f 4f       	sbci	r21, 0xFF	; 255
    5954:	22 0f       	add	r18, r18
    5956:	33 1f       	adc	r19, r19
    5958:	44 1f       	adc	r20, r20
    595a:	aa 1f       	adc	r26, r26
    595c:	a9 f3       	breq	.-22     	; 0x5948 <__divsf3_pse+0x10>
    595e:	33 d0       	rcall	.+102    	; 0x59c6 <__divsf3_pse+0x8e>
    5960:	0e 2e       	mov	r0, r30
    5962:	3a f0       	brmi	.+14     	; 0x5972 <__divsf3_pse+0x3a>
    5964:	e0 e8       	ldi	r30, 0x80	; 128
    5966:	30 d0       	rcall	.+96     	; 0x59c8 <__divsf3_pse+0x90>
    5968:	91 50       	subi	r25, 0x01	; 1
    596a:	50 40       	sbci	r21, 0x00	; 0
    596c:	e6 95       	lsr	r30
    596e:	00 1c       	adc	r0, r0
    5970:	ca f7       	brpl	.-14     	; 0x5964 <__divsf3_pse+0x2c>
    5972:	29 d0       	rcall	.+82     	; 0x59c6 <__divsf3_pse+0x8e>
    5974:	fe 2f       	mov	r31, r30
    5976:	27 d0       	rcall	.+78     	; 0x59c6 <__divsf3_pse+0x8e>
    5978:	66 0f       	add	r22, r22
    597a:	77 1f       	adc	r23, r23
    597c:	88 1f       	adc	r24, r24
    597e:	bb 1f       	adc	r27, r27
    5980:	26 17       	cp	r18, r22
    5982:	37 07       	cpc	r19, r23
    5984:	48 07       	cpc	r20, r24
    5986:	ab 07       	cpc	r26, r27
    5988:	b0 e8       	ldi	r27, 0x80	; 128
    598a:	09 f0       	breq	.+2      	; 0x598e <__divsf3_pse+0x56>
    598c:	bb 0b       	sbc	r27, r27
    598e:	80 2d       	mov	r24, r0
    5990:	bf 01       	movw	r22, r30
    5992:	ff 27       	eor	r31, r31
    5994:	93 58       	subi	r25, 0x83	; 131
    5996:	5f 4f       	sbci	r21, 0xFF	; 255
    5998:	2a f0       	brmi	.+10     	; 0x59a4 <__divsf3_pse+0x6c>
    599a:	9e 3f       	cpi	r25, 0xFE	; 254
    599c:	51 05       	cpc	r21, r1
    599e:	68 f0       	brcs	.+26     	; 0x59ba <__divsf3_pse+0x82>
    59a0:	b6 c0       	rjmp	.+364    	; 0x5b0e <__fp_inf>
    59a2:	5e c1       	rjmp	.+700    	; 0x5c60 <__fp_szero>
    59a4:	5f 3f       	cpi	r21, 0xFF	; 255
    59a6:	ec f3       	brlt	.-6      	; 0x59a2 <__divsf3_pse+0x6a>
    59a8:	98 3e       	cpi	r25, 0xE8	; 232
    59aa:	dc f3       	brlt	.-10     	; 0x59a2 <__divsf3_pse+0x6a>
    59ac:	86 95       	lsr	r24
    59ae:	77 95       	ror	r23
    59b0:	67 95       	ror	r22
    59b2:	b7 95       	ror	r27
    59b4:	f7 95       	ror	r31
    59b6:	9f 5f       	subi	r25, 0xFF	; 255
    59b8:	c9 f7       	brne	.-14     	; 0x59ac <__divsf3_pse+0x74>
    59ba:	88 0f       	add	r24, r24
    59bc:	91 1d       	adc	r25, r1
    59be:	96 95       	lsr	r25
    59c0:	87 95       	ror	r24
    59c2:	97 f9       	bld	r25, 7
    59c4:	08 95       	ret
    59c6:	e1 e0       	ldi	r30, 0x01	; 1
    59c8:	66 0f       	add	r22, r22
    59ca:	77 1f       	adc	r23, r23
    59cc:	88 1f       	adc	r24, r24
    59ce:	bb 1f       	adc	r27, r27
    59d0:	62 17       	cp	r22, r18
    59d2:	73 07       	cpc	r23, r19
    59d4:	84 07       	cpc	r24, r20
    59d6:	ba 07       	cpc	r27, r26
    59d8:	20 f0       	brcs	.+8      	; 0x59e2 <__divsf3_pse+0xaa>
    59da:	62 1b       	sub	r22, r18
    59dc:	73 0b       	sbc	r23, r19
    59de:	84 0b       	sbc	r24, r20
    59e0:	ba 0b       	sbc	r27, r26
    59e2:	ee 1f       	adc	r30, r30
    59e4:	88 f7       	brcc	.-30     	; 0x59c8 <__divsf3_pse+0x90>
    59e6:	e0 95       	com	r30
    59e8:	08 95       	ret

000059ea <__fixsfsi>:
    59ea:	04 d0       	rcall	.+8      	; 0x59f4 <__fixunssfsi>
    59ec:	68 94       	set
    59ee:	b1 11       	cpse	r27, r1
    59f0:	37 c1       	rjmp	.+622    	; 0x5c60 <__fp_szero>
    59f2:	08 95       	ret

000059f4 <__fixunssfsi>:
    59f4:	1a d1       	rcall	.+564    	; 0x5c2a <__fp_splitA>
    59f6:	88 f0       	brcs	.+34     	; 0x5a1a <__fixunssfsi+0x26>
    59f8:	9f 57       	subi	r25, 0x7F	; 127
    59fa:	90 f0       	brcs	.+36     	; 0x5a20 <__fixunssfsi+0x2c>
    59fc:	b9 2f       	mov	r27, r25
    59fe:	99 27       	eor	r25, r25
    5a00:	b7 51       	subi	r27, 0x17	; 23
    5a02:	a0 f0       	brcs	.+40     	; 0x5a2c <__fixunssfsi+0x38>
    5a04:	d1 f0       	breq	.+52     	; 0x5a3a <__fixunssfsi+0x46>
    5a06:	66 0f       	add	r22, r22
    5a08:	77 1f       	adc	r23, r23
    5a0a:	88 1f       	adc	r24, r24
    5a0c:	99 1f       	adc	r25, r25
    5a0e:	1a f0       	brmi	.+6      	; 0x5a16 <__fixunssfsi+0x22>
    5a10:	ba 95       	dec	r27
    5a12:	c9 f7       	brne	.-14     	; 0x5a06 <__fixunssfsi+0x12>
    5a14:	12 c0       	rjmp	.+36     	; 0x5a3a <__fixunssfsi+0x46>
    5a16:	b1 30       	cpi	r27, 0x01	; 1
    5a18:	81 f0       	breq	.+32     	; 0x5a3a <__fixunssfsi+0x46>
    5a1a:	21 d1       	rcall	.+578    	; 0x5c5e <__fp_zero>
    5a1c:	b1 e0       	ldi	r27, 0x01	; 1
    5a1e:	08 95       	ret
    5a20:	1e c1       	rjmp	.+572    	; 0x5c5e <__fp_zero>
    5a22:	67 2f       	mov	r22, r23
    5a24:	78 2f       	mov	r23, r24
    5a26:	88 27       	eor	r24, r24
    5a28:	b8 5f       	subi	r27, 0xF8	; 248
    5a2a:	39 f0       	breq	.+14     	; 0x5a3a <__fixunssfsi+0x46>
    5a2c:	b9 3f       	cpi	r27, 0xF9	; 249
    5a2e:	cc f3       	brlt	.-14     	; 0x5a22 <__fixunssfsi+0x2e>
    5a30:	86 95       	lsr	r24
    5a32:	77 95       	ror	r23
    5a34:	67 95       	ror	r22
    5a36:	b3 95       	inc	r27
    5a38:	d9 f7       	brne	.-10     	; 0x5a30 <__fixunssfsi+0x3c>
    5a3a:	3e f4       	brtc	.+14     	; 0x5a4a <__fixunssfsi+0x56>
    5a3c:	90 95       	com	r25
    5a3e:	80 95       	com	r24
    5a40:	70 95       	com	r23
    5a42:	61 95       	neg	r22
    5a44:	7f 4f       	sbci	r23, 0xFF	; 255
    5a46:	8f 4f       	sbci	r24, 0xFF	; 255
    5a48:	9f 4f       	sbci	r25, 0xFF	; 255
    5a4a:	08 95       	ret

00005a4c <__floatunsisf>:
    5a4c:	e8 94       	clt
    5a4e:	09 c0       	rjmp	.+18     	; 0x5a62 <__floatsisf+0x12>

00005a50 <__floatsisf>:
    5a50:	97 fb       	bst	r25, 7
    5a52:	3e f4       	brtc	.+14     	; 0x5a62 <__floatsisf+0x12>
    5a54:	90 95       	com	r25
    5a56:	80 95       	com	r24
    5a58:	70 95       	com	r23
    5a5a:	61 95       	neg	r22
    5a5c:	7f 4f       	sbci	r23, 0xFF	; 255
    5a5e:	8f 4f       	sbci	r24, 0xFF	; 255
    5a60:	9f 4f       	sbci	r25, 0xFF	; 255
    5a62:	99 23       	and	r25, r25
    5a64:	a9 f0       	breq	.+42     	; 0x5a90 <__floatsisf+0x40>
    5a66:	f9 2f       	mov	r31, r25
    5a68:	96 e9       	ldi	r25, 0x96	; 150
    5a6a:	bb 27       	eor	r27, r27
    5a6c:	93 95       	inc	r25
    5a6e:	f6 95       	lsr	r31
    5a70:	87 95       	ror	r24
    5a72:	77 95       	ror	r23
    5a74:	67 95       	ror	r22
    5a76:	b7 95       	ror	r27
    5a78:	f1 11       	cpse	r31, r1
    5a7a:	f8 cf       	rjmp	.-16     	; 0x5a6c <__floatsisf+0x1c>
    5a7c:	fa f4       	brpl	.+62     	; 0x5abc <__floatsisf+0x6c>
    5a7e:	bb 0f       	add	r27, r27
    5a80:	11 f4       	brne	.+4      	; 0x5a86 <__floatsisf+0x36>
    5a82:	60 ff       	sbrs	r22, 0
    5a84:	1b c0       	rjmp	.+54     	; 0x5abc <__floatsisf+0x6c>
    5a86:	6f 5f       	subi	r22, 0xFF	; 255
    5a88:	7f 4f       	sbci	r23, 0xFF	; 255
    5a8a:	8f 4f       	sbci	r24, 0xFF	; 255
    5a8c:	9f 4f       	sbci	r25, 0xFF	; 255
    5a8e:	16 c0       	rjmp	.+44     	; 0x5abc <__floatsisf+0x6c>
    5a90:	88 23       	and	r24, r24
    5a92:	11 f0       	breq	.+4      	; 0x5a98 <__floatsisf+0x48>
    5a94:	96 e9       	ldi	r25, 0x96	; 150
    5a96:	11 c0       	rjmp	.+34     	; 0x5aba <__floatsisf+0x6a>
    5a98:	77 23       	and	r23, r23
    5a9a:	21 f0       	breq	.+8      	; 0x5aa4 <__floatsisf+0x54>
    5a9c:	9e e8       	ldi	r25, 0x8E	; 142
    5a9e:	87 2f       	mov	r24, r23
    5aa0:	76 2f       	mov	r23, r22
    5aa2:	05 c0       	rjmp	.+10     	; 0x5aae <__floatsisf+0x5e>
    5aa4:	66 23       	and	r22, r22
    5aa6:	71 f0       	breq	.+28     	; 0x5ac4 <__floatsisf+0x74>
    5aa8:	96 e8       	ldi	r25, 0x86	; 134
    5aaa:	86 2f       	mov	r24, r22
    5aac:	70 e0       	ldi	r23, 0x00	; 0
    5aae:	60 e0       	ldi	r22, 0x00	; 0
    5ab0:	2a f0       	brmi	.+10     	; 0x5abc <__floatsisf+0x6c>
    5ab2:	9a 95       	dec	r25
    5ab4:	66 0f       	add	r22, r22
    5ab6:	77 1f       	adc	r23, r23
    5ab8:	88 1f       	adc	r24, r24
    5aba:	da f7       	brpl	.-10     	; 0x5ab2 <__floatsisf+0x62>
    5abc:	88 0f       	add	r24, r24
    5abe:	96 95       	lsr	r25
    5ac0:	87 95       	ror	r24
    5ac2:	97 f9       	bld	r25, 7
    5ac4:	08 95       	ret

00005ac6 <__fp_cmp>:
    5ac6:	99 0f       	add	r25, r25
    5ac8:	00 08       	sbc	r0, r0
    5aca:	55 0f       	add	r21, r21
    5acc:	aa 0b       	sbc	r26, r26
    5ace:	e0 e8       	ldi	r30, 0x80	; 128
    5ad0:	fe ef       	ldi	r31, 0xFE	; 254
    5ad2:	16 16       	cp	r1, r22
    5ad4:	17 06       	cpc	r1, r23
    5ad6:	e8 07       	cpc	r30, r24
    5ad8:	f9 07       	cpc	r31, r25
    5ada:	c0 f0       	brcs	.+48     	; 0x5b0c <__fp_cmp+0x46>
    5adc:	12 16       	cp	r1, r18
    5ade:	13 06       	cpc	r1, r19
    5ae0:	e4 07       	cpc	r30, r20
    5ae2:	f5 07       	cpc	r31, r21
    5ae4:	98 f0       	brcs	.+38     	; 0x5b0c <__fp_cmp+0x46>
    5ae6:	62 1b       	sub	r22, r18
    5ae8:	73 0b       	sbc	r23, r19
    5aea:	84 0b       	sbc	r24, r20
    5aec:	95 0b       	sbc	r25, r21
    5aee:	39 f4       	brne	.+14     	; 0x5afe <__fp_cmp+0x38>
    5af0:	0a 26       	eor	r0, r26
    5af2:	61 f0       	breq	.+24     	; 0x5b0c <__fp_cmp+0x46>
    5af4:	23 2b       	or	r18, r19
    5af6:	24 2b       	or	r18, r20
    5af8:	25 2b       	or	r18, r21
    5afa:	21 f4       	brne	.+8      	; 0x5b04 <__fp_cmp+0x3e>
    5afc:	08 95       	ret
    5afe:	0a 26       	eor	r0, r26
    5b00:	09 f4       	brne	.+2      	; 0x5b04 <__fp_cmp+0x3e>
    5b02:	a1 40       	sbci	r26, 0x01	; 1
    5b04:	a6 95       	lsr	r26
    5b06:	8f ef       	ldi	r24, 0xFF	; 255
    5b08:	81 1d       	adc	r24, r1
    5b0a:	81 1d       	adc	r24, r1
    5b0c:	08 95       	ret

00005b0e <__fp_inf>:
    5b0e:	97 f9       	bld	r25, 7
    5b10:	9f 67       	ori	r25, 0x7F	; 127
    5b12:	80 e8       	ldi	r24, 0x80	; 128
    5b14:	70 e0       	ldi	r23, 0x00	; 0
    5b16:	60 e0       	ldi	r22, 0x00	; 0
    5b18:	08 95       	ret

00005b1a <__fp_nan>:
    5b1a:	9f ef       	ldi	r25, 0xFF	; 255
    5b1c:	80 ec       	ldi	r24, 0xC0	; 192
    5b1e:	08 95       	ret

00005b20 <__fp_powser>:
    5b20:	df 93       	push	r29
    5b22:	cf 93       	push	r28
    5b24:	1f 93       	push	r17
    5b26:	0f 93       	push	r16
    5b28:	ff 92       	push	r15
    5b2a:	ef 92       	push	r14
    5b2c:	df 92       	push	r13
    5b2e:	7b 01       	movw	r14, r22
    5b30:	8c 01       	movw	r16, r24
    5b32:	68 94       	set
    5b34:	05 c0       	rjmp	.+10     	; 0x5b40 <__fp_powser+0x20>
    5b36:	da 2e       	mov	r13, r26
    5b38:	ef 01       	movw	r28, r30
    5b3a:	f4 d0       	rcall	.+488    	; 0x5d24 <__mulsf3x>
    5b3c:	fe 01       	movw	r30, r28
    5b3e:	e8 94       	clt
    5b40:	a5 91       	lpm	r26, Z+
    5b42:	25 91       	lpm	r18, Z+
    5b44:	35 91       	lpm	r19, Z+
    5b46:	45 91       	lpm	r20, Z+
    5b48:	55 91       	lpm	r21, Z+
    5b4a:	ae f3       	brts	.-22     	; 0x5b36 <__fp_powser+0x16>
    5b4c:	ef 01       	movw	r28, r30
    5b4e:	29 de       	rcall	.-942    	; 0x57a2 <__addsf3x>
    5b50:	fe 01       	movw	r30, r28
    5b52:	97 01       	movw	r18, r14
    5b54:	a8 01       	movw	r20, r16
    5b56:	da 94       	dec	r13
    5b58:	79 f7       	brne	.-34     	; 0x5b38 <__fp_powser+0x18>
    5b5a:	df 90       	pop	r13
    5b5c:	ef 90       	pop	r14
    5b5e:	ff 90       	pop	r15
    5b60:	0f 91       	pop	r16
    5b62:	1f 91       	pop	r17
    5b64:	cf 91       	pop	r28
    5b66:	df 91       	pop	r29
    5b68:	08 95       	ret

00005b6a <__fp_pscA>:
    5b6a:	00 24       	eor	r0, r0
    5b6c:	0a 94       	dec	r0
    5b6e:	16 16       	cp	r1, r22
    5b70:	17 06       	cpc	r1, r23
    5b72:	18 06       	cpc	r1, r24
    5b74:	09 06       	cpc	r0, r25
    5b76:	08 95       	ret

00005b78 <__fp_pscB>:
    5b78:	00 24       	eor	r0, r0
    5b7a:	0a 94       	dec	r0
    5b7c:	12 16       	cp	r1, r18
    5b7e:	13 06       	cpc	r1, r19
    5b80:	14 06       	cpc	r1, r20
    5b82:	05 06       	cpc	r0, r21
    5b84:	08 95       	ret
    5b86:	c9 cf       	rjmp	.-110    	; 0x5b1a <__fp_nan>

00005b88 <__fp_rempio2>:
    5b88:	50 d0       	rcall	.+160    	; 0x5c2a <__fp_splitA>
    5b8a:	e8 f3       	brcs	.-6      	; 0x5b86 <__fp_pscB+0xe>
    5b8c:	e8 94       	clt
    5b8e:	e0 e0       	ldi	r30, 0x00	; 0
    5b90:	bb 27       	eor	r27, r27
    5b92:	9f 57       	subi	r25, 0x7F	; 127
    5b94:	f0 f0       	brcs	.+60     	; 0x5bd2 <__fp_rempio2+0x4a>
    5b96:	2a ed       	ldi	r18, 0xDA	; 218
    5b98:	3f e0       	ldi	r19, 0x0F	; 15
    5b9a:	49 ec       	ldi	r20, 0xC9	; 201
    5b9c:	06 c0       	rjmp	.+12     	; 0x5baa <__fp_rempio2+0x22>
    5b9e:	ee 0f       	add	r30, r30
    5ba0:	bb 0f       	add	r27, r27
    5ba2:	66 1f       	adc	r22, r22
    5ba4:	77 1f       	adc	r23, r23
    5ba6:	88 1f       	adc	r24, r24
    5ba8:	28 f0       	brcs	.+10     	; 0x5bb4 <__fp_rempio2+0x2c>
    5baa:	b2 3a       	cpi	r27, 0xA2	; 162
    5bac:	62 07       	cpc	r22, r18
    5bae:	73 07       	cpc	r23, r19
    5bb0:	84 07       	cpc	r24, r20
    5bb2:	28 f0       	brcs	.+10     	; 0x5bbe <__fp_rempio2+0x36>
    5bb4:	b2 5a       	subi	r27, 0xA2	; 162
    5bb6:	62 0b       	sbc	r22, r18
    5bb8:	73 0b       	sbc	r23, r19
    5bba:	84 0b       	sbc	r24, r20
    5bbc:	e3 95       	inc	r30
    5bbe:	9a 95       	dec	r25
    5bc0:	72 f7       	brpl	.-36     	; 0x5b9e <__fp_rempio2+0x16>
    5bc2:	80 38       	cpi	r24, 0x80	; 128
    5bc4:	30 f4       	brcc	.+12     	; 0x5bd2 <__fp_rempio2+0x4a>
    5bc6:	9a 95       	dec	r25
    5bc8:	bb 0f       	add	r27, r27
    5bca:	66 1f       	adc	r22, r22
    5bcc:	77 1f       	adc	r23, r23
    5bce:	88 1f       	adc	r24, r24
    5bd0:	d2 f7       	brpl	.-12     	; 0x5bc6 <__fp_rempio2+0x3e>
    5bd2:	90 48       	sbci	r25, 0x80	; 128
    5bd4:	29 c1       	rjmp	.+594    	; 0x5e28 <__fp_mpack_finite>

00005bd6 <__fp_round>:
    5bd6:	09 2e       	mov	r0, r25
    5bd8:	03 94       	inc	r0
    5bda:	00 0c       	add	r0, r0
    5bdc:	11 f4       	brne	.+4      	; 0x5be2 <__fp_round+0xc>
    5bde:	88 23       	and	r24, r24
    5be0:	52 f0       	brmi	.+20     	; 0x5bf6 <__fp_round+0x20>
    5be2:	bb 0f       	add	r27, r27
    5be4:	40 f4       	brcc	.+16     	; 0x5bf6 <__fp_round+0x20>
    5be6:	bf 2b       	or	r27, r31
    5be8:	11 f4       	brne	.+4      	; 0x5bee <__fp_round+0x18>
    5bea:	60 ff       	sbrs	r22, 0
    5bec:	04 c0       	rjmp	.+8      	; 0x5bf6 <__fp_round+0x20>
    5bee:	6f 5f       	subi	r22, 0xFF	; 255
    5bf0:	7f 4f       	sbci	r23, 0xFF	; 255
    5bf2:	8f 4f       	sbci	r24, 0xFF	; 255
    5bf4:	9f 4f       	sbci	r25, 0xFF	; 255
    5bf6:	08 95       	ret

00005bf8 <__fp_sinus>:
    5bf8:	ef 93       	push	r30
    5bfa:	e0 ff       	sbrs	r30, 0
    5bfc:	06 c0       	rjmp	.+12     	; 0x5c0a <__fp_sinus+0x12>
    5bfe:	a2 ea       	ldi	r26, 0xA2	; 162
    5c00:	2a ed       	ldi	r18, 0xDA	; 218
    5c02:	3f e0       	ldi	r19, 0x0F	; 15
    5c04:	49 ec       	ldi	r20, 0xC9	; 201
    5c06:	5f eb       	ldi	r21, 0xBF	; 191
    5c08:	cc dd       	rcall	.-1128   	; 0x57a2 <__addsf3x>
    5c0a:	e5 df       	rcall	.-54     	; 0x5bd6 <__fp_round>
    5c0c:	0f 90       	pop	r0
    5c0e:	03 94       	inc	r0
    5c10:	01 fc       	sbrc	r0, 1
    5c12:	90 58       	subi	r25, 0x80	; 128
    5c14:	eb ee       	ldi	r30, 0xEB	; 235
    5c16:	f0 e0       	ldi	r31, 0x00	; 0
    5c18:	13 c1       	rjmp	.+550    	; 0x5e40 <__fp_powsodd>

00005c1a <__fp_split3>:
    5c1a:	57 fd       	sbrc	r21, 7
    5c1c:	90 58       	subi	r25, 0x80	; 128
    5c1e:	44 0f       	add	r20, r20
    5c20:	55 1f       	adc	r21, r21
    5c22:	59 f0       	breq	.+22     	; 0x5c3a <__fp_splitA+0x10>
    5c24:	5f 3f       	cpi	r21, 0xFF	; 255
    5c26:	71 f0       	breq	.+28     	; 0x5c44 <__fp_splitA+0x1a>
    5c28:	47 95       	ror	r20

00005c2a <__fp_splitA>:
    5c2a:	88 0f       	add	r24, r24
    5c2c:	97 fb       	bst	r25, 7
    5c2e:	99 1f       	adc	r25, r25
    5c30:	61 f0       	breq	.+24     	; 0x5c4a <__fp_splitA+0x20>
    5c32:	9f 3f       	cpi	r25, 0xFF	; 255
    5c34:	79 f0       	breq	.+30     	; 0x5c54 <__fp_splitA+0x2a>
    5c36:	87 95       	ror	r24
    5c38:	08 95       	ret
    5c3a:	12 16       	cp	r1, r18
    5c3c:	13 06       	cpc	r1, r19
    5c3e:	14 06       	cpc	r1, r20
    5c40:	55 1f       	adc	r21, r21
    5c42:	f2 cf       	rjmp	.-28     	; 0x5c28 <__fp_split3+0xe>
    5c44:	46 95       	lsr	r20
    5c46:	f1 df       	rcall	.-30     	; 0x5c2a <__fp_splitA>
    5c48:	08 c0       	rjmp	.+16     	; 0x5c5a <__fp_splitA+0x30>
    5c4a:	16 16       	cp	r1, r22
    5c4c:	17 06       	cpc	r1, r23
    5c4e:	18 06       	cpc	r1, r24
    5c50:	99 1f       	adc	r25, r25
    5c52:	f1 cf       	rjmp	.-30     	; 0x5c36 <__fp_splitA+0xc>
    5c54:	86 95       	lsr	r24
    5c56:	71 05       	cpc	r23, r1
    5c58:	61 05       	cpc	r22, r1
    5c5a:	08 94       	sec
    5c5c:	08 95       	ret

00005c5e <__fp_zero>:
    5c5e:	e8 94       	clt

00005c60 <__fp_szero>:
    5c60:	bb 27       	eor	r27, r27
    5c62:	66 27       	eor	r22, r22
    5c64:	77 27       	eor	r23, r23
    5c66:	cb 01       	movw	r24, r22
    5c68:	97 f9       	bld	r25, 7
    5c6a:	08 95       	ret

00005c6c <__gesf2>:
    5c6c:	2c df       	rcall	.-424    	; 0x5ac6 <__fp_cmp>
    5c6e:	08 f4       	brcc	.+2      	; 0x5c72 <__gesf2+0x6>
    5c70:	8f ef       	ldi	r24, 0xFF	; 255
    5c72:	08 95       	ret

00005c74 <inverse>:
    5c74:	9b 01       	movw	r18, r22
    5c76:	ac 01       	movw	r20, r24
    5c78:	60 e0       	ldi	r22, 0x00	; 0
    5c7a:	70 e0       	ldi	r23, 0x00	; 0
    5c7c:	80 e8       	ldi	r24, 0x80	; 128
    5c7e:	9f e3       	ldi	r25, 0x3F	; 63
    5c80:	4c ce       	rjmp	.-872    	; 0x591a <__divsf3>
    5c82:	0e f0       	brts	.+2      	; 0x5c86 <inverse+0x12>
    5c84:	cf c0       	rjmp	.+414    	; 0x5e24 <__fp_mpack>
    5c86:	49 cf       	rjmp	.-366    	; 0x5b1a <__fp_nan>
    5c88:	68 94       	set
    5c8a:	41 cf       	rjmp	.-382    	; 0x5b0e <__fp_inf>

00005c8c <log>:
    5c8c:	ce df       	rcall	.-100    	; 0x5c2a <__fp_splitA>
    5c8e:	c8 f3       	brcs	.-14     	; 0x5c82 <inverse+0xe>
    5c90:	99 23       	and	r25, r25
    5c92:	d1 f3       	breq	.-12     	; 0x5c88 <inverse+0x14>
    5c94:	c6 f3       	brts	.-16     	; 0x5c86 <inverse+0x12>
    5c96:	df 93       	push	r29
    5c98:	cf 93       	push	r28
    5c9a:	1f 93       	push	r17
    5c9c:	0f 93       	push	r16
    5c9e:	ff 92       	push	r15
    5ca0:	c9 2f       	mov	r28, r25
    5ca2:	dd 27       	eor	r29, r29
    5ca4:	88 23       	and	r24, r24
    5ca6:	2a f0       	brmi	.+10     	; 0x5cb2 <log+0x26>
    5ca8:	21 97       	sbiw	r28, 0x01	; 1
    5caa:	66 0f       	add	r22, r22
    5cac:	77 1f       	adc	r23, r23
    5cae:	88 1f       	adc	r24, r24
    5cb0:	da f7       	brpl	.-10     	; 0x5ca8 <log+0x1c>
    5cb2:	20 e0       	ldi	r18, 0x00	; 0
    5cb4:	30 e0       	ldi	r19, 0x00	; 0
    5cb6:	40 e8       	ldi	r20, 0x80	; 128
    5cb8:	5f eb       	ldi	r21, 0xBF	; 191
    5cba:	9f e3       	ldi	r25, 0x3F	; 63
    5cbc:	88 39       	cpi	r24, 0x98	; 152
    5cbe:	20 f0       	brcs	.+8      	; 0x5cc8 <log+0x3c>
    5cc0:	80 3e       	cpi	r24, 0xE0	; 224
    5cc2:	30 f0       	brcs	.+12     	; 0x5cd0 <log+0x44>
    5cc4:	21 96       	adiw	r28, 0x01	; 1
    5cc6:	8f 77       	andi	r24, 0x7F	; 127
    5cc8:	5b dd       	rcall	.-1354   	; 0x5780 <__addsf3>
    5cca:	e9 e0       	ldi	r30, 0x09	; 9
    5ccc:	f1 e0       	ldi	r31, 0x01	; 1
    5cce:	03 c0       	rjmp	.+6      	; 0x5cd6 <log+0x4a>
    5cd0:	57 dd       	rcall	.-1362   	; 0x5780 <__addsf3>
    5cd2:	e6 e3       	ldi	r30, 0x36	; 54
    5cd4:	f1 e0       	ldi	r31, 0x01	; 1
    5cd6:	24 df       	rcall	.-440    	; 0x5b20 <__fp_powser>
    5cd8:	8b 01       	movw	r16, r22
    5cda:	be 01       	movw	r22, r28
    5cdc:	ec 01       	movw	r28, r24
    5cde:	fb 2e       	mov	r15, r27
    5ce0:	6f 57       	subi	r22, 0x7F	; 127
    5ce2:	71 09       	sbc	r23, r1
    5ce4:	75 95       	asr	r23
    5ce6:	77 1f       	adc	r23, r23
    5ce8:	88 0b       	sbc	r24, r24
    5cea:	99 0b       	sbc	r25, r25
    5cec:	b1 de       	rcall	.-670    	; 0x5a50 <__floatsisf>
    5cee:	28 e1       	ldi	r18, 0x18	; 24
    5cf0:	32 e7       	ldi	r19, 0x72	; 114
    5cf2:	41 e3       	ldi	r20, 0x31	; 49
    5cf4:	5f e3       	ldi	r21, 0x3F	; 63
    5cf6:	16 d0       	rcall	.+44     	; 0x5d24 <__mulsf3x>
    5cf8:	af 2d       	mov	r26, r15
    5cfa:	98 01       	movw	r18, r16
    5cfc:	ae 01       	movw	r20, r28
    5cfe:	ff 90       	pop	r15
    5d00:	0f 91       	pop	r16
    5d02:	1f 91       	pop	r17
    5d04:	cf 91       	pop	r28
    5d06:	df 91       	pop	r29
    5d08:	4c dd       	rcall	.-1384   	; 0x57a2 <__addsf3x>
    5d0a:	65 cf       	rjmp	.-310    	; 0x5bd6 <__fp_round>

00005d0c <__mulsf3>:
    5d0c:	0b d0       	rcall	.+22     	; 0x5d24 <__mulsf3x>
    5d0e:	63 cf       	rjmp	.-314    	; 0x5bd6 <__fp_round>
    5d10:	2c df       	rcall	.-424    	; 0x5b6a <__fp_pscA>
    5d12:	28 f0       	brcs	.+10     	; 0x5d1e <__mulsf3+0x12>
    5d14:	31 df       	rcall	.-414    	; 0x5b78 <__fp_pscB>
    5d16:	18 f0       	brcs	.+6      	; 0x5d1e <__mulsf3+0x12>
    5d18:	95 23       	and	r25, r21
    5d1a:	09 f0       	breq	.+2      	; 0x5d1e <__mulsf3+0x12>
    5d1c:	f8 ce       	rjmp	.-528    	; 0x5b0e <__fp_inf>
    5d1e:	fd ce       	rjmp	.-518    	; 0x5b1a <__fp_nan>
    5d20:	11 24       	eor	r1, r1
    5d22:	9e cf       	rjmp	.-196    	; 0x5c60 <__fp_szero>

00005d24 <__mulsf3x>:
    5d24:	7a df       	rcall	.-268    	; 0x5c1a <__fp_split3>
    5d26:	a0 f3       	brcs	.-24     	; 0x5d10 <__mulsf3+0x4>

00005d28 <__mulsf3_pse>:
    5d28:	95 9f       	mul	r25, r21
    5d2a:	d1 f3       	breq	.-12     	; 0x5d20 <__mulsf3+0x14>
    5d2c:	95 0f       	add	r25, r21
    5d2e:	50 e0       	ldi	r21, 0x00	; 0
    5d30:	55 1f       	adc	r21, r21
    5d32:	62 9f       	mul	r22, r18
    5d34:	f0 01       	movw	r30, r0
    5d36:	72 9f       	mul	r23, r18
    5d38:	bb 27       	eor	r27, r27
    5d3a:	f0 0d       	add	r31, r0
    5d3c:	b1 1d       	adc	r27, r1
    5d3e:	63 9f       	mul	r22, r19
    5d40:	aa 27       	eor	r26, r26
    5d42:	f0 0d       	add	r31, r0
    5d44:	b1 1d       	adc	r27, r1
    5d46:	aa 1f       	adc	r26, r26
    5d48:	64 9f       	mul	r22, r20
    5d4a:	66 27       	eor	r22, r22
    5d4c:	b0 0d       	add	r27, r0
    5d4e:	a1 1d       	adc	r26, r1
    5d50:	66 1f       	adc	r22, r22
    5d52:	82 9f       	mul	r24, r18
    5d54:	22 27       	eor	r18, r18
    5d56:	b0 0d       	add	r27, r0
    5d58:	a1 1d       	adc	r26, r1
    5d5a:	62 1f       	adc	r22, r18
    5d5c:	73 9f       	mul	r23, r19
    5d5e:	b0 0d       	add	r27, r0
    5d60:	a1 1d       	adc	r26, r1
    5d62:	62 1f       	adc	r22, r18
    5d64:	83 9f       	mul	r24, r19
    5d66:	a0 0d       	add	r26, r0
    5d68:	61 1d       	adc	r22, r1
    5d6a:	22 1f       	adc	r18, r18
    5d6c:	74 9f       	mul	r23, r20
    5d6e:	33 27       	eor	r19, r19
    5d70:	a0 0d       	add	r26, r0
    5d72:	61 1d       	adc	r22, r1
    5d74:	23 1f       	adc	r18, r19
    5d76:	84 9f       	mul	r24, r20
    5d78:	60 0d       	add	r22, r0
    5d7a:	21 1d       	adc	r18, r1
    5d7c:	82 2f       	mov	r24, r18
    5d7e:	76 2f       	mov	r23, r22
    5d80:	6a 2f       	mov	r22, r26
    5d82:	11 24       	eor	r1, r1
    5d84:	9f 57       	subi	r25, 0x7F	; 127
    5d86:	50 40       	sbci	r21, 0x00	; 0
    5d88:	8a f0       	brmi	.+34     	; 0x5dac <__mulsf3_pse+0x84>
    5d8a:	e1 f0       	breq	.+56     	; 0x5dc4 <__mulsf3_pse+0x9c>
    5d8c:	88 23       	and	r24, r24
    5d8e:	4a f0       	brmi	.+18     	; 0x5da2 <__mulsf3_pse+0x7a>
    5d90:	ee 0f       	add	r30, r30
    5d92:	ff 1f       	adc	r31, r31
    5d94:	bb 1f       	adc	r27, r27
    5d96:	66 1f       	adc	r22, r22
    5d98:	77 1f       	adc	r23, r23
    5d9a:	88 1f       	adc	r24, r24
    5d9c:	91 50       	subi	r25, 0x01	; 1
    5d9e:	50 40       	sbci	r21, 0x00	; 0
    5da0:	a9 f7       	brne	.-22     	; 0x5d8c <__mulsf3_pse+0x64>
    5da2:	9e 3f       	cpi	r25, 0xFE	; 254
    5da4:	51 05       	cpc	r21, r1
    5da6:	70 f0       	brcs	.+28     	; 0x5dc4 <__mulsf3_pse+0x9c>
    5da8:	b2 ce       	rjmp	.-668    	; 0x5b0e <__fp_inf>
    5daa:	5a cf       	rjmp	.-332    	; 0x5c60 <__fp_szero>
    5dac:	5f 3f       	cpi	r21, 0xFF	; 255
    5dae:	ec f3       	brlt	.-6      	; 0x5daa <__mulsf3_pse+0x82>
    5db0:	98 3e       	cpi	r25, 0xE8	; 232
    5db2:	dc f3       	brlt	.-10     	; 0x5daa <__mulsf3_pse+0x82>
    5db4:	86 95       	lsr	r24
    5db6:	77 95       	ror	r23
    5db8:	67 95       	ror	r22
    5dba:	b7 95       	ror	r27
    5dbc:	f7 95       	ror	r31
    5dbe:	e7 95       	ror	r30
    5dc0:	9f 5f       	subi	r25, 0xFF	; 255
    5dc2:	c1 f7       	brne	.-16     	; 0x5db4 <__mulsf3_pse+0x8c>
    5dc4:	fe 2b       	or	r31, r30
    5dc6:	88 0f       	add	r24, r24
    5dc8:	91 1d       	adc	r25, r1
    5dca:	96 95       	lsr	r25
    5dcc:	87 95       	ror	r24
    5dce:	97 f9       	bld	r25, 7
    5dd0:	08 95       	ret

00005dd2 <sin>:
    5dd2:	9f 93       	push	r25
    5dd4:	d9 de       	rcall	.-590    	; 0x5b88 <__fp_rempio2>
    5dd6:	0f 90       	pop	r0
    5dd8:	07 fc       	sbrc	r0, 7
    5dda:	ee 5f       	subi	r30, 0xFE	; 254
    5ddc:	0d cf       	rjmp	.-486    	; 0x5bf8 <__fp_sinus>

00005dde <square>:
    5dde:	9b 01       	movw	r18, r22
    5de0:	ac 01       	movw	r20, r24
    5de2:	94 cf       	rjmp	.-216    	; 0x5d0c <__mulsf3>

00005de4 <tan>:
    5de4:	df 93       	push	r29
    5de6:	d9 2f       	mov	r29, r25
    5de8:	cf de       	rcall	.-610    	; 0x5b88 <__fp_rempio2>
    5dea:	e6 95       	lsr	r30
    5dec:	d7 95       	ror	r29
    5dee:	2a ed       	ldi	r18, 0xDA	; 218
    5df0:	3f e0       	ldi	r19, 0x0F	; 15
    5df2:	49 e4       	ldi	r20, 0x49	; 73
    5df4:	5f e3       	ldi	r21, 0x3F	; 63
    5df6:	b3 3a       	cpi	r27, 0xA3	; 163
    5df8:	62 07       	cpc	r22, r18
    5dfa:	73 07       	cpc	r23, r19
    5dfc:	84 07       	cpc	r24, r20
    5dfe:	95 07       	cpc	r25, r21
    5e00:	d7 95       	ror	r29
    5e02:	2a f0       	brmi	.+10     	; 0x5e0e <tan+0x2a>
    5e04:	a2 ea       	ldi	r26, 0xA2	; 162
    5e06:	49 ec       	ldi	r20, 0xC9	; 201
    5e08:	90 68       	ori	r25, 0x80	; 128
    5e0a:	cb dc       	rcall	.-1642   	; 0x57a2 <__addsf3x>
    5e0c:	e4 de       	rcall	.-568    	; 0x5bd6 <__fp_round>
    5e0e:	e3 e6       	ldi	r30, 0x63	; 99
    5e10:	f1 e0       	ldi	r31, 0x01	; 1
    5e12:	16 d0       	rcall	.+44     	; 0x5e40 <__fp_powsodd>
    5e14:	dd 0f       	add	r29, r29
    5e16:	0b f0       	brvs	.+2      	; 0x5e1a <tan+0x36>
    5e18:	2d df       	rcall	.-422    	; 0x5c74 <inverse>
    5e1a:	dd 0f       	add	r29, r29
    5e1c:	0b f4       	brvc	.+2      	; 0x5e20 <tan+0x3c>
    5e1e:	90 58       	subi	r25, 0x80	; 128
    5e20:	df 91       	pop	r29
    5e22:	08 95       	ret

00005e24 <__fp_mpack>:
    5e24:	9f 3f       	cpi	r25, 0xFF	; 255
    5e26:	31 f0       	breq	.+12     	; 0x5e34 <__fp_mpack_finite+0xc>

00005e28 <__fp_mpack_finite>:
    5e28:	91 50       	subi	r25, 0x01	; 1
    5e2a:	20 f4       	brcc	.+8      	; 0x5e34 <__fp_mpack_finite+0xc>
    5e2c:	87 95       	ror	r24
    5e2e:	77 95       	ror	r23
    5e30:	67 95       	ror	r22
    5e32:	b7 95       	ror	r27
    5e34:	88 0f       	add	r24, r24
    5e36:	91 1d       	adc	r25, r1
    5e38:	96 95       	lsr	r25
    5e3a:	87 95       	ror	r24
    5e3c:	97 f9       	bld	r25, 7
    5e3e:	08 95       	ret

00005e40 <__fp_powsodd>:
    5e40:	9f 93       	push	r25
    5e42:	8f 93       	push	r24
    5e44:	7f 93       	push	r23
    5e46:	6f 93       	push	r22
    5e48:	ff 93       	push	r31
    5e4a:	ef 93       	push	r30
    5e4c:	9b 01       	movw	r18, r22
    5e4e:	ac 01       	movw	r20, r24
    5e50:	5d df       	rcall	.-326    	; 0x5d0c <__mulsf3>
    5e52:	ef 91       	pop	r30
    5e54:	ff 91       	pop	r31
    5e56:	64 de       	rcall	.-824    	; 0x5b20 <__fp_powser>
    5e58:	2f 91       	pop	r18
    5e5a:	3f 91       	pop	r19
    5e5c:	4f 91       	pop	r20
    5e5e:	5f 91       	pop	r21
    5e60:	55 cf       	rjmp	.-342    	; 0x5d0c <__mulsf3>

00005e62 <vfprintf>:
    5e62:	2f 92       	push	r2
    5e64:	3f 92       	push	r3
    5e66:	4f 92       	push	r4
    5e68:	5f 92       	push	r5
    5e6a:	6f 92       	push	r6
    5e6c:	7f 92       	push	r7
    5e6e:	8f 92       	push	r8
    5e70:	9f 92       	push	r9
    5e72:	af 92       	push	r10
    5e74:	bf 92       	push	r11
    5e76:	cf 92       	push	r12
    5e78:	df 92       	push	r13
    5e7a:	ef 92       	push	r14
    5e7c:	ff 92       	push	r15
    5e7e:	0f 93       	push	r16
    5e80:	1f 93       	push	r17
    5e82:	cf 93       	push	r28
    5e84:	df 93       	push	r29
    5e86:	cd b7       	in	r28, 0x3d	; 61
    5e88:	de b7       	in	r29, 0x3e	; 62
    5e8a:	63 97       	sbiw	r28, 0x13	; 19
    5e8c:	0f b6       	in	r0, 0x3f	; 63
    5e8e:	f8 94       	cli
    5e90:	de bf       	out	0x3e, r29	; 62
    5e92:	0f be       	out	0x3f, r0	; 63
    5e94:	cd bf       	out	0x3d, r28	; 61
    5e96:	7c 01       	movw	r14, r24
    5e98:	1b 01       	movw	r2, r22
    5e9a:	6a 01       	movw	r12, r20
    5e9c:	fc 01       	movw	r30, r24
    5e9e:	17 82       	std	Z+7, r1	; 0x07
    5ea0:	16 82       	std	Z+6, r1	; 0x06
    5ea2:	83 81       	ldd	r24, Z+3	; 0x03
    5ea4:	81 ff       	sbrs	r24, 1
    5ea6:	49 c3       	rjmp	.+1682   	; 0x653a <vfprintf+0x6d8>
    5ea8:	be 01       	movw	r22, r28
    5eaa:	6f 5f       	subi	r22, 0xFF	; 255
    5eac:	7f 4f       	sbci	r23, 0xFF	; 255
    5eae:	4b 01       	movw	r8, r22
    5eb0:	f7 01       	movw	r30, r14
    5eb2:	93 81       	ldd	r25, Z+3	; 0x03
    5eb4:	f1 01       	movw	r30, r2
    5eb6:	93 fd       	sbrc	r25, 3
    5eb8:	85 91       	lpm	r24, Z+
    5eba:	93 ff       	sbrs	r25, 3
    5ebc:	81 91       	ld	r24, Z+
    5ebe:	1f 01       	movw	r2, r30
    5ec0:	88 23       	and	r24, r24
    5ec2:	09 f4       	brne	.+2      	; 0x5ec6 <vfprintf+0x64>
    5ec4:	36 c3       	rjmp	.+1644   	; 0x6532 <vfprintf+0x6d0>
    5ec6:	85 32       	cpi	r24, 0x25	; 37
    5ec8:	39 f4       	brne	.+14     	; 0x5ed8 <vfprintf+0x76>
    5eca:	93 fd       	sbrc	r25, 3
    5ecc:	85 91       	lpm	r24, Z+
    5ece:	93 ff       	sbrs	r25, 3
    5ed0:	81 91       	ld	r24, Z+
    5ed2:	1f 01       	movw	r2, r30
    5ed4:	85 32       	cpi	r24, 0x25	; 37
    5ed6:	31 f4       	brne	.+12     	; 0x5ee4 <vfprintf+0x82>
    5ed8:	b7 01       	movw	r22, r14
    5eda:	90 e0       	ldi	r25, 0x00	; 0
    5edc:	77 d4       	rcall	.+2286   	; 0x67cc <fputc>
    5ede:	56 01       	movw	r10, r12
    5ee0:	65 01       	movw	r12, r10
    5ee2:	e6 cf       	rjmp	.-52     	; 0x5eb0 <vfprintf+0x4e>
    5ee4:	10 e0       	ldi	r17, 0x00	; 0
    5ee6:	51 2c       	mov	r5, r1
    5ee8:	20 e0       	ldi	r18, 0x00	; 0
    5eea:	20 32       	cpi	r18, 0x20	; 32
    5eec:	a0 f4       	brcc	.+40     	; 0x5f16 <vfprintf+0xb4>
    5eee:	8b 32       	cpi	r24, 0x2B	; 43
    5ef0:	69 f0       	breq	.+26     	; 0x5f0c <vfprintf+0xaa>
    5ef2:	30 f4       	brcc	.+12     	; 0x5f00 <vfprintf+0x9e>
    5ef4:	80 32       	cpi	r24, 0x20	; 32
    5ef6:	59 f0       	breq	.+22     	; 0x5f0e <vfprintf+0xac>
    5ef8:	83 32       	cpi	r24, 0x23	; 35
    5efa:	69 f4       	brne	.+26     	; 0x5f16 <vfprintf+0xb4>
    5efc:	20 61       	ori	r18, 0x10	; 16
    5efe:	2c c0       	rjmp	.+88     	; 0x5f58 <vfprintf+0xf6>
    5f00:	8d 32       	cpi	r24, 0x2D	; 45
    5f02:	39 f0       	breq	.+14     	; 0x5f12 <vfprintf+0xb0>
    5f04:	80 33       	cpi	r24, 0x30	; 48
    5f06:	39 f4       	brne	.+14     	; 0x5f16 <vfprintf+0xb4>
    5f08:	21 60       	ori	r18, 0x01	; 1
    5f0a:	26 c0       	rjmp	.+76     	; 0x5f58 <vfprintf+0xf6>
    5f0c:	22 60       	ori	r18, 0x02	; 2
    5f0e:	24 60       	ori	r18, 0x04	; 4
    5f10:	23 c0       	rjmp	.+70     	; 0x5f58 <vfprintf+0xf6>
    5f12:	28 60       	ori	r18, 0x08	; 8
    5f14:	21 c0       	rjmp	.+66     	; 0x5f58 <vfprintf+0xf6>
    5f16:	27 fd       	sbrc	r18, 7
    5f18:	27 c0       	rjmp	.+78     	; 0x5f68 <vfprintf+0x106>
    5f1a:	30 ed       	ldi	r19, 0xD0	; 208
    5f1c:	38 0f       	add	r19, r24
    5f1e:	3a 30       	cpi	r19, 0x0A	; 10
    5f20:	78 f4       	brcc	.+30     	; 0x5f40 <vfprintf+0xde>
    5f22:	26 ff       	sbrs	r18, 6
    5f24:	06 c0       	rjmp	.+12     	; 0x5f32 <vfprintf+0xd0>
    5f26:	fa e0       	ldi	r31, 0x0A	; 10
    5f28:	1f 9f       	mul	r17, r31
    5f2a:	30 0d       	add	r19, r0
    5f2c:	11 24       	eor	r1, r1
    5f2e:	13 2f       	mov	r17, r19
    5f30:	13 c0       	rjmp	.+38     	; 0x5f58 <vfprintf+0xf6>
    5f32:	6a e0       	ldi	r22, 0x0A	; 10
    5f34:	56 9e       	mul	r5, r22
    5f36:	30 0d       	add	r19, r0
    5f38:	11 24       	eor	r1, r1
    5f3a:	53 2e       	mov	r5, r19
    5f3c:	20 62       	ori	r18, 0x20	; 32
    5f3e:	0c c0       	rjmp	.+24     	; 0x5f58 <vfprintf+0xf6>
    5f40:	8e 32       	cpi	r24, 0x2E	; 46
    5f42:	21 f4       	brne	.+8      	; 0x5f4c <vfprintf+0xea>
    5f44:	26 fd       	sbrc	r18, 6
    5f46:	f5 c2       	rjmp	.+1514   	; 0x6532 <vfprintf+0x6d0>
    5f48:	20 64       	ori	r18, 0x40	; 64
    5f4a:	06 c0       	rjmp	.+12     	; 0x5f58 <vfprintf+0xf6>
    5f4c:	8c 36       	cpi	r24, 0x6C	; 108
    5f4e:	11 f4       	brne	.+4      	; 0x5f54 <vfprintf+0xf2>
    5f50:	20 68       	ori	r18, 0x80	; 128
    5f52:	02 c0       	rjmp	.+4      	; 0x5f58 <vfprintf+0xf6>
    5f54:	88 36       	cpi	r24, 0x68	; 104
    5f56:	41 f4       	brne	.+16     	; 0x5f68 <vfprintf+0x106>
    5f58:	f1 01       	movw	r30, r2
    5f5a:	93 fd       	sbrc	r25, 3
    5f5c:	85 91       	lpm	r24, Z+
    5f5e:	93 ff       	sbrs	r25, 3
    5f60:	81 91       	ld	r24, Z+
    5f62:	1f 01       	movw	r2, r30
    5f64:	81 11       	cpse	r24, r1
    5f66:	c1 cf       	rjmp	.-126    	; 0x5eea <vfprintf+0x88>
    5f68:	9b eb       	ldi	r25, 0xBB	; 187
    5f6a:	98 0f       	add	r25, r24
    5f6c:	93 30       	cpi	r25, 0x03	; 3
    5f6e:	18 f4       	brcc	.+6      	; 0x5f76 <vfprintf+0x114>
    5f70:	20 61       	ori	r18, 0x10	; 16
    5f72:	80 5e       	subi	r24, 0xE0	; 224
    5f74:	06 c0       	rjmp	.+12     	; 0x5f82 <vfprintf+0x120>
    5f76:	9b e9       	ldi	r25, 0x9B	; 155
    5f78:	98 0f       	add	r25, r24
    5f7a:	93 30       	cpi	r25, 0x03	; 3
    5f7c:	08 f0       	brcs	.+2      	; 0x5f80 <vfprintf+0x11e>
    5f7e:	9a c1       	rjmp	.+820    	; 0x62b4 <vfprintf+0x452>
    5f80:	2f 7e       	andi	r18, 0xEF	; 239
    5f82:	26 ff       	sbrs	r18, 6
    5f84:	16 e0       	ldi	r17, 0x06	; 6
    5f86:	2f 73       	andi	r18, 0x3F	; 63
    5f88:	72 2e       	mov	r7, r18
    5f8a:	85 36       	cpi	r24, 0x65	; 101
    5f8c:	21 f4       	brne	.+8      	; 0x5f96 <vfprintf+0x134>
    5f8e:	f2 2f       	mov	r31, r18
    5f90:	f0 64       	ori	r31, 0x40	; 64
    5f92:	7f 2e       	mov	r7, r31
    5f94:	08 c0       	rjmp	.+16     	; 0x5fa6 <vfprintf+0x144>
    5f96:	86 36       	cpi	r24, 0x66	; 102
    5f98:	21 f4       	brne	.+8      	; 0x5fa2 <vfprintf+0x140>
    5f9a:	62 2f       	mov	r22, r18
    5f9c:	60 68       	ori	r22, 0x80	; 128
    5f9e:	76 2e       	mov	r7, r22
    5fa0:	02 c0       	rjmp	.+4      	; 0x5fa6 <vfprintf+0x144>
    5fa2:	11 11       	cpse	r17, r1
    5fa4:	11 50       	subi	r17, 0x01	; 1
    5fa6:	77 fe       	sbrs	r7, 7
    5fa8:	07 c0       	rjmp	.+14     	; 0x5fb8 <vfprintf+0x156>
    5faa:	1c 33       	cpi	r17, 0x3C	; 60
    5fac:	48 f4       	brcc	.+18     	; 0x5fc0 <vfprintf+0x15e>
    5fae:	44 24       	eor	r4, r4
    5fb0:	43 94       	inc	r4
    5fb2:	41 0e       	add	r4, r17
    5fb4:	27 e0       	ldi	r18, 0x07	; 7
    5fb6:	0b c0       	rjmp	.+22     	; 0x5fce <vfprintf+0x16c>
    5fb8:	18 30       	cpi	r17, 0x08	; 8
    5fba:	30 f4       	brcc	.+12     	; 0x5fc8 <vfprintf+0x166>
    5fbc:	21 2f       	mov	r18, r17
    5fbe:	06 c0       	rjmp	.+12     	; 0x5fcc <vfprintf+0x16a>
    5fc0:	27 e0       	ldi	r18, 0x07	; 7
    5fc2:	4c e3       	ldi	r20, 0x3C	; 60
    5fc4:	44 2e       	mov	r4, r20
    5fc6:	03 c0       	rjmp	.+6      	; 0x5fce <vfprintf+0x16c>
    5fc8:	27 e0       	ldi	r18, 0x07	; 7
    5fca:	17 e0       	ldi	r17, 0x07	; 7
    5fcc:	41 2c       	mov	r4, r1
    5fce:	56 01       	movw	r10, r12
    5fd0:	74 e0       	ldi	r23, 0x04	; 4
    5fd2:	a7 0e       	add	r10, r23
    5fd4:	b1 1c       	adc	r11, r1
    5fd6:	f6 01       	movw	r30, r12
    5fd8:	60 81       	ld	r22, Z
    5fda:	71 81       	ldd	r23, Z+1	; 0x01
    5fdc:	82 81       	ldd	r24, Z+2	; 0x02
    5fde:	93 81       	ldd	r25, Z+3	; 0x03
    5fe0:	04 2d       	mov	r16, r4
    5fe2:	a4 01       	movw	r20, r8
    5fe4:	05 d3       	rcall	.+1546   	; 0x65f0 <__ftoa_engine>
    5fe6:	6c 01       	movw	r12, r24
    5fe8:	09 81       	ldd	r16, Y+1	; 0x01
    5fea:	00 ff       	sbrs	r16, 0
    5fec:	02 c0       	rjmp	.+4      	; 0x5ff2 <vfprintf+0x190>
    5fee:	03 ff       	sbrs	r16, 3
    5ff0:	06 c0       	rjmp	.+12     	; 0x5ffe <vfprintf+0x19c>
    5ff2:	71 fc       	sbrc	r7, 1
    5ff4:	07 c0       	rjmp	.+14     	; 0x6004 <vfprintf+0x1a2>
    5ff6:	72 fc       	sbrc	r7, 2
    5ff8:	08 c0       	rjmp	.+16     	; 0x600a <vfprintf+0x1a8>
    5ffa:	61 2c       	mov	r6, r1
    5ffc:	08 c0       	rjmp	.+16     	; 0x600e <vfprintf+0x1ac>
    5ffe:	3d e2       	ldi	r19, 0x2D	; 45
    6000:	63 2e       	mov	r6, r19
    6002:	05 c0       	rjmp	.+10     	; 0x600e <vfprintf+0x1ac>
    6004:	2b e2       	ldi	r18, 0x2B	; 43
    6006:	62 2e       	mov	r6, r18
    6008:	02 c0       	rjmp	.+4      	; 0x600e <vfprintf+0x1ac>
    600a:	90 e2       	ldi	r25, 0x20	; 32
    600c:	69 2e       	mov	r6, r25
    600e:	80 2f       	mov	r24, r16
    6010:	8c 70       	andi	r24, 0x0C	; 12
    6012:	81 f1       	breq	.+96     	; 0x6074 <vfprintf+0x212>
    6014:	66 20       	and	r6, r6
    6016:	11 f0       	breq	.+4      	; 0x601c <vfprintf+0x1ba>
    6018:	84 e0       	ldi	r24, 0x04	; 4
    601a:	01 c0       	rjmp	.+2      	; 0x601e <vfprintf+0x1bc>
    601c:	83 e0       	ldi	r24, 0x03	; 3
    601e:	85 15       	cp	r24, r5
    6020:	10 f0       	brcs	.+4      	; 0x6026 <vfprintf+0x1c4>
    6022:	51 2c       	mov	r5, r1
    6024:	0a c0       	rjmp	.+20     	; 0x603a <vfprintf+0x1d8>
    6026:	58 1a       	sub	r5, r24
    6028:	73 fc       	sbrc	r7, 3
    602a:	07 c0       	rjmp	.+14     	; 0x603a <vfprintf+0x1d8>
    602c:	b7 01       	movw	r22, r14
    602e:	80 e2       	ldi	r24, 0x20	; 32
    6030:	90 e0       	ldi	r25, 0x00	; 0
    6032:	cc d3       	rcall	.+1944   	; 0x67cc <fputc>
    6034:	5a 94       	dec	r5
    6036:	d1 f7       	brne	.-12     	; 0x602c <vfprintf+0x1ca>
    6038:	f4 cf       	rjmp	.-24     	; 0x6022 <vfprintf+0x1c0>
    603a:	66 20       	and	r6, r6
    603c:	21 f0       	breq	.+8      	; 0x6046 <vfprintf+0x1e4>
    603e:	b7 01       	movw	r22, r14
    6040:	86 2d       	mov	r24, r6
    6042:	90 e0       	ldi	r25, 0x00	; 0
    6044:	c3 d3       	rcall	.+1926   	; 0x67cc <fputc>
    6046:	03 fd       	sbrc	r16, 3
    6048:	03 c0       	rjmp	.+6      	; 0x6050 <vfprintf+0x1ee>
    604a:	00 ea       	ldi	r16, 0xA0	; 160
    604c:	14 e0       	ldi	r17, 0x04	; 4
    604e:	02 c0       	rjmp	.+4      	; 0x6054 <vfprintf+0x1f2>
    6050:	0c e9       	ldi	r16, 0x9C	; 156
    6052:	14 e0       	ldi	r17, 0x04	; 4
    6054:	f7 2d       	mov	r31, r7
    6056:	f0 71       	andi	r31, 0x10	; 16
    6058:	7f 2e       	mov	r7, r31
    605a:	f8 01       	movw	r30, r16
    605c:	84 91       	lpm	r24, Z
    605e:	88 23       	and	r24, r24
    6060:	09 f4       	brne	.+2      	; 0x6064 <vfprintf+0x202>
    6062:	5e c2       	rjmp	.+1212   	; 0x6520 <vfprintf+0x6be>
    6064:	71 10       	cpse	r7, r1
    6066:	80 52       	subi	r24, 0x20	; 32
    6068:	b7 01       	movw	r22, r14
    606a:	90 e0       	ldi	r25, 0x00	; 0
    606c:	af d3       	rcall	.+1886   	; 0x67cc <fputc>
    606e:	0f 5f       	subi	r16, 0xFF	; 255
    6070:	1f 4f       	sbci	r17, 0xFF	; 255
    6072:	f3 cf       	rjmp	.-26     	; 0x605a <vfprintf+0x1f8>
    6074:	77 fe       	sbrs	r7, 7
    6076:	0f c0       	rjmp	.+30     	; 0x6096 <vfprintf+0x234>
    6078:	4c 0c       	add	r4, r12
    607a:	04 ff       	sbrs	r16, 4
    607c:	04 c0       	rjmp	.+8      	; 0x6086 <vfprintf+0x224>
    607e:	8a 81       	ldd	r24, Y+2	; 0x02
    6080:	81 33       	cpi	r24, 0x31	; 49
    6082:	09 f4       	brne	.+2      	; 0x6086 <vfprintf+0x224>
    6084:	4a 94       	dec	r4
    6086:	14 14       	cp	r1, r4
    6088:	74 f5       	brge	.+92     	; 0x60e6 <vfprintf+0x284>
    608a:	f8 e0       	ldi	r31, 0x08	; 8
    608c:	f4 15       	cp	r31, r4
    608e:	78 f5       	brcc	.+94     	; 0x60ee <vfprintf+0x28c>
    6090:	88 e0       	ldi	r24, 0x08	; 8
    6092:	48 2e       	mov	r4, r24
    6094:	2c c0       	rjmp	.+88     	; 0x60ee <vfprintf+0x28c>
    6096:	76 fc       	sbrc	r7, 6
    6098:	2a c0       	rjmp	.+84     	; 0x60ee <vfprintf+0x28c>
    609a:	81 2f       	mov	r24, r17
    609c:	90 e0       	ldi	r25, 0x00	; 0
    609e:	8c 15       	cp	r24, r12
    60a0:	9d 05       	cpc	r25, r13
    60a2:	9c f0       	brlt	.+38     	; 0x60ca <vfprintf+0x268>
    60a4:	6c ef       	ldi	r22, 0xFC	; 252
    60a6:	c6 16       	cp	r12, r22
    60a8:	6f ef       	ldi	r22, 0xFF	; 255
    60aa:	d6 06       	cpc	r13, r22
    60ac:	74 f0       	brlt	.+28     	; 0x60ca <vfprintf+0x268>
    60ae:	77 2d       	mov	r23, r7
    60b0:	70 68       	ori	r23, 0x80	; 128
    60b2:	77 2e       	mov	r7, r23
    60b4:	0a c0       	rjmp	.+20     	; 0x60ca <vfprintf+0x268>
    60b6:	e2 e0       	ldi	r30, 0x02	; 2
    60b8:	f0 e0       	ldi	r31, 0x00	; 0
    60ba:	ec 0f       	add	r30, r28
    60bc:	fd 1f       	adc	r31, r29
    60be:	e1 0f       	add	r30, r17
    60c0:	f1 1d       	adc	r31, r1
    60c2:	80 81       	ld	r24, Z
    60c4:	80 33       	cpi	r24, 0x30	; 48
    60c6:	19 f4       	brne	.+6      	; 0x60ce <vfprintf+0x26c>
    60c8:	11 50       	subi	r17, 0x01	; 1
    60ca:	11 11       	cpse	r17, r1
    60cc:	f4 cf       	rjmp	.-24     	; 0x60b6 <vfprintf+0x254>
    60ce:	77 fe       	sbrs	r7, 7
    60d0:	0e c0       	rjmp	.+28     	; 0x60ee <vfprintf+0x28c>
    60d2:	44 24       	eor	r4, r4
    60d4:	43 94       	inc	r4
    60d6:	41 0e       	add	r4, r17
    60d8:	81 2f       	mov	r24, r17
    60da:	90 e0       	ldi	r25, 0x00	; 0
    60dc:	c8 16       	cp	r12, r24
    60de:	d9 06       	cpc	r13, r25
    60e0:	2c f4       	brge	.+10     	; 0x60ec <vfprintf+0x28a>
    60e2:	1c 19       	sub	r17, r12
    60e4:	04 c0       	rjmp	.+8      	; 0x60ee <vfprintf+0x28c>
    60e6:	44 24       	eor	r4, r4
    60e8:	43 94       	inc	r4
    60ea:	01 c0       	rjmp	.+2      	; 0x60ee <vfprintf+0x28c>
    60ec:	10 e0       	ldi	r17, 0x00	; 0
    60ee:	77 fe       	sbrs	r7, 7
    60f0:	07 c0       	rjmp	.+14     	; 0x6100 <vfprintf+0x29e>
    60f2:	1c 14       	cp	r1, r12
    60f4:	1d 04       	cpc	r1, r13
    60f6:	3c f4       	brge	.+14     	; 0x6106 <vfprintf+0x2a4>
    60f8:	96 01       	movw	r18, r12
    60fa:	2f 5f       	subi	r18, 0xFF	; 255
    60fc:	3f 4f       	sbci	r19, 0xFF	; 255
    60fe:	05 c0       	rjmp	.+10     	; 0x610a <vfprintf+0x2a8>
    6100:	25 e0       	ldi	r18, 0x05	; 5
    6102:	30 e0       	ldi	r19, 0x00	; 0
    6104:	02 c0       	rjmp	.+4      	; 0x610a <vfprintf+0x2a8>
    6106:	21 e0       	ldi	r18, 0x01	; 1
    6108:	30 e0       	ldi	r19, 0x00	; 0
    610a:	66 20       	and	r6, r6
    610c:	11 f0       	breq	.+4      	; 0x6112 <vfprintf+0x2b0>
    610e:	2f 5f       	subi	r18, 0xFF	; 255
    6110:	3f 4f       	sbci	r19, 0xFF	; 255
    6112:	11 23       	and	r17, r17
    6114:	31 f0       	breq	.+12     	; 0x6122 <vfprintf+0x2c0>
    6116:	41 2f       	mov	r20, r17
    6118:	50 e0       	ldi	r21, 0x00	; 0
    611a:	4f 5f       	subi	r20, 0xFF	; 255
    611c:	5f 4f       	sbci	r21, 0xFF	; 255
    611e:	24 0f       	add	r18, r20
    6120:	35 1f       	adc	r19, r21
    6122:	45 2d       	mov	r20, r5
    6124:	50 e0       	ldi	r21, 0x00	; 0
    6126:	24 17       	cp	r18, r20
    6128:	35 07       	cpc	r19, r21
    612a:	14 f4       	brge	.+4      	; 0x6130 <vfprintf+0x2ce>
    612c:	52 1a       	sub	r5, r18
    612e:	01 c0       	rjmp	.+2      	; 0x6132 <vfprintf+0x2d0>
    6130:	51 2c       	mov	r5, r1
    6132:	87 2d       	mov	r24, r7
    6134:	89 70       	andi	r24, 0x09	; 9
    6136:	41 f4       	brne	.+16     	; 0x6148 <vfprintf+0x2e6>
    6138:	55 20       	and	r5, r5
    613a:	31 f0       	breq	.+12     	; 0x6148 <vfprintf+0x2e6>
    613c:	b7 01       	movw	r22, r14
    613e:	80 e2       	ldi	r24, 0x20	; 32
    6140:	90 e0       	ldi	r25, 0x00	; 0
    6142:	44 d3       	rcall	.+1672   	; 0x67cc <fputc>
    6144:	5a 94       	dec	r5
    6146:	f8 cf       	rjmp	.-16     	; 0x6138 <vfprintf+0x2d6>
    6148:	66 20       	and	r6, r6
    614a:	21 f0       	breq	.+8      	; 0x6154 <vfprintf+0x2f2>
    614c:	b7 01       	movw	r22, r14
    614e:	86 2d       	mov	r24, r6
    6150:	90 e0       	ldi	r25, 0x00	; 0
    6152:	3c d3       	rcall	.+1656   	; 0x67cc <fputc>
    6154:	73 fc       	sbrc	r7, 3
    6156:	08 c0       	rjmp	.+16     	; 0x6168 <vfprintf+0x306>
    6158:	55 20       	and	r5, r5
    615a:	31 f0       	breq	.+12     	; 0x6168 <vfprintf+0x306>
    615c:	b7 01       	movw	r22, r14
    615e:	80 e3       	ldi	r24, 0x30	; 48
    6160:	90 e0       	ldi	r25, 0x00	; 0
    6162:	34 d3       	rcall	.+1640   	; 0x67cc <fputc>
    6164:	5a 94       	dec	r5
    6166:	f8 cf       	rjmp	.-16     	; 0x6158 <vfprintf+0x2f6>
    6168:	77 fe       	sbrs	r7, 7
    616a:	5d c0       	rjmp	.+186    	; 0x6226 <vfprintf+0x3c4>
    616c:	9c 2d       	mov	r25, r12
    616e:	8d 2d       	mov	r24, r13
    6170:	d7 fe       	sbrs	r13, 7
    6172:	02 c0       	rjmp	.+4      	; 0x6178 <vfprintf+0x316>
    6174:	90 e0       	ldi	r25, 0x00	; 0
    6176:	80 e0       	ldi	r24, 0x00	; 0
    6178:	69 2e       	mov	r6, r25
    617a:	78 2e       	mov	r7, r24
    617c:	40 e0       	ldi	r20, 0x00	; 0
    617e:	50 e0       	ldi	r21, 0x00	; 0
    6180:	c6 01       	movw	r24, r12
    6182:	84 19       	sub	r24, r4
    6184:	91 09       	sbc	r25, r1
    6186:	9d 87       	std	Y+13, r25	; 0x0d
    6188:	8c 87       	std	Y+12, r24	; 0x0c
    618a:	96 01       	movw	r18, r12
    618c:	26 19       	sub	r18, r6
    618e:	37 09       	sbc	r19, r7
    6190:	28 0d       	add	r18, r8
    6192:	39 1d       	adc	r19, r9
    6194:	81 2f       	mov	r24, r17
    6196:	90 e0       	ldi	r25, 0x00	; 0
    6198:	ee 27       	eor	r30, r30
    619a:	ff 27       	eor	r31, r31
    619c:	e8 1b       	sub	r30, r24
    619e:	f9 0b       	sbc	r31, r25
    61a0:	ff 87       	std	Y+15, r31	; 0x0f
    61a2:	ee 87       	std	Y+14, r30	; 0x0e
    61a4:	ff ef       	ldi	r31, 0xFF	; 255
    61a6:	6f 16       	cp	r6, r31
    61a8:	7f 06       	cpc	r7, r31
    61aa:	61 f4       	brne	.+24     	; 0x61c4 <vfprintf+0x362>
    61ac:	b7 01       	movw	r22, r14
    61ae:	8e e2       	ldi	r24, 0x2E	; 46
    61b0:	90 e0       	ldi	r25, 0x00	; 0
    61b2:	2b 8b       	std	Y+19, r18	; 0x13
    61b4:	3a 8b       	std	Y+18, r19	; 0x12
    61b6:	48 8b       	std	Y+16, r20	; 0x10
    61b8:	59 8b       	std	Y+17, r21	; 0x11
    61ba:	08 d3       	rcall	.+1552   	; 0x67cc <fputc>
    61bc:	59 89       	ldd	r21, Y+17	; 0x11
    61be:	48 89       	ldd	r20, Y+16	; 0x10
    61c0:	3a 89       	ldd	r19, Y+18	; 0x12
    61c2:	2b 89       	ldd	r18, Y+19	; 0x13
    61c4:	c6 14       	cp	r12, r6
    61c6:	d7 04       	cpc	r13, r7
    61c8:	54 f0       	brlt	.+20     	; 0x61de <vfprintf+0x37c>
    61ca:	6c 85       	ldd	r22, Y+12	; 0x0c
    61cc:	7d 85       	ldd	r23, Y+13	; 0x0d
    61ce:	66 15       	cp	r22, r6
    61d0:	77 05       	cpc	r23, r7
    61d2:	2c f4       	brge	.+10     	; 0x61de <vfprintf+0x37c>
    61d4:	f9 01       	movw	r30, r18
    61d6:	e4 0f       	add	r30, r20
    61d8:	f5 1f       	adc	r31, r21
    61da:	81 81       	ldd	r24, Z+1	; 0x01
    61dc:	01 c0       	rjmp	.+2      	; 0x61e0 <vfprintf+0x37e>
    61de:	80 e3       	ldi	r24, 0x30	; 48
    61e0:	71 e0       	ldi	r23, 0x01	; 1
    61e2:	67 1a       	sub	r6, r23
    61e4:	71 08       	sbc	r7, r1
    61e6:	4f 5f       	subi	r20, 0xFF	; 255
    61e8:	5f 4f       	sbci	r21, 0xFF	; 255
    61ea:	ee 85       	ldd	r30, Y+14	; 0x0e
    61ec:	ff 85       	ldd	r31, Y+15	; 0x0f
    61ee:	6e 16       	cp	r6, r30
    61f0:	7f 06       	cpc	r7, r31
    61f2:	64 f0       	brlt	.+24     	; 0x620c <vfprintf+0x3aa>
    61f4:	b7 01       	movw	r22, r14
    61f6:	90 e0       	ldi	r25, 0x00	; 0
    61f8:	2b 8b       	std	Y+19, r18	; 0x13
    61fa:	3a 8b       	std	Y+18, r19	; 0x12
    61fc:	48 8b       	std	Y+16, r20	; 0x10
    61fe:	59 8b       	std	Y+17, r21	; 0x11
    6200:	e5 d2       	rcall	.+1482   	; 0x67cc <fputc>
    6202:	2b 89       	ldd	r18, Y+19	; 0x13
    6204:	3a 89       	ldd	r19, Y+18	; 0x12
    6206:	48 89       	ldd	r20, Y+16	; 0x10
    6208:	59 89       	ldd	r21, Y+17	; 0x11
    620a:	cc cf       	rjmp	.-104    	; 0x61a4 <vfprintf+0x342>
    620c:	6c 14       	cp	r6, r12
    620e:	7d 04       	cpc	r7, r13
    6210:	39 f4       	brne	.+14     	; 0x6220 <vfprintf+0x3be>
    6212:	9a 81       	ldd	r25, Y+2	; 0x02
    6214:	96 33       	cpi	r25, 0x36	; 54
    6216:	18 f4       	brcc	.+6      	; 0x621e <vfprintf+0x3bc>
    6218:	95 33       	cpi	r25, 0x35	; 53
    621a:	11 f4       	brne	.+4      	; 0x6220 <vfprintf+0x3be>
    621c:	04 ff       	sbrs	r16, 4
    621e:	81 e3       	ldi	r24, 0x31	; 49
    6220:	b7 01       	movw	r22, r14
    6222:	90 e0       	ldi	r25, 0x00	; 0
    6224:	45 c0       	rjmp	.+138    	; 0x62b0 <vfprintf+0x44e>
    6226:	8a 81       	ldd	r24, Y+2	; 0x02
    6228:	81 33       	cpi	r24, 0x31	; 49
    622a:	09 f0       	breq	.+2      	; 0x622e <vfprintf+0x3cc>
    622c:	0f 7e       	andi	r16, 0xEF	; 239
    622e:	b7 01       	movw	r22, r14
    6230:	90 e0       	ldi	r25, 0x00	; 0
    6232:	cc d2       	rcall	.+1432   	; 0x67cc <fputc>
    6234:	11 11       	cpse	r17, r1
    6236:	05 c0       	rjmp	.+10     	; 0x6242 <vfprintf+0x3e0>
    6238:	74 fe       	sbrs	r7, 4
    623a:	16 c0       	rjmp	.+44     	; 0x6268 <vfprintf+0x406>
    623c:	85 e4       	ldi	r24, 0x45	; 69
    623e:	90 e0       	ldi	r25, 0x00	; 0
    6240:	15 c0       	rjmp	.+42     	; 0x626c <vfprintf+0x40a>
    6242:	b7 01       	movw	r22, r14
    6244:	8e e2       	ldi	r24, 0x2E	; 46
    6246:	90 e0       	ldi	r25, 0x00	; 0
    6248:	c1 d2       	rcall	.+1410   	; 0x67cc <fputc>
    624a:	82 e0       	ldi	r24, 0x02	; 2
    624c:	66 24       	eor	r6, r6
    624e:	63 94       	inc	r6
    6250:	68 0e       	add	r6, r24
    6252:	f4 01       	movw	r30, r8
    6254:	e8 0f       	add	r30, r24
    6256:	f1 1d       	adc	r31, r1
    6258:	80 81       	ld	r24, Z
    625a:	b7 01       	movw	r22, r14
    625c:	90 e0       	ldi	r25, 0x00	; 0
    625e:	b6 d2       	rcall	.+1388   	; 0x67cc <fputc>
    6260:	11 50       	subi	r17, 0x01	; 1
    6262:	51 f3       	breq	.-44     	; 0x6238 <vfprintf+0x3d6>
    6264:	86 2d       	mov	r24, r6
    6266:	f2 cf       	rjmp	.-28     	; 0x624c <vfprintf+0x3ea>
    6268:	85 e6       	ldi	r24, 0x65	; 101
    626a:	90 e0       	ldi	r25, 0x00	; 0
    626c:	b7 01       	movw	r22, r14
    626e:	ae d2       	rcall	.+1372   	; 0x67cc <fputc>
    6270:	d7 fc       	sbrc	r13, 7
    6272:	05 c0       	rjmp	.+10     	; 0x627e <vfprintf+0x41c>
    6274:	c1 14       	cp	r12, r1
    6276:	d1 04       	cpc	r13, r1
    6278:	39 f4       	brne	.+14     	; 0x6288 <vfprintf+0x426>
    627a:	04 ff       	sbrs	r16, 4
    627c:	05 c0       	rjmp	.+10     	; 0x6288 <vfprintf+0x426>
    627e:	d1 94       	neg	r13
    6280:	c1 94       	neg	r12
    6282:	d1 08       	sbc	r13, r1
    6284:	8d e2       	ldi	r24, 0x2D	; 45
    6286:	01 c0       	rjmp	.+2      	; 0x628a <vfprintf+0x428>
    6288:	8b e2       	ldi	r24, 0x2B	; 43
    628a:	b7 01       	movw	r22, r14
    628c:	90 e0       	ldi	r25, 0x00	; 0
    628e:	9e d2       	rcall	.+1340   	; 0x67cc <fputc>
    6290:	80 e3       	ldi	r24, 0x30	; 48
    6292:	6a e0       	ldi	r22, 0x0A	; 10
    6294:	c6 16       	cp	r12, r22
    6296:	d1 04       	cpc	r13, r1
    6298:	2c f0       	brlt	.+10     	; 0x62a4 <vfprintf+0x442>
    629a:	8f 5f       	subi	r24, 0xFF	; 255
    629c:	fa e0       	ldi	r31, 0x0A	; 10
    629e:	cf 1a       	sub	r12, r31
    62a0:	d1 08       	sbc	r13, r1
    62a2:	f7 cf       	rjmp	.-18     	; 0x6292 <vfprintf+0x430>
    62a4:	b7 01       	movw	r22, r14
    62a6:	90 e0       	ldi	r25, 0x00	; 0
    62a8:	91 d2       	rcall	.+1314   	; 0x67cc <fputc>
    62aa:	b7 01       	movw	r22, r14
    62ac:	c6 01       	movw	r24, r12
    62ae:	c0 96       	adiw	r24, 0x30	; 48
    62b0:	8d d2       	rcall	.+1306   	; 0x67cc <fputc>
    62b2:	36 c1       	rjmp	.+620    	; 0x6520 <vfprintf+0x6be>
    62b4:	83 36       	cpi	r24, 0x63	; 99
    62b6:	31 f0       	breq	.+12     	; 0x62c4 <vfprintf+0x462>
    62b8:	83 37       	cpi	r24, 0x73	; 115
    62ba:	79 f0       	breq	.+30     	; 0x62da <vfprintf+0x478>
    62bc:	83 35       	cpi	r24, 0x53	; 83
    62be:	09 f0       	breq	.+2      	; 0x62c2 <vfprintf+0x460>
    62c0:	54 c0       	rjmp	.+168    	; 0x636a <vfprintf+0x508>
    62c2:	20 c0       	rjmp	.+64     	; 0x6304 <vfprintf+0x4a2>
    62c4:	56 01       	movw	r10, r12
    62c6:	72 e0       	ldi	r23, 0x02	; 2
    62c8:	a7 0e       	add	r10, r23
    62ca:	b1 1c       	adc	r11, r1
    62cc:	f6 01       	movw	r30, r12
    62ce:	80 81       	ld	r24, Z
    62d0:	89 83       	std	Y+1, r24	; 0x01
    62d2:	01 e0       	ldi	r16, 0x01	; 1
    62d4:	10 e0       	ldi	r17, 0x00	; 0
    62d6:	64 01       	movw	r12, r8
    62d8:	13 c0       	rjmp	.+38     	; 0x6300 <vfprintf+0x49e>
    62da:	56 01       	movw	r10, r12
    62dc:	f2 e0       	ldi	r31, 0x02	; 2
    62de:	af 0e       	add	r10, r31
    62e0:	b1 1c       	adc	r11, r1
    62e2:	f6 01       	movw	r30, r12
    62e4:	c0 80       	ld	r12, Z
    62e6:	d1 80       	ldd	r13, Z+1	; 0x01
    62e8:	26 ff       	sbrs	r18, 6
    62ea:	03 c0       	rjmp	.+6      	; 0x62f2 <vfprintf+0x490>
    62ec:	61 2f       	mov	r22, r17
    62ee:	70 e0       	ldi	r23, 0x00	; 0
    62f0:	02 c0       	rjmp	.+4      	; 0x62f6 <vfprintf+0x494>
    62f2:	6f ef       	ldi	r22, 0xFF	; 255
    62f4:	7f ef       	ldi	r23, 0xFF	; 255
    62f6:	c6 01       	movw	r24, r12
    62f8:	2b 8b       	std	Y+19, r18	; 0x13
    62fa:	5d d2       	rcall	.+1210   	; 0x67b6 <strnlen>
    62fc:	8c 01       	movw	r16, r24
    62fe:	2b 89       	ldd	r18, Y+19	; 0x13
    6300:	2f 77       	andi	r18, 0x7F	; 127
    6302:	14 c0       	rjmp	.+40     	; 0x632c <vfprintf+0x4ca>
    6304:	56 01       	movw	r10, r12
    6306:	f2 e0       	ldi	r31, 0x02	; 2
    6308:	af 0e       	add	r10, r31
    630a:	b1 1c       	adc	r11, r1
    630c:	f6 01       	movw	r30, r12
    630e:	c0 80       	ld	r12, Z
    6310:	d1 80       	ldd	r13, Z+1	; 0x01
    6312:	26 ff       	sbrs	r18, 6
    6314:	03 c0       	rjmp	.+6      	; 0x631c <vfprintf+0x4ba>
    6316:	61 2f       	mov	r22, r17
    6318:	70 e0       	ldi	r23, 0x00	; 0
    631a:	02 c0       	rjmp	.+4      	; 0x6320 <vfprintf+0x4be>
    631c:	6f ef       	ldi	r22, 0xFF	; 255
    631e:	7f ef       	ldi	r23, 0xFF	; 255
    6320:	c6 01       	movw	r24, r12
    6322:	2b 8b       	std	Y+19, r18	; 0x13
    6324:	3d d2       	rcall	.+1146   	; 0x67a0 <strnlen_P>
    6326:	8c 01       	movw	r16, r24
    6328:	2b 89       	ldd	r18, Y+19	; 0x13
    632a:	20 68       	ori	r18, 0x80	; 128
    632c:	72 2e       	mov	r7, r18
    632e:	23 fd       	sbrc	r18, 3
    6330:	18 c0       	rjmp	.+48     	; 0x6362 <vfprintf+0x500>
    6332:	85 2d       	mov	r24, r5
    6334:	90 e0       	ldi	r25, 0x00	; 0
    6336:	08 17       	cp	r16, r24
    6338:	19 07       	cpc	r17, r25
    633a:	98 f4       	brcc	.+38     	; 0x6362 <vfprintf+0x500>
    633c:	b7 01       	movw	r22, r14
    633e:	80 e2       	ldi	r24, 0x20	; 32
    6340:	90 e0       	ldi	r25, 0x00	; 0
    6342:	44 d2       	rcall	.+1160   	; 0x67cc <fputc>
    6344:	5a 94       	dec	r5
    6346:	f5 cf       	rjmp	.-22     	; 0x6332 <vfprintf+0x4d0>
    6348:	f6 01       	movw	r30, r12
    634a:	77 fc       	sbrc	r7, 7
    634c:	85 91       	lpm	r24, Z+
    634e:	77 fe       	sbrs	r7, 7
    6350:	81 91       	ld	r24, Z+
    6352:	6f 01       	movw	r12, r30
    6354:	b7 01       	movw	r22, r14
    6356:	90 e0       	ldi	r25, 0x00	; 0
    6358:	39 d2       	rcall	.+1138   	; 0x67cc <fputc>
    635a:	51 10       	cpse	r5, r1
    635c:	5a 94       	dec	r5
    635e:	01 50       	subi	r16, 0x01	; 1
    6360:	11 09       	sbc	r17, r1
    6362:	01 15       	cp	r16, r1
    6364:	11 05       	cpc	r17, r1
    6366:	81 f7       	brne	.-32     	; 0x6348 <vfprintf+0x4e6>
    6368:	db c0       	rjmp	.+438    	; 0x6520 <vfprintf+0x6be>
    636a:	84 36       	cpi	r24, 0x64	; 100
    636c:	11 f0       	breq	.+4      	; 0x6372 <vfprintf+0x510>
    636e:	89 36       	cpi	r24, 0x69	; 105
    6370:	49 f5       	brne	.+82     	; 0x63c4 <vfprintf+0x562>
    6372:	56 01       	movw	r10, r12
    6374:	27 ff       	sbrs	r18, 7
    6376:	09 c0       	rjmp	.+18     	; 0x638a <vfprintf+0x528>
    6378:	f4 e0       	ldi	r31, 0x04	; 4
    637a:	af 0e       	add	r10, r31
    637c:	b1 1c       	adc	r11, r1
    637e:	f6 01       	movw	r30, r12
    6380:	60 81       	ld	r22, Z
    6382:	71 81       	ldd	r23, Z+1	; 0x01
    6384:	82 81       	ldd	r24, Z+2	; 0x02
    6386:	93 81       	ldd	r25, Z+3	; 0x03
    6388:	0a c0       	rjmp	.+20     	; 0x639e <vfprintf+0x53c>
    638a:	f2 e0       	ldi	r31, 0x02	; 2
    638c:	af 0e       	add	r10, r31
    638e:	b1 1c       	adc	r11, r1
    6390:	f6 01       	movw	r30, r12
    6392:	60 81       	ld	r22, Z
    6394:	71 81       	ldd	r23, Z+1	; 0x01
    6396:	88 27       	eor	r24, r24
    6398:	77 fd       	sbrc	r23, 7
    639a:	80 95       	com	r24
    639c:	98 2f       	mov	r25, r24
    639e:	02 2f       	mov	r16, r18
    63a0:	0f 76       	andi	r16, 0x6F	; 111
    63a2:	97 ff       	sbrs	r25, 7
    63a4:	08 c0       	rjmp	.+16     	; 0x63b6 <vfprintf+0x554>
    63a6:	90 95       	com	r25
    63a8:	80 95       	com	r24
    63aa:	70 95       	com	r23
    63ac:	61 95       	neg	r22
    63ae:	7f 4f       	sbci	r23, 0xFF	; 255
    63b0:	8f 4f       	sbci	r24, 0xFF	; 255
    63b2:	9f 4f       	sbci	r25, 0xFF	; 255
    63b4:	00 68       	ori	r16, 0x80	; 128
    63b6:	2a e0       	ldi	r18, 0x0A	; 10
    63b8:	30 e0       	ldi	r19, 0x00	; 0
    63ba:	a4 01       	movw	r20, r8
    63bc:	67 d2       	rcall	.+1230   	; 0x688c <__ultoa_invert>
    63be:	c8 2e       	mov	r12, r24
    63c0:	c8 18       	sub	r12, r8
    63c2:	3d c0       	rjmp	.+122    	; 0x643e <vfprintf+0x5dc>
    63c4:	02 2f       	mov	r16, r18
    63c6:	85 37       	cpi	r24, 0x75	; 117
    63c8:	21 f4       	brne	.+8      	; 0x63d2 <vfprintf+0x570>
    63ca:	0f 7e       	andi	r16, 0xEF	; 239
    63cc:	2a e0       	ldi	r18, 0x0A	; 10
    63ce:	30 e0       	ldi	r19, 0x00	; 0
    63d0:	1d c0       	rjmp	.+58     	; 0x640c <vfprintf+0x5aa>
    63d2:	09 7f       	andi	r16, 0xF9	; 249
    63d4:	8f 36       	cpi	r24, 0x6F	; 111
    63d6:	91 f0       	breq	.+36     	; 0x63fc <vfprintf+0x59a>
    63d8:	18 f4       	brcc	.+6      	; 0x63e0 <vfprintf+0x57e>
    63da:	88 35       	cpi	r24, 0x58	; 88
    63dc:	59 f0       	breq	.+22     	; 0x63f4 <vfprintf+0x592>
    63de:	a9 c0       	rjmp	.+338    	; 0x6532 <vfprintf+0x6d0>
    63e0:	80 37       	cpi	r24, 0x70	; 112
    63e2:	19 f0       	breq	.+6      	; 0x63ea <vfprintf+0x588>
    63e4:	88 37       	cpi	r24, 0x78	; 120
    63e6:	11 f0       	breq	.+4      	; 0x63ec <vfprintf+0x58a>
    63e8:	a4 c0       	rjmp	.+328    	; 0x6532 <vfprintf+0x6d0>
    63ea:	00 61       	ori	r16, 0x10	; 16
    63ec:	04 ff       	sbrs	r16, 4
    63ee:	09 c0       	rjmp	.+18     	; 0x6402 <vfprintf+0x5a0>
    63f0:	04 60       	ori	r16, 0x04	; 4
    63f2:	07 c0       	rjmp	.+14     	; 0x6402 <vfprintf+0x5a0>
    63f4:	24 ff       	sbrs	r18, 4
    63f6:	08 c0       	rjmp	.+16     	; 0x6408 <vfprintf+0x5a6>
    63f8:	06 60       	ori	r16, 0x06	; 6
    63fa:	06 c0       	rjmp	.+12     	; 0x6408 <vfprintf+0x5a6>
    63fc:	28 e0       	ldi	r18, 0x08	; 8
    63fe:	30 e0       	ldi	r19, 0x00	; 0
    6400:	05 c0       	rjmp	.+10     	; 0x640c <vfprintf+0x5aa>
    6402:	20 e1       	ldi	r18, 0x10	; 16
    6404:	30 e0       	ldi	r19, 0x00	; 0
    6406:	02 c0       	rjmp	.+4      	; 0x640c <vfprintf+0x5aa>
    6408:	20 e1       	ldi	r18, 0x10	; 16
    640a:	32 e0       	ldi	r19, 0x02	; 2
    640c:	56 01       	movw	r10, r12
    640e:	07 ff       	sbrs	r16, 7
    6410:	09 c0       	rjmp	.+18     	; 0x6424 <vfprintf+0x5c2>
    6412:	f4 e0       	ldi	r31, 0x04	; 4
    6414:	af 0e       	add	r10, r31
    6416:	b1 1c       	adc	r11, r1
    6418:	f6 01       	movw	r30, r12
    641a:	60 81       	ld	r22, Z
    641c:	71 81       	ldd	r23, Z+1	; 0x01
    641e:	82 81       	ldd	r24, Z+2	; 0x02
    6420:	93 81       	ldd	r25, Z+3	; 0x03
    6422:	08 c0       	rjmp	.+16     	; 0x6434 <vfprintf+0x5d2>
    6424:	f2 e0       	ldi	r31, 0x02	; 2
    6426:	af 0e       	add	r10, r31
    6428:	b1 1c       	adc	r11, r1
    642a:	f6 01       	movw	r30, r12
    642c:	60 81       	ld	r22, Z
    642e:	71 81       	ldd	r23, Z+1	; 0x01
    6430:	80 e0       	ldi	r24, 0x00	; 0
    6432:	90 e0       	ldi	r25, 0x00	; 0
    6434:	a4 01       	movw	r20, r8
    6436:	2a d2       	rcall	.+1108   	; 0x688c <__ultoa_invert>
    6438:	c8 2e       	mov	r12, r24
    643a:	c8 18       	sub	r12, r8
    643c:	0f 77       	andi	r16, 0x7F	; 127
    643e:	06 ff       	sbrs	r16, 6
    6440:	0b c0       	rjmp	.+22     	; 0x6458 <vfprintf+0x5f6>
    6442:	20 2f       	mov	r18, r16
    6444:	2e 7f       	andi	r18, 0xFE	; 254
    6446:	c1 16       	cp	r12, r17
    6448:	50 f4       	brcc	.+20     	; 0x645e <vfprintf+0x5fc>
    644a:	04 ff       	sbrs	r16, 4
    644c:	0a c0       	rjmp	.+20     	; 0x6462 <vfprintf+0x600>
    644e:	02 fd       	sbrc	r16, 2
    6450:	08 c0       	rjmp	.+16     	; 0x6462 <vfprintf+0x600>
    6452:	20 2f       	mov	r18, r16
    6454:	2e 7e       	andi	r18, 0xEE	; 238
    6456:	05 c0       	rjmp	.+10     	; 0x6462 <vfprintf+0x600>
    6458:	dc 2c       	mov	r13, r12
    645a:	20 2f       	mov	r18, r16
    645c:	03 c0       	rjmp	.+6      	; 0x6464 <vfprintf+0x602>
    645e:	dc 2c       	mov	r13, r12
    6460:	01 c0       	rjmp	.+2      	; 0x6464 <vfprintf+0x602>
    6462:	d1 2e       	mov	r13, r17
    6464:	24 ff       	sbrs	r18, 4
    6466:	0d c0       	rjmp	.+26     	; 0x6482 <vfprintf+0x620>
    6468:	fe 01       	movw	r30, r28
    646a:	ec 0d       	add	r30, r12
    646c:	f1 1d       	adc	r31, r1
    646e:	80 81       	ld	r24, Z
    6470:	80 33       	cpi	r24, 0x30	; 48
    6472:	11 f4       	brne	.+4      	; 0x6478 <vfprintf+0x616>
    6474:	29 7e       	andi	r18, 0xE9	; 233
    6476:	09 c0       	rjmp	.+18     	; 0x648a <vfprintf+0x628>
    6478:	22 ff       	sbrs	r18, 2
    647a:	06 c0       	rjmp	.+12     	; 0x6488 <vfprintf+0x626>
    647c:	d3 94       	inc	r13
    647e:	d3 94       	inc	r13
    6480:	04 c0       	rjmp	.+8      	; 0x648a <vfprintf+0x628>
    6482:	82 2f       	mov	r24, r18
    6484:	86 78       	andi	r24, 0x86	; 134
    6486:	09 f0       	breq	.+2      	; 0x648a <vfprintf+0x628>
    6488:	d3 94       	inc	r13
    648a:	23 fd       	sbrc	r18, 3
    648c:	12 c0       	rjmp	.+36     	; 0x64b2 <vfprintf+0x650>
    648e:	20 ff       	sbrs	r18, 0
    6490:	06 c0       	rjmp	.+12     	; 0x649e <vfprintf+0x63c>
    6492:	1c 2d       	mov	r17, r12
    6494:	d5 14       	cp	r13, r5
    6496:	18 f4       	brcc	.+6      	; 0x649e <vfprintf+0x63c>
    6498:	15 0d       	add	r17, r5
    649a:	1d 19       	sub	r17, r13
    649c:	d5 2c       	mov	r13, r5
    649e:	d5 14       	cp	r13, r5
    64a0:	60 f4       	brcc	.+24     	; 0x64ba <vfprintf+0x658>
    64a2:	b7 01       	movw	r22, r14
    64a4:	80 e2       	ldi	r24, 0x20	; 32
    64a6:	90 e0       	ldi	r25, 0x00	; 0
    64a8:	2b 8b       	std	Y+19, r18	; 0x13
    64aa:	90 d1       	rcall	.+800    	; 0x67cc <fputc>
    64ac:	d3 94       	inc	r13
    64ae:	2b 89       	ldd	r18, Y+19	; 0x13
    64b0:	f6 cf       	rjmp	.-20     	; 0x649e <vfprintf+0x63c>
    64b2:	d5 14       	cp	r13, r5
    64b4:	10 f4       	brcc	.+4      	; 0x64ba <vfprintf+0x658>
    64b6:	5d 18       	sub	r5, r13
    64b8:	01 c0       	rjmp	.+2      	; 0x64bc <vfprintf+0x65a>
    64ba:	51 2c       	mov	r5, r1
    64bc:	24 ff       	sbrs	r18, 4
    64be:	11 c0       	rjmp	.+34     	; 0x64e2 <vfprintf+0x680>
    64c0:	b7 01       	movw	r22, r14
    64c2:	80 e3       	ldi	r24, 0x30	; 48
    64c4:	90 e0       	ldi	r25, 0x00	; 0
    64c6:	2b 8b       	std	Y+19, r18	; 0x13
    64c8:	81 d1       	rcall	.+770    	; 0x67cc <fputc>
    64ca:	2b 89       	ldd	r18, Y+19	; 0x13
    64cc:	22 ff       	sbrs	r18, 2
    64ce:	16 c0       	rjmp	.+44     	; 0x64fc <vfprintf+0x69a>
    64d0:	21 ff       	sbrs	r18, 1
    64d2:	03 c0       	rjmp	.+6      	; 0x64da <vfprintf+0x678>
    64d4:	88 e5       	ldi	r24, 0x58	; 88
    64d6:	90 e0       	ldi	r25, 0x00	; 0
    64d8:	02 c0       	rjmp	.+4      	; 0x64de <vfprintf+0x67c>
    64da:	88 e7       	ldi	r24, 0x78	; 120
    64dc:	90 e0       	ldi	r25, 0x00	; 0
    64de:	b7 01       	movw	r22, r14
    64e0:	0c c0       	rjmp	.+24     	; 0x64fa <vfprintf+0x698>
    64e2:	82 2f       	mov	r24, r18
    64e4:	86 78       	andi	r24, 0x86	; 134
    64e6:	51 f0       	breq	.+20     	; 0x64fc <vfprintf+0x69a>
    64e8:	21 fd       	sbrc	r18, 1
    64ea:	02 c0       	rjmp	.+4      	; 0x64f0 <vfprintf+0x68e>
    64ec:	80 e2       	ldi	r24, 0x20	; 32
    64ee:	01 c0       	rjmp	.+2      	; 0x64f2 <vfprintf+0x690>
    64f0:	8b e2       	ldi	r24, 0x2B	; 43
    64f2:	27 fd       	sbrc	r18, 7
    64f4:	8d e2       	ldi	r24, 0x2D	; 45
    64f6:	b7 01       	movw	r22, r14
    64f8:	90 e0       	ldi	r25, 0x00	; 0
    64fa:	68 d1       	rcall	.+720    	; 0x67cc <fputc>
    64fc:	c1 16       	cp	r12, r17
    64fe:	30 f4       	brcc	.+12     	; 0x650c <vfprintf+0x6aa>
    6500:	b7 01       	movw	r22, r14
    6502:	80 e3       	ldi	r24, 0x30	; 48
    6504:	90 e0       	ldi	r25, 0x00	; 0
    6506:	62 d1       	rcall	.+708    	; 0x67cc <fputc>
    6508:	11 50       	subi	r17, 0x01	; 1
    650a:	f8 cf       	rjmp	.-16     	; 0x64fc <vfprintf+0x69a>
    650c:	ca 94       	dec	r12
    650e:	f4 01       	movw	r30, r8
    6510:	ec 0d       	add	r30, r12
    6512:	f1 1d       	adc	r31, r1
    6514:	80 81       	ld	r24, Z
    6516:	b7 01       	movw	r22, r14
    6518:	90 e0       	ldi	r25, 0x00	; 0
    651a:	58 d1       	rcall	.+688    	; 0x67cc <fputc>
    651c:	c1 10       	cpse	r12, r1
    651e:	f6 cf       	rjmp	.-20     	; 0x650c <vfprintf+0x6aa>
    6520:	55 20       	and	r5, r5
    6522:	09 f4       	brne	.+2      	; 0x6526 <vfprintf+0x6c4>
    6524:	dd cc       	rjmp	.-1606   	; 0x5ee0 <vfprintf+0x7e>
    6526:	b7 01       	movw	r22, r14
    6528:	80 e2       	ldi	r24, 0x20	; 32
    652a:	90 e0       	ldi	r25, 0x00	; 0
    652c:	4f d1       	rcall	.+670    	; 0x67cc <fputc>
    652e:	5a 94       	dec	r5
    6530:	f7 cf       	rjmp	.-18     	; 0x6520 <vfprintf+0x6be>
    6532:	f7 01       	movw	r30, r14
    6534:	86 81       	ldd	r24, Z+6	; 0x06
    6536:	97 81       	ldd	r25, Z+7	; 0x07
    6538:	02 c0       	rjmp	.+4      	; 0x653e <vfprintf+0x6dc>
    653a:	8f ef       	ldi	r24, 0xFF	; 255
    653c:	9f ef       	ldi	r25, 0xFF	; 255
    653e:	63 96       	adiw	r28, 0x13	; 19
    6540:	0f b6       	in	r0, 0x3f	; 63
    6542:	f8 94       	cli
    6544:	de bf       	out	0x3e, r29	; 62
    6546:	0f be       	out	0x3f, r0	; 63
    6548:	cd bf       	out	0x3d, r28	; 61
    654a:	df 91       	pop	r29
    654c:	cf 91       	pop	r28
    654e:	1f 91       	pop	r17
    6550:	0f 91       	pop	r16
    6552:	ff 90       	pop	r15
    6554:	ef 90       	pop	r14
    6556:	df 90       	pop	r13
    6558:	cf 90       	pop	r12
    655a:	bf 90       	pop	r11
    655c:	af 90       	pop	r10
    655e:	9f 90       	pop	r9
    6560:	8f 90       	pop	r8
    6562:	7f 90       	pop	r7
    6564:	6f 90       	pop	r6
    6566:	5f 90       	pop	r5
    6568:	4f 90       	pop	r4
    656a:	3f 90       	pop	r3
    656c:	2f 90       	pop	r2
    656e:	08 95       	ret

00006570 <__udivmodhi4>:
    6570:	aa 1b       	sub	r26, r26
    6572:	bb 1b       	sub	r27, r27
    6574:	51 e1       	ldi	r21, 0x11	; 17
    6576:	07 c0       	rjmp	.+14     	; 0x6586 <__udivmodhi4_ep>

00006578 <__udivmodhi4_loop>:
    6578:	aa 1f       	adc	r26, r26
    657a:	bb 1f       	adc	r27, r27
    657c:	a6 17       	cp	r26, r22
    657e:	b7 07       	cpc	r27, r23
    6580:	10 f0       	brcs	.+4      	; 0x6586 <__udivmodhi4_ep>
    6582:	a6 1b       	sub	r26, r22
    6584:	b7 0b       	sbc	r27, r23

00006586 <__udivmodhi4_ep>:
    6586:	88 1f       	adc	r24, r24
    6588:	99 1f       	adc	r25, r25
    658a:	5a 95       	dec	r21
    658c:	a9 f7       	brne	.-22     	; 0x6578 <__udivmodhi4_loop>
    658e:	80 95       	com	r24
    6590:	90 95       	com	r25
    6592:	bc 01       	movw	r22, r24
    6594:	cd 01       	movw	r24, r26
    6596:	08 95       	ret

00006598 <__divmodhi4>:
    6598:	97 fb       	bst	r25, 7
    659a:	07 2e       	mov	r0, r23
    659c:	16 f4       	brtc	.+4      	; 0x65a2 <__divmodhi4+0xa>
    659e:	00 94       	com	r0
    65a0:	06 d0       	rcall	.+12     	; 0x65ae <__divmodhi4_neg1>
    65a2:	77 fd       	sbrc	r23, 7
    65a4:	08 d0       	rcall	.+16     	; 0x65b6 <__divmodhi4_neg2>
    65a6:	e4 df       	rcall	.-56     	; 0x6570 <__udivmodhi4>
    65a8:	07 fc       	sbrc	r0, 7
    65aa:	05 d0       	rcall	.+10     	; 0x65b6 <__divmodhi4_neg2>
    65ac:	3e f4       	brtc	.+14     	; 0x65bc <__divmodhi4_exit>

000065ae <__divmodhi4_neg1>:
    65ae:	90 95       	com	r25
    65b0:	81 95       	neg	r24
    65b2:	9f 4f       	sbci	r25, 0xFF	; 255
    65b4:	08 95       	ret

000065b6 <__divmodhi4_neg2>:
    65b6:	70 95       	com	r23
    65b8:	61 95       	neg	r22
    65ba:	7f 4f       	sbci	r23, 0xFF	; 255

000065bc <__divmodhi4_exit>:
    65bc:	08 95       	ret

000065be <__tablejump2__>:
    65be:	ee 0f       	add	r30, r30
    65c0:	ff 1f       	adc	r31, r31

000065c2 <__tablejump__>:
    65c2:	05 90       	lpm	r0, Z+
    65c4:	f4 91       	lpm	r31, Z
    65c6:	e0 2d       	mov	r30, r0
    65c8:	09 94       	ijmp

000065ca <__umulhisi3>:
    65ca:	a2 9f       	mul	r26, r18
    65cc:	b0 01       	movw	r22, r0
    65ce:	b3 9f       	mul	r27, r19
    65d0:	c0 01       	movw	r24, r0
    65d2:	a3 9f       	mul	r26, r19
    65d4:	70 0d       	add	r23, r0
    65d6:	81 1d       	adc	r24, r1
    65d8:	11 24       	eor	r1, r1
    65da:	91 1d       	adc	r25, r1
    65dc:	b2 9f       	mul	r27, r18
    65de:	70 0d       	add	r23, r0
    65e0:	81 1d       	adc	r24, r1
    65e2:	11 24       	eor	r1, r1
    65e4:	91 1d       	adc	r25, r1
    65e6:	08 95       	ret

000065e8 <__tablejump_elpm__>:
    65e8:	07 90       	elpm	r0, Z+
    65ea:	f6 91       	elpm	r31, Z
    65ec:	e0 2d       	mov	r30, r0
    65ee:	09 94       	ijmp

000065f0 <__ftoa_engine>:
    65f0:	28 30       	cpi	r18, 0x08	; 8
    65f2:	08 f0       	brcs	.+2      	; 0x65f6 <__ftoa_engine+0x6>
    65f4:	27 e0       	ldi	r18, 0x07	; 7
    65f6:	33 27       	eor	r19, r19
    65f8:	da 01       	movw	r26, r20
    65fa:	99 0f       	add	r25, r25
    65fc:	31 1d       	adc	r19, r1
    65fe:	87 fd       	sbrc	r24, 7
    6600:	91 60       	ori	r25, 0x01	; 1
    6602:	00 96       	adiw	r24, 0x00	; 0
    6604:	61 05       	cpc	r22, r1
    6606:	71 05       	cpc	r23, r1
    6608:	39 f4       	brne	.+14     	; 0x6618 <__ftoa_engine+0x28>
    660a:	32 60       	ori	r19, 0x02	; 2
    660c:	2e 5f       	subi	r18, 0xFE	; 254
    660e:	3d 93       	st	X+, r19
    6610:	30 e3       	ldi	r19, 0x30	; 48
    6612:	2a 95       	dec	r18
    6614:	e1 f7       	brne	.-8      	; 0x660e <__ftoa_engine+0x1e>
    6616:	08 95       	ret
    6618:	9f 3f       	cpi	r25, 0xFF	; 255
    661a:	30 f0       	brcs	.+12     	; 0x6628 <__ftoa_engine+0x38>
    661c:	80 38       	cpi	r24, 0x80	; 128
    661e:	71 05       	cpc	r23, r1
    6620:	61 05       	cpc	r22, r1
    6622:	09 f0       	breq	.+2      	; 0x6626 <__ftoa_engine+0x36>
    6624:	3c 5f       	subi	r19, 0xFC	; 252
    6626:	3c 5f       	subi	r19, 0xFC	; 252
    6628:	3d 93       	st	X+, r19
    662a:	91 30       	cpi	r25, 0x01	; 1
    662c:	08 f0       	brcs	.+2      	; 0x6630 <__ftoa_engine+0x40>
    662e:	80 68       	ori	r24, 0x80	; 128
    6630:	91 1d       	adc	r25, r1
    6632:	df 93       	push	r29
    6634:	cf 93       	push	r28
    6636:	1f 93       	push	r17
    6638:	0f 93       	push	r16
    663a:	ff 92       	push	r15
    663c:	ef 92       	push	r14
    663e:	19 2f       	mov	r17, r25
    6640:	98 7f       	andi	r25, 0xF8	; 248
    6642:	96 95       	lsr	r25
    6644:	e9 2f       	mov	r30, r25
    6646:	96 95       	lsr	r25
    6648:	96 95       	lsr	r25
    664a:	e9 0f       	add	r30, r25
    664c:	ff 27       	eor	r31, r31
    664e:	e2 50       	subi	r30, 0x02	; 2
    6650:	fb 4f       	sbci	r31, 0xFB	; 251
    6652:	99 27       	eor	r25, r25
    6654:	33 27       	eor	r19, r19
    6656:	ee 24       	eor	r14, r14
    6658:	ff 24       	eor	r15, r15
    665a:	a7 01       	movw	r20, r14
    665c:	e7 01       	movw	r28, r14
    665e:	05 90       	lpm	r0, Z+
    6660:	08 94       	sec
    6662:	07 94       	ror	r0
    6664:	28 f4       	brcc	.+10     	; 0x6670 <__ftoa_engine+0x80>
    6666:	36 0f       	add	r19, r22
    6668:	e7 1e       	adc	r14, r23
    666a:	f8 1e       	adc	r15, r24
    666c:	49 1f       	adc	r20, r25
    666e:	51 1d       	adc	r21, r1
    6670:	66 0f       	add	r22, r22
    6672:	77 1f       	adc	r23, r23
    6674:	88 1f       	adc	r24, r24
    6676:	99 1f       	adc	r25, r25
    6678:	06 94       	lsr	r0
    667a:	a1 f7       	brne	.-24     	; 0x6664 <__ftoa_engine+0x74>
    667c:	05 90       	lpm	r0, Z+
    667e:	07 94       	ror	r0
    6680:	28 f4       	brcc	.+10     	; 0x668c <__ftoa_engine+0x9c>
    6682:	e7 0e       	add	r14, r23
    6684:	f8 1e       	adc	r15, r24
    6686:	49 1f       	adc	r20, r25
    6688:	56 1f       	adc	r21, r22
    668a:	c1 1d       	adc	r28, r1
    668c:	77 0f       	add	r23, r23
    668e:	88 1f       	adc	r24, r24
    6690:	99 1f       	adc	r25, r25
    6692:	66 1f       	adc	r22, r22
    6694:	06 94       	lsr	r0
    6696:	a1 f7       	brne	.-24     	; 0x6680 <__ftoa_engine+0x90>
    6698:	05 90       	lpm	r0, Z+
    669a:	07 94       	ror	r0
    669c:	28 f4       	brcc	.+10     	; 0x66a8 <__ftoa_engine+0xb8>
    669e:	f8 0e       	add	r15, r24
    66a0:	49 1f       	adc	r20, r25
    66a2:	56 1f       	adc	r21, r22
    66a4:	c7 1f       	adc	r28, r23
    66a6:	d1 1d       	adc	r29, r1
    66a8:	88 0f       	add	r24, r24
    66aa:	99 1f       	adc	r25, r25
    66ac:	66 1f       	adc	r22, r22
    66ae:	77 1f       	adc	r23, r23
    66b0:	06 94       	lsr	r0
    66b2:	a1 f7       	brne	.-24     	; 0x669c <__ftoa_engine+0xac>
    66b4:	05 90       	lpm	r0, Z+
    66b6:	07 94       	ror	r0
    66b8:	20 f4       	brcc	.+8      	; 0x66c2 <__ftoa_engine+0xd2>
    66ba:	49 0f       	add	r20, r25
    66bc:	56 1f       	adc	r21, r22
    66be:	c7 1f       	adc	r28, r23
    66c0:	d8 1f       	adc	r29, r24
    66c2:	99 0f       	add	r25, r25
    66c4:	66 1f       	adc	r22, r22
    66c6:	77 1f       	adc	r23, r23
    66c8:	88 1f       	adc	r24, r24
    66ca:	06 94       	lsr	r0
    66cc:	a9 f7       	brne	.-22     	; 0x66b8 <__ftoa_engine+0xc8>
    66ce:	84 91       	lpm	r24, Z
    66d0:	10 95       	com	r17
    66d2:	17 70       	andi	r17, 0x07	; 7
    66d4:	41 f0       	breq	.+16     	; 0x66e6 <__ftoa_engine+0xf6>
    66d6:	d6 95       	lsr	r29
    66d8:	c7 95       	ror	r28
    66da:	57 95       	ror	r21
    66dc:	47 95       	ror	r20
    66de:	f7 94       	ror	r15
    66e0:	e7 94       	ror	r14
    66e2:	1a 95       	dec	r17
    66e4:	c1 f7       	brne	.-16     	; 0x66d6 <__ftoa_engine+0xe6>
    66e6:	e4 ea       	ldi	r30, 0xA4	; 164
    66e8:	f4 e0       	ldi	r31, 0x04	; 4
    66ea:	68 94       	set
    66ec:	15 90       	lpm	r1, Z+
    66ee:	15 91       	lpm	r17, Z+
    66f0:	35 91       	lpm	r19, Z+
    66f2:	65 91       	lpm	r22, Z+
    66f4:	95 91       	lpm	r25, Z+
    66f6:	05 90       	lpm	r0, Z+
    66f8:	7f e2       	ldi	r23, 0x2F	; 47
    66fa:	73 95       	inc	r23
    66fc:	e1 18       	sub	r14, r1
    66fe:	f1 0a       	sbc	r15, r17
    6700:	43 0b       	sbc	r20, r19
    6702:	56 0b       	sbc	r21, r22
    6704:	c9 0b       	sbc	r28, r25
    6706:	d0 09       	sbc	r29, r0
    6708:	c0 f7       	brcc	.-16     	; 0x66fa <__ftoa_engine+0x10a>
    670a:	e1 0c       	add	r14, r1
    670c:	f1 1e       	adc	r15, r17
    670e:	43 1f       	adc	r20, r19
    6710:	56 1f       	adc	r21, r22
    6712:	c9 1f       	adc	r28, r25
    6714:	d0 1d       	adc	r29, r0
    6716:	7e f4       	brtc	.+30     	; 0x6736 <__ftoa_engine+0x146>
    6718:	70 33       	cpi	r23, 0x30	; 48
    671a:	11 f4       	brne	.+4      	; 0x6720 <__ftoa_engine+0x130>
    671c:	8a 95       	dec	r24
    671e:	e6 cf       	rjmp	.-52     	; 0x66ec <__ftoa_engine+0xfc>
    6720:	e8 94       	clt
    6722:	01 50       	subi	r16, 0x01	; 1
    6724:	30 f0       	brcs	.+12     	; 0x6732 <__ftoa_engine+0x142>
    6726:	08 0f       	add	r16, r24
    6728:	0a f4       	brpl	.+2      	; 0x672c <__ftoa_engine+0x13c>
    672a:	00 27       	eor	r16, r16
    672c:	02 17       	cp	r16, r18
    672e:	08 f4       	brcc	.+2      	; 0x6732 <__ftoa_engine+0x142>
    6730:	20 2f       	mov	r18, r16
    6732:	23 95       	inc	r18
    6734:	02 2f       	mov	r16, r18
    6736:	7a 33       	cpi	r23, 0x3A	; 58
    6738:	28 f0       	brcs	.+10     	; 0x6744 <__ftoa_engine+0x154>
    673a:	79 e3       	ldi	r23, 0x39	; 57
    673c:	7d 93       	st	X+, r23
    673e:	2a 95       	dec	r18
    6740:	e9 f7       	brne	.-6      	; 0x673c <__ftoa_engine+0x14c>
    6742:	10 c0       	rjmp	.+32     	; 0x6764 <__ftoa_engine+0x174>
    6744:	7d 93       	st	X+, r23
    6746:	2a 95       	dec	r18
    6748:	89 f6       	brne	.-94     	; 0x66ec <__ftoa_engine+0xfc>
    674a:	06 94       	lsr	r0
    674c:	97 95       	ror	r25
    674e:	67 95       	ror	r22
    6750:	37 95       	ror	r19
    6752:	17 95       	ror	r17
    6754:	17 94       	ror	r1
    6756:	e1 18       	sub	r14, r1
    6758:	f1 0a       	sbc	r15, r17
    675a:	43 0b       	sbc	r20, r19
    675c:	56 0b       	sbc	r21, r22
    675e:	c9 0b       	sbc	r28, r25
    6760:	d0 09       	sbc	r29, r0
    6762:	98 f0       	brcs	.+38     	; 0x678a <__ftoa_engine+0x19a>
    6764:	23 95       	inc	r18
    6766:	7e 91       	ld	r23, -X
    6768:	73 95       	inc	r23
    676a:	7a 33       	cpi	r23, 0x3A	; 58
    676c:	08 f0       	brcs	.+2      	; 0x6770 <__ftoa_engine+0x180>
    676e:	70 e3       	ldi	r23, 0x30	; 48
    6770:	7c 93       	st	X, r23
    6772:	20 13       	cpse	r18, r16
    6774:	b8 f7       	brcc	.-18     	; 0x6764 <__ftoa_engine+0x174>
    6776:	7e 91       	ld	r23, -X
    6778:	70 61       	ori	r23, 0x10	; 16
    677a:	7d 93       	st	X+, r23
    677c:	30 f0       	brcs	.+12     	; 0x678a <__ftoa_engine+0x19a>
    677e:	83 95       	inc	r24
    6780:	71 e3       	ldi	r23, 0x31	; 49
    6782:	7d 93       	st	X+, r23
    6784:	70 e3       	ldi	r23, 0x30	; 48
    6786:	2a 95       	dec	r18
    6788:	e1 f7       	brne	.-8      	; 0x6782 <__ftoa_engine+0x192>
    678a:	11 24       	eor	r1, r1
    678c:	ef 90       	pop	r14
    678e:	ff 90       	pop	r15
    6790:	0f 91       	pop	r16
    6792:	1f 91       	pop	r17
    6794:	cf 91       	pop	r28
    6796:	df 91       	pop	r29
    6798:	99 27       	eor	r25, r25
    679a:	87 fd       	sbrc	r24, 7
    679c:	90 95       	com	r25
    679e:	08 95       	ret

000067a0 <strnlen_P>:
    67a0:	fc 01       	movw	r30, r24
    67a2:	05 90       	lpm	r0, Z+
    67a4:	61 50       	subi	r22, 0x01	; 1
    67a6:	70 40       	sbci	r23, 0x00	; 0
    67a8:	01 10       	cpse	r0, r1
    67aa:	d8 f7       	brcc	.-10     	; 0x67a2 <strnlen_P+0x2>
    67ac:	80 95       	com	r24
    67ae:	90 95       	com	r25
    67b0:	8e 0f       	add	r24, r30
    67b2:	9f 1f       	adc	r25, r31
    67b4:	08 95       	ret

000067b6 <strnlen>:
    67b6:	fc 01       	movw	r30, r24
    67b8:	61 50       	subi	r22, 0x01	; 1
    67ba:	70 40       	sbci	r23, 0x00	; 0
    67bc:	01 90       	ld	r0, Z+
    67be:	01 10       	cpse	r0, r1
    67c0:	d8 f7       	brcc	.-10     	; 0x67b8 <strnlen+0x2>
    67c2:	80 95       	com	r24
    67c4:	90 95       	com	r25
    67c6:	8e 0f       	add	r24, r30
    67c8:	9f 1f       	adc	r25, r31
    67ca:	08 95       	ret

000067cc <fputc>:
    67cc:	0f 93       	push	r16
    67ce:	1f 93       	push	r17
    67d0:	cf 93       	push	r28
    67d2:	df 93       	push	r29
    67d4:	18 2f       	mov	r17, r24
    67d6:	09 2f       	mov	r16, r25
    67d8:	eb 01       	movw	r28, r22
    67da:	8b 81       	ldd	r24, Y+3	; 0x03
    67dc:	81 fd       	sbrc	r24, 1
    67de:	03 c0       	rjmp	.+6      	; 0x67e6 <fputc+0x1a>
    67e0:	8f ef       	ldi	r24, 0xFF	; 255
    67e2:	9f ef       	ldi	r25, 0xFF	; 255
    67e4:	20 c0       	rjmp	.+64     	; 0x6826 <fputc+0x5a>
    67e6:	82 ff       	sbrs	r24, 2
    67e8:	10 c0       	rjmp	.+32     	; 0x680a <fputc+0x3e>
    67ea:	4e 81       	ldd	r20, Y+6	; 0x06
    67ec:	5f 81       	ldd	r21, Y+7	; 0x07
    67ee:	2c 81       	ldd	r18, Y+4	; 0x04
    67f0:	3d 81       	ldd	r19, Y+5	; 0x05
    67f2:	42 17       	cp	r20, r18
    67f4:	53 07       	cpc	r21, r19
    67f6:	7c f4       	brge	.+30     	; 0x6816 <fputc+0x4a>
    67f8:	e8 81       	ld	r30, Y
    67fa:	f9 81       	ldd	r31, Y+1	; 0x01
    67fc:	9f 01       	movw	r18, r30
    67fe:	2f 5f       	subi	r18, 0xFF	; 255
    6800:	3f 4f       	sbci	r19, 0xFF	; 255
    6802:	39 83       	std	Y+1, r19	; 0x01
    6804:	28 83       	st	Y, r18
    6806:	10 83       	st	Z, r17
    6808:	06 c0       	rjmp	.+12     	; 0x6816 <fputc+0x4a>
    680a:	e8 85       	ldd	r30, Y+8	; 0x08
    680c:	f9 85       	ldd	r31, Y+9	; 0x09
    680e:	81 2f       	mov	r24, r17
    6810:	09 95       	icall
    6812:	89 2b       	or	r24, r25
    6814:	29 f7       	brne	.-54     	; 0x67e0 <fputc+0x14>
    6816:	2e 81       	ldd	r18, Y+6	; 0x06
    6818:	3f 81       	ldd	r19, Y+7	; 0x07
    681a:	2f 5f       	subi	r18, 0xFF	; 255
    681c:	3f 4f       	sbci	r19, 0xFF	; 255
    681e:	3f 83       	std	Y+7, r19	; 0x07
    6820:	2e 83       	std	Y+6, r18	; 0x06
    6822:	81 2f       	mov	r24, r17
    6824:	90 2f       	mov	r25, r16
    6826:	df 91       	pop	r29
    6828:	cf 91       	pop	r28
    682a:	1f 91       	pop	r17
    682c:	0f 91       	pop	r16
    682e:	08 95       	ret

00006830 <sprintf>:
    6830:	0f 93       	push	r16
    6832:	1f 93       	push	r17
    6834:	cf 93       	push	r28
    6836:	df 93       	push	r29
    6838:	cd b7       	in	r28, 0x3d	; 61
    683a:	de b7       	in	r29, 0x3e	; 62
    683c:	2e 97       	sbiw	r28, 0x0e	; 14
    683e:	0f b6       	in	r0, 0x3f	; 63
    6840:	f8 94       	cli
    6842:	de bf       	out	0x3e, r29	; 62
    6844:	0f be       	out	0x3f, r0	; 63
    6846:	cd bf       	out	0x3d, r28	; 61
    6848:	0d 89       	ldd	r16, Y+21	; 0x15
    684a:	1e 89       	ldd	r17, Y+22	; 0x16
    684c:	86 e0       	ldi	r24, 0x06	; 6
    684e:	8c 83       	std	Y+4, r24	; 0x04
    6850:	1a 83       	std	Y+2, r17	; 0x02
    6852:	09 83       	std	Y+1, r16	; 0x01
    6854:	8f ef       	ldi	r24, 0xFF	; 255
    6856:	9f e7       	ldi	r25, 0x7F	; 127
    6858:	9e 83       	std	Y+6, r25	; 0x06
    685a:	8d 83       	std	Y+5, r24	; 0x05
    685c:	ae 01       	movw	r20, r28
    685e:	47 5e       	subi	r20, 0xE7	; 231
    6860:	5f 4f       	sbci	r21, 0xFF	; 255
    6862:	6f 89       	ldd	r22, Y+23	; 0x17
    6864:	78 8d       	ldd	r23, Y+24	; 0x18
    6866:	ce 01       	movw	r24, r28
    6868:	01 96       	adiw	r24, 0x01	; 1
    686a:	fb da       	rcall	.-2570   	; 0x5e62 <vfprintf>
    686c:	ef 81       	ldd	r30, Y+7	; 0x07
    686e:	f8 85       	ldd	r31, Y+8	; 0x08
    6870:	e0 0f       	add	r30, r16
    6872:	f1 1f       	adc	r31, r17
    6874:	10 82       	st	Z, r1
    6876:	2e 96       	adiw	r28, 0x0e	; 14
    6878:	0f b6       	in	r0, 0x3f	; 63
    687a:	f8 94       	cli
    687c:	de bf       	out	0x3e, r29	; 62
    687e:	0f be       	out	0x3f, r0	; 63
    6880:	cd bf       	out	0x3d, r28	; 61
    6882:	df 91       	pop	r29
    6884:	cf 91       	pop	r28
    6886:	1f 91       	pop	r17
    6888:	0f 91       	pop	r16
    688a:	08 95       	ret

0000688c <__ultoa_invert>:
    688c:	fa 01       	movw	r30, r20
    688e:	aa 27       	eor	r26, r26
    6890:	28 30       	cpi	r18, 0x08	; 8
    6892:	51 f1       	breq	.+84     	; 0x68e8 <__ultoa_invert+0x5c>
    6894:	20 31       	cpi	r18, 0x10	; 16
    6896:	81 f1       	breq	.+96     	; 0x68f8 <__ultoa_invert+0x6c>
    6898:	e8 94       	clt
    689a:	6f 93       	push	r22
    689c:	6e 7f       	andi	r22, 0xFE	; 254
    689e:	6e 5f       	subi	r22, 0xFE	; 254
    68a0:	7f 4f       	sbci	r23, 0xFF	; 255
    68a2:	8f 4f       	sbci	r24, 0xFF	; 255
    68a4:	9f 4f       	sbci	r25, 0xFF	; 255
    68a6:	af 4f       	sbci	r26, 0xFF	; 255
    68a8:	b1 e0       	ldi	r27, 0x01	; 1
    68aa:	3e d0       	rcall	.+124    	; 0x6928 <__ultoa_invert+0x9c>
    68ac:	b4 e0       	ldi	r27, 0x04	; 4
    68ae:	3c d0       	rcall	.+120    	; 0x6928 <__ultoa_invert+0x9c>
    68b0:	67 0f       	add	r22, r23
    68b2:	78 1f       	adc	r23, r24
    68b4:	89 1f       	adc	r24, r25
    68b6:	9a 1f       	adc	r25, r26
    68b8:	a1 1d       	adc	r26, r1
    68ba:	68 0f       	add	r22, r24
    68bc:	79 1f       	adc	r23, r25
    68be:	8a 1f       	adc	r24, r26
    68c0:	91 1d       	adc	r25, r1
    68c2:	a1 1d       	adc	r26, r1
    68c4:	6a 0f       	add	r22, r26
    68c6:	71 1d       	adc	r23, r1
    68c8:	81 1d       	adc	r24, r1
    68ca:	91 1d       	adc	r25, r1
    68cc:	a1 1d       	adc	r26, r1
    68ce:	20 d0       	rcall	.+64     	; 0x6910 <__ultoa_invert+0x84>
    68d0:	09 f4       	brne	.+2      	; 0x68d4 <__ultoa_invert+0x48>
    68d2:	68 94       	set
    68d4:	3f 91       	pop	r19
    68d6:	2a e0       	ldi	r18, 0x0A	; 10
    68d8:	26 9f       	mul	r18, r22
    68da:	11 24       	eor	r1, r1
    68dc:	30 19       	sub	r19, r0
    68de:	30 5d       	subi	r19, 0xD0	; 208
    68e0:	31 93       	st	Z+, r19
    68e2:	de f6       	brtc	.-74     	; 0x689a <__ultoa_invert+0xe>
    68e4:	cf 01       	movw	r24, r30
    68e6:	08 95       	ret
    68e8:	46 2f       	mov	r20, r22
    68ea:	47 70       	andi	r20, 0x07	; 7
    68ec:	40 5d       	subi	r20, 0xD0	; 208
    68ee:	41 93       	st	Z+, r20
    68f0:	b3 e0       	ldi	r27, 0x03	; 3
    68f2:	0f d0       	rcall	.+30     	; 0x6912 <__ultoa_invert+0x86>
    68f4:	c9 f7       	brne	.-14     	; 0x68e8 <__ultoa_invert+0x5c>
    68f6:	f6 cf       	rjmp	.-20     	; 0x68e4 <__ultoa_invert+0x58>
    68f8:	46 2f       	mov	r20, r22
    68fa:	4f 70       	andi	r20, 0x0F	; 15
    68fc:	40 5d       	subi	r20, 0xD0	; 208
    68fe:	4a 33       	cpi	r20, 0x3A	; 58
    6900:	18 f0       	brcs	.+6      	; 0x6908 <__ultoa_invert+0x7c>
    6902:	49 5d       	subi	r20, 0xD9	; 217
    6904:	31 fd       	sbrc	r19, 1
    6906:	40 52       	subi	r20, 0x20	; 32
    6908:	41 93       	st	Z+, r20
    690a:	02 d0       	rcall	.+4      	; 0x6910 <__ultoa_invert+0x84>
    690c:	a9 f7       	brne	.-22     	; 0x68f8 <__ultoa_invert+0x6c>
    690e:	ea cf       	rjmp	.-44     	; 0x68e4 <__ultoa_invert+0x58>
    6910:	b4 e0       	ldi	r27, 0x04	; 4
    6912:	a6 95       	lsr	r26
    6914:	97 95       	ror	r25
    6916:	87 95       	ror	r24
    6918:	77 95       	ror	r23
    691a:	67 95       	ror	r22
    691c:	ba 95       	dec	r27
    691e:	c9 f7       	brne	.-14     	; 0x6912 <__ultoa_invert+0x86>
    6920:	00 97       	sbiw	r24, 0x00	; 0
    6922:	61 05       	cpc	r22, r1
    6924:	71 05       	cpc	r23, r1
    6926:	08 95       	ret
    6928:	9b 01       	movw	r18, r22
    692a:	ac 01       	movw	r20, r24
    692c:	0a 2e       	mov	r0, r26
    692e:	06 94       	lsr	r0
    6930:	57 95       	ror	r21
    6932:	47 95       	ror	r20
    6934:	37 95       	ror	r19
    6936:	27 95       	ror	r18
    6938:	ba 95       	dec	r27
    693a:	c9 f7       	brne	.-14     	; 0x692e <__ultoa_invert+0xa2>
    693c:	62 0f       	add	r22, r18
    693e:	73 1f       	adc	r23, r19
    6940:	84 1f       	adc	r24, r20
    6942:	95 1f       	adc	r25, r21
    6944:	a0 1d       	adc	r26, r0
    6946:	08 95       	ret

00006948 <__do_global_dtors>:
    6948:	15 e0       	ldi	r17, 0x05	; 5
    694a:	c0 ea       	ldi	r28, 0xA0	; 160
    694c:	d5 e0       	ldi	r29, 0x05	; 5
    694e:	00 e0       	ldi	r16, 0x00	; 0
    6950:	05 c0       	rjmp	.+10     	; 0x695c <__do_global_dtors+0x14>
    6952:	22 97       	sbiw	r28, 0x02	; 2
    6954:	01 09       	sbc	r16, r1
    6956:	fe 01       	movw	r30, r28
    6958:	0b bf       	out	0x3b, r16	; 59
    695a:	46 de       	rcall	.-884    	; 0x65e8 <__tablejump_elpm__>
    695c:	c2 3a       	cpi	r28, 0xA2	; 162
    695e:	d1 07       	cpc	r29, r17
    6960:	80 e0       	ldi	r24, 0x00	; 0
    6962:	08 07       	cpc	r16, r24
    6964:	b1 f7       	brne	.-20     	; 0x6952 <__do_global_dtors+0xa>
    6966:	f8 94       	cli

00006968 <__stop_program>:
    6968:	ff cf       	rjmp	.-2      	; 0x6968 <__stop_program>
