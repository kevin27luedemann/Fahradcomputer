
FWCP_MK2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000224  00800100  00006db2  00006e46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00006db2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000487  00800324  00800324  0000706a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000706a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000490  00000000  00000000  000070c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000a0d7  00000000  00000000  00007556  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001b58  00000000  00000000  0001162d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00003be0  00000000  00000000  00013185  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00001170  00000000  00000000  00016d68  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000014c5  00000000  00000000  00017ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000745c  00000000  00000000  0001939d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000458  00000000  00000000  000207f9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	d0 c2       	rjmp	.+1440   	; 0x5a2 <__dtors_end>
       2:	00 00       	nop
       4:	fd c2       	rjmp	.+1530   	; 0x600 <__bad_interrupt>
       6:	00 00       	nop
       8:	fb c2       	rjmp	.+1526   	; 0x600 <__bad_interrupt>
       a:	00 00       	nop
       c:	f9 c2       	rjmp	.+1522   	; 0x600 <__bad_interrupt>
       e:	00 00       	nop
      10:	f7 c2       	rjmp	.+1518   	; 0x600 <__bad_interrupt>
      12:	00 00       	nop
      14:	f5 c2       	rjmp	.+1514   	; 0x600 <__bad_interrupt>
      16:	00 00       	nop
      18:	f3 c2       	rjmp	.+1510   	; 0x600 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f1 c2       	rjmp	.+1506   	; 0x600 <__bad_interrupt>
      1e:	00 00       	nop
      20:	ef c2       	rjmp	.+1502   	; 0x600 <__bad_interrupt>
      22:	00 00       	nop
      24:	ed c2       	rjmp	.+1498   	; 0x600 <__bad_interrupt>
      26:	00 00       	nop
      28:	eb c2       	rjmp	.+1494   	; 0x600 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0c 94 e2 1b 	jmp	0x37c4	; 0x37c4 <__vector_11>
      30:	e7 c2       	rjmp	.+1486   	; 0x600 <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 00 1c 	jmp	0x3800	; 0x3800 <__vector_13>
      38:	e3 c2       	rjmp	.+1478   	; 0x600 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	e1 c2       	rjmp	.+1474   	; 0x600 <__bad_interrupt>
      3e:	00 00       	nop
      40:	df c2       	rjmp	.+1470   	; 0x600 <__bad_interrupt>
      42:	00 00       	nop
      44:	dd c2       	rjmp	.+1466   	; 0x600 <__bad_interrupt>
      46:	00 00       	nop
      48:	db c2       	rjmp	.+1462   	; 0x600 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	d9 c2       	rjmp	.+1458   	; 0x600 <__bad_interrupt>
      4e:	00 00       	nop
      50:	d7 c2       	rjmp	.+1454   	; 0x600 <__bad_interrupt>
      52:	00 00       	nop
      54:	d5 c2       	rjmp	.+1450   	; 0x600 <__bad_interrupt>
      56:	00 00       	nop
      58:	d3 c2       	rjmp	.+1446   	; 0x600 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d1 c2       	rjmp	.+1442   	; 0x600 <__bad_interrupt>
      5e:	00 00       	nop
      60:	cf c2       	rjmp	.+1438   	; 0x600 <__bad_interrupt>
      62:	00 00       	nop
      64:	cd c2       	rjmp	.+1434   	; 0x600 <__bad_interrupt>
      66:	00 00       	nop
      68:	cb c2       	rjmp	.+1430   	; 0x600 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	c9 c2       	rjmp	.+1426   	; 0x600 <__bad_interrupt>
      6e:	00 00       	nop
      70:	c7 c2       	rjmp	.+1422   	; 0x600 <__bad_interrupt>
      72:	00 00       	nop
      74:	c5 c2       	rjmp	.+1418   	; 0x600 <__bad_interrupt>
      76:	00 00       	nop
      78:	c3 c2       	rjmp	.+1414   	; 0x600 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c1 c2       	rjmp	.+1410   	; 0x600 <__bad_interrupt>
      7e:	00 00       	nop
      80:	bf c2       	rjmp	.+1406   	; 0x600 <__bad_interrupt>
      82:	00 00       	nop
      84:	bd c2       	rjmp	.+1402   	; 0x600 <__bad_interrupt>
      86:	00 00       	nop
      88:	bb c2       	rjmp	.+1398   	; 0x600 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	15 19       	sub	r17, r5
      8e:	3d 19       	sub	r19, r13
      90:	67 19       	sub	r22, r7
      92:	92 19       	sub	r25, r2
      94:	bc 19       	sub	r27, r12
      96:	e5 19       	sub	r30, r5
      98:	0d 1a       	sub	r0, r29
      9a:	36 1a       	sub	r3, r22
      9c:	ae 1a       	sub	r10, r30
      9e:	d9 1a       	sub	r13, r25
      a0:	bf 20       	and	r11, r15
      a2:	c7 20       	and	r12, r7
      a4:	cd 20       	and	r12, r13
      a6:	d3 20       	and	r13, r3
      a8:	da 20       	and	r13, r10
      aa:	e0 20       	and	r14, r0
      ac:	ee 20       	and	r14, r14
      ae:	7d 21       	and	r23, r13
      b0:	83 21       	and	r24, r3
      b2:	89 21       	and	r24, r9
      b4:	8f 21       	and	r24, r15
      b6:	95 21       	and	r25, r5
      b8:	9b 21       	and	r25, r11
      ba:	a1 21       	and	r26, r1
      bc:	a7 21       	and	r26, r7
      be:	08 4a       	sbci	r16, 0xA8	; 168
      c0:	d7 3b       	cpi	r29, 0xB7	; 183
      c2:	3b ce       	rjmp	.-906    	; 0xfffffd3a <__eeprom_end+0xff7efd3a>
      c4:	01 6e       	ori	r16, 0xE1	; 225
      c6:	84 bc       	out	0x24, r8	; 36
      c8:	bf fd       	.word	0xfdbf	; ????
      ca:	c1 2f       	mov	r28, r17
      cc:	3d 6c       	ori	r19, 0xCD	; 205
      ce:	74 31       	cpi	r23, 0x14	; 20
      d0:	9a bd       	out	0x2a, r25	; 42
      d2:	56 83       	std	Z+6, r21	; 0x06
      d4:	3d da       	rcall	.-2950   	; 0xfffff550 <__eeprom_end+0xff7ef550>
      d6:	3d 00       	.word	0x003d	; ????
      d8:	c7 7f       	andi	r28, 0xF7	; 247
      da:	11 be       	out	0x31, r1	; 49
      dc:	d9 e4       	ldi	r29, 0x49	; 73
      de:	bb 4c       	sbci	r27, 0xCB	; 203
      e0:	3e 91       	ld	r19, -X
      e2:	6b aa       	std	Y+51, r6	; 0x33
      e4:	aa be       	out	0x3a, r10	; 58
      e6:	00 00       	nop
      e8:	00 80       	ld	r0, Z
      ea:	3f 05       	cpc	r19, r15
      ec:	a8 4c       	sbci	r26, 0xC8	; 200
      ee:	cd b2       	in	r12, 0x1d	; 29
      f0:	d4 4e       	sbci	r29, 0xE4	; 228
      f2:	b9 38       	cpi	r27, 0x89	; 137
      f4:	36 a9       	ldd	r19, Z+54	; 0x36
      f6:	02 0c       	add	r0, r2
      f8:	50 b9       	out	0x00, r21	; 0
      fa:	91 86       	std	Z+9, r9	; 0x09
      fc:	88 08       	sbc	r8, r8
      fe:	3c a6       	std	Y+44, r3	; 0x2c
     100:	aa aa       	std	Y+50, r10	; 0x32
     102:	2a be       	out	0x3a, r2	; 58
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	3f 08       	sbc	r3, r15
     10a:	00 00       	nop
     10c:	00 be       	out	0x30, r0	; 48
     10e:	92 24       	eor	r9, r2
     110:	49 12       	cpse	r4, r25
     112:	3e ab       	std	Y+54, r19	; 0x36
     114:	aa aa       	std	Y+50, r10	; 0x32
     116:	2a be       	out	0x3a, r2	; 58
     118:	cd cc       	rjmp	.-1638   	; 0xfffffab4 <__eeprom_end+0xff7efab4>
     11a:	cc 4c       	sbci	r28, 0xCC	; 204
     11c:	3e 00       	.word	0x003e	; ????
     11e:	00 00       	nop
     120:	80 be       	out	0x30, r8	; 48
     122:	ab aa       	std	Y+51, r10	; 0x33
     124:	aa aa       	std	Y+50, r10	; 0x32
     126:	3e 00       	.word	0x003e	; ????
     128:	00 00       	nop
     12a:	00 bf       	out	0x30, r16	; 48
     12c:	00 00       	nop
     12e:	00 80       	ld	r0, Z
     130:	3f 00       	.word	0x003f	; ????
     132:	00 00       	nop
     134:	00 00       	nop
     136:	08 41       	sbci	r16, 0x18	; 24
     138:	78 d3       	rcall	.+1776   	; 0x82a <_ZN7Display9drawVLineEhhh+0x1e>
     13a:	bb 43       	sbci	r27, 0x3B	; 59
     13c:	87 d1       	rcall	.+782    	; 0x44c <_ZL7font5x8+0x186>
     13e:	13 3d       	cpi	r17, 0xD3	; 211
     140:	19 0e       	add	r1, r25
     142:	3c c3       	rjmp	.+1656   	; 0x7bc <_ZN7Display9drawPixelEhhh+0x24>
     144:	bd 42       	sbci	r27, 0x2D	; 45
     146:	82 ad       	ldd	r24, Z+58	; 0x3a
     148:	2b 3e       	cpi	r18, 0xEB	; 235
     14a:	68 ec       	ldi	r22, 0xC8	; 200
     14c:	82 76       	andi	r24, 0x62	; 98
     14e:	be d9       	rcall	.-3204   	; 0xfffff4cc <__eeprom_end+0xff7ef4cc>
     150:	8f e1       	ldi	r24, 0x1F	; 31
     152:	a9 3e       	cpi	r26, 0xE9	; 233
     154:	4c 80       	ldd	r4, Y+4	; 0x04
     156:	ef ff       	.word	0xffef	; ????
     158:	be 01       	movw	r22, r28
     15a:	c4 ff       	sbrs	r28, 4
     15c:	7f 3f       	cpi	r23, 0xFF	; 255
     15e:	00 00       	nop
     160:	00 00       	nop
     162:	00 06       	cpc	r0, r16
     164:	64 ec       	ldi	r22, 0xC4	; 196
     166:	1b 3c       	cpi	r17, 0xCB	; 203
     168:	04 bc       	out	0x24, r0	; 36
     16a:	16 3e       	cpi	r17, 0xE6	; 230
     16c:	3b e5       	ldi	r19, 0x5B	; 91
     16e:	b9 3c       	cpi	r27, 0xC9	; 201
     170:	c9 3c       	cpi	r28, 0xC9	; 201
     172:	37 c2       	rjmp	.+1134   	; 0x5e2 <__do_global_ctors+0xa>
     174:	9e 5a       	subi	r25, 0xAE	; 174
     176:	3d 66       	ori	r19, 0x6D	; 109
     178:	04 98       	cbi	0x00, 4	; 0
     17a:	08 3e       	cpi	r16, 0xE8	; 232
     17c:	ea 69       	ori	r30, 0x9A	; 154
     17e:	aa aa       	std	Y+50, r10	; 0x32
     180:	3e 00       	.word	0x003e	; ????
     182:	00 00       	nop
     184:	80 3f       	cpi	r24, 0xF0	; 240

00000186 <__trampolines_end>:
     186:	00 e0       	ldi	r16, 0x00	; 0
     188:	f8 fc       	.word	0xfcf8	; ????
     18a:	fe 1e       	adc	r15, r30
     18c:	07 07       	cpc	r16, r23
     18e:	07 07       	cpc	r16, r23
     190:	1e fe       	.word	0xfe1e	; ????
     192:	fc f8       	.word	0xf8fc	; ????
     194:	f0 00       	.word	0x00f0	; ????
     196:	00 07       	cpc	r16, r16
     198:	0f 3f       	cpi	r16, 0xFF	; 255
     19a:	3f 7c       	andi	r19, 0xCF	; 207
     19c:	70 70       	andi	r23, 0x00	; 0
     19e:	70 70       	andi	r23, 0x00	; 0
     1a0:	7c 3f       	cpi	r23, 0xFC	; 252
     1a2:	1f 1f       	adc	r17, r31
     1a4:	07 00       	.word	0x0007	; ????
     1a6:	00 00       	nop
     1a8:	00 06       	cpc	r0, r16
     1aa:	07 07       	cpc	r16, r23
     1ac:	ff ff       	.word	0xffff	; ????
     1ae:	ff ff       	.word	0xffff	; ????
	...
     1bc:	7f 7f       	andi	r23, 0xFF	; 255
     1be:	7f 7f       	andi	r23, 0xFF	; 255
     1c0:	00 00       	nop
     1c2:	00 00       	nop
     1c4:	00 00       	nop
     1c6:	00 38       	cpi	r16, 0x80	; 128
     1c8:	3c 3e       	cpi	r19, 0xEC	; 236
     1ca:	3e 0f       	add	r19, r30
     1cc:	07 07       	cpc	r16, r23
     1ce:	07 cf       	rjmp	.-498    	; 0xffffffde <__eeprom_end+0xff7effde>
     1d0:	ff fe       	.word	0xfeff	; ????
     1d2:	fe 38       	cpi	r31, 0x8E	; 142
     1d4:	00 00       	nop
     1d6:	00 40       	sbci	r16, 0x00	; 0
     1d8:	40 60       	ori	r20, 0x00	; 0
     1da:	70 78       	andi	r23, 0x80	; 128
     1dc:	7c 7e       	andi	r23, 0xEC	; 236
     1de:	7f 77       	andi	r23, 0x7F	; 127
     1e0:	73 71       	andi	r23, 0x13	; 19
     1e2:	70 70       	andi	r23, 0x00	; 0
     1e4:	00 00       	nop
     1e6:	00 18       	sub	r0, r0
     1e8:	1c 1e       	adc	r1, r28
     1ea:	1e 0f       	add	r17, r30
     1ec:	c7 c7       	rjmp	.+3982   	; 0x117c <_ZN7Display6analogEhhhh+0x344>
     1ee:	e7 ff       	sbrs	r30, 7
     1f0:	fe be       	out	0x3e, r15	; 62
     1f2:	9c 00       	.word	0x009c	; ????
     1f4:	00 00       	nop
     1f6:	00 0c       	add	r0, r0
     1f8:	1c 3c       	cpi	r17, 0xCC	; 204
     1fa:	3c 78       	andi	r19, 0x8C	; 140
     1fc:	70 70       	andi	r23, 0x00	; 0
     1fe:	70 79       	andi	r23, 0x90	; 144
     200:	7f 3f       	cpi	r23, 0xFF	; 255
     202:	1f 0f       	add	r17, r31
     204:	00 00       	nop
     206:	00 00       	nop
     208:	80 c0       	rjmp	.+256    	; 0x30a <_ZL7font5x8+0x44>
     20a:	e0 70       	andi	r30, 0x00	; 0
     20c:	38 1c       	adc	r3, r8
     20e:	1e ff       	.word	0xff1e	; ????
     210:	ff ff       	.word	0xffff	; ????
     212:	ff 00       	.word	0x00ff	; ????
     214:	00 00       	nop
     216:	06 07       	cpc	r16, r22
     218:	07 07       	cpc	r16, r23
     21a:	06 06       	cpc	r0, r22
     21c:	06 06       	cpc	r0, r22
     21e:	06 7f       	andi	r16, 0xF6	; 246
     220:	7f 7f       	andi	r23, 0xFF	; 255
     222:	7f 06       	cpc	r7, r31
     224:	06 00       	.word	0x0006	; ????
     226:	00 00       	nop
     228:	00 00       	nop
     22a:	f0 ff       	sbrs	r31, 0
     22c:	ff ff       	.word	0xffff	; ????
     22e:	e7 e7       	ldi	r30, 0x77	; 119
     230:	e7 e7       	ldi	r30, 0x77	; 119
     232:	c7 87       	std	Z+15, r28	; 0x0f
     234:	00 00       	nop
     236:	00 00       	nop
     238:	38 78       	andi	r19, 0x88	; 136
     23a:	71 70       	andi	r23, 0x01	; 1
     23c:	70 70       	andi	r23, 0x00	; 0
     23e:	70 70       	andi	r23, 0x00	; 0
     240:	39 3f       	cpi	r19, 0xF9	; 249
     242:	3f 1f       	adc	r19, r31
     244:	0f 00       	.word	0x000f	; ????
     246:	00 80       	ld	r0, Z
     248:	e0 f0       	brcs	.+56     	; 0x282 <__trampolines_end+0xfc>
     24a:	f8 fc       	.word	0xfcf8	; ????
     24c:	7f 7f       	andi	r23, 0xFF	; 255
     24e:	6f 67       	ori	r22, 0x7F	; 127
     250:	e1 e1       	ldi	r30, 0x11	; 17
     252:	c0 80       	ld	r12, Z
     254:	00 00       	nop
     256:	00 0f       	add	r16, r16
     258:	1f 3f       	cpi	r17, 0xFF	; 255
     25a:	3f 78       	andi	r19, 0x8F	; 143
     25c:	70 70       	andi	r23, 0x00	; 0
     25e:	70 70       	andi	r23, 0x00	; 0
     260:	78 3f       	cpi	r23, 0xF8	; 248
     262:	3f 1f       	adc	r19, r31
     264:	0f 00       	.word	0x000f	; ????
     266:	00 07       	cpc	r16, r16
     268:	07 07       	cpc	r16, r23
     26a:	07 07       	cpc	r16, r23
     26c:	c7 e7       	ldi	r28, 0x77	; 119
     26e:	f7 ff       	sbrs	r31, 7
     270:	7f 3f       	cpi	r23, 0xFF	; 255
     272:	1f 07       	cpc	r17, r31
     274:	03 01       	movw	r0, r6
     276:	00 20       	and	r0, r0
     278:	38 7c       	andi	r19, 0xC8	; 200
     27a:	7e 3f       	cpi	r23, 0xFE	; 254
     27c:	0f 07       	cpc	r16, r31
     27e:	03 00       	.word	0x0003	; ????
	...
     288:	00 1c       	adc	r0, r0
     28a:	be fe       	.word	0xfebe	; ????
     28c:	ff e7       	ldi	r31, 0x7F	; 127
     28e:	c3 c3       	rjmp	.+1926   	; 0xa16 <_ZN7Display9draw_lineEhhhf+0xea>
     290:	e7 ff       	sbrs	r30, 7
     292:	fe be       	out	0x3e, r15	; 62
     294:	1c 00       	.word	0x001c	; ????
     296:	00 00       	nop
     298:	0e 3f       	cpi	r16, 0xFE	; 254
     29a:	3f 7f       	andi	r19, 0xFF	; 255
     29c:	71 60       	ori	r23, 0x01	; 1
     29e:	60 60       	ori	r22, 0x00	; 0
     2a0:	71 7f       	andi	r23, 0xF1	; 241
     2a2:	3f 3f       	cpi	r19, 0xFF	; 255
     2a4:	0f 00       	.word	0x000f	; ????
     2a6:	00 78       	andi	r16, 0x80	; 128
     2a8:	fc fe       	.word	0xfefc	; ????
     2aa:	fe 8f       	std	Y+30, r31	; 0x1e
     2ac:	07 07       	cpc	r16, r23
     2ae:	07 07       	cpc	r16, r23
     2b0:	8f fe       	.word	0xfe8f	; ????
     2b2:	fe fc       	.word	0xfcfe	; ????
     2b4:	f8 00       	.word	0x00f8	; ????
     2b6:	00 00       	nop
     2b8:	00 01       	movw	r0, r0
     2ba:	43 43       	sbci	r20, 0x33	; 51
     2bc:	73 7b       	andi	r23, 0xB3	; 179
     2be:	7f 7f       	andi	r23, 0xFF	; 255
     2c0:	1f 0f       	add	r17, r31
     2c2:	07 03       	mulsu	r16, r23
	...

000002c6 <_ZL7font5x8>:
     2c6:	00 00 5f 00 00 00 07 00 07 00 14 7f 14 7f 14 24     .._............$
     2d6:	2a 7f 2a 12 23 13 08 64 62 36 49 55 22 50 00 05     *.*.#..db6IU"P..
     2e6:	03 00 00 00 1c 22 41 00 00 41 22 1c 00 14 08 3e     ....."A..A"....>
     2f6:	08 14 08 08 3e 08 08 00 50 30 00 00 08 08 08 08     ....>...P0......
     306:	08 00 60 60 00 00 20 10 08 04 02 3e 51 49 45 3e     ..``.. ....>QIE>
     316:	00 42 7f 40 00 42 61 51 49 46 21 41 45 4b 31 18     .B.@.BaQIF!AEK1.
     326:	14 12 7f 10 27 45 45 45 39 3c 4a 49 49 30 01 71     ....'EEE9<JII0.q
     336:	09 05 03 36 49 49 49 36 06 49 49 29 1e 00 36 36     ...6III6.II)..66
     346:	00 00 00 56 36 00 00 08 14 22 41 00 14 14 14 14     ...V6...."A.....
     356:	14 00 41 22 14 08 02 01 51 09 06 32 49 79 41 3e     ..A"....Q..2IyA>
     366:	7e 11 11 11 7e 7f 49 49 49 36 3e 41 41 41 22 7f     ~...~.III6>AAA".
     376:	41 41 22 1c 7f 49 49 49 41 7f 09 09 09 01 3e 41     AA"..IIIA.....>A
     386:	49 49 7a 7f 08 08 08 7f 00 41 7f 41 00 20 40 41     IIz......A.A. @A
     396:	3f 01 7f 08 14 22 41 7f 40 40 40 40 7f 02 0c 02     ?...."A.@@@@....
     3a6:	7f 7f 04 08 10 7f 3e 41 41 41 3e 7f 09 09 09 06     ......>AAA>.....
     3b6:	3e 41 51 21 5e 7f 09 19 29 46 46 49 49 49 31 01     >AQ!^...)FFIII1.
     3c6:	01 7f 01 01 3f 40 40 40 3f 1f 20 40 20 1f 3f 40     ....?@@@?. @ .?@
     3d6:	38 40 3f 63 14 08 14 63 07 08 70 08 07 61 51 49     8@?c...c..p..aQI
     3e6:	45 43 00 7f 41 41 00 02 04 08 10 20 00 41 41 7f     EC..AA..... .AA.
     3f6:	00 04 02 01 02 04 40 40 40 40 40 00 01 02 04 00     ......@@@@@.....
     406:	20 54 54 54 78 7f 48 44 44 38 38 44 44 44 20 38      TTTx.HDD88DDD 8
     416:	44 44 48 7f 38 54 54 54 18 08 7e 09 01 02 0c 52     DDH.8TTT..~....R
     426:	52 52 3e 7f 08 04 04 78 00 44 7d 40 00 20 40 44     RR>....x.D}@. @D
     436:	3d 00 7f 10 28 44 00 00 41 7f 40 00 7c 04 18 04     =...(D..A.@.|...
     446:	78 7c 08 04 04 78 38 44 44 44 38 7c 14 14 14 08     x|...x8DDD8|....
     456:	08 14 14 18 7c 7c 08 04 04 08 48 54 54 54 20 04     ....||....HTTT .
     466:	3f 44 40 20 3c 40 40 20 7c 1c 20 40 20 1c 3c 40     ?D@ <@@ |. @ .<@
     476:	30 40 3c 44 28 10 28 44 0c 50 50 50 3c 44 64 54     0@<D(.(D.PPP<DdT
     486:	4c 44 00 08 36 41 00 00 00 7f 00 00 00 41 36 08     LD..6A.......A6.
     496:	00 10 08 08 10 08                                   ......

0000049c <__c.2161>:
     49c:	6e 61 6e 00                                         nan.

000004a0 <__c.2159>:
     4a0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     4b0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     4c0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     4d0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     4e0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     4f0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     500:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     510:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     520:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     530:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     540:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     550:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     560:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     570:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     580:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     590:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000059e <__ctors_start>:
     59e:	a1 24       	eor	r10, r1

000005a0 <__ctors_end>:
     5a0:	ce 24       	eor	r12, r14

000005a2 <__dtors_end>:
     5a2:	11 24       	eor	r1, r1
     5a4:	1f be       	out	0x3f, r1	; 63
     5a6:	cf ef       	ldi	r28, 0xFF	; 255
     5a8:	d0 e4       	ldi	r29, 0x40	; 64
     5aa:	de bf       	out	0x3e, r29	; 62
     5ac:	cd bf       	out	0x3d, r28	; 61

000005ae <__do_copy_data>:
     5ae:	13 e0       	ldi	r17, 0x03	; 3
     5b0:	a0 e0       	ldi	r26, 0x00	; 0
     5b2:	b1 e0       	ldi	r27, 0x01	; 1
     5b4:	e2 eb       	ldi	r30, 0xB2	; 178
     5b6:	fd e6       	ldi	r31, 0x6D	; 109
     5b8:	00 e0       	ldi	r16, 0x00	; 0
     5ba:	0b bf       	out	0x3b, r16	; 59
     5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <__do_copy_data+0x14>
     5be:	07 90       	elpm	r0, Z+
     5c0:	0d 92       	st	X+, r0
     5c2:	a4 32       	cpi	r26, 0x24	; 36
     5c4:	b1 07       	cpc	r27, r17
     5c6:	d9 f7       	brne	.-10     	; 0x5be <__do_copy_data+0x10>

000005c8 <__do_clear_bss>:
     5c8:	27 e0       	ldi	r18, 0x07	; 7
     5ca:	a4 e2       	ldi	r26, 0x24	; 36
     5cc:	b3 e0       	ldi	r27, 0x03	; 3
     5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <.do_clear_bss_start>

000005d0 <.do_clear_bss_loop>:
     5d0:	1d 92       	st	X+, r1

000005d2 <.do_clear_bss_start>:
     5d2:	ab 3a       	cpi	r26, 0xAB	; 171
     5d4:	b2 07       	cpc	r27, r18
     5d6:	e1 f7       	brne	.-8      	; 0x5d0 <.do_clear_bss_loop>

000005d8 <__do_global_ctors>:
     5d8:	15 e0       	ldi	r17, 0x05	; 5
     5da:	c0 ea       	ldi	r28, 0xA0	; 160
     5dc:	d5 e0       	ldi	r29, 0x05	; 5
     5de:	00 e0       	ldi	r16, 0x00	; 0
     5e0:	06 c0       	rjmp	.+12     	; 0x5ee <__do_global_ctors+0x16>
     5e2:	22 97       	sbiw	r28, 0x02	; 2
     5e4:	01 09       	sbc	r16, r1
     5e6:	fe 01       	movw	r30, r28
     5e8:	0b bf       	out	0x3b, r16	; 59
     5ea:	0e 94 18 35 	call	0x6a30	; 0x6a30 <__tablejump_elpm__>
     5ee:	ce 39       	cpi	r28, 0x9E	; 158
     5f0:	d1 07       	cpc	r29, r17
     5f2:	80 e0       	ldi	r24, 0x00	; 0
     5f4:	08 07       	cpc	r16, r24
     5f6:	a9 f7       	brne	.-22     	; 0x5e2 <__do_global_ctors+0xa>
     5f8:	0e 94 99 24 	call	0x4932	; 0x4932 <main>
     5fc:	0c 94 c8 36 	jmp	0x6d90	; 0x6d90 <__do_global_dtors>

00000600 <__bad_interrupt>:
     600:	ff cc       	rjmp	.-1538   	; 0x0 <__vectors>

00000602 <_ZN7DisplayD1Ev>:
		for (uint8_t j = 0;j<64;j++)
		{
			Displayframe[i*SSD1306_WIDTH+j]=pgm_read_byte(&Glurak[i][j]);
		}
	}
}
     602:	9c 5f       	subi	r25, 0xFC	; 252
     604:	0c 94 f6 24 	jmp	0x49ec	; 0x49ec <_ZN3I2CD1Ev>
     608:	08 95       	ret

0000060a <_ZN7Display10clearFrameEv>:
     60a:	fc 01       	movw	r30, r24
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	11 92       	st	Z+, r1
     612:	2f 5f       	subi	r18, 0xFF	; 255
     614:	3f 4f       	sbci	r19, 0xFF	; 255
     616:	21 15       	cp	r18, r1
     618:	84 e0       	ldi	r24, 0x04	; 4
     61a:	38 07       	cpc	r19, r24
     61c:	c9 f7       	brne	.-14     	; 0x610 <_ZN7Display10clearFrameEv+0x6>
     61e:	08 95       	ret

00000620 <_ZN7Display15ssd1306_commandEh>:
     620:	1f 93       	push	r17
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	16 2f       	mov	r17, r22
     628:	ec 01       	movw	r28, r24
     62a:	dc 5f       	subi	r29, 0xFC	; 252
     62c:	ce 01       	movw	r24, r28
     62e:	0e 94 f7 24 	call	0x49ee	; 0x49ee <_ZN3I2C9twi_startEv>
     632:	68 e7       	ldi	r22, 0x78	; 120
     634:	ce 01       	movw	r24, r28
     636:	0e 94 ff 24 	call	0x49fe	; 0x49fe <_ZN3I2C9twi_writeEh>
     63a:	60 e0       	ldi	r22, 0x00	; 0
     63c:	ce 01       	movw	r24, r28
     63e:	0e 94 ff 24 	call	0x49fe	; 0x49fe <_ZN3I2C9twi_writeEh>
     642:	61 2f       	mov	r22, r17
     644:	ce 01       	movw	r24, r28
     646:	0e 94 ff 24 	call	0x49fe	; 0x49fe <_ZN3I2C9twi_writeEh>
     64a:	ce 01       	movw	r24, r28
     64c:	0e 94 fb 24 	call	0x49f6	; 0x49f6 <_ZN3I2C8twi_stopEv>
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	08 95       	ret

00000658 <_ZN7Display17InitializeDisplayEv>:
     658:	cf 93       	push	r28
     65a:	df 93       	push	r29
     65c:	ec 01       	movw	r28, r24
     65e:	6e ea       	ldi	r22, 0xAE	; 174
     660:	df df       	rcall	.-66     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     662:	65 ed       	ldi	r22, 0xD5	; 213
     664:	ce 01       	movw	r24, r28
     666:	dc df       	rcall	.-72     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     668:	60 e8       	ldi	r22, 0x80	; 128
     66a:	ce 01       	movw	r24, r28
     66c:	d9 df       	rcall	.-78     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     66e:	68 ea       	ldi	r22, 0xA8	; 168
     670:	ce 01       	movw	r24, r28
     672:	d6 df       	rcall	.-84     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     674:	6f e3       	ldi	r22, 0x3F	; 63
     676:	ce 01       	movw	r24, r28
     678:	d3 df       	rcall	.-90     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     67a:	63 ed       	ldi	r22, 0xD3	; 211
     67c:	ce 01       	movw	r24, r28
     67e:	d0 df       	rcall	.-96     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	ce 01       	movw	r24, r28
     684:	cd df       	rcall	.-102    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     686:	60 e4       	ldi	r22, 0x40	; 64
     688:	ce 01       	movw	r24, r28
     68a:	ca df       	rcall	.-108    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     68c:	6d e8       	ldi	r22, 0x8D	; 141
     68e:	ce 01       	movw	r24, r28
     690:	c7 df       	rcall	.-114    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     692:	64 e1       	ldi	r22, 0x14	; 20
     694:	ce 01       	movw	r24, r28
     696:	c4 df       	rcall	.-120    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     698:	60 e2       	ldi	r22, 0x20	; 32
     69a:	ce 01       	movw	r24, r28
     69c:	c1 df       	rcall	.-126    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	ce 01       	movw	r24, r28
     6a2:	be df       	rcall	.-132    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6a4:	61 ea       	ldi	r22, 0xA1	; 161
     6a6:	ce 01       	movw	r24, r28
     6a8:	bb df       	rcall	.-138    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6aa:	68 ec       	ldi	r22, 0xC8	; 200
     6ac:	ce 01       	movw	r24, r28
     6ae:	b8 df       	rcall	.-144    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6b0:	6a ed       	ldi	r22, 0xDA	; 218
     6b2:	ce 01       	movw	r24, r28
     6b4:	b5 df       	rcall	.-150    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6b6:	62 e1       	ldi	r22, 0x12	; 18
     6b8:	ce 01       	movw	r24, r28
     6ba:	b2 df       	rcall	.-156    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6bc:	61 e8       	ldi	r22, 0x81	; 129
     6be:	ce 01       	movw	r24, r28
     6c0:	af df       	rcall	.-162    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6c2:	6f ec       	ldi	r22, 0xCF	; 207
     6c4:	ce 01       	movw	r24, r28
     6c6:	ac df       	rcall	.-168    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6c8:	69 ed       	ldi	r22, 0xD9	; 217
     6ca:	ce 01       	movw	r24, r28
     6cc:	a9 df       	rcall	.-174    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6ce:	61 ef       	ldi	r22, 0xF1	; 241
     6d0:	ce 01       	movw	r24, r28
     6d2:	a6 df       	rcall	.-180    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6d4:	6b ed       	ldi	r22, 0xDB	; 219
     6d6:	ce 01       	movw	r24, r28
     6d8:	a3 df       	rcall	.-186    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6da:	60 e4       	ldi	r22, 0x40	; 64
     6dc:	ce 01       	movw	r24, r28
     6de:	a0 df       	rcall	.-192    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6e0:	64 ea       	ldi	r22, 0xA4	; 164
     6e2:	ce 01       	movw	r24, r28
     6e4:	9d df       	rcall	.-198    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6e6:	66 ea       	ldi	r22, 0xA6	; 166
     6e8:	ce 01       	movw	r24, r28
     6ea:	9a df       	rcall	.-204    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6ec:	6f ea       	ldi	r22, 0xAF	; 175
     6ee:	ce 01       	movw	r24, r28
     6f0:	97 df       	rcall	.-210    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <_ZN7DisplayC1Ev>:
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	ec 01       	movw	r28, r24
     6fe:	9c 5f       	subi	r25, 0xFC	; 252
     700:	0e 94 f2 24 	call	0x49e4	; 0x49e4 <_ZN3I2CC1Ev>
     704:	ce 01       	movw	r24, r28
     706:	a8 df       	rcall	.-176    	; 0x658 <_ZN7Display17InitializeDisplayEv>
     708:	df 91       	pop	r29
     70a:	cf 91       	pop	r28
     70c:	08 95       	ret

0000070e <_ZN7Display6invertEh>:
     70e:	66 23       	and	r22, r22
     710:	19 f0       	breq	.+6      	; 0x718 <_ZN7Display6invertEh+0xa>
     712:	67 ea       	ldi	r22, 0xA7	; 167
     714:	85 cf       	rjmp	.-246    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     716:	08 95       	ret
     718:	66 ea       	ldi	r22, 0xA6	; 166
     71a:	82 cf       	rjmp	.-252    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     71c:	08 95       	ret

0000071e <_ZN7Display9sendFrameEv>:
     71e:	ef 92       	push	r14
     720:	ff 92       	push	r15
     722:	0f 93       	push	r16
     724:	1f 93       	push	r17
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	8c 01       	movw	r16, r24
     72c:	61 e2       	ldi	r22, 0x21	; 33
     72e:	78 df       	rcall	.-272    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     730:	60 e0       	ldi	r22, 0x00	; 0
     732:	c8 01       	movw	r24, r16
     734:	75 df       	rcall	.-278    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     736:	6f e7       	ldi	r22, 0x7F	; 127
     738:	c8 01       	movw	r24, r16
     73a:	72 df       	rcall	.-284    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     73c:	62 e2       	ldi	r22, 0x22	; 34
     73e:	c8 01       	movw	r24, r16
     740:	6f df       	rcall	.-290    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	c8 01       	movw	r24, r16
     746:	6c df       	rcall	.-296    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     748:	67 e0       	ldi	r22, 0x07	; 7
     74a:	c8 01       	movw	r24, r16
     74c:	69 df       	rcall	.-302    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     74e:	78 01       	movw	r14, r16
     750:	8c ef       	ldi	r24, 0xFC	; 252
     752:	f8 1a       	sub	r15, r24
     754:	c7 01       	movw	r24, r14
     756:	0e 94 f7 24 	call	0x49ee	; 0x49ee <_ZN3I2C9twi_startEv>
     75a:	68 e7       	ldi	r22, 0x78	; 120
     75c:	c7 01       	movw	r24, r14
     75e:	0e 94 ff 24 	call	0x49fe	; 0x49fe <_ZN3I2C9twi_writeEh>
     762:	60 e4       	ldi	r22, 0x40	; 64
     764:	c7 01       	movw	r24, r14
     766:	0e 94 ff 24 	call	0x49fe	; 0x49fe <_ZN3I2C9twi_writeEh>
     76a:	c0 e0       	ldi	r28, 0x00	; 0
     76c:	d0 e0       	ldi	r29, 0x00	; 0
     76e:	f8 01       	movw	r30, r16
     770:	61 91       	ld	r22, Z+
     772:	8f 01       	movw	r16, r30
     774:	c7 01       	movw	r24, r14
     776:	0e 94 ff 24 	call	0x49fe	; 0x49fe <_ZN3I2C9twi_writeEh>
     77a:	21 96       	adiw	r28, 0x01	; 1
     77c:	c1 15       	cp	r28, r1
     77e:	f4 e0       	ldi	r31, 0x04	; 4
     780:	df 07       	cpc	r29, r31
     782:	a9 f7       	brne	.-22     	; 0x76e <_ZN7Display9sendFrameEv+0x50>
     784:	c7 01       	movw	r24, r14
     786:	0e 94 fb 24 	call	0x49f6	; 0x49f6 <_ZN3I2C8twi_stopEv>
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	1f 91       	pop	r17
     790:	0f 91       	pop	r16
     792:	ff 90       	pop	r15
     794:	ef 90       	pop	r14
     796:	08 95       	ret

00000798 <_ZN7Display9drawPixelEhhh>:
     798:	66 23       	and	r22, r22
     79a:	bc f1       	brlt	.+110    	; 0x80a <_ZN7Display9drawPixelEhhh+0x72>
     79c:	40 34       	cpi	r20, 0x40	; 64
     79e:	a8 f5       	brcc	.+106    	; 0x80a <_ZN7Display9drawPixelEhhh+0x72>
     7a0:	21 11       	cpse	r18, r1
     7a2:	19 c0       	rjmp	.+50     	; 0x7d6 <_ZN7Display9drawPixelEhhh+0x3e>
     7a4:	e4 2f       	mov	r30, r20
     7a6:	e6 95       	lsr	r30
     7a8:	e6 95       	lsr	r30
     7aa:	e6 95       	lsr	r30
     7ac:	20 e8       	ldi	r18, 0x80	; 128
     7ae:	e2 9f       	mul	r30, r18
     7b0:	f0 01       	movw	r30, r0
     7b2:	11 24       	eor	r1, r1
     7b4:	e6 0f       	add	r30, r22
     7b6:	f1 1d       	adc	r31, r1
     7b8:	e8 0f       	add	r30, r24
     7ba:	f9 1f       	adc	r31, r25
     7bc:	47 70       	andi	r20, 0x07	; 7
     7be:	21 e0       	ldi	r18, 0x01	; 1
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	c9 01       	movw	r24, r18
     7c4:	02 c0       	rjmp	.+4      	; 0x7ca <_ZN7Display9drawPixelEhhh+0x32>
     7c6:	88 0f       	add	r24, r24
     7c8:	99 1f       	adc	r25, r25
     7ca:	4a 95       	dec	r20
     7cc:	e2 f7       	brpl	.-8      	; 0x7c6 <_ZN7Display9drawPixelEhhh+0x2e>
     7ce:	90 81       	ld	r25, Z
     7d0:	89 2b       	or	r24, r25
     7d2:	80 83       	st	Z, r24
     7d4:	08 95       	ret
     7d6:	e4 2f       	mov	r30, r20
     7d8:	e6 95       	lsr	r30
     7da:	e6 95       	lsr	r30
     7dc:	e6 95       	lsr	r30
     7de:	30 e8       	ldi	r19, 0x80	; 128
     7e0:	e3 9f       	mul	r30, r19
     7e2:	f0 01       	movw	r30, r0
     7e4:	11 24       	eor	r1, r1
     7e6:	e6 0f       	add	r30, r22
     7e8:	f1 1d       	adc	r31, r1
     7ea:	e8 0f       	add	r30, r24
     7ec:	f9 1f       	adc	r31, r25
     7ee:	47 70       	andi	r20, 0x07	; 7
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	9c 01       	movw	r18, r24
     7f6:	02 c0       	rjmp	.+4      	; 0x7fc <_ZN7Display9drawPixelEhhh+0x64>
     7f8:	22 0f       	add	r18, r18
     7fa:	33 1f       	adc	r19, r19
     7fc:	4a 95       	dec	r20
     7fe:	e2 f7       	brpl	.-8      	; 0x7f8 <_ZN7Display9drawPixelEhhh+0x60>
     800:	a9 01       	movw	r20, r18
     802:	40 95       	com	r20
     804:	80 81       	ld	r24, Z
     806:	48 23       	and	r20, r24
     808:	40 83       	st	Z, r20
     80a:	08 95       	ret

0000080c <_ZN7Display9drawVLineEhhh>:
     80c:	ff 92       	push	r15
     80e:	0f 93       	push	r16
     810:	1f 93       	push	r17
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	ec 01       	movw	r28, r24
     818:	06 2f       	mov	r16, r22
     81a:	22 23       	and	r18, r18
     81c:	59 f0       	breq	.+22     	; 0x834 <_ZN7Display9drawVLineEhhh+0x28>
     81e:	f2 2e       	mov	r15, r18
     820:	f4 0e       	add	r15, r20
     822:	14 2f       	mov	r17, r20
     824:	20 e0       	ldi	r18, 0x00	; 0
     826:	41 2f       	mov	r20, r17
     828:	60 2f       	mov	r22, r16
     82a:	ce 01       	movw	r24, r28
     82c:	b5 df       	rcall	.-150    	; 0x798 <_ZN7Display9drawPixelEhhh>
     82e:	1f 5f       	subi	r17, 0xFF	; 255
     830:	1f 11       	cpse	r17, r15
     832:	f8 cf       	rjmp	.-16     	; 0x824 <_ZN7Display9drawVLineEhhh+0x18>
     834:	df 91       	pop	r29
     836:	cf 91       	pop	r28
     838:	1f 91       	pop	r17
     83a:	0f 91       	pop	r16
     83c:	ff 90       	pop	r15
     83e:	08 95       	ret

00000840 <_ZN7Display9drawHLineEhhh>:
     840:	ff 92       	push	r15
     842:	0f 93       	push	r16
     844:	1f 93       	push	r17
     846:	cf 93       	push	r28
     848:	df 93       	push	r29
     84a:	ec 01       	movw	r28, r24
     84c:	04 2f       	mov	r16, r20
     84e:	22 23       	and	r18, r18
     850:	59 f0       	breq	.+22     	; 0x868 <_ZN7Display9drawHLineEhhh+0x28>
     852:	f2 2e       	mov	r15, r18
     854:	f6 0e       	add	r15, r22
     856:	16 2f       	mov	r17, r22
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	40 2f       	mov	r20, r16
     85c:	61 2f       	mov	r22, r17
     85e:	ce 01       	movw	r24, r28
     860:	9b df       	rcall	.-202    	; 0x798 <_ZN7Display9drawPixelEhhh>
     862:	1f 5f       	subi	r17, 0xFF	; 255
     864:	1f 11       	cpse	r17, r15
     866:	f8 cf       	rjmp	.-16     	; 0x858 <_ZN7Display9drawHLineEhhh+0x18>
     868:	df 91       	pop	r29
     86a:	cf 91       	pop	r28
     86c:	1f 91       	pop	r17
     86e:	0f 91       	pop	r16
     870:	ff 90       	pop	r15
     872:	08 95       	ret

00000874 <_ZN7Display13drawRectangleEhhhhh>:
     874:	5f 92       	push	r5
     876:	6f 92       	push	r6
     878:	7f 92       	push	r7
     87a:	8f 92       	push	r8
     87c:	9f 92       	push	r9
     87e:	af 92       	push	r10
     880:	bf 92       	push	r11
     882:	cf 92       	push	r12
     884:	df 92       	push	r13
     886:	ef 92       	push	r14
     888:	ff 92       	push	r15
     88a:	0f 93       	push	r16
     88c:	1f 93       	push	r17
     88e:	cf 93       	push	r28
     890:	df 93       	push	r29
     892:	6c 01       	movw	r12, r24
     894:	76 2e       	mov	r7, r22
     896:	84 2e       	mov	r8, r20
     898:	c2 2f       	mov	r28, r18
     89a:	a2 2e       	mov	r10, r18
     89c:	a6 1a       	sub	r10, r22
     89e:	a3 94       	inc	r10
     8a0:	d0 2f       	mov	r29, r16
     8a2:	d4 1b       	sub	r29, r20
     8a4:	ee 20       	and	r14, r14
     8a6:	59 f0       	breq	.+22     	; 0x8be <_ZN7Display13drawRectangleEhhhhh+0x4a>
     8a8:	b1 2c       	mov	r11, r1
     8aa:	1a 14       	cp	r1, r10
     8ac:	1b 04       	cpc	r1, r11
     8ae:	74 f5       	brge	.+92     	; 0x90c <_ZN7Display13drawRectangleEhhhhh+0x98>
     8b0:	e1 2c       	mov	r14, r1
     8b2:	f1 2c       	mov	r15, r1
     8b4:	0d 2f       	mov	r16, r29
     8b6:	10 e0       	ldi	r17, 0x00	; 0
     8b8:	51 2c       	mov	r5, r1
     8ba:	61 2c       	mov	r6, r1
     8bc:	22 c0       	rjmp	.+68     	; 0x902 <_ZN7Display13drawRectangleEhhhhh+0x8e>
     8be:	2a 2d       	mov	r18, r10
     8c0:	bf df       	rcall	.-130    	; 0x840 <_ZN7Display9drawHLineEhhh>
     8c2:	2a 2d       	mov	r18, r10
     8c4:	40 2f       	mov	r20, r16
     8c6:	67 2d       	mov	r22, r7
     8c8:	c6 01       	movw	r24, r12
     8ca:	ba df       	rcall	.-140    	; 0x840 <_ZN7Display9drawHLineEhhh>
     8cc:	2d 2f       	mov	r18, r29
     8ce:	48 2d       	mov	r20, r8
     8d0:	67 2d       	mov	r22, r7
     8d2:	c6 01       	movw	r24, r12
     8d4:	9b df       	rcall	.-202    	; 0x80c <_ZN7Display9drawVLineEhhh>
     8d6:	2d 2f       	mov	r18, r29
     8d8:	48 2d       	mov	r20, r8
     8da:	6c 2f       	mov	r22, r28
     8dc:	c6 01       	movw	r24, r12
     8de:	96 df       	rcall	.-212    	; 0x80c <_ZN7Display9drawVLineEhhh>
     8e0:	15 c0       	rjmp	.+42     	; 0x90c <_ZN7Display13drawRectangleEhhhhh+0x98>
     8e2:	4c 2f       	mov	r20, r28
     8e4:	48 0d       	add	r20, r8
     8e6:	20 e0       	ldi	r18, 0x00	; 0
     8e8:	69 2d       	mov	r22, r9
     8ea:	c6 01       	movw	r24, r12
     8ec:	55 df       	rcall	.-342    	; 0x798 <_ZN7Display9drawPixelEhhh>
     8ee:	21 96       	adiw	r28, 0x01	; 1
     8f0:	0c 17       	cp	r16, r28
     8f2:	1d 07       	cpc	r17, r29
     8f4:	b4 f7       	brge	.-20     	; 0x8e2 <_ZN7Display13drawRectangleEhhhhh+0x6e>
     8f6:	8f ef       	ldi	r24, 0xFF	; 255
     8f8:	e8 1a       	sub	r14, r24
     8fa:	f8 0a       	sbc	r15, r24
     8fc:	ea 14       	cp	r14, r10
     8fe:	fb 04       	cpc	r15, r11
     900:	2c f4       	brge	.+10     	; 0x90c <_ZN7Display13drawRectangleEhhhhh+0x98>
     902:	c5 2d       	mov	r28, r5
     904:	d6 2d       	mov	r29, r6
     906:	97 2c       	mov	r9, r7
     908:	9e 0c       	add	r9, r14
     90a:	eb cf       	rjmp	.-42     	; 0x8e2 <_ZN7Display13drawRectangleEhhhhh+0x6e>
     90c:	df 91       	pop	r29
     90e:	cf 91       	pop	r28
     910:	1f 91       	pop	r17
     912:	0f 91       	pop	r16
     914:	ff 90       	pop	r15
     916:	ef 90       	pop	r14
     918:	df 90       	pop	r13
     91a:	cf 90       	pop	r12
     91c:	bf 90       	pop	r11
     91e:	af 90       	pop	r10
     920:	9f 90       	pop	r9
     922:	8f 90       	pop	r8
     924:	7f 90       	pop	r7
     926:	6f 90       	pop	r6
     928:	5f 90       	pop	r5
     92a:	08 95       	ret

0000092c <_ZN7Display9draw_lineEhhhf>:
     92c:	2f 92       	push	r2
     92e:	3f 92       	push	r3
     930:	4f 92       	push	r4
     932:	5f 92       	push	r5
     934:	6f 92       	push	r6
     936:	7f 92       	push	r7
     938:	8f 92       	push	r8
     93a:	9f 92       	push	r9
     93c:	af 92       	push	r10
     93e:	bf 92       	push	r11
     940:	cf 92       	push	r12
     942:	df 92       	push	r13
     944:	ef 92       	push	r14
     946:	ff 92       	push	r15
     948:	0f 93       	push	r16
     94a:	1f 93       	push	r17
     94c:	cf 93       	push	r28
     94e:	df 93       	push	r29
     950:	cd b7       	in	r28, 0x3d	; 61
     952:	de b7       	in	r29, 0x3e	; 62
     954:	2b 97       	sbiw	r28, 0x0b	; 11
     956:	0f b6       	in	r0, 0x3f	; 63
     958:	f8 94       	cli
     95a:	de bf       	out	0x3e, r29	; 62
     95c:	0f be       	out	0x3f, r0	; 63
     95e:	cd bf       	out	0x3d, r28	; 61
     960:	1c 01       	movw	r2, r24
     962:	d6 2e       	mov	r13, r22
     964:	c4 2e       	mov	r12, r20
     966:	29 83       	std	Y+1, r18	; 0x01
     968:	22 23       	and	r18, r18
     96a:	09 f4       	brne	.+2      	; 0x96e <_ZN7Display9draw_lineEhhhf+0x42>
     96c:	68 c0       	rjmp	.+208    	; 0xa3e <_ZN7Display9draw_lineEhhhf+0x112>
     96e:	c8 01       	movw	r24, r16
     970:	b7 01       	movw	r22, r14
     972:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <cos>
     976:	2b 01       	movw	r4, r22
     978:	3c 01       	movw	r6, r24
     97a:	c8 01       	movw	r24, r16
     97c:	b7 01       	movw	r22, r14
     97e:	0e 94 0d 31 	call	0x621a	; 0x621a <sin>
     982:	4b 01       	movw	r8, r22
     984:	5c 01       	movw	r10, r24
     986:	1b 86       	std	Y+11, r1	; 0x0b
     988:	1a 86       	std	Y+10, r1	; 0x0a
     98a:	8c 2d       	mov	r24, r12
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	a0 e0       	ldi	r26, 0x00	; 0
     990:	b0 e0       	ldi	r27, 0x00	; 0
     992:	8a 83       	std	Y+2, r24	; 0x02
     994:	9b 83       	std	Y+3, r25	; 0x03
     996:	ac 83       	std	Y+4, r26	; 0x04
     998:	bd 83       	std	Y+5, r27	; 0x05
     99a:	8d 2d       	mov	r24, r13
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	a0 e0       	ldi	r26, 0x00	; 0
     9a0:	b0 e0       	ldi	r27, 0x00	; 0
     9a2:	8e 83       	std	Y+6, r24	; 0x06
     9a4:	9f 83       	std	Y+7, r25	; 0x07
     9a6:	a8 87       	std	Y+8, r26	; 0x08
     9a8:	b9 87       	std	Y+9, r27	; 0x09
     9aa:	aa 85       	ldd	r26, Y+10	; 0x0a
     9ac:	bb 85       	ldd	r27, Y+11	; 0x0b
     9ae:	bd 01       	movw	r22, r26
     9b0:	88 27       	eor	r24, r24
     9b2:	77 fd       	sbrc	r23, 7
     9b4:	80 95       	com	r24
     9b6:	98 2f       	mov	r25, r24
     9b8:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     9bc:	a5 01       	movw	r20, r10
     9be:	94 01       	movw	r18, r8
     9c0:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     9c4:	6b 01       	movw	r12, r22
     9c6:	7c 01       	movw	r14, r24
     9c8:	6a 81       	ldd	r22, Y+2	; 0x02
     9ca:	7b 81       	ldd	r23, Y+3	; 0x03
     9cc:	8c 81       	ldd	r24, Y+4	; 0x04
     9ce:	9d 81       	ldd	r25, Y+5	; 0x05
     9d0:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     9d4:	9b 01       	movw	r18, r22
     9d6:	ac 01       	movw	r20, r24
     9d8:	c7 01       	movw	r24, r14
     9da:	b6 01       	movw	r22, r12
     9dc:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
     9e0:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
     9e4:	16 2f       	mov	r17, r22
     9e6:	6a 85       	ldd	r22, Y+10	; 0x0a
     9e8:	7b 85       	ldd	r23, Y+11	; 0x0b
     9ea:	71 95       	neg	r23
     9ec:	61 95       	neg	r22
     9ee:	71 09       	sbc	r23, r1
     9f0:	88 27       	eor	r24, r24
     9f2:	77 fd       	sbrc	r23, 7
     9f4:	80 95       	com	r24
     9f6:	98 2f       	mov	r25, r24
     9f8:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     9fc:	a3 01       	movw	r20, r6
     9fe:	92 01       	movw	r18, r4
     a00:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     a04:	6b 01       	movw	r12, r22
     a06:	7c 01       	movw	r14, r24
     a08:	6e 81       	ldd	r22, Y+6	; 0x06
     a0a:	7f 81       	ldd	r23, Y+7	; 0x07
     a0c:	88 85       	ldd	r24, Y+8	; 0x08
     a0e:	99 85       	ldd	r25, Y+9	; 0x09
     a10:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     a14:	9b 01       	movw	r18, r22
     a16:	ac 01       	movw	r20, r24
     a18:	c7 01       	movw	r24, r14
     a1a:	b6 01       	movw	r22, r12
     a1c:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
     a20:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
     a24:	20 e0       	ldi	r18, 0x00	; 0
     a26:	41 2f       	mov	r20, r17
     a28:	c1 01       	movw	r24, r2
     a2a:	b6 de       	rcall	.-660    	; 0x798 <_ZN7Display9drawPixelEhhh>
     a2c:	ea 85       	ldd	r30, Y+10	; 0x0a
     a2e:	fb 85       	ldd	r31, Y+11	; 0x0b
     a30:	31 96       	adiw	r30, 0x01	; 1
     a32:	fb 87       	std	Y+11, r31	; 0x0b
     a34:	ea 87       	std	Y+10, r30	; 0x0a
     a36:	f9 81       	ldd	r31, Y+1	; 0x01
     a38:	ef 17       	cp	r30, r31
     a3a:	08 f4       	brcc	.+2      	; 0xa3e <_ZN7Display9draw_lineEhhhf+0x112>
     a3c:	b6 cf       	rjmp	.-148    	; 0x9aa <_ZN7Display9draw_lineEhhhf+0x7e>
     a3e:	2b 96       	adiw	r28, 0x0b	; 11
     a40:	0f b6       	in	r0, 0x3f	; 63
     a42:	f8 94       	cli
     a44:	de bf       	out	0x3e, r29	; 62
     a46:	0f be       	out	0x3f, r0	; 63
     a48:	cd bf       	out	0x3d, r28	; 61
     a4a:	df 91       	pop	r29
     a4c:	cf 91       	pop	r28
     a4e:	1f 91       	pop	r17
     a50:	0f 91       	pop	r16
     a52:	ff 90       	pop	r15
     a54:	ef 90       	pop	r14
     a56:	df 90       	pop	r13
     a58:	cf 90       	pop	r12
     a5a:	bf 90       	pop	r11
     a5c:	af 90       	pop	r10
     a5e:	9f 90       	pop	r9
     a60:	8f 90       	pop	r8
     a62:	7f 90       	pop	r7
     a64:	6f 90       	pop	r6
     a66:	5f 90       	pop	r5
     a68:	4f 90       	pop	r4
     a6a:	3f 90       	pop	r3
     a6c:	2f 90       	pop	r2
     a6e:	08 95       	ret

00000a70 <_ZN7Display13draw_triangleEhhhff>:
     a70:	2f 92       	push	r2
     a72:	3f 92       	push	r3
     a74:	4f 92       	push	r4
     a76:	5f 92       	push	r5
     a78:	6f 92       	push	r6
     a7a:	7f 92       	push	r7
     a7c:	8f 92       	push	r8
     a7e:	9f 92       	push	r9
     a80:	af 92       	push	r10
     a82:	bf 92       	push	r11
     a84:	cf 92       	push	r12
     a86:	df 92       	push	r13
     a88:	ef 92       	push	r14
     a8a:	ff 92       	push	r15
     a8c:	0f 93       	push	r16
     a8e:	1f 93       	push	r17
     a90:	cf 93       	push	r28
     a92:	df 93       	push	r29
     a94:	cd b7       	in	r28, 0x3d	; 61
     a96:	de b7       	in	r29, 0x3e	; 62
     a98:	60 97       	sbiw	r28, 0x10	; 16
     a9a:	0f b6       	in	r0, 0x3f	; 63
     a9c:	f8 94       	cli
     a9e:	de bf       	out	0x3e, r29	; 62
     aa0:	0f be       	out	0x3f, r0	; 63
     aa2:	cd bf       	out	0x3d, r28	; 61
     aa4:	1c 01       	movw	r2, r24
     aa6:	6f 87       	std	Y+15, r22	; 0x0f
     aa8:	4d 83       	std	Y+5, r20	; 0x05
     aaa:	29 83       	std	Y+1, r18	; 0x01
     aac:	c6 01       	movw	r24, r12
     aae:	b5 01       	movw	r22, r10
     ab0:	25 e3       	ldi	r18, 0x35	; 53
     ab2:	3a ef       	ldi	r19, 0xFA	; 250
     ab4:	4e e8       	ldi	r20, 0x8E	; 142
     ab6:	5c e3       	ldi	r21, 0x3C	; 60
     ab8:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     abc:	4b 01       	movw	r8, r22
     abe:	5c 01       	movw	r10, r24
     ac0:	25 e3       	ldi	r18, 0x35	; 53
     ac2:	3a ef       	ldi	r19, 0xFA	; 250
     ac4:	4e e8       	ldi	r20, 0x8E	; 142
     ac6:	5c e3       	ldi	r21, 0x3C	; 60
     ac8:	c8 01       	movw	r24, r16
     aca:	b7 01       	movw	r22, r14
     acc:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     ad0:	6e 83       	std	Y+6, r22	; 0x06
     ad2:	7f 83       	std	Y+7, r23	; 0x07
     ad4:	88 87       	std	Y+8, r24	; 0x08
     ad6:	99 87       	std	Y+9, r25	; 0x09
     ad8:	79 80       	ldd	r7, Y+1	; 0x01
     ada:	76 94       	lsr	r7
     adc:	85 01       	movw	r16, r10
     ade:	74 01       	movw	r14, r8
     ae0:	27 2d       	mov	r18, r7
     ae2:	4d 81       	ldd	r20, Y+5	; 0x05
     ae4:	6f 85       	ldd	r22, Y+15	; 0x0f
     ae6:	c1 01       	movw	r24, r2
     ae8:	21 df       	rcall	.-446    	; 0x92c <_ZN7Display9draw_lineEhhhf>
     aea:	2b ed       	ldi	r18, 0xDB	; 219
     aec:	3f e0       	ldi	r19, 0x0F	; 15
     aee:	49 e4       	ldi	r20, 0x49	; 73
     af0:	50 e4       	ldi	r21, 0x40	; 64
     af2:	c5 01       	movw	r24, r10
     af4:	b4 01       	movw	r22, r8
     af6:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
     afa:	7b 01       	movw	r14, r22
     afc:	8c 01       	movw	r16, r24
     afe:	27 2d       	mov	r18, r7
     b00:	4d 81       	ldd	r20, Y+5	; 0x05
     b02:	6f 85       	ldd	r22, Y+15	; 0x0f
     b04:	c1 01       	movw	r24, r2
     b06:	12 df       	rcall	.-476    	; 0x92c <_ZN7Display9draw_lineEhhhf>
     b08:	6e 81       	ldd	r22, Y+6	; 0x06
     b0a:	7f 81       	ldd	r23, Y+7	; 0x07
     b0c:	88 85       	ldd	r24, Y+8	; 0x08
     b0e:	99 85       	ldd	r25, Y+9	; 0x09
     b10:	0e 94 16 31 	call	0x622c	; 0x622c <tan>
     b14:	6b 01       	movw	r12, r22
     b16:	7c 01       	movw	r14, r24
     b18:	67 2d       	mov	r22, r7
     b1a:	70 e0       	ldi	r23, 0x00	; 0
     b1c:	80 e0       	ldi	r24, 0x00	; 0
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     b24:	a7 01       	movw	r20, r14
     b26:	96 01       	movw	r18, r12
     b28:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     b2c:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
     b30:	68 8b       	std	Y+16, r22	; 0x10
     b32:	2b ed       	ldi	r18, 0xDB	; 219
     b34:	3f e0       	ldi	r19, 0x0F	; 15
     b36:	49 ec       	ldi	r20, 0xC9	; 201
     b38:	5f e3       	ldi	r21, 0x3F	; 63
     b3a:	c5 01       	movw	r24, r10
     b3c:	b4 01       	movw	r22, r8
     b3e:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
     b42:	6a 87       	std	Y+10, r22	; 0x0a
     b44:	7b 87       	std	Y+11, r23	; 0x0b
     b46:	8c 87       	std	Y+12, r24	; 0x0c
     b48:	9d 87       	std	Y+13, r25	; 0x0d
     b4a:	7b 01       	movw	r14, r22
     b4c:	8c 01       	movw	r16, r24
     b4e:	28 89       	ldd	r18, Y+16	; 0x10
     b50:	4d 81       	ldd	r20, Y+5	; 0x05
     b52:	6f 85       	ldd	r22, Y+15	; 0x0f
     b54:	c1 01       	movw	r24, r2
     b56:	ea de       	rcall	.-556    	; 0x92c <_ZN7Display9draw_lineEhhhf>
     b58:	6e 81       	ldd	r22, Y+6	; 0x06
     b5a:	7f 81       	ldd	r23, Y+7	; 0x07
     b5c:	88 85       	ldd	r24, Y+8	; 0x08
     b5e:	99 85       	ldd	r25, Y+9	; 0x09
     b60:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <cos>
     b64:	6b 01       	movw	r12, r22
     b66:	7c 01       	movw	r14, r24
     b68:	29 81       	ldd	r18, Y+1	; 0x01
     b6a:	62 2f       	mov	r22, r18
     b6c:	70 e0       	ldi	r23, 0x00	; 0
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     b76:	2b 01       	movw	r4, r22
     b78:	3c 01       	movw	r6, r24
     b7a:	a7 01       	movw	r20, r14
     b7c:	96 01       	movw	r18, r12
     b7e:	c7 01       	movw	r24, r14
     b80:	b6 01       	movw	r22, r12
     b82:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
     b86:	9b 01       	movw	r18, r22
     b88:	ac 01       	movw	r20, r24
     b8a:	c3 01       	movw	r24, r6
     b8c:	b2 01       	movw	r22, r4
     b8e:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
     b92:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
     b96:	6e 87       	std	Y+14, r22	; 0x0e
     b98:	e8 89       	ldd	r30, Y+16	; 0x10
     b9a:	6e 2f       	mov	r22, r30
     b9c:	70 e0       	ldi	r23, 0x00	; 0
     b9e:	80 e0       	ldi	r24, 0x00	; 0
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     ba6:	69 83       	std	Y+1, r22	; 0x01
     ba8:	7a 83       	std	Y+2, r23	; 0x02
     baa:	8b 83       	std	Y+3, r24	; 0x03
     bac:	9c 83       	std	Y+4, r25	; 0x04
     bae:	6a 85       	ldd	r22, Y+10	; 0x0a
     bb0:	7b 85       	ldd	r23, Y+11	; 0x0b
     bb2:	8c 85       	ldd	r24, Y+12	; 0x0c
     bb4:	9d 85       	ldd	r25, Y+13	; 0x0d
     bb6:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <cos>
     bba:	6b 01       	movw	r12, r22
     bbc:	7c 01       	movw	r14, r24
     bbe:	ff 85       	ldd	r31, Y+15	; 0x0f
     bc0:	6f 2f       	mov	r22, r31
     bc2:	70 e0       	ldi	r23, 0x00	; 0
     bc4:	80 e0       	ldi	r24, 0x00	; 0
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     bcc:	2b 01       	movw	r4, r22
     bce:	3c 01       	movw	r6, r24
     bd0:	a7 01       	movw	r20, r14
     bd2:	96 01       	movw	r18, r12
     bd4:	69 81       	ldd	r22, Y+1	; 0x01
     bd6:	7a 81       	ldd	r23, Y+2	; 0x02
     bd8:	8b 81       	ldd	r24, Y+3	; 0x03
     bda:	9c 81       	ldd	r25, Y+4	; 0x04
     bdc:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     be0:	9b 01       	movw	r18, r22
     be2:	ac 01       	movw	r20, r24
     be4:	c3 01       	movw	r24, r6
     be6:	b2 01       	movw	r22, r4
     be8:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
     bec:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
     bf0:	6f 87       	std	Y+15, r22	; 0x0f
     bf2:	6a 85       	ldd	r22, Y+10	; 0x0a
     bf4:	7b 85       	ldd	r23, Y+11	; 0x0b
     bf6:	8c 85       	ldd	r24, Y+12	; 0x0c
     bf8:	9d 85       	ldd	r25, Y+13	; 0x0d
     bfa:	0e 94 0d 31 	call	0x621a	; 0x621a <sin>
     bfe:	6b 01       	movw	r12, r22
     c00:	7c 01       	movw	r14, r24
     c02:	2d 81       	ldd	r18, Y+5	; 0x05
     c04:	62 2f       	mov	r22, r18
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	80 e0       	ldi	r24, 0x00	; 0
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     c10:	2b 01       	movw	r4, r22
     c12:	3c 01       	movw	r6, r24
     c14:	a7 01       	movw	r20, r14
     c16:	96 01       	movw	r18, r12
     c18:	69 81       	ldd	r22, Y+1	; 0x01
     c1a:	7a 81       	ldd	r23, Y+2	; 0x02
     c1c:	8b 81       	ldd	r24, Y+3	; 0x03
     c1e:	9c 81       	ldd	r25, Y+4	; 0x04
     c20:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     c24:	9b 01       	movw	r18, r22
     c26:	ac 01       	movw	r20, r24
     c28:	c3 01       	movw	r24, r6
     c2a:	b2 01       	movw	r22, r4
     c2c:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
     c30:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
     c34:	d6 2e       	mov	r13, r22
     c36:	a5 01       	movw	r20, r10
     c38:	94 01       	movw	r18, r8
     c3a:	6e 81       	ldd	r22, Y+6	; 0x06
     c3c:	7f 81       	ldd	r23, Y+7	; 0x07
     c3e:	88 85       	ldd	r24, Y+8	; 0x08
     c40:	99 85       	ldd	r25, Y+9	; 0x09
     c42:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
     c46:	7b 01       	movw	r14, r22
     c48:	8c 01       	movw	r16, r24
     c4a:	2e 85       	ldd	r18, Y+14	; 0x0e
     c4c:	4d 2d       	mov	r20, r13
     c4e:	6f 85       	ldd	r22, Y+15	; 0x0f
     c50:	c1 01       	movw	r24, r2
     c52:	6c de       	rcall	.-808    	; 0x92c <_ZN7Display9draw_lineEhhhf>
     c54:	2e 81       	ldd	r18, Y+6	; 0x06
     c56:	3f 81       	ldd	r19, Y+7	; 0x07
     c58:	48 85       	ldd	r20, Y+8	; 0x08
     c5a:	59 85       	ldd	r21, Y+9	; 0x09
     c5c:	c5 01       	movw	r24, r10
     c5e:	b4 01       	movw	r22, r8
     c60:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
     c64:	2b ed       	ldi	r18, 0xDB	; 219
     c66:	3f e0       	ldi	r19, 0x0F	; 15
     c68:	49 e4       	ldi	r20, 0x49	; 73
     c6a:	50 e4       	ldi	r21, 0x40	; 64
     c6c:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
     c70:	7b 01       	movw	r14, r22
     c72:	8c 01       	movw	r16, r24
     c74:	2e 85       	ldd	r18, Y+14	; 0x0e
     c76:	4d 2d       	mov	r20, r13
     c78:	6f 85       	ldd	r22, Y+15	; 0x0f
     c7a:	c1 01       	movw	r24, r2
     c7c:	57 de       	rcall	.-850    	; 0x92c <_ZN7Display9draw_lineEhhhf>
     c7e:	60 96       	adiw	r28, 0x10	; 16
     c80:	0f b6       	in	r0, 0x3f	; 63
     c82:	f8 94       	cli
     c84:	de bf       	out	0x3e, r29	; 62
     c86:	0f be       	out	0x3f, r0	; 63
     c88:	cd bf       	out	0x3d, r28	; 61
     c8a:	df 91       	pop	r29
     c8c:	cf 91       	pop	r28
     c8e:	1f 91       	pop	r17
     c90:	0f 91       	pop	r16
     c92:	ff 90       	pop	r15
     c94:	ef 90       	pop	r14
     c96:	df 90       	pop	r13
     c98:	cf 90       	pop	r12
     c9a:	bf 90       	pop	r11
     c9c:	af 90       	pop	r10
     c9e:	9f 90       	pop	r9
     ca0:	8f 90       	pop	r8
     ca2:	7f 90       	pop	r7
     ca4:	6f 90       	pop	r6
     ca6:	5f 90       	pop	r5
     ca8:	4f 90       	pop	r4
     caa:	3f 90       	pop	r3
     cac:	2f 90       	pop	r2
     cae:	08 95       	ret

00000cb0 <_ZN7Display9draw_ASCIEhhh>:
     cb0:	0f 93       	push	r16
     cb2:	1f 93       	push	r17
     cb4:	cf 93       	push	r28
     cb6:	df 93       	push	r29
     cb8:	61 32       	cpi	r22, 0x21	; 33
     cba:	08 f4       	brcc	.+2      	; 0xcbe <_ZN7Display9draw_ASCIEhhh+0xe>
     cbc:	42 c0       	rjmp	.+132    	; 0xd42 <_ZN7Display9draw_ASCIEhhh+0x92>
     cbe:	a4 2f       	mov	r26, r20
     cc0:	b0 e0       	ldi	r27, 0x00	; 0
     cc2:	02 2f       	mov	r16, r18
     cc4:	06 95       	lsr	r16
     cc6:	06 95       	lsr	r16
     cc8:	06 95       	lsr	r16
     cca:	30 e8       	ldi	r19, 0x80	; 128
     ccc:	03 9f       	mul	r16, r19
     cce:	80 01       	movw	r16, r0
     cd0:	11 24       	eor	r1, r1
     cd2:	ed 01       	movw	r28, r26
     cd4:	c0 0f       	add	r28, r16
     cd6:	d1 1f       	adc	r29, r17
     cd8:	00 58       	subi	r16, 0x80	; 128
     cda:	1f 4f       	sbci	r17, 0xFF	; 255
     cdc:	0a 0f       	add	r16, r26
     cde:	1b 1f       	adc	r17, r27
     ce0:	61 52       	subi	r22, 0x21	; 33
     ce2:	46 2f       	mov	r20, r22
     ce4:	50 e0       	ldi	r21, 0x00	; 0
     ce6:	fa 01       	movw	r30, r20
     ce8:	ee 0f       	add	r30, r30
     cea:	ff 1f       	adc	r31, r31
     cec:	ee 0f       	add	r30, r30
     cee:	ff 1f       	adc	r31, r31
     cf0:	e4 0f       	add	r30, r20
     cf2:	f5 1f       	adc	r31, r21
     cf4:	ea 53       	subi	r30, 0x3A	; 58
     cf6:	fd 4f       	sbci	r31, 0xFD	; 253
     cf8:	dc 01       	movw	r26, r24
     cfa:	ac 0f       	add	r26, r28
     cfc:	bd 1f       	adc	r27, r29
     cfe:	ae 01       	movw	r20, r28
     d00:	05 96       	adiw	r24, 0x05	; 5
     d02:	8c 0f       	add	r24, r28
     d04:	9d 1f       	adc	r25, r29
     d06:	27 70       	andi	r18, 0x07	; 7
     d08:	64 91       	lpm	r22, Z
     d0a:	70 e0       	ldi	r23, 0x00	; 0
     d0c:	02 2e       	mov	r0, r18
     d0e:	02 c0       	rjmp	.+4      	; 0xd14 <_ZN7Display9draw_ASCIEhhh+0x64>
     d10:	66 0f       	add	r22, r22
     d12:	77 1f       	adc	r23, r23
     d14:	0a 94       	dec	r0
     d16:	e2 f7       	brpl	.-8      	; 0xd10 <_ZN7Display9draw_ASCIEhhh+0x60>
     d18:	3c 91       	ld	r19, X
     d1a:	36 2b       	or	r19, r22
     d1c:	3c 93       	st	X, r19
     d1e:	67 2f       	mov	r22, r23
     d20:	77 27       	eor	r23, r23
     d22:	61 15       	cp	r22, r1
     d24:	71 05       	cpc	r23, r1
     d26:	41 f0       	breq	.+16     	; 0xd38 <_ZN7Display9draw_ASCIEhhh+0x88>
     d28:	ed 01       	movw	r28, r26
     d2a:	c4 1b       	sub	r28, r20
     d2c:	d5 0b       	sbc	r29, r21
     d2e:	c0 0f       	add	r28, r16
     d30:	d1 1f       	adc	r29, r17
     d32:	38 81       	ld	r19, Y
     d34:	63 2b       	or	r22, r19
     d36:	68 83       	st	Y, r22
     d38:	31 96       	adiw	r30, 0x01	; 1
     d3a:	11 96       	adiw	r26, 0x01	; 1
     d3c:	a8 17       	cp	r26, r24
     d3e:	b9 07       	cpc	r27, r25
     d40:	19 f7       	brne	.-58     	; 0xd08 <_ZN7Display9draw_ASCIEhhh+0x58>
     d42:	df 91       	pop	r29
     d44:	cf 91       	pop	r28
     d46:	1f 91       	pop	r17
     d48:	0f 91       	pop	r16
     d4a:	08 95       	ret

00000d4c <_ZN7Display16draw_number16x16Ehhh>:

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
     d4c:	ef 92       	push	r14
     d4e:	ff 92       	push	r15
     d50:	0f 93       	push	r16
     d52:	1f 93       	push	r17
     d54:	cf 93       	push	r28
     d56:	df 93       	push	r29
	uint16_t symbol;
	if(number>=0 && number<10){
     d58:	6a 30       	cpi	r22, 0x0A	; 10
     d5a:	08 f0       	brcs	.+2      	; 0xd5e <_ZN7Display16draw_number16x16Ehhh+0x12>
     d5c:	66 c0       	rjmp	.+204    	; 0xe2a <_ZN7Display16draw_number16x16Ehhh+0xde>
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d5e:	50 e0       	ldi	r21, 0x00	; 0
     d60:	02 2f       	mov	r16, r18
     d62:	06 95       	lsr	r16
     d64:	06 95       	lsr	r16
     d66:	06 95       	lsr	r16
     d68:	10 e0       	ldi	r17, 0x00	; 0
     d6a:	d8 01       	movw	r26, r16
     d6c:	b6 95       	lsr	r27
     d6e:	ba 2f       	mov	r27, r26
     d70:	aa 27       	eor	r26, r26
     d72:	b7 95       	ror	r27
     d74:	a7 95       	ror	r26
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d76:	0f 5f       	subi	r16, 0xFF	; 255
     d78:	1f 4f       	sbci	r17, 0xFF	; 255
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     d7a:	16 95       	lsr	r17
     d7c:	10 2f       	mov	r17, r16
     d7e:	00 27       	eor	r16, r16
     d80:	17 95       	ror	r17
     d82:	07 95       	ror	r16
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d84:	7d 01       	movw	r14, r26
     d86:	30 e8       	ldi	r19, 0x80	; 128
     d88:	e3 0e       	add	r14, r19
     d8a:	f1 1c       	adc	r15, r1
     d8c:	e4 0e       	add	r14, r20
     d8e:	f5 1e       	adc	r15, r21
     d90:	e8 0e       	add	r14, r24
     d92:	f9 1e       	adc	r15, r25
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     d94:	ea 01       	movw	r28, r20
     d96:	c0 0f       	add	r28, r16
     d98:	d1 1f       	adc	r29, r17
     d9a:	60 97       	sbiw	r28, 0x10	; 16
     d9c:	c8 0f       	add	r28, r24
     d9e:	d9 1f       	adc	r29, r25
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     da0:	04 0f       	add	r16, r20
     da2:	15 1f       	adc	r17, r21
     da4:	00 59       	subi	r16, 0x90	; 144
     da6:	1f 4f       	sbci	r17, 0xFF	; 255
     da8:	08 0f       	add	r16, r24
     daa:	19 1f       	adc	r17, r25
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     dac:	a4 0f       	add	r26, r20
     dae:	b5 1f       	adc	r27, r21
     db0:	a8 0f       	add	r26, r24
     db2:	b9 1f       	adc	r27, r25
     db4:	e0 e2       	ldi	r30, 0x20	; 32
     db6:	6e 9f       	mul	r22, r30
     db8:	c0 01       	movw	r24, r0
     dba:	11 24       	eor	r1, r1
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     dbc:	40 e0       	ldi	r20, 0x00	; 0
     dbe:	50 e0       	ldi	r21, 0x00	; 0
     dc0:	8a 57       	subi	r24, 0x7A	; 122
     dc2:	9e 4f       	sbci	r25, 0xFE	; 254
void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
     dc4:	27 70       	andi	r18, 0x07	; 7
     dc6:	fc 01       	movw	r30, r24
     dc8:	e4 0f       	add	r30, r20
     dca:	f5 1f       	adc	r31, r21

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
     dcc:	e4 91       	lpm	r30, Z
     dce:	f0 e0       	ldi	r31, 0x00	; 0
			symbol = symbol << y%8;
     dd0:	02 2e       	mov	r0, r18
     dd2:	02 c0       	rjmp	.+4      	; 0xdd8 <_ZN7Display16draw_number16x16Ehhh+0x8c>
     dd4:	ee 0f       	add	r30, r30
     dd6:	ff 1f       	adc	r31, r31
     dd8:	0a 94       	dec	r0
     dda:	e2 f7       	brpl	.-8      	; 0xdd4 <_ZN7Display16draw_number16x16Ehhh+0x88>
			if(i<16){
     ddc:	40 31       	cpi	r20, 0x10	; 16
     dde:	68 f4       	brcc	.+26     	; 0xdfa <_ZN7Display16draw_number16x16Ehhh+0xae>
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     de0:	3c 91       	ld	r19, X
     de2:	3e 2b       	or	r19, r30
     de4:	3c 93       	st	X, r19
				if(((symbol&0xFF00)>>8)==0){
     de6:	6f 2f       	mov	r22, r31
     de8:	77 27       	eor	r23, r23
     dea:	61 15       	cp	r22, r1
     dec:	71 05       	cpc	r23, r1
     dee:	89 f0       	breq	.+34     	; 0xe12 <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     df0:	f7 01       	movw	r30, r14
     df2:	30 81       	ld	r19, Z
     df4:	36 2b       	or	r19, r22
     df6:	30 83       	st	Z, r19
     df8:	0c c0       	rjmp	.+24     	; 0xe12 <_ZN7Display16draw_number16x16Ehhh+0xc6>
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     dfa:	38 81       	ld	r19, Y
     dfc:	3e 2b       	or	r19, r30
     dfe:	38 83       	st	Y, r19
				if(((symbol&0xFF00)>>8)==0){
     e00:	6f 2f       	mov	r22, r31
     e02:	77 27       	eor	r23, r23
     e04:	61 15       	cp	r22, r1
     e06:	71 05       	cpc	r23, r1
     e08:	21 f0       	breq	.+8      	; 0xe12 <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     e0a:	f8 01       	movw	r30, r16
     e0c:	30 81       	ld	r19, Z
     e0e:	36 2b       	or	r19, r22
     e10:	30 83       	st	Z, r19
     e12:	4f 5f       	subi	r20, 0xFF	; 255
     e14:	5f 4f       	sbci	r21, 0xFF	; 255
     e16:	ff ef       	ldi	r31, 0xFF	; 255
     e18:	ef 1a       	sub	r14, r31
     e1a:	ff 0a       	sbc	r15, r31
     e1c:	21 96       	adiw	r28, 0x01	; 1
     e1e:	0f 5f       	subi	r16, 0xFF	; 255
     e20:	1f 4f       	sbci	r17, 0xFF	; 255
     e22:	11 96       	adiw	r26, 0x01	; 1
}

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
     e24:	40 32       	cpi	r20, 0x20	; 32
     e26:	51 05       	cpc	r21, r1
     e28:	71 f6       	brne	.-100    	; 0xdc6 <_ZN7Display16draw_number16x16Ehhh+0x7a>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
				}
			}
		}
	}
}
     e2a:	df 91       	pop	r29
     e2c:	cf 91       	pop	r28
     e2e:	1f 91       	pop	r17
     e30:	0f 91       	pop	r16
     e32:	ff 90       	pop	r15
     e34:	ef 90       	pop	r14
     e36:	08 95       	ret

00000e38 <_ZN7Display6analogEhhhh>:

void Display::analog(uint8_t stunde, uint8_t minute, uint8_t sekunde, uint8_t sekanzeige){
     e38:	2f 92       	push	r2
     e3a:	3f 92       	push	r3
     e3c:	4f 92       	push	r4
     e3e:	5f 92       	push	r5
     e40:	6f 92       	push	r6
     e42:	7f 92       	push	r7
     e44:	8f 92       	push	r8
     e46:	9f 92       	push	r9
     e48:	af 92       	push	r10
     e4a:	bf 92       	push	r11
     e4c:	cf 92       	push	r12
     e4e:	df 92       	push	r13
     e50:	ef 92       	push	r14
     e52:	ff 92       	push	r15
     e54:	0f 93       	push	r16
     e56:	1f 93       	push	r17
     e58:	cf 93       	push	r28
     e5a:	df 93       	push	r29
     e5c:	cd b7       	in	r28, 0x3d	; 61
     e5e:	de b7       	in	r29, 0x3e	; 62
     e60:	27 97       	sbiw	r28, 0x07	; 7
     e62:	0f b6       	in	r0, 0x3f	; 63
     e64:	f8 94       	cli
     e66:	de bf       	out	0x3e, r29	; 62
     e68:	0f be       	out	0x3f, r0	; 63
     e6a:	cd bf       	out	0x3d, r28	; 61
     e6c:	9f 83       	std	Y+7, r25	; 0x07
     e6e:	8e 83       	std	Y+6, r24	; 0x06
     e70:	6d 83       	std	Y+5, r22	; 0x05
     e72:	34 2e       	mov	r3, r20
	uint8_t Px=32-1;
	uint8_t Py=32-1;
	uint8_t x=0,y=0;
	float winkel=0;
	
	if (sekanzeige)
     e74:	00 23       	and	r16, r16
     e76:	09 f4       	brne	.+2      	; 0xe7a <_ZN7Display6analogEhhhh+0x42>
     e78:	26 c1       	rjmp	.+588    	; 0x10c6 <_ZN7Display6analogEhhhh+0x28e>
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
     e7a:	62 2f       	mov	r22, r18
     e7c:	70 e0       	ldi	r23, 0x00	; 0
     e7e:	80 e0       	ldi	r24, 0x00	; 0
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     e86:	20 e0       	ldi	r18, 0x00	; 0
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	40 ec       	ldi	r20, 0xC0	; 192
     e8c:	50 e4       	ldi	r21, 0x40	; 64
     e8e:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     e92:	2b ed       	ldi	r18, 0xDB	; 219
     e94:	3f e0       	ldi	r19, 0x0F	; 15
     e96:	49 e4       	ldi	r20, 0x49	; 73
     e98:	50 e4       	ldi	r21, 0x40	; 64
     e9a:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     e9e:	20 e0       	ldi	r18, 0x00	; 0
     ea0:	30 e0       	ldi	r19, 0x00	; 0
     ea2:	44 e3       	ldi	r20, 0x34	; 52
     ea4:	53 e4       	ldi	r21, 0x43	; 67
     ea6:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
     eaa:	2b ed       	ldi	r18, 0xDB	; 219
     eac:	3f e0       	ldi	r19, 0x0F	; 15
     eae:	49 ec       	ldi	r20, 0xC9	; 201
     eb0:	5f e3       	ldi	r21, 0x3F	; 63
     eb2:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
     eb6:	6b 01       	movw	r12, r22
     eb8:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     eba:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <cos>
     ebe:	2b 01       	movw	r4, r22
     ec0:	3c 01       	movw	r6, r24
			y=(uint8_t) i*sin(winkel)+Py;
     ec2:	c7 01       	movw	r24, r14
     ec4:	b6 01       	movw	r22, r12
     ec6:	0e 94 0d 31 	call	0x621a	; 0x621a <sin>
     eca:	4b 01       	movw	r8, r22
     ecc:	5c 01       	movw	r10, r24
     ece:	00 e0       	ldi	r16, 0x00	; 0
     ed0:	10 e0       	ldi	r17, 0x00	; 0
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     ed2:	b8 01       	movw	r22, r16
     ed4:	88 27       	eor	r24, r24
     ed6:	77 fd       	sbrc	r23, 7
     ed8:	80 95       	com	r24
     eda:	98 2f       	mov	r25, r24
     edc:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     ee0:	6b 01       	movw	r12, r22
     ee2:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     ee4:	a5 01       	movw	r20, r10
     ee6:	94 01       	movw	r18, r8
     ee8:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     eec:	20 e0       	ldi	r18, 0x00	; 0
     eee:	30 e0       	ldi	r19, 0x00	; 0
     ef0:	48 ef       	ldi	r20, 0xF8	; 248
     ef2:	51 e4       	ldi	r21, 0x41	; 65
     ef4:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
     ef8:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
     efc:	26 2e       	mov	r2, r22
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     efe:	a3 01       	movw	r20, r6
     f00:	92 01       	movw	r18, r4
     f02:	c7 01       	movw	r24, r14
     f04:	b6 01       	movw	r22, r12
     f06:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     f0a:	20 e0       	ldi	r18, 0x00	; 0
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	48 ef       	ldi	r20, 0xF8	; 248
     f10:	51 e4       	ldi	r21, 0x41	; 65
     f12:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
     f16:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     f1a:	20 e0       	ldi	r18, 0x00	; 0
     f1c:	42 2d       	mov	r20, r2
     f1e:	8e 81       	ldd	r24, Y+6	; 0x06
     f20:	9f 81       	ldd	r25, Y+7	; 0x07
     f22:	3a dc       	rcall	.-1932   	; 0x798 <_ZN7Display9drawPixelEhhh>
     f24:	0f 5f       	subi	r16, 0xFF	; 255
     f26:	1f 4f       	sbci	r17, 0xFF	; 255
	float winkel=0;
	
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
     f28:	09 31       	cpi	r16, 0x19	; 25
     f2a:	11 05       	cpc	r17, r1
     f2c:	91 f6       	brne	.-92     	; 0xed2 <_ZN7Display6analogEhhhh+0x9a>
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
     f2e:	63 2d       	mov	r22, r3
     f30:	70 e0       	ldi	r23, 0x00	; 0
     f32:	80 e0       	ldi	r24, 0x00	; 0
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     f3a:	69 83       	std	Y+1, r22	; 0x01
     f3c:	7a 83       	std	Y+2, r23	; 0x02
     f3e:	8b 83       	std	Y+3, r24	; 0x03
     f40:	9c 83       	std	Y+4, r25	; 0x04
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	40 ec       	ldi	r20, 0xC0	; 192
     f48:	50 e4       	ldi	r21, 0x40	; 64
     f4a:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     f4e:	2b ed       	ldi	r18, 0xDB	; 219
     f50:	3f e0       	ldi	r19, 0x0F	; 15
     f52:	49 e4       	ldi	r20, 0x49	; 73
     f54:	50 e4       	ldi	r21, 0x40	; 64
     f56:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     f5a:	20 e0       	ldi	r18, 0x00	; 0
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	44 e3       	ldi	r20, 0x34	; 52
     f60:	53 e4       	ldi	r21, 0x43	; 67
     f62:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
     f66:	2b ed       	ldi	r18, 0xDB	; 219
     f68:	3f e0       	ldi	r19, 0x0F	; 15
     f6a:	49 ec       	ldi	r20, 0xC9	; 201
     f6c:	5f e3       	ldi	r21, 0x3F	; 63
     f6e:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
     f72:	6b 01       	movw	r12, r22
     f74:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     f76:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <cos>
     f7a:	4b 01       	movw	r8, r22
     f7c:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
     f7e:	c7 01       	movw	r24, r14
     f80:	b6 01       	movw	r22, r12
     f82:	0e 94 0d 31 	call	0x621a	; 0x621a <sin>
     f86:	2b 01       	movw	r4, r22
     f88:	3c 01       	movw	r6, r24
     f8a:	00 e0       	ldi	r16, 0x00	; 0
     f8c:	10 e0       	ldi	r17, 0x00	; 0

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     f8e:	b8 01       	movw	r22, r16
     f90:	88 27       	eor	r24, r24
     f92:	77 fd       	sbrc	r23, 7
     f94:	80 95       	com	r24
     f96:	98 2f       	mov	r25, r24
     f98:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     f9c:	6b 01       	movw	r12, r22
     f9e:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     fa0:	a3 01       	movw	r20, r6
     fa2:	92 01       	movw	r18, r4
     fa4:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     fa8:	20 e0       	ldi	r18, 0x00	; 0
     faa:	30 e0       	ldi	r19, 0x00	; 0
     fac:	48 ef       	ldi	r20, 0xF8	; 248
     fae:	51 e4       	ldi	r21, 0x41	; 65
     fb0:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
     fb4:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
     fb8:	36 2e       	mov	r3, r22

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     fba:	a5 01       	movw	r20, r10
     fbc:	94 01       	movw	r18, r8
     fbe:	c7 01       	movw	r24, r14
     fc0:	b6 01       	movw	r22, r12
     fc2:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
     fc6:	20 e0       	ldi	r18, 0x00	; 0
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	48 ef       	ldi	r20, 0xF8	; 248
     fcc:	51 e4       	ldi	r21, 0x41	; 65
     fce:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
     fd2:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     fd6:	20 e0       	ldi	r18, 0x00	; 0
     fd8:	43 2d       	mov	r20, r3
     fda:	8e 81       	ldd	r24, Y+6	; 0x06
     fdc:	9f 81       	ldd	r25, Y+7	; 0x07
     fde:	dc db       	rcall	.-2120   	; 0x798 <_ZN7Display9drawPixelEhhh>
     fe0:	0f 5f       	subi	r16, 0xFF	; 255
     fe2:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
     fe4:	05 31       	cpi	r16, 0x15	; 21
     fe6:	11 05       	cpc	r17, r1
     fe8:	91 f6       	brne	.-92     	; 0xf8e <_ZN7Display6analogEhhhh+0x156>
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
     fea:	2d 81       	ldd	r18, Y+5	; 0x05
     fec:	62 2f       	mov	r22, r18
     fee:	70 e0       	ldi	r23, 0x00	; 0
     ff0:	80 e0       	ldi	r24, 0x00	; 0
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
     ff8:	20 e0       	ldi	r18, 0x00	; 0
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	40 ef       	ldi	r20, 0xF0	; 240
     ffe:	51 e4       	ldi	r21, 0x41	; 65
    1000:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    1004:	6b 01       	movw	r12, r22
    1006:	7c 01       	movw	r14, r24
    1008:	20 e0       	ldi	r18, 0x00	; 0
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	40 e0       	ldi	r20, 0x00	; 0
    100e:	5f e3       	ldi	r21, 0x3F	; 63
    1010:	69 81       	ldd	r22, Y+1	; 0x01
    1012:	7a 81       	ldd	r23, Y+2	; 0x02
    1014:	8b 81       	ldd	r24, Y+3	; 0x03
    1016:	9c 81       	ldd	r25, Y+4	; 0x04
    1018:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    101c:	9b 01       	movw	r18, r22
    101e:	ac 01       	movw	r20, r24
    1020:	c7 01       	movw	r24, r14
    1022:	b6 01       	movw	r22, r12
    1024:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    1028:	2b ed       	ldi	r18, 0xDB	; 219
    102a:	3f e0       	ldi	r19, 0x0F	; 15
    102c:	49 e4       	ldi	r20, 0x49	; 73
    102e:	50 e4       	ldi	r21, 0x40	; 64
    1030:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    1034:	20 e0       	ldi	r18, 0x00	; 0
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	44 e3       	ldi	r20, 0x34	; 52
    103a:	53 e4       	ldi	r21, 0x43	; 67
    103c:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
    1040:	2b ed       	ldi	r18, 0xDB	; 219
    1042:	3f e0       	ldi	r19, 0x0F	; 15
    1044:	49 ec       	ldi	r20, 0xC9	; 201
    1046:	5f e3       	ldi	r21, 0x3F	; 63
    1048:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
    104c:	6b 01       	movw	r12, r22
    104e:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
    1050:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <cos>
    1054:	2b 01       	movw	r4, r22
    1056:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
    1058:	c7 01       	movw	r24, r14
    105a:	b6 01       	movw	r22, r12
    105c:	0e 94 0d 31 	call	0x621a	; 0x621a <sin>
    1060:	4b 01       	movw	r8, r22
    1062:	5c 01       	movw	r10, r24
    1064:	00 e0       	ldi	r16, 0x00	; 0
    1066:	10 e0       	ldi	r17, 0x00	; 0

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    1068:	b8 01       	movw	r22, r16
    106a:	88 27       	eor	r24, r24
    106c:	77 fd       	sbrc	r23, 7
    106e:	80 95       	com	r24
    1070:	98 2f       	mov	r25, r24
    1072:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
    1076:	6b 01       	movw	r12, r22
    1078:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    107a:	a5 01       	movw	r20, r10
    107c:	94 01       	movw	r18, r8
    107e:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    1082:	20 e0       	ldi	r18, 0x00	; 0
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	48 ef       	ldi	r20, 0xF8	; 248
    1088:	51 e4       	ldi	r21, 0x41	; 65
    108a:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    108e:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
    1092:	36 2e       	mov	r3, r22

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    1094:	a3 01       	movw	r20, r6
    1096:	92 01       	movw	r18, r4
    1098:	c7 01       	movw	r24, r14
    109a:	b6 01       	movw	r22, r12
    109c:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    10a0:	20 e0       	ldi	r18, 0x00	; 0
    10a2:	30 e0       	ldi	r19, 0x00	; 0
    10a4:	48 ef       	ldi	r20, 0xF8	; 248
    10a6:	51 e4       	ldi	r21, 0x41	; 65
    10a8:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    10ac:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    10b0:	20 e0       	ldi	r18, 0x00	; 0
    10b2:	43 2d       	mov	r20, r3
    10b4:	8e 81       	ldd	r24, Y+6	; 0x06
    10b6:	9f 81       	ldd	r25, Y+7	; 0x07
    10b8:	6f db       	rcall	.-2338   	; 0x798 <_ZN7Display9drawPixelEhhh>
    10ba:	0f 5f       	subi	r16, 0xFF	; 255
    10bc:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    10be:	0d 30       	cpi	r16, 0x0D	; 13
    10c0:	11 05       	cpc	r17, r1
    10c2:	91 f6       	brne	.-92     	; 0x1068 <_ZN7Display6analogEhhhh+0x230>
    10c4:	cb c0       	rjmp	.+406    	; 0x125c <_ZN7Display6analogEhhhh+0x424>
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
    10c6:	64 2f       	mov	r22, r20
    10c8:	70 e0       	ldi	r23, 0x00	; 0
    10ca:	80 e0       	ldi	r24, 0x00	; 0
    10cc:	90 e0       	ldi	r25, 0x00	; 0
    10ce:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
    10d2:	69 83       	std	Y+1, r22	; 0x01
    10d4:	7a 83       	std	Y+2, r23	; 0x02
    10d6:	8b 83       	std	Y+3, r24	; 0x03
    10d8:	9c 83       	std	Y+4, r25	; 0x04
    10da:	20 e0       	ldi	r18, 0x00	; 0
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	40 ec       	ldi	r20, 0xC0	; 192
    10e0:	50 e4       	ldi	r21, 0x40	; 64
    10e2:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    10e6:	2b ed       	ldi	r18, 0xDB	; 219
    10e8:	3f e0       	ldi	r19, 0x0F	; 15
    10ea:	49 e4       	ldi	r20, 0x49	; 73
    10ec:	50 e4       	ldi	r21, 0x40	; 64
    10ee:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	44 e3       	ldi	r20, 0x34	; 52
    10f8:	53 e4       	ldi	r21, 0x43	; 67
    10fa:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
    10fe:	2b ed       	ldi	r18, 0xDB	; 219
    1100:	3f e0       	ldi	r19, 0x0F	; 15
    1102:	49 ec       	ldi	r20, 0xC9	; 201
    1104:	5f e3       	ldi	r21, 0x3F	; 63
    1106:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
    110a:	6b 01       	movw	r12, r22
    110c:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
    110e:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <cos>
    1112:	4b 01       	movw	r8, r22
    1114:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
    1116:	c7 01       	movw	r24, r14
    1118:	b6 01       	movw	r22, r12
    111a:	0e 94 0d 31 	call	0x621a	; 0x621a <sin>
    111e:	2b 01       	movw	r4, r22
    1120:	3c 01       	movw	r6, r24
    1122:	00 e0       	ldi	r16, 0x00	; 0
    1124:	10 e0       	ldi	r17, 0x00	; 0
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    1126:	b8 01       	movw	r22, r16
    1128:	88 27       	eor	r24, r24
    112a:	77 fd       	sbrc	r23, 7
    112c:	80 95       	com	r24
    112e:	98 2f       	mov	r25, r24
    1130:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
    1134:	6b 01       	movw	r12, r22
    1136:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
    1138:	a3 01       	movw	r20, r6
    113a:	92 01       	movw	r18, r4
    113c:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    1140:	20 e0       	ldi	r18, 0x00	; 0
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	48 ef       	ldi	r20, 0xF8	; 248
    1146:	51 e4       	ldi	r21, 0x41	; 65
    1148:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    114c:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
    1150:	36 2e       	mov	r3, r22
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    1152:	a5 01       	movw	r20, r10
    1154:	94 01       	movw	r18, r8
    1156:	c7 01       	movw	r24, r14
    1158:	b6 01       	movw	r22, r12
    115a:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    115e:	20 e0       	ldi	r18, 0x00	; 0
    1160:	30 e0       	ldi	r19, 0x00	; 0
    1162:	48 ef       	ldi	r20, 0xF8	; 248
    1164:	51 e4       	ldi	r21, 0x41	; 65
    1166:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    116a:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
    116e:	20 e0       	ldi	r18, 0x00	; 0
    1170:	43 2d       	mov	r20, r3
    1172:	8e 81       	ldd	r24, Y+6	; 0x06
    1174:	9f 81       	ldd	r25, Y+7	; 0x07
    1176:	10 db       	rcall	.-2528   	; 0x798 <_ZN7Display9drawPixelEhhh>
    1178:	0f 5f       	subi	r16, 0xFF	; 255
    117a:	1f 4f       	sbci	r17, 0xFF	; 255
		}
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
    117c:	09 31       	cpi	r16, 0x19	; 25
    117e:	11 05       	cpc	r17, r1
    1180:	91 f6       	brne	.-92     	; 0x1126 <_ZN7Display6analogEhhhh+0x2ee>
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
    1182:	ed 81       	ldd	r30, Y+5	; 0x05
    1184:	6e 2f       	mov	r22, r30
    1186:	70 e0       	ldi	r23, 0x00	; 0
    1188:	80 e0       	ldi	r24, 0x00	; 0
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
    1190:	20 e0       	ldi	r18, 0x00	; 0
    1192:	30 e0       	ldi	r19, 0x00	; 0
    1194:	40 ef       	ldi	r20, 0xF0	; 240
    1196:	51 e4       	ldi	r21, 0x41	; 65
    1198:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    119c:	6b 01       	movw	r12, r22
    119e:	7c 01       	movw	r14, r24
    11a0:	20 e0       	ldi	r18, 0x00	; 0
    11a2:	30 e0       	ldi	r19, 0x00	; 0
    11a4:	40 e0       	ldi	r20, 0x00	; 0
    11a6:	5f e3       	ldi	r21, 0x3F	; 63
    11a8:	69 81       	ldd	r22, Y+1	; 0x01
    11aa:	7a 81       	ldd	r23, Y+2	; 0x02
    11ac:	8b 81       	ldd	r24, Y+3	; 0x03
    11ae:	9c 81       	ldd	r25, Y+4	; 0x04
    11b0:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    11b4:	9b 01       	movw	r18, r22
    11b6:	ac 01       	movw	r20, r24
    11b8:	c7 01       	movw	r24, r14
    11ba:	b6 01       	movw	r22, r12
    11bc:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    11c0:	2b ed       	ldi	r18, 0xDB	; 219
    11c2:	3f e0       	ldi	r19, 0x0F	; 15
    11c4:	49 e4       	ldi	r20, 0x49	; 73
    11c6:	50 e4       	ldi	r21, 0x40	; 64
    11c8:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    11cc:	20 e0       	ldi	r18, 0x00	; 0
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	44 e3       	ldi	r20, 0x34	; 52
    11d2:	53 e4       	ldi	r21, 0x43	; 67
    11d4:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
    11d8:	2b ed       	ldi	r18, 0xDB	; 219
    11da:	3f e0       	ldi	r19, 0x0F	; 15
    11dc:	49 ec       	ldi	r20, 0xC9	; 201
    11de:	5f e3       	ldi	r21, 0x3F	; 63
    11e0:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
    11e4:	6b 01       	movw	r12, r22
    11e6:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
    11e8:	0e 94 ae 2e 	call	0x5d5c	; 0x5d5c <cos>
    11ec:	2b 01       	movw	r4, r22
    11ee:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
    11f0:	c7 01       	movw	r24, r14
    11f2:	b6 01       	movw	r22, r12
    11f4:	0e 94 0d 31 	call	0x621a	; 0x621a <sin>
    11f8:	4b 01       	movw	r8, r22
    11fa:	5c 01       	movw	r10, r24
    11fc:	00 e0       	ldi	r16, 0x00	; 0
    11fe:	10 e0       	ldi	r17, 0x00	; 0

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    1200:	b8 01       	movw	r22, r16
    1202:	88 27       	eor	r24, r24
    1204:	77 fd       	sbrc	r23, 7
    1206:	80 95       	com	r24
    1208:	98 2f       	mov	r25, r24
    120a:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
    120e:	6b 01       	movw	r12, r22
    1210:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    1212:	a5 01       	movw	r20, r10
    1214:	94 01       	movw	r18, r8
    1216:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    121a:	20 e0       	ldi	r18, 0x00	; 0
    121c:	30 e0       	ldi	r19, 0x00	; 0
    121e:	48 ef       	ldi	r20, 0xF8	; 248
    1220:	51 e4       	ldi	r21, 0x41	; 65
    1222:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    1226:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
    122a:	36 2e       	mov	r3, r22

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    122c:	a3 01       	movw	r20, r6
    122e:	92 01       	movw	r18, r4
    1230:	c7 01       	movw	r24, r14
    1232:	b6 01       	movw	r22, r12
    1234:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    1238:	20 e0       	ldi	r18, 0x00	; 0
    123a:	30 e0       	ldi	r19, 0x00	; 0
    123c:	48 ef       	ldi	r20, 0xF8	; 248
    123e:	51 e4       	ldi	r21, 0x41	; 65
    1240:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    1244:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    1248:	20 e0       	ldi	r18, 0x00	; 0
    124a:	43 2d       	mov	r20, r3
    124c:	8e 81       	ldd	r24, Y+6	; 0x06
    124e:	9f 81       	ldd	r25, Y+7	; 0x07
    1250:	a3 da       	rcall	.-2746   	; 0x798 <_ZN7Display9drawPixelEhhh>
    1252:	0f 5f       	subi	r16, 0xFF	; 255
    1254:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    1256:	01 31       	cpi	r16, 0x11	; 17
    1258:	11 05       	cpc	r17, r1
    125a:	91 f6       	brne	.-92     	; 0x1200 <_ZN7Display6analogEhhhh+0x3c8>
		}
	}
	

	//Anzeige der Zahlen
	draw_ASCI('1',32-charsize,0);
    125c:	20 e0       	ldi	r18, 0x00	; 0
    125e:	4a e1       	ldi	r20, 0x1A	; 26
    1260:	61 e3       	ldi	r22, 0x31	; 49
    1262:	8e 81       	ldd	r24, Y+6	; 0x06
    1264:	9f 81       	ldd	r25, Y+7	; 0x07
    1266:	24 dd       	rcall	.-1464   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('2',32,0);
    1268:	20 e0       	ldi	r18, 0x00	; 0
    126a:	40 e2       	ldi	r20, 0x20	; 32
    126c:	62 e3       	ldi	r22, 0x32	; 50
    126e:	8e 81       	ldd	r24, Y+6	; 0x06
    1270:	9f 81       	ldd	r25, Y+7	; 0x07
    1272:	1e dd       	rcall	.-1476   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('3',64-charsize,4*charhighte-charhighte/2);
    1274:	2c e1       	ldi	r18, 0x1C	; 28
    1276:	4a e3       	ldi	r20, 0x3A	; 58
    1278:	63 e3       	ldi	r22, 0x33	; 51
    127a:	8e 81       	ldd	r24, Y+6	; 0x06
    127c:	9f 81       	ldd	r25, Y+7	; 0x07
    127e:	18 dd       	rcall	.-1488   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('6',32-charsize/2,7*charhighte);
    1280:	28 e3       	ldi	r18, 0x38	; 56
    1282:	4d e1       	ldi	r20, 0x1D	; 29
    1284:	66 e3       	ldi	r22, 0x36	; 54
    1286:	8e 81       	ldd	r24, Y+6	; 0x06
    1288:	9f 81       	ldd	r25, Y+7	; 0x07
    128a:	12 dd       	rcall	.-1500   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('9',0,4*charhighte-charhighte/2);
    128c:	2c e1       	ldi	r18, 0x1C	; 28
    128e:	40 e0       	ldi	r20, 0x00	; 0
    1290:	69 e3       	ldi	r22, 0x39	; 57
    1292:	8e 81       	ldd	r24, Y+6	; 0x06
    1294:	9f 81       	ldd	r25, Y+7	; 0x07
    1296:	0c dd       	rcall	.-1512   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>

	//anzeige des Rings fuer die Restlichen Stunden Zahlen
	//1
	drawPixel(26*cos((30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1298:	20 e0       	ldi	r18, 0x00	; 0
    129a:	48 e0       	ldi	r20, 0x08	; 8
    129c:	6c e2       	ldi	r22, 0x2C	; 44
    129e:	8e 81       	ldd	r24, Y+6	; 0x06
    12a0:	9f 81       	ldd	r25, Y+7	; 0x07
    12a2:	7a da       	rcall	.-2828   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//2
	drawPixel(26*cos((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    12a4:	20 e0       	ldi	r18, 0x00	; 0
    12a6:	42 e1       	ldi	r20, 0x12	; 18
    12a8:	65 e3       	ldi	r22, 0x35	; 53
    12aa:	8e 81       	ldd	r24, Y+6	; 0x06
    12ac:	9f 81       	ldd	r25, Y+7	; 0x07
    12ae:	74 da       	rcall	.-2840   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//4
	drawPixel(26*cos((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    12b0:	20 e0       	ldi	r18, 0x00	; 0
    12b2:	4c e2       	ldi	r20, 0x2C	; 44
    12b4:	65 e3       	ldi	r22, 0x35	; 53
    12b6:	8e 81       	ldd	r24, Y+6	; 0x06
    12b8:	9f 81       	ldd	r25, Y+7	; 0x07
    12ba:	6e da       	rcall	.-2852   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//5
	drawPixel(26*cos((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    12bc:	20 e0       	ldi	r18, 0x00	; 0
    12be:	45 e3       	ldi	r20, 0x35	; 53
    12c0:	6b e2       	ldi	r22, 0x2B	; 43
    12c2:	8e 81       	ldd	r24, Y+6	; 0x06
    12c4:	9f 81       	ldd	r25, Y+7	; 0x07
    12c6:	68 da       	rcall	.-2864   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//7
	drawPixel(26*cos((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    12c8:	20 e0       	ldi	r18, 0x00	; 0
    12ca:	45 e3       	ldi	r20, 0x35	; 53
    12cc:	61 e1       	ldi	r22, 0x11	; 17
    12ce:	8e 81       	ldd	r24, Y+6	; 0x06
    12d0:	9f 81       	ldd	r25, Y+7	; 0x07
    12d2:	62 da       	rcall	.-2876   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//8
	drawPixel(26*cos((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    12d4:	20 e0       	ldi	r18, 0x00	; 0
    12d6:	4c e2       	ldi	r20, 0x2C	; 44
    12d8:	68 e0       	ldi	r22, 0x08	; 8
    12da:	8e 81       	ldd	r24, Y+6	; 0x06
    12dc:	9f 81       	ldd	r25, Y+7	; 0x07
    12de:	5c da       	rcall	.-2888   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//10
	drawPixel(26*cos((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    12e0:	20 e0       	ldi	r18, 0x00	; 0
    12e2:	41 e1       	ldi	r20, 0x11	; 17
    12e4:	68 e0       	ldi	r22, 0x08	; 8
    12e6:	8e 81       	ldd	r24, Y+6	; 0x06
    12e8:	9f 81       	ldd	r25, Y+7	; 0x07
    12ea:	56 da       	rcall	.-2900   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//11
	drawPixel(26*cos((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    12ec:	20 e0       	ldi	r18, 0x00	; 0
    12ee:	48 e0       	ldi	r20, 0x08	; 8
    12f0:	62 e1       	ldi	r22, 0x12	; 18
    12f2:	8e 81       	ldd	r24, Y+6	; 0x06
    12f4:	9f 81       	ldd	r25, Y+7	; 0x07
    12f6:	50 da       	rcall	.-2912   	; 0x798 <_ZN7Display9drawPixelEhhh>
}
    12f8:	27 96       	adiw	r28, 0x07	; 7
    12fa:	0f b6       	in	r0, 0x3f	; 63
    12fc:	f8 94       	cli
    12fe:	de bf       	out	0x3e, r29	; 62
    1300:	0f be       	out	0x3f, r0	; 63
    1302:	cd bf       	out	0x3d, r28	; 61
    1304:	df 91       	pop	r29
    1306:	cf 91       	pop	r28
    1308:	1f 91       	pop	r17
    130a:	0f 91       	pop	r16
    130c:	ff 90       	pop	r15
    130e:	ef 90       	pop	r14
    1310:	df 90       	pop	r13
    1312:	cf 90       	pop	r12
    1314:	bf 90       	pop	r11
    1316:	af 90       	pop	r10
    1318:	9f 90       	pop	r9
    131a:	8f 90       	pop	r8
    131c:	7f 90       	pop	r7
    131e:	6f 90       	pop	r6
    1320:	5f 90       	pop	r5
    1322:	4f 90       	pop	r4
    1324:	3f 90       	pop	r3
    1326:	2f 90       	pop	r2
    1328:	08 95       	ret

0000132a <_Z8ADC_Readh>:
		oled.draw_pikachu();
		break;
	default:
		break;
	}
}
    132a:	ec e7       	ldi	r30, 0x7C	; 124
    132c:	f0 e0       	ldi	r31, 0x00	; 0
    132e:	90 81       	ld	r25, Z
    1330:	8f 71       	andi	r24, 0x1F	; 31
    1332:	90 7e       	andi	r25, 0xE0	; 224
    1334:	98 2b       	or	r25, r24
    1336:	90 83       	st	Z, r25
    1338:	ea e7       	ldi	r30, 0x7A	; 122
    133a:	f0 e0       	ldi	r31, 0x00	; 0
    133c:	80 81       	ld	r24, Z
    133e:	80 64       	ori	r24, 0x40	; 64
    1340:	80 83       	st	Z, r24
    1342:	80 81       	ld	r24, Z
    1344:	86 fd       	sbrc	r24, 6
    1346:	fd cf       	rjmp	.-6      	; 0x1342 <_Z8ADC_Readh+0x18>
    1348:	80 91 78 00 	lds	r24, 0x0078
    134c:	90 91 79 00 	lds	r25, 0x0079
    1350:	08 95       	ret

00001352 <_Z14Batteriestatusv>:
    1352:	cf 92       	push	r12
    1354:	df 92       	push	r13
    1356:	ef 92       	push	r14
    1358:	ff 92       	push	r15
    135a:	80 e0       	ldi	r24, 0x00	; 0
    135c:	e6 df       	rcall	.-52     	; 0x132a <_Z8ADC_Readh>
    135e:	bc 01       	movw	r22, r24
    1360:	80 e0       	ldi	r24, 0x00	; 0
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	0e 94 4a 2f 	call	0x5e94	; 0x5e94 <__floatunsisf>
    1368:	20 e0       	ldi	r18, 0x00	; 0
    136a:	30 ec       	ldi	r19, 0xC0	; 192
    136c:	4f e7       	ldi	r20, 0x7F	; 127
    136e:	54 e4       	ldi	r21, 0x44	; 68
    1370:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
    1374:	2c e5       	ldi	r18, 0x5C	; 92
    1376:	3f e8       	ldi	r19, 0x8F	; 143
    1378:	42 e5       	ldi	r20, 0x52	; 82
    137a:	50 e4       	ldi	r21, 0x40	; 64
    137c:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    1380:	2d e0       	ldi	r18, 0x0D	; 13
    1382:	31 e7       	ldi	r19, 0x71	; 113
    1384:	40 e0       	ldi	r20, 0x00	; 0
    1386:	50 e4       	ldi	r21, 0x40	; 64
    1388:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    138c:	60 93 39 03 	sts	0x0339, r22
    1390:	70 93 3a 03 	sts	0x033A, r23
    1394:	80 93 3b 03 	sts	0x033B, r24
    1398:	90 93 3c 03 	sts	0x033C, r25
    139c:	20 e0       	ldi	r18, 0x00	; 0
    139e:	30 e0       	ldi	r19, 0x00	; 0
    13a0:	40 e4       	ldi	r20, 0x40	; 64
    13a2:	50 e4       	ldi	r21, 0x40	; 64
    13a4:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
    13a8:	28 e9       	ldi	r18, 0x98	; 152
    13aa:	39 e9       	ldi	r19, 0x99	; 153
    13ac:	49 e9       	ldi	r20, 0x99	; 153
    13ae:	5f e3       	ldi	r21, 0x3F	; 63
    13b0:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
    13b4:	20 e0       	ldi	r18, 0x00	; 0
    13b6:	30 e0       	ldi	r19, 0x00	; 0
    13b8:	48 ec       	ldi	r20, 0xC8	; 200
    13ba:	52 e4       	ldi	r21, 0x42	; 66
    13bc:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    13c0:	6b 01       	movw	r12, r22
    13c2:	7c 01       	movw	r14, r24
    13c4:	20 e0       	ldi	r18, 0x00	; 0
    13c6:	30 e0       	ldi	r19, 0x00	; 0
    13c8:	40 e2       	ldi	r20, 0x20	; 32
    13ca:	51 e4       	ldi	r21, 0x41	; 65
    13cc:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    13d0:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
    13d4:	8d ec       	ldi	r24, 0xCD	; 205
    13d6:	68 9f       	mul	r22, r24
    13d8:	81 2d       	mov	r24, r1
    13da:	11 24       	eor	r1, r1
    13dc:	86 95       	lsr	r24
    13de:	86 95       	lsr	r24
    13e0:	86 95       	lsr	r24
    13e2:	88 0f       	add	r24, r24
    13e4:	98 2f       	mov	r25, r24
    13e6:	99 0f       	add	r25, r25
    13e8:	99 0f       	add	r25, r25
    13ea:	89 0f       	add	r24, r25
    13ec:	68 1b       	sub	r22, r24
    13ee:	65 30       	cpi	r22, 0x05	; 5
    13f0:	70 f0       	brcs	.+28     	; 0x140e <_Z14Batteriestatusv+0xbc>
    13f2:	c7 01       	movw	r24, r14
    13f4:	b6 01       	movw	r22, r12
    13f6:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
    13fa:	70 e0       	ldi	r23, 0x00	; 0
    13fc:	6f 5f       	subi	r22, 0xFF	; 255
    13fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1400:	88 27       	eor	r24, r24
    1402:	77 fd       	sbrc	r23, 7
    1404:	80 95       	com	r24
    1406:	98 2f       	mov	r25, r24
    1408:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
    140c:	09 c0       	rjmp	.+18     	; 0x1420 <_Z14Batteriestatusv+0xce>
    140e:	c7 01       	movw	r24, r14
    1410:	b6 01       	movw	r22, r12
    1412:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
    1416:	70 e0       	ldi	r23, 0x00	; 0
    1418:	80 e0       	ldi	r24, 0x00	; 0
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	0e 94 4a 2f 	call	0x5e94	; 0x5e94 <__floatunsisf>
    1420:	0e 94 19 2f 	call	0x5e32	; 0x5e32 <__fixsfsi>
    1424:	86 2f       	mov	r24, r22
    1426:	ff 90       	pop	r15
    1428:	ef 90       	pop	r14
    142a:	df 90       	pop	r13
    142c:	cf 90       	pop	r12
    142e:	08 95       	ret

00001430 <_Z12EEPROM_Writejh>:
    1430:	f8 94       	cli
    1432:	f9 99       	sbic	0x1f, 1	; 31
    1434:	fe cf       	rjmp	.-4      	; 0x1432 <_Z12EEPROM_Writejh+0x2>
    1436:	92 bd       	out	0x22, r25	; 34
    1438:	81 bd       	out	0x21, r24	; 33
    143a:	60 bd       	out	0x20, r22	; 32
    143c:	fa 9a       	sbi	0x1f, 2	; 31
    143e:	f9 9a       	sbi	0x1f, 1	; 31
    1440:	78 94       	sei
    1442:	08 95       	ret

00001444 <_Z11EEPROM_Readj>:
    1444:	f8 94       	cli
    1446:	f9 99       	sbic	0x1f, 1	; 31
    1448:	fe cf       	rjmp	.-4      	; 0x1446 <_Z11EEPROM_Readj+0x2>
    144a:	92 bd       	out	0x22, r25	; 34
    144c:	81 bd       	out	0x21, r24	; 33
    144e:	f8 9a       	sbi	0x1f, 0	; 31
    1450:	78 94       	sei
    1452:	80 b5       	in	r24, 0x20	; 32
    1454:	08 95       	ret

00001456 <_Z14willkommenpagev>:
    1456:	cf 92       	push	r12
    1458:	df 92       	push	r13
    145a:	ef 92       	push	r14
    145c:	ff 92       	push	r15
    145e:	0f 93       	push	r16
    1460:	1f 93       	push	r17
    1462:	cf 93       	push	r28
    1464:	df 93       	push	r29
    1466:	cd b7       	in	r28, 0x3d	; 61
    1468:	de b7       	in	r29, 0x3e	; 62
    146a:	64 97       	sbiw	r28, 0x14	; 20
    146c:	0f b6       	in	r0, 0x3f	; 63
    146e:	f8 94       	cli
    1470:	de bf       	out	0x3e, r29	; 62
    1472:	0f be       	out	0x3f, r0	; 63
    1474:	cd bf       	out	0x3d, r28	; 61
    1476:	82 e7       	ldi	r24, 0x72	; 114
    1478:	93 e0       	ldi	r25, 0x03	; 3
    147a:	c7 d8       	rcall	.-3698   	; 0x60a <_ZN7Display10clearFrameEv>
    147c:	8f e0       	ldi	r24, 0x0F	; 15
    147e:	e0 e0       	ldi	r30, 0x00	; 0
    1480:	f1 e0       	ldi	r31, 0x01	; 1
    1482:	8e 01       	movw	r16, r28
    1484:	0f 5f       	subi	r16, 0xFF	; 255
    1486:	1f 4f       	sbci	r17, 0xFF	; 255
    1488:	d8 01       	movw	r26, r16
    148a:	01 90       	ld	r0, Z+
    148c:	0d 92       	st	X+, r0
    148e:	8a 95       	dec	r24
    1490:	e1 f7       	brne	.-8      	; 0x148a <_Z14willkommenpagev+0x34>
    1492:	c0 2e       	mov	r12, r16
    1494:	d1 2e       	mov	r13, r17
    1496:	78 01       	movw	r14, r16
    1498:	10 e0       	ldi	r17, 0x00	; 0
    149a:	f7 01       	movw	r30, r14
    149c:	61 91       	ld	r22, Z+
    149e:	7f 01       	movw	r14, r30
    14a0:	20 e0       	ldi	r18, 0x00	; 0
    14a2:	41 2f       	mov	r20, r17
    14a4:	82 e7       	ldi	r24, 0x72	; 114
    14a6:	93 e0       	ldi	r25, 0x03	; 3
    14a8:	03 dc       	rcall	.-2042   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    14aa:	1a 5f       	subi	r17, 0xFA	; 250
    14ac:	14 35       	cpi	r17, 0x54	; 84
    14ae:	a9 f7       	brne	.-22     	; 0x149a <_Z14willkommenpagev+0x44>
    14b0:	8f e0       	ldi	r24, 0x0F	; 15
    14b2:	ef e0       	ldi	r30, 0x0F	; 15
    14b4:	f1 e0       	ldi	r31, 0x01	; 1
    14b6:	de 01       	movw	r26, r28
    14b8:	11 96       	adiw	r26, 0x01	; 1
    14ba:	01 90       	ld	r0, Z+
    14bc:	0d 92       	st	X+, r0
    14be:	8a 95       	dec	r24
    14c0:	e1 f7       	brne	.-8      	; 0x14ba <_Z14willkommenpagev+0x64>
    14c2:	ec 2c       	mov	r14, r12
    14c4:	fd 2c       	mov	r15, r13
    14c6:	10 e0       	ldi	r17, 0x00	; 0
    14c8:	f7 01       	movw	r30, r14
    14ca:	61 91       	ld	r22, Z+
    14cc:	7f 01       	movw	r14, r30
    14ce:	28 e0       	ldi	r18, 0x08	; 8
    14d0:	41 2f       	mov	r20, r17
    14d2:	82 e7       	ldi	r24, 0x72	; 114
    14d4:	93 e0       	ldi	r25, 0x03	; 3
    14d6:	ec db       	rcall	.-2088   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    14d8:	1a 5f       	subi	r17, 0xFA	; 250
    14da:	14 35       	cpi	r17, 0x54	; 84
    14dc:	a9 f7       	brne	.-22     	; 0x14c8 <_Z14willkommenpagev+0x72>
    14de:	80 e4       	ldi	r24, 0x40	; 64
    14e0:	8f 93       	push	r24
    14e2:	86 e0       	ldi	r24, 0x06	; 6
    14e4:	8f 93       	push	r24
    14e6:	86 e6       	ldi	r24, 0x66	; 102
    14e8:	8f 93       	push	r24
    14ea:	8f 93       	push	r24
    14ec:	8e e1       	ldi	r24, 0x1E	; 30
    14ee:	91 e0       	ldi	r25, 0x01	; 1
    14f0:	9f 93       	push	r25
    14f2:	8f 93       	push	r24
    14f4:	ce 01       	movw	r24, r28
    14f6:	01 96       	adiw	r24, 0x01	; 1
    14f8:	9f 93       	push	r25
    14fa:	8f 93       	push	r24
    14fc:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    1500:	0f b6       	in	r0, 0x3f	; 63
    1502:	f8 94       	cli
    1504:	de bf       	out	0x3e, r29	; 62
    1506:	0f be       	out	0x3f, r0	; 63
    1508:	cd bf       	out	0x3d, r28	; 61
    150a:	88 23       	and	r24, r24
    150c:	c9 f0       	breq	.+50     	; 0x1540 <_Z14willkommenpagev+0xea>
    150e:	81 50       	subi	r24, 0x01	; 1
    1510:	68 94       	set
    1512:	ee 24       	eor	r14, r14
    1514:	e1 f8       	bld	r14, 1
    1516:	f1 2c       	mov	r15, r1
    1518:	ec 0e       	add	r14, r28
    151a:	fd 1e       	adc	r15, r29
    151c:	e8 0e       	add	r14, r24
    151e:	f1 1c       	adc	r15, r1
    1520:	0c 2d       	mov	r16, r12
    1522:	1d 2d       	mov	r17, r13
    1524:	d1 2c       	mov	r13, r1
    1526:	f8 01       	movw	r30, r16
    1528:	61 91       	ld	r22, Z+
    152a:	8f 01       	movw	r16, r30
    152c:	20 e2       	ldi	r18, 0x20	; 32
    152e:	4d 2d       	mov	r20, r13
    1530:	82 e7       	ldi	r24, 0x72	; 114
    1532:	93 e0       	ldi	r25, 0x03	; 3
    1534:	bd db       	rcall	.-2182   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1536:	f6 e0       	ldi	r31, 0x06	; 6
    1538:	df 0e       	add	r13, r31
    153a:	0e 15       	cp	r16, r14
    153c:	1f 05       	cpc	r17, r15
    153e:	99 f7       	brne	.-26     	; 0x1526 <_Z14willkommenpagev+0xd0>
    1540:	82 e7       	ldi	r24, 0x72	; 114
    1542:	93 e0       	ldi	r25, 0x03	; 3
    1544:	ec d8       	rcall	.-3624   	; 0x71e <_ZN7Display9sendFrameEv>
    1546:	82 e7       	ldi	r24, 0x72	; 114
    1548:	93 e0       	ldi	r25, 0x03	; 3
    154a:	5f d8       	rcall	.-3906   	; 0x60a <_ZN7Display10clearFrameEv>
    154c:	85 e0       	ldi	r24, 0x05	; 5
    154e:	2f e7       	ldi	r18, 0x7F	; 127
    1550:	38 e3       	ldi	r19, 0x38	; 56
    1552:	91 e0       	ldi	r25, 0x01	; 1
    1554:	21 50       	subi	r18, 0x01	; 1
    1556:	30 40       	sbci	r19, 0x00	; 0
    1558:	90 40       	sbci	r25, 0x00	; 0
    155a:	e1 f7       	brne	.-8      	; 0x1554 <_Z14willkommenpagev+0xfe>
    155c:	00 c0       	rjmp	.+0      	; 0x155e <_Z14willkommenpagev+0x108>
    155e:	00 00       	nop
    1560:	ef e7       	ldi	r30, 0x7F	; 127
    1562:	f8 e3       	ldi	r31, 0x38	; 56
    1564:	21 e0       	ldi	r18, 0x01	; 1
    1566:	e1 50       	subi	r30, 0x01	; 1
    1568:	f0 40       	sbci	r31, 0x00	; 0
    156a:	20 40       	sbci	r18, 0x00	; 0
    156c:	e1 f7       	brne	.-8      	; 0x1566 <_Z14willkommenpagev+0x110>
    156e:	00 c0       	rjmp	.+0      	; 0x1570 <_Z14willkommenpagev+0x11a>
    1570:	00 00       	nop
    1572:	81 50       	subi	r24, 0x01	; 1
    1574:	61 f7       	brne	.-40     	; 0x154e <_Z14willkommenpagev+0xf8>
    1576:	64 96       	adiw	r28, 0x14	; 20
    1578:	0f b6       	in	r0, 0x3f	; 63
    157a:	f8 94       	cli
    157c:	de bf       	out	0x3e, r29	; 62
    157e:	0f be       	out	0x3f, r0	; 63
    1580:	cd bf       	out	0x3d, r28	; 61
    1582:	df 91       	pop	r29
    1584:	cf 91       	pop	r28
    1586:	1f 91       	pop	r17
    1588:	0f 91       	pop	r16
    158a:	ff 90       	pop	r15
    158c:	ef 90       	pop	r14
    158e:	df 90       	pop	r13
    1590:	cf 90       	pop	r12
    1592:	08 95       	ret

00001594 <_Z6headerh>:
    1594:	ef 92       	push	r14
    1596:	ff 92       	push	r15
    1598:	0f 93       	push	r16
    159a:	1f 93       	push	r17
    159c:	cf 93       	push	r28
    159e:	df 93       	push	r29
    15a0:	cd b7       	in	r28, 0x3d	; 61
    15a2:	de b7       	in	r29, 0x3e	; 62
    15a4:	64 97       	sbiw	r28, 0x14	; 20
    15a6:	0f b6       	in	r0, 0x3f	; 63
    15a8:	f8 94       	cli
    15aa:	de bf       	out	0x3e, r29	; 62
    15ac:	0f be       	out	0x3f, r0	; 63
    15ae:	cd bf       	out	0x3d, r28	; 61
    15b0:	81 30       	cpi	r24, 0x01	; 1
    15b2:	09 f4       	brne	.+2      	; 0x15b6 <_Z6headerh+0x22>
    15b4:	51 c0       	rjmp	.+162    	; 0x1658 <_Z6headerh+0xc4>
    15b6:	20 f0       	brcs	.+8      	; 0x15c0 <_Z6headerh+0x2c>
    15b8:	82 30       	cpi	r24, 0x02	; 2
    15ba:	09 f4       	brne	.+2      	; 0x15be <_Z6headerh+0x2a>
    15bc:	87 c0       	rjmp	.+270    	; 0x16cc <_Z6headerh+0x138>
    15be:	be c0       	rjmp	.+380    	; 0x173c <_Z6headerh+0x1a8>
    15c0:	0f 2e       	mov	r0, r31
    15c2:	f3 e7       	ldi	r31, 0x73	; 115
    15c4:	ef 2e       	mov	r14, r31
    15c6:	f7 e0       	ldi	r31, 0x07	; 7
    15c8:	ff 2e       	mov	r15, r31
    15ca:	f0 2d       	mov	r31, r0
    15cc:	10 e0       	ldi	r17, 0x00	; 0
    15ce:	f7 01       	movw	r30, r14
    15d0:	61 91       	ld	r22, Z+
    15d2:	7f 01       	movw	r14, r30
    15d4:	20 e0       	ldi	r18, 0x00	; 0
    15d6:	41 2f       	mov	r20, r17
    15d8:	82 e7       	ldi	r24, 0x72	; 114
    15da:	93 e0       	ldi	r25, 0x03	; 3
    15dc:	69 db       	rcall	.-2350   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    15de:	1a 5f       	subi	r17, 0xFA	; 250
    15e0:	10 33       	cpi	r17, 0x30	; 48
    15e2:	a9 f7       	brne	.-22     	; 0x15ce <_Z6headerh+0x3a>
    15e4:	b6 de       	rcall	.-660    	; 0x1352 <_Z14Batteriestatusv>
    15e6:	28 2f       	mov	r18, r24
    15e8:	33 27       	eor	r19, r19
    15ea:	27 fd       	sbrc	r18, 7
    15ec:	30 95       	com	r19
    15ee:	3f 93       	push	r19
    15f0:	8f 93       	push	r24
    15f2:	8c e2       	ldi	r24, 0x2C	; 44
    15f4:	91 e0       	ldi	r25, 0x01	; 1
    15f6:	9f 93       	push	r25
    15f8:	8f 93       	push	r24
    15fa:	ce 01       	movw	r24, r28
    15fc:	01 96       	adiw	r24, 0x01	; 1
    15fe:	9f 93       	push	r25
    1600:	8f 93       	push	r24
    1602:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    1606:	25 e1       	ldi	r18, 0x15	; 21
    1608:	f2 2e       	mov	r15, r18
    160a:	f8 1a       	sub	r15, r24
    160c:	0f 90       	pop	r0
    160e:	0f 90       	pop	r0
    1610:	0f 90       	pop	r0
    1612:	0f 90       	pop	r0
    1614:	0f 90       	pop	r0
    1616:	0f 90       	pop	r0
    1618:	f4 e1       	ldi	r31, 0x14	; 20
    161a:	ff 15       	cp	r31, r15
    161c:	08 f4       	brcc	.+2      	; 0x1620 <_Z6headerh+0x8c>
    161e:	8e c0       	rjmp	.+284    	; 0x173c <_Z6headerh+0x1a8>
    1620:	ef 2c       	mov	r14, r15
    1622:	ee 0c       	add	r14, r14
    1624:	ef 0c       	add	r14, r15
    1626:	ee 0c       	add	r14, r14
    1628:	8c 01       	movw	r16, r24
    162a:	11 27       	eor	r17, r17
    162c:	e1 e0       	ldi	r30, 0x01	; 1
    162e:	f0 e0       	ldi	r31, 0x00	; 0
    1630:	ec 0f       	add	r30, r28
    1632:	fd 1f       	adc	r31, r29
    1634:	ef 0d       	add	r30, r15
    1636:	f1 1d       	adc	r31, r1
    1638:	e0 0f       	add	r30, r16
    163a:	f1 1f       	adc	r31, r17
    163c:	75 97       	sbiw	r30, 0x15	; 21
    163e:	20 e0       	ldi	r18, 0x00	; 0
    1640:	4e 2d       	mov	r20, r14
    1642:	60 81       	ld	r22, Z
    1644:	82 e7       	ldi	r24, 0x72	; 114
    1646:	93 e0       	ldi	r25, 0x03	; 3
    1648:	33 db       	rcall	.-2458   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    164a:	f3 94       	inc	r15
    164c:	26 e0       	ldi	r18, 0x06	; 6
    164e:	e2 0e       	add	r14, r18
    1650:	85 e1       	ldi	r24, 0x15	; 21
    1652:	f8 12       	cpse	r15, r24
    1654:	eb cf       	rjmp	.-42     	; 0x162c <_Z6headerh+0x98>
    1656:	72 c0       	rjmp	.+228    	; 0x173c <_Z6headerh+0x1a8>
    1658:	7c de       	rcall	.-776    	; 0x1352 <_Z14Batteriestatusv>
    165a:	28 2f       	mov	r18, r24
    165c:	33 27       	eor	r19, r19
    165e:	27 fd       	sbrc	r18, 7
    1660:	30 95       	com	r19
    1662:	3f 93       	push	r19
    1664:	8f 93       	push	r24
    1666:	8c e2       	ldi	r24, 0x2C	; 44
    1668:	91 e0       	ldi	r25, 0x01	; 1
    166a:	9f 93       	push	r25
    166c:	8f 93       	push	r24
    166e:	ce 01       	movw	r24, r28
    1670:	01 96       	adiw	r24, 0x01	; 1
    1672:	9f 93       	push	r25
    1674:	8f 93       	push	r24
    1676:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    167a:	25 e1       	ldi	r18, 0x15	; 21
    167c:	f2 2e       	mov	r15, r18
    167e:	f8 1a       	sub	r15, r24
    1680:	0f 90       	pop	r0
    1682:	0f 90       	pop	r0
    1684:	0f 90       	pop	r0
    1686:	0f 90       	pop	r0
    1688:	0f 90       	pop	r0
    168a:	0f 90       	pop	r0
    168c:	e4 e1       	ldi	r30, 0x14	; 20
    168e:	ef 15       	cp	r30, r15
    1690:	08 f4       	brcc	.+2      	; 0x1694 <_Z6headerh+0x100>
    1692:	54 c0       	rjmp	.+168    	; 0x173c <_Z6headerh+0x1a8>
    1694:	ef 2c       	mov	r14, r15
    1696:	ee 0c       	add	r14, r14
    1698:	ef 0c       	add	r14, r15
    169a:	ee 0c       	add	r14, r14
    169c:	8c 01       	movw	r16, r24
    169e:	11 27       	eor	r17, r17
    16a0:	e1 e0       	ldi	r30, 0x01	; 1
    16a2:	f0 e0       	ldi	r31, 0x00	; 0
    16a4:	ec 0f       	add	r30, r28
    16a6:	fd 1f       	adc	r31, r29
    16a8:	ef 0d       	add	r30, r15
    16aa:	f1 1d       	adc	r31, r1
    16ac:	e0 0f       	add	r30, r16
    16ae:	f1 1f       	adc	r31, r17
    16b0:	75 97       	sbiw	r30, 0x15	; 21
    16b2:	20 e0       	ldi	r18, 0x00	; 0
    16b4:	4e 2d       	mov	r20, r14
    16b6:	60 81       	ld	r22, Z
    16b8:	82 e7       	ldi	r24, 0x72	; 114
    16ba:	93 e0       	ldi	r25, 0x03	; 3
    16bc:	f9 da       	rcall	.-2574   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    16be:	f3 94       	inc	r15
    16c0:	f6 e0       	ldi	r31, 0x06	; 6
    16c2:	ef 0e       	add	r14, r31
    16c4:	25 e1       	ldi	r18, 0x15	; 21
    16c6:	f2 12       	cpse	r15, r18
    16c8:	eb cf       	rjmp	.-42     	; 0x16a0 <_Z6headerh+0x10c>
    16ca:	38 c0       	rjmp	.+112    	; 0x173c <_Z6headerh+0x1a8>
    16cc:	42 de       	rcall	.-892    	; 0x1352 <_Z14Batteriestatusv>
    16ce:	28 2f       	mov	r18, r24
    16d0:	33 27       	eor	r19, r19
    16d2:	27 fd       	sbrc	r18, 7
    16d4:	30 95       	com	r19
    16d6:	3f 93       	push	r19
    16d8:	8f 93       	push	r24
    16da:	81 e3       	ldi	r24, 0x31	; 49
    16dc:	91 e0       	ldi	r25, 0x01	; 1
    16de:	9f 93       	push	r25
    16e0:	8f 93       	push	r24
    16e2:	ce 01       	movw	r24, r28
    16e4:	01 96       	adiw	r24, 0x01	; 1
    16e6:	9f 93       	push	r25
    16e8:	8f 93       	push	r24
    16ea:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    16ee:	25 e1       	ldi	r18, 0x15	; 21
    16f0:	f2 2e       	mov	r15, r18
    16f2:	f8 1a       	sub	r15, r24
    16f4:	0f 90       	pop	r0
    16f6:	0f 90       	pop	r0
    16f8:	0f 90       	pop	r0
    16fa:	0f 90       	pop	r0
    16fc:	0f 90       	pop	r0
    16fe:	0f 90       	pop	r0
    1700:	e4 e1       	ldi	r30, 0x14	; 20
    1702:	ef 15       	cp	r30, r15
    1704:	d8 f0       	brcs	.+54     	; 0x173c <_Z6headerh+0x1a8>
    1706:	ef 2c       	mov	r14, r15
    1708:	ee 0c       	add	r14, r14
    170a:	ef 0c       	add	r14, r15
    170c:	ee 0c       	add	r14, r14
    170e:	8c 01       	movw	r16, r24
    1710:	11 27       	eor	r17, r17
    1712:	e1 e0       	ldi	r30, 0x01	; 1
    1714:	f0 e0       	ldi	r31, 0x00	; 0
    1716:	ec 0f       	add	r30, r28
    1718:	fd 1f       	adc	r31, r29
    171a:	ef 0d       	add	r30, r15
    171c:	f1 1d       	adc	r31, r1
    171e:	e0 0f       	add	r30, r16
    1720:	f1 1f       	adc	r31, r17
    1722:	75 97       	sbiw	r30, 0x15	; 21
    1724:	20 e0       	ldi	r18, 0x00	; 0
    1726:	4e 2d       	mov	r20, r14
    1728:	60 81       	ld	r22, Z
    172a:	82 e7       	ldi	r24, 0x72	; 114
    172c:	93 e0       	ldi	r25, 0x03	; 3
    172e:	c0 da       	rcall	.-2688   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1730:	f3 94       	inc	r15
    1732:	f6 e0       	ldi	r31, 0x06	; 6
    1734:	ef 0e       	add	r14, r31
    1736:	25 e1       	ldi	r18, 0x15	; 21
    1738:	f2 12       	cpse	r15, r18
    173a:	eb cf       	rjmp	.-42     	; 0x1712 <_Z6headerh+0x17e>
    173c:	64 96       	adiw	r28, 0x14	; 20
    173e:	0f b6       	in	r0, 0x3f	; 63
    1740:	f8 94       	cli
    1742:	de bf       	out	0x3e, r29	; 62
    1744:	0f be       	out	0x3f, r0	; 63
    1746:	cd bf       	out	0x3d, r28	; 61
    1748:	df 91       	pop	r29
    174a:	cf 91       	pop	r28
    174c:	1f 91       	pop	r17
    174e:	0f 91       	pop	r16
    1750:	ff 90       	pop	r15
    1752:	ef 90       	pop	r14
    1754:	08 95       	ret

00001756 <_Z6bottomh>:
    1756:	1f 93       	push	r17
    1758:	cf 93       	push	r28
    175a:	df 93       	push	r29
    175c:	88 23       	and	r24, r24
    175e:	19 f0       	breq	.+6      	; 0x1766 <_Z6bottomh+0x10>
    1760:	81 30       	cpi	r24, 0x01	; 1
    1762:	71 f0       	breq	.+28     	; 0x1780 <_Z6bottomh+0x2a>
    1764:	19 c0       	rjmp	.+50     	; 0x1798 <_Z6bottomh+0x42>
    1766:	cb e7       	ldi	r28, 0x7B	; 123
    1768:	d7 e0       	ldi	r29, 0x07	; 7
    176a:	10 e5       	ldi	r17, 0x50	; 80
    176c:	69 91       	ld	r22, Y+
    176e:	28 e3       	ldi	r18, 0x38	; 56
    1770:	41 2f       	mov	r20, r17
    1772:	82 e7       	ldi	r24, 0x72	; 114
    1774:	93 e0       	ldi	r25, 0x03	; 3
    1776:	9c da       	rcall	.-2760   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1778:	1a 5f       	subi	r17, 0xFA	; 250
    177a:	10 38       	cpi	r17, 0x80	; 128
    177c:	b9 f7       	brne	.-18     	; 0x176c <_Z6bottomh+0x16>
    177e:	0c c0       	rjmp	.+24     	; 0x1798 <_Z6bottomh+0x42>
    1780:	cb e7       	ldi	r28, 0x7B	; 123
    1782:	d7 e0       	ldi	r29, 0x07	; 7
    1784:	15 e0       	ldi	r17, 0x05	; 5
    1786:	69 91       	ld	r22, Y+
    1788:	28 e3       	ldi	r18, 0x38	; 56
    178a:	41 2f       	mov	r20, r17
    178c:	82 e7       	ldi	r24, 0x72	; 114
    178e:	93 e0       	ldi	r25, 0x03	; 3
    1790:	8f da       	rcall	.-2786   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1792:	1a 5f       	subi	r17, 0xFA	; 250
    1794:	15 33       	cpi	r17, 0x35	; 53
    1796:	b9 f7       	brne	.-18     	; 0x1786 <_Z6bottomh+0x30>
    1798:	df 91       	pop	r29
    179a:	cf 91       	pop	r28
    179c:	1f 91       	pop	r17
    179e:	08 95       	ret

000017a0 <_Z16anzeige_richtungfhh>:
    17a0:	cf 92       	push	r12
    17a2:	df 92       	push	r13
    17a4:	ef 92       	push	r14
    17a6:	ff 92       	push	r15
    17a8:	cf 93       	push	r28
    17aa:	df 93       	push	r29
    17ac:	6b 01       	movw	r12, r22
    17ae:	7c 01       	movw	r14, r24
    17b0:	c4 2f       	mov	r28, r20
    17b2:	d2 2f       	mov	r29, r18
    17b4:	20 e0       	ldi	r18, 0x00	; 0
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	40 eb       	ldi	r20, 0xB0	; 176
    17ba:	51 e4       	ldi	r21, 0x41	; 65
    17bc:	0e 94 aa 2e 	call	0x5d54	; 0x5d54 <__cmpsf2>
    17c0:	88 23       	and	r24, r24
    17c2:	54 f0       	brlt	.+20     	; 0x17d8 <_Z16anzeige_richtungfhh+0x38>
    17c4:	20 e0       	ldi	r18, 0x00	; 0
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	49 ea       	ldi	r20, 0xA9	; 169
    17ca:	53 e4       	ldi	r21, 0x43	; 67
    17cc:	c7 01       	movw	r24, r14
    17ce:	b6 01       	movw	r22, r12
    17d0:	0e 94 5a 30 	call	0x60b4	; 0x60b4 <__gesf2>
    17d4:	88 23       	and	r24, r24
    17d6:	54 f0       	brlt	.+20     	; 0x17ec <_Z16anzeige_richtungfhh+0x4c>
    17d8:	2d 2f       	mov	r18, r29
    17da:	22 0f       	add	r18, r18
    17dc:	22 0f       	add	r18, r18
    17de:	22 0f       	add	r18, r18
    17e0:	4c 2f       	mov	r20, r28
    17e2:	6e e4       	ldi	r22, 0x4E	; 78
    17e4:	82 e7       	ldi	r24, 0x72	; 114
    17e6:	93 e0       	ldi	r25, 0x03	; 3
    17e8:	63 da       	rcall	.-2874   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    17ea:	ab c0       	rjmp	.+342    	; 0x1942 <_Z16anzeige_richtungfhh+0x1a2>
    17ec:	20 e0       	ldi	r18, 0x00	; 0
    17ee:	30 e0       	ldi	r19, 0x00	; 0
    17f0:	48 e8       	ldi	r20, 0x88	; 136
    17f2:	52 e4       	ldi	r21, 0x42	; 66
    17f4:	c7 01       	movw	r24, r14
    17f6:	b6 01       	movw	r22, r12
    17f8:	0e 94 aa 2e 	call	0x5d54	; 0x5d54 <__cmpsf2>
    17fc:	88 23       	and	r24, r24
    17fe:	94 f4       	brge	.+36     	; 0x1824 <_Z16anzeige_richtungfhh+0x84>
    1800:	dd 0f       	add	r29, r29
    1802:	dd 0f       	add	r29, r29
    1804:	dd 0f       	add	r29, r29
    1806:	4d ef       	ldi	r20, 0xFD	; 253
    1808:	4c 0f       	add	r20, r28
    180a:	2d 2f       	mov	r18, r29
    180c:	6e e4       	ldi	r22, 0x4E	; 78
    180e:	82 e7       	ldi	r24, 0x72	; 114
    1810:	93 e0       	ldi	r25, 0x03	; 3
    1812:	4e da       	rcall	.-2916   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1814:	43 e0       	ldi	r20, 0x03	; 3
    1816:	4c 0f       	add	r20, r28
    1818:	2d 2f       	mov	r18, r29
    181a:	6f e4       	ldi	r22, 0x4F	; 79
    181c:	82 e7       	ldi	r24, 0x72	; 114
    181e:	93 e0       	ldi	r25, 0x03	; 3
    1820:	47 da       	rcall	.-2930   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1822:	8f c0       	rjmp	.+286    	; 0x1942 <_Z16anzeige_richtungfhh+0x1a2>
    1824:	20 e0       	ldi	r18, 0x00	; 0
    1826:	30 e0       	ldi	r19, 0x00	; 0
    1828:	42 ee       	ldi	r20, 0xE2	; 226
    182a:	52 e4       	ldi	r21, 0x42	; 66
    182c:	c7 01       	movw	r24, r14
    182e:	b6 01       	movw	r22, r12
    1830:	0e 94 aa 2e 	call	0x5d54	; 0x5d54 <__cmpsf2>
    1834:	88 23       	and	r24, r24
    1836:	54 f4       	brge	.+20     	; 0x184c <_Z16anzeige_richtungfhh+0xac>
    1838:	2d 2f       	mov	r18, r29
    183a:	22 0f       	add	r18, r18
    183c:	22 0f       	add	r18, r18
    183e:	22 0f       	add	r18, r18
    1840:	4c 2f       	mov	r20, r28
    1842:	6f e4       	ldi	r22, 0x4F	; 79
    1844:	82 e7       	ldi	r24, 0x72	; 114
    1846:	93 e0       	ldi	r25, 0x03	; 3
    1848:	33 da       	rcall	.-2970   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    184a:	7b c0       	rjmp	.+246    	; 0x1942 <_Z16anzeige_richtungfhh+0x1a2>
    184c:	20 e0       	ldi	r18, 0x00	; 0
    184e:	30 e0       	ldi	r19, 0x00	; 0
    1850:	4e e1       	ldi	r20, 0x1E	; 30
    1852:	53 e4       	ldi	r21, 0x43	; 67
    1854:	c7 01       	movw	r24, r14
    1856:	b6 01       	movw	r22, r12
    1858:	0e 94 aa 2e 	call	0x5d54	; 0x5d54 <__cmpsf2>
    185c:	88 23       	and	r24, r24
    185e:	94 f4       	brge	.+36     	; 0x1884 <_Z16anzeige_richtungfhh+0xe4>
    1860:	dd 0f       	add	r29, r29
    1862:	dd 0f       	add	r29, r29
    1864:	dd 0f       	add	r29, r29
    1866:	4d ef       	ldi	r20, 0xFD	; 253
    1868:	4c 0f       	add	r20, r28
    186a:	2d 2f       	mov	r18, r29
    186c:	63 e5       	ldi	r22, 0x53	; 83
    186e:	82 e7       	ldi	r24, 0x72	; 114
    1870:	93 e0       	ldi	r25, 0x03	; 3
    1872:	1e da       	rcall	.-3012   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1874:	43 e0       	ldi	r20, 0x03	; 3
    1876:	4c 0f       	add	r20, r28
    1878:	2d 2f       	mov	r18, r29
    187a:	6f e4       	ldi	r22, 0x4F	; 79
    187c:	82 e7       	ldi	r24, 0x72	; 114
    187e:	93 e0       	ldi	r25, 0x03	; 3
    1880:	17 da       	rcall	.-3026   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1882:	5f c0       	rjmp	.+190    	; 0x1942 <_Z16anzeige_richtungfhh+0x1a2>
    1884:	20 e0       	ldi	r18, 0x00	; 0
    1886:	30 e0       	ldi	r19, 0x00	; 0
    1888:	4b e4       	ldi	r20, 0x4B	; 75
    188a:	53 e4       	ldi	r21, 0x43	; 67
    188c:	c7 01       	movw	r24, r14
    188e:	b6 01       	movw	r22, r12
    1890:	0e 94 aa 2e 	call	0x5d54	; 0x5d54 <__cmpsf2>
    1894:	88 23       	and	r24, r24
    1896:	54 f4       	brge	.+20     	; 0x18ac <_Z16anzeige_richtungfhh+0x10c>
    1898:	2d 2f       	mov	r18, r29
    189a:	22 0f       	add	r18, r18
    189c:	22 0f       	add	r18, r18
    189e:	22 0f       	add	r18, r18
    18a0:	4c 2f       	mov	r20, r28
    18a2:	63 e5       	ldi	r22, 0x53	; 83
    18a4:	82 e7       	ldi	r24, 0x72	; 114
    18a6:	93 e0       	ldi	r25, 0x03	; 3
    18a8:	03 da       	rcall	.-3066   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    18aa:	4b c0       	rjmp	.+150    	; 0x1942 <_Z16anzeige_richtungfhh+0x1a2>
    18ac:	20 e0       	ldi	r18, 0x00	; 0
    18ae:	30 e0       	ldi	r19, 0x00	; 0
    18b0:	48 e7       	ldi	r20, 0x78	; 120
    18b2:	53 e4       	ldi	r21, 0x43	; 67
    18b4:	c7 01       	movw	r24, r14
    18b6:	b6 01       	movw	r22, r12
    18b8:	0e 94 aa 2e 	call	0x5d54	; 0x5d54 <__cmpsf2>
    18bc:	88 23       	and	r24, r24
    18be:	94 f4       	brge	.+36     	; 0x18e4 <_Z16anzeige_richtungfhh+0x144>
    18c0:	dd 0f       	add	r29, r29
    18c2:	dd 0f       	add	r29, r29
    18c4:	dd 0f       	add	r29, r29
    18c6:	4d ef       	ldi	r20, 0xFD	; 253
    18c8:	4c 0f       	add	r20, r28
    18ca:	2d 2f       	mov	r18, r29
    18cc:	63 e5       	ldi	r22, 0x53	; 83
    18ce:	82 e7       	ldi	r24, 0x72	; 114
    18d0:	93 e0       	ldi	r25, 0x03	; 3
    18d2:	ee d9       	rcall	.-3108   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    18d4:	43 e0       	ldi	r20, 0x03	; 3
    18d6:	4c 0f       	add	r20, r28
    18d8:	2d 2f       	mov	r18, r29
    18da:	67 e5       	ldi	r22, 0x57	; 87
    18dc:	82 e7       	ldi	r24, 0x72	; 114
    18de:	93 e0       	ldi	r25, 0x03	; 3
    18e0:	e7 d9       	rcall	.-3122   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    18e2:	2f c0       	rjmp	.+94     	; 0x1942 <_Z16anzeige_richtungfhh+0x1a2>
    18e4:	20 e0       	ldi	r18, 0x00	; 0
    18e6:	30 e8       	ldi	r19, 0x80	; 128
    18e8:	42 e9       	ldi	r20, 0x92	; 146
    18ea:	53 e4       	ldi	r21, 0x43	; 67
    18ec:	c7 01       	movw	r24, r14
    18ee:	b6 01       	movw	r22, r12
    18f0:	0e 94 aa 2e 	call	0x5d54	; 0x5d54 <__cmpsf2>
    18f4:	88 23       	and	r24, r24
    18f6:	54 f4       	brge	.+20     	; 0x190c <_Z16anzeige_richtungfhh+0x16c>
    18f8:	2d 2f       	mov	r18, r29
    18fa:	22 0f       	add	r18, r18
    18fc:	22 0f       	add	r18, r18
    18fe:	22 0f       	add	r18, r18
    1900:	4c 2f       	mov	r20, r28
    1902:	67 e5       	ldi	r22, 0x57	; 87
    1904:	82 e7       	ldi	r24, 0x72	; 114
    1906:	93 e0       	ldi	r25, 0x03	; 3
    1908:	d3 d9       	rcall	.-3162   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    190a:	1b c0       	rjmp	.+54     	; 0x1942 <_Z16anzeige_richtungfhh+0x1a2>
    190c:	20 e0       	ldi	r18, 0x00	; 0
    190e:	30 e0       	ldi	r19, 0x00	; 0
    1910:	49 ea       	ldi	r20, 0xA9	; 169
    1912:	53 e4       	ldi	r21, 0x43	; 67
    1914:	c7 01       	movw	r24, r14
    1916:	b6 01       	movw	r22, r12
    1918:	0e 94 aa 2e 	call	0x5d54	; 0x5d54 <__cmpsf2>
    191c:	88 23       	and	r24, r24
    191e:	8c f4       	brge	.+34     	; 0x1942 <_Z16anzeige_richtungfhh+0x1a2>
    1920:	dd 0f       	add	r29, r29
    1922:	dd 0f       	add	r29, r29
    1924:	dd 0f       	add	r29, r29
    1926:	4d ef       	ldi	r20, 0xFD	; 253
    1928:	4c 0f       	add	r20, r28
    192a:	2d 2f       	mov	r18, r29
    192c:	6e e4       	ldi	r22, 0x4E	; 78
    192e:	82 e7       	ldi	r24, 0x72	; 114
    1930:	93 e0       	ldi	r25, 0x03	; 3
    1932:	be d9       	rcall	.-3204   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1934:	43 e0       	ldi	r20, 0x03	; 3
    1936:	4c 0f       	add	r20, r28
    1938:	2d 2f       	mov	r18, r29
    193a:	67 e5       	ldi	r22, 0x57	; 87
    193c:	82 e7       	ldi	r24, 0x72	; 114
    193e:	93 e0       	ldi	r25, 0x03	; 3
    1940:	b7 d9       	rcall	.-3218   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1942:	df 91       	pop	r29
    1944:	cf 91       	pop	r28
    1946:	ff 90       	pop	r15
    1948:	ef 90       	pop	r14
    194a:	df 90       	pop	r13
    194c:	cf 90       	pop	r12
    194e:	08 95       	ret

00001950 <_Z13anzeige_nadelhhf>:
    1950:	af 92       	push	r10
    1952:	bf 92       	push	r11
    1954:	cf 92       	push	r12
    1956:	df 92       	push	r13
    1958:	ef 92       	push	r14
    195a:	ff 92       	push	r15
    195c:	0f 93       	push	r16
    195e:	1f 93       	push	r17
    1960:	59 01       	movw	r10, r18
    1962:	6a 01       	movw	r12, r20
    1964:	e1 2c       	mov	r14, r1
    1966:	f1 2c       	mov	r15, r1
    1968:	0c e8       	ldi	r16, 0x8C	; 140
    196a:	12 e4       	ldi	r17, 0x42	; 66
    196c:	24 e1       	ldi	r18, 0x14	; 20
    196e:	46 2f       	mov	r20, r22
    1970:	68 2f       	mov	r22, r24
    1972:	82 e7       	ldi	r24, 0x72	; 114
    1974:	93 e0       	ldi	r25, 0x03	; 3
    1976:	7c d8       	rcall	.-3848   	; 0xa70 <_ZN7Display13draw_triangleEhhhff>
    1978:	1f 91       	pop	r17
    197a:	0f 91       	pop	r16
    197c:	ff 90       	pop	r15
    197e:	ef 90       	pop	r14
    1980:	df 90       	pop	r13
    1982:	cf 90       	pop	r12
    1984:	bf 90       	pop	r11
    1986:	af 90       	pop	r10
    1988:	08 95       	ret

0000198a <_Z19anzeige_kleinenadelhhf>:
    198a:	af 92       	push	r10
    198c:	bf 92       	push	r11
    198e:	cf 92       	push	r12
    1990:	df 92       	push	r13
    1992:	ef 92       	push	r14
    1994:	ff 92       	push	r15
    1996:	0f 93       	push	r16
    1998:	1f 93       	push	r17
    199a:	59 01       	movw	r10, r18
    199c:	6a 01       	movw	r12, r20
    199e:	e1 2c       	mov	r14, r1
    19a0:	f1 2c       	mov	r15, r1
    19a2:	0c e8       	ldi	r16, 0x8C	; 140
    19a4:	12 e4       	ldi	r17, 0x42	; 66
    19a6:	2a e0       	ldi	r18, 0x0A	; 10
    19a8:	46 2f       	mov	r20, r22
    19aa:	68 2f       	mov	r22, r24
    19ac:	82 e7       	ldi	r24, 0x72	; 114
    19ae:	93 e0       	ldi	r25, 0x03	; 3
    19b0:	5f d8       	rcall	.-3906   	; 0xa70 <_ZN7Display13draw_triangleEhhhff>
    19b2:	1f 91       	pop	r17
    19b4:	0f 91       	pop	r16
    19b6:	ff 90       	pop	r15
    19b8:	ef 90       	pop	r14
    19ba:	df 90       	pop	r13
    19bc:	cf 90       	pop	r12
    19be:	bf 90       	pop	r11
    19c0:	af 90       	pop	r10
    19c2:	08 95       	ret

000019c4 <_Z11menue_hauptv>:
    19c4:	cf 92       	push	r12
    19c6:	df 92       	push	r13
    19c8:	ef 92       	push	r14
    19ca:	ff 92       	push	r15
    19cc:	0f 93       	push	r16
    19ce:	1f 93       	push	r17
    19d0:	cf 93       	push	r28
    19d2:	df 93       	push	r29
    19d4:	cd b7       	in	r28, 0x3d	; 61
    19d6:	de b7       	in	r29, 0x3e	; 62
    19d8:	64 97       	sbiw	r28, 0x14	; 20
    19da:	0f b6       	in	r0, 0x3f	; 63
    19dc:	f8 94       	cli
    19de:	de bf       	out	0x3e, r29	; 62
    19e0:	0f be       	out	0x3f, r0	; 63
    19e2:	cd bf       	out	0x3d, r28	; 61
    19e4:	82 e7       	ldi	r24, 0x72	; 114
    19e6:	93 e0       	ldi	r25, 0x03	; 3
    19e8:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    19ec:	80 e1       	ldi	r24, 0x10	; 16
    19ee:	e6 e3       	ldi	r30, 0x36	; 54
    19f0:	f1 e0       	ldi	r31, 0x01	; 1
    19f2:	8e 01       	movw	r16, r28
    19f4:	0f 5f       	subi	r16, 0xFF	; 255
    19f6:	1f 4f       	sbci	r17, 0xFF	; 255
    19f8:	d8 01       	movw	r26, r16
    19fa:	01 90       	ld	r0, Z+
    19fc:	0d 92       	st	X+, r0
    19fe:	8a 95       	dec	r24
    1a00:	e1 f7       	brne	.-8      	; 0x19fa <_Z11menue_hauptv+0x36>
    1a02:	e0 2e       	mov	r14, r16
    1a04:	f1 2e       	mov	r15, r17
    1a06:	68 01       	movw	r12, r16
    1a08:	10 e0       	ldi	r17, 0x00	; 0
    1a0a:	f6 01       	movw	r30, r12
    1a0c:	61 91       	ld	r22, Z+
    1a0e:	6f 01       	movw	r12, r30
    1a10:	20 e0       	ldi	r18, 0x00	; 0
    1a12:	41 2f       	mov	r20, r17
    1a14:	82 e7       	ldi	r24, 0x72	; 114
    1a16:	93 e0       	ldi	r25, 0x03	; 3
    1a18:	4b d9       	rcall	.-3434   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1a1a:	1a 5f       	subi	r17, 0xFA	; 250
    1a1c:	1a 35       	cpi	r17, 0x5A	; 90
    1a1e:	a9 f7       	brne	.-22     	; 0x1a0a <_Z11menue_hauptv+0x46>
    1a20:	81 e1       	ldi	r24, 0x11	; 17
    1a22:	e6 e4       	ldi	r30, 0x46	; 70
    1a24:	f1 e0       	ldi	r31, 0x01	; 1
    1a26:	de 01       	movw	r26, r28
    1a28:	11 96       	adiw	r26, 0x01	; 1
    1a2a:	01 90       	ld	r0, Z+
    1a2c:	0d 92       	st	X+, r0
    1a2e:	8a 95       	dec	r24
    1a30:	e1 f7       	brne	.-8      	; 0x1a2a <_Z11menue_hauptv+0x66>
    1a32:	ce 2c       	mov	r12, r14
    1a34:	df 2c       	mov	r13, r15
    1a36:	10 e0       	ldi	r17, 0x00	; 0
    1a38:	f6 01       	movw	r30, r12
    1a3a:	61 91       	ld	r22, Z+
    1a3c:	6f 01       	movw	r12, r30
    1a3e:	28 e0       	ldi	r18, 0x08	; 8
    1a40:	41 2f       	mov	r20, r17
    1a42:	82 e7       	ldi	r24, 0x72	; 114
    1a44:	93 e0       	ldi	r25, 0x03	; 3
    1a46:	34 d9       	rcall	.-3480   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1a48:	1a 5f       	subi	r17, 0xFA	; 250
    1a4a:	10 36       	cpi	r17, 0x60	; 96
    1a4c:	a9 f7       	brne	.-22     	; 0x1a38 <_Z11menue_hauptv+0x74>
    1a4e:	8a e0       	ldi	r24, 0x0A	; 10
    1a50:	e7 e5       	ldi	r30, 0x57	; 87
    1a52:	f1 e0       	ldi	r31, 0x01	; 1
    1a54:	de 01       	movw	r26, r28
    1a56:	11 96       	adiw	r26, 0x01	; 1
    1a58:	01 90       	ld	r0, Z+
    1a5a:	0d 92       	st	X+, r0
    1a5c:	8a 95       	dec	r24
    1a5e:	e1 f7       	brne	.-8      	; 0x1a58 <_Z11menue_hauptv+0x94>
    1a60:	ce 2c       	mov	r12, r14
    1a62:	df 2c       	mov	r13, r15
    1a64:	10 e0       	ldi	r17, 0x00	; 0
    1a66:	f6 01       	movw	r30, r12
    1a68:	61 91       	ld	r22, Z+
    1a6a:	6f 01       	movw	r12, r30
    1a6c:	20 e1       	ldi	r18, 0x10	; 16
    1a6e:	41 2f       	mov	r20, r17
    1a70:	82 e7       	ldi	r24, 0x72	; 114
    1a72:	93 e0       	ldi	r25, 0x03	; 3
    1a74:	1d d9       	rcall	.-3526   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1a76:	1a 5f       	subi	r17, 0xFA	; 250
    1a78:	16 33       	cpi	r17, 0x36	; 54
    1a7a:	a9 f7       	brne	.-22     	; 0x1a66 <_Z11menue_hauptv+0xa2>
    1a7c:	8b e0       	ldi	r24, 0x0B	; 11
    1a7e:	e1 e6       	ldi	r30, 0x61	; 97
    1a80:	f1 e0       	ldi	r31, 0x01	; 1
    1a82:	de 01       	movw	r26, r28
    1a84:	11 96       	adiw	r26, 0x01	; 1
    1a86:	01 90       	ld	r0, Z+
    1a88:	0d 92       	st	X+, r0
    1a8a:	8a 95       	dec	r24
    1a8c:	e1 f7       	brne	.-8      	; 0x1a86 <_Z11menue_hauptv+0xc2>
    1a8e:	ce 2c       	mov	r12, r14
    1a90:	df 2c       	mov	r13, r15
    1a92:	10 e0       	ldi	r17, 0x00	; 0
    1a94:	f6 01       	movw	r30, r12
    1a96:	61 91       	ld	r22, Z+
    1a98:	6f 01       	movw	r12, r30
    1a9a:	28 e1       	ldi	r18, 0x18	; 24
    1a9c:	41 2f       	mov	r20, r17
    1a9e:	82 e7       	ldi	r24, 0x72	; 114
    1aa0:	93 e0       	ldi	r25, 0x03	; 3
    1aa2:	06 d9       	rcall	.-3572   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1aa4:	1a 5f       	subi	r17, 0xFA	; 250
    1aa6:	1c 33       	cpi	r17, 0x3C	; 60
    1aa8:	a9 f7       	brne	.-22     	; 0x1a94 <_Z11menue_hauptv+0xd0>
    1aaa:	80 e1       	ldi	r24, 0x10	; 16
    1aac:	ec e6       	ldi	r30, 0x6C	; 108
    1aae:	f1 e0       	ldi	r31, 0x01	; 1
    1ab0:	de 01       	movw	r26, r28
    1ab2:	11 96       	adiw	r26, 0x01	; 1
    1ab4:	01 90       	ld	r0, Z+
    1ab6:	0d 92       	st	X+, r0
    1ab8:	8a 95       	dec	r24
    1aba:	e1 f7       	brne	.-8      	; 0x1ab4 <_Z11menue_hauptv+0xf0>
    1abc:	ce 2c       	mov	r12, r14
    1abe:	df 2c       	mov	r13, r15
    1ac0:	10 e0       	ldi	r17, 0x00	; 0
    1ac2:	f6 01       	movw	r30, r12
    1ac4:	61 91       	ld	r22, Z+
    1ac6:	6f 01       	movw	r12, r30
    1ac8:	20 e2       	ldi	r18, 0x20	; 32
    1aca:	41 2f       	mov	r20, r17
    1acc:	82 e7       	ldi	r24, 0x72	; 114
    1ace:	93 e0       	ldi	r25, 0x03	; 3
    1ad0:	ef d8       	rcall	.-3618   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1ad2:	1a 5f       	subi	r17, 0xFA	; 250
    1ad4:	1a 35       	cpi	r17, 0x5A	; 90
    1ad6:	a9 f7       	brne	.-22     	; 0x1ac2 <_Z11menue_hauptv+0xfe>
    1ad8:	8e e0       	ldi	r24, 0x0E	; 14
    1ada:	ec e7       	ldi	r30, 0x7C	; 124
    1adc:	f1 e0       	ldi	r31, 0x01	; 1
    1ade:	de 01       	movw	r26, r28
    1ae0:	11 96       	adiw	r26, 0x01	; 1
    1ae2:	01 90       	ld	r0, Z+
    1ae4:	0d 92       	st	X+, r0
    1ae6:	8a 95       	dec	r24
    1ae8:	e1 f7       	brne	.-8      	; 0x1ae2 <_Z11menue_hauptv+0x11e>
    1aea:	ce 2c       	mov	r12, r14
    1aec:	df 2c       	mov	r13, r15
    1aee:	10 e0       	ldi	r17, 0x00	; 0
    1af0:	f6 01       	movw	r30, r12
    1af2:	61 91       	ld	r22, Z+
    1af4:	6f 01       	movw	r12, r30
    1af6:	28 e2       	ldi	r18, 0x28	; 40
    1af8:	41 2f       	mov	r20, r17
    1afa:	82 e7       	ldi	r24, 0x72	; 114
    1afc:	93 e0       	ldi	r25, 0x03	; 3
    1afe:	d8 d8       	rcall	.-3664   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1b00:	1a 5f       	subi	r17, 0xFA	; 250
    1b02:	1e 34       	cpi	r17, 0x4E	; 78
    1b04:	a9 f7       	brne	.-22     	; 0x1af0 <_Z11menue_hauptv+0x12c>
    1b06:	8e e0       	ldi	r24, 0x0E	; 14
    1b08:	ea e8       	ldi	r30, 0x8A	; 138
    1b0a:	f1 e0       	ldi	r31, 0x01	; 1
    1b0c:	de 01       	movw	r26, r28
    1b0e:	11 96       	adiw	r26, 0x01	; 1
    1b10:	01 90       	ld	r0, Z+
    1b12:	0d 92       	st	X+, r0
    1b14:	8a 95       	dec	r24
    1b16:	e1 f7       	brne	.-8      	; 0x1b10 <_Z11menue_hauptv+0x14c>
    1b18:	ce 2c       	mov	r12, r14
    1b1a:	df 2c       	mov	r13, r15
    1b1c:	10 e0       	ldi	r17, 0x00	; 0
    1b1e:	f6 01       	movw	r30, r12
    1b20:	61 91       	ld	r22, Z+
    1b22:	6f 01       	movw	r12, r30
    1b24:	20 e3       	ldi	r18, 0x30	; 48
    1b26:	41 2f       	mov	r20, r17
    1b28:	82 e7       	ldi	r24, 0x72	; 114
    1b2a:	93 e0       	ldi	r25, 0x03	; 3
    1b2c:	c1 d8       	rcall	.-3710   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1b2e:	1a 5f       	subi	r17, 0xFA	; 250
    1b30:	1e 34       	cpi	r17, 0x4E	; 78
    1b32:	a9 f7       	brne	.-22     	; 0x1b1e <_Z11menue_hauptv+0x15a>
    1b34:	64 96       	adiw	r28, 0x14	; 20
    1b36:	0f b6       	in	r0, 0x3f	; 63
    1b38:	f8 94       	cli
    1b3a:	de bf       	out	0x3e, r29	; 62
    1b3c:	0f be       	out	0x3f, r0	; 63
    1b3e:	cd bf       	out	0x3d, r28	; 61
    1b40:	df 91       	pop	r29
    1b42:	cf 91       	pop	r28
    1b44:	1f 91       	pop	r17
    1b46:	0f 91       	pop	r16
    1b48:	ff 90       	pop	r15
    1b4a:	ef 90       	pop	r14
    1b4c:	df 90       	pop	r13
    1b4e:	cf 90       	pop	r12
    1b50:	08 95       	ret

00001b52 <_Z11menue_einstv>:
    1b52:	af 92       	push	r10
    1b54:	bf 92       	push	r11
    1b56:	df 92       	push	r13
    1b58:	ef 92       	push	r14
    1b5a:	0f 93       	push	r16
    1b5c:	1f 93       	push	r17
    1b5e:	cf 93       	push	r28
    1b60:	df 93       	push	r29
    1b62:	cd b7       	in	r28, 0x3d	; 61
    1b64:	de b7       	in	r29, 0x3e	; 62
    1b66:	64 97       	sbiw	r28, 0x14	; 20
    1b68:	0f b6       	in	r0, 0x3f	; 63
    1b6a:	f8 94       	cli
    1b6c:	de bf       	out	0x3e, r29	; 62
    1b6e:	0f be       	out	0x3f, r0	; 63
    1b70:	cd bf       	out	0x3d, r28	; 61
    1b72:	82 e7       	ldi	r24, 0x72	; 114
    1b74:	93 e0       	ldi	r25, 0x03	; 3
    1b76:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1b7a:	81 e1       	ldi	r24, 0x11	; 17
    1b7c:	e8 e9       	ldi	r30, 0x98	; 152
    1b7e:	f1 e0       	ldi	r31, 0x01	; 1
    1b80:	8e 01       	movw	r16, r28
    1b82:	0f 5f       	subi	r16, 0xFF	; 255
    1b84:	1f 4f       	sbci	r17, 0xFF	; 255
    1b86:	d8 01       	movw	r26, r16
    1b88:	01 90       	ld	r0, Z+
    1b8a:	0d 92       	st	X+, r0
    1b8c:	8a 95       	dec	r24
    1b8e:	e1 f7       	brne	.-8      	; 0x1b88 <_Z11menue_einstv+0x36>
    1b90:	d0 2e       	mov	r13, r16
    1b92:	e1 2e       	mov	r14, r17
    1b94:	58 01       	movw	r10, r16
    1b96:	10 e0       	ldi	r17, 0x00	; 0
    1b98:	f5 01       	movw	r30, r10
    1b9a:	61 91       	ld	r22, Z+
    1b9c:	5f 01       	movw	r10, r30
    1b9e:	20 e0       	ldi	r18, 0x00	; 0
    1ba0:	41 2f       	mov	r20, r17
    1ba2:	82 e7       	ldi	r24, 0x72	; 114
    1ba4:	93 e0       	ldi	r25, 0x03	; 3
    1ba6:	84 d8       	rcall	.-3832   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1ba8:	1a 5f       	subi	r17, 0xFA	; 250
    1baa:	10 36       	cpi	r17, 0x60	; 96
    1bac:	a9 f7       	brne	.-22     	; 0x1b98 <_Z11menue_einstv+0x46>
    1bae:	86 e1       	ldi	r24, 0x16	; 22
    1bb0:	e9 ea       	ldi	r30, 0xA9	; 169
    1bb2:	f1 e0       	ldi	r31, 0x01	; 1
    1bb4:	de 01       	movw	r26, r28
    1bb6:	11 96       	adiw	r26, 0x01	; 1
    1bb8:	01 90       	ld	r0, Z+
    1bba:	0d 92       	st	X+, r0
    1bbc:	8a 95       	dec	r24
    1bbe:	e1 f7       	brne	.-8      	; 0x1bb8 <_Z11menue_einstv+0x66>
    1bc0:	ad 2c       	mov	r10, r13
    1bc2:	be 2c       	mov	r11, r14
    1bc4:	10 e0       	ldi	r17, 0x00	; 0
    1bc6:	f5 01       	movw	r30, r10
    1bc8:	61 91       	ld	r22, Z+
    1bca:	5f 01       	movw	r10, r30
    1bcc:	28 e0       	ldi	r18, 0x08	; 8
    1bce:	41 2f       	mov	r20, r17
    1bd0:	82 e7       	ldi	r24, 0x72	; 114
    1bd2:	93 e0       	ldi	r25, 0x03	; 3
    1bd4:	6d d8       	rcall	.-3878   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1bd6:	1a 5f       	subi	r17, 0xFA	; 250
    1bd8:	1e 37       	cpi	r17, 0x7E	; 126
    1bda:	a9 f7       	brne	.-22     	; 0x1bc6 <_Z11menue_einstv+0x74>
    1bdc:	81 e1       	ldi	r24, 0x11	; 17
    1bde:	ef eb       	ldi	r30, 0xBF	; 191
    1be0:	f1 e0       	ldi	r31, 0x01	; 1
    1be2:	de 01       	movw	r26, r28
    1be4:	11 96       	adiw	r26, 0x01	; 1
    1be6:	01 90       	ld	r0, Z+
    1be8:	0d 92       	st	X+, r0
    1bea:	8a 95       	dec	r24
    1bec:	e1 f7       	brne	.-8      	; 0x1be6 <_Z11menue_einstv+0x94>
    1bee:	ad 2c       	mov	r10, r13
    1bf0:	be 2c       	mov	r11, r14
    1bf2:	10 e0       	ldi	r17, 0x00	; 0
    1bf4:	f5 01       	movw	r30, r10
    1bf6:	61 91       	ld	r22, Z+
    1bf8:	5f 01       	movw	r10, r30
    1bfa:	20 e1       	ldi	r18, 0x10	; 16
    1bfc:	41 2f       	mov	r20, r17
    1bfe:	82 e7       	ldi	r24, 0x72	; 114
    1c00:	93 e0       	ldi	r25, 0x03	; 3
    1c02:	56 d8       	rcall	.-3924   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1c04:	1a 5f       	subi	r17, 0xFA	; 250
    1c06:	10 36       	cpi	r17, 0x60	; 96
    1c08:	a9 f7       	brne	.-22     	; 0x1bf4 <_Z11menue_einstv+0xa2>
    1c0a:	83 e1       	ldi	r24, 0x13	; 19
    1c0c:	e0 ed       	ldi	r30, 0xD0	; 208
    1c0e:	f1 e0       	ldi	r31, 0x01	; 1
    1c10:	de 01       	movw	r26, r28
    1c12:	11 96       	adiw	r26, 0x01	; 1
    1c14:	01 90       	ld	r0, Z+
    1c16:	0d 92       	st	X+, r0
    1c18:	8a 95       	dec	r24
    1c1a:	e1 f7       	brne	.-8      	; 0x1c14 <_Z11menue_einstv+0xc2>
    1c1c:	ad 2c       	mov	r10, r13
    1c1e:	be 2c       	mov	r11, r14
    1c20:	10 e0       	ldi	r17, 0x00	; 0
    1c22:	f5 01       	movw	r30, r10
    1c24:	61 91       	ld	r22, Z+
    1c26:	5f 01       	movw	r10, r30
    1c28:	28 e1       	ldi	r18, 0x18	; 24
    1c2a:	41 2f       	mov	r20, r17
    1c2c:	82 e7       	ldi	r24, 0x72	; 114
    1c2e:	93 e0       	ldi	r25, 0x03	; 3
    1c30:	3f d8       	rcall	.-3970   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1c32:	1a 5f       	subi	r17, 0xFA	; 250
    1c34:	1c 36       	cpi	r17, 0x6C	; 108
    1c36:	a9 f7       	brne	.-22     	; 0x1c22 <_Z11menue_einstv+0xd0>
    1c38:	64 96       	adiw	r28, 0x14	; 20
    1c3a:	0f b6       	in	r0, 0x3f	; 63
    1c3c:	f8 94       	cli
    1c3e:	de bf       	out	0x3e, r29	; 62
    1c40:	0f be       	out	0x3f, r0	; 63
    1c42:	cd bf       	out	0x3d, r28	; 61
    1c44:	df 91       	pop	r29
    1c46:	cf 91       	pop	r28
    1c48:	1f 91       	pop	r17
    1c4a:	0f 91       	pop	r16
    1c4c:	ef 90       	pop	r14
    1c4e:	df 90       	pop	r13
    1c50:	bf 90       	pop	r11
    1c52:	af 90       	pop	r10
    1c54:	08 95       	ret

00001c56 <_Z9menue_uhrv>:
    1c56:	af 92       	push	r10
    1c58:	bf 92       	push	r11
    1c5a:	df 92       	push	r13
    1c5c:	ef 92       	push	r14
    1c5e:	0f 93       	push	r16
    1c60:	1f 93       	push	r17
    1c62:	cf 93       	push	r28
    1c64:	df 93       	push	r29
    1c66:	cd b7       	in	r28, 0x3d	; 61
    1c68:	de b7       	in	r29, 0x3e	; 62
    1c6a:	64 97       	sbiw	r28, 0x14	; 20
    1c6c:	0f b6       	in	r0, 0x3f	; 63
    1c6e:	f8 94       	cli
    1c70:	de bf       	out	0x3e, r29	; 62
    1c72:	0f be       	out	0x3f, r0	; 63
    1c74:	cd bf       	out	0x3d, r28	; 61
    1c76:	82 e7       	ldi	r24, 0x72	; 114
    1c78:	93 e0       	ldi	r25, 0x03	; 3
    1c7a:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1c7e:	86 e0       	ldi	r24, 0x06	; 6
    1c80:	e3 ee       	ldi	r30, 0xE3	; 227
    1c82:	f1 e0       	ldi	r31, 0x01	; 1
    1c84:	8e 01       	movw	r16, r28
    1c86:	0f 5f       	subi	r16, 0xFF	; 255
    1c88:	1f 4f       	sbci	r17, 0xFF	; 255
    1c8a:	d8 01       	movw	r26, r16
    1c8c:	01 90       	ld	r0, Z+
    1c8e:	0d 92       	st	X+, r0
    1c90:	8a 95       	dec	r24
    1c92:	e1 f7       	brne	.-8      	; 0x1c8c <_Z9menue_uhrv+0x36>
    1c94:	d0 2e       	mov	r13, r16
    1c96:	e1 2e       	mov	r14, r17
    1c98:	58 01       	movw	r10, r16
    1c9a:	10 e0       	ldi	r17, 0x00	; 0
    1c9c:	f5 01       	movw	r30, r10
    1c9e:	61 91       	ld	r22, Z+
    1ca0:	5f 01       	movw	r10, r30
    1ca2:	20 e0       	ldi	r18, 0x00	; 0
    1ca4:	41 2f       	mov	r20, r17
    1ca6:	82 e7       	ldi	r24, 0x72	; 114
    1ca8:	93 e0       	ldi	r25, 0x03	; 3
    1caa:	02 d8       	rcall	.-4092   	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1cac:	1a 5f       	subi	r17, 0xFA	; 250
    1cae:	1e 31       	cpi	r17, 0x1E	; 30
    1cb0:	a9 f7       	brne	.-22     	; 0x1c9c <_Z9menue_uhrv+0x46>
    1cb2:	8b e0       	ldi	r24, 0x0B	; 11
    1cb4:	e9 ee       	ldi	r30, 0xE9	; 233
    1cb6:	f1 e0       	ldi	r31, 0x01	; 1
    1cb8:	de 01       	movw	r26, r28
    1cba:	11 96       	adiw	r26, 0x01	; 1
    1cbc:	01 90       	ld	r0, Z+
    1cbe:	0d 92       	st	X+, r0
    1cc0:	8a 95       	dec	r24
    1cc2:	e1 f7       	brne	.-8      	; 0x1cbc <_Z9menue_uhrv+0x66>
    1cc4:	ad 2c       	mov	r10, r13
    1cc6:	be 2c       	mov	r11, r14
    1cc8:	10 e0       	ldi	r17, 0x00	; 0
    1cca:	f5 01       	movw	r30, r10
    1ccc:	61 91       	ld	r22, Z+
    1cce:	5f 01       	movw	r10, r30
    1cd0:	28 e0       	ldi	r18, 0x08	; 8
    1cd2:	41 2f       	mov	r20, r17
    1cd4:	82 e7       	ldi	r24, 0x72	; 114
    1cd6:	93 e0       	ldi	r25, 0x03	; 3
    1cd8:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1cdc:	1a 5f       	subi	r17, 0xFA	; 250
    1cde:	1c 33       	cpi	r17, 0x3C	; 60
    1ce0:	a1 f7       	brne	.-24     	; 0x1cca <_Z9menue_uhrv+0x74>
    1ce2:	88 e0       	ldi	r24, 0x08	; 8
    1ce4:	e4 ef       	ldi	r30, 0xF4	; 244
    1ce6:	f1 e0       	ldi	r31, 0x01	; 1
    1ce8:	de 01       	movw	r26, r28
    1cea:	11 96       	adiw	r26, 0x01	; 1
    1cec:	01 90       	ld	r0, Z+
    1cee:	0d 92       	st	X+, r0
    1cf0:	8a 95       	dec	r24
    1cf2:	e1 f7       	brne	.-8      	; 0x1cec <_Z9menue_uhrv+0x96>
    1cf4:	ad 2c       	mov	r10, r13
    1cf6:	be 2c       	mov	r11, r14
    1cf8:	10 e0       	ldi	r17, 0x00	; 0
    1cfa:	f5 01       	movw	r30, r10
    1cfc:	61 91       	ld	r22, Z+
    1cfe:	5f 01       	movw	r10, r30
    1d00:	20 e1       	ldi	r18, 0x10	; 16
    1d02:	41 2f       	mov	r20, r17
    1d04:	82 e7       	ldi	r24, 0x72	; 114
    1d06:	93 e0       	ldi	r25, 0x03	; 3
    1d08:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1d0c:	1a 5f       	subi	r17, 0xFA	; 250
    1d0e:	1a 32       	cpi	r17, 0x2A	; 42
    1d10:	a1 f7       	brne	.-24     	; 0x1cfa <_Z9menue_uhrv+0xa4>
    1d12:	89 e0       	ldi	r24, 0x09	; 9
    1d14:	ec ef       	ldi	r30, 0xFC	; 252
    1d16:	f1 e0       	ldi	r31, 0x01	; 1
    1d18:	de 01       	movw	r26, r28
    1d1a:	11 96       	adiw	r26, 0x01	; 1
    1d1c:	01 90       	ld	r0, Z+
    1d1e:	0d 92       	st	X+, r0
    1d20:	8a 95       	dec	r24
    1d22:	e1 f7       	brne	.-8      	; 0x1d1c <_Z9menue_uhrv+0xc6>
    1d24:	ad 2c       	mov	r10, r13
    1d26:	be 2c       	mov	r11, r14
    1d28:	10 e0       	ldi	r17, 0x00	; 0
    1d2a:	f5 01       	movw	r30, r10
    1d2c:	61 91       	ld	r22, Z+
    1d2e:	5f 01       	movw	r10, r30
    1d30:	28 e1       	ldi	r18, 0x18	; 24
    1d32:	41 2f       	mov	r20, r17
    1d34:	82 e7       	ldi	r24, 0x72	; 114
    1d36:	93 e0       	ldi	r25, 0x03	; 3
    1d38:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1d3c:	1a 5f       	subi	r17, 0xFA	; 250
    1d3e:	10 33       	cpi	r17, 0x30	; 48
    1d40:	a1 f7       	brne	.-24     	; 0x1d2a <_Z9menue_uhrv+0xd4>
    1d42:	8c e0       	ldi	r24, 0x0C	; 12
    1d44:	e5 e0       	ldi	r30, 0x05	; 5
    1d46:	f2 e0       	ldi	r31, 0x02	; 2
    1d48:	de 01       	movw	r26, r28
    1d4a:	11 96       	adiw	r26, 0x01	; 1
    1d4c:	01 90       	ld	r0, Z+
    1d4e:	0d 92       	st	X+, r0
    1d50:	8a 95       	dec	r24
    1d52:	e1 f7       	brne	.-8      	; 0x1d4c <_Z9menue_uhrv+0xf6>
    1d54:	ad 2c       	mov	r10, r13
    1d56:	be 2c       	mov	r11, r14
    1d58:	10 e0       	ldi	r17, 0x00	; 0
    1d5a:	f5 01       	movw	r30, r10
    1d5c:	61 91       	ld	r22, Z+
    1d5e:	5f 01       	movw	r10, r30
    1d60:	20 e2       	ldi	r18, 0x20	; 32
    1d62:	41 2f       	mov	r20, r17
    1d64:	82 e7       	ldi	r24, 0x72	; 114
    1d66:	93 e0       	ldi	r25, 0x03	; 3
    1d68:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1d6c:	1a 5f       	subi	r17, 0xFA	; 250
    1d6e:	12 34       	cpi	r17, 0x42	; 66
    1d70:	a1 f7       	brne	.-24     	; 0x1d5a <_Z9menue_uhrv+0x104>
    1d72:	64 96       	adiw	r28, 0x14	; 20
    1d74:	0f b6       	in	r0, 0x3f	; 63
    1d76:	f8 94       	cli
    1d78:	de bf       	out	0x3e, r29	; 62
    1d7a:	0f be       	out	0x3f, r0	; 63
    1d7c:	cd bf       	out	0x3d, r28	; 61
    1d7e:	df 91       	pop	r29
    1d80:	cf 91       	pop	r28
    1d82:	1f 91       	pop	r17
    1d84:	0f 91       	pop	r16
    1d86:	ef 90       	pop	r14
    1d88:	df 90       	pop	r13
    1d8a:	bf 90       	pop	r11
    1d8c:	af 90       	pop	r10
    1d8e:	08 95       	ret

00001d90 <_Z11uhranzeigenv>:
    1d90:	df 92       	push	r13
    1d92:	ef 92       	push	r14
    1d94:	ff 92       	push	r15
    1d96:	0f 93       	push	r16
    1d98:	1f 93       	push	r17
    1d9a:	cf 93       	push	r28
    1d9c:	df 93       	push	r29
    1d9e:	cd b7       	in	r28, 0x3d	; 61
    1da0:	de b7       	in	r29, 0x3e	; 62
    1da2:	64 97       	sbiw	r28, 0x14	; 20
    1da4:	0f b6       	in	r0, 0x3f	; 63
    1da6:	f8 94       	cli
    1da8:	de bf       	out	0x3e, r29	; 62
    1daa:	0f be       	out	0x3f, r0	; 63
    1dac:	cd bf       	out	0x3d, r28	; 61
    1dae:	80 e5       	ldi	r24, 0x50	; 80
    1db0:	93 e0       	ldi	r25, 0x03	; 3
    1db2:	0e 94 b5 2b 	call	0x576a	; 0x576a <_ZN8Pressure16READ_TemperatureEv>
    1db6:	82 e7       	ldi	r24, 0x72	; 114
    1db8:	93 e0       	ldi	r25, 0x03	; 3
    1dba:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1dbe:	01 e0       	ldi	r16, 0x01	; 1
    1dc0:	20 91 85 07 	lds	r18, 0x0785
    1dc4:	40 91 84 07 	lds	r20, 0x0784
    1dc8:	60 91 83 07 	lds	r22, 0x0783
    1dcc:	82 e7       	ldi	r24, 0x72	; 114
    1dce:	93 e0       	ldi	r25, 0x03	; 3
    1dd0:	33 d8       	rcall	.-3994   	; 0xe38 <_ZN7Display6analogEhhhh>
    1dd2:	0f 2e       	mov	r0, r31
    1dd4:	f3 e7       	ldi	r31, 0x73	; 115
    1dd6:	ef 2e       	mov	r14, r31
    1dd8:	f7 e0       	ldi	r31, 0x07	; 7
    1dda:	ff 2e       	mov	r15, r31
    1ddc:	f0 2d       	mov	r31, r0
    1dde:	11 e4       	ldi	r17, 0x41	; 65
    1de0:	f7 01       	movw	r30, r14
    1de2:	61 91       	ld	r22, Z+
    1de4:	7f 01       	movw	r14, r30
    1de6:	20 e0       	ldi	r18, 0x00	; 0
    1de8:	41 2f       	mov	r20, r17
    1dea:	82 e7       	ldi	r24, 0x72	; 114
    1dec:	93 e0       	ldi	r25, 0x03	; 3
    1dee:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1df2:	1a 5f       	subi	r17, 0xFA	; 250
    1df4:	11 37       	cpi	r17, 0x71	; 113
    1df6:	a1 f7       	brne	.-24     	; 0x1de0 <_Z11uhranzeigenv+0x50>
    1df8:	0f 2e       	mov	r0, r31
    1dfa:	fb e7       	ldi	r31, 0x7B	; 123
    1dfc:	ef 2e       	mov	r14, r31
    1dfe:	f7 e0       	ldi	r31, 0x07	; 7
    1e00:	ff 2e       	mov	r15, r31
    1e02:	f0 2d       	mov	r31, r0
    1e04:	11 e4       	ldi	r17, 0x41	; 65
    1e06:	f7 01       	movw	r30, r14
    1e08:	61 91       	ld	r22, Z+
    1e0a:	7f 01       	movw	r14, r30
    1e0c:	28 e3       	ldi	r18, 0x38	; 56
    1e0e:	41 2f       	mov	r20, r17
    1e10:	82 e7       	ldi	r24, 0x72	; 114
    1e12:	93 e0       	ldi	r25, 0x03	; 3
    1e14:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1e18:	1a 5f       	subi	r17, 0xFA	; 250
    1e1a:	11 37       	cpi	r17, 0x71	; 113
    1e1c:	a1 f7       	brne	.-24     	; 0x1e06 <_Z11uhranzeigenv+0x76>
    1e1e:	99 da       	rcall	.-2766   	; 0x1352 <_Z14Batteriestatusv>
    1e20:	28 2f       	mov	r18, r24
    1e22:	33 27       	eor	r19, r19
    1e24:	27 fd       	sbrc	r18, 7
    1e26:	30 95       	com	r19
    1e28:	3f 93       	push	r19
    1e2a:	8f 93       	push	r24
    1e2c:	81 e3       	ldi	r24, 0x31	; 49
    1e2e:	91 e0       	ldi	r25, 0x01	; 1
    1e30:	9f 93       	push	r25
    1e32:	8f 93       	push	r24
    1e34:	ce 01       	movw	r24, r28
    1e36:	01 96       	adiw	r24, 0x01	; 1
    1e38:	9f 93       	push	r25
    1e3a:	8f 93       	push	r24
    1e3c:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    1e40:	0f 90       	pop	r0
    1e42:	0f 90       	pop	r0
    1e44:	0f 90       	pop	r0
    1e46:	0f 90       	pop	r0
    1e48:	0f 90       	pop	r0
    1e4a:	0f 90       	pop	r0
    1e4c:	88 23       	and	r24, r24
    1e4e:	59 f1       	breq	.+86     	; 0x1ea6 <_Z11uhranzeigenv+0x116>
    1e50:	8e 01       	movw	r16, r28
    1e52:	0f 5f       	subi	r16, 0xFF	; 255
    1e54:	1f 4f       	sbci	r17, 0xFF	; 255
    1e56:	81 50       	subi	r24, 0x01	; 1
    1e58:	68 94       	set
    1e5a:	ee 24       	eor	r14, r14
    1e5c:	e1 f8       	bld	r14, 1
    1e5e:	f1 2c       	mov	r15, r1
    1e60:	ec 0e       	add	r14, r28
    1e62:	fd 1e       	adc	r15, r29
    1e64:	e8 0e       	add	r14, r24
    1e66:	f1 1c       	adc	r15, r1
    1e68:	0f 2e       	mov	r0, r31
    1e6a:	f9 e4       	ldi	r31, 0x49	; 73
    1e6c:	df 2e       	mov	r13, r31
    1e6e:	f0 2d       	mov	r31, r0
    1e70:	f8 01       	movw	r30, r16
    1e72:	61 91       	ld	r22, Z+
    1e74:	8f 01       	movw	r16, r30
    1e76:	86 2f       	mov	r24, r22
    1e78:	87 7f       	andi	r24, 0xF7	; 247
    1e7a:	85 32       	cpi	r24, 0x25	; 37
    1e7c:	39 f4       	brne	.+14     	; 0x1e8c <_Z11uhranzeigenv+0xfc>
    1e7e:	28 e1       	ldi	r18, 0x18	; 24
    1e80:	4d 2d       	mov	r20, r13
    1e82:	82 e7       	ldi	r24, 0x72	; 114
    1e84:	93 e0       	ldi	r25, 0x03	; 3
    1e86:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1e8a:	08 c0       	rjmp	.+16     	; 0x1e9c <_Z11uhranzeigenv+0x10c>
    1e8c:	60 53       	subi	r22, 0x30	; 48
    1e8e:	24 e1       	ldi	r18, 0x14	; 20
    1e90:	4d ef       	ldi	r20, 0xFD	; 253
    1e92:	4d 0d       	add	r20, r13
    1e94:	82 e7       	ldi	r24, 0x72	; 114
    1e96:	93 e0       	ldi	r25, 0x03	; 3
    1e98:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    1e9c:	f0 e1       	ldi	r31, 0x10	; 16
    1e9e:	df 0e       	add	r13, r31
    1ea0:	0e 15       	cp	r16, r14
    1ea2:	1f 05       	cpc	r17, r15
    1ea4:	29 f7       	brne	.-54     	; 0x1e70 <_Z11uhranzeigenv+0xe0>
    1ea6:	e4 e5       	ldi	r30, 0x54	; 84
    1ea8:	f3 e0       	ldi	r31, 0x03	; 3
    1eaa:	83 81       	ldd	r24, Z+3	; 0x03
    1eac:	8f 93       	push	r24
    1eae:	82 81       	ldd	r24, Z+2	; 0x02
    1eb0:	8f 93       	push	r24
    1eb2:	81 81       	ldd	r24, Z+1	; 0x01
    1eb4:	8f 93       	push	r24
    1eb6:	80 81       	ld	r24, Z
    1eb8:	8f 93       	push	r24
    1eba:	81 e1       	ldi	r24, 0x11	; 17
    1ebc:	92 e0       	ldi	r25, 0x02	; 2
    1ebe:	9f 93       	push	r25
    1ec0:	8f 93       	push	r24
    1ec2:	ce 01       	movw	r24, r28
    1ec4:	01 96       	adiw	r24, 0x01	; 1
    1ec6:	9f 93       	push	r25
    1ec8:	8f 93       	push	r24
    1eca:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    1ece:	0f b6       	in	r0, 0x3f	; 63
    1ed0:	f8 94       	cli
    1ed2:	de bf       	out	0x3e, r29	; 62
    1ed4:	0f be       	out	0x3f, r0	; 63
    1ed6:	cd bf       	out	0x3d, r28	; 61
    1ed8:	88 23       	and	r24, r24
    1eda:	f1 f0       	breq	.+60     	; 0x1f18 <_Z11uhranzeigenv+0x188>
    1edc:	8e 01       	movw	r16, r28
    1ede:	0f 5f       	subi	r16, 0xFF	; 255
    1ee0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ee2:	81 50       	subi	r24, 0x01	; 1
    1ee4:	68 94       	set
    1ee6:	ee 24       	eor	r14, r14
    1ee8:	e1 f8       	bld	r14, 1
    1eea:	f1 2c       	mov	r15, r1
    1eec:	ec 0e       	add	r14, r28
    1eee:	fd 1e       	adc	r15, r29
    1ef0:	e8 0e       	add	r14, r24
    1ef2:	f1 1c       	adc	r15, r1
    1ef4:	0f 2e       	mov	r0, r31
    1ef6:	f6 e4       	ldi	r31, 0x46	; 70
    1ef8:	df 2e       	mov	r13, r31
    1efa:	f0 2d       	mov	r31, r0
    1efc:	f8 01       	movw	r30, r16
    1efe:	61 91       	ld	r22, Z+
    1f00:	8f 01       	movw	r16, r30
    1f02:	28 e2       	ldi	r18, 0x28	; 40
    1f04:	4d 2d       	mov	r20, r13
    1f06:	82 e7       	ldi	r24, 0x72	; 114
    1f08:	93 e0       	ldi	r25, 0x03	; 3
    1f0a:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1f0e:	f6 e0       	ldi	r31, 0x06	; 6
    1f10:	df 0e       	add	r13, r31
    1f12:	0e 15       	cp	r16, r14
    1f14:	1f 05       	cpc	r17, r15
    1f16:	91 f7       	brne	.-28     	; 0x1efc <_Z11uhranzeigenv+0x16c>
    1f18:	64 96       	adiw	r28, 0x14	; 20
    1f1a:	0f b6       	in	r0, 0x3f	; 63
    1f1c:	f8 94       	cli
    1f1e:	de bf       	out	0x3e, r29	; 62
    1f20:	0f be       	out	0x3f, r0	; 63
    1f22:	cd bf       	out	0x3d, r28	; 61
    1f24:	df 91       	pop	r29
    1f26:	cf 91       	pop	r28
    1f28:	1f 91       	pop	r17
    1f2a:	0f 91       	pop	r16
    1f2c:	ff 90       	pop	r15
    1f2e:	ef 90       	pop	r14
    1f30:	df 90       	pop	r13
    1f32:	08 95       	ret

00001f34 <_Z14uhranzeigenminv>:
    1f34:	0f 93       	push	r16
    1f36:	1f 93       	push	r17
    1f38:	cf 93       	push	r28
    1f3a:	df 93       	push	r29
    1f3c:	82 e7       	ldi	r24, 0x72	; 114
    1f3e:	93 e0       	ldi	r25, 0x03	; 3
    1f40:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1f44:	82 e0       	ldi	r24, 0x02	; 2
    1f46:	26 db       	rcall	.-2484   	; 0x1594 <_Z6headerh>
    1f48:	00 e0       	ldi	r16, 0x00	; 0
    1f4a:	20 91 85 07 	lds	r18, 0x0785
    1f4e:	40 91 84 07 	lds	r20, 0x0784
    1f52:	60 91 83 07 	lds	r22, 0x0783
    1f56:	82 e7       	ldi	r24, 0x72	; 114
    1f58:	93 e0       	ldi	r25, 0x03	; 3
    1f5a:	0e 94 1c 07 	call	0xe38	; 0xe38 <_ZN7Display6analogEhhhh>
    1f5e:	c3 e7       	ldi	r28, 0x73	; 115
    1f60:	d7 e0       	ldi	r29, 0x07	; 7
    1f62:	11 e4       	ldi	r17, 0x41	; 65
    1f64:	69 91       	ld	r22, Y+
    1f66:	20 e0       	ldi	r18, 0x00	; 0
    1f68:	41 2f       	mov	r20, r17
    1f6a:	82 e7       	ldi	r24, 0x72	; 114
    1f6c:	93 e0       	ldi	r25, 0x03	; 3
    1f6e:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1f72:	1a 5f       	subi	r17, 0xFA	; 250
    1f74:	1f 35       	cpi	r17, 0x5F	; 95
    1f76:	b1 f7       	brne	.-20     	; 0x1f64 <_Z14uhranzeigenminv+0x30>
    1f78:	cb e7       	ldi	r28, 0x7B	; 123
    1f7a:	d7 e0       	ldi	r29, 0x07	; 7
    1f7c:	11 e4       	ldi	r17, 0x41	; 65
    1f7e:	69 91       	ld	r22, Y+
    1f80:	28 e3       	ldi	r18, 0x38	; 56
    1f82:	41 2f       	mov	r20, r17
    1f84:	82 e7       	ldi	r24, 0x72	; 114
    1f86:	93 e0       	ldi	r25, 0x03	; 3
    1f88:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    1f8c:	1a 5f       	subi	r17, 0xFA	; 250
    1f8e:	11 37       	cpi	r17, 0x71	; 113
    1f90:	b1 f7       	brne	.-20     	; 0x1f7e <_Z14uhranzeigenminv+0x4a>
    1f92:	60 91 73 07 	lds	r22, 0x0773
    1f96:	60 53       	subi	r22, 0x30	; 48
    1f98:	2d e0       	ldi	r18, 0x0D	; 13
    1f9a:	46 e4       	ldi	r20, 0x46	; 70
    1f9c:	82 e7       	ldi	r24, 0x72	; 114
    1f9e:	93 e0       	ldi	r25, 0x03	; 3
    1fa0:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    1fa4:	60 91 74 07 	lds	r22, 0x0774
    1fa8:	60 53       	subi	r22, 0x30	; 48
    1faa:	2d e0       	ldi	r18, 0x0D	; 13
    1fac:	46 e5       	ldi	r20, 0x56	; 86
    1fae:	82 e7       	ldi	r24, 0x72	; 114
    1fb0:	93 e0       	ldi	r25, 0x03	; 3
    1fb2:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    1fb6:	60 91 76 07 	lds	r22, 0x0776
    1fba:	60 53       	subi	r22, 0x30	; 48
    1fbc:	22 e2       	ldi	r18, 0x22	; 34
    1fbe:	46 e4       	ldi	r20, 0x46	; 70
    1fc0:	82 e7       	ldi	r24, 0x72	; 114
    1fc2:	93 e0       	ldi	r25, 0x03	; 3
    1fc4:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    1fc8:	60 91 77 07 	lds	r22, 0x0777
    1fcc:	60 53       	subi	r22, 0x30	; 48
    1fce:	22 e2       	ldi	r18, 0x22	; 34
    1fd0:	46 e5       	ldi	r20, 0x56	; 86
    1fd2:	82 e7       	ldi	r24, 0x72	; 114
    1fd4:	93 e0       	ldi	r25, 0x03	; 3
    1fd6:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    1fda:	df 91       	pop	r29
    1fdc:	cf 91       	pop	r28
    1fde:	1f 91       	pop	r17
    1fe0:	0f 91       	pop	r16
    1fe2:	08 95       	ret

00001fe4 <_Z13Weckeranzeigev>:
    1fe4:	1f 93       	push	r17
    1fe6:	cf 93       	push	r28
    1fe8:	df 93       	push	r29
    1fea:	82 e7       	ldi	r24, 0x72	; 114
    1fec:	93 e0       	ldi	r25, 0x03	; 3
    1fee:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1ff2:	81 e0       	ldi	r24, 0x01	; 1
    1ff4:	b0 db       	rcall	.-2208   	; 0x1756 <_Z6bottomh>
    1ff6:	81 e0       	ldi	r24, 0x01	; 1
    1ff8:	cd da       	rcall	.-2662   	; 0x1594 <_Z6headerh>
    1ffa:	60 91 73 07 	lds	r22, 0x0773
    1ffe:	60 53       	subi	r22, 0x30	; 48
    2000:	2d e0       	ldi	r18, 0x0D	; 13
    2002:	45 e0       	ldi	r20, 0x05	; 5
    2004:	82 e7       	ldi	r24, 0x72	; 114
    2006:	93 e0       	ldi	r25, 0x03	; 3
    2008:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    200c:	60 91 74 07 	lds	r22, 0x0774
    2010:	60 53       	subi	r22, 0x30	; 48
    2012:	2d e0       	ldi	r18, 0x0D	; 13
    2014:	45 e1       	ldi	r20, 0x15	; 21
    2016:	82 e7       	ldi	r24, 0x72	; 114
    2018:	93 e0       	ldi	r25, 0x03	; 3
    201a:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    201e:	60 91 76 07 	lds	r22, 0x0776
    2022:	60 53       	subi	r22, 0x30	; 48
    2024:	22 e2       	ldi	r18, 0x22	; 34
    2026:	45 e0       	ldi	r20, 0x05	; 5
    2028:	82 e7       	ldi	r24, 0x72	; 114
    202a:	93 e0       	ldi	r25, 0x03	; 3
    202c:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    2030:	60 91 77 07 	lds	r22, 0x0777
    2034:	60 53       	subi	r22, 0x30	; 48
    2036:	22 e2       	ldi	r18, 0x22	; 34
    2038:	45 e1       	ldi	r20, 0x15	; 21
    203a:	82 e7       	ldi	r24, 0x72	; 114
    203c:	93 e0       	ldi	r25, 0x03	; 3
    203e:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    2042:	cd e8       	ldi	r28, 0x8D	; 141
    2044:	d7 e0       	ldi	r29, 0x07	; 7
    2046:	68 81       	ld	r22, Y
    2048:	1d ec       	ldi	r17, 0xCD	; 205
    204a:	61 9f       	mul	r22, r17
    204c:	61 2d       	mov	r22, r1
    204e:	11 24       	eor	r1, r1
    2050:	66 95       	lsr	r22
    2052:	66 95       	lsr	r22
    2054:	66 95       	lsr	r22
    2056:	2d e0       	ldi	r18, 0x0D	; 13
    2058:	46 e4       	ldi	r20, 0x46	; 70
    205a:	82 e7       	ldi	r24, 0x72	; 114
    205c:	93 e0       	ldi	r25, 0x03	; 3
    205e:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    2062:	68 81       	ld	r22, Y
    2064:	61 9f       	mul	r22, r17
    2066:	81 2d       	mov	r24, r1
    2068:	11 24       	eor	r1, r1
    206a:	86 95       	lsr	r24
    206c:	86 95       	lsr	r24
    206e:	86 95       	lsr	r24
    2070:	88 0f       	add	r24, r24
    2072:	98 2f       	mov	r25, r24
    2074:	99 0f       	add	r25, r25
    2076:	99 0f       	add	r25, r25
    2078:	89 0f       	add	r24, r25
    207a:	68 1b       	sub	r22, r24
    207c:	2d e0       	ldi	r18, 0x0D	; 13
    207e:	46 e5       	ldi	r20, 0x56	; 86
    2080:	82 e7       	ldi	r24, 0x72	; 114
    2082:	93 e0       	ldi	r25, 0x03	; 3
    2084:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    2088:	cc e8       	ldi	r28, 0x8C	; 140
    208a:	d7 e0       	ldi	r29, 0x07	; 7
    208c:	68 81       	ld	r22, Y
    208e:	61 9f       	mul	r22, r17
    2090:	61 2d       	mov	r22, r1
    2092:	11 24       	eor	r1, r1
    2094:	66 95       	lsr	r22
    2096:	66 95       	lsr	r22
    2098:	66 95       	lsr	r22
    209a:	22 e2       	ldi	r18, 0x22	; 34
    209c:	46 e4       	ldi	r20, 0x46	; 70
    209e:	82 e7       	ldi	r24, 0x72	; 114
    20a0:	93 e0       	ldi	r25, 0x03	; 3
    20a2:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    20a6:	68 81       	ld	r22, Y
    20a8:	61 9f       	mul	r22, r17
    20aa:	11 2d       	mov	r17, r1
    20ac:	11 24       	eor	r1, r1
    20ae:	16 95       	lsr	r17
    20b0:	16 95       	lsr	r17
    20b2:	16 95       	lsr	r17
    20b4:	11 0f       	add	r17, r17
    20b6:	81 2f       	mov	r24, r17
    20b8:	88 0f       	add	r24, r24
    20ba:	88 0f       	add	r24, r24
    20bc:	18 0f       	add	r17, r24
    20be:	61 1b       	sub	r22, r17
    20c0:	22 e2       	ldi	r18, 0x22	; 34
    20c2:	46 e5       	ldi	r20, 0x56	; 86
    20c4:	82 e7       	ldi	r24, 0x72	; 114
    20c6:	93 e0       	ldi	r25, 0x03	; 3
    20c8:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    20cc:	80 91 8b 07 	lds	r24, 0x078B
    20d0:	83 ff       	sbrs	r24, 3
    20d2:	07 c0       	rjmp	.+14     	; 0x20e2 <_Z13Weckeranzeigev+0xfe>
    20d4:	20 e0       	ldi	r18, 0x00	; 0
    20d6:	40 e0       	ldi	r20, 0x00	; 0
    20d8:	6f e6       	ldi	r22, 0x6F	; 111
    20da:	82 e7       	ldi	r24, 0x72	; 114
    20dc:	93 e0       	ldi	r25, 0x03	; 3
    20de:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    20e2:	80 91 37 03 	lds	r24, 0x0337
    20e6:	90 91 38 03 	lds	r25, 0x0338
    20ea:	94 ff       	sbrs	r25, 4
    20ec:	09 c0       	rjmp	.+18     	; 0x2100 <_Z13Weckeranzeigev+0x11c>
    20ee:	60 91 35 03 	lds	r22, 0x0335
    20f2:	60 5d       	subi	r22, 0xD0	; 208
    20f4:	20 e0       	ldi	r18, 0x00	; 0
    20f6:	46 e0       	ldi	r20, 0x06	; 6
    20f8:	82 e7       	ldi	r24, 0x72	; 114
    20fa:	93 e0       	ldi	r25, 0x03	; 3
    20fc:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2100:	df 91       	pop	r29
    2102:	cf 91       	pop	r28
    2104:	1f 91       	pop	r17
    2106:	08 95       	ret

00002108 <_Z12fahradschirmddddm>:
    2108:	2f 92       	push	r2
    210a:	3f 92       	push	r3
    210c:	4f 92       	push	r4
    210e:	5f 92       	push	r5
    2110:	6f 92       	push	r6
    2112:	7f 92       	push	r7
    2114:	8f 92       	push	r8
    2116:	9f 92       	push	r9
    2118:	af 92       	push	r10
    211a:	bf 92       	push	r11
    211c:	cf 92       	push	r12
    211e:	df 92       	push	r13
    2120:	ef 92       	push	r14
    2122:	ff 92       	push	r15
    2124:	0f 93       	push	r16
    2126:	1f 93       	push	r17
    2128:	cf 93       	push	r28
    212a:	df 93       	push	r29
    212c:	cd b7       	in	r28, 0x3d	; 61
    212e:	de b7       	in	r29, 0x3e	; 62
    2130:	60 97       	sbiw	r28, 0x10	; 16
    2132:	0f b6       	in	r0, 0x3f	; 63
    2134:	f8 94       	cli
    2136:	de bf       	out	0x3e, r29	; 62
    2138:	0f be       	out	0x3f, r0	; 63
    213a:	cd bf       	out	0x3d, r28	; 61
    213c:	96 2e       	mov	r9, r22
    213e:	27 2e       	mov	r2, r23
    2140:	88 2e       	mov	r8, r24
    2142:	39 2e       	mov	r3, r25
    2144:	29 01       	movw	r4, r18
    2146:	3a 01       	movw	r6, r20
    2148:	0b 87       	std	Y+11, r16	; 0x0b
    214a:	1c 87       	std	Y+12, r17	; 0x0c
    214c:	2d a1       	ldd	r18, Y+37	; 0x25
    214e:	2d 87       	std	Y+13, r18	; 0x0d
    2150:	3e a1       	ldd	r19, Y+38	; 0x26
    2152:	3e 87       	std	Y+14, r19	; 0x0e
    2154:	8f a1       	ldd	r24, Y+39	; 0x27
    2156:	8f 87       	std	Y+15, r24	; 0x0f
    2158:	98 a5       	ldd	r25, Y+40	; 0x28
    215a:	98 8b       	std	Y+16, r25	; 0x10
    215c:	82 e7       	ldi	r24, 0x72	; 114
    215e:	93 e0       	ldi	r25, 0x03	; 3
    2160:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2164:	81 e0       	ldi	r24, 0x01	; 1
    2166:	16 da       	rcall	.-3028   	; 0x1594 <_Z6headerh>
    2168:	80 e0       	ldi	r24, 0x00	; 0
    216a:	f5 da       	rcall	.-2582   	; 0x1756 <_Z6bottomh>
    216c:	20 e8       	ldi	r18, 0x80	; 128
    216e:	47 e3       	ldi	r20, 0x37	; 55
    2170:	60 e0       	ldi	r22, 0x00	; 0
    2172:	82 e7       	ldi	r24, 0x72	; 114
    2174:	93 e0       	ldi	r25, 0x03	; 3
    2176:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    217a:	25 e4       	ldi	r18, 0x45	; 69
    217c:	4f e0       	ldi	r20, 0x0F	; 15
    217e:	60 e0       	ldi	r22, 0x00	; 0
    2180:	82 e7       	ldi	r24, 0x72	; 114
    2182:	93 e0       	ldi	r25, 0x03	; 3
    2184:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    2188:	2b e3       	ldi	r18, 0x3B	; 59
    218a:	48 e0       	ldi	r20, 0x08	; 8
    218c:	65 e4       	ldi	r22, 0x45	; 69
    218e:	82 e7       	ldi	r24, 0x72	; 114
    2190:	93 e0       	ldi	r25, 0x03	; 3
    2192:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    2196:	20 e1       	ldi	r18, 0x10	; 16
    2198:	40 e0       	ldi	r20, 0x00	; 0
    219a:	65 e4       	ldi	r22, 0x45	; 69
    219c:	82 e7       	ldi	r24, 0x72	; 114
    219e:	93 e0       	ldi	r25, 0x03	; 3
    21a0:	0e 94 06 04 	call	0x80c	; 0x80c <_ZN7Display9drawVLineEhhh>
    21a4:	21 e4       	ldi	r18, 0x41	; 65
    21a6:	48 e2       	ldi	r20, 0x28	; 40
    21a8:	6f e3       	ldi	r22, 0x3F	; 63
    21aa:	82 e7       	ldi	r24, 0x72	; 114
    21ac:	93 e0       	ldi	r25, 0x03	; 3
    21ae:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    21b2:	20 e3       	ldi	r18, 0x30	; 48
    21b4:	40 e1       	ldi	r20, 0x10	; 16
    21b6:	6f e3       	ldi	r22, 0x3F	; 63
    21b8:	82 e7       	ldi	r24, 0x72	; 114
    21ba:	93 e0       	ldi	r25, 0x03	; 3
    21bc:	0e 94 06 04 	call	0x80c	; 0x80c <_ZN7Display9drawVLineEhhh>
    21c0:	21 e4       	ldi	r18, 0x41	; 65
    21c2:	48 e1       	ldi	r20, 0x18	; 24
    21c4:	6f e3       	ldi	r22, 0x3F	; 63
    21c6:	82 e7       	ldi	r24, 0x72	; 114
    21c8:	93 e0       	ldi	r25, 0x03	; 3
    21ca:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    21ce:	60 91 73 07 	lds	r22, 0x0773
    21d2:	60 53       	subi	r22, 0x30	; 48
    21d4:	20 e0       	ldi	r18, 0x00	; 0
    21d6:	40 e0       	ldi	r20, 0x00	; 0
    21d8:	82 e7       	ldi	r24, 0x72	; 114
    21da:	93 e0       	ldi	r25, 0x03	; 3
    21dc:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    21e0:	60 91 74 07 	lds	r22, 0x0774
    21e4:	60 53       	subi	r22, 0x30	; 48
    21e6:	20 e0       	ldi	r18, 0x00	; 0
    21e8:	40 e1       	ldi	r20, 0x10	; 16
    21ea:	82 e7       	ldi	r24, 0x72	; 114
    21ec:	93 e0       	ldi	r25, 0x03	; 3
    21ee:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    21f2:	60 91 76 07 	lds	r22, 0x0776
    21f6:	60 53       	subi	r22, 0x30	; 48
    21f8:	20 e0       	ldi	r18, 0x00	; 0
    21fa:	45 e2       	ldi	r20, 0x25	; 37
    21fc:	82 e7       	ldi	r24, 0x72	; 114
    21fe:	93 e0       	ldi	r25, 0x03	; 3
    2200:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    2204:	60 91 77 07 	lds	r22, 0x0777
    2208:	60 53       	subi	r22, 0x30	; 48
    220a:	20 e0       	ldi	r18, 0x00	; 0
    220c:	45 e3       	ldi	r20, 0x35	; 53
    220e:	82 e7       	ldi	r24, 0x72	; 114
    2210:	93 e0       	ldi	r25, 0x03	; 3
    2212:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    2216:	3f 92       	push	r3
    2218:	8f 92       	push	r8
    221a:	2f 92       	push	r2
    221c:	9f 92       	push	r9
    221e:	88 e1       	ldi	r24, 0x18	; 24
    2220:	92 e0       	ldi	r25, 0x02	; 2
    2222:	9f 93       	push	r25
    2224:	8f 93       	push	r24
    2226:	ce 01       	movw	r24, r28
    2228:	01 96       	adiw	r24, 0x01	; 1
    222a:	9f 93       	push	r25
    222c:	8f 93       	push	r24
    222e:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    2232:	28 e0       	ldi	r18, 0x08	; 8
    2234:	02 2f       	mov	r16, r18
    2236:	08 1b       	sub	r16, r24
    2238:	0f b6       	in	r0, 0x3f	; 63
    223a:	f8 94       	cli
    223c:	de bf       	out	0x3e, r29	; 62
    223e:	0f be       	out	0x3f, r0	; 63
    2240:	cd bf       	out	0x3d, r28	; 61
    2242:	08 30       	cpi	r16, 0x08	; 8
    2244:	18 f5       	brcc	.+70     	; 0x228c <_Z12fahradschirmddddm+0x184>
    2246:	10 2f       	mov	r17, r16
    2248:	12 95       	swap	r17
    224a:	10 7f       	andi	r17, 0xF0	; 240
    224c:	4c 01       	movw	r8, r24
    224e:	99 24       	eor	r9, r9
    2250:	e1 e0       	ldi	r30, 0x01	; 1
    2252:	f0 e0       	ldi	r31, 0x00	; 0
    2254:	ec 0f       	add	r30, r28
    2256:	fd 1f       	adc	r31, r29
    2258:	e0 0f       	add	r30, r16
    225a:	f1 1d       	adc	r31, r1
    225c:	e8 0d       	add	r30, r8
    225e:	f9 1d       	adc	r31, r9
    2260:	38 97       	sbiw	r30, 0x08	; 8
    2262:	60 81       	ld	r22, Z
    2264:	6e 32       	cpi	r22, 0x2E	; 46
    2266:	39 f4       	brne	.+14     	; 0x2276 <_Z12fahradschirmddddm+0x16e>
    2268:	20 e2       	ldi	r18, 0x20	; 32
    226a:	41 2f       	mov	r20, r17
    226c:	82 e7       	ldi	r24, 0x72	; 114
    226e:	93 e0       	ldi	r25, 0x03	; 3
    2270:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2274:	07 c0       	rjmp	.+14     	; 0x2284 <_Z12fahradschirmddddm+0x17c>
    2276:	60 53       	subi	r22, 0x30	; 48
    2278:	28 e1       	ldi	r18, 0x18	; 24
    227a:	41 2f       	mov	r20, r17
    227c:	82 e7       	ldi	r24, 0x72	; 114
    227e:	93 e0       	ldi	r25, 0x03	; 3
    2280:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    2284:	0f 5f       	subi	r16, 0xFF	; 255
    2286:	10 5f       	subi	r17, 0xF0	; 240
    2288:	08 30       	cpi	r16, 0x08	; 8
    228a:	11 f7       	brne	.-60     	; 0x2250 <_Z12fahradschirmddddm+0x148>
    228c:	a3 01       	movw	r20, r6
    228e:	92 01       	movw	r18, r4
    2290:	67 e2       	ldi	r22, 0x27	; 39
    2292:	8f e1       	ldi	r24, 0x1F	; 31
    2294:	7a db       	rcall	.-2316   	; 0x198a <_Z19anzeige_kleinenadelhhf>
    2296:	fc 85       	ldd	r31, Y+12	; 0x0c
    2298:	ff 93       	push	r31
    229a:	2b 85       	ldd	r18, Y+11	; 0x0b
    229c:	2f 93       	push	r18
    229e:	ff 92       	push	r15
    22a0:	ef 92       	push	r14
    22a2:	8e e1       	ldi	r24, 0x1E	; 30
    22a4:	92 e0       	ldi	r25, 0x02	; 2
    22a6:	9f 93       	push	r25
    22a8:	8f 93       	push	r24
    22aa:	ce 01       	movw	r24, r28
    22ac:	01 96       	adiw	r24, 0x01	; 1
    22ae:	9f 93       	push	r25
    22b0:	8f 93       	push	r24
    22b2:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    22b6:	88 2e       	mov	r8, r24
    22b8:	0f b6       	in	r0, 0x3f	; 63
    22ba:	f8 94       	cli
    22bc:	de bf       	out	0x3e, r29	; 62
    22be:	0f be       	out	0x3f, r0	; 63
    22c0:	cd bf       	out	0x3d, r28	; 61
    22c2:	88 20       	and	r8, r8
    22c4:	b9 f0       	breq	.+46     	; 0x22f4 <_Z12fahradschirmddddm+0x1ec>
    22c6:	fe 01       	movw	r30, r28
    22c8:	31 96       	adiw	r30, 0x01	; 1
    22ca:	7f 01       	movw	r14, r30
    22cc:	8f 01       	movw	r16, r30
    22ce:	0f 2e       	mov	r0, r31
    22d0:	f6 e4       	ldi	r31, 0x46	; 70
    22d2:	9f 2e       	mov	r9, r31
    22d4:	f0 2d       	mov	r31, r0
    22d6:	f8 01       	movw	r30, r16
    22d8:	61 91       	ld	r22, Z+
    22da:	8f 01       	movw	r16, r30
    22dc:	20 e1       	ldi	r18, 0x10	; 16
    22de:	49 2d       	mov	r20, r9
    22e0:	82 e7       	ldi	r24, 0x72	; 114
    22e2:	93 e0       	ldi	r25, 0x03	; 3
    22e4:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    22e8:	f6 e0       	ldi	r31, 0x06	; 6
    22ea:	9f 0e       	add	r9, r31
    22ec:	90 2f       	mov	r25, r16
    22ee:	9e 19       	sub	r25, r14
    22f0:	98 15       	cp	r25, r8
    22f2:	88 f3       	brcs	.-30     	; 0x22d6 <_Z12fahradschirmddddm+0x1ce>
    22f4:	df 92       	push	r13
    22f6:	cf 92       	push	r12
    22f8:	bf 92       	push	r11
    22fa:	af 92       	push	r10
    22fc:	84 e2       	ldi	r24, 0x24	; 36
    22fe:	92 e0       	ldi	r25, 0x02	; 2
    2300:	9f 93       	push	r25
    2302:	8f 93       	push	r24
    2304:	ce 01       	movw	r24, r28
    2306:	01 96       	adiw	r24, 0x01	; 1
    2308:	9f 93       	push	r25
    230a:	8f 93       	push	r24
    230c:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    2310:	c8 2e       	mov	r12, r24
    2312:	0f b6       	in	r0, 0x3f	; 63
    2314:	f8 94       	cli
    2316:	de bf       	out	0x3e, r29	; 62
    2318:	0f be       	out	0x3f, r0	; 63
    231a:	cd bf       	out	0x3d, r28	; 61
    231c:	88 23       	and	r24, r24
    231e:	b9 f0       	breq	.+46     	; 0x234e <_Z12fahradschirmddddm+0x246>
    2320:	ce 01       	movw	r24, r28
    2322:	01 96       	adiw	r24, 0x01	; 1
    2324:	7c 01       	movw	r14, r24
    2326:	8c 01       	movw	r16, r24
    2328:	0f 2e       	mov	r0, r31
    232a:	f6 e4       	ldi	r31, 0x46	; 70
    232c:	df 2e       	mov	r13, r31
    232e:	f0 2d       	mov	r31, r0
    2330:	f8 01       	movw	r30, r16
    2332:	61 91       	ld	r22, Z+
    2334:	8f 01       	movw	r16, r30
    2336:	28 e2       	ldi	r18, 0x28	; 40
    2338:	4d 2d       	mov	r20, r13
    233a:	82 e7       	ldi	r24, 0x72	; 114
    233c:	93 e0       	ldi	r25, 0x03	; 3
    233e:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2342:	f6 e0       	ldi	r31, 0x06	; 6
    2344:	df 0e       	add	r13, r31
    2346:	90 2f       	mov	r25, r16
    2348:	9e 19       	sub	r25, r14
    234a:	9c 15       	cp	r25, r12
    234c:	88 f3       	brcs	.-30     	; 0x2330 <_Z12fahradschirmddddm+0x228>
    234e:	28 89       	ldd	r18, Y+16	; 0x10
    2350:	2f 93       	push	r18
    2352:	3f 85       	ldd	r19, Y+15	; 0x0f
    2354:	3f 93       	push	r19
    2356:	8e 85       	ldd	r24, Y+14	; 0x0e
    2358:	8f 93       	push	r24
    235a:	9d 85       	ldd	r25, Y+13	; 0x0d
    235c:	9f 93       	push	r25
    235e:	8d e2       	ldi	r24, 0x2D	; 45
    2360:	92 e0       	ldi	r25, 0x02	; 2
    2362:	9f 93       	push	r25
    2364:	8f 93       	push	r24
    2366:	ce 01       	movw	r24, r28
    2368:	01 96       	adiw	r24, 0x01	; 1
    236a:	9f 93       	push	r25
    236c:	8f 93       	push	r24
    236e:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    2372:	c8 2e       	mov	r12, r24
    2374:	0f b6       	in	r0, 0x3f	; 63
    2376:	f8 94       	cli
    2378:	de bf       	out	0x3e, r29	; 62
    237a:	0f be       	out	0x3f, r0	; 63
    237c:	cd bf       	out	0x3d, r28	; 61
    237e:	88 23       	and	r24, r24
    2380:	c1 f0       	breq	.+48     	; 0x23b2 <_Z12fahradschirmddddm+0x2aa>
    2382:	9e 01       	movw	r18, r28
    2384:	2f 5f       	subi	r18, 0xFF	; 255
    2386:	3f 4f       	sbci	r19, 0xFF	; 255
    2388:	79 01       	movw	r14, r18
    238a:	89 01       	movw	r16, r18
    238c:	0f 2e       	mov	r0, r31
    238e:	f6 e4       	ldi	r31, 0x46	; 70
    2390:	df 2e       	mov	r13, r31
    2392:	f0 2d       	mov	r31, r0
    2394:	f8 01       	movw	r30, r16
    2396:	61 91       	ld	r22, Z+
    2398:	8f 01       	movw	r16, r30
    239a:	20 e3       	ldi	r18, 0x30	; 48
    239c:	4d 2d       	mov	r20, r13
    239e:	82 e7       	ldi	r24, 0x72	; 114
    23a0:	93 e0       	ldi	r25, 0x03	; 3
    23a2:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    23a6:	f6 e0       	ldi	r31, 0x06	; 6
    23a8:	df 0e       	add	r13, r31
    23aa:	90 2f       	mov	r25, r16
    23ac:	9e 19       	sub	r25, r14
    23ae:	9c 15       	cp	r25, r12
    23b0:	88 f3       	brcs	.-30     	; 0x2394 <_Z12fahradschirmddddm+0x28c>
    23b2:	60 96       	adiw	r28, 0x10	; 16
    23b4:	0f b6       	in	r0, 0x3f	; 63
    23b6:	f8 94       	cli
    23b8:	de bf       	out	0x3e, r29	; 62
    23ba:	0f be       	out	0x3f, r0	; 63
    23bc:	cd bf       	out	0x3d, r28	; 61
    23be:	df 91       	pop	r29
    23c0:	cf 91       	pop	r28
    23c2:	1f 91       	pop	r17
    23c4:	0f 91       	pop	r16
    23c6:	ff 90       	pop	r15
    23c8:	ef 90       	pop	r14
    23ca:	df 90       	pop	r13
    23cc:	cf 90       	pop	r12
    23ce:	bf 90       	pop	r11
    23d0:	af 90       	pop	r10
    23d2:	9f 90       	pop	r9
    23d4:	8f 90       	pop	r8
    23d6:	7f 90       	pop	r7
    23d8:	6f 90       	pop	r6
    23da:	5f 90       	pop	r5
    23dc:	4f 90       	pop	r4
    23de:	3f 90       	pop	r3
    23e0:	2f 90       	pop	r2
    23e2:	08 95       	ret

000023e4 <_Z14Gaineinstellenv>:
    23e4:	cf 92       	push	r12
    23e6:	df 92       	push	r13
    23e8:	ef 92       	push	r14
    23ea:	ff 92       	push	r15
    23ec:	0f 93       	push	r16
    23ee:	1f 93       	push	r17
    23f0:	cf 93       	push	r28
    23f2:	df 93       	push	r29
    23f4:	cd b7       	in	r28, 0x3d	; 61
    23f6:	de b7       	in	r29, 0x3e	; 62
    23f8:	64 97       	sbiw	r28, 0x14	; 20
    23fa:	0f b6       	in	r0, 0x3f	; 63
    23fc:	f8 94       	cli
    23fe:	de bf       	out	0x3e, r29	; 62
    2400:	0f be       	out	0x3f, r0	; 63
    2402:	cd bf       	out	0x3d, r28	; 61
    2404:	82 e7       	ldi	r24, 0x72	; 114
    2406:	93 e0       	ldi	r25, 0x03	; 3
    2408:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    240c:	88 e0       	ldi	r24, 0x08	; 8
    240e:	e2 e3       	ldi	r30, 0x32	; 50
    2410:	f2 e0       	ldi	r31, 0x02	; 2
    2412:	8e 01       	movw	r16, r28
    2414:	0f 5f       	subi	r16, 0xFF	; 255
    2416:	1f 4f       	sbci	r17, 0xFF	; 255
    2418:	d8 01       	movw	r26, r16
    241a:	01 90       	ld	r0, Z+
    241c:	0d 92       	st	X+, r0
    241e:	8a 95       	dec	r24
    2420:	e1 f7       	brne	.-8      	; 0x241a <_Z14Gaineinstellenv+0x36>
    2422:	e0 2e       	mov	r14, r16
    2424:	f1 2e       	mov	r15, r17
    2426:	68 01       	movw	r12, r16
    2428:	10 e0       	ldi	r17, 0x00	; 0
    242a:	f6 01       	movw	r30, r12
    242c:	61 91       	ld	r22, Z+
    242e:	6f 01       	movw	r12, r30
    2430:	20 e0       	ldi	r18, 0x00	; 0
    2432:	41 2f       	mov	r20, r17
    2434:	82 e7       	ldi	r24, 0x72	; 114
    2436:	93 e0       	ldi	r25, 0x03	; 3
    2438:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    243c:	1a 5f       	subi	r17, 0xFA	; 250
    243e:	1a 32       	cpi	r17, 0x2A	; 42
    2440:	a1 f7       	brne	.-24     	; 0x242a <_Z14Gaineinstellenv+0x46>
    2442:	88 e0       	ldi	r24, 0x08	; 8
    2444:	ea e3       	ldi	r30, 0x3A	; 58
    2446:	f2 e0       	ldi	r31, 0x02	; 2
    2448:	de 01       	movw	r26, r28
    244a:	11 96       	adiw	r26, 0x01	; 1
    244c:	01 90       	ld	r0, Z+
    244e:	0d 92       	st	X+, r0
    2450:	8a 95       	dec	r24
    2452:	e1 f7       	brne	.-8      	; 0x244c <_Z14Gaineinstellenv+0x68>
    2454:	ce 2c       	mov	r12, r14
    2456:	df 2c       	mov	r13, r15
    2458:	10 e0       	ldi	r17, 0x00	; 0
    245a:	f6 01       	movw	r30, r12
    245c:	61 91       	ld	r22, Z+
    245e:	6f 01       	movw	r12, r30
    2460:	28 e0       	ldi	r18, 0x08	; 8
    2462:	41 2f       	mov	r20, r17
    2464:	82 e7       	ldi	r24, 0x72	; 114
    2466:	93 e0       	ldi	r25, 0x03	; 3
    2468:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    246c:	1a 5f       	subi	r17, 0xFA	; 250
    246e:	1a 32       	cpi	r17, 0x2A	; 42
    2470:	a1 f7       	brne	.-24     	; 0x245a <_Z14Gaineinstellenv+0x76>
    2472:	88 e0       	ldi	r24, 0x08	; 8
    2474:	e2 e4       	ldi	r30, 0x42	; 66
    2476:	f2 e0       	ldi	r31, 0x02	; 2
    2478:	de 01       	movw	r26, r28
    247a:	11 96       	adiw	r26, 0x01	; 1
    247c:	01 90       	ld	r0, Z+
    247e:	0d 92       	st	X+, r0
    2480:	8a 95       	dec	r24
    2482:	e1 f7       	brne	.-8      	; 0x247c <_Z14Gaineinstellenv+0x98>
    2484:	ce 2c       	mov	r12, r14
    2486:	df 2c       	mov	r13, r15
    2488:	10 e0       	ldi	r17, 0x00	; 0
    248a:	f6 01       	movw	r30, r12
    248c:	61 91       	ld	r22, Z+
    248e:	6f 01       	movw	r12, r30
    2490:	20 e1       	ldi	r18, 0x10	; 16
    2492:	41 2f       	mov	r20, r17
    2494:	82 e7       	ldi	r24, 0x72	; 114
    2496:	93 e0       	ldi	r25, 0x03	; 3
    2498:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    249c:	1a 5f       	subi	r17, 0xFA	; 250
    249e:	1a 32       	cpi	r17, 0x2A	; 42
    24a0:	a1 f7       	brne	.-24     	; 0x248a <_Z14Gaineinstellenv+0xa6>
    24a2:	88 e0       	ldi	r24, 0x08	; 8
    24a4:	ea e4       	ldi	r30, 0x4A	; 74
    24a6:	f2 e0       	ldi	r31, 0x02	; 2
    24a8:	de 01       	movw	r26, r28
    24aa:	11 96       	adiw	r26, 0x01	; 1
    24ac:	01 90       	ld	r0, Z+
    24ae:	0d 92       	st	X+, r0
    24b0:	8a 95       	dec	r24
    24b2:	e1 f7       	brne	.-8      	; 0x24ac <_Z14Gaineinstellenv+0xc8>
    24b4:	ce 2c       	mov	r12, r14
    24b6:	df 2c       	mov	r13, r15
    24b8:	10 e0       	ldi	r17, 0x00	; 0
    24ba:	f6 01       	movw	r30, r12
    24bc:	61 91       	ld	r22, Z+
    24be:	6f 01       	movw	r12, r30
    24c0:	28 e1       	ldi	r18, 0x18	; 24
    24c2:	41 2f       	mov	r20, r17
    24c4:	82 e7       	ldi	r24, 0x72	; 114
    24c6:	93 e0       	ldi	r25, 0x03	; 3
    24c8:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    24cc:	1a 5f       	subi	r17, 0xFA	; 250
    24ce:	1a 32       	cpi	r17, 0x2A	; 42
    24d0:	a1 f7       	brne	.-24     	; 0x24ba <_Z14Gaineinstellenv+0xd6>
    24d2:	88 e0       	ldi	r24, 0x08	; 8
    24d4:	e2 e5       	ldi	r30, 0x52	; 82
    24d6:	f2 e0       	ldi	r31, 0x02	; 2
    24d8:	de 01       	movw	r26, r28
    24da:	11 96       	adiw	r26, 0x01	; 1
    24dc:	01 90       	ld	r0, Z+
    24de:	0d 92       	st	X+, r0
    24e0:	8a 95       	dec	r24
    24e2:	e1 f7       	brne	.-8      	; 0x24dc <_Z14Gaineinstellenv+0xf8>
    24e4:	ce 2c       	mov	r12, r14
    24e6:	df 2c       	mov	r13, r15
    24e8:	10 e0       	ldi	r17, 0x00	; 0
    24ea:	f6 01       	movw	r30, r12
    24ec:	61 91       	ld	r22, Z+
    24ee:	6f 01       	movw	r12, r30
    24f0:	20 e2       	ldi	r18, 0x20	; 32
    24f2:	41 2f       	mov	r20, r17
    24f4:	82 e7       	ldi	r24, 0x72	; 114
    24f6:	93 e0       	ldi	r25, 0x03	; 3
    24f8:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    24fc:	1a 5f       	subi	r17, 0xFA	; 250
    24fe:	1a 32       	cpi	r17, 0x2A	; 42
    2500:	a1 f7       	brne	.-24     	; 0x24ea <_Z14Gaineinstellenv+0x106>
    2502:	88 e0       	ldi	r24, 0x08	; 8
    2504:	ea e5       	ldi	r30, 0x5A	; 90
    2506:	f2 e0       	ldi	r31, 0x02	; 2
    2508:	de 01       	movw	r26, r28
    250a:	11 96       	adiw	r26, 0x01	; 1
    250c:	01 90       	ld	r0, Z+
    250e:	0d 92       	st	X+, r0
    2510:	8a 95       	dec	r24
    2512:	e1 f7       	brne	.-8      	; 0x250c <_Z14Gaineinstellenv+0x128>
    2514:	ce 2c       	mov	r12, r14
    2516:	df 2c       	mov	r13, r15
    2518:	10 e0       	ldi	r17, 0x00	; 0
    251a:	f6 01       	movw	r30, r12
    251c:	61 91       	ld	r22, Z+
    251e:	6f 01       	movw	r12, r30
    2520:	28 e2       	ldi	r18, 0x28	; 40
    2522:	41 2f       	mov	r20, r17
    2524:	82 e7       	ldi	r24, 0x72	; 114
    2526:	93 e0       	ldi	r25, 0x03	; 3
    2528:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    252c:	1a 5f       	subi	r17, 0xFA	; 250
    252e:	1a 32       	cpi	r17, 0x2A	; 42
    2530:	a1 f7       	brne	.-24     	; 0x251a <_Z14Gaineinstellenv+0x136>
    2532:	88 e0       	ldi	r24, 0x08	; 8
    2534:	e2 e6       	ldi	r30, 0x62	; 98
    2536:	f2 e0       	ldi	r31, 0x02	; 2
    2538:	de 01       	movw	r26, r28
    253a:	11 96       	adiw	r26, 0x01	; 1
    253c:	01 90       	ld	r0, Z+
    253e:	0d 92       	st	X+, r0
    2540:	8a 95       	dec	r24
    2542:	e1 f7       	brne	.-8      	; 0x253c <_Z14Gaineinstellenv+0x158>
    2544:	ce 2c       	mov	r12, r14
    2546:	df 2c       	mov	r13, r15
    2548:	10 e0       	ldi	r17, 0x00	; 0
    254a:	f6 01       	movw	r30, r12
    254c:	61 91       	ld	r22, Z+
    254e:	6f 01       	movw	r12, r30
    2550:	20 e3       	ldi	r18, 0x30	; 48
    2552:	41 2f       	mov	r20, r17
    2554:	82 e7       	ldi	r24, 0x72	; 114
    2556:	93 e0       	ldi	r25, 0x03	; 3
    2558:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    255c:	1a 5f       	subi	r17, 0xFA	; 250
    255e:	1a 32       	cpi	r17, 0x2A	; 42
    2560:	a1 f7       	brne	.-24     	; 0x254a <_Z14Gaineinstellenv+0x166>
    2562:	88 e0       	ldi	r24, 0x08	; 8
    2564:	ea e6       	ldi	r30, 0x6A	; 106
    2566:	f2 e0       	ldi	r31, 0x02	; 2
    2568:	de 01       	movw	r26, r28
    256a:	11 96       	adiw	r26, 0x01	; 1
    256c:	01 90       	ld	r0, Z+
    256e:	0d 92       	st	X+, r0
    2570:	8a 95       	dec	r24
    2572:	e1 f7       	brne	.-8      	; 0x256c <_Z14Gaineinstellenv+0x188>
    2574:	ce 2c       	mov	r12, r14
    2576:	df 2c       	mov	r13, r15
    2578:	10 e0       	ldi	r17, 0x00	; 0
    257a:	f6 01       	movw	r30, r12
    257c:	61 91       	ld	r22, Z+
    257e:	6f 01       	movw	r12, r30
    2580:	28 e3       	ldi	r18, 0x38	; 56
    2582:	41 2f       	mov	r20, r17
    2584:	82 e7       	ldi	r24, 0x72	; 114
    2586:	93 e0       	ldi	r25, 0x03	; 3
    2588:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    258c:	1a 5f       	subi	r17, 0xFA	; 250
    258e:	1a 32       	cpi	r17, 0x2A	; 42
    2590:	a1 f7       	brne	.-24     	; 0x257a <_Z14Gaineinstellenv+0x196>
    2592:	64 96       	adiw	r28, 0x14	; 20
    2594:	0f b6       	in	r0, 0x3f	; 63
    2596:	f8 94       	cli
    2598:	de bf       	out	0x3e, r29	; 62
    259a:	0f be       	out	0x3f, r0	; 63
    259c:	cd bf       	out	0x3d, r28	; 61
    259e:	df 91       	pop	r29
    25a0:	cf 91       	pop	r28
    25a2:	1f 91       	pop	r17
    25a4:	0f 91       	pop	r16
    25a6:	ff 90       	pop	r15
    25a8:	ef 90       	pop	r14
    25aa:	df 90       	pop	r13
    25ac:	cf 90       	pop	r12
    25ae:	08 95       	ret

000025b0 <_Z15anzeige_kompassd>:
    25b0:	9f 92       	push	r9
    25b2:	af 92       	push	r10
    25b4:	bf 92       	push	r11
    25b6:	cf 92       	push	r12
    25b8:	df 92       	push	r13
    25ba:	ef 92       	push	r14
    25bc:	ff 92       	push	r15
    25be:	0f 93       	push	r16
    25c0:	1f 93       	push	r17
    25c2:	cf 93       	push	r28
    25c4:	df 93       	push	r29
    25c6:	cd b7       	in	r28, 0x3d	; 61
    25c8:	de b7       	in	r29, 0x3e	; 62
    25ca:	64 97       	sbiw	r28, 0x14	; 20
    25cc:	0f b6       	in	r0, 0x3f	; 63
    25ce:	f8 94       	cli
    25d0:	de bf       	out	0x3e, r29	; 62
    25d2:	0f be       	out	0x3f, r0	; 63
    25d4:	cd bf       	out	0x3d, r28	; 61
    25d6:	c6 2e       	mov	r12, r22
    25d8:	d7 2e       	mov	r13, r23
    25da:	e8 2e       	mov	r14, r24
    25dc:	f9 2e       	mov	r15, r25
    25de:	80 e5       	ldi	r24, 0x50	; 80
    25e0:	93 e0       	ldi	r25, 0x03	; 3
    25e2:	0e 94 3d 2b 	call	0x567a	; 0x567a <_ZN8Pressure18READ_Pressure_onceEv>
    25e6:	80 e5       	ldi	r24, 0x50	; 80
    25e8:	93 e0       	ldi	r25, 0x03	; 3
    25ea:	0e 94 b5 2b 	call	0x576a	; 0x576a <_ZN8Pressure16READ_TemperatureEv>
    25ee:	82 e7       	ldi	r24, 0x72	; 114
    25f0:	93 e0       	ldi	r25, 0x03	; 3
    25f2:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    25f6:	0f 2e       	mov	r0, r31
    25f8:	f3 e7       	ldi	r31, 0x73	; 115
    25fa:	af 2e       	mov	r10, r31
    25fc:	f7 e0       	ldi	r31, 0x07	; 7
    25fe:	bf 2e       	mov	r11, r31
    2600:	f0 2d       	mov	r31, r0
    2602:	11 e4       	ldi	r17, 0x41	; 65
    2604:	f5 01       	movw	r30, r10
    2606:	61 91       	ld	r22, Z+
    2608:	5f 01       	movw	r10, r30
    260a:	20 e0       	ldi	r18, 0x00	; 0
    260c:	41 2f       	mov	r20, r17
    260e:	82 e7       	ldi	r24, 0x72	; 114
    2610:	93 e0       	ldi	r25, 0x03	; 3
    2612:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2616:	1a 5f       	subi	r17, 0xFA	; 250
    2618:	11 37       	cpi	r17, 0x71	; 113
    261a:	a1 f7       	brne	.-24     	; 0x2604 <_Z15anzeige_kompassd+0x54>
    261c:	0f 2e       	mov	r0, r31
    261e:	fb e7       	ldi	r31, 0x7B	; 123
    2620:	af 2e       	mov	r10, r31
    2622:	f7 e0       	ldi	r31, 0x07	; 7
    2624:	bf 2e       	mov	r11, r31
    2626:	f0 2d       	mov	r31, r0
    2628:	11 e4       	ldi	r17, 0x41	; 65
    262a:	f5 01       	movw	r30, r10
    262c:	61 91       	ld	r22, Z+
    262e:	5f 01       	movw	r10, r30
    2630:	28 e3       	ldi	r18, 0x38	; 56
    2632:	41 2f       	mov	r20, r17
    2634:	82 e7       	ldi	r24, 0x72	; 114
    2636:	93 e0       	ldi	r25, 0x03	; 3
    2638:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    263c:	1a 5f       	subi	r17, 0xFA	; 250
    263e:	11 37       	cpi	r17, 0x71	; 113
    2640:	a1 f7       	brne	.-24     	; 0x262a <_Z15anzeige_kompassd+0x7a>
    2642:	40 91 50 03 	lds	r20, 0x0350
    2646:	50 91 51 03 	lds	r21, 0x0351
    264a:	60 91 52 03 	lds	r22, 0x0352
    264e:	70 91 53 03 	lds	r23, 0x0353
    2652:	80 e5       	ldi	r24, 0x50	; 80
    2654:	93 e0       	ldi	r25, 0x03	; 3
    2656:	0e 94 25 2c 	call	0x584a	; 0x584a <_ZN8Pressure8altitudeEd>
    265a:	9f 93       	push	r25
    265c:	8f 93       	push	r24
    265e:	7f 93       	push	r23
    2660:	6f 93       	push	r22
    2662:	82 e7       	ldi	r24, 0x72	; 114
    2664:	92 e0       	ldi	r25, 0x02	; 2
    2666:	9f 93       	push	r25
    2668:	8f 93       	push	r24
    266a:	ce 01       	movw	r24, r28
    266c:	01 96       	adiw	r24, 0x01	; 1
    266e:	9f 93       	push	r25
    2670:	8f 93       	push	r24
    2672:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    2676:	0f b6       	in	r0, 0x3f	; 63
    2678:	f8 94       	cli
    267a:	de bf       	out	0x3e, r29	; 62
    267c:	0f be       	out	0x3f, r0	; 63
    267e:	cd bf       	out	0x3d, r28	; 61
    2680:	88 23       	and	r24, r24
    2682:	f1 f0       	breq	.+60     	; 0x26c0 <_Z15anzeige_kompassd+0x110>
    2684:	8e 01       	movw	r16, r28
    2686:	0f 5f       	subi	r16, 0xFF	; 255
    2688:	1f 4f       	sbci	r17, 0xFF	; 255
    268a:	81 50       	subi	r24, 0x01	; 1
    268c:	68 94       	set
    268e:	aa 24       	eor	r10, r10
    2690:	a1 f8       	bld	r10, 1
    2692:	b1 2c       	mov	r11, r1
    2694:	ac 0e       	add	r10, r28
    2696:	bd 1e       	adc	r11, r29
    2698:	a8 0e       	add	r10, r24
    269a:	b1 1c       	adc	r11, r1
    269c:	0f 2e       	mov	r0, r31
    269e:	f1 e4       	ldi	r31, 0x41	; 65
    26a0:	9f 2e       	mov	r9, r31
    26a2:	f0 2d       	mov	r31, r0
    26a4:	f8 01       	movw	r30, r16
    26a6:	61 91       	ld	r22, Z+
    26a8:	8f 01       	movw	r16, r30
    26aa:	2a e0       	ldi	r18, 0x0A	; 10
    26ac:	49 2d       	mov	r20, r9
    26ae:	82 e7       	ldi	r24, 0x72	; 114
    26b0:	93 e0       	ldi	r25, 0x03	; 3
    26b2:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    26b6:	f6 e0       	ldi	r31, 0x06	; 6
    26b8:	9f 0e       	add	r9, r31
    26ba:	0a 15       	cp	r16, r10
    26bc:	1b 05       	cpc	r17, r11
    26be:	91 f7       	brne	.-28     	; 0x26a4 <_Z15anzeige_kompassd+0xf4>
    26c0:	e4 e5       	ldi	r30, 0x54	; 84
    26c2:	f3 e0       	ldi	r31, 0x03	; 3
    26c4:	83 81       	ldd	r24, Z+3	; 0x03
    26c6:	8f 93       	push	r24
    26c8:	82 81       	ldd	r24, Z+2	; 0x02
    26ca:	8f 93       	push	r24
    26cc:	81 81       	ldd	r24, Z+1	; 0x01
    26ce:	8f 93       	push	r24
    26d0:	80 81       	ld	r24, Z
    26d2:	8f 93       	push	r24
    26d4:	81 e1       	ldi	r24, 0x11	; 17
    26d6:	92 e0       	ldi	r25, 0x02	; 2
    26d8:	9f 93       	push	r25
    26da:	8f 93       	push	r24
    26dc:	ce 01       	movw	r24, r28
    26de:	01 96       	adiw	r24, 0x01	; 1
    26e0:	9f 93       	push	r25
    26e2:	8f 93       	push	r24
    26e4:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    26e8:	0f b6       	in	r0, 0x3f	; 63
    26ea:	f8 94       	cli
    26ec:	de bf       	out	0x3e, r29	; 62
    26ee:	0f be       	out	0x3f, r0	; 63
    26f0:	cd bf       	out	0x3d, r28	; 61
    26f2:	88 23       	and	r24, r24
    26f4:	f1 f0       	breq	.+60     	; 0x2732 <_Z15anzeige_kompassd+0x182>
    26f6:	8e 01       	movw	r16, r28
    26f8:	0f 5f       	subi	r16, 0xFF	; 255
    26fa:	1f 4f       	sbci	r17, 0xFF	; 255
    26fc:	81 50       	subi	r24, 0x01	; 1
    26fe:	68 94       	set
    2700:	aa 24       	eor	r10, r10
    2702:	a1 f8       	bld	r10, 1
    2704:	b1 2c       	mov	r11, r1
    2706:	ac 0e       	add	r10, r28
    2708:	bd 1e       	adc	r11, r29
    270a:	a8 0e       	add	r10, r24
    270c:	b1 1c       	adc	r11, r1
    270e:	0f 2e       	mov	r0, r31
    2710:	f1 e4       	ldi	r31, 0x41	; 65
    2712:	9f 2e       	mov	r9, r31
    2714:	f0 2d       	mov	r31, r0
    2716:	f8 01       	movw	r30, r16
    2718:	61 91       	ld	r22, Z+
    271a:	8f 01       	movw	r16, r30
    271c:	28 e2       	ldi	r18, 0x28	; 40
    271e:	49 2d       	mov	r20, r9
    2720:	82 e7       	ldi	r24, 0x72	; 114
    2722:	93 e0       	ldi	r25, 0x03	; 3
    2724:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2728:	f6 e0       	ldi	r31, 0x06	; 6
    272a:	9f 0e       	add	r9, r31
    272c:	0a 15       	cp	r16, r10
    272e:	1b 05       	cpc	r17, r11
    2730:	91 f7       	brne	.-28     	; 0x2716 <_Z15anzeige_kompassd+0x166>
    2732:	ff 92       	push	r15
    2734:	ef 92       	push	r14
    2736:	df 92       	push	r13
    2738:	cf 92       	push	r12
    273a:	8c e7       	ldi	r24, 0x7C	; 124
    273c:	92 e0       	ldi	r25, 0x02	; 2
    273e:	9f 93       	push	r25
    2740:	8f 93       	push	r24
    2742:	ce 01       	movw	r24, r28
    2744:	01 96       	adiw	r24, 0x01	; 1
    2746:	9f 93       	push	r25
    2748:	8f 93       	push	r24
    274a:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    274e:	0f b6       	in	r0, 0x3f	; 63
    2750:	f8 94       	cli
    2752:	de bf       	out	0x3e, r29	; 62
    2754:	0f be       	out	0x3f, r0	; 63
    2756:	cd bf       	out	0x3d, r28	; 61
    2758:	88 23       	and	r24, r24
    275a:	f1 f0       	breq	.+60     	; 0x2798 <_Z15anzeige_kompassd+0x1e8>
    275c:	8e 01       	movw	r16, r28
    275e:	0f 5f       	subi	r16, 0xFF	; 255
    2760:	1f 4f       	sbci	r17, 0xFF	; 255
    2762:	81 50       	subi	r24, 0x01	; 1
    2764:	68 94       	set
    2766:	aa 24       	eor	r10, r10
    2768:	a1 f8       	bld	r10, 1
    276a:	b1 2c       	mov	r11, r1
    276c:	ac 0e       	add	r10, r28
    276e:	bd 1e       	adc	r11, r29
    2770:	a8 0e       	add	r10, r24
    2772:	b1 1c       	adc	r11, r1
    2774:	0f 2e       	mov	r0, r31
    2776:	f1 e4       	ldi	r31, 0x41	; 65
    2778:	9f 2e       	mov	r9, r31
    277a:	f0 2d       	mov	r31, r0
    277c:	f8 01       	movw	r30, r16
    277e:	61 91       	ld	r22, Z+
    2780:	8f 01       	movw	r16, r30
    2782:	20 e3       	ldi	r18, 0x30	; 48
    2784:	49 2d       	mov	r20, r9
    2786:	82 e7       	ldi	r24, 0x72	; 114
    2788:	93 e0       	ldi	r25, 0x03	; 3
    278a:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    278e:	f6 e0       	ldi	r31, 0x06	; 6
    2790:	9f 0e       	add	r9, r31
    2792:	0a 15       	cp	r16, r10
    2794:	1b 05       	cpc	r17, r11
    2796:	91 f7       	brne	.-28     	; 0x277c <_Z15anzeige_kompassd+0x1cc>
    2798:	2c 2d       	mov	r18, r12
    279a:	3d 2d       	mov	r19, r13
    279c:	4e 2d       	mov	r20, r14
    279e:	5f 2d       	mov	r21, r15
    27a0:	6f e1       	ldi	r22, 0x1F	; 31
    27a2:	8f e1       	ldi	r24, 0x1F	; 31
    27a4:	d5 d8       	rcall	.-3670   	; 0x1950 <_Z13anzeige_nadelhhf>
    27a6:	23 e0       	ldi	r18, 0x03	; 3
    27a8:	40 e5       	ldi	r20, 0x50	; 80
    27aa:	6c 2d       	mov	r22, r12
    27ac:	7d 2d       	mov	r23, r13
    27ae:	8e 2d       	mov	r24, r14
    27b0:	9f 2d       	mov	r25, r15
    27b2:	0e 94 d0 0b 	call	0x17a0	; 0x17a0 <_Z16anzeige_richtungfhh>
    27b6:	64 96       	adiw	r28, 0x14	; 20
    27b8:	0f b6       	in	r0, 0x3f	; 63
    27ba:	f8 94       	cli
    27bc:	de bf       	out	0x3e, r29	; 62
    27be:	0f be       	out	0x3f, r0	; 63
    27c0:	cd bf       	out	0x3d, r28	; 61
    27c2:	df 91       	pop	r29
    27c4:	cf 91       	pop	r28
    27c6:	1f 91       	pop	r17
    27c8:	0f 91       	pop	r16
    27ca:	ff 90       	pop	r15
    27cc:	ef 90       	pop	r14
    27ce:	df 90       	pop	r13
    27d0:	cf 90       	pop	r12
    27d2:	bf 90       	pop	r11
    27d4:	af 90       	pop	r10
    27d6:	9f 90       	pop	r9
    27d8:	08 95       	ret

000027da <_Z10timerseitev>:
    27da:	cf 92       	push	r12
    27dc:	df 92       	push	r13
    27de:	ef 92       	push	r14
    27e0:	ff 92       	push	r15
    27e2:	0f 93       	push	r16
    27e4:	1f 93       	push	r17
    27e6:	cf 93       	push	r28
    27e8:	df 93       	push	r29
    27ea:	cd b7       	in	r28, 0x3d	; 61
    27ec:	de b7       	in	r29, 0x3e	; 62
    27ee:	64 97       	sbiw	r28, 0x14	; 20
    27f0:	0f b6       	in	r0, 0x3f	; 63
    27f2:	f8 94       	cli
    27f4:	de bf       	out	0x3e, r29	; 62
    27f6:	0f be       	out	0x3f, r0	; 63
    27f8:	cd bf       	out	0x3d, r28	; 61
    27fa:	82 e7       	ldi	r24, 0x72	; 114
    27fc:	93 e0       	ldi	r25, 0x03	; 3
    27fe:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2802:	88 e0       	ldi	r24, 0x08	; 8
    2804:	e7 e8       	ldi	r30, 0x87	; 135
    2806:	f2 e0       	ldi	r31, 0x02	; 2
    2808:	8e 01       	movw	r16, r28
    280a:	0f 5f       	subi	r16, 0xFF	; 255
    280c:	1f 4f       	sbci	r17, 0xFF	; 255
    280e:	d8 01       	movw	r26, r16
    2810:	01 90       	ld	r0, Z+
    2812:	0d 92       	st	X+, r0
    2814:	8a 95       	dec	r24
    2816:	e1 f7       	brne	.-8      	; 0x2810 <_Z10timerseitev+0x36>
    2818:	c0 2e       	mov	r12, r16
    281a:	d1 2e       	mov	r13, r17
    281c:	78 01       	movw	r14, r16
    281e:	10 e0       	ldi	r17, 0x00	; 0
    2820:	f7 01       	movw	r30, r14
    2822:	61 91       	ld	r22, Z+
    2824:	7f 01       	movw	r14, r30
    2826:	20 e0       	ldi	r18, 0x00	; 0
    2828:	41 2f       	mov	r20, r17
    282a:	82 e7       	ldi	r24, 0x72	; 114
    282c:	93 e0       	ldi	r25, 0x03	; 3
    282e:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2832:	1a 5f       	subi	r17, 0xFA	; 250
    2834:	1a 32       	cpi	r17, 0x2A	; 42
    2836:	a1 f7       	brne	.-24     	; 0x2820 <_Z10timerseitev+0x46>
    2838:	60 91 35 03 	lds	r22, 0x0335
    283c:	66 23       	and	r22, r22
    283e:	39 f0       	breq	.+14     	; 0x284e <_Z10timerseitev+0x74>
    2840:	60 5d       	subi	r22, 0xD0	; 208
    2842:	20 e0       	ldi	r18, 0x00	; 0
    2844:	4a e2       	ldi	r20, 0x2A	; 42
    2846:	82 e7       	ldi	r24, 0x72	; 114
    2848:	93 e0       	ldi	r25, 0x03	; 3
    284a:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    284e:	e0 91 8e 07 	lds	r30, 0x078E
    2852:	f0 91 8f 07 	lds	r31, 0x078F
    2856:	0f 2e       	mov	r0, r31
    2858:	f0 e1       	ldi	r31, 0x10	; 16
    285a:	ef 2e       	mov	r14, r31
    285c:	fe e0       	ldi	r31, 0x0E	; 14
    285e:	ff 2e       	mov	r15, r31
    2860:	f0 2d       	mov	r31, r0
    2862:	cf 01       	movw	r24, r30
    2864:	b7 01       	movw	r22, r14
    2866:	0e 94 dc 34 	call	0x69b8	; 0x69b8 <__udivmodhi4>
    286a:	ab 01       	movw	r20, r22
    286c:	9c 01       	movw	r18, r24
    286e:	a9 e8       	ldi	r26, 0x89	; 137
    2870:	b8 e8       	ldi	r27, 0x88	; 136
    2872:	0e 94 09 35 	call	0x6a12	; 0x6a12 <__umulhisi3>
    2876:	8c 01       	movw	r16, r24
    2878:	16 95       	lsr	r17
    287a:	07 95       	ror	r16
    287c:	12 95       	swap	r17
    287e:	02 95       	swap	r16
    2880:	0f 70       	andi	r16, 0x0F	; 15
    2882:	01 27       	eor	r16, r17
    2884:	1f 70       	andi	r17, 0x0F	; 15
    2886:	01 27       	eor	r16, r17
    2888:	9f 01       	movw	r18, r30
    288a:	0e 94 09 35 	call	0x6a12	; 0x6a12 <__umulhisi3>
    288e:	96 95       	lsr	r25
    2890:	87 95       	ror	r24
    2892:	92 95       	swap	r25
    2894:	82 95       	swap	r24
    2896:	8f 70       	andi	r24, 0x0F	; 15
    2898:	89 27       	eor	r24, r25
    289a:	9f 70       	andi	r25, 0x0F	; 15
    289c:	89 27       	eor	r24, r25
    289e:	6c e3       	ldi	r22, 0x3C	; 60
    28a0:	68 9f       	mul	r22, r24
    28a2:	90 01       	movw	r18, r0
    28a4:	69 9f       	mul	r22, r25
    28a6:	30 0d       	add	r19, r0
    28a8:	11 24       	eor	r1, r1
    28aa:	e2 1b       	sub	r30, r18
    28ac:	f3 0b       	sbc	r31, r19
    28ae:	ca 01       	movw	r24, r20
    28b0:	99 27       	eor	r25, r25
    28b2:	91 95       	neg	r25
    28b4:	81 95       	neg	r24
    28b6:	91 09       	sbc	r25, r1
    28b8:	b7 01       	movw	r22, r14
    28ba:	0e 94 f0 34 	call	0x69e0	; 0x69e0 <__divmodhi4>
    28be:	cb 01       	movw	r24, r22
    28c0:	6a e0       	ldi	r22, 0x0A	; 10
    28c2:	70 e0       	ldi	r23, 0x00	; 0
    28c4:	0e 94 f0 34 	call	0x69e0	; 0x69e0 <__divmodhi4>
    28c8:	69 83       	std	Y+1, r22	; 0x01
    28ca:	8d ec       	ldi	r24, 0xCD	; 205
    28cc:	48 9f       	mul	r20, r24
    28ce:	91 2d       	mov	r25, r1
    28d0:	11 24       	eor	r1, r1
    28d2:	96 95       	lsr	r25
    28d4:	96 95       	lsr	r25
    28d6:	96 95       	lsr	r25
    28d8:	99 0f       	add	r25, r25
    28da:	29 2f       	mov	r18, r25
    28dc:	22 0f       	add	r18, r18
    28de:	22 0f       	add	r18, r18
    28e0:	92 0f       	add	r25, r18
    28e2:	49 1b       	sub	r20, r25
    28e4:	4a 83       	std	Y+2, r20	; 0x02
    28e6:	9a e3       	ldi	r25, 0x3A	; 58
    28e8:	9b 83       	std	Y+3, r25	; 0x03
    28ea:	08 9f       	mul	r16, r24
    28ec:	21 2d       	mov	r18, r1
    28ee:	11 24       	eor	r1, r1
    28f0:	26 95       	lsr	r18
    28f2:	26 95       	lsr	r18
    28f4:	26 95       	lsr	r18
    28f6:	2c 83       	std	Y+4, r18	; 0x04
    28f8:	22 0f       	add	r18, r18
    28fa:	32 2f       	mov	r19, r18
    28fc:	33 0f       	add	r19, r19
    28fe:	33 0f       	add	r19, r19
    2900:	23 0f       	add	r18, r19
    2902:	02 1b       	sub	r16, r18
    2904:	0d 83       	std	Y+5, r16	; 0x05
    2906:	9e 83       	std	Y+6, r25	; 0x06
    2908:	e8 9f       	mul	r30, r24
    290a:	81 2d       	mov	r24, r1
    290c:	11 24       	eor	r1, r1
    290e:	86 95       	lsr	r24
    2910:	86 95       	lsr	r24
    2912:	86 95       	lsr	r24
    2914:	8f 83       	std	Y+7, r24	; 0x07
    2916:	88 0f       	add	r24, r24
    2918:	98 2f       	mov	r25, r24
    291a:	99 0f       	add	r25, r25
    291c:	99 0f       	add	r25, r25
    291e:	89 0f       	add	r24, r25
    2920:	e8 1b       	sub	r30, r24
    2922:	e8 87       	std	Y+8, r30	; 0x08
    2924:	ec 2c       	mov	r14, r12
    2926:	fd 2c       	mov	r15, r13
    2928:	10 e0       	ldi	r17, 0x00	; 0
    292a:	f7 01       	movw	r30, r14
    292c:	61 91       	ld	r22, Z+
    292e:	7f 01       	movw	r14, r30
    2930:	6a 33       	cpi	r22, 0x3A	; 58
    2932:	39 f4       	brne	.+14     	; 0x2942 <_Z10timerseitev+0x168>
    2934:	24 e1       	ldi	r18, 0x14	; 20
    2936:	41 2f       	mov	r20, r17
    2938:	82 e7       	ldi	r24, 0x72	; 114
    293a:	93 e0       	ldi	r25, 0x03	; 3
    293c:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2940:	06 c0       	rjmp	.+12     	; 0x294e <_Z10timerseitev+0x174>
    2942:	20 e1       	ldi	r18, 0x10	; 16
    2944:	41 2f       	mov	r20, r17
    2946:	82 e7       	ldi	r24, 0x72	; 114
    2948:	93 e0       	ldi	r25, 0x03	; 3
    294a:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    294e:	10 5f       	subi	r17, 0xF0	; 240
    2950:	10 38       	cpi	r17, 0x80	; 128
    2952:	59 f7       	brne	.-42     	; 0x292a <_Z10timerseitev+0x150>
    2954:	64 96       	adiw	r28, 0x14	; 20
    2956:	0f b6       	in	r0, 0x3f	; 63
    2958:	f8 94       	cli
    295a:	de bf       	out	0x3e, r29	; 62
    295c:	0f be       	out	0x3f, r0	; 63
    295e:	cd bf       	out	0x3d, r28	; 61
    2960:	df 91       	pop	r29
    2962:	cf 91       	pop	r28
    2964:	1f 91       	pop	r17
    2966:	0f 91       	pop	r16
    2968:	ff 90       	pop	r15
    296a:	ef 90       	pop	r14
    296c:	df 90       	pop	r13
    296e:	cf 90       	pop	r12
    2970:	08 95       	ret

00002972 <_Z13Stoppuhrseitev>:
    2972:	cf 92       	push	r12
    2974:	df 92       	push	r13
    2976:	ef 92       	push	r14
    2978:	ff 92       	push	r15
    297a:	0f 93       	push	r16
    297c:	1f 93       	push	r17
    297e:	cf 93       	push	r28
    2980:	df 93       	push	r29
    2982:	cd b7       	in	r28, 0x3d	; 61
    2984:	de b7       	in	r29, 0x3e	; 62
    2986:	64 97       	sbiw	r28, 0x14	; 20
    2988:	0f b6       	in	r0, 0x3f	; 63
    298a:	f8 94       	cli
    298c:	de bf       	out	0x3e, r29	; 62
    298e:	0f be       	out	0x3f, r0	; 63
    2990:	cd bf       	out	0x3d, r28	; 61
    2992:	82 e7       	ldi	r24, 0x72	; 114
    2994:	93 e0       	ldi	r25, 0x03	; 3
    2996:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    299a:	8b e0       	ldi	r24, 0x0B	; 11
    299c:	ef e8       	ldi	r30, 0x8F	; 143
    299e:	f2 e0       	ldi	r31, 0x02	; 2
    29a0:	8e 01       	movw	r16, r28
    29a2:	0f 5f       	subi	r16, 0xFF	; 255
    29a4:	1f 4f       	sbci	r17, 0xFF	; 255
    29a6:	d8 01       	movw	r26, r16
    29a8:	01 90       	ld	r0, Z+
    29aa:	0d 92       	st	X+, r0
    29ac:	8a 95       	dec	r24
    29ae:	e1 f7       	brne	.-8      	; 0x29a8 <_Z13Stoppuhrseitev+0x36>
    29b0:	c0 2e       	mov	r12, r16
    29b2:	d1 2e       	mov	r13, r17
    29b4:	78 01       	movw	r14, r16
    29b6:	10 e0       	ldi	r17, 0x00	; 0
    29b8:	f7 01       	movw	r30, r14
    29ba:	61 91       	ld	r22, Z+
    29bc:	7f 01       	movw	r14, r30
    29be:	20 e0       	ldi	r18, 0x00	; 0
    29c0:	41 2f       	mov	r20, r17
    29c2:	82 e7       	ldi	r24, 0x72	; 114
    29c4:	93 e0       	ldi	r25, 0x03	; 3
    29c6:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    29ca:	1a 5f       	subi	r17, 0xFA	; 250
    29cc:	1c 33       	cpi	r17, 0x3C	; 60
    29ce:	a1 f7       	brne	.-24     	; 0x29b8 <_Z13Stoppuhrseitev+0x46>
    29d0:	e0 91 90 07 	lds	r30, 0x0790
    29d4:	f0 91 91 07 	lds	r31, 0x0791
    29d8:	0f 2e       	mov	r0, r31
    29da:	f0 e1       	ldi	r31, 0x10	; 16
    29dc:	ef 2e       	mov	r14, r31
    29de:	fe e0       	ldi	r31, 0x0E	; 14
    29e0:	ff 2e       	mov	r15, r31
    29e2:	f0 2d       	mov	r31, r0
    29e4:	cf 01       	movw	r24, r30
    29e6:	b7 01       	movw	r22, r14
    29e8:	0e 94 dc 34 	call	0x69b8	; 0x69b8 <__udivmodhi4>
    29ec:	ab 01       	movw	r20, r22
    29ee:	9c 01       	movw	r18, r24
    29f0:	a9 e8       	ldi	r26, 0x89	; 137
    29f2:	b8 e8       	ldi	r27, 0x88	; 136
    29f4:	0e 94 09 35 	call	0x6a12	; 0x6a12 <__umulhisi3>
    29f8:	8c 01       	movw	r16, r24
    29fa:	16 95       	lsr	r17
    29fc:	07 95       	ror	r16
    29fe:	12 95       	swap	r17
    2a00:	02 95       	swap	r16
    2a02:	0f 70       	andi	r16, 0x0F	; 15
    2a04:	01 27       	eor	r16, r17
    2a06:	1f 70       	andi	r17, 0x0F	; 15
    2a08:	01 27       	eor	r16, r17
    2a0a:	9f 01       	movw	r18, r30
    2a0c:	0e 94 09 35 	call	0x6a12	; 0x6a12 <__umulhisi3>
    2a10:	96 95       	lsr	r25
    2a12:	87 95       	ror	r24
    2a14:	92 95       	swap	r25
    2a16:	82 95       	swap	r24
    2a18:	8f 70       	andi	r24, 0x0F	; 15
    2a1a:	89 27       	eor	r24, r25
    2a1c:	9f 70       	andi	r25, 0x0F	; 15
    2a1e:	89 27       	eor	r24, r25
    2a20:	6c e3       	ldi	r22, 0x3C	; 60
    2a22:	68 9f       	mul	r22, r24
    2a24:	90 01       	movw	r18, r0
    2a26:	69 9f       	mul	r22, r25
    2a28:	30 0d       	add	r19, r0
    2a2a:	11 24       	eor	r1, r1
    2a2c:	e2 1b       	sub	r30, r18
    2a2e:	f3 0b       	sbc	r31, r19
    2a30:	ca 01       	movw	r24, r20
    2a32:	99 27       	eor	r25, r25
    2a34:	91 95       	neg	r25
    2a36:	81 95       	neg	r24
    2a38:	91 09       	sbc	r25, r1
    2a3a:	b7 01       	movw	r22, r14
    2a3c:	0e 94 f0 34 	call	0x69e0	; 0x69e0 <__divmodhi4>
    2a40:	cb 01       	movw	r24, r22
    2a42:	6a e0       	ldi	r22, 0x0A	; 10
    2a44:	70 e0       	ldi	r23, 0x00	; 0
    2a46:	0e 94 f0 34 	call	0x69e0	; 0x69e0 <__divmodhi4>
    2a4a:	69 83       	std	Y+1, r22	; 0x01
    2a4c:	8d ec       	ldi	r24, 0xCD	; 205
    2a4e:	48 9f       	mul	r20, r24
    2a50:	91 2d       	mov	r25, r1
    2a52:	11 24       	eor	r1, r1
    2a54:	96 95       	lsr	r25
    2a56:	96 95       	lsr	r25
    2a58:	96 95       	lsr	r25
    2a5a:	99 0f       	add	r25, r25
    2a5c:	29 2f       	mov	r18, r25
    2a5e:	22 0f       	add	r18, r18
    2a60:	22 0f       	add	r18, r18
    2a62:	92 0f       	add	r25, r18
    2a64:	49 1b       	sub	r20, r25
    2a66:	4a 83       	std	Y+2, r20	; 0x02
    2a68:	9a e3       	ldi	r25, 0x3A	; 58
    2a6a:	9b 83       	std	Y+3, r25	; 0x03
    2a6c:	08 9f       	mul	r16, r24
    2a6e:	21 2d       	mov	r18, r1
    2a70:	11 24       	eor	r1, r1
    2a72:	26 95       	lsr	r18
    2a74:	26 95       	lsr	r18
    2a76:	26 95       	lsr	r18
    2a78:	2c 83       	std	Y+4, r18	; 0x04
    2a7a:	22 0f       	add	r18, r18
    2a7c:	32 2f       	mov	r19, r18
    2a7e:	33 0f       	add	r19, r19
    2a80:	33 0f       	add	r19, r19
    2a82:	23 0f       	add	r18, r19
    2a84:	02 1b       	sub	r16, r18
    2a86:	0d 83       	std	Y+5, r16	; 0x05
    2a88:	9e 83       	std	Y+6, r25	; 0x06
    2a8a:	e8 9f       	mul	r30, r24
    2a8c:	81 2d       	mov	r24, r1
    2a8e:	11 24       	eor	r1, r1
    2a90:	86 95       	lsr	r24
    2a92:	86 95       	lsr	r24
    2a94:	86 95       	lsr	r24
    2a96:	8f 83       	std	Y+7, r24	; 0x07
    2a98:	88 0f       	add	r24, r24
    2a9a:	98 2f       	mov	r25, r24
    2a9c:	99 0f       	add	r25, r25
    2a9e:	99 0f       	add	r25, r25
    2aa0:	89 0f       	add	r24, r25
    2aa2:	e8 1b       	sub	r30, r24
    2aa4:	e8 87       	std	Y+8, r30	; 0x08
    2aa6:	ec 2c       	mov	r14, r12
    2aa8:	fd 2c       	mov	r15, r13
    2aaa:	10 e0       	ldi	r17, 0x00	; 0
    2aac:	f7 01       	movw	r30, r14
    2aae:	61 91       	ld	r22, Z+
    2ab0:	7f 01       	movw	r14, r30
    2ab2:	6a 33       	cpi	r22, 0x3A	; 58
    2ab4:	39 f4       	brne	.+14     	; 0x2ac4 <_Z13Stoppuhrseitev+0x152>
    2ab6:	24 e1       	ldi	r18, 0x14	; 20
    2ab8:	41 2f       	mov	r20, r17
    2aba:	82 e7       	ldi	r24, 0x72	; 114
    2abc:	93 e0       	ldi	r25, 0x03	; 3
    2abe:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2ac2:	06 c0       	rjmp	.+12     	; 0x2ad0 <_Z13Stoppuhrseitev+0x15e>
    2ac4:	20 e1       	ldi	r18, 0x10	; 16
    2ac6:	41 2f       	mov	r20, r17
    2ac8:	82 e7       	ldi	r24, 0x72	; 114
    2aca:	93 e0       	ldi	r25, 0x03	; 3
    2acc:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    2ad0:	10 5f       	subi	r17, 0xF0	; 240
    2ad2:	10 38       	cpi	r17, 0x80	; 128
    2ad4:	59 f7       	brne	.-42     	; 0x2aac <_Z13Stoppuhrseitev+0x13a>
    2ad6:	64 96       	adiw	r28, 0x14	; 20
    2ad8:	0f b6       	in	r0, 0x3f	; 63
    2ada:	f8 94       	cli
    2adc:	de bf       	out	0x3e, r29	; 62
    2ade:	0f be       	out	0x3f, r0	; 63
    2ae0:	cd bf       	out	0x3d, r28	; 61
    2ae2:	df 91       	pop	r29
    2ae4:	cf 91       	pop	r28
    2ae6:	1f 91       	pop	r17
    2ae8:	0f 91       	pop	r16
    2aea:	ff 90       	pop	r15
    2aec:	ef 90       	pop	r14
    2aee:	df 90       	pop	r13
    2af0:	cf 90       	pop	r12
    2af2:	08 95       	ret

00002af4 <_Z14Pressuresensorv>:
    2af4:	bf 92       	push	r11
    2af6:	cf 92       	push	r12
    2af8:	df 92       	push	r13
    2afa:	ef 92       	push	r14
    2afc:	ff 92       	push	r15
    2afe:	0f 93       	push	r16
    2b00:	1f 93       	push	r17
    2b02:	cf 93       	push	r28
    2b04:	df 93       	push	r29
    2b06:	cd b7       	in	r28, 0x3d	; 61
    2b08:	de b7       	in	r29, 0x3e	; 62
    2b0a:	64 97       	sbiw	r28, 0x14	; 20
    2b0c:	0f b6       	in	r0, 0x3f	; 63
    2b0e:	f8 94       	cli
    2b10:	de bf       	out	0x3e, r29	; 62
    2b12:	0f be       	out	0x3f, r0	; 63
    2b14:	cd bf       	out	0x3d, r28	; 61
    2b16:	80 e5       	ldi	r24, 0x50	; 80
    2b18:	93 e0       	ldi	r25, 0x03	; 3
    2b1a:	0e 94 3d 2b 	call	0x567a	; 0x567a <_ZN8Pressure18READ_Pressure_onceEv>
    2b1e:	80 e5       	ldi	r24, 0x50	; 80
    2b20:	93 e0       	ldi	r25, 0x03	; 3
    2b22:	0e 94 b5 2b 	call	0x576a	; 0x576a <_ZN8Pressure16READ_TemperatureEv>
    2b26:	82 e7       	ldi	r24, 0x72	; 114
    2b28:	93 e0       	ldi	r25, 0x03	; 3
    2b2a:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2b2e:	80 e0       	ldi	r24, 0x00	; 0
    2b30:	0e 94 ca 0a 	call	0x1594	; 0x1594 <_Z6headerh>
    2b34:	80 e0       	ldi	r24, 0x00	; 0
    2b36:	0e 94 ab 0b 	call	0x1756	; 0x1756 <_Z6bottomh>
    2b3a:	8e e0       	ldi	r24, 0x0E	; 14
    2b3c:	ea e9       	ldi	r30, 0x9A	; 154
    2b3e:	f2 e0       	ldi	r31, 0x02	; 2
    2b40:	8e 01       	movw	r16, r28
    2b42:	0f 5f       	subi	r16, 0xFF	; 255
    2b44:	1f 4f       	sbci	r17, 0xFF	; 255
    2b46:	d8 01       	movw	r26, r16
    2b48:	01 90       	ld	r0, Z+
    2b4a:	0d 92       	st	X+, r0
    2b4c:	8a 95       	dec	r24
    2b4e:	e1 f7       	brne	.-8      	; 0x2b48 <_Z14Pressuresensorv+0x54>
    2b50:	c0 2e       	mov	r12, r16
    2b52:	d1 2e       	mov	r13, r17
    2b54:	78 01       	movw	r14, r16
    2b56:	10 e0       	ldi	r17, 0x00	; 0
    2b58:	f7 01       	movw	r30, r14
    2b5a:	61 91       	ld	r22, Z+
    2b5c:	7f 01       	movw	r14, r30
    2b5e:	20 e1       	ldi	r18, 0x10	; 16
    2b60:	41 2f       	mov	r20, r17
    2b62:	82 e7       	ldi	r24, 0x72	; 114
    2b64:	93 e0       	ldi	r25, 0x03	; 3
    2b66:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2b6a:	1a 5f       	subi	r17, 0xFA	; 250
    2b6c:	1e 34       	cpi	r17, 0x4E	; 78
    2b6e:	a1 f7       	brne	.-24     	; 0x2b58 <_Z14Pressuresensorv+0x64>
    2b70:	e0 e5       	ldi	r30, 0x50	; 80
    2b72:	f3 e0       	ldi	r31, 0x03	; 3
    2b74:	83 81       	ldd	r24, Z+3	; 0x03
    2b76:	8f 93       	push	r24
    2b78:	82 81       	ldd	r24, Z+2	; 0x02
    2b7a:	8f 93       	push	r24
    2b7c:	81 81       	ldd	r24, Z+1	; 0x01
    2b7e:	8f 93       	push	r24
    2b80:	80 81       	ld	r24, Z
    2b82:	8f 93       	push	r24
    2b84:	88 ea       	ldi	r24, 0xA8	; 168
    2b86:	92 e0       	ldi	r25, 0x02	; 2
    2b88:	9f 93       	push	r25
    2b8a:	8f 93       	push	r24
    2b8c:	ce 01       	movw	r24, r28
    2b8e:	01 96       	adiw	r24, 0x01	; 1
    2b90:	9f 93       	push	r25
    2b92:	8f 93       	push	r24
    2b94:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    2b98:	0f b6       	in	r0, 0x3f	; 63
    2b9a:	f8 94       	cli
    2b9c:	de bf       	out	0x3e, r29	; 62
    2b9e:	0f be       	out	0x3f, r0	; 63
    2ba0:	cd bf       	out	0x3d, r28	; 61
    2ba2:	88 23       	and	r24, r24
    2ba4:	d1 f0       	breq	.+52     	; 0x2bda <_Z14Pressuresensorv+0xe6>
    2ba6:	81 50       	subi	r24, 0x01	; 1
    2ba8:	68 94       	set
    2baa:	ee 24       	eor	r14, r14
    2bac:	e1 f8       	bld	r14, 1
    2bae:	f1 2c       	mov	r15, r1
    2bb0:	ec 0e       	add	r14, r28
    2bb2:	fd 1e       	adc	r15, r29
    2bb4:	e8 0e       	add	r14, r24
    2bb6:	f1 1c       	adc	r15, r1
    2bb8:	0c 2d       	mov	r16, r12
    2bba:	1d 2d       	mov	r17, r13
    2bbc:	b1 2c       	mov	r11, r1
    2bbe:	f8 01       	movw	r30, r16
    2bc0:	61 91       	ld	r22, Z+
    2bc2:	8f 01       	movw	r16, r30
    2bc4:	28 e1       	ldi	r18, 0x18	; 24
    2bc6:	4b 2d       	mov	r20, r11
    2bc8:	82 e7       	ldi	r24, 0x72	; 114
    2bca:	93 e0       	ldi	r25, 0x03	; 3
    2bcc:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2bd0:	f6 e0       	ldi	r31, 0x06	; 6
    2bd2:	bf 0e       	add	r11, r31
    2bd4:	0e 15       	cp	r16, r14
    2bd6:	1f 05       	cpc	r17, r15
    2bd8:	91 f7       	brne	.-28     	; 0x2bbe <_Z14Pressuresensorv+0xca>
    2bda:	40 91 50 03 	lds	r20, 0x0350
    2bde:	50 91 51 03 	lds	r21, 0x0351
    2be2:	60 91 52 03 	lds	r22, 0x0352
    2be6:	70 91 53 03 	lds	r23, 0x0353
    2bea:	80 e5       	ldi	r24, 0x50	; 80
    2bec:	93 e0       	ldi	r25, 0x03	; 3
    2bee:	0e 94 25 2c 	call	0x584a	; 0x584a <_ZN8Pressure8altitudeEd>
    2bf2:	9f 93       	push	r25
    2bf4:	8f 93       	push	r24
    2bf6:	7f 93       	push	r23
    2bf8:	6f 93       	push	r22
    2bfa:	81 eb       	ldi	r24, 0xB1	; 177
    2bfc:	92 e0       	ldi	r25, 0x02	; 2
    2bfe:	9f 93       	push	r25
    2c00:	8f 93       	push	r24
    2c02:	ce 01       	movw	r24, r28
    2c04:	01 96       	adiw	r24, 0x01	; 1
    2c06:	9f 93       	push	r25
    2c08:	8f 93       	push	r24
    2c0a:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    2c0e:	0f b6       	in	r0, 0x3f	; 63
    2c10:	f8 94       	cli
    2c12:	de bf       	out	0x3e, r29	; 62
    2c14:	0f be       	out	0x3f, r0	; 63
    2c16:	cd bf       	out	0x3d, r28	; 61
    2c18:	88 23       	and	r24, r24
    2c1a:	d1 f0       	breq	.+52     	; 0x2c50 <_Z14Pressuresensorv+0x15c>
    2c1c:	81 50       	subi	r24, 0x01	; 1
    2c1e:	68 94       	set
    2c20:	ee 24       	eor	r14, r14
    2c22:	e1 f8       	bld	r14, 1
    2c24:	f1 2c       	mov	r15, r1
    2c26:	ec 0e       	add	r14, r28
    2c28:	fd 1e       	adc	r15, r29
    2c2a:	e8 0e       	add	r14, r24
    2c2c:	f1 1c       	adc	r15, r1
    2c2e:	0c 2d       	mov	r16, r12
    2c30:	1d 2d       	mov	r17, r13
    2c32:	b1 2c       	mov	r11, r1
    2c34:	f8 01       	movw	r30, r16
    2c36:	61 91       	ld	r22, Z+
    2c38:	8f 01       	movw	r16, r30
    2c3a:	20 e2       	ldi	r18, 0x20	; 32
    2c3c:	4b 2d       	mov	r20, r11
    2c3e:	82 e7       	ldi	r24, 0x72	; 114
    2c40:	93 e0       	ldi	r25, 0x03	; 3
    2c42:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2c46:	f6 e0       	ldi	r31, 0x06	; 6
    2c48:	bf 0e       	add	r11, r31
    2c4a:	0e 15       	cp	r16, r14
    2c4c:	1f 05       	cpc	r17, r15
    2c4e:	91 f7       	brne	.-28     	; 0x2c34 <_Z14Pressuresensorv+0x140>
    2c50:	e4 e5       	ldi	r30, 0x54	; 84
    2c52:	f3 e0       	ldi	r31, 0x03	; 3
    2c54:	83 81       	ldd	r24, Z+3	; 0x03
    2c56:	8f 93       	push	r24
    2c58:	82 81       	ldd	r24, Z+2	; 0x02
    2c5a:	8f 93       	push	r24
    2c5c:	81 81       	ldd	r24, Z+1	; 0x01
    2c5e:	8f 93       	push	r24
    2c60:	80 81       	ld	r24, Z
    2c62:	8f 93       	push	r24
    2c64:	81 e1       	ldi	r24, 0x11	; 17
    2c66:	92 e0       	ldi	r25, 0x02	; 2
    2c68:	9f 93       	push	r25
    2c6a:	8f 93       	push	r24
    2c6c:	ce 01       	movw	r24, r28
    2c6e:	01 96       	adiw	r24, 0x01	; 1
    2c70:	9f 93       	push	r25
    2c72:	8f 93       	push	r24
    2c74:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
    2c78:	0f b6       	in	r0, 0x3f	; 63
    2c7a:	f8 94       	cli
    2c7c:	de bf       	out	0x3e, r29	; 62
    2c7e:	0f be       	out	0x3f, r0	; 63
    2c80:	cd bf       	out	0x3d, r28	; 61
    2c82:	88 23       	and	r24, r24
    2c84:	d1 f0       	breq	.+52     	; 0x2cba <_Z14Pressuresensorv+0x1c6>
    2c86:	81 50       	subi	r24, 0x01	; 1
    2c88:	68 94       	set
    2c8a:	ee 24       	eor	r14, r14
    2c8c:	e1 f8       	bld	r14, 1
    2c8e:	f1 2c       	mov	r15, r1
    2c90:	ec 0e       	add	r14, r28
    2c92:	fd 1e       	adc	r15, r29
    2c94:	e8 0e       	add	r14, r24
    2c96:	f1 1c       	adc	r15, r1
    2c98:	0c 2d       	mov	r16, r12
    2c9a:	1d 2d       	mov	r17, r13
    2c9c:	d1 2c       	mov	r13, r1
    2c9e:	f8 01       	movw	r30, r16
    2ca0:	61 91       	ld	r22, Z+
    2ca2:	8f 01       	movw	r16, r30
    2ca4:	20 e3       	ldi	r18, 0x30	; 48
    2ca6:	4d 2d       	mov	r20, r13
    2ca8:	82 e7       	ldi	r24, 0x72	; 114
    2caa:	93 e0       	ldi	r25, 0x03	; 3
    2cac:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2cb0:	f6 e0       	ldi	r31, 0x06	; 6
    2cb2:	df 0e       	add	r13, r31
    2cb4:	0e 15       	cp	r16, r14
    2cb6:	1f 05       	cpc	r17, r15
    2cb8:	91 f7       	brne	.-28     	; 0x2c9e <_Z14Pressuresensorv+0x1aa>
    2cba:	64 96       	adiw	r28, 0x14	; 20
    2cbc:	0f b6       	in	r0, 0x3f	; 63
    2cbe:	f8 94       	cli
    2cc0:	de bf       	out	0x3e, r29	; 62
    2cc2:	0f be       	out	0x3f, r0	; 63
    2cc4:	cd bf       	out	0x3d, r28	; 61
    2cc6:	df 91       	pop	r29
    2cc8:	cf 91       	pop	r28
    2cca:	1f 91       	pop	r17
    2ccc:	0f 91       	pop	r16
    2cce:	ff 90       	pop	r15
    2cd0:	ef 90       	pop	r14
    2cd2:	df 90       	pop	r13
    2cd4:	cf 90       	pop	r12
    2cd6:	bf 90       	pop	r11
    2cd8:	08 95       	ret

00002cda <_Z11Wanderseitev>:

void Wanderseite(){
    2cda:	8f 92       	push	r8
    2cdc:	9f 92       	push	r9
    2cde:	af 92       	push	r10
    2ce0:	bf 92       	push	r11
    2ce2:	cf 92       	push	r12
    2ce4:	df 92       	push	r13
    2ce6:	ef 92       	push	r14
    2ce8:	ff 92       	push	r15
    2cea:	0f 93       	push	r16
    2cec:	1f 93       	push	r17
    2cee:	cf 93       	push	r28
    2cf0:	df 93       	push	r29
    2cf2:	cd b7       	in	r28, 0x3d	; 61
    2cf4:	de b7       	in	r29, 0x3e	; 62
    2cf6:	64 97       	sbiw	r28, 0x14	; 20
    2cf8:	0f b6       	in	r0, 0x3f	; 63
    2cfa:	f8 94       	cli
    2cfc:	de bf       	out	0x3e, r29	; 62
    2cfe:	0f be       	out	0x3f, r0	; 63
    2d00:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	uint8_t buffersize=0;
	oled.clearFrame();
    2d02:	82 e7       	ldi	r24, 0x72	; 114
    2d04:	93 e0       	ldi	r25, 0x03	; 3
    2d06:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	header(0);
    2d0a:	80 e0       	ldi	r24, 0x00	; 0
    2d0c:	0e 94 ca 0a 	call	0x1594	; 0x1594 <_Z6headerh>
	bottom(0);
    2d10:	80 e0       	ldi	r24, 0x00	; 0
    2d12:	0e 94 ab 0b 	call	0x1756	; 0x1756 <_Z6bottomh>
	
	Accelerometer.readtempera();
    2d16:	8f e3       	ldi	r24, 0x3F	; 63
    2d18:	93 e0       	ldi	r25, 0x03	; 3
    2d1a:	0e 94 ee 28 	call	0x51dc	; 0x51dc <_ZN7LSM303D11readtemperaEv>
	Accelerometer.readacc();
    2d1e:	8f e3       	ldi	r24, 0x3F	; 63
    2d20:	93 e0       	ldi	r25, 0x03	; 3
    2d22:	0e 94 51 28 	call	0x50a2	; 0x50a2 <_ZN7LSM303D7readaccEv>
	
	//Linse
	//Range: Page 1 to Page 6 (8 bis (7*8-1) 53)
	//ganz rechts SSDWIDTH-(53-8)
	#define libelle	(53.0-8.0)
	oled.drawRectangle(SSD1306_WIDTH-libelle,8,SSD1306_WIDTH-1,53,0);
    2d26:	e1 2c       	mov	r14, r1
    2d28:	05 e3       	ldi	r16, 0x35	; 53
    2d2a:	2f e7       	ldi	r18, 0x7F	; 127
    2d2c:	48 e0       	ldi	r20, 0x08	; 8
    2d2e:	63 e5       	ldi	r22, 0x53	; 83
    2d30:	82 e7       	ldi	r24, 0x72	; 114
    2d32:	93 e0       	ldi	r25, 0x03	; 3
    2d34:	0e 94 3a 04 	call	0x874	; 0x874 <_ZN7Display13drawRectangleEhhhhh>
	oled.drawVLine(SSD1306_WIDTH-libelle/2.0,8,libelle);
    2d38:	2d e2       	ldi	r18, 0x2D	; 45
    2d3a:	48 e0       	ldi	r20, 0x08	; 8
    2d3c:	69 e6       	ldi	r22, 0x69	; 105
    2d3e:	82 e7       	ldi	r24, 0x72	; 114
    2d40:	93 e0       	ldi	r25, 0x03	; 3
    2d42:	0e 94 06 04 	call	0x80c	; 0x80c <_ZN7Display9drawVLineEhhh>
	oled.drawHLine(SSD1306_WIDTH-libelle,SSD1306_HEIGHT/2,libelle);
    2d46:	2d e2       	ldi	r18, 0x2D	; 45
    2d48:	40 e2       	ldi	r20, 0x20	; 32
    2d4a:	63 e5       	ldi	r22, 0x53	; 83
    2d4c:	82 e7       	ldi	r24, 0x72	; 114
    2d4e:	93 e0       	ldi	r25, 0x03	; 3
    2d50:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
	//Draw libelle uber die Winkel max ist 90 und -90 in beide richtungen
	#define bereichgroese libelle/M_PI*2.0
	#define breite 4
	#define xpos SSD1306_WIDTH-libelle/2.0-breite/2.0
	#define ypos SSD1306_HEIGHT/2.0-breite/2.0
	float rollpix = Accelerometer.roll*bereichgroese;
    2d54:	20 e0       	ldi	r18, 0x00	; 0
    2d56:	30 e0       	ldi	r19, 0x00	; 0
    2d58:	44 e3       	ldi	r20, 0x34	; 52
    2d5a:	52 e4       	ldi	r21, 0x42	; 66
    2d5c:	60 91 47 03 	lds	r22, 0x0347
    2d60:	70 91 48 03 	lds	r23, 0x0348
    2d64:	80 91 49 03 	lds	r24, 0x0349
    2d68:	90 91 4a 03 	lds	r25, 0x034A
    2d6c:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    2d70:	2b ed       	ldi	r18, 0xDB	; 219
    2d72:	3f e0       	ldi	r19, 0x0F	; 15
    2d74:	49 e4       	ldi	r20, 0x49	; 73
    2d76:	50 e4       	ldi	r21, 0x40	; 64
    2d78:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
    2d7c:	9b 01       	movw	r18, r22
    2d7e:	ac 01       	movw	r20, r24
    2d80:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    2d84:	6b 01       	movw	r12, r22
    2d86:	7c 01       	movw	r14, r24
	float pitchpix = Accelerometer.pitch*bereichgroese;
    2d88:	80 90 4b 03 	lds	r8, 0x034B
    2d8c:	90 90 4c 03 	lds	r9, 0x034C
    2d90:	a0 90 4d 03 	lds	r10, 0x034D
    2d94:	b0 90 4e 03 	lds	r11, 0x034E
	if (rollpix<libelle/2.0 && pitchpix<libelle/2.0)
    2d98:	20 e0       	ldi	r18, 0x00	; 0
    2d9a:	30 e0       	ldi	r19, 0x00	; 0
    2d9c:	44 eb       	ldi	r20, 0xB4	; 180
    2d9e:	51 e4       	ldi	r21, 0x41	; 65
    2da0:	0e 94 aa 2e 	call	0x5d54	; 0x5d54 <__cmpsf2>
    2da4:	88 23       	and	r24, r24
    2da6:	0c f0       	brlt	.+2      	; 0x2daa <_Z11Wanderseitev+0xd0>
    2da8:	4f c0       	rjmp	.+158    	; 0x2e48 <_Z11Wanderseitev+0x16e>
	#define bereichgroese libelle/M_PI*2.0
	#define breite 4
	#define xpos SSD1306_WIDTH-libelle/2.0-breite/2.0
	#define ypos SSD1306_HEIGHT/2.0-breite/2.0
	float rollpix = Accelerometer.roll*bereichgroese;
	float pitchpix = Accelerometer.pitch*bereichgroese;
    2daa:	20 e0       	ldi	r18, 0x00	; 0
    2dac:	30 e0       	ldi	r19, 0x00	; 0
    2dae:	44 e3       	ldi	r20, 0x34	; 52
    2db0:	52 e4       	ldi	r21, 0x42	; 66
    2db2:	c5 01       	movw	r24, r10
    2db4:	b4 01       	movw	r22, r8
    2db6:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    2dba:	2b ed       	ldi	r18, 0xDB	; 219
    2dbc:	3f e0       	ldi	r19, 0x0F	; 15
    2dbe:	49 e4       	ldi	r20, 0x49	; 73
    2dc0:	50 e4       	ldi	r21, 0x40	; 64
    2dc2:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
    2dc6:	9b 01       	movw	r18, r22
    2dc8:	ac 01       	movw	r20, r24
    2dca:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    2dce:	4b 01       	movw	r8, r22
    2dd0:	5c 01       	movw	r10, r24
	if (rollpix<libelle/2.0 && pitchpix<libelle/2.0)
    2dd2:	20 e0       	ldi	r18, 0x00	; 0
    2dd4:	30 e0       	ldi	r19, 0x00	; 0
    2dd6:	44 eb       	ldi	r20, 0xB4	; 180
    2dd8:	51 e4       	ldi	r21, 0x41	; 65
    2dda:	0e 94 aa 2e 	call	0x5d54	; 0x5d54 <__cmpsf2>
    2dde:	88 23       	and	r24, r24
    2de0:	9c f5       	brge	.+102    	; 0x2e48 <_Z11Wanderseitev+0x16e>
	{
		oled.drawRectangle(xpos-rollpix,ypos+pitchpix,xpos+breite-rollpix,ypos+breite+pitchpix,1);
    2de2:	20 e0       	ldi	r18, 0x00	; 0
    2de4:	30 e0       	ldi	r19, 0x00	; 0
    2de6:	48 e0       	ldi	r20, 0x08	; 8
    2de8:	52 e4       	ldi	r21, 0x42	; 66
    2dea:	c5 01       	movw	r24, r10
    2dec:	b4 01       	movw	r22, r8
    2dee:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    2df2:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
    2df6:	06 2f       	mov	r16, r22
    2df8:	a7 01       	movw	r20, r14
    2dfa:	96 01       	movw	r18, r12
    2dfc:	60 e0       	ldi	r22, 0x00	; 0
    2dfe:	70 e0       	ldi	r23, 0x00	; 0
    2e00:	87 ed       	ldi	r24, 0xD7	; 215
    2e02:	92 e4       	ldi	r25, 0x42	; 66
    2e04:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
    2e08:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
    2e0c:	16 2f       	mov	r17, r22
    2e0e:	20 e0       	ldi	r18, 0x00	; 0
    2e10:	30 e0       	ldi	r19, 0x00	; 0
    2e12:	40 ef       	ldi	r20, 0xF0	; 240
    2e14:	51 e4       	ldi	r21, 0x41	; 65
    2e16:	c5 01       	movw	r24, r10
    2e18:	b4 01       	movw	r22, r8
    2e1a:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    2e1e:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
    2e22:	b6 2e       	mov	r11, r22
    2e24:	a7 01       	movw	r20, r14
    2e26:	96 01       	movw	r18, r12
    2e28:	60 e0       	ldi	r22, 0x00	; 0
    2e2a:	70 e0       	ldi	r23, 0x00	; 0
    2e2c:	8f ec       	ldi	r24, 0xCF	; 207
    2e2e:	92 e4       	ldi	r25, 0x42	; 66
    2e30:	0e 94 e3 2d 	call	0x5bc6	; 0x5bc6 <__subsf3>
    2e34:	0e 94 1e 2f 	call	0x5e3c	; 0x5e3c <__fixunssfsi>
    2e38:	ee 24       	eor	r14, r14
    2e3a:	e3 94       	inc	r14
    2e3c:	21 2f       	mov	r18, r17
    2e3e:	4b 2d       	mov	r20, r11
    2e40:	82 e7       	ldi	r24, 0x72	; 114
    2e42:	93 e0       	ldi	r25, 0x03	; 3
    2e44:	0e 94 3a 04 	call	0x874	; 0x874 <_ZN7Display13drawRectangleEhhhhh>
	}

	//Text debugging
	buffersize=sprintf(buffer,"r:%.1f",Accelerometer.roll*180.0/M_PI);
    2e48:	20 e0       	ldi	r18, 0x00	; 0
    2e4a:	30 e0       	ldi	r19, 0x00	; 0
    2e4c:	44 e3       	ldi	r20, 0x34	; 52
    2e4e:	53 e4       	ldi	r21, 0x43	; 67
    2e50:	60 91 47 03 	lds	r22, 0x0347
    2e54:	70 91 48 03 	lds	r23, 0x0348
    2e58:	80 91 49 03 	lds	r24, 0x0349
    2e5c:	90 91 4a 03 	lds	r25, 0x034A
    2e60:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    2e64:	2b ed       	ldi	r18, 0xDB	; 219
    2e66:	3f e0       	ldi	r19, 0x0F	; 15
    2e68:	49 e4       	ldi	r20, 0x49	; 73
    2e6a:	50 e4       	ldi	r21, 0x40	; 64
    2e6c:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
    2e70:	9f 93       	push	r25
    2e72:	8f 93       	push	r24
    2e74:	7f 93       	push	r23
    2e76:	6f 93       	push	r22
    2e78:	8f eb       	ldi	r24, 0xBF	; 191
    2e7a:	92 e0       	ldi	r25, 0x02	; 2
    2e7c:	9f 93       	push	r25
    2e7e:	8f 93       	push	r24
    2e80:	ce 01       	movw	r24, r28
    2e82:	01 96       	adiw	r24, 0x01	; 1
    2e84:	9f 93       	push	r25
    2e86:	8f 93       	push	r24
    2e88:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,2*charhighte);}
    2e8c:	0f b6       	in	r0, 0x3f	; 63
    2e8e:	f8 94       	cli
    2e90:	de bf       	out	0x3e, r29	; 62
    2e92:	0f be       	out	0x3f, r0	; 63
    2e94:	cd bf       	out	0x3d, r28	; 61
    2e96:	88 23       	and	r24, r24
    2e98:	d9 f0       	breq	.+54     	; 0x2ed0 <_Z11Wanderseitev+0x1f6>
    2e9a:	8e 01       	movw	r16, r28
    2e9c:	0f 5f       	subi	r16, 0xFF	; 255
    2e9e:	1f 4f       	sbci	r17, 0xFF	; 255
    2ea0:	81 50       	subi	r24, 0x01	; 1
    2ea2:	68 94       	set
    2ea4:	ee 24       	eor	r14, r14
    2ea6:	e1 f8       	bld	r14, 1
    2ea8:	f1 2c       	mov	r15, r1
    2eaa:	ec 0e       	add	r14, r28
    2eac:	fd 1e       	adc	r15, r29
    2eae:	e8 0e       	add	r14, r24
    2eb0:	f1 1c       	adc	r15, r1
    2eb2:	d1 2c       	mov	r13, r1
    2eb4:	f8 01       	movw	r30, r16
    2eb6:	61 91       	ld	r22, Z+
    2eb8:	8f 01       	movw	r16, r30
    2eba:	20 e1       	ldi	r18, 0x10	; 16
    2ebc:	4d 2d       	mov	r20, r13
    2ebe:	82 e7       	ldi	r24, 0x72	; 114
    2ec0:	93 e0       	ldi	r25, 0x03	; 3
    2ec2:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2ec6:	f6 e0       	ldi	r31, 0x06	; 6
    2ec8:	df 0e       	add	r13, r31
    2eca:	0e 15       	cp	r16, r14
    2ecc:	1f 05       	cpc	r17, r15
    2ece:	91 f7       	brne	.-28     	; 0x2eb4 <_Z11Wanderseitev+0x1da>
	buffersize=sprintf(buffer,"p:%.1f",Accelerometer.pitch*180.0/M_PI);
    2ed0:	20 e0       	ldi	r18, 0x00	; 0
    2ed2:	30 e0       	ldi	r19, 0x00	; 0
    2ed4:	44 e3       	ldi	r20, 0x34	; 52
    2ed6:	53 e4       	ldi	r21, 0x43	; 67
    2ed8:	60 91 4b 03 	lds	r22, 0x034B
    2edc:	70 91 4c 03 	lds	r23, 0x034C
    2ee0:	80 91 4d 03 	lds	r24, 0x034D
    2ee4:	90 91 4e 03 	lds	r25, 0x034E
    2ee8:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    2eec:	2b ed       	ldi	r18, 0xDB	; 219
    2eee:	3f e0       	ldi	r19, 0x0F	; 15
    2ef0:	49 e4       	ldi	r20, 0x49	; 73
    2ef2:	50 e4       	ldi	r21, 0x40	; 64
    2ef4:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
    2ef8:	9f 93       	push	r25
    2efa:	8f 93       	push	r24
    2efc:	7f 93       	push	r23
    2efe:	6f 93       	push	r22
    2f00:	86 ec       	ldi	r24, 0xC6	; 198
    2f02:	92 e0       	ldi	r25, 0x02	; 2
    2f04:	9f 93       	push	r25
    2f06:	8f 93       	push	r24
    2f08:	ce 01       	movw	r24, r28
    2f0a:	01 96       	adiw	r24, 0x01	; 1
    2f0c:	9f 93       	push	r25
    2f0e:	8f 93       	push	r24
    2f10:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
    2f14:	0f b6       	in	r0, 0x3f	; 63
    2f16:	f8 94       	cli
    2f18:	de bf       	out	0x3e, r29	; 62
    2f1a:	0f be       	out	0x3f, r0	; 63
    2f1c:	cd bf       	out	0x3d, r28	; 61
    2f1e:	88 23       	and	r24, r24
    2f20:	d9 f0       	breq	.+54     	; 0x2f58 <_Z11Wanderseitev+0x27e>
    2f22:	8e 01       	movw	r16, r28
    2f24:	0f 5f       	subi	r16, 0xFF	; 255
    2f26:	1f 4f       	sbci	r17, 0xFF	; 255
    2f28:	81 50       	subi	r24, 0x01	; 1
    2f2a:	68 94       	set
    2f2c:	ee 24       	eor	r14, r14
    2f2e:	e1 f8       	bld	r14, 1
    2f30:	f1 2c       	mov	r15, r1
    2f32:	ec 0e       	add	r14, r28
    2f34:	fd 1e       	adc	r15, r29
    2f36:	e8 0e       	add	r14, r24
    2f38:	f1 1c       	adc	r15, r1
    2f3a:	d1 2c       	mov	r13, r1
    2f3c:	f8 01       	movw	r30, r16
    2f3e:	61 91       	ld	r22, Z+
    2f40:	8f 01       	movw	r16, r30
    2f42:	28 e1       	ldi	r18, 0x18	; 24
    2f44:	4d 2d       	mov	r20, r13
    2f46:	82 e7       	ldi	r24, 0x72	; 114
    2f48:	93 e0       	ldi	r25, 0x03	; 3
    2f4a:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2f4e:	f6 e0       	ldi	r31, 0x06	; 6
    2f50:	df 0e       	add	r13, r31
    2f52:	0e 15       	cp	r16, r14
    2f54:	1f 05       	cpc	r17, r15
    2f56:	91 f7       	brne	.-28     	; 0x2f3c <_Z11Wanderseitev+0x262>
	buffersize=sprintf(buffer,"%i C",Accelerometer.Tempera);
    2f58:	e5 e4       	ldi	r30, 0x45	; 69
    2f5a:	f3 e0       	ldi	r31, 0x03	; 3
    2f5c:	81 81       	ldd	r24, Z+1	; 0x01
    2f5e:	8f 93       	push	r24
    2f60:	80 81       	ld	r24, Z
    2f62:	8f 93       	push	r24
    2f64:	8d ec       	ldi	r24, 0xCD	; 205
    2f66:	92 e0       	ldi	r25, 0x02	; 2
    2f68:	9f 93       	push	r25
    2f6a:	8f 93       	push	r24
    2f6c:	ce 01       	movw	r24, r28
    2f6e:	01 96       	adiw	r24, 0x01	; 1
    2f70:	9f 93       	push	r25
    2f72:	8f 93       	push	r24
    2f74:	0e 94 3c 36 	call	0x6c78	; 0x6c78 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,5*charhighte);}
    2f78:	0f 90       	pop	r0
    2f7a:	0f 90       	pop	r0
    2f7c:	0f 90       	pop	r0
    2f7e:	0f 90       	pop	r0
    2f80:	0f 90       	pop	r0
    2f82:	0f 90       	pop	r0
    2f84:	88 23       	and	r24, r24
    2f86:	d9 f0       	breq	.+54     	; 0x2fbe <_Z11Wanderseitev+0x2e4>
    2f88:	8e 01       	movw	r16, r28
    2f8a:	0f 5f       	subi	r16, 0xFF	; 255
    2f8c:	1f 4f       	sbci	r17, 0xFF	; 255
    2f8e:	81 50       	subi	r24, 0x01	; 1
    2f90:	68 94       	set
    2f92:	ee 24       	eor	r14, r14
    2f94:	e1 f8       	bld	r14, 1
    2f96:	f1 2c       	mov	r15, r1
    2f98:	ec 0e       	add	r14, r28
    2f9a:	fd 1e       	adc	r15, r29
    2f9c:	e8 0e       	add	r14, r24
    2f9e:	f1 1c       	adc	r15, r1
    2fa0:	d1 2c       	mov	r13, r1
    2fa2:	f8 01       	movw	r30, r16
    2fa4:	61 91       	ld	r22, Z+
    2fa6:	8f 01       	movw	r16, r30
    2fa8:	28 e2       	ldi	r18, 0x28	; 40
    2faa:	4d 2d       	mov	r20, r13
    2fac:	82 e7       	ldi	r24, 0x72	; 114
    2fae:	93 e0       	ldi	r25, 0x03	; 3
    2fb0:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    2fb4:	f6 e0       	ldi	r31, 0x06	; 6
    2fb6:	df 0e       	add	r13, r31
    2fb8:	0e 15       	cp	r16, r14
    2fba:	1f 05       	cpc	r17, r15
    2fbc:	91 f7       	brne	.-28     	; 0x2fa2 <_Z11Wanderseitev+0x2c8>
}
    2fbe:	64 96       	adiw	r28, 0x14	; 20
    2fc0:	0f b6       	in	r0, 0x3f	; 63
    2fc2:	f8 94       	cli
    2fc4:	de bf       	out	0x3e, r29	; 62
    2fc6:	0f be       	out	0x3f, r0	; 63
    2fc8:	cd bf       	out	0x3d, r28	; 61
    2fca:	df 91       	pop	r29
    2fcc:	cf 91       	pop	r28
    2fce:	1f 91       	pop	r17
    2fd0:	0f 91       	pop	r16
    2fd2:	ff 90       	pop	r15
    2fd4:	ef 90       	pop	r14
    2fd6:	df 90       	pop	r13
    2fd8:	cf 90       	pop	r12
    2fda:	bf 90       	pop	r11
    2fdc:	af 90       	pop	r10
    2fde:	9f 90       	pop	r9
    2fe0:	8f 90       	pop	r8
    2fe2:	08 95       	ret

00002fe4 <_Z13uhreinstellenv>:

void uhreinstellen(){
    2fe4:	2f 92       	push	r2
    2fe6:	3f 92       	push	r3
    2fe8:	4f 92       	push	r4
    2fea:	5f 92       	push	r5
    2fec:	6f 92       	push	r6
    2fee:	7f 92       	push	r7
    2ff0:	8f 92       	push	r8
    2ff2:	9f 92       	push	r9
    2ff4:	af 92       	push	r10
    2ff6:	bf 92       	push	r11
    2ff8:	cf 92       	push	r12
    2ffa:	df 92       	push	r13
    2ffc:	ef 92       	push	r14
    2ffe:	ff 92       	push	r15
    3000:	0f 93       	push	r16
    3002:	1f 93       	push	r17
    3004:	cf 93       	push	r28
    3006:	df 93       	push	r29
    3008:	cd b7       	in	r28, 0x3d	; 61
    300a:	de b7       	in	r29, 0x3e	; 62
    300c:	66 97       	sbiw	r28, 0x16	; 22
    300e:	0f b6       	in	r0, 0x3f	; 63
    3010:	f8 94       	cli
    3012:	de bf       	out	0x3e, r29	; 62
    3014:	0f be       	out	0x3f, r0	; 63
    3016:	cd bf       	out	0x3d, r28	; 61
	rtc.RTCstop();
    3018:	83 e7       	ldi	r24, 0x73	; 115
    301a:	97 e0       	ldi	r25, 0x07	; 7
    301c:	0e 94 9c 2d 	call	0x5b38	; 0x5b38 <_ZN3RTC7RTCstopEv>
	
	oled.clearFrame();
    3020:	82 e7       	ldi	r24, 0x72	; 114
    3022:	93 e0       	ldi	r25, 0x03	; 3
    3024:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
    3028:	91 2c       	mov	r9, r1
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    302a:	0f 2e       	mov	r0, r31
    302c:	ff e0       	ldi	r31, 0x0F	; 15
    302e:	6f 2e       	mov	r6, r31
    3030:	f0 2d       	mov	r31, r0
    3032:	ce 01       	movw	r24, r28
    3034:	01 96       	adiw	r24, 0x01	; 1
    3036:	7c 01       	movw	r14, r24
    3038:	78 2e       	mov	r7, r24
    303a:	8f 2c       	mov	r8, r15
    303c:	b1 2c       	mov	r11, r1
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    303e:	8d 8b       	std	Y+21, r24	; 0x15
    3040:	fe 8a       	std	Y+22, r15	; 0x16
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    3042:	0f 2e       	mov	r0, r31
    3044:	fd ec       	ldi	r31, 0xCD	; 205
    3046:	af 2e       	mov	r10, r31
    3048:	f0 2d       	mov	r31, r0
		buffer[1]=rtc.Stunden%10;
		buffer[2]=':';
		buffer[3]=rtc.Minuten/10;
		buffer[4]=rtc.Minuten%10;
		buffer[5]=' ';
		buffer[6]=rtc.Tag/10;
    304a:	0f 2e       	mov	r0, r31
    304c:	f7 e8       	ldi	r31, 0x87	; 135
    304e:	4f 2e       	mov	r4, r31
    3050:	f7 e0       	ldi	r31, 0x07	; 7
    3052:	5f 2e       	mov	r5, r31
    3054:	f0 2d       	mov	r31, r0
		buffer[7]=rtc.Tag%10;
		buffer[8]='.';
		buffer[9]=rtc.Monat/10;
    3056:	0f 2e       	mov	r0, r31
    3058:	f9 e8       	ldi	r31, 0x89	; 137
    305a:	cf 2e       	mov	r12, r31
    305c:	f7 e0       	ldi	r31, 0x07	; 7
    305e:	df 2e       	mov	r13, r31
    3060:	f0 2d       	mov	r31, r0
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    3062:	e2 ed       	ldi	r30, 0xD2	; 210
    3064:	f2 e0       	ldi	r31, 0x02	; 2
    3066:	a7 2d       	mov	r26, r7
    3068:	b8 2d       	mov	r27, r8
    306a:	86 2d       	mov	r24, r6
    306c:	01 90       	ld	r0, Z+
    306e:	0d 92       	st	X+, r0
    3070:	8a 95       	dec	r24
    3072:	e1 f7       	brne	.-8      	; 0x306c <_Z13uhreinstellenv+0x88>
    3074:	27 2c       	mov	r2, r7
    3076:	38 2c       	mov	r3, r8
    3078:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
    307a:	f1 01       	movw	r30, r2
    307c:	61 91       	ld	r22, Z+
    307e:	1f 01       	movw	r2, r30
    3080:	2b 2d       	mov	r18, r11
    3082:	41 2f       	mov	r20, r17
    3084:	82 e7       	ldi	r24, 0x72	; 114
    3086:	93 e0       	ldi	r25, 0x03	; 3
    3088:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    308c:	1a 5f       	subi	r17, 0xFA	; 250
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
    308e:	14 35       	cpi	r17, 0x54	; 84
    3090:	a1 f7       	brne	.-24     	; 0x307a <_Z13uhreinstellenv+0x96>
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    3092:	ef e0       	ldi	r30, 0x0F	; 15
    3094:	f1 e0       	ldi	r31, 0x01	; 1
    3096:	a7 2d       	mov	r26, r7
    3098:	b8 2d       	mov	r27, r8
    309a:	86 2d       	mov	r24, r6
    309c:	01 90       	ld	r0, Z+
    309e:	0d 92       	st	X+, r0
    30a0:	8a 95       	dec	r24
    30a2:	e1 f7       	brne	.-8      	; 0x309c <_Z13uhreinstellenv+0xb8>
    30a4:	2d 88       	ldd	r2, Y+21	; 0x15
    30a6:	3e 88       	ldd	r3, Y+22	; 0x16
    30a8:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
    30aa:	f1 01       	movw	r30, r2
    30ac:	61 91       	ld	r22, Z+
    30ae:	1f 01       	movw	r2, r30
    30b0:	28 e0       	ldi	r18, 0x08	; 8
    30b2:	41 2f       	mov	r20, r17
    30b4:	82 e7       	ldi	r24, 0x72	; 114
    30b6:	93 e0       	ldi	r25, 0x03	; 3
    30b8:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    30bc:	1a 5f       	subi	r17, 0xFA	; 250
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
		for(uint8_t i = 0; i<buffersize;i++){
    30be:	14 35       	cpi	r17, 0x54	; 84
    30c0:	a1 f7       	brne	.-24     	; 0x30aa <_Z13uhreinstellenv+0xc6>
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    30c2:	e3 e8       	ldi	r30, 0x83	; 131
    30c4:	f7 e0       	ldi	r31, 0x07	; 7
    30c6:	80 81       	ld	r24, Z
    30c8:	8a 9d       	mul	r24, r10
    30ca:	91 2d       	mov	r25, r1
    30cc:	11 24       	eor	r1, r1
    30ce:	96 95       	lsr	r25
    30d0:	96 95       	lsr	r25
    30d2:	96 95       	lsr	r25
    30d4:	99 83       	std	Y+1, r25	; 0x01
		buffer[1]=rtc.Stunden%10;
    30d6:	99 0f       	add	r25, r25
    30d8:	29 2f       	mov	r18, r25
    30da:	22 0f       	add	r18, r18
    30dc:	22 0f       	add	r18, r18
    30de:	92 0f       	add	r25, r18
    30e0:	89 1b       	sub	r24, r25
    30e2:	8a 83       	std	Y+2, r24	; 0x02
		buffer[2]=':';
    30e4:	fa e3       	ldi	r31, 0x3A	; 58
    30e6:	fb 83       	std	Y+3, r31	; 0x03
		buffer[3]=rtc.Minuten/10;
    30e8:	e4 e8       	ldi	r30, 0x84	; 132
    30ea:	f7 e0       	ldi	r31, 0x07	; 7
    30ec:	80 81       	ld	r24, Z
    30ee:	8a 9d       	mul	r24, r10
    30f0:	91 2d       	mov	r25, r1
    30f2:	11 24       	eor	r1, r1
    30f4:	96 95       	lsr	r25
    30f6:	96 95       	lsr	r25
    30f8:	96 95       	lsr	r25
    30fa:	9c 83       	std	Y+4, r25	; 0x04
		buffer[4]=rtc.Minuten%10;
    30fc:	99 0f       	add	r25, r25
    30fe:	29 2f       	mov	r18, r25
    3100:	22 0f       	add	r18, r18
    3102:	22 0f       	add	r18, r18
    3104:	92 0f       	add	r25, r18
    3106:	89 1b       	sub	r24, r25
    3108:	8d 83       	std	Y+5, r24	; 0x05
		buffer[5]=' ';
    310a:	80 e2       	ldi	r24, 0x20	; 32
    310c:	8e 83       	std	Y+6, r24	; 0x06
		buffer[6]=rtc.Tag/10;
    310e:	f2 01       	movw	r30, r4
    3110:	80 81       	ld	r24, Z
    3112:	8a 9d       	mul	r24, r10
    3114:	91 2d       	mov	r25, r1
    3116:	11 24       	eor	r1, r1
    3118:	96 95       	lsr	r25
    311a:	96 95       	lsr	r25
    311c:	96 95       	lsr	r25
    311e:	9f 83       	std	Y+7, r25	; 0x07
		buffer[7]=rtc.Tag%10;
    3120:	99 0f       	add	r25, r25
    3122:	29 2f       	mov	r18, r25
    3124:	22 0f       	add	r18, r18
    3126:	22 0f       	add	r18, r18
    3128:	92 0f       	add	r25, r18
    312a:	89 1b       	sub	r24, r25
    312c:	88 87       	std	Y+8, r24	; 0x08
		buffer[8]='.';
    312e:	8e e2       	ldi	r24, 0x2E	; 46
    3130:	89 87       	std	Y+9, r24	; 0x09
		buffer[9]=rtc.Monat/10;
    3132:	f6 01       	movw	r30, r12
    3134:	90 81       	ld	r25, Z
    3136:	9a 9d       	mul	r25, r10
    3138:	21 2d       	mov	r18, r1
    313a:	11 24       	eor	r1, r1
    313c:	26 95       	lsr	r18
    313e:	26 95       	lsr	r18
    3140:	26 95       	lsr	r18
    3142:	2a 87       	std	Y+10, r18	; 0x0a
		buffer[10]=rtc.Monat%10;
    3144:	22 0f       	add	r18, r18
    3146:	32 2f       	mov	r19, r18
    3148:	33 0f       	add	r19, r19
    314a:	33 0f       	add	r19, r19
    314c:	23 0f       	add	r18, r19
    314e:	92 1b       	sub	r25, r18
    3150:	9b 87       	std	Y+11, r25	; 0x0b
		buffer[11]='.';
    3152:	8c 87       	std	Y+12, r24	; 0x0c
		buffer[12]=rtc.Jahr/10;
    3154:	ea e8       	ldi	r30, 0x8A	; 138
    3156:	f7 e0       	ldi	r31, 0x07	; 7
    3158:	80 81       	ld	r24, Z
    315a:	8a 9d       	mul	r24, r10
    315c:	91 2d       	mov	r25, r1
    315e:	11 24       	eor	r1, r1
    3160:	96 95       	lsr	r25
    3162:	96 95       	lsr	r25
    3164:	96 95       	lsr	r25
    3166:	9d 87       	std	Y+13, r25	; 0x0d
		buffer[13]=rtc.Jahr%10;
    3168:	99 0f       	add	r25, r25
    316a:	29 2f       	mov	r18, r25
    316c:	22 0f       	add	r18, r18
    316e:	22 0f       	add	r18, r18
    3170:	92 0f       	add	r25, r18
    3172:	89 1b       	sub	r24, r25
    3174:	8e 87       	std	Y+14, r24	; 0x0e
    3176:	3b 2c       	mov	r3, r11
    3178:	01 e0       	ldi	r16, 0x01	; 1
    317a:	1b 2d       	mov	r17, r11
    317c:	04 c0       	rjmp	.+8      	; 0x3186 <_Z13uhreinstellenv+0x1a2>
    317e:	1f 5f       	subi	r17, 0xFF	; 255
    3180:	0f 5f       	subi	r16, 0xFF	; 255
    3182:	f0 e1       	ldi	r31, 0x10	; 16
    3184:	3f 0e       	add	r3, r31
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
			if(i!=2){
    3186:	12 30       	cpi	r17, 0x02	; 2
    3188:	69 f0       	breq	.+26     	; 0x31a4 <_Z13uhreinstellenv+0x1c0>
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
    318a:	20 e1       	ldi	r18, 0x10	; 16
    318c:	43 2d       	mov	r20, r3
    318e:	f7 01       	movw	r30, r14
    3190:	e1 0f       	add	r30, r17
    3192:	f1 1d       	adc	r31, r1
    3194:	60 81       	ld	r22, Z
    3196:	82 e7       	ldi	r24, 0x72	; 114
    3198:	93 e0       	ldi	r25, 0x03	; 3
    319a:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    319e:	05 30       	cpi	r16, 0x05	; 5
    31a0:	70 f3       	brcs	.-36     	; 0x317e <_Z13uhreinstellenv+0x19a>
    31a2:	08 c0       	rjmp	.+16     	; 0x31b4 <_Z13uhreinstellenv+0x1d0>
			if(i!=2){
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
    31a4:	24 e1       	ldi	r18, 0x14	; 20
    31a6:	48 e2       	ldi	r20, 0x28	; 40
    31a8:	6b 81       	ldd	r22, Y+3	; 0x03
    31aa:	82 e7       	ldi	r24, 0x72	; 114
    31ac:	93 e0       	ldi	r25, 0x03	; 3
    31ae:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    31b2:	e5 cf       	rjmp	.-54     	; 0x317e <_Z13uhreinstellenv+0x19a>
    31b4:	8e 01       	movw	r16, r28
    31b6:	09 5f       	subi	r16, 0xF9	; 249
    31b8:	1f 4f       	sbci	r17, 0xFF	; 255
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    31ba:	2b 2c       	mov	r2, r11
    31bc:	0f 2e       	mov	r0, r31
    31be:	f6 e0       	ldi	r31, 0x06	; 6
    31c0:	3f 2e       	mov	r3, r31
    31c2:	f0 2d       	mov	r31, r0
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
			if(i!=8 && i!=11){
    31c4:	88 e0       	ldi	r24, 0x08	; 8
    31c6:	38 16       	cp	r3, r24
    31c8:	61 f0       	breq	.+24     	; 0x31e2 <_Z13uhreinstellenv+0x1fe>
    31ca:	9b e0       	ldi	r25, 0x0B	; 11
    31cc:	39 16       	cp	r3, r25
    31ce:	49 f0       	breq	.+18     	; 0x31e2 <_Z13uhreinstellenv+0x1fe>
				oled.draw_number16x16(buffer[i],i*numbersmalsize-6*numbersmalsize,4*charhighte);
    31d0:	20 e2       	ldi	r18, 0x20	; 32
    31d2:	42 2d       	mov	r20, r2
    31d4:	f8 01       	movw	r30, r16
    31d6:	60 81       	ld	r22, Z
    31d8:	82 e7       	ldi	r24, 0x72	; 114
    31da:	93 e0       	ldi	r25, 0x03	; 3
    31dc:	0e 94 a6 06 	call	0xd4c	; 0xd4c <_ZN7Display16draw_number16x16Ehhh>
    31e0:	09 c0       	rjmp	.+18     	; 0x31f4 <_Z13uhreinstellenv+0x210>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
    31e2:	28 e2       	ldi	r18, 0x28	; 40
    31e4:	48 e0       	ldi	r20, 0x08	; 8
    31e6:	42 0d       	add	r20, r2
    31e8:	f8 01       	movw	r30, r16
    31ea:	60 81       	ld	r22, Z
    31ec:	82 e7       	ldi	r24, 0x72	; 114
    31ee:	93 e0       	ldi	r25, 0x03	; 3
    31f0:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
    31f4:	33 94       	inc	r3
    31f6:	0f 5f       	subi	r16, 0xFF	; 255
    31f8:	1f 4f       	sbci	r17, 0xFF	; 255
    31fa:	f0 e1       	ldi	r31, 0x10	; 16
    31fc:	2f 0e       	add	r2, r31
    31fe:	8e e0       	ldi	r24, 0x0E	; 14
    3200:	38 12       	cpse	r3, r24
    3202:	e0 cf       	rjmp	.-64     	; 0x31c4 <_Z13uhreinstellenv+0x1e0>
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
			}
		}

		oled.sendFrame();
    3204:	82 e7       	ldi	r24, 0x72	; 114
    3206:	93 e0       	ldi	r25, 0x03	; 3
    3208:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN7Display9sendFrameEv>
		oled.clearFrame();
    320c:	82 e7       	ldi	r24, 0x72	; 114
    320e:	93 e0       	ldi	r25, 0x03	; 3
    3210:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
		switch (pos) {
    3214:	89 2d       	mov	r24, r9
    3216:	90 e0       	ldi	r25, 0x00	; 0
    3218:	8a 30       	cpi	r24, 0x0A	; 10
    321a:	91 05       	cpc	r25, r1
    321c:	08 f0       	brcs	.+2      	; 0x3220 <_Z13uhreinstellenv+0x23c>
    321e:	47 c2       	rjmp	.+1166   	; 0x36ae <_Z13uhreinstellenv+0x6ca>
    3220:	fc 01       	movw	r30, r24
    3222:	ea 5b       	subi	r30, 0xBA	; 186
    3224:	ff 4f       	sbci	r31, 0xFF	; 255
    3226:	0c 94 03 35 	jmp	0x6a06	; 0x6a06 <__tablejump2__>
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    322a:	86 e6       	ldi	r24, 0x66	; 102
    322c:	93 e0       	ldi	r25, 0x03	; 3
    322e:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <_ZN9Interface17ZahlenausTastaturEv>
    3232:	88 0f       	add	r24, r24
    3234:	98 2f       	mov	r25, r24
    3236:	99 0f       	add	r25, r25
    3238:	99 0f       	add	r25, r25
    323a:	89 0f       	add	r24, r25
				if(rtc.Stunden>=24){
    323c:	88 31       	cpi	r24, 0x18	; 24
    323e:	08 f4       	brcc	.+2      	; 0x3242 <_Z13uhreinstellenv+0x25e>
    3240:	6f c2       	rjmp	.+1246   	; 0x3720 <_Z13uhreinstellenv+0x73c>
					rtc.Stunden=0;
    3242:	e3 e8       	ldi	r30, 0x83	; 131
    3244:	f7 e0       	ldi	r31, 0x07	; 7
    3246:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    3248:	e1 ee       	ldi	r30, 0xE1	; 225
    324a:	f2 e0       	ldi	r31, 0x02	; 2
    324c:	a7 2d       	mov	r26, r7
    324e:	b8 2d       	mov	r27, r8
    3250:	86 2d       	mov	r24, r6
    3252:	01 90       	ld	r0, Z+
    3254:	0d 92       	st	X+, r0
    3256:	8a 95       	dec	r24
    3258:	e1 f7       	brne	.-8      	; 0x3252 <_Z13uhreinstellenv+0x26e>
    325a:	2d 88       	ldd	r2, Y+21	; 0x15
    325c:	3e 88       	ldd	r3, Y+22	; 0x16
    325e:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3260:	f1 01       	movw	r30, r2
    3262:	61 91       	ld	r22, Z+
    3264:	1f 01       	movw	r2, r30
    3266:	28 e3       	ldi	r18, 0x38	; 56
    3268:	41 2f       	mov	r20, r17
    326a:	82 e7       	ldi	r24, 0x72	; 114
    326c:	93 e0       	ldi	r25, 0x03	; 3
    326e:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    3272:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3274:	14 35       	cpi	r17, 0x54	; 84
    3276:	a1 f7       	brne	.-24     	; 0x3260 <_Z13uhreinstellenv+0x27c>
    3278:	57 c2       	rjmp	.+1198   	; 0x3728 <_Z13uhreinstellenv+0x744>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    327a:	86 e6       	ldi	r24, 0x66	; 102
    327c:	93 e0       	ldi	r25, 0x03	; 3
    327e:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <_ZN9Interface17ZahlenausTastaturEv>
    3282:	e3 e8       	ldi	r30, 0x83	; 131
    3284:	f7 e0       	ldi	r31, 0x07	; 7
    3286:	20 81       	ld	r18, Z
    3288:	90 e0       	ldi	r25, 0x00	; 0
    328a:	82 0f       	add	r24, r18
    328c:	91 1d       	adc	r25, r1
				if(rtc.Stunden>=24){
    328e:	88 31       	cpi	r24, 0x18	; 24
    3290:	10 f4       	brcc	.+4      	; 0x3296 <_Z13uhreinstellenv+0x2b2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    3292:	80 83       	st	Z, r24
    3294:	7c c2       	rjmp	.+1272   	; 0x378e <_Z13uhreinstellenv+0x7aa>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
    3296:	e3 e8       	ldi	r30, 0x83	; 131
    3298:	f7 e0       	ldi	r31, 0x07	; 7
    329a:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    329c:	e1 ee       	ldi	r30, 0xE1	; 225
    329e:	f2 e0       	ldi	r31, 0x02	; 2
    32a0:	a7 2d       	mov	r26, r7
    32a2:	b8 2d       	mov	r27, r8
    32a4:	86 2d       	mov	r24, r6
    32a6:	01 90       	ld	r0, Z+
    32a8:	0d 92       	st	X+, r0
    32aa:	8a 95       	dec	r24
    32ac:	e1 f7       	brne	.-8      	; 0x32a6 <_Z13uhreinstellenv+0x2c2>
    32ae:	2d 88       	ldd	r2, Y+21	; 0x15
    32b0:	3e 88       	ldd	r3, Y+22	; 0x16
    32b2:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    32b4:	f1 01       	movw	r30, r2
    32b6:	61 91       	ld	r22, Z+
    32b8:	1f 01       	movw	r2, r30
    32ba:	28 e3       	ldi	r18, 0x38	; 56
    32bc:	41 2f       	mov	r20, r17
    32be:	82 e7       	ldi	r24, 0x72	; 114
    32c0:	93 e0       	ldi	r25, 0x03	; 3
    32c2:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    32c6:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    32c8:	14 35       	cpi	r17, 0x54	; 84
    32ca:	a1 f7       	brne	.-24     	; 0x32b4 <_Z13uhreinstellenv+0x2d0>
    32cc:	30 c2       	rjmp	.+1120   	; 0x372e <_Z13uhreinstellenv+0x74a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    32ce:	86 e6       	ldi	r24, 0x66	; 102
    32d0:	93 e0       	ldi	r25, 0x03	; 3
    32d2:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <_ZN9Interface17ZahlenausTastaturEv>
    32d6:	88 0f       	add	r24, r24
    32d8:	98 2f       	mov	r25, r24
    32da:	99 0f       	add	r25, r25
    32dc:	99 0f       	add	r25, r25
    32de:	89 0f       	add	r24, r25
				if(rtc.Minuten>=60){
    32e0:	8c 33       	cpi	r24, 0x3C	; 60
    32e2:	20 f4       	brcc	.+8      	; 0x32ec <_Z13uhreinstellenv+0x308>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    32e4:	e4 e8       	ldi	r30, 0x84	; 132
    32e6:	f7 e0       	ldi	r31, 0x07	; 7
    32e8:	80 83       	st	Z, r24
    32ea:	51 c2       	rjmp	.+1186   	; 0x378e <_Z13uhreinstellenv+0x7aa>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    32ec:	e4 e8       	ldi	r30, 0x84	; 132
    32ee:	f7 e0       	ldi	r31, 0x07	; 7
    32f0:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    32f2:	e0 ef       	ldi	r30, 0xF0	; 240
    32f4:	f2 e0       	ldi	r31, 0x02	; 2
    32f6:	a7 2d       	mov	r26, r7
    32f8:	b8 2d       	mov	r27, r8
    32fa:	86 2d       	mov	r24, r6
    32fc:	01 90       	ld	r0, Z+
    32fe:	0d 92       	st	X+, r0
    3300:	8a 95       	dec	r24
    3302:	e1 f7       	brne	.-8      	; 0x32fc <_Z13uhreinstellenv+0x318>
    3304:	2d 88       	ldd	r2, Y+21	; 0x15
    3306:	3e 88       	ldd	r3, Y+22	; 0x16
    3308:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    330a:	f1 01       	movw	r30, r2
    330c:	61 91       	ld	r22, Z+
    330e:	1f 01       	movw	r2, r30
    3310:	28 e3       	ldi	r18, 0x38	; 56
    3312:	41 2f       	mov	r20, r17
    3314:	82 e7       	ldi	r24, 0x72	; 114
    3316:	93 e0       	ldi	r25, 0x03	; 3
    3318:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    331c:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    331e:	14 35       	cpi	r17, 0x54	; 84
    3320:	a1 f7       	brne	.-24     	; 0x330a <_Z13uhreinstellenv+0x326>
    3322:	08 c2       	rjmp	.+1040   	; 0x3734 <_Z13uhreinstellenv+0x750>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    3324:	86 e6       	ldi	r24, 0x66	; 102
    3326:	93 e0       	ldi	r25, 0x03	; 3
    3328:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <_ZN9Interface17ZahlenausTastaturEv>
    332c:	e4 e8       	ldi	r30, 0x84	; 132
    332e:	f7 e0       	ldi	r31, 0x07	; 7
    3330:	20 81       	ld	r18, Z
    3332:	90 e0       	ldi	r25, 0x00	; 0
    3334:	82 0f       	add	r24, r18
    3336:	91 1d       	adc	r25, r1
				if(rtc.Minuten>=60){
    3338:	8c 33       	cpi	r24, 0x3C	; 60
    333a:	10 f4       	brcc	.+4      	; 0x3340 <_Z13uhreinstellenv+0x35c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    333c:	80 83       	st	Z, r24
    333e:	27 c2       	rjmp	.+1102   	; 0x378e <_Z13uhreinstellenv+0x7aa>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    3340:	e4 e8       	ldi	r30, 0x84	; 132
    3342:	f7 e0       	ldi	r31, 0x07	; 7
    3344:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    3346:	e0 ef       	ldi	r30, 0xF0	; 240
    3348:	f2 e0       	ldi	r31, 0x02	; 2
    334a:	a7 2d       	mov	r26, r7
    334c:	b8 2d       	mov	r27, r8
    334e:	86 2d       	mov	r24, r6
    3350:	01 90       	ld	r0, Z+
    3352:	0d 92       	st	X+, r0
    3354:	8a 95       	dec	r24
    3356:	e1 f7       	brne	.-8      	; 0x3350 <_Z13uhreinstellenv+0x36c>
    3358:	2d 88       	ldd	r2, Y+21	; 0x15
    335a:	3e 88       	ldd	r3, Y+22	; 0x16
    335c:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    335e:	f1 01       	movw	r30, r2
    3360:	61 91       	ld	r22, Z+
    3362:	1f 01       	movw	r2, r30
    3364:	28 e3       	ldi	r18, 0x38	; 56
    3366:	41 2f       	mov	r20, r17
    3368:	82 e7       	ldi	r24, 0x72	; 114
    336a:	93 e0       	ldi	r25, 0x03	; 3
    336c:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    3370:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3372:	14 35       	cpi	r17, 0x54	; 84
    3374:	a1 f7       	brne	.-24     	; 0x335e <_Z13uhreinstellenv+0x37a>
    3376:	e1 c1       	rjmp	.+962    	; 0x373a <_Z13uhreinstellenv+0x756>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    3378:	86 e6       	ldi	r24, 0x66	; 102
    337a:	93 e0       	ldi	r25, 0x03	; 3
    337c:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <_ZN9Interface17ZahlenausTastaturEv>
    3380:	88 0f       	add	r24, r24
    3382:	98 2f       	mov	r25, r24
    3384:	99 0f       	add	r25, r25
    3386:	99 0f       	add	r25, r25
    3388:	89 0f       	add	r24, r25
				if(rtc.Tag>=32){
    338a:	80 32       	cpi	r24, 0x20	; 32
    338c:	18 f4       	brcc	.+6      	; 0x3394 <_Z13uhreinstellenv+0x3b0>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    338e:	f2 01       	movw	r30, r4
    3390:	80 83       	st	Z, r24
    3392:	fd c1       	rjmp	.+1018   	; 0x378e <_Z13uhreinstellenv+0x7aa>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    3394:	f2 01       	movw	r30, r4
    3396:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    3398:	8b e0       	ldi	r24, 0x0B	; 11
    339a:	ef ef       	ldi	r30, 0xFF	; 255
    339c:	f2 e0       	ldi	r31, 0x02	; 2
    339e:	a7 2d       	mov	r26, r7
    33a0:	b8 2d       	mov	r27, r8
    33a2:	01 90       	ld	r0, Z+
    33a4:	0d 92       	st	X+, r0
    33a6:	8a 95       	dec	r24
    33a8:	e1 f7       	brne	.-8      	; 0x33a2 <_Z13uhreinstellenv+0x3be>
    33aa:	2d 88       	ldd	r2, Y+21	; 0x15
    33ac:	3e 88       	ldd	r3, Y+22	; 0x16
    33ae:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    33b0:	f1 01       	movw	r30, r2
    33b2:	61 91       	ld	r22, Z+
    33b4:	1f 01       	movw	r2, r30
    33b6:	28 e3       	ldi	r18, 0x38	; 56
    33b8:	41 2f       	mov	r20, r17
    33ba:	82 e7       	ldi	r24, 0x72	; 114
    33bc:	93 e0       	ldi	r25, 0x03	; 3
    33be:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    33c2:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    33c4:	1c 33       	cpi	r17, 0x3C	; 60
    33c6:	a1 f7       	brne	.-24     	; 0x33b0 <_Z13uhreinstellenv+0x3cc>
    33c8:	bb c1       	rjmp	.+886    	; 0x3740 <_Z13uhreinstellenv+0x75c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    33ca:	86 e6       	ldi	r24, 0x66	; 102
    33cc:	93 e0       	ldi	r25, 0x03	; 3
    33ce:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <_ZN9Interface17ZahlenausTastaturEv>
    33d2:	f2 01       	movw	r30, r4
    33d4:	20 81       	ld	r18, Z
    33d6:	90 e0       	ldi	r25, 0x00	; 0
    33d8:	82 0f       	add	r24, r18
    33da:	91 1d       	adc	r25, r1
				if(rtc.Tag>=32){
    33dc:	80 32       	cpi	r24, 0x20	; 32
    33de:	10 f4       	brcc	.+4      	; 0x33e4 <_Z13uhreinstellenv+0x400>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    33e0:	80 83       	st	Z, r24
    33e2:	d5 c1       	rjmp	.+938    	; 0x378e <_Z13uhreinstellenv+0x7aa>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    33e4:	f2 01       	movw	r30, r4
    33e6:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    33e8:	8b e0       	ldi	r24, 0x0B	; 11
    33ea:	ef ef       	ldi	r30, 0xFF	; 255
    33ec:	f2 e0       	ldi	r31, 0x02	; 2
    33ee:	a7 2d       	mov	r26, r7
    33f0:	b8 2d       	mov	r27, r8
    33f2:	01 90       	ld	r0, Z+
    33f4:	0d 92       	st	X+, r0
    33f6:	8a 95       	dec	r24
    33f8:	e1 f7       	brne	.-8      	; 0x33f2 <_Z13uhreinstellenv+0x40e>
    33fa:	2d 88       	ldd	r2, Y+21	; 0x15
    33fc:	3e 88       	ldd	r3, Y+22	; 0x16
    33fe:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3400:	f1 01       	movw	r30, r2
    3402:	61 91       	ld	r22, Z+
    3404:	1f 01       	movw	r2, r30
    3406:	28 e3       	ldi	r18, 0x38	; 56
    3408:	41 2f       	mov	r20, r17
    340a:	82 e7       	ldi	r24, 0x72	; 114
    340c:	93 e0       	ldi	r25, 0x03	; 3
    340e:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    3412:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3414:	1c 33       	cpi	r17, 0x3C	; 60
    3416:	a1 f7       	brne	.-24     	; 0x3400 <_Z13uhreinstellenv+0x41c>
    3418:	98 c1       	rjmp	.+816    	; 0x374a <_Z13uhreinstellenv+0x766>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    341a:	86 e6       	ldi	r24, 0x66	; 102
    341c:	93 e0       	ldi	r25, 0x03	; 3
    341e:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <_ZN9Interface17ZahlenausTastaturEv>
    3422:	88 0f       	add	r24, r24
    3424:	98 2f       	mov	r25, r24
    3426:	99 0f       	add	r25, r25
    3428:	99 0f       	add	r25, r25
    342a:	89 0f       	add	r24, r25
				if(rtc.Monat>=13){
    342c:	8d 30       	cpi	r24, 0x0D	; 13
    342e:	18 f4       	brcc	.+6      	; 0x3436 <_Z13uhreinstellenv+0x452>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    3430:	f6 01       	movw	r30, r12
    3432:	80 83       	st	Z, r24
    3434:	ac c1       	rjmp	.+856    	; 0x378e <_Z13uhreinstellenv+0x7aa>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    3436:	f6 01       	movw	r30, r12
    3438:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    343a:	8d e0       	ldi	r24, 0x0D	; 13
    343c:	ea e0       	ldi	r30, 0x0A	; 10
    343e:	f3 e0       	ldi	r31, 0x03	; 3
    3440:	a7 2d       	mov	r26, r7
    3442:	b8 2d       	mov	r27, r8
    3444:	01 90       	ld	r0, Z+
    3446:	0d 92       	st	X+, r0
    3448:	8a 95       	dec	r24
    344a:	e1 f7       	brne	.-8      	; 0x3444 <_Z13uhreinstellenv+0x460>
    344c:	2d 88       	ldd	r2, Y+21	; 0x15
    344e:	3e 88       	ldd	r3, Y+22	; 0x16
    3450:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3452:	f1 01       	movw	r30, r2
    3454:	61 91       	ld	r22, Z+
    3456:	1f 01       	movw	r2, r30
    3458:	28 e3       	ldi	r18, 0x38	; 56
    345a:	41 2f       	mov	r20, r17
    345c:	82 e7       	ldi	r24, 0x72	; 114
    345e:	93 e0       	ldi	r25, 0x03	; 3
    3460:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    3464:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3466:	18 34       	cpi	r17, 0x48	; 72
    3468:	a1 f7       	brne	.-24     	; 0x3452 <_Z13uhreinstellenv+0x46e>
    346a:	74 c1       	rjmp	.+744    	; 0x3754 <_Z13uhreinstellenv+0x770>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    346c:	86 e6       	ldi	r24, 0x66	; 102
    346e:	93 e0       	ldi	r25, 0x03	; 3
    3470:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <_ZN9Interface17ZahlenausTastaturEv>
    3474:	f6 01       	movw	r30, r12
    3476:	20 81       	ld	r18, Z
    3478:	90 e0       	ldi	r25, 0x00	; 0
    347a:	82 0f       	add	r24, r18
    347c:	91 1d       	adc	r25, r1
				if(rtc.Monat>=13){
    347e:	8d 30       	cpi	r24, 0x0D	; 13
    3480:	10 f4       	brcc	.+4      	; 0x3486 <_Z13uhreinstellenv+0x4a2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    3482:	80 83       	st	Z, r24
    3484:	1e c0       	rjmp	.+60     	; 0x34c2 <_Z13uhreinstellenv+0x4de>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    3486:	f6 01       	movw	r30, r12
    3488:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    348a:	8d e0       	ldi	r24, 0x0D	; 13
    348c:	ea e0       	ldi	r30, 0x0A	; 10
    348e:	f3 e0       	ldi	r31, 0x03	; 3
    3490:	a7 2d       	mov	r26, r7
    3492:	b8 2d       	mov	r27, r8
    3494:	01 90       	ld	r0, Z+
    3496:	0d 92       	st	X+, r0
    3498:	8a 95       	dec	r24
    349a:	e1 f7       	brne	.-8      	; 0x3494 <_Z13uhreinstellenv+0x4b0>
    349c:	2d 88       	ldd	r2, Y+21	; 0x15
    349e:	3e 88       	ldd	r3, Y+22	; 0x16
    34a0:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    34a2:	f1 01       	movw	r30, r2
    34a4:	61 91       	ld	r22, Z+
    34a6:	1f 01       	movw	r2, r30
    34a8:	28 e3       	ldi	r18, 0x38	; 56
    34aa:	41 2f       	mov	r20, r17
    34ac:	82 e7       	ldi	r24, 0x72	; 114
    34ae:	93 e0       	ldi	r25, 0x03	; 3
    34b0:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    34b4:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    34b6:	18 34       	cpi	r17, 0x48	; 72
    34b8:	a1 f7       	brne	.-24     	; 0x34a2 <_Z13uhreinstellenv+0x4be>
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    34ba:	0f 2e       	mov	r0, r31
    34bc:	f5 e0       	ldi	r31, 0x05	; 5
    34be:	9f 2e       	mov	r9, r31
    34c0:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
    34c2:	f6 01       	movw	r30, r12
    34c4:	90 81       	ld	r25, Z
    34c6:	89 2f       	mov	r24, r25
    34c8:	8d 7f       	andi	r24, 0xFD	; 253
    34ca:	84 30       	cpi	r24, 0x04	; 4
    34cc:	11 f0       	breq	.+4      	; 0x34d2 <_Z13uhreinstellenv+0x4ee>
    34ce:	89 30       	cpi	r24, 0x09	; 9
    34d0:	09 f5       	brne	.+66     	; 0x3514 <_Z13uhreinstellenv+0x530>
					if(rtc.Tag>=31){
    34d2:	f2 01       	movw	r30, r4
    34d4:	80 81       	ld	r24, Z
    34d6:	8f 31       	cpi	r24, 0x1F	; 31
    34d8:	08 f4       	brcc	.+2      	; 0x34dc <_Z13uhreinstellenv+0x4f8>
    34da:	ea c0       	rjmp	.+468    	; 0x36b0 <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    34dc:	10 82       	st	Z, r1
						rtc.Monat=0;
    34de:	f6 01       	movw	r30, r12
    34e0:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    34e2:	8b e0       	ldi	r24, 0x0B	; 11
    34e4:	ef ef       	ldi	r30, 0xFF	; 255
    34e6:	f2 e0       	ldi	r31, 0x02	; 2
    34e8:	a7 2d       	mov	r26, r7
    34ea:	b8 2d       	mov	r27, r8
    34ec:	01 90       	ld	r0, Z+
    34ee:	0d 92       	st	X+, r0
    34f0:	8a 95       	dec	r24
    34f2:	e1 f7       	brne	.-8      	; 0x34ec <_Z13uhreinstellenv+0x508>
    34f4:	2d 88       	ldd	r2, Y+21	; 0x15
    34f6:	3e 88       	ldd	r3, Y+22	; 0x16
    34f8:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    34fa:	f1 01       	movw	r30, r2
    34fc:	61 91       	ld	r22, Z+
    34fe:	1f 01       	movw	r2, r30
    3500:	28 e3       	ldi	r18, 0x38	; 56
    3502:	41 2f       	mov	r20, r17
    3504:	82 e7       	ldi	r24, 0x72	; 114
    3506:	93 e0       	ldi	r25, 0x03	; 3
    3508:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    350c:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    350e:	1c 33       	cpi	r17, 0x3C	; 60
    3510:	a1 f7       	brne	.-24     	; 0x34fa <_Z13uhreinstellenv+0x516>
    3512:	25 c1       	rjmp	.+586    	; 0x375e <_Z13uhreinstellenv+0x77a>
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
						}
					}
				}
				else if(rtc.Monat==2){
    3514:	92 30       	cpi	r25, 0x02	; 2
    3516:	09 f0       	breq	.+2      	; 0x351a <_Z13uhreinstellenv+0x536>
    3518:	cb c0       	rjmp	.+406    	; 0x36b0 <_Z13uhreinstellenv+0x6cc>
					if(rtc.Tag>=30){
    351a:	f2 01       	movw	r30, r4
    351c:	80 81       	ld	r24, Z
    351e:	8e 31       	cpi	r24, 0x1E	; 30
    3520:	08 f4       	brcc	.+2      	; 0x3524 <_Z13uhreinstellenv+0x540>
    3522:	c6 c0       	rjmp	.+396    	; 0x36b0 <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    3524:	10 82       	st	Z, r1
						rtc.Monat=0;
    3526:	f6 01       	movw	r30, r12
    3528:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    352a:	8b e0       	ldi	r24, 0x0B	; 11
    352c:	ef ef       	ldi	r30, 0xFF	; 255
    352e:	f2 e0       	ldi	r31, 0x02	; 2
    3530:	a7 2d       	mov	r26, r7
    3532:	b8 2d       	mov	r27, r8
    3534:	01 90       	ld	r0, Z+
    3536:	0d 92       	st	X+, r0
    3538:	8a 95       	dec	r24
    353a:	e1 f7       	brne	.-8      	; 0x3534 <_Z13uhreinstellenv+0x550>
    353c:	2d 88       	ldd	r2, Y+21	; 0x15
    353e:	3e 88       	ldd	r3, Y+22	; 0x16
    3540:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3542:	f1 01       	movw	r30, r2
    3544:	61 91       	ld	r22, Z+
    3546:	1f 01       	movw	r2, r30
    3548:	28 e3       	ldi	r18, 0x38	; 56
    354a:	41 2f       	mov	r20, r17
    354c:	82 e7       	ldi	r24, 0x72	; 114
    354e:	93 e0       	ldi	r25, 0x03	; 3
    3550:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    3554:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    3556:	1c 33       	cpi	r17, 0x3C	; 60
    3558:	a1 f7       	brne	.-24     	; 0x3542 <_Z13uhreinstellenv+0x55e>
    355a:	06 c1       	rjmp	.+524    	; 0x3768 <_Z13uhreinstellenv+0x784>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    355c:	86 e6       	ldi	r24, 0x66	; 102
    355e:	93 e0       	ldi	r25, 0x03	; 3
    3560:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <_ZN9Interface17ZahlenausTastaturEv>
    3564:	88 0f       	add	r24, r24
    3566:	98 2f       	mov	r25, r24
    3568:	99 0f       	add	r25, r25
    356a:	99 0f       	add	r25, r25
    356c:	89 0f       	add	r24, r25
				if(rtc.Jahr>=50){
    356e:	82 33       	cpi	r24, 0x32	; 50
    3570:	20 f4       	brcc	.+8      	; 0x357a <_Z13uhreinstellenv+0x596>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    3572:	ea e8       	ldi	r30, 0x8A	; 138
    3574:	f7 e0       	ldi	r31, 0x07	; 7
    3576:	80 83       	st	Z, r24
    3578:	0a c1       	rjmp	.+532    	; 0x378e <_Z13uhreinstellenv+0x7aa>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    357a:	ea e8       	ldi	r30, 0x8A	; 138
    357c:	f7 e0       	ldi	r31, 0x07	; 7
    357e:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    3580:	8c e0       	ldi	r24, 0x0C	; 12
    3582:	e7 e1       	ldi	r30, 0x17	; 23
    3584:	f3 e0       	ldi	r31, 0x03	; 3
    3586:	a7 2d       	mov	r26, r7
    3588:	b8 2d       	mov	r27, r8
    358a:	01 90       	ld	r0, Z+
    358c:	0d 92       	st	X+, r0
    358e:	8a 95       	dec	r24
    3590:	e1 f7       	brne	.-8      	; 0x358a <_Z13uhreinstellenv+0x5a6>
    3592:	2d 88       	ldd	r2, Y+21	; 0x15
    3594:	3e 88       	ldd	r3, Y+22	; 0x16
    3596:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3598:	f1 01       	movw	r30, r2
    359a:	61 91       	ld	r22, Z+
    359c:	1f 01       	movw	r2, r30
    359e:	28 e3       	ldi	r18, 0x38	; 56
    35a0:	41 2f       	mov	r20, r17
    35a2:	82 e7       	ldi	r24, 0x72	; 114
    35a4:	93 e0       	ldi	r25, 0x03	; 3
    35a6:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    35aa:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    35ac:	12 34       	cpi	r17, 0x42	; 66
    35ae:	a1 f7       	brne	.-24     	; 0x3598 <_Z13uhreinstellenv+0x5b4>
    35b0:	e0 c0       	rjmp	.+448    	; 0x3772 <_Z13uhreinstellenv+0x78e>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    35b2:	86 e6       	ldi	r24, 0x66	; 102
    35b4:	93 e0       	ldi	r25, 0x03	; 3
    35b6:	0e 94 0b 26 	call	0x4c16	; 0x4c16 <_ZN9Interface17ZahlenausTastaturEv>
    35ba:	ea e8       	ldi	r30, 0x8A	; 138
    35bc:	f7 e0       	ldi	r31, 0x07	; 7
    35be:	20 81       	ld	r18, Z
    35c0:	90 e0       	ldi	r25, 0x00	; 0
    35c2:	82 0f       	add	r24, r18
    35c4:	91 1d       	adc	r25, r1
				if(rtc.Jahr>=50){
    35c6:	82 33       	cpi	r24, 0x32	; 50
    35c8:	10 f4       	brcc	.+4      	; 0x35ce <_Z13uhreinstellenv+0x5ea>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    35ca:	80 83       	st	Z, r24
    35cc:	1f c0       	rjmp	.+62     	; 0x360c <_Z13uhreinstellenv+0x628>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    35ce:	ea e8       	ldi	r30, 0x8A	; 138
    35d0:	f7 e0       	ldi	r31, 0x07	; 7
    35d2:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    35d4:	8c e0       	ldi	r24, 0x0C	; 12
    35d6:	e7 e1       	ldi	r30, 0x17	; 23
    35d8:	f3 e0       	ldi	r31, 0x03	; 3
    35da:	a7 2d       	mov	r26, r7
    35dc:	b8 2d       	mov	r27, r8
    35de:	01 90       	ld	r0, Z+
    35e0:	0d 92       	st	X+, r0
    35e2:	8a 95       	dec	r24
    35e4:	e1 f7       	brne	.-8      	; 0x35de <_Z13uhreinstellenv+0x5fa>
    35e6:	2d 88       	ldd	r2, Y+21	; 0x15
    35e8:	3e 88       	ldd	r3, Y+22	; 0x16
    35ea:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    35ec:	f1 01       	movw	r30, r2
    35ee:	61 91       	ld	r22, Z+
    35f0:	1f 01       	movw	r2, r30
    35f2:	28 e3       	ldi	r18, 0x38	; 56
    35f4:	41 2f       	mov	r20, r17
    35f6:	82 e7       	ldi	r24, 0x72	; 114
    35f8:	93 e0       	ldi	r25, 0x03	; 3
    35fa:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    35fe:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3600:	12 34       	cpi	r17, 0x42	; 66
    3602:	a1 f7       	brne	.-24     	; 0x35ec <_Z13uhreinstellenv+0x608>
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    3604:	0f 2e       	mov	r0, r31
    3606:	f7 e0       	ldi	r31, 0x07	; 7
    3608:	9f 2e       	mov	r9, r31
    360a:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==2){
    360c:	f6 01       	movw	r30, r12
    360e:	80 81       	ld	r24, Z
    3610:	82 30       	cpi	r24, 0x02	; 2
    3612:	09 f0       	breq	.+2      	; 0x3616 <_Z13uhreinstellenv+0x632>
    3614:	4d c0       	rjmp	.+154    	; 0x36b0 <_Z13uhreinstellenv+0x6cc>
					if(rtc.Jahr%4==0){
    3616:	ea e8       	ldi	r30, 0x8A	; 138
    3618:	f7 e0       	ldi	r31, 0x07	; 7
    361a:	80 81       	ld	r24, Z
    361c:	83 70       	andi	r24, 0x03	; 3
    361e:	21 f5       	brne	.+72     	; 0x3668 <_Z13uhreinstellenv+0x684>
						if (rtc.Tag>=30)
    3620:	f2 01       	movw	r30, r4
    3622:	80 81       	ld	r24, Z
    3624:	8e 31       	cpi	r24, 0x1E	; 30
    3626:	08 f4       	brcc	.+2      	; 0x362a <_Z13uhreinstellenv+0x646>
    3628:	43 c0       	rjmp	.+134    	; 0x36b0 <_Z13uhreinstellenv+0x6cc>
						{
							rtc.Tag=0;
    362a:	10 82       	st	Z, r1
							rtc.Monat=0;
    362c:	f6 01       	movw	r30, r12
    362e:	10 82       	st	Z, r1
							rtc.Jahr=0;
    3630:	ea e8       	ldi	r30, 0x8A	; 138
    3632:	f7 e0       	ldi	r31, 0x07	; 7
    3634:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    3636:	8b e0       	ldi	r24, 0x0B	; 11
    3638:	ef ef       	ldi	r30, 0xFF	; 255
    363a:	f2 e0       	ldi	r31, 0x02	; 2
    363c:	a7 2d       	mov	r26, r7
    363e:	b8 2d       	mov	r27, r8
    3640:	01 90       	ld	r0, Z+
    3642:	0d 92       	st	X+, r0
    3644:	8a 95       	dec	r24
    3646:	e1 f7       	brne	.-8      	; 0x3640 <_Z13uhreinstellenv+0x65c>
    3648:	2d 88       	ldd	r2, Y+21	; 0x15
    364a:	3e 88       	ldd	r3, Y+22	; 0x16
    364c:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    364e:	f1 01       	movw	r30, r2
    3650:	61 91       	ld	r22, Z+
    3652:	1f 01       	movw	r2, r30
    3654:	28 e3       	ldi	r18, 0x38	; 56
    3656:	41 2f       	mov	r20, r17
    3658:	82 e7       	ldi	r24, 0x72	; 114
    365a:	93 e0       	ldi	r25, 0x03	; 3
    365c:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    3660:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    3662:	1c 33       	cpi	r17, 0x3C	; 60
    3664:	a1 f7       	brne	.-24     	; 0x364e <_Z13uhreinstellenv+0x66a>
    3666:	8a c0       	rjmp	.+276    	; 0x377c <_Z13uhreinstellenv+0x798>
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
							}
						}
					}
					else{
						if(rtc.Tag>=29){
    3668:	f2 01       	movw	r30, r4
    366a:	80 81       	ld	r24, Z
    366c:	8d 31       	cpi	r24, 0x1D	; 29
    366e:	00 f1       	brcs	.+64     	; 0x36b0 <_Z13uhreinstellenv+0x6cc>
							rtc.Tag=0;
    3670:	10 82       	st	Z, r1
							rtc.Monat=0;
    3672:	f6 01       	movw	r30, r12
    3674:	10 82       	st	Z, r1
							rtc.Jahr=0;
    3676:	ea e8       	ldi	r30, 0x8A	; 138
    3678:	f7 e0       	ldi	r31, 0x07	; 7
    367a:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    367c:	8b e0       	ldi	r24, 0x0B	; 11
    367e:	ef ef       	ldi	r30, 0xFF	; 255
    3680:	f2 e0       	ldi	r31, 0x02	; 2
    3682:	a7 2d       	mov	r26, r7
    3684:	b8 2d       	mov	r27, r8
    3686:	01 90       	ld	r0, Z+
    3688:	0d 92       	st	X+, r0
    368a:	8a 95       	dec	r24
    368c:	e1 f7       	brne	.-8      	; 0x3686 <_Z13uhreinstellenv+0x6a2>
    368e:	2d 88       	ldd	r2, Y+21	; 0x15
    3690:	3e 88       	ldd	r3, Y+22	; 0x16
    3692:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3694:	f1 01       	movw	r30, r2
    3696:	61 91       	ld	r22, Z+
    3698:	1f 01       	movw	r2, r30
    369a:	28 e3       	ldi	r18, 0x38	; 56
    369c:	41 2f       	mov	r20, r17
    369e:	82 e7       	ldi	r24, 0x72	; 114
    36a0:	93 e0       	ldi	r25, 0x03	; 3
    36a2:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN7Display9draw_ASCIEhhh>
    36a6:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    36a8:	1c 33       	cpi	r17, 0x3C	; 60
    36aa:	a1 f7       	brne	.-24     	; 0x3694 <_Z13uhreinstellenv+0x6b0>
    36ac:	6c c0       	rjmp	.+216    	; 0x3786 <_Z13uhreinstellenv+0x7a2>
						}
					}
				}
				break;
			default:
				pos++;
    36ae:	93 94       	inc	r9
				break;
		}
		pos++;
    36b0:	93 94       	inc	r9
	
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
    36b2:	fa e0       	ldi	r31, 0x0A	; 10
    36b4:	f9 15       	cp	r31, r9
    36b6:	08 f0       	brcs	.+2      	; 0x36ba <_Z13uhreinstellenv+0x6d6>
    36b8:	d4 cc       	rjmp	.-1624   	; 0x3062 <_Z13uhreinstellenv+0x7e>
				break;
		}
		pos++;
	}
	
	rtc.Sekunden		= 0;
    36ba:	10 92 85 07 	sts	0x0785, r1
	rtc.HundSekunden	= 0;
    36be:	10 92 86 07 	sts	0x0786, r1
	//speichern der neuen Zeit im EEPROM
	EEPROM_Write(EEMINUTEN,rtc.Minuten);
    36c2:	60 91 84 07 	lds	r22, 0x0784
    36c6:	80 e0       	ldi	r24, 0x00	; 0
    36c8:	90 e0       	ldi	r25, 0x00	; 0
    36ca:	0e 94 18 0a 	call	0x1430	; 0x1430 <_Z12EEPROM_Writejh>
	EEPROM_Write(EESTUNDEN,rtc.Stunden);
    36ce:	60 91 83 07 	lds	r22, 0x0783
    36d2:	81 e0       	ldi	r24, 0x01	; 1
    36d4:	90 e0       	ldi	r25, 0x00	; 0
    36d6:	0e 94 18 0a 	call	0x1430	; 0x1430 <_Z12EEPROM_Writejh>
	EEPROM_Write(EETAGE,rtc.Tag);
    36da:	60 91 87 07 	lds	r22, 0x0787
    36de:	82 e0       	ldi	r24, 0x02	; 2
    36e0:	90 e0       	ldi	r25, 0x00	; 0
    36e2:	0e 94 18 0a 	call	0x1430	; 0x1430 <_Z12EEPROM_Writejh>
	EEPROM_Write(EEMONAT,rtc.Monat);
    36e6:	60 91 89 07 	lds	r22, 0x0789
    36ea:	83 e0       	ldi	r24, 0x03	; 3
    36ec:	90 e0       	ldi	r25, 0x00	; 0
    36ee:	0e 94 18 0a 	call	0x1430	; 0x1430 <_Z12EEPROM_Writejh>
	EEPROM_Write(EEJAHR,rtc.Jahr);
    36f2:	60 91 8a 07 	lds	r22, 0x078A
    36f6:	84 e0       	ldi	r24, 0x04	; 4
    36f8:	90 e0       	ldi	r25, 0x00	; 0
    36fa:	0e 94 18 0a 	call	0x1430	; 0x1430 <_Z12EEPROM_Writejh>
	
	oled.clearFrame();
    36fe:	82 e7       	ldi	r24, 0x72	; 114
    3700:	93 e0       	ldi	r25, 0x03	; 3
    3702:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	rtc.ausgabedatumneu();
    3706:	83 e7       	ldi	r24, 0x73	; 115
    3708:	97 e0       	ldi	r25, 0x07	; 7
    370a:	0e 94 a3 2c 	call	0x5946	; 0x5946 <_ZN3RTC15ausgabedatumneuEv>
	rtc.ausgabezeitneu();
    370e:	83 e7       	ldi	r24, 0x73	; 115
    3710:	97 e0       	ldi	r25, 0x07	; 7
    3712:	0e 94 6a 2c 	call	0x58d4	; 0x58d4 <_ZN3RTC14ausgabezeitneuEv>
	rtc.RTCstart();
    3716:	83 e7       	ldi	r24, 0x73	; 115
    3718:	97 e0       	ldi	r25, 0x07	; 7
    371a:	0e 94 83 2d 	call	0x5b06	; 0x5b06 <_ZN3RTC8RTCstartEv>
    371e:	39 c0       	rjmp	.+114    	; 0x3792 <_Z13uhreinstellenv+0x7ae>

		oled.sendFrame();
		oled.clearFrame();
		switch (pos) {
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    3720:	e3 e8       	ldi	r30, 0x83	; 131
    3722:	f7 e0       	ldi	r31, 0x07	; 7
    3724:	80 83       	st	Z, r24
    3726:	33 c0       	rjmp	.+102    	; 0x378e <_Z13uhreinstellenv+0x7aa>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    3728:	99 24       	eor	r9, r9
    372a:	9a 94       	dec	r9
    372c:	30 c0       	rjmp	.+96     	; 0x378e <_Z13uhreinstellenv+0x7aa>
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    372e:	99 24       	eor	r9, r9
    3730:	9a 94       	dec	r9
    3732:	2d c0       	rjmp	.+90     	; 0x378e <_Z13uhreinstellenv+0x7aa>
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    3734:	99 24       	eor	r9, r9
    3736:	93 94       	inc	r9
    3738:	2a c0       	rjmp	.+84     	; 0x378e <_Z13uhreinstellenv+0x7aa>
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    373a:	99 24       	eor	r9, r9
    373c:	93 94       	inc	r9
    373e:	27 c0       	rjmp	.+78     	; 0x378e <_Z13uhreinstellenv+0x7aa>
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    3740:	0f 2e       	mov	r0, r31
    3742:	f3 e0       	ldi	r31, 0x03	; 3
    3744:	9f 2e       	mov	r9, r31
    3746:	f0 2d       	mov	r31, r0
    3748:	22 c0       	rjmp	.+68     	; 0x378e <_Z13uhreinstellenv+0x7aa>
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    374a:	0f 2e       	mov	r0, r31
    374c:	f3 e0       	ldi	r31, 0x03	; 3
    374e:	9f 2e       	mov	r9, r31
    3750:	f0 2d       	mov	r31, r0
    3752:	1d c0       	rjmp	.+58     	; 0x378e <_Z13uhreinstellenv+0x7aa>
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    3754:	0f 2e       	mov	r0, r31
    3756:	f5 e0       	ldi	r31, 0x05	; 5
    3758:	9f 2e       	mov	r9, r31
    375a:	f0 2d       	mov	r31, r0
    375c:	18 c0       	rjmp	.+48     	; 0x378e <_Z13uhreinstellenv+0x7aa>
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    375e:	0f 2e       	mov	r0, r31
    3760:	f3 e0       	ldi	r31, 0x03	; 3
    3762:	9f 2e       	mov	r9, r31
    3764:	f0 2d       	mov	r31, r0
    3766:	13 c0       	rjmp	.+38     	; 0x378e <_Z13uhreinstellenv+0x7aa>
				}
				else if(rtc.Monat==2){
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    3768:	0f 2e       	mov	r0, r31
    376a:	f3 e0       	ldi	r31, 0x03	; 3
    376c:	9f 2e       	mov	r9, r31
    376e:	f0 2d       	mov	r31, r0
    3770:	0e c0       	rjmp	.+28     	; 0x378e <_Z13uhreinstellenv+0x7aa>
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    3772:	0f 2e       	mov	r0, r31
    3774:	f7 e0       	ldi	r31, 0x07	; 7
    3776:	9f 2e       	mov	r9, r31
    3778:	f0 2d       	mov	r31, r0
    377a:	09 c0       	rjmp	.+18     	; 0x378e <_Z13uhreinstellenv+0x7aa>
						if (rtc.Tag>=30)
						{
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    377c:	0f 2e       	mov	r0, r31
    377e:	f3 e0       	ldi	r31, 0x03	; 3
    3780:	9f 2e       	mov	r9, r31
    3782:	f0 2d       	mov	r31, r0
    3784:	04 c0       	rjmp	.+8      	; 0x378e <_Z13uhreinstellenv+0x7aa>
					else{
						if(rtc.Tag>=29){
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    3786:	0f 2e       	mov	r0, r31
    3788:	f3 e0       	ldi	r31, 0x03	; 3
    378a:	9f 2e       	mov	r9, r31
    378c:	f0 2d       	mov	r31, r0
				break;
			default:
				pos++;
				break;
		}
		pos++;
    378e:	93 94       	inc	r9
    3790:	68 cc       	rjmp	.-1840   	; 0x3062 <_Z13uhreinstellenv+0x7e>
	
	oled.clearFrame();
	rtc.ausgabedatumneu();
	rtc.ausgabezeitneu();
	rtc.RTCstart();
}
    3792:	66 96       	adiw	r28, 0x16	; 22
    3794:	0f b6       	in	r0, 0x3f	; 63
    3796:	f8 94       	cli
    3798:	de bf       	out	0x3e, r29	; 62
    379a:	0f be       	out	0x3f, r0	; 63
    379c:	cd bf       	out	0x3d, r28	; 61
    379e:	df 91       	pop	r29
    37a0:	cf 91       	pop	r28
    37a2:	1f 91       	pop	r17
    37a4:	0f 91       	pop	r16
    37a6:	ff 90       	pop	r15
    37a8:	ef 90       	pop	r14
    37aa:	df 90       	pop	r13
    37ac:	cf 90       	pop	r12
    37ae:	bf 90       	pop	r11
    37b0:	af 90       	pop	r10
    37b2:	9f 90       	pop	r9
    37b4:	8f 90       	pop	r8
    37b6:	7f 90       	pop	r7
    37b8:	6f 90       	pop	r6
    37ba:	5f 90       	pop	r5
    37bc:	4f 90       	pop	r4
    37be:	3f 90       	pop	r3
    37c0:	2f 90       	pop	r2
    37c2:	08 95       	ret

000037c4 <__vector_11>:
#include "EEPROM.h"
//Ausgelagerte Sammlung der einzelnen Seitenlayouts
uint8_t FPS;
#include "Seiten.h"

ISR(TIMER2_OVF_vect){	//Vektor fuer die RTC
    37c4:	1f 92       	push	r1
    37c6:	0f 92       	push	r0
    37c8:	0f b6       	in	r0, 0x3f	; 63
    37ca:	0f 92       	push	r0
    37cc:	11 24       	eor	r1, r1
    37ce:	0b b6       	in	r0, 0x3b	; 59
    37d0:	0f 92       	push	r0
    37d2:	8f 93       	push	r24
    37d4:	ef 93       	push	r30
    37d6:	ff 93       	push	r31
	//TCNT2=TIMER2RTCTIME;
	rtc.Sekunden++;
    37d8:	e5 e8       	ldi	r30, 0x85	; 133
    37da:	f7 e0       	ldi	r31, 0x07	; 7
    37dc:	80 81       	ld	r24, Z
    37de:	8f 5f       	subi	r24, 0xFF	; 255
    37e0:	80 83       	st	Z, r24
	rtc.interupts|= (1<<sekundeninterupt);
    37e2:	eb e8       	ldi	r30, 0x8B	; 139
    37e4:	f7 e0       	ldi	r31, 0x07	; 7
    37e6:	80 81       	ld	r24, Z
    37e8:	82 60       	ori	r24, 0x02	; 2
    37ea:	80 83       	st	Z, r24
}
    37ec:	ff 91       	pop	r31
    37ee:	ef 91       	pop	r30
    37f0:	8f 91       	pop	r24
    37f2:	0f 90       	pop	r0
    37f4:	0b be       	out	0x3b, r0	; 59
    37f6:	0f 90       	pop	r0
    37f8:	0f be       	out	0x3f, r0	; 63
    37fa:	0f 90       	pop	r0
    37fc:	1f 90       	pop	r1
    37fe:	18 95       	reti

00003800 <__vector_13>:

ISR(TIMER1_COMPA_vect){
    3800:	1f 92       	push	r1
    3802:	0f 92       	push	r0
    3804:	0f b6       	in	r0, 0x3f	; 63
    3806:	0f 92       	push	r0
    3808:	11 24       	eor	r1, r1
    380a:	8f 93       	push	r24
	statusreg |= (1<<updaterate);
    380c:	80 91 36 03 	lds	r24, 0x0336
    3810:	81 60       	ori	r24, 0x01	; 1
    3812:	80 93 36 03 	sts	0x0336, r24
}
    3816:	8f 91       	pop	r24
    3818:	0f 90       	pop	r0
    381a:	0f be       	out	0x3f, r0	; 63
    381c:	0f 90       	pop	r0
    381e:	1f 90       	pop	r1
    3820:	18 95       	reti

00003822 <_Z15geschwindigkeitf>:

double geschw;
double strecke;
double maxgeschw;
uint32_t Fahrtzeit;
void geschwindigkeit(float durch){
    3822:	cf 92       	push	r12
    3824:	df 92       	push	r13
    3826:	ef 92       	push	r14
    3828:	ff 92       	push	r15
    382a:	cf 93       	push	r28
    382c:	df 93       	push	r29
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
    382e:	e4 e8       	ldi	r30, 0x84	; 132
    3830:	f0 e0       	ldi	r31, 0x00	; 0
    3832:	c0 81       	ld	r28, Z
    3834:	d1 81       	ldd	r29, Z+1	; 0x01
	TCNT1 = 0;
    3836:	11 82       	std	Z+1, r1	; 0x01
    3838:	10 82       	st	Z, r1
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
    383a:	2b ed       	ldi	r18, 0xDB	; 219
    383c:	3f e0       	ldi	r19, 0x0F	; 15
    383e:	49 e4       	ldi	r20, 0x49	; 73
    3840:	50 e4       	ldi	r21, 0x40	; 64
    3842:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    3846:	26 e6       	ldi	r18, 0x66	; 102
    3848:	36 e6       	ldi	r19, 0x66	; 102
    384a:	46 e6       	ldi	r20, 0x66	; 102
    384c:	50 e4       	ldi	r21, 0x40	; 64
    384e:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    3852:	6b 01       	movw	r12, r22
    3854:	7c 01       	movw	r14, r24
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
	TCNT1 = 0;
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
    3856:	be 01       	movw	r22, r28
    3858:	80 e0       	ldi	r24, 0x00	; 0
    385a:	90 e0       	ldi	r25, 0x00	; 0
    385c:	0e 94 4a 2f 	call	0x5e94	; 0x5e94 <__floatunsisf>
    3860:	20 e0       	ldi	r18, 0x00	; 0
    3862:	30 e0       	ldi	r19, 0x00	; 0
    3864:	40 e0       	ldi	r20, 0x00	; 0
    3866:	5e e3       	ldi	r21, 0x3E	; 62
    3868:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    386c:	2d eb       	ldi	r18, 0xBD	; 189
    386e:	37 e3       	ldi	r19, 0x37	; 55
    3870:	46 e8       	ldi	r20, 0x86	; 134
    3872:	5a e3       	ldi	r21, 0x3A	; 58
    3874:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    3878:	2a e0       	ldi	r18, 0x0A	; 10
    387a:	37 ed       	ldi	r19, 0xD7	; 215
    387c:	43 ea       	ldi	r20, 0xA3	; 163
    387e:	5b e3       	ldi	r21, 0x3B	; 59
    3880:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    3884:	9b 01       	movw	r18, r22
    3886:	ac 01       	movw	r20, r24
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
    3888:	c7 01       	movw	r24, r14
    388a:	b6 01       	movw	r22, r12
    388c:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
    3890:	20 91 30 03 	lds	r18, 0x0330
    3894:	30 91 31 03 	lds	r19, 0x0331
    3898:	40 91 32 03 	lds	r20, 0x0332
    389c:	50 91 33 03 	lds	r21, 0x0333
    38a0:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
	geschw /= 2.0;
    38a4:	20 e0       	ldi	r18, 0x00	; 0
    38a6:	30 e0       	ldi	r19, 0x00	; 0
    38a8:	40 e0       	ldi	r20, 0x00	; 0
    38aa:	5f e3       	ldi	r21, 0x3F	; 63
    38ac:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    38b0:	6b 01       	movw	r12, r22
    38b2:	7c 01       	movw	r14, r24
	if (geschw >=160)
    38b4:	20 e0       	ldi	r18, 0x00	; 0
    38b6:	30 e0       	ldi	r19, 0x00	; 0
    38b8:	40 e2       	ldi	r20, 0x20	; 32
    38ba:	53 e4       	ldi	r21, 0x43	; 67
    38bc:	0e 94 5a 30 	call	0x60b4	; 0x60b4 <__gesf2>
    38c0:	88 23       	and	r24, r24
    38c2:	4c f4       	brge	.+18     	; 0x38d6 <_Z15geschwindigkeitf+0xb4>
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
	geschw /= 2.0;
    38c4:	c0 92 30 03 	sts	0x0330, r12
    38c8:	d0 92 31 03 	sts	0x0331, r13
    38cc:	e0 92 32 03 	sts	0x0332, r14
    38d0:	f0 92 33 03 	sts	0x0333, r15
    38d4:	08 c0       	rjmp	.+16     	; 0x38e6 <_Z15geschwindigkeitf+0xc4>
	if (geschw >=160)
	{
		geschw=0;
    38d6:	10 92 30 03 	sts	0x0330, r1
    38da:	10 92 31 03 	sts	0x0331, r1
    38de:	10 92 32 03 	sts	0x0332, r1
    38e2:	10 92 33 03 	sts	0x0333, r1
	}
}
    38e6:	df 91       	pop	r29
    38e8:	cf 91       	pop	r28
    38ea:	ff 90       	pop	r15
    38ec:	ef 90       	pop	r14
    38ee:	df 90       	pop	r13
    38f0:	cf 90       	pop	r12
    38f2:	08 95       	ret

000038f4 <_Z13reed_debouncePVhh>:

uint8_t reed_debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( (*port & (1 << pin)) )
    38f4:	fc 01       	movw	r30, r24
    38f6:	20 81       	ld	r18, Z
    38f8:	30 e0       	ldi	r19, 0x00	; 0
    38fa:	06 2e       	mov	r0, r22
    38fc:	02 c0       	rjmp	.+4      	; 0x3902 <_Z13reed_debouncePVhh+0xe>
    38fe:	35 95       	asr	r19
    3900:	27 95       	ror	r18
    3902:	0a 94       	dec	r0
    3904:	e2 f7       	brpl	.-8      	; 0x38fe <_Z13reed_debouncePVhh+0xa>
    3906:	20 ff       	sbrs	r18, 0
    3908:	17 c0       	rjmp	.+46     	; 0x3938 <_Z13reed_debouncePVhh+0x44>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    390a:	ef e0       	ldi	r30, 0x0F	; 15
    390c:	f7 e2       	ldi	r31, 0x27	; 39
    390e:	31 97       	sbiw	r30, 0x01	; 1
    3910:	f1 f7       	brne	.-4      	; 0x390e <_Z13reed_debouncePVhh+0x1a>
    3912:	00 c0       	rjmp	.+0      	; 0x3914 <_Z13reed_debouncePVhh+0x20>
    3914:	00 00       	nop
	{
		/* Pin wurde auf Masse gezogen, ms warten   */
		_delay_ms(REEDMS);
		if ( !(*port & (1 << pin)) )
    3916:	fc 01       	movw	r30, r24
    3918:	80 81       	ld	r24, Z
    391a:	90 e0       	ldi	r25, 0x00	; 0
    391c:	9c 01       	movw	r18, r24
    391e:	02 c0       	rjmp	.+4      	; 0x3924 <_Z13reed_debouncePVhh+0x30>
    3920:	35 95       	asr	r19
    3922:	27 95       	ror	r18
    3924:	6a 95       	dec	r22
    3926:	e2 f7       	brpl	.-8      	; 0x3920 <_Z13reed_debouncePVhh+0x2c>
    3928:	20 fd       	sbrc	r18, 0
    392a:	08 c0       	rjmp	.+16     	; 0x393c <_Z13reed_debouncePVhh+0x48>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    392c:	32 e0       	ldi	r19, 0x02	; 2
    392e:	3a 95       	dec	r19
    3930:	f1 f7       	brne	.-4      	; 0x392e <_Z13reed_debouncePVhh+0x3a>
    3932:	00 c0       	rjmp	.+0      	; 0x3934 <_Z13reed_debouncePVhh+0x40>
		{
			/* Anwender Zeit zum Loslassen des Tasters geben */
			_delay_us(1);
			return 1;
    3934:	81 e0       	ldi	r24, 0x01	; 1
    3936:	08 95       	ret
		}
	}
	return 0;
    3938:	80 e0       	ldi	r24, 0x00	; 0
    393a:	08 95       	ret
    393c:	80 e0       	ldi	r24, 0x00	; 0
}
    393e:	08 95       	ret

00003940 <_Z9inittimerh>:
					= 166667
		=> N=64 bei OCR1A=2604-1 bei f=24
		=> CS11 und CS10
*/
void inittimer(uint8_t stat){
	TCNT1 = 0;
    3940:	10 92 85 00 	sts	0x0085, r1
    3944:	10 92 84 00 	sts	0x0084, r1
	if (stat==1)
    3948:	81 30       	cpi	r24, 0x01	; 1
    394a:	31 f4       	brne	.+12     	; 0x3958 <_Z9inittimerh+0x18>
	{
		TIMSK1 = 0;
    394c:	10 92 6f 00 	sts	0x006F, r1
		TCCR1B = ((1<<CS12) | (1<<CS10));
    3950:	85 e0       	ldi	r24, 0x05	; 5
    3952:	80 93 81 00 	sts	0x0081, r24
    3956:	08 95       	ret
	}
	else if (stat==2)
    3958:	82 30       	cpi	r24, 0x02	; 2
    395a:	61 f4       	brne	.+24     	; 0x3974 <_Z9inittimerh+0x34>
	{
		OCR1A = 2603*2;
    395c:	86 e5       	ldi	r24, 0x56	; 86
    395e:	94 e1       	ldi	r25, 0x14	; 20
    3960:	90 93 89 00 	sts	0x0089, r25
    3964:	80 93 88 00 	sts	0x0088, r24
		TCCR1B = (1<<WGM12)|(1<<CS11)|(1<<CS10);
    3968:	8b e0       	ldi	r24, 0x0B	; 11
    396a:	80 93 81 00 	sts	0x0081, r24
		TIMSK1 = (1<<OCIE1A);
    396e:	82 e0       	ldi	r24, 0x02	; 2
    3970:	80 93 6f 00 	sts	0x006F, r24
    3974:	08 95       	ret

00003976 <_Z15initialisierungv>:
    }
}

void initialisierung(){
	//nullen der Flagregister
	rtc.interupts=0;
    3976:	10 92 8b 07 	sts	0x078B, r1
	anzeige=0;
    397a:	10 92 38 03 	sts	0x0338, r1
    397e:	10 92 37 03 	sts	0x0337, r1
	statusreg=0;
    3982:	10 92 36 03 	sts	0x0336, r1
	pos=0;
    3986:	10 92 35 03 	sts	0x0335, r1
	FPS=0;
    398a:	10 92 34 03 	sts	0x0334, r1
	//initialisieren des Zaehler fuer die Winkelgeschw sowie den Timer
	geschw=0;
    398e:	10 92 30 03 	sts	0x0330, r1
    3992:	10 92 31 03 	sts	0x0331, r1
    3996:	10 92 32 03 	sts	0x0332, r1
    399a:	10 92 33 03 	sts	0x0333, r1
	strecke = 0;
    399e:	10 92 2c 03 	sts	0x032C, r1
    39a2:	10 92 2d 03 	sts	0x032D, r1
    39a6:	10 92 2e 03 	sts	0x032E, r1
    39aa:	10 92 2f 03 	sts	0x032F, r1
	maxgeschw = 0;
    39ae:	10 92 28 03 	sts	0x0328, r1
    39b2:	10 92 29 03 	sts	0x0329, r1
    39b6:	10 92 2a 03 	sts	0x032A, r1
    39ba:	10 92 2b 03 	sts	0x032B, r1
	Fahrtzeit = 0;
    39be:	10 92 24 03 	sts	0x0324, r1
    39c2:	10 92 25 03 	sts	0x0325, r1
    39c6:	10 92 26 03 	sts	0x0326, r1
    39ca:	10 92 27 03 	sts	0x0327, r1
	inittimer(0);
    39ce:	80 e0       	ldi	r24, 0x00	; 0
    39d0:	b7 df       	rcall	.-146    	; 0x3940 <_Z9inittimerh>
	//Tastatur inm Contruktor initialisiert
	//Eingang fuer den Reedkontak schalten mit internem Pullup
	DDRA |= ((1<<PORTA6));
    39d2:	0e 9a       	sbi	0x01, 6	; 1
	PORTA |= (1<<PORTA6);
    39d4:	16 9a       	sbi	0x02, 6	; 2
	//Display
	oled.InitializeDisplay();
    39d6:	82 e7       	ldi	r24, 0x72	; 114
    39d8:	93 e0       	ldi	r25, 0x03	; 3
    39da:	0e 94 2c 03 	call	0x658	; 0x658 <_ZN7Display17InitializeDisplayEv>
	//initialisierung wird im konstruktor vorgenommen
	oled.clearFrame();
    39de:	82 e7       	ldi	r24, 0x72	; 114
    39e0:	93 e0       	ldi	r25, 0x03	; 3
    39e2:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	//HMC5883L initialisieren
	//kompass.initialize_HMC5883L();
	//initialisierung wird im Konstruktor erledigt
	
	//ADC Initialisieren auf CH0
	ADMUX = (1<<REFS0);
    39e6:	80 e4       	ldi	r24, 0x40	; 64
    39e8:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
    39ec:	ea e7       	ldi	r30, 0x7A	; 122
    39ee:	f0 e0       	ldi	r31, 0x00	; 0
    39f0:	83 e0       	ldi	r24, 0x03	; 3
    39f2:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN);
    39f4:	80 81       	ld	r24, Z
    39f6:	80 68       	ori	r24, 0x80	; 128
    39f8:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
    39fa:	80 81       	ld	r24, Z
    39fc:	80 64       	ori	r24, 0x40	; 64
    39fe:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC) ) {}
    3a00:	80 81       	ld	r24, Z
    3a02:	86 fd       	sbrc	r24, 6
    3a04:	fd cf       	rjmp	.-6      	; 0x3a00 <_Z15initialisierungv+0x8a>
	(void) ADCW;
    3a06:	80 91 78 00 	lds	r24, 0x0078
    3a0a:	90 91 79 00 	lds	r25, 0x0079
	//Wilkommensanzeige
	willkommenpage();
    3a0e:	0e 94 2b 0a 	call	0x1456	; 0x1456 <_Z14willkommenpagev>
	//Uhreinstellungen
	//uhreinstellen();
	//*************************************************
	//Nur Test, damit es schneller geht beim Start
	rtc.Sekunden= 0;
    3a12:	10 92 85 07 	sts	0x0785, r1
	rtc.Minuten	= EEPROM_Read(EEMINUTEN);
    3a16:	80 e0       	ldi	r24, 0x00	; 0
    3a18:	90 e0       	ldi	r25, 0x00	; 0
    3a1a:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z11EEPROM_Readj>
    3a1e:	80 93 84 07 	sts	0x0784, r24
	rtc.Stunden	= EEPROM_Read(EESTUNDEN);
    3a22:	81 e0       	ldi	r24, 0x01	; 1
    3a24:	90 e0       	ldi	r25, 0x00	; 0
    3a26:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z11EEPROM_Readj>
    3a2a:	80 93 83 07 	sts	0x0783, r24
	rtc.Tag		= EEPROM_Read(EETAGE);
    3a2e:	82 e0       	ldi	r24, 0x02	; 2
    3a30:	90 e0       	ldi	r25, 0x00	; 0
    3a32:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z11EEPROM_Readj>
    3a36:	80 93 87 07 	sts	0x0787, r24
	rtc.Monat	= EEPROM_Read(EEMONAT);
    3a3a:	83 e0       	ldi	r24, 0x03	; 3
    3a3c:	90 e0       	ldi	r25, 0x00	; 0
    3a3e:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z11EEPROM_Readj>
    3a42:	80 93 89 07 	sts	0x0789, r24
	rtc.Jahr	= EEPROM_Read(EEJAHR);
    3a46:	84 e0       	ldi	r24, 0x04	; 4
    3a48:	90 e0       	ldi	r25, 0x00	; 0
    3a4a:	0e 94 22 0a 	call	0x1444	; 0x1444 <_Z11EEPROM_Readj>
    3a4e:	80 93 8a 07 	sts	0x078A, r24
	rtc.ausgabedatumneu();
    3a52:	83 e7       	ldi	r24, 0x73	; 115
    3a54:	97 e0       	ldi	r25, 0x07	; 7
    3a56:	0e 94 a3 2c 	call	0x5946	; 0x5946 <_ZN3RTC15ausgabedatumneuEv>
	//rtc.dummyeinst();
	//*********************************
	rtc.RTCstart();
    3a5a:	83 e7       	ldi	r24, 0x73	; 115
    3a5c:	97 e0       	ldi	r25, 0x07	; 7
    3a5e:	0e 94 83 2d 	call	0x5b06	; 0x5b06 <_ZN3RTC8RTCstartEv>
	//ausgabe starten
	rtc.interupts|=(0<<minuteninterupt)|(0<<sekundeninterupt);
	inittimer(2);
    3a62:	82 e0       	ldi	r24, 0x02	; 2
    3a64:	6d df       	rcall	.-294    	; 0x3940 <_Z9inittimerh>
	anzeige|=(1<<Uhrflag);
    3a66:	80 91 37 03 	lds	r24, 0x0337
    3a6a:	90 91 38 03 	lds	r25, 0x0338
    3a6e:	82 60       	ori	r24, 0x02	; 2
    3a70:	90 93 38 03 	sts	0x0338, r25
    3a74:	80 93 37 03 	sts	0x0337, r24
	sei();
    3a78:	78 94       	sei
    3a7a:	08 95       	ret

00003a7c <_Z19maininterupthandlerv>:
	//interupt dierekt aus der rtc
	//if((rtc.interupts & (1<<hundinterupt))){
	//rtc.zeit();
	//rtc.interupts&=~(1<<hundinterupt);
	//}
	if ((anzeige&(1<<Fahradflag)))
    3a7c:	80 91 37 03 	lds	r24, 0x0337
    3a80:	80 ff       	sbrs	r24, 0
    3a82:	1f c0       	rjmp	.+62     	; 0x3ac2 <_Z19maininterupthandlerv+0x46>
	{
		//debounce Funktion fuer den Reedswitch
		if (reed_debounce(&PINA,PINA7))
    3a84:	67 e0       	ldi	r22, 0x07	; 7
    3a86:	80 e2       	ldi	r24, 0x20	; 32
    3a88:	90 e0       	ldi	r25, 0x00	; 0
    3a8a:	34 df       	rcall	.-408    	; 0x38f4 <_Z13reed_debouncePVhh>
    3a8c:	88 23       	and	r24, r24
    3a8e:	31 f0       	breq	.+12     	; 0x3a9c <_Z19maininterupthandlerv+0x20>
		{
			//Durchmesser ist 28 Zoll
			geschwindigkeit(28.0*2.54/100.0);
    3a90:	63 e3       	ldi	r22, 0x33	; 51
    3a92:	71 e1       	ldi	r23, 0x11	; 17
    3a94:	86 e3       	ldi	r24, 0x36	; 54
    3a96:	9f e3       	ldi	r25, 0x3F	; 63
    3a98:	c4 de       	rcall	.-632    	; 0x3822 <_Z15geschwindigkeitf>
    3a9a:	13 c0       	rjmp	.+38     	; 0x3ac2 <_Z19maininterupthandlerv+0x46>
		}
		//Hier mit werden geschwindigkeiten, die kleiner als 2.6km/h betragen gefiltert
		//Somit wird die letzte Geschwindigkeit nach 3 Sekunden geloescht
		//Das ist noch nicht die beste Variante
		else if (TCNT1>23437)
    3a9c:	80 91 84 00 	lds	r24, 0x0084
    3aa0:	90 91 85 00 	lds	r25, 0x0085
    3aa4:	8e 38       	cpi	r24, 0x8E	; 142
    3aa6:	9b 45       	sbci	r25, 0x5B	; 91
    3aa8:	60 f0       	brcs	.+24     	; 0x3ac2 <_Z19maininterupthandlerv+0x46>
		{
			TCNT1=0;
    3aaa:	10 92 85 00 	sts	0x0085, r1
    3aae:	10 92 84 00 	sts	0x0084, r1
			geschw=0;
    3ab2:	10 92 30 03 	sts	0x0330, r1
    3ab6:	10 92 31 03 	sts	0x0331, r1
    3aba:	10 92 32 03 	sts	0x0332, r1
    3abe:	10 92 33 03 	sts	0x0333, r1
		}
	}
	if ((rtc.interupts&(1<<Weckeractiv)))
    3ac2:	20 91 8b 07 	lds	r18, 0x078B
    3ac6:	82 2f       	mov	r24, r18
    3ac8:	88 71       	andi	r24, 0x18	; 24
	{
		if ((rtc.interupts&(1<<Weckerein)))
    3aca:	88 31       	cpi	r24, 0x18	; 24
    3acc:	61 f4       	brne	.+24     	; 0x3ae6 <_Z19maininterupthandlerv+0x6a>
		{
			anzeige |= (1<<blinkflag) | (1<<refreshdisplay);
    3ace:	80 91 37 03 	lds	r24, 0x0337
    3ad2:	90 91 38 03 	lds	r25, 0x0338
    3ad6:	90 6c       	ori	r25, 0xC0	; 192
    3ad8:	90 93 38 03 	sts	0x0338, r25
    3adc:	80 93 37 03 	sts	0x0337, r24
			rtc.interupts &= ~(1<<Weckerein);
    3ae0:	27 7f       	andi	r18, 0xF7	; 247
    3ae2:	20 93 8b 07 	sts	0x078B, r18
    3ae6:	08 95       	ret

00003ae8 <_Z14anzeigehandlerv>:
		}
	}
}

void anzeigehandler(){
    3ae8:	4f 92       	push	r4
    3aea:	5f 92       	push	r5
    3aec:	6f 92       	push	r6
    3aee:	7f 92       	push	r7
    3af0:	af 92       	push	r10
    3af2:	bf 92       	push	r11
    3af4:	cf 92       	push	r12
    3af6:	df 92       	push	r13
    3af8:	ef 92       	push	r14
    3afa:	ff 92       	push	r15
    3afc:	0f 93       	push	r16
    3afe:	1f 93       	push	r17
    3b00:	cf 93       	push	r28
    3b02:	df 93       	push	r29
	//Handler fuer 1Hz Flag
	if ((statusreg&(1<<updaterate)))
    3b04:	80 91 36 03 	lds	r24, 0x0336
    3b08:	80 ff       	sbrs	r24, 0
    3b0a:	a0 c0       	rjmp	.+320    	; 0x3c4c <_Z14anzeigehandlerv+0x164>
	{
		FPS++;
    3b0c:	80 91 34 03 	lds	r24, 0x0334
    3b10:	8f 5f       	subi	r24, 0xFF	; 255
    3b12:	80 93 34 03 	sts	0x0334, r24
		if ((anzeige&(1<<Kompasflag)))
    3b16:	80 91 37 03 	lds	r24, 0x0337
    3b1a:	90 91 38 03 	lds	r25, 0x0338
    3b1e:	87 ff       	sbrs	r24, 7
    3b20:	24 c0       	rjmp	.+72     	; 0x3b6a <_Z14anzeigehandlerv+0x82>
		{
			Accelerometer.readacc();
    3b22:	8f e3       	ldi	r24, 0x3F	; 63
    3b24:	93 e0       	ldi	r25, 0x03	; 3
    3b26:	0e 94 51 28 	call	0x50a2	; 0x50a2 <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    3b2a:	00 91 4b 03 	lds	r16, 0x034B
    3b2e:	10 91 4c 03 	lds	r17, 0x034C
    3b32:	20 91 4d 03 	lds	r18, 0x034D
    3b36:	30 91 4e 03 	lds	r19, 0x034E
    3b3a:	40 91 47 03 	lds	r20, 0x0347
    3b3e:	50 91 48 03 	lds	r21, 0x0348
    3b42:	60 91 49 03 	lds	r22, 0x0349
    3b46:	70 91 4a 03 	lds	r23, 0x034A
    3b4a:	82 e9       	ldi	r24, 0x92	; 146
    3b4c:	97 e0       	ldi	r25, 0x07	; 7
    3b4e:	0e 94 0b 27 	call	0x4e16	; 0x4e16 <_ZN7Kompass5angleEdd>
    3b52:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    3b56:	80 91 37 03 	lds	r24, 0x0337
    3b5a:	90 91 38 03 	lds	r25, 0x0338
    3b5e:	90 68       	ori	r25, 0x80	; 128
    3b60:	90 93 38 03 	sts	0x0338, r25
    3b64:	80 93 37 03 	sts	0x0337, r24
    3b68:	6c c0       	rjmp	.+216    	; 0x3c42 <_Z14anzeigehandlerv+0x15a>
		}
		else if ((anzeige&(1<<Fahradflag)))
    3b6a:	80 ff       	sbrs	r24, 0
    3b6c:	50 c0       	rjmp	.+160    	; 0x3c0e <_Z14anzeigehandlerv+0x126>
		{
			Accelerometer.readacc();
    3b6e:	8f e3       	ldi	r24, 0x3F	; 63
    3b70:	93 e0       	ldi	r25, 0x03	; 3
    3b72:	0e 94 51 28 	call	0x50a2	; 0x50a2 <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    3b76:	e0 90 24 03 	lds	r14, 0x0324
    3b7a:	f0 90 25 03 	lds	r15, 0x0325
    3b7e:	c0 91 26 03 	lds	r28, 0x0326
    3b82:	d0 91 27 03 	lds	r29, 0x0327
    3b86:	a0 90 28 03 	lds	r10, 0x0328
    3b8a:	b0 90 29 03 	lds	r11, 0x0329
    3b8e:	c0 90 2a 03 	lds	r12, 0x032A
    3b92:	d0 90 2b 03 	lds	r13, 0x032B
    3b96:	40 90 2c 03 	lds	r4, 0x032C
    3b9a:	50 90 2d 03 	lds	r5, 0x032D
    3b9e:	60 90 2e 03 	lds	r6, 0x032E
    3ba2:	70 90 2f 03 	lds	r7, 0x032F
    3ba6:	00 91 4b 03 	lds	r16, 0x034B
    3baa:	10 91 4c 03 	lds	r17, 0x034C
    3bae:	20 91 4d 03 	lds	r18, 0x034D
    3bb2:	30 91 4e 03 	lds	r19, 0x034E
    3bb6:	40 91 47 03 	lds	r20, 0x0347
    3bba:	50 91 48 03 	lds	r21, 0x0348
    3bbe:	60 91 49 03 	lds	r22, 0x0349
    3bc2:	70 91 4a 03 	lds	r23, 0x034A
    3bc6:	82 e9       	ldi	r24, 0x92	; 146
    3bc8:	97 e0       	ldi	r25, 0x07	; 7
    3bca:	0e 94 0b 27 	call	0x4e16	; 0x4e16 <_ZN7Kompass5angleEdd>
    3bce:	9b 01       	movw	r18, r22
    3bd0:	ac 01       	movw	r20, r24
    3bd2:	60 91 30 03 	lds	r22, 0x0330
    3bd6:	70 91 31 03 	lds	r23, 0x0331
    3bda:	80 91 32 03 	lds	r24, 0x0332
    3bde:	90 91 33 03 	lds	r25, 0x0333
    3be2:	df 93       	push	r29
    3be4:	cf 93       	push	r28
    3be6:	ff 92       	push	r15
    3be8:	ef 92       	push	r14
    3bea:	83 01       	movw	r16, r6
    3bec:	72 01       	movw	r14, r4
    3bee:	0e 94 84 10 	call	0x2108	; 0x2108 <_Z12fahradschirmddddm>
			anzeige|=(1<<refreshdisplay);
    3bf2:	80 91 37 03 	lds	r24, 0x0337
    3bf6:	90 91 38 03 	lds	r25, 0x0338
    3bfa:	90 68       	ori	r25, 0x80	; 128
    3bfc:	90 93 38 03 	sts	0x0338, r25
    3c00:	80 93 37 03 	sts	0x0337, r24
    3c04:	0f 90       	pop	r0
    3c06:	0f 90       	pop	r0
    3c08:	0f 90       	pop	r0
    3c0a:	0f 90       	pop	r0
    3c0c:	1a c0       	rjmp	.+52     	; 0x3c42 <_Z14anzeigehandlerv+0x15a>
		}
		else if ((anzeige&(1<<Druckflag)))
    3c0e:	92 ff       	sbrs	r25, 2
    3c10:	0c c0       	rjmp	.+24     	; 0x3c2a <_Z14anzeigehandlerv+0x142>
		{
			Pressuresensor();
    3c12:	0e 94 7a 15 	call	0x2af4	; 0x2af4 <_Z14Pressuresensorv>
			anzeige |= (1<<refreshdisplay);
    3c16:	80 91 37 03 	lds	r24, 0x0337
    3c1a:	90 91 38 03 	lds	r25, 0x0338
    3c1e:	90 68       	ori	r25, 0x80	; 128
    3c20:	90 93 38 03 	sts	0x0338, r25
    3c24:	80 93 37 03 	sts	0x0337, r24
    3c28:	0c c0       	rjmp	.+24     	; 0x3c42 <_Z14anzeigehandlerv+0x15a>
		}
		else if ((anzeige&(1<<Wanderflag)))
    3c2a:	93 ff       	sbrs	r25, 3
    3c2c:	0a c0       	rjmp	.+20     	; 0x3c42 <_Z14anzeigehandlerv+0x15a>
		{
			Wanderseite();
    3c2e:	55 d8       	rcall	.-3926   	; 0x2cda <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    3c30:	80 91 37 03 	lds	r24, 0x0337
    3c34:	90 91 38 03 	lds	r25, 0x0338
    3c38:	90 68       	ori	r25, 0x80	; 128
    3c3a:	90 93 38 03 	sts	0x0338, r25
    3c3e:	80 93 37 03 	sts	0x0337, r24
		}
		statusreg &= ~(1<<updaterate);
    3c42:	80 91 36 03 	lds	r24, 0x0336
    3c46:	8e 7f       	andi	r24, 0xFE	; 254
    3c48:	80 93 36 03 	sts	0x0336, r24
	}
	if ((rtc.interupts & (1<<sekundeninterupt)))
    3c4c:	80 91 8b 07 	lds	r24, 0x078B
    3c50:	81 ff       	sbrs	r24, 1
    3c52:	94 c1       	rjmp	.+808    	; 0x3f7c <_Z14anzeigehandlerv+0x494>
	{
		rtc.zeit();
    3c54:	83 e7       	ldi	r24, 0x73	; 115
    3c56:	97 e0       	ldi	r25, 0x07	; 7
    3c58:	0e 94 49 2d 	call	0x5a92	; 0x5a92 <_ZN3RTC4zeitEv>
		//Handler fuer die Anzeige der Seiten
		//Die einzelnen Funktionen beschreiben nur den Framebuffer und nicht dierekt das Display
		if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))
    3c5c:	80 91 37 03 	lds	r24, 0x0337
    3c60:	90 91 38 03 	lds	r25, 0x0338
    3c64:	9c 01       	movw	r18, r24
    3c66:	22 70       	andi	r18, 0x02	; 2
    3c68:	30 72       	andi	r19, 0x20	; 32
    3c6a:	22 30       	cpi	r18, 0x02	; 2
    3c6c:	30 42       	sbci	r19, 0x20	; 32
    3c6e:	61 f4       	brne	.+24     	; 0x3c88 <_Z14anzeigehandlerv+0x1a0>
		{
			menue_uhr();
    3c70:	0e 94 2b 0e 	call	0x1c56	; 0x1c56 <_Z9menue_uhrv>
			anzeige|=(1<<refreshdisplay);
    3c74:	80 91 37 03 	lds	r24, 0x0337
    3c78:	90 91 38 03 	lds	r25, 0x0338
    3c7c:	90 68       	ori	r25, 0x80	; 128
    3c7e:	90 93 38 03 	sts	0x0338, r25
    3c82:	80 93 37 03 	sts	0x0337, r24
    3c86:	5e c1       	rjmp	.+700    	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
    3c88:	9c 01       	movw	r18, r24
    3c8a:	22 27       	eor	r18, r18
    3c8c:	30 73       	andi	r19, 0x30	; 48
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))
    3c8e:	21 15       	cp	r18, r1
    3c90:	30 43       	sbci	r19, 0x30	; 48
    3c92:	61 f4       	brne	.+24     	; 0x3cac <_Z14anzeigehandlerv+0x1c4>
		{
			menue_einst();
    3c94:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <_Z11menue_einstv>
			anzeige|=(1<<refreshdisplay);
    3c98:	80 91 37 03 	lds	r24, 0x0337
    3c9c:	90 91 38 03 	lds	r25, 0x0338
    3ca0:	90 68       	ori	r25, 0x80	; 128
    3ca2:	90 93 38 03 	sts	0x0338, r25
    3ca6:	80 93 37 03 	sts	0x0337, r24
    3caa:	4c c1       	rjmp	.+664    	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
		}
		else if ((anzeige&(1<<menueflag)))
    3cac:	95 ff       	sbrs	r25, 5
    3cae:	0c c0       	rjmp	.+24     	; 0x3cc8 <_Z14anzeigehandlerv+0x1e0>
		{
			menue_haupt();
    3cb0:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <_Z11menue_hauptv>
			anzeige|=(1<<refreshdisplay);
    3cb4:	80 91 37 03 	lds	r24, 0x0337
    3cb8:	90 91 38 03 	lds	r25, 0x0338
    3cbc:	90 68       	ori	r25, 0x80	; 128
    3cbe:	90 93 38 03 	sts	0x0338, r25
    3cc2:	80 93 37 03 	sts	0x0337, r24
    3cc6:	3e c1       	rjmp	.+636    	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3cc8:	91 ff       	sbrs	r25, 1
    3cca:	0c c0       	rjmp	.+24     	; 0x3ce4 <_Z14anzeigehandlerv+0x1fc>
		{
			Gaineinstellen();
    3ccc:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <_Z14Gaineinstellenv>
			anzeige|=(1<<refreshdisplay);
    3cd0:	80 91 37 03 	lds	r24, 0x0337
    3cd4:	90 91 38 03 	lds	r25, 0x0338
    3cd8:	90 68       	ori	r25, 0x80	; 128
    3cda:	90 93 38 03 	sts	0x0338, r25
    3cde:	80 93 37 03 	sts	0x0337, r24
    3ce2:	30 c1       	rjmp	.+608    	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
		}
		else if ((anzeige&(1<<Uhrflag)))
    3ce4:	81 ff       	sbrs	r24, 1
    3ce6:	0c c0       	rjmp	.+24     	; 0x3d00 <_Z14anzeigehandlerv+0x218>
		{
			uhranzeigen();
    3ce8:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <_Z11uhranzeigenv>
			anzeige|=(1<<refreshdisplay);
    3cec:	80 91 37 03 	lds	r24, 0x0337
    3cf0:	90 91 38 03 	lds	r25, 0x0338
    3cf4:	90 68       	ori	r25, 0x80	; 128
    3cf6:	90 93 38 03 	sts	0x0338, r25
    3cfa:	80 93 37 03 	sts	0x0337, r24
    3cfe:	22 c1       	rjmp	.+580    	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
		}
		else if ((anzeige&(1<<Kompasflag)))
    3d00:	87 ff       	sbrs	r24, 7
    3d02:	24 c0       	rjmp	.+72     	; 0x3d4c <_Z14anzeigehandlerv+0x264>
		{
			Accelerometer.readacc();
    3d04:	8f e3       	ldi	r24, 0x3F	; 63
    3d06:	93 e0       	ldi	r25, 0x03	; 3
    3d08:	0e 94 51 28 	call	0x50a2	; 0x50a2 <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    3d0c:	00 91 4b 03 	lds	r16, 0x034B
    3d10:	10 91 4c 03 	lds	r17, 0x034C
    3d14:	20 91 4d 03 	lds	r18, 0x034D
    3d18:	30 91 4e 03 	lds	r19, 0x034E
    3d1c:	40 91 47 03 	lds	r20, 0x0347
    3d20:	50 91 48 03 	lds	r21, 0x0348
    3d24:	60 91 49 03 	lds	r22, 0x0349
    3d28:	70 91 4a 03 	lds	r23, 0x034A
    3d2c:	82 e9       	ldi	r24, 0x92	; 146
    3d2e:	97 e0       	ldi	r25, 0x07	; 7
    3d30:	0e 94 0b 27 	call	0x4e16	; 0x4e16 <_ZN7Kompass5angleEdd>
    3d34:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    3d38:	80 91 37 03 	lds	r24, 0x0337
    3d3c:	90 91 38 03 	lds	r25, 0x0338
    3d40:	90 68       	ori	r25, 0x80	; 128
    3d42:	90 93 38 03 	sts	0x0338, r25
    3d46:	80 93 37 03 	sts	0x0337, r24
    3d4a:	fc c0       	rjmp	.+504    	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
		}
		else if ((anzeige&(1<<Fahradflag)))
    3d4c:	80 ff       	sbrs	r24, 0
    3d4e:	a6 c0       	rjmp	.+332    	; 0x3e9c <_Z14anzeigehandlerv+0x3b4>
		{
			if (geschw>maxgeschw)
    3d50:	c0 90 30 03 	lds	r12, 0x0330
    3d54:	d0 90 31 03 	lds	r13, 0x0331
    3d58:	e0 90 32 03 	lds	r14, 0x0332
    3d5c:	f0 90 33 03 	lds	r15, 0x0333
    3d60:	20 91 28 03 	lds	r18, 0x0328
    3d64:	30 91 29 03 	lds	r19, 0x0329
    3d68:	40 91 2a 03 	lds	r20, 0x032A
    3d6c:	50 91 2b 03 	lds	r21, 0x032B
    3d70:	c7 01       	movw	r24, r14
    3d72:	b6 01       	movw	r22, r12
    3d74:	0e 94 5a 30 	call	0x60b4	; 0x60b4 <__gesf2>
    3d78:	18 16       	cp	r1, r24
    3d7a:	44 f4       	brge	.+16     	; 0x3d8c <_Z14anzeigehandlerv+0x2a4>
			{
				maxgeschw=geschw;
    3d7c:	c0 92 28 03 	sts	0x0328, r12
    3d80:	d0 92 29 03 	sts	0x0329, r13
    3d84:	e0 92 2a 03 	sts	0x032A, r14
    3d88:	f0 92 2b 03 	sts	0x032B, r15
			}
			if (geschw >= 1.0)
    3d8c:	20 e0       	ldi	r18, 0x00	; 0
    3d8e:	30 e0       	ldi	r19, 0x00	; 0
    3d90:	40 e8       	ldi	r20, 0x80	; 128
    3d92:	5f e3       	ldi	r21, 0x3F	; 63
    3d94:	c7 01       	movw	r24, r14
    3d96:	b6 01       	movw	r22, r12
    3d98:	0e 94 5a 30 	call	0x60b4	; 0x60b4 <__gesf2>
    3d9c:	88 23       	and	r24, r24
    3d9e:	9c f0       	brlt	.+38     	; 0x3dc6 <_Z14anzeigehandlerv+0x2de>
			{
				Fahrtzeit++;
    3da0:	80 91 24 03 	lds	r24, 0x0324
    3da4:	90 91 25 03 	lds	r25, 0x0325
    3da8:	a0 91 26 03 	lds	r26, 0x0326
    3dac:	b0 91 27 03 	lds	r27, 0x0327
    3db0:	01 96       	adiw	r24, 0x01	; 1
    3db2:	a1 1d       	adc	r26, r1
    3db4:	b1 1d       	adc	r27, r1
    3db6:	80 93 24 03 	sts	0x0324, r24
    3dba:	90 93 25 03 	sts	0x0325, r25
    3dbe:	a0 93 26 03 	sts	0x0326, r26
    3dc2:	b0 93 27 03 	sts	0x0327, r27
			}
			strecke+=geschw/3.6;
    3dc6:	26 e6       	ldi	r18, 0x66	; 102
    3dc8:	36 e6       	ldi	r19, 0x66	; 102
    3dca:	46 e6       	ldi	r20, 0x66	; 102
    3dcc:	50 e4       	ldi	r21, 0x40	; 64
    3dce:	c7 01       	movw	r24, r14
    3dd0:	b6 01       	movw	r22, r12
    3dd2:	0e 94 b1 2e 	call	0x5d62	; 0x5d62 <__divsf3>
    3dd6:	9b 01       	movw	r18, r22
    3dd8:	ac 01       	movw	r20, r24
    3dda:	60 91 2c 03 	lds	r22, 0x032C
    3dde:	70 91 2d 03 	lds	r23, 0x032D
    3de2:	80 91 2e 03 	lds	r24, 0x032E
    3de6:	90 91 2f 03 	lds	r25, 0x032F
    3dea:	0e 94 e4 2d 	call	0x5bc8	; 0x5bc8 <__addsf3>
    3dee:	60 93 2c 03 	sts	0x032C, r22
    3df2:	70 93 2d 03 	sts	0x032D, r23
    3df6:	80 93 2e 03 	sts	0x032E, r24
    3dfa:	90 93 2f 03 	sts	0x032F, r25
			Accelerometer.readacc();
    3dfe:	8f e3       	ldi	r24, 0x3F	; 63
    3e00:	93 e0       	ldi	r25, 0x03	; 3
    3e02:	0e 94 51 28 	call	0x50a2	; 0x50a2 <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    3e06:	e0 90 24 03 	lds	r14, 0x0324
    3e0a:	f0 90 25 03 	lds	r15, 0x0325
    3e0e:	c0 91 26 03 	lds	r28, 0x0326
    3e12:	d0 91 27 03 	lds	r29, 0x0327
    3e16:	a0 90 28 03 	lds	r10, 0x0328
    3e1a:	b0 90 29 03 	lds	r11, 0x0329
    3e1e:	c0 90 2a 03 	lds	r12, 0x032A
    3e22:	d0 90 2b 03 	lds	r13, 0x032B
    3e26:	40 90 2c 03 	lds	r4, 0x032C
    3e2a:	50 90 2d 03 	lds	r5, 0x032D
    3e2e:	60 90 2e 03 	lds	r6, 0x032E
    3e32:	70 90 2f 03 	lds	r7, 0x032F
    3e36:	00 91 4b 03 	lds	r16, 0x034B
    3e3a:	10 91 4c 03 	lds	r17, 0x034C
    3e3e:	20 91 4d 03 	lds	r18, 0x034D
    3e42:	30 91 4e 03 	lds	r19, 0x034E
    3e46:	40 91 47 03 	lds	r20, 0x0347
    3e4a:	50 91 48 03 	lds	r21, 0x0348
    3e4e:	60 91 49 03 	lds	r22, 0x0349
    3e52:	70 91 4a 03 	lds	r23, 0x034A
    3e56:	82 e9       	ldi	r24, 0x92	; 146
    3e58:	97 e0       	ldi	r25, 0x07	; 7
    3e5a:	dd d7       	rcall	.+4026   	; 0x4e16 <_ZN7Kompass5angleEdd>
    3e5c:	9b 01       	movw	r18, r22
    3e5e:	ac 01       	movw	r20, r24
    3e60:	60 91 30 03 	lds	r22, 0x0330
    3e64:	70 91 31 03 	lds	r23, 0x0331
    3e68:	80 91 32 03 	lds	r24, 0x0332
    3e6c:	90 91 33 03 	lds	r25, 0x0333
    3e70:	df 93       	push	r29
    3e72:	cf 93       	push	r28
    3e74:	ff 92       	push	r15
    3e76:	ef 92       	push	r14
    3e78:	83 01       	movw	r16, r6
    3e7a:	72 01       	movw	r14, r4
    3e7c:	0e 94 84 10 	call	0x2108	; 0x2108 <_Z12fahradschirmddddm>
			//Fuer Testzwecke entfernt um neue Methode zu testen, siehe Oben
			//if (rtc.Sekunden%2)
			//{
				//geschw=0;
			//}
			anzeige|=(1<<refreshdisplay);
    3e80:	80 91 37 03 	lds	r24, 0x0337
    3e84:	90 91 38 03 	lds	r25, 0x0338
    3e88:	90 68       	ori	r25, 0x80	; 128
    3e8a:	90 93 38 03 	sts	0x0338, r25
    3e8e:	80 93 37 03 	sts	0x0337, r24
    3e92:	0f 90       	pop	r0
    3e94:	0f 90       	pop	r0
    3e96:	0f 90       	pop	r0
    3e98:	0f 90       	pop	r0
    3e9a:	54 c0       	rjmp	.+168    	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    3e9c:	83 ff       	sbrs	r24, 3
    3e9e:	0c c0       	rjmp	.+24     	; 0x3eb8 <_Z14anzeigehandlerv+0x3d0>
		{
			Stoppuhrseite();
    3ea0:	0e 94 b9 14 	call	0x2972	; 0x2972 <_Z13Stoppuhrseitev>
			anzeige|=(1<<refreshdisplay);
    3ea4:	80 91 37 03 	lds	r24, 0x0337
    3ea8:	90 91 38 03 	lds	r25, 0x0338
    3eac:	90 68       	ori	r25, 0x80	; 128
    3eae:	90 93 38 03 	sts	0x0338, r25
    3eb2:	80 93 37 03 	sts	0x0337, r24
    3eb6:	46 c0       	rjmp	.+140    	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
		}
		else if ((anzeige&(1<<Timerflag)))
    3eb8:	82 ff       	sbrs	r24, 2
    3eba:	18 c0       	rjmp	.+48     	; 0x3eec <_Z14anzeigehandlerv+0x404>
		{
			if (rtc.interupts&(1<<Alarm))
    3ebc:	20 91 8b 07 	lds	r18, 0x078B
    3ec0:	20 ff       	sbrs	r18, 0
    3ec2:	08 c0       	rjmp	.+16     	; 0x3ed4 <_Z14anzeigehandlerv+0x3ec>
			{
				anzeige |= (1<<blinkflag);
    3ec4:	90 64       	ori	r25, 0x40	; 64
    3ec6:	90 93 38 03 	sts	0x0338, r25
    3eca:	80 93 37 03 	sts	0x0337, r24
				rtc.interupts &= ~(1<<Alarm);
    3ece:	2e 7f       	andi	r18, 0xFE	; 254
    3ed0:	20 93 8b 07 	sts	0x078B, r18
			}
			timerseite();
    3ed4:	0e 94 ed 13 	call	0x27da	; 0x27da <_Z10timerseitev>
			anzeige|=(1<<refreshdisplay);
    3ed8:	80 91 37 03 	lds	r24, 0x0337
    3edc:	90 91 38 03 	lds	r25, 0x0338
    3ee0:	90 68       	ori	r25, 0x80	; 128
    3ee2:	90 93 38 03 	sts	0x0338, r25
    3ee6:	80 93 37 03 	sts	0x0337, r24
    3eea:	2c c0       	rjmp	.+88     	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
		}
		else if ((anzeige&(1<<Druckflag)))
    3eec:	92 ff       	sbrs	r25, 2
    3eee:	0c c0       	rjmp	.+24     	; 0x3f08 <_Z14anzeigehandlerv+0x420>
		{
			Pressuresensor();
    3ef0:	0e 94 7a 15 	call	0x2af4	; 0x2af4 <_Z14Pressuresensorv>
			anzeige |= (1<<refreshdisplay);
    3ef4:	80 91 37 03 	lds	r24, 0x0337
    3ef8:	90 91 38 03 	lds	r25, 0x0338
    3efc:	90 68       	ori	r25, 0x80	; 128
    3efe:	90 93 38 03 	sts	0x0338, r25
    3f02:	80 93 37 03 	sts	0x0337, r24
    3f06:	1e c0       	rjmp	.+60     	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
		}
		else if ((anzeige&(1<<Wanderflag)))
    3f08:	93 ff       	sbrs	r25, 3
    3f0a:	0c c0       	rjmp	.+24     	; 0x3f24 <_Z14anzeigehandlerv+0x43c>
		{
			Wanderseite();
    3f0c:	0e 94 6d 16 	call	0x2cda	; 0x2cda <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    3f10:	80 91 37 03 	lds	r24, 0x0337
    3f14:	90 91 38 03 	lds	r25, 0x0338
    3f18:	90 68       	ori	r25, 0x80	; 128
    3f1a:	90 93 38 03 	sts	0x0338, r25
    3f1e:	80 93 37 03 	sts	0x0337, r24
    3f22:	10 c0       	rjmp	.+32     	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
    3f24:	80 74       	andi	r24, 0x40	; 64
    3f26:	90 71       	andi	r25, 0x10	; 16
		}
		else if ((anzeige&(1<<Weckeranzeigeflag))&&(anzeige&(1<<Einstellungsflag)))
    3f28:	80 34       	cpi	r24, 0x40	; 64
    3f2a:	90 41       	sbci	r25, 0x10	; 16
    3f2c:	59 f4       	brne	.+22     	; 0x3f44 <_Z14anzeigehandlerv+0x45c>
		{
			Weckeranzeige();
    3f2e:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3f32:	80 91 37 03 	lds	r24, 0x0337
    3f36:	90 91 38 03 	lds	r25, 0x0338
    3f3a:	90 68       	ori	r25, 0x80	; 128
    3f3c:	90 93 38 03 	sts	0x0338, r25
    3f40:	80 93 37 03 	sts	0x0337, r24
		}
		if ((anzeige&(1<<blinkflag)))
    3f44:	80 91 37 03 	lds	r24, 0x0337
    3f48:	90 91 38 03 	lds	r25, 0x0338
    3f4c:	96 ff       	sbrs	r25, 6
    3f4e:	0f c0       	rjmp	.+30     	; 0x3f6e <_Z14anzeigehandlerv+0x486>
		{
			oled.invert(rtc.Sekunden%2);
    3f50:	60 91 85 07 	lds	r22, 0x0785
    3f54:	61 70       	andi	r22, 0x01	; 1
    3f56:	82 e7       	ldi	r24, 0x72	; 114
    3f58:	93 e0       	ldi	r25, 0x03	; 3
    3f5a:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
			LED.toggle();
    3f5e:	84 e6       	ldi	r24, 0x64	; 100
    3f60:	93 e0       	ldi	r25, 0x03	; 3
    3f62:	0e 94 a6 2a 	call	0x554c	; 0x554c <_ZN6Output6toggleEv>
			Vibrationsmotor.on();
    3f66:	82 e6       	ldi	r24, 0x62	; 98
    3f68:	93 e0       	ldi	r25, 0x03	; 3
    3f6a:	0e 94 cd 29 	call	0x539a	; 0x539a <_ZN6Output2onEv>
		}
		FPS=0;
    3f6e:	10 92 34 03 	sts	0x0334, r1
		rtc.interupts&=~(1<<sekundeninterupt);
    3f72:	eb e8       	ldi	r30, 0x8B	; 139
    3f74:	f7 e0       	ldi	r31, 0x07	; 7
    3f76:	80 81       	ld	r24, Z
    3f78:	8d 7f       	andi	r24, 0xFD	; 253
    3f7a:	80 83       	st	Z, r24
	}
	//Minuteninterrupt
	if ((rtc.interupts&(1<<minuteninterupt)))
    3f7c:	80 91 8b 07 	lds	r24, 0x078B
    3f80:	82 ff       	sbrs	r24, 2
    3f82:	22 c0       	rjmp	.+68     	; 0x3fc8 <_Z14anzeigehandlerv+0x4e0>
	{
		if ((anzeige&(1<<Uhrflaggross)))
    3f84:	80 91 37 03 	lds	r24, 0x0337
    3f88:	85 ff       	sbrs	r24, 5
    3f8a:	0c c0       	rjmp	.+24     	; 0x3fa4 <_Z14anzeigehandlerv+0x4bc>
		{
			uhranzeigenmin();
    3f8c:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <_Z14uhranzeigenminv>
			anzeige|=(1<<refreshdisplay);
    3f90:	80 91 37 03 	lds	r24, 0x0337
    3f94:	90 91 38 03 	lds	r25, 0x0338
    3f98:	90 68       	ori	r25, 0x80	; 128
    3f9a:	90 93 38 03 	sts	0x0338, r25
    3f9e:	80 93 37 03 	sts	0x0337, r24
    3fa2:	0d c0       	rjmp	.+26     	; 0x3fbe <_Z14anzeigehandlerv+0x4d6>
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    3fa4:	86 ff       	sbrs	r24, 6
    3fa6:	0b c0       	rjmp	.+22     	; 0x3fbe <_Z14anzeigehandlerv+0x4d6>
		{
			Weckeranzeige();
    3fa8:	0e 94 f2 0f 	call	0x1fe4	; 0x1fe4 <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3fac:	80 91 37 03 	lds	r24, 0x0337
    3fb0:	90 91 38 03 	lds	r25, 0x0338
    3fb4:	90 68       	ori	r25, 0x80	; 128
    3fb6:	90 93 38 03 	sts	0x0338, r25
    3fba:	80 93 37 03 	sts	0x0337, r24
		}
		rtc.interupts&=~(1<<minuteninterupt);
    3fbe:	eb e8       	ldi	r30, 0x8B	; 139
    3fc0:	f7 e0       	ldi	r31, 0x07	; 7
    3fc2:	80 81       	ld	r24, Z
    3fc4:	8b 7f       	andi	r24, 0xFB	; 251
    3fc6:	80 83       	st	Z, r24
	}
	//neuen Framebuffer an das Dispay senden
	if ((anzeige&(1<<refreshdisplay)))
    3fc8:	80 91 37 03 	lds	r24, 0x0337
    3fcc:	90 91 38 03 	lds	r25, 0x0338
    3fd0:	99 23       	and	r25, r25
    3fd2:	6c f4       	brge	.+26     	; 0x3fee <_Z14anzeigehandlerv+0x506>
	{
		oled.sendFrame();
    3fd4:	82 e7       	ldi	r24, 0x72	; 114
    3fd6:	93 e0       	ldi	r25, 0x03	; 3
    3fd8:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN7Display9sendFrameEv>
		anzeige&=~(1<<refreshdisplay);
    3fdc:	80 91 37 03 	lds	r24, 0x0337
    3fe0:	90 91 38 03 	lds	r25, 0x0338
    3fe4:	9f 77       	andi	r25, 0x7F	; 127
    3fe6:	90 93 38 03 	sts	0x0338, r25
    3fea:	80 93 37 03 	sts	0x0337, r24
	}
}
    3fee:	df 91       	pop	r29
    3ff0:	cf 91       	pop	r28
    3ff2:	1f 91       	pop	r17
    3ff4:	0f 91       	pop	r16
    3ff6:	ff 90       	pop	r15
    3ff8:	ef 90       	pop	r14
    3ffa:	df 90       	pop	r13
    3ffc:	cf 90       	pop	r12
    3ffe:	bf 90       	pop	r11
    4000:	af 90       	pop	r10
    4002:	7f 90       	pop	r7
    4004:	6f 90       	pop	r6
    4006:	5f 90       	pop	r5
    4008:	4f 90       	pop	r4
    400a:	08 95       	ret

0000400c <_Z14eingabehandlerh>:

void eingabehandler(uint8_t taste){
	if (taste!='A')
    400c:	81 34       	cpi	r24, 0x41	; 65
    400e:	09 f4       	brne	.+2      	; 0x4012 <_Z14eingabehandlerh+0x6>
    4010:	8f c4       	rjmp	.+2334   	; 0x4930 <__stack+0x831>
	{
		rtc.interupts |= (1<<sekundeninterupt);
    4012:	eb e8       	ldi	r30, 0x8B	; 139
    4014:	f7 e0       	ldi	r31, 0x07	; 7
    4016:	90 81       	ld	r25, Z
    4018:	29 2f       	mov	r18, r25
    401a:	22 60       	ori	r18, 0x02	; 2
    401c:	20 83       	st	Z, r18
		if (anzeige==255)
    401e:	20 91 37 03 	lds	r18, 0x0337
    4022:	30 91 38 03 	lds	r19, 0x0338
    4026:	2f 3f       	cpi	r18, 0xFF	; 255
    4028:	31 05       	cpc	r19, r1
    402a:	61 f4       	brne	.+24     	; 0x4044 <_Z14eingabehandlerh+0x38>
		{
			oled.ssd1306_command(SSD1306_DISPLAYON);
    402c:	6f ea       	ldi	r22, 0xAF	; 175
    402e:	82 e7       	ldi	r24, 0x72	; 114
    4030:	93 e0       	ldi	r25, 0x03	; 3
    4032:	0e 94 10 03 	call	0x620	; 0x620 <_ZN7Display15ssd1306_commandEh>
			//entweder display aus oder das Menue starten
			anzeige=(1<<menueflag);
    4036:	80 e0       	ldi	r24, 0x00	; 0
    4038:	90 e2       	ldi	r25, 0x20	; 32
    403a:	90 93 38 03 	sts	0x0338, r25
    403e:	80 93 37 03 	sts	0x0337, r24
    4042:	08 95       	ret
    4044:	a9 01       	movw	r20, r18
    4046:	42 70       	andi	r20, 0x02	; 2
    4048:	50 72       	andi	r21, 0x20	; 32
		}
		//gleicher Handler wie oben, aber hier speziell fuer die Bearbeitung von Tastereingaben mit switch fuer die Tasten
		//es sind einfach so viele Tasten moeglich
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))	//Menue der Uhr
    404a:	42 30       	cpi	r20, 0x02	; 2
    404c:	50 42       	sbci	r21, 0x20	; 32
    404e:	e9 f5       	brne	.+122    	; 0x40ca <_Z14eingabehandlerh+0xbe>
		{
			anzeige&=~((1<<menueflag)|(1<<Uhrflag));
    4050:	2d 7f       	andi	r18, 0xFD	; 253
    4052:	3f 7d       	andi	r19, 0xDF	; 223
			switch (taste)
    4054:	83 33       	cpi	r24, 0x33	; 51
    4056:	c1 f0       	breq	.+48     	; 0x4088 <_Z14eingabehandlerh+0x7c>
    4058:	28 f4       	brcc	.+10     	; 0x4064 <_Z14eingabehandlerh+0x58>
    405a:	81 33       	cpi	r24, 0x31	; 49
    405c:	41 f0       	breq	.+16     	; 0x406e <_Z14eingabehandlerh+0x62>
    405e:	82 33       	cpi	r24, 0x32	; 50
    4060:	61 f0       	breq	.+24     	; 0x407a <_Z14eingabehandlerh+0x6e>
    4062:	2c c0       	rjmp	.+88     	; 0x40bc <_Z14eingabehandlerh+0xb0>
    4064:	84 33       	cpi	r24, 0x34	; 52
    4066:	b9 f0       	breq	.+46     	; 0x4096 <_Z14eingabehandlerh+0x8a>
    4068:	85 33       	cpi	r24, 0x35	; 53
    406a:	f1 f0       	breq	.+60     	; 0x40a8 <_Z14eingabehandlerh+0x9c>
    406c:	27 c0       	rjmp	.+78     	; 0x40bc <_Z14eingabehandlerh+0xb0>
			{
				case '1':
				//Wechseln auf die Uhr
				anzeige|=(1<<Uhrflag);
    406e:	22 60       	ori	r18, 0x02	; 2
    4070:	30 93 38 03 	sts	0x0338, r19
    4074:	20 93 37 03 	sts	0x0337, r18
				break;
    4078:	08 95       	ret
				
				case '2':
				//starten der Stoppuhr APP
				anzeige|=(1<<refreshdisplay) | (1<<Stoppuhrflag);
    407a:	28 60       	ori	r18, 0x08	; 8
    407c:	30 68       	ori	r19, 0x80	; 128
    407e:	30 93 38 03 	sts	0x0338, r19
    4082:	20 93 37 03 	sts	0x0337, r18
				break;
    4086:	08 95       	ret
				
				case '3':
				//Starten der Timer APP	
				anzeige|=(1<<Timerflag) | (1<<Einstellungsflag);
    4088:	24 60       	ori	r18, 0x04	; 4
    408a:	30 61       	ori	r19, 0x10	; 16
    408c:	30 93 38 03 	sts	0x0338, r19
    4090:	20 93 37 03 	sts	0x0337, r18
				break;
    4094:	08 95       	ret
				
				case '4':
				rtc.interupts |=(1<<minuteninterupt);
    4096:	96 60       	ori	r25, 0x06	; 6
    4098:	90 93 8b 07 	sts	0x078B, r25
				anzeige |= (1<<Weckeranzeigeflag);
    409c:	20 64       	ori	r18, 0x40	; 64
    409e:	30 93 38 03 	sts	0x0338, r19
    40a2:	20 93 37 03 	sts	0x0337, r18
				break;
    40a6:	08 95       	ret
				
				case '5':
				//Wechseln auf grosse Uhr
				rtc.interupts |=(1<<minuteninterupt);
    40a8:	96 60       	ori	r25, 0x06	; 6
    40aa:	90 93 8b 07 	sts	0x078B, r25
				anzeige |=(1<<Uhrflaggross) | (1<<refreshdisplay);
    40ae:	20 62       	ori	r18, 0x20	; 32
    40b0:	30 68       	ori	r19, 0x80	; 128
    40b2:	30 93 38 03 	sts	0x0338, r19
    40b6:	20 93 37 03 	sts	0x0337, r18
				break;
    40ba:	08 95       	ret
				
				default:
				//menueflag erneu setzen
				anzeige|=(1<<menueflag)|(1<<Uhrflag);
    40bc:	22 60       	ori	r18, 0x02	; 2
    40be:	30 62       	ori	r19, 0x20	; 32
    40c0:	30 93 38 03 	sts	0x0338, r19
    40c4:	20 93 37 03 	sts	0x0337, r18
				break;
    40c8:	09 c4       	rjmp	.+2066   	; 0x48dc <__stack+0x7dd>
    40ca:	a9 01       	movw	r20, r18
    40cc:	44 27       	eor	r20, r20
    40ce:	50 73       	andi	r21, 0x30	; 48
			}
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))	//Menue der Einstellungen
    40d0:	41 15       	cp	r20, r1
    40d2:	50 43       	sbci	r21, 0x30	; 48
    40d4:	09 f0       	breq	.+2      	; 0x40d8 <_Z14eingabehandlerh+0xcc>
    40d6:	41 c0       	rjmp	.+130    	; 0x415a <__stack+0x5b>
		{
			anzeige&=~((1<<menueflag)|(1<<Einstellungsflag));
    40d8:	3f 7c       	andi	r19, 0xCF	; 207
    40da:	30 93 38 03 	sts	0x0338, r19
    40de:	20 93 37 03 	sts	0x0337, r18
			switch (taste)
    40e2:	82 33       	cpi	r24, 0x32	; 50
    40e4:	b1 f0       	breq	.+44     	; 0x4112 <__stack+0x13>
    40e6:	18 f4       	brcc	.+6      	; 0x40ee <_Z14eingabehandlerh+0xe2>
    40e8:	81 33       	cpi	r24, 0x31	; 49
    40ea:	31 f0       	breq	.+12     	; 0x40f8 <_Z14eingabehandlerh+0xec>
    40ec:	30 c0       	rjmp	.+96     	; 0x414e <__stack+0x4f>
    40ee:	83 33       	cpi	r24, 0x33	; 51
    40f0:	b1 f0       	breq	.+44     	; 0x411e <__stack+0x1f>
    40f2:	84 33       	cpi	r24, 0x34	; 52
    40f4:	29 f1       	breq	.+74     	; 0x4140 <__stack+0x41>
    40f6:	2b c0       	rjmp	.+86     	; 0x414e <__stack+0x4f>
			{
				case '1':
				//zuruecksetzen der Kalibrierung, da passive Kallibrierung eingebaut
				kompass.kallibrierung_ruecksetzen();
    40f8:	82 e9       	ldi	r24, 0x92	; 146
    40fa:	97 e0       	ldi	r25, 0x07	; 7
    40fc:	bb d7       	rcall	.+3958   	; 0x5074 <_ZN7Kompass25kallibrierung_ruecksetzenEv>
				anzeige|=(1<<Kompasflag);
    40fe:	80 91 37 03 	lds	r24, 0x0337
    4102:	90 91 38 03 	lds	r25, 0x0338
    4106:	80 68       	ori	r24, 0x80	; 128
    4108:	90 93 38 03 	sts	0x0338, r25
    410c:	80 93 37 03 	sts	0x0337, r24
				break;
    4110:	08 95       	ret
				case '2':
				//Gaineinstellung fuer den Kompass
				anzeige|=(1<<Kompasgaineinstellenflag);
    4112:	32 60       	ori	r19, 0x02	; 2
    4114:	30 93 38 03 	sts	0x0338, r19
    4118:	20 93 37 03 	sts	0x0337, r18
				break;
    411c:	08 95       	ret
				case '3':
				//dies ist eine der wenigen Funktinen, die die Handler Strucktur nicht anwenden, da sie die rtc anhaellt
				uhreinstellen();
    411e:	0e 94 f2 17 	call	0x2fe4	; 0x2fe4 <_Z13uhreinstellenv>
				rtc.interupts |= (1<<minuteninterupt);
    4122:	eb e8       	ldi	r30, 0x8B	; 139
    4124:	f7 e0       	ldi	r31, 0x07	; 7
    4126:	80 81       	ld	r24, Z
    4128:	84 60       	ori	r24, 0x04	; 4
    412a:	80 83       	st	Z, r24
				anzeige|=(1<<Uhrflaggross);
    412c:	80 91 37 03 	lds	r24, 0x0337
    4130:	90 91 38 03 	lds	r25, 0x0338
    4134:	80 62       	ori	r24, 0x20	; 32
    4136:	90 93 38 03 	sts	0x0338, r25
    413a:	80 93 37 03 	sts	0x0337, r24
				break;
    413e:	08 95       	ret
				case '4':
				anzeige |= (1<<Einstellungsflag) | (1<<Weckeranzeigeflag);
    4140:	20 64       	ori	r18, 0x40	; 64
    4142:	30 61       	ori	r19, 0x10	; 16
    4144:	30 93 38 03 	sts	0x0338, r19
    4148:	20 93 37 03 	sts	0x0337, r18
				break;
    414c:	08 95       	ret
				default:
				//Menueflag neu setzten
				anzeige|=(1<<menueflag)|(1<<Einstellungsflag);
    414e:	30 63       	ori	r19, 0x30	; 48
    4150:	30 93 38 03 	sts	0x0338, r19
    4154:	20 93 37 03 	sts	0x0337, r18
				break;
    4158:	c1 c3       	rjmp	.+1922   	; 0x48dc <__stack+0x7dd>
			}
		}
		else if ((anzeige&(1<<menueflag)))	//nur das grosse menue
    415a:	35 ff       	sbrs	r19, 5
    415c:	4b c0       	rjmp	.+150    	; 0x41f4 <__stack+0xf5>
		{
			anzeige&=~(1<<menueflag);
    415e:	3f 7d       	andi	r19, 0xDF	; 223
    4160:	30 93 38 03 	sts	0x0338, r19
    4164:	20 93 37 03 	sts	0x0337, r18
			switch (taste)
    4168:	48 2f       	mov	r20, r24
    416a:	50 e0       	ldi	r21, 0x00	; 0
    416c:	fa 01       	movw	r30, r20
    416e:	f1 97       	sbiw	r30, 0x31	; 49
    4170:	e7 30       	cpi	r30, 0x07	; 7
    4172:	f1 05       	cpc	r31, r1
    4174:	c8 f5       	brcc	.+114    	; 0x41e8 <__stack+0xe9>
    4176:	e0 5b       	subi	r30, 0xB0	; 176
    4178:	ff 4f       	sbci	r31, 0xFF	; 255
    417a:	0c 94 03 35 	jmp	0x6a06	; 0x6a06 <__tablejump2__>
			{
				case '1':
				anzeige|=(1<<Fahradflag);
    417e:	21 60       	ori	r18, 0x01	; 1
    4180:	30 93 38 03 	sts	0x0338, r19
    4184:	20 93 37 03 	sts	0x0337, r18
				//starten des Timers fuer die geschwindigkeit
				inittimer(1);
    4188:	81 e0       	ldi	r24, 0x01	; 1
    418a:	da cb       	rjmp	.-2124   	; 0x3940 <_Z9inittimerh>
				break;
    418c:	08 95       	ret
				
				case '2':
				//Wanderanzeige schalten
				anzeige|=(1<<refreshdisplay) | (1<<Wanderflag);
    418e:	38 68       	ori	r19, 0x88	; 136
    4190:	30 93 38 03 	sts	0x0338, r19
    4194:	20 93 37 03 	sts	0x0337, r18
				break;
    4198:	08 95       	ret
				
				case '3':
				anzeige|=(1<<Kompasflag);
    419a:	20 68       	ori	r18, 0x80	; 128
    419c:	30 93 38 03 	sts	0x0338, r19
    41a0:	20 93 37 03 	sts	0x0337, r18
				break;
    41a4:	08 95       	ret
				
				case '4':
				//Menue der Uhr
				anzeige|=(1<<menueflag) | (1<<Uhrflag);
    41a6:	22 60       	ori	r18, 0x02	; 2
    41a8:	30 62       	ori	r19, 0x20	; 32
    41aa:	30 93 38 03 	sts	0x0338, r19
    41ae:	20 93 37 03 	sts	0x0337, r18
				break;
    41b2:	08 95       	ret
				
				case '5':
				//menue der Einstellungen
				anzeige|=(1<<menueflag) | (1<<Einstellungsflag);
    41b4:	30 63       	ori	r19, 0x30	; 48
    41b6:	30 93 38 03 	sts	0x0338, r19
    41ba:	20 93 37 03 	sts	0x0337, r18
				break;
    41be:	08 95       	ret
				
				case '6':
				//Display ausschalten
				//anzeige=255;
				oled.clearFrame();
    41c0:	82 e7       	ldi	r24, 0x72	; 114
    41c2:	93 e0       	ldi	r25, 0x03	; 3
    41c4:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
				anzeige|=(1<<refreshdisplay);
    41c8:	80 91 37 03 	lds	r24, 0x0337
    41cc:	90 91 38 03 	lds	r25, 0x0338
    41d0:	90 68       	ori	r25, 0x80	; 128
    41d2:	90 93 38 03 	sts	0x0338, r25
    41d6:	80 93 37 03 	sts	0x0337, r24
				break;
    41da:	08 95       	ret
				case '7':
				anzeige |= (1<<Druckflag);
    41dc:	34 60       	ori	r19, 0x04	; 4
    41de:	30 93 38 03 	sts	0x0338, r19
    41e2:	20 93 37 03 	sts	0x0337, r18
				break;
    41e6:	08 95       	ret
				default:
				//menueflag erneut setzen um abschalten zu verhindern
				anzeige|=(1<<menueflag);
    41e8:	30 62       	ori	r19, 0x20	; 32
    41ea:	30 93 38 03 	sts	0x0338, r19
    41ee:	20 93 37 03 	sts	0x0337, r18
				break;
    41f2:	74 c3       	rjmp	.+1768   	; 0x48dc <__stack+0x7dd>
    41f4:	a9 01       	movw	r20, r18
    41f6:	40 74       	andi	r20, 0x40	; 64
    41f8:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag))&&(anzeige&(1<<Weckeranzeigeflag)))
    41fa:	40 34       	cpi	r20, 0x40	; 64
    41fc:	50 41       	sbci	r21, 0x10	; 16
    41fe:	09 f0       	breq	.+2      	; 0x4202 <__stack+0x103>
    4200:	68 c0       	rjmp	.+208    	; 0x42d2 <__stack+0x1d3>
		{
			switch (pos)
    4202:	40 91 35 03 	lds	r20, 0x0335
    4206:	41 30       	cpi	r20, 0x01	; 1
    4208:	11 f1       	breq	.+68     	; 0x424e <__stack+0x14f>
    420a:	30 f0       	brcs	.+12     	; 0x4218 <__stack+0x119>
    420c:	42 30       	cpi	r20, 0x02	; 2
    420e:	79 f1       	breq	.+94     	; 0x426e <__stack+0x16f>
    4210:	43 30       	cpi	r20, 0x03	; 3
    4212:	09 f4       	brne	.+2      	; 0x4216 <__stack+0x117>
    4214:	3f c0       	rjmp	.+126    	; 0x4294 <__stack+0x195>
    4216:	62 c3       	rjmp	.+1732   	; 0x48dc <__stack+0x7dd>
			{
				case 0:
				rtc.WStunden=0;
    4218:	10 92 8d 07 	sts	0x078D, r1
				rtc.WMinuten=0;
    421c:	10 92 8c 07 	sts	0x078C, r1
				rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
    4220:	97 7e       	andi	r25, 0xE7	; 231
    4222:	92 60       	ori	r25, 0x02	; 2
    4224:	90 93 8b 07 	sts	0x078B, r25
				switch (taste)
    4228:	83 32       	cpi	r24, 0x23	; 35
    422a:	09 f4       	brne	.+2      	; 0x422e <__stack+0x12f>
    422c:	57 c3       	rjmp	.+1710   	; 0x48dc <__stack+0x7dd>
    422e:	8a 32       	cpi	r24, 0x2A	; 42
    4230:	09 f4       	brne	.+2      	; 0x4234 <__stack+0x135>
    4232:	54 c3       	rjmp	.+1704   	; 0x48dc <__stack+0x7dd>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden=(taste-'0')*10;
    4234:	98 2f       	mov	r25, r24
    4236:	99 0f       	add	r25, r25
    4238:	90 56       	subi	r25, 0x60	; 96
    423a:	29 2f       	mov	r18, r25
    423c:	22 0f       	add	r18, r18
    423e:	22 0f       	add	r18, r18
    4240:	92 0f       	add	r25, r18
    4242:	90 93 8d 07 	sts	0x078D, r25
					pos++;
    4246:	91 e0       	ldi	r25, 0x01	; 1
    4248:	90 93 35 03 	sts	0x0335, r25
					break;
    424c:	47 c3       	rjmp	.+1678   	; 0x48dc <__stack+0x7dd>
				}
				break;
				case 1:
				switch (taste)
    424e:	83 32       	cpi	r24, 0x23	; 35
    4250:	09 f4       	brne	.+2      	; 0x4254 <__stack+0x155>
    4252:	44 c3       	rjmp	.+1672   	; 0x48dc <__stack+0x7dd>
    4254:	8a 32       	cpi	r24, 0x2A	; 42
    4256:	09 f4       	brne	.+2      	; 0x425a <__stack+0x15b>
    4258:	41 c3       	rjmp	.+1666   	; 0x48dc <__stack+0x7dd>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden+=(taste-'0');
    425a:	ed e8       	ldi	r30, 0x8D	; 141
    425c:	f7 e0       	ldi	r31, 0x07	; 7
    425e:	90 81       	ld	r25, Z
    4260:	90 53       	subi	r25, 0x30	; 48
    4262:	98 0f       	add	r25, r24
    4264:	90 83       	st	Z, r25
					pos++;
    4266:	92 e0       	ldi	r25, 0x02	; 2
    4268:	90 93 35 03 	sts	0x0335, r25
					break;
    426c:	37 c3       	rjmp	.+1646   	; 0x48dc <__stack+0x7dd>
				}
				break;
				case 2:
				switch (taste)
    426e:	83 32       	cpi	r24, 0x23	; 35
    4270:	09 f4       	brne	.+2      	; 0x4274 <__stack+0x175>
    4272:	34 c3       	rjmp	.+1640   	; 0x48dc <__stack+0x7dd>
    4274:	8a 32       	cpi	r24, 0x2A	; 42
    4276:	09 f4       	brne	.+2      	; 0x427a <__stack+0x17b>
    4278:	31 c3       	rjmp	.+1634   	; 0x48dc <__stack+0x7dd>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten=(taste-'0')*10;
    427a:	98 2f       	mov	r25, r24
    427c:	99 0f       	add	r25, r25
    427e:	90 56       	subi	r25, 0x60	; 96
    4280:	29 2f       	mov	r18, r25
    4282:	22 0f       	add	r18, r18
    4284:	22 0f       	add	r18, r18
    4286:	92 0f       	add	r25, r18
    4288:	90 93 8c 07 	sts	0x078C, r25
					pos++;
    428c:	93 e0       	ldi	r25, 0x03	; 3
    428e:	90 93 35 03 	sts	0x0335, r25
					break;
    4292:	24 c3       	rjmp	.+1608   	; 0x48dc <__stack+0x7dd>
				}
				break;
				case 3:
				switch (taste)
    4294:	83 32       	cpi	r24, 0x23	; 35
    4296:	41 f0       	breq	.+16     	; 0x42a8 <__stack+0x1a9>
    4298:	8a 32       	cpi	r24, 0x2A	; 42
    429a:	31 f0       	breq	.+12     	; 0x42a8 <__stack+0x1a9>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten+=(taste-'0');
    429c:	ec e8       	ldi	r30, 0x8C	; 140
    429e:	f7 e0       	ldi	r31, 0x07	; 7
    42a0:	40 81       	ld	r20, Z
    42a2:	40 53       	subi	r20, 0x30	; 48
    42a4:	48 0f       	add	r20, r24
    42a6:	40 83       	st	Z, r20
					pos++;
					break;
				}
				pos=0;
    42a8:	10 92 35 03 	sts	0x0335, r1
				if (!(rtc.WStunden>=24) && !(rtc.WMinuten>=60))
    42ac:	40 91 8d 07 	lds	r20, 0x078D
    42b0:	48 31       	cpi	r20, 0x18	; 24
    42b2:	08 f0       	brcs	.+2      	; 0x42b6 <__stack+0x1b7>
    42b4:	13 c3       	rjmp	.+1574   	; 0x48dc <__stack+0x7dd>
    42b6:	40 91 8c 07 	lds	r20, 0x078C
    42ba:	4c 33       	cpi	r20, 0x3C	; 60
    42bc:	08 f0       	brcs	.+2      	; 0x42c0 <__stack+0x1c1>
    42be:	0e c3       	rjmp	.+1564   	; 0x48dc <__stack+0x7dd>
				{
					anzeige&=~(1<<Einstellungsflag);
    42c0:	3f 7e       	andi	r19, 0xEF	; 239
    42c2:	30 93 38 03 	sts	0x0338, r19
    42c6:	20 93 37 03 	sts	0x0337, r18
					rtc.interupts|=(1<<Weckerein);
					rtc.interupts|=(1<<minuteninterupt);
    42ca:	9e 60       	ori	r25, 0x0E	; 14
    42cc:	90 93 8b 07 	sts	0x078B, r25
    42d0:	05 c3       	rjmp	.+1546   	; 0x48dc <__stack+0x7dd>
				}
				break;
			}
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    42d2:	31 ff       	sbrs	r19, 1
    42d4:	4a c0       	rjmp	.+148    	; 0x436a <__stack+0x26b>
		{
			anzeige&=~(1<<Kompasgaineinstellenflag);
    42d6:	a9 01       	movw	r20, r18
    42d8:	5d 7f       	andi	r21, 0xFD	; 253
			anzeige|=(1<<Kompasflag);
    42da:	40 68       	ori	r20, 0x80	; 128
    42dc:	50 93 38 03 	sts	0x0338, r21
    42e0:	40 93 37 03 	sts	0x0337, r20
			switch (taste) {
    42e4:	48 2f       	mov	r20, r24
    42e6:	50 e0       	ldi	r21, 0x00	; 0
    42e8:	fa 01       	movw	r30, r20
    42ea:	f1 97       	sbiw	r30, 0x31	; 49
    42ec:	e8 30       	cpi	r30, 0x08	; 8
    42ee:	f1 05       	cpc	r31, r1
    42f0:	a0 f5       	brcc	.+104    	; 0x435a <__stack+0x25b>
    42f2:	e9 5a       	subi	r30, 0xA9	; 169
    42f4:	ff 4f       	sbci	r31, 0xFF	; 255
    42f6:	0c 94 03 35 	jmp	0x6a06	; 0x6a06 <__tablejump2__>
				case '1':
				kompass.HMC5883L_command(0x01,HMCGAIN1370);
    42fa:	40 e0       	ldi	r20, 0x00	; 0
    42fc:	61 e0       	ldi	r22, 0x01	; 1
    42fe:	82 e9       	ldi	r24, 0x92	; 146
    4300:	97 e0       	ldi	r25, 0x07	; 7
    4302:	97 c4       	rjmp	.+2350   	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4304:	08 95       	ret
				case '2':
				kompass.HMC5883L_command(0x01,HMCGAIN1090);
    4306:	40 e2       	ldi	r20, 0x20	; 32
    4308:	61 e0       	ldi	r22, 0x01	; 1
    430a:	82 e9       	ldi	r24, 0x92	; 146
    430c:	97 e0       	ldi	r25, 0x07	; 7
    430e:	91 c4       	rjmp	.+2338   	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4310:	08 95       	ret
				case '3':
				kompass.HMC5883L_command(0x01,HMCGAIN820);
    4312:	40 e4       	ldi	r20, 0x40	; 64
    4314:	61 e0       	ldi	r22, 0x01	; 1
    4316:	82 e9       	ldi	r24, 0x92	; 146
    4318:	97 e0       	ldi	r25, 0x07	; 7
    431a:	8b c4       	rjmp	.+2326   	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    431c:	08 95       	ret
				case '4':
				kompass.HMC5883L_command(0x01,HMCGAIN660);
    431e:	40 e6       	ldi	r20, 0x60	; 96
    4320:	61 e0       	ldi	r22, 0x01	; 1
    4322:	82 e9       	ldi	r24, 0x92	; 146
    4324:	97 e0       	ldi	r25, 0x07	; 7
    4326:	85 c4       	rjmp	.+2314   	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4328:	08 95       	ret
				case '5':
				kompass.HMC5883L_command(0x01,HMCGAIN440);
    432a:	40 e8       	ldi	r20, 0x80	; 128
    432c:	61 e0       	ldi	r22, 0x01	; 1
    432e:	82 e9       	ldi	r24, 0x92	; 146
    4330:	97 e0       	ldi	r25, 0x07	; 7
    4332:	7f c4       	rjmp	.+2302   	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4334:	08 95       	ret
				case '6':
				kompass.HMC5883L_command(0x01,HMCGAIN390);
    4336:	40 ea       	ldi	r20, 0xA0	; 160
    4338:	61 e0       	ldi	r22, 0x01	; 1
    433a:	82 e9       	ldi	r24, 0x92	; 146
    433c:	97 e0       	ldi	r25, 0x07	; 7
    433e:	79 c4       	rjmp	.+2290   	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4340:	08 95       	ret
				case '7':
				kompass.HMC5883L_command(0x01,HMCGAIN330);
    4342:	40 ec       	ldi	r20, 0xC0	; 192
    4344:	61 e0       	ldi	r22, 0x01	; 1
    4346:	82 e9       	ldi	r24, 0x92	; 146
    4348:	97 e0       	ldi	r25, 0x07	; 7
    434a:	73 c4       	rjmp	.+2278   	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    434c:	08 95       	ret
				case '8':
				kompass.HMC5883L_command(0x01,HMCGAIN230);
    434e:	40 ee       	ldi	r20, 0xE0	; 224
    4350:	61 e0       	ldi	r22, 0x01	; 1
    4352:	82 e9       	ldi	r24, 0x92	; 146
    4354:	97 e0       	ldi	r25, 0x07	; 7
    4356:	6d c4       	rjmp	.+2266   	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4358:	08 95       	ret
				default:
				anzeige &=~(1<<Kompasflag);
    435a:	2f 77       	andi	r18, 0x7F	; 127
    435c:	3d 7f       	andi	r19, 0xFD	; 253
				anzeige|=(1<<Kompasgaineinstellenflag);
    435e:	32 60       	ori	r19, 0x02	; 2
    4360:	30 93 38 03 	sts	0x0338, r19
    4364:	20 93 37 03 	sts	0x0337, r18
				break;
    4368:	b9 c2       	rjmp	.+1394   	; 0x48dc <__stack+0x7dd>
    436a:	a9 01       	movw	r20, r18
    436c:	44 70       	andi	r20, 0x04	; 4
    436e:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag)) && (anzeige&(1<<Timerflag)))
    4370:	44 30       	cpi	r20, 0x04	; 4
    4372:	50 41       	sbci	r21, 0x10	; 16
    4374:	09 f0       	breq	.+2      	; 0x4378 <__stack+0x279>
    4376:	60 c1       	rjmp	.+704    	; 0x4638 <__stack+0x539>
		{
			switch (pos)
    4378:	40 91 35 03 	lds	r20, 0x0335
    437c:	42 30       	cpi	r20, 0x02	; 2
    437e:	09 f4       	brne	.+2      	; 0x4382 <__stack+0x283>
    4380:	6d c0       	rjmp	.+218    	; 0x445c <__stack+0x35d>
    4382:	28 f4       	brcc	.+10     	; 0x438e <__stack+0x28f>
    4384:	44 23       	and	r20, r20
    4386:	61 f0       	breq	.+24     	; 0x43a0 <__stack+0x2a1>
    4388:	41 30       	cpi	r20, 0x01	; 1
    438a:	d9 f1       	breq	.+118    	; 0x4402 <__stack+0x303>
    438c:	a7 c2       	rjmp	.+1358   	; 0x48dc <__stack+0x7dd>
    438e:	44 30       	cpi	r20, 0x04	; 4
    4390:	09 f4       	brne	.+2      	; 0x4394 <__stack+0x295>
    4392:	d1 c0       	rjmp	.+418    	; 0x4536 <__stack+0x437>
    4394:	08 f4       	brcc	.+2      	; 0x4398 <__stack+0x299>
    4396:	9a c0       	rjmp	.+308    	; 0x44cc <__stack+0x3cd>
    4398:	45 30       	cpi	r20, 0x05	; 5
    439a:	09 f4       	brne	.+2      	; 0x439e <__stack+0x29f>
    439c:	04 c1       	rjmp	.+520    	; 0x45a6 <__stack+0x4a7>
    439e:	9e c2       	rjmp	.+1340   	; 0x48dc <__stack+0x7dd>
			{
				case 0:
					switch (taste)
    43a0:	83 32       	cpi	r24, 0x23	; 35
    43a2:	19 f0       	breq	.+6      	; 0x43aa <__stack+0x2ab>
    43a4:	8a 32       	cpi	r24, 0x2A	; 42
    43a6:	41 f0       	breq	.+16     	; 0x43b8 <__stack+0x2b9>
    43a8:	1a c0       	rjmp	.+52     	; 0x43de <__stack+0x2df>
					{
						case '#':
							pos=0;
    43aa:	10 92 35 03 	sts	0x0335, r1
							rtc.Timerzahler=0;
    43ae:	10 92 8f 07 	sts	0x078F, r1
    43b2:	10 92 8e 07 	sts	0x078E, r1
							break;
    43b6:	08 95       	ret
						case '*':
							pos=0;
    43b8:	10 92 35 03 	sts	0x0335, r1
							rtc.Timerzahler++;
    43bc:	ee e8       	ldi	r30, 0x8E	; 142
    43be:	f7 e0       	ldi	r31, 0x07	; 7
    43c0:	40 81       	ld	r20, Z
    43c2:	51 81       	ldd	r21, Z+1	; 0x01
    43c4:	4f 5f       	subi	r20, 0xFF	; 255
    43c6:	5f 4f       	sbci	r21, 0xFF	; 255
    43c8:	51 83       	std	Z+1, r21	; 0x01
    43ca:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    43cc:	3f 7e       	andi	r19, 0xEF	; 239
    43ce:	30 93 38 03 	sts	0x0338, r19
    43d2:	20 93 37 03 	sts	0x0337, r18
							rtc.interupts|=(1<<Timerlauft);
    43d6:	92 62       	ori	r25, 0x22	; 34
    43d8:	90 93 8b 07 	sts	0x078B, r25
							break;
    43dc:	a3 c2       	rjmp	.+1350   	; 0x4924 <__stack+0x825>
						default:
						rtc.Timerzahler=(taste-'0')*10;
    43de:	48 2f       	mov	r20, r24
    43e0:	50 e0       	ldi	r21, 0x00	; 0
    43e2:	40 53       	subi	r20, 0x30	; 48
    43e4:	51 09       	sbc	r21, r1
    43e6:	9a e0       	ldi	r25, 0x0A	; 10
    43e8:	94 9f       	mul	r25, r20
    43ea:	90 01       	movw	r18, r0
    43ec:	95 9f       	mul	r25, r21
    43ee:	30 0d       	add	r19, r0
    43f0:	11 24       	eor	r1, r1
    43f2:	30 93 8f 07 	sts	0x078F, r19
    43f6:	20 93 8e 07 	sts	0x078E, r18
						pos++;
    43fa:	91 e0       	ldi	r25, 0x01	; 1
    43fc:	90 93 35 03 	sts	0x0335, r25
						break;
    4400:	6d c2       	rjmp	.+1242   	; 0x48dc <__stack+0x7dd>
					}
					break;
				case 1:
					switch (taste)
    4402:	83 32       	cpi	r24, 0x23	; 35
    4404:	19 f0       	breq	.+6      	; 0x440c <__stack+0x30d>
    4406:	8a 32       	cpi	r24, 0x2A	; 42
    4408:	41 f0       	breq	.+16     	; 0x441a <__stack+0x31b>
    440a:	1a c0       	rjmp	.+52     	; 0x4440 <__stack+0x341>
					{
						case '#':
							pos=0;
    440c:	10 92 35 03 	sts	0x0335, r1
							rtc.Timerzahler=0;
    4410:	10 92 8f 07 	sts	0x078F, r1
    4414:	10 92 8e 07 	sts	0x078E, r1
							break;
    4418:	08 95       	ret
						case '*':
							pos=0;
    441a:	10 92 35 03 	sts	0x0335, r1
							rtc.Timerzahler++;
    441e:	ee e8       	ldi	r30, 0x8E	; 142
    4420:	f7 e0       	ldi	r31, 0x07	; 7
    4422:	40 81       	ld	r20, Z
    4424:	51 81       	ldd	r21, Z+1	; 0x01
    4426:	4f 5f       	subi	r20, 0xFF	; 255
    4428:	5f 4f       	sbci	r21, 0xFF	; 255
    442a:	51 83       	std	Z+1, r21	; 0x01
    442c:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    442e:	3f 7e       	andi	r19, 0xEF	; 239
    4430:	30 93 38 03 	sts	0x0338, r19
    4434:	20 93 37 03 	sts	0x0337, r18
							rtc.interupts|=(1<<Timerlauft);
    4438:	92 62       	ori	r25, 0x22	; 34
    443a:	90 93 8b 07 	sts	0x078B, r25
							break;
    443e:	72 c2       	rjmp	.+1252   	; 0x4924 <__stack+0x825>
						default:
						rtc.Timerzahler+=(taste-'0');
    4440:	ee e8       	ldi	r30, 0x8E	; 142
    4442:	f7 e0       	ldi	r31, 0x07	; 7
    4444:	20 81       	ld	r18, Z
    4446:	31 81       	ldd	r19, Z+1	; 0x01
    4448:	20 53       	subi	r18, 0x30	; 48
    444a:	31 09       	sbc	r19, r1
    444c:	28 0f       	add	r18, r24
    444e:	31 1d       	adc	r19, r1
    4450:	31 83       	std	Z+1, r19	; 0x01
    4452:	20 83       	st	Z, r18
						pos++;
    4454:	92 e0       	ldi	r25, 0x02	; 2
    4456:	90 93 35 03 	sts	0x0335, r25
						break;
    445a:	40 c2       	rjmp	.+1152   	; 0x48dc <__stack+0x7dd>
					}
					break;
				case 2:
					switch (taste)
    445c:	83 32       	cpi	r24, 0x23	; 35
    445e:	19 f0       	breq	.+6      	; 0x4466 <__stack+0x367>
    4460:	8a 32       	cpi	r24, 0x2A	; 42
    4462:	41 f0       	breq	.+16     	; 0x4474 <__stack+0x375>
    4464:	1a c0       	rjmp	.+52     	; 0x449a <__stack+0x39b>
					{
						case '#':
							pos=0;
    4466:	10 92 35 03 	sts	0x0335, r1
							rtc.Timerzahler=0;
    446a:	10 92 8f 07 	sts	0x078F, r1
    446e:	10 92 8e 07 	sts	0x078E, r1
							break;
    4472:	08 95       	ret
						case '*':
							pos=0;
    4474:	10 92 35 03 	sts	0x0335, r1
							rtc.Timerzahler++;
    4478:	ee e8       	ldi	r30, 0x8E	; 142
    447a:	f7 e0       	ldi	r31, 0x07	; 7
    447c:	40 81       	ld	r20, Z
    447e:	51 81       	ldd	r21, Z+1	; 0x01
    4480:	4f 5f       	subi	r20, 0xFF	; 255
    4482:	5f 4f       	sbci	r21, 0xFF	; 255
    4484:	51 83       	std	Z+1, r21	; 0x01
    4486:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    4488:	3f 7e       	andi	r19, 0xEF	; 239
    448a:	30 93 38 03 	sts	0x0338, r19
    448e:	20 93 37 03 	sts	0x0337, r18
							rtc.interupts|=(1<<Timerlauft);;
    4492:	92 62       	ori	r25, 0x22	; 34
    4494:	90 93 8b 07 	sts	0x078B, r25
							break;
    4498:	45 c2       	rjmp	.+1162   	; 0x4924 <__stack+0x825>
						default:
						rtc.Timerzahler+=(taste-'0')*10*60;
    449a:	ee e8       	ldi	r30, 0x8E	; 142
    449c:	f7 e0       	ldi	r31, 0x07	; 7
    449e:	68 2f       	mov	r22, r24
    44a0:	70 e0       	ldi	r23, 0x00	; 0
    44a2:	60 53       	subi	r22, 0x30	; 48
    44a4:	71 09       	sbc	r23, r1
    44a6:	28 e5       	ldi	r18, 0x58	; 88
    44a8:	32 e0       	ldi	r19, 0x02	; 2
    44aa:	62 9f       	mul	r22, r18
    44ac:	a0 01       	movw	r20, r0
    44ae:	63 9f       	mul	r22, r19
    44b0:	50 0d       	add	r21, r0
    44b2:	72 9f       	mul	r23, r18
    44b4:	50 0d       	add	r21, r0
    44b6:	11 24       	eor	r1, r1
    44b8:	20 81       	ld	r18, Z
    44ba:	31 81       	ldd	r19, Z+1	; 0x01
    44bc:	24 0f       	add	r18, r20
    44be:	35 1f       	adc	r19, r21
    44c0:	31 83       	std	Z+1, r19	; 0x01
    44c2:	20 83       	st	Z, r18
						pos++;
    44c4:	93 e0       	ldi	r25, 0x03	; 3
    44c6:	90 93 35 03 	sts	0x0335, r25
						break;
    44ca:	08 c2       	rjmp	.+1040   	; 0x48dc <__stack+0x7dd>
					}
					break;
				case 3:
					switch (taste)
    44cc:	83 32       	cpi	r24, 0x23	; 35
    44ce:	19 f0       	breq	.+6      	; 0x44d6 <__stack+0x3d7>
    44d0:	8a 32       	cpi	r24, 0x2A	; 42
    44d2:	41 f0       	breq	.+16     	; 0x44e4 <__stack+0x3e5>
    44d4:	1a c0       	rjmp	.+52     	; 0x450a <__stack+0x40b>
					{
						case '#':
							pos=0;
    44d6:	10 92 35 03 	sts	0x0335, r1
							rtc.Timerzahler=0;
    44da:	10 92 8f 07 	sts	0x078F, r1
    44de:	10 92 8e 07 	sts	0x078E, r1
							break;
    44e2:	08 95       	ret
						case '*':
							pos=0;
    44e4:	10 92 35 03 	sts	0x0335, r1
							rtc.Timerzahler++;
    44e8:	ee e8       	ldi	r30, 0x8E	; 142
    44ea:	f7 e0       	ldi	r31, 0x07	; 7
    44ec:	40 81       	ld	r20, Z
    44ee:	51 81       	ldd	r21, Z+1	; 0x01
    44f0:	4f 5f       	subi	r20, 0xFF	; 255
    44f2:	5f 4f       	sbci	r21, 0xFF	; 255
    44f4:	51 83       	std	Z+1, r21	; 0x01
    44f6:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    44f8:	3f 7e       	andi	r19, 0xEF	; 239
    44fa:	30 93 38 03 	sts	0x0338, r19
    44fe:	20 93 37 03 	sts	0x0337, r18
							rtc.interupts|=(1<<Timerlauft);
    4502:	92 62       	ori	r25, 0x22	; 34
    4504:	90 93 8b 07 	sts	0x078B, r25
							break;
    4508:	0d c2       	rjmp	.+1050   	; 0x4924 <__stack+0x825>
						default:
						rtc.Timerzahler+=(taste-'0')*60;
    450a:	ee e8       	ldi	r30, 0x8E	; 142
    450c:	f7 e0       	ldi	r31, 0x07	; 7
    450e:	28 2f       	mov	r18, r24
    4510:	30 e0       	ldi	r19, 0x00	; 0
    4512:	20 53       	subi	r18, 0x30	; 48
    4514:	31 09       	sbc	r19, r1
    4516:	9c e3       	ldi	r25, 0x3C	; 60
    4518:	92 9f       	mul	r25, r18
    451a:	a0 01       	movw	r20, r0
    451c:	93 9f       	mul	r25, r19
    451e:	50 0d       	add	r21, r0
    4520:	11 24       	eor	r1, r1
    4522:	20 81       	ld	r18, Z
    4524:	31 81       	ldd	r19, Z+1	; 0x01
    4526:	24 0f       	add	r18, r20
    4528:	35 1f       	adc	r19, r21
    452a:	31 83       	std	Z+1, r19	; 0x01
    452c:	20 83       	st	Z, r18
						pos++;
    452e:	94 e0       	ldi	r25, 0x04	; 4
    4530:	90 93 35 03 	sts	0x0335, r25
						break;
    4534:	d3 c1       	rjmp	.+934    	; 0x48dc <__stack+0x7dd>
					}
					break;
				case 4:
					switch (taste)
    4536:	83 32       	cpi	r24, 0x23	; 35
    4538:	19 f0       	breq	.+6      	; 0x4540 <__stack+0x441>
    453a:	8a 32       	cpi	r24, 0x2A	; 42
    453c:	41 f0       	breq	.+16     	; 0x454e <__stack+0x44f>
    453e:	1a c0       	rjmp	.+52     	; 0x4574 <__stack+0x475>
					{
						case '#':
							pos=0;
    4540:	10 92 35 03 	sts	0x0335, r1
							rtc.Timerzahler=0;
    4544:	10 92 8f 07 	sts	0x078F, r1
    4548:	10 92 8e 07 	sts	0x078E, r1
							break;
    454c:	08 95       	ret
						case '*':
							pos=0;
    454e:	10 92 35 03 	sts	0x0335, r1
							rtc.Timerzahler++;
    4552:	ee e8       	ldi	r30, 0x8E	; 142
    4554:	f7 e0       	ldi	r31, 0x07	; 7
    4556:	40 81       	ld	r20, Z
    4558:	51 81       	ldd	r21, Z+1	; 0x01
    455a:	4f 5f       	subi	r20, 0xFF	; 255
    455c:	5f 4f       	sbci	r21, 0xFF	; 255
    455e:	51 83       	std	Z+1, r21	; 0x01
    4560:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    4562:	3f 7e       	andi	r19, 0xEF	; 239
    4564:	30 93 38 03 	sts	0x0338, r19
    4568:	20 93 37 03 	sts	0x0337, r18
							rtc.interupts|=(1<<Timerlauft);
    456c:	92 62       	ori	r25, 0x22	; 34
    456e:	90 93 8b 07 	sts	0x078B, r25
							break;
    4572:	d8 c1       	rjmp	.+944    	; 0x4924 <__stack+0x825>
						default:
						rtc.Timerzahler+=(taste-'0')*10*3600;
    4574:	ee e8       	ldi	r30, 0x8E	; 142
    4576:	f7 e0       	ldi	r31, 0x07	; 7
    4578:	68 2f       	mov	r22, r24
    457a:	70 e0       	ldi	r23, 0x00	; 0
    457c:	60 53       	subi	r22, 0x30	; 48
    457e:	71 09       	sbc	r23, r1
    4580:	20 ea       	ldi	r18, 0xA0	; 160
    4582:	3c e8       	ldi	r19, 0x8C	; 140
    4584:	62 9f       	mul	r22, r18
    4586:	a0 01       	movw	r20, r0
    4588:	63 9f       	mul	r22, r19
    458a:	50 0d       	add	r21, r0
    458c:	72 9f       	mul	r23, r18
    458e:	50 0d       	add	r21, r0
    4590:	11 24       	eor	r1, r1
    4592:	20 81       	ld	r18, Z
    4594:	31 81       	ldd	r19, Z+1	; 0x01
    4596:	24 0f       	add	r18, r20
    4598:	35 1f       	adc	r19, r21
    459a:	31 83       	std	Z+1, r19	; 0x01
    459c:	20 83       	st	Z, r18
						pos++;
    459e:	95 e0       	ldi	r25, 0x05	; 5
    45a0:	90 93 35 03 	sts	0x0335, r25
						break;
    45a4:	9b c1       	rjmp	.+822    	; 0x48dc <__stack+0x7dd>
					}
					break;
				case 5:
					switch (taste)
    45a6:	83 32       	cpi	r24, 0x23	; 35
    45a8:	19 f0       	breq	.+6      	; 0x45b0 <__stack+0x4b1>
    45aa:	8a 32       	cpi	r24, 0x2A	; 42
    45ac:	31 f0       	breq	.+12     	; 0x45ba <__stack+0x4bb>
    45ae:	16 c0       	rjmp	.+44     	; 0x45dc <__stack+0x4dd>
					{
						case '#':
							pos=0;
							rtc.Timerzahler=0;
    45b0:	10 92 8f 07 	sts	0x078F, r1
    45b4:	10 92 8e 07 	sts	0x078E, r1
							break;
    45b8:	26 c0       	rjmp	.+76     	; 0x4606 <__stack+0x507>
						case '*':
							pos=0;
							rtc.Timerzahler++;
    45ba:	ee e8       	ldi	r30, 0x8E	; 142
    45bc:	f7 e0       	ldi	r31, 0x07	; 7
    45be:	40 81       	ld	r20, Z
    45c0:	51 81       	ldd	r21, Z+1	; 0x01
    45c2:	4f 5f       	subi	r20, 0xFF	; 255
    45c4:	5f 4f       	sbci	r21, 0xFF	; 255
    45c6:	51 83       	std	Z+1, r21	; 0x01
    45c8:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    45ca:	3f 7e       	andi	r19, 0xEF	; 239
    45cc:	30 93 38 03 	sts	0x0338, r19
    45d0:	20 93 37 03 	sts	0x0337, r18
							rtc.interupts|=(1<<Timerlauft);
    45d4:	92 62       	ori	r25, 0x22	; 34
    45d6:	90 93 8b 07 	sts	0x078B, r25
							break;
    45da:	15 c0       	rjmp	.+42     	; 0x4606 <__stack+0x507>
						default:
						rtc.Timerzahler+=(taste-'0')*3600;
    45dc:	ee e8       	ldi	r30, 0x8E	; 142
    45de:	f7 e0       	ldi	r31, 0x07	; 7
    45e0:	68 2f       	mov	r22, r24
    45e2:	70 e0       	ldi	r23, 0x00	; 0
    45e4:	60 53       	subi	r22, 0x30	; 48
    45e6:	71 09       	sbc	r23, r1
    45e8:	20 e1       	ldi	r18, 0x10	; 16
    45ea:	3e e0       	ldi	r19, 0x0E	; 14
    45ec:	62 9f       	mul	r22, r18
    45ee:	a0 01       	movw	r20, r0
    45f0:	63 9f       	mul	r22, r19
    45f2:	50 0d       	add	r21, r0
    45f4:	72 9f       	mul	r23, r18
    45f6:	50 0d       	add	r21, r0
    45f8:	11 24       	eor	r1, r1
    45fa:	20 81       	ld	r18, Z
    45fc:	31 81       	ldd	r19, Z+1	; 0x01
    45fe:	24 0f       	add	r18, r20
    4600:	35 1f       	adc	r19, r21
    4602:	31 83       	std	Z+1, r19	; 0x01
    4604:	20 83       	st	Z, r18
						pos++;
						break;
					}
					pos=0;
    4606:	10 92 35 03 	sts	0x0335, r1
					rtc.Timerzahler++;
    460a:	ee e8       	ldi	r30, 0x8E	; 142
    460c:	f7 e0       	ldi	r31, 0x07	; 7
    460e:	20 81       	ld	r18, Z
    4610:	31 81       	ldd	r19, Z+1	; 0x01
    4612:	2f 5f       	subi	r18, 0xFF	; 255
    4614:	3f 4f       	sbci	r19, 0xFF	; 255
    4616:	31 83       	std	Z+1, r19	; 0x01
    4618:	20 83       	st	Z, r18
					anzeige&=~(1<<Einstellungsflag);
    461a:	20 91 37 03 	lds	r18, 0x0337
    461e:	30 91 38 03 	lds	r19, 0x0338
    4622:	3f 7e       	andi	r19, 0xEF	; 239
    4624:	30 93 38 03 	sts	0x0338, r19
    4628:	20 93 37 03 	sts	0x0337, r18
					rtc.interupts|=(1<<Timerlauft);
    462c:	eb e8       	ldi	r30, 0x8B	; 139
    462e:	f7 e0       	ldi	r31, 0x07	; 7
    4630:	90 81       	ld	r25, Z
    4632:	90 62       	ori	r25, 0x20	; 32
    4634:	90 83       	st	Z, r25
					break;
    4636:	52 c1       	rjmp	.+676    	; 0x48dc <__stack+0x7dd>
				default:
					break;
			}
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    4638:	23 ff       	sbrs	r18, 3
    463a:	22 c0       	rjmp	.+68     	; 0x4680 <__stack+0x581>
		{
			if (taste=='*')
    463c:	8a 32       	cpi	r24, 0x2A	; 42
    463e:	59 f4       	brne	.+22     	; 0x4656 <__stack+0x557>
			{
				if ((rtc.interupts&(1<<Stoppuhrlauft)))
    4640:	96 ff       	sbrs	r25, 6
    4642:	05 c0       	rjmp	.+10     	; 0x464e <__stack+0x54f>
				{
					rtc.interupts&=~(1<<Stoppuhrlauft);
    4644:	9f 7b       	andi	r25, 0xBF	; 191
    4646:	92 60       	ori	r25, 0x02	; 2
    4648:	90 93 8b 07 	sts	0x078B, r25
    464c:	6b c1       	rjmp	.+726    	; 0x4924 <__stack+0x825>
				}
				else{
					rtc.interupts|=(1<<Stoppuhrlauft);
    464e:	92 64       	ori	r25, 0x42	; 66
    4650:	90 93 8b 07 	sts	0x078B, r25
    4654:	67 c1       	rjmp	.+718    	; 0x4924 <__stack+0x825>
				}
			}
			else if (taste=='0')
    4656:	80 33       	cpi	r24, 0x30	; 48
    4658:	29 f4       	brne	.+10     	; 0x4664 <__stack+0x565>
			{
				rtc.Stoppuhrzahler=0;
    465a:	10 92 91 07 	sts	0x0791, r1
    465e:	10 92 90 07 	sts	0x0790, r1
    4662:	08 95       	ret
			}
			else if (taste=='#')
    4664:	83 32       	cpi	r24, 0x23	; 35
    4666:	09 f0       	breq	.+2      	; 0x466a <__stack+0x56b>
    4668:	63 c1       	rjmp	.+710    	; 0x4930 <__stack+0x831>
			{
				anzeige&=~((1<<Stoppuhrflag));
				rtc.interupts&=~(1<<Stoppuhrlauft);
    466a:	9f 7b       	andi	r25, 0xBF	; 191
    466c:	92 60       	ori	r25, 0x02	; 2
    466e:	90 93 8b 07 	sts	0x078B, r25
			{
				rtc.Stoppuhrzahler=0;
			}
			else if (taste=='#')
			{
				anzeige&=~((1<<Stoppuhrflag));
    4672:	27 7f       	andi	r18, 0xF7	; 247
				rtc.interupts&=~(1<<Stoppuhrlauft);
				anzeige|=(1<<menueflag);
    4674:	30 62       	ori	r19, 0x20	; 32
    4676:	30 93 38 03 	sts	0x0338, r19
    467a:	20 93 37 03 	sts	0x0337, r18
    467e:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflag)))
    4680:	21 ff       	sbrs	r18, 1
    4682:	26 c0       	rjmp	.+76     	; 0x46d0 <__stack+0x5d1>
		{
			if (taste=='#')
    4684:	83 32       	cpi	r24, 0x23	; 35
    4686:	49 f4       	brne	.+18     	; 0x469a <__stack+0x59b>
			{
				pos=0;
    4688:	10 92 35 03 	sts	0x0335, r1
				anzeige&=~(1<<Uhrflag);
    468c:	2d 7f       	andi	r18, 0xFD	; 253
				anzeige|=(1<<menueflag);
    468e:	30 62       	ori	r19, 0x20	; 32
    4690:	30 93 38 03 	sts	0x0338, r19
    4694:	20 93 37 03 	sts	0x0337, r18
    4698:	08 95       	ret
			}
			else if (taste=='*')
    469a:	8a 32       	cpi	r24, 0x2A	; 42
    469c:	49 f4       	brne	.+18     	; 0x46b0 <__stack+0x5b1>
			{
				pos++;
    469e:	80 91 35 03 	lds	r24, 0x0335
    46a2:	8f 5f       	subi	r24, 0xFF	; 255
				if (pos>1)
    46a4:	82 30       	cpi	r24, 0x02	; 2
    46a6:	08 f4       	brcc	.+2      	; 0x46aa <__stack+0x5ab>
    46a8:	3b c1       	rjmp	.+630    	; 0x4920 <__stack+0x821>
				{
					pos=0;
    46aa:	10 92 35 03 	sts	0x0335, r1
    46ae:	3a c1       	rjmp	.+628    	; 0x4924 <__stack+0x825>
				}
			}
			else if (taste=='0')
    46b0:	80 33       	cpi	r24, 0x30	; 48
    46b2:	09 f0       	breq	.+2      	; 0x46b6 <__stack+0x5b7>
    46b4:	3d c1       	rjmp	.+634    	; 0x4930 <__stack+0x831>
			{
				if (LED.ison())
    46b6:	84 e6       	ldi	r24, 0x64	; 100
    46b8:	93 e0       	ldi	r25, 0x03	; 3
    46ba:	b8 d6       	rcall	.+3440   	; 0x542c <_ZN6Output4isonEv>
    46bc:	88 23       	and	r24, r24
    46be:	21 f0       	breq	.+8      	; 0x46c8 <__stack+0x5c9>
				{
					LED.off();
    46c0:	84 e6       	ldi	r24, 0x64	; 100
    46c2:	93 e0       	ldi	r25, 0x03	; 3
    46c4:	f6 c6       	rjmp	.+3564   	; 0x54b2 <_ZN6Output3offEv>
    46c6:	08 95       	ret
				}
				else{
					LED.on();
    46c8:	84 e6       	ldi	r24, 0x64	; 100
    46ca:	93 e0       	ldi	r25, 0x03	; 3
    46cc:	66 c6       	rjmp	.+3276   	; 0x539a <_ZN6Output2onEv>
    46ce:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Kompasflag)))
    46d0:	27 ff       	sbrs	r18, 7
    46d2:	1a c0       	rjmp	.+52     	; 0x4708 <__stack+0x609>
		{
			if (taste=='#')
    46d4:	83 32       	cpi	r24, 0x23	; 35
    46d6:	41 f4       	brne	.+16     	; 0x46e8 <__stack+0x5e9>
			{
				anzeige&=~(1<<Kompasflag);
    46d8:	c9 01       	movw	r24, r18
    46da:	8f 77       	andi	r24, 0x7F	; 127
				anzeige|=(1<<menueflag);
    46dc:	90 62       	ori	r25, 0x20	; 32
    46de:	90 93 38 03 	sts	0x0338, r25
    46e2:	80 93 37 03 	sts	0x0337, r24
    46e6:	08 95       	ret
			}
			else if (taste=='0')
    46e8:	80 33       	cpi	r24, 0x30	; 48
    46ea:	09 f0       	breq	.+2      	; 0x46ee <__stack+0x5ef>
    46ec:	f7 c0       	rjmp	.+494    	; 0x48dc <__stack+0x7dd>
			{
				if (LED.ison())
    46ee:	84 e6       	ldi	r24, 0x64	; 100
    46f0:	93 e0       	ldi	r25, 0x03	; 3
    46f2:	9c d6       	rcall	.+3384   	; 0x542c <_ZN6Output4isonEv>
    46f4:	88 23       	and	r24, r24
    46f6:	21 f0       	breq	.+8      	; 0x4700 <__stack+0x601>
				{
					LED.off();
    46f8:	84 e6       	ldi	r24, 0x64	; 100
    46fa:	93 e0       	ldi	r25, 0x03	; 3
    46fc:	da c6       	rjmp	.+3508   	; 0x54b2 <_ZN6Output3offEv>
    46fe:	08 95       	ret
				}
				else{
					LED.on();
    4700:	84 e6       	ldi	r24, 0x64	; 100
    4702:	93 e0       	ldi	r25, 0x03	; 3
    4704:	4a c6       	rjmp	.+3220   	; 0x539a <_ZN6Output2onEv>
    4706:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Fahradflag)))
    4708:	20 ff       	sbrs	r18, 0
    470a:	37 c0       	rjmp	.+110    	; 0x477a <__stack+0x67b>
		{
			if (taste=='#')
    470c:	83 32       	cpi	r24, 0x23	; 35
    470e:	51 f4       	brne	.+20     	; 0x4724 <__stack+0x625>
			{
				anzeige&=~(1<<Fahradflag);
    4710:	c9 01       	movw	r24, r18
    4712:	8e 7f       	andi	r24, 0xFE	; 254
				anzeige|=(1<<menueflag);
    4714:	90 62       	ori	r25, 0x20	; 32
    4716:	90 93 38 03 	sts	0x0338, r25
    471a:	80 93 37 03 	sts	0x0337, r24
				inittimer(2);
    471e:	82 e0       	ldi	r24, 0x02	; 2
    4720:	0f c9       	rjmp	.-3554   	; 0x3940 <_Z9inittimerh>
    4722:	08 95       	ret
			}
			else if (taste=='*')
    4724:	8a 32       	cpi	r24, 0x2A	; 42
    4726:	c9 f4       	brne	.+50     	; 0x475a <__stack+0x65b>
			{
				maxgeschw = 0;
    4728:	10 92 28 03 	sts	0x0328, r1
    472c:	10 92 29 03 	sts	0x0329, r1
    4730:	10 92 2a 03 	sts	0x032A, r1
    4734:	10 92 2b 03 	sts	0x032B, r1
				strecke = 0;
    4738:	10 92 2c 03 	sts	0x032C, r1
    473c:	10 92 2d 03 	sts	0x032D, r1
    4740:	10 92 2e 03 	sts	0x032E, r1
    4744:	10 92 2f 03 	sts	0x032F, r1
				Fahrtzeit = 0;
    4748:	10 92 24 03 	sts	0x0324, r1
    474c:	10 92 25 03 	sts	0x0325, r1
    4750:	10 92 26 03 	sts	0x0326, r1
    4754:	10 92 27 03 	sts	0x0327, r1
    4758:	e5 c0       	rjmp	.+458    	; 0x4924 <__stack+0x825>
			}
			else if (taste=='0')
    475a:	80 33       	cpi	r24, 0x30	; 48
    475c:	09 f0       	breq	.+2      	; 0x4760 <__stack+0x661>
    475e:	e8 c0       	rjmp	.+464    	; 0x4930 <__stack+0x831>
			{
				if (LED.ison())
    4760:	84 e6       	ldi	r24, 0x64	; 100
    4762:	93 e0       	ldi	r25, 0x03	; 3
    4764:	63 d6       	rcall	.+3270   	; 0x542c <_ZN6Output4isonEv>
    4766:	88 23       	and	r24, r24
    4768:	21 f0       	breq	.+8      	; 0x4772 <__stack+0x673>
				{
					LED.off();
    476a:	84 e6       	ldi	r24, 0x64	; 100
    476c:	93 e0       	ldi	r25, 0x03	; 3
    476e:	a1 c6       	rjmp	.+3394   	; 0x54b2 <_ZN6Output3offEv>
    4770:	08 95       	ret
				}
				else{
					LED.on();
    4772:	84 e6       	ldi	r24, 0x64	; 100
    4774:	93 e0       	ldi	r25, 0x03	; 3
    4776:	11 c6       	rjmp	.+3106   	; 0x539a <_ZN6Output2onEv>
    4778:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Druckflag)))
    477a:	32 ff       	sbrs	r19, 2
    477c:	29 c0       	rjmp	.+82     	; 0x47d0 <__stack+0x6d1>
		{
			if (taste=='#')
    477e:	83 32       	cpi	r24, 0x23	; 35
    4780:	41 f4       	brne	.+16     	; 0x4792 <__stack+0x693>
			{
				anzeige&=~(1<<Druckflag);
    4782:	c9 01       	movw	r24, r18
    4784:	9b 7f       	andi	r25, 0xFB	; 251
				anzeige|=(1<<menueflag);
    4786:	90 62       	ori	r25, 0x20	; 32
    4788:	90 93 38 03 	sts	0x0338, r25
    478c:	80 93 37 03 	sts	0x0337, r24
    4790:	08 95       	ret
			}
			else if (taste=='*')
    4792:	8a 32       	cpi	r24, 0x2A	; 42
    4794:	69 f4       	brne	.+26     	; 0x47b0 <__stack+0x6b1>
			{
				Baro.set_Pressure0(Baro.Press);
    4796:	40 91 50 03 	lds	r20, 0x0350
    479a:	50 91 51 03 	lds	r21, 0x0351
    479e:	60 91 52 03 	lds	r22, 0x0352
    47a2:	70 91 53 03 	lds	r23, 0x0353
    47a6:	80 e5       	ldi	r24, 0x50	; 80
    47a8:	93 e0       	ldi	r25, 0x03	; 3
    47aa:	0e 94 52 2c 	call	0x58a4	; 0x58a4 <_ZN8Pressure13set_Pressure0Ed>
    47ae:	ba c0       	rjmp	.+372    	; 0x4924 <__stack+0x825>
			}
			else if (taste=='0')
    47b0:	80 33       	cpi	r24, 0x30	; 48
    47b2:	09 f0       	breq	.+2      	; 0x47b6 <__stack+0x6b7>
    47b4:	bd c0       	rjmp	.+378    	; 0x4930 <__stack+0x831>
			{
				if (LED.ison())
    47b6:	84 e6       	ldi	r24, 0x64	; 100
    47b8:	93 e0       	ldi	r25, 0x03	; 3
    47ba:	38 d6       	rcall	.+3184   	; 0x542c <_ZN6Output4isonEv>
    47bc:	88 23       	and	r24, r24
    47be:	21 f0       	breq	.+8      	; 0x47c8 <__stack+0x6c9>
				{
					LED.off();
    47c0:	84 e6       	ldi	r24, 0x64	; 100
    47c2:	93 e0       	ldi	r25, 0x03	; 3
    47c4:	76 c6       	rjmp	.+3308   	; 0x54b2 <_ZN6Output3offEv>
    47c6:	08 95       	ret
				}
				else{
					LED.on();
    47c8:	84 e6       	ldi	r24, 0x64	; 100
    47ca:	93 e0       	ldi	r25, 0x03	; 3
    47cc:	e6 c5       	rjmp	.+3020   	; 0x539a <_ZN6Output2onEv>
    47ce:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Timerflag)))
    47d0:	22 ff       	sbrs	r18, 2
    47d2:	23 c0       	rjmp	.+70     	; 0x481a <__stack+0x71b>
		{
			if (taste=='#')
    47d4:	83 32       	cpi	r24, 0x23	; 35
    47d6:	09 f0       	breq	.+2      	; 0x47da <__stack+0x6db>
    47d8:	81 c0       	rjmp	.+258    	; 0x48dc <__stack+0x7dd>
			{
				anzeige&=~((1<<Timerflag)|(1<<blinkflag));
    47da:	2b 7f       	andi	r18, 0xFB	; 251
    47dc:	3f 7b       	andi	r19, 0xBF	; 191
    47de:	30 93 38 03 	sts	0x0338, r19
    47e2:	20 93 37 03 	sts	0x0337, r18
				rtc.interupts&=~((1<<Timerlauft)|(1<<Alarm));
    47e6:	89 2f       	mov	r24, r25
    47e8:	8e 7d       	andi	r24, 0xDE	; 222
    47ea:	82 60       	ori	r24, 0x02	; 2
    47ec:	80 93 8b 07 	sts	0x078B, r24
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    47f0:	60 e0       	ldi	r22, 0x00	; 0
    47f2:	82 e7       	ldi	r24, 0x72	; 114
    47f4:	93 e0       	ldi	r25, 0x03	; 3
    47f6:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
				LED.off();
    47fa:	84 e6       	ldi	r24, 0x64	; 100
    47fc:	93 e0       	ldi	r25, 0x03	; 3
    47fe:	59 d6       	rcall	.+3250   	; 0x54b2 <_ZN6Output3offEv>
				Vibrationsmotor.off();
    4800:	82 e6       	ldi	r24, 0x62	; 98
    4802:	93 e0       	ldi	r25, 0x03	; 3
    4804:	56 d6       	rcall	.+3244   	; 0x54b2 <_ZN6Output3offEv>
				
				anzeige|=(1<<menueflag);
    4806:	80 91 37 03 	lds	r24, 0x0337
    480a:	90 91 38 03 	lds	r25, 0x0338
    480e:	90 62       	ori	r25, 0x20	; 32
    4810:	90 93 38 03 	sts	0x0338, r25
    4814:	80 93 37 03 	sts	0x0337, r24
    4818:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflaggross)))
    481a:	25 ff       	sbrs	r18, 5
    481c:	22 c0       	rjmp	.+68     	; 0x4862 <__stack+0x763>
		{
			if (taste=='#')
    481e:	83 32       	cpi	r24, 0x23	; 35
    4820:	41 f4       	brne	.+16     	; 0x4832 <__stack+0x733>
			{
				anzeige&=~(1<<Uhrflaggross);
    4822:	c9 01       	movw	r24, r18
    4824:	8f 7d       	andi	r24, 0xDF	; 223
				anzeige|=(1<<menueflag);
    4826:	90 62       	ori	r25, 0x20	; 32
    4828:	90 93 38 03 	sts	0x0338, r25
    482c:	80 93 37 03 	sts	0x0337, r24
    4830:	08 95       	ret
			}
			else if (taste=='0')
    4832:	80 33       	cpi	r24, 0x30	; 48
    4834:	09 f0       	breq	.+2      	; 0x4838 <__stack+0x739>
    4836:	52 c0       	rjmp	.+164    	; 0x48dc <__stack+0x7dd>
			{
				if (LED.ison())
    4838:	84 e6       	ldi	r24, 0x64	; 100
    483a:	93 e0       	ldi	r25, 0x03	; 3
    483c:	f7 d5       	rcall	.+3054   	; 0x542c <_ZN6Output4isonEv>
    483e:	88 23       	and	r24, r24
    4840:	41 f0       	breq	.+16     	; 0x4852 <__stack+0x753>
				{
					LED.off();
    4842:	84 e6       	ldi	r24, 0x64	; 100
    4844:	93 e0       	ldi	r25, 0x03	; 3
    4846:	35 d6       	rcall	.+3178   	; 0x54b2 <_ZN6Output3offEv>
					Lautsprecher.off();
    4848:	8d e3       	ldi	r24, 0x3D	; 61
    484a:	93 e0       	ldi	r25, 0x03	; 3
    484c:	0c 94 ac 2d 	jmp	0x5b58	; 0x5b58 <_ZN5SOUND3offEv>
    4850:	08 95       	ret
				}
				else{
					LED.on();
    4852:	84 e6       	ldi	r24, 0x64	; 100
    4854:	93 e0       	ldi	r25, 0x03	; 3
    4856:	a1 d5       	rcall	.+2882   	; 0x539a <_ZN6Output2onEv>
					Lautsprecher.on();
    4858:	8d e3       	ldi	r24, 0x3D	; 61
    485a:	93 e0       	ldi	r25, 0x03	; 3
    485c:	0c 94 a3 2d 	jmp	0x5b46	; 0x5b46 <_ZN5SOUND2onEv>
    4860:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Wanderflag)))
    4862:	33 ff       	sbrs	r19, 3
    4864:	0a c0       	rjmp	.+20     	; 0x487a <__stack+0x77b>
		{
			if (taste=='#')
    4866:	83 32       	cpi	r24, 0x23	; 35
    4868:	c9 f5       	brne	.+114    	; 0x48dc <__stack+0x7dd>
			{
				anzeige &= ~(1<<Wanderflag);
    486a:	c9 01       	movw	r24, r18
    486c:	97 7f       	andi	r25, 0xF7	; 247
				anzeige |= (1<<menueflag);
    486e:	90 62       	ori	r25, 0x20	; 32
    4870:	90 93 38 03 	sts	0x0338, r25
    4874:	80 93 37 03 	sts	0x0337, r24
    4878:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    487a:	26 ff       	sbrs	r18, 6
    487c:	26 c0       	rjmp	.+76     	; 0x48ca <__stack+0x7cb>
		{
			if (taste=='#')
    487e:	83 32       	cpi	r24, 0x23	; 35
    4880:	41 f4       	brne	.+16     	; 0x4892 <__stack+0x793>
			{
				anzeige&=~(1<<Weckeranzeigeflag);
    4882:	c9 01       	movw	r24, r18
    4884:	8f 7b       	andi	r24, 0xBF	; 191
				anzeige|=(1<<menueflag);
    4886:	90 62       	ori	r25, 0x20	; 32
    4888:	90 93 38 03 	sts	0x0338, r25
    488c:	80 93 37 03 	sts	0x0337, r24
    4890:	08 95       	ret
			}
			if (taste=='*')
    4892:	8a 32       	cpi	r24, 0x2A	; 42
    4894:	09 f0       	breq	.+2      	; 0x4898 <__stack+0x799>
    4896:	4c c0       	rjmp	.+152    	; 0x4930 <__stack+0x831>
			{
				if (rtc.interupts&(1<<Weckeractiv))
    4898:	94 ff       	sbrs	r25, 4
    489a:	06 c0       	rjmp	.+12     	; 0x48a8 <__stack+0x7a9>
				{
					rtc.interupts &= ~((1<<Weckerein) | (1<<Weckeractiv));
    489c:	89 2f       	mov	r24, r25
    489e:	87 7e       	andi	r24, 0xE7	; 231
    48a0:	82 60       	ori	r24, 0x02	; 2
    48a2:	80 93 8b 07 	sts	0x078B, r24
    48a6:	0b c0       	rjmp	.+22     	; 0x48be <__stack+0x7bf>
				}
				else if ((rtc.interupts&(1<<Weckerein)))
    48a8:	93 ff       	sbrs	r25, 3
    48aa:	06 c0       	rjmp	.+12     	; 0x48b8 <__stack+0x7b9>
				{
					rtc.interupts &= ~(1<<Weckerein);
    48ac:	89 2f       	mov	r24, r25
    48ae:	87 7f       	andi	r24, 0xF7	; 247
    48b0:	82 60       	ori	r24, 0x02	; 2
    48b2:	80 93 8b 07 	sts	0x078B, r24
    48b6:	03 c0       	rjmp	.+6      	; 0x48be <__stack+0x7bf>
				}
				else{
					rtc.interupts |= (1<<Weckerein);
    48b8:	9a 60       	ori	r25, 0x0A	; 10
    48ba:	90 93 8b 07 	sts	0x078B, r25
				}
				rtc.interupts|=(1<<minuteninterupt);
    48be:	eb e8       	ldi	r30, 0x8B	; 139
    48c0:	f7 e0       	ldi	r31, 0x07	; 7
    48c2:	80 81       	ld	r24, Z
    48c4:	84 60       	ori	r24, 0x04	; 4
    48c6:	80 83       	st	Z, r24
    48c8:	2d c0       	rjmp	.+90     	; 0x4924 <__stack+0x825>
			}
		}
		else if (anzeige==0)
    48ca:	23 2b       	or	r18, r19
    48cc:	39 f4       	brne	.+14     	; 0x48dc <__stack+0x7dd>
		{
			anzeige|=(1<<menueflag);
    48ce:	80 e0       	ldi	r24, 0x00	; 0
    48d0:	90 e2       	ldi	r25, 0x20	; 32
    48d2:	90 93 38 03 	sts	0x0338, r25
    48d6:	80 93 37 03 	sts	0x0337, r24
    48da:	08 95       	ret
		}
		if ((anzeige&(1<<blinkflag)))
    48dc:	20 91 37 03 	lds	r18, 0x0337
    48e0:	30 91 38 03 	lds	r19, 0x0338
    48e4:	36 ff       	sbrs	r19, 6
    48e6:	24 c0       	rjmp	.+72     	; 0x4930 <__stack+0x831>
		{
			if (taste=='*')
    48e8:	8a 32       	cpi	r24, 0x2A	; 42
    48ea:	11 f5       	brne	.+68     	; 0x4930 <__stack+0x831>
			{
				anzeige &=~(1<<blinkflag);
    48ec:	3f 7b       	andi	r19, 0xBF	; 191
    48ee:	30 93 38 03 	sts	0x0338, r19
    48f2:	20 93 37 03 	sts	0x0337, r18
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    48f6:	60 e0       	ldi	r22, 0x00	; 0
    48f8:	82 e7       	ldi	r24, 0x72	; 114
    48fa:	93 e0       	ldi	r25, 0x03	; 3
    48fc:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
				LED.off();
    4900:	84 e6       	ldi	r24, 0x64	; 100
    4902:	93 e0       	ldi	r25, 0x03	; 3
    4904:	d6 d5       	rcall	.+2988   	; 0x54b2 <_ZN6Output3offEv>
				Vibrationsmotor.off();
    4906:	82 e6       	ldi	r24, 0x62	; 98
    4908:	93 e0       	ldi	r25, 0x03	; 3
    490a:	d3 d5       	rcall	.+2982   	; 0x54b2 <_ZN6Output3offEv>
				if ((rtc.interupts&(1<<Weckeractiv)))
    490c:	80 91 8b 07 	lds	r24, 0x078B
    4910:	98 2f       	mov	r25, r24
    4912:	98 71       	andi	r25, 0x18	; 24
				{
					if ((rtc.interupts&(1<<Weckerein)))
    4914:	98 31       	cpi	r25, 0x18	; 24
    4916:	61 f4       	brne	.+24     	; 0x4930 <__stack+0x831>
					{
						rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
						rtc.interupts &= ~(1<<Alarm);
    4918:	86 7e       	andi	r24, 0xE6	; 230
    491a:	80 93 8b 07 	sts	0x078B, r24
    491e:	08 95       	ret
				anzeige&=~(1<<Uhrflag);
				anzeige|=(1<<menueflag);
			}
			else if (taste=='*')
			{
				pos++;
    4920:	80 93 35 03 	sts	0x0335, r24
		}
		else if (anzeige==0)
		{
			anzeige|=(1<<menueflag);
		}
		if ((anzeige&(1<<blinkflag)))
    4924:	20 91 37 03 	lds	r18, 0x0337
    4928:	30 91 38 03 	lds	r19, 0x0338
    492c:	36 fd       	sbrc	r19, 6
    492e:	de cf       	rjmp	.-68     	; 0x48ec <__stack+0x7ed>
    4930:	08 95       	ret

00004932 <main>:
void eingabehandler(uint8_t taste);

int main(void)
{
	//initialisierung
	initialisierung();
    4932:	21 d8       	rcall	.-4030   	; 0x3976 <_Z15initialisierungv>
    while(1)
    {
         //Steuerung der interupts durch Handler
         maininterupthandler();
    4934:	a3 d8       	rcall	.-3770   	; 0x3a7c <_Z19maininterupthandlerv>
         //Steuerung der Anzeige alle Sekunde zur aktualisierung maximale Aktulisierungsrate ist 1Hz
         anzeigehandler();
    4936:	d8 d8       	rcall	.-3664   	; 0x3ae8 <_Z14anzeigehandlerv>
         //Tasthandler
         eingabehandler(Tastatur.Taster());
    4938:	86 e6       	ldi	r24, 0x66	; 102
    493a:	93 e0       	ldi	r25, 0x03	; 3
    493c:	bc d0       	rcall	.+376    	; 0x4ab6 <_ZN9Interface6TasterEv>
    493e:	66 db       	rcall	.-2356   	; 0x400c <_Z14eingabehandlerh>
    4940:	f9 cf       	rjmp	.-14     	; 0x4934 <main+0x2>

00004942 <_GLOBAL__sub_I_kompass>:
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    4942:	82 e9       	ldi	r24, 0x92	; 146
    4944:	97 e0       	ldi	r25, 0x07	; 7
    4946:	8f d1       	rcall	.+798    	; 0x4c66 <_ZN7KompassC1Ev>

#include "RTC.h"
RTC rtc;
    4948:	83 e7       	ldi	r24, 0x73	; 115
    494a:	97 e0       	ldi	r25, 0x07	; 7
    494c:	0e 94 dc 2c 	call	0x59b8	; 0x59b8 <_ZN3RTCC1Ev>

#include "Display.h"
Display oled;
    4950:	82 e7       	ldi	r24, 0x72	; 114
    4952:	93 e0       	ldi	r25, 0x03	; 3
    4954:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <_ZN7DisplayC1Ev>

#include "Interface.h"
Interface Tastatur;
    4958:	86 e6       	ldi	r24, 0x66	; 102
    495a:	93 e0       	ldi	r25, 0x03	; 3
    495c:	71 d0       	rcall	.+226    	; 0x4a40 <_ZN9InterfaceC1Ev>

#include "Output.h"
Output LED('B',PORTB1);
    495e:	41 e0       	ldi	r20, 0x01	; 1
    4960:	62 e4       	ldi	r22, 0x42	; 66
    4962:	84 e6       	ldi	r24, 0x64	; 100
    4964:	93 e0       	ldi	r25, 0x03	; 3
    4966:	d6 d4       	rcall	.+2476   	; 0x5314 <_ZN6OutputC1Ehh>
Output Vibrationsmotor('B',PORTB2);
    4968:	42 e0       	ldi	r20, 0x02	; 2
    496a:	62 e4       	ldi	r22, 0x42	; 66
    496c:	82 e6       	ldi	r24, 0x62	; 98
    496e:	93 e0       	ldi	r25, 0x03	; 3
    4970:	d1 d4       	rcall	.+2466   	; 0x5314 <_ZN6OutputC1Ehh>
Output IRLED('D',PORTD7);
    4972:	47 e0       	ldi	r20, 0x07	; 7
    4974:	64 e4       	ldi	r22, 0x44	; 68
    4976:	80 e6       	ldi	r24, 0x60	; 96
    4978:	93 e0       	ldi	r25, 0x03	; 3
    497a:	cc d4       	rcall	.+2456   	; 0x5314 <_ZN6OutputC1Ehh>
Output Sound('B',PORTB3);
    497c:	43 e0       	ldi	r20, 0x03	; 3
    497e:	62 e4       	ldi	r22, 0x42	; 66
    4980:	8e e5       	ldi	r24, 0x5E	; 94
    4982:	93 e0       	ldi	r25, 0x03	; 3
    4984:	c7 d4       	rcall	.+2446   	; 0x5314 <_ZN6OutputC1Ehh>

#include "Pressure.h"
Pressure Baro;
    4986:	80 e5       	ldi	r24, 0x50	; 80
    4988:	93 e0       	ldi	r25, 0x03	; 3
    498a:	5b d6       	rcall	.+3254   	; 0x5642 <_ZN8PressureC1Ev>

#include "LSM303D.h"
LSM303D Accelerometer;
    498c:	8f e3       	ldi	r24, 0x3F	; 63
    498e:	93 e0       	ldi	r25, 0x03	; 3
    4990:	a7 d4       	rcall	.+2382   	; 0x52e0 <_ZN7LSM303DC1Ev>

#include "SOUND.h"
SOUND Lautsprecher;
    4992:	8d e3       	ldi	r24, 0x3D	; 61
    4994:	93 e0       	ldi	r25, 0x03	; 3
    4996:	0c 94 cc 2d 	jmp	0x5b98	; 0x5b98 <_ZN5SOUNDC1Ev>
    499a:	08 95       	ret

0000499c <_GLOBAL__sub_D_kompass>:
    499c:	8d e3       	ldi	r24, 0x3D	; 61
    499e:	93 e0       	ldi	r25, 0x03	; 3
    49a0:	0e 94 a2 2d 	call	0x5b44	; 0x5b44 <_ZN5SOUNDD1Ev>

#include "Pressure.h"
Pressure Baro;

#include "LSM303D.h"
LSM303D Accelerometer;
    49a4:	8f e3       	ldi	r24, 0x3F	; 63
    49a6:	93 e0       	ldi	r25, 0x03	; 3
    49a8:	79 d3       	rcall	.+1778   	; 0x509c <_ZN7LSM303DD1Ev>
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);

#include "Pressure.h"
Pressure Baro;
    49aa:	80 e5       	ldi	r24, 0x50	; 80
    49ac:	93 e0       	ldi	r25, 0x03	; 3
    49ae:	17 d6       	rcall	.+3118   	; 0x55de <_ZN8PressureD1Ev>

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);
    49b0:	8e e5       	ldi	r24, 0x5E	; 94
    49b2:	93 e0       	ldi	r25, 0x03	; 3
    49b4:	f1 d4       	rcall	.+2530   	; 0x5398 <_ZN6OutputD1Ev>
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
    49b6:	80 e6       	ldi	r24, 0x60	; 96
    49b8:	93 e0       	ldi	r25, 0x03	; 3
    49ba:	ee d4       	rcall	.+2524   	; 0x5398 <_ZN6OutputD1Ev>
#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
    49bc:	82 e6       	ldi	r24, 0x62	; 98
    49be:	93 e0       	ldi	r25, 0x03	; 3
    49c0:	eb d4       	rcall	.+2518   	; 0x5398 <_ZN6OutputD1Ev>

#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
    49c2:	84 e6       	ldi	r24, 0x64	; 100
    49c4:	93 e0       	ldi	r25, 0x03	; 3
    49c6:	e8 d4       	rcall	.+2512   	; 0x5398 <_ZN6OutputD1Ev>

#include "Display.h"
Display oled;

#include "Interface.h"
Interface Tastatur;
    49c8:	86 e6       	ldi	r24, 0x66	; 102
    49ca:	93 e0       	ldi	r25, 0x03	; 3
    49cc:	4c d0       	rcall	.+152    	; 0x4a66 <_ZN9InterfaceD1Ev>

#include "RTC.h"
RTC rtc;

#include "Display.h"
Display oled;
    49ce:	82 e7       	ldi	r24, 0x72	; 114
    49d0:	93 e0       	ldi	r25, 0x03	; 3
    49d2:	0e 94 01 03 	call	0x602	; 0x602 <_ZN7DisplayD1Ev>

#include "Kompass.h"
Kompass kompass;

#include "RTC.h"
RTC rtc;
    49d6:	83 e7       	ldi	r24, 0x73	; 115
    49d8:	97 e0       	ldi	r25, 0x07	; 7
    49da:	6a d7       	rcall	.+3796   	; 0x58b0 <_ZN3RTCD1Ev>
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    49dc:	82 e9       	ldi	r24, 0x92	; 146
    49de:	97 e0       	ldi	r25, 0x07	; 7
    49e0:	25 c1       	rjmp	.+586    	; 0x4c2c <_ZN7KompassD1Ev>
    49e2:	08 95       	ret

000049e4 <_ZN3I2CC1Ev>:
void I2C::twi_ack(){
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
}
void I2C::twi_nack(){
	TWCR = (1<<TWINT) | (1<<TWEN);
	TWCR &= ~(1<<TWEA);
    49e4:	82 e0       	ldi	r24, 0x02	; 2
    49e6:	80 93 b8 00 	sts	0x00B8, r24
    49ea:	08 95       	ret

000049ec <_ZN3I2CD1Ev>:
    49ec:	08 95       	ret

000049ee <_ZN3I2C9twi_startEv>:
    49ee:	84 ea       	ldi	r24, 0xA4	; 164
    49f0:	80 93 bc 00 	sts	0x00BC, r24
    49f4:	08 95       	ret

000049f6 <_ZN3I2C8twi_stopEv>:
    49f6:	84 e9       	ldi	r24, 0x94	; 148
    49f8:	80 93 bc 00 	sts	0x00BC, r24
    49fc:	08 95       	ret

000049fe <_ZN3I2C9twi_writeEh>:
}

void I2C::twi_write(uint8_t data){
	while(!(TWCR & (1<<TWINT)));
    49fe:	ec eb       	ldi	r30, 0xBC	; 188
    4a00:	f0 e0       	ldi	r31, 0x00	; 0
    4a02:	80 81       	ld	r24, Z
    4a04:	88 23       	and	r24, r24
    4a06:	ec f7       	brge	.-6      	; 0x4a02 <_ZN3I2C9twi_writeEh+0x4>
	TWDR = data;
    4a08:	60 93 bb 00 	sts	0x00BB, r22
	TWCR = (1<<TWINT) | (1<<TWEN);
    4a0c:	84 e8       	ldi	r24, 0x84	; 132
    4a0e:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    4a12:	ec eb       	ldi	r30, 0xBC	; 188
    4a14:	f0 e0       	ldi	r31, 0x00	; 0
    4a16:	80 81       	ld	r24, Z
    4a18:	88 23       	and	r24, r24
    4a1a:	ec f7       	brge	.-6      	; 0x4a16 <_ZN3I2C9twi_writeEh+0x18>
}
    4a1c:	08 95       	ret

00004a1e <_ZN3I2C8twi_readEh>:

uint8_t I2C::twi_read(uint8_t ack){
	if (ack)
    4a1e:	66 23       	and	r22, r22
    4a20:	21 f0       	breq	.+8      	; 0x4a2a <_ZN3I2C8twi_readEh+0xc>
	{
		TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    4a22:	84 ec       	ldi	r24, 0xC4	; 196
    4a24:	80 93 bc 00 	sts	0x00BC, r24
    4a28:	03 c0       	rjmp	.+6      	; 0x4a30 <_ZN3I2C8twi_readEh+0x12>
	}
	else{
		TWCR = (1<<TWINT) | (1<<TWEN);
    4a2a:	84 e8       	ldi	r24, 0x84	; 132
    4a2c:	80 93 bc 00 	sts	0x00BC, r24
	}
	
	while(!(TWCR & (1<<TWINT)));
    4a30:	ec eb       	ldi	r30, 0xBC	; 188
    4a32:	f0 e0       	ldi	r31, 0x00	; 0
    4a34:	80 81       	ld	r24, Z
    4a36:	88 23       	and	r24, r24
    4a38:	ec f7       	brge	.-6      	; 0x4a34 <_ZN3I2C8twi_readEh+0x16>
	return TWDR;
    4a3a:	80 91 bb 00 	lds	r24, 0x00BB
    4a3e:	08 95       	ret

00004a40 <_ZN9InterfaceC1Ev>:
		default:
		abfrage = 0;
		break;
	}
	return abfrage;
}
    4a40:	2a b1       	in	r18, 0x0a	; 10
    4a42:	20 66       	ori	r18, 0x60	; 96
    4a44:	2a b9       	out	0x0a, r18	; 10
    4a46:	28 b1       	in	r18, 0x08	; 8
    4a48:	23 7f       	andi	r18, 0xF3	; 243
    4a4a:	28 b9       	out	0x08, r18	; 8
    4a4c:	27 b1       	in	r18, 0x07	; 7
    4a4e:	2c 60       	ori	r18, 0x0C	; 12
    4a50:	27 b9       	out	0x07, r18	; 7
    4a52:	2a b1       	in	r18, 0x0a	; 10
    4a54:	23 7e       	andi	r18, 0xE3	; 227
    4a56:	2a b9       	out	0x0a, r18	; 10
    4a58:	fc 01       	movw	r30, r24
    4a5a:	80 e0       	ldi	r24, 0x00	; 0
    4a5c:	11 92       	st	Z+, r1
    4a5e:	8f 5f       	subi	r24, 0xFF	; 255
    4a60:	8c 30       	cpi	r24, 0x0C	; 12
    4a62:	e1 f7       	brne	.-8      	; 0x4a5c <_ZN9InterfaceC1Ev+0x1c>
    4a64:	08 95       	ret

00004a66 <_ZN9InterfaceD1Ev>:
    4a66:	08 95       	ret

00004a68 <_ZN9Interface7paradebEPVhhPh>:
    4a68:	fb 01       	movw	r30, r22
    4a6a:	80 81       	ld	r24, Z
    4a6c:	90 e0       	ldi	r25, 0x00	; 0
    4a6e:	04 2e       	mov	r0, r20
    4a70:	02 c0       	rjmp	.+4      	; 0x4a76 <_ZN9Interface7paradebEPVhhPh+0xe>
    4a72:	95 95       	asr	r25
    4a74:	87 95       	ror	r24
    4a76:	0a 94       	dec	r0
    4a78:	e2 f7       	brpl	.-8      	; 0x4a72 <_ZN9Interface7paradebEPVhhPh+0xa>
    4a7a:	80 ff       	sbrs	r24, 0
    4a7c:	05 c0       	rjmp	.+10     	; 0x4a88 <_ZN9Interface7paradebEPVhhPh+0x20>
    4a7e:	81 e0       	ldi	r24, 0x01	; 1
    4a80:	f9 01       	movw	r30, r18
    4a82:	80 83       	st	Z, r24
    4a84:	80 e0       	ldi	r24, 0x00	; 0
    4a86:	08 95       	ret
    4a88:	f9 01       	movw	r30, r18
    4a8a:	80 81       	ld	r24, Z
    4a8c:	81 30       	cpi	r24, 0x01	; 1
    4a8e:	79 f4       	brne	.+30     	; 0x4aae <_ZN9Interface7paradebEPVhhPh+0x46>
    4a90:	fb 01       	movw	r30, r22
    4a92:	80 81       	ld	r24, Z
    4a94:	90 e0       	ldi	r25, 0x00	; 0
    4a96:	bc 01       	movw	r22, r24
    4a98:	02 c0       	rjmp	.+4      	; 0x4a9e <_ZN9Interface7paradebEPVhhPh+0x36>
    4a9a:	75 95       	asr	r23
    4a9c:	67 95       	ror	r22
    4a9e:	4a 95       	dec	r20
    4aa0:	e2 f7       	brpl	.-8      	; 0x4a9a <_ZN9Interface7paradebEPVhhPh+0x32>
    4aa2:	60 fd       	sbrc	r22, 0
    4aa4:	04 c0       	rjmp	.+8      	; 0x4aae <_ZN9Interface7paradebEPVhhPh+0x46>
    4aa6:	f9 01       	movw	r30, r18
    4aa8:	10 82       	st	Z, r1
    4aaa:	81 e0       	ldi	r24, 0x01	; 1
    4aac:	08 95       	ret
    4aae:	f9 01       	movw	r30, r18
    4ab0:	10 82       	st	Z, r1
    4ab2:	80 e0       	ldi	r24, 0x00	; 0
    4ab4:	08 95       	ret

00004ab6 <_ZN9Interface6TasterEv>:

uint8_t Interface::Taster(){
    4ab6:	1f 93       	push	r17
    4ab8:	cf 93       	push	r28
    4aba:	df 93       	push	r29
    4abc:	ec 01       	movw	r28, r24
	uint8_t taste = 'A';
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
    4abe:	43 9a       	sbi	0x08, 3	; 8
    4ac0:	82 e0       	ldi	r24, 0x02	; 2
    4ac2:	8a 95       	dec	r24
    4ac4:	f1 f7       	brne	.-4      	; 0x4ac2 <_ZN9Interface6TasterEv+0xc>
    4ac6:	00 c0       	rjmp	.+0      	; 0x4ac8 <_ZN9Interface6TasterEv+0x12>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[2])){//debounce(&PIND,PIND4)){
    4ac8:	9e 01       	movw	r18, r28
    4aca:	2e 5f       	subi	r18, 0xFE	; 254
    4acc:	3f 4f       	sbci	r19, 0xFF	; 255
    4ace:	44 e0       	ldi	r20, 0x04	; 4
    4ad0:	69 e2       	ldi	r22, 0x29	; 41
    4ad2:	70 e0       	ldi	r23, 0x00	; 0
    4ad4:	ce 01       	movw	r24, r28
    4ad6:	c8 df       	rcall	.-112    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4ad8:	81 11       	cpse	r24, r1
    4ada:	14 c0       	rjmp	.+40     	; 0x4b04 <_ZN9Interface6TasterEv+0x4e>
		taste = '3';
	}
	else if (paradeb(&PIND,PIND3,&stat[1]))//debounce(&PIND,PIND3))
    4adc:	9e 01       	movw	r18, r28
    4ade:	2f 5f       	subi	r18, 0xFF	; 255
    4ae0:	3f 4f       	sbci	r19, 0xFF	; 255
    4ae2:	43 e0       	ldi	r20, 0x03	; 3
    4ae4:	69 e2       	ldi	r22, 0x29	; 41
    4ae6:	70 e0       	ldi	r23, 0x00	; 0
    4ae8:	ce 01       	movw	r24, r28
    4aea:	be df       	rcall	.-132    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4aec:	81 11       	cpse	r24, r1
    4aee:	0c c0       	rjmp	.+24     	; 0x4b08 <_ZN9Interface6TasterEv+0x52>
	{
		taste = '2';
	}
	else if (paradeb(&PIND,PIND2,&stat[0]))//debounce(&PIND,PIND2))
    4af0:	9e 01       	movw	r18, r28
    4af2:	42 e0       	ldi	r20, 0x02	; 2
    4af4:	69 e2       	ldi	r22, 0x29	; 41
    4af6:	70 e0       	ldi	r23, 0x00	; 0
    4af8:	ce 01       	movw	r24, r28
    4afa:	b6 df       	rcall	.-148    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4afc:	81 11       	cpse	r24, r1
    4afe:	06 c0       	rjmp	.+12     	; 0x4b0c <_ZN9Interface6TasterEv+0x56>
	}
	return abfrage;
}

uint8_t Interface::Taster(){
	uint8_t taste = 'A';
    4b00:	11 e4       	ldi	r17, 0x41	; 65
    4b02:	05 c0       	rjmp	.+10     	; 0x4b0e <_ZN9Interface6TasterEv+0x58>
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[2])){//debounce(&PIND,PIND4)){
		taste = '3';
    4b04:	13 e3       	ldi	r17, 0x33	; 51
    4b06:	03 c0       	rjmp	.+6      	; 0x4b0e <_ZN9Interface6TasterEv+0x58>
	}
	else if (paradeb(&PIND,PIND3,&stat[1]))//debounce(&PIND,PIND3))
	{
		taste = '2';
    4b08:	12 e3       	ldi	r17, 0x32	; 50
    4b0a:	01 c0       	rjmp	.+2      	; 0x4b0e <_ZN9Interface6TasterEv+0x58>
	}
	else if (paradeb(&PIND,PIND2,&stat[0]))//debounce(&PIND,PIND2))
	{
		taste = '1';
    4b0c:	11 e3       	ldi	r17, 0x31	; 49
	}
	PORTC &= ~(1<<PORTC3);
    4b0e:	43 98       	cbi	0x08, 3	; 8
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
    4b10:	42 9a       	sbi	0x08, 2	; 8
    4b12:	82 e0       	ldi	r24, 0x02	; 2
    4b14:	8a 95       	dec	r24
    4b16:	f1 f7       	brne	.-4      	; 0x4b14 <_ZN9Interface6TasterEv+0x5e>
    4b18:	00 c0       	rjmp	.+0      	; 0x4b1a <_ZN9Interface6TasterEv+0x64>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[5])){//debounce(&PIND,PIND4)){
    4b1a:	9e 01       	movw	r18, r28
    4b1c:	2b 5f       	subi	r18, 0xFB	; 251
    4b1e:	3f 4f       	sbci	r19, 0xFF	; 255
    4b20:	44 e0       	ldi	r20, 0x04	; 4
    4b22:	69 e2       	ldi	r22, 0x29	; 41
    4b24:	70 e0       	ldi	r23, 0x00	; 0
    4b26:	ce 01       	movw	r24, r28
    4b28:	9f df       	rcall	.-194    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4b2a:	81 11       	cpse	r24, r1
    4b2c:	15 c0       	rjmp	.+42     	; 0x4b58 <_ZN9Interface6TasterEv+0xa2>
		taste = '6';
	}
	else if (paradeb(&PIND,PIND3,&stat[4]))//debounce(&PIND,PIND3))
    4b2e:	9e 01       	movw	r18, r28
    4b30:	2c 5f       	subi	r18, 0xFC	; 252
    4b32:	3f 4f       	sbci	r19, 0xFF	; 255
    4b34:	43 e0       	ldi	r20, 0x03	; 3
    4b36:	69 e2       	ldi	r22, 0x29	; 41
    4b38:	70 e0       	ldi	r23, 0x00	; 0
    4b3a:	ce 01       	movw	r24, r28
    4b3c:	95 df       	rcall	.-214    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4b3e:	81 11       	cpse	r24, r1
    4b40:	0d c0       	rjmp	.+26     	; 0x4b5c <_ZN9Interface6TasterEv+0xa6>
	{
		taste = '5';
	}
	else if (paradeb(&PIND,PIND2,&stat[3]))//debounce(&PIND,PIND2))
    4b42:	9e 01       	movw	r18, r28
    4b44:	2d 5f       	subi	r18, 0xFD	; 253
    4b46:	3f 4f       	sbci	r19, 0xFF	; 255
    4b48:	42 e0       	ldi	r20, 0x02	; 2
    4b4a:	69 e2       	ldi	r22, 0x29	; 41
    4b4c:	70 e0       	ldi	r23, 0x00	; 0
    4b4e:	ce 01       	movw	r24, r28
    4b50:	8b df       	rcall	.-234    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4b52:	81 11       	cpse	r24, r1
    4b54:	05 c0       	rjmp	.+10     	; 0x4b60 <_ZN9Interface6TasterEv+0xaa>
    4b56:	05 c0       	rjmp	.+10     	; 0x4b62 <_ZN9Interface6TasterEv+0xac>
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[5])){//debounce(&PIND,PIND4)){
		taste = '6';
    4b58:	16 e3       	ldi	r17, 0x36	; 54
    4b5a:	03 c0       	rjmp	.+6      	; 0x4b62 <_ZN9Interface6TasterEv+0xac>
	}
	else if (paradeb(&PIND,PIND3,&stat[4]))//debounce(&PIND,PIND3))
	{
		taste = '5';
    4b5c:	15 e3       	ldi	r17, 0x35	; 53
    4b5e:	01 c0       	rjmp	.+2      	; 0x4b62 <_ZN9Interface6TasterEv+0xac>
	}
	else if (paradeb(&PIND,PIND2,&stat[3]))//debounce(&PIND,PIND2))
	{
		taste = '4';
    4b60:	14 e3       	ldi	r17, 0x34	; 52
	}
	PORTC &= ~(1<<PORTC2);
    4b62:	42 98       	cbi	0x08, 2	; 8
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
    4b64:	5e 9a       	sbi	0x0b, 6	; 11
    4b66:	82 e0       	ldi	r24, 0x02	; 2
    4b68:	8a 95       	dec	r24
    4b6a:	f1 f7       	brne	.-4      	; 0x4b68 <_ZN9Interface6TasterEv+0xb2>
    4b6c:	00 c0       	rjmp	.+0      	; 0x4b6e <_ZN9Interface6TasterEv+0xb8>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[8])){//debounce(&PIND,PIND4)){
    4b6e:	9e 01       	movw	r18, r28
    4b70:	28 5f       	subi	r18, 0xF8	; 248
    4b72:	3f 4f       	sbci	r19, 0xFF	; 255
    4b74:	44 e0       	ldi	r20, 0x04	; 4
    4b76:	69 e2       	ldi	r22, 0x29	; 41
    4b78:	70 e0       	ldi	r23, 0x00	; 0
    4b7a:	ce 01       	movw	r24, r28
    4b7c:	75 df       	rcall	.-278    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4b7e:	81 11       	cpse	r24, r1
    4b80:	15 c0       	rjmp	.+42     	; 0x4bac <_ZN9Interface6TasterEv+0xf6>
		taste = '9';
	}
	else if (paradeb(&PIND,PIND3,&stat[7]))//debounce(&PIND,PIND3))
    4b82:	9e 01       	movw	r18, r28
    4b84:	29 5f       	subi	r18, 0xF9	; 249
    4b86:	3f 4f       	sbci	r19, 0xFF	; 255
    4b88:	43 e0       	ldi	r20, 0x03	; 3
    4b8a:	69 e2       	ldi	r22, 0x29	; 41
    4b8c:	70 e0       	ldi	r23, 0x00	; 0
    4b8e:	ce 01       	movw	r24, r28
    4b90:	6b df       	rcall	.-298    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4b92:	81 11       	cpse	r24, r1
    4b94:	0d c0       	rjmp	.+26     	; 0x4bb0 <_ZN9Interface6TasterEv+0xfa>
	{
		taste = '8';
	}
	else if (paradeb(&PIND,PIND2,&stat[6]))//debounce(&PIND,PIND2))
    4b96:	9e 01       	movw	r18, r28
    4b98:	2a 5f       	subi	r18, 0xFA	; 250
    4b9a:	3f 4f       	sbci	r19, 0xFF	; 255
    4b9c:	42 e0       	ldi	r20, 0x02	; 2
    4b9e:	69 e2       	ldi	r22, 0x29	; 41
    4ba0:	70 e0       	ldi	r23, 0x00	; 0
    4ba2:	ce 01       	movw	r24, r28
    4ba4:	61 df       	rcall	.-318    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4ba6:	81 11       	cpse	r24, r1
    4ba8:	05 c0       	rjmp	.+10     	; 0x4bb4 <_ZN9Interface6TasterEv+0xfe>
    4baa:	05 c0       	rjmp	.+10     	; 0x4bb6 <_ZN9Interface6TasterEv+0x100>
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[8])){//debounce(&PIND,PIND4)){
		taste = '9';
    4bac:	19 e3       	ldi	r17, 0x39	; 57
    4bae:	03 c0       	rjmp	.+6      	; 0x4bb6 <_ZN9Interface6TasterEv+0x100>
	}
	else if (paradeb(&PIND,PIND3,&stat[7]))//debounce(&PIND,PIND3))
	{
		taste = '8';
    4bb0:	18 e3       	ldi	r17, 0x38	; 56
    4bb2:	01 c0       	rjmp	.+2      	; 0x4bb6 <_ZN9Interface6TasterEv+0x100>
	}
	else if (paradeb(&PIND,PIND2,&stat[6]))//debounce(&PIND,PIND2))
	{
		taste = '7';
    4bb4:	17 e3       	ldi	r17, 0x37	; 55
	}
	PORTD &= ~(1<<PORTD6);
    4bb6:	5e 98       	cbi	0x0b, 6	; 11
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
    4bb8:	5d 9a       	sbi	0x0b, 5	; 11
    4bba:	82 e0       	ldi	r24, 0x02	; 2
    4bbc:	8a 95       	dec	r24
    4bbe:	f1 f7       	brne	.-4      	; 0x4bbc <_ZN9Interface6TasterEv+0x106>
    4bc0:	00 c0       	rjmp	.+0      	; 0x4bc2 <_ZN9Interface6TasterEv+0x10c>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[11])){//debounce(&PIND,PIND4)){
    4bc2:	9e 01       	movw	r18, r28
    4bc4:	25 5f       	subi	r18, 0xF5	; 245
    4bc6:	3f 4f       	sbci	r19, 0xFF	; 255
    4bc8:	44 e0       	ldi	r20, 0x04	; 4
    4bca:	69 e2       	ldi	r22, 0x29	; 41
    4bcc:	70 e0       	ldi	r23, 0x00	; 0
    4bce:	ce 01       	movw	r24, r28
    4bd0:	4b df       	rcall	.-362    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4bd2:	81 11       	cpse	r24, r1
    4bd4:	15 c0       	rjmp	.+42     	; 0x4c00 <_ZN9Interface6TasterEv+0x14a>
		taste = '#';
	}
	else if (paradeb(&PIND,PIND3,&stat[10]))//debounce(&PIND,PIND3))
    4bd6:	9e 01       	movw	r18, r28
    4bd8:	26 5f       	subi	r18, 0xF6	; 246
    4bda:	3f 4f       	sbci	r19, 0xFF	; 255
    4bdc:	43 e0       	ldi	r20, 0x03	; 3
    4bde:	69 e2       	ldi	r22, 0x29	; 41
    4be0:	70 e0       	ldi	r23, 0x00	; 0
    4be2:	ce 01       	movw	r24, r28
    4be4:	41 df       	rcall	.-382    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4be6:	81 11       	cpse	r24, r1
    4be8:	0d c0       	rjmp	.+26     	; 0x4c04 <_ZN9Interface6TasterEv+0x14e>
	{
		taste = '0';
	}
	else if (paradeb(&PIND,PIND2,&stat[9]))//debounce(&PIND,PIND2))
    4bea:	9e 01       	movw	r18, r28
    4bec:	27 5f       	subi	r18, 0xF7	; 247
    4bee:	3f 4f       	sbci	r19, 0xFF	; 255
    4bf0:	42 e0       	ldi	r20, 0x02	; 2
    4bf2:	69 e2       	ldi	r22, 0x29	; 41
    4bf4:	70 e0       	ldi	r23, 0x00	; 0
    4bf6:	ce 01       	movw	r24, r28
    4bf8:	37 df       	rcall	.-402    	; 0x4a68 <_ZN9Interface7paradebEPVhhPh>
    4bfa:	81 11       	cpse	r24, r1
    4bfc:	05 c0       	rjmp	.+10     	; 0x4c08 <_ZN9Interface6TasterEv+0x152>
    4bfe:	05 c0       	rjmp	.+10     	; 0x4c0a <_ZN9Interface6TasterEv+0x154>
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[11])){//debounce(&PIND,PIND4)){
		taste = '#';
    4c00:	13 e2       	ldi	r17, 0x23	; 35
    4c02:	03 c0       	rjmp	.+6      	; 0x4c0a <_ZN9Interface6TasterEv+0x154>
	}
	else if (paradeb(&PIND,PIND3,&stat[10]))//debounce(&PIND,PIND3))
	{
		taste = '0';
    4c04:	10 e3       	ldi	r17, 0x30	; 48
    4c06:	01 c0       	rjmp	.+2      	; 0x4c0a <_ZN9Interface6TasterEv+0x154>
	}
	else if (paradeb(&PIND,PIND2,&stat[9]))//debounce(&PIND,PIND2))
	{
		taste = '*';
    4c08:	1a e2       	ldi	r17, 0x2A	; 42
	}
	PORTD &= ~(1<<PORTD5);
    4c0a:	5d 98       	cbi	0x0b, 5	; 11
	
	return taste;
}
    4c0c:	81 2f       	mov	r24, r17
    4c0e:	df 91       	pop	r29
    4c10:	cf 91       	pop	r28
    4c12:	1f 91       	pop	r17
    4c14:	08 95       	ret

00004c16 <_ZN9Interface17ZahlenausTastaturEv>:

uint8_t Interface::ZahlenausTastatur(){
    4c16:	cf 93       	push	r28
    4c18:	df 93       	push	r29
    4c1a:	ec 01       	movw	r28, r24
	while(true){
		uint8_t taste = Taster();
    4c1c:	ce 01       	movw	r24, r28
    4c1e:	4b df       	rcall	.-362    	; 0x4ab6 <_ZN9Interface6TasterEv>
		if(taste>='0' && taste<='9'){
    4c20:	80 53       	subi	r24, 0x30	; 48
    4c22:	8a 30       	cpi	r24, 0x0A	; 10
    4c24:	d8 f7       	brcc	.-10     	; 0x4c1c <_ZN9Interface17ZahlenausTastaturEv+0x6>
			return taste - '0';
		}
	}
}
    4c26:	df 91       	pop	r29
    4c28:	cf 91       	pop	r28
    4c2a:	08 95       	ret

00004c2c <_ZN7KompassD1Ev>:
	for (uint8_t i=0;i<3;i++)
	{
		achsen[i]=0;
		offset[i]=0;
	}
}
    4c2c:	06 96       	adiw	r24, 0x06	; 6
    4c2e:	de ce       	rjmp	.-580    	; 0x49ec <_ZN3I2CD1Ev>
    4c30:	08 95       	ret

00004c32 <_ZN7Kompass16HMC5883L_commandEhh>:
    4c32:	0f 93       	push	r16
    4c34:	1f 93       	push	r17
    4c36:	cf 93       	push	r28
    4c38:	df 93       	push	r29
    4c3a:	06 2f       	mov	r16, r22
    4c3c:	14 2f       	mov	r17, r20
    4c3e:	ec 01       	movw	r28, r24
    4c40:	26 96       	adiw	r28, 0x06	; 6
    4c42:	ce 01       	movw	r24, r28
    4c44:	d4 de       	rcall	.-600    	; 0x49ee <_ZN3I2C9twi_startEv>
    4c46:	6c e3       	ldi	r22, 0x3C	; 60
    4c48:	ce 01       	movw	r24, r28
    4c4a:	d9 de       	rcall	.-590    	; 0x49fe <_ZN3I2C9twi_writeEh>
    4c4c:	60 2f       	mov	r22, r16
    4c4e:	ce 01       	movw	r24, r28
    4c50:	d6 de       	rcall	.-596    	; 0x49fe <_ZN3I2C9twi_writeEh>
    4c52:	61 2f       	mov	r22, r17
    4c54:	ce 01       	movw	r24, r28
    4c56:	d3 de       	rcall	.-602    	; 0x49fe <_ZN3I2C9twi_writeEh>
    4c58:	ce 01       	movw	r24, r28
    4c5a:	cd de       	rcall	.-614    	; 0x49f6 <_ZN3I2C8twi_stopEv>
    4c5c:	df 91       	pop	r29
    4c5e:	cf 91       	pop	r28
    4c60:	1f 91       	pop	r17
    4c62:	0f 91       	pop	r16
    4c64:	08 95       	ret

00004c66 <_ZN7KompassC1Ev>:
    4c66:	cf 93       	push	r28
    4c68:	df 93       	push	r29
    4c6a:	ec 01       	movw	r28, r24
    4c6c:	06 96       	adiw	r24, 0x06	; 6
    4c6e:	ba de       	rcall	.-652    	; 0x49e4 <_ZN3I2CC1Ev>
    4c70:	40 e7       	ldi	r20, 0x70	; 112
    4c72:	60 e0       	ldi	r22, 0x00	; 0
    4c74:	ce 01       	movw	r24, r28
    4c76:	dd df       	rcall	.-70     	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
    4c78:	40 e2       	ldi	r20, 0x20	; 32
    4c7a:	61 e0       	ldi	r22, 0x01	; 1
    4c7c:	ce 01       	movw	r24, r28
    4c7e:	d9 df       	rcall	.-78     	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
    4c80:	41 e0       	ldi	r20, 0x01	; 1
    4c82:	62 e0       	ldi	r22, 0x02	; 2
    4c84:	ce 01       	movw	r24, r28
    4c86:	d5 df       	rcall	.-86     	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
    4c88:	19 82       	std	Y+1, r1	; 0x01
    4c8a:	18 82       	st	Y, r1
    4c8c:	18 86       	std	Y+8, r1	; 0x08
    4c8e:	1f 82       	std	Y+7, r1	; 0x07
    4c90:	1b 82       	std	Y+3, r1	; 0x03
    4c92:	1a 82       	std	Y+2, r1	; 0x02
    4c94:	1a 86       	std	Y+10, r1	; 0x0a
    4c96:	19 86       	std	Y+9, r1	; 0x09
    4c98:	1d 82       	std	Y+5, r1	; 0x05
    4c9a:	1c 82       	std	Y+4, r1	; 0x04
    4c9c:	1c 86       	std	Y+12, r1	; 0x0c
    4c9e:	1b 86       	std	Y+11, r1	; 0x0b
    4ca0:	df 91       	pop	r29
    4ca2:	cf 91       	pop	r28
    4ca4:	08 95       	ret

00004ca6 <_ZN7Kompass20HMC5883L_readHeadingEv>:

uint8_t Kompass::HMC5883L_readHeading(){
    4ca6:	bf 92       	push	r11
    4ca8:	cf 92       	push	r12
    4caa:	df 92       	push	r13
    4cac:	ef 92       	push	r14
    4cae:	ff 92       	push	r15
    4cb0:	0f 93       	push	r16
    4cb2:	1f 93       	push	r17
    4cb4:	cf 93       	push	r28
    4cb6:	df 93       	push	r29
    4cb8:	00 d0       	rcall	.+0      	; 0x4cba <_ZN7Kompass20HMC5883L_readHeadingEv+0x14>
    4cba:	00 d0       	rcall	.+0      	; 0x4cbc <_ZN7Kompass20HMC5883L_readHeadingEv+0x16>
    4cbc:	00 d0       	rcall	.+0      	; 0x4cbe <_ZN7Kompass20HMC5883L_readHeadingEv+0x18>
    4cbe:	cd b7       	in	r28, 0x3d	; 61
    4cc0:	de b7       	in	r29, 0x3e	; 62
    4cc2:	6c 01       	movw	r12, r24
	cli();
    4cc4:	f8 94       	cli
	uint8_t heading[6];
	i2c.twi_start();
    4cc6:	7c 01       	movw	r14, r24
    4cc8:	26 e0       	ldi	r18, 0x06	; 6
    4cca:	e2 0e       	add	r14, r18
    4ccc:	f1 1c       	adc	r15, r1
    4cce:	c7 01       	movw	r24, r14
    4cd0:	8e de       	rcall	.-740    	; 0x49ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCWRITEADRESSE);
    4cd2:	6c e3       	ldi	r22, 0x3C	; 60
    4cd4:	c7 01       	movw	r24, r14
    4cd6:	93 de       	rcall	.-730    	; 0x49fe <_ZN3I2C9twi_writeEh>
	i2c.twi_write(0x03);
    4cd8:	63 e0       	ldi	r22, 0x03	; 3
    4cda:	c7 01       	movw	r24, r14
    4cdc:	90 de       	rcall	.-736    	; 0x49fe <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    4cde:	c7 01       	movw	r24, r14
    4ce0:	86 de       	rcall	.-756    	; 0x49ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCREADADRESSE);
    4ce2:	6d e3       	ldi	r22, 0x3D	; 61
    4ce4:	c7 01       	movw	r24, r14
    4ce6:	8b de       	rcall	.-746    	; 0x49fe <_ZN3I2C9twi_writeEh>
    4ce8:	8e 01       	movw	r16, r28
    4cea:	0f 5f       	subi	r16, 0xFF	; 255
    4cec:	1f 4f       	sbci	r17, 0xFF	; 255
	
	for(uint8_t i=0; i<6;i++){
    4cee:	b1 2c       	mov	r11, r1
		if (i<5)
    4cf0:	84 e0       	ldi	r24, 0x04	; 4
    4cf2:	8b 15       	cp	r24, r11
    4cf4:	30 f0       	brcs	.+12     	; 0x4d02 <_ZN7Kompass20HMC5883L_readHeadingEv+0x5c>
		{
			heading[i]=i2c.twi_read(1);
    4cf6:	61 e0       	ldi	r22, 0x01	; 1
    4cf8:	c7 01       	movw	r24, r14
    4cfa:	91 de       	rcall	.-734    	; 0x4a1e <_ZN3I2C8twi_readEh>
    4cfc:	f8 01       	movw	r30, r16
    4cfe:	80 83       	st	Z, r24
    4d00:	05 c0       	rjmp	.+10     	; 0x4d0c <_ZN7Kompass20HMC5883L_readHeadingEv+0x66>
		}
		else
		{
			heading[i]=i2c.twi_read(0);
    4d02:	60 e0       	ldi	r22, 0x00	; 0
    4d04:	c7 01       	movw	r24, r14
    4d06:	8b de       	rcall	.-746    	; 0x4a1e <_ZN3I2C8twi_readEh>
    4d08:	f8 01       	movw	r30, r16
    4d0a:	80 83       	st	Z, r24
	i2c.twi_write(HMCWRITEADRESSE);
	i2c.twi_write(0x03);
	i2c.twi_start();
	i2c.twi_write(HMCREADADRESSE);
	
	for(uint8_t i=0; i<6;i++){
    4d0c:	b3 94       	inc	r11
    4d0e:	0f 5f       	subi	r16, 0xFF	; 255
    4d10:	1f 4f       	sbci	r17, 0xFF	; 255
    4d12:	f6 e0       	ldi	r31, 0x06	; 6
    4d14:	bf 12       	cpse	r11, r31
    4d16:	ec cf       	rjmp	.-40     	; 0x4cf0 <_ZN7Kompass20HMC5883L_readHeadingEv+0x4a>
		{
			heading[i]=i2c.twi_read(0);
		}
		
	}
	i2c.twi_stop();
    4d18:	c7 01       	movw	r24, r14
    4d1a:	6d de       	rcall	.-806    	; 0x49f6 <_ZN3I2C8twi_stopEv>
	achsen[0] =(int16_t) (heading[1] | (heading[0] << 8));
    4d1c:	89 81       	ldd	r24, Y+1	; 0x01
    4d1e:	90 e0       	ldi	r25, 0x00	; 0
    4d20:	98 2f       	mov	r25, r24
    4d22:	88 27       	eor	r24, r24
    4d24:	2a 81       	ldd	r18, Y+2	; 0x02
    4d26:	82 2b       	or	r24, r18
    4d28:	f6 01       	movw	r30, r12
    4d2a:	91 83       	std	Z+1, r25	; 0x01
    4d2c:	80 83       	st	Z, r24
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
    4d2e:	8b 81       	ldd	r24, Y+3	; 0x03
    4d30:	90 e0       	ldi	r25, 0x00	; 0
    4d32:	98 2f       	mov	r25, r24
    4d34:	88 27       	eor	r24, r24
    4d36:	2c 81       	ldd	r18, Y+4	; 0x04
    4d38:	82 2b       	or	r24, r18
    4d3a:	93 83       	std	Z+3, r25	; 0x03
    4d3c:	82 83       	std	Z+2, r24	; 0x02
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
    4d3e:	8d 81       	ldd	r24, Y+5	; 0x05
    4d40:	90 e0       	ldi	r25, 0x00	; 0
    4d42:	98 2f       	mov	r25, r24
    4d44:	88 27       	eor	r24, r24
    4d46:	2e 81       	ldd	r18, Y+6	; 0x06
    4d48:	82 2b       	or	r24, r18
    4d4a:	95 83       	std	Z+5, r25	; 0x05
    4d4c:	84 83       	std	Z+4, r24	; 0x04
	sei();
    4d4e:	78 94       	sei
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
    4d50:	f6 01       	movw	r30, r12
    4d52:	80 81       	ld	r24, Z
    4d54:	91 81       	ldd	r25, Z+1	; 0x01
    4d56:	81 15       	cp	r24, r1
    4d58:	90 4f       	sbci	r25, 0xF0	; 240
    4d5a:	09 f4       	brne	.+2      	; 0x4d5e <_ZN7Kompass20HMC5883L_readHeadingEv+0xb8>
    4d5c:	47 c0       	rjmp	.+142    	; 0x4dec <_ZN7Kompass20HMC5883L_readHeadingEv+0x146>
    4d5e:	f6 01       	movw	r30, r12
    4d60:	82 81       	ldd	r24, Z+2	; 0x02
    4d62:	93 81       	ldd	r25, Z+3	; 0x03
    4d64:	81 15       	cp	r24, r1
    4d66:	90 4f       	sbci	r25, 0xF0	; 240
    4d68:	09 f4       	brne	.+2      	; 0x4d6c <_ZN7Kompass20HMC5883L_readHeadingEv+0xc6>
    4d6a:	42 c0       	rjmp	.+132    	; 0x4df0 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14a>
    4d6c:	f6 01       	movw	r30, r12
    4d6e:	84 81       	ldd	r24, Z+4	; 0x04
    4d70:	95 81       	ldd	r25, Z+5	; 0x05
    4d72:	81 15       	cp	r24, r1
    4d74:	90 4f       	sbci	r25, 0xF0	; 240
    4d76:	f1 f1       	breq	.+124    	; 0x4df4 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14e>
    4d78:	f6 01       	movw	r30, r12
    4d7a:	83 e0       	ldi	r24, 0x03	; 3
    4d7c:	df 01       	movw	r26, r30
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
			if(achsen[i]>max[i]){
    4d7e:	20 81       	ld	r18, Z
    4d80:	31 81       	ldd	r19, Z+1	; 0x01
    4d82:	45 85       	ldd	r20, Z+13	; 0x0d
    4d84:	56 85       	ldd	r21, Z+14	; 0x0e
    4d86:	42 17       	cp	r20, r18
    4d88:	53 07       	cpc	r21, r19
    4d8a:	8c f4       	brge	.+34     	; 0x4dae <_ZN7Kompass20HMC5883L_readHeadingEv+0x108>
				max[i]=achsen[i];
    4d8c:	36 87       	std	Z+14, r19	; 0x0e
    4d8e:	25 87       	std	Z+13, r18	; 0x0d
				offset[i]=(max[i]+min[i])/2;
    4d90:	43 89       	ldd	r20, Z+19	; 0x13
    4d92:	54 89       	ldd	r21, Z+20	; 0x14
    4d94:	24 0f       	add	r18, r20
    4d96:	35 1f       	adc	r19, r21
    4d98:	33 23       	and	r19, r19
    4d9a:	14 f4       	brge	.+4      	; 0x4da0 <_ZN7Kompass20HMC5883L_readHeadingEv+0xfa>
    4d9c:	2f 5f       	subi	r18, 0xFF	; 255
    4d9e:	3f 4f       	sbci	r19, 0xFF	; 255
    4da0:	35 95       	asr	r19
    4da2:	27 95       	ror	r18
    4da4:	18 96       	adiw	r26, 0x08	; 8
    4da6:	3c 93       	st	X, r19
    4da8:	2e 93       	st	-X, r18
    4daa:	17 97       	sbiw	r26, 0x07	; 7
    4dac:	1a c0       	rjmp	.+52     	; 0x4de2 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else if(achsen[i]<min[i]){
    4dae:	63 89       	ldd	r22, Z+19	; 0x13
    4db0:	74 89       	ldd	r23, Z+20	; 0x14
    4db2:	26 17       	cp	r18, r22
    4db4:	37 07       	cpc	r19, r23
    4db6:	7c f4       	brge	.+30     	; 0x4dd6 <_ZN7Kompass20HMC5883L_readHeadingEv+0x130>
				min[i]=achsen[i];
    4db8:	34 8b       	std	Z+20, r19	; 0x14
    4dba:	23 8b       	std	Z+19, r18	; 0x13
				offset[i]=(max[i]+min[i])/2;
    4dbc:	24 0f       	add	r18, r20
    4dbe:	35 1f       	adc	r19, r21
    4dc0:	33 23       	and	r19, r19
    4dc2:	14 f4       	brge	.+4      	; 0x4dc8 <_ZN7Kompass20HMC5883L_readHeadingEv+0x122>
    4dc4:	2f 5f       	subi	r18, 0xFF	; 255
    4dc6:	3f 4f       	sbci	r19, 0xFF	; 255
    4dc8:	35 95       	asr	r19
    4dca:	27 95       	ror	r18
    4dcc:	18 96       	adiw	r26, 0x08	; 8
    4dce:	3c 93       	st	X, r19
    4dd0:	2e 93       	st	-X, r18
    4dd2:	17 97       	sbiw	r26, 0x07	; 7
    4dd4:	06 c0       	rjmp	.+12     	; 0x4de2 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else {
				achsen[i]-=offset[i];
    4dd6:	47 81       	ldd	r20, Z+7	; 0x07
    4dd8:	50 85       	ldd	r21, Z+8	; 0x08
    4dda:	24 1b       	sub	r18, r20
    4ddc:	35 0b       	sbc	r19, r21
    4dde:	31 83       	std	Z+1, r19	; 0x01
    4de0:	20 83       	st	Z, r18
    4de2:	81 50       	subi	r24, 0x01	; 1
    4de4:	32 96       	adiw	r30, 0x02	; 2
		return 1;
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
    4de6:	81 11       	cpse	r24, r1
    4de8:	c9 cf       	rjmp	.-110    	; 0x4d7c <_ZN7Kompass20HMC5883L_readHeadingEv+0xd6>
    4dea:	05 c0       	rjmp	.+10     	; 0x4df6 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
	sei();
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
	{
		return 1;
    4dec:	81 e0       	ldi	r24, 0x01	; 1
    4dee:	03 c0       	rjmp	.+6      	; 0x4df6 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    4df0:	81 e0       	ldi	r24, 0x01	; 1
    4df2:	01 c0       	rjmp	.+2      	; 0x4df6 <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    4df4:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	
	return 0;
}
    4df6:	26 96       	adiw	r28, 0x06	; 6
    4df8:	0f b6       	in	r0, 0x3f	; 63
    4dfa:	f8 94       	cli
    4dfc:	de bf       	out	0x3e, r29	; 62
    4dfe:	0f be       	out	0x3f, r0	; 63
    4e00:	cd bf       	out	0x3d, r28	; 61
    4e02:	df 91       	pop	r29
    4e04:	cf 91       	pop	r28
    4e06:	1f 91       	pop	r17
    4e08:	0f 91       	pop	r16
    4e0a:	ff 90       	pop	r15
    4e0c:	ef 90       	pop	r14
    4e0e:	df 90       	pop	r13
    4e10:	cf 90       	pop	r12
    4e12:	bf 90       	pop	r11
    4e14:	08 95       	ret

00004e16 <_ZN7Kompass5angleEdd>:

double Kompass::angle(double roll, double pitch){
    4e16:	2f 92       	push	r2
    4e18:	3f 92       	push	r3
    4e1a:	4f 92       	push	r4
    4e1c:	5f 92       	push	r5
    4e1e:	6f 92       	push	r6
    4e20:	7f 92       	push	r7
    4e22:	8f 92       	push	r8
    4e24:	9f 92       	push	r9
    4e26:	af 92       	push	r10
    4e28:	bf 92       	push	r11
    4e2a:	cf 92       	push	r12
    4e2c:	df 92       	push	r13
    4e2e:	ef 92       	push	r14
    4e30:	ff 92       	push	r15
    4e32:	0f 93       	push	r16
    4e34:	1f 93       	push	r17
    4e36:	cf 93       	push	r28
    4e38:	df 93       	push	r29
    4e3a:	cd b7       	in	r28, 0x3d	; 61
    4e3c:	de b7       	in	r29, 0x3e	; 62
    4e3e:	64 97       	sbiw	r28, 0x14	; 20
    4e40:	0f b6       	in	r0, 0x3f	; 63
    4e42:	f8 94       	cli
    4e44:	de bf       	out	0x3e, r29	; 62
    4e46:	0f be       	out	0x3f, r0	; 63
    4e48:	cd bf       	out	0x3d, r28	; 61
    4e4a:	1c 01       	movw	r2, r24
    4e4c:	4a 01       	movw	r8, r20
    4e4e:	5b 01       	movw	r10, r22
    4e50:	68 01       	movw	r12, r16
    4e52:	79 01       	movw	r14, r18
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
    4e54:	28 df       	rcall	.-432    	; 0x4ca6 <_ZN7Kompass20HMC5883L_readHeadingEv>
    4e56:	81 11       	cpse	r24, r1
    4e58:	e6 c0       	rjmp	.+460    	; 0x5026 <_ZN7Kompass5angleEdd+0x210>
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4e5a:	c7 01       	movw	r24, r14
    4e5c:	b6 01       	movw	r22, r12
    4e5e:	7e d7       	rcall	.+3836   	; 0x5d5c <cos>
    4e60:	69 83       	std	Y+1, r22	; 0x01
    4e62:	7a 83       	std	Y+2, r23	; 0x02
    4e64:	8b 83       	std	Y+3, r24	; 0x03
    4e66:	9c 83       	std	Y+4, r25	; 0x04
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4e68:	f1 01       	movw	r30, r2
    4e6a:	62 81       	ldd	r22, Z+2	; 0x02
    4e6c:	73 81       	ldd	r23, Z+3	; 0x03
    4e6e:	88 27       	eor	r24, r24
    4e70:	77 fd       	sbrc	r23, 7
    4e72:	80 95       	com	r24
    4e74:	98 2f       	mov	r25, r24
    4e76:	0e 94 4c 2f 	call	0x5e98	; 0x5e98 <__floatsisf>
    4e7a:	2b 01       	movw	r4, r22
    4e7c:	3c 01       	movw	r6, r24
    4e7e:	c5 01       	movw	r24, r10
    4e80:	b4 01       	movw	r22, r8
    4e82:	0e 94 0d 31 	call	0x621a	; 0x621a <sin>
    4e86:	6d 83       	std	Y+5, r22	; 0x05
    4e88:	7e 83       	std	Y+6, r23	; 0x06
    4e8a:	8f 83       	std	Y+7, r24	; 0x07
    4e8c:	98 87       	std	Y+8, r25	; 0x08
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    4e8e:	f1 01       	movw	r30, r2
    4e90:	64 81       	ldd	r22, Z+4	; 0x04
    4e92:	75 81       	ldd	r23, Z+5	; 0x05
    4e94:	88 27       	eor	r24, r24
    4e96:	77 fd       	sbrc	r23, 7
    4e98:	80 95       	com	r24
    4e9a:	98 2f       	mov	r25, r24
    4e9c:	fd d7       	rcall	.+4090   	; 0x5e98 <__floatsisf>
    4e9e:	69 87       	std	Y+9, r22	; 0x09
    4ea0:	7a 87       	std	Y+10, r23	; 0x0a
    4ea2:	8b 87       	std	Y+11, r24	; 0x0b
    4ea4:	9c 87       	std	Y+12, r25	; 0x0c
    4ea6:	c5 01       	movw	r24, r10
    4ea8:	b4 01       	movw	r22, r8
    4eaa:	58 d7       	rcall	.+3760   	; 0x5d5c <cos>
    4eac:	4b 01       	movw	r8, r22
    4eae:	5c 01       	movw	r10, r24
    4eb0:	c7 01       	movw	r24, r14
    4eb2:	b6 01       	movw	r22, r12
    4eb4:	0e 94 0d 31 	call	0x621a	; 0x621a <sin>
    4eb8:	6d 87       	std	Y+13, r22	; 0x0d
    4eba:	7e 87       	std	Y+14, r23	; 0x0e
    4ebc:	8f 87       	std	Y+15, r24	; 0x0f
    4ebe:	98 8b       	std	Y+16, r25	; 0x10
		temp_M[1] = achsen[1]*cos(roll);
    4ec0:	a5 01       	movw	r20, r10
    4ec2:	94 01       	movw	r18, r8
    4ec4:	c3 01       	movw	r24, r6
    4ec6:	b2 01       	movw	r22, r4
    4ec8:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    4ecc:	b2 d7       	rcall	.+3940   	; 0x5e32 <__fixsfsi>
		temp_M[1]+= achsen[2]*sin(roll);
    4ece:	88 27       	eor	r24, r24
    4ed0:	77 fd       	sbrc	r23, 7
    4ed2:	80 95       	com	r24
    4ed4:	98 2f       	mov	r25, r24
    4ed6:	e0 d7       	rcall	.+4032   	; 0x5e98 <__floatsisf>
    4ed8:	6b 01       	movw	r12, r22
    4eda:	7c 01       	movw	r14, r24
    4edc:	29 85       	ldd	r18, Y+9	; 0x09
    4ede:	3a 85       	ldd	r19, Y+10	; 0x0a
    4ee0:	4b 85       	ldd	r20, Y+11	; 0x0b
    4ee2:	5c 85       	ldd	r21, Y+12	; 0x0c
    4ee4:	6d 81       	ldd	r22, Y+5	; 0x05
    4ee6:	7e 81       	ldd	r23, Y+6	; 0x06
    4ee8:	8f 81       	ldd	r24, Y+7	; 0x07
    4eea:	98 85       	ldd	r25, Y+8	; 0x08
    4eec:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    4ef0:	9b 01       	movw	r18, r22
    4ef2:	ac 01       	movw	r20, r24
    4ef4:	c7 01       	movw	r24, r14
    4ef6:	b6 01       	movw	r22, r12
    4ef8:	67 d6       	rcall	.+3278   	; 0x5bc8 <__addsf3>
    4efa:	9b d7       	rcall	.+3894   	; 0x5e32 <__fixsfsi>
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4efc:	88 27       	eor	r24, r24
    4efe:	77 fd       	sbrc	r23, 7
    4f00:	80 95       	com	r24
    4f02:	98 2f       	mov	r25, r24
    4f04:	c9 d7       	rcall	.+3986   	; 0x5e98 <__floatsisf>
    4f06:	69 8b       	std	Y+17, r22	; 0x11
    4f08:	7a 8b       	std	Y+18, r23	; 0x12
    4f0a:	8b 8b       	std	Y+19, r24	; 0x13
    4f0c:	9c 8b       	std	Y+20, r25	; 0x14
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4f0e:	f1 01       	movw	r30, r2
    4f10:	60 81       	ld	r22, Z
    4f12:	71 81       	ldd	r23, Z+1	; 0x01
    4f14:	88 27       	eor	r24, r24
    4f16:	77 fd       	sbrc	r23, 7
    4f18:	80 95       	com	r24
    4f1a:	98 2f       	mov	r25, r24
    4f1c:	bd d7       	rcall	.+3962   	; 0x5e98 <__floatsisf>
    4f1e:	29 81       	ldd	r18, Y+1	; 0x01
    4f20:	3a 81       	ldd	r19, Y+2	; 0x02
    4f22:	4b 81       	ldd	r20, Y+3	; 0x03
    4f24:	5c 81       	ldd	r21, Y+4	; 0x04
    4f26:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    4f2a:	83 d7       	rcall	.+3846   	; 0x5e32 <__fixsfsi>
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4f2c:	88 27       	eor	r24, r24
    4f2e:	77 fd       	sbrc	r23, 7
    4f30:	80 95       	com	r24
    4f32:	98 2f       	mov	r25, r24
    4f34:	b1 d7       	rcall	.+3938   	; 0x5e98 <__floatsisf>
    4f36:	6b 01       	movw	r12, r22
    4f38:	7c 01       	movw	r14, r24
    4f3a:	2d 81       	ldd	r18, Y+5	; 0x05
    4f3c:	3e 81       	ldd	r19, Y+6	; 0x06
    4f3e:	4f 81       	ldd	r20, Y+7	; 0x07
    4f40:	58 85       	ldd	r21, Y+8	; 0x08
    4f42:	c3 01       	movw	r24, r6
    4f44:	b2 01       	movw	r22, r4
    4f46:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    4f4a:	9b 01       	movw	r18, r22
    4f4c:	ac 01       	movw	r20, r24
    4f4e:	69 81       	ldd	r22, Y+1	; 0x01
    4f50:	7a 81       	ldd	r23, Y+2	; 0x02
    4f52:	8b 81       	ldd	r24, Y+3	; 0x03
    4f54:	9c 81       	ldd	r25, Y+4	; 0x04
    4f56:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    4f5a:	9b 01       	movw	r18, r22
    4f5c:	ac 01       	movw	r20, r24
    4f5e:	c7 01       	movw	r24, r14
    4f60:	b6 01       	movw	r22, r12
    4f62:	32 d6       	rcall	.+3172   	; 0x5bc8 <__addsf3>
    4f64:	66 d7       	rcall	.+3788   	; 0x5e32 <__fixsfsi>
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    4f66:	88 27       	eor	r24, r24
    4f68:	77 fd       	sbrc	r23, 7
    4f6a:	80 95       	com	r24
    4f6c:	98 2f       	mov	r25, r24
    4f6e:	94 d7       	rcall	.+3880   	; 0x5e98 <__floatsisf>
    4f70:	6b 01       	movw	r12, r22
    4f72:	7c 01       	movw	r14, r24
    4f74:	a5 01       	movw	r20, r10
    4f76:	94 01       	movw	r18, r8
    4f78:	69 85       	ldd	r22, Y+9	; 0x09
    4f7a:	7a 85       	ldd	r23, Y+10	; 0x0a
    4f7c:	8b 85       	ldd	r24, Y+11	; 0x0b
    4f7e:	9c 85       	ldd	r25, Y+12	; 0x0c
    4f80:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    4f84:	2d 85       	ldd	r18, Y+13	; 0x0d
    4f86:	3e 85       	ldd	r19, Y+14	; 0x0e
    4f88:	4f 85       	ldd	r20, Y+15	; 0x0f
    4f8a:	58 89       	ldd	r21, Y+16	; 0x10
    4f8c:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    4f90:	9b 01       	movw	r18, r22
    4f92:	ac 01       	movw	r20, r24
    4f94:	c7 01       	movw	r24, r14
    4f96:	b6 01       	movw	r22, r12
    4f98:	17 d6       	rcall	.+3118   	; 0x5bc8 <__addsf3>
    4f9a:	4b d7       	rcall	.+3734   	; 0x5e32 <__fixsfsi>
		temp_M[1] = achsen[1]*cos(roll);
		temp_M[1]+= achsen[2]*sin(roll);
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4f9c:	88 27       	eor	r24, r24
    4f9e:	77 fd       	sbrc	r23, 7
    4fa0:	80 95       	com	r24
    4fa2:	98 2f       	mov	r25, r24
    4fa4:	79 d7       	rcall	.+3826   	; 0x5e98 <__floatsisf>
    4fa6:	29 89       	ldd	r18, Y+17	; 0x11
    4fa8:	3a 89       	ldd	r19, Y+18	; 0x12
    4faa:	4b 89       	ldd	r20, Y+19	; 0x13
    4fac:	5c 89       	ldd	r21, Y+20	; 0x14
    4fae:	7f d6       	rcall	.+3326   	; 0x5cae <atan2>
    4fb0:	20 e0       	ldi	r18, 0x00	; 0
    4fb2:	30 e0       	ldi	r19, 0x00	; 0
    4fb4:	44 e3       	ldi	r20, 0x34	; 52
    4fb6:	53 e4       	ldi	r21, 0x43	; 67
    4fb8:	0e 94 aa 30 	call	0x6154	; 0x6154 <__mulsf3>
    4fbc:	2b ed       	ldi	r18, 0xDB	; 219
    4fbe:	3f e0       	ldi	r19, 0x0F	; 15
    4fc0:	49 e4       	ldi	r20, 0x49	; 73
    4fc2:	50 e4       	ldi	r21, 0x40	; 64
    4fc4:	ce d6       	rcall	.+3484   	; 0x5d62 <__divsf3>
    4fc6:	20 e0       	ldi	r18, 0x00	; 0
    4fc8:	30 e0       	ldi	r19, 0x00	; 0
    4fca:	44 e3       	ldi	r20, 0x34	; 52
    4fcc:	53 e4       	ldi	r21, 0x43	; 67
    4fce:	fc d5       	rcall	.+3064   	; 0x5bc8 <__addsf3>
		//Tilt kompensation
		//deklination
		angle+=2.35;
    4fd0:	26 e6       	ldi	r18, 0x66	; 102
    4fd2:	36 e6       	ldi	r19, 0x66	; 102
    4fd4:	46 e1       	ldi	r20, 0x16	; 22
    4fd6:	50 e4       	ldi	r21, 0x40	; 64
    4fd8:	f7 d5       	rcall	.+3054   	; 0x5bc8 <__addsf3>
    4fda:	6b 01       	movw	r12, r22
    4fdc:	7c 01       	movw	r14, r24
		//Normierung auf %360
		if (angle>=360)
    4fde:	20 e0       	ldi	r18, 0x00	; 0
    4fe0:	30 e0       	ldi	r19, 0x00	; 0
    4fe2:	44 eb       	ldi	r20, 0xB4	; 180
    4fe4:	53 e4       	ldi	r21, 0x43	; 67
    4fe6:	0e 94 5a 30 	call	0x60b4	; 0x60b4 <__gesf2>
    4fea:	88 23       	and	r24, r24
    4fec:	54 f0       	brlt	.+20     	; 0x5002 <_ZN7Kompass5angleEdd+0x1ec>
		{
			angle-=360;
    4fee:	20 e0       	ldi	r18, 0x00	; 0
    4ff0:	30 e0       	ldi	r19, 0x00	; 0
    4ff2:	44 eb       	ldi	r20, 0xB4	; 180
    4ff4:	53 e4       	ldi	r21, 0x43	; 67
    4ff6:	c7 01       	movw	r24, r14
    4ff8:	b6 01       	movw	r22, r12
    4ffa:	e5 d5       	rcall	.+3018   	; 0x5bc6 <__subsf3>
    4ffc:	6b 01       	movw	r12, r22
    4ffe:	7c 01       	movw	r14, r24
    5000:	1a c0       	rjmp	.+52     	; 0x5036 <_ZN7Kompass5angleEdd+0x220>
		}
		else if (angle < 0)
    5002:	20 e0       	ldi	r18, 0x00	; 0
    5004:	30 e0       	ldi	r19, 0x00	; 0
    5006:	a9 01       	movw	r20, r18
    5008:	c7 01       	movw	r24, r14
    500a:	b6 01       	movw	r22, r12
    500c:	a3 d6       	rcall	.+3398   	; 0x5d54 <__cmpsf2>
    500e:	88 23       	and	r24, r24
    5010:	94 f4       	brge	.+36     	; 0x5036 <_ZN7Kompass5angleEdd+0x220>
		{
			angle+=360;
    5012:	20 e0       	ldi	r18, 0x00	; 0
    5014:	30 e0       	ldi	r19, 0x00	; 0
    5016:	44 eb       	ldi	r20, 0xB4	; 180
    5018:	53 e4       	ldi	r21, 0x43	; 67
    501a:	c7 01       	movw	r24, r14
    501c:	b6 01       	movw	r22, r12
    501e:	d4 d5       	rcall	.+2984   	; 0x5bc8 <__addsf3>
    5020:	6b 01       	movw	r12, r22
    5022:	7c 01       	movw	r14, r24
    5024:	08 c0       	rjmp	.+16     	; 0x5036 <_ZN7Kompass5angleEdd+0x220>
double Kompass::angle(double roll, double pitch){
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
    5026:	0f 2e       	mov	r0, r31
    5028:	c1 2c       	mov	r12, r1
    502a:	d1 2c       	mov	r13, r1
    502c:	f0 e8       	ldi	r31, 0x80	; 128
    502e:	ef 2e       	mov	r14, r31
    5030:	ff eb       	ldi	r31, 0xBF	; 191
    5032:	ff 2e       	mov	r15, r31
    5034:	f0 2d       	mov	r31, r0
		{
			angle+=360;
		}
	}
	
	HMC5883L_command(0x02,HMCSIGLEMODE);
    5036:	41 e0       	ldi	r20, 0x01	; 1
    5038:	62 e0       	ldi	r22, 0x02	; 2
    503a:	c1 01       	movw	r24, r2
    503c:	fa dd       	rcall	.-1036   	; 0x4c32 <_ZN7Kompass16HMC5883L_commandEhh>
	return angle;
}
    503e:	c7 01       	movw	r24, r14
    5040:	b6 01       	movw	r22, r12
    5042:	64 96       	adiw	r28, 0x14	; 20
    5044:	0f b6       	in	r0, 0x3f	; 63
    5046:	f8 94       	cli
    5048:	de bf       	out	0x3e, r29	; 62
    504a:	0f be       	out	0x3f, r0	; 63
    504c:	cd bf       	out	0x3d, r28	; 61
    504e:	df 91       	pop	r29
    5050:	cf 91       	pop	r28
    5052:	1f 91       	pop	r17
    5054:	0f 91       	pop	r16
    5056:	ff 90       	pop	r15
    5058:	ef 90       	pop	r14
    505a:	df 90       	pop	r13
    505c:	cf 90       	pop	r12
    505e:	bf 90       	pop	r11
    5060:	af 90       	pop	r10
    5062:	9f 90       	pop	r9
    5064:	8f 90       	pop	r8
    5066:	7f 90       	pop	r7
    5068:	6f 90       	pop	r6
    506a:	5f 90       	pop	r5
    506c:	4f 90       	pop	r4
    506e:	3f 90       	pop	r3
    5070:	2f 90       	pop	r2
    5072:	08 95       	ret

00005074 <_ZN7Kompass25kallibrierung_ruecksetzenEv>:

void Kompass::kallibrierung_ruecksetzen(){
    5074:	fc 01       	movw	r30, r24
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    5076:	16 86       	std	Z+14, r1	; 0x0e
    5078:	15 86       	std	Z+13, r1	; 0x0d
		min[i]=0;
    507a:	14 8a       	std	Z+20, r1	; 0x14
    507c:	13 8a       	std	Z+19, r1	; 0x13
		offset[i]=0;
    507e:	10 86       	std	Z+8, r1	; 0x08
    5080:	17 82       	std	Z+7, r1	; 0x07
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    5082:	10 8a       	std	Z+16, r1	; 0x10
    5084:	17 86       	std	Z+15, r1	; 0x0f
		min[i]=0;
    5086:	16 8a       	std	Z+22, r1	; 0x16
    5088:	15 8a       	std	Z+21, r1	; 0x15
		offset[i]=0;
    508a:	12 86       	std	Z+10, r1	; 0x0a
    508c:	11 86       	std	Z+9, r1	; 0x09
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    508e:	12 8a       	std	Z+18, r1	; 0x12
    5090:	11 8a       	std	Z+17, r1	; 0x11
		min[i]=0;
    5092:	10 8e       	std	Z+24, r1	; 0x18
    5094:	17 8a       	std	Z+23, r1	; 0x17
		offset[i]=0;
    5096:	14 86       	std	Z+12, r1	; 0x0c
    5098:	13 86       	std	Z+11, r1	; 0x0b
    509a:	08 95       	ret

0000509c <_ZN7LSM303DD1Ev>:
	//FIFO Bypass Mode
	ACCBypassmode();
}

void LSM303D::ACCStreammode(){
	LSM303_command(FIFO_CTRL,(1<<FM1));
    509c:	40 96       	adiw	r24, 0x10	; 16
    509e:	a6 cc       	rjmp	.-1716   	; 0x49ec <_ZN3I2CD1Ev>
    50a0:	08 95       	ret

000050a2 <_ZN7LSM303D7readaccEv>:
    50a2:	6f 92       	push	r6
    50a4:	7f 92       	push	r7
    50a6:	8f 92       	push	r8
    50a8:	9f 92       	push	r9
    50aa:	af 92       	push	r10
    50ac:	bf 92       	push	r11
    50ae:	cf 92       	push	r12
    50b0:	df 92       	push	r13
    50b2:	ef 92       	push	r14
    50b4:	ff 92       	push	r15
    50b6:	1f 93       	push	r17
    50b8:	cf 93       	push	r28
    50ba:	df 93       	push	r29
    50bc:	00 d0       	rcall	.+0      	; 0x50be <_ZN7LSM303D7readaccEv+0x1c>
    50be:	00 d0       	rcall	.+0      	; 0x50c0 <_ZN7LSM303D7readaccEv+0x1e>
    50c0:	00 d0       	rcall	.+0      	; 0x50c2 <_ZN7LSM303D7readaccEv+0x20>
    50c2:	cd b7       	in	r28, 0x3d	; 61
    50c4:	de b7       	in	r29, 0x3e	; 62
    50c6:	3c 01       	movw	r6, r24
    50c8:	f8 94       	cli
    50ca:	6c 01       	movw	r12, r24
    50cc:	80 e1       	ldi	r24, 0x10	; 16
    50ce:	c8 0e       	add	r12, r24
    50d0:	d1 1c       	adc	r13, r1
    50d2:	c6 01       	movw	r24, r12
    50d4:	8c dc       	rcall	.-1768   	; 0x49ee <_ZN3I2C9twi_startEv>
    50d6:	6a e3       	ldi	r22, 0x3A	; 58
    50d8:	c6 01       	movw	r24, r12
    50da:	91 dc       	rcall	.-1758   	; 0x49fe <_ZN3I2C9twi_writeEh>
    50dc:	68 ea       	ldi	r22, 0xA8	; 168
    50de:	c6 01       	movw	r24, r12
    50e0:	8e dc       	rcall	.-1764   	; 0x49fe <_ZN3I2C9twi_writeEh>
    50e2:	c6 01       	movw	r24, r12
    50e4:	84 dc       	rcall	.-1784   	; 0x49ee <_ZN3I2C9twi_startEv>
    50e6:	6b e3       	ldi	r22, 0x3B	; 59
    50e8:	c6 01       	movw	r24, r12
    50ea:	89 dc       	rcall	.-1774   	; 0x49fe <_ZN3I2C9twi_writeEh>
    50ec:	fe 01       	movw	r30, r28
    50ee:	31 96       	adiw	r30, 0x01	; 1
    50f0:	7f 01       	movw	r14, r30
    50f2:	10 e0       	ldi	r17, 0x00	; 0
    50f4:	15 30       	cpi	r17, 0x05	; 5
    50f6:	30 f4       	brcc	.+12     	; 0x5104 <_ZN7LSM303D7readaccEv+0x62>
    50f8:	61 e0       	ldi	r22, 0x01	; 1
    50fa:	c6 01       	movw	r24, r12
    50fc:	90 dc       	rcall	.-1760   	; 0x4a1e <_ZN3I2C8twi_readEh>
    50fe:	f7 01       	movw	r30, r14
    5100:	80 83       	st	Z, r24
    5102:	05 c0       	rjmp	.+10     	; 0x510e <_ZN7LSM303D7readaccEv+0x6c>
    5104:	60 e0       	ldi	r22, 0x00	; 0
    5106:	c6 01       	movw	r24, r12
    5108:	8a dc       	rcall	.-1772   	; 0x4a1e <_ZN3I2C8twi_readEh>
    510a:	f7 01       	movw	r30, r14
    510c:	80 83       	st	Z, r24
    510e:	1f 5f       	subi	r17, 0xFF	; 255
    5110:	ff ef       	ldi	r31, 0xFF	; 255
    5112:	ef 1a       	sub	r14, r31
    5114:	ff 0a       	sbc	r15, r31
    5116:	16 30       	cpi	r17, 0x06	; 6
    5118:	69 f7       	brne	.-38     	; 0x50f4 <_ZN7LSM303D7readaccEv+0x52>
    511a:	c6 01       	movw	r24, r12
    511c:	6c dc       	rcall	.-1832   	; 0x49f6 <_ZN3I2C8twi_stopEv>
    511e:	6a 81       	ldd	r22, Y+2	; 0x02
    5120:	70 e0       	ldi	r23, 0x00	; 0
    5122:	76 2f       	mov	r23, r22
    5124:	66 27       	eor	r22, r22
    5126:	89 81       	ldd	r24, Y+1	; 0x01
    5128:	68 2b       	or	r22, r24
    512a:	f3 01       	movw	r30, r6
    512c:	75 83       	std	Z+5, r23	; 0x05
    512e:	64 83       	std	Z+4, r22	; 0x04
    5130:	ac 80       	ldd	r10, Y+4	; 0x04
    5132:	b1 2c       	mov	r11, r1
    5134:	ba 2c       	mov	r11, r10
    5136:	aa 24       	eor	r10, r10
    5138:	8b 81       	ldd	r24, Y+3	; 0x03
    513a:	a8 2a       	or	r10, r24
    513c:	b1 82       	std	Z+1, r11	; 0x01
    513e:	a0 82       	st	Z, r10
    5140:	8e 80       	ldd	r8, Y+6	; 0x06
    5142:	91 2c       	mov	r9, r1
    5144:	98 2c       	mov	r9, r8
    5146:	88 24       	eor	r8, r8
    5148:	8d 81       	ldd	r24, Y+5	; 0x05
    514a:	88 2a       	or	r8, r24
    514c:	93 82       	std	Z+3, r9	; 0x03
    514e:	82 82       	std	Z+2, r8	; 0x02
    5150:	88 27       	eor	r24, r24
    5152:	77 fd       	sbrc	r23, 7
    5154:	80 95       	com	r24
    5156:	98 2f       	mov	r25, r24
    5158:	9f d6       	rcall	.+3390   	; 0x5e98 <__floatsisf>
    515a:	6b 01       	movw	r12, r22
    515c:	7c 01       	movw	r14, r24
    515e:	b4 01       	movw	r22, r8
    5160:	88 27       	eor	r24, r24
    5162:	77 fd       	sbrc	r23, 7
    5164:	80 95       	com	r24
    5166:	98 2f       	mov	r25, r24
    5168:	97 d6       	rcall	.+3374   	; 0x5e98 <__floatsisf>
    516a:	9b 01       	movw	r18, r22
    516c:	ac 01       	movw	r20, r24
    516e:	c7 01       	movw	r24, r14
    5170:	b6 01       	movw	r22, r12
    5172:	9d d5       	rcall	.+2874   	; 0x5cae <atan2>
    5174:	2b ed       	ldi	r18, 0xDB	; 219
    5176:	3f e0       	ldi	r19, 0x0F	; 15
    5178:	49 ec       	ldi	r20, 0xC9	; 201
    517a:	5f e3       	ldi	r21, 0x3F	; 63
    517c:	24 d5       	rcall	.+2632   	; 0x5bc6 <__subsf3>
    517e:	f3 01       	movw	r30, r6
    5180:	64 87       	std	Z+12, r22	; 0x0c
    5182:	75 87       	std	Z+13, r23	; 0x0d
    5184:	86 87       	std	Z+14, r24	; 0x0e
    5186:	97 87       	std	Z+15, r25	; 0x0f
    5188:	b5 01       	movw	r22, r10
    518a:	88 27       	eor	r24, r24
    518c:	77 fd       	sbrc	r23, 7
    518e:	80 95       	com	r24
    5190:	98 2f       	mov	r25, r24
    5192:	82 d6       	rcall	.+3332   	; 0x5e98 <__floatsisf>
    5194:	9b 01       	movw	r18, r22
    5196:	ac 01       	movw	r20, r24
    5198:	c7 01       	movw	r24, r14
    519a:	b6 01       	movw	r22, r12
    519c:	88 d5       	rcall	.+2832   	; 0x5cae <atan2>
    519e:	2b ed       	ldi	r18, 0xDB	; 219
    51a0:	3f e0       	ldi	r19, 0x0F	; 15
    51a2:	49 ec       	ldi	r20, 0xC9	; 201
    51a4:	5f e3       	ldi	r21, 0x3F	; 63
    51a6:	0f d5       	rcall	.+2590   	; 0x5bc6 <__subsf3>
    51a8:	f3 01       	movw	r30, r6
    51aa:	60 87       	std	Z+8, r22	; 0x08
    51ac:	71 87       	std	Z+9, r23	; 0x09
    51ae:	82 87       	std	Z+10, r24	; 0x0a
    51b0:	93 87       	std	Z+11, r25	; 0x0b
    51b2:	78 94       	sei
    51b4:	26 96       	adiw	r28, 0x06	; 6
    51b6:	0f b6       	in	r0, 0x3f	; 63
    51b8:	f8 94       	cli
    51ba:	de bf       	out	0x3e, r29	; 62
    51bc:	0f be       	out	0x3f, r0	; 63
    51be:	cd bf       	out	0x3d, r28	; 61
    51c0:	df 91       	pop	r29
    51c2:	cf 91       	pop	r28
    51c4:	1f 91       	pop	r17
    51c6:	ff 90       	pop	r15
    51c8:	ef 90       	pop	r14
    51ca:	df 90       	pop	r13
    51cc:	cf 90       	pop	r12
    51ce:	bf 90       	pop	r11
    51d0:	af 90       	pop	r10
    51d2:	9f 90       	pop	r9
    51d4:	8f 90       	pop	r8
    51d6:	7f 90       	pop	r7
    51d8:	6f 90       	pop	r6
    51da:	08 95       	ret

000051dc <_ZN7LSM303D11readtemperaEv>:
    51dc:	cf 92       	push	r12
    51de:	df 92       	push	r13
    51e0:	ef 92       	push	r14
    51e2:	ff 92       	push	r15
    51e4:	0f 93       	push	r16
    51e6:	1f 93       	push	r17
    51e8:	cf 93       	push	r28
    51ea:	df 93       	push	r29
    51ec:	00 d0       	rcall	.+0      	; 0x51ee <_ZN7LSM303D11readtemperaEv+0x12>
    51ee:	cd b7       	in	r28, 0x3d	; 61
    51f0:	de b7       	in	r29, 0x3e	; 62
    51f2:	7c 01       	movw	r14, r24
    51f4:	f8 94       	cli
    51f6:	8c 01       	movw	r16, r24
    51f8:	00 5f       	subi	r16, 0xF0	; 240
    51fa:	1f 4f       	sbci	r17, 0xFF	; 255
    51fc:	c8 01       	movw	r24, r16
    51fe:	f7 db       	rcall	.-2066   	; 0x49ee <_ZN3I2C9twi_startEv>
    5200:	6a e3       	ldi	r22, 0x3A	; 58
    5202:	c8 01       	movw	r24, r16
    5204:	fc db       	rcall	.-2056   	; 0x49fe <_ZN3I2C9twi_writeEh>
    5206:	65 e8       	ldi	r22, 0x85	; 133
    5208:	c8 01       	movw	r24, r16
    520a:	f9 db       	rcall	.-2062   	; 0x49fe <_ZN3I2C9twi_writeEh>
    520c:	c8 01       	movw	r24, r16
    520e:	ef db       	rcall	.-2082   	; 0x49ee <_ZN3I2C9twi_startEv>
    5210:	6b e3       	ldi	r22, 0x3B	; 59
    5212:	c8 01       	movw	r24, r16
    5214:	f4 db       	rcall	.-2072   	; 0x49fe <_ZN3I2C9twi_writeEh>
    5216:	cc 24       	eor	r12, r12
    5218:	c3 94       	inc	r12
    521a:	d1 2c       	mov	r13, r1
    521c:	02 c0       	rjmp	.+4      	; 0x5222 <_ZN7LSM303D11readtemperaEv+0x46>
    521e:	d3 94       	inc	r13
    5220:	c3 94       	inc	r12
    5222:	d1 10       	cpse	r13, r1
    5224:	05 c0       	rjmp	.+10     	; 0x5230 <_ZN7LSM303D11readtemperaEv+0x54>
    5226:	61 e0       	ldi	r22, 0x01	; 1
    5228:	c8 01       	movw	r24, r16
    522a:	f9 db       	rcall	.-2062   	; 0x4a1e <_ZN3I2C8twi_readEh>
    522c:	89 83       	std	Y+1, r24	; 0x01
    522e:	f7 cf       	rjmp	.-18     	; 0x521e <_ZN7LSM303D11readtemperaEv+0x42>
    5230:	60 e0       	ldi	r22, 0x00	; 0
    5232:	c8 01       	movw	r24, r16
    5234:	f4 db       	rcall	.-2072   	; 0x4a1e <_ZN3I2C8twi_readEh>
    5236:	e1 e0       	ldi	r30, 0x01	; 1
    5238:	f0 e0       	ldi	r31, 0x00	; 0
    523a:	ec 0f       	add	r30, r28
    523c:	fd 1f       	adc	r31, r29
    523e:	ed 0d       	add	r30, r13
    5240:	f1 1d       	adc	r31, r1
    5242:	80 83       	st	Z, r24
    5244:	81 e0       	ldi	r24, 0x01	; 1
    5246:	8c 15       	cp	r24, r12
    5248:	50 f7       	brcc	.-44     	; 0x521e <_ZN7LSM303D11readtemperaEv+0x42>
    524a:	c8 01       	movw	r24, r16
    524c:	d4 db       	rcall	.-2136   	; 0x49f6 <_ZN3I2C8twi_stopEv>
    524e:	8a 81       	ldd	r24, Y+2	; 0x02
    5250:	90 e0       	ldi	r25, 0x00	; 0
    5252:	98 2f       	mov	r25, r24
    5254:	88 27       	eor	r24, r24
    5256:	29 81       	ldd	r18, Y+1	; 0x01
    5258:	82 2b       	or	r24, r18
    525a:	91 95       	neg	r25
    525c:	81 95       	neg	r24
    525e:	91 09       	sbc	r25, r1
    5260:	f7 01       	movw	r30, r14
    5262:	97 83       	std	Z+7, r25	; 0x07
    5264:	86 83       	std	Z+6, r24	; 0x06
    5266:	78 94       	sei
    5268:	0f 90       	pop	r0
    526a:	0f 90       	pop	r0
    526c:	df 91       	pop	r29
    526e:	cf 91       	pop	r28
    5270:	1f 91       	pop	r17
    5272:	0f 91       	pop	r16
    5274:	ff 90       	pop	r15
    5276:	ef 90       	pop	r14
    5278:	df 90       	pop	r13
    527a:	cf 90       	pop	r12
    527c:	08 95       	ret

0000527e <_ZN7LSM303D14LSM303_commandEhh>:
    527e:	0f 93       	push	r16
    5280:	1f 93       	push	r17
    5282:	cf 93       	push	r28
    5284:	df 93       	push	r29
    5286:	06 2f       	mov	r16, r22
    5288:	14 2f       	mov	r17, r20
    528a:	ec 01       	movw	r28, r24
    528c:	60 96       	adiw	r28, 0x10	; 16
    528e:	ce 01       	movw	r24, r28
    5290:	ae db       	rcall	.-2212   	; 0x49ee <_ZN3I2C9twi_startEv>
    5292:	6a e3       	ldi	r22, 0x3A	; 58
    5294:	ce 01       	movw	r24, r28
    5296:	b3 db       	rcall	.-2202   	; 0x49fe <_ZN3I2C9twi_writeEh>
    5298:	60 2f       	mov	r22, r16
    529a:	ce 01       	movw	r24, r28
    529c:	b0 db       	rcall	.-2208   	; 0x49fe <_ZN3I2C9twi_writeEh>
    529e:	61 2f       	mov	r22, r17
    52a0:	ce 01       	movw	r24, r28
    52a2:	ad db       	rcall	.-2214   	; 0x49fe <_ZN3I2C9twi_writeEh>
    52a4:	ce 01       	movw	r24, r28
    52a6:	a7 db       	rcall	.-2226   	; 0x49f6 <_ZN3I2C8twi_stopEv>
    52a8:	df 91       	pop	r29
    52aa:	cf 91       	pop	r28
    52ac:	1f 91       	pop	r17
    52ae:	0f 91       	pop	r16
    52b0:	08 95       	ret

000052b2 <_ZN7LSM303D13ACCBypassmodeEv>:
}

void LSM303D::ACCBypassmode(){
	LSM303_command(FIFO_CTRL,0x00);
    52b2:	40 e0       	ldi	r20, 0x00	; 0
    52b4:	6e e2       	ldi	r22, 0x2E	; 46
    52b6:	e3 cf       	rjmp	.-58     	; 0x527e <_ZN7LSM303D14LSM303_commandEhh>
    52b8:	08 95       	ret

000052ba <_ZN7LSM303D9acce_initEv>:
// default destructor
LSM303D::~LSM303D()
{
} //~LSM303D

void LSM303D::acce_init(){
    52ba:	cf 93       	push	r28
    52bc:	df 93       	push	r29
    52be:	ec 01       	movw	r28, r24
	//ACC Activ und 25Hz ohne Block dataread
	LSM303_command(CTRL1,(1<<AXEN)|(1<<AYEN)|(1<<AZEN)|(1<<AODR2));
    52c0:	47 e4       	ldi	r20, 0x47	; 71
    52c2:	60 e2       	ldi	r22, 0x20	; 32
    52c4:	dc df       	rcall	.-72     	; 0x527e <_ZN7LSM303D14LSM303_commandEhh>
	
	//ACC fuer +-2g
	LSM303_command(CTRL2,0x00);
    52c6:	40 e0       	ldi	r20, 0x00	; 0
    52c8:	61 e2       	ldi	r22, 0x21	; 33
    52ca:	ce 01       	movw	r24, r28
    52cc:	d8 df       	rcall	.-80     	; 0x527e <_ZN7LSM303D14LSM303_commandEhh>
	
	//Temperatursensor an
	LSM303_command(CTRL5,(1<<TEMP_EN));
    52ce:	40 e8       	ldi	r20, 0x80	; 128
    52d0:	64 e2       	ldi	r22, 0x24	; 36
    52d2:	ce 01       	movw	r24, r28
    52d4:	d4 df       	rcall	.-88     	; 0x527e <_ZN7LSM303D14LSM303_commandEhh>
	
	//FIFO Bypass Mode
	ACCBypassmode();
    52d6:	ce 01       	movw	r24, r28
    52d8:	ec df       	rcall	.-40     	; 0x52b2 <_ZN7LSM303D13ACCBypassmodeEv>
}
    52da:	df 91       	pop	r29
    52dc:	cf 91       	pop	r28
    52de:	08 95       	ret

000052e0 <_ZN7LSM303DC1Ev>:


#include "LSM303D.h"

// default constructor
LSM303D::LSM303D()
    52e0:	cf 93       	push	r28
    52e2:	df 93       	push	r29
    52e4:	ec 01       	movw	r28, r24
    52e6:	40 96       	adiw	r24, 0x10	; 16
    52e8:	7d db       	rcall	.-2310   	; 0x49e4 <_ZN3I2CC1Ev>
{
	//Variablen initialisieren
	Tempera=0;
    52ea:	1f 82       	std	Y+7, r1	; 0x07
    52ec:	1e 82       	std	Y+6, r1	; 0x06
	roll=0.0;
    52ee:	18 86       	std	Y+8, r1	; 0x08
    52f0:	19 86       	std	Y+9, r1	; 0x09
    52f2:	1a 86       	std	Y+10, r1	; 0x0a
    52f4:	1b 86       	std	Y+11, r1	; 0x0b
	pitch=0.0;
    52f6:	1c 86       	std	Y+12, r1	; 0x0c
    52f8:	1d 86       	std	Y+13, r1	; 0x0d
    52fa:	1e 86       	std	Y+14, r1	; 0x0e
    52fc:	1f 86       	std	Y+15, r1	; 0x0f
	for (uint8_t i=0;i<3;i++)
	{
		achsen_A[i]=0;
    52fe:	19 82       	std	Y+1, r1	; 0x01
    5300:	18 82       	st	Y, r1
    5302:	1b 82       	std	Y+3, r1	; 0x03
    5304:	1a 82       	std	Y+2, r1	; 0x02
    5306:	1d 82       	std	Y+5, r1	; 0x05
    5308:	1c 82       	std	Y+4, r1	; 0x04
	}
	
	//ACC init
	acce_init();
    530a:	ce 01       	movw	r24, r28
    530c:	d6 df       	rcall	.-84     	; 0x52ba <_ZN7LSM303D9acce_initEv>
} //LSM303D
    530e:	df 91       	pop	r29
    5310:	cf 91       	pop	r28
    5312:	08 95       	ret

00005314 <_ZN6OutputC1Ehh>:
#include "Output.h"

// default constructor
Output::Output(uint8_t Portpraefix, uint8_t Pinnumber)
{
	Pin=Pinnumber;
    5314:	fc 01       	movw	r30, r24
    5316:	41 83       	std	Z+1, r20	; 0x01
	Port=Portpraefix;
    5318:	60 83       	st	Z, r22
	switch (Portpraefix)
    531a:	62 34       	cpi	r22, 0x42	; 66
    531c:	b1 f0       	breq	.+44     	; 0x534a <_ZN6OutputC1Ehh+0x36>
    531e:	18 f4       	brcc	.+6      	; 0x5326 <_ZN6OutputC1Ehh+0x12>
    5320:	61 34       	cpi	r22, 0x41	; 65
    5322:	31 f0       	breq	.+12     	; 0x5330 <_ZN6OutputC1Ehh+0x1c>
    5324:	08 95       	ret
    5326:	63 34       	cpi	r22, 0x43	; 67
    5328:	e9 f0       	breq	.+58     	; 0x5364 <_ZN6OutputC1Ehh+0x50>
    532a:	64 34       	cpi	r22, 0x44	; 68
    532c:	41 f1       	breq	.+80     	; 0x537e <_ZN6OutputC1Ehh+0x6a>
    532e:	08 95       	ret
	{
		case 'A':
			DDRA |= (1<<Pin);
    5330:	21 b1       	in	r18, 0x01	; 1
    5332:	81 e0       	ldi	r24, 0x01	; 1
    5334:	90 e0       	ldi	r25, 0x00	; 0
    5336:	bc 01       	movw	r22, r24
    5338:	02 c0       	rjmp	.+4      	; 0x533e <_ZN6OutputC1Ehh+0x2a>
    533a:	66 0f       	add	r22, r22
    533c:	77 1f       	adc	r23, r23
    533e:	4a 95       	dec	r20
    5340:	e2 f7       	brpl	.-8      	; 0x533a <_ZN6OutputC1Ehh+0x26>
    5342:	ab 01       	movw	r20, r22
    5344:	42 2b       	or	r20, r18
    5346:	41 b9       	out	0x01, r20	; 1
			break;
    5348:	08 95       	ret
		case 'B':
			DDRB |= (1<<Pin);
    534a:	24 b1       	in	r18, 0x04	; 4
    534c:	81 e0       	ldi	r24, 0x01	; 1
    534e:	90 e0       	ldi	r25, 0x00	; 0
    5350:	fc 01       	movw	r30, r24
    5352:	02 c0       	rjmp	.+4      	; 0x5358 <_ZN6OutputC1Ehh+0x44>
    5354:	ee 0f       	add	r30, r30
    5356:	ff 1f       	adc	r31, r31
    5358:	4a 95       	dec	r20
    535a:	e2 f7       	brpl	.-8      	; 0x5354 <_ZN6OutputC1Ehh+0x40>
    535c:	af 01       	movw	r20, r30
    535e:	42 2b       	or	r20, r18
    5360:	44 b9       	out	0x04, r20	; 4
			break;
    5362:	08 95       	ret
		case 'C':
			DDRC |= (1<<Pin);
    5364:	27 b1       	in	r18, 0x07	; 7
    5366:	81 e0       	ldi	r24, 0x01	; 1
    5368:	90 e0       	ldi	r25, 0x00	; 0
    536a:	bc 01       	movw	r22, r24
    536c:	02 c0       	rjmp	.+4      	; 0x5372 <_ZN6OutputC1Ehh+0x5e>
    536e:	66 0f       	add	r22, r22
    5370:	77 1f       	adc	r23, r23
    5372:	4a 95       	dec	r20
    5374:	e2 f7       	brpl	.-8      	; 0x536e <_ZN6OutputC1Ehh+0x5a>
    5376:	ab 01       	movw	r20, r22
    5378:	42 2b       	or	r20, r18
    537a:	47 b9       	out	0x07, r20	; 7
			break;
    537c:	08 95       	ret
		case 'D':
			DDRD |= (1<<Pin);
    537e:	2a b1       	in	r18, 0x0a	; 10
    5380:	81 e0       	ldi	r24, 0x01	; 1
    5382:	90 e0       	ldi	r25, 0x00	; 0
    5384:	fc 01       	movw	r30, r24
    5386:	02 c0       	rjmp	.+4      	; 0x538c <_ZN6OutputC1Ehh+0x78>
    5388:	ee 0f       	add	r30, r30
    538a:	ff 1f       	adc	r31, r31
    538c:	4a 95       	dec	r20
    538e:	e2 f7       	brpl	.-8      	; 0x5388 <_ZN6OutputC1Ehh+0x74>
    5390:	af 01       	movw	r20, r30
    5392:	42 2b       	or	r20, r18
    5394:	4a b9       	out	0x0a, r20	; 10
    5396:	08 95       	ret

00005398 <_ZN6OutputD1Ev>:
			break;
	}
} //Output

// default destructor
Output::~Output()
    5398:	08 95       	ret

0000539a <_ZN6Output2onEv>:
{
} //~Output

void Output::on(){
	switch (Port)
    539a:	fc 01       	movw	r30, r24
    539c:	20 81       	ld	r18, Z
    539e:	22 34       	cpi	r18, 0x42	; 66
    53a0:	c1 f0       	breq	.+48     	; 0x53d2 <_ZN6Output2onEv+0x38>
    53a2:	18 f4       	brcc	.+6      	; 0x53aa <_ZN6Output2onEv+0x10>
    53a4:	21 34       	cpi	r18, 0x41	; 65
    53a6:	31 f0       	breq	.+12     	; 0x53b4 <_ZN6Output2onEv+0x1a>
    53a8:	08 95       	ret
    53aa:	23 34       	cpi	r18, 0x43	; 67
    53ac:	09 f1       	breq	.+66     	; 0x53f0 <_ZN6Output2onEv+0x56>
    53ae:	24 34       	cpi	r18, 0x44	; 68
    53b0:	71 f1       	breq	.+92     	; 0x540e <_ZN6Output2onEv+0x74>
    53b2:	08 95       	ret
	{
		case 'A':
			PORTA |= (1<<Pin);
    53b4:	42 b1       	in	r20, 0x02	; 2
    53b6:	21 e0       	ldi	r18, 0x01	; 1
    53b8:	30 e0       	ldi	r19, 0x00	; 0
    53ba:	b9 01       	movw	r22, r18
    53bc:	fc 01       	movw	r30, r24
    53be:	01 80       	ldd	r0, Z+1	; 0x01
    53c0:	02 c0       	rjmp	.+4      	; 0x53c6 <_ZN6Output2onEv+0x2c>
    53c2:	66 0f       	add	r22, r22
    53c4:	77 1f       	adc	r23, r23
    53c6:	0a 94       	dec	r0
    53c8:	e2 f7       	brpl	.-8      	; 0x53c2 <_ZN6Output2onEv+0x28>
    53ca:	cb 01       	movw	r24, r22
    53cc:	84 2b       	or	r24, r20
    53ce:	82 b9       	out	0x02, r24	; 2
			break;
    53d0:	08 95       	ret
		case 'B':
			PORTB |= (1<<Pin);
    53d2:	45 b1       	in	r20, 0x05	; 5
    53d4:	21 e0       	ldi	r18, 0x01	; 1
    53d6:	30 e0       	ldi	r19, 0x00	; 0
    53d8:	b9 01       	movw	r22, r18
    53da:	fc 01       	movw	r30, r24
    53dc:	01 80       	ldd	r0, Z+1	; 0x01
    53de:	02 c0       	rjmp	.+4      	; 0x53e4 <_ZN6Output2onEv+0x4a>
    53e0:	66 0f       	add	r22, r22
    53e2:	77 1f       	adc	r23, r23
    53e4:	0a 94       	dec	r0
    53e6:	e2 f7       	brpl	.-8      	; 0x53e0 <_ZN6Output2onEv+0x46>
    53e8:	cb 01       	movw	r24, r22
    53ea:	84 2b       	or	r24, r20
    53ec:	85 b9       	out	0x05, r24	; 5
			break;
    53ee:	08 95       	ret
		case 'C':
			PORTC |= (1<<Pin);
    53f0:	48 b1       	in	r20, 0x08	; 8
    53f2:	21 e0       	ldi	r18, 0x01	; 1
    53f4:	30 e0       	ldi	r19, 0x00	; 0
    53f6:	b9 01       	movw	r22, r18
    53f8:	fc 01       	movw	r30, r24
    53fa:	01 80       	ldd	r0, Z+1	; 0x01
    53fc:	02 c0       	rjmp	.+4      	; 0x5402 <_ZN6Output2onEv+0x68>
    53fe:	66 0f       	add	r22, r22
    5400:	77 1f       	adc	r23, r23
    5402:	0a 94       	dec	r0
    5404:	e2 f7       	brpl	.-8      	; 0x53fe <_ZN6Output2onEv+0x64>
    5406:	cb 01       	movw	r24, r22
    5408:	84 2b       	or	r24, r20
    540a:	88 b9       	out	0x08, r24	; 8
			break;
    540c:	08 95       	ret
		case 'D':
			PORTD |= (1<<Pin);
    540e:	4b b1       	in	r20, 0x0b	; 11
    5410:	21 e0       	ldi	r18, 0x01	; 1
    5412:	30 e0       	ldi	r19, 0x00	; 0
    5414:	b9 01       	movw	r22, r18
    5416:	fc 01       	movw	r30, r24
    5418:	01 80       	ldd	r0, Z+1	; 0x01
    541a:	02 c0       	rjmp	.+4      	; 0x5420 <_ZN6Output2onEv+0x86>
    541c:	66 0f       	add	r22, r22
    541e:	77 1f       	adc	r23, r23
    5420:	0a 94       	dec	r0
    5422:	e2 f7       	brpl	.-8      	; 0x541c <_ZN6Output2onEv+0x82>
    5424:	cb 01       	movw	r24, r22
    5426:	84 2b       	or	r24, r20
    5428:	8b b9       	out	0x0b, r24	; 11
    542a:	08 95       	ret

0000542c <_ZN6Output4isonEv>:
	}
}

uint8_t Output::ison(){
	uint8_t returnparam=0;
	switch (Port)
    542c:	fc 01       	movw	r30, r24
    542e:	20 81       	ld	r18, Z
    5430:	22 34       	cpi	r18, 0x42	; 66
    5432:	b1 f0       	breq	.+44     	; 0x5460 <_ZN6Output4isonEv+0x34>
    5434:	18 f4       	brcc	.+6      	; 0x543c <_ZN6Output4isonEv+0x10>
    5436:	21 34       	cpi	r18, 0x41	; 65
    5438:	31 f0       	breq	.+12     	; 0x5446 <_ZN6Output4isonEv+0x1a>
    543a:	39 c0       	rjmp	.+114    	; 0x54ae <_ZN6Output4isonEv+0x82>
    543c:	23 34       	cpi	r18, 0x43	; 67
    543e:	e9 f0       	breq	.+58     	; 0x547a <_ZN6Output4isonEv+0x4e>
    5440:	24 34       	cpi	r18, 0x44	; 68
    5442:	41 f1       	breq	.+80     	; 0x5494 <_ZN6Output4isonEv+0x68>
    5444:	34 c0       	rjmp	.+104    	; 0x54ae <_ZN6Output4isonEv+0x82>
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    5446:	22 b1       	in	r18, 0x02	; 2
    5448:	30 e0       	ldi	r19, 0x00	; 0
    544a:	a9 01       	movw	r20, r18
    544c:	fc 01       	movw	r30, r24
    544e:	01 80       	ldd	r0, Z+1	; 0x01
    5450:	02 c0       	rjmp	.+4      	; 0x5456 <_ZN6Output4isonEv+0x2a>
    5452:	55 95       	asr	r21
    5454:	47 95       	ror	r20
    5456:	0a 94       	dec	r0
    5458:	e2 f7       	brpl	.-8      	; 0x5452 <_ZN6Output4isonEv+0x26>
    545a:	ca 01       	movw	r24, r20
    545c:	81 70       	andi	r24, 0x01	; 1
    545e:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    5460:	25 b1       	in	r18, 0x05	; 5
    5462:	30 e0       	ldi	r19, 0x00	; 0
    5464:	a9 01       	movw	r20, r18
    5466:	fc 01       	movw	r30, r24
    5468:	01 80       	ldd	r0, Z+1	; 0x01
    546a:	02 c0       	rjmp	.+4      	; 0x5470 <_ZN6Output4isonEv+0x44>
    546c:	55 95       	asr	r21
    546e:	47 95       	ror	r20
    5470:	0a 94       	dec	r0
    5472:	e2 f7       	brpl	.-8      	; 0x546c <_ZN6Output4isonEv+0x40>
    5474:	ca 01       	movw	r24, r20
    5476:	81 70       	andi	r24, 0x01	; 1
    5478:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    547a:	28 b1       	in	r18, 0x08	; 8
    547c:	30 e0       	ldi	r19, 0x00	; 0
    547e:	a9 01       	movw	r20, r18
    5480:	fc 01       	movw	r30, r24
    5482:	01 80       	ldd	r0, Z+1	; 0x01
    5484:	02 c0       	rjmp	.+4      	; 0x548a <_ZN6Output4isonEv+0x5e>
    5486:	55 95       	asr	r21
    5488:	47 95       	ror	r20
    548a:	0a 94       	dec	r0
    548c:	e2 f7       	brpl	.-8      	; 0x5486 <_ZN6Output4isonEv+0x5a>
    548e:	ca 01       	movw	r24, r20
    5490:	81 70       	andi	r24, 0x01	; 1
    5492:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    5494:	2b b1       	in	r18, 0x0b	; 11
    5496:	30 e0       	ldi	r19, 0x00	; 0
    5498:	a9 01       	movw	r20, r18
    549a:	fc 01       	movw	r30, r24
    549c:	01 80       	ldd	r0, Z+1	; 0x01
    549e:	02 c0       	rjmp	.+4      	; 0x54a4 <_ZN6Output4isonEv+0x78>
    54a0:	55 95       	asr	r21
    54a2:	47 95       	ror	r20
    54a4:	0a 94       	dec	r0
    54a6:	e2 f7       	brpl	.-8      	; 0x54a0 <_ZN6Output4isonEv+0x74>
    54a8:	ca 01       	movw	r24, r20
    54aa:	81 70       	andi	r24, 0x01	; 1
    54ac:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		default:
		returnparam = 2;
    54ae:	82 e0       	ldi	r24, 0x02	; 2
			break;
	}
	return returnparam;
}
    54b0:	08 95       	ret

000054b2 <_ZN6Output3offEv>:

void Output::off(){
	switch (Port)
    54b2:	fc 01       	movw	r30, r24
    54b4:	20 81       	ld	r18, Z
    54b6:	22 34       	cpi	r18, 0x42	; 66
    54b8:	c9 f0       	breq	.+50     	; 0x54ec <_ZN6Output3offEv+0x3a>
    54ba:	18 f4       	brcc	.+6      	; 0x54c2 <_ZN6Output3offEv+0x10>
    54bc:	21 34       	cpi	r18, 0x41	; 65
    54be:	31 f0       	breq	.+12     	; 0x54cc <_ZN6Output3offEv+0x1a>
    54c0:	08 95       	ret
    54c2:	23 34       	cpi	r18, 0x43	; 67
    54c4:	19 f1       	breq	.+70     	; 0x550c <_ZN6Output3offEv+0x5a>
    54c6:	24 34       	cpi	r18, 0x44	; 68
    54c8:	89 f1       	breq	.+98     	; 0x552c <_ZN6Output3offEv+0x7a>
    54ca:	08 95       	ret
	{
		case 'A':
			PORTA &= ~(1<<Pin);
    54cc:	42 b1       	in	r20, 0x02	; 2
    54ce:	21 e0       	ldi	r18, 0x01	; 1
    54d0:	30 e0       	ldi	r19, 0x00	; 0
    54d2:	b9 01       	movw	r22, r18
    54d4:	fc 01       	movw	r30, r24
    54d6:	01 80       	ldd	r0, Z+1	; 0x01
    54d8:	02 c0       	rjmp	.+4      	; 0x54de <_ZN6Output3offEv+0x2c>
    54da:	66 0f       	add	r22, r22
    54dc:	77 1f       	adc	r23, r23
    54de:	0a 94       	dec	r0
    54e0:	e2 f7       	brpl	.-8      	; 0x54da <_ZN6Output3offEv+0x28>
    54e2:	cb 01       	movw	r24, r22
    54e4:	80 95       	com	r24
    54e6:	84 23       	and	r24, r20
    54e8:	82 b9       	out	0x02, r24	; 2
			break;
    54ea:	08 95       	ret
		case 'B':
			PORTB &= ~(1<<Pin);
    54ec:	45 b1       	in	r20, 0x05	; 5
    54ee:	21 e0       	ldi	r18, 0x01	; 1
    54f0:	30 e0       	ldi	r19, 0x00	; 0
    54f2:	b9 01       	movw	r22, r18
    54f4:	fc 01       	movw	r30, r24
    54f6:	01 80       	ldd	r0, Z+1	; 0x01
    54f8:	02 c0       	rjmp	.+4      	; 0x54fe <_ZN6Output3offEv+0x4c>
    54fa:	66 0f       	add	r22, r22
    54fc:	77 1f       	adc	r23, r23
    54fe:	0a 94       	dec	r0
    5500:	e2 f7       	brpl	.-8      	; 0x54fa <_ZN6Output3offEv+0x48>
    5502:	cb 01       	movw	r24, r22
    5504:	80 95       	com	r24
    5506:	84 23       	and	r24, r20
    5508:	85 b9       	out	0x05, r24	; 5
			break;
    550a:	08 95       	ret
		case 'C':
			PORTC &= ~(1<<Pin);
    550c:	48 b1       	in	r20, 0x08	; 8
    550e:	21 e0       	ldi	r18, 0x01	; 1
    5510:	30 e0       	ldi	r19, 0x00	; 0
    5512:	b9 01       	movw	r22, r18
    5514:	fc 01       	movw	r30, r24
    5516:	01 80       	ldd	r0, Z+1	; 0x01
    5518:	02 c0       	rjmp	.+4      	; 0x551e <_ZN6Output3offEv+0x6c>
    551a:	66 0f       	add	r22, r22
    551c:	77 1f       	adc	r23, r23
    551e:	0a 94       	dec	r0
    5520:	e2 f7       	brpl	.-8      	; 0x551a <_ZN6Output3offEv+0x68>
    5522:	cb 01       	movw	r24, r22
    5524:	80 95       	com	r24
    5526:	84 23       	and	r24, r20
    5528:	88 b9       	out	0x08, r24	; 8
			break;
    552a:	08 95       	ret
		case 'D':
			PORTD &= ~(1<<Pin);
    552c:	4b b1       	in	r20, 0x0b	; 11
    552e:	21 e0       	ldi	r18, 0x01	; 1
    5530:	30 e0       	ldi	r19, 0x00	; 0
    5532:	b9 01       	movw	r22, r18
    5534:	fc 01       	movw	r30, r24
    5536:	01 80       	ldd	r0, Z+1	; 0x01
    5538:	02 c0       	rjmp	.+4      	; 0x553e <_ZN6Output3offEv+0x8c>
    553a:	66 0f       	add	r22, r22
    553c:	77 1f       	adc	r23, r23
    553e:	0a 94       	dec	r0
    5540:	e2 f7       	brpl	.-8      	; 0x553a <_ZN6Output3offEv+0x88>
    5542:	cb 01       	movw	r24, r22
    5544:	80 95       	com	r24
    5546:	84 23       	and	r24, r20
    5548:	8b b9       	out	0x0b, r24	; 11
    554a:	08 95       	ret

0000554c <_ZN6Output6toggleEv>:
			break;
	}
}

void Output::toggle(){
	switch (Port)
    554c:	fc 01       	movw	r30, r24
    554e:	20 81       	ld	r18, Z
    5550:	22 34       	cpi	r18, 0x42	; 66
    5552:	c1 f0       	breq	.+48     	; 0x5584 <_ZN6Output6toggleEv+0x38>
    5554:	18 f4       	brcc	.+6      	; 0x555c <_ZN6Output6toggleEv+0x10>
    5556:	21 34       	cpi	r18, 0x41	; 65
    5558:	31 f0       	breq	.+12     	; 0x5566 <_ZN6Output6toggleEv+0x1a>
    555a:	08 95       	ret
    555c:	23 34       	cpi	r18, 0x43	; 67
    555e:	09 f1       	breq	.+66     	; 0x55a2 <_ZN6Output6toggleEv+0x56>
    5560:	24 34       	cpi	r18, 0x44	; 68
    5562:	71 f1       	breq	.+92     	; 0x55c0 <_ZN6Output6toggleEv+0x74>
    5564:	08 95       	ret
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    5566:	22 b1       	in	r18, 0x02	; 2
    5568:	30 e0       	ldi	r19, 0x00	; 0
    556a:	fc 01       	movw	r30, r24
    556c:	01 80       	ldd	r0, Z+1	; 0x01
    556e:	02 c0       	rjmp	.+4      	; 0x5574 <_ZN6Output6toggleEv+0x28>
    5570:	35 95       	asr	r19
    5572:	27 95       	ror	r18
    5574:	0a 94       	dec	r0
    5576:	e2 f7       	brpl	.-8      	; 0x5570 <_ZN6Output6toggleEv+0x24>
    5578:	20 ff       	sbrs	r18, 0
    557a:	02 c0       	rjmp	.+4      	; 0x5580 <_ZN6Output6toggleEv+0x34>
			{
				off();
    557c:	9a cf       	rjmp	.-204    	; 0x54b2 <_ZN6Output3offEv>
    557e:	08 95       	ret
			}
			else{
				on();
    5580:	0c cf       	rjmp	.-488    	; 0x539a <_ZN6Output2onEv>
    5582:	08 95       	ret
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    5584:	25 b1       	in	r18, 0x05	; 5
    5586:	30 e0       	ldi	r19, 0x00	; 0
    5588:	fc 01       	movw	r30, r24
    558a:	01 80       	ldd	r0, Z+1	; 0x01
    558c:	02 c0       	rjmp	.+4      	; 0x5592 <_ZN6Output6toggleEv+0x46>
    558e:	35 95       	asr	r19
    5590:	27 95       	ror	r18
    5592:	0a 94       	dec	r0
    5594:	e2 f7       	brpl	.-8      	; 0x558e <_ZN6Output6toggleEv+0x42>
    5596:	20 ff       	sbrs	r18, 0
    5598:	02 c0       	rjmp	.+4      	; 0x559e <_ZN6Output6toggleEv+0x52>
			{
				off();
    559a:	8b cf       	rjmp	.-234    	; 0x54b2 <_ZN6Output3offEv>
    559c:	08 95       	ret
			}
			else{
				on();
    559e:	fd ce       	rjmp	.-518    	; 0x539a <_ZN6Output2onEv>
    55a0:	08 95       	ret
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    55a2:	28 b1       	in	r18, 0x08	; 8
    55a4:	30 e0       	ldi	r19, 0x00	; 0
    55a6:	fc 01       	movw	r30, r24
    55a8:	01 80       	ldd	r0, Z+1	; 0x01
    55aa:	02 c0       	rjmp	.+4      	; 0x55b0 <_ZN6Output6toggleEv+0x64>
    55ac:	35 95       	asr	r19
    55ae:	27 95       	ror	r18
    55b0:	0a 94       	dec	r0
    55b2:	e2 f7       	brpl	.-8      	; 0x55ac <_ZN6Output6toggleEv+0x60>
    55b4:	20 ff       	sbrs	r18, 0
    55b6:	02 c0       	rjmp	.+4      	; 0x55bc <_ZN6Output6toggleEv+0x70>
			{
				off();
    55b8:	7c cf       	rjmp	.-264    	; 0x54b2 <_ZN6Output3offEv>
    55ba:	08 95       	ret
			}
			else{
				on();
    55bc:	ee ce       	rjmp	.-548    	; 0x539a <_ZN6Output2onEv>
    55be:	08 95       	ret
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    55c0:	2b b1       	in	r18, 0x0b	; 11
    55c2:	30 e0       	ldi	r19, 0x00	; 0
    55c4:	fc 01       	movw	r30, r24
    55c6:	01 80       	ldd	r0, Z+1	; 0x01
    55c8:	02 c0       	rjmp	.+4      	; 0x55ce <_ZN6Output6toggleEv+0x82>
    55ca:	35 95       	asr	r19
    55cc:	27 95       	ror	r18
    55ce:	0a 94       	dec	r0
    55d0:	e2 f7       	brpl	.-8      	; 0x55ca <_ZN6Output6toggleEv+0x7e>
    55d2:	20 ff       	sbrs	r18, 0
    55d4:	02 c0       	rjmp	.+4      	; 0x55da <_ZN6Output6toggleEv+0x8e>
			{
				off();
    55d6:	6d cf       	rjmp	.-294    	; 0x54b2 <_ZN6Output3offEv>
    55d8:	08 95       	ret
			}
			else{
				on();
    55da:	df ce       	rjmp	.-578    	; 0x539a <_ZN6Output2onEv>
    55dc:	08 95       	ret

000055de <_ZN8PressureD1Ev>:
	Pressure0=1;
	LPS25H_initialize();
} //Pressure

// default destructor
Pressure::~Pressure()
    55de:	0d 96       	adiw	r24, 0x0d	; 13
    55e0:	05 ca       	rjmp	.-3062   	; 0x49ec <_ZN3I2CD1Ev>
    55e2:	08 95       	ret

000055e4 <_ZN8Pressure14LPS25H_commandEhh>:
{
} //~Pressure

void Pressure::LPS25H_command(uint8_t add, uint8_t command){
    55e4:	0f 93       	push	r16
    55e6:	1f 93       	push	r17
    55e8:	cf 93       	push	r28
    55ea:	df 93       	push	r29
    55ec:	06 2f       	mov	r16, r22
    55ee:	14 2f       	mov	r17, r20
	i2c.twi_start();
    55f0:	ec 01       	movw	r28, r24
    55f2:	2d 96       	adiw	r28, 0x0d	; 13
    55f4:	ce 01       	movw	r24, r28
    55f6:	fb d9       	rcall	.-3082   	; 0x49ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    55f8:	6a eb       	ldi	r22, 0xBA	; 186
    55fa:	ce 01       	movw	r24, r28
    55fc:	00 da       	rcall	.-3072   	; 0x49fe <_ZN3I2C9twi_writeEh>
	i2c.twi_write(add);
    55fe:	60 2f       	mov	r22, r16
    5600:	ce 01       	movw	r24, r28
    5602:	fd d9       	rcall	.-3078   	; 0x49fe <_ZN3I2C9twi_writeEh>
	i2c.twi_write(command);
    5604:	61 2f       	mov	r22, r17
    5606:	ce 01       	movw	r24, r28
    5608:	fa d9       	rcall	.-3084   	; 0x49fe <_ZN3I2C9twi_writeEh>
	i2c.twi_stop();
    560a:	ce 01       	movw	r24, r28
    560c:	f4 d9       	rcall	.-3096   	; 0x49f6 <_ZN3I2C8twi_stopEv>
}
    560e:	df 91       	pop	r29
    5610:	cf 91       	pop	r28
    5612:	1f 91       	pop	r17
    5614:	0f 91       	pop	r16
    5616:	08 95       	ret

00005618 <_ZN8Pressure17LPS25H_initializeEv>:

void Pressure::LPS25H_initialize(){
    5618:	cf 93       	push	r28
    561a:	df 93       	push	r29
    561c:	ec 01       	movw	r28, r24
	uint8_t temp=0;
	//internal averages Pressure and Temperature (both 8)
	temp &= ~((1<<AVGT1) | (1<<AVGT0) | (1<<AVGP1) | (1<<AVGP0)); 
	LPS25H_command(RES_CONF,temp);
    561e:	40 e0       	ldi	r20, 0x00	; 0
    5620:	60 e1       	ldi	r22, 0x10	; 16
    5622:	e0 df       	rcall	.-64     	; 0x55e4 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//Enable device and set a single shot as well as Lock while reading
	temp |= (1<<PD) | (1<<BDU) | (1<<ODR1);
	LPS25H_command(CTRL_REG1,temp);
    5624:	44 ea       	ldi	r20, 0xA4	; 164
    5626:	60 e2       	ldi	r22, 0x20	; 32
    5628:	ce 01       	movw	r24, r28
    562a:	dc df       	rcall	.-72     	; 0x55e4 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//FIFO on, no watermark no reset, reboot memory content, FIFO MEAN Mode
	temp |= (1<<BOOT) | (1<<FIFO_EN) | (1<<FIFO_MEAN_DEC);
	LPS25H_command(CTRL_REG2,temp);
    562c:	40 ed       	ldi	r20, 0xD0	; 208
    562e:	61 e2       	ldi	r22, 0x21	; 33
    5630:	ce 01       	movw	r24, r28
    5632:	d8 df       	rcall	.-80     	; 0x55e4 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//FIFO Controll register for MEAN Mode und 8 moving averages
	temp|=(1<<F_MODE2) | (1<<F_MODE1) | (1<<WTM_POINT0) | (1<<WTM_POINT1) | (1<<WTM_POINT2);
	LPS25H_command(FIFO_CTRL,temp);
    5634:	47 ec       	ldi	r20, 0xC7	; 199
    5636:	6e e2       	ldi	r22, 0x2E	; 46
    5638:	ce 01       	movw	r24, r28
    563a:	d4 df       	rcall	.-88     	; 0x55e4 <_ZN8Pressure14LPS25H_commandEhh>
	//CTRL_REG4 not set
	//INTERRUPT_CFG not set
	//no threshold used
	//no Pressure offset used
	
}
    563c:	df 91       	pop	r29
    563e:	cf 91       	pop	r28
    5640:	08 95       	ret

00005642 <_ZN8PressureC1Ev>:


#include "Pressure.h"

// default constructor
Pressure::Pressure()
    5642:	cf 93       	push	r28
    5644:	df 93       	push	r29
    5646:	ec 01       	movw	r28, r24
    5648:	0d 96       	adiw	r24, 0x0d	; 13
    564a:	cc d9       	rcall	.-3176   	; 0x49e4 <_ZN3I2CC1Ev>
{
	Press = 0;
    564c:	18 82       	st	Y, r1
    564e:	19 82       	std	Y+1, r1	; 0x01
    5650:	1a 82       	std	Y+2, r1	; 0x02
    5652:	1b 82       	std	Y+3, r1	; 0x03
	Tempera = 0;
    5654:	1c 82       	std	Y+4, r1	; 0x04
    5656:	1d 82       	std	Y+5, r1	; 0x05
    5658:	1e 82       	std	Y+6, r1	; 0x06
    565a:	1f 82       	std	Y+7, r1	; 0x07
	Tempoffset = -4;	//Aus Erfahrung
    565c:	8c ef       	ldi	r24, 0xFC	; 252
    565e:	88 87       	std	Y+8, r24	; 0x08
	Pressure0=1;
    5660:	40 e0       	ldi	r20, 0x00	; 0
    5662:	50 e0       	ldi	r21, 0x00	; 0
    5664:	60 e8       	ldi	r22, 0x80	; 128
    5666:	7f e3       	ldi	r23, 0x3F	; 63
    5668:	49 87       	std	Y+9, r20	; 0x09
    566a:	5a 87       	std	Y+10, r21	; 0x0a
    566c:	6b 87       	std	Y+11, r22	; 0x0b
    566e:	7c 87       	std	Y+12, r23	; 0x0c
	LPS25H_initialize();
    5670:	ce 01       	movw	r24, r28
    5672:	d2 df       	rcall	.-92     	; 0x5618 <_ZN8Pressure17LPS25H_initializeEv>
} //Pressure
    5674:	df 91       	pop	r29
    5676:	cf 91       	pop	r28
    5678:	08 95       	ret

0000567a <_ZN8Pressure18READ_Pressure_onceEv>:
	//no threshold used
	//no Pressure offset used
	
}

void Pressure::READ_Pressure_once(){
    567a:	af 92       	push	r10
    567c:	bf 92       	push	r11
    567e:	cf 92       	push	r12
    5680:	df 92       	push	r13
    5682:	ef 92       	push	r14
    5684:	ff 92       	push	r15
    5686:	1f 93       	push	r17
    5688:	cf 93       	push	r28
    568a:	df 93       	push	r29
    568c:	00 d0       	rcall	.+0      	; 0x568e <_ZN8Pressure18READ_Pressure_onceEv+0x14>
    568e:	1f 92       	push	r1
    5690:	cd b7       	in	r28, 0x3d	; 61
    5692:	de b7       	in	r29, 0x3e	; 62
    5694:	5c 01       	movw	r10, r24
	uint8_t Wertedruck[3];
	cli();
    5696:	f8 94       	cli
	i2c.twi_start();
    5698:	7c 01       	movw	r14, r24
    569a:	8d e0       	ldi	r24, 0x0D	; 13
    569c:	e8 0e       	add	r14, r24
    569e:	f1 1c       	adc	r15, r1
    56a0:	c7 01       	movw	r24, r14
    56a2:	a5 d9       	rcall	.-3254   	; 0x49ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    56a4:	6a eb       	ldi	r22, 0xBA	; 186
    56a6:	c7 01       	movw	r24, r14
    56a8:	aa d9       	rcall	.-3244   	; 0x49fe <_ZN3I2C9twi_writeEh>
	i2c.twi_write(PRESS_OUT_XL|(1<<autoincrement));
    56aa:	68 ea       	ldi	r22, 0xA8	; 168
    56ac:	c7 01       	movw	r24, r14
    56ae:	a7 d9       	rcall	.-3250   	; 0x49fe <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    56b0:	c7 01       	movw	r24, r14
    56b2:	9d d9       	rcall	.-3270   	; 0x49ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_READ);
    56b4:	6b eb       	ldi	r22, 0xBB	; 187
    56b6:	c7 01       	movw	r24, r14
    56b8:	a2 d9       	rcall	.-3260   	; 0x49fe <_ZN3I2C9twi_writeEh>
    56ba:	fe 01       	movw	r30, r28
    56bc:	31 96       	adiw	r30, 0x01	; 1
    56be:	6f 01       	movw	r12, r30
	for (uint8_t i=0;i<3;i++)
    56c0:	10 e0       	ldi	r17, 0x00	; 0
	{
		if (i<2)
    56c2:	12 30       	cpi	r17, 0x02	; 2
    56c4:	30 f4       	brcc	.+12     	; 0x56d2 <_ZN8Pressure18READ_Pressure_onceEv+0x58>
		{
			Wertedruck[i] = i2c.twi_read(1);
    56c6:	61 e0       	ldi	r22, 0x01	; 1
    56c8:	c7 01       	movw	r24, r14
    56ca:	a9 d9       	rcall	.-3246   	; 0x4a1e <_ZN3I2C8twi_readEh>
    56cc:	f6 01       	movw	r30, r12
    56ce:	80 83       	st	Z, r24
    56d0:	05 c0       	rjmp	.+10     	; 0x56dc <_ZN8Pressure18READ_Pressure_onceEv+0x62>
		}
		else{
			Wertedruck[i] = i2c.twi_read(0);
    56d2:	60 e0       	ldi	r22, 0x00	; 0
    56d4:	c7 01       	movw	r24, r14
    56d6:	a3 d9       	rcall	.-3258   	; 0x4a1e <_ZN3I2C8twi_readEh>
    56d8:	f6 01       	movw	r30, r12
    56da:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_Write);
	i2c.twi_write(PRESS_OUT_XL|(1<<autoincrement));
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_READ);
	for (uint8_t i=0;i<3;i++)
    56dc:	1f 5f       	subi	r17, 0xFF	; 255
    56de:	ff ef       	ldi	r31, 0xFF	; 255
    56e0:	cf 1a       	sub	r12, r31
    56e2:	df 0a       	sbc	r13, r31
    56e4:	13 30       	cpi	r17, 0x03	; 3
    56e6:	69 f7       	brne	.-38     	; 0x56c2 <_ZN8Pressure18READ_Pressure_onceEv+0x48>
		}
		else{
			Wertedruck[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    56e8:	c7 01       	movw	r24, r14
    56ea:	85 d9       	rcall	.-3318   	; 0x49f6 <_ZN3I2C8twi_stopEv>
	Press = ((double)Wertedruck[2]*65536);
    56ec:	6b 81       	ldd	r22, Y+3	; 0x03
    56ee:	70 e0       	ldi	r23, 0x00	; 0
    56f0:	80 e0       	ldi	r24, 0x00	; 0
    56f2:	90 e0       	ldi	r25, 0x00	; 0
    56f4:	cf d3       	rcall	.+1950   	; 0x5e94 <__floatunsisf>
    56f6:	20 e0       	ldi	r18, 0x00	; 0
    56f8:	30 e0       	ldi	r19, 0x00	; 0
    56fa:	40 e8       	ldi	r20, 0x80	; 128
    56fc:	57 e4       	ldi	r21, 0x47	; 71
    56fe:	2a d5       	rcall	.+2644   	; 0x6154 <__mulsf3>
    5700:	6b 01       	movw	r12, r22
    5702:	7c 01       	movw	r14, r24
	Press += ((double)Wertedruck[1]*256);
    5704:	6a 81       	ldd	r22, Y+2	; 0x02
    5706:	70 e0       	ldi	r23, 0x00	; 0
    5708:	80 e0       	ldi	r24, 0x00	; 0
    570a:	90 e0       	ldi	r25, 0x00	; 0
    570c:	c3 d3       	rcall	.+1926   	; 0x5e94 <__floatunsisf>
    570e:	20 e0       	ldi	r18, 0x00	; 0
    5710:	30 e0       	ldi	r19, 0x00	; 0
    5712:	40 e8       	ldi	r20, 0x80	; 128
    5714:	53 e4       	ldi	r21, 0x43	; 67
    5716:	1e d5       	rcall	.+2620   	; 0x6154 <__mulsf3>
    5718:	9b 01       	movw	r18, r22
    571a:	ac 01       	movw	r20, r24
    571c:	c7 01       	movw	r24, r14
    571e:	b6 01       	movw	r22, r12
    5720:	53 d2       	rcall	.+1190   	; 0x5bc8 <__addsf3>
    5722:	6b 01       	movw	r12, r22
    5724:	7c 01       	movw	r14, r24
	Press += (double)Wertedruck[0];
    5726:	69 81       	ldd	r22, Y+1	; 0x01
    5728:	70 e0       	ldi	r23, 0x00	; 0
    572a:	80 e0       	ldi	r24, 0x00	; 0
    572c:	90 e0       	ldi	r25, 0x00	; 0
    572e:	b2 d3       	rcall	.+1892   	; 0x5e94 <__floatunsisf>
    5730:	9b 01       	movw	r18, r22
    5732:	ac 01       	movw	r20, r24
    5734:	c7 01       	movw	r24, r14
    5736:	b6 01       	movw	r22, r12
    5738:	47 d2       	rcall	.+1166   	; 0x5bc8 <__addsf3>
	//Press = (Wertedruck[0] + (Wertedruck[1]*256) + (Wertedruck[2]*65536));
	Press/=4096.0;
    573a:	20 e0       	ldi	r18, 0x00	; 0
    573c:	30 e0       	ldi	r19, 0x00	; 0
    573e:	40 e8       	ldi	r20, 0x80	; 128
    5740:	59 e3       	ldi	r21, 0x39	; 57
    5742:	08 d5       	rcall	.+2576   	; 0x6154 <__mulsf3>
    5744:	f5 01       	movw	r30, r10
    5746:	60 83       	st	Z, r22
    5748:	71 83       	std	Z+1, r23	; 0x01
    574a:	82 83       	std	Z+2, r24	; 0x02
    574c:	93 83       	std	Z+3, r25	; 0x03
	sei();
    574e:	78 94       	sei
}
    5750:	0f 90       	pop	r0
    5752:	0f 90       	pop	r0
    5754:	0f 90       	pop	r0
    5756:	df 91       	pop	r29
    5758:	cf 91       	pop	r28
    575a:	1f 91       	pop	r17
    575c:	ff 90       	pop	r15
    575e:	ef 90       	pop	r14
    5760:	df 90       	pop	r13
    5762:	cf 90       	pop	r12
    5764:	bf 90       	pop	r11
    5766:	af 90       	pop	r10
    5768:	08 95       	ret

0000576a <_ZN8Pressure16READ_TemperatureEv>:

void Pressure::READ_Temperature(){
    576a:	cf 92       	push	r12
    576c:	df 92       	push	r13
    576e:	ef 92       	push	r14
    5770:	ff 92       	push	r15
    5772:	0f 93       	push	r16
    5774:	1f 93       	push	r17
    5776:	cf 93       	push	r28
    5778:	df 93       	push	r29
    577a:	00 d0       	rcall	.+0      	; 0x577c <_ZN8Pressure16READ_TemperatureEv+0x12>
    577c:	cd b7       	in	r28, 0x3d	; 61
    577e:	de b7       	in	r29, 0x3e	; 62
    5780:	8c 01       	movw	r16, r24
	cli();
    5782:	f8 94       	cli
	uint8_t Wert[2];
	i2c.twi_start();
    5784:	7c 01       	movw	r14, r24
    5786:	8d e0       	ldi	r24, 0x0D	; 13
    5788:	e8 0e       	add	r14, r24
    578a:	f1 1c       	adc	r15, r1
    578c:	c7 01       	movw	r24, r14
    578e:	2f d9       	rcall	.-3490   	; 0x49ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    5790:	6a eb       	ldi	r22, 0xBA	; 186
    5792:	c7 01       	movw	r24, r14
    5794:	34 d9       	rcall	.-3480   	; 0x49fe <_ZN3I2C9twi_writeEh>
	i2c.twi_write(TEMP_OUT_L|(1<<autoincrement));
    5796:	6b ea       	ldi	r22, 0xAB	; 171
    5798:	c7 01       	movw	r24, r14
    579a:	31 d9       	rcall	.-3486   	; 0x49fe <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    579c:	c7 01       	movw	r24, r14
    579e:	27 d9       	rcall	.-3506   	; 0x49ee <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_READ);
    57a0:	6b eb       	ldi	r22, 0xBB	; 187
    57a2:	c7 01       	movw	r24, r14
    57a4:	2c d9       	rcall	.-3496   	; 0x49fe <_ZN3I2C9twi_writeEh>
    57a6:	cc 24       	eor	r12, r12
    57a8:	c3 94       	inc	r12
    57aa:	d1 2c       	mov	r13, r1
    57ac:	02 c0       	rjmp	.+4      	; 0x57b2 <_ZN8Pressure16READ_TemperatureEv+0x48>
    57ae:	d3 94       	inc	r13
    57b0:	c3 94       	inc	r12
	for (uint8_t i=0;i<2;i++)
	{
		if (i<1)
    57b2:	d1 10       	cpse	r13, r1
    57b4:	05 c0       	rjmp	.+10     	; 0x57c0 <_ZN8Pressure16READ_TemperatureEv+0x56>
		{
			Wert[i] = i2c.twi_read(1);
    57b6:	61 e0       	ldi	r22, 0x01	; 1
    57b8:	c7 01       	movw	r24, r14
    57ba:	31 d9       	rcall	.-3486   	; 0x4a1e <_ZN3I2C8twi_readEh>
    57bc:	89 83       	std	Y+1, r24	; 0x01
    57be:	f7 cf       	rjmp	.-18     	; 0x57ae <_ZN8Pressure16READ_TemperatureEv+0x44>
		}
		else{
			Wert[i] = i2c.twi_read(0);
    57c0:	60 e0       	ldi	r22, 0x00	; 0
    57c2:	c7 01       	movw	r24, r14
    57c4:	2c d9       	rcall	.-3496   	; 0x4a1e <_ZN3I2C8twi_readEh>
    57c6:	e1 e0       	ldi	r30, 0x01	; 1
    57c8:	f0 e0       	ldi	r31, 0x00	; 0
    57ca:	ec 0f       	add	r30, r28
    57cc:	fd 1f       	adc	r31, r29
    57ce:	ed 0d       	add	r30, r13
    57d0:	f1 1d       	adc	r31, r1
    57d2:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_Write);
	i2c.twi_write(TEMP_OUT_L|(1<<autoincrement));
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_READ);
	for (uint8_t i=0;i<2;i++)
    57d4:	e1 e0       	ldi	r30, 0x01	; 1
    57d6:	ec 15       	cp	r30, r12
    57d8:	50 f7       	brcc	.-44     	; 0x57ae <_ZN8Pressure16READ_TemperatureEv+0x44>
		}
		else{
			Wert[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    57da:	c7 01       	movw	r24, r14
    57dc:	0c d9       	rcall	.-3560   	; 0x49f6 <_ZN3I2C8twi_stopEv>
	Tempera = ((int16_t)(Wert[0]+(Wert[1]<<8)))/480.0;
    57de:	89 81       	ldd	r24, Y+1	; 0x01
    57e0:	6a 81       	ldd	r22, Y+2	; 0x02
    57e2:	70 e0       	ldi	r23, 0x00	; 0
    57e4:	76 2f       	mov	r23, r22
    57e6:	66 27       	eor	r22, r22
    57e8:	68 0f       	add	r22, r24
    57ea:	71 1d       	adc	r23, r1
    57ec:	88 27       	eor	r24, r24
    57ee:	77 fd       	sbrc	r23, 7
    57f0:	80 95       	com	r24
    57f2:	98 2f       	mov	r25, r24
    57f4:	51 d3       	rcall	.+1698   	; 0x5e98 <__floatsisf>
    57f6:	20 e0       	ldi	r18, 0x00	; 0
    57f8:	30 e0       	ldi	r19, 0x00	; 0
    57fa:	40 ef       	ldi	r20, 0xF0	; 240
    57fc:	53 e4       	ldi	r21, 0x43	; 67
    57fe:	b1 d2       	rcall	.+1378   	; 0x5d62 <__divsf3>
    5800:	6b 01       	movw	r12, r22
    5802:	7c 01       	movw	r14, r24
	Tempera+=42.5+Tempoffset;
    5804:	f8 01       	movw	r30, r16
    5806:	60 85       	ldd	r22, Z+8	; 0x08
    5808:	77 27       	eor	r23, r23
    580a:	67 fd       	sbrc	r22, 7
    580c:	70 95       	com	r23
    580e:	87 2f       	mov	r24, r23
    5810:	97 2f       	mov	r25, r23
    5812:	42 d3       	rcall	.+1668   	; 0x5e98 <__floatsisf>
    5814:	20 e0       	ldi	r18, 0x00	; 0
    5816:	30 e0       	ldi	r19, 0x00	; 0
    5818:	4a e2       	ldi	r20, 0x2A	; 42
    581a:	52 e4       	ldi	r21, 0x42	; 66
    581c:	d5 d1       	rcall	.+938    	; 0x5bc8 <__addsf3>
    581e:	9b 01       	movw	r18, r22
    5820:	ac 01       	movw	r20, r24
    5822:	c7 01       	movw	r24, r14
    5824:	b6 01       	movw	r22, r12
    5826:	d0 d1       	rcall	.+928    	; 0x5bc8 <__addsf3>
    5828:	f8 01       	movw	r30, r16
    582a:	64 83       	std	Z+4, r22	; 0x04
    582c:	75 83       	std	Z+5, r23	; 0x05
    582e:	86 83       	std	Z+6, r24	; 0x06
    5830:	97 83       	std	Z+7, r25	; 0x07
	sei();
    5832:	78 94       	sei
}
    5834:	0f 90       	pop	r0
    5836:	0f 90       	pop	r0
    5838:	df 91       	pop	r29
    583a:	cf 91       	pop	r28
    583c:	1f 91       	pop	r17
    583e:	0f 91       	pop	r16
    5840:	ff 90       	pop	r15
    5842:	ef 90       	pop	r14
    5844:	df 90       	pop	r13
    5846:	cf 90       	pop	r12
    5848:	08 95       	ret

0000584a <_ZN8Pressure8altitudeEd>:

double Pressure::altitude(double Pressurevalue){
    584a:	8f 92       	push	r8
    584c:	9f 92       	push	r9
    584e:	af 92       	push	r10
    5850:	bf 92       	push	r11
    5852:	cf 92       	push	r12
    5854:	df 92       	push	r13
    5856:	ef 92       	push	r14
    5858:	ff 92       	push	r15
	return (Pressure0*100*log(Pressure0/Pressurevalue)/(1.2041*9.81));
    585a:	fc 01       	movw	r30, r24
    585c:	c1 84       	ldd	r12, Z+9	; 0x09
    585e:	d2 84       	ldd	r13, Z+10	; 0x0a
    5860:	e3 84       	ldd	r14, Z+11	; 0x0b
    5862:	f4 84       	ldd	r15, Z+12	; 0x0c
    5864:	9a 01       	movw	r18, r20
    5866:	ab 01       	movw	r20, r22
    5868:	c7 01       	movw	r24, r14
    586a:	b6 01       	movw	r22, r12
    586c:	7a d2       	rcall	.+1268   	; 0x5d62 <__divsf3>
    586e:	32 d4       	rcall	.+2148   	; 0x60d4 <log>
    5870:	4b 01       	movw	r8, r22
    5872:	5c 01       	movw	r10, r24
    5874:	20 e0       	ldi	r18, 0x00	; 0
    5876:	30 e0       	ldi	r19, 0x00	; 0
    5878:	48 ec       	ldi	r20, 0xC8	; 200
    587a:	52 e4       	ldi	r21, 0x42	; 66
    587c:	c7 01       	movw	r24, r14
    587e:	b6 01       	movw	r22, r12
    5880:	69 d4       	rcall	.+2258   	; 0x6154 <__mulsf3>
    5882:	a5 01       	movw	r20, r10
    5884:	94 01       	movw	r18, r8
    5886:	66 d4       	rcall	.+2252   	; 0x6154 <__mulsf3>
    5888:	2c ed       	ldi	r18, 0xDC	; 220
    588a:	3e ef       	ldi	r19, 0xFE	; 254
    588c:	4c e3       	ldi	r20, 0x3C	; 60
    588e:	51 e4       	ldi	r21, 0x41	; 65
    5890:	68 d2       	rcall	.+1232   	; 0x5d62 <__divsf3>
}
    5892:	ff 90       	pop	r15
    5894:	ef 90       	pop	r14
    5896:	df 90       	pop	r13
    5898:	cf 90       	pop	r12
    589a:	bf 90       	pop	r11
    589c:	af 90       	pop	r10
    589e:	9f 90       	pop	r9
    58a0:	8f 90       	pop	r8
    58a2:	08 95       	ret

000058a4 <_ZN8Pressure13set_Pressure0Ed>:
void Pressure::set_Pressure0(double Pressurevalue){
	Pressure0=Pressurevalue;
    58a4:	fc 01       	movw	r30, r24
    58a6:	41 87       	std	Z+9, r20	; 0x09
    58a8:	52 87       	std	Z+10, r21	; 0x0a
    58aa:	63 87       	std	Z+11, r22	; 0x0b
    58ac:	74 87       	std	Z+12, r23	; 0x0c
    58ae:	08 95       	ret

000058b0 <_ZN3RTCD1Ev>:
	Tag=7;
	Monat=9;
	Jahr=15;
	ausgabedatumneu();
	ausgabezeitneu();
}
    58b0:	08 95       	ret

000058b2 <_ZN3RTC6WeckerEv>:
    58b2:	fc 01       	movw	r30, r24
    58b4:	80 8d       	ldd	r24, Z+24	; 0x18
    58b6:	83 ff       	sbrs	r24, 3
    58b8:	0c c0       	rjmp	.+24     	; 0x58d2 <_ZN3RTC6WeckerEv+0x20>
    58ba:	84 fd       	sbrc	r24, 4
    58bc:	0a c0       	rjmp	.+20     	; 0x58d2 <_ZN3RTC6WeckerEv+0x20>
    58be:	22 8d       	ldd	r18, Z+26	; 0x1a
    58c0:	90 89       	ldd	r25, Z+16	; 0x10
    58c2:	29 13       	cpse	r18, r25
    58c4:	06 c0       	rjmp	.+12     	; 0x58d2 <_ZN3RTC6WeckerEv+0x20>
    58c6:	21 8d       	ldd	r18, Z+25	; 0x19
    58c8:	91 89       	ldd	r25, Z+17	; 0x11
    58ca:	29 13       	cpse	r18, r25
    58cc:	02 c0       	rjmp	.+4      	; 0x58d2 <_ZN3RTC6WeckerEv+0x20>
    58ce:	80 61       	ori	r24, 0x10	; 16
    58d0:	80 8f       	std	Z+24, r24	; 0x18
    58d2:	08 95       	ret

000058d4 <_ZN3RTC14ausgabezeitneuEv>:
    58d4:	fc 01       	movw	r30, r24
    58d6:	90 89       	ldd	r25, Z+16	; 0x10
    58d8:	8d ec       	ldi	r24, 0xCD	; 205
    58da:	98 9f       	mul	r25, r24
    58dc:	21 2d       	mov	r18, r1
    58de:	11 24       	eor	r1, r1
    58e0:	26 95       	lsr	r18
    58e2:	26 95       	lsr	r18
    58e4:	26 95       	lsr	r18
    58e6:	30 e3       	ldi	r19, 0x30	; 48
    58e8:	32 0f       	add	r19, r18
    58ea:	30 83       	st	Z, r19
    58ec:	22 0f       	add	r18, r18
    58ee:	32 2f       	mov	r19, r18
    58f0:	33 0f       	add	r19, r19
    58f2:	33 0f       	add	r19, r19
    58f4:	23 0f       	add	r18, r19
    58f6:	92 1b       	sub	r25, r18
    58f8:	90 5d       	subi	r25, 0xD0	; 208
    58fa:	91 83       	std	Z+1, r25	; 0x01
    58fc:	91 89       	ldd	r25, Z+17	; 0x11
    58fe:	98 9f       	mul	r25, r24
    5900:	21 2d       	mov	r18, r1
    5902:	11 24       	eor	r1, r1
    5904:	26 95       	lsr	r18
    5906:	26 95       	lsr	r18
    5908:	26 95       	lsr	r18
    590a:	30 e3       	ldi	r19, 0x30	; 48
    590c:	32 0f       	add	r19, r18
    590e:	33 83       	std	Z+3, r19	; 0x03
    5910:	22 0f       	add	r18, r18
    5912:	32 2f       	mov	r19, r18
    5914:	33 0f       	add	r19, r19
    5916:	33 0f       	add	r19, r19
    5918:	23 0f       	add	r18, r19
    591a:	92 1b       	sub	r25, r18
    591c:	90 5d       	subi	r25, 0xD0	; 208
    591e:	94 83       	std	Z+4, r25	; 0x04
    5920:	92 89       	ldd	r25, Z+18	; 0x12
    5922:	98 9f       	mul	r25, r24
    5924:	81 2d       	mov	r24, r1
    5926:	11 24       	eor	r1, r1
    5928:	86 95       	lsr	r24
    592a:	86 95       	lsr	r24
    592c:	86 95       	lsr	r24
    592e:	20 e3       	ldi	r18, 0x30	; 48
    5930:	28 0f       	add	r18, r24
    5932:	26 83       	std	Z+6, r18	; 0x06
    5934:	88 0f       	add	r24, r24
    5936:	28 2f       	mov	r18, r24
    5938:	22 0f       	add	r18, r18
    593a:	22 0f       	add	r18, r18
    593c:	82 0f       	add	r24, r18
    593e:	98 1b       	sub	r25, r24
    5940:	90 5d       	subi	r25, 0xD0	; 208
    5942:	97 83       	std	Z+7, r25	; 0x07
    5944:	08 95       	ret

00005946 <_ZN3RTC15ausgabedatumneuEv>:
    5946:	fc 01       	movw	r30, r24
    5948:	94 89       	ldd	r25, Z+20	; 0x14
    594a:	8d ec       	ldi	r24, 0xCD	; 205
    594c:	98 9f       	mul	r25, r24
    594e:	21 2d       	mov	r18, r1
    5950:	11 24       	eor	r1, r1
    5952:	26 95       	lsr	r18
    5954:	26 95       	lsr	r18
    5956:	26 95       	lsr	r18
    5958:	30 e3       	ldi	r19, 0x30	; 48
    595a:	32 0f       	add	r19, r18
    595c:	30 87       	std	Z+8, r19	; 0x08
    595e:	22 0f       	add	r18, r18
    5960:	32 2f       	mov	r19, r18
    5962:	33 0f       	add	r19, r19
    5964:	33 0f       	add	r19, r19
    5966:	23 0f       	add	r18, r19
    5968:	92 1b       	sub	r25, r18
    596a:	90 5d       	subi	r25, 0xD0	; 208
    596c:	91 87       	std	Z+9, r25	; 0x09
    596e:	96 89       	ldd	r25, Z+22	; 0x16
    5970:	98 9f       	mul	r25, r24
    5972:	21 2d       	mov	r18, r1
    5974:	11 24       	eor	r1, r1
    5976:	26 95       	lsr	r18
    5978:	26 95       	lsr	r18
    597a:	26 95       	lsr	r18
    597c:	30 e3       	ldi	r19, 0x30	; 48
    597e:	32 0f       	add	r19, r18
    5980:	33 87       	std	Z+11, r19	; 0x0b
    5982:	22 0f       	add	r18, r18
    5984:	32 2f       	mov	r19, r18
    5986:	33 0f       	add	r19, r19
    5988:	33 0f       	add	r19, r19
    598a:	23 0f       	add	r18, r19
    598c:	92 1b       	sub	r25, r18
    598e:	90 5d       	subi	r25, 0xD0	; 208
    5990:	94 87       	std	Z+12, r25	; 0x0c
    5992:	97 89       	ldd	r25, Z+23	; 0x17
    5994:	98 9f       	mul	r25, r24
    5996:	81 2d       	mov	r24, r1
    5998:	11 24       	eor	r1, r1
    599a:	86 95       	lsr	r24
    599c:	86 95       	lsr	r24
    599e:	86 95       	lsr	r24
    59a0:	20 e3       	ldi	r18, 0x30	; 48
    59a2:	28 0f       	add	r18, r24
    59a4:	26 87       	std	Z+14, r18	; 0x0e
    59a6:	88 0f       	add	r24, r24
    59a8:	28 2f       	mov	r18, r24
    59aa:	22 0f       	add	r18, r18
    59ac:	22 0f       	add	r18, r18
    59ae:	82 0f       	add	r24, r18
    59b0:	98 1b       	sub	r25, r24
    59b2:	90 5d       	subi	r25, 0xD0	; 208
    59b4:	97 87       	std	Z+15, r25	; 0x0f
    59b6:	08 95       	ret

000059b8 <_ZN3RTCC1Ev>:
    59b8:	cf 93       	push	r28
    59ba:	df 93       	push	r29
    59bc:	ec 01       	movw	r28, r24
    59be:	1a 8a       	std	Y+18, r1	; 0x12
    59c0:	1b 8a       	std	Y+19, r1	; 0x13
    59c2:	19 8a       	std	Y+17, r1	; 0x11
    59c4:	18 8a       	std	Y+16, r1	; 0x10
    59c6:	1c 8a       	std	Y+20, r1	; 0x14
    59c8:	1e 8a       	std	Y+22, r1	; 0x16
    59ca:	1f 8a       	std	Y+23, r1	; 0x17
    59cc:	1d 8a       	std	Y+21, r1	; 0x15
    59ce:	88 e2       	ldi	r24, 0x28	; 40
    59d0:	89 8f       	std	Y+25, r24	; 0x19
    59d2:	8a e0       	ldi	r24, 0x0A	; 10
    59d4:	8a 8f       	std	Y+26, r24	; 0x1a
    59d6:	1c 8e       	std	Y+28, r1	; 0x1c
    59d8:	1b 8e       	std	Y+27, r1	; 0x1b
    59da:	1e 8e       	std	Y+30, r1	; 0x1e
    59dc:	1d 8e       	std	Y+29, r1	; 0x1d
    59de:	de 01       	movw	r26, r28
    59e0:	fe 01       	movw	r30, r28
    59e2:	38 96       	adiw	r30, 0x08	; 8
    59e4:	80 e0       	ldi	r24, 0x00	; 0
    59e6:	1d 92       	st	X+, r1
    59e8:	11 92       	st	Z+, r1
    59ea:	8f 5f       	subi	r24, 0xFF	; 255
    59ec:	88 30       	cpi	r24, 0x08	; 8
    59ee:	d9 f7       	brne	.-10     	; 0x59e6 <_ZN3RTCC1Ev+0x2e>
    59f0:	8a e3       	ldi	r24, 0x3A	; 58
    59f2:	8a 83       	std	Y+2, r24	; 0x02
    59f4:	8d 83       	std	Y+5, r24	; 0x05
    59f6:	8e e2       	ldi	r24, 0x2E	; 46
    59f8:	8a 87       	std	Y+10, r24	; 0x0a
    59fa:	8d 87       	std	Y+13, r24	; 0x0d
    59fc:	ce 01       	movw	r24, r28
    59fe:	6a df       	rcall	.-300    	; 0x58d4 <_ZN3RTC14ausgabezeitneuEv>
    5a00:	ce 01       	movw	r24, r28
    5a02:	a1 df       	rcall	.-190    	; 0x5946 <_ZN3RTC15ausgabedatumneuEv>
    5a04:	df 91       	pop	r29
    5a06:	cf 91       	pop	r28
    5a08:	08 95       	ret

00005a0a <_ZN3RTC8kalenderEv>:
    5a0a:	fc 01       	movw	r30, r24
    5a0c:	26 89       	ldd	r18, Z+22	; 0x16
    5a0e:	32 2f       	mov	r19, r18
    5a10:	3d 7f       	andi	r19, 0xFD	; 253
    5a12:	34 30       	cpi	r19, 0x04	; 4
    5a14:	11 f0       	breq	.+4      	; 0x5a1a <_ZN3RTC8kalenderEv+0x10>
    5a16:	39 30       	cpi	r19, 0x09	; 9
    5a18:	91 f4       	brne	.+36     	; 0x5a3e <_ZN3RTC8kalenderEv+0x34>
    5a1a:	fc 01       	movw	r30, r24
    5a1c:	34 89       	ldd	r19, Z+20	; 0x14
    5a1e:	3f 31       	cpi	r19, 0x1F	; 31
    5a20:	b0 f1       	brcs	.+108    	; 0x5a8e <_ZN3RTC8kalenderEv+0x84>
    5a22:	31 e0       	ldi	r19, 0x01	; 1
    5a24:	34 8b       	std	Z+20, r19	; 0x14
    5a26:	2f 5f       	subi	r18, 0xFF	; 255
    5a28:	2d 30       	cpi	r18, 0x0D	; 13
    5a2a:	10 f4       	brcc	.+4      	; 0x5a30 <_ZN3RTC8kalenderEv+0x26>
    5a2c:	26 8b       	std	Z+22, r18	; 0x16
    5a2e:	2f c0       	rjmp	.+94     	; 0x5a8e <_ZN3RTC8kalenderEv+0x84>
    5a30:	21 e0       	ldi	r18, 0x01	; 1
    5a32:	fc 01       	movw	r30, r24
    5a34:	26 8b       	std	Z+22, r18	; 0x16
    5a36:	27 89       	ldd	r18, Z+23	; 0x17
    5a38:	2f 5f       	subi	r18, 0xFF	; 255
    5a3a:	27 8b       	std	Z+23, r18	; 0x17
    5a3c:	28 c0       	rjmp	.+80     	; 0x5a8e <_ZN3RTC8kalenderEv+0x84>
    5a3e:	22 30       	cpi	r18, 0x02	; 2
    5a40:	a9 f4       	brne	.+42     	; 0x5a6c <_ZN3RTC8kalenderEv+0x62>
    5a42:	fc 01       	movw	r30, r24
    5a44:	27 89       	ldd	r18, Z+23	; 0x17
    5a46:	23 70       	andi	r18, 0x03	; 3
    5a48:	41 f4       	brne	.+16     	; 0x5a5a <_ZN3RTC8kalenderEv+0x50>
    5a4a:	24 89       	ldd	r18, Z+20	; 0x14
    5a4c:	2e 31       	cpi	r18, 0x1E	; 30
    5a4e:	f8 f0       	brcs	.+62     	; 0x5a8e <_ZN3RTC8kalenderEv+0x84>
    5a50:	21 e0       	ldi	r18, 0x01	; 1
    5a52:	24 8b       	std	Z+20, r18	; 0x14
    5a54:	23 e0       	ldi	r18, 0x03	; 3
    5a56:	26 8b       	std	Z+22, r18	; 0x16
    5a58:	1a c0       	rjmp	.+52     	; 0x5a8e <_ZN3RTC8kalenderEv+0x84>
    5a5a:	fc 01       	movw	r30, r24
    5a5c:	24 89       	ldd	r18, Z+20	; 0x14
    5a5e:	2d 31       	cpi	r18, 0x1D	; 29
    5a60:	b0 f0       	brcs	.+44     	; 0x5a8e <_ZN3RTC8kalenderEv+0x84>
    5a62:	21 e0       	ldi	r18, 0x01	; 1
    5a64:	24 8b       	std	Z+20, r18	; 0x14
    5a66:	23 e0       	ldi	r18, 0x03	; 3
    5a68:	26 8b       	std	Z+22, r18	; 0x16
    5a6a:	11 c0       	rjmp	.+34     	; 0x5a8e <_ZN3RTC8kalenderEv+0x84>
    5a6c:	fc 01       	movw	r30, r24
    5a6e:	34 89       	ldd	r19, Z+20	; 0x14
    5a70:	30 32       	cpi	r19, 0x20	; 32
    5a72:	68 f0       	brcs	.+26     	; 0x5a8e <_ZN3RTC8kalenderEv+0x84>
    5a74:	31 e0       	ldi	r19, 0x01	; 1
    5a76:	34 8b       	std	Z+20, r19	; 0x14
    5a78:	2f 5f       	subi	r18, 0xFF	; 255
    5a7a:	2d 30       	cpi	r18, 0x0D	; 13
    5a7c:	10 f4       	brcc	.+4      	; 0x5a82 <_ZN3RTC8kalenderEv+0x78>
    5a7e:	26 8b       	std	Z+22, r18	; 0x16
    5a80:	06 c0       	rjmp	.+12     	; 0x5a8e <_ZN3RTC8kalenderEv+0x84>
    5a82:	21 e0       	ldi	r18, 0x01	; 1
    5a84:	fc 01       	movw	r30, r24
    5a86:	26 8b       	std	Z+22, r18	; 0x16
    5a88:	27 89       	ldd	r18, Z+23	; 0x17
    5a8a:	2f 5f       	subi	r18, 0xFF	; 255
    5a8c:	27 8b       	std	Z+23, r18	; 0x17
    5a8e:	5b cf       	rjmp	.-330    	; 0x5946 <_ZN3RTC15ausgabedatumneuEv>
    5a90:	08 95       	ret

00005a92 <_ZN3RTC4zeitEv>:
    5a92:	cf 93       	push	r28
    5a94:	df 93       	push	r29
    5a96:	ec 01       	movw	r28, r24
    5a98:	8a 89       	ldd	r24, Y+18	; 0x12
    5a9a:	8c 53       	subi	r24, 0x3C	; 60
    5a9c:	8d 38       	cpi	r24, 0x8D	; 141
    5a9e:	c0 f4       	brcc	.+48     	; 0x5ad0 <_ZN3RTC4zeitEv+0x3e>
    5aa0:	1a 8a       	std	Y+18, r1	; 0x12
    5aa2:	89 89       	ldd	r24, Y+17	; 0x11
    5aa4:	8f 5f       	subi	r24, 0xFF	; 255
    5aa6:	89 8b       	std	Y+17, r24	; 0x11
    5aa8:	98 8d       	ldd	r25, Y+24	; 0x18
    5aaa:	94 60       	ori	r25, 0x04	; 4
    5aac:	98 8f       	std	Y+24, r25	; 0x18
    5aae:	8c 33       	cpi	r24, 0x3C	; 60
    5ab0:	68 f0       	brcs	.+26     	; 0x5acc <_ZN3RTC4zeitEv+0x3a>
    5ab2:	19 8a       	std	Y+17, r1	; 0x11
    5ab4:	88 89       	ldd	r24, Y+16	; 0x10
    5ab6:	8f 5f       	subi	r24, 0xFF	; 255
    5ab8:	88 31       	cpi	r24, 0x18	; 24
    5aba:	10 f4       	brcc	.+4      	; 0x5ac0 <_ZN3RTC4zeitEv+0x2e>
    5abc:	88 8b       	std	Y+16, r24	; 0x10
    5abe:	06 c0       	rjmp	.+12     	; 0x5acc <_ZN3RTC4zeitEv+0x3a>
    5ac0:	18 8a       	std	Y+16, r1	; 0x10
    5ac2:	8c 89       	ldd	r24, Y+20	; 0x14
    5ac4:	8f 5f       	subi	r24, 0xFF	; 255
    5ac6:	8c 8b       	std	Y+20, r24	; 0x14
    5ac8:	ce 01       	movw	r24, r28
    5aca:	9f df       	rcall	.-194    	; 0x5a0a <_ZN3RTC8kalenderEv>
    5acc:	ce 01       	movw	r24, r28
    5ace:	f1 de       	rcall	.-542    	; 0x58b2 <_ZN3RTC6WeckerEv>
    5ad0:	ce 01       	movw	r24, r28
    5ad2:	00 df       	rcall	.-512    	; 0x58d4 <_ZN3RTC14ausgabezeitneuEv>
    5ad4:	28 8d       	ldd	r18, Y+24	; 0x18
    5ad6:	25 ff       	sbrs	r18, 5
    5ad8:	0a c0       	rjmp	.+20     	; 0x5aee <_ZN3RTC4zeitEv+0x5c>
    5ada:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5adc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5ade:	01 97       	sbiw	r24, 0x01	; 1
    5ae0:	9c 8f       	std	Y+28, r25	; 0x1c
    5ae2:	8b 8f       	std	Y+27, r24	; 0x1b
    5ae4:	89 2b       	or	r24, r25
    5ae6:	19 f4       	brne	.+6      	; 0x5aee <_ZN3RTC4zeitEv+0x5c>
    5ae8:	2f 7d       	andi	r18, 0xDF	; 223
    5aea:	21 60       	ori	r18, 0x01	; 1
    5aec:	28 8f       	std	Y+24, r18	; 0x18
    5aee:	88 8d       	ldd	r24, Y+24	; 0x18
    5af0:	86 ff       	sbrs	r24, 6
    5af2:	05 c0       	rjmp	.+10     	; 0x5afe <_ZN3RTC4zeitEv+0x6c>
    5af4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5af6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5af8:	01 96       	adiw	r24, 0x01	; 1
    5afa:	9e 8f       	std	Y+30, r25	; 0x1e
    5afc:	8d 8f       	std	Y+29, r24	; 0x1d
    5afe:	80 e0       	ldi	r24, 0x00	; 0
    5b00:	df 91       	pop	r29
    5b02:	cf 91       	pop	r28
    5b04:	08 95       	ret

00005b06 <_ZN3RTC8RTCstartEv>:

void RTC::RTCstart(){
    5b06:	fc 01       	movw	r30, r24
	//Einstellungen des Ausgabebuffers
	msg_uhr[0]='0';
    5b08:	80 e3       	ldi	r24, 0x30	; 48
    5b0a:	80 83       	st	Z, r24
	msg_uhr[1]='0';
    5b0c:	81 83       	std	Z+1, r24	; 0x01
	msg_uhr[2]=':';
    5b0e:	9a e3       	ldi	r25, 0x3A	; 58
    5b10:	92 83       	std	Z+2, r25	; 0x02
	msg_uhr[3]='0';
    5b12:	83 83       	std	Z+3, r24	; 0x03
	msg_uhr[4]='0';
    5b14:	84 83       	std	Z+4, r24	; 0x04
	msg_uhr[5]=':';
    5b16:	95 83       	std	Z+5, r25	; 0x05
	msg_uhr[6]='0';
    5b18:	86 83       	std	Z+6, r24	; 0x06
	msg_uhr[7]='0';
    5b1a:	87 83       	std	Z+7, r24	; 0x07
	//Timer2 als 1ms Timer fuer die RTC
	//asynchron mit 32.768 kHz (noch synchrom)
	TCNT2 = TIMER2RTCTIME;
    5b1c:	10 92 b2 00 	sts	0x00B2, r1
	ASSR |= (1<<AS2);
    5b20:	e6 eb       	ldi	r30, 0xB6	; 182
    5b22:	f0 e0       	ldi	r31, 0x00	; 0
    5b24:	80 81       	ld	r24, Z
    5b26:	80 62       	ori	r24, 0x20	; 32
    5b28:	80 83       	st	Z, r24
	TIMSK2 = (1<<TOIE2);
    5b2a:	81 e0       	ldi	r24, 0x01	; 1
    5b2c:	80 93 70 00 	sts	0x0070, r24
	TCCR2B = (1<<CS22) | (1<<CS20);		//Vorteiler 256
    5b30:	85 e0       	ldi	r24, 0x05	; 5
    5b32:	80 93 b1 00 	sts	0x00B1, r24
    5b36:	08 95       	ret

00005b38 <_ZN3RTC7RTCstopEv>:
}

void RTC::RTCstop(){
	TCCR2B &= ~((1<<CS22) | (1<<CS21));
    5b38:	e1 eb       	ldi	r30, 0xB1	; 177
    5b3a:	f0 e0       	ldi	r31, 0x00	; 0
    5b3c:	80 81       	ld	r24, Z
    5b3e:	89 7f       	andi	r24, 0xF9	; 249
    5b40:	80 83       	st	Z, r24
    5b42:	08 95       	ret

00005b44 <_ZN5SOUNDD1Ev>:
	setfrequenci(1000);//1KHz
	off();
} //SOUND

// default destructor
SOUND::~SOUND()
    5b44:	08 95       	ret

00005b46 <_ZN5SOUND2onEv>:
	TCNT0 = 0;
	on();
}

void SOUND::on(){
	if ((interupts&(1<<Soundactiv)))
    5b46:	fc 01       	movw	r30, r24
    5b48:	20 81       	ld	r18, Z
    5b4a:	20 ff       	sbrs	r18, 0
    5b4c:	04 c0       	rjmp	.+8      	; 0x5b56 <_ZN5SOUND2onEv+0x10>
	{
		TCCR0B |= prescaler;
    5b4e:	25 b5       	in	r18, 0x25	; 37
    5b50:	81 81       	ldd	r24, Z+1	; 0x01
    5b52:	82 2b       	or	r24, r18
    5b54:	85 bd       	out	0x25, r24	; 37
    5b56:	08 95       	ret

00005b58 <_ZN5SOUND3offEv>:
	}
}

void SOUND::off(){
	TCCR0B &= ~((1<<CS00)|(1<<CS01)|(1<<CS02));
    5b58:	85 b5       	in	r24, 0x25	; 37
    5b5a:	88 7f       	andi	r24, 0xF8	; 248
    5b5c:	85 bd       	out	0x25, r24	; 37
    5b5e:	08 95       	ret

00005b60 <_ZN5SOUND12setfrequenciEj>:
{
} //~SOUND


//WERT = f_CPU/(f*1024)
void SOUND::setfrequenci(uint16_t frequenz){
    5b60:	0f 93       	push	r16
    5b62:	1f 93       	push	r17
    5b64:	cf 93       	push	r28
    5b66:	df 93       	push	r29
    5b68:	ec 01       	movw	r28, r24
    5b6a:	8b 01       	movw	r16, r22
	off();
    5b6c:	f5 df       	rcall	.-22     	; 0x5b58 <_ZN5SOUND3offEv>
	float WERT = F_CPU/256.0;
	WERT /= (frequenz);
    5b6e:	b8 01       	movw	r22, r16
    5b70:	80 e0       	ldi	r24, 0x00	; 0
    5b72:	90 e0       	ldi	r25, 0x00	; 0
    5b74:	8f d1       	rcall	.+798    	; 0x5e94 <__floatunsisf>
    5b76:	9b 01       	movw	r18, r22
    5b78:	ac 01       	movw	r20, r24
    5b7a:	60 e0       	ldi	r22, 0x00	; 0
    5b7c:	74 e2       	ldi	r23, 0x24	; 36
    5b7e:	84 ef       	ldi	r24, 0xF4	; 244
    5b80:	96 e4       	ldi	r25, 0x46	; 70
    5b82:	ef d0       	rcall	.+478    	; 0x5d62 <__divsf3>
	OCR0A = (uint8_t)WERT;
    5b84:	5b d1       	rcall	.+694    	; 0x5e3c <__fixunssfsi>
    5b86:	67 bd       	out	0x27, r22	; 39
	TCNT0 = 0;
    5b88:	16 bc       	out	0x26, r1	; 38
	on();
    5b8a:	ce 01       	movw	r24, r28
    5b8c:	dc df       	rcall	.-72     	; 0x5b46 <_ZN5SOUND2onEv>
}
    5b8e:	df 91       	pop	r29
    5b90:	cf 91       	pop	r28
    5b92:	1f 91       	pop	r17
    5b94:	0f 91       	pop	r16
    5b96:	08 95       	ret

00005b98 <_ZN5SOUNDC1Ev>:


#include "SOUND.h"

// default constructor
SOUND::SOUND()
    5b98:	cf 93       	push	r28
    5b9a:	df 93       	push	r29
    5b9c:	ec 01       	movw	r28, r24
{
	//interuptregister initialisieren
	interupts = 0;
    5b9e:	18 82       	st	Y, r1
	PORTB &= ~(1<<PORTB3); //Pullups ausschalten
    5ba0:	2b 98       	cbi	0x05, 3	; 5
	DDRB |= (1<<PORTB3); //Ausgang schalten
    5ba2:	23 9a       	sbi	0x04, 3	; 4
	//Not inverting PWM, Phase correct
	TCCR0A |= (1<<COM0A0) | (1<<WGM00);
    5ba4:	84 b5       	in	r24, 0x24	; 36
    5ba6:	81 64       	ori	r24, 0x41	; 65
    5ba8:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<WGM02);
    5baa:	85 b5       	in	r24, 0x25	; 37
    5bac:	88 60       	ori	r24, 0x08	; 8
    5bae:	85 bd       	out	0x25, r24	; 37
	fuer	8		1MHz		3.90625KHz
			64		125KHz		488.28Hz
			256		31.25KHz	122.07Hz
			1024	7.8125KHz	30.52Hz
*/
	prescaler = (1<<CS02); //256
    5bb0:	84 e0       	ldi	r24, 0x04	; 4
    5bb2:	89 83       	std	Y+1, r24	; 0x01
	setfrequenci(1000);//1KHz
    5bb4:	68 ee       	ldi	r22, 0xE8	; 232
    5bb6:	73 e0       	ldi	r23, 0x03	; 3
    5bb8:	ce 01       	movw	r24, r28
    5bba:	d2 df       	rcall	.-92     	; 0x5b60 <_ZN5SOUND12setfrequenciEj>
	off();
    5bbc:	ce 01       	movw	r24, r28
    5bbe:	cc df       	rcall	.-104    	; 0x5b58 <_ZN5SOUND3offEv>
} //SOUND
    5bc0:	df 91       	pop	r29
    5bc2:	cf 91       	pop	r28
    5bc4:	08 95       	ret

00005bc6 <__subsf3>:
    5bc6:	50 58       	subi	r21, 0x80	; 128

00005bc8 <__addsf3>:
    5bc8:	bb 27       	eor	r27, r27
    5bca:	aa 27       	eor	r26, r26
    5bcc:	0e d0       	rcall	.+28     	; 0x5bea <__addsf3x>
    5bce:	27 c2       	rjmp	.+1102   	; 0x601e <__fp_round>
    5bd0:	f0 d1       	rcall	.+992    	; 0x5fb2 <__fp_pscA>
    5bd2:	30 f0       	brcs	.+12     	; 0x5be0 <__addsf3+0x18>
    5bd4:	f5 d1       	rcall	.+1002   	; 0x5fc0 <__fp_pscB>
    5bd6:	20 f0       	brcs	.+8      	; 0x5be0 <__addsf3+0x18>
    5bd8:	31 f4       	brne	.+12     	; 0x5be6 <__addsf3+0x1e>
    5bda:	9f 3f       	cpi	r25, 0xFF	; 255
    5bdc:	11 f4       	brne	.+4      	; 0x5be2 <__addsf3+0x1a>
    5bde:	1e f4       	brtc	.+6      	; 0x5be6 <__addsf3+0x1e>
    5be0:	c0 c1       	rjmp	.+896    	; 0x5f62 <__fp_nan>
    5be2:	0e f4       	brtc	.+2      	; 0x5be6 <__addsf3+0x1e>
    5be4:	e0 95       	com	r30
    5be6:	e7 fb       	bst	r30, 7
    5be8:	b6 c1       	rjmp	.+876    	; 0x5f56 <__fp_inf>

00005bea <__addsf3x>:
    5bea:	e9 2f       	mov	r30, r25
    5bec:	3a d2       	rcall	.+1140   	; 0x6062 <__fp_split3>
    5bee:	80 f3       	brcs	.-32     	; 0x5bd0 <__addsf3+0x8>
    5bf0:	ba 17       	cp	r27, r26
    5bf2:	62 07       	cpc	r22, r18
    5bf4:	73 07       	cpc	r23, r19
    5bf6:	84 07       	cpc	r24, r20
    5bf8:	95 07       	cpc	r25, r21
    5bfa:	18 f0       	brcs	.+6      	; 0x5c02 <__addsf3x+0x18>
    5bfc:	71 f4       	brne	.+28     	; 0x5c1a <__addsf3x+0x30>
    5bfe:	9e f5       	brtc	.+102    	; 0x5c66 <__addsf3x+0x7c>
    5c00:	52 c2       	rjmp	.+1188   	; 0x60a6 <__fp_zero>
    5c02:	0e f4       	brtc	.+2      	; 0x5c06 <__addsf3x+0x1c>
    5c04:	e0 95       	com	r30
    5c06:	0b 2e       	mov	r0, r27
    5c08:	ba 2f       	mov	r27, r26
    5c0a:	a0 2d       	mov	r26, r0
    5c0c:	0b 01       	movw	r0, r22
    5c0e:	b9 01       	movw	r22, r18
    5c10:	90 01       	movw	r18, r0
    5c12:	0c 01       	movw	r0, r24
    5c14:	ca 01       	movw	r24, r20
    5c16:	a0 01       	movw	r20, r0
    5c18:	11 24       	eor	r1, r1
    5c1a:	ff 27       	eor	r31, r31
    5c1c:	59 1b       	sub	r21, r25
    5c1e:	99 f0       	breq	.+38     	; 0x5c46 <__addsf3x+0x5c>
    5c20:	59 3f       	cpi	r21, 0xF9	; 249
    5c22:	50 f4       	brcc	.+20     	; 0x5c38 <__addsf3x+0x4e>
    5c24:	50 3e       	cpi	r21, 0xE0	; 224
    5c26:	68 f1       	brcs	.+90     	; 0x5c82 <__addsf3x+0x98>
    5c28:	1a 16       	cp	r1, r26
    5c2a:	f0 40       	sbci	r31, 0x00	; 0
    5c2c:	a2 2f       	mov	r26, r18
    5c2e:	23 2f       	mov	r18, r19
    5c30:	34 2f       	mov	r19, r20
    5c32:	44 27       	eor	r20, r20
    5c34:	58 5f       	subi	r21, 0xF8	; 248
    5c36:	f3 cf       	rjmp	.-26     	; 0x5c1e <__addsf3x+0x34>
    5c38:	46 95       	lsr	r20
    5c3a:	37 95       	ror	r19
    5c3c:	27 95       	ror	r18
    5c3e:	a7 95       	ror	r26
    5c40:	f0 40       	sbci	r31, 0x00	; 0
    5c42:	53 95       	inc	r21
    5c44:	c9 f7       	brne	.-14     	; 0x5c38 <__addsf3x+0x4e>
    5c46:	7e f4       	brtc	.+30     	; 0x5c66 <__addsf3x+0x7c>
    5c48:	1f 16       	cp	r1, r31
    5c4a:	ba 0b       	sbc	r27, r26
    5c4c:	62 0b       	sbc	r22, r18
    5c4e:	73 0b       	sbc	r23, r19
    5c50:	84 0b       	sbc	r24, r20
    5c52:	ba f0       	brmi	.+46     	; 0x5c82 <__addsf3x+0x98>
    5c54:	91 50       	subi	r25, 0x01	; 1
    5c56:	a1 f0       	breq	.+40     	; 0x5c80 <__addsf3x+0x96>
    5c58:	ff 0f       	add	r31, r31
    5c5a:	bb 1f       	adc	r27, r27
    5c5c:	66 1f       	adc	r22, r22
    5c5e:	77 1f       	adc	r23, r23
    5c60:	88 1f       	adc	r24, r24
    5c62:	c2 f7       	brpl	.-16     	; 0x5c54 <__addsf3x+0x6a>
    5c64:	0e c0       	rjmp	.+28     	; 0x5c82 <__addsf3x+0x98>
    5c66:	ba 0f       	add	r27, r26
    5c68:	62 1f       	adc	r22, r18
    5c6a:	73 1f       	adc	r23, r19
    5c6c:	84 1f       	adc	r24, r20
    5c6e:	48 f4       	brcc	.+18     	; 0x5c82 <__addsf3x+0x98>
    5c70:	87 95       	ror	r24
    5c72:	77 95       	ror	r23
    5c74:	67 95       	ror	r22
    5c76:	b7 95       	ror	r27
    5c78:	f7 95       	ror	r31
    5c7a:	9e 3f       	cpi	r25, 0xFE	; 254
    5c7c:	08 f0       	brcs	.+2      	; 0x5c80 <__addsf3x+0x96>
    5c7e:	b3 cf       	rjmp	.-154    	; 0x5be6 <__addsf3+0x1e>
    5c80:	93 95       	inc	r25
    5c82:	88 0f       	add	r24, r24
    5c84:	08 f0       	brcs	.+2      	; 0x5c88 <__addsf3x+0x9e>
    5c86:	99 27       	eor	r25, r25
    5c88:	ee 0f       	add	r30, r30
    5c8a:	97 95       	ror	r25
    5c8c:	87 95       	ror	r24
    5c8e:	08 95       	ret
    5c90:	90 d1       	rcall	.+800    	; 0x5fb2 <__fp_pscA>
    5c92:	58 f0       	brcs	.+22     	; 0x5caa <__addsf3x+0xc0>
    5c94:	80 e8       	ldi	r24, 0x80	; 128
    5c96:	91 e0       	ldi	r25, 0x01	; 1
    5c98:	09 f4       	brne	.+2      	; 0x5c9c <__addsf3x+0xb2>
    5c9a:	9e ef       	ldi	r25, 0xFE	; 254
    5c9c:	91 d1       	rcall	.+802    	; 0x5fc0 <__fp_pscB>
    5c9e:	28 f0       	brcs	.+10     	; 0x5caa <__addsf3x+0xc0>
    5ca0:	40 e8       	ldi	r20, 0x80	; 128
    5ca2:	51 e0       	ldi	r21, 0x01	; 1
    5ca4:	59 f4       	brne	.+22     	; 0x5cbc <atan2+0xe>
    5ca6:	5e ef       	ldi	r21, 0xFE	; 254
    5ca8:	09 c0       	rjmp	.+18     	; 0x5cbc <atan2+0xe>
    5caa:	5b c1       	rjmp	.+694    	; 0x5f62 <__fp_nan>
    5cac:	fc c1       	rjmp	.+1016   	; 0x60a6 <__fp_zero>

00005cae <atan2>:
    5cae:	e9 2f       	mov	r30, r25
    5cb0:	e0 78       	andi	r30, 0x80	; 128
    5cb2:	d7 d1       	rcall	.+942    	; 0x6062 <__fp_split3>
    5cb4:	68 f3       	brcs	.-38     	; 0x5c90 <__addsf3x+0xa6>
    5cb6:	09 2e       	mov	r0, r25
    5cb8:	05 2a       	or	r0, r21
    5cba:	c1 f3       	breq	.-16     	; 0x5cac <__addsf3x+0xc2>
    5cbc:	26 17       	cp	r18, r22
    5cbe:	37 07       	cpc	r19, r23
    5cc0:	48 07       	cpc	r20, r24
    5cc2:	59 07       	cpc	r21, r25
    5cc4:	38 f0       	brcs	.+14     	; 0x5cd4 <atan2+0x26>
    5cc6:	0e 2e       	mov	r0, r30
    5cc8:	07 f8       	bld	r0, 7
    5cca:	e0 25       	eor	r30, r0
    5ccc:	69 f0       	breq	.+26     	; 0x5ce8 <atan2+0x3a>
    5cce:	e0 25       	eor	r30, r0
    5cd0:	e0 64       	ori	r30, 0x40	; 64
    5cd2:	0a c0       	rjmp	.+20     	; 0x5ce8 <atan2+0x3a>
    5cd4:	ef 63       	ori	r30, 0x3F	; 63
    5cd6:	07 f8       	bld	r0, 7
    5cd8:	00 94       	com	r0
    5cda:	07 fa       	bst	r0, 7
    5cdc:	db 01       	movw	r26, r22
    5cde:	b9 01       	movw	r22, r18
    5ce0:	9d 01       	movw	r18, r26
    5ce2:	dc 01       	movw	r26, r24
    5ce4:	ca 01       	movw	r24, r20
    5ce6:	ad 01       	movw	r20, r26
    5ce8:	ef 93       	push	r30
    5cea:	4a d0       	rcall	.+148    	; 0x5d80 <__divsf3_pse>
    5cec:	98 d1       	rcall	.+816    	; 0x601e <__fp_round>
    5cee:	0a d0       	rcall	.+20     	; 0x5d04 <atan>
    5cf0:	5f 91       	pop	r21
    5cf2:	55 23       	and	r21, r21
    5cf4:	31 f0       	breq	.+12     	; 0x5d02 <atan2+0x54>
    5cf6:	2b ed       	ldi	r18, 0xDB	; 219
    5cf8:	3f e0       	ldi	r19, 0x0F	; 15
    5cfa:	49 e4       	ldi	r20, 0x49	; 73
    5cfc:	50 fd       	sbrc	r21, 0
    5cfe:	49 ec       	ldi	r20, 0xC9	; 201
    5d00:	63 cf       	rjmp	.-314    	; 0x5bc8 <__addsf3>
    5d02:	08 95       	ret

00005d04 <atan>:
    5d04:	df 93       	push	r29
    5d06:	dd 27       	eor	r29, r29
    5d08:	b9 2f       	mov	r27, r25
    5d0a:	bf 77       	andi	r27, 0x7F	; 127
    5d0c:	40 e8       	ldi	r20, 0x80	; 128
    5d0e:	5f e3       	ldi	r21, 0x3F	; 63
    5d10:	16 16       	cp	r1, r22
    5d12:	17 06       	cpc	r1, r23
    5d14:	48 07       	cpc	r20, r24
    5d16:	5b 07       	cpc	r21, r27
    5d18:	10 f4       	brcc	.+4      	; 0x5d1e <atan+0x1a>
    5d1a:	d9 2f       	mov	r29, r25
    5d1c:	cf d1       	rcall	.+926    	; 0x60bc <inverse>
    5d1e:	9f 93       	push	r25
    5d20:	8f 93       	push	r24
    5d22:	7f 93       	push	r23
    5d24:	6f 93       	push	r22
    5d26:	7f d2       	rcall	.+1278   	; 0x6226 <square>
    5d28:	ee eb       	ldi	r30, 0xBE	; 190
    5d2a:	f0 e0       	ldi	r31, 0x00	; 0
    5d2c:	1d d1       	rcall	.+570    	; 0x5f68 <__fp_powser>
    5d2e:	77 d1       	rcall	.+750    	; 0x601e <__fp_round>
    5d30:	2f 91       	pop	r18
    5d32:	3f 91       	pop	r19
    5d34:	4f 91       	pop	r20
    5d36:	5f 91       	pop	r21
    5d38:	19 d2       	rcall	.+1074   	; 0x616c <__mulsf3x>
    5d3a:	dd 23       	and	r29, r29
    5d3c:	49 f0       	breq	.+18     	; 0x5d50 <atan+0x4c>
    5d3e:	90 58       	subi	r25, 0x80	; 128
    5d40:	a2 ea       	ldi	r26, 0xA2	; 162
    5d42:	2a ed       	ldi	r18, 0xDA	; 218
    5d44:	3f e0       	ldi	r19, 0x0F	; 15
    5d46:	49 ec       	ldi	r20, 0xC9	; 201
    5d48:	5f e3       	ldi	r21, 0x3F	; 63
    5d4a:	d0 78       	andi	r29, 0x80	; 128
    5d4c:	5d 27       	eor	r21, r29
    5d4e:	4d df       	rcall	.-358    	; 0x5bea <__addsf3x>
    5d50:	df 91       	pop	r29
    5d52:	65 c1       	rjmp	.+714    	; 0x601e <__fp_round>

00005d54 <__cmpsf2>:
    5d54:	dc d0       	rcall	.+440    	; 0x5f0e <__fp_cmp>
    5d56:	08 f4       	brcc	.+2      	; 0x5d5a <__cmpsf2+0x6>
    5d58:	81 e0       	ldi	r24, 0x01	; 1
    5d5a:	08 95       	ret

00005d5c <cos>:
    5d5c:	39 d1       	rcall	.+626    	; 0x5fd0 <__fp_rempio2>
    5d5e:	e3 95       	inc	r30
    5d60:	6f c1       	rjmp	.+734    	; 0x6040 <__fp_sinus>

00005d62 <__divsf3>:
    5d62:	0c d0       	rcall	.+24     	; 0x5d7c <__divsf3x>
    5d64:	5c c1       	rjmp	.+696    	; 0x601e <__fp_round>
    5d66:	2c d1       	rcall	.+600    	; 0x5fc0 <__fp_pscB>
    5d68:	40 f0       	brcs	.+16     	; 0x5d7a <__divsf3+0x18>
    5d6a:	23 d1       	rcall	.+582    	; 0x5fb2 <__fp_pscA>
    5d6c:	30 f0       	brcs	.+12     	; 0x5d7a <__divsf3+0x18>
    5d6e:	21 f4       	brne	.+8      	; 0x5d78 <__divsf3+0x16>
    5d70:	5f 3f       	cpi	r21, 0xFF	; 255
    5d72:	19 f0       	breq	.+6      	; 0x5d7a <__divsf3+0x18>
    5d74:	f0 c0       	rjmp	.+480    	; 0x5f56 <__fp_inf>
    5d76:	51 11       	cpse	r21, r1
    5d78:	97 c1       	rjmp	.+814    	; 0x60a8 <__fp_szero>
    5d7a:	f3 c0       	rjmp	.+486    	; 0x5f62 <__fp_nan>

00005d7c <__divsf3x>:
    5d7c:	72 d1       	rcall	.+740    	; 0x6062 <__fp_split3>
    5d7e:	98 f3       	brcs	.-26     	; 0x5d66 <__divsf3+0x4>

00005d80 <__divsf3_pse>:
    5d80:	99 23       	and	r25, r25
    5d82:	c9 f3       	breq	.-14     	; 0x5d76 <__divsf3+0x14>
    5d84:	55 23       	and	r21, r21
    5d86:	b1 f3       	breq	.-20     	; 0x5d74 <__divsf3+0x12>
    5d88:	95 1b       	sub	r25, r21
    5d8a:	55 0b       	sbc	r21, r21
    5d8c:	bb 27       	eor	r27, r27
    5d8e:	aa 27       	eor	r26, r26
    5d90:	62 17       	cp	r22, r18
    5d92:	73 07       	cpc	r23, r19
    5d94:	84 07       	cpc	r24, r20
    5d96:	38 f0       	brcs	.+14     	; 0x5da6 <__divsf3_pse+0x26>
    5d98:	9f 5f       	subi	r25, 0xFF	; 255
    5d9a:	5f 4f       	sbci	r21, 0xFF	; 255
    5d9c:	22 0f       	add	r18, r18
    5d9e:	33 1f       	adc	r19, r19
    5da0:	44 1f       	adc	r20, r20
    5da2:	aa 1f       	adc	r26, r26
    5da4:	a9 f3       	breq	.-22     	; 0x5d90 <__divsf3_pse+0x10>
    5da6:	33 d0       	rcall	.+102    	; 0x5e0e <__divsf3_pse+0x8e>
    5da8:	0e 2e       	mov	r0, r30
    5daa:	3a f0       	brmi	.+14     	; 0x5dba <__divsf3_pse+0x3a>
    5dac:	e0 e8       	ldi	r30, 0x80	; 128
    5dae:	30 d0       	rcall	.+96     	; 0x5e10 <__divsf3_pse+0x90>
    5db0:	91 50       	subi	r25, 0x01	; 1
    5db2:	50 40       	sbci	r21, 0x00	; 0
    5db4:	e6 95       	lsr	r30
    5db6:	00 1c       	adc	r0, r0
    5db8:	ca f7       	brpl	.-14     	; 0x5dac <__divsf3_pse+0x2c>
    5dba:	29 d0       	rcall	.+82     	; 0x5e0e <__divsf3_pse+0x8e>
    5dbc:	fe 2f       	mov	r31, r30
    5dbe:	27 d0       	rcall	.+78     	; 0x5e0e <__divsf3_pse+0x8e>
    5dc0:	66 0f       	add	r22, r22
    5dc2:	77 1f       	adc	r23, r23
    5dc4:	88 1f       	adc	r24, r24
    5dc6:	bb 1f       	adc	r27, r27
    5dc8:	26 17       	cp	r18, r22
    5dca:	37 07       	cpc	r19, r23
    5dcc:	48 07       	cpc	r20, r24
    5dce:	ab 07       	cpc	r26, r27
    5dd0:	b0 e8       	ldi	r27, 0x80	; 128
    5dd2:	09 f0       	breq	.+2      	; 0x5dd6 <__divsf3_pse+0x56>
    5dd4:	bb 0b       	sbc	r27, r27
    5dd6:	80 2d       	mov	r24, r0
    5dd8:	bf 01       	movw	r22, r30
    5dda:	ff 27       	eor	r31, r31
    5ddc:	93 58       	subi	r25, 0x83	; 131
    5dde:	5f 4f       	sbci	r21, 0xFF	; 255
    5de0:	2a f0       	brmi	.+10     	; 0x5dec <__divsf3_pse+0x6c>
    5de2:	9e 3f       	cpi	r25, 0xFE	; 254
    5de4:	51 05       	cpc	r21, r1
    5de6:	68 f0       	brcs	.+26     	; 0x5e02 <__divsf3_pse+0x82>
    5de8:	b6 c0       	rjmp	.+364    	; 0x5f56 <__fp_inf>
    5dea:	5e c1       	rjmp	.+700    	; 0x60a8 <__fp_szero>
    5dec:	5f 3f       	cpi	r21, 0xFF	; 255
    5dee:	ec f3       	brlt	.-6      	; 0x5dea <__divsf3_pse+0x6a>
    5df0:	98 3e       	cpi	r25, 0xE8	; 232
    5df2:	dc f3       	brlt	.-10     	; 0x5dea <__divsf3_pse+0x6a>
    5df4:	86 95       	lsr	r24
    5df6:	77 95       	ror	r23
    5df8:	67 95       	ror	r22
    5dfa:	b7 95       	ror	r27
    5dfc:	f7 95       	ror	r31
    5dfe:	9f 5f       	subi	r25, 0xFF	; 255
    5e00:	c9 f7       	brne	.-14     	; 0x5df4 <__divsf3_pse+0x74>
    5e02:	88 0f       	add	r24, r24
    5e04:	91 1d       	adc	r25, r1
    5e06:	96 95       	lsr	r25
    5e08:	87 95       	ror	r24
    5e0a:	97 f9       	bld	r25, 7
    5e0c:	08 95       	ret
    5e0e:	e1 e0       	ldi	r30, 0x01	; 1
    5e10:	66 0f       	add	r22, r22
    5e12:	77 1f       	adc	r23, r23
    5e14:	88 1f       	adc	r24, r24
    5e16:	bb 1f       	adc	r27, r27
    5e18:	62 17       	cp	r22, r18
    5e1a:	73 07       	cpc	r23, r19
    5e1c:	84 07       	cpc	r24, r20
    5e1e:	ba 07       	cpc	r27, r26
    5e20:	20 f0       	brcs	.+8      	; 0x5e2a <__divsf3_pse+0xaa>
    5e22:	62 1b       	sub	r22, r18
    5e24:	73 0b       	sbc	r23, r19
    5e26:	84 0b       	sbc	r24, r20
    5e28:	ba 0b       	sbc	r27, r26
    5e2a:	ee 1f       	adc	r30, r30
    5e2c:	88 f7       	brcc	.-30     	; 0x5e10 <__divsf3_pse+0x90>
    5e2e:	e0 95       	com	r30
    5e30:	08 95       	ret

00005e32 <__fixsfsi>:
    5e32:	04 d0       	rcall	.+8      	; 0x5e3c <__fixunssfsi>
    5e34:	68 94       	set
    5e36:	b1 11       	cpse	r27, r1
    5e38:	37 c1       	rjmp	.+622    	; 0x60a8 <__fp_szero>
    5e3a:	08 95       	ret

00005e3c <__fixunssfsi>:
    5e3c:	1a d1       	rcall	.+564    	; 0x6072 <__fp_splitA>
    5e3e:	88 f0       	brcs	.+34     	; 0x5e62 <__fixunssfsi+0x26>
    5e40:	9f 57       	subi	r25, 0x7F	; 127
    5e42:	90 f0       	brcs	.+36     	; 0x5e68 <__fixunssfsi+0x2c>
    5e44:	b9 2f       	mov	r27, r25
    5e46:	99 27       	eor	r25, r25
    5e48:	b7 51       	subi	r27, 0x17	; 23
    5e4a:	a0 f0       	brcs	.+40     	; 0x5e74 <__fixunssfsi+0x38>
    5e4c:	d1 f0       	breq	.+52     	; 0x5e82 <__fixunssfsi+0x46>
    5e4e:	66 0f       	add	r22, r22
    5e50:	77 1f       	adc	r23, r23
    5e52:	88 1f       	adc	r24, r24
    5e54:	99 1f       	adc	r25, r25
    5e56:	1a f0       	brmi	.+6      	; 0x5e5e <__fixunssfsi+0x22>
    5e58:	ba 95       	dec	r27
    5e5a:	c9 f7       	brne	.-14     	; 0x5e4e <__fixunssfsi+0x12>
    5e5c:	12 c0       	rjmp	.+36     	; 0x5e82 <__fixunssfsi+0x46>
    5e5e:	b1 30       	cpi	r27, 0x01	; 1
    5e60:	81 f0       	breq	.+32     	; 0x5e82 <__fixunssfsi+0x46>
    5e62:	21 d1       	rcall	.+578    	; 0x60a6 <__fp_zero>
    5e64:	b1 e0       	ldi	r27, 0x01	; 1
    5e66:	08 95       	ret
    5e68:	1e c1       	rjmp	.+572    	; 0x60a6 <__fp_zero>
    5e6a:	67 2f       	mov	r22, r23
    5e6c:	78 2f       	mov	r23, r24
    5e6e:	88 27       	eor	r24, r24
    5e70:	b8 5f       	subi	r27, 0xF8	; 248
    5e72:	39 f0       	breq	.+14     	; 0x5e82 <__fixunssfsi+0x46>
    5e74:	b9 3f       	cpi	r27, 0xF9	; 249
    5e76:	cc f3       	brlt	.-14     	; 0x5e6a <__fixunssfsi+0x2e>
    5e78:	86 95       	lsr	r24
    5e7a:	77 95       	ror	r23
    5e7c:	67 95       	ror	r22
    5e7e:	b3 95       	inc	r27
    5e80:	d9 f7       	brne	.-10     	; 0x5e78 <__fixunssfsi+0x3c>
    5e82:	3e f4       	brtc	.+14     	; 0x5e92 <__fixunssfsi+0x56>
    5e84:	90 95       	com	r25
    5e86:	80 95       	com	r24
    5e88:	70 95       	com	r23
    5e8a:	61 95       	neg	r22
    5e8c:	7f 4f       	sbci	r23, 0xFF	; 255
    5e8e:	8f 4f       	sbci	r24, 0xFF	; 255
    5e90:	9f 4f       	sbci	r25, 0xFF	; 255
    5e92:	08 95       	ret

00005e94 <__floatunsisf>:
    5e94:	e8 94       	clt
    5e96:	09 c0       	rjmp	.+18     	; 0x5eaa <__floatsisf+0x12>

00005e98 <__floatsisf>:
    5e98:	97 fb       	bst	r25, 7
    5e9a:	3e f4       	brtc	.+14     	; 0x5eaa <__floatsisf+0x12>
    5e9c:	90 95       	com	r25
    5e9e:	80 95       	com	r24
    5ea0:	70 95       	com	r23
    5ea2:	61 95       	neg	r22
    5ea4:	7f 4f       	sbci	r23, 0xFF	; 255
    5ea6:	8f 4f       	sbci	r24, 0xFF	; 255
    5ea8:	9f 4f       	sbci	r25, 0xFF	; 255
    5eaa:	99 23       	and	r25, r25
    5eac:	a9 f0       	breq	.+42     	; 0x5ed8 <__floatsisf+0x40>
    5eae:	f9 2f       	mov	r31, r25
    5eb0:	96 e9       	ldi	r25, 0x96	; 150
    5eb2:	bb 27       	eor	r27, r27
    5eb4:	93 95       	inc	r25
    5eb6:	f6 95       	lsr	r31
    5eb8:	87 95       	ror	r24
    5eba:	77 95       	ror	r23
    5ebc:	67 95       	ror	r22
    5ebe:	b7 95       	ror	r27
    5ec0:	f1 11       	cpse	r31, r1
    5ec2:	f8 cf       	rjmp	.-16     	; 0x5eb4 <__floatsisf+0x1c>
    5ec4:	fa f4       	brpl	.+62     	; 0x5f04 <__floatsisf+0x6c>
    5ec6:	bb 0f       	add	r27, r27
    5ec8:	11 f4       	brne	.+4      	; 0x5ece <__floatsisf+0x36>
    5eca:	60 ff       	sbrs	r22, 0
    5ecc:	1b c0       	rjmp	.+54     	; 0x5f04 <__floatsisf+0x6c>
    5ece:	6f 5f       	subi	r22, 0xFF	; 255
    5ed0:	7f 4f       	sbci	r23, 0xFF	; 255
    5ed2:	8f 4f       	sbci	r24, 0xFF	; 255
    5ed4:	9f 4f       	sbci	r25, 0xFF	; 255
    5ed6:	16 c0       	rjmp	.+44     	; 0x5f04 <__floatsisf+0x6c>
    5ed8:	88 23       	and	r24, r24
    5eda:	11 f0       	breq	.+4      	; 0x5ee0 <__floatsisf+0x48>
    5edc:	96 e9       	ldi	r25, 0x96	; 150
    5ede:	11 c0       	rjmp	.+34     	; 0x5f02 <__floatsisf+0x6a>
    5ee0:	77 23       	and	r23, r23
    5ee2:	21 f0       	breq	.+8      	; 0x5eec <__floatsisf+0x54>
    5ee4:	9e e8       	ldi	r25, 0x8E	; 142
    5ee6:	87 2f       	mov	r24, r23
    5ee8:	76 2f       	mov	r23, r22
    5eea:	05 c0       	rjmp	.+10     	; 0x5ef6 <__floatsisf+0x5e>
    5eec:	66 23       	and	r22, r22
    5eee:	71 f0       	breq	.+28     	; 0x5f0c <__floatsisf+0x74>
    5ef0:	96 e8       	ldi	r25, 0x86	; 134
    5ef2:	86 2f       	mov	r24, r22
    5ef4:	70 e0       	ldi	r23, 0x00	; 0
    5ef6:	60 e0       	ldi	r22, 0x00	; 0
    5ef8:	2a f0       	brmi	.+10     	; 0x5f04 <__floatsisf+0x6c>
    5efa:	9a 95       	dec	r25
    5efc:	66 0f       	add	r22, r22
    5efe:	77 1f       	adc	r23, r23
    5f00:	88 1f       	adc	r24, r24
    5f02:	da f7       	brpl	.-10     	; 0x5efa <__floatsisf+0x62>
    5f04:	88 0f       	add	r24, r24
    5f06:	96 95       	lsr	r25
    5f08:	87 95       	ror	r24
    5f0a:	97 f9       	bld	r25, 7
    5f0c:	08 95       	ret

00005f0e <__fp_cmp>:
    5f0e:	99 0f       	add	r25, r25
    5f10:	00 08       	sbc	r0, r0
    5f12:	55 0f       	add	r21, r21
    5f14:	aa 0b       	sbc	r26, r26
    5f16:	e0 e8       	ldi	r30, 0x80	; 128
    5f18:	fe ef       	ldi	r31, 0xFE	; 254
    5f1a:	16 16       	cp	r1, r22
    5f1c:	17 06       	cpc	r1, r23
    5f1e:	e8 07       	cpc	r30, r24
    5f20:	f9 07       	cpc	r31, r25
    5f22:	c0 f0       	brcs	.+48     	; 0x5f54 <__fp_cmp+0x46>
    5f24:	12 16       	cp	r1, r18
    5f26:	13 06       	cpc	r1, r19
    5f28:	e4 07       	cpc	r30, r20
    5f2a:	f5 07       	cpc	r31, r21
    5f2c:	98 f0       	brcs	.+38     	; 0x5f54 <__fp_cmp+0x46>
    5f2e:	62 1b       	sub	r22, r18
    5f30:	73 0b       	sbc	r23, r19
    5f32:	84 0b       	sbc	r24, r20
    5f34:	95 0b       	sbc	r25, r21
    5f36:	39 f4       	brne	.+14     	; 0x5f46 <__fp_cmp+0x38>
    5f38:	0a 26       	eor	r0, r26
    5f3a:	61 f0       	breq	.+24     	; 0x5f54 <__fp_cmp+0x46>
    5f3c:	23 2b       	or	r18, r19
    5f3e:	24 2b       	or	r18, r20
    5f40:	25 2b       	or	r18, r21
    5f42:	21 f4       	brne	.+8      	; 0x5f4c <__fp_cmp+0x3e>
    5f44:	08 95       	ret
    5f46:	0a 26       	eor	r0, r26
    5f48:	09 f4       	brne	.+2      	; 0x5f4c <__fp_cmp+0x3e>
    5f4a:	a1 40       	sbci	r26, 0x01	; 1
    5f4c:	a6 95       	lsr	r26
    5f4e:	8f ef       	ldi	r24, 0xFF	; 255
    5f50:	81 1d       	adc	r24, r1
    5f52:	81 1d       	adc	r24, r1
    5f54:	08 95       	ret

00005f56 <__fp_inf>:
    5f56:	97 f9       	bld	r25, 7
    5f58:	9f 67       	ori	r25, 0x7F	; 127
    5f5a:	80 e8       	ldi	r24, 0x80	; 128
    5f5c:	70 e0       	ldi	r23, 0x00	; 0
    5f5e:	60 e0       	ldi	r22, 0x00	; 0
    5f60:	08 95       	ret

00005f62 <__fp_nan>:
    5f62:	9f ef       	ldi	r25, 0xFF	; 255
    5f64:	80 ec       	ldi	r24, 0xC0	; 192
    5f66:	08 95       	ret

00005f68 <__fp_powser>:
    5f68:	df 93       	push	r29
    5f6a:	cf 93       	push	r28
    5f6c:	1f 93       	push	r17
    5f6e:	0f 93       	push	r16
    5f70:	ff 92       	push	r15
    5f72:	ef 92       	push	r14
    5f74:	df 92       	push	r13
    5f76:	7b 01       	movw	r14, r22
    5f78:	8c 01       	movw	r16, r24
    5f7a:	68 94       	set
    5f7c:	05 c0       	rjmp	.+10     	; 0x5f88 <__fp_powser+0x20>
    5f7e:	da 2e       	mov	r13, r26
    5f80:	ef 01       	movw	r28, r30
    5f82:	f4 d0       	rcall	.+488    	; 0x616c <__mulsf3x>
    5f84:	fe 01       	movw	r30, r28
    5f86:	e8 94       	clt
    5f88:	a5 91       	lpm	r26, Z+
    5f8a:	25 91       	lpm	r18, Z+
    5f8c:	35 91       	lpm	r19, Z+
    5f8e:	45 91       	lpm	r20, Z+
    5f90:	55 91       	lpm	r21, Z+
    5f92:	ae f3       	brts	.-22     	; 0x5f7e <__fp_powser+0x16>
    5f94:	ef 01       	movw	r28, r30
    5f96:	29 de       	rcall	.-942    	; 0x5bea <__addsf3x>
    5f98:	fe 01       	movw	r30, r28
    5f9a:	97 01       	movw	r18, r14
    5f9c:	a8 01       	movw	r20, r16
    5f9e:	da 94       	dec	r13
    5fa0:	79 f7       	brne	.-34     	; 0x5f80 <__fp_powser+0x18>
    5fa2:	df 90       	pop	r13
    5fa4:	ef 90       	pop	r14
    5fa6:	ff 90       	pop	r15
    5fa8:	0f 91       	pop	r16
    5faa:	1f 91       	pop	r17
    5fac:	cf 91       	pop	r28
    5fae:	df 91       	pop	r29
    5fb0:	08 95       	ret

00005fb2 <__fp_pscA>:
    5fb2:	00 24       	eor	r0, r0
    5fb4:	0a 94       	dec	r0
    5fb6:	16 16       	cp	r1, r22
    5fb8:	17 06       	cpc	r1, r23
    5fba:	18 06       	cpc	r1, r24
    5fbc:	09 06       	cpc	r0, r25
    5fbe:	08 95       	ret

00005fc0 <__fp_pscB>:
    5fc0:	00 24       	eor	r0, r0
    5fc2:	0a 94       	dec	r0
    5fc4:	12 16       	cp	r1, r18
    5fc6:	13 06       	cpc	r1, r19
    5fc8:	14 06       	cpc	r1, r20
    5fca:	05 06       	cpc	r0, r21
    5fcc:	08 95       	ret
    5fce:	c9 cf       	rjmp	.-110    	; 0x5f62 <__fp_nan>

00005fd0 <__fp_rempio2>:
    5fd0:	50 d0       	rcall	.+160    	; 0x6072 <__fp_splitA>
    5fd2:	e8 f3       	brcs	.-6      	; 0x5fce <__fp_pscB+0xe>
    5fd4:	e8 94       	clt
    5fd6:	e0 e0       	ldi	r30, 0x00	; 0
    5fd8:	bb 27       	eor	r27, r27
    5fda:	9f 57       	subi	r25, 0x7F	; 127
    5fdc:	f0 f0       	brcs	.+60     	; 0x601a <__fp_rempio2+0x4a>
    5fde:	2a ed       	ldi	r18, 0xDA	; 218
    5fe0:	3f e0       	ldi	r19, 0x0F	; 15
    5fe2:	49 ec       	ldi	r20, 0xC9	; 201
    5fe4:	06 c0       	rjmp	.+12     	; 0x5ff2 <__fp_rempio2+0x22>
    5fe6:	ee 0f       	add	r30, r30
    5fe8:	bb 0f       	add	r27, r27
    5fea:	66 1f       	adc	r22, r22
    5fec:	77 1f       	adc	r23, r23
    5fee:	88 1f       	adc	r24, r24
    5ff0:	28 f0       	brcs	.+10     	; 0x5ffc <__fp_rempio2+0x2c>
    5ff2:	b2 3a       	cpi	r27, 0xA2	; 162
    5ff4:	62 07       	cpc	r22, r18
    5ff6:	73 07       	cpc	r23, r19
    5ff8:	84 07       	cpc	r24, r20
    5ffa:	28 f0       	brcs	.+10     	; 0x6006 <__fp_rempio2+0x36>
    5ffc:	b2 5a       	subi	r27, 0xA2	; 162
    5ffe:	62 0b       	sbc	r22, r18
    6000:	73 0b       	sbc	r23, r19
    6002:	84 0b       	sbc	r24, r20
    6004:	e3 95       	inc	r30
    6006:	9a 95       	dec	r25
    6008:	72 f7       	brpl	.-36     	; 0x5fe6 <__fp_rempio2+0x16>
    600a:	80 38       	cpi	r24, 0x80	; 128
    600c:	30 f4       	brcc	.+12     	; 0x601a <__fp_rempio2+0x4a>
    600e:	9a 95       	dec	r25
    6010:	bb 0f       	add	r27, r27
    6012:	66 1f       	adc	r22, r22
    6014:	77 1f       	adc	r23, r23
    6016:	88 1f       	adc	r24, r24
    6018:	d2 f7       	brpl	.-12     	; 0x600e <__fp_rempio2+0x3e>
    601a:	90 48       	sbci	r25, 0x80	; 128
    601c:	29 c1       	rjmp	.+594    	; 0x6270 <__fp_mpack_finite>

0000601e <__fp_round>:
    601e:	09 2e       	mov	r0, r25
    6020:	03 94       	inc	r0
    6022:	00 0c       	add	r0, r0
    6024:	11 f4       	brne	.+4      	; 0x602a <__fp_round+0xc>
    6026:	88 23       	and	r24, r24
    6028:	52 f0       	brmi	.+20     	; 0x603e <__fp_round+0x20>
    602a:	bb 0f       	add	r27, r27
    602c:	40 f4       	brcc	.+16     	; 0x603e <__fp_round+0x20>
    602e:	bf 2b       	or	r27, r31
    6030:	11 f4       	brne	.+4      	; 0x6036 <__fp_round+0x18>
    6032:	60 ff       	sbrs	r22, 0
    6034:	04 c0       	rjmp	.+8      	; 0x603e <__fp_round+0x20>
    6036:	6f 5f       	subi	r22, 0xFF	; 255
    6038:	7f 4f       	sbci	r23, 0xFF	; 255
    603a:	8f 4f       	sbci	r24, 0xFF	; 255
    603c:	9f 4f       	sbci	r25, 0xFF	; 255
    603e:	08 95       	ret

00006040 <__fp_sinus>:
    6040:	ef 93       	push	r30
    6042:	e0 ff       	sbrs	r30, 0
    6044:	06 c0       	rjmp	.+12     	; 0x6052 <__fp_sinus+0x12>
    6046:	a2 ea       	ldi	r26, 0xA2	; 162
    6048:	2a ed       	ldi	r18, 0xDA	; 218
    604a:	3f e0       	ldi	r19, 0x0F	; 15
    604c:	49 ec       	ldi	r20, 0xC9	; 201
    604e:	5f eb       	ldi	r21, 0xBF	; 191
    6050:	cc dd       	rcall	.-1128   	; 0x5bea <__addsf3x>
    6052:	e5 df       	rcall	.-54     	; 0x601e <__fp_round>
    6054:	0f 90       	pop	r0
    6056:	03 94       	inc	r0
    6058:	01 fc       	sbrc	r0, 1
    605a:	90 58       	subi	r25, 0x80	; 128
    605c:	eb ee       	ldi	r30, 0xEB	; 235
    605e:	f0 e0       	ldi	r31, 0x00	; 0
    6060:	13 c1       	rjmp	.+550    	; 0x6288 <__fp_powsodd>

00006062 <__fp_split3>:
    6062:	57 fd       	sbrc	r21, 7
    6064:	90 58       	subi	r25, 0x80	; 128
    6066:	44 0f       	add	r20, r20
    6068:	55 1f       	adc	r21, r21
    606a:	59 f0       	breq	.+22     	; 0x6082 <__fp_splitA+0x10>
    606c:	5f 3f       	cpi	r21, 0xFF	; 255
    606e:	71 f0       	breq	.+28     	; 0x608c <__fp_splitA+0x1a>
    6070:	47 95       	ror	r20

00006072 <__fp_splitA>:
    6072:	88 0f       	add	r24, r24
    6074:	97 fb       	bst	r25, 7
    6076:	99 1f       	adc	r25, r25
    6078:	61 f0       	breq	.+24     	; 0x6092 <__fp_splitA+0x20>
    607a:	9f 3f       	cpi	r25, 0xFF	; 255
    607c:	79 f0       	breq	.+30     	; 0x609c <__fp_splitA+0x2a>
    607e:	87 95       	ror	r24
    6080:	08 95       	ret
    6082:	12 16       	cp	r1, r18
    6084:	13 06       	cpc	r1, r19
    6086:	14 06       	cpc	r1, r20
    6088:	55 1f       	adc	r21, r21
    608a:	f2 cf       	rjmp	.-28     	; 0x6070 <__fp_split3+0xe>
    608c:	46 95       	lsr	r20
    608e:	f1 df       	rcall	.-30     	; 0x6072 <__fp_splitA>
    6090:	08 c0       	rjmp	.+16     	; 0x60a2 <__fp_splitA+0x30>
    6092:	16 16       	cp	r1, r22
    6094:	17 06       	cpc	r1, r23
    6096:	18 06       	cpc	r1, r24
    6098:	99 1f       	adc	r25, r25
    609a:	f1 cf       	rjmp	.-30     	; 0x607e <__fp_splitA+0xc>
    609c:	86 95       	lsr	r24
    609e:	71 05       	cpc	r23, r1
    60a0:	61 05       	cpc	r22, r1
    60a2:	08 94       	sec
    60a4:	08 95       	ret

000060a6 <__fp_zero>:
    60a6:	e8 94       	clt

000060a8 <__fp_szero>:
    60a8:	bb 27       	eor	r27, r27
    60aa:	66 27       	eor	r22, r22
    60ac:	77 27       	eor	r23, r23
    60ae:	cb 01       	movw	r24, r22
    60b0:	97 f9       	bld	r25, 7
    60b2:	08 95       	ret

000060b4 <__gesf2>:
    60b4:	2c df       	rcall	.-424    	; 0x5f0e <__fp_cmp>
    60b6:	08 f4       	brcc	.+2      	; 0x60ba <__gesf2+0x6>
    60b8:	8f ef       	ldi	r24, 0xFF	; 255
    60ba:	08 95       	ret

000060bc <inverse>:
    60bc:	9b 01       	movw	r18, r22
    60be:	ac 01       	movw	r20, r24
    60c0:	60 e0       	ldi	r22, 0x00	; 0
    60c2:	70 e0       	ldi	r23, 0x00	; 0
    60c4:	80 e8       	ldi	r24, 0x80	; 128
    60c6:	9f e3       	ldi	r25, 0x3F	; 63
    60c8:	4c ce       	rjmp	.-872    	; 0x5d62 <__divsf3>
    60ca:	0e f0       	brts	.+2      	; 0x60ce <inverse+0x12>
    60cc:	cf c0       	rjmp	.+414    	; 0x626c <__fp_mpack>
    60ce:	49 cf       	rjmp	.-366    	; 0x5f62 <__fp_nan>
    60d0:	68 94       	set
    60d2:	41 cf       	rjmp	.-382    	; 0x5f56 <__fp_inf>

000060d4 <log>:
    60d4:	ce df       	rcall	.-100    	; 0x6072 <__fp_splitA>
    60d6:	c8 f3       	brcs	.-14     	; 0x60ca <inverse+0xe>
    60d8:	99 23       	and	r25, r25
    60da:	d1 f3       	breq	.-12     	; 0x60d0 <inverse+0x14>
    60dc:	c6 f3       	brts	.-16     	; 0x60ce <inverse+0x12>
    60de:	df 93       	push	r29
    60e0:	cf 93       	push	r28
    60e2:	1f 93       	push	r17
    60e4:	0f 93       	push	r16
    60e6:	ff 92       	push	r15
    60e8:	c9 2f       	mov	r28, r25
    60ea:	dd 27       	eor	r29, r29
    60ec:	88 23       	and	r24, r24
    60ee:	2a f0       	brmi	.+10     	; 0x60fa <log+0x26>
    60f0:	21 97       	sbiw	r28, 0x01	; 1
    60f2:	66 0f       	add	r22, r22
    60f4:	77 1f       	adc	r23, r23
    60f6:	88 1f       	adc	r24, r24
    60f8:	da f7       	brpl	.-10     	; 0x60f0 <log+0x1c>
    60fa:	20 e0       	ldi	r18, 0x00	; 0
    60fc:	30 e0       	ldi	r19, 0x00	; 0
    60fe:	40 e8       	ldi	r20, 0x80	; 128
    6100:	5f eb       	ldi	r21, 0xBF	; 191
    6102:	9f e3       	ldi	r25, 0x3F	; 63
    6104:	88 39       	cpi	r24, 0x98	; 152
    6106:	20 f0       	brcs	.+8      	; 0x6110 <log+0x3c>
    6108:	80 3e       	cpi	r24, 0xE0	; 224
    610a:	30 f0       	brcs	.+12     	; 0x6118 <log+0x44>
    610c:	21 96       	adiw	r28, 0x01	; 1
    610e:	8f 77       	andi	r24, 0x7F	; 127
    6110:	5b dd       	rcall	.-1354   	; 0x5bc8 <__addsf3>
    6112:	e9 e0       	ldi	r30, 0x09	; 9
    6114:	f1 e0       	ldi	r31, 0x01	; 1
    6116:	03 c0       	rjmp	.+6      	; 0x611e <log+0x4a>
    6118:	57 dd       	rcall	.-1362   	; 0x5bc8 <__addsf3>
    611a:	e6 e3       	ldi	r30, 0x36	; 54
    611c:	f1 e0       	ldi	r31, 0x01	; 1
    611e:	24 df       	rcall	.-440    	; 0x5f68 <__fp_powser>
    6120:	8b 01       	movw	r16, r22
    6122:	be 01       	movw	r22, r28
    6124:	ec 01       	movw	r28, r24
    6126:	fb 2e       	mov	r15, r27
    6128:	6f 57       	subi	r22, 0x7F	; 127
    612a:	71 09       	sbc	r23, r1
    612c:	75 95       	asr	r23
    612e:	77 1f       	adc	r23, r23
    6130:	88 0b       	sbc	r24, r24
    6132:	99 0b       	sbc	r25, r25
    6134:	b1 de       	rcall	.-670    	; 0x5e98 <__floatsisf>
    6136:	28 e1       	ldi	r18, 0x18	; 24
    6138:	32 e7       	ldi	r19, 0x72	; 114
    613a:	41 e3       	ldi	r20, 0x31	; 49
    613c:	5f e3       	ldi	r21, 0x3F	; 63
    613e:	16 d0       	rcall	.+44     	; 0x616c <__mulsf3x>
    6140:	af 2d       	mov	r26, r15
    6142:	98 01       	movw	r18, r16
    6144:	ae 01       	movw	r20, r28
    6146:	ff 90       	pop	r15
    6148:	0f 91       	pop	r16
    614a:	1f 91       	pop	r17
    614c:	cf 91       	pop	r28
    614e:	df 91       	pop	r29
    6150:	4c dd       	rcall	.-1384   	; 0x5bea <__addsf3x>
    6152:	65 cf       	rjmp	.-310    	; 0x601e <__fp_round>

00006154 <__mulsf3>:
    6154:	0b d0       	rcall	.+22     	; 0x616c <__mulsf3x>
    6156:	63 cf       	rjmp	.-314    	; 0x601e <__fp_round>
    6158:	2c df       	rcall	.-424    	; 0x5fb2 <__fp_pscA>
    615a:	28 f0       	brcs	.+10     	; 0x6166 <__mulsf3+0x12>
    615c:	31 df       	rcall	.-414    	; 0x5fc0 <__fp_pscB>
    615e:	18 f0       	brcs	.+6      	; 0x6166 <__mulsf3+0x12>
    6160:	95 23       	and	r25, r21
    6162:	09 f0       	breq	.+2      	; 0x6166 <__mulsf3+0x12>
    6164:	f8 ce       	rjmp	.-528    	; 0x5f56 <__fp_inf>
    6166:	fd ce       	rjmp	.-518    	; 0x5f62 <__fp_nan>
    6168:	11 24       	eor	r1, r1
    616a:	9e cf       	rjmp	.-196    	; 0x60a8 <__fp_szero>

0000616c <__mulsf3x>:
    616c:	7a df       	rcall	.-268    	; 0x6062 <__fp_split3>
    616e:	a0 f3       	brcs	.-24     	; 0x6158 <__mulsf3+0x4>

00006170 <__mulsf3_pse>:
    6170:	95 9f       	mul	r25, r21
    6172:	d1 f3       	breq	.-12     	; 0x6168 <__mulsf3+0x14>
    6174:	95 0f       	add	r25, r21
    6176:	50 e0       	ldi	r21, 0x00	; 0
    6178:	55 1f       	adc	r21, r21
    617a:	62 9f       	mul	r22, r18
    617c:	f0 01       	movw	r30, r0
    617e:	72 9f       	mul	r23, r18
    6180:	bb 27       	eor	r27, r27
    6182:	f0 0d       	add	r31, r0
    6184:	b1 1d       	adc	r27, r1
    6186:	63 9f       	mul	r22, r19
    6188:	aa 27       	eor	r26, r26
    618a:	f0 0d       	add	r31, r0
    618c:	b1 1d       	adc	r27, r1
    618e:	aa 1f       	adc	r26, r26
    6190:	64 9f       	mul	r22, r20
    6192:	66 27       	eor	r22, r22
    6194:	b0 0d       	add	r27, r0
    6196:	a1 1d       	adc	r26, r1
    6198:	66 1f       	adc	r22, r22
    619a:	82 9f       	mul	r24, r18
    619c:	22 27       	eor	r18, r18
    619e:	b0 0d       	add	r27, r0
    61a0:	a1 1d       	adc	r26, r1
    61a2:	62 1f       	adc	r22, r18
    61a4:	73 9f       	mul	r23, r19
    61a6:	b0 0d       	add	r27, r0
    61a8:	a1 1d       	adc	r26, r1
    61aa:	62 1f       	adc	r22, r18
    61ac:	83 9f       	mul	r24, r19
    61ae:	a0 0d       	add	r26, r0
    61b0:	61 1d       	adc	r22, r1
    61b2:	22 1f       	adc	r18, r18
    61b4:	74 9f       	mul	r23, r20
    61b6:	33 27       	eor	r19, r19
    61b8:	a0 0d       	add	r26, r0
    61ba:	61 1d       	adc	r22, r1
    61bc:	23 1f       	adc	r18, r19
    61be:	84 9f       	mul	r24, r20
    61c0:	60 0d       	add	r22, r0
    61c2:	21 1d       	adc	r18, r1
    61c4:	82 2f       	mov	r24, r18
    61c6:	76 2f       	mov	r23, r22
    61c8:	6a 2f       	mov	r22, r26
    61ca:	11 24       	eor	r1, r1
    61cc:	9f 57       	subi	r25, 0x7F	; 127
    61ce:	50 40       	sbci	r21, 0x00	; 0
    61d0:	8a f0       	brmi	.+34     	; 0x61f4 <__mulsf3_pse+0x84>
    61d2:	e1 f0       	breq	.+56     	; 0x620c <__mulsf3_pse+0x9c>
    61d4:	88 23       	and	r24, r24
    61d6:	4a f0       	brmi	.+18     	; 0x61ea <__mulsf3_pse+0x7a>
    61d8:	ee 0f       	add	r30, r30
    61da:	ff 1f       	adc	r31, r31
    61dc:	bb 1f       	adc	r27, r27
    61de:	66 1f       	adc	r22, r22
    61e0:	77 1f       	adc	r23, r23
    61e2:	88 1f       	adc	r24, r24
    61e4:	91 50       	subi	r25, 0x01	; 1
    61e6:	50 40       	sbci	r21, 0x00	; 0
    61e8:	a9 f7       	brne	.-22     	; 0x61d4 <__mulsf3_pse+0x64>
    61ea:	9e 3f       	cpi	r25, 0xFE	; 254
    61ec:	51 05       	cpc	r21, r1
    61ee:	70 f0       	brcs	.+28     	; 0x620c <__mulsf3_pse+0x9c>
    61f0:	b2 ce       	rjmp	.-668    	; 0x5f56 <__fp_inf>
    61f2:	5a cf       	rjmp	.-332    	; 0x60a8 <__fp_szero>
    61f4:	5f 3f       	cpi	r21, 0xFF	; 255
    61f6:	ec f3       	brlt	.-6      	; 0x61f2 <__mulsf3_pse+0x82>
    61f8:	98 3e       	cpi	r25, 0xE8	; 232
    61fa:	dc f3       	brlt	.-10     	; 0x61f2 <__mulsf3_pse+0x82>
    61fc:	86 95       	lsr	r24
    61fe:	77 95       	ror	r23
    6200:	67 95       	ror	r22
    6202:	b7 95       	ror	r27
    6204:	f7 95       	ror	r31
    6206:	e7 95       	ror	r30
    6208:	9f 5f       	subi	r25, 0xFF	; 255
    620a:	c1 f7       	brne	.-16     	; 0x61fc <__mulsf3_pse+0x8c>
    620c:	fe 2b       	or	r31, r30
    620e:	88 0f       	add	r24, r24
    6210:	91 1d       	adc	r25, r1
    6212:	96 95       	lsr	r25
    6214:	87 95       	ror	r24
    6216:	97 f9       	bld	r25, 7
    6218:	08 95       	ret

0000621a <sin>:
    621a:	9f 93       	push	r25
    621c:	d9 de       	rcall	.-590    	; 0x5fd0 <__fp_rempio2>
    621e:	0f 90       	pop	r0
    6220:	07 fc       	sbrc	r0, 7
    6222:	ee 5f       	subi	r30, 0xFE	; 254
    6224:	0d cf       	rjmp	.-486    	; 0x6040 <__fp_sinus>

00006226 <square>:
    6226:	9b 01       	movw	r18, r22
    6228:	ac 01       	movw	r20, r24
    622a:	94 cf       	rjmp	.-216    	; 0x6154 <__mulsf3>

0000622c <tan>:
    622c:	df 93       	push	r29
    622e:	d9 2f       	mov	r29, r25
    6230:	cf de       	rcall	.-610    	; 0x5fd0 <__fp_rempio2>
    6232:	e6 95       	lsr	r30
    6234:	d7 95       	ror	r29
    6236:	2a ed       	ldi	r18, 0xDA	; 218
    6238:	3f e0       	ldi	r19, 0x0F	; 15
    623a:	49 e4       	ldi	r20, 0x49	; 73
    623c:	5f e3       	ldi	r21, 0x3F	; 63
    623e:	b3 3a       	cpi	r27, 0xA3	; 163
    6240:	62 07       	cpc	r22, r18
    6242:	73 07       	cpc	r23, r19
    6244:	84 07       	cpc	r24, r20
    6246:	95 07       	cpc	r25, r21
    6248:	d7 95       	ror	r29
    624a:	2a f0       	brmi	.+10     	; 0x6256 <tan+0x2a>
    624c:	a2 ea       	ldi	r26, 0xA2	; 162
    624e:	49 ec       	ldi	r20, 0xC9	; 201
    6250:	90 68       	ori	r25, 0x80	; 128
    6252:	cb dc       	rcall	.-1642   	; 0x5bea <__addsf3x>
    6254:	e4 de       	rcall	.-568    	; 0x601e <__fp_round>
    6256:	e3 e6       	ldi	r30, 0x63	; 99
    6258:	f1 e0       	ldi	r31, 0x01	; 1
    625a:	16 d0       	rcall	.+44     	; 0x6288 <__fp_powsodd>
    625c:	dd 0f       	add	r29, r29
    625e:	0b f0       	brvs	.+2      	; 0x6262 <tan+0x36>
    6260:	2d df       	rcall	.-422    	; 0x60bc <inverse>
    6262:	dd 0f       	add	r29, r29
    6264:	0b f4       	brvc	.+2      	; 0x6268 <tan+0x3c>
    6266:	90 58       	subi	r25, 0x80	; 128
    6268:	df 91       	pop	r29
    626a:	08 95       	ret

0000626c <__fp_mpack>:
    626c:	9f 3f       	cpi	r25, 0xFF	; 255
    626e:	31 f0       	breq	.+12     	; 0x627c <__fp_mpack_finite+0xc>

00006270 <__fp_mpack_finite>:
    6270:	91 50       	subi	r25, 0x01	; 1
    6272:	20 f4       	brcc	.+8      	; 0x627c <__fp_mpack_finite+0xc>
    6274:	87 95       	ror	r24
    6276:	77 95       	ror	r23
    6278:	67 95       	ror	r22
    627a:	b7 95       	ror	r27
    627c:	88 0f       	add	r24, r24
    627e:	91 1d       	adc	r25, r1
    6280:	96 95       	lsr	r25
    6282:	87 95       	ror	r24
    6284:	97 f9       	bld	r25, 7
    6286:	08 95       	ret

00006288 <__fp_powsodd>:
    6288:	9f 93       	push	r25
    628a:	8f 93       	push	r24
    628c:	7f 93       	push	r23
    628e:	6f 93       	push	r22
    6290:	ff 93       	push	r31
    6292:	ef 93       	push	r30
    6294:	9b 01       	movw	r18, r22
    6296:	ac 01       	movw	r20, r24
    6298:	5d df       	rcall	.-326    	; 0x6154 <__mulsf3>
    629a:	ef 91       	pop	r30
    629c:	ff 91       	pop	r31
    629e:	64 de       	rcall	.-824    	; 0x5f68 <__fp_powser>
    62a0:	2f 91       	pop	r18
    62a2:	3f 91       	pop	r19
    62a4:	4f 91       	pop	r20
    62a6:	5f 91       	pop	r21
    62a8:	55 cf       	rjmp	.-342    	; 0x6154 <__mulsf3>

000062aa <vfprintf>:
    62aa:	2f 92       	push	r2
    62ac:	3f 92       	push	r3
    62ae:	4f 92       	push	r4
    62b0:	5f 92       	push	r5
    62b2:	6f 92       	push	r6
    62b4:	7f 92       	push	r7
    62b6:	8f 92       	push	r8
    62b8:	9f 92       	push	r9
    62ba:	af 92       	push	r10
    62bc:	bf 92       	push	r11
    62be:	cf 92       	push	r12
    62c0:	df 92       	push	r13
    62c2:	ef 92       	push	r14
    62c4:	ff 92       	push	r15
    62c6:	0f 93       	push	r16
    62c8:	1f 93       	push	r17
    62ca:	cf 93       	push	r28
    62cc:	df 93       	push	r29
    62ce:	cd b7       	in	r28, 0x3d	; 61
    62d0:	de b7       	in	r29, 0x3e	; 62
    62d2:	63 97       	sbiw	r28, 0x13	; 19
    62d4:	0f b6       	in	r0, 0x3f	; 63
    62d6:	f8 94       	cli
    62d8:	de bf       	out	0x3e, r29	; 62
    62da:	0f be       	out	0x3f, r0	; 63
    62dc:	cd bf       	out	0x3d, r28	; 61
    62de:	7c 01       	movw	r14, r24
    62e0:	1b 01       	movw	r2, r22
    62e2:	6a 01       	movw	r12, r20
    62e4:	fc 01       	movw	r30, r24
    62e6:	17 82       	std	Z+7, r1	; 0x07
    62e8:	16 82       	std	Z+6, r1	; 0x06
    62ea:	83 81       	ldd	r24, Z+3	; 0x03
    62ec:	81 ff       	sbrs	r24, 1
    62ee:	49 c3       	rjmp	.+1682   	; 0x6982 <vfprintf+0x6d8>
    62f0:	be 01       	movw	r22, r28
    62f2:	6f 5f       	subi	r22, 0xFF	; 255
    62f4:	7f 4f       	sbci	r23, 0xFF	; 255
    62f6:	4b 01       	movw	r8, r22
    62f8:	f7 01       	movw	r30, r14
    62fa:	93 81       	ldd	r25, Z+3	; 0x03
    62fc:	f1 01       	movw	r30, r2
    62fe:	93 fd       	sbrc	r25, 3
    6300:	85 91       	lpm	r24, Z+
    6302:	93 ff       	sbrs	r25, 3
    6304:	81 91       	ld	r24, Z+
    6306:	1f 01       	movw	r2, r30
    6308:	88 23       	and	r24, r24
    630a:	09 f4       	brne	.+2      	; 0x630e <vfprintf+0x64>
    630c:	36 c3       	rjmp	.+1644   	; 0x697a <vfprintf+0x6d0>
    630e:	85 32       	cpi	r24, 0x25	; 37
    6310:	39 f4       	brne	.+14     	; 0x6320 <vfprintf+0x76>
    6312:	93 fd       	sbrc	r25, 3
    6314:	85 91       	lpm	r24, Z+
    6316:	93 ff       	sbrs	r25, 3
    6318:	81 91       	ld	r24, Z+
    631a:	1f 01       	movw	r2, r30
    631c:	85 32       	cpi	r24, 0x25	; 37
    631e:	31 f4       	brne	.+12     	; 0x632c <vfprintf+0x82>
    6320:	b7 01       	movw	r22, r14
    6322:	90 e0       	ldi	r25, 0x00	; 0
    6324:	77 d4       	rcall	.+2286   	; 0x6c14 <fputc>
    6326:	56 01       	movw	r10, r12
    6328:	65 01       	movw	r12, r10
    632a:	e6 cf       	rjmp	.-52     	; 0x62f8 <vfprintf+0x4e>
    632c:	10 e0       	ldi	r17, 0x00	; 0
    632e:	51 2c       	mov	r5, r1
    6330:	20 e0       	ldi	r18, 0x00	; 0
    6332:	20 32       	cpi	r18, 0x20	; 32
    6334:	a0 f4       	brcc	.+40     	; 0x635e <vfprintf+0xb4>
    6336:	8b 32       	cpi	r24, 0x2B	; 43
    6338:	69 f0       	breq	.+26     	; 0x6354 <vfprintf+0xaa>
    633a:	30 f4       	brcc	.+12     	; 0x6348 <vfprintf+0x9e>
    633c:	80 32       	cpi	r24, 0x20	; 32
    633e:	59 f0       	breq	.+22     	; 0x6356 <vfprintf+0xac>
    6340:	83 32       	cpi	r24, 0x23	; 35
    6342:	69 f4       	brne	.+26     	; 0x635e <vfprintf+0xb4>
    6344:	20 61       	ori	r18, 0x10	; 16
    6346:	2c c0       	rjmp	.+88     	; 0x63a0 <vfprintf+0xf6>
    6348:	8d 32       	cpi	r24, 0x2D	; 45
    634a:	39 f0       	breq	.+14     	; 0x635a <vfprintf+0xb0>
    634c:	80 33       	cpi	r24, 0x30	; 48
    634e:	39 f4       	brne	.+14     	; 0x635e <vfprintf+0xb4>
    6350:	21 60       	ori	r18, 0x01	; 1
    6352:	26 c0       	rjmp	.+76     	; 0x63a0 <vfprintf+0xf6>
    6354:	22 60       	ori	r18, 0x02	; 2
    6356:	24 60       	ori	r18, 0x04	; 4
    6358:	23 c0       	rjmp	.+70     	; 0x63a0 <vfprintf+0xf6>
    635a:	28 60       	ori	r18, 0x08	; 8
    635c:	21 c0       	rjmp	.+66     	; 0x63a0 <vfprintf+0xf6>
    635e:	27 fd       	sbrc	r18, 7
    6360:	27 c0       	rjmp	.+78     	; 0x63b0 <vfprintf+0x106>
    6362:	30 ed       	ldi	r19, 0xD0	; 208
    6364:	38 0f       	add	r19, r24
    6366:	3a 30       	cpi	r19, 0x0A	; 10
    6368:	78 f4       	brcc	.+30     	; 0x6388 <vfprintf+0xde>
    636a:	26 ff       	sbrs	r18, 6
    636c:	06 c0       	rjmp	.+12     	; 0x637a <vfprintf+0xd0>
    636e:	fa e0       	ldi	r31, 0x0A	; 10
    6370:	1f 9f       	mul	r17, r31
    6372:	30 0d       	add	r19, r0
    6374:	11 24       	eor	r1, r1
    6376:	13 2f       	mov	r17, r19
    6378:	13 c0       	rjmp	.+38     	; 0x63a0 <vfprintf+0xf6>
    637a:	6a e0       	ldi	r22, 0x0A	; 10
    637c:	56 9e       	mul	r5, r22
    637e:	30 0d       	add	r19, r0
    6380:	11 24       	eor	r1, r1
    6382:	53 2e       	mov	r5, r19
    6384:	20 62       	ori	r18, 0x20	; 32
    6386:	0c c0       	rjmp	.+24     	; 0x63a0 <vfprintf+0xf6>
    6388:	8e 32       	cpi	r24, 0x2E	; 46
    638a:	21 f4       	brne	.+8      	; 0x6394 <vfprintf+0xea>
    638c:	26 fd       	sbrc	r18, 6
    638e:	f5 c2       	rjmp	.+1514   	; 0x697a <vfprintf+0x6d0>
    6390:	20 64       	ori	r18, 0x40	; 64
    6392:	06 c0       	rjmp	.+12     	; 0x63a0 <vfprintf+0xf6>
    6394:	8c 36       	cpi	r24, 0x6C	; 108
    6396:	11 f4       	brne	.+4      	; 0x639c <vfprintf+0xf2>
    6398:	20 68       	ori	r18, 0x80	; 128
    639a:	02 c0       	rjmp	.+4      	; 0x63a0 <vfprintf+0xf6>
    639c:	88 36       	cpi	r24, 0x68	; 104
    639e:	41 f4       	brne	.+16     	; 0x63b0 <vfprintf+0x106>
    63a0:	f1 01       	movw	r30, r2
    63a2:	93 fd       	sbrc	r25, 3
    63a4:	85 91       	lpm	r24, Z+
    63a6:	93 ff       	sbrs	r25, 3
    63a8:	81 91       	ld	r24, Z+
    63aa:	1f 01       	movw	r2, r30
    63ac:	81 11       	cpse	r24, r1
    63ae:	c1 cf       	rjmp	.-126    	; 0x6332 <vfprintf+0x88>
    63b0:	9b eb       	ldi	r25, 0xBB	; 187
    63b2:	98 0f       	add	r25, r24
    63b4:	93 30       	cpi	r25, 0x03	; 3
    63b6:	18 f4       	brcc	.+6      	; 0x63be <vfprintf+0x114>
    63b8:	20 61       	ori	r18, 0x10	; 16
    63ba:	80 5e       	subi	r24, 0xE0	; 224
    63bc:	06 c0       	rjmp	.+12     	; 0x63ca <vfprintf+0x120>
    63be:	9b e9       	ldi	r25, 0x9B	; 155
    63c0:	98 0f       	add	r25, r24
    63c2:	93 30       	cpi	r25, 0x03	; 3
    63c4:	08 f0       	brcs	.+2      	; 0x63c8 <vfprintf+0x11e>
    63c6:	9a c1       	rjmp	.+820    	; 0x66fc <vfprintf+0x452>
    63c8:	2f 7e       	andi	r18, 0xEF	; 239
    63ca:	26 ff       	sbrs	r18, 6
    63cc:	16 e0       	ldi	r17, 0x06	; 6
    63ce:	2f 73       	andi	r18, 0x3F	; 63
    63d0:	72 2e       	mov	r7, r18
    63d2:	85 36       	cpi	r24, 0x65	; 101
    63d4:	21 f4       	brne	.+8      	; 0x63de <vfprintf+0x134>
    63d6:	f2 2f       	mov	r31, r18
    63d8:	f0 64       	ori	r31, 0x40	; 64
    63da:	7f 2e       	mov	r7, r31
    63dc:	08 c0       	rjmp	.+16     	; 0x63ee <vfprintf+0x144>
    63de:	86 36       	cpi	r24, 0x66	; 102
    63e0:	21 f4       	brne	.+8      	; 0x63ea <vfprintf+0x140>
    63e2:	62 2f       	mov	r22, r18
    63e4:	60 68       	ori	r22, 0x80	; 128
    63e6:	76 2e       	mov	r7, r22
    63e8:	02 c0       	rjmp	.+4      	; 0x63ee <vfprintf+0x144>
    63ea:	11 11       	cpse	r17, r1
    63ec:	11 50       	subi	r17, 0x01	; 1
    63ee:	77 fe       	sbrs	r7, 7
    63f0:	07 c0       	rjmp	.+14     	; 0x6400 <vfprintf+0x156>
    63f2:	1c 33       	cpi	r17, 0x3C	; 60
    63f4:	48 f4       	brcc	.+18     	; 0x6408 <vfprintf+0x15e>
    63f6:	44 24       	eor	r4, r4
    63f8:	43 94       	inc	r4
    63fa:	41 0e       	add	r4, r17
    63fc:	27 e0       	ldi	r18, 0x07	; 7
    63fe:	0b c0       	rjmp	.+22     	; 0x6416 <vfprintf+0x16c>
    6400:	18 30       	cpi	r17, 0x08	; 8
    6402:	30 f4       	brcc	.+12     	; 0x6410 <vfprintf+0x166>
    6404:	21 2f       	mov	r18, r17
    6406:	06 c0       	rjmp	.+12     	; 0x6414 <vfprintf+0x16a>
    6408:	27 e0       	ldi	r18, 0x07	; 7
    640a:	4c e3       	ldi	r20, 0x3C	; 60
    640c:	44 2e       	mov	r4, r20
    640e:	03 c0       	rjmp	.+6      	; 0x6416 <vfprintf+0x16c>
    6410:	27 e0       	ldi	r18, 0x07	; 7
    6412:	17 e0       	ldi	r17, 0x07	; 7
    6414:	41 2c       	mov	r4, r1
    6416:	56 01       	movw	r10, r12
    6418:	74 e0       	ldi	r23, 0x04	; 4
    641a:	a7 0e       	add	r10, r23
    641c:	b1 1c       	adc	r11, r1
    641e:	f6 01       	movw	r30, r12
    6420:	60 81       	ld	r22, Z
    6422:	71 81       	ldd	r23, Z+1	; 0x01
    6424:	82 81       	ldd	r24, Z+2	; 0x02
    6426:	93 81       	ldd	r25, Z+3	; 0x03
    6428:	04 2d       	mov	r16, r4
    642a:	a4 01       	movw	r20, r8
    642c:	05 d3       	rcall	.+1546   	; 0x6a38 <__ftoa_engine>
    642e:	6c 01       	movw	r12, r24
    6430:	09 81       	ldd	r16, Y+1	; 0x01
    6432:	00 ff       	sbrs	r16, 0
    6434:	02 c0       	rjmp	.+4      	; 0x643a <vfprintf+0x190>
    6436:	03 ff       	sbrs	r16, 3
    6438:	06 c0       	rjmp	.+12     	; 0x6446 <vfprintf+0x19c>
    643a:	71 fc       	sbrc	r7, 1
    643c:	07 c0       	rjmp	.+14     	; 0x644c <vfprintf+0x1a2>
    643e:	72 fc       	sbrc	r7, 2
    6440:	08 c0       	rjmp	.+16     	; 0x6452 <vfprintf+0x1a8>
    6442:	61 2c       	mov	r6, r1
    6444:	08 c0       	rjmp	.+16     	; 0x6456 <vfprintf+0x1ac>
    6446:	3d e2       	ldi	r19, 0x2D	; 45
    6448:	63 2e       	mov	r6, r19
    644a:	05 c0       	rjmp	.+10     	; 0x6456 <vfprintf+0x1ac>
    644c:	2b e2       	ldi	r18, 0x2B	; 43
    644e:	62 2e       	mov	r6, r18
    6450:	02 c0       	rjmp	.+4      	; 0x6456 <vfprintf+0x1ac>
    6452:	90 e2       	ldi	r25, 0x20	; 32
    6454:	69 2e       	mov	r6, r25
    6456:	80 2f       	mov	r24, r16
    6458:	8c 70       	andi	r24, 0x0C	; 12
    645a:	81 f1       	breq	.+96     	; 0x64bc <vfprintf+0x212>
    645c:	66 20       	and	r6, r6
    645e:	11 f0       	breq	.+4      	; 0x6464 <vfprintf+0x1ba>
    6460:	84 e0       	ldi	r24, 0x04	; 4
    6462:	01 c0       	rjmp	.+2      	; 0x6466 <vfprintf+0x1bc>
    6464:	83 e0       	ldi	r24, 0x03	; 3
    6466:	85 15       	cp	r24, r5
    6468:	10 f0       	brcs	.+4      	; 0x646e <vfprintf+0x1c4>
    646a:	51 2c       	mov	r5, r1
    646c:	0a c0       	rjmp	.+20     	; 0x6482 <vfprintf+0x1d8>
    646e:	58 1a       	sub	r5, r24
    6470:	73 fc       	sbrc	r7, 3
    6472:	07 c0       	rjmp	.+14     	; 0x6482 <vfprintf+0x1d8>
    6474:	b7 01       	movw	r22, r14
    6476:	80 e2       	ldi	r24, 0x20	; 32
    6478:	90 e0       	ldi	r25, 0x00	; 0
    647a:	cc d3       	rcall	.+1944   	; 0x6c14 <fputc>
    647c:	5a 94       	dec	r5
    647e:	d1 f7       	brne	.-12     	; 0x6474 <vfprintf+0x1ca>
    6480:	f4 cf       	rjmp	.-24     	; 0x646a <vfprintf+0x1c0>
    6482:	66 20       	and	r6, r6
    6484:	21 f0       	breq	.+8      	; 0x648e <vfprintf+0x1e4>
    6486:	b7 01       	movw	r22, r14
    6488:	86 2d       	mov	r24, r6
    648a:	90 e0       	ldi	r25, 0x00	; 0
    648c:	c3 d3       	rcall	.+1926   	; 0x6c14 <fputc>
    648e:	03 fd       	sbrc	r16, 3
    6490:	03 c0       	rjmp	.+6      	; 0x6498 <vfprintf+0x1ee>
    6492:	00 ea       	ldi	r16, 0xA0	; 160
    6494:	14 e0       	ldi	r17, 0x04	; 4
    6496:	02 c0       	rjmp	.+4      	; 0x649c <vfprintf+0x1f2>
    6498:	0c e9       	ldi	r16, 0x9C	; 156
    649a:	14 e0       	ldi	r17, 0x04	; 4
    649c:	f7 2d       	mov	r31, r7
    649e:	f0 71       	andi	r31, 0x10	; 16
    64a0:	7f 2e       	mov	r7, r31
    64a2:	f8 01       	movw	r30, r16
    64a4:	84 91       	lpm	r24, Z
    64a6:	88 23       	and	r24, r24
    64a8:	09 f4       	brne	.+2      	; 0x64ac <vfprintf+0x202>
    64aa:	5e c2       	rjmp	.+1212   	; 0x6968 <vfprintf+0x6be>
    64ac:	71 10       	cpse	r7, r1
    64ae:	80 52       	subi	r24, 0x20	; 32
    64b0:	b7 01       	movw	r22, r14
    64b2:	90 e0       	ldi	r25, 0x00	; 0
    64b4:	af d3       	rcall	.+1886   	; 0x6c14 <fputc>
    64b6:	0f 5f       	subi	r16, 0xFF	; 255
    64b8:	1f 4f       	sbci	r17, 0xFF	; 255
    64ba:	f3 cf       	rjmp	.-26     	; 0x64a2 <vfprintf+0x1f8>
    64bc:	77 fe       	sbrs	r7, 7
    64be:	0f c0       	rjmp	.+30     	; 0x64de <vfprintf+0x234>
    64c0:	4c 0c       	add	r4, r12
    64c2:	04 ff       	sbrs	r16, 4
    64c4:	04 c0       	rjmp	.+8      	; 0x64ce <vfprintf+0x224>
    64c6:	8a 81       	ldd	r24, Y+2	; 0x02
    64c8:	81 33       	cpi	r24, 0x31	; 49
    64ca:	09 f4       	brne	.+2      	; 0x64ce <vfprintf+0x224>
    64cc:	4a 94       	dec	r4
    64ce:	14 14       	cp	r1, r4
    64d0:	74 f5       	brge	.+92     	; 0x652e <vfprintf+0x284>
    64d2:	f8 e0       	ldi	r31, 0x08	; 8
    64d4:	f4 15       	cp	r31, r4
    64d6:	78 f5       	brcc	.+94     	; 0x6536 <vfprintf+0x28c>
    64d8:	88 e0       	ldi	r24, 0x08	; 8
    64da:	48 2e       	mov	r4, r24
    64dc:	2c c0       	rjmp	.+88     	; 0x6536 <vfprintf+0x28c>
    64de:	76 fc       	sbrc	r7, 6
    64e0:	2a c0       	rjmp	.+84     	; 0x6536 <vfprintf+0x28c>
    64e2:	81 2f       	mov	r24, r17
    64e4:	90 e0       	ldi	r25, 0x00	; 0
    64e6:	8c 15       	cp	r24, r12
    64e8:	9d 05       	cpc	r25, r13
    64ea:	9c f0       	brlt	.+38     	; 0x6512 <vfprintf+0x268>
    64ec:	6c ef       	ldi	r22, 0xFC	; 252
    64ee:	c6 16       	cp	r12, r22
    64f0:	6f ef       	ldi	r22, 0xFF	; 255
    64f2:	d6 06       	cpc	r13, r22
    64f4:	74 f0       	brlt	.+28     	; 0x6512 <vfprintf+0x268>
    64f6:	77 2d       	mov	r23, r7
    64f8:	70 68       	ori	r23, 0x80	; 128
    64fa:	77 2e       	mov	r7, r23
    64fc:	0a c0       	rjmp	.+20     	; 0x6512 <vfprintf+0x268>
    64fe:	e2 e0       	ldi	r30, 0x02	; 2
    6500:	f0 e0       	ldi	r31, 0x00	; 0
    6502:	ec 0f       	add	r30, r28
    6504:	fd 1f       	adc	r31, r29
    6506:	e1 0f       	add	r30, r17
    6508:	f1 1d       	adc	r31, r1
    650a:	80 81       	ld	r24, Z
    650c:	80 33       	cpi	r24, 0x30	; 48
    650e:	19 f4       	brne	.+6      	; 0x6516 <vfprintf+0x26c>
    6510:	11 50       	subi	r17, 0x01	; 1
    6512:	11 11       	cpse	r17, r1
    6514:	f4 cf       	rjmp	.-24     	; 0x64fe <vfprintf+0x254>
    6516:	77 fe       	sbrs	r7, 7
    6518:	0e c0       	rjmp	.+28     	; 0x6536 <vfprintf+0x28c>
    651a:	44 24       	eor	r4, r4
    651c:	43 94       	inc	r4
    651e:	41 0e       	add	r4, r17
    6520:	81 2f       	mov	r24, r17
    6522:	90 e0       	ldi	r25, 0x00	; 0
    6524:	c8 16       	cp	r12, r24
    6526:	d9 06       	cpc	r13, r25
    6528:	2c f4       	brge	.+10     	; 0x6534 <vfprintf+0x28a>
    652a:	1c 19       	sub	r17, r12
    652c:	04 c0       	rjmp	.+8      	; 0x6536 <vfprintf+0x28c>
    652e:	44 24       	eor	r4, r4
    6530:	43 94       	inc	r4
    6532:	01 c0       	rjmp	.+2      	; 0x6536 <vfprintf+0x28c>
    6534:	10 e0       	ldi	r17, 0x00	; 0
    6536:	77 fe       	sbrs	r7, 7
    6538:	07 c0       	rjmp	.+14     	; 0x6548 <vfprintf+0x29e>
    653a:	1c 14       	cp	r1, r12
    653c:	1d 04       	cpc	r1, r13
    653e:	3c f4       	brge	.+14     	; 0x654e <vfprintf+0x2a4>
    6540:	96 01       	movw	r18, r12
    6542:	2f 5f       	subi	r18, 0xFF	; 255
    6544:	3f 4f       	sbci	r19, 0xFF	; 255
    6546:	05 c0       	rjmp	.+10     	; 0x6552 <vfprintf+0x2a8>
    6548:	25 e0       	ldi	r18, 0x05	; 5
    654a:	30 e0       	ldi	r19, 0x00	; 0
    654c:	02 c0       	rjmp	.+4      	; 0x6552 <vfprintf+0x2a8>
    654e:	21 e0       	ldi	r18, 0x01	; 1
    6550:	30 e0       	ldi	r19, 0x00	; 0
    6552:	66 20       	and	r6, r6
    6554:	11 f0       	breq	.+4      	; 0x655a <vfprintf+0x2b0>
    6556:	2f 5f       	subi	r18, 0xFF	; 255
    6558:	3f 4f       	sbci	r19, 0xFF	; 255
    655a:	11 23       	and	r17, r17
    655c:	31 f0       	breq	.+12     	; 0x656a <vfprintf+0x2c0>
    655e:	41 2f       	mov	r20, r17
    6560:	50 e0       	ldi	r21, 0x00	; 0
    6562:	4f 5f       	subi	r20, 0xFF	; 255
    6564:	5f 4f       	sbci	r21, 0xFF	; 255
    6566:	24 0f       	add	r18, r20
    6568:	35 1f       	adc	r19, r21
    656a:	45 2d       	mov	r20, r5
    656c:	50 e0       	ldi	r21, 0x00	; 0
    656e:	24 17       	cp	r18, r20
    6570:	35 07       	cpc	r19, r21
    6572:	14 f4       	brge	.+4      	; 0x6578 <vfprintf+0x2ce>
    6574:	52 1a       	sub	r5, r18
    6576:	01 c0       	rjmp	.+2      	; 0x657a <vfprintf+0x2d0>
    6578:	51 2c       	mov	r5, r1
    657a:	87 2d       	mov	r24, r7
    657c:	89 70       	andi	r24, 0x09	; 9
    657e:	41 f4       	brne	.+16     	; 0x6590 <vfprintf+0x2e6>
    6580:	55 20       	and	r5, r5
    6582:	31 f0       	breq	.+12     	; 0x6590 <vfprintf+0x2e6>
    6584:	b7 01       	movw	r22, r14
    6586:	80 e2       	ldi	r24, 0x20	; 32
    6588:	90 e0       	ldi	r25, 0x00	; 0
    658a:	44 d3       	rcall	.+1672   	; 0x6c14 <fputc>
    658c:	5a 94       	dec	r5
    658e:	f8 cf       	rjmp	.-16     	; 0x6580 <vfprintf+0x2d6>
    6590:	66 20       	and	r6, r6
    6592:	21 f0       	breq	.+8      	; 0x659c <vfprintf+0x2f2>
    6594:	b7 01       	movw	r22, r14
    6596:	86 2d       	mov	r24, r6
    6598:	90 e0       	ldi	r25, 0x00	; 0
    659a:	3c d3       	rcall	.+1656   	; 0x6c14 <fputc>
    659c:	73 fc       	sbrc	r7, 3
    659e:	08 c0       	rjmp	.+16     	; 0x65b0 <vfprintf+0x306>
    65a0:	55 20       	and	r5, r5
    65a2:	31 f0       	breq	.+12     	; 0x65b0 <vfprintf+0x306>
    65a4:	b7 01       	movw	r22, r14
    65a6:	80 e3       	ldi	r24, 0x30	; 48
    65a8:	90 e0       	ldi	r25, 0x00	; 0
    65aa:	34 d3       	rcall	.+1640   	; 0x6c14 <fputc>
    65ac:	5a 94       	dec	r5
    65ae:	f8 cf       	rjmp	.-16     	; 0x65a0 <vfprintf+0x2f6>
    65b0:	77 fe       	sbrs	r7, 7
    65b2:	5d c0       	rjmp	.+186    	; 0x666e <vfprintf+0x3c4>
    65b4:	9c 2d       	mov	r25, r12
    65b6:	8d 2d       	mov	r24, r13
    65b8:	d7 fe       	sbrs	r13, 7
    65ba:	02 c0       	rjmp	.+4      	; 0x65c0 <vfprintf+0x316>
    65bc:	90 e0       	ldi	r25, 0x00	; 0
    65be:	80 e0       	ldi	r24, 0x00	; 0
    65c0:	69 2e       	mov	r6, r25
    65c2:	78 2e       	mov	r7, r24
    65c4:	40 e0       	ldi	r20, 0x00	; 0
    65c6:	50 e0       	ldi	r21, 0x00	; 0
    65c8:	c6 01       	movw	r24, r12
    65ca:	84 19       	sub	r24, r4
    65cc:	91 09       	sbc	r25, r1
    65ce:	9d 87       	std	Y+13, r25	; 0x0d
    65d0:	8c 87       	std	Y+12, r24	; 0x0c
    65d2:	96 01       	movw	r18, r12
    65d4:	26 19       	sub	r18, r6
    65d6:	37 09       	sbc	r19, r7
    65d8:	28 0d       	add	r18, r8
    65da:	39 1d       	adc	r19, r9
    65dc:	81 2f       	mov	r24, r17
    65de:	90 e0       	ldi	r25, 0x00	; 0
    65e0:	ee 27       	eor	r30, r30
    65e2:	ff 27       	eor	r31, r31
    65e4:	e8 1b       	sub	r30, r24
    65e6:	f9 0b       	sbc	r31, r25
    65e8:	ff 87       	std	Y+15, r31	; 0x0f
    65ea:	ee 87       	std	Y+14, r30	; 0x0e
    65ec:	ff ef       	ldi	r31, 0xFF	; 255
    65ee:	6f 16       	cp	r6, r31
    65f0:	7f 06       	cpc	r7, r31
    65f2:	61 f4       	brne	.+24     	; 0x660c <vfprintf+0x362>
    65f4:	b7 01       	movw	r22, r14
    65f6:	8e e2       	ldi	r24, 0x2E	; 46
    65f8:	90 e0       	ldi	r25, 0x00	; 0
    65fa:	2b 8b       	std	Y+19, r18	; 0x13
    65fc:	3a 8b       	std	Y+18, r19	; 0x12
    65fe:	48 8b       	std	Y+16, r20	; 0x10
    6600:	59 8b       	std	Y+17, r21	; 0x11
    6602:	08 d3       	rcall	.+1552   	; 0x6c14 <fputc>
    6604:	59 89       	ldd	r21, Y+17	; 0x11
    6606:	48 89       	ldd	r20, Y+16	; 0x10
    6608:	3a 89       	ldd	r19, Y+18	; 0x12
    660a:	2b 89       	ldd	r18, Y+19	; 0x13
    660c:	c6 14       	cp	r12, r6
    660e:	d7 04       	cpc	r13, r7
    6610:	54 f0       	brlt	.+20     	; 0x6626 <vfprintf+0x37c>
    6612:	6c 85       	ldd	r22, Y+12	; 0x0c
    6614:	7d 85       	ldd	r23, Y+13	; 0x0d
    6616:	66 15       	cp	r22, r6
    6618:	77 05       	cpc	r23, r7
    661a:	2c f4       	brge	.+10     	; 0x6626 <vfprintf+0x37c>
    661c:	f9 01       	movw	r30, r18
    661e:	e4 0f       	add	r30, r20
    6620:	f5 1f       	adc	r31, r21
    6622:	81 81       	ldd	r24, Z+1	; 0x01
    6624:	01 c0       	rjmp	.+2      	; 0x6628 <vfprintf+0x37e>
    6626:	80 e3       	ldi	r24, 0x30	; 48
    6628:	71 e0       	ldi	r23, 0x01	; 1
    662a:	67 1a       	sub	r6, r23
    662c:	71 08       	sbc	r7, r1
    662e:	4f 5f       	subi	r20, 0xFF	; 255
    6630:	5f 4f       	sbci	r21, 0xFF	; 255
    6632:	ee 85       	ldd	r30, Y+14	; 0x0e
    6634:	ff 85       	ldd	r31, Y+15	; 0x0f
    6636:	6e 16       	cp	r6, r30
    6638:	7f 06       	cpc	r7, r31
    663a:	64 f0       	brlt	.+24     	; 0x6654 <vfprintf+0x3aa>
    663c:	b7 01       	movw	r22, r14
    663e:	90 e0       	ldi	r25, 0x00	; 0
    6640:	2b 8b       	std	Y+19, r18	; 0x13
    6642:	3a 8b       	std	Y+18, r19	; 0x12
    6644:	48 8b       	std	Y+16, r20	; 0x10
    6646:	59 8b       	std	Y+17, r21	; 0x11
    6648:	e5 d2       	rcall	.+1482   	; 0x6c14 <fputc>
    664a:	2b 89       	ldd	r18, Y+19	; 0x13
    664c:	3a 89       	ldd	r19, Y+18	; 0x12
    664e:	48 89       	ldd	r20, Y+16	; 0x10
    6650:	59 89       	ldd	r21, Y+17	; 0x11
    6652:	cc cf       	rjmp	.-104    	; 0x65ec <vfprintf+0x342>
    6654:	6c 14       	cp	r6, r12
    6656:	7d 04       	cpc	r7, r13
    6658:	39 f4       	brne	.+14     	; 0x6668 <vfprintf+0x3be>
    665a:	9a 81       	ldd	r25, Y+2	; 0x02
    665c:	96 33       	cpi	r25, 0x36	; 54
    665e:	18 f4       	brcc	.+6      	; 0x6666 <vfprintf+0x3bc>
    6660:	95 33       	cpi	r25, 0x35	; 53
    6662:	11 f4       	brne	.+4      	; 0x6668 <vfprintf+0x3be>
    6664:	04 ff       	sbrs	r16, 4
    6666:	81 e3       	ldi	r24, 0x31	; 49
    6668:	b7 01       	movw	r22, r14
    666a:	90 e0       	ldi	r25, 0x00	; 0
    666c:	45 c0       	rjmp	.+138    	; 0x66f8 <vfprintf+0x44e>
    666e:	8a 81       	ldd	r24, Y+2	; 0x02
    6670:	81 33       	cpi	r24, 0x31	; 49
    6672:	09 f0       	breq	.+2      	; 0x6676 <vfprintf+0x3cc>
    6674:	0f 7e       	andi	r16, 0xEF	; 239
    6676:	b7 01       	movw	r22, r14
    6678:	90 e0       	ldi	r25, 0x00	; 0
    667a:	cc d2       	rcall	.+1432   	; 0x6c14 <fputc>
    667c:	11 11       	cpse	r17, r1
    667e:	05 c0       	rjmp	.+10     	; 0x668a <vfprintf+0x3e0>
    6680:	74 fe       	sbrs	r7, 4
    6682:	16 c0       	rjmp	.+44     	; 0x66b0 <vfprintf+0x406>
    6684:	85 e4       	ldi	r24, 0x45	; 69
    6686:	90 e0       	ldi	r25, 0x00	; 0
    6688:	15 c0       	rjmp	.+42     	; 0x66b4 <vfprintf+0x40a>
    668a:	b7 01       	movw	r22, r14
    668c:	8e e2       	ldi	r24, 0x2E	; 46
    668e:	90 e0       	ldi	r25, 0x00	; 0
    6690:	c1 d2       	rcall	.+1410   	; 0x6c14 <fputc>
    6692:	82 e0       	ldi	r24, 0x02	; 2
    6694:	66 24       	eor	r6, r6
    6696:	63 94       	inc	r6
    6698:	68 0e       	add	r6, r24
    669a:	f4 01       	movw	r30, r8
    669c:	e8 0f       	add	r30, r24
    669e:	f1 1d       	adc	r31, r1
    66a0:	80 81       	ld	r24, Z
    66a2:	b7 01       	movw	r22, r14
    66a4:	90 e0       	ldi	r25, 0x00	; 0
    66a6:	b6 d2       	rcall	.+1388   	; 0x6c14 <fputc>
    66a8:	11 50       	subi	r17, 0x01	; 1
    66aa:	51 f3       	breq	.-44     	; 0x6680 <vfprintf+0x3d6>
    66ac:	86 2d       	mov	r24, r6
    66ae:	f2 cf       	rjmp	.-28     	; 0x6694 <vfprintf+0x3ea>
    66b0:	85 e6       	ldi	r24, 0x65	; 101
    66b2:	90 e0       	ldi	r25, 0x00	; 0
    66b4:	b7 01       	movw	r22, r14
    66b6:	ae d2       	rcall	.+1372   	; 0x6c14 <fputc>
    66b8:	d7 fc       	sbrc	r13, 7
    66ba:	05 c0       	rjmp	.+10     	; 0x66c6 <vfprintf+0x41c>
    66bc:	c1 14       	cp	r12, r1
    66be:	d1 04       	cpc	r13, r1
    66c0:	39 f4       	brne	.+14     	; 0x66d0 <vfprintf+0x426>
    66c2:	04 ff       	sbrs	r16, 4
    66c4:	05 c0       	rjmp	.+10     	; 0x66d0 <vfprintf+0x426>
    66c6:	d1 94       	neg	r13
    66c8:	c1 94       	neg	r12
    66ca:	d1 08       	sbc	r13, r1
    66cc:	8d e2       	ldi	r24, 0x2D	; 45
    66ce:	01 c0       	rjmp	.+2      	; 0x66d2 <vfprintf+0x428>
    66d0:	8b e2       	ldi	r24, 0x2B	; 43
    66d2:	b7 01       	movw	r22, r14
    66d4:	90 e0       	ldi	r25, 0x00	; 0
    66d6:	9e d2       	rcall	.+1340   	; 0x6c14 <fputc>
    66d8:	80 e3       	ldi	r24, 0x30	; 48
    66da:	6a e0       	ldi	r22, 0x0A	; 10
    66dc:	c6 16       	cp	r12, r22
    66de:	d1 04       	cpc	r13, r1
    66e0:	2c f0       	brlt	.+10     	; 0x66ec <vfprintf+0x442>
    66e2:	8f 5f       	subi	r24, 0xFF	; 255
    66e4:	fa e0       	ldi	r31, 0x0A	; 10
    66e6:	cf 1a       	sub	r12, r31
    66e8:	d1 08       	sbc	r13, r1
    66ea:	f7 cf       	rjmp	.-18     	; 0x66da <vfprintf+0x430>
    66ec:	b7 01       	movw	r22, r14
    66ee:	90 e0       	ldi	r25, 0x00	; 0
    66f0:	91 d2       	rcall	.+1314   	; 0x6c14 <fputc>
    66f2:	b7 01       	movw	r22, r14
    66f4:	c6 01       	movw	r24, r12
    66f6:	c0 96       	adiw	r24, 0x30	; 48
    66f8:	8d d2       	rcall	.+1306   	; 0x6c14 <fputc>
    66fa:	36 c1       	rjmp	.+620    	; 0x6968 <vfprintf+0x6be>
    66fc:	83 36       	cpi	r24, 0x63	; 99
    66fe:	31 f0       	breq	.+12     	; 0x670c <vfprintf+0x462>
    6700:	83 37       	cpi	r24, 0x73	; 115
    6702:	79 f0       	breq	.+30     	; 0x6722 <vfprintf+0x478>
    6704:	83 35       	cpi	r24, 0x53	; 83
    6706:	09 f0       	breq	.+2      	; 0x670a <vfprintf+0x460>
    6708:	54 c0       	rjmp	.+168    	; 0x67b2 <vfprintf+0x508>
    670a:	20 c0       	rjmp	.+64     	; 0x674c <vfprintf+0x4a2>
    670c:	56 01       	movw	r10, r12
    670e:	72 e0       	ldi	r23, 0x02	; 2
    6710:	a7 0e       	add	r10, r23
    6712:	b1 1c       	adc	r11, r1
    6714:	f6 01       	movw	r30, r12
    6716:	80 81       	ld	r24, Z
    6718:	89 83       	std	Y+1, r24	; 0x01
    671a:	01 e0       	ldi	r16, 0x01	; 1
    671c:	10 e0       	ldi	r17, 0x00	; 0
    671e:	64 01       	movw	r12, r8
    6720:	13 c0       	rjmp	.+38     	; 0x6748 <vfprintf+0x49e>
    6722:	56 01       	movw	r10, r12
    6724:	f2 e0       	ldi	r31, 0x02	; 2
    6726:	af 0e       	add	r10, r31
    6728:	b1 1c       	adc	r11, r1
    672a:	f6 01       	movw	r30, r12
    672c:	c0 80       	ld	r12, Z
    672e:	d1 80       	ldd	r13, Z+1	; 0x01
    6730:	26 ff       	sbrs	r18, 6
    6732:	03 c0       	rjmp	.+6      	; 0x673a <vfprintf+0x490>
    6734:	61 2f       	mov	r22, r17
    6736:	70 e0       	ldi	r23, 0x00	; 0
    6738:	02 c0       	rjmp	.+4      	; 0x673e <vfprintf+0x494>
    673a:	6f ef       	ldi	r22, 0xFF	; 255
    673c:	7f ef       	ldi	r23, 0xFF	; 255
    673e:	c6 01       	movw	r24, r12
    6740:	2b 8b       	std	Y+19, r18	; 0x13
    6742:	5d d2       	rcall	.+1210   	; 0x6bfe <strnlen>
    6744:	8c 01       	movw	r16, r24
    6746:	2b 89       	ldd	r18, Y+19	; 0x13
    6748:	2f 77       	andi	r18, 0x7F	; 127
    674a:	14 c0       	rjmp	.+40     	; 0x6774 <vfprintf+0x4ca>
    674c:	56 01       	movw	r10, r12
    674e:	f2 e0       	ldi	r31, 0x02	; 2
    6750:	af 0e       	add	r10, r31
    6752:	b1 1c       	adc	r11, r1
    6754:	f6 01       	movw	r30, r12
    6756:	c0 80       	ld	r12, Z
    6758:	d1 80       	ldd	r13, Z+1	; 0x01
    675a:	26 ff       	sbrs	r18, 6
    675c:	03 c0       	rjmp	.+6      	; 0x6764 <vfprintf+0x4ba>
    675e:	61 2f       	mov	r22, r17
    6760:	70 e0       	ldi	r23, 0x00	; 0
    6762:	02 c0       	rjmp	.+4      	; 0x6768 <vfprintf+0x4be>
    6764:	6f ef       	ldi	r22, 0xFF	; 255
    6766:	7f ef       	ldi	r23, 0xFF	; 255
    6768:	c6 01       	movw	r24, r12
    676a:	2b 8b       	std	Y+19, r18	; 0x13
    676c:	3d d2       	rcall	.+1146   	; 0x6be8 <strnlen_P>
    676e:	8c 01       	movw	r16, r24
    6770:	2b 89       	ldd	r18, Y+19	; 0x13
    6772:	20 68       	ori	r18, 0x80	; 128
    6774:	72 2e       	mov	r7, r18
    6776:	23 fd       	sbrc	r18, 3
    6778:	18 c0       	rjmp	.+48     	; 0x67aa <vfprintf+0x500>
    677a:	85 2d       	mov	r24, r5
    677c:	90 e0       	ldi	r25, 0x00	; 0
    677e:	08 17       	cp	r16, r24
    6780:	19 07       	cpc	r17, r25
    6782:	98 f4       	brcc	.+38     	; 0x67aa <vfprintf+0x500>
    6784:	b7 01       	movw	r22, r14
    6786:	80 e2       	ldi	r24, 0x20	; 32
    6788:	90 e0       	ldi	r25, 0x00	; 0
    678a:	44 d2       	rcall	.+1160   	; 0x6c14 <fputc>
    678c:	5a 94       	dec	r5
    678e:	f5 cf       	rjmp	.-22     	; 0x677a <vfprintf+0x4d0>
    6790:	f6 01       	movw	r30, r12
    6792:	77 fc       	sbrc	r7, 7
    6794:	85 91       	lpm	r24, Z+
    6796:	77 fe       	sbrs	r7, 7
    6798:	81 91       	ld	r24, Z+
    679a:	6f 01       	movw	r12, r30
    679c:	b7 01       	movw	r22, r14
    679e:	90 e0       	ldi	r25, 0x00	; 0
    67a0:	39 d2       	rcall	.+1138   	; 0x6c14 <fputc>
    67a2:	51 10       	cpse	r5, r1
    67a4:	5a 94       	dec	r5
    67a6:	01 50       	subi	r16, 0x01	; 1
    67a8:	11 09       	sbc	r17, r1
    67aa:	01 15       	cp	r16, r1
    67ac:	11 05       	cpc	r17, r1
    67ae:	81 f7       	brne	.-32     	; 0x6790 <vfprintf+0x4e6>
    67b0:	db c0       	rjmp	.+438    	; 0x6968 <vfprintf+0x6be>
    67b2:	84 36       	cpi	r24, 0x64	; 100
    67b4:	11 f0       	breq	.+4      	; 0x67ba <vfprintf+0x510>
    67b6:	89 36       	cpi	r24, 0x69	; 105
    67b8:	49 f5       	brne	.+82     	; 0x680c <vfprintf+0x562>
    67ba:	56 01       	movw	r10, r12
    67bc:	27 ff       	sbrs	r18, 7
    67be:	09 c0       	rjmp	.+18     	; 0x67d2 <vfprintf+0x528>
    67c0:	f4 e0       	ldi	r31, 0x04	; 4
    67c2:	af 0e       	add	r10, r31
    67c4:	b1 1c       	adc	r11, r1
    67c6:	f6 01       	movw	r30, r12
    67c8:	60 81       	ld	r22, Z
    67ca:	71 81       	ldd	r23, Z+1	; 0x01
    67cc:	82 81       	ldd	r24, Z+2	; 0x02
    67ce:	93 81       	ldd	r25, Z+3	; 0x03
    67d0:	0a c0       	rjmp	.+20     	; 0x67e6 <vfprintf+0x53c>
    67d2:	f2 e0       	ldi	r31, 0x02	; 2
    67d4:	af 0e       	add	r10, r31
    67d6:	b1 1c       	adc	r11, r1
    67d8:	f6 01       	movw	r30, r12
    67da:	60 81       	ld	r22, Z
    67dc:	71 81       	ldd	r23, Z+1	; 0x01
    67de:	88 27       	eor	r24, r24
    67e0:	77 fd       	sbrc	r23, 7
    67e2:	80 95       	com	r24
    67e4:	98 2f       	mov	r25, r24
    67e6:	02 2f       	mov	r16, r18
    67e8:	0f 76       	andi	r16, 0x6F	; 111
    67ea:	97 ff       	sbrs	r25, 7
    67ec:	08 c0       	rjmp	.+16     	; 0x67fe <vfprintf+0x554>
    67ee:	90 95       	com	r25
    67f0:	80 95       	com	r24
    67f2:	70 95       	com	r23
    67f4:	61 95       	neg	r22
    67f6:	7f 4f       	sbci	r23, 0xFF	; 255
    67f8:	8f 4f       	sbci	r24, 0xFF	; 255
    67fa:	9f 4f       	sbci	r25, 0xFF	; 255
    67fc:	00 68       	ori	r16, 0x80	; 128
    67fe:	2a e0       	ldi	r18, 0x0A	; 10
    6800:	30 e0       	ldi	r19, 0x00	; 0
    6802:	a4 01       	movw	r20, r8
    6804:	67 d2       	rcall	.+1230   	; 0x6cd4 <__ultoa_invert>
    6806:	c8 2e       	mov	r12, r24
    6808:	c8 18       	sub	r12, r8
    680a:	3d c0       	rjmp	.+122    	; 0x6886 <vfprintf+0x5dc>
    680c:	02 2f       	mov	r16, r18
    680e:	85 37       	cpi	r24, 0x75	; 117
    6810:	21 f4       	brne	.+8      	; 0x681a <vfprintf+0x570>
    6812:	0f 7e       	andi	r16, 0xEF	; 239
    6814:	2a e0       	ldi	r18, 0x0A	; 10
    6816:	30 e0       	ldi	r19, 0x00	; 0
    6818:	1d c0       	rjmp	.+58     	; 0x6854 <vfprintf+0x5aa>
    681a:	09 7f       	andi	r16, 0xF9	; 249
    681c:	8f 36       	cpi	r24, 0x6F	; 111
    681e:	91 f0       	breq	.+36     	; 0x6844 <vfprintf+0x59a>
    6820:	18 f4       	brcc	.+6      	; 0x6828 <vfprintf+0x57e>
    6822:	88 35       	cpi	r24, 0x58	; 88
    6824:	59 f0       	breq	.+22     	; 0x683c <vfprintf+0x592>
    6826:	a9 c0       	rjmp	.+338    	; 0x697a <vfprintf+0x6d0>
    6828:	80 37       	cpi	r24, 0x70	; 112
    682a:	19 f0       	breq	.+6      	; 0x6832 <vfprintf+0x588>
    682c:	88 37       	cpi	r24, 0x78	; 120
    682e:	11 f0       	breq	.+4      	; 0x6834 <vfprintf+0x58a>
    6830:	a4 c0       	rjmp	.+328    	; 0x697a <vfprintf+0x6d0>
    6832:	00 61       	ori	r16, 0x10	; 16
    6834:	04 ff       	sbrs	r16, 4
    6836:	09 c0       	rjmp	.+18     	; 0x684a <vfprintf+0x5a0>
    6838:	04 60       	ori	r16, 0x04	; 4
    683a:	07 c0       	rjmp	.+14     	; 0x684a <vfprintf+0x5a0>
    683c:	24 ff       	sbrs	r18, 4
    683e:	08 c0       	rjmp	.+16     	; 0x6850 <vfprintf+0x5a6>
    6840:	06 60       	ori	r16, 0x06	; 6
    6842:	06 c0       	rjmp	.+12     	; 0x6850 <vfprintf+0x5a6>
    6844:	28 e0       	ldi	r18, 0x08	; 8
    6846:	30 e0       	ldi	r19, 0x00	; 0
    6848:	05 c0       	rjmp	.+10     	; 0x6854 <vfprintf+0x5aa>
    684a:	20 e1       	ldi	r18, 0x10	; 16
    684c:	30 e0       	ldi	r19, 0x00	; 0
    684e:	02 c0       	rjmp	.+4      	; 0x6854 <vfprintf+0x5aa>
    6850:	20 e1       	ldi	r18, 0x10	; 16
    6852:	32 e0       	ldi	r19, 0x02	; 2
    6854:	56 01       	movw	r10, r12
    6856:	07 ff       	sbrs	r16, 7
    6858:	09 c0       	rjmp	.+18     	; 0x686c <vfprintf+0x5c2>
    685a:	f4 e0       	ldi	r31, 0x04	; 4
    685c:	af 0e       	add	r10, r31
    685e:	b1 1c       	adc	r11, r1
    6860:	f6 01       	movw	r30, r12
    6862:	60 81       	ld	r22, Z
    6864:	71 81       	ldd	r23, Z+1	; 0x01
    6866:	82 81       	ldd	r24, Z+2	; 0x02
    6868:	93 81       	ldd	r25, Z+3	; 0x03
    686a:	08 c0       	rjmp	.+16     	; 0x687c <vfprintf+0x5d2>
    686c:	f2 e0       	ldi	r31, 0x02	; 2
    686e:	af 0e       	add	r10, r31
    6870:	b1 1c       	adc	r11, r1
    6872:	f6 01       	movw	r30, r12
    6874:	60 81       	ld	r22, Z
    6876:	71 81       	ldd	r23, Z+1	; 0x01
    6878:	80 e0       	ldi	r24, 0x00	; 0
    687a:	90 e0       	ldi	r25, 0x00	; 0
    687c:	a4 01       	movw	r20, r8
    687e:	2a d2       	rcall	.+1108   	; 0x6cd4 <__ultoa_invert>
    6880:	c8 2e       	mov	r12, r24
    6882:	c8 18       	sub	r12, r8
    6884:	0f 77       	andi	r16, 0x7F	; 127
    6886:	06 ff       	sbrs	r16, 6
    6888:	0b c0       	rjmp	.+22     	; 0x68a0 <vfprintf+0x5f6>
    688a:	20 2f       	mov	r18, r16
    688c:	2e 7f       	andi	r18, 0xFE	; 254
    688e:	c1 16       	cp	r12, r17
    6890:	50 f4       	brcc	.+20     	; 0x68a6 <vfprintf+0x5fc>
    6892:	04 ff       	sbrs	r16, 4
    6894:	0a c0       	rjmp	.+20     	; 0x68aa <vfprintf+0x600>
    6896:	02 fd       	sbrc	r16, 2
    6898:	08 c0       	rjmp	.+16     	; 0x68aa <vfprintf+0x600>
    689a:	20 2f       	mov	r18, r16
    689c:	2e 7e       	andi	r18, 0xEE	; 238
    689e:	05 c0       	rjmp	.+10     	; 0x68aa <vfprintf+0x600>
    68a0:	dc 2c       	mov	r13, r12
    68a2:	20 2f       	mov	r18, r16
    68a4:	03 c0       	rjmp	.+6      	; 0x68ac <vfprintf+0x602>
    68a6:	dc 2c       	mov	r13, r12
    68a8:	01 c0       	rjmp	.+2      	; 0x68ac <vfprintf+0x602>
    68aa:	d1 2e       	mov	r13, r17
    68ac:	24 ff       	sbrs	r18, 4
    68ae:	0d c0       	rjmp	.+26     	; 0x68ca <vfprintf+0x620>
    68b0:	fe 01       	movw	r30, r28
    68b2:	ec 0d       	add	r30, r12
    68b4:	f1 1d       	adc	r31, r1
    68b6:	80 81       	ld	r24, Z
    68b8:	80 33       	cpi	r24, 0x30	; 48
    68ba:	11 f4       	brne	.+4      	; 0x68c0 <vfprintf+0x616>
    68bc:	29 7e       	andi	r18, 0xE9	; 233
    68be:	09 c0       	rjmp	.+18     	; 0x68d2 <vfprintf+0x628>
    68c0:	22 ff       	sbrs	r18, 2
    68c2:	06 c0       	rjmp	.+12     	; 0x68d0 <vfprintf+0x626>
    68c4:	d3 94       	inc	r13
    68c6:	d3 94       	inc	r13
    68c8:	04 c0       	rjmp	.+8      	; 0x68d2 <vfprintf+0x628>
    68ca:	82 2f       	mov	r24, r18
    68cc:	86 78       	andi	r24, 0x86	; 134
    68ce:	09 f0       	breq	.+2      	; 0x68d2 <vfprintf+0x628>
    68d0:	d3 94       	inc	r13
    68d2:	23 fd       	sbrc	r18, 3
    68d4:	12 c0       	rjmp	.+36     	; 0x68fa <vfprintf+0x650>
    68d6:	20 ff       	sbrs	r18, 0
    68d8:	06 c0       	rjmp	.+12     	; 0x68e6 <vfprintf+0x63c>
    68da:	1c 2d       	mov	r17, r12
    68dc:	d5 14       	cp	r13, r5
    68de:	18 f4       	brcc	.+6      	; 0x68e6 <vfprintf+0x63c>
    68e0:	15 0d       	add	r17, r5
    68e2:	1d 19       	sub	r17, r13
    68e4:	d5 2c       	mov	r13, r5
    68e6:	d5 14       	cp	r13, r5
    68e8:	60 f4       	brcc	.+24     	; 0x6902 <vfprintf+0x658>
    68ea:	b7 01       	movw	r22, r14
    68ec:	80 e2       	ldi	r24, 0x20	; 32
    68ee:	90 e0       	ldi	r25, 0x00	; 0
    68f0:	2b 8b       	std	Y+19, r18	; 0x13
    68f2:	90 d1       	rcall	.+800    	; 0x6c14 <fputc>
    68f4:	d3 94       	inc	r13
    68f6:	2b 89       	ldd	r18, Y+19	; 0x13
    68f8:	f6 cf       	rjmp	.-20     	; 0x68e6 <vfprintf+0x63c>
    68fa:	d5 14       	cp	r13, r5
    68fc:	10 f4       	brcc	.+4      	; 0x6902 <vfprintf+0x658>
    68fe:	5d 18       	sub	r5, r13
    6900:	01 c0       	rjmp	.+2      	; 0x6904 <vfprintf+0x65a>
    6902:	51 2c       	mov	r5, r1
    6904:	24 ff       	sbrs	r18, 4
    6906:	11 c0       	rjmp	.+34     	; 0x692a <vfprintf+0x680>
    6908:	b7 01       	movw	r22, r14
    690a:	80 e3       	ldi	r24, 0x30	; 48
    690c:	90 e0       	ldi	r25, 0x00	; 0
    690e:	2b 8b       	std	Y+19, r18	; 0x13
    6910:	81 d1       	rcall	.+770    	; 0x6c14 <fputc>
    6912:	2b 89       	ldd	r18, Y+19	; 0x13
    6914:	22 ff       	sbrs	r18, 2
    6916:	16 c0       	rjmp	.+44     	; 0x6944 <vfprintf+0x69a>
    6918:	21 ff       	sbrs	r18, 1
    691a:	03 c0       	rjmp	.+6      	; 0x6922 <vfprintf+0x678>
    691c:	88 e5       	ldi	r24, 0x58	; 88
    691e:	90 e0       	ldi	r25, 0x00	; 0
    6920:	02 c0       	rjmp	.+4      	; 0x6926 <vfprintf+0x67c>
    6922:	88 e7       	ldi	r24, 0x78	; 120
    6924:	90 e0       	ldi	r25, 0x00	; 0
    6926:	b7 01       	movw	r22, r14
    6928:	0c c0       	rjmp	.+24     	; 0x6942 <vfprintf+0x698>
    692a:	82 2f       	mov	r24, r18
    692c:	86 78       	andi	r24, 0x86	; 134
    692e:	51 f0       	breq	.+20     	; 0x6944 <vfprintf+0x69a>
    6930:	21 fd       	sbrc	r18, 1
    6932:	02 c0       	rjmp	.+4      	; 0x6938 <vfprintf+0x68e>
    6934:	80 e2       	ldi	r24, 0x20	; 32
    6936:	01 c0       	rjmp	.+2      	; 0x693a <vfprintf+0x690>
    6938:	8b e2       	ldi	r24, 0x2B	; 43
    693a:	27 fd       	sbrc	r18, 7
    693c:	8d e2       	ldi	r24, 0x2D	; 45
    693e:	b7 01       	movw	r22, r14
    6940:	90 e0       	ldi	r25, 0x00	; 0
    6942:	68 d1       	rcall	.+720    	; 0x6c14 <fputc>
    6944:	c1 16       	cp	r12, r17
    6946:	30 f4       	brcc	.+12     	; 0x6954 <vfprintf+0x6aa>
    6948:	b7 01       	movw	r22, r14
    694a:	80 e3       	ldi	r24, 0x30	; 48
    694c:	90 e0       	ldi	r25, 0x00	; 0
    694e:	62 d1       	rcall	.+708    	; 0x6c14 <fputc>
    6950:	11 50       	subi	r17, 0x01	; 1
    6952:	f8 cf       	rjmp	.-16     	; 0x6944 <vfprintf+0x69a>
    6954:	ca 94       	dec	r12
    6956:	f4 01       	movw	r30, r8
    6958:	ec 0d       	add	r30, r12
    695a:	f1 1d       	adc	r31, r1
    695c:	80 81       	ld	r24, Z
    695e:	b7 01       	movw	r22, r14
    6960:	90 e0       	ldi	r25, 0x00	; 0
    6962:	58 d1       	rcall	.+688    	; 0x6c14 <fputc>
    6964:	c1 10       	cpse	r12, r1
    6966:	f6 cf       	rjmp	.-20     	; 0x6954 <vfprintf+0x6aa>
    6968:	55 20       	and	r5, r5
    696a:	09 f4       	brne	.+2      	; 0x696e <vfprintf+0x6c4>
    696c:	dd cc       	rjmp	.-1606   	; 0x6328 <vfprintf+0x7e>
    696e:	b7 01       	movw	r22, r14
    6970:	80 e2       	ldi	r24, 0x20	; 32
    6972:	90 e0       	ldi	r25, 0x00	; 0
    6974:	4f d1       	rcall	.+670    	; 0x6c14 <fputc>
    6976:	5a 94       	dec	r5
    6978:	f7 cf       	rjmp	.-18     	; 0x6968 <vfprintf+0x6be>
    697a:	f7 01       	movw	r30, r14
    697c:	86 81       	ldd	r24, Z+6	; 0x06
    697e:	97 81       	ldd	r25, Z+7	; 0x07
    6980:	02 c0       	rjmp	.+4      	; 0x6986 <vfprintf+0x6dc>
    6982:	8f ef       	ldi	r24, 0xFF	; 255
    6984:	9f ef       	ldi	r25, 0xFF	; 255
    6986:	63 96       	adiw	r28, 0x13	; 19
    6988:	0f b6       	in	r0, 0x3f	; 63
    698a:	f8 94       	cli
    698c:	de bf       	out	0x3e, r29	; 62
    698e:	0f be       	out	0x3f, r0	; 63
    6990:	cd bf       	out	0x3d, r28	; 61
    6992:	df 91       	pop	r29
    6994:	cf 91       	pop	r28
    6996:	1f 91       	pop	r17
    6998:	0f 91       	pop	r16
    699a:	ff 90       	pop	r15
    699c:	ef 90       	pop	r14
    699e:	df 90       	pop	r13
    69a0:	cf 90       	pop	r12
    69a2:	bf 90       	pop	r11
    69a4:	af 90       	pop	r10
    69a6:	9f 90       	pop	r9
    69a8:	8f 90       	pop	r8
    69aa:	7f 90       	pop	r7
    69ac:	6f 90       	pop	r6
    69ae:	5f 90       	pop	r5
    69b0:	4f 90       	pop	r4
    69b2:	3f 90       	pop	r3
    69b4:	2f 90       	pop	r2
    69b6:	08 95       	ret

000069b8 <__udivmodhi4>:
    69b8:	aa 1b       	sub	r26, r26
    69ba:	bb 1b       	sub	r27, r27
    69bc:	51 e1       	ldi	r21, 0x11	; 17
    69be:	07 c0       	rjmp	.+14     	; 0x69ce <__udivmodhi4_ep>

000069c0 <__udivmodhi4_loop>:
    69c0:	aa 1f       	adc	r26, r26
    69c2:	bb 1f       	adc	r27, r27
    69c4:	a6 17       	cp	r26, r22
    69c6:	b7 07       	cpc	r27, r23
    69c8:	10 f0       	brcs	.+4      	; 0x69ce <__udivmodhi4_ep>
    69ca:	a6 1b       	sub	r26, r22
    69cc:	b7 0b       	sbc	r27, r23

000069ce <__udivmodhi4_ep>:
    69ce:	88 1f       	adc	r24, r24
    69d0:	99 1f       	adc	r25, r25
    69d2:	5a 95       	dec	r21
    69d4:	a9 f7       	brne	.-22     	; 0x69c0 <__udivmodhi4_loop>
    69d6:	80 95       	com	r24
    69d8:	90 95       	com	r25
    69da:	bc 01       	movw	r22, r24
    69dc:	cd 01       	movw	r24, r26
    69de:	08 95       	ret

000069e0 <__divmodhi4>:
    69e0:	97 fb       	bst	r25, 7
    69e2:	07 2e       	mov	r0, r23
    69e4:	16 f4       	brtc	.+4      	; 0x69ea <__divmodhi4+0xa>
    69e6:	00 94       	com	r0
    69e8:	06 d0       	rcall	.+12     	; 0x69f6 <__divmodhi4_neg1>
    69ea:	77 fd       	sbrc	r23, 7
    69ec:	08 d0       	rcall	.+16     	; 0x69fe <__divmodhi4_neg2>
    69ee:	e4 df       	rcall	.-56     	; 0x69b8 <__udivmodhi4>
    69f0:	07 fc       	sbrc	r0, 7
    69f2:	05 d0       	rcall	.+10     	; 0x69fe <__divmodhi4_neg2>
    69f4:	3e f4       	brtc	.+14     	; 0x6a04 <__divmodhi4_exit>

000069f6 <__divmodhi4_neg1>:
    69f6:	90 95       	com	r25
    69f8:	81 95       	neg	r24
    69fa:	9f 4f       	sbci	r25, 0xFF	; 255
    69fc:	08 95       	ret

000069fe <__divmodhi4_neg2>:
    69fe:	70 95       	com	r23
    6a00:	61 95       	neg	r22
    6a02:	7f 4f       	sbci	r23, 0xFF	; 255

00006a04 <__divmodhi4_exit>:
    6a04:	08 95       	ret

00006a06 <__tablejump2__>:
    6a06:	ee 0f       	add	r30, r30
    6a08:	ff 1f       	adc	r31, r31

00006a0a <__tablejump__>:
    6a0a:	05 90       	lpm	r0, Z+
    6a0c:	f4 91       	lpm	r31, Z
    6a0e:	e0 2d       	mov	r30, r0
    6a10:	09 94       	ijmp

00006a12 <__umulhisi3>:
    6a12:	a2 9f       	mul	r26, r18
    6a14:	b0 01       	movw	r22, r0
    6a16:	b3 9f       	mul	r27, r19
    6a18:	c0 01       	movw	r24, r0
    6a1a:	a3 9f       	mul	r26, r19
    6a1c:	70 0d       	add	r23, r0
    6a1e:	81 1d       	adc	r24, r1
    6a20:	11 24       	eor	r1, r1
    6a22:	91 1d       	adc	r25, r1
    6a24:	b2 9f       	mul	r27, r18
    6a26:	70 0d       	add	r23, r0
    6a28:	81 1d       	adc	r24, r1
    6a2a:	11 24       	eor	r1, r1
    6a2c:	91 1d       	adc	r25, r1
    6a2e:	08 95       	ret

00006a30 <__tablejump_elpm__>:
    6a30:	07 90       	elpm	r0, Z+
    6a32:	f6 91       	elpm	r31, Z
    6a34:	e0 2d       	mov	r30, r0
    6a36:	09 94       	ijmp

00006a38 <__ftoa_engine>:
    6a38:	28 30       	cpi	r18, 0x08	; 8
    6a3a:	08 f0       	brcs	.+2      	; 0x6a3e <__ftoa_engine+0x6>
    6a3c:	27 e0       	ldi	r18, 0x07	; 7
    6a3e:	33 27       	eor	r19, r19
    6a40:	da 01       	movw	r26, r20
    6a42:	99 0f       	add	r25, r25
    6a44:	31 1d       	adc	r19, r1
    6a46:	87 fd       	sbrc	r24, 7
    6a48:	91 60       	ori	r25, 0x01	; 1
    6a4a:	00 96       	adiw	r24, 0x00	; 0
    6a4c:	61 05       	cpc	r22, r1
    6a4e:	71 05       	cpc	r23, r1
    6a50:	39 f4       	brne	.+14     	; 0x6a60 <__ftoa_engine+0x28>
    6a52:	32 60       	ori	r19, 0x02	; 2
    6a54:	2e 5f       	subi	r18, 0xFE	; 254
    6a56:	3d 93       	st	X+, r19
    6a58:	30 e3       	ldi	r19, 0x30	; 48
    6a5a:	2a 95       	dec	r18
    6a5c:	e1 f7       	brne	.-8      	; 0x6a56 <__ftoa_engine+0x1e>
    6a5e:	08 95       	ret
    6a60:	9f 3f       	cpi	r25, 0xFF	; 255
    6a62:	30 f0       	brcs	.+12     	; 0x6a70 <__ftoa_engine+0x38>
    6a64:	80 38       	cpi	r24, 0x80	; 128
    6a66:	71 05       	cpc	r23, r1
    6a68:	61 05       	cpc	r22, r1
    6a6a:	09 f0       	breq	.+2      	; 0x6a6e <__ftoa_engine+0x36>
    6a6c:	3c 5f       	subi	r19, 0xFC	; 252
    6a6e:	3c 5f       	subi	r19, 0xFC	; 252
    6a70:	3d 93       	st	X+, r19
    6a72:	91 30       	cpi	r25, 0x01	; 1
    6a74:	08 f0       	brcs	.+2      	; 0x6a78 <__ftoa_engine+0x40>
    6a76:	80 68       	ori	r24, 0x80	; 128
    6a78:	91 1d       	adc	r25, r1
    6a7a:	df 93       	push	r29
    6a7c:	cf 93       	push	r28
    6a7e:	1f 93       	push	r17
    6a80:	0f 93       	push	r16
    6a82:	ff 92       	push	r15
    6a84:	ef 92       	push	r14
    6a86:	19 2f       	mov	r17, r25
    6a88:	98 7f       	andi	r25, 0xF8	; 248
    6a8a:	96 95       	lsr	r25
    6a8c:	e9 2f       	mov	r30, r25
    6a8e:	96 95       	lsr	r25
    6a90:	96 95       	lsr	r25
    6a92:	e9 0f       	add	r30, r25
    6a94:	ff 27       	eor	r31, r31
    6a96:	e2 50       	subi	r30, 0x02	; 2
    6a98:	fb 4f       	sbci	r31, 0xFB	; 251
    6a9a:	99 27       	eor	r25, r25
    6a9c:	33 27       	eor	r19, r19
    6a9e:	ee 24       	eor	r14, r14
    6aa0:	ff 24       	eor	r15, r15
    6aa2:	a7 01       	movw	r20, r14
    6aa4:	e7 01       	movw	r28, r14
    6aa6:	05 90       	lpm	r0, Z+
    6aa8:	08 94       	sec
    6aaa:	07 94       	ror	r0
    6aac:	28 f4       	brcc	.+10     	; 0x6ab8 <__ftoa_engine+0x80>
    6aae:	36 0f       	add	r19, r22
    6ab0:	e7 1e       	adc	r14, r23
    6ab2:	f8 1e       	adc	r15, r24
    6ab4:	49 1f       	adc	r20, r25
    6ab6:	51 1d       	adc	r21, r1
    6ab8:	66 0f       	add	r22, r22
    6aba:	77 1f       	adc	r23, r23
    6abc:	88 1f       	adc	r24, r24
    6abe:	99 1f       	adc	r25, r25
    6ac0:	06 94       	lsr	r0
    6ac2:	a1 f7       	brne	.-24     	; 0x6aac <__ftoa_engine+0x74>
    6ac4:	05 90       	lpm	r0, Z+
    6ac6:	07 94       	ror	r0
    6ac8:	28 f4       	brcc	.+10     	; 0x6ad4 <__ftoa_engine+0x9c>
    6aca:	e7 0e       	add	r14, r23
    6acc:	f8 1e       	adc	r15, r24
    6ace:	49 1f       	adc	r20, r25
    6ad0:	56 1f       	adc	r21, r22
    6ad2:	c1 1d       	adc	r28, r1
    6ad4:	77 0f       	add	r23, r23
    6ad6:	88 1f       	adc	r24, r24
    6ad8:	99 1f       	adc	r25, r25
    6ada:	66 1f       	adc	r22, r22
    6adc:	06 94       	lsr	r0
    6ade:	a1 f7       	brne	.-24     	; 0x6ac8 <__ftoa_engine+0x90>
    6ae0:	05 90       	lpm	r0, Z+
    6ae2:	07 94       	ror	r0
    6ae4:	28 f4       	brcc	.+10     	; 0x6af0 <__ftoa_engine+0xb8>
    6ae6:	f8 0e       	add	r15, r24
    6ae8:	49 1f       	adc	r20, r25
    6aea:	56 1f       	adc	r21, r22
    6aec:	c7 1f       	adc	r28, r23
    6aee:	d1 1d       	adc	r29, r1
    6af0:	88 0f       	add	r24, r24
    6af2:	99 1f       	adc	r25, r25
    6af4:	66 1f       	adc	r22, r22
    6af6:	77 1f       	adc	r23, r23
    6af8:	06 94       	lsr	r0
    6afa:	a1 f7       	brne	.-24     	; 0x6ae4 <__ftoa_engine+0xac>
    6afc:	05 90       	lpm	r0, Z+
    6afe:	07 94       	ror	r0
    6b00:	20 f4       	brcc	.+8      	; 0x6b0a <__ftoa_engine+0xd2>
    6b02:	49 0f       	add	r20, r25
    6b04:	56 1f       	adc	r21, r22
    6b06:	c7 1f       	adc	r28, r23
    6b08:	d8 1f       	adc	r29, r24
    6b0a:	99 0f       	add	r25, r25
    6b0c:	66 1f       	adc	r22, r22
    6b0e:	77 1f       	adc	r23, r23
    6b10:	88 1f       	adc	r24, r24
    6b12:	06 94       	lsr	r0
    6b14:	a9 f7       	brne	.-22     	; 0x6b00 <__ftoa_engine+0xc8>
    6b16:	84 91       	lpm	r24, Z
    6b18:	10 95       	com	r17
    6b1a:	17 70       	andi	r17, 0x07	; 7
    6b1c:	41 f0       	breq	.+16     	; 0x6b2e <__ftoa_engine+0xf6>
    6b1e:	d6 95       	lsr	r29
    6b20:	c7 95       	ror	r28
    6b22:	57 95       	ror	r21
    6b24:	47 95       	ror	r20
    6b26:	f7 94       	ror	r15
    6b28:	e7 94       	ror	r14
    6b2a:	1a 95       	dec	r17
    6b2c:	c1 f7       	brne	.-16     	; 0x6b1e <__ftoa_engine+0xe6>
    6b2e:	e4 ea       	ldi	r30, 0xA4	; 164
    6b30:	f4 e0       	ldi	r31, 0x04	; 4
    6b32:	68 94       	set
    6b34:	15 90       	lpm	r1, Z+
    6b36:	15 91       	lpm	r17, Z+
    6b38:	35 91       	lpm	r19, Z+
    6b3a:	65 91       	lpm	r22, Z+
    6b3c:	95 91       	lpm	r25, Z+
    6b3e:	05 90       	lpm	r0, Z+
    6b40:	7f e2       	ldi	r23, 0x2F	; 47
    6b42:	73 95       	inc	r23
    6b44:	e1 18       	sub	r14, r1
    6b46:	f1 0a       	sbc	r15, r17
    6b48:	43 0b       	sbc	r20, r19
    6b4a:	56 0b       	sbc	r21, r22
    6b4c:	c9 0b       	sbc	r28, r25
    6b4e:	d0 09       	sbc	r29, r0
    6b50:	c0 f7       	brcc	.-16     	; 0x6b42 <__ftoa_engine+0x10a>
    6b52:	e1 0c       	add	r14, r1
    6b54:	f1 1e       	adc	r15, r17
    6b56:	43 1f       	adc	r20, r19
    6b58:	56 1f       	adc	r21, r22
    6b5a:	c9 1f       	adc	r28, r25
    6b5c:	d0 1d       	adc	r29, r0
    6b5e:	7e f4       	brtc	.+30     	; 0x6b7e <__ftoa_engine+0x146>
    6b60:	70 33       	cpi	r23, 0x30	; 48
    6b62:	11 f4       	brne	.+4      	; 0x6b68 <__ftoa_engine+0x130>
    6b64:	8a 95       	dec	r24
    6b66:	e6 cf       	rjmp	.-52     	; 0x6b34 <__ftoa_engine+0xfc>
    6b68:	e8 94       	clt
    6b6a:	01 50       	subi	r16, 0x01	; 1
    6b6c:	30 f0       	brcs	.+12     	; 0x6b7a <__ftoa_engine+0x142>
    6b6e:	08 0f       	add	r16, r24
    6b70:	0a f4       	brpl	.+2      	; 0x6b74 <__ftoa_engine+0x13c>
    6b72:	00 27       	eor	r16, r16
    6b74:	02 17       	cp	r16, r18
    6b76:	08 f4       	brcc	.+2      	; 0x6b7a <__ftoa_engine+0x142>
    6b78:	20 2f       	mov	r18, r16
    6b7a:	23 95       	inc	r18
    6b7c:	02 2f       	mov	r16, r18
    6b7e:	7a 33       	cpi	r23, 0x3A	; 58
    6b80:	28 f0       	brcs	.+10     	; 0x6b8c <__ftoa_engine+0x154>
    6b82:	79 e3       	ldi	r23, 0x39	; 57
    6b84:	7d 93       	st	X+, r23
    6b86:	2a 95       	dec	r18
    6b88:	e9 f7       	brne	.-6      	; 0x6b84 <__ftoa_engine+0x14c>
    6b8a:	10 c0       	rjmp	.+32     	; 0x6bac <__ftoa_engine+0x174>
    6b8c:	7d 93       	st	X+, r23
    6b8e:	2a 95       	dec	r18
    6b90:	89 f6       	brne	.-94     	; 0x6b34 <__ftoa_engine+0xfc>
    6b92:	06 94       	lsr	r0
    6b94:	97 95       	ror	r25
    6b96:	67 95       	ror	r22
    6b98:	37 95       	ror	r19
    6b9a:	17 95       	ror	r17
    6b9c:	17 94       	ror	r1
    6b9e:	e1 18       	sub	r14, r1
    6ba0:	f1 0a       	sbc	r15, r17
    6ba2:	43 0b       	sbc	r20, r19
    6ba4:	56 0b       	sbc	r21, r22
    6ba6:	c9 0b       	sbc	r28, r25
    6ba8:	d0 09       	sbc	r29, r0
    6baa:	98 f0       	brcs	.+38     	; 0x6bd2 <__ftoa_engine+0x19a>
    6bac:	23 95       	inc	r18
    6bae:	7e 91       	ld	r23, -X
    6bb0:	73 95       	inc	r23
    6bb2:	7a 33       	cpi	r23, 0x3A	; 58
    6bb4:	08 f0       	brcs	.+2      	; 0x6bb8 <__ftoa_engine+0x180>
    6bb6:	70 e3       	ldi	r23, 0x30	; 48
    6bb8:	7c 93       	st	X, r23
    6bba:	20 13       	cpse	r18, r16
    6bbc:	b8 f7       	brcc	.-18     	; 0x6bac <__ftoa_engine+0x174>
    6bbe:	7e 91       	ld	r23, -X
    6bc0:	70 61       	ori	r23, 0x10	; 16
    6bc2:	7d 93       	st	X+, r23
    6bc4:	30 f0       	brcs	.+12     	; 0x6bd2 <__ftoa_engine+0x19a>
    6bc6:	83 95       	inc	r24
    6bc8:	71 e3       	ldi	r23, 0x31	; 49
    6bca:	7d 93       	st	X+, r23
    6bcc:	70 e3       	ldi	r23, 0x30	; 48
    6bce:	2a 95       	dec	r18
    6bd0:	e1 f7       	brne	.-8      	; 0x6bca <__ftoa_engine+0x192>
    6bd2:	11 24       	eor	r1, r1
    6bd4:	ef 90       	pop	r14
    6bd6:	ff 90       	pop	r15
    6bd8:	0f 91       	pop	r16
    6bda:	1f 91       	pop	r17
    6bdc:	cf 91       	pop	r28
    6bde:	df 91       	pop	r29
    6be0:	99 27       	eor	r25, r25
    6be2:	87 fd       	sbrc	r24, 7
    6be4:	90 95       	com	r25
    6be6:	08 95       	ret

00006be8 <strnlen_P>:
    6be8:	fc 01       	movw	r30, r24
    6bea:	05 90       	lpm	r0, Z+
    6bec:	61 50       	subi	r22, 0x01	; 1
    6bee:	70 40       	sbci	r23, 0x00	; 0
    6bf0:	01 10       	cpse	r0, r1
    6bf2:	d8 f7       	brcc	.-10     	; 0x6bea <strnlen_P+0x2>
    6bf4:	80 95       	com	r24
    6bf6:	90 95       	com	r25
    6bf8:	8e 0f       	add	r24, r30
    6bfa:	9f 1f       	adc	r25, r31
    6bfc:	08 95       	ret

00006bfe <strnlen>:
    6bfe:	fc 01       	movw	r30, r24
    6c00:	61 50       	subi	r22, 0x01	; 1
    6c02:	70 40       	sbci	r23, 0x00	; 0
    6c04:	01 90       	ld	r0, Z+
    6c06:	01 10       	cpse	r0, r1
    6c08:	d8 f7       	brcc	.-10     	; 0x6c00 <strnlen+0x2>
    6c0a:	80 95       	com	r24
    6c0c:	90 95       	com	r25
    6c0e:	8e 0f       	add	r24, r30
    6c10:	9f 1f       	adc	r25, r31
    6c12:	08 95       	ret

00006c14 <fputc>:
    6c14:	0f 93       	push	r16
    6c16:	1f 93       	push	r17
    6c18:	cf 93       	push	r28
    6c1a:	df 93       	push	r29
    6c1c:	18 2f       	mov	r17, r24
    6c1e:	09 2f       	mov	r16, r25
    6c20:	eb 01       	movw	r28, r22
    6c22:	8b 81       	ldd	r24, Y+3	; 0x03
    6c24:	81 fd       	sbrc	r24, 1
    6c26:	03 c0       	rjmp	.+6      	; 0x6c2e <fputc+0x1a>
    6c28:	8f ef       	ldi	r24, 0xFF	; 255
    6c2a:	9f ef       	ldi	r25, 0xFF	; 255
    6c2c:	20 c0       	rjmp	.+64     	; 0x6c6e <fputc+0x5a>
    6c2e:	82 ff       	sbrs	r24, 2
    6c30:	10 c0       	rjmp	.+32     	; 0x6c52 <fputc+0x3e>
    6c32:	4e 81       	ldd	r20, Y+6	; 0x06
    6c34:	5f 81       	ldd	r21, Y+7	; 0x07
    6c36:	2c 81       	ldd	r18, Y+4	; 0x04
    6c38:	3d 81       	ldd	r19, Y+5	; 0x05
    6c3a:	42 17       	cp	r20, r18
    6c3c:	53 07       	cpc	r21, r19
    6c3e:	7c f4       	brge	.+30     	; 0x6c5e <fputc+0x4a>
    6c40:	e8 81       	ld	r30, Y
    6c42:	f9 81       	ldd	r31, Y+1	; 0x01
    6c44:	9f 01       	movw	r18, r30
    6c46:	2f 5f       	subi	r18, 0xFF	; 255
    6c48:	3f 4f       	sbci	r19, 0xFF	; 255
    6c4a:	39 83       	std	Y+1, r19	; 0x01
    6c4c:	28 83       	st	Y, r18
    6c4e:	10 83       	st	Z, r17
    6c50:	06 c0       	rjmp	.+12     	; 0x6c5e <fputc+0x4a>
    6c52:	e8 85       	ldd	r30, Y+8	; 0x08
    6c54:	f9 85       	ldd	r31, Y+9	; 0x09
    6c56:	81 2f       	mov	r24, r17
    6c58:	09 95       	icall
    6c5a:	89 2b       	or	r24, r25
    6c5c:	29 f7       	brne	.-54     	; 0x6c28 <fputc+0x14>
    6c5e:	2e 81       	ldd	r18, Y+6	; 0x06
    6c60:	3f 81       	ldd	r19, Y+7	; 0x07
    6c62:	2f 5f       	subi	r18, 0xFF	; 255
    6c64:	3f 4f       	sbci	r19, 0xFF	; 255
    6c66:	3f 83       	std	Y+7, r19	; 0x07
    6c68:	2e 83       	std	Y+6, r18	; 0x06
    6c6a:	81 2f       	mov	r24, r17
    6c6c:	90 2f       	mov	r25, r16
    6c6e:	df 91       	pop	r29
    6c70:	cf 91       	pop	r28
    6c72:	1f 91       	pop	r17
    6c74:	0f 91       	pop	r16
    6c76:	08 95       	ret

00006c78 <sprintf>:
    6c78:	0f 93       	push	r16
    6c7a:	1f 93       	push	r17
    6c7c:	cf 93       	push	r28
    6c7e:	df 93       	push	r29
    6c80:	cd b7       	in	r28, 0x3d	; 61
    6c82:	de b7       	in	r29, 0x3e	; 62
    6c84:	2e 97       	sbiw	r28, 0x0e	; 14
    6c86:	0f b6       	in	r0, 0x3f	; 63
    6c88:	f8 94       	cli
    6c8a:	de bf       	out	0x3e, r29	; 62
    6c8c:	0f be       	out	0x3f, r0	; 63
    6c8e:	cd bf       	out	0x3d, r28	; 61
    6c90:	0d 89       	ldd	r16, Y+21	; 0x15
    6c92:	1e 89       	ldd	r17, Y+22	; 0x16
    6c94:	86 e0       	ldi	r24, 0x06	; 6
    6c96:	8c 83       	std	Y+4, r24	; 0x04
    6c98:	1a 83       	std	Y+2, r17	; 0x02
    6c9a:	09 83       	std	Y+1, r16	; 0x01
    6c9c:	8f ef       	ldi	r24, 0xFF	; 255
    6c9e:	9f e7       	ldi	r25, 0x7F	; 127
    6ca0:	9e 83       	std	Y+6, r25	; 0x06
    6ca2:	8d 83       	std	Y+5, r24	; 0x05
    6ca4:	ae 01       	movw	r20, r28
    6ca6:	47 5e       	subi	r20, 0xE7	; 231
    6ca8:	5f 4f       	sbci	r21, 0xFF	; 255
    6caa:	6f 89       	ldd	r22, Y+23	; 0x17
    6cac:	78 8d       	ldd	r23, Y+24	; 0x18
    6cae:	ce 01       	movw	r24, r28
    6cb0:	01 96       	adiw	r24, 0x01	; 1
    6cb2:	fb da       	rcall	.-2570   	; 0x62aa <vfprintf>
    6cb4:	ef 81       	ldd	r30, Y+7	; 0x07
    6cb6:	f8 85       	ldd	r31, Y+8	; 0x08
    6cb8:	e0 0f       	add	r30, r16
    6cba:	f1 1f       	adc	r31, r17
    6cbc:	10 82       	st	Z, r1
    6cbe:	2e 96       	adiw	r28, 0x0e	; 14
    6cc0:	0f b6       	in	r0, 0x3f	; 63
    6cc2:	f8 94       	cli
    6cc4:	de bf       	out	0x3e, r29	; 62
    6cc6:	0f be       	out	0x3f, r0	; 63
    6cc8:	cd bf       	out	0x3d, r28	; 61
    6cca:	df 91       	pop	r29
    6ccc:	cf 91       	pop	r28
    6cce:	1f 91       	pop	r17
    6cd0:	0f 91       	pop	r16
    6cd2:	08 95       	ret

00006cd4 <__ultoa_invert>:
    6cd4:	fa 01       	movw	r30, r20
    6cd6:	aa 27       	eor	r26, r26
    6cd8:	28 30       	cpi	r18, 0x08	; 8
    6cda:	51 f1       	breq	.+84     	; 0x6d30 <__ultoa_invert+0x5c>
    6cdc:	20 31       	cpi	r18, 0x10	; 16
    6cde:	81 f1       	breq	.+96     	; 0x6d40 <__ultoa_invert+0x6c>
    6ce0:	e8 94       	clt
    6ce2:	6f 93       	push	r22
    6ce4:	6e 7f       	andi	r22, 0xFE	; 254
    6ce6:	6e 5f       	subi	r22, 0xFE	; 254
    6ce8:	7f 4f       	sbci	r23, 0xFF	; 255
    6cea:	8f 4f       	sbci	r24, 0xFF	; 255
    6cec:	9f 4f       	sbci	r25, 0xFF	; 255
    6cee:	af 4f       	sbci	r26, 0xFF	; 255
    6cf0:	b1 e0       	ldi	r27, 0x01	; 1
    6cf2:	3e d0       	rcall	.+124    	; 0x6d70 <__ultoa_invert+0x9c>
    6cf4:	b4 e0       	ldi	r27, 0x04	; 4
    6cf6:	3c d0       	rcall	.+120    	; 0x6d70 <__ultoa_invert+0x9c>
    6cf8:	67 0f       	add	r22, r23
    6cfa:	78 1f       	adc	r23, r24
    6cfc:	89 1f       	adc	r24, r25
    6cfe:	9a 1f       	adc	r25, r26
    6d00:	a1 1d       	adc	r26, r1
    6d02:	68 0f       	add	r22, r24
    6d04:	79 1f       	adc	r23, r25
    6d06:	8a 1f       	adc	r24, r26
    6d08:	91 1d       	adc	r25, r1
    6d0a:	a1 1d       	adc	r26, r1
    6d0c:	6a 0f       	add	r22, r26
    6d0e:	71 1d       	adc	r23, r1
    6d10:	81 1d       	adc	r24, r1
    6d12:	91 1d       	adc	r25, r1
    6d14:	a1 1d       	adc	r26, r1
    6d16:	20 d0       	rcall	.+64     	; 0x6d58 <__ultoa_invert+0x84>
    6d18:	09 f4       	brne	.+2      	; 0x6d1c <__ultoa_invert+0x48>
    6d1a:	68 94       	set
    6d1c:	3f 91       	pop	r19
    6d1e:	2a e0       	ldi	r18, 0x0A	; 10
    6d20:	26 9f       	mul	r18, r22
    6d22:	11 24       	eor	r1, r1
    6d24:	30 19       	sub	r19, r0
    6d26:	30 5d       	subi	r19, 0xD0	; 208
    6d28:	31 93       	st	Z+, r19
    6d2a:	de f6       	brtc	.-74     	; 0x6ce2 <__ultoa_invert+0xe>
    6d2c:	cf 01       	movw	r24, r30
    6d2e:	08 95       	ret
    6d30:	46 2f       	mov	r20, r22
    6d32:	47 70       	andi	r20, 0x07	; 7
    6d34:	40 5d       	subi	r20, 0xD0	; 208
    6d36:	41 93       	st	Z+, r20
    6d38:	b3 e0       	ldi	r27, 0x03	; 3
    6d3a:	0f d0       	rcall	.+30     	; 0x6d5a <__ultoa_invert+0x86>
    6d3c:	c9 f7       	brne	.-14     	; 0x6d30 <__ultoa_invert+0x5c>
    6d3e:	f6 cf       	rjmp	.-20     	; 0x6d2c <__ultoa_invert+0x58>
    6d40:	46 2f       	mov	r20, r22
    6d42:	4f 70       	andi	r20, 0x0F	; 15
    6d44:	40 5d       	subi	r20, 0xD0	; 208
    6d46:	4a 33       	cpi	r20, 0x3A	; 58
    6d48:	18 f0       	brcs	.+6      	; 0x6d50 <__ultoa_invert+0x7c>
    6d4a:	49 5d       	subi	r20, 0xD9	; 217
    6d4c:	31 fd       	sbrc	r19, 1
    6d4e:	40 52       	subi	r20, 0x20	; 32
    6d50:	41 93       	st	Z+, r20
    6d52:	02 d0       	rcall	.+4      	; 0x6d58 <__ultoa_invert+0x84>
    6d54:	a9 f7       	brne	.-22     	; 0x6d40 <__ultoa_invert+0x6c>
    6d56:	ea cf       	rjmp	.-44     	; 0x6d2c <__ultoa_invert+0x58>
    6d58:	b4 e0       	ldi	r27, 0x04	; 4
    6d5a:	a6 95       	lsr	r26
    6d5c:	97 95       	ror	r25
    6d5e:	87 95       	ror	r24
    6d60:	77 95       	ror	r23
    6d62:	67 95       	ror	r22
    6d64:	ba 95       	dec	r27
    6d66:	c9 f7       	brne	.-14     	; 0x6d5a <__ultoa_invert+0x86>
    6d68:	00 97       	sbiw	r24, 0x00	; 0
    6d6a:	61 05       	cpc	r22, r1
    6d6c:	71 05       	cpc	r23, r1
    6d6e:	08 95       	ret
    6d70:	9b 01       	movw	r18, r22
    6d72:	ac 01       	movw	r20, r24
    6d74:	0a 2e       	mov	r0, r26
    6d76:	06 94       	lsr	r0
    6d78:	57 95       	ror	r21
    6d7a:	47 95       	ror	r20
    6d7c:	37 95       	ror	r19
    6d7e:	27 95       	ror	r18
    6d80:	ba 95       	dec	r27
    6d82:	c9 f7       	brne	.-14     	; 0x6d76 <__ultoa_invert+0xa2>
    6d84:	62 0f       	add	r22, r18
    6d86:	73 1f       	adc	r23, r19
    6d88:	84 1f       	adc	r24, r20
    6d8a:	95 1f       	adc	r25, r21
    6d8c:	a0 1d       	adc	r26, r0
    6d8e:	08 95       	ret

00006d90 <__do_global_dtors>:
    6d90:	15 e0       	ldi	r17, 0x05	; 5
    6d92:	c0 ea       	ldi	r28, 0xA0	; 160
    6d94:	d5 e0       	ldi	r29, 0x05	; 5
    6d96:	00 e0       	ldi	r16, 0x00	; 0
    6d98:	05 c0       	rjmp	.+10     	; 0x6da4 <__do_global_dtors+0x14>
    6d9a:	22 97       	sbiw	r28, 0x02	; 2
    6d9c:	01 09       	sbc	r16, r1
    6d9e:	fe 01       	movw	r30, r28
    6da0:	0b bf       	out	0x3b, r16	; 59
    6da2:	46 de       	rcall	.-884    	; 0x6a30 <__tablejump_elpm__>
    6da4:	c2 3a       	cpi	r28, 0xA2	; 162
    6da6:	d1 07       	cpc	r29, r17
    6da8:	80 e0       	ldi	r24, 0x00	; 0
    6daa:	08 07       	cpc	r16, r24
    6dac:	b1 f7       	brne	.-20     	; 0x6d9a <__do_global_dtors+0xa>
    6dae:	f8 94       	cli

00006db0 <__stop_program>:
    6db0:	ff cf       	rjmp	.-2      	; 0x6db0 <__stop_program>
