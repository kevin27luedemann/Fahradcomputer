
FWCP_MK2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000022c  00800100  000073ae  00007442  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000073ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000d51  0080032c  0080032c  0000766e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000766e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000076cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004d8  00000000  00000000  0000770c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000b4a5  00000000  00000000  00007be4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001baf  00000000  00000000  00013089  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000040d8  00000000  00000000  00014c38  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000012e0  00000000  00000000  00018d10  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001600  00000000  00000000  00019ff0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00008110  00000000  00000000  0001b5f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004e8  00000000  00000000  00023700  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a3 c2       	rjmp	.+1350   	; 0x548 <__dtors_end>
       2:	00 00       	nop
       4:	cb c2       	rjmp	.+1430   	; 0x59c <__bad_interrupt>
       6:	00 00       	nop
       8:	c9 c2       	rjmp	.+1426   	; 0x59c <__bad_interrupt>
       a:	00 00       	nop
       c:	c7 c2       	rjmp	.+1422   	; 0x59c <__bad_interrupt>
       e:	00 00       	nop
      10:	c5 c2       	rjmp	.+1418   	; 0x59c <__bad_interrupt>
      12:	00 00       	nop
      14:	c3 c2       	rjmp	.+1414   	; 0x59c <__bad_interrupt>
      16:	00 00       	nop
      18:	c1 c2       	rjmp	.+1410   	; 0x59c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	bf c2       	rjmp	.+1406   	; 0x59c <__bad_interrupt>
      1e:	00 00       	nop
      20:	bd c2       	rjmp	.+1402   	; 0x59c <__bad_interrupt>
      22:	00 00       	nop
      24:	bb c2       	rjmp	.+1398   	; 0x59c <__bad_interrupt>
      26:	00 00       	nop
      28:	b9 c2       	rjmp	.+1394   	; 0x59c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0c 94 34 1a 	jmp	0x3468	; 0x3468 <__vector_11>
      30:	b5 c2       	rjmp	.+1386   	; 0x59c <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 50 1a 	jmp	0x34a0	; 0x34a0 <__vector_13>
      38:	b1 c2       	rjmp	.+1378   	; 0x59c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	af c2       	rjmp	.+1374   	; 0x59c <__bad_interrupt>
      3e:	00 00       	nop
      40:	ad c2       	rjmp	.+1370   	; 0x59c <__bad_interrupt>
      42:	00 00       	nop
      44:	ab c2       	rjmp	.+1366   	; 0x59c <__bad_interrupt>
      46:	00 00       	nop
      48:	a9 c2       	rjmp	.+1362   	; 0x59c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a7 c2       	rjmp	.+1358   	; 0x59c <__bad_interrupt>
      4e:	00 00       	nop
      50:	a5 c2       	rjmp	.+1354   	; 0x59c <__bad_interrupt>
      52:	00 00       	nop
      54:	a3 c2       	rjmp	.+1350   	; 0x59c <__bad_interrupt>
      56:	00 00       	nop
      58:	a1 c2       	rjmp	.+1346   	; 0x59c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	9f c2       	rjmp	.+1342   	; 0x59c <__bad_interrupt>
      5e:	00 00       	nop
      60:	9d c2       	rjmp	.+1338   	; 0x59c <__bad_interrupt>
      62:	00 00       	nop
      64:	9b c2       	rjmp	.+1334   	; 0x59c <__bad_interrupt>
      66:	00 00       	nop
      68:	99 c2       	rjmp	.+1330   	; 0x59c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	97 c2       	rjmp	.+1326   	; 0x59c <__bad_interrupt>
      6e:	00 00       	nop
      70:	95 c2       	rjmp	.+1322   	; 0x59c <__bad_interrupt>
      72:	00 00       	nop
      74:	93 c2       	rjmp	.+1318   	; 0x59c <__bad_interrupt>
      76:	00 00       	nop
      78:	91 c2       	rjmp	.+1314   	; 0x59c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	8f c2       	rjmp	.+1310   	; 0x59c <__bad_interrupt>
      7e:	00 00       	nop
      80:	8d c2       	rjmp	.+1306   	; 0x59c <__bad_interrupt>
      82:	00 00       	nop
      84:	8b c2       	rjmp	.+1302   	; 0x59c <__bad_interrupt>
      86:	00 00       	nop
      88:	89 c2       	rjmp	.+1298   	; 0x59c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	b1 17       	cp	r27, r17
      8e:	d7 17       	cp	r29, r23
      90:	fe 17       	cp	r31, r30
      92:	26 18       	sub	r2, r6
      94:	4d 18       	sub	r4, r13
      96:	77 18       	sub	r7, r7
      98:	a0 18       	sub	r10, r0
      9a:	ca 18       	sub	r12, r10
      9c:	41 19       	sub	r20, r1
      9e:	6b 19       	sub	r22, r11
      a0:	3a 1f       	adc	r19, r26
      a2:	42 1f       	adc	r20, r18
      a4:	50 1f       	adc	r21, r16
      a6:	56 1f       	adc	r21, r22
      a8:	5d 1f       	adc	r21, r29
      aa:	63 1f       	adc	r22, r19
      ac:	71 1f       	adc	r23, r17
      ae:	05 20       	and	r0, r5
      b0:	0b 20       	and	r0, r11
      b2:	11 20       	and	r1, r1
      b4:	17 20       	and	r1, r7
      b6:	1d 20       	and	r1, r13
      b8:	23 20       	and	r2, r3
      ba:	29 20       	and	r2, r9
      bc:	2f 20       	and	r2, r15
      be:	08 4a       	sbci	r16, 0xA8	; 168
      c0:	d7 3b       	cpi	r29, 0xB7	; 183
      c2:	3b ce       	rjmp	.-906    	; 0xfffffd3a <__eeprom_end+0xff7efd3a>
      c4:	01 6e       	ori	r16, 0xE1	; 225
      c6:	84 bc       	out	0x24, r8	; 36
      c8:	bf fd       	.word	0xfdbf	; ????
      ca:	c1 2f       	mov	r28, r17
      cc:	3d 6c       	ori	r19, 0xCD	; 205
      ce:	74 31       	cpi	r23, 0x14	; 20
      d0:	9a bd       	out	0x2a, r25	; 42
      d2:	56 83       	std	Z+6, r21	; 0x06
      d4:	3d da       	rcall	.-2950   	; 0xfffff550 <__eeprom_end+0xff7ef550>
      d6:	3d 00       	.word	0x003d	; ????
      d8:	c7 7f       	andi	r28, 0xF7	; 247
      da:	11 be       	out	0x31, r1	; 49
      dc:	d9 e4       	ldi	r29, 0x49	; 73
      de:	bb 4c       	sbci	r27, 0xCB	; 203
      e0:	3e 91       	ld	r19, -X
      e2:	6b aa       	std	Y+51, r6	; 0x33
      e4:	aa be       	out	0x3a, r10	; 58
      e6:	00 00       	nop
      e8:	00 80       	ld	r0, Z
      ea:	3f 05       	cpc	r19, r15
      ec:	a8 4c       	sbci	r26, 0xC8	; 200
      ee:	cd b2       	in	r12, 0x1d	; 29
      f0:	d4 4e       	sbci	r29, 0xE4	; 228
      f2:	b9 38       	cpi	r27, 0x89	; 137
      f4:	36 a9       	ldd	r19, Z+54	; 0x36
      f6:	02 0c       	add	r0, r2
      f8:	50 b9       	out	0x00, r21	; 0
      fa:	91 86       	std	Z+9, r9	; 0x09
      fc:	88 08       	sbc	r8, r8
      fe:	3c a6       	std	Y+44, r3	; 0x2c
     100:	aa aa       	std	Y+50, r10	; 0x32
     102:	2a be       	out	0x3a, r2	; 58
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	3f 06       	cpc	r3, r31
     10a:	64 ec       	ldi	r22, 0xC4	; 196
     10c:	1b 3c       	cpi	r17, 0xCB	; 203
     10e:	04 bc       	out	0x24, r0	; 36
     110:	16 3e       	cpi	r17, 0xE6	; 230
     112:	3b e5       	ldi	r19, 0x5B	; 91
     114:	b9 3c       	cpi	r27, 0xC9	; 201
     116:	c9 3c       	cpi	r28, 0xC9	; 201
     118:	37 c2       	rjmp	.+1134   	; 0x588 <__do_global_ctors+0xa>
     11a:	9e 5a       	subi	r25, 0xAE	; 174
     11c:	3d 66       	ori	r19, 0x6D	; 109
     11e:	04 98       	cbi	0x00, 4	; 0
     120:	08 3e       	cpi	r16, 0xE8	; 232
     122:	ea 69       	ori	r30, 0x9A	; 154
     124:	aa aa       	std	Y+50, r10	; 0x32
     126:	3e 00       	.word	0x003e	; ????
     128:	00 00       	nop
     12a:	80 3f       	cpi	r24, 0xF0	; 240

0000012c <__trampolines_end>:
     12c:	00 e0       	ldi	r16, 0x00	; 0
     12e:	f8 fc       	.word	0xfcf8	; ????
     130:	fe 1e       	adc	r15, r30
     132:	07 07       	cpc	r16, r23
     134:	07 07       	cpc	r16, r23
     136:	1e fe       	.word	0xfe1e	; ????
     138:	fc f8       	.word	0xf8fc	; ????
     13a:	f0 00       	.word	0x00f0	; ????
     13c:	00 07       	cpc	r16, r16
     13e:	0f 3f       	cpi	r16, 0xFF	; 255
     140:	3f 7c       	andi	r19, 0xCF	; 207
     142:	70 70       	andi	r23, 0x00	; 0
     144:	70 70       	andi	r23, 0x00	; 0
     146:	7c 3f       	cpi	r23, 0xFC	; 252
     148:	1f 1f       	adc	r17, r31
     14a:	07 00       	.word	0x0007	; ????
     14c:	00 00       	nop
     14e:	00 06       	cpc	r0, r16
     150:	07 07       	cpc	r16, r23
     152:	ff ff       	.word	0xffff	; ????
     154:	ff ff       	.word	0xffff	; ????
	...
     162:	7f 7f       	andi	r23, 0xFF	; 255
     164:	7f 7f       	andi	r23, 0xFF	; 255
     166:	00 00       	nop
     168:	00 00       	nop
     16a:	00 00       	nop
     16c:	00 38       	cpi	r16, 0x80	; 128
     16e:	3c 3e       	cpi	r19, 0xEC	; 236
     170:	3e 0f       	add	r19, r30
     172:	07 07       	cpc	r16, r23
     174:	07 cf       	rjmp	.-498    	; 0xffffff84 <__eeprom_end+0xff7eff84>
     176:	ff fe       	.word	0xfeff	; ????
     178:	fe 38       	cpi	r31, 0x8E	; 142
     17a:	00 00       	nop
     17c:	00 40       	sbci	r16, 0x00	; 0
     17e:	40 60       	ori	r20, 0x00	; 0
     180:	70 78       	andi	r23, 0x80	; 128
     182:	7c 7e       	andi	r23, 0xEC	; 236
     184:	7f 77       	andi	r23, 0x7F	; 127
     186:	73 71       	andi	r23, 0x13	; 19
     188:	70 70       	andi	r23, 0x00	; 0
     18a:	00 00       	nop
     18c:	00 18       	sub	r0, r0
     18e:	1c 1e       	adc	r1, r28
     190:	1e 0f       	add	r17, r30
     192:	c7 c7       	rjmp	.+3982   	; 0x1122 <_ZN7Display6analogEhhhh+0x350>
     194:	e7 ff       	sbrs	r30, 7
     196:	fe be       	out	0x3e, r15	; 62
     198:	9c 00       	.word	0x009c	; ????
     19a:	00 00       	nop
     19c:	00 0c       	add	r0, r0
     19e:	1c 3c       	cpi	r17, 0xCC	; 204
     1a0:	3c 78       	andi	r19, 0x8C	; 140
     1a2:	70 70       	andi	r23, 0x00	; 0
     1a4:	70 79       	andi	r23, 0x90	; 144
     1a6:	7f 3f       	cpi	r23, 0xFF	; 255
     1a8:	1f 0f       	add	r17, r31
     1aa:	00 00       	nop
     1ac:	00 00       	nop
     1ae:	80 c0       	rjmp	.+256    	; 0x2b0 <_ZL7font5x8+0x44>
     1b0:	e0 70       	andi	r30, 0x00	; 0
     1b2:	38 1c       	adc	r3, r8
     1b4:	1e ff       	.word	0xff1e	; ????
     1b6:	ff ff       	.word	0xffff	; ????
     1b8:	ff 00       	.word	0x00ff	; ????
     1ba:	00 00       	nop
     1bc:	06 07       	cpc	r16, r22
     1be:	07 07       	cpc	r16, r23
     1c0:	06 06       	cpc	r0, r22
     1c2:	06 06       	cpc	r0, r22
     1c4:	06 7f       	andi	r16, 0xF6	; 246
     1c6:	7f 7f       	andi	r23, 0xFF	; 255
     1c8:	7f 06       	cpc	r7, r31
     1ca:	06 00       	.word	0x0006	; ????
     1cc:	00 00       	nop
     1ce:	00 00       	nop
     1d0:	f0 ff       	sbrs	r31, 0
     1d2:	ff ff       	.word	0xffff	; ????
     1d4:	e7 e7       	ldi	r30, 0x77	; 119
     1d6:	e7 e7       	ldi	r30, 0x77	; 119
     1d8:	c7 87       	std	Z+15, r28	; 0x0f
     1da:	00 00       	nop
     1dc:	00 00       	nop
     1de:	38 78       	andi	r19, 0x88	; 136
     1e0:	71 70       	andi	r23, 0x01	; 1
     1e2:	70 70       	andi	r23, 0x00	; 0
     1e4:	70 70       	andi	r23, 0x00	; 0
     1e6:	39 3f       	cpi	r19, 0xF9	; 249
     1e8:	3f 1f       	adc	r19, r31
     1ea:	0f 00       	.word	0x000f	; ????
     1ec:	00 80       	ld	r0, Z
     1ee:	e0 f0       	brcs	.+56     	; 0x228 <__trampolines_end+0xfc>
     1f0:	f8 fc       	.word	0xfcf8	; ????
     1f2:	7f 7f       	andi	r23, 0xFF	; 255
     1f4:	6f 67       	ori	r22, 0x7F	; 127
     1f6:	e1 e1       	ldi	r30, 0x11	; 17
     1f8:	c0 80       	ld	r12, Z
     1fa:	00 00       	nop
     1fc:	00 0f       	add	r16, r16
     1fe:	1f 3f       	cpi	r17, 0xFF	; 255
     200:	3f 78       	andi	r19, 0x8F	; 143
     202:	70 70       	andi	r23, 0x00	; 0
     204:	70 70       	andi	r23, 0x00	; 0
     206:	78 3f       	cpi	r23, 0xF8	; 248
     208:	3f 1f       	adc	r19, r31
     20a:	0f 00       	.word	0x000f	; ????
     20c:	00 07       	cpc	r16, r16
     20e:	07 07       	cpc	r16, r23
     210:	07 07       	cpc	r16, r23
     212:	c7 e7       	ldi	r28, 0x77	; 119
     214:	f7 ff       	sbrs	r31, 7
     216:	7f 3f       	cpi	r23, 0xFF	; 255
     218:	1f 07       	cpc	r17, r31
     21a:	03 01       	movw	r0, r6
     21c:	00 20       	and	r0, r0
     21e:	38 7c       	andi	r19, 0xC8	; 200
     220:	7e 3f       	cpi	r23, 0xFE	; 254
     222:	0f 07       	cpc	r16, r31
     224:	03 00       	.word	0x0003	; ????
	...
     22e:	00 1c       	adc	r0, r0
     230:	be fe       	.word	0xfebe	; ????
     232:	ff e7       	ldi	r31, 0x7F	; 127
     234:	c3 c3       	rjmp	.+1926   	; 0x9bc <_ZN7Display9draw_lineEhhhf+0x10a>
     236:	e7 ff       	sbrs	r30, 7
     238:	fe be       	out	0x3e, r15	; 62
     23a:	1c 00       	.word	0x001c	; ????
     23c:	00 00       	nop
     23e:	0e 3f       	cpi	r16, 0xFE	; 254
     240:	3f 7f       	andi	r19, 0xFF	; 255
     242:	71 60       	ori	r23, 0x01	; 1
     244:	60 60       	ori	r22, 0x00	; 0
     246:	71 7f       	andi	r23, 0xF1	; 241
     248:	3f 3f       	cpi	r19, 0xFF	; 255
     24a:	0f 00       	.word	0x000f	; ????
     24c:	00 78       	andi	r16, 0x80	; 128
     24e:	fc fe       	.word	0xfefc	; ????
     250:	fe 8f       	std	Y+30, r31	; 0x1e
     252:	07 07       	cpc	r16, r23
     254:	07 07       	cpc	r16, r23
     256:	8f fe       	.word	0xfe8f	; ????
     258:	fe fc       	.word	0xfcfe	; ????
     25a:	f8 00       	.word	0x00f8	; ????
     25c:	00 00       	nop
     25e:	00 01       	movw	r0, r0
     260:	43 43       	sbci	r20, 0x33	; 51
     262:	73 7b       	andi	r23, 0xB3	; 179
     264:	7f 7f       	andi	r23, 0xFF	; 255
     266:	1f 0f       	add	r17, r31
     268:	07 03       	mulsu	r16, r23
	...

0000026c <_ZL7font5x8>:
     26c:	00 00 5f 00 00 00 07 00 07 00 14 7f 14 7f 14 24     .._............$
     27c:	2a 7f 2a 12 23 13 08 64 62 36 49 55 22 50 00 05     *.*.#..db6IU"P..
     28c:	03 00 00 00 1c 22 41 00 00 41 22 1c 00 14 08 3e     ....."A..A"....>
     29c:	08 14 08 08 3e 08 08 00 50 30 00 00 08 08 08 08     ....>...P0......
     2ac:	08 00 60 60 00 00 20 10 08 04 02 3e 51 49 45 3e     ..``.. ....>QIE>
     2bc:	00 42 7f 40 00 42 61 51 49 46 21 41 45 4b 31 18     .B.@.BaQIF!AEK1.
     2cc:	14 12 7f 10 27 45 45 45 39 3c 4a 49 49 30 01 71     ....'EEE9<JII0.q
     2dc:	09 05 03 36 49 49 49 36 06 49 49 29 1e 00 36 36     ...6III6.II)..66
     2ec:	00 00 00 56 36 00 00 08 14 22 41 00 14 14 14 14     ...V6...."A.....
     2fc:	14 00 41 22 14 08 02 01 51 09 06 32 49 79 41 3e     ..A"....Q..2IyA>
     30c:	7e 11 11 11 7e 7f 49 49 49 36 3e 41 41 41 22 7f     ~...~.III6>AAA".
     31c:	41 41 22 1c 7f 49 49 49 41 7f 09 09 09 01 3e 41     AA"..IIIA.....>A
     32c:	49 49 7a 7f 08 08 08 7f 00 41 7f 41 00 20 40 41     IIz......A.A. @A
     33c:	3f 01 7f 08 14 22 41 7f 40 40 40 40 7f 02 0c 02     ?...."A.@@@@....
     34c:	7f 7f 04 08 10 7f 3e 41 41 41 3e 7f 09 09 09 06     ......>AAA>.....
     35c:	3e 41 51 21 5e 7f 09 19 29 46 46 49 49 49 31 01     >AQ!^...)FFIII1.
     36c:	01 7f 01 01 3f 40 40 40 3f 1f 20 40 20 1f 3f 40     ....?@@@?. @ .?@
     37c:	38 40 3f 63 14 08 14 63 07 08 70 08 07 61 51 49     8@?c...c..p..aQI
     38c:	45 43 00 7f 41 41 00 02 04 08 10 20 00 41 41 7f     EC..AA..... .AA.
     39c:	00 04 02 01 02 04 40 40 40 40 40 00 01 02 04 00     ......@@@@@.....
     3ac:	20 54 54 54 78 7f 48 44 44 38 38 44 44 44 20 38      TTTx.HDD88DDD 8
     3bc:	44 44 48 7f 38 54 54 54 18 08 7e 09 01 02 0c 52     DDH.8TTT..~....R
     3cc:	52 52 3e 7f 08 04 04 78 00 44 7d 40 00 20 40 44     RR>....x.D}@. @D
     3dc:	3d 00 7f 10 28 44 00 00 41 7f 40 00 7c 04 18 04     =...(D..A.@.|...
     3ec:	78 7c 08 04 04 78 38 44 44 44 38 7c 14 14 14 08     x|...x8DDD8|....
     3fc:	08 14 14 18 7c 7c 08 04 04 08 48 54 54 54 20 04     ....||....HTTT .
     40c:	3f 44 40 20 3c 40 40 20 7c 1c 20 40 20 1c 3c 40     ?D@ <@@ |. @ .<@
     41c:	30 40 3c 44 28 10 28 44 0c 50 50 50 3c 44 64 54     0@<D(.(D.PPP<DdT
     42c:	4c 44 00 08 36 41 00 00 00 7f 00 00 00 41 36 08     LD..6A.......A6.
     43c:	00 10 08 08 10 08                                   ......

00000442 <__c.2179>:
     442:	6e 61 6e 00                                         nan.

00000446 <__c.2177>:
     446:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     456:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     466:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     476:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     486:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     496:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     4a6:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     4b6:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     4c6:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     4d6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     4e6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     4f6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     506:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     516:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     526:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     536:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000544 <__ctors_start>:
     544:	45 23       	and	r20, r21

00000546 <__ctors_end>:
     546:	77 23       	and	r23, r23

00000548 <__dtors_end>:
     548:	11 24       	eor	r1, r1
     54a:	1f be       	out	0x3f, r1	; 63
     54c:	cf ef       	ldi	r28, 0xFF	; 255
     54e:	d0 e4       	ldi	r29, 0x40	; 64
     550:	de bf       	out	0x3e, r29	; 62
     552:	cd bf       	out	0x3d, r28	; 61

00000554 <__do_copy_data>:
     554:	13 e0       	ldi	r17, 0x03	; 3
     556:	a0 e0       	ldi	r26, 0x00	; 0
     558:	b1 e0       	ldi	r27, 0x01	; 1
     55a:	ee ea       	ldi	r30, 0xAE	; 174
     55c:	f3 e7       	ldi	r31, 0x73	; 115
     55e:	00 e0       	ldi	r16, 0x00	; 0
     560:	0b bf       	out	0x3b, r16	; 59
     562:	02 c0       	rjmp	.+4      	; 0x568 <__do_copy_data+0x14>
     564:	07 90       	elpm	r0, Z+
     566:	0d 92       	st	X+, r0
     568:	ac 32       	cpi	r26, 0x2C	; 44
     56a:	b1 07       	cpc	r27, r17
     56c:	d9 f7       	brne	.-10     	; 0x564 <__do_copy_data+0x10>

0000056e <__do_clear_bss>:
     56e:	20 e1       	ldi	r18, 0x10	; 16
     570:	ac e2       	ldi	r26, 0x2C	; 44
     572:	b3 e0       	ldi	r27, 0x03	; 3
     574:	01 c0       	rjmp	.+2      	; 0x578 <.do_clear_bss_start>

00000576 <.do_clear_bss_loop>:
     576:	1d 92       	st	X+, r1

00000578 <.do_clear_bss_start>:
     578:	ad 37       	cpi	r26, 0x7D	; 125
     57a:	b2 07       	cpc	r27, r18
     57c:	e1 f7       	brne	.-8      	; 0x576 <.do_clear_bss_loop>

0000057e <__do_global_ctors>:
     57e:	12 e0       	ldi	r17, 0x02	; 2
     580:	c3 ea       	ldi	r28, 0xA3	; 163
     582:	d2 e0       	ldi	r29, 0x02	; 2
     584:	04 c0       	rjmp	.+8      	; 0x58e <__do_global_ctors+0x10>
     586:	21 97       	sbiw	r28, 0x01	; 1
     588:	fe 01       	movw	r30, r28
     58a:	0e 94 f4 37 	call	0x6fe8	; 0x6fe8 <__tablejump2__>
     58e:	c2 3a       	cpi	r28, 0xA2	; 162
     590:	d1 07       	cpc	r29, r17
     592:	c9 f7       	brne	.-14     	; 0x586 <__do_global_ctors+0x8>
     594:	0e 94 3c 23 	call	0x4678	; 0x4678 <main>
     598:	0c 94 cb 39 	jmp	0x7396	; 0x7396 <__do_global_dtors>

0000059c <__bad_interrupt>:
     59c:	31 cd       	rjmp	.-1438   	; 0x0 <__vectors>

0000059e <_ZN7DisplayD1Ev>:
	else{
		for(uint8_t i = 0; i < 7; i++){
			Displayframe[x+(y/8)*SSD1306_WIDTH+i] |= 0;
		}
	}
}
     59e:	9c 5f       	subi	r25, 0xFC	; 252
     5a0:	0c 94 86 26 	jmp	0x4d0c	; 0x4d0c <_ZN3I2CD1Ev>
     5a4:	08 95       	ret

000005a6 <_ZN7Display10clearFrameEv>:
     5a6:	fc 01       	movw	r30, r24
     5a8:	9c 5f       	subi	r25, 0xFC	; 252
     5aa:	11 92       	st	Z+, r1
     5ac:	e8 17       	cp	r30, r24
     5ae:	f9 07       	cpc	r31, r25
     5b0:	e1 f7       	brne	.-8      	; 0x5aa <_ZN7Display10clearFrameEv+0x4>
     5b2:	08 95       	ret

000005b4 <_ZN7Display15ssd1306_commandEh>:
     5b4:	1f 93       	push	r17
     5b6:	cf 93       	push	r28
     5b8:	df 93       	push	r29
     5ba:	16 2f       	mov	r17, r22
     5bc:	ec 01       	movw	r28, r24
     5be:	dc 5f       	subi	r29, 0xFC	; 252
     5c0:	ce 01       	movw	r24, r28
     5c2:	0e 94 87 26 	call	0x4d0e	; 0x4d0e <_ZN3I2C9twi_startEv>
     5c6:	68 e7       	ldi	r22, 0x78	; 120
     5c8:	ce 01       	movw	r24, r28
     5ca:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <_ZN3I2C9twi_writeEh>
     5ce:	60 e0       	ldi	r22, 0x00	; 0
     5d0:	ce 01       	movw	r24, r28
     5d2:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <_ZN3I2C9twi_writeEh>
     5d6:	61 2f       	mov	r22, r17
     5d8:	ce 01       	movw	r24, r28
     5da:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <_ZN3I2C9twi_writeEh>
     5de:	ce 01       	movw	r24, r28
     5e0:	0e 94 8b 26 	call	0x4d16	; 0x4d16 <_ZN3I2C8twi_stopEv>
     5e4:	df 91       	pop	r29
     5e6:	cf 91       	pop	r28
     5e8:	1f 91       	pop	r17
     5ea:	08 95       	ret

000005ec <_ZN7Display17InitializeDisplayEv>:
     5ec:	cf 93       	push	r28
     5ee:	df 93       	push	r29
     5f0:	ec 01       	movw	r28, r24
     5f2:	6e ea       	ldi	r22, 0xAE	; 174
     5f4:	df df       	rcall	.-66     	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     5f6:	65 ed       	ldi	r22, 0xD5	; 213
     5f8:	ce 01       	movw	r24, r28
     5fa:	dc df       	rcall	.-72     	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     5fc:	60 e8       	ldi	r22, 0x80	; 128
     5fe:	ce 01       	movw	r24, r28
     600:	d9 df       	rcall	.-78     	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     602:	68 ea       	ldi	r22, 0xA8	; 168
     604:	ce 01       	movw	r24, r28
     606:	d6 df       	rcall	.-84     	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     608:	6f e3       	ldi	r22, 0x3F	; 63
     60a:	ce 01       	movw	r24, r28
     60c:	d3 df       	rcall	.-90     	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     60e:	63 ed       	ldi	r22, 0xD3	; 211
     610:	ce 01       	movw	r24, r28
     612:	d0 df       	rcall	.-96     	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     614:	60 e0       	ldi	r22, 0x00	; 0
     616:	ce 01       	movw	r24, r28
     618:	cd df       	rcall	.-102    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     61a:	60 e4       	ldi	r22, 0x40	; 64
     61c:	ce 01       	movw	r24, r28
     61e:	ca df       	rcall	.-108    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     620:	6d e8       	ldi	r22, 0x8D	; 141
     622:	ce 01       	movw	r24, r28
     624:	c7 df       	rcall	.-114    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     626:	64 e1       	ldi	r22, 0x14	; 20
     628:	ce 01       	movw	r24, r28
     62a:	c4 df       	rcall	.-120    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     62c:	60 e2       	ldi	r22, 0x20	; 32
     62e:	ce 01       	movw	r24, r28
     630:	c1 df       	rcall	.-126    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     632:	60 e0       	ldi	r22, 0x00	; 0
     634:	ce 01       	movw	r24, r28
     636:	be df       	rcall	.-132    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     638:	61 ea       	ldi	r22, 0xA1	; 161
     63a:	ce 01       	movw	r24, r28
     63c:	bb df       	rcall	.-138    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     63e:	68 ec       	ldi	r22, 0xC8	; 200
     640:	ce 01       	movw	r24, r28
     642:	b8 df       	rcall	.-144    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     644:	6a ed       	ldi	r22, 0xDA	; 218
     646:	ce 01       	movw	r24, r28
     648:	b5 df       	rcall	.-150    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     64a:	62 e1       	ldi	r22, 0x12	; 18
     64c:	ce 01       	movw	r24, r28
     64e:	b2 df       	rcall	.-156    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     650:	61 e8       	ldi	r22, 0x81	; 129
     652:	ce 01       	movw	r24, r28
     654:	af df       	rcall	.-162    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     656:	6f ec       	ldi	r22, 0xCF	; 207
     658:	ce 01       	movw	r24, r28
     65a:	ac df       	rcall	.-168    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     65c:	69 ed       	ldi	r22, 0xD9	; 217
     65e:	ce 01       	movw	r24, r28
     660:	a9 df       	rcall	.-174    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     662:	61 ef       	ldi	r22, 0xF1	; 241
     664:	ce 01       	movw	r24, r28
     666:	a6 df       	rcall	.-180    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     668:	6b ed       	ldi	r22, 0xDB	; 219
     66a:	ce 01       	movw	r24, r28
     66c:	a3 df       	rcall	.-186    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     66e:	60 e4       	ldi	r22, 0x40	; 64
     670:	ce 01       	movw	r24, r28
     672:	a0 df       	rcall	.-192    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     674:	64 ea       	ldi	r22, 0xA4	; 164
     676:	ce 01       	movw	r24, r28
     678:	9d df       	rcall	.-198    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     67a:	66 ea       	ldi	r22, 0xA6	; 166
     67c:	ce 01       	movw	r24, r28
     67e:	9a df       	rcall	.-204    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     680:	6f ea       	ldi	r22, 0xAF	; 175
     682:	ce 01       	movw	r24, r28
     684:	97 df       	rcall	.-210    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     686:	df 91       	pop	r29
     688:	cf 91       	pop	r28
     68a:	08 95       	ret

0000068c <_ZN7DisplayC1Ev>:
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	ec 01       	movw	r28, r24
     692:	9c 5f       	subi	r25, 0xFC	; 252
     694:	0e 94 82 26 	call	0x4d04	; 0x4d04 <_ZN3I2CC1Ev>
     698:	ce 01       	movw	r24, r28
     69a:	a8 df       	rcall	.-176    	; 0x5ec <_ZN7Display17InitializeDisplayEv>
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	08 95       	ret

000006a2 <_ZN7Display6invertEh>:
     6a2:	66 23       	and	r22, r22
     6a4:	19 f0       	breq	.+6      	; 0x6ac <_ZN7Display6invertEh+0xa>
     6a6:	67 ea       	ldi	r22, 0xA7	; 167
     6a8:	85 cf       	rjmp	.-246    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     6aa:	08 95       	ret
     6ac:	66 ea       	ldi	r22, 0xA6	; 166
     6ae:	82 cf       	rjmp	.-252    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     6b0:	08 95       	ret

000006b2 <_ZN7Display9sendFrameEv>:
     6b2:	ef 92       	push	r14
     6b4:	ff 92       	push	r15
     6b6:	0f 93       	push	r16
     6b8:	1f 93       	push	r17
     6ba:	cf 93       	push	r28
     6bc:	df 93       	push	r29
     6be:	ec 01       	movw	r28, r24
     6c0:	61 e2       	ldi	r22, 0x21	; 33
     6c2:	78 df       	rcall	.-272    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     6c4:	60 e0       	ldi	r22, 0x00	; 0
     6c6:	ce 01       	movw	r24, r28
     6c8:	75 df       	rcall	.-278    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     6ca:	6f e7       	ldi	r22, 0x7F	; 127
     6cc:	ce 01       	movw	r24, r28
     6ce:	72 df       	rcall	.-284    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     6d0:	62 e2       	ldi	r22, 0x22	; 34
     6d2:	ce 01       	movw	r24, r28
     6d4:	6f df       	rcall	.-290    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     6d6:	60 e0       	ldi	r22, 0x00	; 0
     6d8:	ce 01       	movw	r24, r28
     6da:	6c df       	rcall	.-296    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     6dc:	67 e0       	ldi	r22, 0x07	; 7
     6de:	ce 01       	movw	r24, r28
     6e0:	69 df       	rcall	.-302    	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
     6e2:	8e 01       	movw	r16, r28
     6e4:	1c 5f       	subi	r17, 0xFC	; 252
     6e6:	c8 01       	movw	r24, r16
     6e8:	0e 94 87 26 	call	0x4d0e	; 0x4d0e <_ZN3I2C9twi_startEv>
     6ec:	68 e7       	ldi	r22, 0x78	; 120
     6ee:	c8 01       	movw	r24, r16
     6f0:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <_ZN3I2C9twi_writeEh>
     6f4:	60 e4       	ldi	r22, 0x40	; 64
     6f6:	c8 01       	movw	r24, r16
     6f8:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <_ZN3I2C9twi_writeEh>
     6fc:	78 01       	movw	r14, r16
     6fe:	69 91       	ld	r22, Y+
     700:	c8 01       	movw	r24, r16
     702:	0e 94 8f 26 	call	0x4d1e	; 0x4d1e <_ZN3I2C9twi_writeEh>
     706:	ce 15       	cp	r28, r14
     708:	df 05       	cpc	r29, r15
     70a:	c9 f7       	brne	.-14     	; 0x6fe <_ZN7Display9sendFrameEv+0x4c>
     70c:	c8 01       	movw	r24, r16
     70e:	0e 94 8b 26 	call	0x4d16	; 0x4d16 <_ZN3I2C8twi_stopEv>
     712:	df 91       	pop	r29
     714:	cf 91       	pop	r28
     716:	1f 91       	pop	r17
     718:	0f 91       	pop	r16
     71a:	ff 90       	pop	r15
     71c:	ef 90       	pop	r14
     71e:	08 95       	ret

00000720 <_ZN7Display9drawPixelEhhh>:
     720:	66 23       	and	r22, r22
     722:	ac f1       	brlt	.+106    	; 0x78e <_ZN7Display9drawPixelEhhh+0x6e>
     724:	40 34       	cpi	r20, 0x40	; 64
     726:	98 f5       	brcc	.+102    	; 0x78e <_ZN7Display9drawPixelEhhh+0x6e>
     728:	21 11       	cpse	r18, r1
     72a:	19 c0       	rjmp	.+50     	; 0x75e <_ZN7Display9drawPixelEhhh+0x3e>
     72c:	24 2f       	mov	r18, r20
     72e:	26 95       	lsr	r18
     730:	26 95       	lsr	r18
     732:	26 95       	lsr	r18
     734:	50 e8       	ldi	r21, 0x80	; 128
     736:	25 9f       	mul	r18, r21
     738:	90 01       	movw	r18, r0
     73a:	11 24       	eor	r1, r1
     73c:	26 0f       	add	r18, r22
     73e:	31 1d       	adc	r19, r1
     740:	fc 01       	movw	r30, r24
     742:	e2 0f       	add	r30, r18
     744:	f3 1f       	adc	r31, r19
     746:	47 70       	andi	r20, 0x07	; 7
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	02 c0       	rjmp	.+4      	; 0x752 <_ZN7Display9drawPixelEhhh+0x32>
     74e:	88 0f       	add	r24, r24
     750:	99 1f       	adc	r25, r25
     752:	4a 95       	dec	r20
     754:	e2 f7       	brpl	.-8      	; 0x74e <_ZN7Display9drawPixelEhhh+0x2e>
     756:	90 81       	ld	r25, Z
     758:	89 2b       	or	r24, r25
     75a:	80 83       	st	Z, r24
     75c:	08 95       	ret
     75e:	24 2f       	mov	r18, r20
     760:	26 95       	lsr	r18
     762:	26 95       	lsr	r18
     764:	26 95       	lsr	r18
     766:	30 e8       	ldi	r19, 0x80	; 128
     768:	23 9f       	mul	r18, r19
     76a:	f0 01       	movw	r30, r0
     76c:	11 24       	eor	r1, r1
     76e:	e6 0f       	add	r30, r22
     770:	f1 1d       	adc	r31, r1
     772:	e8 0f       	add	r30, r24
     774:	f9 1f       	adc	r31, r25
     776:	47 70       	andi	r20, 0x07	; 7
     778:	81 e0       	ldi	r24, 0x01	; 1
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	02 c0       	rjmp	.+4      	; 0x782 <_ZN7Display9drawPixelEhhh+0x62>
     77e:	88 0f       	add	r24, r24
     780:	99 1f       	adc	r25, r25
     782:	4a 95       	dec	r20
     784:	e2 f7       	brpl	.-8      	; 0x77e <_ZN7Display9drawPixelEhhh+0x5e>
     786:	80 95       	com	r24
     788:	90 81       	ld	r25, Z
     78a:	89 23       	and	r24, r25
     78c:	80 83       	st	Z, r24
     78e:	08 95       	ret

00000790 <_ZN7Display9drawVLineEhhh>:
     790:	ff 92       	push	r15
     792:	0f 93       	push	r16
     794:	1f 93       	push	r17
     796:	cf 93       	push	r28
     798:	df 93       	push	r29
     79a:	22 23       	and	r18, r18
     79c:	69 f0       	breq	.+26     	; 0x7b8 <_ZN7Display9drawVLineEhhh+0x28>
     79e:	c4 2f       	mov	r28, r20
     7a0:	f6 2e       	mov	r15, r22
     7a2:	8c 01       	movw	r16, r24
     7a4:	d2 2f       	mov	r29, r18
     7a6:	d4 0f       	add	r29, r20
     7a8:	20 e0       	ldi	r18, 0x00	; 0
     7aa:	4c 2f       	mov	r20, r28
     7ac:	6f 2d       	mov	r22, r15
     7ae:	c8 01       	movw	r24, r16
     7b0:	b7 df       	rcall	.-146    	; 0x720 <_ZN7Display9drawPixelEhhh>
     7b2:	cf 5f       	subi	r28, 0xFF	; 255
     7b4:	cd 13       	cpse	r28, r29
     7b6:	f8 cf       	rjmp	.-16     	; 0x7a8 <_ZN7Display9drawVLineEhhh+0x18>
     7b8:	df 91       	pop	r29
     7ba:	cf 91       	pop	r28
     7bc:	1f 91       	pop	r17
     7be:	0f 91       	pop	r16
     7c0:	ff 90       	pop	r15
     7c2:	08 95       	ret

000007c4 <_ZN7Display9drawHLineEhhh>:
     7c4:	ff 92       	push	r15
     7c6:	0f 93       	push	r16
     7c8:	1f 93       	push	r17
     7ca:	cf 93       	push	r28
     7cc:	df 93       	push	r29
     7ce:	22 23       	and	r18, r18
     7d0:	69 f0       	breq	.+26     	; 0x7ec <_ZN7Display9drawHLineEhhh+0x28>
     7d2:	f4 2e       	mov	r15, r20
     7d4:	c6 2f       	mov	r28, r22
     7d6:	8c 01       	movw	r16, r24
     7d8:	d2 2f       	mov	r29, r18
     7da:	d6 0f       	add	r29, r22
     7dc:	20 e0       	ldi	r18, 0x00	; 0
     7de:	4f 2d       	mov	r20, r15
     7e0:	6c 2f       	mov	r22, r28
     7e2:	c8 01       	movw	r24, r16
     7e4:	9d df       	rcall	.-198    	; 0x720 <_ZN7Display9drawPixelEhhh>
     7e6:	cf 5f       	subi	r28, 0xFF	; 255
     7e8:	cd 13       	cpse	r28, r29
     7ea:	f8 cf       	rjmp	.-16     	; 0x7dc <_ZN7Display9drawHLineEhhh+0x18>
     7ec:	df 91       	pop	r29
     7ee:	cf 91       	pop	r28
     7f0:	1f 91       	pop	r17
     7f2:	0f 91       	pop	r16
     7f4:	ff 90       	pop	r15
     7f6:	08 95       	ret

000007f8 <_ZN7Display13drawRectangleEhhhhh>:
     7f8:	5f 92       	push	r5
     7fa:	6f 92       	push	r6
     7fc:	7f 92       	push	r7
     7fe:	8f 92       	push	r8
     800:	9f 92       	push	r9
     802:	af 92       	push	r10
     804:	bf 92       	push	r11
     806:	cf 92       	push	r12
     808:	df 92       	push	r13
     80a:	ef 92       	push	r14
     80c:	ff 92       	push	r15
     80e:	0f 93       	push	r16
     810:	1f 93       	push	r17
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	6c 01       	movw	r12, r24
     818:	76 2e       	mov	r7, r22
     81a:	84 2e       	mov	r8, r20
     81c:	c2 2f       	mov	r28, r18
     81e:	a2 2e       	mov	r10, r18
     820:	a6 1a       	sub	r10, r22
     822:	a3 94       	inc	r10
     824:	d0 2f       	mov	r29, r16
     826:	d4 1b       	sub	r29, r20
     828:	ee 20       	and	r14, r14
     82a:	29 f0       	breq	.+10     	; 0x836 <_ZN7Display13drawRectangleEhhhhh+0x3e>
     82c:	b1 2c       	mov	r11, r1
     82e:	1a 14       	cp	r1, r10
     830:	1b 04       	cpc	r1, r11
     832:	24 f1       	brlt	.+72     	; 0x87c <_ZN7Display13drawRectangleEhhhhh+0x84>
     834:	2e c0       	rjmp	.+92     	; 0x892 <_ZN7Display13drawRectangleEhhhhh+0x9a>
     836:	2a 2d       	mov	r18, r10
     838:	c5 df       	rcall	.-118    	; 0x7c4 <_ZN7Display9drawHLineEhhh>
     83a:	2a 2d       	mov	r18, r10
     83c:	40 2f       	mov	r20, r16
     83e:	67 2d       	mov	r22, r7
     840:	c6 01       	movw	r24, r12
     842:	c0 df       	rcall	.-128    	; 0x7c4 <_ZN7Display9drawHLineEhhh>
     844:	2d 2f       	mov	r18, r29
     846:	48 2d       	mov	r20, r8
     848:	67 2d       	mov	r22, r7
     84a:	c6 01       	movw	r24, r12
     84c:	a1 df       	rcall	.-190    	; 0x790 <_ZN7Display9drawVLineEhhh>
     84e:	2d 2f       	mov	r18, r29
     850:	48 2d       	mov	r20, r8
     852:	6c 2f       	mov	r22, r28
     854:	c6 01       	movw	r24, r12
     856:	9c df       	rcall	.-200    	; 0x790 <_ZN7Display9drawVLineEhhh>
     858:	1c c0       	rjmp	.+56     	; 0x892 <_ZN7Display13drawRectangleEhhhhh+0x9a>
     85a:	4c 2f       	mov	r20, r28
     85c:	48 0d       	add	r20, r8
     85e:	20 e0       	ldi	r18, 0x00	; 0
     860:	69 2d       	mov	r22, r9
     862:	c6 01       	movw	r24, r12
     864:	5d df       	rcall	.-326    	; 0x720 <_ZN7Display9drawPixelEhhh>
     866:	21 96       	adiw	r28, 0x01	; 1
     868:	0c 17       	cp	r16, r28
     86a:	1d 07       	cpc	r17, r29
     86c:	b4 f7       	brge	.-20     	; 0x85a <_ZN7Display13drawRectangleEhhhhh+0x62>
     86e:	8f ef       	ldi	r24, 0xFF	; 255
     870:	e8 1a       	sub	r14, r24
     872:	f8 0a       	sbc	r15, r24
     874:	ea 14       	cp	r14, r10
     876:	fb 04       	cpc	r15, r11
     878:	3c f0       	brlt	.+14     	; 0x888 <_ZN7Display13drawRectangleEhhhhh+0x90>
     87a:	0b c0       	rjmp	.+22     	; 0x892 <_ZN7Display13drawRectangleEhhhhh+0x9a>
     87c:	e1 2c       	mov	r14, r1
     87e:	f1 2c       	mov	r15, r1
     880:	0d 2f       	mov	r16, r29
     882:	10 e0       	ldi	r17, 0x00	; 0
     884:	51 2c       	mov	r5, r1
     886:	61 2c       	mov	r6, r1
     888:	c5 2d       	mov	r28, r5
     88a:	d6 2d       	mov	r29, r6
     88c:	97 2c       	mov	r9, r7
     88e:	9e 0c       	add	r9, r14
     890:	e4 cf       	rjmp	.-56     	; 0x85a <_ZN7Display13drawRectangleEhhhhh+0x62>
     892:	df 91       	pop	r29
     894:	cf 91       	pop	r28
     896:	1f 91       	pop	r17
     898:	0f 91       	pop	r16
     89a:	ff 90       	pop	r15
     89c:	ef 90       	pop	r14
     89e:	df 90       	pop	r13
     8a0:	cf 90       	pop	r12
     8a2:	bf 90       	pop	r11
     8a4:	af 90       	pop	r10
     8a6:	9f 90       	pop	r9
     8a8:	8f 90       	pop	r8
     8aa:	7f 90       	pop	r7
     8ac:	6f 90       	pop	r6
     8ae:	5f 90       	pop	r5
     8b0:	08 95       	ret

000008b2 <_ZN7Display9draw_lineEhhhf>:
     8b2:	3f 92       	push	r3
     8b4:	4f 92       	push	r4
     8b6:	5f 92       	push	r5
     8b8:	6f 92       	push	r6
     8ba:	7f 92       	push	r7
     8bc:	8f 92       	push	r8
     8be:	9f 92       	push	r9
     8c0:	af 92       	push	r10
     8c2:	bf 92       	push	r11
     8c4:	cf 92       	push	r12
     8c6:	df 92       	push	r13
     8c8:	ef 92       	push	r14
     8ca:	ff 92       	push	r15
     8cc:	0f 93       	push	r16
     8ce:	1f 93       	push	r17
     8d0:	cf 93       	push	r28
     8d2:	df 93       	push	r29
     8d4:	cd b7       	in	r28, 0x3d	; 61
     8d6:	de b7       	in	r29, 0x3e	; 62
     8d8:	2c 97       	sbiw	r28, 0x0c	; 12
     8da:	0f b6       	in	r0, 0x3f	; 63
     8dc:	f8 94       	cli
     8de:	de bf       	out	0x3e, r29	; 62
     8e0:	0f be       	out	0x3f, r0	; 63
     8e2:	cd bf       	out	0x3d, r28	; 61
     8e4:	22 23       	and	r18, r18
     8e6:	09 f4       	brne	.+2      	; 0x8ea <_ZN7Display9draw_lineEhhhf+0x38>
     8e8:	70 c0       	rjmp	.+224    	; 0x9ca <_ZN7Display9draw_lineEhhhf+0x118>
     8ea:	47 01       	movw	r8, r14
     8ec:	58 01       	movw	r10, r16
     8ee:	02 2f       	mov	r16, r18
     8f0:	44 2e       	mov	r4, r20
     8f2:	f6 2e       	mov	r15, r22
     8f4:	9a 87       	std	Y+10, r25	; 0x0a
     8f6:	89 87       	std	Y+9, r24	; 0x09
     8f8:	c5 01       	movw	r24, r10
     8fa:	b4 01       	movw	r22, r8
     8fc:	0e 94 78 31 	call	0x62f0	; 0x62f0 <cos>
     900:	69 83       	std	Y+1, r22	; 0x01
     902:	7a 83       	std	Y+2, r23	; 0x02
     904:	8b 83       	std	Y+3, r24	; 0x03
     906:	9c 83       	std	Y+4, r25	; 0x04
     908:	c5 01       	movw	r24, r10
     90a:	b4 01       	movw	r22, r8
     90c:	0e 94 92 33 	call	0x6724	; 0x6724 <sin>
     910:	6d 83       	std	Y+5, r22	; 0x05
     912:	7e 83       	std	Y+6, r23	; 0x06
     914:	8f 83       	std	Y+7, r24	; 0x07
     916:	98 87       	std	Y+8, r25	; 0x08
     918:	01 50       	subi	r16, 0x01	; 1
     91a:	10 e0       	ldi	r17, 0x00	; 0
     91c:	0f 5f       	subi	r16, 0xFF	; 255
     91e:	1f 4f       	sbci	r17, 0xFF	; 255
     920:	c1 2c       	mov	r12, r1
     922:	d1 2c       	mov	r13, r1
     924:	51 2c       	mov	r5, r1
     926:	61 2c       	mov	r6, r1
     928:	71 2c       	mov	r7, r1
     92a:	8f 2c       	mov	r8, r15
     92c:	91 2c       	mov	r9, r1
     92e:	a1 2c       	mov	r10, r1
     930:	b1 2c       	mov	r11, r1
     932:	dc 86       	std	Y+12, r13	; 0x0c
     934:	cb 86       	std	Y+11, r12	; 0x0b
     936:	2b 85       	ldd	r18, Y+11	; 0x0b
     938:	3c 85       	ldd	r19, Y+12	; 0x0c
     93a:	b9 01       	movw	r22, r18
     93c:	33 0f       	add	r19, r19
     93e:	88 0b       	sbc	r24, r24
     940:	99 0b       	sbc	r25, r25
     942:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     946:	2d 81       	ldd	r18, Y+5	; 0x05
     948:	3e 81       	ldd	r19, Y+6	; 0x06
     94a:	4f 81       	ldd	r20, Y+7	; 0x07
     94c:	58 85       	ldd	r21, Y+8	; 0x08
     94e:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     952:	6b 01       	movw	r12, r22
     954:	7c 01       	movw	r14, r24
     956:	c3 01       	movw	r24, r6
     958:	b2 01       	movw	r22, r4
     95a:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     95e:	9b 01       	movw	r18, r22
     960:	ac 01       	movw	r20, r24
     962:	c7 01       	movw	r24, r14
     964:	b6 01       	movw	r22, r12
     966:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
     96a:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
     96e:	36 2e       	mov	r3, r22
     970:	6b 85       	ldd	r22, Y+11	; 0x0b
     972:	7c 85       	ldd	r23, Y+12	; 0x0c
     974:	71 95       	neg	r23
     976:	61 95       	neg	r22
     978:	71 09       	sbc	r23, r1
     97a:	07 2e       	mov	r0, r23
     97c:	00 0c       	add	r0, r0
     97e:	88 0b       	sbc	r24, r24
     980:	99 0b       	sbc	r25, r25
     982:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     986:	29 81       	ldd	r18, Y+1	; 0x01
     988:	3a 81       	ldd	r19, Y+2	; 0x02
     98a:	4b 81       	ldd	r20, Y+3	; 0x03
     98c:	5c 81       	ldd	r21, Y+4	; 0x04
     98e:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     992:	6b 01       	movw	r12, r22
     994:	7c 01       	movw	r14, r24
     996:	c5 01       	movw	r24, r10
     998:	b4 01       	movw	r22, r8
     99a:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     99e:	9b 01       	movw	r18, r22
     9a0:	ac 01       	movw	r20, r24
     9a2:	c7 01       	movw	r24, r14
     9a4:	b6 01       	movw	r22, r12
     9a6:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
     9aa:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	43 2d       	mov	r20, r3
     9b2:	89 85       	ldd	r24, Y+9	; 0x09
     9b4:	9a 85       	ldd	r25, Y+10	; 0x0a
     9b6:	b4 de       	rcall	.-664    	; 0x720 <_ZN7Display9drawPixelEhhh>
     9b8:	8b 85       	ldd	r24, Y+11	; 0x0b
     9ba:	9c 85       	ldd	r25, Y+12	; 0x0c
     9bc:	01 96       	adiw	r24, 0x01	; 1
     9be:	9c 87       	std	Y+12, r25	; 0x0c
     9c0:	8b 87       	std	Y+11, r24	; 0x0b
     9c2:	80 17       	cp	r24, r16
     9c4:	91 07       	cpc	r25, r17
     9c6:	09 f0       	breq	.+2      	; 0x9ca <_ZN7Display9draw_lineEhhhf+0x118>
     9c8:	b6 cf       	rjmp	.-148    	; 0x936 <_ZN7Display9draw_lineEhhhf+0x84>
     9ca:	2c 96       	adiw	r28, 0x0c	; 12
     9cc:	0f b6       	in	r0, 0x3f	; 63
     9ce:	f8 94       	cli
     9d0:	de bf       	out	0x3e, r29	; 62
     9d2:	0f be       	out	0x3f, r0	; 63
     9d4:	cd bf       	out	0x3d, r28	; 61
     9d6:	df 91       	pop	r29
     9d8:	cf 91       	pop	r28
     9da:	1f 91       	pop	r17
     9dc:	0f 91       	pop	r16
     9de:	ff 90       	pop	r15
     9e0:	ef 90       	pop	r14
     9e2:	df 90       	pop	r13
     9e4:	cf 90       	pop	r12
     9e6:	bf 90       	pop	r11
     9e8:	af 90       	pop	r10
     9ea:	9f 90       	pop	r9
     9ec:	8f 90       	pop	r8
     9ee:	7f 90       	pop	r7
     9f0:	6f 90       	pop	r6
     9f2:	5f 90       	pop	r5
     9f4:	4f 90       	pop	r4
     9f6:	3f 90       	pop	r3
     9f8:	08 95       	ret

000009fa <_ZN7Display13draw_triangleEhhhff>:
     9fa:	2f 92       	push	r2
     9fc:	3f 92       	push	r3
     9fe:	4f 92       	push	r4
     a00:	5f 92       	push	r5
     a02:	6f 92       	push	r6
     a04:	7f 92       	push	r7
     a06:	8f 92       	push	r8
     a08:	9f 92       	push	r9
     a0a:	af 92       	push	r10
     a0c:	bf 92       	push	r11
     a0e:	cf 92       	push	r12
     a10:	df 92       	push	r13
     a12:	ef 92       	push	r14
     a14:	ff 92       	push	r15
     a16:	0f 93       	push	r16
     a18:	1f 93       	push	r17
     a1a:	cf 93       	push	r28
     a1c:	df 93       	push	r29
     a1e:	cd b7       	in	r28, 0x3d	; 61
     a20:	de b7       	in	r29, 0x3e	; 62
     a22:	2f 97       	sbiw	r28, 0x0f	; 15
     a24:	0f b6       	in	r0, 0x3f	; 63
     a26:	f8 94       	cli
     a28:	de bf       	out	0x3e, r29	; 62
     a2a:	0f be       	out	0x3f, r0	; 63
     a2c:	cd bf       	out	0x3d, r28	; 61
     a2e:	9e 83       	std	Y+6, r25	; 0x06
     a30:	8d 83       	std	Y+5, r24	; 0x05
     a32:	6f 87       	std	Y+15, r22	; 0x0f
     a34:	34 2e       	mov	r3, r20
     a36:	72 2e       	mov	r7, r18
     a38:	e9 82       	std	Y+1, r14	; 0x01
     a3a:	fa 82       	std	Y+2, r15	; 0x02
     a3c:	0b 83       	std	Y+3, r16	; 0x03
     a3e:	1c 83       	std	Y+4, r17	; 0x04
     a40:	c6 01       	movw	r24, r12
     a42:	b5 01       	movw	r22, r10
     a44:	25 e3       	ldi	r18, 0x35	; 53
     a46:	3a ef       	ldi	r19, 0xFA	; 250
     a48:	4e e8       	ldi	r20, 0x8E	; 142
     a4a:	5c e3       	ldi	r21, 0x3C	; 60
     a4c:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     a50:	4b 01       	movw	r8, r22
     a52:	5c 01       	movw	r10, r24
     a54:	25 e3       	ldi	r18, 0x35	; 53
     a56:	3a ef       	ldi	r19, 0xFA	; 250
     a58:	4e e8       	ldi	r20, 0x8E	; 142
     a5a:	5c e3       	ldi	r21, 0x3C	; 60
     a5c:	c8 01       	movw	r24, r16
     a5e:	b7 01       	movw	r22, r14
     a60:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     a64:	69 83       	std	Y+1, r22	; 0x01
     a66:	7a 83       	std	Y+2, r23	; 0x02
     a68:	8b 83       	std	Y+3, r24	; 0x03
     a6a:	9c 83       	std	Y+4, r25	; 0x04
     a6c:	67 2c       	mov	r6, r7
     a6e:	66 94       	lsr	r6
     a70:	85 01       	movw	r16, r10
     a72:	74 01       	movw	r14, r8
     a74:	26 2d       	mov	r18, r6
     a76:	43 2d       	mov	r20, r3
     a78:	6f 85       	ldd	r22, Y+15	; 0x0f
     a7a:	8d 81       	ldd	r24, Y+5	; 0x05
     a7c:	9e 81       	ldd	r25, Y+6	; 0x06
     a7e:	19 df       	rcall	.-462    	; 0x8b2 <_ZN7Display9draw_lineEhhhf>
     a80:	2b ed       	ldi	r18, 0xDB	; 219
     a82:	3f e0       	ldi	r19, 0x0F	; 15
     a84:	49 e4       	ldi	r20, 0x49	; 73
     a86:	50 e4       	ldi	r21, 0x40	; 64
     a88:	c5 01       	movw	r24, r10
     a8a:	b4 01       	movw	r22, r8
     a8c:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
     a90:	7b 01       	movw	r14, r22
     a92:	8c 01       	movw	r16, r24
     a94:	26 2d       	mov	r18, r6
     a96:	43 2d       	mov	r20, r3
     a98:	6f 85       	ldd	r22, Y+15	; 0x0f
     a9a:	8d 81       	ldd	r24, Y+5	; 0x05
     a9c:	9e 81       	ldd	r25, Y+6	; 0x06
     a9e:	09 df       	rcall	.-494    	; 0x8b2 <_ZN7Display9draw_lineEhhhf>
     aa0:	69 81       	ldd	r22, Y+1	; 0x01
     aa2:	7a 81       	ldd	r23, Y+2	; 0x02
     aa4:	8b 81       	ldd	r24, Y+3	; 0x03
     aa6:	9c 81       	ldd	r25, Y+4	; 0x04
     aa8:	0e 94 dd 33 	call	0x67ba	; 0x67ba <tan>
     aac:	6b 01       	movw	r12, r22
     aae:	7c 01       	movw	r14, r24
     ab0:	66 2d       	mov	r22, r6
     ab2:	70 e0       	ldi	r23, 0x00	; 0
     ab4:	80 e0       	ldi	r24, 0x00	; 0
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     abc:	a7 01       	movw	r20, r14
     abe:	96 01       	movw	r18, r12
     ac0:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     ac4:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
     ac8:	6b 87       	std	Y+11, r22	; 0x0b
     aca:	2b ed       	ldi	r18, 0xDB	; 219
     acc:	3f e0       	ldi	r19, 0x0F	; 15
     ace:	49 ec       	ldi	r20, 0xC9	; 201
     ad0:	5f e3       	ldi	r21, 0x3F	; 63
     ad2:	c5 01       	movw	r24, r10
     ad4:	b4 01       	movw	r22, r8
     ad6:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
     ada:	6f 83       	std	Y+7, r22	; 0x07
     adc:	78 87       	std	Y+8, r23	; 0x08
     ade:	89 87       	std	Y+9, r24	; 0x09
     ae0:	9a 87       	std	Y+10, r25	; 0x0a
     ae2:	7b 01       	movw	r14, r22
     ae4:	8c 01       	movw	r16, r24
     ae6:	2b 85       	ldd	r18, Y+11	; 0x0b
     ae8:	43 2d       	mov	r20, r3
     aea:	6f 85       	ldd	r22, Y+15	; 0x0f
     aec:	8d 81       	ldd	r24, Y+5	; 0x05
     aee:	9e 81       	ldd	r25, Y+6	; 0x06
     af0:	e0 de       	rcall	.-576    	; 0x8b2 <_ZN7Display9draw_lineEhhhf>
     af2:	69 81       	ldd	r22, Y+1	; 0x01
     af4:	7a 81       	ldd	r23, Y+2	; 0x02
     af6:	8b 81       	ldd	r24, Y+3	; 0x03
     af8:	9c 81       	ldd	r25, Y+4	; 0x04
     afa:	0e 94 78 31 	call	0x62f0	; 0x62f0 <cos>
     afe:	6b 01       	movw	r12, r22
     b00:	7c 01       	movw	r14, r24
     b02:	67 2d       	mov	r22, r7
     b04:	70 e0       	ldi	r23, 0x00	; 0
     b06:	80 e0       	ldi	r24, 0x00	; 0
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     b0e:	2b 01       	movw	r4, r22
     b10:	3c 01       	movw	r6, r24
     b12:	a7 01       	movw	r20, r14
     b14:	96 01       	movw	r18, r12
     b16:	c7 01       	movw	r24, r14
     b18:	b6 01       	movw	r22, r12
     b1a:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
     b1e:	9b 01       	movw	r18, r22
     b20:	ac 01       	movw	r20, r24
     b22:	c3 01       	movw	r24, r6
     b24:	b2 01       	movw	r22, r4
     b26:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
     b2a:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
     b2e:	26 2e       	mov	r2, r22
     b30:	2b 85       	ldd	r18, Y+11	; 0x0b
     b32:	62 2f       	mov	r22, r18
     b34:	70 e0       	ldi	r23, 0x00	; 0
     b36:	80 e0       	ldi	r24, 0x00	; 0
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     b3e:	6b 87       	std	Y+11, r22	; 0x0b
     b40:	7c 87       	std	Y+12, r23	; 0x0c
     b42:	8d 87       	std	Y+13, r24	; 0x0d
     b44:	9e 87       	std	Y+14, r25	; 0x0e
     b46:	6f 81       	ldd	r22, Y+7	; 0x07
     b48:	78 85       	ldd	r23, Y+8	; 0x08
     b4a:	89 85       	ldd	r24, Y+9	; 0x09
     b4c:	9a 85       	ldd	r25, Y+10	; 0x0a
     b4e:	0e 94 78 31 	call	0x62f0	; 0x62f0 <cos>
     b52:	6b 01       	movw	r12, r22
     b54:	7c 01       	movw	r14, r24
     b56:	ef 85       	ldd	r30, Y+15	; 0x0f
     b58:	6e 2f       	mov	r22, r30
     b5a:	70 e0       	ldi	r23, 0x00	; 0
     b5c:	80 e0       	ldi	r24, 0x00	; 0
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     b64:	2b 01       	movw	r4, r22
     b66:	3c 01       	movw	r6, r24
     b68:	a7 01       	movw	r20, r14
     b6a:	96 01       	movw	r18, r12
     b6c:	6b 85       	ldd	r22, Y+11	; 0x0b
     b6e:	7c 85       	ldd	r23, Y+12	; 0x0c
     b70:	8d 85       	ldd	r24, Y+13	; 0x0d
     b72:	9e 85       	ldd	r25, Y+14	; 0x0e
     b74:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     b78:	9b 01       	movw	r18, r22
     b7a:	ac 01       	movw	r20, r24
     b7c:	c3 01       	movw	r24, r6
     b7e:	b2 01       	movw	r22, r4
     b80:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
     b84:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
     b88:	6f 87       	std	Y+15, r22	; 0x0f
     b8a:	6f 81       	ldd	r22, Y+7	; 0x07
     b8c:	78 85       	ldd	r23, Y+8	; 0x08
     b8e:	89 85       	ldd	r24, Y+9	; 0x09
     b90:	9a 85       	ldd	r25, Y+10	; 0x0a
     b92:	0e 94 92 33 	call	0x6724	; 0x6724 <sin>
     b96:	2b 01       	movw	r4, r22
     b98:	3c 01       	movw	r6, r24
     b9a:	63 2d       	mov	r22, r3
     b9c:	70 e0       	ldi	r23, 0x00	; 0
     b9e:	80 e0       	ldi	r24, 0x00	; 0
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     ba6:	6b 01       	movw	r12, r22
     ba8:	7c 01       	movw	r14, r24
     baa:	a3 01       	movw	r20, r6
     bac:	92 01       	movw	r18, r4
     bae:	6b 85       	ldd	r22, Y+11	; 0x0b
     bb0:	7c 85       	ldd	r23, Y+12	; 0x0c
     bb2:	8d 85       	ldd	r24, Y+13	; 0x0d
     bb4:	9e 85       	ldd	r25, Y+14	; 0x0e
     bb6:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     bba:	9b 01       	movw	r18, r22
     bbc:	ac 01       	movw	r20, r24
     bbe:	c7 01       	movw	r24, r14
     bc0:	b6 01       	movw	r22, r12
     bc2:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
     bc6:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
     bca:	d6 2e       	mov	r13, r22
     bcc:	a5 01       	movw	r20, r10
     bce:	94 01       	movw	r18, r8
     bd0:	69 81       	ldd	r22, Y+1	; 0x01
     bd2:	7a 81       	ldd	r23, Y+2	; 0x02
     bd4:	8b 81       	ldd	r24, Y+3	; 0x03
     bd6:	9c 81       	ldd	r25, Y+4	; 0x04
     bd8:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
     bdc:	7b 01       	movw	r14, r22
     bde:	8c 01       	movw	r16, r24
     be0:	22 2d       	mov	r18, r2
     be2:	4d 2d       	mov	r20, r13
     be4:	6f 85       	ldd	r22, Y+15	; 0x0f
     be6:	8d 81       	ldd	r24, Y+5	; 0x05
     be8:	9e 81       	ldd	r25, Y+6	; 0x06
     bea:	63 de       	rcall	.-826    	; 0x8b2 <_ZN7Display9draw_lineEhhhf>
     bec:	29 81       	ldd	r18, Y+1	; 0x01
     bee:	3a 81       	ldd	r19, Y+2	; 0x02
     bf0:	4b 81       	ldd	r20, Y+3	; 0x03
     bf2:	5c 81       	ldd	r21, Y+4	; 0x04
     bf4:	c5 01       	movw	r24, r10
     bf6:	b4 01       	movw	r22, r8
     bf8:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
     bfc:	2b ed       	ldi	r18, 0xDB	; 219
     bfe:	3f e0       	ldi	r19, 0x0F	; 15
     c00:	49 e4       	ldi	r20, 0x49	; 73
     c02:	50 e4       	ldi	r21, 0x40	; 64
     c04:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
     c08:	7b 01       	movw	r14, r22
     c0a:	8c 01       	movw	r16, r24
     c0c:	22 2d       	mov	r18, r2
     c0e:	4d 2d       	mov	r20, r13
     c10:	6f 85       	ldd	r22, Y+15	; 0x0f
     c12:	8d 81       	ldd	r24, Y+5	; 0x05
     c14:	9e 81       	ldd	r25, Y+6	; 0x06
     c16:	4d de       	rcall	.-870    	; 0x8b2 <_ZN7Display9draw_lineEhhhf>
     c18:	2f 96       	adiw	r28, 0x0f	; 15
     c1a:	0f b6       	in	r0, 0x3f	; 63
     c1c:	f8 94       	cli
     c1e:	de bf       	out	0x3e, r29	; 62
     c20:	0f be       	out	0x3f, r0	; 63
     c22:	cd bf       	out	0x3d, r28	; 61
     c24:	df 91       	pop	r29
     c26:	cf 91       	pop	r28
     c28:	1f 91       	pop	r17
     c2a:	0f 91       	pop	r16
     c2c:	ff 90       	pop	r15
     c2e:	ef 90       	pop	r14
     c30:	df 90       	pop	r13
     c32:	cf 90       	pop	r12
     c34:	bf 90       	pop	r11
     c36:	af 90       	pop	r10
     c38:	9f 90       	pop	r9
     c3a:	8f 90       	pop	r8
     c3c:	7f 90       	pop	r7
     c3e:	6f 90       	pop	r6
     c40:	5f 90       	pop	r5
     c42:	4f 90       	pop	r4
     c44:	3f 90       	pop	r3
     c46:	2f 90       	pop	r2
     c48:	08 95       	ret

00000c4a <_ZN7Display9draw_ASCIEhhh>:
     c4a:	0f 93       	push	r16
     c4c:	1f 93       	push	r17
     c4e:	cf 93       	push	r28
     c50:	df 93       	push	r29
     c52:	61 32       	cpi	r22, 0x21	; 33
     c54:	08 f4       	brcc	.+2      	; 0xc58 <_ZN7Display9draw_ASCIEhhh+0xe>
     c56:	3e c0       	rjmp	.+124    	; 0xcd4 <_ZN7Display9draw_ASCIEhhh+0x8a>
     c58:	a4 2f       	mov	r26, r20
     c5a:	b0 e0       	ldi	r27, 0x00	; 0
     c5c:	02 2f       	mov	r16, r18
     c5e:	06 95       	lsr	r16
     c60:	06 95       	lsr	r16
     c62:	06 95       	lsr	r16
     c64:	30 e8       	ldi	r19, 0x80	; 128
     c66:	03 9f       	mul	r16, r19
     c68:	80 01       	movw	r16, r0
     c6a:	11 24       	eor	r1, r1
     c6c:	61 52       	subi	r22, 0x21	; 33
     c6e:	70 e0       	ldi	r23, 0x00	; 0
     c70:	fb 01       	movw	r30, r22
     c72:	ee 0f       	add	r30, r30
     c74:	ff 1f       	adc	r31, r31
     c76:	ee 0f       	add	r30, r30
     c78:	ff 1f       	adc	r31, r31
     c7a:	e6 0f       	add	r30, r22
     c7c:	f7 1f       	adc	r31, r23
     c7e:	e4 59       	subi	r30, 0x94	; 148
     c80:	fd 4f       	sbci	r31, 0xFD	; 253
     c82:	ad 01       	movw	r20, r26
     c84:	40 0f       	add	r20, r16
     c86:	51 1f       	adc	r21, r17
     c88:	ec 01       	movw	r28, r24
     c8a:	c4 0f       	add	r28, r20
     c8c:	d5 1f       	adc	r29, r21
     c8e:	00 58       	subi	r16, 0x80	; 128
     c90:	1f 4f       	sbci	r17, 0xFF	; 255
     c92:	a0 0f       	add	r26, r16
     c94:	b1 1f       	adc	r27, r17
     c96:	a8 0f       	add	r26, r24
     c98:	b9 1f       	adc	r27, r25
     c9a:	4b 5f       	subi	r20, 0xFB	; 251
     c9c:	5f 4f       	sbci	r21, 0xFF	; 255
     c9e:	48 0f       	add	r20, r24
     ca0:	59 1f       	adc	r21, r25
     ca2:	27 70       	andi	r18, 0x07	; 7
     ca4:	64 91       	lpm	r22, Z
     ca6:	70 e0       	ldi	r23, 0x00	; 0
     ca8:	02 2e       	mov	r0, r18
     caa:	02 c0       	rjmp	.+4      	; 0xcb0 <_ZN7Display9draw_ASCIEhhh+0x66>
     cac:	66 0f       	add	r22, r22
     cae:	77 1f       	adc	r23, r23
     cb0:	0a 94       	dec	r0
     cb2:	e2 f7       	brpl	.-8      	; 0xcac <_ZN7Display9draw_ASCIEhhh+0x62>
     cb4:	98 81       	ld	r25, Y
     cb6:	96 2b       	or	r25, r22
     cb8:	99 93       	st	Y+, r25
     cba:	67 2f       	mov	r22, r23
     cbc:	77 27       	eor	r23, r23
     cbe:	61 15       	cp	r22, r1
     cc0:	71 05       	cpc	r23, r1
     cc2:	19 f0       	breq	.+6      	; 0xcca <_ZN7Display9draw_ASCIEhhh+0x80>
     cc4:	8c 91       	ld	r24, X
     cc6:	68 2b       	or	r22, r24
     cc8:	6c 93       	st	X, r22
     cca:	31 96       	adiw	r30, 0x01	; 1
     ccc:	11 96       	adiw	r26, 0x01	; 1
     cce:	c4 17       	cp	r28, r20
     cd0:	d5 07       	cpc	r29, r21
     cd2:	41 f7       	brne	.-48     	; 0xca4 <_ZN7Display9draw_ASCIEhhh+0x5a>
     cd4:	df 91       	pop	r29
     cd6:	cf 91       	pop	r28
     cd8:	1f 91       	pop	r17
     cda:	0f 91       	pop	r16
     cdc:	08 95       	ret

00000cde <_ZN7Display16draw_number16x16Ehhh>:
     cde:	cf 92       	push	r12
     ce0:	df 92       	push	r13
     ce2:	ef 92       	push	r14
     ce4:	ff 92       	push	r15
     ce6:	0f 93       	push	r16
     ce8:	1f 93       	push	r17
     cea:	cf 93       	push	r28
     cec:	df 93       	push	r29
     cee:	6a 30       	cpi	r22, 0x0A	; 10
     cf0:	08 f0       	brcs	.+2      	; 0xcf4 <_ZN7Display16draw_number16x16Ehhh+0x16>
     cf2:	66 c0       	rjmp	.+204    	; 0xdc0 <_ZN7Display16draw_number16x16Ehhh+0xe2>
     cf4:	50 e0       	ldi	r21, 0x00	; 0
     cf6:	02 2f       	mov	r16, r18
     cf8:	06 95       	lsr	r16
     cfa:	06 95       	lsr	r16
     cfc:	06 95       	lsr	r16
     cfe:	10 e0       	ldi	r17, 0x00	; 0
     d00:	d8 01       	movw	r26, r16
     d02:	b6 95       	lsr	r27
     d04:	ba 2f       	mov	r27, r26
     d06:	aa 27       	eor	r26, r26
     d08:	b7 95       	ror	r27
     d0a:	a7 95       	ror	r26
     d0c:	0f 5f       	subi	r16, 0xFF	; 255
     d0e:	1f 4f       	sbci	r17, 0xFF	; 255
     d10:	16 95       	lsr	r17
     d12:	10 2f       	mov	r17, r16
     d14:	00 27       	eor	r16, r16
     d16:	17 95       	ror	r17
     d18:	07 95       	ror	r16
     d1a:	7d 01       	movw	r14, r26
     d1c:	30 e8       	ldi	r19, 0x80	; 128
     d1e:	e3 0e       	add	r14, r19
     d20:	f1 1c       	adc	r15, r1
     d22:	e4 0e       	add	r14, r20
     d24:	f5 1e       	adc	r15, r21
     d26:	e8 0e       	add	r14, r24
     d28:	f9 1e       	adc	r15, r25
     d2a:	ea 01       	movw	r28, r20
     d2c:	c0 0f       	add	r28, r16
     d2e:	d1 1f       	adc	r29, r17
     d30:	60 97       	sbiw	r28, 0x10	; 16
     d32:	c8 0f       	add	r28, r24
     d34:	d9 1f       	adc	r29, r25
     d36:	04 0f       	add	r16, r20
     d38:	15 1f       	adc	r17, r21
     d3a:	00 59       	subi	r16, 0x90	; 144
     d3c:	1f 4f       	sbci	r17, 0xFF	; 255
     d3e:	08 0f       	add	r16, r24
     d40:	19 1f       	adc	r17, r25
     d42:	a4 0f       	add	r26, r20
     d44:	b5 1f       	adc	r27, r21
     d46:	a8 0f       	add	r26, r24
     d48:	b9 1f       	adc	r27, r25
     d4a:	80 e2       	ldi	r24, 0x20	; 32
     d4c:	68 9f       	mul	r22, r24
     d4e:	b0 01       	movw	r22, r0
     d50:	11 24       	eor	r1, r1
     d52:	40 e0       	ldi	r20, 0x00	; 0
     d54:	50 e0       	ldi	r21, 0x00	; 0
     d56:	27 70       	andi	r18, 0x07	; 7
     d58:	fa 01       	movw	r30, r20
     d5a:	e6 0f       	add	r30, r22
     d5c:	f7 1f       	adc	r31, r23
     d5e:	e4 5d       	subi	r30, 0xD4	; 212
     d60:	fe 4f       	sbci	r31, 0xFE	; 254
     d62:	e4 91       	lpm	r30, Z
     d64:	f0 e0       	ldi	r31, 0x00	; 0
     d66:	02 2e       	mov	r0, r18
     d68:	02 c0       	rjmp	.+4      	; 0xd6e <_ZN7Display16draw_number16x16Ehhh+0x90>
     d6a:	ee 0f       	add	r30, r30
     d6c:	ff 1f       	adc	r31, r31
     d6e:	0a 94       	dec	r0
     d70:	e2 f7       	brpl	.-8      	; 0xd6a <_ZN7Display16draw_number16x16Ehhh+0x8c>
     d72:	40 31       	cpi	r20, 0x10	; 16
     d74:	68 f4       	brcc	.+26     	; 0xd90 <_ZN7Display16draw_number16x16Ehhh+0xb2>
     d76:	8c 91       	ld	r24, X
     d78:	8e 2b       	or	r24, r30
     d7a:	8c 93       	st	X, r24
     d7c:	cf 2e       	mov	r12, r31
     d7e:	dd 24       	eor	r13, r13
     d80:	c1 14       	cp	r12, r1
     d82:	d1 04       	cpc	r13, r1
     d84:	89 f0       	breq	.+34     	; 0xda8 <_ZN7Display16draw_number16x16Ehhh+0xca>
     d86:	f7 01       	movw	r30, r14
     d88:	80 81       	ld	r24, Z
     d8a:	8c 29       	or	r24, r12
     d8c:	80 83       	st	Z, r24
     d8e:	0c c0       	rjmp	.+24     	; 0xda8 <_ZN7Display16draw_number16x16Ehhh+0xca>
     d90:	88 81       	ld	r24, Y
     d92:	8e 2b       	or	r24, r30
     d94:	88 83       	st	Y, r24
     d96:	cf 2e       	mov	r12, r31
     d98:	dd 24       	eor	r13, r13
     d9a:	c1 14       	cp	r12, r1
     d9c:	d1 04       	cpc	r13, r1
     d9e:	21 f0       	breq	.+8      	; 0xda8 <_ZN7Display16draw_number16x16Ehhh+0xca>
     da0:	f8 01       	movw	r30, r16
     da2:	80 81       	ld	r24, Z
     da4:	8c 29       	or	r24, r12
     da6:	80 83       	st	Z, r24
     da8:	4f 5f       	subi	r20, 0xFF	; 255
     daa:	5f 4f       	sbci	r21, 0xFF	; 255
     dac:	ff ef       	ldi	r31, 0xFF	; 255
     dae:	ef 1a       	sub	r14, r31
     db0:	ff 0a       	sbc	r15, r31
     db2:	21 96       	adiw	r28, 0x01	; 1
     db4:	0f 5f       	subi	r16, 0xFF	; 255
     db6:	1f 4f       	sbci	r17, 0xFF	; 255
     db8:	11 96       	adiw	r26, 0x01	; 1
     dba:	40 32       	cpi	r20, 0x20	; 32
     dbc:	51 05       	cpc	r21, r1
     dbe:	61 f6       	brne	.-104    	; 0xd58 <_ZN7Display16draw_number16x16Ehhh+0x7a>
     dc0:	df 91       	pop	r29
     dc2:	cf 91       	pop	r28
     dc4:	1f 91       	pop	r17
     dc6:	0f 91       	pop	r16
     dc8:	ff 90       	pop	r15
     dca:	ef 90       	pop	r14
     dcc:	df 90       	pop	r13
     dce:	cf 90       	pop	r12
     dd0:	08 95       	ret

00000dd2 <_ZN7Display6analogEhhhh>:

void Display::analog(uint8_t stunde, uint8_t minute, uint8_t sekunde, uint8_t sekanzeige){
     dd2:	2f 92       	push	r2
     dd4:	3f 92       	push	r3
     dd6:	4f 92       	push	r4
     dd8:	5f 92       	push	r5
     dda:	6f 92       	push	r6
     ddc:	7f 92       	push	r7
     dde:	8f 92       	push	r8
     de0:	9f 92       	push	r9
     de2:	af 92       	push	r10
     de4:	bf 92       	push	r11
     de6:	cf 92       	push	r12
     de8:	df 92       	push	r13
     dea:	ef 92       	push	r14
     dec:	ff 92       	push	r15
     dee:	0f 93       	push	r16
     df0:	1f 93       	push	r17
     df2:	cf 93       	push	r28
     df4:	df 93       	push	r29
     df6:	cd b7       	in	r28, 0x3d	; 61
     df8:	de b7       	in	r29, 0x3e	; 62
     dfa:	27 97       	sbiw	r28, 0x07	; 7
     dfc:	0f b6       	in	r0, 0x3f	; 63
     dfe:	f8 94       	cli
     e00:	de bf       	out	0x3e, r29	; 62
     e02:	0f be       	out	0x3f, r0	; 63
     e04:	cd bf       	out	0x3d, r28	; 61
     e06:	9f 83       	std	Y+7, r25	; 0x07
     e08:	8e 83       	std	Y+6, r24	; 0x06
     e0a:	6d 83       	std	Y+5, r22	; 0x05
     e0c:	34 2e       	mov	r3, r20
	uint8_t Px=32-1;
	uint8_t Py=32-1;
	uint8_t x=0,y=0;
	float winkel=0;
	
	if (sekanzeige)
     e0e:	00 23       	and	r16, r16
     e10:	09 f4       	brne	.+2      	; 0xe14 <_ZN7Display6analogEhhhh+0x42>
     e12:	26 c1       	rjmp	.+588    	; 0x1060 <_ZN7Display6analogEhhhh+0x28e>
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
     e14:	62 2f       	mov	r22, r18
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	80 e0       	ldi	r24, 0x00	; 0
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     e20:	20 e0       	ldi	r18, 0x00	; 0
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	40 ec       	ldi	r20, 0xC0	; 192
     e26:	50 e4       	ldi	r21, 0x40	; 64
     e28:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     e2c:	2b ed       	ldi	r18, 0xDB	; 219
     e2e:	3f e0       	ldi	r19, 0x0F	; 15
     e30:	49 e4       	ldi	r20, 0x49	; 73
     e32:	50 e4       	ldi	r21, 0x40	; 64
     e34:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     e38:	20 e0       	ldi	r18, 0x00	; 0
     e3a:	30 e0       	ldi	r19, 0x00	; 0
     e3c:	44 e3       	ldi	r20, 0x34	; 52
     e3e:	53 e4       	ldi	r21, 0x43	; 67
     e40:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
     e44:	2b ed       	ldi	r18, 0xDB	; 219
     e46:	3f e0       	ldi	r19, 0x0F	; 15
     e48:	49 ec       	ldi	r20, 0xC9	; 201
     e4a:	5f e3       	ldi	r21, 0x3F	; 63
     e4c:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
     e50:	6b 01       	movw	r12, r22
     e52:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     e54:	0e 94 78 31 	call	0x62f0	; 0x62f0 <cos>
     e58:	4b 01       	movw	r8, r22
     e5a:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e5c:	c7 01       	movw	r24, r14
     e5e:	b6 01       	movw	r22, r12
     e60:	0e 94 92 33 	call	0x6724	; 0x6724 <sin>
     e64:	2b 01       	movw	r4, r22
     e66:	3c 01       	movw	r6, r24
     e68:	00 e0       	ldi	r16, 0x00	; 0
     e6a:	10 e0       	ldi	r17, 0x00	; 0
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e6c:	b8 01       	movw	r22, r16
     e6e:	01 2e       	mov	r0, r17
     e70:	00 0c       	add	r0, r0
     e72:	88 0b       	sbc	r24, r24
     e74:	99 0b       	sbc	r25, r25
     e76:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     e7a:	6b 01       	movw	r12, r22
     e7c:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e7e:	a3 01       	movw	r20, r6
     e80:	92 01       	movw	r18, r4
     e82:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     e86:	20 e0       	ldi	r18, 0x00	; 0
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	48 ef       	ldi	r20, 0xF8	; 248
     e8c:	51 e4       	ldi	r21, 0x41	; 65
     e8e:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
     e92:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
     e96:	26 2e       	mov	r2, r22
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e98:	a5 01       	movw	r20, r10
     e9a:	94 01       	movw	r18, r8
     e9c:	c7 01       	movw	r24, r14
     e9e:	b6 01       	movw	r22, r12
     ea0:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     ea4:	20 e0       	ldi	r18, 0x00	; 0
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	48 ef       	ldi	r20, 0xF8	; 248
     eaa:	51 e4       	ldi	r21, 0x41	; 65
     eac:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
     eb0:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     eb4:	20 e0       	ldi	r18, 0x00	; 0
     eb6:	42 2d       	mov	r20, r2
     eb8:	8e 81       	ldd	r24, Y+6	; 0x06
     eba:	9f 81       	ldd	r25, Y+7	; 0x07
     ebc:	31 dc       	rcall	.-1950   	; 0x720 <_ZN7Display9drawPixelEhhh>
     ebe:	0f 5f       	subi	r16, 0xFF	; 255
     ec0:	1f 4f       	sbci	r17, 0xFF	; 255
	float winkel=0;
	
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
     ec2:	09 31       	cpi	r16, 0x19	; 25
     ec4:	11 05       	cpc	r17, r1
     ec6:	91 f6       	brne	.-92     	; 0xe6c <_ZN7Display6analogEhhhh+0x9a>
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
     ec8:	63 2d       	mov	r22, r3
     eca:	70 e0       	ldi	r23, 0x00	; 0
     ecc:	80 e0       	ldi	r24, 0x00	; 0
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     ed4:	69 83       	std	Y+1, r22	; 0x01
     ed6:	7a 83       	std	Y+2, r23	; 0x02
     ed8:	8b 83       	std	Y+3, r24	; 0x03
     eda:	9c 83       	std	Y+4, r25	; 0x04
     edc:	20 e0       	ldi	r18, 0x00	; 0
     ede:	30 e0       	ldi	r19, 0x00	; 0
     ee0:	40 ec       	ldi	r20, 0xC0	; 192
     ee2:	50 e4       	ldi	r21, 0x40	; 64
     ee4:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     ee8:	2b ed       	ldi	r18, 0xDB	; 219
     eea:	3f e0       	ldi	r19, 0x0F	; 15
     eec:	49 e4       	ldi	r20, 0x49	; 73
     eee:	50 e4       	ldi	r21, 0x40	; 64
     ef0:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     ef4:	20 e0       	ldi	r18, 0x00	; 0
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	44 e3       	ldi	r20, 0x34	; 52
     efa:	53 e4       	ldi	r21, 0x43	; 67
     efc:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
     f00:	2b ed       	ldi	r18, 0xDB	; 219
     f02:	3f e0       	ldi	r19, 0x0F	; 15
     f04:	49 ec       	ldi	r20, 0xC9	; 201
     f06:	5f e3       	ldi	r21, 0x3F	; 63
     f08:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
     f0c:	6b 01       	movw	r12, r22
     f0e:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     f10:	0e 94 78 31 	call	0x62f0	; 0x62f0 <cos>
     f14:	2b 01       	movw	r4, r22
     f16:	3c 01       	movw	r6, r24
			y=(uint8_t) i*sin(winkel)+Py;
     f18:	c7 01       	movw	r24, r14
     f1a:	b6 01       	movw	r22, r12
     f1c:	0e 94 92 33 	call	0x6724	; 0x6724 <sin>
     f20:	4b 01       	movw	r8, r22
     f22:	5c 01       	movw	r10, r24
     f24:	00 e0       	ldi	r16, 0x00	; 0
     f26:	10 e0       	ldi	r17, 0x00	; 0

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     f28:	b8 01       	movw	r22, r16
     f2a:	01 2e       	mov	r0, r17
     f2c:	00 0c       	add	r0, r0
     f2e:	88 0b       	sbc	r24, r24
     f30:	99 0b       	sbc	r25, r25
     f32:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     f36:	6b 01       	movw	r12, r22
     f38:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     f3a:	a5 01       	movw	r20, r10
     f3c:	94 01       	movw	r18, r8
     f3e:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	48 ef       	ldi	r20, 0xF8	; 248
     f48:	51 e4       	ldi	r21, 0x41	; 65
     f4a:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
     f4e:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
     f52:	36 2e       	mov	r3, r22

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     f54:	a3 01       	movw	r20, r6
     f56:	92 01       	movw	r18, r4
     f58:	c7 01       	movw	r24, r14
     f5a:	b6 01       	movw	r22, r12
     f5c:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     f60:	20 e0       	ldi	r18, 0x00	; 0
     f62:	30 e0       	ldi	r19, 0x00	; 0
     f64:	48 ef       	ldi	r20, 0xF8	; 248
     f66:	51 e4       	ldi	r21, 0x41	; 65
     f68:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
     f6c:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     f70:	20 e0       	ldi	r18, 0x00	; 0
     f72:	43 2d       	mov	r20, r3
     f74:	8e 81       	ldd	r24, Y+6	; 0x06
     f76:	9f 81       	ldd	r25, Y+7	; 0x07
     f78:	d3 db       	rcall	.-2138   	; 0x720 <_ZN7Display9drawPixelEhhh>
     f7a:	0f 5f       	subi	r16, 0xFF	; 255
     f7c:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
     f7e:	05 31       	cpi	r16, 0x15	; 21
     f80:	11 05       	cpc	r17, r1
     f82:	91 f6       	brne	.-92     	; 0xf28 <_ZN7Display6analogEhhhh+0x156>
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
     f84:	2d 81       	ldd	r18, Y+5	; 0x05
     f86:	62 2f       	mov	r22, r18
     f88:	70 e0       	ldi	r23, 0x00	; 0
     f8a:	80 e0       	ldi	r24, 0x00	; 0
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
     f92:	20 e0       	ldi	r18, 0x00	; 0
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	40 ef       	ldi	r20, 0xF0	; 240
     f98:	51 e4       	ldi	r21, 0x41	; 65
     f9a:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     f9e:	6b 01       	movw	r12, r22
     fa0:	7c 01       	movw	r14, r24
     fa2:	20 e0       	ldi	r18, 0x00	; 0
     fa4:	30 e0       	ldi	r19, 0x00	; 0
     fa6:	40 e0       	ldi	r20, 0x00	; 0
     fa8:	5f e3       	ldi	r21, 0x3F	; 63
     faa:	69 81       	ldd	r22, Y+1	; 0x01
     fac:	7a 81       	ldd	r23, Y+2	; 0x02
     fae:	8b 81       	ldd	r24, Y+3	; 0x03
     fb0:	9c 81       	ldd	r25, Y+4	; 0x04
     fb2:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     fb6:	9b 01       	movw	r18, r22
     fb8:	ac 01       	movw	r20, r24
     fba:	c7 01       	movw	r24, r14
     fbc:	b6 01       	movw	r22, r12
     fbe:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
     fc2:	2b ed       	ldi	r18, 0xDB	; 219
     fc4:	3f e0       	ldi	r19, 0x0F	; 15
     fc6:	49 e4       	ldi	r20, 0x49	; 73
     fc8:	50 e4       	ldi	r21, 0x40	; 64
     fca:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
     fce:	20 e0       	ldi	r18, 0x00	; 0
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	44 e3       	ldi	r20, 0x34	; 52
     fd4:	53 e4       	ldi	r21, 0x43	; 67
     fd6:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
     fda:	2b ed       	ldi	r18, 0xDB	; 219
     fdc:	3f e0       	ldi	r19, 0x0F	; 15
     fde:	49 ec       	ldi	r20, 0xC9	; 201
     fe0:	5f e3       	ldi	r21, 0x3F	; 63
     fe2:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
     fe6:	6b 01       	movw	r12, r22
     fe8:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
     fea:	0e 94 78 31 	call	0x62f0	; 0x62f0 <cos>
     fee:	4b 01       	movw	r8, r22
     ff0:	5c 01       	movw	r10, r24
			y= (uint8_t) i*sin(winkel) +Py;
     ff2:	c7 01       	movw	r24, r14
     ff4:	b6 01       	movw	r22, r12
     ff6:	0e 94 92 33 	call	0x6724	; 0x6724 <sin>
     ffa:	2b 01       	movw	r4, r22
     ffc:	3c 01       	movw	r6, r24
     ffe:	00 e0       	ldi	r16, 0x00	; 0
    1000:	10 e0       	ldi	r17, 0x00	; 0

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    1002:	b8 01       	movw	r22, r16
    1004:	01 2e       	mov	r0, r17
    1006:	00 0c       	add	r0, r0
    1008:	88 0b       	sbc	r24, r24
    100a:	99 0b       	sbc	r25, r25
    100c:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    1010:	6b 01       	movw	r12, r22
    1012:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    1014:	a3 01       	movw	r20, r6
    1016:	92 01       	movw	r18, r4
    1018:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    101c:	20 e0       	ldi	r18, 0x00	; 0
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	48 ef       	ldi	r20, 0xF8	; 248
    1022:	51 e4       	ldi	r21, 0x41	; 65
    1024:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    1028:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
    102c:	36 2e       	mov	r3, r22

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    102e:	a5 01       	movw	r20, r10
    1030:	94 01       	movw	r18, r8
    1032:	c7 01       	movw	r24, r14
    1034:	b6 01       	movw	r22, r12
    1036:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    103a:	20 e0       	ldi	r18, 0x00	; 0
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	48 ef       	ldi	r20, 0xF8	; 248
    1040:	51 e4       	ldi	r21, 0x41	; 65
    1042:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    1046:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    104a:	20 e0       	ldi	r18, 0x00	; 0
    104c:	43 2d       	mov	r20, r3
    104e:	8e 81       	ldd	r24, Y+6	; 0x06
    1050:	9f 81       	ldd	r25, Y+7	; 0x07
    1052:	66 db       	rcall	.-2356   	; 0x720 <_ZN7Display9drawPixelEhhh>
    1054:	0f 5f       	subi	r16, 0xFF	; 255
    1056:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    1058:	0d 30       	cpi	r16, 0x0D	; 13
    105a:	11 05       	cpc	r17, r1
    105c:	91 f6       	brne	.-92     	; 0x1002 <_ZN7Display6analogEhhhh+0x230>
    105e:	cb c0       	rjmp	.+406    	; 0x11f6 <_ZN7Display6analogEhhhh+0x424>
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
    1060:	64 2f       	mov	r22, r20
    1062:	70 e0       	ldi	r23, 0x00	; 0
    1064:	80 e0       	ldi	r24, 0x00	; 0
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    106c:	69 83       	std	Y+1, r22	; 0x01
    106e:	7a 83       	std	Y+2, r23	; 0x02
    1070:	8b 83       	std	Y+3, r24	; 0x03
    1072:	9c 83       	std	Y+4, r25	; 0x04
    1074:	20 e0       	ldi	r18, 0x00	; 0
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	40 ec       	ldi	r20, 0xC0	; 192
    107a:	50 e4       	ldi	r21, 0x40	; 64
    107c:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    1080:	2b ed       	ldi	r18, 0xDB	; 219
    1082:	3f e0       	ldi	r19, 0x0F	; 15
    1084:	49 e4       	ldi	r20, 0x49	; 73
    1086:	50 e4       	ldi	r21, 0x40	; 64
    1088:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	44 e3       	ldi	r20, 0x34	; 52
    1092:	53 e4       	ldi	r21, 0x43	; 67
    1094:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
    1098:	2b ed       	ldi	r18, 0xDB	; 219
    109a:	3f e0       	ldi	r19, 0x0F	; 15
    109c:	49 ec       	ldi	r20, 0xC9	; 201
    109e:	5f e3       	ldi	r21, 0x3F	; 63
    10a0:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
    10a4:	6b 01       	movw	r12, r22
    10a6:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
    10a8:	0e 94 78 31 	call	0x62f0	; 0x62f0 <cos>
    10ac:	2b 01       	movw	r4, r22
    10ae:	3c 01       	movw	r6, r24
			y=(uint8_t) i*sin(winkel)+Py;
    10b0:	c7 01       	movw	r24, r14
    10b2:	b6 01       	movw	r22, r12
    10b4:	0e 94 92 33 	call	0x6724	; 0x6724 <sin>
    10b8:	4b 01       	movw	r8, r22
    10ba:	5c 01       	movw	r10, r24
    10bc:	00 e0       	ldi	r16, 0x00	; 0
    10be:	10 e0       	ldi	r17, 0x00	; 0
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    10c0:	b8 01       	movw	r22, r16
    10c2:	01 2e       	mov	r0, r17
    10c4:	00 0c       	add	r0, r0
    10c6:	88 0b       	sbc	r24, r24
    10c8:	99 0b       	sbc	r25, r25
    10ca:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    10ce:	6b 01       	movw	r12, r22
    10d0:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
    10d2:	a5 01       	movw	r20, r10
    10d4:	94 01       	movw	r18, r8
    10d6:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    10da:	20 e0       	ldi	r18, 0x00	; 0
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	48 ef       	ldi	r20, 0xF8	; 248
    10e0:	51 e4       	ldi	r21, 0x41	; 65
    10e2:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    10e6:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
    10ea:	36 2e       	mov	r3, r22
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    10ec:	a3 01       	movw	r20, r6
    10ee:	92 01       	movw	r18, r4
    10f0:	c7 01       	movw	r24, r14
    10f2:	b6 01       	movw	r22, r12
    10f4:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    10f8:	20 e0       	ldi	r18, 0x00	; 0
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	48 ef       	ldi	r20, 0xF8	; 248
    10fe:	51 e4       	ldi	r21, 0x41	; 65
    1100:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    1104:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
    1108:	20 e0       	ldi	r18, 0x00	; 0
    110a:	43 2d       	mov	r20, r3
    110c:	8e 81       	ldd	r24, Y+6	; 0x06
    110e:	9f 81       	ldd	r25, Y+7	; 0x07
    1110:	07 db       	rcall	.-2546   	; 0x720 <_ZN7Display9drawPixelEhhh>
    1112:	0f 5f       	subi	r16, 0xFF	; 255
    1114:	1f 4f       	sbci	r17, 0xFF	; 255
		}
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
    1116:	09 31       	cpi	r16, 0x19	; 25
    1118:	11 05       	cpc	r17, r1
    111a:	91 f6       	brne	.-92     	; 0x10c0 <_ZN7Display6analogEhhhh+0x2ee>
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
    111c:	ed 81       	ldd	r30, Y+5	; 0x05
    111e:	6e 2f       	mov	r22, r30
    1120:	70 e0       	ldi	r23, 0x00	; 0
    1122:	80 e0       	ldi	r24, 0x00	; 0
    1124:	90 e0       	ldi	r25, 0x00	; 0
    1126:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    112a:	20 e0       	ldi	r18, 0x00	; 0
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	40 ef       	ldi	r20, 0xF0	; 240
    1130:	51 e4       	ldi	r21, 0x41	; 65
    1132:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    1136:	6b 01       	movw	r12, r22
    1138:	7c 01       	movw	r14, r24
    113a:	20 e0       	ldi	r18, 0x00	; 0
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	40 e0       	ldi	r20, 0x00	; 0
    1140:	5f e3       	ldi	r21, 0x3F	; 63
    1142:	69 81       	ldd	r22, Y+1	; 0x01
    1144:	7a 81       	ldd	r23, Y+2	; 0x02
    1146:	8b 81       	ldd	r24, Y+3	; 0x03
    1148:	9c 81       	ldd	r25, Y+4	; 0x04
    114a:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    114e:	9b 01       	movw	r18, r22
    1150:	ac 01       	movw	r20, r24
    1152:	c7 01       	movw	r24, r14
    1154:	b6 01       	movw	r22, r12
    1156:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    115a:	2b ed       	ldi	r18, 0xDB	; 219
    115c:	3f e0       	ldi	r19, 0x0F	; 15
    115e:	49 e4       	ldi	r20, 0x49	; 73
    1160:	50 e4       	ldi	r21, 0x40	; 64
    1162:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    1166:	20 e0       	ldi	r18, 0x00	; 0
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	44 e3       	ldi	r20, 0x34	; 52
    116c:	53 e4       	ldi	r21, 0x43	; 67
    116e:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
    1172:	2b ed       	ldi	r18, 0xDB	; 219
    1174:	3f e0       	ldi	r19, 0x0F	; 15
    1176:	49 ec       	ldi	r20, 0xC9	; 201
    1178:	5f e3       	ldi	r21, 0x3F	; 63
    117a:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
    117e:	6b 01       	movw	r12, r22
    1180:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
    1182:	0e 94 78 31 	call	0x62f0	; 0x62f0 <cos>
    1186:	4b 01       	movw	r8, r22
    1188:	5c 01       	movw	r10, r24
			y= (uint8_t) i*sin(winkel) +Py;
    118a:	c7 01       	movw	r24, r14
    118c:	b6 01       	movw	r22, r12
    118e:	0e 94 92 33 	call	0x6724	; 0x6724 <sin>
    1192:	2b 01       	movw	r4, r22
    1194:	3c 01       	movw	r6, r24
    1196:	00 e0       	ldi	r16, 0x00	; 0
    1198:	10 e0       	ldi	r17, 0x00	; 0

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    119a:	b8 01       	movw	r22, r16
    119c:	01 2e       	mov	r0, r17
    119e:	00 0c       	add	r0, r0
    11a0:	88 0b       	sbc	r24, r24
    11a2:	99 0b       	sbc	r25, r25
    11a4:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    11a8:	6b 01       	movw	r12, r22
    11aa:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    11ac:	a3 01       	movw	r20, r6
    11ae:	92 01       	movw	r18, r4
    11b0:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    11b4:	20 e0       	ldi	r18, 0x00	; 0
    11b6:	30 e0       	ldi	r19, 0x00	; 0
    11b8:	48 ef       	ldi	r20, 0xF8	; 248
    11ba:	51 e4       	ldi	r21, 0x41	; 65
    11bc:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    11c0:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
    11c4:	36 2e       	mov	r3, r22

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    11c6:	a5 01       	movw	r20, r10
    11c8:	94 01       	movw	r18, r8
    11ca:	c7 01       	movw	r24, r14
    11cc:	b6 01       	movw	r22, r12
    11ce:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    11d2:	20 e0       	ldi	r18, 0x00	; 0
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	48 ef       	ldi	r20, 0xF8	; 248
    11d8:	51 e4       	ldi	r21, 0x41	; 65
    11da:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    11de:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	43 2d       	mov	r20, r3
    11e6:	8e 81       	ldd	r24, Y+6	; 0x06
    11e8:	9f 81       	ldd	r25, Y+7	; 0x07
    11ea:	9a da       	rcall	.-2764   	; 0x720 <_ZN7Display9drawPixelEhhh>
    11ec:	0f 5f       	subi	r16, 0xFF	; 255
    11ee:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    11f0:	01 31       	cpi	r16, 0x11	; 17
    11f2:	11 05       	cpc	r17, r1
    11f4:	91 f6       	brne	.-92     	; 0x119a <_ZN7Display6analogEhhhh+0x3c8>
		}
	}
	

	//Anzeige der Zahlen
	draw_ASCI('1',32-charsize,0);
    11f6:	20 e0       	ldi	r18, 0x00	; 0
    11f8:	4a e1       	ldi	r20, 0x1A	; 26
    11fa:	61 e3       	ldi	r22, 0x31	; 49
    11fc:	8e 81       	ldd	r24, Y+6	; 0x06
    11fe:	9f 81       	ldd	r25, Y+7	; 0x07
    1200:	24 dd       	rcall	.-1464   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('2',32,0);
    1202:	20 e0       	ldi	r18, 0x00	; 0
    1204:	40 e2       	ldi	r20, 0x20	; 32
    1206:	62 e3       	ldi	r22, 0x32	; 50
    1208:	8e 81       	ldd	r24, Y+6	; 0x06
    120a:	9f 81       	ldd	r25, Y+7	; 0x07
    120c:	1e dd       	rcall	.-1476   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('3',64-charsize,4*charhighte-charhighte/2);
    120e:	2c e1       	ldi	r18, 0x1C	; 28
    1210:	4a e3       	ldi	r20, 0x3A	; 58
    1212:	63 e3       	ldi	r22, 0x33	; 51
    1214:	8e 81       	ldd	r24, Y+6	; 0x06
    1216:	9f 81       	ldd	r25, Y+7	; 0x07
    1218:	18 dd       	rcall	.-1488   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('6',32-charsize/2,7*charhighte);
    121a:	28 e3       	ldi	r18, 0x38	; 56
    121c:	4d e1       	ldi	r20, 0x1D	; 29
    121e:	66 e3       	ldi	r22, 0x36	; 54
    1220:	8e 81       	ldd	r24, Y+6	; 0x06
    1222:	9f 81       	ldd	r25, Y+7	; 0x07
    1224:	12 dd       	rcall	.-1500   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('9',0,4*charhighte-charhighte/2);
    1226:	2c e1       	ldi	r18, 0x1C	; 28
    1228:	40 e0       	ldi	r20, 0x00	; 0
    122a:	69 e3       	ldi	r22, 0x39	; 57
    122c:	8e 81       	ldd	r24, Y+6	; 0x06
    122e:	9f 81       	ldd	r25, Y+7	; 0x07
    1230:	0c dd       	rcall	.-1512   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>

	//anzeige des Rings fuer die Restlichen Stunden Zahlen
	//1
	drawPixel(26*cos((30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	48 e0       	ldi	r20, 0x08	; 8
    1236:	6c e2       	ldi	r22, 0x2C	; 44
    1238:	8e 81       	ldd	r24, Y+6	; 0x06
    123a:	9f 81       	ldd	r25, Y+7	; 0x07
    123c:	71 da       	rcall	.-2846   	; 0x720 <_ZN7Display9drawPixelEhhh>
	//2
	drawPixel(26*cos((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    123e:	20 e0       	ldi	r18, 0x00	; 0
    1240:	42 e1       	ldi	r20, 0x12	; 18
    1242:	65 e3       	ldi	r22, 0x35	; 53
    1244:	8e 81       	ldd	r24, Y+6	; 0x06
    1246:	9f 81       	ldd	r25, Y+7	; 0x07
    1248:	6b da       	rcall	.-2858   	; 0x720 <_ZN7Display9drawPixelEhhh>
	//4
	drawPixel(26*cos((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    124a:	20 e0       	ldi	r18, 0x00	; 0
    124c:	4c e2       	ldi	r20, 0x2C	; 44
    124e:	65 e3       	ldi	r22, 0x35	; 53
    1250:	8e 81       	ldd	r24, Y+6	; 0x06
    1252:	9f 81       	ldd	r25, Y+7	; 0x07
    1254:	65 da       	rcall	.-2870   	; 0x720 <_ZN7Display9drawPixelEhhh>
	//5
	drawPixel(26*cos((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1256:	20 e0       	ldi	r18, 0x00	; 0
    1258:	45 e3       	ldi	r20, 0x35	; 53
    125a:	6b e2       	ldi	r22, 0x2B	; 43
    125c:	8e 81       	ldd	r24, Y+6	; 0x06
    125e:	9f 81       	ldd	r25, Y+7	; 0x07
    1260:	5f da       	rcall	.-2882   	; 0x720 <_ZN7Display9drawPixelEhhh>
	//7
	drawPixel(26*cos((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1262:	20 e0       	ldi	r18, 0x00	; 0
    1264:	45 e3       	ldi	r20, 0x35	; 53
    1266:	61 e1       	ldi	r22, 0x11	; 17
    1268:	8e 81       	ldd	r24, Y+6	; 0x06
    126a:	9f 81       	ldd	r25, Y+7	; 0x07
    126c:	59 da       	rcall	.-2894   	; 0x720 <_ZN7Display9drawPixelEhhh>
	//8
	drawPixel(26*cos((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    126e:	20 e0       	ldi	r18, 0x00	; 0
    1270:	4c e2       	ldi	r20, 0x2C	; 44
    1272:	68 e0       	ldi	r22, 0x08	; 8
    1274:	8e 81       	ldd	r24, Y+6	; 0x06
    1276:	9f 81       	ldd	r25, Y+7	; 0x07
    1278:	53 da       	rcall	.-2906   	; 0x720 <_ZN7Display9drawPixelEhhh>
	//10
	drawPixel(26*cos((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    127a:	20 e0       	ldi	r18, 0x00	; 0
    127c:	41 e1       	ldi	r20, 0x11	; 17
    127e:	68 e0       	ldi	r22, 0x08	; 8
    1280:	8e 81       	ldd	r24, Y+6	; 0x06
    1282:	9f 81       	ldd	r25, Y+7	; 0x07
    1284:	4d da       	rcall	.-2918   	; 0x720 <_ZN7Display9drawPixelEhhh>
	//11
	drawPixel(26*cos((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1286:	20 e0       	ldi	r18, 0x00	; 0
    1288:	48 e0       	ldi	r20, 0x08	; 8
    128a:	62 e1       	ldi	r22, 0x12	; 18
    128c:	8e 81       	ldd	r24, Y+6	; 0x06
    128e:	9f 81       	ldd	r25, Y+7	; 0x07
    1290:	47 da       	rcall	.-2930   	; 0x720 <_ZN7Display9drawPixelEhhh>
}
    1292:	27 96       	adiw	r28, 0x07	; 7
    1294:	0f b6       	in	r0, 0x3f	; 63
    1296:	f8 94       	cli
    1298:	de bf       	out	0x3e, r29	; 62
    129a:	0f be       	out	0x3f, r0	; 63
    129c:	cd bf       	out	0x3d, r28	; 61
    129e:	df 91       	pop	r29
    12a0:	cf 91       	pop	r28
    12a2:	1f 91       	pop	r17
    12a4:	0f 91       	pop	r16
    12a6:	ff 90       	pop	r15
    12a8:	ef 90       	pop	r14
    12aa:	df 90       	pop	r13
    12ac:	cf 90       	pop	r12
    12ae:	bf 90       	pop	r11
    12b0:	af 90       	pop	r10
    12b2:	9f 90       	pop	r9
    12b4:	8f 90       	pop	r8
    12b6:	7f 90       	pop	r7
    12b8:	6f 90       	pop	r6
    12ba:	5f 90       	pop	r5
    12bc:	4f 90       	pop	r4
    12be:	3f 90       	pop	r3
    12c0:	2f 90       	pop	r2
    12c2:	08 95       	ret

000012c4 <_Z8ADC_Readh>:
		oled.draw_pikachu();
		break;
	default:
		break;
	}
}
    12c4:	ec e7       	ldi	r30, 0x7C	; 124
    12c6:	f0 e0       	ldi	r31, 0x00	; 0
    12c8:	90 81       	ld	r25, Z
    12ca:	8f 71       	andi	r24, 0x1F	; 31
    12cc:	90 7e       	andi	r25, 0xE0	; 224
    12ce:	89 2b       	or	r24, r25
    12d0:	80 83       	st	Z, r24
    12d2:	ea e7       	ldi	r30, 0x7A	; 122
    12d4:	f0 e0       	ldi	r31, 0x00	; 0
    12d6:	80 81       	ld	r24, Z
    12d8:	80 64       	ori	r24, 0x40	; 64
    12da:	80 83       	st	Z, r24
    12dc:	80 81       	ld	r24, Z
    12de:	86 fd       	sbrc	r24, 6
    12e0:	fd cf       	rjmp	.-6      	; 0x12dc <_Z8ADC_Readh+0x18>
    12e2:	80 91 78 00 	lds	r24, 0x0078
    12e6:	90 91 79 00 	lds	r25, 0x0079
    12ea:	08 95       	ret

000012ec <_Z14Batteriestatusv>:
    12ec:	cf 92       	push	r12
    12ee:	df 92       	push	r13
    12f0:	ef 92       	push	r14
    12f2:	ff 92       	push	r15
    12f4:	80 e0       	ldi	r24, 0x00	; 0
    12f6:	e6 df       	rcall	.-52     	; 0x12c4 <_Z8ADC_Readh>
    12f8:	bc 01       	movw	r22, r24
    12fa:	80 e0       	ldi	r24, 0x00	; 0
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	0e 94 14 32 	call	0x6428	; 0x6428 <__floatunsisf>
    1302:	20 e0       	ldi	r18, 0x00	; 0
    1304:	30 ec       	ldi	r19, 0xC0	; 192
    1306:	4f e7       	ldi	r20, 0x7F	; 127
    1308:	54 e4       	ldi	r21, 0x44	; 68
    130a:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
    130e:	2c e5       	ldi	r18, 0x5C	; 92
    1310:	3f e8       	ldi	r19, 0x8F	; 143
    1312:	42 e5       	ldi	r20, 0x52	; 82
    1314:	50 e4       	ldi	r21, 0x40	; 64
    1316:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    131a:	2d e0       	ldi	r18, 0x0D	; 13
    131c:	31 e7       	ldi	r19, 0x71	; 113
    131e:	40 e0       	ldi	r20, 0x00	; 0
    1320:	50 e4       	ldi	r21, 0x40	; 64
    1322:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    1326:	60 93 41 03 	sts	0x0341, r22
    132a:	70 93 42 03 	sts	0x0342, r23
    132e:	80 93 43 03 	sts	0x0343, r24
    1332:	90 93 44 03 	sts	0x0344, r25
    1336:	26 e6       	ldi	r18, 0x66	; 102
    1338:	36 e6       	ldi	r19, 0x66	; 102
    133a:	46 e6       	ldi	r20, 0x66	; 102
    133c:	50 e4       	ldi	r21, 0x40	; 64
    133e:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
    1342:	28 e9       	ldi	r18, 0x98	; 152
    1344:	39 e9       	ldi	r19, 0x99	; 153
    1346:	49 e1       	ldi	r20, 0x19	; 25
    1348:	5f e3       	ldi	r21, 0x3F	; 63
    134a:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
    134e:	20 e0       	ldi	r18, 0x00	; 0
    1350:	30 e0       	ldi	r19, 0x00	; 0
    1352:	48 ec       	ldi	r20, 0xC8	; 200
    1354:	52 e4       	ldi	r21, 0x42	; 66
    1356:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    135a:	6b 01       	movw	r12, r22
    135c:	7c 01       	movw	r14, r24
    135e:	20 e0       	ldi	r18, 0x00	; 0
    1360:	30 e0       	ldi	r19, 0x00	; 0
    1362:	40 e2       	ldi	r20, 0x20	; 32
    1364:	51 e4       	ldi	r21, 0x41	; 65
    1366:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    136a:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
    136e:	8d ec       	ldi	r24, 0xCD	; 205
    1370:	68 9f       	mul	r22, r24
    1372:	81 2d       	mov	r24, r1
    1374:	11 24       	eor	r1, r1
    1376:	86 95       	lsr	r24
    1378:	86 95       	lsr	r24
    137a:	86 95       	lsr	r24
    137c:	88 0f       	add	r24, r24
    137e:	28 2f       	mov	r18, r24
    1380:	22 0f       	add	r18, r18
    1382:	22 0f       	add	r18, r18
    1384:	82 0f       	add	r24, r18
    1386:	96 2f       	mov	r25, r22
    1388:	98 1b       	sub	r25, r24
    138a:	95 30       	cpi	r25, 0x05	; 5
    138c:	70 f0       	brcs	.+28     	; 0x13aa <_Z14Batteriestatusv+0xbe>
    138e:	c7 01       	movw	r24, r14
    1390:	b6 01       	movw	r22, r12
    1392:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
    1396:	70 e0       	ldi	r23, 0x00	; 0
    1398:	6f 5f       	subi	r22, 0xFF	; 255
    139a:	7f 4f       	sbci	r23, 0xFF	; 255
    139c:	07 2e       	mov	r0, r23
    139e:	00 0c       	add	r0, r0
    13a0:	88 0b       	sbc	r24, r24
    13a2:	99 0b       	sbc	r25, r25
    13a4:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    13a8:	09 c0       	rjmp	.+18     	; 0x13bc <_Z14Batteriestatusv+0xd0>
    13aa:	c7 01       	movw	r24, r14
    13ac:	b6 01       	movw	r22, r12
    13ae:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
    13b2:	70 e0       	ldi	r23, 0x00	; 0
    13b4:	80 e0       	ldi	r24, 0x00	; 0
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	0e 94 14 32 	call	0x6428	; 0x6428 <__floatunsisf>
    13bc:	0e 94 e3 31 	call	0x63c6	; 0x63c6 <__fixsfsi>
    13c0:	86 2f       	mov	r24, r22
    13c2:	ff 90       	pop	r15
    13c4:	ef 90       	pop	r14
    13c6:	df 90       	pop	r13
    13c8:	cf 90       	pop	r12
    13ca:	08 95       	ret

000013cc <_Z12EEPROM_Writejh>:
    13cc:	f8 94       	cli
    13ce:	f9 99       	sbic	0x1f, 1	; 31
    13d0:	fe cf       	rjmp	.-4      	; 0x13ce <_Z12EEPROM_Writejh+0x2>
    13d2:	92 bd       	out	0x22, r25	; 34
    13d4:	81 bd       	out	0x21, r24	; 33
    13d6:	60 bd       	out	0x20, r22	; 32
    13d8:	fa 9a       	sbi	0x1f, 2	; 31
    13da:	f9 9a       	sbi	0x1f, 1	; 31
    13dc:	78 94       	sei
    13de:	08 95       	ret

000013e0 <_Z11EEPROM_Readj>:
    13e0:	f8 94       	cli
    13e2:	f9 99       	sbic	0x1f, 1	; 31
    13e4:	fe cf       	rjmp	.-4      	; 0x13e2 <_Z11EEPROM_Readj+0x2>
    13e6:	92 bd       	out	0x22, r25	; 34
    13e8:	81 bd       	out	0x21, r24	; 33
    13ea:	f8 9a       	sbi	0x1f, 0	; 31
    13ec:	78 94       	sei
    13ee:	80 b5       	in	r24, 0x20	; 32
    13f0:	08 95       	ret

000013f2 <_Z14willkommenpagev>:
    13f2:	cf 92       	push	r12
    13f4:	df 92       	push	r13
    13f6:	ff 92       	push	r15
    13f8:	0f 93       	push	r16
    13fa:	1f 93       	push	r17
    13fc:	cf 93       	push	r28
    13fe:	df 93       	push	r29
    1400:	cd b7       	in	r28, 0x3d	; 61
    1402:	de b7       	in	r29, 0x3e	; 62
    1404:	64 97       	sbiw	r28, 0x14	; 20
    1406:	0f b6       	in	r0, 0x3f	; 63
    1408:	f8 94       	cli
    140a:	de bf       	out	0x3e, r29	; 62
    140c:	0f be       	out	0x3f, r0	; 63
    140e:	cd bf       	out	0x3d, r28	; 61
    1410:	84 e4       	ldi	r24, 0x44	; 68
    1412:	9c e0       	ldi	r25, 0x0C	; 12
    1414:	c8 d8       	rcall	.-3696   	; 0x5a6 <_ZN7Display10clearFrameEv>
    1416:	8f e0       	ldi	r24, 0x0F	; 15
    1418:	e0 e0       	ldi	r30, 0x00	; 0
    141a:	f1 e0       	ldi	r31, 0x01	; 1
    141c:	de 01       	movw	r26, r28
    141e:	11 96       	adiw	r26, 0x01	; 1
    1420:	01 90       	ld	r0, Z+
    1422:	0d 92       	st	X+, r0
    1424:	8a 95       	dec	r24
    1426:	e1 f7       	brne	.-8      	; 0x1420 <_Z14willkommenpagev+0x2e>
    1428:	8e 01       	movw	r16, r28
    142a:	0f 5f       	subi	r16, 0xFF	; 255
    142c:	1f 4f       	sbci	r17, 0xFF	; 255
    142e:	68 01       	movw	r12, r16
    1430:	f1 2c       	mov	r15, r1
    1432:	f6 01       	movw	r30, r12
    1434:	61 91       	ld	r22, Z+
    1436:	6f 01       	movw	r12, r30
    1438:	20 e0       	ldi	r18, 0x00	; 0
    143a:	4f 2d       	mov	r20, r15
    143c:	84 e4       	ldi	r24, 0x44	; 68
    143e:	9c e0       	ldi	r25, 0x0C	; 12
    1440:	04 dc       	rcall	.-2040   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1442:	f6 e0       	ldi	r31, 0x06	; 6
    1444:	ff 0e       	add	r15, r31
    1446:	24 e5       	ldi	r18, 0x54	; 84
    1448:	f2 12       	cpse	r15, r18
    144a:	f3 cf       	rjmp	.-26     	; 0x1432 <_Z14willkommenpagev+0x40>
    144c:	8f e0       	ldi	r24, 0x0F	; 15
    144e:	ef e0       	ldi	r30, 0x0F	; 15
    1450:	f1 e0       	ldi	r31, 0x01	; 1
    1452:	de 01       	movw	r26, r28
    1454:	11 96       	adiw	r26, 0x01	; 1
    1456:	01 90       	ld	r0, Z+
    1458:	0d 92       	st	X+, r0
    145a:	8a 95       	dec	r24
    145c:	e1 f7       	brne	.-8      	; 0x1456 <_Z14willkommenpagev+0x64>
    145e:	68 01       	movw	r12, r16
    1460:	f1 2c       	mov	r15, r1
    1462:	f6 01       	movw	r30, r12
    1464:	61 91       	ld	r22, Z+
    1466:	6f 01       	movw	r12, r30
    1468:	28 e0       	ldi	r18, 0x08	; 8
    146a:	4f 2d       	mov	r20, r15
    146c:	84 e4       	ldi	r24, 0x44	; 68
    146e:	9c e0       	ldi	r25, 0x0C	; 12
    1470:	ec db       	rcall	.-2088   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1472:	f6 e0       	ldi	r31, 0x06	; 6
    1474:	ff 0e       	add	r15, r31
    1476:	24 e5       	ldi	r18, 0x54	; 84
    1478:	f2 12       	cpse	r15, r18
    147a:	f3 cf       	rjmp	.-26     	; 0x1462 <_Z14willkommenpagev+0x70>
    147c:	80 e4       	ldi	r24, 0x40	; 64
    147e:	8f 93       	push	r24
    1480:	86 e0       	ldi	r24, 0x06	; 6
    1482:	8f 93       	push	r24
    1484:	86 e6       	ldi	r24, 0x66	; 102
    1486:	8f 93       	push	r24
    1488:	8f 93       	push	r24
    148a:	8e e1       	ldi	r24, 0x1E	; 30
    148c:	91 e0       	ldi	r25, 0x01	; 1
    148e:	9f 93       	push	r25
    1490:	8f 93       	push	r24
    1492:	ce 01       	movw	r24, r28
    1494:	01 96       	adiw	r24, 0x01	; 1
    1496:	9f 93       	push	r25
    1498:	8f 93       	push	r24
    149a:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
    149e:	0f b6       	in	r0, 0x3f	; 63
    14a0:	f8 94       	cli
    14a2:	de bf       	out	0x3e, r29	; 62
    14a4:	0f be       	out	0x3f, r0	; 63
    14a6:	cd bf       	out	0x3d, r28	; 61
    14a8:	88 23       	and	r24, r24
    14aa:	a9 f0       	breq	.+42     	; 0x14d6 <_Z14willkommenpagev+0xe4>
    14ac:	81 50       	subi	r24, 0x01	; 1
    14ae:	9e 01       	movw	r18, r28
    14b0:	28 0f       	add	r18, r24
    14b2:	31 1d       	adc	r19, r1
    14b4:	f9 01       	movw	r30, r18
    14b6:	32 96       	adiw	r30, 0x02	; 2
    14b8:	6f 01       	movw	r12, r30
    14ba:	f1 2c       	mov	r15, r1
    14bc:	f8 01       	movw	r30, r16
    14be:	61 91       	ld	r22, Z+
    14c0:	8f 01       	movw	r16, r30
    14c2:	20 e2       	ldi	r18, 0x20	; 32
    14c4:	4f 2d       	mov	r20, r15
    14c6:	84 e4       	ldi	r24, 0x44	; 68
    14c8:	9c e0       	ldi	r25, 0x0C	; 12
    14ca:	bf db       	rcall	.-2178   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    14cc:	f6 e0       	ldi	r31, 0x06	; 6
    14ce:	ff 0e       	add	r15, r31
    14d0:	0c 15       	cp	r16, r12
    14d2:	1d 05       	cpc	r17, r13
    14d4:	99 f7       	brne	.-26     	; 0x14bc <_Z14willkommenpagev+0xca>
    14d6:	84 e4       	ldi	r24, 0x44	; 68
    14d8:	9c e0       	ldi	r25, 0x0C	; 12
    14da:	eb d8       	rcall	.-3626   	; 0x6b2 <_ZN7Display9sendFrameEv>
    14dc:	84 e4       	ldi	r24, 0x44	; 68
    14de:	9c e0       	ldi	r25, 0x0C	; 12
    14e0:	62 d8       	rcall	.-3900   	; 0x5a6 <_ZN7Display10clearFrameEv>
    14e2:	85 e0       	ldi	r24, 0x05	; 5
    14e4:	2f e7       	ldi	r18, 0x7F	; 127
    14e6:	38 e3       	ldi	r19, 0x38	; 56
    14e8:	91 e0       	ldi	r25, 0x01	; 1
    14ea:	21 50       	subi	r18, 0x01	; 1
    14ec:	30 40       	sbci	r19, 0x00	; 0
    14ee:	90 40       	sbci	r25, 0x00	; 0
    14f0:	e1 f7       	brne	.-8      	; 0x14ea <_Z14willkommenpagev+0xf8>
    14f2:	00 c0       	rjmp	.+0      	; 0x14f4 <_Z14willkommenpagev+0x102>
    14f4:	00 00       	nop
    14f6:	ef e7       	ldi	r30, 0x7F	; 127
    14f8:	f8 e3       	ldi	r31, 0x38	; 56
    14fa:	21 e0       	ldi	r18, 0x01	; 1
    14fc:	e1 50       	subi	r30, 0x01	; 1
    14fe:	f0 40       	sbci	r31, 0x00	; 0
    1500:	20 40       	sbci	r18, 0x00	; 0
    1502:	e1 f7       	brne	.-8      	; 0x14fc <_Z14willkommenpagev+0x10a>
    1504:	00 c0       	rjmp	.+0      	; 0x1506 <_Z14willkommenpagev+0x114>
    1506:	00 00       	nop
    1508:	81 50       	subi	r24, 0x01	; 1
    150a:	61 f7       	brne	.-40     	; 0x14e4 <_Z14willkommenpagev+0xf2>
    150c:	64 96       	adiw	r28, 0x14	; 20
    150e:	0f b6       	in	r0, 0x3f	; 63
    1510:	f8 94       	cli
    1512:	de bf       	out	0x3e, r29	; 62
    1514:	0f be       	out	0x3f, r0	; 63
    1516:	cd bf       	out	0x3d, r28	; 61
    1518:	df 91       	pop	r29
    151a:	cf 91       	pop	r28
    151c:	1f 91       	pop	r17
    151e:	0f 91       	pop	r16
    1520:	ff 90       	pop	r15
    1522:	df 90       	pop	r13
    1524:	cf 90       	pop	r12
    1526:	08 95       	ret

00001528 <_Z6headerh>:
    1528:	ef 92       	push	r14
    152a:	ff 92       	push	r15
    152c:	0f 93       	push	r16
    152e:	1f 93       	push	r17
    1530:	cf 93       	push	r28
    1532:	df 93       	push	r29
    1534:	cd b7       	in	r28, 0x3d	; 61
    1536:	de b7       	in	r29, 0x3e	; 62
    1538:	64 97       	sbiw	r28, 0x14	; 20
    153a:	0f b6       	in	r0, 0x3f	; 63
    153c:	f8 94       	cli
    153e:	de bf       	out	0x3e, r29	; 62
    1540:	0f be       	out	0x3f, r0	; 63
    1542:	cd bf       	out	0x3d, r28	; 61
    1544:	81 30       	cpi	r24, 0x01	; 1
    1546:	09 f4       	brne	.+2      	; 0x154a <_Z6headerh+0x22>
    1548:	4d c0       	rjmp	.+154    	; 0x15e4 <_Z6headerh+0xbc>
    154a:	20 f0       	brcs	.+8      	; 0x1554 <_Z6headerh+0x2c>
    154c:	82 30       	cpi	r24, 0x02	; 2
    154e:	09 f4       	brne	.+2      	; 0x1552 <_Z6headerh+0x2a>
    1550:	7f c0       	rjmp	.+254    	; 0x1650 <_Z6headerh+0x128>
    1552:	b2 c0       	rjmp	.+356    	; 0x16b8 <_Z6headerh+0x190>
    1554:	0f 2e       	mov	r0, r31
    1556:	f5 e4       	ldi	r31, 0x45	; 69
    1558:	ef 2e       	mov	r14, r31
    155a:	f0 e1       	ldi	r31, 0x10	; 16
    155c:	ff 2e       	mov	r15, r31
    155e:	f0 2d       	mov	r31, r0
    1560:	10 e0       	ldi	r17, 0x00	; 0
    1562:	f7 01       	movw	r30, r14
    1564:	61 91       	ld	r22, Z+
    1566:	7f 01       	movw	r14, r30
    1568:	20 e0       	ldi	r18, 0x00	; 0
    156a:	41 2f       	mov	r20, r17
    156c:	84 e4       	ldi	r24, 0x44	; 68
    156e:	9c e0       	ldi	r25, 0x0C	; 12
    1570:	6c db       	rcall	.-2344   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1572:	1a 5f       	subi	r17, 0xFA	; 250
    1574:	10 33       	cpi	r17, 0x30	; 48
    1576:	a9 f7       	brne	.-22     	; 0x1562 <_Z6headerh+0x3a>
    1578:	b9 de       	rcall	.-654    	; 0x12ec <_Z14Batteriestatusv>
    157a:	28 2f       	mov	r18, r24
    157c:	08 2e       	mov	r0, r24
    157e:	00 0c       	add	r0, r0
    1580:	33 0b       	sbc	r19, r19
    1582:	3f 93       	push	r19
    1584:	8f 93       	push	r24
    1586:	8c e2       	ldi	r24, 0x2C	; 44
    1588:	91 e0       	ldi	r25, 0x01	; 1
    158a:	9f 93       	push	r25
    158c:	8f 93       	push	r24
    158e:	ce 01       	movw	r24, r28
    1590:	01 96       	adiw	r24, 0x01	; 1
    1592:	9f 93       	push	r25
    1594:	8f 93       	push	r24
    1596:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
    159a:	15 e1       	ldi	r17, 0x15	; 21
    159c:	18 1b       	sub	r17, r24
    159e:	0f 90       	pop	r0
    15a0:	0f 90       	pop	r0
    15a2:	0f 90       	pop	r0
    15a4:	0f 90       	pop	r0
    15a6:	0f 90       	pop	r0
    15a8:	0f 90       	pop	r0
    15aa:	15 31       	cpi	r17, 0x15	; 21
    15ac:	08 f0       	brcs	.+2      	; 0x15b0 <_Z6headerh+0x88>
    15ae:	84 c0       	rjmp	.+264    	; 0x16b8 <_Z6headerh+0x190>
    15b0:	01 2f       	mov	r16, r17
    15b2:	00 0f       	add	r16, r16
    15b4:	01 0f       	add	r16, r17
    15b6:	00 0f       	add	r16, r16
    15b8:	7c 01       	movw	r14, r24
    15ba:	ff 24       	eor	r15, r15
    15bc:	e1 e0       	ldi	r30, 0x01	; 1
    15be:	f0 e0       	ldi	r31, 0x00	; 0
    15c0:	ec 0f       	add	r30, r28
    15c2:	fd 1f       	adc	r31, r29
    15c4:	e1 0f       	add	r30, r17
    15c6:	f1 1d       	adc	r31, r1
    15c8:	ee 0d       	add	r30, r14
    15ca:	ff 1d       	adc	r31, r15
    15cc:	75 97       	sbiw	r30, 0x15	; 21
    15ce:	20 e0       	ldi	r18, 0x00	; 0
    15d0:	40 2f       	mov	r20, r16
    15d2:	60 81       	ld	r22, Z
    15d4:	84 e4       	ldi	r24, 0x44	; 68
    15d6:	9c e0       	ldi	r25, 0x0C	; 12
    15d8:	38 db       	rcall	.-2448   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    15da:	1f 5f       	subi	r17, 0xFF	; 255
    15dc:	0a 5f       	subi	r16, 0xFA	; 250
    15de:	15 31       	cpi	r17, 0x15	; 21
    15e0:	69 f7       	brne	.-38     	; 0x15bc <_Z6headerh+0x94>
    15e2:	6a c0       	rjmp	.+212    	; 0x16b8 <_Z6headerh+0x190>
    15e4:	83 de       	rcall	.-762    	; 0x12ec <_Z14Batteriestatusv>
    15e6:	28 2f       	mov	r18, r24
    15e8:	08 2e       	mov	r0, r24
    15ea:	00 0c       	add	r0, r0
    15ec:	33 0b       	sbc	r19, r19
    15ee:	3f 93       	push	r19
    15f0:	8f 93       	push	r24
    15f2:	8c e2       	ldi	r24, 0x2C	; 44
    15f4:	91 e0       	ldi	r25, 0x01	; 1
    15f6:	9f 93       	push	r25
    15f8:	8f 93       	push	r24
    15fa:	ce 01       	movw	r24, r28
    15fc:	01 96       	adiw	r24, 0x01	; 1
    15fe:	9f 93       	push	r25
    1600:	8f 93       	push	r24
    1602:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
    1606:	15 e1       	ldi	r17, 0x15	; 21
    1608:	18 1b       	sub	r17, r24
    160a:	0f 90       	pop	r0
    160c:	0f 90       	pop	r0
    160e:	0f 90       	pop	r0
    1610:	0f 90       	pop	r0
    1612:	0f 90       	pop	r0
    1614:	0f 90       	pop	r0
    1616:	15 31       	cpi	r17, 0x15	; 21
    1618:	08 f0       	brcs	.+2      	; 0x161c <_Z6headerh+0xf4>
    161a:	4e c0       	rjmp	.+156    	; 0x16b8 <_Z6headerh+0x190>
    161c:	01 2f       	mov	r16, r17
    161e:	00 0f       	add	r16, r16
    1620:	01 0f       	add	r16, r17
    1622:	00 0f       	add	r16, r16
    1624:	7c 01       	movw	r14, r24
    1626:	ff 24       	eor	r15, r15
    1628:	e1 e0       	ldi	r30, 0x01	; 1
    162a:	f0 e0       	ldi	r31, 0x00	; 0
    162c:	ec 0f       	add	r30, r28
    162e:	fd 1f       	adc	r31, r29
    1630:	e1 0f       	add	r30, r17
    1632:	f1 1d       	adc	r31, r1
    1634:	ee 0d       	add	r30, r14
    1636:	ff 1d       	adc	r31, r15
    1638:	75 97       	sbiw	r30, 0x15	; 21
    163a:	20 e0       	ldi	r18, 0x00	; 0
    163c:	40 2f       	mov	r20, r16
    163e:	60 81       	ld	r22, Z
    1640:	84 e4       	ldi	r24, 0x44	; 68
    1642:	9c e0       	ldi	r25, 0x0C	; 12
    1644:	02 db       	rcall	.-2556   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1646:	1f 5f       	subi	r17, 0xFF	; 255
    1648:	0a 5f       	subi	r16, 0xFA	; 250
    164a:	15 31       	cpi	r17, 0x15	; 21
    164c:	69 f7       	brne	.-38     	; 0x1628 <_Z6headerh+0x100>
    164e:	34 c0       	rjmp	.+104    	; 0x16b8 <_Z6headerh+0x190>
    1650:	4d de       	rcall	.-870    	; 0x12ec <_Z14Batteriestatusv>
    1652:	28 2f       	mov	r18, r24
    1654:	08 2e       	mov	r0, r24
    1656:	00 0c       	add	r0, r0
    1658:	33 0b       	sbc	r19, r19
    165a:	3f 93       	push	r19
    165c:	8f 93       	push	r24
    165e:	81 e3       	ldi	r24, 0x31	; 49
    1660:	91 e0       	ldi	r25, 0x01	; 1
    1662:	9f 93       	push	r25
    1664:	8f 93       	push	r24
    1666:	ce 01       	movw	r24, r28
    1668:	01 96       	adiw	r24, 0x01	; 1
    166a:	9f 93       	push	r25
    166c:	8f 93       	push	r24
    166e:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
    1672:	15 e1       	ldi	r17, 0x15	; 21
    1674:	18 1b       	sub	r17, r24
    1676:	0f 90       	pop	r0
    1678:	0f 90       	pop	r0
    167a:	0f 90       	pop	r0
    167c:	0f 90       	pop	r0
    167e:	0f 90       	pop	r0
    1680:	0f 90       	pop	r0
    1682:	15 31       	cpi	r17, 0x15	; 21
    1684:	c8 f4       	brcc	.+50     	; 0x16b8 <_Z6headerh+0x190>
    1686:	01 2f       	mov	r16, r17
    1688:	00 0f       	add	r16, r16
    168a:	01 0f       	add	r16, r17
    168c:	00 0f       	add	r16, r16
    168e:	7c 01       	movw	r14, r24
    1690:	ff 24       	eor	r15, r15
    1692:	e1 e0       	ldi	r30, 0x01	; 1
    1694:	f0 e0       	ldi	r31, 0x00	; 0
    1696:	ec 0f       	add	r30, r28
    1698:	fd 1f       	adc	r31, r29
    169a:	e1 0f       	add	r30, r17
    169c:	f1 1d       	adc	r31, r1
    169e:	ee 0d       	add	r30, r14
    16a0:	ff 1d       	adc	r31, r15
    16a2:	75 97       	sbiw	r30, 0x15	; 21
    16a4:	20 e0       	ldi	r18, 0x00	; 0
    16a6:	40 2f       	mov	r20, r16
    16a8:	60 81       	ld	r22, Z
    16aa:	84 e4       	ldi	r24, 0x44	; 68
    16ac:	9c e0       	ldi	r25, 0x0C	; 12
    16ae:	cd da       	rcall	.-2662   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    16b0:	1f 5f       	subi	r17, 0xFF	; 255
    16b2:	0a 5f       	subi	r16, 0xFA	; 250
    16b4:	15 31       	cpi	r17, 0x15	; 21
    16b6:	69 f7       	brne	.-38     	; 0x1692 <_Z6headerh+0x16a>
    16b8:	64 96       	adiw	r28, 0x14	; 20
    16ba:	0f b6       	in	r0, 0x3f	; 63
    16bc:	f8 94       	cli
    16be:	de bf       	out	0x3e, r29	; 62
    16c0:	0f be       	out	0x3f, r0	; 63
    16c2:	cd bf       	out	0x3d, r28	; 61
    16c4:	df 91       	pop	r29
    16c6:	cf 91       	pop	r28
    16c8:	1f 91       	pop	r17
    16ca:	0f 91       	pop	r16
    16cc:	ff 90       	pop	r15
    16ce:	ef 90       	pop	r14
    16d0:	08 95       	ret

000016d2 <_Z6bottomh>:
    16d2:	0f 93       	push	r16
    16d4:	1f 93       	push	r17
    16d6:	cf 93       	push	r28
    16d8:	88 23       	and	r24, r24
    16da:	19 f0       	breq	.+6      	; 0x16e2 <_Z6bottomh+0x10>
    16dc:	81 30       	cpi	r24, 0x01	; 1
    16de:	81 f0       	breq	.+32     	; 0x1700 <_Z6bottomh+0x2e>
    16e0:	1d c0       	rjmp	.+58     	; 0x171c <_Z6bottomh+0x4a>
    16e2:	0d e4       	ldi	r16, 0x4D	; 77
    16e4:	10 e1       	ldi	r17, 0x10	; 16
    16e6:	c0 e5       	ldi	r28, 0x50	; 80
    16e8:	f8 01       	movw	r30, r16
    16ea:	61 91       	ld	r22, Z+
    16ec:	8f 01       	movw	r16, r30
    16ee:	28 e3       	ldi	r18, 0x38	; 56
    16f0:	4c 2f       	mov	r20, r28
    16f2:	84 e4       	ldi	r24, 0x44	; 68
    16f4:	9c e0       	ldi	r25, 0x0C	; 12
    16f6:	a9 da       	rcall	.-2734   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    16f8:	ca 5f       	subi	r28, 0xFA	; 250
    16fa:	c0 38       	cpi	r28, 0x80	; 128
    16fc:	a9 f7       	brne	.-22     	; 0x16e8 <_Z6bottomh+0x16>
    16fe:	0e c0       	rjmp	.+28     	; 0x171c <_Z6bottomh+0x4a>
    1700:	0d e4       	ldi	r16, 0x4D	; 77
    1702:	10 e1       	ldi	r17, 0x10	; 16
    1704:	c5 e0       	ldi	r28, 0x05	; 5
    1706:	f8 01       	movw	r30, r16
    1708:	61 91       	ld	r22, Z+
    170a:	8f 01       	movw	r16, r30
    170c:	28 e3       	ldi	r18, 0x38	; 56
    170e:	4c 2f       	mov	r20, r28
    1710:	84 e4       	ldi	r24, 0x44	; 68
    1712:	9c e0       	ldi	r25, 0x0C	; 12
    1714:	9a da       	rcall	.-2764   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1716:	ca 5f       	subi	r28, 0xFA	; 250
    1718:	c5 33       	cpi	r28, 0x35	; 53
    171a:	a9 f7       	brne	.-22     	; 0x1706 <_Z6bottomh+0x34>
    171c:	cf 91       	pop	r28
    171e:	1f 91       	pop	r17
    1720:	0f 91       	pop	r16
    1722:	08 95       	ret

00001724 <_Z16anzeige_richtungfhh>:
    1724:	cf 92       	push	r12
    1726:	df 92       	push	r13
    1728:	ef 92       	push	r14
    172a:	ff 92       	push	r15
    172c:	cf 93       	push	r28
    172e:	df 93       	push	r29
    1730:	6b 01       	movw	r12, r22
    1732:	7c 01       	movw	r14, r24
    1734:	d4 2f       	mov	r29, r20
    1736:	c2 2f       	mov	r28, r18
    1738:	20 e0       	ldi	r18, 0x00	; 0
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	40 eb       	ldi	r20, 0xB0	; 176
    173e:	51 e4       	ldi	r21, 0x41	; 65
    1740:	0e 94 74 31 	call	0x62e8	; 0x62e8 <__cmpsf2>
    1744:	88 23       	and	r24, r24
    1746:	54 f0       	brlt	.+20     	; 0x175c <_Z16anzeige_richtungfhh+0x38>
    1748:	20 e0       	ldi	r18, 0x00	; 0
    174a:	30 e0       	ldi	r19, 0x00	; 0
    174c:	49 ea       	ldi	r20, 0xA9	; 169
    174e:	53 e4       	ldi	r21, 0x43	; 67
    1750:	c7 01       	movw	r24, r14
    1752:	b6 01       	movw	r22, r12
    1754:	0e 94 24 33 	call	0x6648	; 0x6648 <__gesf2>
    1758:	88 23       	and	r24, r24
    175a:	54 f0       	brlt	.+20     	; 0x1770 <_Z16anzeige_richtungfhh+0x4c>
    175c:	2c 2f       	mov	r18, r28
    175e:	22 0f       	add	r18, r18
    1760:	22 0f       	add	r18, r18
    1762:	22 0f       	add	r18, r18
    1764:	4d 2f       	mov	r20, r29
    1766:	6e e4       	ldi	r22, 0x4E	; 78
    1768:	84 e4       	ldi	r24, 0x44	; 68
    176a:	9c e0       	ldi	r25, 0x0C	; 12
    176c:	6e da       	rcall	.-2852   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    176e:	ab c0       	rjmp	.+342    	; 0x18c6 <_Z16anzeige_richtungfhh+0x1a2>
    1770:	20 e0       	ldi	r18, 0x00	; 0
    1772:	30 e0       	ldi	r19, 0x00	; 0
    1774:	48 e8       	ldi	r20, 0x88	; 136
    1776:	52 e4       	ldi	r21, 0x42	; 66
    1778:	c7 01       	movw	r24, r14
    177a:	b6 01       	movw	r22, r12
    177c:	0e 94 74 31 	call	0x62e8	; 0x62e8 <__cmpsf2>
    1780:	88 23       	and	r24, r24
    1782:	94 f4       	brge	.+36     	; 0x17a8 <_Z16anzeige_richtungfhh+0x84>
    1784:	cc 0f       	add	r28, r28
    1786:	cc 0f       	add	r28, r28
    1788:	cc 0f       	add	r28, r28
    178a:	4d ef       	ldi	r20, 0xFD	; 253
    178c:	4d 0f       	add	r20, r29
    178e:	2c 2f       	mov	r18, r28
    1790:	6e e4       	ldi	r22, 0x4E	; 78
    1792:	84 e4       	ldi	r24, 0x44	; 68
    1794:	9c e0       	ldi	r25, 0x0C	; 12
    1796:	59 da       	rcall	.-2894   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1798:	43 e0       	ldi	r20, 0x03	; 3
    179a:	4d 0f       	add	r20, r29
    179c:	2c 2f       	mov	r18, r28
    179e:	6f e4       	ldi	r22, 0x4F	; 79
    17a0:	84 e4       	ldi	r24, 0x44	; 68
    17a2:	9c e0       	ldi	r25, 0x0C	; 12
    17a4:	52 da       	rcall	.-2908   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    17a6:	8f c0       	rjmp	.+286    	; 0x18c6 <_Z16anzeige_richtungfhh+0x1a2>
    17a8:	20 e0       	ldi	r18, 0x00	; 0
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	42 ee       	ldi	r20, 0xE2	; 226
    17ae:	52 e4       	ldi	r21, 0x42	; 66
    17b0:	c7 01       	movw	r24, r14
    17b2:	b6 01       	movw	r22, r12
    17b4:	0e 94 74 31 	call	0x62e8	; 0x62e8 <__cmpsf2>
    17b8:	88 23       	and	r24, r24
    17ba:	54 f4       	brge	.+20     	; 0x17d0 <_Z16anzeige_richtungfhh+0xac>
    17bc:	2c 2f       	mov	r18, r28
    17be:	22 0f       	add	r18, r18
    17c0:	22 0f       	add	r18, r18
    17c2:	22 0f       	add	r18, r18
    17c4:	4d 2f       	mov	r20, r29
    17c6:	6f e4       	ldi	r22, 0x4F	; 79
    17c8:	84 e4       	ldi	r24, 0x44	; 68
    17ca:	9c e0       	ldi	r25, 0x0C	; 12
    17cc:	3e da       	rcall	.-2948   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    17ce:	7b c0       	rjmp	.+246    	; 0x18c6 <_Z16anzeige_richtungfhh+0x1a2>
    17d0:	20 e0       	ldi	r18, 0x00	; 0
    17d2:	30 e0       	ldi	r19, 0x00	; 0
    17d4:	4e e1       	ldi	r20, 0x1E	; 30
    17d6:	53 e4       	ldi	r21, 0x43	; 67
    17d8:	c7 01       	movw	r24, r14
    17da:	b6 01       	movw	r22, r12
    17dc:	0e 94 74 31 	call	0x62e8	; 0x62e8 <__cmpsf2>
    17e0:	88 23       	and	r24, r24
    17e2:	94 f4       	brge	.+36     	; 0x1808 <_Z16anzeige_richtungfhh+0xe4>
    17e4:	cc 0f       	add	r28, r28
    17e6:	cc 0f       	add	r28, r28
    17e8:	cc 0f       	add	r28, r28
    17ea:	4d ef       	ldi	r20, 0xFD	; 253
    17ec:	4d 0f       	add	r20, r29
    17ee:	2c 2f       	mov	r18, r28
    17f0:	63 e5       	ldi	r22, 0x53	; 83
    17f2:	84 e4       	ldi	r24, 0x44	; 68
    17f4:	9c e0       	ldi	r25, 0x0C	; 12
    17f6:	29 da       	rcall	.-2990   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    17f8:	43 e0       	ldi	r20, 0x03	; 3
    17fa:	4d 0f       	add	r20, r29
    17fc:	2c 2f       	mov	r18, r28
    17fe:	6f e4       	ldi	r22, 0x4F	; 79
    1800:	84 e4       	ldi	r24, 0x44	; 68
    1802:	9c e0       	ldi	r25, 0x0C	; 12
    1804:	22 da       	rcall	.-3004   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1806:	5f c0       	rjmp	.+190    	; 0x18c6 <_Z16anzeige_richtungfhh+0x1a2>
    1808:	20 e0       	ldi	r18, 0x00	; 0
    180a:	30 e0       	ldi	r19, 0x00	; 0
    180c:	4b e4       	ldi	r20, 0x4B	; 75
    180e:	53 e4       	ldi	r21, 0x43	; 67
    1810:	c7 01       	movw	r24, r14
    1812:	b6 01       	movw	r22, r12
    1814:	0e 94 74 31 	call	0x62e8	; 0x62e8 <__cmpsf2>
    1818:	88 23       	and	r24, r24
    181a:	54 f4       	brge	.+20     	; 0x1830 <_Z16anzeige_richtungfhh+0x10c>
    181c:	2c 2f       	mov	r18, r28
    181e:	22 0f       	add	r18, r18
    1820:	22 0f       	add	r18, r18
    1822:	22 0f       	add	r18, r18
    1824:	4d 2f       	mov	r20, r29
    1826:	63 e5       	ldi	r22, 0x53	; 83
    1828:	84 e4       	ldi	r24, 0x44	; 68
    182a:	9c e0       	ldi	r25, 0x0C	; 12
    182c:	0e da       	rcall	.-3044   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    182e:	4b c0       	rjmp	.+150    	; 0x18c6 <_Z16anzeige_richtungfhh+0x1a2>
    1830:	20 e0       	ldi	r18, 0x00	; 0
    1832:	30 e0       	ldi	r19, 0x00	; 0
    1834:	48 e7       	ldi	r20, 0x78	; 120
    1836:	53 e4       	ldi	r21, 0x43	; 67
    1838:	c7 01       	movw	r24, r14
    183a:	b6 01       	movw	r22, r12
    183c:	0e 94 74 31 	call	0x62e8	; 0x62e8 <__cmpsf2>
    1840:	88 23       	and	r24, r24
    1842:	94 f4       	brge	.+36     	; 0x1868 <_Z16anzeige_richtungfhh+0x144>
    1844:	cc 0f       	add	r28, r28
    1846:	cc 0f       	add	r28, r28
    1848:	cc 0f       	add	r28, r28
    184a:	4d ef       	ldi	r20, 0xFD	; 253
    184c:	4d 0f       	add	r20, r29
    184e:	2c 2f       	mov	r18, r28
    1850:	63 e5       	ldi	r22, 0x53	; 83
    1852:	84 e4       	ldi	r24, 0x44	; 68
    1854:	9c e0       	ldi	r25, 0x0C	; 12
    1856:	f9 d9       	rcall	.-3086   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1858:	43 e0       	ldi	r20, 0x03	; 3
    185a:	4d 0f       	add	r20, r29
    185c:	2c 2f       	mov	r18, r28
    185e:	67 e5       	ldi	r22, 0x57	; 87
    1860:	84 e4       	ldi	r24, 0x44	; 68
    1862:	9c e0       	ldi	r25, 0x0C	; 12
    1864:	f2 d9       	rcall	.-3100   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1866:	2f c0       	rjmp	.+94     	; 0x18c6 <_Z16anzeige_richtungfhh+0x1a2>
    1868:	20 e0       	ldi	r18, 0x00	; 0
    186a:	30 e8       	ldi	r19, 0x80	; 128
    186c:	42 e9       	ldi	r20, 0x92	; 146
    186e:	53 e4       	ldi	r21, 0x43	; 67
    1870:	c7 01       	movw	r24, r14
    1872:	b6 01       	movw	r22, r12
    1874:	0e 94 74 31 	call	0x62e8	; 0x62e8 <__cmpsf2>
    1878:	88 23       	and	r24, r24
    187a:	54 f4       	brge	.+20     	; 0x1890 <_Z16anzeige_richtungfhh+0x16c>
    187c:	2c 2f       	mov	r18, r28
    187e:	22 0f       	add	r18, r18
    1880:	22 0f       	add	r18, r18
    1882:	22 0f       	add	r18, r18
    1884:	4d 2f       	mov	r20, r29
    1886:	67 e5       	ldi	r22, 0x57	; 87
    1888:	84 e4       	ldi	r24, 0x44	; 68
    188a:	9c e0       	ldi	r25, 0x0C	; 12
    188c:	de d9       	rcall	.-3140   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    188e:	1b c0       	rjmp	.+54     	; 0x18c6 <_Z16anzeige_richtungfhh+0x1a2>
    1890:	20 e0       	ldi	r18, 0x00	; 0
    1892:	30 e0       	ldi	r19, 0x00	; 0
    1894:	49 ea       	ldi	r20, 0xA9	; 169
    1896:	53 e4       	ldi	r21, 0x43	; 67
    1898:	c7 01       	movw	r24, r14
    189a:	b6 01       	movw	r22, r12
    189c:	0e 94 74 31 	call	0x62e8	; 0x62e8 <__cmpsf2>
    18a0:	88 23       	and	r24, r24
    18a2:	8c f4       	brge	.+34     	; 0x18c6 <_Z16anzeige_richtungfhh+0x1a2>
    18a4:	cc 0f       	add	r28, r28
    18a6:	cc 0f       	add	r28, r28
    18a8:	cc 0f       	add	r28, r28
    18aa:	4d ef       	ldi	r20, 0xFD	; 253
    18ac:	4d 0f       	add	r20, r29
    18ae:	2c 2f       	mov	r18, r28
    18b0:	6e e4       	ldi	r22, 0x4E	; 78
    18b2:	84 e4       	ldi	r24, 0x44	; 68
    18b4:	9c e0       	ldi	r25, 0x0C	; 12
    18b6:	c9 d9       	rcall	.-3182   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    18b8:	43 e0       	ldi	r20, 0x03	; 3
    18ba:	4d 0f       	add	r20, r29
    18bc:	2c 2f       	mov	r18, r28
    18be:	67 e5       	ldi	r22, 0x57	; 87
    18c0:	84 e4       	ldi	r24, 0x44	; 68
    18c2:	9c e0       	ldi	r25, 0x0C	; 12
    18c4:	c2 d9       	rcall	.-3196   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    18c6:	df 91       	pop	r29
    18c8:	cf 91       	pop	r28
    18ca:	ff 90       	pop	r15
    18cc:	ef 90       	pop	r14
    18ce:	df 90       	pop	r13
    18d0:	cf 90       	pop	r12
    18d2:	08 95       	ret

000018d4 <_Z13anzeige_nadelhhf>:
    18d4:	af 92       	push	r10
    18d6:	bf 92       	push	r11
    18d8:	cf 92       	push	r12
    18da:	df 92       	push	r13
    18dc:	ef 92       	push	r14
    18de:	ff 92       	push	r15
    18e0:	0f 93       	push	r16
    18e2:	1f 93       	push	r17
    18e4:	59 01       	movw	r10, r18
    18e6:	6a 01       	movw	r12, r20
    18e8:	e1 2c       	mov	r14, r1
    18ea:	f1 2c       	mov	r15, r1
    18ec:	0c e8       	ldi	r16, 0x8C	; 140
    18ee:	12 e4       	ldi	r17, 0x42	; 66
    18f0:	24 e1       	ldi	r18, 0x14	; 20
    18f2:	46 2f       	mov	r20, r22
    18f4:	68 2f       	mov	r22, r24
    18f6:	84 e4       	ldi	r24, 0x44	; 68
    18f8:	9c e0       	ldi	r25, 0x0C	; 12
    18fa:	7f d8       	rcall	.-3842   	; 0x9fa <_ZN7Display13draw_triangleEhhhff>
    18fc:	1f 91       	pop	r17
    18fe:	0f 91       	pop	r16
    1900:	ff 90       	pop	r15
    1902:	ef 90       	pop	r14
    1904:	df 90       	pop	r13
    1906:	cf 90       	pop	r12
    1908:	bf 90       	pop	r11
    190a:	af 90       	pop	r10
    190c:	08 95       	ret

0000190e <_Z19anzeige_kleinenadelhhf>:
    190e:	af 92       	push	r10
    1910:	bf 92       	push	r11
    1912:	cf 92       	push	r12
    1914:	df 92       	push	r13
    1916:	ef 92       	push	r14
    1918:	ff 92       	push	r15
    191a:	0f 93       	push	r16
    191c:	1f 93       	push	r17
    191e:	59 01       	movw	r10, r18
    1920:	6a 01       	movw	r12, r20
    1922:	e1 2c       	mov	r14, r1
    1924:	f1 2c       	mov	r15, r1
    1926:	0c e8       	ldi	r16, 0x8C	; 140
    1928:	12 e4       	ldi	r17, 0x42	; 66
    192a:	2a e0       	ldi	r18, 0x0A	; 10
    192c:	46 2f       	mov	r20, r22
    192e:	68 2f       	mov	r22, r24
    1930:	84 e4       	ldi	r24, 0x44	; 68
    1932:	9c e0       	ldi	r25, 0x0C	; 12
    1934:	62 d8       	rcall	.-3900   	; 0x9fa <_ZN7Display13draw_triangleEhhhff>
    1936:	1f 91       	pop	r17
    1938:	0f 91       	pop	r16
    193a:	ff 90       	pop	r15
    193c:	ef 90       	pop	r14
    193e:	df 90       	pop	r13
    1940:	cf 90       	pop	r12
    1942:	bf 90       	pop	r11
    1944:	af 90       	pop	r10
    1946:	08 95       	ret

00001948 <_Z9GOL_seitev>:
    1948:	e5 e4       	ldi	r30, 0x45	; 69
    194a:	f3 e0       	ldi	r31, 0x03	; 3
    194c:	a4 e4       	ldi	r26, 0x44	; 68
    194e:	bc e0       	ldi	r27, 0x0C	; 12
    1950:	25 e4       	ldi	r18, 0x45	; 69
    1952:	37 e0       	ldi	r19, 0x07	; 7
    1954:	81 91       	ld	r24, Z+
    1956:	8d 93       	st	X+, r24
    1958:	e2 17       	cp	r30, r18
    195a:	f3 07       	cpc	r31, r19
    195c:	d9 f7       	brne	.-10     	; 0x1954 <_Z9GOL_seitev+0xc>
    195e:	08 95       	ret

00001960 <_Z11menue_hauptv>:
    1960:	cf 92       	push	r12
    1962:	df 92       	push	r13
    1964:	ef 92       	push	r14
    1966:	ff 92       	push	r15
    1968:	1f 93       	push	r17
    196a:	cf 93       	push	r28
    196c:	df 93       	push	r29
    196e:	cd b7       	in	r28, 0x3d	; 61
    1970:	de b7       	in	r29, 0x3e	; 62
    1972:	64 97       	sbiw	r28, 0x14	; 20
    1974:	0f b6       	in	r0, 0x3f	; 63
    1976:	f8 94       	cli
    1978:	de bf       	out	0x3e, r29	; 62
    197a:	0f be       	out	0x3f, r0	; 63
    197c:	cd bf       	out	0x3d, r28	; 61
    197e:	84 e4       	ldi	r24, 0x44	; 68
    1980:	9c e0       	ldi	r25, 0x0C	; 12
    1982:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    1986:	80 e1       	ldi	r24, 0x10	; 16
    1988:	e6 e3       	ldi	r30, 0x36	; 54
    198a:	f1 e0       	ldi	r31, 0x01	; 1
    198c:	de 01       	movw	r26, r28
    198e:	11 96       	adiw	r26, 0x01	; 1
    1990:	01 90       	ld	r0, Z+
    1992:	0d 92       	st	X+, r0
    1994:	8a 95       	dec	r24
    1996:	e1 f7       	brne	.-8      	; 0x1990 <_Z11menue_hauptv+0x30>
    1998:	ce 01       	movw	r24, r28
    199a:	01 96       	adiw	r24, 0x01	; 1
    199c:	7c 01       	movw	r14, r24
    199e:	6c 01       	movw	r12, r24
    19a0:	10 e0       	ldi	r17, 0x00	; 0
    19a2:	f6 01       	movw	r30, r12
    19a4:	61 91       	ld	r22, Z+
    19a6:	6f 01       	movw	r12, r30
    19a8:	20 e0       	ldi	r18, 0x00	; 0
    19aa:	41 2f       	mov	r20, r17
    19ac:	84 e4       	ldi	r24, 0x44	; 68
    19ae:	9c e0       	ldi	r25, 0x0C	; 12
    19b0:	4c d9       	rcall	.-3432   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    19b2:	1a 5f       	subi	r17, 0xFA	; 250
    19b4:	1a 35       	cpi	r17, 0x5A	; 90
    19b6:	a9 f7       	brne	.-22     	; 0x19a2 <_Z11menue_hauptv+0x42>
    19b8:	81 e1       	ldi	r24, 0x11	; 17
    19ba:	e6 e4       	ldi	r30, 0x46	; 70
    19bc:	f1 e0       	ldi	r31, 0x01	; 1
    19be:	de 01       	movw	r26, r28
    19c0:	11 96       	adiw	r26, 0x01	; 1
    19c2:	01 90       	ld	r0, Z+
    19c4:	0d 92       	st	X+, r0
    19c6:	8a 95       	dec	r24
    19c8:	e1 f7       	brne	.-8      	; 0x19c2 <_Z11menue_hauptv+0x62>
    19ca:	67 01       	movw	r12, r14
    19cc:	10 e0       	ldi	r17, 0x00	; 0
    19ce:	f6 01       	movw	r30, r12
    19d0:	61 91       	ld	r22, Z+
    19d2:	6f 01       	movw	r12, r30
    19d4:	28 e0       	ldi	r18, 0x08	; 8
    19d6:	41 2f       	mov	r20, r17
    19d8:	84 e4       	ldi	r24, 0x44	; 68
    19da:	9c e0       	ldi	r25, 0x0C	; 12
    19dc:	36 d9       	rcall	.-3476   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    19de:	1a 5f       	subi	r17, 0xFA	; 250
    19e0:	10 36       	cpi	r17, 0x60	; 96
    19e2:	a9 f7       	brne	.-22     	; 0x19ce <_Z11menue_hauptv+0x6e>
    19e4:	8a e0       	ldi	r24, 0x0A	; 10
    19e6:	e7 e5       	ldi	r30, 0x57	; 87
    19e8:	f1 e0       	ldi	r31, 0x01	; 1
    19ea:	de 01       	movw	r26, r28
    19ec:	11 96       	adiw	r26, 0x01	; 1
    19ee:	01 90       	ld	r0, Z+
    19f0:	0d 92       	st	X+, r0
    19f2:	8a 95       	dec	r24
    19f4:	e1 f7       	brne	.-8      	; 0x19ee <_Z11menue_hauptv+0x8e>
    19f6:	67 01       	movw	r12, r14
    19f8:	10 e0       	ldi	r17, 0x00	; 0
    19fa:	f6 01       	movw	r30, r12
    19fc:	61 91       	ld	r22, Z+
    19fe:	6f 01       	movw	r12, r30
    1a00:	20 e1       	ldi	r18, 0x10	; 16
    1a02:	41 2f       	mov	r20, r17
    1a04:	84 e4       	ldi	r24, 0x44	; 68
    1a06:	9c e0       	ldi	r25, 0x0C	; 12
    1a08:	20 d9       	rcall	.-3520   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1a0a:	1a 5f       	subi	r17, 0xFA	; 250
    1a0c:	16 33       	cpi	r17, 0x36	; 54
    1a0e:	a9 f7       	brne	.-22     	; 0x19fa <_Z11menue_hauptv+0x9a>
    1a10:	8b e0       	ldi	r24, 0x0B	; 11
    1a12:	e1 e6       	ldi	r30, 0x61	; 97
    1a14:	f1 e0       	ldi	r31, 0x01	; 1
    1a16:	de 01       	movw	r26, r28
    1a18:	11 96       	adiw	r26, 0x01	; 1
    1a1a:	01 90       	ld	r0, Z+
    1a1c:	0d 92       	st	X+, r0
    1a1e:	8a 95       	dec	r24
    1a20:	e1 f7       	brne	.-8      	; 0x1a1a <_Z11menue_hauptv+0xba>
    1a22:	67 01       	movw	r12, r14
    1a24:	10 e0       	ldi	r17, 0x00	; 0
    1a26:	f6 01       	movw	r30, r12
    1a28:	61 91       	ld	r22, Z+
    1a2a:	6f 01       	movw	r12, r30
    1a2c:	28 e1       	ldi	r18, 0x18	; 24
    1a2e:	41 2f       	mov	r20, r17
    1a30:	84 e4       	ldi	r24, 0x44	; 68
    1a32:	9c e0       	ldi	r25, 0x0C	; 12
    1a34:	0a d9       	rcall	.-3564   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1a36:	1a 5f       	subi	r17, 0xFA	; 250
    1a38:	1c 33       	cpi	r17, 0x3C	; 60
    1a3a:	a9 f7       	brne	.-22     	; 0x1a26 <_Z11menue_hauptv+0xc6>
    1a3c:	80 e1       	ldi	r24, 0x10	; 16
    1a3e:	ec e6       	ldi	r30, 0x6C	; 108
    1a40:	f1 e0       	ldi	r31, 0x01	; 1
    1a42:	de 01       	movw	r26, r28
    1a44:	11 96       	adiw	r26, 0x01	; 1
    1a46:	01 90       	ld	r0, Z+
    1a48:	0d 92       	st	X+, r0
    1a4a:	8a 95       	dec	r24
    1a4c:	e1 f7       	brne	.-8      	; 0x1a46 <_Z11menue_hauptv+0xe6>
    1a4e:	67 01       	movw	r12, r14
    1a50:	10 e0       	ldi	r17, 0x00	; 0
    1a52:	f6 01       	movw	r30, r12
    1a54:	61 91       	ld	r22, Z+
    1a56:	6f 01       	movw	r12, r30
    1a58:	20 e2       	ldi	r18, 0x20	; 32
    1a5a:	41 2f       	mov	r20, r17
    1a5c:	84 e4       	ldi	r24, 0x44	; 68
    1a5e:	9c e0       	ldi	r25, 0x0C	; 12
    1a60:	f4 d8       	rcall	.-3608   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1a62:	1a 5f       	subi	r17, 0xFA	; 250
    1a64:	1a 35       	cpi	r17, 0x5A	; 90
    1a66:	a9 f7       	brne	.-22     	; 0x1a52 <_Z11menue_hauptv+0xf2>
    1a68:	8e e0       	ldi	r24, 0x0E	; 14
    1a6a:	ec e7       	ldi	r30, 0x7C	; 124
    1a6c:	f1 e0       	ldi	r31, 0x01	; 1
    1a6e:	de 01       	movw	r26, r28
    1a70:	11 96       	adiw	r26, 0x01	; 1
    1a72:	01 90       	ld	r0, Z+
    1a74:	0d 92       	st	X+, r0
    1a76:	8a 95       	dec	r24
    1a78:	e1 f7       	brne	.-8      	; 0x1a72 <_Z11menue_hauptv+0x112>
    1a7a:	67 01       	movw	r12, r14
    1a7c:	10 e0       	ldi	r17, 0x00	; 0
    1a7e:	f6 01       	movw	r30, r12
    1a80:	61 91       	ld	r22, Z+
    1a82:	6f 01       	movw	r12, r30
    1a84:	28 e2       	ldi	r18, 0x28	; 40
    1a86:	41 2f       	mov	r20, r17
    1a88:	84 e4       	ldi	r24, 0x44	; 68
    1a8a:	9c e0       	ldi	r25, 0x0C	; 12
    1a8c:	de d8       	rcall	.-3652   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1a8e:	1a 5f       	subi	r17, 0xFA	; 250
    1a90:	1e 34       	cpi	r17, 0x4E	; 78
    1a92:	a9 f7       	brne	.-22     	; 0x1a7e <_Z11menue_hauptv+0x11e>
    1a94:	8e e0       	ldi	r24, 0x0E	; 14
    1a96:	ea e8       	ldi	r30, 0x8A	; 138
    1a98:	f1 e0       	ldi	r31, 0x01	; 1
    1a9a:	de 01       	movw	r26, r28
    1a9c:	11 96       	adiw	r26, 0x01	; 1
    1a9e:	01 90       	ld	r0, Z+
    1aa0:	0d 92       	st	X+, r0
    1aa2:	8a 95       	dec	r24
    1aa4:	e1 f7       	brne	.-8      	; 0x1a9e <_Z11menue_hauptv+0x13e>
    1aa6:	10 e0       	ldi	r17, 0x00	; 0
    1aa8:	f7 01       	movw	r30, r14
    1aaa:	61 91       	ld	r22, Z+
    1aac:	7f 01       	movw	r14, r30
    1aae:	20 e3       	ldi	r18, 0x30	; 48
    1ab0:	41 2f       	mov	r20, r17
    1ab2:	84 e4       	ldi	r24, 0x44	; 68
    1ab4:	9c e0       	ldi	r25, 0x0C	; 12
    1ab6:	c9 d8       	rcall	.-3694   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1ab8:	1a 5f       	subi	r17, 0xFA	; 250
    1aba:	1e 34       	cpi	r17, 0x4E	; 78
    1abc:	a9 f7       	brne	.-22     	; 0x1aa8 <_Z11menue_hauptv+0x148>
    1abe:	64 96       	adiw	r28, 0x14	; 20
    1ac0:	0f b6       	in	r0, 0x3f	; 63
    1ac2:	f8 94       	cli
    1ac4:	de bf       	out	0x3e, r29	; 62
    1ac6:	0f be       	out	0x3f, r0	; 63
    1ac8:	cd bf       	out	0x3d, r28	; 61
    1aca:	df 91       	pop	r29
    1acc:	cf 91       	pop	r28
    1ace:	1f 91       	pop	r17
    1ad0:	ff 90       	pop	r15
    1ad2:	ef 90       	pop	r14
    1ad4:	df 90       	pop	r13
    1ad6:	cf 90       	pop	r12
    1ad8:	08 95       	ret

00001ada <_Z11menue_einstv>:
    1ada:	cf 92       	push	r12
    1adc:	df 92       	push	r13
    1ade:	ef 92       	push	r14
    1ae0:	ff 92       	push	r15
    1ae2:	1f 93       	push	r17
    1ae4:	cf 93       	push	r28
    1ae6:	df 93       	push	r29
    1ae8:	cd b7       	in	r28, 0x3d	; 61
    1aea:	de b7       	in	r29, 0x3e	; 62
    1aec:	64 97       	sbiw	r28, 0x14	; 20
    1aee:	0f b6       	in	r0, 0x3f	; 63
    1af0:	f8 94       	cli
    1af2:	de bf       	out	0x3e, r29	; 62
    1af4:	0f be       	out	0x3f, r0	; 63
    1af6:	cd bf       	out	0x3d, r28	; 61
    1af8:	84 e4       	ldi	r24, 0x44	; 68
    1afa:	9c e0       	ldi	r25, 0x0C	; 12
    1afc:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    1b00:	81 e1       	ldi	r24, 0x11	; 17
    1b02:	e8 e9       	ldi	r30, 0x98	; 152
    1b04:	f1 e0       	ldi	r31, 0x01	; 1
    1b06:	de 01       	movw	r26, r28
    1b08:	11 96       	adiw	r26, 0x01	; 1
    1b0a:	01 90       	ld	r0, Z+
    1b0c:	0d 92       	st	X+, r0
    1b0e:	8a 95       	dec	r24
    1b10:	e1 f7       	brne	.-8      	; 0x1b0a <_Z11menue_einstv+0x30>
    1b12:	ce 01       	movw	r24, r28
    1b14:	01 96       	adiw	r24, 0x01	; 1
    1b16:	6c 01       	movw	r12, r24
    1b18:	7c 01       	movw	r14, r24
    1b1a:	10 e0       	ldi	r17, 0x00	; 0
    1b1c:	f7 01       	movw	r30, r14
    1b1e:	61 91       	ld	r22, Z+
    1b20:	7f 01       	movw	r14, r30
    1b22:	20 e0       	ldi	r18, 0x00	; 0
    1b24:	41 2f       	mov	r20, r17
    1b26:	84 e4       	ldi	r24, 0x44	; 68
    1b28:	9c e0       	ldi	r25, 0x0C	; 12
    1b2a:	8f d8       	rcall	.-3810   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1b2c:	1a 5f       	subi	r17, 0xFA	; 250
    1b2e:	10 36       	cpi	r17, 0x60	; 96
    1b30:	a9 f7       	brne	.-22     	; 0x1b1c <_Z11menue_einstv+0x42>
    1b32:	86 e1       	ldi	r24, 0x16	; 22
    1b34:	e9 ea       	ldi	r30, 0xA9	; 169
    1b36:	f1 e0       	ldi	r31, 0x01	; 1
    1b38:	de 01       	movw	r26, r28
    1b3a:	11 96       	adiw	r26, 0x01	; 1
    1b3c:	01 90       	ld	r0, Z+
    1b3e:	0d 92       	st	X+, r0
    1b40:	8a 95       	dec	r24
    1b42:	e1 f7       	brne	.-8      	; 0x1b3c <_Z11menue_einstv+0x62>
    1b44:	76 01       	movw	r14, r12
    1b46:	10 e0       	ldi	r17, 0x00	; 0
    1b48:	f7 01       	movw	r30, r14
    1b4a:	61 91       	ld	r22, Z+
    1b4c:	7f 01       	movw	r14, r30
    1b4e:	28 e0       	ldi	r18, 0x08	; 8
    1b50:	41 2f       	mov	r20, r17
    1b52:	84 e4       	ldi	r24, 0x44	; 68
    1b54:	9c e0       	ldi	r25, 0x0C	; 12
    1b56:	79 d8       	rcall	.-3854   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1b58:	1a 5f       	subi	r17, 0xFA	; 250
    1b5a:	1e 37       	cpi	r17, 0x7E	; 126
    1b5c:	a9 f7       	brne	.-22     	; 0x1b48 <_Z11menue_einstv+0x6e>
    1b5e:	81 e1       	ldi	r24, 0x11	; 17
    1b60:	ef eb       	ldi	r30, 0xBF	; 191
    1b62:	f1 e0       	ldi	r31, 0x01	; 1
    1b64:	de 01       	movw	r26, r28
    1b66:	11 96       	adiw	r26, 0x01	; 1
    1b68:	01 90       	ld	r0, Z+
    1b6a:	0d 92       	st	X+, r0
    1b6c:	8a 95       	dec	r24
    1b6e:	e1 f7       	brne	.-8      	; 0x1b68 <_Z11menue_einstv+0x8e>
    1b70:	76 01       	movw	r14, r12
    1b72:	10 e0       	ldi	r17, 0x00	; 0
    1b74:	f7 01       	movw	r30, r14
    1b76:	61 91       	ld	r22, Z+
    1b78:	7f 01       	movw	r14, r30
    1b7a:	20 e1       	ldi	r18, 0x10	; 16
    1b7c:	41 2f       	mov	r20, r17
    1b7e:	84 e4       	ldi	r24, 0x44	; 68
    1b80:	9c e0       	ldi	r25, 0x0C	; 12
    1b82:	63 d8       	rcall	.-3898   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1b84:	1a 5f       	subi	r17, 0xFA	; 250
    1b86:	10 36       	cpi	r17, 0x60	; 96
    1b88:	a9 f7       	brne	.-22     	; 0x1b74 <_Z11menue_einstv+0x9a>
    1b8a:	83 e1       	ldi	r24, 0x13	; 19
    1b8c:	e0 ed       	ldi	r30, 0xD0	; 208
    1b8e:	f1 e0       	ldi	r31, 0x01	; 1
    1b90:	de 01       	movw	r26, r28
    1b92:	11 96       	adiw	r26, 0x01	; 1
    1b94:	01 90       	ld	r0, Z+
    1b96:	0d 92       	st	X+, r0
    1b98:	8a 95       	dec	r24
    1b9a:	e1 f7       	brne	.-8      	; 0x1b94 <_Z11menue_einstv+0xba>
    1b9c:	76 01       	movw	r14, r12
    1b9e:	10 e0       	ldi	r17, 0x00	; 0
    1ba0:	f7 01       	movw	r30, r14
    1ba2:	61 91       	ld	r22, Z+
    1ba4:	7f 01       	movw	r14, r30
    1ba6:	28 e1       	ldi	r18, 0x18	; 24
    1ba8:	41 2f       	mov	r20, r17
    1baa:	84 e4       	ldi	r24, 0x44	; 68
    1bac:	9c e0       	ldi	r25, 0x0C	; 12
    1bae:	4d d8       	rcall	.-3942   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1bb0:	1a 5f       	subi	r17, 0xFA	; 250
    1bb2:	1c 36       	cpi	r17, 0x6C	; 108
    1bb4:	a9 f7       	brne	.-22     	; 0x1ba0 <_Z11menue_einstv+0xc6>
    1bb6:	8b e0       	ldi	r24, 0x0B	; 11
    1bb8:	e3 ee       	ldi	r30, 0xE3	; 227
    1bba:	f1 e0       	ldi	r31, 0x01	; 1
    1bbc:	de 01       	movw	r26, r28
    1bbe:	11 96       	adiw	r26, 0x01	; 1
    1bc0:	01 90       	ld	r0, Z+
    1bc2:	0d 92       	st	X+, r0
    1bc4:	8a 95       	dec	r24
    1bc6:	e1 f7       	brne	.-8      	; 0x1bc0 <_Z11menue_einstv+0xe6>
    1bc8:	10 e0       	ldi	r17, 0x00	; 0
    1bca:	f6 01       	movw	r30, r12
    1bcc:	61 91       	ld	r22, Z+
    1bce:	6f 01       	movw	r12, r30
    1bd0:	20 e2       	ldi	r18, 0x20	; 32
    1bd2:	41 2f       	mov	r20, r17
    1bd4:	84 e4       	ldi	r24, 0x44	; 68
    1bd6:	9c e0       	ldi	r25, 0x0C	; 12
    1bd8:	38 d8       	rcall	.-3984   	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1bda:	1a 5f       	subi	r17, 0xFA	; 250
    1bdc:	1c 33       	cpi	r17, 0x3C	; 60
    1bde:	a9 f7       	brne	.-22     	; 0x1bca <_Z11menue_einstv+0xf0>
    1be0:	64 96       	adiw	r28, 0x14	; 20
    1be2:	0f b6       	in	r0, 0x3f	; 63
    1be4:	f8 94       	cli
    1be6:	de bf       	out	0x3e, r29	; 62
    1be8:	0f be       	out	0x3f, r0	; 63
    1bea:	cd bf       	out	0x3d, r28	; 61
    1bec:	df 91       	pop	r29
    1bee:	cf 91       	pop	r28
    1bf0:	1f 91       	pop	r17
    1bf2:	ff 90       	pop	r15
    1bf4:	ef 90       	pop	r14
    1bf6:	df 90       	pop	r13
    1bf8:	cf 90       	pop	r12
    1bfa:	08 95       	ret

00001bfc <_Z9menue_uhrv>:
    1bfc:	cf 92       	push	r12
    1bfe:	df 92       	push	r13
    1c00:	ef 92       	push	r14
    1c02:	ff 92       	push	r15
    1c04:	1f 93       	push	r17
    1c06:	cf 93       	push	r28
    1c08:	df 93       	push	r29
    1c0a:	cd b7       	in	r28, 0x3d	; 61
    1c0c:	de b7       	in	r29, 0x3e	; 62
    1c0e:	64 97       	sbiw	r28, 0x14	; 20
    1c10:	0f b6       	in	r0, 0x3f	; 63
    1c12:	f8 94       	cli
    1c14:	de bf       	out	0x3e, r29	; 62
    1c16:	0f be       	out	0x3f, r0	; 63
    1c18:	cd bf       	out	0x3d, r28	; 61
    1c1a:	84 e4       	ldi	r24, 0x44	; 68
    1c1c:	9c e0       	ldi	r25, 0x0C	; 12
    1c1e:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    1c22:	86 e0       	ldi	r24, 0x06	; 6
    1c24:	ee ee       	ldi	r30, 0xEE	; 238
    1c26:	f1 e0       	ldi	r31, 0x01	; 1
    1c28:	de 01       	movw	r26, r28
    1c2a:	11 96       	adiw	r26, 0x01	; 1
    1c2c:	01 90       	ld	r0, Z+
    1c2e:	0d 92       	st	X+, r0
    1c30:	8a 95       	dec	r24
    1c32:	e1 f7       	brne	.-8      	; 0x1c2c <_Z9menue_uhrv+0x30>
    1c34:	ce 01       	movw	r24, r28
    1c36:	01 96       	adiw	r24, 0x01	; 1
    1c38:	7c 01       	movw	r14, r24
    1c3a:	6c 01       	movw	r12, r24
    1c3c:	10 e0       	ldi	r17, 0x00	; 0
    1c3e:	f6 01       	movw	r30, r12
    1c40:	61 91       	ld	r22, Z+
    1c42:	6f 01       	movw	r12, r30
    1c44:	20 e0       	ldi	r18, 0x00	; 0
    1c46:	41 2f       	mov	r20, r17
    1c48:	84 e4       	ldi	r24, 0x44	; 68
    1c4a:	9c e0       	ldi	r25, 0x0C	; 12
    1c4c:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1c50:	1a 5f       	subi	r17, 0xFA	; 250
    1c52:	1e 31       	cpi	r17, 0x1E	; 30
    1c54:	a1 f7       	brne	.-24     	; 0x1c3e <_Z9menue_uhrv+0x42>
    1c56:	8b e0       	ldi	r24, 0x0B	; 11
    1c58:	e4 ef       	ldi	r30, 0xF4	; 244
    1c5a:	f1 e0       	ldi	r31, 0x01	; 1
    1c5c:	de 01       	movw	r26, r28
    1c5e:	11 96       	adiw	r26, 0x01	; 1
    1c60:	01 90       	ld	r0, Z+
    1c62:	0d 92       	st	X+, r0
    1c64:	8a 95       	dec	r24
    1c66:	e1 f7       	brne	.-8      	; 0x1c60 <_Z9menue_uhrv+0x64>
    1c68:	67 01       	movw	r12, r14
    1c6a:	10 e0       	ldi	r17, 0x00	; 0
    1c6c:	f6 01       	movw	r30, r12
    1c6e:	61 91       	ld	r22, Z+
    1c70:	6f 01       	movw	r12, r30
    1c72:	28 e0       	ldi	r18, 0x08	; 8
    1c74:	41 2f       	mov	r20, r17
    1c76:	84 e4       	ldi	r24, 0x44	; 68
    1c78:	9c e0       	ldi	r25, 0x0C	; 12
    1c7a:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1c7e:	1a 5f       	subi	r17, 0xFA	; 250
    1c80:	1c 33       	cpi	r17, 0x3C	; 60
    1c82:	a1 f7       	brne	.-24     	; 0x1c6c <_Z9menue_uhrv+0x70>
    1c84:	88 e0       	ldi	r24, 0x08	; 8
    1c86:	ef ef       	ldi	r30, 0xFF	; 255
    1c88:	f1 e0       	ldi	r31, 0x01	; 1
    1c8a:	de 01       	movw	r26, r28
    1c8c:	11 96       	adiw	r26, 0x01	; 1
    1c8e:	01 90       	ld	r0, Z+
    1c90:	0d 92       	st	X+, r0
    1c92:	8a 95       	dec	r24
    1c94:	e1 f7       	brne	.-8      	; 0x1c8e <_Z9menue_uhrv+0x92>
    1c96:	67 01       	movw	r12, r14
    1c98:	10 e0       	ldi	r17, 0x00	; 0
    1c9a:	f6 01       	movw	r30, r12
    1c9c:	61 91       	ld	r22, Z+
    1c9e:	6f 01       	movw	r12, r30
    1ca0:	20 e1       	ldi	r18, 0x10	; 16
    1ca2:	41 2f       	mov	r20, r17
    1ca4:	84 e4       	ldi	r24, 0x44	; 68
    1ca6:	9c e0       	ldi	r25, 0x0C	; 12
    1ca8:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1cac:	1a 5f       	subi	r17, 0xFA	; 250
    1cae:	1a 32       	cpi	r17, 0x2A	; 42
    1cb0:	a1 f7       	brne	.-24     	; 0x1c9a <_Z9menue_uhrv+0x9e>
    1cb2:	89 e0       	ldi	r24, 0x09	; 9
    1cb4:	e7 e0       	ldi	r30, 0x07	; 7
    1cb6:	f2 e0       	ldi	r31, 0x02	; 2
    1cb8:	de 01       	movw	r26, r28
    1cba:	11 96       	adiw	r26, 0x01	; 1
    1cbc:	01 90       	ld	r0, Z+
    1cbe:	0d 92       	st	X+, r0
    1cc0:	8a 95       	dec	r24
    1cc2:	e1 f7       	brne	.-8      	; 0x1cbc <_Z9menue_uhrv+0xc0>
    1cc4:	67 01       	movw	r12, r14
    1cc6:	10 e0       	ldi	r17, 0x00	; 0
    1cc8:	f6 01       	movw	r30, r12
    1cca:	61 91       	ld	r22, Z+
    1ccc:	6f 01       	movw	r12, r30
    1cce:	28 e1       	ldi	r18, 0x18	; 24
    1cd0:	41 2f       	mov	r20, r17
    1cd2:	84 e4       	ldi	r24, 0x44	; 68
    1cd4:	9c e0       	ldi	r25, 0x0C	; 12
    1cd6:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1cda:	1a 5f       	subi	r17, 0xFA	; 250
    1cdc:	10 33       	cpi	r17, 0x30	; 48
    1cde:	a1 f7       	brne	.-24     	; 0x1cc8 <_Z9menue_uhrv+0xcc>
    1ce0:	8c e0       	ldi	r24, 0x0C	; 12
    1ce2:	e0 e1       	ldi	r30, 0x10	; 16
    1ce4:	f2 e0       	ldi	r31, 0x02	; 2
    1ce6:	de 01       	movw	r26, r28
    1ce8:	11 96       	adiw	r26, 0x01	; 1
    1cea:	01 90       	ld	r0, Z+
    1cec:	0d 92       	st	X+, r0
    1cee:	8a 95       	dec	r24
    1cf0:	e1 f7       	brne	.-8      	; 0x1cea <_Z9menue_uhrv+0xee>
    1cf2:	10 e0       	ldi	r17, 0x00	; 0
    1cf4:	f7 01       	movw	r30, r14
    1cf6:	61 91       	ld	r22, Z+
    1cf8:	7f 01       	movw	r14, r30
    1cfa:	20 e2       	ldi	r18, 0x20	; 32
    1cfc:	41 2f       	mov	r20, r17
    1cfe:	84 e4       	ldi	r24, 0x44	; 68
    1d00:	9c e0       	ldi	r25, 0x0C	; 12
    1d02:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1d06:	1a 5f       	subi	r17, 0xFA	; 250
    1d08:	12 34       	cpi	r17, 0x42	; 66
    1d0a:	a1 f7       	brne	.-24     	; 0x1cf4 <_Z9menue_uhrv+0xf8>
    1d0c:	64 96       	adiw	r28, 0x14	; 20
    1d0e:	0f b6       	in	r0, 0x3f	; 63
    1d10:	f8 94       	cli
    1d12:	de bf       	out	0x3e, r29	; 62
    1d14:	0f be       	out	0x3f, r0	; 63
    1d16:	cd bf       	out	0x3d, r28	; 61
    1d18:	df 91       	pop	r29
    1d1a:	cf 91       	pop	r28
    1d1c:	1f 91       	pop	r17
    1d1e:	ff 90       	pop	r15
    1d20:	ef 90       	pop	r14
    1d22:	df 90       	pop	r13
    1d24:	cf 90       	pop	r12
    1d26:	08 95       	ret

00001d28 <_Z12find_gravityv>:
    1d28:	cf 92       	push	r12
    1d2a:	df 92       	push	r13
    1d2c:	ef 92       	push	r14
    1d2e:	ff 92       	push	r15
    1d30:	1f 93       	push	r17
    1d32:	cf 93       	push	r28
    1d34:	df 93       	push	r29
    1d36:	cd b7       	in	r28, 0x3d	; 61
    1d38:	de b7       	in	r29, 0x3e	; 62
    1d3a:	64 97       	sbiw	r28, 0x14	; 20
    1d3c:	0f b6       	in	r0, 0x3f	; 63
    1d3e:	f8 94       	cli
    1d40:	de bf       	out	0x3e, r29	; 62
    1d42:	0f be       	out	0x3f, r0	; 63
    1d44:	cd bf       	out	0x3d, r28	; 61
    1d46:	84 e4       	ldi	r24, 0x44	; 68
    1d48:	9c e0       	ldi	r25, 0x0C	; 12
    1d4a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    1d4e:	80 e0       	ldi	r24, 0x00	; 0
    1d50:	eb db       	rcall	.-2090   	; 0x1528 <_Z6headerh>
    1d52:	80 e0       	ldi	r24, 0x00	; 0
    1d54:	be dc       	rcall	.-1668   	; 0x16d2 <_Z6bottomh>
    1d56:	85 e1       	ldi	r24, 0x15	; 21
    1d58:	ec e1       	ldi	r30, 0x1C	; 28
    1d5a:	f2 e0       	ldi	r31, 0x02	; 2
    1d5c:	de 01       	movw	r26, r28
    1d5e:	11 96       	adiw	r26, 0x01	; 1
    1d60:	01 90       	ld	r0, Z+
    1d62:	0d 92       	st	X+, r0
    1d64:	8a 95       	dec	r24
    1d66:	e1 f7       	brne	.-8      	; 0x1d60 <_Z12find_gravityv+0x38>
    1d68:	9e 01       	movw	r18, r28
    1d6a:	2f 5f       	subi	r18, 0xFF	; 255
    1d6c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d6e:	69 01       	movw	r12, r18
    1d70:	79 01       	movw	r14, r18
    1d72:	10 e0       	ldi	r17, 0x00	; 0
    1d74:	f7 01       	movw	r30, r14
    1d76:	61 91       	ld	r22, Z+
    1d78:	7f 01       	movw	r14, r30
    1d7a:	20 e1       	ldi	r18, 0x10	; 16
    1d7c:	41 2f       	mov	r20, r17
    1d7e:	84 e4       	ldi	r24, 0x44	; 68
    1d80:	9c e0       	ldi	r25, 0x0C	; 12
    1d82:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1d86:	1a 5f       	subi	r17, 0xFA	; 250
    1d88:	18 37       	cpi	r17, 0x78	; 120
    1d8a:	a1 f7       	brne	.-24     	; 0x1d74 <_Z12find_gravityv+0x4c>
    1d8c:	8d e0       	ldi	r24, 0x0D	; 13
    1d8e:	e1 e3       	ldi	r30, 0x31	; 49
    1d90:	f2 e0       	ldi	r31, 0x02	; 2
    1d92:	de 01       	movw	r26, r28
    1d94:	11 96       	adiw	r26, 0x01	; 1
    1d96:	01 90       	ld	r0, Z+
    1d98:	0d 92       	st	X+, r0
    1d9a:	8a 95       	dec	r24
    1d9c:	e1 f7       	brne	.-8      	; 0x1d96 <_Z12find_gravityv+0x6e>
    1d9e:	76 01       	movw	r14, r12
    1da0:	10 e0       	ldi	r17, 0x00	; 0
    1da2:	f7 01       	movw	r30, r14
    1da4:	61 91       	ld	r22, Z+
    1da6:	7f 01       	movw	r14, r30
    1da8:	28 e1       	ldi	r18, 0x18	; 24
    1daa:	41 2f       	mov	r20, r17
    1dac:	84 e4       	ldi	r24, 0x44	; 68
    1dae:	9c e0       	ldi	r25, 0x0C	; 12
    1db0:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1db4:	1a 5f       	subi	r17, 0xFA	; 250
    1db6:	18 34       	cpi	r17, 0x48	; 72
    1db8:	a1 f7       	brne	.-24     	; 0x1da2 <_Z12find_gravityv+0x7a>
    1dba:	80 91 3d 03 	lds	r24, 0x033D
    1dbe:	86 30       	cpi	r24, 0x06	; 6
    1dc0:	48 f5       	brcc	.+82     	; 0x1e14 <_Z12find_gravityv+0xec>
    1dc2:	1f 92       	push	r1
    1dc4:	8f 93       	push	r24
    1dc6:	8e e3       	ldi	r24, 0x3E	; 62
    1dc8:	92 e0       	ldi	r25, 0x02	; 2
    1dca:	9f 93       	push	r25
    1dcc:	8f 93       	push	r24
    1dce:	ce 01       	movw	r24, r28
    1dd0:	01 96       	adiw	r24, 0x01	; 1
    1dd2:	9f 93       	push	r25
    1dd4:	8f 93       	push	r24
    1dd6:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
    1dda:	0f 90       	pop	r0
    1ddc:	0f 90       	pop	r0
    1dde:	0f 90       	pop	r0
    1de0:	0f 90       	pop	r0
    1de2:	0f 90       	pop	r0
    1de4:	0f 90       	pop	r0
    1de6:	88 23       	and	r24, r24
    1de8:	a9 f0       	breq	.+42     	; 0x1e14 <_Z12find_gravityv+0xec>
    1dea:	81 50       	subi	r24, 0x01	; 1
    1dec:	9e 01       	movw	r18, r28
    1dee:	28 0f       	add	r18, r24
    1df0:	31 1d       	adc	r19, r1
    1df2:	f9 01       	movw	r30, r18
    1df4:	32 96       	adiw	r30, 0x02	; 2
    1df6:	7f 01       	movw	r14, r30
    1df8:	10 e0       	ldi	r17, 0x00	; 0
    1dfa:	f6 01       	movw	r30, r12
    1dfc:	61 91       	ld	r22, Z+
    1dfe:	6f 01       	movw	r12, r30
    1e00:	28 e2       	ldi	r18, 0x28	; 40
    1e02:	41 2f       	mov	r20, r17
    1e04:	84 e4       	ldi	r24, 0x44	; 68
    1e06:	9c e0       	ldi	r25, 0x0C	; 12
    1e08:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1e0c:	1a 5f       	subi	r17, 0xFA	; 250
    1e0e:	ce 14       	cp	r12, r14
    1e10:	df 04       	cpc	r13, r15
    1e12:	99 f7       	brne	.-26     	; 0x1dfa <_Z12find_gravityv+0xd2>
    1e14:	64 96       	adiw	r28, 0x14	; 20
    1e16:	0f b6       	in	r0, 0x3f	; 63
    1e18:	f8 94       	cli
    1e1a:	de bf       	out	0x3e, r29	; 62
    1e1c:	0f be       	out	0x3f, r0	; 63
    1e1e:	cd bf       	out	0x3d, r28	; 61
    1e20:	df 91       	pop	r29
    1e22:	cf 91       	pop	r28
    1e24:	1f 91       	pop	r17
    1e26:	ff 90       	pop	r15
    1e28:	ef 90       	pop	r14
    1e2a:	df 90       	pop	r13
    1e2c:	cf 90       	pop	r12
    1e2e:	08 95       	ret

00001e30 <_Z11uhranzeigenv>:
    1e30:	cf 92       	push	r12
    1e32:	df 92       	push	r13
    1e34:	ff 92       	push	r15
    1e36:	0f 93       	push	r16
    1e38:	1f 93       	push	r17
    1e3a:	cf 93       	push	r28
    1e3c:	df 93       	push	r29
    1e3e:	cd b7       	in	r28, 0x3d	; 61
    1e40:	de b7       	in	r29, 0x3e	; 62
    1e42:	64 97       	sbiw	r28, 0x14	; 20
    1e44:	0f b6       	in	r0, 0x3f	; 63
    1e46:	f8 94       	cli
    1e48:	de bf       	out	0x3e, r29	; 62
    1e4a:	0f be       	out	0x3f, r0	; 63
    1e4c:	cd bf       	out	0x3d, r28	; 61
    1e4e:	84 e4       	ldi	r24, 0x44	; 68
    1e50:	9c e0       	ldi	r25, 0x0C	; 12
    1e52:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    1e56:	e5 e4       	ldi	r30, 0x45	; 69
    1e58:	f0 e1       	ldi	r31, 0x10	; 16
    1e5a:	01 e0       	ldi	r16, 0x01	; 1
    1e5c:	22 89       	ldd	r18, Z+18	; 0x12
    1e5e:	41 89       	ldd	r20, Z+17	; 0x11
    1e60:	60 89       	ldd	r22, Z+16	; 0x10
    1e62:	84 e4       	ldi	r24, 0x44	; 68
    1e64:	9c e0       	ldi	r25, 0x0C	; 12
    1e66:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <_ZN7Display6analogEhhhh>
    1e6a:	0f 2e       	mov	r0, r31
    1e6c:	f5 e4       	ldi	r31, 0x45	; 69
    1e6e:	cf 2e       	mov	r12, r31
    1e70:	f0 e1       	ldi	r31, 0x10	; 16
    1e72:	df 2e       	mov	r13, r31
    1e74:	f0 2d       	mov	r31, r0
    1e76:	11 e4       	ldi	r17, 0x41	; 65
    1e78:	f6 01       	movw	r30, r12
    1e7a:	61 91       	ld	r22, Z+
    1e7c:	6f 01       	movw	r12, r30
    1e7e:	20 e0       	ldi	r18, 0x00	; 0
    1e80:	41 2f       	mov	r20, r17
    1e82:	84 e4       	ldi	r24, 0x44	; 68
    1e84:	9c e0       	ldi	r25, 0x0C	; 12
    1e86:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1e8a:	1a 5f       	subi	r17, 0xFA	; 250
    1e8c:	11 37       	cpi	r17, 0x71	; 113
    1e8e:	a1 f7       	brne	.-24     	; 0x1e78 <_Z11uhranzeigenv+0x48>
    1e90:	0f 2e       	mov	r0, r31
    1e92:	fd e4       	ldi	r31, 0x4D	; 77
    1e94:	cf 2e       	mov	r12, r31
    1e96:	f0 e1       	ldi	r31, 0x10	; 16
    1e98:	df 2e       	mov	r13, r31
    1e9a:	f0 2d       	mov	r31, r0
    1e9c:	11 e4       	ldi	r17, 0x41	; 65
    1e9e:	f6 01       	movw	r30, r12
    1ea0:	61 91       	ld	r22, Z+
    1ea2:	6f 01       	movw	r12, r30
    1ea4:	28 e3       	ldi	r18, 0x38	; 56
    1ea6:	41 2f       	mov	r20, r17
    1ea8:	84 e4       	ldi	r24, 0x44	; 68
    1eaa:	9c e0       	ldi	r25, 0x0C	; 12
    1eac:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1eb0:	1a 5f       	subi	r17, 0xFA	; 250
    1eb2:	11 37       	cpi	r17, 0x71	; 113
    1eb4:	a1 f7       	brne	.-24     	; 0x1e9e <_Z11uhranzeigenv+0x6e>
    1eb6:	1a da       	rcall	.-3020   	; 0x12ec <_Z14Batteriestatusv>
    1eb8:	28 2f       	mov	r18, r24
    1eba:	08 2e       	mov	r0, r24
    1ebc:	00 0c       	add	r0, r0
    1ebe:	33 0b       	sbc	r19, r19
    1ec0:	3f 93       	push	r19
    1ec2:	8f 93       	push	r24
    1ec4:	81 e3       	ldi	r24, 0x31	; 49
    1ec6:	91 e0       	ldi	r25, 0x01	; 1
    1ec8:	9f 93       	push	r25
    1eca:	8f 93       	push	r24
    1ecc:	ce 01       	movw	r24, r28
    1ece:	01 96       	adiw	r24, 0x01	; 1
    1ed0:	9f 93       	push	r25
    1ed2:	8f 93       	push	r24
    1ed4:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
    1ed8:	0f 90       	pop	r0
    1eda:	0f 90       	pop	r0
    1edc:	0f 90       	pop	r0
    1ede:	0f 90       	pop	r0
    1ee0:	0f 90       	pop	r0
    1ee2:	0f 90       	pop	r0
    1ee4:	88 23       	and	r24, r24
    1ee6:	51 f1       	breq	.+84     	; 0x1f3c <_Z11uhranzeigenv+0x10c>
    1ee8:	8e 01       	movw	r16, r28
    1eea:	0f 5f       	subi	r16, 0xFF	; 255
    1eec:	1f 4f       	sbci	r17, 0xFF	; 255
    1eee:	81 50       	subi	r24, 0x01	; 1
    1ef0:	c8 2e       	mov	r12, r24
    1ef2:	d1 2c       	mov	r13, r1
    1ef4:	ff ef       	ldi	r31, 0xFF	; 255
    1ef6:	cf 1a       	sub	r12, r31
    1ef8:	df 0a       	sbc	r13, r31
    1efa:	c0 0e       	add	r12, r16
    1efc:	d1 1e       	adc	r13, r17
    1efe:	0f 2e       	mov	r0, r31
    1f00:	f9 e4       	ldi	r31, 0x49	; 73
    1f02:	ff 2e       	mov	r15, r31
    1f04:	f0 2d       	mov	r31, r0
    1f06:	f8 01       	movw	r30, r16
    1f08:	61 91       	ld	r22, Z+
    1f0a:	8f 01       	movw	r16, r30
    1f0c:	86 2f       	mov	r24, r22
    1f0e:	87 7f       	andi	r24, 0xF7	; 247
    1f10:	85 32       	cpi	r24, 0x25	; 37
    1f12:	39 f4       	brne	.+14     	; 0x1f22 <_Z11uhranzeigenv+0xf2>
    1f14:	28 e1       	ldi	r18, 0x18	; 24
    1f16:	4f 2d       	mov	r20, r15
    1f18:	84 e4       	ldi	r24, 0x44	; 68
    1f1a:	9c e0       	ldi	r25, 0x0C	; 12
    1f1c:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1f20:	08 c0       	rjmp	.+16     	; 0x1f32 <_Z11uhranzeigenv+0x102>
    1f22:	60 53       	subi	r22, 0x30	; 48
    1f24:	24 e1       	ldi	r18, 0x14	; 20
    1f26:	4d ef       	ldi	r20, 0xFD	; 253
    1f28:	4f 0d       	add	r20, r15
    1f2a:	84 e4       	ldi	r24, 0x44	; 68
    1f2c:	9c e0       	ldi	r25, 0x0C	; 12
    1f2e:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    1f32:	f0 e1       	ldi	r31, 0x10	; 16
    1f34:	ff 0e       	add	r15, r31
    1f36:	0c 15       	cp	r16, r12
    1f38:	1d 05       	cpc	r17, r13
    1f3a:	29 f7       	brne	.-54     	; 0x1f06 <_Z11uhranzeigenv+0xd6>
    1f3c:	64 96       	adiw	r28, 0x14	; 20
    1f3e:	0f b6       	in	r0, 0x3f	; 63
    1f40:	f8 94       	cli
    1f42:	de bf       	out	0x3e, r29	; 62
    1f44:	0f be       	out	0x3f, r0	; 63
    1f46:	cd bf       	out	0x3d, r28	; 61
    1f48:	df 91       	pop	r29
    1f4a:	cf 91       	pop	r28
    1f4c:	1f 91       	pop	r17
    1f4e:	0f 91       	pop	r16
    1f50:	ff 90       	pop	r15
    1f52:	df 90       	pop	r13
    1f54:	cf 90       	pop	r12
    1f56:	08 95       	ret

00001f58 <_Z14uhranzeigenminv>:
    1f58:	0f 93       	push	r16
    1f5a:	1f 93       	push	r17
    1f5c:	cf 93       	push	r28
    1f5e:	df 93       	push	r29
    1f60:	84 e4       	ldi	r24, 0x44	; 68
    1f62:	9c e0       	ldi	r25, 0x0C	; 12
    1f64:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    1f68:	82 e0       	ldi	r24, 0x02	; 2
    1f6a:	de da       	rcall	.-2628   	; 0x1528 <_Z6headerh>
    1f6c:	e5 e4       	ldi	r30, 0x45	; 69
    1f6e:	f0 e1       	ldi	r31, 0x10	; 16
    1f70:	00 e0       	ldi	r16, 0x00	; 0
    1f72:	22 89       	ldd	r18, Z+18	; 0x12
    1f74:	41 89       	ldd	r20, Z+17	; 0x11
    1f76:	60 89       	ldd	r22, Z+16	; 0x10
    1f78:	84 e4       	ldi	r24, 0x44	; 68
    1f7a:	9c e0       	ldi	r25, 0x0C	; 12
    1f7c:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <_ZN7Display6analogEhhhh>
    1f80:	05 e4       	ldi	r16, 0x45	; 69
    1f82:	10 e1       	ldi	r17, 0x10	; 16
    1f84:	c1 e4       	ldi	r28, 0x41	; 65
    1f86:	f8 01       	movw	r30, r16
    1f88:	61 91       	ld	r22, Z+
    1f8a:	8f 01       	movw	r16, r30
    1f8c:	20 e0       	ldi	r18, 0x00	; 0
    1f8e:	4c 2f       	mov	r20, r28
    1f90:	84 e4       	ldi	r24, 0x44	; 68
    1f92:	9c e0       	ldi	r25, 0x0C	; 12
    1f94:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1f98:	ca 5f       	subi	r28, 0xFA	; 250
    1f9a:	cf 35       	cpi	r28, 0x5F	; 95
    1f9c:	a1 f7       	brne	.-24     	; 0x1f86 <_Z14uhranzeigenminv+0x2e>
    1f9e:	0d e4       	ldi	r16, 0x4D	; 77
    1fa0:	10 e1       	ldi	r17, 0x10	; 16
    1fa2:	c1 e4       	ldi	r28, 0x41	; 65
    1fa4:	f8 01       	movw	r30, r16
    1fa6:	61 91       	ld	r22, Z+
    1fa8:	8f 01       	movw	r16, r30
    1faa:	28 e3       	ldi	r18, 0x38	; 56
    1fac:	4c 2f       	mov	r20, r28
    1fae:	84 e4       	ldi	r24, 0x44	; 68
    1fb0:	9c e0       	ldi	r25, 0x0C	; 12
    1fb2:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    1fb6:	ca 5f       	subi	r28, 0xFA	; 250
    1fb8:	c1 37       	cpi	r28, 0x71	; 113
    1fba:	a1 f7       	brne	.-24     	; 0x1fa4 <_Z14uhranzeigenminv+0x4c>
    1fbc:	c5 e4       	ldi	r28, 0x45	; 69
    1fbe:	d0 e1       	ldi	r29, 0x10	; 16
    1fc0:	68 81       	ld	r22, Y
    1fc2:	60 53       	subi	r22, 0x30	; 48
    1fc4:	2d e0       	ldi	r18, 0x0D	; 13
    1fc6:	46 e4       	ldi	r20, 0x46	; 70
    1fc8:	84 e4       	ldi	r24, 0x44	; 68
    1fca:	9c e0       	ldi	r25, 0x0C	; 12
    1fcc:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    1fd0:	69 81       	ldd	r22, Y+1	; 0x01
    1fd2:	60 53       	subi	r22, 0x30	; 48
    1fd4:	2d e0       	ldi	r18, 0x0D	; 13
    1fd6:	46 e5       	ldi	r20, 0x56	; 86
    1fd8:	84 e4       	ldi	r24, 0x44	; 68
    1fda:	9c e0       	ldi	r25, 0x0C	; 12
    1fdc:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    1fe0:	6b 81       	ldd	r22, Y+3	; 0x03
    1fe2:	60 53       	subi	r22, 0x30	; 48
    1fe4:	22 e2       	ldi	r18, 0x22	; 34
    1fe6:	46 e4       	ldi	r20, 0x46	; 70
    1fe8:	84 e4       	ldi	r24, 0x44	; 68
    1fea:	9c e0       	ldi	r25, 0x0C	; 12
    1fec:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    1ff0:	6c 81       	ldd	r22, Y+4	; 0x04
    1ff2:	60 53       	subi	r22, 0x30	; 48
    1ff4:	22 e2       	ldi	r18, 0x22	; 34
    1ff6:	46 e5       	ldi	r20, 0x56	; 86
    1ff8:	84 e4       	ldi	r24, 0x44	; 68
    1ffa:	9c e0       	ldi	r25, 0x0C	; 12
    1ffc:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    2000:	df 91       	pop	r29
    2002:	cf 91       	pop	r28
    2004:	1f 91       	pop	r17
    2006:	0f 91       	pop	r16
    2008:	08 95       	ret

0000200a <_Z13Weckeranzeigev>:
    200a:	0f 93       	push	r16
    200c:	1f 93       	push	r17
    200e:	cf 93       	push	r28
    2010:	84 e4       	ldi	r24, 0x44	; 68
    2012:	9c e0       	ldi	r25, 0x0C	; 12
    2014:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    2018:	81 e0       	ldi	r24, 0x01	; 1
    201a:	5b db       	rcall	.-2378   	; 0x16d2 <_Z6bottomh>
    201c:	81 e0       	ldi	r24, 0x01	; 1
    201e:	84 da       	rcall	.-2808   	; 0x1528 <_Z6headerh>
    2020:	05 e4       	ldi	r16, 0x45	; 69
    2022:	10 e1       	ldi	r17, 0x10	; 16
    2024:	f8 01       	movw	r30, r16
    2026:	60 81       	ld	r22, Z
    2028:	60 53       	subi	r22, 0x30	; 48
    202a:	2d e0       	ldi	r18, 0x0D	; 13
    202c:	45 e0       	ldi	r20, 0x05	; 5
    202e:	84 e4       	ldi	r24, 0x44	; 68
    2030:	9c e0       	ldi	r25, 0x0C	; 12
    2032:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    2036:	f8 01       	movw	r30, r16
    2038:	61 81       	ldd	r22, Z+1	; 0x01
    203a:	60 53       	subi	r22, 0x30	; 48
    203c:	2d e0       	ldi	r18, 0x0D	; 13
    203e:	45 e1       	ldi	r20, 0x15	; 21
    2040:	84 e4       	ldi	r24, 0x44	; 68
    2042:	9c e0       	ldi	r25, 0x0C	; 12
    2044:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    2048:	f8 01       	movw	r30, r16
    204a:	63 81       	ldd	r22, Z+3	; 0x03
    204c:	60 53       	subi	r22, 0x30	; 48
    204e:	22 e2       	ldi	r18, 0x22	; 34
    2050:	45 e0       	ldi	r20, 0x05	; 5
    2052:	84 e4       	ldi	r24, 0x44	; 68
    2054:	9c e0       	ldi	r25, 0x0C	; 12
    2056:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    205a:	f8 01       	movw	r30, r16
    205c:	64 81       	ldd	r22, Z+4	; 0x04
    205e:	60 53       	subi	r22, 0x30	; 48
    2060:	22 e2       	ldi	r18, 0x22	; 34
    2062:	45 e1       	ldi	r20, 0x15	; 21
    2064:	84 e4       	ldi	r24, 0x44	; 68
    2066:	9c e0       	ldi	r25, 0x0C	; 12
    2068:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    206c:	f8 01       	movw	r30, r16
    206e:	62 8d       	ldd	r22, Z+26	; 0x1a
    2070:	cd ec       	ldi	r28, 0xCD	; 205
    2072:	6c 9f       	mul	r22, r28
    2074:	61 2d       	mov	r22, r1
    2076:	11 24       	eor	r1, r1
    2078:	66 95       	lsr	r22
    207a:	66 95       	lsr	r22
    207c:	66 95       	lsr	r22
    207e:	2d e0       	ldi	r18, 0x0D	; 13
    2080:	46 e4       	ldi	r20, 0x46	; 70
    2082:	84 e4       	ldi	r24, 0x44	; 68
    2084:	9c e0       	ldi	r25, 0x0C	; 12
    2086:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    208a:	f8 01       	movw	r30, r16
    208c:	62 8d       	ldd	r22, Z+26	; 0x1a
    208e:	6c 9f       	mul	r22, r28
    2090:	81 2d       	mov	r24, r1
    2092:	11 24       	eor	r1, r1
    2094:	86 95       	lsr	r24
    2096:	86 95       	lsr	r24
    2098:	86 95       	lsr	r24
    209a:	88 0f       	add	r24, r24
    209c:	98 2f       	mov	r25, r24
    209e:	99 0f       	add	r25, r25
    20a0:	99 0f       	add	r25, r25
    20a2:	89 0f       	add	r24, r25
    20a4:	68 1b       	sub	r22, r24
    20a6:	2d e0       	ldi	r18, 0x0D	; 13
    20a8:	46 e5       	ldi	r20, 0x56	; 86
    20aa:	84 e4       	ldi	r24, 0x44	; 68
    20ac:	9c e0       	ldi	r25, 0x0C	; 12
    20ae:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    20b2:	f8 01       	movw	r30, r16
    20b4:	61 8d       	ldd	r22, Z+25	; 0x19
    20b6:	6c 9f       	mul	r22, r28
    20b8:	61 2d       	mov	r22, r1
    20ba:	11 24       	eor	r1, r1
    20bc:	66 95       	lsr	r22
    20be:	66 95       	lsr	r22
    20c0:	66 95       	lsr	r22
    20c2:	22 e2       	ldi	r18, 0x22	; 34
    20c4:	46 e4       	ldi	r20, 0x46	; 70
    20c6:	84 e4       	ldi	r24, 0x44	; 68
    20c8:	9c e0       	ldi	r25, 0x0C	; 12
    20ca:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    20ce:	f8 01       	movw	r30, r16
    20d0:	61 8d       	ldd	r22, Z+25	; 0x19
    20d2:	6c 9f       	mul	r22, r28
    20d4:	c1 2d       	mov	r28, r1
    20d6:	11 24       	eor	r1, r1
    20d8:	c6 95       	lsr	r28
    20da:	c6 95       	lsr	r28
    20dc:	c6 95       	lsr	r28
    20de:	cc 0f       	add	r28, r28
    20e0:	8c 2f       	mov	r24, r28
    20e2:	88 0f       	add	r24, r24
    20e4:	88 0f       	add	r24, r24
    20e6:	c8 0f       	add	r28, r24
    20e8:	6c 1b       	sub	r22, r28
    20ea:	22 e2       	ldi	r18, 0x22	; 34
    20ec:	46 e5       	ldi	r20, 0x56	; 86
    20ee:	84 e4       	ldi	r24, 0x44	; 68
    20f0:	9c e0       	ldi	r25, 0x0C	; 12
    20f2:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    20f6:	f8 01       	movw	r30, r16
    20f8:	80 8d       	ldd	r24, Z+24	; 0x18
    20fa:	83 ff       	sbrs	r24, 3
    20fc:	07 c0       	rjmp	.+14     	; 0x210c <_Z13Weckeranzeigev+0x102>
    20fe:	20 e0       	ldi	r18, 0x00	; 0
    2100:	40 e0       	ldi	r20, 0x00	; 0
    2102:	6f e6       	ldi	r22, 0x6F	; 111
    2104:	84 e4       	ldi	r24, 0x44	; 68
    2106:	9c e0       	ldi	r25, 0x0C	; 12
    2108:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    210c:	80 91 3f 03 	lds	r24, 0x033F
    2110:	90 91 40 03 	lds	r25, 0x0340
    2114:	94 ff       	sbrs	r25, 4
    2116:	09 c0       	rjmp	.+18     	; 0x212a <_Z13Weckeranzeigev+0x120>
    2118:	60 91 3d 03 	lds	r22, 0x033D
    211c:	60 5d       	subi	r22, 0xD0	; 208
    211e:	20 e0       	ldi	r18, 0x00	; 0
    2120:	46 e0       	ldi	r20, 0x06	; 6
    2122:	84 e4       	ldi	r24, 0x44	; 68
    2124:	9c e0       	ldi	r25, 0x0C	; 12
    2126:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    212a:	cf 91       	pop	r28
    212c:	1f 91       	pop	r17
    212e:	0f 91       	pop	r16
    2130:	08 95       	ret

00002132 <_Z12fahradschirmddddm>:
    2132:	2f 92       	push	r2
    2134:	3f 92       	push	r3
    2136:	4f 92       	push	r4
    2138:	5f 92       	push	r5
    213a:	6f 92       	push	r6
    213c:	7f 92       	push	r7
    213e:	8f 92       	push	r8
    2140:	9f 92       	push	r9
    2142:	af 92       	push	r10
    2144:	bf 92       	push	r11
    2146:	cf 92       	push	r12
    2148:	df 92       	push	r13
    214a:	ef 92       	push	r14
    214c:	ff 92       	push	r15
    214e:	0f 93       	push	r16
    2150:	1f 93       	push	r17
    2152:	cf 93       	push	r28
    2154:	df 93       	push	r29
    2156:	cd b7       	in	r28, 0x3d	; 61
    2158:	de b7       	in	r29, 0x3e	; 62
    215a:	61 97       	sbiw	r28, 0x11	; 17
    215c:	0f b6       	in	r0, 0x3f	; 63
    215e:	f8 94       	cli
    2160:	de bf       	out	0x3e, r29	; 62
    2162:	0f be       	out	0x3f, r0	; 63
    2164:	cd bf       	out	0x3d, r28	; 61
    2166:	96 2e       	mov	r9, r22
    2168:	7f 87       	std	Y+15, r23	; 0x0f
    216a:	88 2e       	mov	r8, r24
    216c:	39 2e       	mov	r3, r25
    216e:	2b 87       	std	Y+11, r18	; 0x0b
    2170:	3c 87       	std	Y+12, r19	; 0x0c
    2172:	4d 87       	std	Y+13, r20	; 0x0d
    2174:	5e 87       	std	Y+14, r21	; 0x0e
    2176:	08 8b       	std	Y+16, r16	; 0x10
    2178:	19 8b       	std	Y+17, r17	; 0x11
    217a:	2d 2c       	mov	r2, r13
    217c:	7e a0       	ldd	r7, Y+38	; 0x26
    217e:	6f a0       	ldd	r6, Y+39	; 0x27
    2180:	58 a4       	ldd	r5, Y+40	; 0x28
    2182:	49 a4       	ldd	r4, Y+41	; 0x29
    2184:	84 e4       	ldi	r24, 0x44	; 68
    2186:	9c e0       	ldi	r25, 0x0C	; 12
    2188:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    218c:	81 e0       	ldi	r24, 0x01	; 1
    218e:	cc d9       	rcall	.-3176   	; 0x1528 <_Z6headerh>
    2190:	80 e0       	ldi	r24, 0x00	; 0
    2192:	9f da       	rcall	.-2754   	; 0x16d2 <_Z6bottomh>
    2194:	20 e8       	ldi	r18, 0x80	; 128
    2196:	47 e3       	ldi	r20, 0x37	; 55
    2198:	60 e0       	ldi	r22, 0x00	; 0
    219a:	84 e4       	ldi	r24, 0x44	; 68
    219c:	9c e0       	ldi	r25, 0x0C	; 12
    219e:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <_ZN7Display9drawHLineEhhh>
    21a2:	25 e4       	ldi	r18, 0x45	; 69
    21a4:	4f e0       	ldi	r20, 0x0F	; 15
    21a6:	60 e0       	ldi	r22, 0x00	; 0
    21a8:	84 e4       	ldi	r24, 0x44	; 68
    21aa:	9c e0       	ldi	r25, 0x0C	; 12
    21ac:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <_ZN7Display9drawHLineEhhh>
    21b0:	2b e3       	ldi	r18, 0x3B	; 59
    21b2:	48 e0       	ldi	r20, 0x08	; 8
    21b4:	65 e4       	ldi	r22, 0x45	; 69
    21b6:	84 e4       	ldi	r24, 0x44	; 68
    21b8:	9c e0       	ldi	r25, 0x0C	; 12
    21ba:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <_ZN7Display9drawHLineEhhh>
    21be:	20 e1       	ldi	r18, 0x10	; 16
    21c0:	40 e0       	ldi	r20, 0x00	; 0
    21c2:	65 e4       	ldi	r22, 0x45	; 69
    21c4:	84 e4       	ldi	r24, 0x44	; 68
    21c6:	9c e0       	ldi	r25, 0x0C	; 12
    21c8:	0e 94 c8 03 	call	0x790	; 0x790 <_ZN7Display9drawVLineEhhh>
    21cc:	21 e4       	ldi	r18, 0x41	; 65
    21ce:	48 e2       	ldi	r20, 0x28	; 40
    21d0:	6f e3       	ldi	r22, 0x3F	; 63
    21d2:	84 e4       	ldi	r24, 0x44	; 68
    21d4:	9c e0       	ldi	r25, 0x0C	; 12
    21d6:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <_ZN7Display9drawHLineEhhh>
    21da:	20 e3       	ldi	r18, 0x30	; 48
    21dc:	40 e1       	ldi	r20, 0x10	; 16
    21de:	6f e3       	ldi	r22, 0x3F	; 63
    21e0:	84 e4       	ldi	r24, 0x44	; 68
    21e2:	9c e0       	ldi	r25, 0x0C	; 12
    21e4:	0e 94 c8 03 	call	0x790	; 0x790 <_ZN7Display9drawVLineEhhh>
    21e8:	21 e4       	ldi	r18, 0x41	; 65
    21ea:	48 e1       	ldi	r20, 0x18	; 24
    21ec:	6f e3       	ldi	r22, 0x3F	; 63
    21ee:	84 e4       	ldi	r24, 0x44	; 68
    21f0:	9c e0       	ldi	r25, 0x0C	; 12
    21f2:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <_ZN7Display9drawHLineEhhh>
    21f6:	05 e4       	ldi	r16, 0x45	; 69
    21f8:	10 e1       	ldi	r17, 0x10	; 16
    21fa:	f8 01       	movw	r30, r16
    21fc:	60 81       	ld	r22, Z
    21fe:	60 53       	subi	r22, 0x30	; 48
    2200:	20 e0       	ldi	r18, 0x00	; 0
    2202:	40 e0       	ldi	r20, 0x00	; 0
    2204:	84 e4       	ldi	r24, 0x44	; 68
    2206:	9c e0       	ldi	r25, 0x0C	; 12
    2208:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    220c:	f8 01       	movw	r30, r16
    220e:	61 81       	ldd	r22, Z+1	; 0x01
    2210:	60 53       	subi	r22, 0x30	; 48
    2212:	20 e0       	ldi	r18, 0x00	; 0
    2214:	40 e1       	ldi	r20, 0x10	; 16
    2216:	84 e4       	ldi	r24, 0x44	; 68
    2218:	9c e0       	ldi	r25, 0x0C	; 12
    221a:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    221e:	f8 01       	movw	r30, r16
    2220:	63 81       	ldd	r22, Z+3	; 0x03
    2222:	60 53       	subi	r22, 0x30	; 48
    2224:	20 e0       	ldi	r18, 0x00	; 0
    2226:	45 e2       	ldi	r20, 0x25	; 37
    2228:	84 e4       	ldi	r24, 0x44	; 68
    222a:	9c e0       	ldi	r25, 0x0C	; 12
    222c:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    2230:	f8 01       	movw	r30, r16
    2232:	64 81       	ldd	r22, Z+4	; 0x04
    2234:	60 53       	subi	r22, 0x30	; 48
    2236:	20 e0       	ldi	r18, 0x00	; 0
    2238:	45 e3       	ldi	r20, 0x35	; 53
    223a:	84 e4       	ldi	r24, 0x44	; 68
    223c:	9c e0       	ldi	r25, 0x0C	; 12
    223e:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    2242:	3f 92       	push	r3
    2244:	8f 92       	push	r8
    2246:	ff 85       	ldd	r31, Y+15	; 0x0f
    2248:	ff 93       	push	r31
    224a:	9f 92       	push	r9
    224c:	8f e4       	ldi	r24, 0x4F	; 79
    224e:	92 e0       	ldi	r25, 0x02	; 2
    2250:	9f 93       	push	r25
    2252:	8f 93       	push	r24
    2254:	ce 01       	movw	r24, r28
    2256:	01 96       	adiw	r24, 0x01	; 1
    2258:	9f 93       	push	r25
    225a:	8f 93       	push	r24
    225c:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
    2260:	28 e0       	ldi	r18, 0x08	; 8
    2262:	02 2f       	mov	r16, r18
    2264:	08 1b       	sub	r16, r24
    2266:	0f b6       	in	r0, 0x3f	; 63
    2268:	f8 94       	cli
    226a:	de bf       	out	0x3e, r29	; 62
    226c:	0f be       	out	0x3f, r0	; 63
    226e:	cd bf       	out	0x3d, r28	; 61
    2270:	08 30       	cpi	r16, 0x08	; 8
    2272:	18 f5       	brcc	.+70     	; 0x22ba <_Z12fahradschirmddddm+0x188>
    2274:	10 2f       	mov	r17, r16
    2276:	12 95       	swap	r17
    2278:	10 7f       	andi	r17, 0xF0	; 240
    227a:	4c 01       	movw	r8, r24
    227c:	99 24       	eor	r9, r9
    227e:	e1 e0       	ldi	r30, 0x01	; 1
    2280:	f0 e0       	ldi	r31, 0x00	; 0
    2282:	ec 0f       	add	r30, r28
    2284:	fd 1f       	adc	r31, r29
    2286:	e0 0f       	add	r30, r16
    2288:	f1 1d       	adc	r31, r1
    228a:	e8 0d       	add	r30, r8
    228c:	f9 1d       	adc	r31, r9
    228e:	38 97       	sbiw	r30, 0x08	; 8
    2290:	60 81       	ld	r22, Z
    2292:	6e 32       	cpi	r22, 0x2E	; 46
    2294:	39 f4       	brne	.+14     	; 0x22a4 <_Z12fahradschirmddddm+0x172>
    2296:	20 e2       	ldi	r18, 0x20	; 32
    2298:	41 2f       	mov	r20, r17
    229a:	84 e4       	ldi	r24, 0x44	; 68
    229c:	9c e0       	ldi	r25, 0x0C	; 12
    229e:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    22a2:	07 c0       	rjmp	.+14     	; 0x22b2 <_Z12fahradschirmddddm+0x180>
    22a4:	60 53       	subi	r22, 0x30	; 48
    22a6:	28 e1       	ldi	r18, 0x18	; 24
    22a8:	41 2f       	mov	r20, r17
    22aa:	84 e4       	ldi	r24, 0x44	; 68
    22ac:	9c e0       	ldi	r25, 0x0C	; 12
    22ae:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    22b2:	0f 5f       	subi	r16, 0xFF	; 255
    22b4:	10 5f       	subi	r17, 0xF0	; 240
    22b6:	08 30       	cpi	r16, 0x08	; 8
    22b8:	11 f7       	brne	.-60     	; 0x227e <_Z12fahradschirmddddm+0x14c>
    22ba:	2b 85       	ldd	r18, Y+11	; 0x0b
    22bc:	3c 85       	ldd	r19, Y+12	; 0x0c
    22be:	4d 85       	ldd	r20, Y+13	; 0x0d
    22c0:	5e 85       	ldd	r21, Y+14	; 0x0e
    22c2:	67 e2       	ldi	r22, 0x27	; 39
    22c4:	8f e1       	ldi	r24, 0x1F	; 31
    22c6:	23 db       	rcall	.-2490   	; 0x190e <_Z19anzeige_kleinenadelhhf>
    22c8:	39 89       	ldd	r19, Y+17	; 0x11
    22ca:	3f 93       	push	r19
    22cc:	88 89       	ldd	r24, Y+16	; 0x10
    22ce:	8f 93       	push	r24
    22d0:	ff 92       	push	r15
    22d2:	ef 92       	push	r14
    22d4:	85 e5       	ldi	r24, 0x55	; 85
    22d6:	92 e0       	ldi	r25, 0x02	; 2
    22d8:	9f 93       	push	r25
    22da:	8f 93       	push	r24
    22dc:	ce 01       	movw	r24, r28
    22de:	01 96       	adiw	r24, 0x01	; 1
    22e0:	9f 93       	push	r25
    22e2:	8f 93       	push	r24
    22e4:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
    22e8:	0f b6       	in	r0, 0x3f	; 63
    22ea:	f8 94       	cli
    22ec:	de bf       	out	0x3e, r29	; 62
    22ee:	0f be       	out	0x3f, r0	; 63
    22f0:	cd bf       	out	0x3d, r28	; 61
    22f2:	88 23       	and	r24, r24
    22f4:	e9 f0       	breq	.+58     	; 0x2330 <_Z12fahradschirmddddm+0x1fe>
    22f6:	8e 01       	movw	r16, r28
    22f8:	0f 5f       	subi	r16, 0xFF	; 255
    22fa:	1f 4f       	sbci	r17, 0xFF	; 255
    22fc:	81 50       	subi	r24, 0x01	; 1
    22fe:	e8 2e       	mov	r14, r24
    2300:	f1 2c       	mov	r15, r1
    2302:	ff ef       	ldi	r31, 0xFF	; 255
    2304:	ef 1a       	sub	r14, r31
    2306:	ff 0a       	sbc	r15, r31
    2308:	e0 0e       	add	r14, r16
    230a:	f1 1e       	adc	r15, r17
    230c:	0f 2e       	mov	r0, r31
    230e:	f6 e4       	ldi	r31, 0x46	; 70
    2310:	df 2e       	mov	r13, r31
    2312:	f0 2d       	mov	r31, r0
    2314:	f8 01       	movw	r30, r16
    2316:	61 91       	ld	r22, Z+
    2318:	8f 01       	movw	r16, r30
    231a:	20 e1       	ldi	r18, 0x10	; 16
    231c:	4d 2d       	mov	r20, r13
    231e:	84 e4       	ldi	r24, 0x44	; 68
    2320:	9c e0       	ldi	r25, 0x0C	; 12
    2322:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2326:	f6 e0       	ldi	r31, 0x06	; 6
    2328:	df 0e       	add	r13, r31
    232a:	0e 15       	cp	r16, r14
    232c:	1f 05       	cpc	r17, r15
    232e:	91 f7       	brne	.-28     	; 0x2314 <_Z12fahradschirmddddm+0x1e2>
    2330:	2f 92       	push	r2
    2332:	cf 92       	push	r12
    2334:	bf 92       	push	r11
    2336:	af 92       	push	r10
    2338:	8b e5       	ldi	r24, 0x5B	; 91
    233a:	92 e0       	ldi	r25, 0x02	; 2
    233c:	9f 93       	push	r25
    233e:	8f 93       	push	r24
    2340:	ce 01       	movw	r24, r28
    2342:	01 96       	adiw	r24, 0x01	; 1
    2344:	9f 93       	push	r25
    2346:	8f 93       	push	r24
    2348:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
    234c:	0f b6       	in	r0, 0x3f	; 63
    234e:	f8 94       	cli
    2350:	de bf       	out	0x3e, r29	; 62
    2352:	0f be       	out	0x3f, r0	; 63
    2354:	cd bf       	out	0x3d, r28	; 61
    2356:	88 23       	and	r24, r24
    2358:	e9 f0       	breq	.+58     	; 0x2394 <_Z12fahradschirmddddm+0x262>
    235a:	8e 01       	movw	r16, r28
    235c:	0f 5f       	subi	r16, 0xFF	; 255
    235e:	1f 4f       	sbci	r17, 0xFF	; 255
    2360:	81 50       	subi	r24, 0x01	; 1
    2362:	c8 2e       	mov	r12, r24
    2364:	d1 2c       	mov	r13, r1
    2366:	3f ef       	ldi	r19, 0xFF	; 255
    2368:	c3 1a       	sub	r12, r19
    236a:	d3 0a       	sbc	r13, r19
    236c:	c0 0e       	add	r12, r16
    236e:	d1 1e       	adc	r13, r17
    2370:	0f 2e       	mov	r0, r31
    2372:	f6 e4       	ldi	r31, 0x46	; 70
    2374:	ff 2e       	mov	r15, r31
    2376:	f0 2d       	mov	r31, r0
    2378:	f8 01       	movw	r30, r16
    237a:	61 91       	ld	r22, Z+
    237c:	8f 01       	movw	r16, r30
    237e:	28 e2       	ldi	r18, 0x28	; 40
    2380:	4f 2d       	mov	r20, r15
    2382:	84 e4       	ldi	r24, 0x44	; 68
    2384:	9c e0       	ldi	r25, 0x0C	; 12
    2386:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    238a:	f6 e0       	ldi	r31, 0x06	; 6
    238c:	ff 0e       	add	r15, r31
    238e:	0c 15       	cp	r16, r12
    2390:	1d 05       	cpc	r17, r13
    2392:	91 f7       	brne	.-28     	; 0x2378 <_Z12fahradschirmddddm+0x246>
    2394:	4f 92       	push	r4
    2396:	5f 92       	push	r5
    2398:	6f 92       	push	r6
    239a:	7f 92       	push	r7
    239c:	84 e6       	ldi	r24, 0x64	; 100
    239e:	92 e0       	ldi	r25, 0x02	; 2
    23a0:	9f 93       	push	r25
    23a2:	8f 93       	push	r24
    23a4:	ce 01       	movw	r24, r28
    23a6:	01 96       	adiw	r24, 0x01	; 1
    23a8:	9f 93       	push	r25
    23aa:	8f 93       	push	r24
    23ac:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
    23b0:	0f b6       	in	r0, 0x3f	; 63
    23b2:	f8 94       	cli
    23b4:	de bf       	out	0x3e, r29	; 62
    23b6:	0f be       	out	0x3f, r0	; 63
    23b8:	cd bf       	out	0x3d, r28	; 61
    23ba:	88 23       	and	r24, r24
    23bc:	e9 f0       	breq	.+58     	; 0x23f8 <_Z12fahradschirmddddm+0x2c6>
    23be:	8e 01       	movw	r16, r28
    23c0:	0f 5f       	subi	r16, 0xFF	; 255
    23c2:	1f 4f       	sbci	r17, 0xFF	; 255
    23c4:	81 50       	subi	r24, 0x01	; 1
    23c6:	c8 2e       	mov	r12, r24
    23c8:	d1 2c       	mov	r13, r1
    23ca:	3f ef       	ldi	r19, 0xFF	; 255
    23cc:	c3 1a       	sub	r12, r19
    23ce:	d3 0a       	sbc	r13, r19
    23d0:	c0 0e       	add	r12, r16
    23d2:	d1 1e       	adc	r13, r17
    23d4:	0f 2e       	mov	r0, r31
    23d6:	f6 e4       	ldi	r31, 0x46	; 70
    23d8:	ff 2e       	mov	r15, r31
    23da:	f0 2d       	mov	r31, r0
    23dc:	f8 01       	movw	r30, r16
    23de:	61 91       	ld	r22, Z+
    23e0:	8f 01       	movw	r16, r30
    23e2:	20 e3       	ldi	r18, 0x30	; 48
    23e4:	4f 2d       	mov	r20, r15
    23e6:	84 e4       	ldi	r24, 0x44	; 68
    23e8:	9c e0       	ldi	r25, 0x0C	; 12
    23ea:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    23ee:	f6 e0       	ldi	r31, 0x06	; 6
    23f0:	ff 0e       	add	r15, r31
    23f2:	0c 15       	cp	r16, r12
    23f4:	1d 05       	cpc	r17, r13
    23f6:	91 f7       	brne	.-28     	; 0x23dc <_Z12fahradschirmddddm+0x2aa>
    23f8:	61 96       	adiw	r28, 0x11	; 17
    23fa:	0f b6       	in	r0, 0x3f	; 63
    23fc:	f8 94       	cli
    23fe:	de bf       	out	0x3e, r29	; 62
    2400:	0f be       	out	0x3f, r0	; 63
    2402:	cd bf       	out	0x3d, r28	; 61
    2404:	df 91       	pop	r29
    2406:	cf 91       	pop	r28
    2408:	1f 91       	pop	r17
    240a:	0f 91       	pop	r16
    240c:	ff 90       	pop	r15
    240e:	ef 90       	pop	r14
    2410:	df 90       	pop	r13
    2412:	cf 90       	pop	r12
    2414:	bf 90       	pop	r11
    2416:	af 90       	pop	r10
    2418:	9f 90       	pop	r9
    241a:	8f 90       	pop	r8
    241c:	7f 90       	pop	r7
    241e:	6f 90       	pop	r6
    2420:	5f 90       	pop	r5
    2422:	4f 90       	pop	r4
    2424:	3f 90       	pop	r3
    2426:	2f 90       	pop	r2
    2428:	08 95       	ret

0000242a <_Z14Gaineinstellenv>:
    242a:	cf 92       	push	r12
    242c:	df 92       	push	r13
    242e:	ef 92       	push	r14
    2430:	ff 92       	push	r15
    2432:	1f 93       	push	r17
    2434:	cf 93       	push	r28
    2436:	df 93       	push	r29
    2438:	cd b7       	in	r28, 0x3d	; 61
    243a:	de b7       	in	r29, 0x3e	; 62
    243c:	64 97       	sbiw	r28, 0x14	; 20
    243e:	0f b6       	in	r0, 0x3f	; 63
    2440:	f8 94       	cli
    2442:	de bf       	out	0x3e, r29	; 62
    2444:	0f be       	out	0x3f, r0	; 63
    2446:	cd bf       	out	0x3d, r28	; 61
    2448:	84 e4       	ldi	r24, 0x44	; 68
    244a:	9c e0       	ldi	r25, 0x0C	; 12
    244c:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    2450:	88 e0       	ldi	r24, 0x08	; 8
    2452:	e9 e6       	ldi	r30, 0x69	; 105
    2454:	f2 e0       	ldi	r31, 0x02	; 2
    2456:	de 01       	movw	r26, r28
    2458:	11 96       	adiw	r26, 0x01	; 1
    245a:	01 90       	ld	r0, Z+
    245c:	0d 92       	st	X+, r0
    245e:	8a 95       	dec	r24
    2460:	e1 f7       	brne	.-8      	; 0x245a <_Z14Gaineinstellenv+0x30>
    2462:	ce 01       	movw	r24, r28
    2464:	01 96       	adiw	r24, 0x01	; 1
    2466:	7c 01       	movw	r14, r24
    2468:	6c 01       	movw	r12, r24
    246a:	10 e0       	ldi	r17, 0x00	; 0
    246c:	f6 01       	movw	r30, r12
    246e:	61 91       	ld	r22, Z+
    2470:	6f 01       	movw	r12, r30
    2472:	20 e0       	ldi	r18, 0x00	; 0
    2474:	41 2f       	mov	r20, r17
    2476:	84 e4       	ldi	r24, 0x44	; 68
    2478:	9c e0       	ldi	r25, 0x0C	; 12
    247a:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    247e:	1a 5f       	subi	r17, 0xFA	; 250
    2480:	1a 32       	cpi	r17, 0x2A	; 42
    2482:	a1 f7       	brne	.-24     	; 0x246c <_Z14Gaineinstellenv+0x42>
    2484:	88 e0       	ldi	r24, 0x08	; 8
    2486:	e1 e7       	ldi	r30, 0x71	; 113
    2488:	f2 e0       	ldi	r31, 0x02	; 2
    248a:	de 01       	movw	r26, r28
    248c:	11 96       	adiw	r26, 0x01	; 1
    248e:	01 90       	ld	r0, Z+
    2490:	0d 92       	st	X+, r0
    2492:	8a 95       	dec	r24
    2494:	e1 f7       	brne	.-8      	; 0x248e <_Z14Gaineinstellenv+0x64>
    2496:	67 01       	movw	r12, r14
    2498:	10 e0       	ldi	r17, 0x00	; 0
    249a:	f6 01       	movw	r30, r12
    249c:	61 91       	ld	r22, Z+
    249e:	6f 01       	movw	r12, r30
    24a0:	28 e0       	ldi	r18, 0x08	; 8
    24a2:	41 2f       	mov	r20, r17
    24a4:	84 e4       	ldi	r24, 0x44	; 68
    24a6:	9c e0       	ldi	r25, 0x0C	; 12
    24a8:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    24ac:	1a 5f       	subi	r17, 0xFA	; 250
    24ae:	1a 32       	cpi	r17, 0x2A	; 42
    24b0:	a1 f7       	brne	.-24     	; 0x249a <_Z14Gaineinstellenv+0x70>
    24b2:	88 e0       	ldi	r24, 0x08	; 8
    24b4:	e9 e7       	ldi	r30, 0x79	; 121
    24b6:	f2 e0       	ldi	r31, 0x02	; 2
    24b8:	de 01       	movw	r26, r28
    24ba:	11 96       	adiw	r26, 0x01	; 1
    24bc:	01 90       	ld	r0, Z+
    24be:	0d 92       	st	X+, r0
    24c0:	8a 95       	dec	r24
    24c2:	e1 f7       	brne	.-8      	; 0x24bc <_Z14Gaineinstellenv+0x92>
    24c4:	67 01       	movw	r12, r14
    24c6:	10 e0       	ldi	r17, 0x00	; 0
    24c8:	f6 01       	movw	r30, r12
    24ca:	61 91       	ld	r22, Z+
    24cc:	6f 01       	movw	r12, r30
    24ce:	20 e1       	ldi	r18, 0x10	; 16
    24d0:	41 2f       	mov	r20, r17
    24d2:	84 e4       	ldi	r24, 0x44	; 68
    24d4:	9c e0       	ldi	r25, 0x0C	; 12
    24d6:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    24da:	1a 5f       	subi	r17, 0xFA	; 250
    24dc:	1a 32       	cpi	r17, 0x2A	; 42
    24de:	a1 f7       	brne	.-24     	; 0x24c8 <_Z14Gaineinstellenv+0x9e>
    24e0:	88 e0       	ldi	r24, 0x08	; 8
    24e2:	e1 e8       	ldi	r30, 0x81	; 129
    24e4:	f2 e0       	ldi	r31, 0x02	; 2
    24e6:	de 01       	movw	r26, r28
    24e8:	11 96       	adiw	r26, 0x01	; 1
    24ea:	01 90       	ld	r0, Z+
    24ec:	0d 92       	st	X+, r0
    24ee:	8a 95       	dec	r24
    24f0:	e1 f7       	brne	.-8      	; 0x24ea <_Z14Gaineinstellenv+0xc0>
    24f2:	67 01       	movw	r12, r14
    24f4:	10 e0       	ldi	r17, 0x00	; 0
    24f6:	f6 01       	movw	r30, r12
    24f8:	61 91       	ld	r22, Z+
    24fa:	6f 01       	movw	r12, r30
    24fc:	28 e1       	ldi	r18, 0x18	; 24
    24fe:	41 2f       	mov	r20, r17
    2500:	84 e4       	ldi	r24, 0x44	; 68
    2502:	9c e0       	ldi	r25, 0x0C	; 12
    2504:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2508:	1a 5f       	subi	r17, 0xFA	; 250
    250a:	1a 32       	cpi	r17, 0x2A	; 42
    250c:	a1 f7       	brne	.-24     	; 0x24f6 <_Z14Gaineinstellenv+0xcc>
    250e:	88 e0       	ldi	r24, 0x08	; 8
    2510:	e9 e8       	ldi	r30, 0x89	; 137
    2512:	f2 e0       	ldi	r31, 0x02	; 2
    2514:	de 01       	movw	r26, r28
    2516:	11 96       	adiw	r26, 0x01	; 1
    2518:	01 90       	ld	r0, Z+
    251a:	0d 92       	st	X+, r0
    251c:	8a 95       	dec	r24
    251e:	e1 f7       	brne	.-8      	; 0x2518 <_Z14Gaineinstellenv+0xee>
    2520:	67 01       	movw	r12, r14
    2522:	10 e0       	ldi	r17, 0x00	; 0
    2524:	f6 01       	movw	r30, r12
    2526:	61 91       	ld	r22, Z+
    2528:	6f 01       	movw	r12, r30
    252a:	20 e2       	ldi	r18, 0x20	; 32
    252c:	41 2f       	mov	r20, r17
    252e:	84 e4       	ldi	r24, 0x44	; 68
    2530:	9c e0       	ldi	r25, 0x0C	; 12
    2532:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2536:	1a 5f       	subi	r17, 0xFA	; 250
    2538:	1a 32       	cpi	r17, 0x2A	; 42
    253a:	a1 f7       	brne	.-24     	; 0x2524 <_Z14Gaineinstellenv+0xfa>
    253c:	88 e0       	ldi	r24, 0x08	; 8
    253e:	e1 e9       	ldi	r30, 0x91	; 145
    2540:	f2 e0       	ldi	r31, 0x02	; 2
    2542:	de 01       	movw	r26, r28
    2544:	11 96       	adiw	r26, 0x01	; 1
    2546:	01 90       	ld	r0, Z+
    2548:	0d 92       	st	X+, r0
    254a:	8a 95       	dec	r24
    254c:	e1 f7       	brne	.-8      	; 0x2546 <_Z14Gaineinstellenv+0x11c>
    254e:	67 01       	movw	r12, r14
    2550:	10 e0       	ldi	r17, 0x00	; 0
    2552:	f6 01       	movw	r30, r12
    2554:	61 91       	ld	r22, Z+
    2556:	6f 01       	movw	r12, r30
    2558:	28 e2       	ldi	r18, 0x28	; 40
    255a:	41 2f       	mov	r20, r17
    255c:	84 e4       	ldi	r24, 0x44	; 68
    255e:	9c e0       	ldi	r25, 0x0C	; 12
    2560:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2564:	1a 5f       	subi	r17, 0xFA	; 250
    2566:	1a 32       	cpi	r17, 0x2A	; 42
    2568:	a1 f7       	brne	.-24     	; 0x2552 <_Z14Gaineinstellenv+0x128>
    256a:	88 e0       	ldi	r24, 0x08	; 8
    256c:	e9 e9       	ldi	r30, 0x99	; 153
    256e:	f2 e0       	ldi	r31, 0x02	; 2
    2570:	de 01       	movw	r26, r28
    2572:	11 96       	adiw	r26, 0x01	; 1
    2574:	01 90       	ld	r0, Z+
    2576:	0d 92       	st	X+, r0
    2578:	8a 95       	dec	r24
    257a:	e1 f7       	brne	.-8      	; 0x2574 <_Z14Gaineinstellenv+0x14a>
    257c:	67 01       	movw	r12, r14
    257e:	10 e0       	ldi	r17, 0x00	; 0
    2580:	f6 01       	movw	r30, r12
    2582:	61 91       	ld	r22, Z+
    2584:	6f 01       	movw	r12, r30
    2586:	20 e3       	ldi	r18, 0x30	; 48
    2588:	41 2f       	mov	r20, r17
    258a:	84 e4       	ldi	r24, 0x44	; 68
    258c:	9c e0       	ldi	r25, 0x0C	; 12
    258e:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2592:	1a 5f       	subi	r17, 0xFA	; 250
    2594:	1a 32       	cpi	r17, 0x2A	; 42
    2596:	a1 f7       	brne	.-24     	; 0x2580 <_Z14Gaineinstellenv+0x156>
    2598:	88 e0       	ldi	r24, 0x08	; 8
    259a:	e1 ea       	ldi	r30, 0xA1	; 161
    259c:	f2 e0       	ldi	r31, 0x02	; 2
    259e:	de 01       	movw	r26, r28
    25a0:	11 96       	adiw	r26, 0x01	; 1
    25a2:	01 90       	ld	r0, Z+
    25a4:	0d 92       	st	X+, r0
    25a6:	8a 95       	dec	r24
    25a8:	e1 f7       	brne	.-8      	; 0x25a2 <_Z14Gaineinstellenv+0x178>
    25aa:	10 e0       	ldi	r17, 0x00	; 0
    25ac:	f7 01       	movw	r30, r14
    25ae:	61 91       	ld	r22, Z+
    25b0:	7f 01       	movw	r14, r30
    25b2:	28 e3       	ldi	r18, 0x38	; 56
    25b4:	41 2f       	mov	r20, r17
    25b6:	84 e4       	ldi	r24, 0x44	; 68
    25b8:	9c e0       	ldi	r25, 0x0C	; 12
    25ba:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    25be:	1a 5f       	subi	r17, 0xFA	; 250
    25c0:	1a 32       	cpi	r17, 0x2A	; 42
    25c2:	a1 f7       	brne	.-24     	; 0x25ac <_Z14Gaineinstellenv+0x182>
    25c4:	64 96       	adiw	r28, 0x14	; 20
    25c6:	0f b6       	in	r0, 0x3f	; 63
    25c8:	f8 94       	cli
    25ca:	de bf       	out	0x3e, r29	; 62
    25cc:	0f be       	out	0x3f, r0	; 63
    25ce:	cd bf       	out	0x3d, r28	; 61
    25d0:	df 91       	pop	r29
    25d2:	cf 91       	pop	r28
    25d4:	1f 91       	pop	r17
    25d6:	ff 90       	pop	r15
    25d8:	ef 90       	pop	r14
    25da:	df 90       	pop	r13
    25dc:	cf 90       	pop	r12
    25de:	08 95       	ret

000025e0 <_Z15anzeige_kompassd>:
    25e0:	9f 92       	push	r9
    25e2:	af 92       	push	r10
    25e4:	bf 92       	push	r11
    25e6:	cf 92       	push	r12
    25e8:	df 92       	push	r13
    25ea:	ef 92       	push	r14
    25ec:	ff 92       	push	r15
    25ee:	0f 93       	push	r16
    25f0:	1f 93       	push	r17
    25f2:	cf 93       	push	r28
    25f4:	df 93       	push	r29
    25f6:	cd b7       	in	r28, 0x3d	; 61
    25f8:	de b7       	in	r29, 0x3e	; 62
    25fa:	64 97       	sbiw	r28, 0x14	; 20
    25fc:	0f b6       	in	r0, 0x3f	; 63
    25fe:	f8 94       	cli
    2600:	de bf       	out	0x3e, r29	; 62
    2602:	0f be       	out	0x3f, r0	; 63
    2604:	cd bf       	out	0x3d, r28	; 61
    2606:	96 2e       	mov	r9, r22
    2608:	a7 2e       	mov	r10, r23
    260a:	b8 2e       	mov	r11, r24
    260c:	e9 2e       	mov	r14, r25
    260e:	84 e4       	ldi	r24, 0x44	; 68
    2610:	9c e0       	ldi	r25, 0x0C	; 12
    2612:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    2616:	0f 2e       	mov	r0, r31
    2618:	f5 e4       	ldi	r31, 0x45	; 69
    261a:	cf 2e       	mov	r12, r31
    261c:	f0 e1       	ldi	r31, 0x10	; 16
    261e:	df 2e       	mov	r13, r31
    2620:	f0 2d       	mov	r31, r0
    2622:	11 e4       	ldi	r17, 0x41	; 65
    2624:	f6 01       	movw	r30, r12
    2626:	61 91       	ld	r22, Z+
    2628:	6f 01       	movw	r12, r30
    262a:	20 e0       	ldi	r18, 0x00	; 0
    262c:	41 2f       	mov	r20, r17
    262e:	84 e4       	ldi	r24, 0x44	; 68
    2630:	9c e0       	ldi	r25, 0x0C	; 12
    2632:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2636:	1a 5f       	subi	r17, 0xFA	; 250
    2638:	11 37       	cpi	r17, 0x71	; 113
    263a:	a1 f7       	brne	.-24     	; 0x2624 <_Z15anzeige_kompassd+0x44>
    263c:	0f 2e       	mov	r0, r31
    263e:	fd e4       	ldi	r31, 0x4D	; 77
    2640:	cf 2e       	mov	r12, r31
    2642:	f0 e1       	ldi	r31, 0x10	; 16
    2644:	df 2e       	mov	r13, r31
    2646:	f0 2d       	mov	r31, r0
    2648:	11 e4       	ldi	r17, 0x41	; 65
    264a:	f6 01       	movw	r30, r12
    264c:	61 91       	ld	r22, Z+
    264e:	6f 01       	movw	r12, r30
    2650:	28 e3       	ldi	r18, 0x38	; 56
    2652:	41 2f       	mov	r20, r17
    2654:	84 e4       	ldi	r24, 0x44	; 68
    2656:	9c e0       	ldi	r25, 0x0C	; 12
    2658:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    265c:	1a 5f       	subi	r17, 0xFA	; 250
    265e:	11 37       	cpi	r17, 0x71	; 113
    2660:	a1 f7       	brne	.-24     	; 0x264a <_Z15anzeige_kompassd+0x6a>
    2662:	ef 92       	push	r14
    2664:	bf 92       	push	r11
    2666:	af 92       	push	r10
    2668:	9f 92       	push	r9
    266a:	89 ea       	ldi	r24, 0xA9	; 169
    266c:	92 e0       	ldi	r25, 0x02	; 2
    266e:	9f 93       	push	r25
    2670:	8f 93       	push	r24
    2672:	ce 01       	movw	r24, r28
    2674:	01 96       	adiw	r24, 0x01	; 1
    2676:	9f 93       	push	r25
    2678:	8f 93       	push	r24
    267a:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
    267e:	0f b6       	in	r0, 0x3f	; 63
    2680:	f8 94       	cli
    2682:	de bf       	out	0x3e, r29	; 62
    2684:	0f be       	out	0x3f, r0	; 63
    2686:	cd bf       	out	0x3d, r28	; 61
    2688:	88 23       	and	r24, r24
    268a:	e9 f0       	breq	.+58     	; 0x26c6 <_Z15anzeige_kompassd+0xe6>
    268c:	8e 01       	movw	r16, r28
    268e:	0f 5f       	subi	r16, 0xFF	; 255
    2690:	1f 4f       	sbci	r17, 0xFF	; 255
    2692:	81 50       	subi	r24, 0x01	; 1
    2694:	c8 2e       	mov	r12, r24
    2696:	d1 2c       	mov	r13, r1
    2698:	3f ef       	ldi	r19, 0xFF	; 255
    269a:	c3 1a       	sub	r12, r19
    269c:	d3 0a       	sbc	r13, r19
    269e:	c0 0e       	add	r12, r16
    26a0:	d1 1e       	adc	r13, r17
    26a2:	0f 2e       	mov	r0, r31
    26a4:	f1 e4       	ldi	r31, 0x41	; 65
    26a6:	ff 2e       	mov	r15, r31
    26a8:	f0 2d       	mov	r31, r0
    26aa:	f8 01       	movw	r30, r16
    26ac:	61 91       	ld	r22, Z+
    26ae:	8f 01       	movw	r16, r30
    26b0:	20 e3       	ldi	r18, 0x30	; 48
    26b2:	4f 2d       	mov	r20, r15
    26b4:	84 e4       	ldi	r24, 0x44	; 68
    26b6:	9c e0       	ldi	r25, 0x0C	; 12
    26b8:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    26bc:	f6 e0       	ldi	r31, 0x06	; 6
    26be:	ff 0e       	add	r15, r31
    26c0:	0c 15       	cp	r16, r12
    26c2:	1d 05       	cpc	r17, r13
    26c4:	91 f7       	brne	.-28     	; 0x26aa <_Z15anzeige_kompassd+0xca>
    26c6:	29 2d       	mov	r18, r9
    26c8:	3a 2d       	mov	r19, r10
    26ca:	4b 2d       	mov	r20, r11
    26cc:	5e 2d       	mov	r21, r14
    26ce:	6f e1       	ldi	r22, 0x1F	; 31
    26d0:	8f e1       	ldi	r24, 0x1F	; 31
    26d2:	00 d9       	rcall	.-3584   	; 0x18d4 <_Z13anzeige_nadelhhf>
    26d4:	23 e0       	ldi	r18, 0x03	; 3
    26d6:	40 e5       	ldi	r20, 0x50	; 80
    26d8:	69 2d       	mov	r22, r9
    26da:	7a 2d       	mov	r23, r10
    26dc:	8b 2d       	mov	r24, r11
    26de:	9e 2d       	mov	r25, r14
    26e0:	21 d8       	rcall	.-4030   	; 0x1724 <_Z16anzeige_richtungfhh>
    26e2:	64 96       	adiw	r28, 0x14	; 20
    26e4:	0f b6       	in	r0, 0x3f	; 63
    26e6:	f8 94       	cli
    26e8:	de bf       	out	0x3e, r29	; 62
    26ea:	0f be       	out	0x3f, r0	; 63
    26ec:	cd bf       	out	0x3d, r28	; 61
    26ee:	df 91       	pop	r29
    26f0:	cf 91       	pop	r28
    26f2:	1f 91       	pop	r17
    26f4:	0f 91       	pop	r16
    26f6:	ff 90       	pop	r15
    26f8:	ef 90       	pop	r14
    26fa:	df 90       	pop	r13
    26fc:	cf 90       	pop	r12
    26fe:	bf 90       	pop	r11
    2700:	af 90       	pop	r10
    2702:	9f 90       	pop	r9
    2704:	08 95       	ret

00002706 <_Z10timerseitev>:
    2706:	cf 92       	push	r12
    2708:	df 92       	push	r13
    270a:	ef 92       	push	r14
    270c:	ff 92       	push	r15
    270e:	0f 93       	push	r16
    2710:	1f 93       	push	r17
    2712:	cf 93       	push	r28
    2714:	df 93       	push	r29
    2716:	cd b7       	in	r28, 0x3d	; 61
    2718:	de b7       	in	r29, 0x3e	; 62
    271a:	64 97       	sbiw	r28, 0x14	; 20
    271c:	0f b6       	in	r0, 0x3f	; 63
    271e:	f8 94       	cli
    2720:	de bf       	out	0x3e, r29	; 62
    2722:	0f be       	out	0x3f, r0	; 63
    2724:	cd bf       	out	0x3d, r28	; 61
    2726:	84 e4       	ldi	r24, 0x44	; 68
    2728:	9c e0       	ldi	r25, 0x0C	; 12
    272a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    272e:	88 e0       	ldi	r24, 0x08	; 8
    2730:	e4 eb       	ldi	r30, 0xB4	; 180
    2732:	f2 e0       	ldi	r31, 0x02	; 2
    2734:	de 01       	movw	r26, r28
    2736:	11 96       	adiw	r26, 0x01	; 1
    2738:	01 90       	ld	r0, Z+
    273a:	0d 92       	st	X+, r0
    273c:	8a 95       	dec	r24
    273e:	e1 f7       	brne	.-8      	; 0x2738 <_Z10timerseitev+0x32>
    2740:	ce 01       	movw	r24, r28
    2742:	01 96       	adiw	r24, 0x01	; 1
    2744:	6c 01       	movw	r12, r24
    2746:	7c 01       	movw	r14, r24
    2748:	10 e0       	ldi	r17, 0x00	; 0
    274a:	f7 01       	movw	r30, r14
    274c:	61 91       	ld	r22, Z+
    274e:	7f 01       	movw	r14, r30
    2750:	20 e0       	ldi	r18, 0x00	; 0
    2752:	41 2f       	mov	r20, r17
    2754:	84 e4       	ldi	r24, 0x44	; 68
    2756:	9c e0       	ldi	r25, 0x0C	; 12
    2758:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    275c:	1a 5f       	subi	r17, 0xFA	; 250
    275e:	1a 32       	cpi	r17, 0x2A	; 42
    2760:	a1 f7       	brne	.-24     	; 0x274a <_Z10timerseitev+0x44>
    2762:	60 91 3d 03 	lds	r22, 0x033D
    2766:	66 23       	and	r22, r22
    2768:	39 f0       	breq	.+14     	; 0x2778 <_Z10timerseitev+0x72>
    276a:	60 5d       	subi	r22, 0xD0	; 208
    276c:	20 e0       	ldi	r18, 0x00	; 0
    276e:	4a e2       	ldi	r20, 0x2A	; 42
    2770:	84 e4       	ldi	r24, 0x44	; 68
    2772:	9c e0       	ldi	r25, 0x0C	; 12
    2774:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2778:	e0 90 60 10 	lds	r14, 0x1060
    277c:	f0 90 61 10 	lds	r15, 0x1061
    2780:	00 e1       	ldi	r16, 0x10	; 16
    2782:	1e e0       	ldi	r17, 0x0E	; 14
    2784:	c7 01       	movw	r24, r14
    2786:	b8 01       	movw	r22, r16
    2788:	0e 94 ab 37 	call	0x6f56	; 0x6f56 <__udivmodhi4>
    278c:	ab 01       	movw	r20, r22
    278e:	9c 01       	movw	r18, r24
    2790:	a9 e8       	ldi	r26, 0x89	; 137
    2792:	b8 e8       	ldi	r27, 0x88	; 136
    2794:	0e 94 03 38 	call	0x7006	; 0x7006 <__umulhisi3>
    2798:	fc 01       	movw	r30, r24
    279a:	f6 95       	lsr	r31
    279c:	e7 95       	ror	r30
    279e:	f2 95       	swap	r31
    27a0:	e2 95       	swap	r30
    27a2:	ef 70       	andi	r30, 0x0F	; 15
    27a4:	ef 27       	eor	r30, r31
    27a6:	ff 70       	andi	r31, 0x0F	; 15
    27a8:	ef 27       	eor	r30, r31
    27aa:	97 01       	movw	r18, r14
    27ac:	0e 94 03 38 	call	0x7006	; 0x7006 <__umulhisi3>
    27b0:	96 95       	lsr	r25
    27b2:	87 95       	ror	r24
    27b4:	92 95       	swap	r25
    27b6:	82 95       	swap	r24
    27b8:	8f 70       	andi	r24, 0x0F	; 15
    27ba:	89 27       	eor	r24, r25
    27bc:	9f 70       	andi	r25, 0x0F	; 15
    27be:	89 27       	eor	r24, r25
    27c0:	6c e3       	ldi	r22, 0x3C	; 60
    27c2:	68 9f       	mul	r22, r24
    27c4:	90 01       	movw	r18, r0
    27c6:	69 9f       	mul	r22, r25
    27c8:	30 0d       	add	r19, r0
    27ca:	11 24       	eor	r1, r1
    27cc:	c7 01       	movw	r24, r14
    27ce:	82 1b       	sub	r24, r18
    27d0:	93 0b       	sbc	r25, r19
    27d2:	9c 01       	movw	r18, r24
    27d4:	ca 01       	movw	r24, r20
    27d6:	99 27       	eor	r25, r25
    27d8:	91 95       	neg	r25
    27da:	81 95       	neg	r24
    27dc:	91 09       	sbc	r25, r1
    27de:	b8 01       	movw	r22, r16
    27e0:	0e 94 bf 37 	call	0x6f7e	; 0x6f7e <__divmodhi4>
    27e4:	cb 01       	movw	r24, r22
    27e6:	6a e0       	ldi	r22, 0x0A	; 10
    27e8:	70 e0       	ldi	r23, 0x00	; 0
    27ea:	0e 94 bf 37 	call	0x6f7e	; 0x6f7e <__divmodhi4>
    27ee:	69 83       	std	Y+1, r22	; 0x01
    27f0:	9d ec       	ldi	r25, 0xCD	; 205
    27f2:	49 9f       	mul	r20, r25
    27f4:	31 2d       	mov	r19, r1
    27f6:	11 24       	eor	r1, r1
    27f8:	36 95       	lsr	r19
    27fa:	36 95       	lsr	r19
    27fc:	36 95       	lsr	r19
    27fe:	33 0f       	add	r19, r19
    2800:	83 2f       	mov	r24, r19
    2802:	88 0f       	add	r24, r24
    2804:	88 0f       	add	r24, r24
    2806:	38 0f       	add	r19, r24
    2808:	43 1b       	sub	r20, r19
    280a:	4a 83       	std	Y+2, r20	; 0x02
    280c:	4a e3       	ldi	r20, 0x3A	; 58
    280e:	4b 83       	std	Y+3, r20	; 0x03
    2810:	e9 9f       	mul	r30, r25
    2812:	31 2d       	mov	r19, r1
    2814:	11 24       	eor	r1, r1
    2816:	36 95       	lsr	r19
    2818:	36 95       	lsr	r19
    281a:	36 95       	lsr	r19
    281c:	3c 83       	std	Y+4, r19	; 0x04
    281e:	33 0f       	add	r19, r19
    2820:	83 2f       	mov	r24, r19
    2822:	88 0f       	add	r24, r24
    2824:	88 0f       	add	r24, r24
    2826:	38 0f       	add	r19, r24
    2828:	e3 1b       	sub	r30, r19
    282a:	ed 83       	std	Y+5, r30	; 0x05
    282c:	4e 83       	std	Y+6, r20	; 0x06
    282e:	29 9f       	mul	r18, r25
    2830:	91 2d       	mov	r25, r1
    2832:	11 24       	eor	r1, r1
    2834:	96 95       	lsr	r25
    2836:	96 95       	lsr	r25
    2838:	96 95       	lsr	r25
    283a:	9f 83       	std	Y+7, r25	; 0x07
    283c:	99 0f       	add	r25, r25
    283e:	89 2f       	mov	r24, r25
    2840:	88 0f       	add	r24, r24
    2842:	88 0f       	add	r24, r24
    2844:	98 0f       	add	r25, r24
    2846:	29 1b       	sub	r18, r25
    2848:	28 87       	std	Y+8, r18	; 0x08
    284a:	10 e0       	ldi	r17, 0x00	; 0
    284c:	f6 01       	movw	r30, r12
    284e:	61 91       	ld	r22, Z+
    2850:	6f 01       	movw	r12, r30
    2852:	6a 33       	cpi	r22, 0x3A	; 58
    2854:	39 f4       	brne	.+14     	; 0x2864 <_Z10timerseitev+0x15e>
    2856:	24 e1       	ldi	r18, 0x14	; 20
    2858:	41 2f       	mov	r20, r17
    285a:	84 e4       	ldi	r24, 0x44	; 68
    285c:	9c e0       	ldi	r25, 0x0C	; 12
    285e:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2862:	06 c0       	rjmp	.+12     	; 0x2870 <_Z10timerseitev+0x16a>
    2864:	20 e1       	ldi	r18, 0x10	; 16
    2866:	41 2f       	mov	r20, r17
    2868:	84 e4       	ldi	r24, 0x44	; 68
    286a:	9c e0       	ldi	r25, 0x0C	; 12
    286c:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    2870:	10 5f       	subi	r17, 0xF0	; 240
    2872:	10 38       	cpi	r17, 0x80	; 128
    2874:	59 f7       	brne	.-42     	; 0x284c <_Z10timerseitev+0x146>
    2876:	64 96       	adiw	r28, 0x14	; 20
    2878:	0f b6       	in	r0, 0x3f	; 63
    287a:	f8 94       	cli
    287c:	de bf       	out	0x3e, r29	; 62
    287e:	0f be       	out	0x3f, r0	; 63
    2880:	cd bf       	out	0x3d, r28	; 61
    2882:	df 91       	pop	r29
    2884:	cf 91       	pop	r28
    2886:	1f 91       	pop	r17
    2888:	0f 91       	pop	r16
    288a:	ff 90       	pop	r15
    288c:	ef 90       	pop	r14
    288e:	df 90       	pop	r13
    2890:	cf 90       	pop	r12
    2892:	08 95       	ret

00002894 <_Z13Stoppuhrseitev>:
    2894:	cf 92       	push	r12
    2896:	df 92       	push	r13
    2898:	ef 92       	push	r14
    289a:	ff 92       	push	r15
    289c:	0f 93       	push	r16
    289e:	1f 93       	push	r17
    28a0:	cf 93       	push	r28
    28a2:	df 93       	push	r29
    28a4:	cd b7       	in	r28, 0x3d	; 61
    28a6:	de b7       	in	r29, 0x3e	; 62
    28a8:	64 97       	sbiw	r28, 0x14	; 20
    28aa:	0f b6       	in	r0, 0x3f	; 63
    28ac:	f8 94       	cli
    28ae:	de bf       	out	0x3e, r29	; 62
    28b0:	0f be       	out	0x3f, r0	; 63
    28b2:	cd bf       	out	0x3d, r28	; 61
    28b4:	84 e4       	ldi	r24, 0x44	; 68
    28b6:	9c e0       	ldi	r25, 0x0C	; 12
    28b8:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
    28bc:	8b e0       	ldi	r24, 0x0B	; 11
    28be:	ec eb       	ldi	r30, 0xBC	; 188
    28c0:	f2 e0       	ldi	r31, 0x02	; 2
    28c2:	de 01       	movw	r26, r28
    28c4:	11 96       	adiw	r26, 0x01	; 1
    28c6:	01 90       	ld	r0, Z+
    28c8:	0d 92       	st	X+, r0
    28ca:	8a 95       	dec	r24
    28cc:	e1 f7       	brne	.-8      	; 0x28c6 <_Z13Stoppuhrseitev+0x32>
    28ce:	ce 01       	movw	r24, r28
    28d0:	01 96       	adiw	r24, 0x01	; 1
    28d2:	6c 01       	movw	r12, r24
    28d4:	7c 01       	movw	r14, r24
    28d6:	10 e0       	ldi	r17, 0x00	; 0
    28d8:	f7 01       	movw	r30, r14
    28da:	61 91       	ld	r22, Z+
    28dc:	7f 01       	movw	r14, r30
    28de:	20 e0       	ldi	r18, 0x00	; 0
    28e0:	41 2f       	mov	r20, r17
    28e2:	84 e4       	ldi	r24, 0x44	; 68
    28e4:	9c e0       	ldi	r25, 0x0C	; 12
    28e6:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    28ea:	1a 5f       	subi	r17, 0xFA	; 250
    28ec:	1c 33       	cpi	r17, 0x3C	; 60
    28ee:	a1 f7       	brne	.-24     	; 0x28d8 <_Z13Stoppuhrseitev+0x44>
    28f0:	e0 90 62 10 	lds	r14, 0x1062
    28f4:	f0 90 63 10 	lds	r15, 0x1063
    28f8:	00 e1       	ldi	r16, 0x10	; 16
    28fa:	1e e0       	ldi	r17, 0x0E	; 14
    28fc:	c7 01       	movw	r24, r14
    28fe:	b8 01       	movw	r22, r16
    2900:	0e 94 ab 37 	call	0x6f56	; 0x6f56 <__udivmodhi4>
    2904:	ab 01       	movw	r20, r22
    2906:	9c 01       	movw	r18, r24
    2908:	a9 e8       	ldi	r26, 0x89	; 137
    290a:	b8 e8       	ldi	r27, 0x88	; 136
    290c:	0e 94 03 38 	call	0x7006	; 0x7006 <__umulhisi3>
    2910:	fc 01       	movw	r30, r24
    2912:	f6 95       	lsr	r31
    2914:	e7 95       	ror	r30
    2916:	f2 95       	swap	r31
    2918:	e2 95       	swap	r30
    291a:	ef 70       	andi	r30, 0x0F	; 15
    291c:	ef 27       	eor	r30, r31
    291e:	ff 70       	andi	r31, 0x0F	; 15
    2920:	ef 27       	eor	r30, r31
    2922:	97 01       	movw	r18, r14
    2924:	0e 94 03 38 	call	0x7006	; 0x7006 <__umulhisi3>
    2928:	96 95       	lsr	r25
    292a:	87 95       	ror	r24
    292c:	92 95       	swap	r25
    292e:	82 95       	swap	r24
    2930:	8f 70       	andi	r24, 0x0F	; 15
    2932:	89 27       	eor	r24, r25
    2934:	9f 70       	andi	r25, 0x0F	; 15
    2936:	89 27       	eor	r24, r25
    2938:	6c e3       	ldi	r22, 0x3C	; 60
    293a:	68 9f       	mul	r22, r24
    293c:	90 01       	movw	r18, r0
    293e:	69 9f       	mul	r22, r25
    2940:	30 0d       	add	r19, r0
    2942:	11 24       	eor	r1, r1
    2944:	c7 01       	movw	r24, r14
    2946:	82 1b       	sub	r24, r18
    2948:	93 0b       	sbc	r25, r19
    294a:	9c 01       	movw	r18, r24
    294c:	ca 01       	movw	r24, r20
    294e:	99 27       	eor	r25, r25
    2950:	91 95       	neg	r25
    2952:	81 95       	neg	r24
    2954:	91 09       	sbc	r25, r1
    2956:	b8 01       	movw	r22, r16
    2958:	0e 94 bf 37 	call	0x6f7e	; 0x6f7e <__divmodhi4>
    295c:	cb 01       	movw	r24, r22
    295e:	6a e0       	ldi	r22, 0x0A	; 10
    2960:	70 e0       	ldi	r23, 0x00	; 0
    2962:	0e 94 bf 37 	call	0x6f7e	; 0x6f7e <__divmodhi4>
    2966:	69 83       	std	Y+1, r22	; 0x01
    2968:	9d ec       	ldi	r25, 0xCD	; 205
    296a:	49 9f       	mul	r20, r25
    296c:	31 2d       	mov	r19, r1
    296e:	11 24       	eor	r1, r1
    2970:	36 95       	lsr	r19
    2972:	36 95       	lsr	r19
    2974:	36 95       	lsr	r19
    2976:	33 0f       	add	r19, r19
    2978:	83 2f       	mov	r24, r19
    297a:	88 0f       	add	r24, r24
    297c:	88 0f       	add	r24, r24
    297e:	38 0f       	add	r19, r24
    2980:	43 1b       	sub	r20, r19
    2982:	4a 83       	std	Y+2, r20	; 0x02
    2984:	4a e3       	ldi	r20, 0x3A	; 58
    2986:	4b 83       	std	Y+3, r20	; 0x03
    2988:	e9 9f       	mul	r30, r25
    298a:	31 2d       	mov	r19, r1
    298c:	11 24       	eor	r1, r1
    298e:	36 95       	lsr	r19
    2990:	36 95       	lsr	r19
    2992:	36 95       	lsr	r19
    2994:	3c 83       	std	Y+4, r19	; 0x04
    2996:	33 0f       	add	r19, r19
    2998:	83 2f       	mov	r24, r19
    299a:	88 0f       	add	r24, r24
    299c:	88 0f       	add	r24, r24
    299e:	38 0f       	add	r19, r24
    29a0:	e3 1b       	sub	r30, r19
    29a2:	ed 83       	std	Y+5, r30	; 0x05
    29a4:	4e 83       	std	Y+6, r20	; 0x06
    29a6:	29 9f       	mul	r18, r25
    29a8:	91 2d       	mov	r25, r1
    29aa:	11 24       	eor	r1, r1
    29ac:	96 95       	lsr	r25
    29ae:	96 95       	lsr	r25
    29b0:	96 95       	lsr	r25
    29b2:	9f 83       	std	Y+7, r25	; 0x07
    29b4:	99 0f       	add	r25, r25
    29b6:	89 2f       	mov	r24, r25
    29b8:	88 0f       	add	r24, r24
    29ba:	88 0f       	add	r24, r24
    29bc:	98 0f       	add	r25, r24
    29be:	29 1b       	sub	r18, r25
    29c0:	28 87       	std	Y+8, r18	; 0x08
    29c2:	10 e0       	ldi	r17, 0x00	; 0
    29c4:	f6 01       	movw	r30, r12
    29c6:	61 91       	ld	r22, Z+
    29c8:	6f 01       	movw	r12, r30
    29ca:	6a 33       	cpi	r22, 0x3A	; 58
    29cc:	39 f4       	brne	.+14     	; 0x29dc <_Z13Stoppuhrseitev+0x148>
    29ce:	24 e1       	ldi	r18, 0x14	; 20
    29d0:	41 2f       	mov	r20, r17
    29d2:	84 e4       	ldi	r24, 0x44	; 68
    29d4:	9c e0       	ldi	r25, 0x0C	; 12
    29d6:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    29da:	06 c0       	rjmp	.+12     	; 0x29e8 <_Z13Stoppuhrseitev+0x154>
    29dc:	20 e1       	ldi	r18, 0x10	; 16
    29de:	41 2f       	mov	r20, r17
    29e0:	84 e4       	ldi	r24, 0x44	; 68
    29e2:	9c e0       	ldi	r25, 0x0C	; 12
    29e4:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    29e8:	10 5f       	subi	r17, 0xF0	; 240
    29ea:	10 38       	cpi	r17, 0x80	; 128
    29ec:	59 f7       	brne	.-42     	; 0x29c4 <_Z13Stoppuhrseitev+0x130>
    29ee:	64 96       	adiw	r28, 0x14	; 20
    29f0:	0f b6       	in	r0, 0x3f	; 63
    29f2:	f8 94       	cli
    29f4:	de bf       	out	0x3e, r29	; 62
    29f6:	0f be       	out	0x3f, r0	; 63
    29f8:	cd bf       	out	0x3d, r28	; 61
    29fa:	df 91       	pop	r29
    29fc:	cf 91       	pop	r28
    29fe:	1f 91       	pop	r17
    2a00:	0f 91       	pop	r16
    2a02:	ff 90       	pop	r15
    2a04:	ef 90       	pop	r14
    2a06:	df 90       	pop	r13
    2a08:	cf 90       	pop	r12
    2a0a:	08 95       	ret

00002a0c <_Z11Wanderseitev>:

void Wanderseite(){
    2a0c:	7f 92       	push	r7
    2a0e:	8f 92       	push	r8
    2a10:	9f 92       	push	r9
    2a12:	af 92       	push	r10
    2a14:	bf 92       	push	r11
    2a16:	cf 92       	push	r12
    2a18:	df 92       	push	r13
    2a1a:	ef 92       	push	r14
    2a1c:	ff 92       	push	r15
    2a1e:	0f 93       	push	r16
    2a20:	1f 93       	push	r17
    2a22:	cf 93       	push	r28
    2a24:	df 93       	push	r29
    2a26:	cd b7       	in	r28, 0x3d	; 61
    2a28:	de b7       	in	r29, 0x3e	; 62
    2a2a:	64 97       	sbiw	r28, 0x14	; 20
    2a2c:	0f b6       	in	r0, 0x3f	; 63
    2a2e:	f8 94       	cli
    2a30:	de bf       	out	0x3e, r29	; 62
    2a32:	0f be       	out	0x3f, r0	; 63
    2a34:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	uint8_t buffersize=0;
	oled.clearFrame();
    2a36:	84 e4       	ldi	r24, 0x44	; 68
    2a38:	9c e0       	ldi	r25, 0x0C	; 12
    2a3a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
	header(0);
    2a3e:	80 e0       	ldi	r24, 0x00	; 0
    2a40:	0e 94 94 0a 	call	0x1528	; 0x1528 <_Z6headerh>
	bottom(0);
    2a44:	80 e0       	ldi	r24, 0x00	; 0
    2a46:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <_Z6bottomh>
	
	Accelerometer.readtempera();
    2a4a:	87 e4       	ldi	r24, 0x47	; 71
    2a4c:	9b e0       	ldi	r25, 0x0B	; 11
    2a4e:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <_ZN7LSM303D11readtemperaEv>
	Accelerometer.readacc();
    2a52:	87 e4       	ldi	r24, 0x47	; 71
    2a54:	9b e0       	ldi	r25, 0x0B	; 11
    2a56:	0e 94 eb 29 	call	0x53d6	; 0x53d6 <_ZN7LSM303D7readaccEv>
	
	//Linse
	//Range: Page 1 to Page 6 (8 bis (7*8-1) 53)
	//ganz rechts SSDWIDTH-(53-8)
	#define libelle	(53.0-8.0)
	oled.drawRectangle(SSD1306_WIDTH-libelle,8,SSD1306_WIDTH-1,53,0);
    2a5a:	e1 2c       	mov	r14, r1
    2a5c:	05 e3       	ldi	r16, 0x35	; 53
    2a5e:	2f e7       	ldi	r18, 0x7F	; 127
    2a60:	48 e0       	ldi	r20, 0x08	; 8
    2a62:	63 e5       	ldi	r22, 0x53	; 83
    2a64:	84 e4       	ldi	r24, 0x44	; 68
    2a66:	9c e0       	ldi	r25, 0x0C	; 12
    2a68:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <_ZN7Display13drawRectangleEhhhhh>
	oled.drawVLine(SSD1306_WIDTH-libelle/2.0,8,libelle);
    2a6c:	2d e2       	ldi	r18, 0x2D	; 45
    2a6e:	48 e0       	ldi	r20, 0x08	; 8
    2a70:	69 e6       	ldi	r22, 0x69	; 105
    2a72:	84 e4       	ldi	r24, 0x44	; 68
    2a74:	9c e0       	ldi	r25, 0x0C	; 12
    2a76:	0e 94 c8 03 	call	0x790	; 0x790 <_ZN7Display9drawVLineEhhh>
	oled.drawHLine(SSD1306_WIDTH-libelle,SSD1306_HEIGHT/2,libelle);
    2a7a:	2d e2       	ldi	r18, 0x2D	; 45
    2a7c:	40 e2       	ldi	r20, 0x20	; 32
    2a7e:	63 e5       	ldi	r22, 0x53	; 83
    2a80:	84 e4       	ldi	r24, 0x44	; 68
    2a82:	9c e0       	ldi	r25, 0x0C	; 12
    2a84:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <_ZN7Display9drawHLineEhhh>
	//Draw libelle uber die Winkel max ist 90 und -90 in beide richtungen
	#define bereichgroese libelle/M_PI*2.0
	#define breite 4
	#define xpos SSD1306_WIDTH-libelle/2.0-breite/2.0
	#define ypos SSD1306_HEIGHT/2.0-breite/2.0
	float rollpix = Accelerometer.roll*bereichgroese;
    2a88:	07 e4       	ldi	r16, 0x47	; 71
    2a8a:	1b e0       	ldi	r17, 0x0B	; 11
    2a8c:	20 e0       	ldi	r18, 0x00	; 0
    2a8e:	30 e0       	ldi	r19, 0x00	; 0
    2a90:	44 e3       	ldi	r20, 0x34	; 52
    2a92:	52 e4       	ldi	r21, 0x42	; 66
    2a94:	f8 01       	movw	r30, r16
    2a96:	60 85       	ldd	r22, Z+8	; 0x08
    2a98:	71 85       	ldd	r23, Z+9	; 0x09
    2a9a:	82 85       	ldd	r24, Z+10	; 0x0a
    2a9c:	93 85       	ldd	r25, Z+11	; 0x0b
    2a9e:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    2aa2:	2b ed       	ldi	r18, 0xDB	; 219
    2aa4:	3f e0       	ldi	r19, 0x0F	; 15
    2aa6:	49 e4       	ldi	r20, 0x49	; 73
    2aa8:	50 e4       	ldi	r21, 0x40	; 64
    2aaa:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
    2aae:	9b 01       	movw	r18, r22
    2ab0:	ac 01       	movw	r20, r24
    2ab2:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    2ab6:	6b 01       	movw	r12, r22
    2ab8:	7c 01       	movw	r14, r24
	float pitchpix = Accelerometer.pitch*bereichgroese;
    2aba:	f8 01       	movw	r30, r16
    2abc:	84 84       	ldd	r8, Z+12	; 0x0c
    2abe:	95 84       	ldd	r9, Z+13	; 0x0d
    2ac0:	a6 84       	ldd	r10, Z+14	; 0x0e
    2ac2:	b7 84       	ldd	r11, Z+15	; 0x0f
	if (rollpix<libelle/2.0 && pitchpix<libelle/2.0)
    2ac4:	20 e0       	ldi	r18, 0x00	; 0
    2ac6:	30 e0       	ldi	r19, 0x00	; 0
    2ac8:	44 eb       	ldi	r20, 0xB4	; 180
    2aca:	51 e4       	ldi	r21, 0x41	; 65
    2acc:	0e 94 74 31 	call	0x62e8	; 0x62e8 <__cmpsf2>
    2ad0:	88 23       	and	r24, r24
    2ad2:	0c f0       	brlt	.+2      	; 0x2ad6 <_Z11Wanderseitev+0xca>
    2ad4:	4f c0       	rjmp	.+158    	; 0x2b74 <_Z11Wanderseitev+0x168>
	#define bereichgroese libelle/M_PI*2.0
	#define breite 4
	#define xpos SSD1306_WIDTH-libelle/2.0-breite/2.0
	#define ypos SSD1306_HEIGHT/2.0-breite/2.0
	float rollpix = Accelerometer.roll*bereichgroese;
	float pitchpix = Accelerometer.pitch*bereichgroese;
    2ad6:	20 e0       	ldi	r18, 0x00	; 0
    2ad8:	30 e0       	ldi	r19, 0x00	; 0
    2ada:	44 e3       	ldi	r20, 0x34	; 52
    2adc:	52 e4       	ldi	r21, 0x42	; 66
    2ade:	c5 01       	movw	r24, r10
    2ae0:	b4 01       	movw	r22, r8
    2ae2:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    2ae6:	2b ed       	ldi	r18, 0xDB	; 219
    2ae8:	3f e0       	ldi	r19, 0x0F	; 15
    2aea:	49 e4       	ldi	r20, 0x49	; 73
    2aec:	50 e4       	ldi	r21, 0x40	; 64
    2aee:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
    2af2:	9b 01       	movw	r18, r22
    2af4:	ac 01       	movw	r20, r24
    2af6:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    2afa:	4b 01       	movw	r8, r22
    2afc:	5c 01       	movw	r10, r24
	if (rollpix<libelle/2.0 && pitchpix<libelle/2.0)
    2afe:	20 e0       	ldi	r18, 0x00	; 0
    2b00:	30 e0       	ldi	r19, 0x00	; 0
    2b02:	44 eb       	ldi	r20, 0xB4	; 180
    2b04:	51 e4       	ldi	r21, 0x41	; 65
    2b06:	0e 94 74 31 	call	0x62e8	; 0x62e8 <__cmpsf2>
    2b0a:	88 23       	and	r24, r24
    2b0c:	9c f5       	brge	.+102    	; 0x2b74 <_Z11Wanderseitev+0x168>
	{
		oled.drawRectangle(xpos-rollpix,ypos+pitchpix,xpos+breite-rollpix,ypos+breite+pitchpix,1);
    2b0e:	20 e0       	ldi	r18, 0x00	; 0
    2b10:	30 e0       	ldi	r19, 0x00	; 0
    2b12:	48 e0       	ldi	r20, 0x08	; 8
    2b14:	52 e4       	ldi	r21, 0x42	; 66
    2b16:	c5 01       	movw	r24, r10
    2b18:	b4 01       	movw	r22, r8
    2b1a:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    2b1e:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
    2b22:	06 2f       	mov	r16, r22
    2b24:	a7 01       	movw	r20, r14
    2b26:	96 01       	movw	r18, r12
    2b28:	60 e0       	ldi	r22, 0x00	; 0
    2b2a:	70 e0       	ldi	r23, 0x00	; 0
    2b2c:	87 ed       	ldi	r24, 0xD7	; 215
    2b2e:	92 e4       	ldi	r25, 0x42	; 66
    2b30:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
    2b34:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
    2b38:	76 2e       	mov	r7, r22
    2b3a:	20 e0       	ldi	r18, 0x00	; 0
    2b3c:	30 e0       	ldi	r19, 0x00	; 0
    2b3e:	40 ef       	ldi	r20, 0xF0	; 240
    2b40:	51 e4       	ldi	r21, 0x41	; 65
    2b42:	c5 01       	movw	r24, r10
    2b44:	b4 01       	movw	r22, r8
    2b46:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    2b4a:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
    2b4e:	16 2f       	mov	r17, r22
    2b50:	a7 01       	movw	r20, r14
    2b52:	96 01       	movw	r18, r12
    2b54:	60 e0       	ldi	r22, 0x00	; 0
    2b56:	70 e0       	ldi	r23, 0x00	; 0
    2b58:	8f ec       	ldi	r24, 0xCF	; 207
    2b5a:	92 e4       	ldi	r25, 0x42	; 66
    2b5c:	0e 94 ad 30 	call	0x615a	; 0x615a <__subsf3>
    2b60:	0e 94 e8 31 	call	0x63d0	; 0x63d0 <__fixunssfsi>
    2b64:	ee 24       	eor	r14, r14
    2b66:	e3 94       	inc	r14
    2b68:	27 2d       	mov	r18, r7
    2b6a:	41 2f       	mov	r20, r17
    2b6c:	84 e4       	ldi	r24, 0x44	; 68
    2b6e:	9c e0       	ldi	r25, 0x0C	; 12
    2b70:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <_ZN7Display13drawRectangleEhhhhh>
	//Text debugging
	//buffersize=sprintf(buffer,"r:%.1f",Accelerometer.roll*180.0/M_PI);
	//for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,2*charhighte);}
	//buffersize=sprintf(buffer,"p:%.1f",Accelerometer.pitch*180.0/M_PI);
	//for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
	buffersize=sprintf(buffer,"%i",Accelerometer.achsen_A[0]);
    2b74:	e7 e4       	ldi	r30, 0x47	; 71
    2b76:	fb e0       	ldi	r31, 0x0B	; 11
    2b78:	81 81       	ldd	r24, Z+1	; 0x01
    2b7a:	8f 93       	push	r24
    2b7c:	80 81       	ld	r24, Z
    2b7e:	8f 93       	push	r24
    2b80:	85 ed       	ldi	r24, 0xD5	; 213
    2b82:	92 e0       	ldi	r25, 0x02	; 2
    2b84:	9f 93       	push	r25
    2b86:	8f 93       	push	r24
    2b88:	ce 01       	movw	r24, r28
    2b8a:	01 96       	adiw	r24, 0x01	; 1
    2b8c:	9f 93       	push	r25
    2b8e:	8f 93       	push	r24
    2b90:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,2*charhighte);}
    2b94:	0f 90       	pop	r0
    2b96:	0f 90       	pop	r0
    2b98:	0f 90       	pop	r0
    2b9a:	0f 90       	pop	r0
    2b9c:	0f 90       	pop	r0
    2b9e:	0f 90       	pop	r0
    2ba0:	88 23       	and	r24, r24
    2ba2:	d1 f0       	breq	.+52     	; 0x2bd8 <_Z11Wanderseitev+0x1cc>
    2ba4:	8e 01       	movw	r16, r28
    2ba6:	0f 5f       	subi	r16, 0xFF	; 255
    2ba8:	1f 4f       	sbci	r17, 0xFF	; 255
    2baa:	81 50       	subi	r24, 0x01	; 1
    2bac:	c8 2e       	mov	r12, r24
    2bae:	d1 2c       	mov	r13, r1
    2bb0:	ff ef       	ldi	r31, 0xFF	; 255
    2bb2:	cf 1a       	sub	r12, r31
    2bb4:	df 0a       	sbc	r13, r31
    2bb6:	c0 0e       	add	r12, r16
    2bb8:	d1 1e       	adc	r13, r17
    2bba:	f1 2c       	mov	r15, r1
    2bbc:	f8 01       	movw	r30, r16
    2bbe:	61 91       	ld	r22, Z+
    2bc0:	8f 01       	movw	r16, r30
    2bc2:	20 e1       	ldi	r18, 0x10	; 16
    2bc4:	4f 2d       	mov	r20, r15
    2bc6:	84 e4       	ldi	r24, 0x44	; 68
    2bc8:	9c e0       	ldi	r25, 0x0C	; 12
    2bca:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2bce:	f6 e0       	ldi	r31, 0x06	; 6
    2bd0:	ff 0e       	add	r15, r31
    2bd2:	0c 15       	cp	r16, r12
    2bd4:	1d 05       	cpc	r17, r13
    2bd6:	91 f7       	brne	.-28     	; 0x2bbc <_Z11Wanderseitev+0x1b0>
	buffersize=sprintf(buffer,"%i",Accelerometer.achsen_A[1]);
    2bd8:	e7 e4       	ldi	r30, 0x47	; 71
    2bda:	fb e0       	ldi	r31, 0x0B	; 11
    2bdc:	83 81       	ldd	r24, Z+3	; 0x03
    2bde:	8f 93       	push	r24
    2be0:	82 81       	ldd	r24, Z+2	; 0x02
    2be2:	8f 93       	push	r24
    2be4:	85 ed       	ldi	r24, 0xD5	; 213
    2be6:	92 e0       	ldi	r25, 0x02	; 2
    2be8:	9f 93       	push	r25
    2bea:	8f 93       	push	r24
    2bec:	ce 01       	movw	r24, r28
    2bee:	01 96       	adiw	r24, 0x01	; 1
    2bf0:	9f 93       	push	r25
    2bf2:	8f 93       	push	r24
    2bf4:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
    2bf8:	0f 90       	pop	r0
    2bfa:	0f 90       	pop	r0
    2bfc:	0f 90       	pop	r0
    2bfe:	0f 90       	pop	r0
    2c00:	0f 90       	pop	r0
    2c02:	0f 90       	pop	r0
    2c04:	88 23       	and	r24, r24
    2c06:	d1 f0       	breq	.+52     	; 0x2c3c <_Z11Wanderseitev+0x230>
    2c08:	8e 01       	movw	r16, r28
    2c0a:	0f 5f       	subi	r16, 0xFF	; 255
    2c0c:	1f 4f       	sbci	r17, 0xFF	; 255
    2c0e:	81 50       	subi	r24, 0x01	; 1
    2c10:	c8 2e       	mov	r12, r24
    2c12:	d1 2c       	mov	r13, r1
    2c14:	8f ef       	ldi	r24, 0xFF	; 255
    2c16:	c8 1a       	sub	r12, r24
    2c18:	d8 0a       	sbc	r13, r24
    2c1a:	c0 0e       	add	r12, r16
    2c1c:	d1 1e       	adc	r13, r17
    2c1e:	f1 2c       	mov	r15, r1
    2c20:	f8 01       	movw	r30, r16
    2c22:	61 91       	ld	r22, Z+
    2c24:	8f 01       	movw	r16, r30
    2c26:	28 e1       	ldi	r18, 0x18	; 24
    2c28:	4f 2d       	mov	r20, r15
    2c2a:	84 e4       	ldi	r24, 0x44	; 68
    2c2c:	9c e0       	ldi	r25, 0x0C	; 12
    2c2e:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2c32:	f6 e0       	ldi	r31, 0x06	; 6
    2c34:	ff 0e       	add	r15, r31
    2c36:	0c 15       	cp	r16, r12
    2c38:	1d 05       	cpc	r17, r13
    2c3a:	91 f7       	brne	.-28     	; 0x2c20 <_Z11Wanderseitev+0x214>
	buffersize=sprintf(buffer,"%i",Accelerometer.achsen_A[2]);
    2c3c:	e7 e4       	ldi	r30, 0x47	; 71
    2c3e:	fb e0       	ldi	r31, 0x0B	; 11
    2c40:	85 81       	ldd	r24, Z+5	; 0x05
    2c42:	8f 93       	push	r24
    2c44:	84 81       	ldd	r24, Z+4	; 0x04
    2c46:	8f 93       	push	r24
    2c48:	85 ed       	ldi	r24, 0xD5	; 213
    2c4a:	92 e0       	ldi	r25, 0x02	; 2
    2c4c:	9f 93       	push	r25
    2c4e:	8f 93       	push	r24
    2c50:	ce 01       	movw	r24, r28
    2c52:	01 96       	adiw	r24, 0x01	; 1
    2c54:	9f 93       	push	r25
    2c56:	8f 93       	push	r24
    2c58:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,4*charhighte);}
    2c5c:	0f 90       	pop	r0
    2c5e:	0f 90       	pop	r0
    2c60:	0f 90       	pop	r0
    2c62:	0f 90       	pop	r0
    2c64:	0f 90       	pop	r0
    2c66:	0f 90       	pop	r0
    2c68:	88 23       	and	r24, r24
    2c6a:	d1 f0       	breq	.+52     	; 0x2ca0 <_Z11Wanderseitev+0x294>
    2c6c:	8e 01       	movw	r16, r28
    2c6e:	0f 5f       	subi	r16, 0xFF	; 255
    2c70:	1f 4f       	sbci	r17, 0xFF	; 255
    2c72:	81 50       	subi	r24, 0x01	; 1
    2c74:	c8 2e       	mov	r12, r24
    2c76:	d1 2c       	mov	r13, r1
    2c78:	8f ef       	ldi	r24, 0xFF	; 255
    2c7a:	c8 1a       	sub	r12, r24
    2c7c:	d8 0a       	sbc	r13, r24
    2c7e:	c0 0e       	add	r12, r16
    2c80:	d1 1e       	adc	r13, r17
    2c82:	f1 2c       	mov	r15, r1
    2c84:	f8 01       	movw	r30, r16
    2c86:	61 91       	ld	r22, Z+
    2c88:	8f 01       	movw	r16, r30
    2c8a:	20 e2       	ldi	r18, 0x20	; 32
    2c8c:	4f 2d       	mov	r20, r15
    2c8e:	84 e4       	ldi	r24, 0x44	; 68
    2c90:	9c e0       	ldi	r25, 0x0C	; 12
    2c92:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2c96:	f6 e0       	ldi	r31, 0x06	; 6
    2c98:	ff 0e       	add	r15, r31
    2c9a:	0c 15       	cp	r16, r12
    2c9c:	1d 05       	cpc	r17, r13
    2c9e:	91 f7       	brne	.-28     	; 0x2c84 <_Z11Wanderseitev+0x278>
	buffersize=sprintf(buffer,"%u",Accelerometer.Schrittzaehler);
    2ca0:	e7 e4       	ldi	r30, 0x47	; 71
    2ca2:	fb e0       	ldi	r31, 0x0B	; 11
    2ca4:	81 89       	ldd	r24, Z+17	; 0x11
    2ca6:	8f 93       	push	r24
    2ca8:	80 89       	ldd	r24, Z+16	; 0x10
    2caa:	8f 93       	push	r24
    2cac:	88 ed       	ldi	r24, 0xD8	; 216
    2cae:	92 e0       	ldi	r25, 0x02	; 2
    2cb0:	9f 93       	push	r25
    2cb2:	8f 93       	push	r24
    2cb4:	ce 01       	movw	r24, r28
    2cb6:	01 96       	adiw	r24, 0x01	; 1
    2cb8:	9f 93       	push	r25
    2cba:	8f 93       	push	r24
    2cbc:	0e 94 3e 39 	call	0x727c	; 0x727c <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,5*charhighte);}
    2cc0:	0f 90       	pop	r0
    2cc2:	0f 90       	pop	r0
    2cc4:	0f 90       	pop	r0
    2cc6:	0f 90       	pop	r0
    2cc8:	0f 90       	pop	r0
    2cca:	0f 90       	pop	r0
    2ccc:	88 23       	and	r24, r24
    2cce:	d1 f0       	breq	.+52     	; 0x2d04 <_Z11Wanderseitev+0x2f8>
    2cd0:	8e 01       	movw	r16, r28
    2cd2:	0f 5f       	subi	r16, 0xFF	; 255
    2cd4:	1f 4f       	sbci	r17, 0xFF	; 255
    2cd6:	81 50       	subi	r24, 0x01	; 1
    2cd8:	c8 2e       	mov	r12, r24
    2cda:	d1 2c       	mov	r13, r1
    2cdc:	8f ef       	ldi	r24, 0xFF	; 255
    2cde:	c8 1a       	sub	r12, r24
    2ce0:	d8 0a       	sbc	r13, r24
    2ce2:	c0 0e       	add	r12, r16
    2ce4:	d1 1e       	adc	r13, r17
    2ce6:	f1 2c       	mov	r15, r1
    2ce8:	f8 01       	movw	r30, r16
    2cea:	61 91       	ld	r22, Z+
    2cec:	8f 01       	movw	r16, r30
    2cee:	28 e2       	ldi	r18, 0x28	; 40
    2cf0:	4f 2d       	mov	r20, r15
    2cf2:	84 e4       	ldi	r24, 0x44	; 68
    2cf4:	9c e0       	ldi	r25, 0x0C	; 12
    2cf6:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2cfa:	f6 e0       	ldi	r31, 0x06	; 6
    2cfc:	ff 0e       	add	r15, r31
    2cfe:	0c 15       	cp	r16, r12
    2d00:	1d 05       	cpc	r17, r13
    2d02:	91 f7       	brne	.-28     	; 0x2ce8 <_Z11Wanderseitev+0x2dc>
}
    2d04:	64 96       	adiw	r28, 0x14	; 20
    2d06:	0f b6       	in	r0, 0x3f	; 63
    2d08:	f8 94       	cli
    2d0a:	de bf       	out	0x3e, r29	; 62
    2d0c:	0f be       	out	0x3f, r0	; 63
    2d0e:	cd bf       	out	0x3d, r28	; 61
    2d10:	df 91       	pop	r29
    2d12:	cf 91       	pop	r28
    2d14:	1f 91       	pop	r17
    2d16:	0f 91       	pop	r16
    2d18:	ff 90       	pop	r15
    2d1a:	ef 90       	pop	r14
    2d1c:	df 90       	pop	r13
    2d1e:	cf 90       	pop	r12
    2d20:	bf 90       	pop	r11
    2d22:	af 90       	pop	r10
    2d24:	9f 90       	pop	r9
    2d26:	8f 90       	pop	r8
    2d28:	7f 90       	pop	r7
    2d2a:	08 95       	ret

00002d2c <_Z13uhreinstellenv>:

void uhreinstellen(){
    2d2c:	2f 92       	push	r2
    2d2e:	3f 92       	push	r3
    2d30:	4f 92       	push	r4
    2d32:	5f 92       	push	r5
    2d34:	6f 92       	push	r6
    2d36:	7f 92       	push	r7
    2d38:	8f 92       	push	r8
    2d3a:	9f 92       	push	r9
    2d3c:	af 92       	push	r10
    2d3e:	bf 92       	push	r11
    2d40:	cf 92       	push	r12
    2d42:	df 92       	push	r13
    2d44:	ef 92       	push	r14
    2d46:	ff 92       	push	r15
    2d48:	0f 93       	push	r16
    2d4a:	1f 93       	push	r17
    2d4c:	cf 93       	push	r28
    2d4e:	df 93       	push	r29
    2d50:	cd b7       	in	r28, 0x3d	; 61
    2d52:	de b7       	in	r29, 0x3e	; 62
    2d54:	66 97       	sbiw	r28, 0x16	; 22
    2d56:	0f b6       	in	r0, 0x3f	; 63
    2d58:	f8 94       	cli
    2d5a:	de bf       	out	0x3e, r29	; 62
    2d5c:	0f be       	out	0x3f, r0	; 63
    2d5e:	cd bf       	out	0x3d, r28	; 61
	rtc.RTCstop();
    2d60:	85 e4       	ldi	r24, 0x45	; 69
    2d62:	90 e1       	ldi	r25, 0x10	; 16
    2d64:	0e 94 66 30 	call	0x60cc	; 0x60cc <_ZN3RTC7RTCstopEv>
	
	oled.clearFrame();
    2d68:	84 e4       	ldi	r24, 0x44	; 68
    2d6a:	9c e0       	ldi	r25, 0x0C	; 12
    2d6c:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
    2d70:	91 2c       	mov	r9, r1
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2d72:	0f 2e       	mov	r0, r31
    2d74:	ff e0       	ldi	r31, 0x0F	; 15
    2d76:	7f 2e       	mov	r7, r31
    2d78:	f0 2d       	mov	r31, r0
    2d7a:	ce 01       	movw	r24, r28
    2d7c:	01 96       	adiw	r24, 0x01	; 1
    2d7e:	2c 01       	movw	r4, r24
    2d80:	f1 2c       	mov	r15, r1
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2d82:	8d 8b       	std	Y+21, r24	; 0x15
    2d84:	5e 8a       	std	Y+22, r5	; 0x16
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2d86:	0f 2e       	mov	r0, r31
    2d88:	f5 e4       	ldi	r31, 0x45	; 69
    2d8a:	cf 2e       	mov	r12, r31
    2d8c:	f0 e1       	ldi	r31, 0x10	; 16
    2d8e:	df 2e       	mov	r13, r31
    2d90:	f0 2d       	mov	r31, r0
    2d92:	0f 2e       	mov	r0, r31
    2d94:	fd ec       	ldi	r31, 0xCD	; 205
    2d96:	8f 2e       	mov	r8, r31
    2d98:	f0 2d       	mov	r31, r0
		buffer[1]=rtc.Stunden%10;
		buffer[2]=':';
		buffer[3]=rtc.Minuten/10;
		buffer[4]=rtc.Minuten%10;
		buffer[5]=' ';
    2d9a:	68 94       	set
    2d9c:	ee 24       	eor	r14, r14
    2d9e:	e5 f8       	bld	r14, 5
		buffer[6]=rtc.Tag/10;
		buffer[7]=rtc.Tag%10;
		buffer[8]='.';
    2da0:	0f 2e       	mov	r0, r31
    2da2:	fe e2       	ldi	r31, 0x2E	; 46
    2da4:	6f 2e       	mov	r6, r31
    2da6:	f0 2d       	mov	r31, r0
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2da8:	eb ed       	ldi	r30, 0xDB	; 219
    2daa:	f2 e0       	ldi	r31, 0x02	; 2
    2dac:	d2 01       	movw	r26, r4
    2dae:	87 2d       	mov	r24, r7
    2db0:	01 90       	ld	r0, Z+
    2db2:	0d 92       	st	X+, r0
    2db4:	8a 95       	dec	r24
    2db6:	e1 f7       	brne	.-8      	; 0x2db0 <_Z13uhreinstellenv+0x84>
    2db8:	52 01       	movw	r10, r4
    2dba:	12 01       	movw	r2, r4
    2dbc:	1f 2d       	mov	r17, r15
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
    2dbe:	f1 01       	movw	r30, r2
    2dc0:	61 91       	ld	r22, Z+
    2dc2:	1f 01       	movw	r2, r30
    2dc4:	2f 2d       	mov	r18, r15
    2dc6:	41 2f       	mov	r20, r17
    2dc8:	84 e4       	ldi	r24, 0x44	; 68
    2dca:	9c e0       	ldi	r25, 0x0C	; 12
    2dcc:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2dd0:	1a 5f       	subi	r17, 0xFA	; 250
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
    2dd2:	14 35       	cpi	r17, 0x54	; 84
    2dd4:	a1 f7       	brne	.-24     	; 0x2dbe <_Z13uhreinstellenv+0x92>
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2dd6:	ef e0       	ldi	r30, 0x0F	; 15
    2dd8:	f1 e0       	ldi	r31, 0x01	; 1
    2dda:	d2 01       	movw	r26, r4
    2ddc:	87 2d       	mov	r24, r7
    2dde:	01 90       	ld	r0, Z+
    2de0:	0d 92       	st	X+, r0
    2de2:	8a 95       	dec	r24
    2de4:	e1 f7       	brne	.-8      	; 0x2dde <_Z13uhreinstellenv+0xb2>
    2de6:	2d 88       	ldd	r2, Y+21	; 0x15
    2de8:	3e 88       	ldd	r3, Y+22	; 0x16
    2dea:	1f 2d       	mov	r17, r15
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
    2dec:	f1 01       	movw	r30, r2
    2dee:	61 91       	ld	r22, Z+
    2df0:	1f 01       	movw	r2, r30
    2df2:	28 e0       	ldi	r18, 0x08	; 8
    2df4:	41 2f       	mov	r20, r17
    2df6:	84 e4       	ldi	r24, 0x44	; 68
    2df8:	9c e0       	ldi	r25, 0x0C	; 12
    2dfa:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2dfe:	1a 5f       	subi	r17, 0xFA	; 250
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
		for(uint8_t i = 0; i<buffersize;i++){
    2e00:	14 35       	cpi	r17, 0x54	; 84
    2e02:	a1 f7       	brne	.-24     	; 0x2dec <_Z13uhreinstellenv+0xc0>
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2e04:	f6 01       	movw	r30, r12
    2e06:	90 89       	ldd	r25, Z+16	; 0x10
    2e08:	98 9d       	mul	r25, r8
    2e0a:	81 2d       	mov	r24, r1
    2e0c:	11 24       	eor	r1, r1
    2e0e:	86 95       	lsr	r24
    2e10:	86 95       	lsr	r24
    2e12:	86 95       	lsr	r24
    2e14:	89 83       	std	Y+1, r24	; 0x01
		buffer[1]=rtc.Stunden%10;
    2e16:	88 0f       	add	r24, r24
    2e18:	28 2f       	mov	r18, r24
    2e1a:	22 0f       	add	r18, r18
    2e1c:	22 0f       	add	r18, r18
    2e1e:	82 0f       	add	r24, r18
    2e20:	98 1b       	sub	r25, r24
    2e22:	9a 83       	std	Y+2, r25	; 0x02
		buffer[2]=':';
    2e24:	fa e3       	ldi	r31, 0x3A	; 58
    2e26:	fb 83       	std	Y+3, r31	; 0x03
		buffer[3]=rtc.Minuten/10;
    2e28:	f6 01       	movw	r30, r12
    2e2a:	91 89       	ldd	r25, Z+17	; 0x11
    2e2c:	98 9d       	mul	r25, r8
    2e2e:	81 2d       	mov	r24, r1
    2e30:	11 24       	eor	r1, r1
    2e32:	86 95       	lsr	r24
    2e34:	86 95       	lsr	r24
    2e36:	86 95       	lsr	r24
    2e38:	8c 83       	std	Y+4, r24	; 0x04
		buffer[4]=rtc.Minuten%10;
    2e3a:	88 0f       	add	r24, r24
    2e3c:	28 2f       	mov	r18, r24
    2e3e:	22 0f       	add	r18, r18
    2e40:	22 0f       	add	r18, r18
    2e42:	82 0f       	add	r24, r18
    2e44:	98 1b       	sub	r25, r24
    2e46:	9d 83       	std	Y+5, r25	; 0x05
		buffer[5]=' ';
    2e48:	ee 82       	std	Y+6, r14	; 0x06
		buffer[6]=rtc.Tag/10;
    2e4a:	94 89       	ldd	r25, Z+20	; 0x14
    2e4c:	98 9d       	mul	r25, r8
    2e4e:	81 2d       	mov	r24, r1
    2e50:	11 24       	eor	r1, r1
    2e52:	86 95       	lsr	r24
    2e54:	86 95       	lsr	r24
    2e56:	86 95       	lsr	r24
    2e58:	8f 83       	std	Y+7, r24	; 0x07
		buffer[7]=rtc.Tag%10;
    2e5a:	88 0f       	add	r24, r24
    2e5c:	28 2f       	mov	r18, r24
    2e5e:	22 0f       	add	r18, r18
    2e60:	22 0f       	add	r18, r18
    2e62:	82 0f       	add	r24, r18
    2e64:	98 1b       	sub	r25, r24
    2e66:	98 87       	std	Y+8, r25	; 0x08
		buffer[8]='.';
    2e68:	69 86       	std	Y+9, r6	; 0x09
		buffer[9]=rtc.Monat/10;
    2e6a:	96 89       	ldd	r25, Z+22	; 0x16
    2e6c:	98 9d       	mul	r25, r8
    2e6e:	81 2d       	mov	r24, r1
    2e70:	11 24       	eor	r1, r1
    2e72:	86 95       	lsr	r24
    2e74:	86 95       	lsr	r24
    2e76:	86 95       	lsr	r24
    2e78:	8a 87       	std	Y+10, r24	; 0x0a
		buffer[10]=rtc.Monat%10;
    2e7a:	88 0f       	add	r24, r24
    2e7c:	28 2f       	mov	r18, r24
    2e7e:	22 0f       	add	r18, r18
    2e80:	22 0f       	add	r18, r18
    2e82:	82 0f       	add	r24, r18
    2e84:	98 1b       	sub	r25, r24
    2e86:	9b 87       	std	Y+11, r25	; 0x0b
		buffer[11]='.';
    2e88:	6c 86       	std	Y+12, r6	; 0x0c
		buffer[12]=rtc.Jahr/10;
    2e8a:	97 89       	ldd	r25, Z+23	; 0x17
    2e8c:	98 9d       	mul	r25, r8
    2e8e:	81 2d       	mov	r24, r1
    2e90:	11 24       	eor	r1, r1
    2e92:	86 95       	lsr	r24
    2e94:	86 95       	lsr	r24
    2e96:	86 95       	lsr	r24
    2e98:	8d 87       	std	Y+13, r24	; 0x0d
		buffer[13]=rtc.Jahr%10;
    2e9a:	88 0f       	add	r24, r24
    2e9c:	28 2f       	mov	r18, r24
    2e9e:	22 0f       	add	r18, r18
    2ea0:	22 0f       	add	r18, r18
    2ea2:	82 0f       	add	r24, r18
    2ea4:	98 1b       	sub	r25, r24
    2ea6:	9e 87       	std	Y+14, r25	; 0x0e
    2ea8:	0d 89       	ldd	r16, Y+21	; 0x15
    2eaa:	1e 89       	ldd	r17, Y+22	; 0x16
    2eac:	2f 2c       	mov	r2, r15
    2eae:	33 24       	eor	r3, r3
    2eb0:	33 94       	inc	r3
    2eb2:	05 c0       	rjmp	.+10     	; 0x2ebe <_Z13uhreinstellenv+0x192>
    2eb4:	33 94       	inc	r3
    2eb6:	0f 5f       	subi	r16, 0xFF	; 255
    2eb8:	1f 4f       	sbci	r17, 0xFF	; 255
    2eba:	f0 e1       	ldi	r31, 0x10	; 16
    2ebc:	2f 0e       	add	r2, r31
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
			if(i!=2){
    2ebe:	83 e0       	ldi	r24, 0x03	; 3
    2ec0:	38 16       	cp	r3, r24
    2ec2:	61 f0       	breq	.+24     	; 0x2edc <_Z13uhreinstellenv+0x1b0>
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
    2ec4:	20 e1       	ldi	r18, 0x10	; 16
    2ec6:	42 2d       	mov	r20, r2
    2ec8:	f8 01       	movw	r30, r16
    2eca:	60 81       	ld	r22, Z
    2ecc:	84 e4       	ldi	r24, 0x44	; 68
    2ece:	9c e0       	ldi	r25, 0x0C	; 12
    2ed0:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    2ed4:	f4 e0       	ldi	r31, 0x04	; 4
    2ed6:	f3 15       	cp	r31, r3
    2ed8:	68 f7       	brcc	.-38     	; 0x2eb4 <_Z13uhreinstellenv+0x188>
    2eda:	08 c0       	rjmp	.+16     	; 0x2eec <_Z13uhreinstellenv+0x1c0>
			if(i!=2){
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
    2edc:	24 e1       	ldi	r18, 0x14	; 20
    2ede:	48 e2       	ldi	r20, 0x28	; 40
    2ee0:	6b 81       	ldd	r22, Y+3	; 0x03
    2ee2:	84 e4       	ldi	r24, 0x44	; 68
    2ee4:	9c e0       	ldi	r25, 0x0C	; 12
    2ee6:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2eea:	e4 cf       	rjmp	.-56     	; 0x2eb4 <_Z13uhreinstellenv+0x188>
    2eec:	8e 01       	movw	r16, r28
    2eee:	09 5f       	subi	r16, 0xF9	; 249
    2ef0:	1f 4f       	sbci	r17, 0xFF	; 255
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    2ef2:	2f 2c       	mov	r2, r15
    2ef4:	0f 2e       	mov	r0, r31
    2ef6:	f6 e0       	ldi	r31, 0x06	; 6
    2ef8:	3f 2e       	mov	r3, r31
    2efa:	f0 2d       	mov	r31, r0
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
			if(i!=8 && i!=11){
    2efc:	88 e0       	ldi	r24, 0x08	; 8
    2efe:	38 16       	cp	r3, r24
    2f00:	61 f0       	breq	.+24     	; 0x2f1a <_Z13uhreinstellenv+0x1ee>
    2f02:	9b e0       	ldi	r25, 0x0B	; 11
    2f04:	39 16       	cp	r3, r25
    2f06:	49 f0       	breq	.+18     	; 0x2f1a <_Z13uhreinstellenv+0x1ee>
				oled.draw_number16x16(buffer[i],i*numbersmalsize-6*numbersmalsize,4*charhighte);
    2f08:	2e 2d       	mov	r18, r14
    2f0a:	42 2d       	mov	r20, r2
    2f0c:	f8 01       	movw	r30, r16
    2f0e:	60 81       	ld	r22, Z
    2f10:	84 e4       	ldi	r24, 0x44	; 68
    2f12:	9c e0       	ldi	r25, 0x0C	; 12
    2f14:	0e 94 6f 06 	call	0xcde	; 0xcde <_ZN7Display16draw_number16x16Ehhh>
    2f18:	09 c0       	rjmp	.+18     	; 0x2f2c <_Z13uhreinstellenv+0x200>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
    2f1a:	28 e2       	ldi	r18, 0x28	; 40
    2f1c:	48 e0       	ldi	r20, 0x08	; 8
    2f1e:	42 0d       	add	r20, r2
    2f20:	f8 01       	movw	r30, r16
    2f22:	60 81       	ld	r22, Z
    2f24:	84 e4       	ldi	r24, 0x44	; 68
    2f26:	9c e0       	ldi	r25, 0x0C	; 12
    2f28:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
    2f2c:	33 94       	inc	r3
    2f2e:	0f 5f       	subi	r16, 0xFF	; 255
    2f30:	1f 4f       	sbci	r17, 0xFF	; 255
    2f32:	f0 e1       	ldi	r31, 0x10	; 16
    2f34:	2f 0e       	add	r2, r31
    2f36:	8e e0       	ldi	r24, 0x0E	; 14
    2f38:	38 12       	cpse	r3, r24
    2f3a:	e0 cf       	rjmp	.-64     	; 0x2efc <_Z13uhreinstellenv+0x1d0>
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
			}
		}

		oled.sendFrame();
    2f3c:	84 e4       	ldi	r24, 0x44	; 68
    2f3e:	9c e0       	ldi	r25, 0x0C	; 12
    2f40:	0e 94 59 03 	call	0x6b2	; 0x6b2 <_ZN7Display9sendFrameEv>
		oled.clearFrame();
    2f44:	84 e4       	ldi	r24, 0x44	; 68
    2f46:	9c e0       	ldi	r25, 0x0C	; 12
    2f48:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
		switch (pos) {
    2f4c:	89 2d       	mov	r24, r9
    2f4e:	90 e0       	ldi	r25, 0x00	; 0
    2f50:	8a 30       	cpi	r24, 0x0A	; 10
    2f52:	91 05       	cpc	r25, r1
    2f54:	08 f0       	brcs	.+2      	; 0x2f58 <_Z13uhreinstellenv+0x22c>
    2f56:	2c c2       	rjmp	.+1112   	; 0x33b0 <_Z13uhreinstellenv+0x684>
    2f58:	fc 01       	movw	r30, r24
    2f5a:	ea 5b       	subi	r30, 0xBA	; 186
    2f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f5e:	0c 94 f4 37 	jmp	0x6fe8	; 0x6fe8 <__tablejump2__>
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    2f62:	88 e3       	ldi	r24, 0x38	; 56
    2f64:	9c e0       	ldi	r25, 0x0C	; 12
    2f66:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <_ZN9Interface17ZahlenausTastaturEv>
    2f6a:	88 0f       	add	r24, r24
    2f6c:	98 2f       	mov	r25, r24
    2f6e:	99 0f       	add	r25, r25
    2f70:	99 0f       	add	r25, r25
    2f72:	89 0f       	add	r24, r25
				if(rtc.Stunden>=24){
    2f74:	88 31       	cpi	r24, 0x18	; 24
    2f76:	08 f4       	brcc	.+2      	; 0x2f7a <_Z13uhreinstellenv+0x24e>
    2f78:	5a c2       	rjmp	.+1204   	; 0x342e <_Z13uhreinstellenv+0x702>
					rtc.Stunden=0;
    2f7a:	f6 01       	movw	r30, r12
    2f7c:	10 8a       	std	Z+16, r1	; 0x10
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    2f7e:	ea ee       	ldi	r30, 0xEA	; 234
    2f80:	f2 e0       	ldi	r31, 0x02	; 2
    2f82:	d2 01       	movw	r26, r4
    2f84:	87 2d       	mov	r24, r7
    2f86:	01 90       	ld	r0, Z+
    2f88:	0d 92       	st	X+, r0
    2f8a:	8a 95       	dec	r24
    2f8c:	e1 f7       	brne	.-8      	; 0x2f86 <_Z13uhreinstellenv+0x25a>
    2f8e:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    2f90:	f5 01       	movw	r30, r10
    2f92:	61 91       	ld	r22, Z+
    2f94:	5f 01       	movw	r10, r30
    2f96:	28 e3       	ldi	r18, 0x38	; 56
    2f98:	41 2f       	mov	r20, r17
    2f9a:	84 e4       	ldi	r24, 0x44	; 68
    2f9c:	9c e0       	ldi	r25, 0x0C	; 12
    2f9e:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2fa2:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    2fa4:	14 35       	cpi	r17, 0x54	; 84
    2fa6:	a1 f7       	brne	.-24     	; 0x2f90 <_Z13uhreinstellenv+0x264>
		switch (pos) {
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    2fa8:	99 24       	eor	r9, r9
    2faa:	9a 94       	dec	r9
    2fac:	42 c2       	rjmp	.+1156   	; 0x3432 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    2fae:	88 e3       	ldi	r24, 0x38	; 56
    2fb0:	9c e0       	ldi	r25, 0x0C	; 12
    2fb2:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <_ZN9Interface17ZahlenausTastaturEv>
    2fb6:	f6 01       	movw	r30, r12
    2fb8:	20 89       	ldd	r18, Z+16	; 0x10
    2fba:	90 e0       	ldi	r25, 0x00	; 0
    2fbc:	82 0f       	add	r24, r18
    2fbe:	91 1d       	adc	r25, r1
				if(rtc.Stunden>=24){
    2fc0:	88 31       	cpi	r24, 0x18	; 24
    2fc2:	10 f4       	brcc	.+4      	; 0x2fc8 <_Z13uhreinstellenv+0x29c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    2fc4:	80 8b       	std	Z+16, r24	; 0x10
    2fc6:	35 c2       	rjmp	.+1130   	; 0x3432 <_Z13uhreinstellenv+0x706>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
    2fc8:	f6 01       	movw	r30, r12
    2fca:	10 8a       	std	Z+16, r1	; 0x10
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    2fcc:	ea ee       	ldi	r30, 0xEA	; 234
    2fce:	f2 e0       	ldi	r31, 0x02	; 2
    2fd0:	d2 01       	movw	r26, r4
    2fd2:	87 2d       	mov	r24, r7
    2fd4:	01 90       	ld	r0, Z+
    2fd6:	0d 92       	st	X+, r0
    2fd8:	8a 95       	dec	r24
    2fda:	e1 f7       	brne	.-8      	; 0x2fd4 <_Z13uhreinstellenv+0x2a8>
    2fdc:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    2fde:	f5 01       	movw	r30, r10
    2fe0:	61 91       	ld	r22, Z+
    2fe2:	5f 01       	movw	r10, r30
    2fe4:	28 e3       	ldi	r18, 0x38	; 56
    2fe6:	41 2f       	mov	r20, r17
    2fe8:	84 e4       	ldi	r24, 0x44	; 68
    2fea:	9c e0       	ldi	r25, 0x0C	; 12
    2fec:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    2ff0:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    2ff2:	14 35       	cpi	r17, 0x54	; 84
    2ff4:	a1 f7       	brne	.-24     	; 0x2fde <_Z13uhreinstellenv+0x2b2>
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    2ff6:	99 24       	eor	r9, r9
    2ff8:	9a 94       	dec	r9
    2ffa:	1b c2       	rjmp	.+1078   	; 0x3432 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    2ffc:	88 e3       	ldi	r24, 0x38	; 56
    2ffe:	9c e0       	ldi	r25, 0x0C	; 12
    3000:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <_ZN9Interface17ZahlenausTastaturEv>
    3004:	88 0f       	add	r24, r24
    3006:	98 2f       	mov	r25, r24
    3008:	99 0f       	add	r25, r25
    300a:	99 0f       	add	r25, r25
    300c:	89 0f       	add	r24, r25
				if(rtc.Minuten>=60){
    300e:	8c 33       	cpi	r24, 0x3C	; 60
    3010:	18 f4       	brcc	.+6      	; 0x3018 <_Z13uhreinstellenv+0x2ec>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    3012:	f6 01       	movw	r30, r12
    3014:	81 8b       	std	Z+17, r24	; 0x11
    3016:	0d c2       	rjmp	.+1050   	; 0x3432 <_Z13uhreinstellenv+0x706>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    3018:	f6 01       	movw	r30, r12
    301a:	11 8a       	std	Z+17, r1	; 0x11
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    301c:	e9 ef       	ldi	r30, 0xF9	; 249
    301e:	f2 e0       	ldi	r31, 0x02	; 2
    3020:	d2 01       	movw	r26, r4
    3022:	87 2d       	mov	r24, r7
    3024:	01 90       	ld	r0, Z+
    3026:	0d 92       	st	X+, r0
    3028:	8a 95       	dec	r24
    302a:	e1 f7       	brne	.-8      	; 0x3024 <_Z13uhreinstellenv+0x2f8>
    302c:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    302e:	f5 01       	movw	r30, r10
    3030:	61 91       	ld	r22, Z+
    3032:	5f 01       	movw	r10, r30
    3034:	28 e3       	ldi	r18, 0x38	; 56
    3036:	41 2f       	mov	r20, r17
    3038:	84 e4       	ldi	r24, 0x44	; 68
    303a:	9c e0       	ldi	r25, 0x0C	; 12
    303c:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    3040:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3042:	14 35       	cpi	r17, 0x54	; 84
    3044:	a1 f7       	brne	.-24     	; 0x302e <_Z13uhreinstellenv+0x302>
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    3046:	99 24       	eor	r9, r9
    3048:	93 94       	inc	r9
    304a:	f3 c1       	rjmp	.+998    	; 0x3432 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    304c:	88 e3       	ldi	r24, 0x38	; 56
    304e:	9c e0       	ldi	r25, 0x0C	; 12
    3050:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <_ZN9Interface17ZahlenausTastaturEv>
    3054:	f6 01       	movw	r30, r12
    3056:	21 89       	ldd	r18, Z+17	; 0x11
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	82 0f       	add	r24, r18
    305c:	91 1d       	adc	r25, r1
				if(rtc.Minuten>=60){
    305e:	8c 33       	cpi	r24, 0x3C	; 60
    3060:	10 f4       	brcc	.+4      	; 0x3066 <_Z13uhreinstellenv+0x33a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    3062:	81 8b       	std	Z+17, r24	; 0x11
    3064:	e6 c1       	rjmp	.+972    	; 0x3432 <_Z13uhreinstellenv+0x706>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    3066:	f6 01       	movw	r30, r12
    3068:	11 8a       	std	Z+17, r1	; 0x11
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    306a:	e9 ef       	ldi	r30, 0xF9	; 249
    306c:	f2 e0       	ldi	r31, 0x02	; 2
    306e:	d2 01       	movw	r26, r4
    3070:	87 2d       	mov	r24, r7
    3072:	01 90       	ld	r0, Z+
    3074:	0d 92       	st	X+, r0
    3076:	8a 95       	dec	r24
    3078:	e1 f7       	brne	.-8      	; 0x3072 <_Z13uhreinstellenv+0x346>
    307a:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    307c:	f5 01       	movw	r30, r10
    307e:	61 91       	ld	r22, Z+
    3080:	5f 01       	movw	r10, r30
    3082:	28 e3       	ldi	r18, 0x38	; 56
    3084:	41 2f       	mov	r20, r17
    3086:	84 e4       	ldi	r24, 0x44	; 68
    3088:	9c e0       	ldi	r25, 0x0C	; 12
    308a:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    308e:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3090:	14 35       	cpi	r17, 0x54	; 84
    3092:	a1 f7       	brne	.-24     	; 0x307c <_Z13uhreinstellenv+0x350>
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    3094:	99 24       	eor	r9, r9
    3096:	93 94       	inc	r9
    3098:	cc c1       	rjmp	.+920    	; 0x3432 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    309a:	88 e3       	ldi	r24, 0x38	; 56
    309c:	9c e0       	ldi	r25, 0x0C	; 12
    309e:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <_ZN9Interface17ZahlenausTastaturEv>
    30a2:	88 0f       	add	r24, r24
    30a4:	98 2f       	mov	r25, r24
    30a6:	99 0f       	add	r25, r25
    30a8:	99 0f       	add	r25, r25
    30aa:	89 0f       	add	r24, r25
				if(rtc.Tag>=32){
    30ac:	80 32       	cpi	r24, 0x20	; 32
    30ae:	18 f4       	brcc	.+6      	; 0x30b6 <_Z13uhreinstellenv+0x38a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    30b0:	f6 01       	movw	r30, r12
    30b2:	84 8b       	std	Z+20, r24	; 0x14
    30b4:	be c1       	rjmp	.+892    	; 0x3432 <_Z13uhreinstellenv+0x706>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    30b6:	f6 01       	movw	r30, r12
    30b8:	14 8a       	std	Z+20, r1	; 0x14
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    30ba:	8b e0       	ldi	r24, 0x0B	; 11
    30bc:	e8 e0       	ldi	r30, 0x08	; 8
    30be:	f3 e0       	ldi	r31, 0x03	; 3
    30c0:	d2 01       	movw	r26, r4
    30c2:	01 90       	ld	r0, Z+
    30c4:	0d 92       	st	X+, r0
    30c6:	8a 95       	dec	r24
    30c8:	e1 f7       	brne	.-8      	; 0x30c2 <_Z13uhreinstellenv+0x396>
    30ca:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    30cc:	f5 01       	movw	r30, r10
    30ce:	61 91       	ld	r22, Z+
    30d0:	5f 01       	movw	r10, r30
    30d2:	28 e3       	ldi	r18, 0x38	; 56
    30d4:	41 2f       	mov	r20, r17
    30d6:	84 e4       	ldi	r24, 0x44	; 68
    30d8:	9c e0       	ldi	r25, 0x0C	; 12
    30da:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    30de:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    30e0:	1c 33       	cpi	r17, 0x3C	; 60
    30e2:	a1 f7       	brne	.-24     	; 0x30cc <_Z13uhreinstellenv+0x3a0>
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    30e4:	0f 2e       	mov	r0, r31
    30e6:	f3 e0       	ldi	r31, 0x03	; 3
    30e8:	9f 2e       	mov	r9, r31
    30ea:	f0 2d       	mov	r31, r0
    30ec:	a2 c1       	rjmp	.+836    	; 0x3432 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    30ee:	88 e3       	ldi	r24, 0x38	; 56
    30f0:	9c e0       	ldi	r25, 0x0C	; 12
    30f2:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <_ZN9Interface17ZahlenausTastaturEv>
    30f6:	f6 01       	movw	r30, r12
    30f8:	24 89       	ldd	r18, Z+20	; 0x14
    30fa:	90 e0       	ldi	r25, 0x00	; 0
    30fc:	82 0f       	add	r24, r18
    30fe:	91 1d       	adc	r25, r1
				if(rtc.Tag>=32){
    3100:	80 32       	cpi	r24, 0x20	; 32
    3102:	10 f4       	brcc	.+4      	; 0x3108 <_Z13uhreinstellenv+0x3dc>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    3104:	84 8b       	std	Z+20, r24	; 0x14
    3106:	95 c1       	rjmp	.+810    	; 0x3432 <_Z13uhreinstellenv+0x706>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    3108:	f6 01       	movw	r30, r12
    310a:	14 8a       	std	Z+20, r1	; 0x14
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    310c:	8b e0       	ldi	r24, 0x0B	; 11
    310e:	e8 e0       	ldi	r30, 0x08	; 8
    3110:	f3 e0       	ldi	r31, 0x03	; 3
    3112:	d2 01       	movw	r26, r4
    3114:	01 90       	ld	r0, Z+
    3116:	0d 92       	st	X+, r0
    3118:	8a 95       	dec	r24
    311a:	e1 f7       	brne	.-8      	; 0x3114 <_Z13uhreinstellenv+0x3e8>
    311c:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    311e:	f5 01       	movw	r30, r10
    3120:	61 91       	ld	r22, Z+
    3122:	5f 01       	movw	r10, r30
    3124:	28 e3       	ldi	r18, 0x38	; 56
    3126:	41 2f       	mov	r20, r17
    3128:	84 e4       	ldi	r24, 0x44	; 68
    312a:	9c e0       	ldi	r25, 0x0C	; 12
    312c:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    3130:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3132:	1c 33       	cpi	r17, 0x3C	; 60
    3134:	a1 f7       	brne	.-24     	; 0x311e <_Z13uhreinstellenv+0x3f2>
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    3136:	0f 2e       	mov	r0, r31
    3138:	f3 e0       	ldi	r31, 0x03	; 3
    313a:	9f 2e       	mov	r9, r31
    313c:	f0 2d       	mov	r31, r0
    313e:	79 c1       	rjmp	.+754    	; 0x3432 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    3140:	88 e3       	ldi	r24, 0x38	; 56
    3142:	9c e0       	ldi	r25, 0x0C	; 12
    3144:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <_ZN9Interface17ZahlenausTastaturEv>
    3148:	88 0f       	add	r24, r24
    314a:	98 2f       	mov	r25, r24
    314c:	99 0f       	add	r25, r25
    314e:	99 0f       	add	r25, r25
    3150:	89 0f       	add	r24, r25
				if(rtc.Monat>=13){
    3152:	8d 30       	cpi	r24, 0x0D	; 13
    3154:	18 f4       	brcc	.+6      	; 0x315c <_Z13uhreinstellenv+0x430>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    3156:	f6 01       	movw	r30, r12
    3158:	86 8b       	std	Z+22, r24	; 0x16
    315a:	6b c1       	rjmp	.+726    	; 0x3432 <_Z13uhreinstellenv+0x706>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    315c:	f6 01       	movw	r30, r12
    315e:	16 8a       	std	Z+22, r1	; 0x16
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    3160:	8d e0       	ldi	r24, 0x0D	; 13
    3162:	e3 e1       	ldi	r30, 0x13	; 19
    3164:	f3 e0       	ldi	r31, 0x03	; 3
    3166:	d2 01       	movw	r26, r4
    3168:	01 90       	ld	r0, Z+
    316a:	0d 92       	st	X+, r0
    316c:	8a 95       	dec	r24
    316e:	e1 f7       	brne	.-8      	; 0x3168 <_Z13uhreinstellenv+0x43c>
    3170:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3172:	f5 01       	movw	r30, r10
    3174:	61 91       	ld	r22, Z+
    3176:	5f 01       	movw	r10, r30
    3178:	28 e3       	ldi	r18, 0x38	; 56
    317a:	41 2f       	mov	r20, r17
    317c:	84 e4       	ldi	r24, 0x44	; 68
    317e:	9c e0       	ldi	r25, 0x0C	; 12
    3180:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    3184:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3186:	18 34       	cpi	r17, 0x48	; 72
    3188:	a1 f7       	brne	.-24     	; 0x3172 <_Z13uhreinstellenv+0x446>
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    318a:	0f 2e       	mov	r0, r31
    318c:	f5 e0       	ldi	r31, 0x05	; 5
    318e:	9f 2e       	mov	r9, r31
    3190:	f0 2d       	mov	r31, r0
    3192:	4f c1       	rjmp	.+670    	; 0x3432 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    3194:	88 e3       	ldi	r24, 0x38	; 56
    3196:	9c e0       	ldi	r25, 0x0C	; 12
    3198:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <_ZN9Interface17ZahlenausTastaturEv>
    319c:	f6 01       	movw	r30, r12
    319e:	26 89       	ldd	r18, Z+22	; 0x16
    31a0:	90 e0       	ldi	r25, 0x00	; 0
    31a2:	82 0f       	add	r24, r18
    31a4:	91 1d       	adc	r25, r1
				if(rtc.Monat>=13){
    31a6:	8d 30       	cpi	r24, 0x0D	; 13
    31a8:	10 f4       	brcc	.+4      	; 0x31ae <_Z13uhreinstellenv+0x482>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    31aa:	86 8b       	std	Z+22, r24	; 0x16
    31ac:	1d c0       	rjmp	.+58     	; 0x31e8 <_Z13uhreinstellenv+0x4bc>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    31ae:	f6 01       	movw	r30, r12
    31b0:	16 8a       	std	Z+22, r1	; 0x16
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    31b2:	8d e0       	ldi	r24, 0x0D	; 13
    31b4:	e3 e1       	ldi	r30, 0x13	; 19
    31b6:	f3 e0       	ldi	r31, 0x03	; 3
    31b8:	d2 01       	movw	r26, r4
    31ba:	01 90       	ld	r0, Z+
    31bc:	0d 92       	st	X+, r0
    31be:	8a 95       	dec	r24
    31c0:	e1 f7       	brne	.-8      	; 0x31ba <_Z13uhreinstellenv+0x48e>
    31c2:	2d 88       	ldd	r2, Y+21	; 0x15
    31c4:	3e 88       	ldd	r3, Y+22	; 0x16
    31c6:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    31c8:	f1 01       	movw	r30, r2
    31ca:	61 91       	ld	r22, Z+
    31cc:	1f 01       	movw	r2, r30
    31ce:	28 e3       	ldi	r18, 0x38	; 56
    31d0:	41 2f       	mov	r20, r17
    31d2:	84 e4       	ldi	r24, 0x44	; 68
    31d4:	9c e0       	ldi	r25, 0x0C	; 12
    31d6:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    31da:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    31dc:	18 34       	cpi	r17, 0x48	; 72
    31de:	a1 f7       	brne	.-24     	; 0x31c8 <_Z13uhreinstellenv+0x49c>
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    31e0:	0f 2e       	mov	r0, r31
    31e2:	f5 e0       	ldi	r31, 0x05	; 5
    31e4:	9f 2e       	mov	r9, r31
    31e6:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
    31e8:	f6 01       	movw	r30, r12
    31ea:	96 89       	ldd	r25, Z+22	; 0x16
    31ec:	89 2f       	mov	r24, r25
    31ee:	8d 7f       	andi	r24, 0xFD	; 253
    31f0:	84 30       	cpi	r24, 0x04	; 4
    31f2:	11 f0       	breq	.+4      	; 0x31f8 <_Z13uhreinstellenv+0x4cc>
    31f4:	89 30       	cpi	r24, 0x09	; 9
    31f6:	09 f5       	brne	.+66     	; 0x323a <_Z13uhreinstellenv+0x50e>
					if(rtc.Tag>=31){
    31f8:	f6 01       	movw	r30, r12
    31fa:	84 89       	ldd	r24, Z+20	; 0x14
    31fc:	8f 31       	cpi	r24, 0x1F	; 31
    31fe:	08 f4       	brcc	.+2      	; 0x3202 <_Z13uhreinstellenv+0x4d6>
    3200:	d8 c0       	rjmp	.+432    	; 0x33b2 <_Z13uhreinstellenv+0x686>
						rtc.Tag=0;
    3202:	14 8a       	std	Z+20, r1	; 0x14
						rtc.Monat=0;
    3204:	16 8a       	std	Z+22, r1	; 0x16
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    3206:	8b e0       	ldi	r24, 0x0B	; 11
    3208:	e8 e0       	ldi	r30, 0x08	; 8
    320a:	f3 e0       	ldi	r31, 0x03	; 3
    320c:	d2 01       	movw	r26, r4
    320e:	01 90       	ld	r0, Z+
    3210:	0d 92       	st	X+, r0
    3212:	8a 95       	dec	r24
    3214:	e1 f7       	brne	.-8      	; 0x320e <_Z13uhreinstellenv+0x4e2>
    3216:	1f 2d       	mov	r17, r15
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3218:	f5 01       	movw	r30, r10
    321a:	61 91       	ld	r22, Z+
    321c:	5f 01       	movw	r10, r30
    321e:	28 e3       	ldi	r18, 0x38	; 56
    3220:	41 2f       	mov	r20, r17
    3222:	84 e4       	ldi	r24, 0x44	; 68
    3224:	9c e0       	ldi	r25, 0x0C	; 12
    3226:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    322a:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    322c:	1c 33       	cpi	r17, 0x3C	; 60
    322e:	a1 f7       	brne	.-24     	; 0x3218 <_Z13uhreinstellenv+0x4ec>
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    3230:	0f 2e       	mov	r0, r31
    3232:	f3 e0       	ldi	r31, 0x03	; 3
    3234:	9f 2e       	mov	r9, r31
    3236:	f0 2d       	mov	r31, r0
    3238:	fc c0       	rjmp	.+504    	; 0x3432 <_Z13uhreinstellenv+0x706>
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
						}
					}
				}
				else if(rtc.Monat==2){
    323a:	92 30       	cpi	r25, 0x02	; 2
    323c:	09 f0       	breq	.+2      	; 0x3240 <_Z13uhreinstellenv+0x514>
    323e:	b9 c0       	rjmp	.+370    	; 0x33b2 <_Z13uhreinstellenv+0x686>
					if(rtc.Tag>=30){
    3240:	f6 01       	movw	r30, r12
    3242:	84 89       	ldd	r24, Z+20	; 0x14
    3244:	8e 31       	cpi	r24, 0x1E	; 30
    3246:	08 f4       	brcc	.+2      	; 0x324a <_Z13uhreinstellenv+0x51e>
    3248:	b4 c0       	rjmp	.+360    	; 0x33b2 <_Z13uhreinstellenv+0x686>
						rtc.Tag=0;
    324a:	14 8a       	std	Z+20, r1	; 0x14
						rtc.Monat=0;
    324c:	16 8a       	std	Z+22, r1	; 0x16
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    324e:	8b e0       	ldi	r24, 0x0B	; 11
    3250:	e8 e0       	ldi	r30, 0x08	; 8
    3252:	f3 e0       	ldi	r31, 0x03	; 3
    3254:	d2 01       	movw	r26, r4
    3256:	01 90       	ld	r0, Z+
    3258:	0d 92       	st	X+, r0
    325a:	8a 95       	dec	r24
    325c:	e1 f7       	brne	.-8      	; 0x3256 <_Z13uhreinstellenv+0x52a>
    325e:	1f 2d       	mov	r17, r15
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3260:	f5 01       	movw	r30, r10
    3262:	61 91       	ld	r22, Z+
    3264:	5f 01       	movw	r10, r30
    3266:	28 e3       	ldi	r18, 0x38	; 56
    3268:	41 2f       	mov	r20, r17
    326a:	84 e4       	ldi	r24, 0x44	; 68
    326c:	9c e0       	ldi	r25, 0x0C	; 12
    326e:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    3272:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    3274:	1c 33       	cpi	r17, 0x3C	; 60
    3276:	a1 f7       	brne	.-24     	; 0x3260 <_Z13uhreinstellenv+0x534>
				}
				else if(rtc.Monat==2){
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    3278:	0f 2e       	mov	r0, r31
    327a:	f3 e0       	ldi	r31, 0x03	; 3
    327c:	9f 2e       	mov	r9, r31
    327e:	f0 2d       	mov	r31, r0
    3280:	d8 c0       	rjmp	.+432    	; 0x3432 <_Z13uhreinstellenv+0x706>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    3282:	88 e3       	ldi	r24, 0x38	; 56
    3284:	9c e0       	ldi	r25, 0x0C	; 12
    3286:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <_ZN9Interface17ZahlenausTastaturEv>
    328a:	88 0f       	add	r24, r24
    328c:	98 2f       	mov	r25, r24
    328e:	99 0f       	add	r25, r25
    3290:	99 0f       	add	r25, r25
    3292:	89 0f       	add	r24, r25
				if(rtc.Jahr>=50){
    3294:	82 33       	cpi	r24, 0x32	; 50
    3296:	18 f4       	brcc	.+6      	; 0x329e <_Z13uhreinstellenv+0x572>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    3298:	f6 01       	movw	r30, r12
    329a:	87 8b       	std	Z+23, r24	; 0x17
    329c:	ca c0       	rjmp	.+404    	; 0x3432 <_Z13uhreinstellenv+0x706>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    329e:	f6 01       	movw	r30, r12
    32a0:	17 8a       	std	Z+23, r1	; 0x17
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    32a2:	8c e0       	ldi	r24, 0x0C	; 12
    32a4:	e0 e2       	ldi	r30, 0x20	; 32
    32a6:	f3 e0       	ldi	r31, 0x03	; 3
    32a8:	d2 01       	movw	r26, r4
    32aa:	01 90       	ld	r0, Z+
    32ac:	0d 92       	st	X+, r0
    32ae:	8a 95       	dec	r24
    32b0:	e1 f7       	brne	.-8      	; 0x32aa <_Z13uhreinstellenv+0x57e>
    32b2:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    32b4:	f5 01       	movw	r30, r10
    32b6:	61 91       	ld	r22, Z+
    32b8:	5f 01       	movw	r10, r30
    32ba:	28 e3       	ldi	r18, 0x38	; 56
    32bc:	41 2f       	mov	r20, r17
    32be:	84 e4       	ldi	r24, 0x44	; 68
    32c0:	9c e0       	ldi	r25, 0x0C	; 12
    32c2:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    32c6:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    32c8:	12 34       	cpi	r17, 0x42	; 66
    32ca:	a1 f7       	brne	.-24     	; 0x32b4 <_Z13uhreinstellenv+0x588>
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    32cc:	0f 2e       	mov	r0, r31
    32ce:	f7 e0       	ldi	r31, 0x07	; 7
    32d0:	9f 2e       	mov	r9, r31
    32d2:	f0 2d       	mov	r31, r0
    32d4:	ae c0       	rjmp	.+348    	; 0x3432 <_Z13uhreinstellenv+0x706>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    32d6:	88 e3       	ldi	r24, 0x38	; 56
    32d8:	9c e0       	ldi	r25, 0x0C	; 12
    32da:	0e 94 97 27 	call	0x4f2e	; 0x4f2e <_ZN9Interface17ZahlenausTastaturEv>
    32de:	f6 01       	movw	r30, r12
    32e0:	27 89       	ldd	r18, Z+23	; 0x17
    32e2:	90 e0       	ldi	r25, 0x00	; 0
    32e4:	82 0f       	add	r24, r18
    32e6:	91 1d       	adc	r25, r1
				if(rtc.Jahr>=50){
    32e8:	82 33       	cpi	r24, 0x32	; 50
    32ea:	08 f4       	brcc	.+2      	; 0x32ee <_Z13uhreinstellenv+0x5c2>
    32ec:	99 c0       	rjmp	.+306    	; 0x3420 <_Z13uhreinstellenv+0x6f4>
					rtc.Jahr=0;
    32ee:	17 8a       	std	Z+23, r1	; 0x17
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    32f0:	8c e0       	ldi	r24, 0x0C	; 12
    32f2:	e0 e2       	ldi	r30, 0x20	; 32
    32f4:	f3 e0       	ldi	r31, 0x03	; 3
    32f6:	d2 01       	movw	r26, r4
    32f8:	01 90       	ld	r0, Z+
    32fa:	0d 92       	st	X+, r0
    32fc:	8a 95       	dec	r24
    32fe:	e1 f7       	brne	.-8      	; 0x32f8 <_Z13uhreinstellenv+0x5cc>
    3300:	2d 88       	ldd	r2, Y+21	; 0x15
    3302:	3e 88       	ldd	r3, Y+22	; 0x16
    3304:	1f 2d       	mov	r17, r15
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3306:	f1 01       	movw	r30, r2
    3308:	61 91       	ld	r22, Z+
    330a:	1f 01       	movw	r2, r30
    330c:	28 e3       	ldi	r18, 0x38	; 56
    330e:	41 2f       	mov	r20, r17
    3310:	84 e4       	ldi	r24, 0x44	; 68
    3312:	9c e0       	ldi	r25, 0x0C	; 12
    3314:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    3318:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    331a:	12 34       	cpi	r17, 0x42	; 66
    331c:	a1 f7       	brne	.-24     	; 0x3306 <_Z13uhreinstellenv+0x5da>
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    331e:	0f 2e       	mov	r0, r31
    3320:	f7 e0       	ldi	r31, 0x07	; 7
    3322:	9f 2e       	mov	r9, r31
    3324:	f0 2d       	mov	r31, r0
    3326:	7e c0       	rjmp	.+252    	; 0x3424 <_Z13uhreinstellenv+0x6f8>
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==2){
					if(rtc.Jahr%4==0){
    3328:	f6 01       	movw	r30, r12
    332a:	17 89       	ldd	r17, Z+23	; 0x17
    332c:	13 70       	andi	r17, 0x03	; 3
    332e:	f9 f4       	brne	.+62     	; 0x336e <_Z13uhreinstellenv+0x642>
						if (rtc.Tag>=30)
    3330:	84 89       	ldd	r24, Z+20	; 0x14
    3332:	8e 31       	cpi	r24, 0x1E	; 30
    3334:	f0 f1       	brcs	.+124    	; 0x33b2 <_Z13uhreinstellenv+0x686>
						{
							rtc.Tag=0;
    3336:	14 8a       	std	Z+20, r1	; 0x14
							rtc.Monat=0;
    3338:	16 8a       	std	Z+22, r1	; 0x16
							rtc.Jahr=0;
    333a:	17 8a       	std	Z+23, r1	; 0x17
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    333c:	8b e0       	ldi	r24, 0x0B	; 11
    333e:	e8 e0       	ldi	r30, 0x08	; 8
    3340:	f3 e0       	ldi	r31, 0x03	; 3
    3342:	d2 01       	movw	r26, r4
    3344:	01 90       	ld	r0, Z+
    3346:	0d 92       	st	X+, r0
    3348:	8a 95       	dec	r24
    334a:	e1 f7       	brne	.-8      	; 0x3344 <_Z13uhreinstellenv+0x618>
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    334c:	f5 01       	movw	r30, r10
    334e:	61 91       	ld	r22, Z+
    3350:	5f 01       	movw	r10, r30
    3352:	28 e3       	ldi	r18, 0x38	; 56
    3354:	41 2f       	mov	r20, r17
    3356:	84 e4       	ldi	r24, 0x44	; 68
    3358:	9c e0       	ldi	r25, 0x0C	; 12
    335a:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    335e:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    3360:	1c 33       	cpi	r17, 0x3C	; 60
    3362:	a1 f7       	brne	.-24     	; 0x334c <_Z13uhreinstellenv+0x620>
						if (rtc.Tag>=30)
						{
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    3364:	0f 2e       	mov	r0, r31
    3366:	f3 e0       	ldi	r31, 0x03	; 3
    3368:	9f 2e       	mov	r9, r31
    336a:	f0 2d       	mov	r31, r0
    336c:	62 c0       	rjmp	.+196    	; 0x3432 <_Z13uhreinstellenv+0x706>
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
							}
						}
					}
					else{
						if(rtc.Tag>=29){
    336e:	f6 01       	movw	r30, r12
    3370:	84 89       	ldd	r24, Z+20	; 0x14
    3372:	8d 31       	cpi	r24, 0x1D	; 29
    3374:	f0 f0       	brcs	.+60     	; 0x33b2 <_Z13uhreinstellenv+0x686>
							rtc.Tag=0;
    3376:	14 8a       	std	Z+20, r1	; 0x14
							rtc.Monat=0;
    3378:	16 8a       	std	Z+22, r1	; 0x16
							rtc.Jahr=0;
    337a:	17 8a       	std	Z+23, r1	; 0x17
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    337c:	8b e0       	ldi	r24, 0x0B	; 11
    337e:	e8 e0       	ldi	r30, 0x08	; 8
    3380:	f3 e0       	ldi	r31, 0x03	; 3
    3382:	d2 01       	movw	r26, r4
    3384:	01 90       	ld	r0, Z+
    3386:	0d 92       	st	X+, r0
    3388:	8a 95       	dec	r24
    338a:	e1 f7       	brne	.-8      	; 0x3384 <_Z13uhreinstellenv+0x658>
    338c:	1f 2d       	mov	r17, r15
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    338e:	f5 01       	movw	r30, r10
    3390:	61 91       	ld	r22, Z+
    3392:	5f 01       	movw	r10, r30
    3394:	28 e3       	ldi	r18, 0x38	; 56
    3396:	41 2f       	mov	r20, r17
    3398:	84 e4       	ldi	r24, 0x44	; 68
    339a:	9c e0       	ldi	r25, 0x0C	; 12
    339c:	0e 94 25 06 	call	0xc4a	; 0xc4a <_ZN7Display9draw_ASCIEhhh>
    33a0:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    33a2:	1c 33       	cpi	r17, 0x3C	; 60
    33a4:	a1 f7       	brne	.-24     	; 0x338e <_Z13uhreinstellenv+0x662>
					else{
						if(rtc.Tag>=29){
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    33a6:	0f 2e       	mov	r0, r31
    33a8:	f3 e0       	ldi	r31, 0x03	; 3
    33aa:	9f 2e       	mov	r9, r31
    33ac:	f0 2d       	mov	r31, r0
    33ae:	41 c0       	rjmp	.+130    	; 0x3432 <_Z13uhreinstellenv+0x706>
						}
					}
				}
				break;
			default:
				pos++;
    33b0:	93 94       	inc	r9
				break;
		}
		pos++;
    33b2:	93 94       	inc	r9
	
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
    33b4:	fa e0       	ldi	r31, 0x0A	; 10
    33b6:	f9 15       	cp	r31, r9
    33b8:	08 f0       	brcs	.+2      	; 0x33bc <_Z13uhreinstellenv+0x690>
    33ba:	f6 cc       	rjmp	.-1556   	; 0x2da8 <_Z13uhreinstellenv+0x7c>
				break;
		}
		pos++;
	}
	
	rtc.Sekunden		= 0;
    33bc:	05 e4       	ldi	r16, 0x45	; 69
    33be:	10 e1       	ldi	r17, 0x10	; 16
    33c0:	f8 01       	movw	r30, r16
    33c2:	12 8a       	std	Z+18, r1	; 0x12
	rtc.HundSekunden	= 0;
    33c4:	13 8a       	std	Z+19, r1	; 0x13
	//speichern der neuen Zeit im EEPROM
	EEPROM_Write(EEMINUTEN,rtc.Minuten);
    33c6:	61 89       	ldd	r22, Z+17	; 0x11
    33c8:	80 e0       	ldi	r24, 0x00	; 0
    33ca:	90 e0       	ldi	r25, 0x00	; 0
    33cc:	0e 94 e6 09 	call	0x13cc	; 0x13cc <_Z12EEPROM_Writejh>
	EEPROM_Write(EESTUNDEN,rtc.Stunden);
    33d0:	f8 01       	movw	r30, r16
    33d2:	60 89       	ldd	r22, Z+16	; 0x10
    33d4:	81 e0       	ldi	r24, 0x01	; 1
    33d6:	90 e0       	ldi	r25, 0x00	; 0
    33d8:	0e 94 e6 09 	call	0x13cc	; 0x13cc <_Z12EEPROM_Writejh>
	EEPROM_Write(EETAGE,rtc.Tag);
    33dc:	f8 01       	movw	r30, r16
    33de:	64 89       	ldd	r22, Z+20	; 0x14
    33e0:	82 e0       	ldi	r24, 0x02	; 2
    33e2:	90 e0       	ldi	r25, 0x00	; 0
    33e4:	0e 94 e6 09 	call	0x13cc	; 0x13cc <_Z12EEPROM_Writejh>
	EEPROM_Write(EEMONAT,rtc.Monat);
    33e8:	f8 01       	movw	r30, r16
    33ea:	66 89       	ldd	r22, Z+22	; 0x16
    33ec:	83 e0       	ldi	r24, 0x03	; 3
    33ee:	90 e0       	ldi	r25, 0x00	; 0
    33f0:	0e 94 e6 09 	call	0x13cc	; 0x13cc <_Z12EEPROM_Writejh>
	EEPROM_Write(EEJAHR,rtc.Jahr);
    33f4:	f8 01       	movw	r30, r16
    33f6:	67 89       	ldd	r22, Z+23	; 0x17
    33f8:	84 e0       	ldi	r24, 0x04	; 4
    33fa:	90 e0       	ldi	r25, 0x00	; 0
    33fc:	0e 94 e6 09 	call	0x13cc	; 0x13cc <_Z12EEPROM_Writejh>
	
	oled.clearFrame();
    3400:	84 e4       	ldi	r24, 0x44	; 68
    3402:	9c e0       	ldi	r25, 0x0C	; 12
    3404:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
	rtc.ausgabedatumneu();
    3408:	c8 01       	movw	r24, r16
    340a:	0e 94 6c 2f 	call	0x5ed8	; 0x5ed8 <_ZN3RTC15ausgabedatumneuEv>
	rtc.ausgabezeitneu();
    340e:	c8 01       	movw	r24, r16
    3410:	0e 94 33 2f 	call	0x5e66	; 0x5e66 <_ZN3RTC14ausgabezeitneuEv>
	rtc.RTCstart();
    3414:	c8 01       	movw	r24, r16
    3416:	0e 94 4d 30 	call	0x609a	; 0x609a <_ZN3RTC8RTCstartEv>
    341a:	0d c0       	rjmp	.+26     	; 0x3436 <_Z13uhreinstellenv+0x70a>
				break;
			default:
				pos++;
				break;
		}
		pos++;
    341c:	93 94       	inc	r9
    341e:	c4 cc       	rjmp	.-1656   	; 0x2da8 <_Z13uhreinstellenv+0x7c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    3420:	f6 01       	movw	r30, r12
    3422:	87 8b       	std	Z+23, r24	; 0x17
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==2){
    3424:	f6 01       	movw	r30, r12
    3426:	86 89       	ldd	r24, Z+22	; 0x16
    3428:	82 30       	cpi	r24, 0x02	; 2
    342a:	c1 f7       	brne	.-16     	; 0x341c <_Z13uhreinstellenv+0x6f0>
    342c:	7d cf       	rjmp	.-262    	; 0x3328 <_Z13uhreinstellenv+0x5fc>

		oled.sendFrame();
		oled.clearFrame();
		switch (pos) {
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    342e:	f6 01       	movw	r30, r12
    3430:	80 8b       	std	Z+16, r24	; 0x10
				break;
			default:
				pos++;
				break;
		}
		pos++;
    3432:	93 94       	inc	r9
    3434:	b9 cc       	rjmp	.-1678   	; 0x2da8 <_Z13uhreinstellenv+0x7c>
	
	oled.clearFrame();
	rtc.ausgabedatumneu();
	rtc.ausgabezeitneu();
	rtc.RTCstart();
}
    3436:	66 96       	adiw	r28, 0x16	; 22
    3438:	0f b6       	in	r0, 0x3f	; 63
    343a:	f8 94       	cli
    343c:	de bf       	out	0x3e, r29	; 62
    343e:	0f be       	out	0x3f, r0	; 63
    3440:	cd bf       	out	0x3d, r28	; 61
    3442:	df 91       	pop	r29
    3444:	cf 91       	pop	r28
    3446:	1f 91       	pop	r17
    3448:	0f 91       	pop	r16
    344a:	ff 90       	pop	r15
    344c:	ef 90       	pop	r14
    344e:	df 90       	pop	r13
    3450:	cf 90       	pop	r12
    3452:	bf 90       	pop	r11
    3454:	af 90       	pop	r10
    3456:	9f 90       	pop	r9
    3458:	8f 90       	pop	r8
    345a:	7f 90       	pop	r7
    345c:	6f 90       	pop	r6
    345e:	5f 90       	pop	r5
    3460:	4f 90       	pop	r4
    3462:	3f 90       	pop	r3
    3464:	2f 90       	pop	r2
    3466:	08 95       	ret

00003468 <__vector_11>:
#include "EEPROM.h"
//Ausgelagerte Sammlung der einzelnen Seitenlayouts
uint8_t FPS;
#include "Seiten.h"

ISR(TIMER2_OVF_vect){	//Vektor fuer die RTC
    3468:	1f 92       	push	r1
    346a:	0f 92       	push	r0
    346c:	0f b6       	in	r0, 0x3f	; 63
    346e:	0f 92       	push	r0
    3470:	11 24       	eor	r1, r1
    3472:	0b b6       	in	r0, 0x3b	; 59
    3474:	0f 92       	push	r0
    3476:	8f 93       	push	r24
    3478:	ef 93       	push	r30
    347a:	ff 93       	push	r31
	//TCNT2=TIMER2RTCTIME;
	rtc.Sekunden++;
    347c:	e5 e4       	ldi	r30, 0x45	; 69
    347e:	f0 e1       	ldi	r31, 0x10	; 16
    3480:	82 89       	ldd	r24, Z+18	; 0x12
    3482:	8f 5f       	subi	r24, 0xFF	; 255
    3484:	82 8b       	std	Z+18, r24	; 0x12
	rtc.interupts|= (1<<sekundeninterupt);
    3486:	80 8d       	ldd	r24, Z+24	; 0x18
    3488:	82 60       	ori	r24, 0x02	; 2
    348a:	80 8f       	std	Z+24, r24	; 0x18
}
    348c:	ff 91       	pop	r31
    348e:	ef 91       	pop	r30
    3490:	8f 91       	pop	r24
    3492:	0f 90       	pop	r0
    3494:	0b be       	out	0x3b, r0	; 59
    3496:	0f 90       	pop	r0
    3498:	0f be       	out	0x3f, r0	; 63
    349a:	0f 90       	pop	r0
    349c:	1f 90       	pop	r1
    349e:	18 95       	reti

000034a0 <__vector_13>:

ISR(TIMER1_COMPA_vect){
    34a0:	1f 92       	push	r1
    34a2:	0f 92       	push	r0
    34a4:	0f b6       	in	r0, 0x3f	; 63
    34a6:	0f 92       	push	r0
    34a8:	11 24       	eor	r1, r1
    34aa:	8f 93       	push	r24
	statusreg |= (1<<updaterate);
    34ac:	80 91 3e 03 	lds	r24, 0x033E
    34b0:	81 60       	ori	r24, 0x01	; 1
    34b2:	80 93 3e 03 	sts	0x033E, r24
}
    34b6:	8f 91       	pop	r24
    34b8:	0f 90       	pop	r0
    34ba:	0f be       	out	0x3f, r0	; 63
    34bc:	0f 90       	pop	r0
    34be:	1f 90       	pop	r1
    34c0:	18 95       	reti

000034c2 <_Z15geschwindigkeitf>:

double geschw;
double strecke;
double maxgeschw;
uint32_t Fahrtzeit;
void geschwindigkeit(float durch){
    34c2:	cf 92       	push	r12
    34c4:	df 92       	push	r13
    34c6:	ef 92       	push	r14
    34c8:	ff 92       	push	r15
    34ca:	cf 93       	push	r28
    34cc:	df 93       	push	r29
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
    34ce:	e4 e8       	ldi	r30, 0x84	; 132
    34d0:	f0 e0       	ldi	r31, 0x00	; 0
    34d2:	c0 81       	ld	r28, Z
    34d4:	d1 81       	ldd	r29, Z+1	; 0x01
	TCNT1 = 0;
    34d6:	11 82       	std	Z+1, r1	; 0x01
    34d8:	10 82       	st	Z, r1
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
    34da:	2b ed       	ldi	r18, 0xDB	; 219
    34dc:	3f e0       	ldi	r19, 0x0F	; 15
    34de:	49 e4       	ldi	r20, 0x49	; 73
    34e0:	50 e4       	ldi	r21, 0x40	; 64
    34e2:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    34e6:	26 e6       	ldi	r18, 0x66	; 102
    34e8:	36 e6       	ldi	r19, 0x66	; 102
    34ea:	46 e6       	ldi	r20, 0x66	; 102
    34ec:	50 e4       	ldi	r21, 0x40	; 64
    34ee:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    34f2:	6b 01       	movw	r12, r22
    34f4:	7c 01       	movw	r14, r24
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
	TCNT1 = 0;
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
    34f6:	be 01       	movw	r22, r28
    34f8:	80 e0       	ldi	r24, 0x00	; 0
    34fa:	90 e0       	ldi	r25, 0x00	; 0
    34fc:	0e 94 14 32 	call	0x6428	; 0x6428 <__floatunsisf>
    3500:	20 e0       	ldi	r18, 0x00	; 0
    3502:	30 e0       	ldi	r19, 0x00	; 0
    3504:	40 e0       	ldi	r20, 0x00	; 0
    3506:	5e e3       	ldi	r21, 0x3E	; 62
    3508:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    350c:	2d eb       	ldi	r18, 0xBD	; 189
    350e:	37 e3       	ldi	r19, 0x37	; 55
    3510:	46 e8       	ldi	r20, 0x86	; 134
    3512:	5a e3       	ldi	r21, 0x3A	; 58
    3514:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    3518:	2a e0       	ldi	r18, 0x0A	; 10
    351a:	37 ed       	ldi	r19, 0xD7	; 215
    351c:	43 ea       	ldi	r20, 0xA3	; 163
    351e:	5b e3       	ldi	r21, 0x3B	; 59
    3520:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    3524:	9b 01       	movw	r18, r22
    3526:	ac 01       	movw	r20, r24
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
    3528:	c7 01       	movw	r24, r14
    352a:	b6 01       	movw	r22, r12
    352c:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
    3530:	20 91 38 03 	lds	r18, 0x0338
    3534:	30 91 39 03 	lds	r19, 0x0339
    3538:	40 91 3a 03 	lds	r20, 0x033A
    353c:	50 91 3b 03 	lds	r21, 0x033B
    3540:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
	geschw /= 2.0;
    3544:	20 e0       	ldi	r18, 0x00	; 0
    3546:	30 e0       	ldi	r19, 0x00	; 0
    3548:	40 e0       	ldi	r20, 0x00	; 0
    354a:	5f e3       	ldi	r21, 0x3F	; 63
    354c:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    3550:	6b 01       	movw	r12, r22
    3552:	7c 01       	movw	r14, r24
	if (geschw >=160)
    3554:	20 e0       	ldi	r18, 0x00	; 0
    3556:	30 e0       	ldi	r19, 0x00	; 0
    3558:	40 e2       	ldi	r20, 0x20	; 32
    355a:	53 e4       	ldi	r21, 0x43	; 67
    355c:	0e 94 24 33 	call	0x6648	; 0x6648 <__gesf2>
    3560:	88 23       	and	r24, r24
    3562:	4c f4       	brge	.+18     	; 0x3576 <_Z15geschwindigkeitf+0xb4>
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
	geschw /= 2.0;
    3564:	c0 92 38 03 	sts	0x0338, r12
    3568:	d0 92 39 03 	sts	0x0339, r13
    356c:	e0 92 3a 03 	sts	0x033A, r14
    3570:	f0 92 3b 03 	sts	0x033B, r15
    3574:	08 c0       	rjmp	.+16     	; 0x3586 <_Z15geschwindigkeitf+0xc4>
	if (geschw >=160)
	{
		geschw=0;
    3576:	10 92 38 03 	sts	0x0338, r1
    357a:	10 92 39 03 	sts	0x0339, r1
    357e:	10 92 3a 03 	sts	0x033A, r1
    3582:	10 92 3b 03 	sts	0x033B, r1
	}
}
    3586:	df 91       	pop	r29
    3588:	cf 91       	pop	r28
    358a:	ff 90       	pop	r15
    358c:	ef 90       	pop	r14
    358e:	df 90       	pop	r13
    3590:	cf 90       	pop	r12
    3592:	08 95       	ret

00003594 <_Z13reed_debouncePVhh>:

uint8_t reed_debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( (*port & (1 << pin)) )
    3594:	fc 01       	movw	r30, r24
    3596:	20 81       	ld	r18, Z
    3598:	30 e0       	ldi	r19, 0x00	; 0
    359a:	06 2e       	mov	r0, r22
    359c:	02 c0       	rjmp	.+4      	; 0x35a2 <_Z13reed_debouncePVhh+0xe>
    359e:	35 95       	asr	r19
    35a0:	27 95       	ror	r18
    35a2:	0a 94       	dec	r0
    35a4:	e2 f7       	brpl	.-8      	; 0x359e <_Z13reed_debouncePVhh+0xa>
    35a6:	20 ff       	sbrs	r18, 0
    35a8:	16 c0       	rjmp	.+44     	; 0x35d6 <_Z13reed_debouncePVhh+0x42>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    35aa:	ef e0       	ldi	r30, 0x0F	; 15
    35ac:	f7 e2       	ldi	r31, 0x27	; 39
    35ae:	31 97       	sbiw	r30, 0x01	; 1
    35b0:	f1 f7       	brne	.-4      	; 0x35ae <_Z13reed_debouncePVhh+0x1a>
    35b2:	00 c0       	rjmp	.+0      	; 0x35b4 <_Z13reed_debouncePVhh+0x20>
    35b4:	00 00       	nop
	{
		/* Pin wurde auf Masse gezogen, ms warten   */
		_delay_ms(REEDMS);
		if ( !(*port & (1 << pin)) )
    35b6:	fc 01       	movw	r30, r24
    35b8:	80 81       	ld	r24, Z
    35ba:	90 e0       	ldi	r25, 0x00	; 0
    35bc:	02 c0       	rjmp	.+4      	; 0x35c2 <_Z13reed_debouncePVhh+0x2e>
    35be:	95 95       	asr	r25
    35c0:	87 95       	ror	r24
    35c2:	6a 95       	dec	r22
    35c4:	e2 f7       	brpl	.-8      	; 0x35be <_Z13reed_debouncePVhh+0x2a>
    35c6:	80 fd       	sbrc	r24, 0
    35c8:	08 c0       	rjmp	.+16     	; 0x35da <_Z13reed_debouncePVhh+0x46>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    35ca:	f2 e0       	ldi	r31, 0x02	; 2
    35cc:	fa 95       	dec	r31
    35ce:	f1 f7       	brne	.-4      	; 0x35cc <_Z13reed_debouncePVhh+0x38>
    35d0:	00 c0       	rjmp	.+0      	; 0x35d2 <_Z13reed_debouncePVhh+0x3e>
		{
			/* Anwender Zeit zum Loslassen des Tasters geben */
			_delay_us(1);
			return 1;
    35d2:	81 e0       	ldi	r24, 0x01	; 1
    35d4:	08 95       	ret
		}
	}
	return 0;
    35d6:	80 e0       	ldi	r24, 0x00	; 0
    35d8:	08 95       	ret
    35da:	80 e0       	ldi	r24, 0x00	; 0
}
    35dc:	08 95       	ret

000035de <_Z9inittimerh>:
		=> N=64 bei OCR1A=2604-1 bei f=24
		=> CS11 und CS10
*/

void inittimer(uint8_t stat){
	TCNT1 = 0;
    35de:	10 92 85 00 	sts	0x0085, r1
    35e2:	10 92 84 00 	sts	0x0084, r1
	if (stat==1)
    35e6:	81 30       	cpi	r24, 0x01	; 1
    35e8:	31 f4       	brne	.+12     	; 0x35f6 <_Z9inittimerh+0x18>
	{
		TIMSK1 = 0;
    35ea:	10 92 6f 00 	sts	0x006F, r1
		TCCR1B = ((1<<CS12) | (1<<CS10));
    35ee:	85 e0       	ldi	r24, 0x05	; 5
    35f0:	80 93 81 00 	sts	0x0081, r24
    35f4:	08 95       	ret
	}
	else if (stat==2)
    35f6:	82 30       	cpi	r24, 0x02	; 2
    35f8:	61 f4       	brne	.+24     	; 0x3612 <_Z9inittimerh+0x34>
	{
		OCR1A = 2603*2;
    35fa:	86 e5       	ldi	r24, 0x56	; 86
    35fc:	94 e1       	ldi	r25, 0x14	; 20
    35fe:	90 93 89 00 	sts	0x0089, r25
    3602:	80 93 88 00 	sts	0x0088, r24
		TCCR1B = (1<<WGM12)|(1<<CS11)|(1<<CS10);
    3606:	8b e0       	ldi	r24, 0x0B	; 11
    3608:	80 93 81 00 	sts	0x0081, r24
		TIMSK1 = (1<<OCIE1A);
    360c:	82 e0       	ldi	r24, 0x02	; 2
    360e:	80 93 6f 00 	sts	0x006F, r24
    3612:	08 95       	ret

00003614 <_Z15initialisierungv>:
         //Tasthandler
         eingabehandler(Tastatur.Taster());
    }
}

void initialisierung(){
    3614:	cf 93       	push	r28
    3616:	df 93       	push	r29
	//nullen der Flagregister
	rtc.interupts=0;
    3618:	10 92 5d 10 	sts	0x105D, r1
	anzeige=0;
    361c:	10 92 40 03 	sts	0x0340, r1
    3620:	10 92 3f 03 	sts	0x033F, r1
	statusreg=0;
    3624:	10 92 3e 03 	sts	0x033E, r1
	pos=0;
    3628:	10 92 3d 03 	sts	0x033D, r1
	FPS=0;
    362c:	10 92 3c 03 	sts	0x033C, r1
	//initialisieren des Zaehler fuer die Winkelgeschw sowie den Timer
	geschw=0;
    3630:	10 92 38 03 	sts	0x0338, r1
    3634:	10 92 39 03 	sts	0x0339, r1
    3638:	10 92 3a 03 	sts	0x033A, r1
    363c:	10 92 3b 03 	sts	0x033B, r1
	strecke = 0;
    3640:	10 92 34 03 	sts	0x0334, r1
    3644:	10 92 35 03 	sts	0x0335, r1
    3648:	10 92 36 03 	sts	0x0336, r1
    364c:	10 92 37 03 	sts	0x0337, r1
	maxgeschw = 0;
    3650:	10 92 30 03 	sts	0x0330, r1
    3654:	10 92 31 03 	sts	0x0331, r1
    3658:	10 92 32 03 	sts	0x0332, r1
    365c:	10 92 33 03 	sts	0x0333, r1
	Fahrtzeit = 0;
    3660:	10 92 2c 03 	sts	0x032C, r1
    3664:	10 92 2d 03 	sts	0x032D, r1
    3668:	10 92 2e 03 	sts	0x032E, r1
    366c:	10 92 2f 03 	sts	0x032F, r1
	inittimer(0);
    3670:	80 e0       	ldi	r24, 0x00	; 0
    3672:	b5 df       	rcall	.-150    	; 0x35de <_Z9inittimerh>
	//Tastatur inm Contruktor initialisiert
	//Eingang fuer den Reedkontak schalten mit internem Pullup
	DDRA |= ((1<<PORTA6));
    3674:	0e 9a       	sbi	0x01, 6	; 1
	PORTA |= (1<<PORTA6);
    3676:	16 9a       	sbi	0x02, 6	; 2
	//Display
	oled.InitializeDisplay();
    3678:	84 e4       	ldi	r24, 0x44	; 68
    367a:	9c e0       	ldi	r25, 0x0C	; 12
    367c:	0e 94 f6 02 	call	0x5ec	; 0x5ec <_ZN7Display17InitializeDisplayEv>
	//initialisierung wird im konstruktor vorgenommen
	oled.clearFrame();
    3680:	84 e4       	ldi	r24, 0x44	; 68
    3682:	9c e0       	ldi	r25, 0x0C	; 12
    3684:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
	//HMC5883L initialisieren
	//kompass.initialize_HMC5883L();
	//initialisierung wird im Konstruktor erledigt
	
	//ADC Initialisieren auf CH0
	ADMUX = (1<<REFS0);
    3688:	80 e4       	ldi	r24, 0x40	; 64
    368a:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
    368e:	ea e7       	ldi	r30, 0x7A	; 122
    3690:	f0 e0       	ldi	r31, 0x00	; 0
    3692:	83 e0       	ldi	r24, 0x03	; 3
    3694:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN);
    3696:	80 81       	ld	r24, Z
    3698:	80 68       	ori	r24, 0x80	; 128
    369a:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
    369c:	80 81       	ld	r24, Z
    369e:	80 64       	ori	r24, 0x40	; 64
    36a0:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC) ) {}
    36a2:	80 81       	ld	r24, Z
    36a4:	86 fd       	sbrc	r24, 6
    36a6:	fd cf       	rjmp	.-6      	; 0x36a2 <_Z15initialisierungv+0x8e>
	(void) ADCW;
    36a8:	80 91 78 00 	lds	r24, 0x0078
    36ac:	90 91 79 00 	lds	r25, 0x0079
	//Wilkommensanzeige
	willkommenpage();
    36b0:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <_Z14willkommenpagev>
	//Uhreinstellungen
	//uhreinstellen();
	//*************************************************
	//Nur Test, damit es schneller geht beim Start
	rtc.Sekunden= 0;
    36b4:	c5 e4       	ldi	r28, 0x45	; 69
    36b6:	d0 e1       	ldi	r29, 0x10	; 16
    36b8:	1a 8a       	std	Y+18, r1	; 0x12
	rtc.Minuten	= EEPROM_Read(EEMINUTEN);
    36ba:	80 e0       	ldi	r24, 0x00	; 0
    36bc:	90 e0       	ldi	r25, 0x00	; 0
    36be:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <_Z11EEPROM_Readj>
    36c2:	89 8b       	std	Y+17, r24	; 0x11
	rtc.Stunden	= EEPROM_Read(EESTUNDEN);
    36c4:	81 e0       	ldi	r24, 0x01	; 1
    36c6:	90 e0       	ldi	r25, 0x00	; 0
    36c8:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <_Z11EEPROM_Readj>
    36cc:	88 8b       	std	Y+16, r24	; 0x10
	rtc.Tag		= EEPROM_Read(EETAGE);
    36ce:	82 e0       	ldi	r24, 0x02	; 2
    36d0:	90 e0       	ldi	r25, 0x00	; 0
    36d2:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <_Z11EEPROM_Readj>
    36d6:	8c 8b       	std	Y+20, r24	; 0x14
	rtc.Monat	= EEPROM_Read(EEMONAT);
    36d8:	83 e0       	ldi	r24, 0x03	; 3
    36da:	90 e0       	ldi	r25, 0x00	; 0
    36dc:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <_Z11EEPROM_Readj>
    36e0:	8e 8b       	std	Y+22, r24	; 0x16
	rtc.Jahr	= EEPROM_Read(EEJAHR);
    36e2:	84 e0       	ldi	r24, 0x04	; 4
    36e4:	90 e0       	ldi	r25, 0x00	; 0
    36e6:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <_Z11EEPROM_Readj>
    36ea:	8f 8b       	std	Y+23, r24	; 0x17
	rtc.ausgabedatumneu();
    36ec:	ce 01       	movw	r24, r28
    36ee:	0e 94 6c 2f 	call	0x5ed8	; 0x5ed8 <_ZN3RTC15ausgabedatumneuEv>
	//rtc.dummyeinst();
	//*********************************
	rtc.RTCstart();
    36f2:	ce 01       	movw	r24, r28
    36f4:	0e 94 4d 30 	call	0x609a	; 0x609a <_ZN3RTC8RTCstartEv>
	//ausgabe starten
	rtc.interupts|=(0<<minuteninterupt)|(0<<sekundeninterupt);
	inittimer(2);
    36f8:	82 e0       	ldi	r24, 0x02	; 2
    36fa:	71 df       	rcall	.-286    	; 0x35de <_Z9inittimerh>
	anzeige|=(1<<Uhrflag);
    36fc:	80 91 3f 03 	lds	r24, 0x033F
    3700:	90 91 40 03 	lds	r25, 0x0340
    3704:	82 60       	ori	r24, 0x02	; 2
    3706:	90 93 40 03 	sts	0x0340, r25
    370a:	80 93 3f 03 	sts	0x033F, r24
	sei();
    370e:	78 94       	sei
}
    3710:	df 91       	pop	r29
    3712:	cf 91       	pop	r28
    3714:	08 95       	ret

00003716 <_Z19maininterupthandlerv>:
	//interupt dierekt aus der rtc
	//if((rtc.interupts & (1<<hundinterupt))){
	//rtc.zeit();
	//rtc.interupts&=~(1<<hundinterupt);
	//}
	if ((anzeige&(1<<Fahradflag)))
    3716:	80 91 3f 03 	lds	r24, 0x033F
    371a:	80 ff       	sbrs	r24, 0
    371c:	1f c0       	rjmp	.+62     	; 0x375c <_Z19maininterupthandlerv+0x46>
	{
		//debounce Funktion fuer den Reedswitch
		if (reed_debounce(&PINA,PINA7))
    371e:	67 e0       	ldi	r22, 0x07	; 7
    3720:	80 e2       	ldi	r24, 0x20	; 32
    3722:	90 e0       	ldi	r25, 0x00	; 0
    3724:	37 df       	rcall	.-402    	; 0x3594 <_Z13reed_debouncePVhh>
    3726:	88 23       	and	r24, r24
    3728:	31 f0       	breq	.+12     	; 0x3736 <_Z19maininterupthandlerv+0x20>
		{
			//Durchmesser ist 28 Zoll
			geschwindigkeit(28.0*2.54/100.0);
    372a:	63 e3       	ldi	r22, 0x33	; 51
    372c:	71 e1       	ldi	r23, 0x11	; 17
    372e:	86 e3       	ldi	r24, 0x36	; 54
    3730:	9f e3       	ldi	r25, 0x3F	; 63
    3732:	c7 de       	rcall	.-626    	; 0x34c2 <_Z15geschwindigkeitf>
    3734:	13 c0       	rjmp	.+38     	; 0x375c <_Z19maininterupthandlerv+0x46>
		}
		//Hier mit werden geschwindigkeiten, die kleiner als 2.6km/h betragen gefiltert
		//Somit wird die letzte Geschwindigkeit nach 3 Sekunden geloescht
		//Das ist noch nicht die beste Variante
		else if (TCNT1>23437)
    3736:	80 91 84 00 	lds	r24, 0x0084
    373a:	90 91 85 00 	lds	r25, 0x0085
    373e:	8e 38       	cpi	r24, 0x8E	; 142
    3740:	9b 45       	sbci	r25, 0x5B	; 91
    3742:	60 f0       	brcs	.+24     	; 0x375c <_Z19maininterupthandlerv+0x46>
		{
			TCNT1=0;
    3744:	10 92 85 00 	sts	0x0085, r1
    3748:	10 92 84 00 	sts	0x0084, r1
			geschw=0;
    374c:	10 92 38 03 	sts	0x0338, r1
    3750:	10 92 39 03 	sts	0x0339, r1
    3754:	10 92 3a 03 	sts	0x033A, r1
    3758:	10 92 3b 03 	sts	0x033B, r1
		}
	}
	if ((rtc.interupts&(1<<Weckeractiv)))
    375c:	80 91 5d 10 	lds	r24, 0x105D
    3760:	98 2f       	mov	r25, r24
    3762:	98 71       	andi	r25, 0x18	; 24
	{
		if ((rtc.interupts&(1<<Weckerein)))
    3764:	98 31       	cpi	r25, 0x18	; 24
    3766:	61 f4       	brne	.+24     	; 0x3780 <_Z19maininterupthandlerv+0x6a>
		{
			anzeige |= (1<<blinkflag) | (1<<refreshdisplay);
    3768:	20 91 3f 03 	lds	r18, 0x033F
    376c:	30 91 40 03 	lds	r19, 0x0340
    3770:	30 6c       	ori	r19, 0xC0	; 192
    3772:	30 93 40 03 	sts	0x0340, r19
    3776:	20 93 3f 03 	sts	0x033F, r18
			rtc.interupts &= ~(1<<Weckerein);
    377a:	87 7f       	andi	r24, 0xF7	; 247
    377c:	80 93 5d 10 	sts	0x105D, r24
    3780:	08 95       	ret

00003782 <_Z14anzeigehandlerv>:
		}
	}
}

void anzeigehandler(){
    3782:	4f 92       	push	r4
    3784:	5f 92       	push	r5
    3786:	6f 92       	push	r6
    3788:	7f 92       	push	r7
    378a:	af 92       	push	r10
    378c:	bf 92       	push	r11
    378e:	cf 92       	push	r12
    3790:	df 92       	push	r13
    3792:	ef 92       	push	r14
    3794:	ff 92       	push	r15
    3796:	0f 93       	push	r16
    3798:	1f 93       	push	r17
    379a:	cf 93       	push	r28
    379c:	df 93       	push	r29
	//Handler fuer 1Hz Flag
	if ((statusreg&(1<<updaterate)))
    379e:	80 91 3e 03 	lds	r24, 0x033E
    37a2:	80 ff       	sbrs	r24, 0
    37a4:	88 c0       	rjmp	.+272    	; 0x38b6 <_Z14anzeigehandlerv+0x134>
	{
		FPS++;
    37a6:	80 91 3c 03 	lds	r24, 0x033C
    37aa:	8f 5f       	subi	r24, 0xFF	; 255
    37ac:	80 93 3c 03 	sts	0x033C, r24
		if ((anzeige&(1<<Kompasflag)))
    37b0:	80 91 3f 03 	lds	r24, 0x033F
    37b4:	90 91 40 03 	lds	r25, 0x0340
    37b8:	87 ff       	sbrs	r24, 7
    37ba:	1e c0       	rjmp	.+60     	; 0x37f8 <_Z14anzeigehandlerv+0x76>
		{
			Accelerometer.readacc();
    37bc:	87 e4       	ldi	r24, 0x47	; 71
    37be:	9b e0       	ldi	r25, 0x0B	; 11
    37c0:	0e 94 eb 29 	call	0x53d6	; 0x53d6 <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    37c4:	e7 e4       	ldi	r30, 0x47	; 71
    37c6:	fb e0       	ldi	r31, 0x0B	; 11
    37c8:	04 85       	ldd	r16, Z+12	; 0x0c
    37ca:	15 85       	ldd	r17, Z+13	; 0x0d
    37cc:	26 85       	ldd	r18, Z+14	; 0x0e
    37ce:	37 85       	ldd	r19, Z+15	; 0x0f
    37d0:	40 85       	ldd	r20, Z+8	; 0x08
    37d2:	51 85       	ldd	r21, Z+9	; 0x09
    37d4:	62 85       	ldd	r22, Z+10	; 0x0a
    37d6:	73 85       	ldd	r23, Z+11	; 0x0b
    37d8:	84 e6       	ldi	r24, 0x64	; 100
    37da:	90 e1       	ldi	r25, 0x10	; 16
    37dc:	0e 94 97 28 	call	0x512e	; 0x512e <_ZN7Kompass5angleEdd>
    37e0:	0e 94 f0 12 	call	0x25e0	; 0x25e0 <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    37e4:	80 91 3f 03 	lds	r24, 0x033F
    37e8:	90 91 40 03 	lds	r25, 0x0340
    37ec:	90 68       	ori	r25, 0x80	; 128
    37ee:	90 93 40 03 	sts	0x0340, r25
    37f2:	80 93 3f 03 	sts	0x033F, r24
    37f6:	5a c0       	rjmp	.+180    	; 0x38ac <_Z14anzeigehandlerv+0x12a>
		}
		else if ((anzeige&(1<<Fahradflag)))
    37f8:	80 ff       	sbrs	r24, 0
    37fa:	4a c0       	rjmp	.+148    	; 0x3890 <_Z14anzeigehandlerv+0x10e>
		{
			Accelerometer.readacc();
    37fc:	87 e4       	ldi	r24, 0x47	; 71
    37fe:	9b e0       	ldi	r25, 0x0B	; 11
    3800:	0e 94 eb 29 	call	0x53d6	; 0x53d6 <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    3804:	e0 90 2c 03 	lds	r14, 0x032C
    3808:	f0 90 2d 03 	lds	r15, 0x032D
    380c:	c0 91 2e 03 	lds	r28, 0x032E
    3810:	d0 91 2f 03 	lds	r29, 0x032F
    3814:	a0 90 30 03 	lds	r10, 0x0330
    3818:	b0 90 31 03 	lds	r11, 0x0331
    381c:	c0 90 32 03 	lds	r12, 0x0332
    3820:	d0 90 33 03 	lds	r13, 0x0333
    3824:	40 90 34 03 	lds	r4, 0x0334
    3828:	50 90 35 03 	lds	r5, 0x0335
    382c:	60 90 36 03 	lds	r6, 0x0336
    3830:	70 90 37 03 	lds	r7, 0x0337
    3834:	e7 e4       	ldi	r30, 0x47	; 71
    3836:	fb e0       	ldi	r31, 0x0B	; 11
    3838:	04 85       	ldd	r16, Z+12	; 0x0c
    383a:	15 85       	ldd	r17, Z+13	; 0x0d
    383c:	26 85       	ldd	r18, Z+14	; 0x0e
    383e:	37 85       	ldd	r19, Z+15	; 0x0f
    3840:	40 85       	ldd	r20, Z+8	; 0x08
    3842:	51 85       	ldd	r21, Z+9	; 0x09
    3844:	62 85       	ldd	r22, Z+10	; 0x0a
    3846:	73 85       	ldd	r23, Z+11	; 0x0b
    3848:	84 e6       	ldi	r24, 0x64	; 100
    384a:	90 e1       	ldi	r25, 0x10	; 16
    384c:	0e 94 97 28 	call	0x512e	; 0x512e <_ZN7Kompass5angleEdd>
    3850:	9b 01       	movw	r18, r22
    3852:	ac 01       	movw	r20, r24
    3854:	60 91 38 03 	lds	r22, 0x0338
    3858:	70 91 39 03 	lds	r23, 0x0339
    385c:	80 91 3a 03 	lds	r24, 0x033A
    3860:	90 91 3b 03 	lds	r25, 0x033B
    3864:	df 93       	push	r29
    3866:	cf 93       	push	r28
    3868:	ff 92       	push	r15
    386a:	ef 92       	push	r14
    386c:	83 01       	movw	r16, r6
    386e:	72 01       	movw	r14, r4
    3870:	0e 94 99 10 	call	0x2132	; 0x2132 <_Z12fahradschirmddddm>
			//fahradschirm(geschw,kompass.angle(0,0),strecke,maxgeschw, Fahrtzeit);
			anzeige|=(1<<refreshdisplay);
    3874:	80 91 3f 03 	lds	r24, 0x033F
    3878:	90 91 40 03 	lds	r25, 0x0340
    387c:	90 68       	ori	r25, 0x80	; 128
    387e:	90 93 40 03 	sts	0x0340, r25
    3882:	80 93 3f 03 	sts	0x033F, r24
    3886:	0f 90       	pop	r0
    3888:	0f 90       	pop	r0
    388a:	0f 90       	pop	r0
    388c:	0f 90       	pop	r0
    388e:	0e c0       	rjmp	.+28     	; 0x38ac <_Z14anzeigehandlerv+0x12a>
		}
		else if ((anzeige&(1<<Wanderflag))&&!(anzeige&(1<<Einstellungsflag)))
    3890:	93 ff       	sbrs	r25, 3
    3892:	0c c0       	rjmp	.+24     	; 0x38ac <_Z14anzeigehandlerv+0x12a>
    3894:	94 fd       	sbrc	r25, 4
    3896:	0a c0       	rjmp	.+20     	; 0x38ac <_Z14anzeigehandlerv+0x12a>
		{
			Wanderseite();
    3898:	b9 d8       	rcall	.-3726   	; 0x2a0c <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    389a:	80 91 3f 03 	lds	r24, 0x033F
    389e:	90 91 40 03 	lds	r25, 0x0340
    38a2:	90 68       	ori	r25, 0x80	; 128
    38a4:	90 93 40 03 	sts	0x0340, r25
    38a8:	80 93 3f 03 	sts	0x033F, r24
		}
		statusreg &= ~(1<<updaterate);
    38ac:	80 91 3e 03 	lds	r24, 0x033E
    38b0:	8e 7f       	andi	r24, 0xFE	; 254
    38b2:	80 93 3e 03 	sts	0x033E, r24
	}
	if ((rtc.interupts & (1<<sekundeninterupt)))
    38b6:	80 91 5d 10 	lds	r24, 0x105D
    38ba:	81 ff       	sbrs	r24, 1
    38bc:	c5 c1       	rjmp	.+906    	; 0x3c48 <_Z14anzeigehandlerv+0x4c6>
	{
		rtc.zeit();
    38be:	85 e4       	ldi	r24, 0x45	; 69
    38c0:	90 e1       	ldi	r25, 0x10	; 16
    38c2:	0e 94 12 30 	call	0x6024	; 0x6024 <_ZN3RTC4zeitEv>
		//Handler fuer die Anzeige der Seiten
		//Die einzelnen Funktionen beschreiben nur den Framebuffer und nicht dierekt das Display
		if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))
    38c6:	80 91 3f 03 	lds	r24, 0x033F
    38ca:	90 91 40 03 	lds	r25, 0x0340
    38ce:	9c 01       	movw	r18, r24
    38d0:	22 70       	andi	r18, 0x02	; 2
    38d2:	30 72       	andi	r19, 0x20	; 32
    38d4:	22 30       	cpi	r18, 0x02	; 2
    38d6:	30 42       	sbci	r19, 0x20	; 32
    38d8:	61 f4       	brne	.+24     	; 0x38f2 <_Z14anzeigehandlerv+0x170>
		{
			menue_uhr();
    38da:	0e 94 fe 0d 	call	0x1bfc	; 0x1bfc <_Z9menue_uhrv>
			anzeige|=(1<<refreshdisplay);
    38de:	80 91 3f 03 	lds	r24, 0x033F
    38e2:	90 91 40 03 	lds	r25, 0x0340
    38e6:	90 68       	ori	r25, 0x80	; 128
    38e8:	90 93 40 03 	sts	0x0340, r25
    38ec:	80 93 3f 03 	sts	0x033F, r24
    38f0:	8f c1       	rjmp	.+798    	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
    38f2:	9c 01       	movw	r18, r24
    38f4:	22 27       	eor	r18, r18
    38f6:	30 73       	andi	r19, 0x30	; 48
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))
    38f8:	21 15       	cp	r18, r1
    38fa:	30 43       	sbci	r19, 0x30	; 48
    38fc:	61 f4       	brne	.+24     	; 0x3916 <_Z14anzeigehandlerv+0x194>
		{
			menue_einst();
    38fe:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <_Z11menue_einstv>
			anzeige|=(1<<refreshdisplay);
    3902:	80 91 3f 03 	lds	r24, 0x033F
    3906:	90 91 40 03 	lds	r25, 0x0340
    390a:	90 68       	ori	r25, 0x80	; 128
    390c:	90 93 40 03 	sts	0x0340, r25
    3910:	80 93 3f 03 	sts	0x033F, r24
    3914:	7d c1       	rjmp	.+762    	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<menueflag)))
    3916:	95 ff       	sbrs	r25, 5
    3918:	0c c0       	rjmp	.+24     	; 0x3932 <_Z14anzeigehandlerv+0x1b0>
		{
			menue_haupt();
    391a:	0e 94 b0 0c 	call	0x1960	; 0x1960 <_Z11menue_hauptv>
			anzeige|=(1<<refreshdisplay);
    391e:	80 91 3f 03 	lds	r24, 0x033F
    3922:	90 91 40 03 	lds	r25, 0x0340
    3926:	90 68       	ori	r25, 0x80	; 128
    3928:	90 93 40 03 	sts	0x0340, r25
    392c:	80 93 3f 03 	sts	0x033F, r24
    3930:	6f c1       	rjmp	.+734    	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3932:	91 ff       	sbrs	r25, 1
    3934:	0c c0       	rjmp	.+24     	; 0x394e <_Z14anzeigehandlerv+0x1cc>
		{
			Gaineinstellen();
    3936:	0e 94 15 12 	call	0x242a	; 0x242a <_Z14Gaineinstellenv>
			anzeige|=(1<<refreshdisplay);
    393a:	80 91 3f 03 	lds	r24, 0x033F
    393e:	90 91 40 03 	lds	r25, 0x0340
    3942:	90 68       	ori	r25, 0x80	; 128
    3944:	90 93 40 03 	sts	0x0340, r25
    3948:	80 93 3f 03 	sts	0x033F, r24
    394c:	61 c1       	rjmp	.+706    	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Uhrflag)))
    394e:	81 ff       	sbrs	r24, 1
    3950:	0c c0       	rjmp	.+24     	; 0x396a <_Z14anzeigehandlerv+0x1e8>
		{
			uhranzeigen();
    3952:	0e 94 18 0f 	call	0x1e30	; 0x1e30 <_Z11uhranzeigenv>
			anzeige|=(1<<refreshdisplay);
    3956:	80 91 3f 03 	lds	r24, 0x033F
    395a:	90 91 40 03 	lds	r25, 0x0340
    395e:	90 68       	ori	r25, 0x80	; 128
    3960:	90 93 40 03 	sts	0x0340, r25
    3964:	80 93 3f 03 	sts	0x033F, r24
    3968:	53 c1       	rjmp	.+678    	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Kompasflag)))
    396a:	87 ff       	sbrs	r24, 7
    396c:	1e c0       	rjmp	.+60     	; 0x39aa <_Z14anzeigehandlerv+0x228>
		{
			Accelerometer.readacc();
    396e:	87 e4       	ldi	r24, 0x47	; 71
    3970:	9b e0       	ldi	r25, 0x0B	; 11
    3972:	0e 94 eb 29 	call	0x53d6	; 0x53d6 <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    3976:	e7 e4       	ldi	r30, 0x47	; 71
    3978:	fb e0       	ldi	r31, 0x0B	; 11
    397a:	04 85       	ldd	r16, Z+12	; 0x0c
    397c:	15 85       	ldd	r17, Z+13	; 0x0d
    397e:	26 85       	ldd	r18, Z+14	; 0x0e
    3980:	37 85       	ldd	r19, Z+15	; 0x0f
    3982:	40 85       	ldd	r20, Z+8	; 0x08
    3984:	51 85       	ldd	r21, Z+9	; 0x09
    3986:	62 85       	ldd	r22, Z+10	; 0x0a
    3988:	73 85       	ldd	r23, Z+11	; 0x0b
    398a:	84 e6       	ldi	r24, 0x64	; 100
    398c:	90 e1       	ldi	r25, 0x10	; 16
    398e:	0e 94 97 28 	call	0x512e	; 0x512e <_ZN7Kompass5angleEdd>
    3992:	0e 94 f0 12 	call	0x25e0	; 0x25e0 <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    3996:	80 91 3f 03 	lds	r24, 0x033F
    399a:	90 91 40 03 	lds	r25, 0x0340
    399e:	90 68       	ori	r25, 0x80	; 128
    39a0:	90 93 40 03 	sts	0x0340, r25
    39a4:	80 93 3f 03 	sts	0x033F, r24
    39a8:	33 c1       	rjmp	.+614    	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Fahradflag)))
    39aa:	80 ff       	sbrs	r24, 0
    39ac:	a1 c0       	rjmp	.+322    	; 0x3af0 <_Z14anzeigehandlerv+0x36e>
		{
			if (geschw>maxgeschw)
    39ae:	c0 90 38 03 	lds	r12, 0x0338
    39b2:	d0 90 39 03 	lds	r13, 0x0339
    39b6:	e0 90 3a 03 	lds	r14, 0x033A
    39ba:	f0 90 3b 03 	lds	r15, 0x033B
    39be:	20 91 30 03 	lds	r18, 0x0330
    39c2:	30 91 31 03 	lds	r19, 0x0331
    39c6:	40 91 32 03 	lds	r20, 0x0332
    39ca:	50 91 33 03 	lds	r21, 0x0333
    39ce:	c7 01       	movw	r24, r14
    39d0:	b6 01       	movw	r22, r12
    39d2:	0e 94 24 33 	call	0x6648	; 0x6648 <__gesf2>
    39d6:	18 16       	cp	r1, r24
    39d8:	44 f4       	brge	.+16     	; 0x39ea <_Z14anzeigehandlerv+0x268>
			{
				maxgeschw=geschw;
    39da:	c0 92 30 03 	sts	0x0330, r12
    39de:	d0 92 31 03 	sts	0x0331, r13
    39e2:	e0 92 32 03 	sts	0x0332, r14
    39e6:	f0 92 33 03 	sts	0x0333, r15
			}
			if (geschw >= 1.0)
    39ea:	20 e0       	ldi	r18, 0x00	; 0
    39ec:	30 e0       	ldi	r19, 0x00	; 0
    39ee:	40 e8       	ldi	r20, 0x80	; 128
    39f0:	5f e3       	ldi	r21, 0x3F	; 63
    39f2:	c7 01       	movw	r24, r14
    39f4:	b6 01       	movw	r22, r12
    39f6:	0e 94 24 33 	call	0x6648	; 0x6648 <__gesf2>
    39fa:	88 23       	and	r24, r24
    39fc:	9c f0       	brlt	.+38     	; 0x3a24 <_Z14anzeigehandlerv+0x2a2>
			{
				Fahrtzeit++;
    39fe:	80 91 2c 03 	lds	r24, 0x032C
    3a02:	90 91 2d 03 	lds	r25, 0x032D
    3a06:	a0 91 2e 03 	lds	r26, 0x032E
    3a0a:	b0 91 2f 03 	lds	r27, 0x032F
    3a0e:	01 96       	adiw	r24, 0x01	; 1
    3a10:	a1 1d       	adc	r26, r1
    3a12:	b1 1d       	adc	r27, r1
    3a14:	80 93 2c 03 	sts	0x032C, r24
    3a18:	90 93 2d 03 	sts	0x032D, r25
    3a1c:	a0 93 2e 03 	sts	0x032E, r26
    3a20:	b0 93 2f 03 	sts	0x032F, r27
			}
			strecke+=geschw/3.6;
    3a24:	26 e6       	ldi	r18, 0x66	; 102
    3a26:	36 e6       	ldi	r19, 0x66	; 102
    3a28:	46 e6       	ldi	r20, 0x66	; 102
    3a2a:	50 e4       	ldi	r21, 0x40	; 64
    3a2c:	c7 01       	movw	r24, r14
    3a2e:	b6 01       	movw	r22, r12
    3a30:	0e 94 7b 31 	call	0x62f6	; 0x62f6 <__divsf3>
    3a34:	9b 01       	movw	r18, r22
    3a36:	ac 01       	movw	r20, r24
    3a38:	60 91 34 03 	lds	r22, 0x0334
    3a3c:	70 91 35 03 	lds	r23, 0x0335
    3a40:	80 91 36 03 	lds	r24, 0x0336
    3a44:	90 91 37 03 	lds	r25, 0x0337
    3a48:	0e 94 ae 30 	call	0x615c	; 0x615c <__addsf3>
    3a4c:	60 93 34 03 	sts	0x0334, r22
    3a50:	70 93 35 03 	sts	0x0335, r23
    3a54:	80 93 36 03 	sts	0x0336, r24
    3a58:	90 93 37 03 	sts	0x0337, r25
			Accelerometer.readacc();
    3a5c:	87 e4       	ldi	r24, 0x47	; 71
    3a5e:	9b e0       	ldi	r25, 0x0B	; 11
    3a60:	0e 94 eb 29 	call	0x53d6	; 0x53d6 <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    3a64:	e0 90 2c 03 	lds	r14, 0x032C
    3a68:	f0 90 2d 03 	lds	r15, 0x032D
    3a6c:	c0 91 2e 03 	lds	r28, 0x032E
    3a70:	d0 91 2f 03 	lds	r29, 0x032F
    3a74:	a0 90 30 03 	lds	r10, 0x0330
    3a78:	b0 90 31 03 	lds	r11, 0x0331
    3a7c:	c0 90 32 03 	lds	r12, 0x0332
    3a80:	d0 90 33 03 	lds	r13, 0x0333
    3a84:	40 90 34 03 	lds	r4, 0x0334
    3a88:	50 90 35 03 	lds	r5, 0x0335
    3a8c:	60 90 36 03 	lds	r6, 0x0336
    3a90:	70 90 37 03 	lds	r7, 0x0337
    3a94:	e7 e4       	ldi	r30, 0x47	; 71
    3a96:	fb e0       	ldi	r31, 0x0B	; 11
    3a98:	04 85       	ldd	r16, Z+12	; 0x0c
    3a9a:	15 85       	ldd	r17, Z+13	; 0x0d
    3a9c:	26 85       	ldd	r18, Z+14	; 0x0e
    3a9e:	37 85       	ldd	r19, Z+15	; 0x0f
    3aa0:	40 85       	ldd	r20, Z+8	; 0x08
    3aa2:	51 85       	ldd	r21, Z+9	; 0x09
    3aa4:	62 85       	ldd	r22, Z+10	; 0x0a
    3aa6:	73 85       	ldd	r23, Z+11	; 0x0b
    3aa8:	84 e6       	ldi	r24, 0x64	; 100
    3aaa:	90 e1       	ldi	r25, 0x10	; 16
    3aac:	0e 94 97 28 	call	0x512e	; 0x512e <_ZN7Kompass5angleEdd>
    3ab0:	9b 01       	movw	r18, r22
    3ab2:	ac 01       	movw	r20, r24
    3ab4:	60 91 38 03 	lds	r22, 0x0338
    3ab8:	70 91 39 03 	lds	r23, 0x0339
    3abc:	80 91 3a 03 	lds	r24, 0x033A
    3ac0:	90 91 3b 03 	lds	r25, 0x033B
    3ac4:	df 93       	push	r29
    3ac6:	cf 93       	push	r28
    3ac8:	ff 92       	push	r15
    3aca:	ef 92       	push	r14
    3acc:	83 01       	movw	r16, r6
    3ace:	72 01       	movw	r14, r4
    3ad0:	0e 94 99 10 	call	0x2132	; 0x2132 <_Z12fahradschirmddddm>
			//Fuer Testzwecke entfernt um neue Methode zu testen, siehe Oben
			//if (rtc.Sekunden%2)
			//{
				//geschw=0;
			//}
			anzeige|=(1<<refreshdisplay);
    3ad4:	80 91 3f 03 	lds	r24, 0x033F
    3ad8:	90 91 40 03 	lds	r25, 0x0340
    3adc:	90 68       	ori	r25, 0x80	; 128
    3ade:	90 93 40 03 	sts	0x0340, r25
    3ae2:	80 93 3f 03 	sts	0x033F, r24
    3ae6:	0f 90       	pop	r0
    3ae8:	0f 90       	pop	r0
    3aea:	0f 90       	pop	r0
    3aec:	0f 90       	pop	r0
    3aee:	90 c0       	rjmp	.+288    	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    3af0:	83 ff       	sbrs	r24, 3
    3af2:	0c c0       	rjmp	.+24     	; 0x3b0c <_Z14anzeigehandlerv+0x38a>
		{
			Stoppuhrseite();
    3af4:	0e 94 4a 14 	call	0x2894	; 0x2894 <_Z13Stoppuhrseitev>
			anzeige|=(1<<refreshdisplay);
    3af8:	80 91 3f 03 	lds	r24, 0x033F
    3afc:	90 91 40 03 	lds	r25, 0x0340
    3b00:	90 68       	ori	r25, 0x80	; 128
    3b02:	90 93 40 03 	sts	0x0340, r25
    3b06:	80 93 3f 03 	sts	0x033F, r24
    3b0a:	82 c0       	rjmp	.+260    	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Timerflag)))
    3b0c:	82 ff       	sbrs	r24, 2
    3b0e:	18 c0       	rjmp	.+48     	; 0x3b40 <_Z14anzeigehandlerv+0x3be>
		{
			if (rtc.interupts&(1<<Alarm))
    3b10:	20 91 5d 10 	lds	r18, 0x105D
    3b14:	20 ff       	sbrs	r18, 0
    3b16:	08 c0       	rjmp	.+16     	; 0x3b28 <_Z14anzeigehandlerv+0x3a6>
			{
				anzeige |= (1<<blinkflag);
    3b18:	90 64       	ori	r25, 0x40	; 64
    3b1a:	90 93 40 03 	sts	0x0340, r25
    3b1e:	80 93 3f 03 	sts	0x033F, r24
				rtc.interupts &= ~(1<<Alarm);
    3b22:	2e 7f       	andi	r18, 0xFE	; 254
    3b24:	20 93 5d 10 	sts	0x105D, r18
			}
			timerseite();
    3b28:	0e 94 83 13 	call	0x2706	; 0x2706 <_Z10timerseitev>
			anzeige|=(1<<refreshdisplay);
    3b2c:	80 91 3f 03 	lds	r24, 0x033F
    3b30:	90 91 40 03 	lds	r25, 0x0340
    3b34:	90 68       	ori	r25, 0x80	; 128
    3b36:	90 93 40 03 	sts	0x0340, r25
    3b3a:	80 93 3f 03 	sts	0x033F, r24
    3b3e:	68 c0       	rjmp	.+208    	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Druckflag)))
    3b40:	92 ff       	sbrs	r25, 2
    3b42:	10 c0       	rjmp	.+32     	; 0x3b64 <_Z14anzeigehandlerv+0x3e2>
		{
			gol.iteration();
    3b44:	85 e4       	ldi	r24, 0x45	; 69
    3b46:	93 e0       	ldi	r25, 0x03	; 3
    3b48:	0e 94 e6 25 	call	0x4bcc	; 0x4bcc <_ZN3GOL9iterationEv>
			GOL_seite();
    3b4c:	0e 94 a4 0c 	call	0x1948	; 0x1948 <_Z9GOL_seitev>
			anzeige |= (1<<refreshdisplay);
    3b50:	80 91 3f 03 	lds	r24, 0x033F
    3b54:	90 91 40 03 	lds	r25, 0x0340
    3b58:	90 68       	ori	r25, 0x80	; 128
    3b5a:	90 93 40 03 	sts	0x0340, r25
    3b5e:	80 93 3f 03 	sts	0x033F, r24
    3b62:	56 c0       	rjmp	.+172    	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Einstellungsflag)&&(anzeige&(1<<Wanderflag))))
    3b64:	ac 01       	movw	r20, r24
    3b66:	44 27       	eor	r20, r20
    3b68:	58 70       	andi	r21, 0x08	; 8
    3b6a:	9c 01       	movw	r18, r24
    3b6c:	22 27       	eor	r18, r18
    3b6e:	38 71       	andi	r19, 0x18	; 24
    3b70:	21 15       	cp	r18, r1
    3b72:	38 41       	sbci	r19, 0x18	; 24
    3b74:	41 f5       	brne	.+80     	; 0x3bc6 <_Z14anzeigehandlerv+0x444>
		{
			if (pos<7)
    3b76:	80 91 3d 03 	lds	r24, 0x033D
    3b7a:	87 30       	cpi	r24, 0x07	; 7
    3b7c:	18 f4       	brcc	.+6      	; 0x3b84 <_Z14anzeigehandlerv+0x402>
			{
				pos--;
    3b7e:	81 50       	subi	r24, 0x01	; 1
    3b80:	80 93 3d 03 	sts	0x033D, r24
			}
			if (pos<6)
    3b84:	80 91 3d 03 	lds	r24, 0x033D
    3b88:	86 30       	cpi	r24, 0x06	; 6
    3b8a:	20 f4       	brcc	.+8      	; 0x3b94 <_Z14anzeigehandlerv+0x412>
			{
				Accelerometer.get_gravity();
    3b8c:	87 e4       	ldi	r24, 0x47	; 71
    3b8e:	9b e0       	ldi	r25, 0x0B	; 11
    3b90:	0e 94 ae 2b 	call	0x575c	; 0x575c <_ZN7LSM303D11get_gravityEv>
			}
			if (pos==0)
    3b94:	80 91 3d 03 	lds	r24, 0x033D
    3b98:	81 11       	cpse	r24, r1
    3b9a:	09 c0       	rjmp	.+18     	; 0x3bae <_Z14anzeigehandlerv+0x42c>
			{
				anzeige &= ~(1<<Einstellungsflag);
    3b9c:	80 91 3f 03 	lds	r24, 0x033F
    3ba0:	90 91 40 03 	lds	r25, 0x0340
    3ba4:	9f 7e       	andi	r25, 0xEF	; 239
    3ba6:	90 93 40 03 	sts	0x0340, r25
    3baa:	80 93 3f 03 	sts	0x033F, r24
			}
			find_gravity();
    3bae:	0e 94 94 0e 	call	0x1d28	; 0x1d28 <_Z12find_gravityv>
			anzeige |= (1<<refreshdisplay);
    3bb2:	80 91 3f 03 	lds	r24, 0x033F
    3bb6:	90 91 40 03 	lds	r25, 0x0340
    3bba:	90 68       	ori	r25, 0x80	; 128
    3bbc:	90 93 40 03 	sts	0x0340, r25
    3bc0:	80 93 3f 03 	sts	0x033F, r24
    3bc4:	25 c0       	rjmp	.+74     	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
		}
		else if ((anzeige&(1<<Wanderflag)))
    3bc6:	45 2b       	or	r20, r21
    3bc8:	99 f0       	breq	.+38     	; 0x3bf0 <_Z14anzeigehandlerv+0x46e>
		{
			Accelerometer.schritt(rtc.Sekunden%2);
    3bca:	60 91 57 10 	lds	r22, 0x1057
    3bce:	61 70       	andi	r22, 0x01	; 1
    3bd0:	87 e4       	ldi	r24, 0x47	; 71
    3bd2:	9b e0       	ldi	r25, 0x0B	; 11
    3bd4:	0e 94 10 2c 	call	0x5820	; 0x5820 <_ZN7LSM303D7schrittEh>
			Wanderseite();
    3bd8:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    3bdc:	80 91 3f 03 	lds	r24, 0x033F
    3be0:	90 91 40 03 	lds	r25, 0x0340
    3be4:	90 68       	ori	r25, 0x80	; 128
    3be6:	90 93 40 03 	sts	0x0340, r25
    3bea:	80 93 3f 03 	sts	0x033F, r24
    3bee:	10 c0       	rjmp	.+32     	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
    3bf0:	80 74       	andi	r24, 0x40	; 64
    3bf2:	90 71       	andi	r25, 0x10	; 16
		}
		else if ((anzeige&(1<<Weckeranzeigeflag))&&(anzeige&(1<<Einstellungsflag)))
    3bf4:	80 34       	cpi	r24, 0x40	; 64
    3bf6:	90 41       	sbci	r25, 0x10	; 16
    3bf8:	59 f4       	brne	.+22     	; 0x3c10 <_Z14anzeigehandlerv+0x48e>
		{
			Weckeranzeige();
    3bfa:	0e 94 05 10 	call	0x200a	; 0x200a <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3bfe:	80 91 3f 03 	lds	r24, 0x033F
    3c02:	90 91 40 03 	lds	r25, 0x0340
    3c06:	90 68       	ori	r25, 0x80	; 128
    3c08:	90 93 40 03 	sts	0x0340, r25
    3c0c:	80 93 3f 03 	sts	0x033F, r24
		}
		if ((anzeige&(1<<blinkflag)))
    3c10:	80 91 3f 03 	lds	r24, 0x033F
    3c14:	90 91 40 03 	lds	r25, 0x0340
    3c18:	96 ff       	sbrs	r25, 6
    3c1a:	0f c0       	rjmp	.+30     	; 0x3c3a <_Z14anzeigehandlerv+0x4b8>
		{
			oled.invert(rtc.Sekunden%2);
    3c1c:	60 91 57 10 	lds	r22, 0x1057
    3c20:	61 70       	andi	r22, 0x01	; 1
    3c22:	84 e4       	ldi	r24, 0x44	; 68
    3c24:	9c e0       	ldi	r25, 0x0C	; 12
    3c26:	0e 94 51 03 	call	0x6a2	; 0x6a2 <_ZN7Display6invertEh>
			LED.toggle();
    3c2a:	86 e3       	ldi	r24, 0x36	; 54
    3c2c:	9c e0       	ldi	r25, 0x0C	; 12
    3c2e:	0e 94 d4 2e 	call	0x5da8	; 0x5da8 <_ZN6Output6toggleEv>
			Vibrationsmotor.on();
    3c32:	84 e3       	ldi	r24, 0x34	; 52
    3c34:	9c e0       	ldi	r25, 0x0C	; 12
    3c36:	0e 94 1b 2e 	call	0x5c36	; 0x5c36 <_ZN6Output2onEv>
		}
		FPS=0;
    3c3a:	10 92 3c 03 	sts	0x033C, r1
		rtc.interupts&=~(1<<sekundeninterupt);
    3c3e:	e5 e4       	ldi	r30, 0x45	; 69
    3c40:	f0 e1       	ldi	r31, 0x10	; 16
    3c42:	80 8d       	ldd	r24, Z+24	; 0x18
    3c44:	8d 7f       	andi	r24, 0xFD	; 253
    3c46:	80 8f       	std	Z+24, r24	; 0x18
	}
	//Minuteninterrupt
	if ((rtc.interupts&(1<<minuteninterupt)))
    3c48:	80 91 5d 10 	lds	r24, 0x105D
    3c4c:	82 ff       	sbrs	r24, 2
    3c4e:	22 c0       	rjmp	.+68     	; 0x3c94 <_Z14anzeigehandlerv+0x512>
	{
		if ((anzeige&(1<<Uhrflaggross)))
    3c50:	80 91 3f 03 	lds	r24, 0x033F
    3c54:	85 ff       	sbrs	r24, 5
    3c56:	0c c0       	rjmp	.+24     	; 0x3c70 <_Z14anzeigehandlerv+0x4ee>
		{
			uhranzeigenmin();
    3c58:	0e 94 ac 0f 	call	0x1f58	; 0x1f58 <_Z14uhranzeigenminv>
			anzeige|=(1<<refreshdisplay);
    3c5c:	80 91 3f 03 	lds	r24, 0x033F
    3c60:	90 91 40 03 	lds	r25, 0x0340
    3c64:	90 68       	ori	r25, 0x80	; 128
    3c66:	90 93 40 03 	sts	0x0340, r25
    3c6a:	80 93 3f 03 	sts	0x033F, r24
    3c6e:	0d c0       	rjmp	.+26     	; 0x3c8a <_Z14anzeigehandlerv+0x508>
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    3c70:	86 ff       	sbrs	r24, 6
    3c72:	0b c0       	rjmp	.+22     	; 0x3c8a <_Z14anzeigehandlerv+0x508>
		{
			Weckeranzeige();
    3c74:	0e 94 05 10 	call	0x200a	; 0x200a <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3c78:	80 91 3f 03 	lds	r24, 0x033F
    3c7c:	90 91 40 03 	lds	r25, 0x0340
    3c80:	90 68       	ori	r25, 0x80	; 128
    3c82:	90 93 40 03 	sts	0x0340, r25
    3c86:	80 93 3f 03 	sts	0x033F, r24
		}
		rtc.interupts&=~(1<<minuteninterupt);
    3c8a:	e5 e4       	ldi	r30, 0x45	; 69
    3c8c:	f0 e1       	ldi	r31, 0x10	; 16
    3c8e:	80 8d       	ldd	r24, Z+24	; 0x18
    3c90:	8b 7f       	andi	r24, 0xFB	; 251
    3c92:	80 8f       	std	Z+24, r24	; 0x18
	}
	//neuen Framebuffer an das Dispay senden
	if ((anzeige&(1<<refreshdisplay)))
    3c94:	80 91 3f 03 	lds	r24, 0x033F
    3c98:	90 91 40 03 	lds	r25, 0x0340
    3c9c:	99 23       	and	r25, r25
    3c9e:	6c f4       	brge	.+26     	; 0x3cba <_Z14anzeigehandlerv+0x538>
	{
		oled.sendFrame();
    3ca0:	84 e4       	ldi	r24, 0x44	; 68
    3ca2:	9c e0       	ldi	r25, 0x0C	; 12
    3ca4:	0e 94 59 03 	call	0x6b2	; 0x6b2 <_ZN7Display9sendFrameEv>
		anzeige&=~(1<<refreshdisplay);
    3ca8:	80 91 3f 03 	lds	r24, 0x033F
    3cac:	90 91 40 03 	lds	r25, 0x0340
    3cb0:	9f 77       	andi	r25, 0x7F	; 127
    3cb2:	90 93 40 03 	sts	0x0340, r25
    3cb6:	80 93 3f 03 	sts	0x033F, r24
	}
}
    3cba:	df 91       	pop	r29
    3cbc:	cf 91       	pop	r28
    3cbe:	1f 91       	pop	r17
    3cc0:	0f 91       	pop	r16
    3cc2:	ff 90       	pop	r15
    3cc4:	ef 90       	pop	r14
    3cc6:	df 90       	pop	r13
    3cc8:	cf 90       	pop	r12
    3cca:	bf 90       	pop	r11
    3ccc:	af 90       	pop	r10
    3cce:	7f 90       	pop	r7
    3cd0:	6f 90       	pop	r6
    3cd2:	5f 90       	pop	r5
    3cd4:	4f 90       	pop	r4
    3cd6:	08 95       	ret

00003cd8 <_Z14eingabehandlerh>:

void eingabehandler(uint8_t taste){
	if (taste!='A')
    3cd8:	81 34       	cpi	r24, 0x41	; 65
    3cda:	09 f4       	brne	.+2      	; 0x3cde <_Z14eingabehandlerh+0x6>
    3cdc:	cc c4       	rjmp	.+2456   	; 0x4676 <__stack+0x577>
	{
		rtc.interupts |= (1<<sekundeninterupt);
    3cde:	e5 e4       	ldi	r30, 0x45	; 69
    3ce0:	f0 e1       	ldi	r31, 0x10	; 16
    3ce2:	90 8d       	ldd	r25, Z+24	; 0x18
    3ce4:	29 2f       	mov	r18, r25
    3ce6:	22 60       	ori	r18, 0x02	; 2
    3ce8:	20 8f       	std	Z+24, r18	; 0x18
		if (anzeige==255)
    3cea:	20 91 3f 03 	lds	r18, 0x033F
    3cee:	30 91 40 03 	lds	r19, 0x0340
    3cf2:	2f 3f       	cpi	r18, 0xFF	; 255
    3cf4:	31 05       	cpc	r19, r1
    3cf6:	61 f4       	brne	.+24     	; 0x3d10 <_Z14eingabehandlerh+0x38>
		{
			oled.ssd1306_command(SSD1306_DISPLAYON);
    3cf8:	6f ea       	ldi	r22, 0xAF	; 175
    3cfa:	84 e4       	ldi	r24, 0x44	; 68
    3cfc:	9c e0       	ldi	r25, 0x0C	; 12
    3cfe:	0e 94 da 02 	call	0x5b4	; 0x5b4 <_ZN7Display15ssd1306_commandEh>
			//entweder display aus oder das Menue starten
			anzeige=(1<<menueflag);
    3d02:	80 e0       	ldi	r24, 0x00	; 0
    3d04:	90 e2       	ldi	r25, 0x20	; 32
    3d06:	90 93 40 03 	sts	0x0340, r25
    3d0a:	80 93 3f 03 	sts	0x033F, r24
    3d0e:	08 95       	ret
    3d10:	a9 01       	movw	r20, r18
    3d12:	42 70       	andi	r20, 0x02	; 2
    3d14:	50 72       	andi	r21, 0x20	; 32
		}
		//gleicher Handler wie oben, aber hier speziell fuer die Bearbeitung von Tastereingaben mit switch fuer die Tasten
		//es sind einfach so viele Tasten moeglich
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))	//Menue der Uhr
    3d16:	42 30       	cpi	r20, 0x02	; 2
    3d18:	50 42       	sbci	r21, 0x20	; 32
    3d1a:	e9 f5       	brne	.+122    	; 0x3d96 <_Z14eingabehandlerh+0xbe>
		{
			anzeige&=~((1<<menueflag)|(1<<Uhrflag));
    3d1c:	2d 7f       	andi	r18, 0xFD	; 253
    3d1e:	3f 7d       	andi	r19, 0xDF	; 223
			switch (taste)
    3d20:	83 33       	cpi	r24, 0x33	; 51
    3d22:	c1 f0       	breq	.+48     	; 0x3d54 <_Z14eingabehandlerh+0x7c>
    3d24:	28 f4       	brcc	.+10     	; 0x3d30 <_Z14eingabehandlerh+0x58>
    3d26:	81 33       	cpi	r24, 0x31	; 49
    3d28:	41 f0       	breq	.+16     	; 0x3d3a <_Z14eingabehandlerh+0x62>
    3d2a:	82 33       	cpi	r24, 0x32	; 50
    3d2c:	61 f0       	breq	.+24     	; 0x3d46 <_Z14eingabehandlerh+0x6e>
    3d2e:	2c c0       	rjmp	.+88     	; 0x3d88 <_Z14eingabehandlerh+0xb0>
    3d30:	84 33       	cpi	r24, 0x34	; 52
    3d32:	b9 f0       	breq	.+46     	; 0x3d62 <_Z14eingabehandlerh+0x8a>
    3d34:	85 33       	cpi	r24, 0x35	; 53
    3d36:	f1 f0       	breq	.+60     	; 0x3d74 <_Z14eingabehandlerh+0x9c>
    3d38:	27 c0       	rjmp	.+78     	; 0x3d88 <_Z14eingabehandlerh+0xb0>
			{
				case '1':
				//Wechseln auf die Uhr
				anzeige|=(1<<Uhrflag);
    3d3a:	22 60       	ori	r18, 0x02	; 2
    3d3c:	30 93 40 03 	sts	0x0340, r19
    3d40:	20 93 3f 03 	sts	0x033F, r18
				break;
    3d44:	08 95       	ret
				
				case '2':
				//starten der Stoppuhr APP
				anzeige|=(1<<refreshdisplay) | (1<<Stoppuhrflag);
    3d46:	28 60       	ori	r18, 0x08	; 8
    3d48:	30 68       	ori	r19, 0x80	; 128
    3d4a:	30 93 40 03 	sts	0x0340, r19
    3d4e:	20 93 3f 03 	sts	0x033F, r18
				break;
    3d52:	08 95       	ret
				
				case '3':
				//Starten der Timer APP	
				anzeige|=(1<<Timerflag) | (1<<Einstellungsflag);
    3d54:	24 60       	ori	r18, 0x04	; 4
    3d56:	30 61       	ori	r19, 0x10	; 16
    3d58:	30 93 40 03 	sts	0x0340, r19
    3d5c:	20 93 3f 03 	sts	0x033F, r18
				break;
    3d60:	08 95       	ret
				
				case '4':
				rtc.interupts |=(1<<minuteninterupt);
    3d62:	96 60       	ori	r25, 0x06	; 6
    3d64:	90 93 5d 10 	sts	0x105D, r25
				anzeige |= (1<<Weckeranzeigeflag);
    3d68:	20 64       	ori	r18, 0x40	; 64
    3d6a:	30 93 40 03 	sts	0x0340, r19
    3d6e:	20 93 3f 03 	sts	0x033F, r18
				break;
    3d72:	08 95       	ret
				
				case '5':
				//Wechseln auf grosse Uhr
				rtc.interupts |=(1<<minuteninterupt);
    3d74:	96 60       	ori	r25, 0x06	; 6
    3d76:	90 93 5d 10 	sts	0x105D, r25
				anzeige |=(1<<Uhrflaggross) | (1<<refreshdisplay);
    3d7a:	20 62       	ori	r18, 0x20	; 32
    3d7c:	30 68       	ori	r19, 0x80	; 128
    3d7e:	30 93 40 03 	sts	0x0340, r19
    3d82:	20 93 3f 03 	sts	0x033F, r18
				break;
    3d86:	08 95       	ret
				
				default:
				//menueflag erneu setzen
				anzeige|=(1<<menueflag)|(1<<Uhrflag);
    3d88:	22 60       	ori	r18, 0x02	; 2
    3d8a:	30 62       	ori	r19, 0x20	; 32
    3d8c:	30 93 40 03 	sts	0x0340, r19
    3d90:	20 93 3f 03 	sts	0x033F, r18
				break;
    3d94:	44 c4       	rjmp	.+2184   	; 0x461e <__stack+0x51f>
    3d96:	a9 01       	movw	r20, r18
    3d98:	44 27       	eor	r20, r20
    3d9a:	50 73       	andi	r21, 0x30	; 48
			}
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))	//Menue der Einstellungen
    3d9c:	41 15       	cp	r20, r1
    3d9e:	50 43       	sbci	r21, 0x30	; 48
    3da0:	09 f0       	breq	.+2      	; 0x3da4 <_Z14eingabehandlerh+0xcc>
    3da2:	55 c0       	rjmp	.+170    	; 0x3e4e <_Z14eingabehandlerh+0x176>
		{
			anzeige&=~((1<<menueflag)|(1<<Einstellungsflag));
    3da4:	3f 7c       	andi	r19, 0xCF	; 207
    3da6:	30 93 40 03 	sts	0x0340, r19
    3daa:	20 93 3f 03 	sts	0x033F, r18
			switch (taste)
    3dae:	83 33       	cpi	r24, 0x33	; 51
    3db0:	f9 f0       	breq	.+62     	; 0x3df0 <_Z14eingabehandlerh+0x118>
    3db2:	28 f4       	brcc	.+10     	; 0x3dbe <_Z14eingabehandlerh+0xe6>
    3db4:	81 33       	cpi	r24, 0x31	; 49
    3db6:	41 f0       	breq	.+16     	; 0x3dc8 <_Z14eingabehandlerh+0xf0>
    3db8:	82 33       	cpi	r24, 0x32	; 50
    3dba:	a1 f0       	breq	.+40     	; 0x3de4 <_Z14eingabehandlerh+0x10c>
    3dbc:	42 c0       	rjmp	.+132    	; 0x3e42 <_Z14eingabehandlerh+0x16a>
    3dbe:	84 33       	cpi	r24, 0x34	; 52
    3dc0:	41 f1       	breq	.+80     	; 0x3e12 <_Z14eingabehandlerh+0x13a>
    3dc2:	85 33       	cpi	r24, 0x35	; 53
    3dc4:	69 f1       	breq	.+90     	; 0x3e20 <_Z14eingabehandlerh+0x148>
    3dc6:	3d c0       	rjmp	.+122    	; 0x3e42 <_Z14eingabehandlerh+0x16a>
			{
				case '1':
				//zuruecksetzen der Kalibrierung, da passive Kallibrierung eingebaut
				kompass.kallibrierung_ruecksetzen();
    3dc8:	84 e6       	ldi	r24, 0x64	; 100
    3dca:	90 e1       	ldi	r25, 0x10	; 16
    3dcc:	0e 94 d4 29 	call	0x53a8	; 0x53a8 <_ZN7Kompass25kallibrierung_ruecksetzenEv>
				anzeige|=(1<<Kompasflag);
    3dd0:	80 91 3f 03 	lds	r24, 0x033F
    3dd4:	90 91 40 03 	lds	r25, 0x0340
    3dd8:	80 68       	ori	r24, 0x80	; 128
    3dda:	90 93 40 03 	sts	0x0340, r25
    3dde:	80 93 3f 03 	sts	0x033F, r24
				break;
    3de2:	08 95       	ret
				case '2':
				//Gaineinstellung fuer den Kompass
				anzeige|=(1<<Kompasgaineinstellenflag);
    3de4:	32 60       	ori	r19, 0x02	; 2
    3de6:	30 93 40 03 	sts	0x0340, r19
    3dea:	20 93 3f 03 	sts	0x033F, r18
				break;
    3dee:	08 95       	ret
				case '3':
				//dies ist eine der wenigen Funktinen, die die Handler Strucktur nicht anwenden, da sie die rtc anhaellt
				uhreinstellen();
    3df0:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <_Z13uhreinstellenv>
				rtc.interupts |= (1<<minuteninterupt);
    3df4:	e5 e4       	ldi	r30, 0x45	; 69
    3df6:	f0 e1       	ldi	r31, 0x10	; 16
    3df8:	80 8d       	ldd	r24, Z+24	; 0x18
    3dfa:	84 60       	ori	r24, 0x04	; 4
    3dfc:	80 8f       	std	Z+24, r24	; 0x18
				anzeige|=(1<<Uhrflaggross);
    3dfe:	80 91 3f 03 	lds	r24, 0x033F
    3e02:	90 91 40 03 	lds	r25, 0x0340
    3e06:	80 62       	ori	r24, 0x20	; 32
    3e08:	90 93 40 03 	sts	0x0340, r25
    3e0c:	80 93 3f 03 	sts	0x033F, r24
				break;
    3e10:	08 95       	ret
				case '4':
				anzeige |= (1<<Einstellungsflag) | (1<<Weckeranzeigeflag);
    3e12:	20 64       	ori	r18, 0x40	; 64
    3e14:	30 61       	ori	r19, 0x10	; 16
    3e16:	30 93 40 03 	sts	0x0340, r19
    3e1a:	20 93 3f 03 	sts	0x033F, r18
				break;
    3e1e:	08 95       	ret
				case '5':
				Accelerometer.ACCStreammode();
    3e20:	87 e4       	ldi	r24, 0x47	; 71
    3e22:	9b e0       	ldi	r25, 0x0B	; 11
    3e24:	0e 94 55 2b 	call	0x56aa	; 0x56aa <_ZN7LSM303D13ACCStreammodeEv>
				pos=7;
    3e28:	87 e0       	ldi	r24, 0x07	; 7
    3e2a:	80 93 3d 03 	sts	0x033D, r24
				anzeige |= (1<<Einstellungsflag) | (1<<Wanderflag);
    3e2e:	80 91 3f 03 	lds	r24, 0x033F
    3e32:	90 91 40 03 	lds	r25, 0x0340
    3e36:	98 61       	ori	r25, 0x18	; 24
    3e38:	90 93 40 03 	sts	0x0340, r25
    3e3c:	80 93 3f 03 	sts	0x033F, r24
				break;
    3e40:	08 95       	ret
				default:
				//Menueflag neu setzten
				anzeige|=(1<<menueflag)|(1<<Einstellungsflag);
    3e42:	30 63       	ori	r19, 0x30	; 48
    3e44:	30 93 40 03 	sts	0x0340, r19
    3e48:	20 93 3f 03 	sts	0x033F, r18
				break;
    3e4c:	e8 c3       	rjmp	.+2000   	; 0x461e <__stack+0x51f>
			}
		}
		else if ((anzeige&(1<<menueflag)))	//nur das grosse menue
    3e4e:	35 ff       	sbrs	r19, 5
    3e50:	5b c0       	rjmp	.+182    	; 0x3f08 <_Z14eingabehandlerh+0x230>
		{
			anzeige&=~(1<<menueflag);
    3e52:	3f 7d       	andi	r19, 0xDF	; 223
    3e54:	30 93 40 03 	sts	0x0340, r19
    3e58:	20 93 3f 03 	sts	0x033F, r18
			switch (taste)
    3e5c:	48 2f       	mov	r20, r24
    3e5e:	50 e0       	ldi	r21, 0x00	; 0
    3e60:	fa 01       	movw	r30, r20
    3e62:	f1 97       	sbiw	r30, 0x31	; 49
    3e64:	e7 30       	cpi	r30, 0x07	; 7
    3e66:	f1 05       	cpc	r31, r1
    3e68:	08 f0       	brcs	.+2      	; 0x3e6c <_Z14eingabehandlerh+0x194>
    3e6a:	48 c0       	rjmp	.+144    	; 0x3efc <_Z14eingabehandlerh+0x224>
    3e6c:	e0 5b       	subi	r30, 0xB0	; 176
    3e6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e70:	0c 94 f4 37 	jmp	0x6fe8	; 0x6fe8 <__tablejump2__>
			{
				case '1':
				anzeige|=(1<<Fahradflag);
    3e74:	21 60       	ori	r18, 0x01	; 1
    3e76:	30 93 40 03 	sts	0x0340, r19
    3e7a:	20 93 3f 03 	sts	0x033F, r18
				//starten des Timers fuer die geschwindigkeit
				inittimer(1);
    3e7e:	81 e0       	ldi	r24, 0x01	; 1
    3e80:	ae cb       	rjmp	.-2212   	; 0x35de <_Z9inittimerh>
				break;
    3e82:	08 95       	ret
				
				case '2':
				//Wanderanzeige schalten
				Accelerometer.ACCStreammode();
    3e84:	87 e4       	ldi	r24, 0x47	; 71
    3e86:	9b e0       	ldi	r25, 0x0B	; 11
    3e88:	0e 94 55 2b 	call	0x56aa	; 0x56aa <_ZN7LSM303D13ACCStreammodeEv>
				anzeige|=(1<<refreshdisplay) | (1<<Wanderflag);
    3e8c:	80 91 3f 03 	lds	r24, 0x033F
    3e90:	90 91 40 03 	lds	r25, 0x0340
    3e94:	98 68       	ori	r25, 0x88	; 136
    3e96:	90 93 40 03 	sts	0x0340, r25
    3e9a:	80 93 3f 03 	sts	0x033F, r24
				break;
    3e9e:	08 95       	ret
				
				case '3':
				anzeige|=(1<<Kompasflag);
    3ea0:	20 68       	ori	r18, 0x80	; 128
    3ea2:	30 93 40 03 	sts	0x0340, r19
    3ea6:	20 93 3f 03 	sts	0x033F, r18
				break;
    3eaa:	08 95       	ret
				
				case '4':
				//Menue der Uhr
				anzeige|=(1<<menueflag) | (1<<Uhrflag);
    3eac:	22 60       	ori	r18, 0x02	; 2
    3eae:	30 62       	ori	r19, 0x20	; 32
    3eb0:	30 93 40 03 	sts	0x0340, r19
    3eb4:	20 93 3f 03 	sts	0x033F, r18
				break;
    3eb8:	08 95       	ret
				
				case '5':
				//menue der Einstellungen
				anzeige|=(1<<menueflag) | (1<<Einstellungsflag);
    3eba:	30 63       	ori	r19, 0x30	; 48
    3ebc:	30 93 40 03 	sts	0x0340, r19
    3ec0:	20 93 3f 03 	sts	0x033F, r18
				break;
    3ec4:	08 95       	ret
				
				case '6':
				//Display ausschalten
				//anzeige=255;
				oled.clearFrame();
    3ec6:	84 e4       	ldi	r24, 0x44	; 68
    3ec8:	9c e0       	ldi	r25, 0x0C	; 12
    3eca:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <_ZN7Display10clearFrameEv>
				anzeige|=(1<<refreshdisplay);
    3ece:	80 91 3f 03 	lds	r24, 0x033F
    3ed2:	90 91 40 03 	lds	r25, 0x0340
    3ed6:	90 68       	ori	r25, 0x80	; 128
    3ed8:	90 93 40 03 	sts	0x0340, r25
    3edc:	80 93 3f 03 	sts	0x033F, r24
				break;
    3ee0:	08 95       	ret
				case '7':
				gol.set_startvalue();
    3ee2:	85 e4       	ldi	r24, 0x45	; 69
    3ee4:	93 e0       	ldi	r25, 0x03	; 3
    3ee6:	4e d4       	rcall	.+2204   	; 0x4784 <_ZN3GOL14set_startvalueEv>
				anzeige |= (1<<Druckflag);
    3ee8:	80 91 3f 03 	lds	r24, 0x033F
    3eec:	90 91 40 03 	lds	r25, 0x0340
    3ef0:	94 60       	ori	r25, 0x04	; 4
    3ef2:	90 93 40 03 	sts	0x0340, r25
    3ef6:	80 93 3f 03 	sts	0x033F, r24
				break;
    3efa:	08 95       	ret
				default:
				//menueflag erneut setzen um abschalten zu verhindern
				anzeige|=(1<<menueflag);
    3efc:	30 62       	ori	r19, 0x20	; 32
    3efe:	30 93 40 03 	sts	0x0340, r19
    3f02:	20 93 3f 03 	sts	0x033F, r18
				break;
    3f06:	8b c3       	rjmp	.+1814   	; 0x461e <__stack+0x51f>
    3f08:	a9 01       	movw	r20, r18
    3f0a:	40 74       	andi	r20, 0x40	; 64
    3f0c:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag))&&(anzeige&(1<<Weckeranzeigeflag)))
    3f0e:	40 34       	cpi	r20, 0x40	; 64
    3f10:	50 41       	sbci	r21, 0x10	; 16
    3f12:	09 f0       	breq	.+2      	; 0x3f16 <_Z14eingabehandlerh+0x23e>
    3f14:	66 c0       	rjmp	.+204    	; 0x3fe2 <_Z14eingabehandlerh+0x30a>
		{
			switch (pos)
    3f16:	40 91 3d 03 	lds	r20, 0x033D
    3f1a:	41 30       	cpi	r20, 0x01	; 1
    3f1c:	01 f1       	breq	.+64     	; 0x3f5e <_Z14eingabehandlerh+0x286>
    3f1e:	28 f0       	brcs	.+10     	; 0x3f2a <_Z14eingabehandlerh+0x252>
    3f20:	42 30       	cpi	r20, 0x02	; 2
    3f22:	69 f1       	breq	.+90     	; 0x3f7e <_Z14eingabehandlerh+0x2a6>
    3f24:	43 30       	cpi	r20, 0x03	; 3
    3f26:	f1 f1       	breq	.+124    	; 0x3fa4 <_Z14eingabehandlerh+0x2cc>
    3f28:	7a c3       	rjmp	.+1780   	; 0x461e <__stack+0x51f>
			{
				case 0:
				rtc.WStunden=0;
    3f2a:	e5 e4       	ldi	r30, 0x45	; 69
    3f2c:	f0 e1       	ldi	r31, 0x10	; 16
    3f2e:	12 8e       	std	Z+26, r1	; 0x1a
				rtc.WMinuten=0;
    3f30:	11 8e       	std	Z+25, r1	; 0x19
				rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
    3f32:	97 7e       	andi	r25, 0xE7	; 231
    3f34:	92 60       	ori	r25, 0x02	; 2
    3f36:	90 8f       	std	Z+24, r25	; 0x18
				switch (taste)
    3f38:	83 32       	cpi	r24, 0x23	; 35
    3f3a:	09 f4       	brne	.+2      	; 0x3f3e <_Z14eingabehandlerh+0x266>
    3f3c:	70 c3       	rjmp	.+1760   	; 0x461e <__stack+0x51f>
    3f3e:	8a 32       	cpi	r24, 0x2A	; 42
    3f40:	09 f4       	brne	.+2      	; 0x3f44 <_Z14eingabehandlerh+0x26c>
    3f42:	6d c3       	rjmp	.+1754   	; 0x461e <__stack+0x51f>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden=(taste-'0')*10;
    3f44:	98 2f       	mov	r25, r24
    3f46:	99 0f       	add	r25, r25
    3f48:	90 56       	subi	r25, 0x60	; 96
    3f4a:	29 2f       	mov	r18, r25
    3f4c:	22 0f       	add	r18, r18
    3f4e:	22 0f       	add	r18, r18
    3f50:	92 0f       	add	r25, r18
    3f52:	90 93 5f 10 	sts	0x105F, r25
					pos++;
    3f56:	91 e0       	ldi	r25, 0x01	; 1
    3f58:	90 93 3d 03 	sts	0x033D, r25
					break;
    3f5c:	60 c3       	rjmp	.+1728   	; 0x461e <__stack+0x51f>
				}
				break;
				case 1:
				switch (taste)
    3f5e:	83 32       	cpi	r24, 0x23	; 35
    3f60:	09 f4       	brne	.+2      	; 0x3f64 <_Z14eingabehandlerh+0x28c>
    3f62:	5d c3       	rjmp	.+1722   	; 0x461e <__stack+0x51f>
    3f64:	8a 32       	cpi	r24, 0x2A	; 42
    3f66:	09 f4       	brne	.+2      	; 0x3f6a <_Z14eingabehandlerh+0x292>
    3f68:	5a c3       	rjmp	.+1716   	; 0x461e <__stack+0x51f>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden+=(taste-'0');
    3f6a:	e5 e4       	ldi	r30, 0x45	; 69
    3f6c:	f0 e1       	ldi	r31, 0x10	; 16
    3f6e:	92 8d       	ldd	r25, Z+26	; 0x1a
    3f70:	90 53       	subi	r25, 0x30	; 48
    3f72:	98 0f       	add	r25, r24
    3f74:	92 8f       	std	Z+26, r25	; 0x1a
					pos++;
    3f76:	92 e0       	ldi	r25, 0x02	; 2
    3f78:	90 93 3d 03 	sts	0x033D, r25
					break;
    3f7c:	50 c3       	rjmp	.+1696   	; 0x461e <__stack+0x51f>
				}
				break;
				case 2:
				switch (taste)
    3f7e:	83 32       	cpi	r24, 0x23	; 35
    3f80:	09 f4       	brne	.+2      	; 0x3f84 <_Z14eingabehandlerh+0x2ac>
    3f82:	4d c3       	rjmp	.+1690   	; 0x461e <__stack+0x51f>
    3f84:	8a 32       	cpi	r24, 0x2A	; 42
    3f86:	09 f4       	brne	.+2      	; 0x3f8a <_Z14eingabehandlerh+0x2b2>
    3f88:	4a c3       	rjmp	.+1684   	; 0x461e <__stack+0x51f>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten=(taste-'0')*10;
    3f8a:	98 2f       	mov	r25, r24
    3f8c:	99 0f       	add	r25, r25
    3f8e:	90 56       	subi	r25, 0x60	; 96
    3f90:	29 2f       	mov	r18, r25
    3f92:	22 0f       	add	r18, r18
    3f94:	22 0f       	add	r18, r18
    3f96:	92 0f       	add	r25, r18
    3f98:	90 93 5e 10 	sts	0x105E, r25
					pos++;
    3f9c:	93 e0       	ldi	r25, 0x03	; 3
    3f9e:	90 93 3d 03 	sts	0x033D, r25
					break;
    3fa2:	3d c3       	rjmp	.+1658   	; 0x461e <__stack+0x51f>
				}
				break;
				case 3:
				switch (taste)
    3fa4:	83 32       	cpi	r24, 0x23	; 35
    3fa6:	41 f0       	breq	.+16     	; 0x3fb8 <_Z14eingabehandlerh+0x2e0>
    3fa8:	8a 32       	cpi	r24, 0x2A	; 42
    3faa:	31 f0       	breq	.+12     	; 0x3fb8 <_Z14eingabehandlerh+0x2e0>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten+=(taste-'0');
    3fac:	e5 e4       	ldi	r30, 0x45	; 69
    3fae:	f0 e1       	ldi	r31, 0x10	; 16
    3fb0:	41 8d       	ldd	r20, Z+25	; 0x19
    3fb2:	40 53       	subi	r20, 0x30	; 48
    3fb4:	48 0f       	add	r20, r24
    3fb6:	41 8f       	std	Z+25, r20	; 0x19
					pos++;
					break;
				}
				pos=0;
    3fb8:	10 92 3d 03 	sts	0x033D, r1
				if (!(rtc.WStunden>=24) && !(rtc.WMinuten>=60))
    3fbc:	40 91 5f 10 	lds	r20, 0x105F
    3fc0:	48 31       	cpi	r20, 0x18	; 24
    3fc2:	08 f0       	brcs	.+2      	; 0x3fc6 <_Z14eingabehandlerh+0x2ee>
    3fc4:	2c c3       	rjmp	.+1624   	; 0x461e <__stack+0x51f>
    3fc6:	40 91 5e 10 	lds	r20, 0x105E
    3fca:	4c 33       	cpi	r20, 0x3C	; 60
    3fcc:	08 f0       	brcs	.+2      	; 0x3fd0 <_Z14eingabehandlerh+0x2f8>
    3fce:	27 c3       	rjmp	.+1614   	; 0x461e <__stack+0x51f>
				{
					anzeige&=~(1<<Einstellungsflag);
    3fd0:	3f 7e       	andi	r19, 0xEF	; 239
    3fd2:	30 93 40 03 	sts	0x0340, r19
    3fd6:	20 93 3f 03 	sts	0x033F, r18
					rtc.interupts|=(1<<Weckerein);
					rtc.interupts|=(1<<minuteninterupt);
    3fda:	9e 60       	ori	r25, 0x0E	; 14
    3fdc:	90 93 5d 10 	sts	0x105D, r25
    3fe0:	1e c3       	rjmp	.+1596   	; 0x461e <__stack+0x51f>
				}
				break;
			}
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3fe2:	31 ff       	sbrs	r19, 1
    3fe4:	4a c0       	rjmp	.+148    	; 0x407a <_Z14eingabehandlerh+0x3a2>
		{
			anzeige&=~(1<<Kompasgaineinstellenflag);
    3fe6:	a9 01       	movw	r20, r18
    3fe8:	5d 7f       	andi	r21, 0xFD	; 253
			anzeige|=(1<<Kompasflag);
    3fea:	40 68       	ori	r20, 0x80	; 128
    3fec:	50 93 40 03 	sts	0x0340, r21
    3ff0:	40 93 3f 03 	sts	0x033F, r20
			switch (taste) {
    3ff4:	48 2f       	mov	r20, r24
    3ff6:	50 e0       	ldi	r21, 0x00	; 0
    3ff8:	fa 01       	movw	r30, r20
    3ffa:	f1 97       	sbiw	r30, 0x31	; 49
    3ffc:	e8 30       	cpi	r30, 0x08	; 8
    3ffe:	f1 05       	cpc	r31, r1
    4000:	a0 f5       	brcc	.+104    	; 0x406a <_Z14eingabehandlerh+0x392>
    4002:	e9 5a       	subi	r30, 0xA9	; 169
    4004:	ff 4f       	sbci	r31, 0xFF	; 255
    4006:	0c 94 f4 37 	jmp	0x6fe8	; 0x6fe8 <__tablejump2__>
				case '1':
				kompass.HMC5883L_command(0x01,HMCGAIN1370);
    400a:	40 e0       	ldi	r20, 0x00	; 0
    400c:	61 e0       	ldi	r22, 0x01	; 1
    400e:	84 e6       	ldi	r24, 0x64	; 100
    4010:	90 e1       	ldi	r25, 0x10	; 16
    4012:	9b c7       	rjmp	.+3894   	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4014:	08 95       	ret
				case '2':
				kompass.HMC5883L_command(0x01,HMCGAIN1090);
    4016:	40 e2       	ldi	r20, 0x20	; 32
    4018:	61 e0       	ldi	r22, 0x01	; 1
    401a:	84 e6       	ldi	r24, 0x64	; 100
    401c:	90 e1       	ldi	r25, 0x10	; 16
    401e:	95 c7       	rjmp	.+3882   	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4020:	08 95       	ret
				case '3':
				kompass.HMC5883L_command(0x01,HMCGAIN820);
    4022:	40 e4       	ldi	r20, 0x40	; 64
    4024:	61 e0       	ldi	r22, 0x01	; 1
    4026:	84 e6       	ldi	r24, 0x64	; 100
    4028:	90 e1       	ldi	r25, 0x10	; 16
    402a:	8f c7       	rjmp	.+3870   	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    402c:	08 95       	ret
				case '4':
				kompass.HMC5883L_command(0x01,HMCGAIN660);
    402e:	40 e6       	ldi	r20, 0x60	; 96
    4030:	61 e0       	ldi	r22, 0x01	; 1
    4032:	84 e6       	ldi	r24, 0x64	; 100
    4034:	90 e1       	ldi	r25, 0x10	; 16
    4036:	89 c7       	rjmp	.+3858   	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4038:	08 95       	ret
				case '5':
				kompass.HMC5883L_command(0x01,HMCGAIN440);
    403a:	40 e8       	ldi	r20, 0x80	; 128
    403c:	61 e0       	ldi	r22, 0x01	; 1
    403e:	84 e6       	ldi	r24, 0x64	; 100
    4040:	90 e1       	ldi	r25, 0x10	; 16
    4042:	83 c7       	rjmp	.+3846   	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4044:	08 95       	ret
				case '6':
				kompass.HMC5883L_command(0x01,HMCGAIN390);
    4046:	40 ea       	ldi	r20, 0xA0	; 160
    4048:	61 e0       	ldi	r22, 0x01	; 1
    404a:	84 e6       	ldi	r24, 0x64	; 100
    404c:	90 e1       	ldi	r25, 0x10	; 16
    404e:	7d c7       	rjmp	.+3834   	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4050:	08 95       	ret
				case '7':
				kompass.HMC5883L_command(0x01,HMCGAIN330);
    4052:	40 ec       	ldi	r20, 0xC0	; 192
    4054:	61 e0       	ldi	r22, 0x01	; 1
    4056:	84 e6       	ldi	r24, 0x64	; 100
    4058:	90 e1       	ldi	r25, 0x10	; 16
    405a:	77 c7       	rjmp	.+3822   	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    405c:	08 95       	ret
				case '8':
				kompass.HMC5883L_command(0x01,HMCGAIN230);
    405e:	40 ee       	ldi	r20, 0xE0	; 224
    4060:	61 e0       	ldi	r22, 0x01	; 1
    4062:	84 e6       	ldi	r24, 0x64	; 100
    4064:	90 e1       	ldi	r25, 0x10	; 16
    4066:	71 c7       	rjmp	.+3810   	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    4068:	08 95       	ret
				default:
				anzeige &=~(1<<Kompasflag);
    406a:	2f 77       	andi	r18, 0x7F	; 127
    406c:	3d 7f       	andi	r19, 0xFD	; 253
				anzeige|=(1<<Kompasgaineinstellenflag);
    406e:	32 60       	ori	r19, 0x02	; 2
    4070:	30 93 40 03 	sts	0x0340, r19
    4074:	20 93 3f 03 	sts	0x033F, r18
				break;
    4078:	d2 c2       	rjmp	.+1444   	; 0x461e <__stack+0x51f>
    407a:	a9 01       	movw	r20, r18
    407c:	44 70       	andi	r20, 0x04	; 4
    407e:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag)) && (anzeige&(1<<Timerflag)))
    4080:	44 30       	cpi	r20, 0x04	; 4
    4082:	50 41       	sbci	r21, 0x10	; 16
    4084:	09 f0       	breq	.+2      	; 0x4088 <_Z14eingabehandlerh+0x3b0>
    4086:	5e c1       	rjmp	.+700    	; 0x4344 <__stack+0x245>
		{
			switch (pos)
    4088:	40 91 3d 03 	lds	r20, 0x033D
    408c:	42 30       	cpi	r20, 0x02	; 2
    408e:	09 f4       	brne	.+2      	; 0x4092 <_Z14eingabehandlerh+0x3ba>
    4090:	71 c0       	rjmp	.+226    	; 0x4174 <__stack+0x75>
    4092:	30 f4       	brcc	.+12     	; 0x40a0 <_Z14eingabehandlerh+0x3c8>
    4094:	44 23       	and	r20, r20
    4096:	69 f0       	breq	.+26     	; 0x40b2 <_Z14eingabehandlerh+0x3da>
    4098:	41 30       	cpi	r20, 0x01	; 1
    409a:	09 f4       	brne	.+2      	; 0x409e <_Z14eingabehandlerh+0x3c6>
    409c:	3f c0       	rjmp	.+126    	; 0x411c <__stack+0x1d>
    409e:	bf c2       	rjmp	.+1406   	; 0x461e <__stack+0x51f>
    40a0:	44 30       	cpi	r20, 0x04	; 4
    40a2:	09 f4       	brne	.+2      	; 0x40a6 <_Z14eingabehandlerh+0x3ce>
    40a4:	d2 c0       	rjmp	.+420    	; 0x424a <__stack+0x14b>
    40a6:	08 f4       	brcc	.+2      	; 0x40aa <_Z14eingabehandlerh+0x3d2>
    40a8:	9c c0       	rjmp	.+312    	; 0x41e2 <__stack+0xe3>
    40aa:	45 30       	cpi	r20, 0x05	; 5
    40ac:	09 f4       	brne	.+2      	; 0x40b0 <_Z14eingabehandlerh+0x3d8>
    40ae:	04 c1       	rjmp	.+520    	; 0x42b8 <__stack+0x1b9>
    40b0:	b6 c2       	rjmp	.+1388   	; 0x461e <__stack+0x51f>
			{
				case 0:
					switch (taste)
    40b2:	83 32       	cpi	r24, 0x23	; 35
    40b4:	19 f0       	breq	.+6      	; 0x40bc <_Z14eingabehandlerh+0x3e4>
    40b6:	8a 32       	cpi	r24, 0x2A	; 42
    40b8:	41 f0       	breq	.+16     	; 0x40ca <_Z14eingabehandlerh+0x3f2>
    40ba:	19 c0       	rjmp	.+50     	; 0x40ee <_Z14eingabehandlerh+0x416>
					{
						case '#':
							pos=0;
    40bc:	10 92 3d 03 	sts	0x033D, r1
							rtc.Timerzahler=0;
    40c0:	10 92 61 10 	sts	0x1061, r1
    40c4:	10 92 60 10 	sts	0x1060, r1
							break;
    40c8:	08 95       	ret
						case '*':
							pos=0;
    40ca:	10 92 3d 03 	sts	0x033D, r1
							rtc.Timerzahler++;
    40ce:	e5 e4       	ldi	r30, 0x45	; 69
    40d0:	f0 e1       	ldi	r31, 0x10	; 16
    40d2:	43 8d       	ldd	r20, Z+27	; 0x1b
    40d4:	54 8d       	ldd	r21, Z+28	; 0x1c
    40d6:	4f 5f       	subi	r20, 0xFF	; 255
    40d8:	5f 4f       	sbci	r21, 0xFF	; 255
    40da:	54 8f       	std	Z+28, r21	; 0x1c
    40dc:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    40de:	3f 7e       	andi	r19, 0xEF	; 239
    40e0:	30 93 40 03 	sts	0x0340, r19
    40e4:	20 93 3f 03 	sts	0x033F, r18
							rtc.interupts|=(1<<Timerlauft);
    40e8:	92 62       	ori	r25, 0x22	; 34
    40ea:	90 8f       	std	Z+24, r25	; 0x18
							break;
    40ec:	be c2       	rjmp	.+1404   	; 0x466a <__stack+0x56b>
						default:
						rtc.Timerzahler=(taste-'0')*10;
    40ee:	28 2f       	mov	r18, r24
    40f0:	30 e0       	ldi	r19, 0x00	; 0
    40f2:	20 53       	subi	r18, 0x30	; 48
    40f4:	31 09       	sbc	r19, r1
    40f6:	a9 01       	movw	r20, r18
    40f8:	44 0f       	add	r20, r20
    40fa:	55 1f       	adc	r21, r21
    40fc:	22 0f       	add	r18, r18
    40fe:	33 1f       	adc	r19, r19
    4100:	22 0f       	add	r18, r18
    4102:	33 1f       	adc	r19, r19
    4104:	22 0f       	add	r18, r18
    4106:	33 1f       	adc	r19, r19
    4108:	24 0f       	add	r18, r20
    410a:	35 1f       	adc	r19, r21
    410c:	30 93 61 10 	sts	0x1061, r19
    4110:	20 93 60 10 	sts	0x1060, r18
						pos++;
    4114:	91 e0       	ldi	r25, 0x01	; 1
    4116:	90 93 3d 03 	sts	0x033D, r25
						break;
    411a:	81 c2       	rjmp	.+1282   	; 0x461e <__stack+0x51f>
					}
					break;
				case 1:
					switch (taste)
    411c:	83 32       	cpi	r24, 0x23	; 35
    411e:	19 f0       	breq	.+6      	; 0x4126 <__stack+0x27>
    4120:	8a 32       	cpi	r24, 0x2A	; 42
    4122:	41 f0       	breq	.+16     	; 0x4134 <__stack+0x35>
    4124:	19 c0       	rjmp	.+50     	; 0x4158 <__stack+0x59>
					{
						case '#':
							pos=0;
    4126:	10 92 3d 03 	sts	0x033D, r1
							rtc.Timerzahler=0;
    412a:	10 92 61 10 	sts	0x1061, r1
    412e:	10 92 60 10 	sts	0x1060, r1
							break;
    4132:	08 95       	ret
						case '*':
							pos=0;
    4134:	10 92 3d 03 	sts	0x033D, r1
							rtc.Timerzahler++;
    4138:	e5 e4       	ldi	r30, 0x45	; 69
    413a:	f0 e1       	ldi	r31, 0x10	; 16
    413c:	43 8d       	ldd	r20, Z+27	; 0x1b
    413e:	54 8d       	ldd	r21, Z+28	; 0x1c
    4140:	4f 5f       	subi	r20, 0xFF	; 255
    4142:	5f 4f       	sbci	r21, 0xFF	; 255
    4144:	54 8f       	std	Z+28, r21	; 0x1c
    4146:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    4148:	3f 7e       	andi	r19, 0xEF	; 239
    414a:	30 93 40 03 	sts	0x0340, r19
    414e:	20 93 3f 03 	sts	0x033F, r18
							rtc.interupts|=(1<<Timerlauft);
    4152:	92 62       	ori	r25, 0x22	; 34
    4154:	90 8f       	std	Z+24, r25	; 0x18
							break;
    4156:	89 c2       	rjmp	.+1298   	; 0x466a <__stack+0x56b>
						default:
						rtc.Timerzahler+=(taste-'0');
    4158:	e5 e4       	ldi	r30, 0x45	; 69
    415a:	f0 e1       	ldi	r31, 0x10	; 16
    415c:	23 8d       	ldd	r18, Z+27	; 0x1b
    415e:	34 8d       	ldd	r19, Z+28	; 0x1c
    4160:	20 53       	subi	r18, 0x30	; 48
    4162:	31 09       	sbc	r19, r1
    4164:	28 0f       	add	r18, r24
    4166:	31 1d       	adc	r19, r1
    4168:	34 8f       	std	Z+28, r19	; 0x1c
    416a:	23 8f       	std	Z+27, r18	; 0x1b
						pos++;
    416c:	92 e0       	ldi	r25, 0x02	; 2
    416e:	90 93 3d 03 	sts	0x033D, r25
						break;
    4172:	55 c2       	rjmp	.+1194   	; 0x461e <__stack+0x51f>
					}
					break;
				case 2:
					switch (taste)
    4174:	83 32       	cpi	r24, 0x23	; 35
    4176:	19 f0       	breq	.+6      	; 0x417e <__stack+0x7f>
    4178:	8a 32       	cpi	r24, 0x2A	; 42
    417a:	41 f0       	breq	.+16     	; 0x418c <__stack+0x8d>
    417c:	19 c0       	rjmp	.+50     	; 0x41b0 <__stack+0xb1>
					{
						case '#':
							pos=0;
    417e:	10 92 3d 03 	sts	0x033D, r1
							rtc.Timerzahler=0;
    4182:	10 92 61 10 	sts	0x1061, r1
    4186:	10 92 60 10 	sts	0x1060, r1
							break;
    418a:	08 95       	ret
						case '*':
							pos=0;
    418c:	10 92 3d 03 	sts	0x033D, r1
							rtc.Timerzahler++;
    4190:	e5 e4       	ldi	r30, 0x45	; 69
    4192:	f0 e1       	ldi	r31, 0x10	; 16
    4194:	43 8d       	ldd	r20, Z+27	; 0x1b
    4196:	54 8d       	ldd	r21, Z+28	; 0x1c
    4198:	4f 5f       	subi	r20, 0xFF	; 255
    419a:	5f 4f       	sbci	r21, 0xFF	; 255
    419c:	54 8f       	std	Z+28, r21	; 0x1c
    419e:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    41a0:	3f 7e       	andi	r19, 0xEF	; 239
    41a2:	30 93 40 03 	sts	0x0340, r19
    41a6:	20 93 3f 03 	sts	0x033F, r18
							rtc.interupts|=(1<<Timerlauft);;
    41aa:	92 62       	ori	r25, 0x22	; 34
    41ac:	90 8f       	std	Z+24, r25	; 0x18
							break;
    41ae:	5d c2       	rjmp	.+1210   	; 0x466a <__stack+0x56b>
						default:
						rtc.Timerzahler+=(taste-'0')*10*60;
    41b0:	e5 e4       	ldi	r30, 0x45	; 69
    41b2:	f0 e1       	ldi	r31, 0x10	; 16
    41b4:	48 2f       	mov	r20, r24
    41b6:	50 e0       	ldi	r21, 0x00	; 0
    41b8:	40 53       	subi	r20, 0x30	; 48
    41ba:	51 09       	sbc	r21, r1
    41bc:	28 e5       	ldi	r18, 0x58	; 88
    41be:	32 e0       	ldi	r19, 0x02	; 2
    41c0:	42 9f       	mul	r20, r18
    41c2:	b0 01       	movw	r22, r0
    41c4:	43 9f       	mul	r20, r19
    41c6:	70 0d       	add	r23, r0
    41c8:	52 9f       	mul	r21, r18
    41ca:	70 0d       	add	r23, r0
    41cc:	11 24       	eor	r1, r1
    41ce:	23 8d       	ldd	r18, Z+27	; 0x1b
    41d0:	34 8d       	ldd	r19, Z+28	; 0x1c
    41d2:	26 0f       	add	r18, r22
    41d4:	37 1f       	adc	r19, r23
    41d6:	34 8f       	std	Z+28, r19	; 0x1c
    41d8:	23 8f       	std	Z+27, r18	; 0x1b
						pos++;
    41da:	93 e0       	ldi	r25, 0x03	; 3
    41dc:	90 93 3d 03 	sts	0x033D, r25
						break;
    41e0:	1e c2       	rjmp	.+1084   	; 0x461e <__stack+0x51f>
					}
					break;
				case 3:
					switch (taste)
    41e2:	83 32       	cpi	r24, 0x23	; 35
    41e4:	19 f0       	breq	.+6      	; 0x41ec <__stack+0xed>
    41e6:	8a 32       	cpi	r24, 0x2A	; 42
    41e8:	41 f0       	breq	.+16     	; 0x41fa <__stack+0xfb>
    41ea:	19 c0       	rjmp	.+50     	; 0x421e <__stack+0x11f>
					{
						case '#':
							pos=0;
    41ec:	10 92 3d 03 	sts	0x033D, r1
							rtc.Timerzahler=0;
    41f0:	10 92 61 10 	sts	0x1061, r1
    41f4:	10 92 60 10 	sts	0x1060, r1
							break;
    41f8:	08 95       	ret
						case '*':
							pos=0;
    41fa:	10 92 3d 03 	sts	0x033D, r1
							rtc.Timerzahler++;
    41fe:	e5 e4       	ldi	r30, 0x45	; 69
    4200:	f0 e1       	ldi	r31, 0x10	; 16
    4202:	43 8d       	ldd	r20, Z+27	; 0x1b
    4204:	54 8d       	ldd	r21, Z+28	; 0x1c
    4206:	4f 5f       	subi	r20, 0xFF	; 255
    4208:	5f 4f       	sbci	r21, 0xFF	; 255
    420a:	54 8f       	std	Z+28, r21	; 0x1c
    420c:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    420e:	3f 7e       	andi	r19, 0xEF	; 239
    4210:	30 93 40 03 	sts	0x0340, r19
    4214:	20 93 3f 03 	sts	0x033F, r18
							rtc.interupts|=(1<<Timerlauft);
    4218:	92 62       	ori	r25, 0x22	; 34
    421a:	90 8f       	std	Z+24, r25	; 0x18
							break;
    421c:	26 c2       	rjmp	.+1100   	; 0x466a <__stack+0x56b>
						default:
						rtc.Timerzahler+=(taste-'0')*60;
    421e:	e5 e4       	ldi	r30, 0x45	; 69
    4220:	f0 e1       	ldi	r31, 0x10	; 16
    4222:	48 2f       	mov	r20, r24
    4224:	50 e0       	ldi	r21, 0x00	; 0
    4226:	40 53       	subi	r20, 0x30	; 48
    4228:	51 09       	sbc	r21, r1
    422a:	9c e3       	ldi	r25, 0x3C	; 60
    422c:	94 9f       	mul	r25, r20
    422e:	b0 01       	movw	r22, r0
    4230:	95 9f       	mul	r25, r21
    4232:	70 0d       	add	r23, r0
    4234:	11 24       	eor	r1, r1
    4236:	23 8d       	ldd	r18, Z+27	; 0x1b
    4238:	34 8d       	ldd	r19, Z+28	; 0x1c
    423a:	26 0f       	add	r18, r22
    423c:	37 1f       	adc	r19, r23
    423e:	34 8f       	std	Z+28, r19	; 0x1c
    4240:	23 8f       	std	Z+27, r18	; 0x1b
						pos++;
    4242:	94 e0       	ldi	r25, 0x04	; 4
    4244:	90 93 3d 03 	sts	0x033D, r25
						break;
    4248:	ea c1       	rjmp	.+980    	; 0x461e <__stack+0x51f>
					}
					break;
				case 4:
					switch (taste)
    424a:	83 32       	cpi	r24, 0x23	; 35
    424c:	19 f0       	breq	.+6      	; 0x4254 <__stack+0x155>
    424e:	8a 32       	cpi	r24, 0x2A	; 42
    4250:	41 f0       	breq	.+16     	; 0x4262 <__stack+0x163>
    4252:	19 c0       	rjmp	.+50     	; 0x4286 <__stack+0x187>
					{
						case '#':
							pos=0;
    4254:	10 92 3d 03 	sts	0x033D, r1
							rtc.Timerzahler=0;
    4258:	10 92 61 10 	sts	0x1061, r1
    425c:	10 92 60 10 	sts	0x1060, r1
							break;
    4260:	08 95       	ret
						case '*':
							pos=0;
    4262:	10 92 3d 03 	sts	0x033D, r1
							rtc.Timerzahler++;
    4266:	e5 e4       	ldi	r30, 0x45	; 69
    4268:	f0 e1       	ldi	r31, 0x10	; 16
    426a:	43 8d       	ldd	r20, Z+27	; 0x1b
    426c:	54 8d       	ldd	r21, Z+28	; 0x1c
    426e:	4f 5f       	subi	r20, 0xFF	; 255
    4270:	5f 4f       	sbci	r21, 0xFF	; 255
    4272:	54 8f       	std	Z+28, r21	; 0x1c
    4274:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    4276:	3f 7e       	andi	r19, 0xEF	; 239
    4278:	30 93 40 03 	sts	0x0340, r19
    427c:	20 93 3f 03 	sts	0x033F, r18
							rtc.interupts|=(1<<Timerlauft);
    4280:	92 62       	ori	r25, 0x22	; 34
    4282:	90 8f       	std	Z+24, r25	; 0x18
							break;
    4284:	f2 c1       	rjmp	.+996    	; 0x466a <__stack+0x56b>
						default:
						rtc.Timerzahler+=(taste-'0')*10*3600;
    4286:	e5 e4       	ldi	r30, 0x45	; 69
    4288:	f0 e1       	ldi	r31, 0x10	; 16
    428a:	48 2f       	mov	r20, r24
    428c:	50 e0       	ldi	r21, 0x00	; 0
    428e:	40 53       	subi	r20, 0x30	; 48
    4290:	51 09       	sbc	r21, r1
    4292:	20 ea       	ldi	r18, 0xA0	; 160
    4294:	3c e8       	ldi	r19, 0x8C	; 140
    4296:	42 9f       	mul	r20, r18
    4298:	b0 01       	movw	r22, r0
    429a:	43 9f       	mul	r20, r19
    429c:	70 0d       	add	r23, r0
    429e:	52 9f       	mul	r21, r18
    42a0:	70 0d       	add	r23, r0
    42a2:	11 24       	eor	r1, r1
    42a4:	23 8d       	ldd	r18, Z+27	; 0x1b
    42a6:	34 8d       	ldd	r19, Z+28	; 0x1c
    42a8:	26 0f       	add	r18, r22
    42aa:	37 1f       	adc	r19, r23
    42ac:	34 8f       	std	Z+28, r19	; 0x1c
    42ae:	23 8f       	std	Z+27, r18	; 0x1b
						pos++;
    42b0:	95 e0       	ldi	r25, 0x05	; 5
    42b2:	90 93 3d 03 	sts	0x033D, r25
						break;
    42b6:	b3 c1       	rjmp	.+870    	; 0x461e <__stack+0x51f>
					}
					break;
				case 5:
					switch (taste)
    42b8:	83 32       	cpi	r24, 0x23	; 35
    42ba:	19 f0       	breq	.+6      	; 0x42c2 <__stack+0x1c3>
    42bc:	8a 32       	cpi	r24, 0x2A	; 42
    42be:	31 f0       	breq	.+12     	; 0x42cc <__stack+0x1cd>
    42c0:	15 c0       	rjmp	.+42     	; 0x42ec <__stack+0x1ed>
					{
						case '#':
							pos=0;
							rtc.Timerzahler=0;
    42c2:	10 92 61 10 	sts	0x1061, r1
    42c6:	10 92 60 10 	sts	0x1060, r1
							break;
    42ca:	25 c0       	rjmp	.+74     	; 0x4316 <__stack+0x217>
						case '*':
							pos=0;
							rtc.Timerzahler++;
    42cc:	e5 e4       	ldi	r30, 0x45	; 69
    42ce:	f0 e1       	ldi	r31, 0x10	; 16
    42d0:	43 8d       	ldd	r20, Z+27	; 0x1b
    42d2:	54 8d       	ldd	r21, Z+28	; 0x1c
    42d4:	4f 5f       	subi	r20, 0xFF	; 255
    42d6:	5f 4f       	sbci	r21, 0xFF	; 255
    42d8:	54 8f       	std	Z+28, r21	; 0x1c
    42da:	43 8f       	std	Z+27, r20	; 0x1b
							anzeige&=~(1<<Einstellungsflag);
    42dc:	3f 7e       	andi	r19, 0xEF	; 239
    42de:	30 93 40 03 	sts	0x0340, r19
    42e2:	20 93 3f 03 	sts	0x033F, r18
							rtc.interupts|=(1<<Timerlauft);
    42e6:	92 62       	ori	r25, 0x22	; 34
    42e8:	90 8f       	std	Z+24, r25	; 0x18
							break;
    42ea:	15 c0       	rjmp	.+42     	; 0x4316 <__stack+0x217>
						default:
						rtc.Timerzahler+=(taste-'0')*3600;
    42ec:	e5 e4       	ldi	r30, 0x45	; 69
    42ee:	f0 e1       	ldi	r31, 0x10	; 16
    42f0:	48 2f       	mov	r20, r24
    42f2:	50 e0       	ldi	r21, 0x00	; 0
    42f4:	40 53       	subi	r20, 0x30	; 48
    42f6:	51 09       	sbc	r21, r1
    42f8:	20 e1       	ldi	r18, 0x10	; 16
    42fa:	3e e0       	ldi	r19, 0x0E	; 14
    42fc:	42 9f       	mul	r20, r18
    42fe:	b0 01       	movw	r22, r0
    4300:	43 9f       	mul	r20, r19
    4302:	70 0d       	add	r23, r0
    4304:	52 9f       	mul	r21, r18
    4306:	70 0d       	add	r23, r0
    4308:	11 24       	eor	r1, r1
    430a:	23 8d       	ldd	r18, Z+27	; 0x1b
    430c:	34 8d       	ldd	r19, Z+28	; 0x1c
    430e:	26 0f       	add	r18, r22
    4310:	37 1f       	adc	r19, r23
    4312:	34 8f       	std	Z+28, r19	; 0x1c
    4314:	23 8f       	std	Z+27, r18	; 0x1b
						pos++;
						break;
					}
					pos=0;
    4316:	10 92 3d 03 	sts	0x033D, r1
					rtc.Timerzahler++;
    431a:	e5 e4       	ldi	r30, 0x45	; 69
    431c:	f0 e1       	ldi	r31, 0x10	; 16
    431e:	23 8d       	ldd	r18, Z+27	; 0x1b
    4320:	34 8d       	ldd	r19, Z+28	; 0x1c
    4322:	2f 5f       	subi	r18, 0xFF	; 255
    4324:	3f 4f       	sbci	r19, 0xFF	; 255
    4326:	34 8f       	std	Z+28, r19	; 0x1c
    4328:	23 8f       	std	Z+27, r18	; 0x1b
					anzeige&=~(1<<Einstellungsflag);
    432a:	20 91 3f 03 	lds	r18, 0x033F
    432e:	30 91 40 03 	lds	r19, 0x0340
    4332:	3f 7e       	andi	r19, 0xEF	; 239
    4334:	30 93 40 03 	sts	0x0340, r19
    4338:	20 93 3f 03 	sts	0x033F, r18
					rtc.interupts|=(1<<Timerlauft);
    433c:	90 8d       	ldd	r25, Z+24	; 0x18
    433e:	90 62       	ori	r25, 0x20	; 32
    4340:	90 8f       	std	Z+24, r25	; 0x18
					break;
    4342:	6d c1       	rjmp	.+730    	; 0x461e <__stack+0x51f>
    4344:	a9 01       	movw	r20, r18
    4346:	44 27       	eor	r20, r20
    4348:	58 71       	andi	r21, 0x18	; 24
				default:
					break;
			}
		}
		else if (((anzeige&(1<<Einstellungsflag))&&(anzeige&(1<<Wanderflag))))
    434a:	41 15       	cp	r20, r1
    434c:	58 41       	sbci	r21, 0x18	; 24
    434e:	79 f4       	brne	.+30     	; 0x436e <__stack+0x26f>
		{
			if (pos==7)
    4350:	90 91 3d 03 	lds	r25, 0x033D
    4354:	97 30       	cpi	r25, 0x07	; 7
    4356:	39 f4       	brne	.+14     	; 0x4366 <__stack+0x267>
			{
				if (taste == '*')
    4358:	8a 32       	cpi	r24, 0x2A	; 42
    435a:	09 f0       	breq	.+2      	; 0x435e <__stack+0x25f>
    435c:	8c c1       	rjmp	.+792    	; 0x4676 <__stack+0x577>
				{
					pos=6;
    435e:	86 e0       	ldi	r24, 0x06	; 6
    4360:	80 93 3d 03 	sts	0x033D, r24
    4364:	82 c1       	rjmp	.+772    	; 0x466a <__stack+0x56b>
				}
			}
			else{
				pos=6;
    4366:	96 e0       	ldi	r25, 0x06	; 6
    4368:	90 93 3d 03 	sts	0x033D, r25
    436c:	58 c1       	rjmp	.+688    	; 0x461e <__stack+0x51f>
			}
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    436e:	23 ff       	sbrs	r18, 3
    4370:	22 c0       	rjmp	.+68     	; 0x43b6 <__stack+0x2b7>
		{
			if (taste=='*')
    4372:	8a 32       	cpi	r24, 0x2A	; 42
    4374:	59 f4       	brne	.+22     	; 0x438c <__stack+0x28d>
			{
				if ((rtc.interupts&(1<<Stoppuhrlauft)))
    4376:	96 ff       	sbrs	r25, 6
    4378:	05 c0       	rjmp	.+10     	; 0x4384 <__stack+0x285>
				{
					rtc.interupts&=~(1<<Stoppuhrlauft);
    437a:	9f 7b       	andi	r25, 0xBF	; 191
    437c:	92 60       	ori	r25, 0x02	; 2
    437e:	90 93 5d 10 	sts	0x105D, r25
    4382:	73 c1       	rjmp	.+742    	; 0x466a <__stack+0x56b>
				}
				else{
					rtc.interupts|=(1<<Stoppuhrlauft);
    4384:	92 64       	ori	r25, 0x42	; 66
    4386:	90 93 5d 10 	sts	0x105D, r25
    438a:	6f c1       	rjmp	.+734    	; 0x466a <__stack+0x56b>
				}
			}
			else if (taste=='0')
    438c:	80 33       	cpi	r24, 0x30	; 48
    438e:	29 f4       	brne	.+10     	; 0x439a <__stack+0x29b>
			{
				rtc.Stoppuhrzahler=0;
    4390:	10 92 63 10 	sts	0x1063, r1
    4394:	10 92 62 10 	sts	0x1062, r1
    4398:	08 95       	ret
			}
			else if (taste=='#')
    439a:	83 32       	cpi	r24, 0x23	; 35
    439c:	09 f0       	breq	.+2      	; 0x43a0 <__stack+0x2a1>
    439e:	6b c1       	rjmp	.+726    	; 0x4676 <__stack+0x577>
			{
				anzeige&=~((1<<Stoppuhrflag));
				rtc.interupts&=~(1<<Stoppuhrlauft);
    43a0:	9f 7b       	andi	r25, 0xBF	; 191
    43a2:	92 60       	ori	r25, 0x02	; 2
    43a4:	90 93 5d 10 	sts	0x105D, r25
			{
				rtc.Stoppuhrzahler=0;
			}
			else if (taste=='#')
			{
				anzeige&=~((1<<Stoppuhrflag));
    43a8:	27 7f       	andi	r18, 0xF7	; 247
				rtc.interupts&=~(1<<Stoppuhrlauft);
				anzeige|=(1<<menueflag);
    43aa:	30 62       	ori	r19, 0x20	; 32
    43ac:	30 93 40 03 	sts	0x0340, r19
    43b0:	20 93 3f 03 	sts	0x033F, r18
    43b4:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflag)))
    43b6:	21 ff       	sbrs	r18, 1
    43b8:	29 c0       	rjmp	.+82     	; 0x440c <__stack+0x30d>
		{
			if (taste=='#')
    43ba:	83 32       	cpi	r24, 0x23	; 35
    43bc:	49 f4       	brne	.+18     	; 0x43d0 <__stack+0x2d1>
			{
				pos=0;
    43be:	10 92 3d 03 	sts	0x033D, r1
				anzeige&=~(1<<Uhrflag);
    43c2:	2d 7f       	andi	r18, 0xFD	; 253
				anzeige|=(1<<menueflag);
    43c4:	30 62       	ori	r19, 0x20	; 32
    43c6:	30 93 40 03 	sts	0x0340, r19
    43ca:	20 93 3f 03 	sts	0x033F, r18
    43ce:	08 95       	ret
			}
			else if (taste=='*')
    43d0:	8a 32       	cpi	r24, 0x2A	; 42
    43d2:	49 f4       	brne	.+18     	; 0x43e6 <__stack+0x2e7>
			{
				pos++;
    43d4:	80 91 3d 03 	lds	r24, 0x033D
    43d8:	8f 5f       	subi	r24, 0xFF	; 255
				if (pos>1)
    43da:	82 30       	cpi	r24, 0x02	; 2
    43dc:	08 f4       	brcc	.+2      	; 0x43e0 <__stack+0x2e1>
    43de:	43 c1       	rjmp	.+646    	; 0x4666 <__stack+0x567>
				{
					pos=0;
    43e0:	10 92 3d 03 	sts	0x033D, r1
    43e4:	42 c1       	rjmp	.+644    	; 0x466a <__stack+0x56b>
				}
			}
			else if (taste=='0')
    43e6:	80 33       	cpi	r24, 0x30	; 48
    43e8:	09 f0       	breq	.+2      	; 0x43ec <__stack+0x2ed>
    43ea:	45 c1       	rjmp	.+650    	; 0x4676 <__stack+0x577>
			{
				if (LED.ison())
    43ec:	86 e3       	ldi	r24, 0x36	; 54
    43ee:	9c e0       	ldi	r25, 0x0C	; 12
    43f0:	0e 94 58 2e 	call	0x5cb0	; 0x5cb0 <_ZN6Output4isonEv>
    43f4:	88 23       	and	r24, r24
    43f6:	29 f0       	breq	.+10     	; 0x4402 <__stack+0x303>
				{
					LED.off();
    43f8:	86 e3       	ldi	r24, 0x36	; 54
    43fa:	9c e0       	ldi	r25, 0x0C	; 12
    43fc:	0c 94 93 2e 	jmp	0x5d26	; 0x5d26 <_ZN6Output3offEv>
    4400:	08 95       	ret
				}
				else{
					LED.on();
    4402:	86 e3       	ldi	r24, 0x36	; 54
    4404:	9c e0       	ldi	r25, 0x0C	; 12
    4406:	0c 94 1b 2e 	jmp	0x5c36	; 0x5c36 <_ZN6Output2onEv>
    440a:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Kompasflag)))
    440c:	27 ff       	sbrs	r18, 7
    440e:	1d c0       	rjmp	.+58     	; 0x444a <__stack+0x34b>
		{
			if (taste=='#')
    4410:	83 32       	cpi	r24, 0x23	; 35
    4412:	41 f4       	brne	.+16     	; 0x4424 <__stack+0x325>
			{
				anzeige&=~(1<<Kompasflag);
    4414:	c9 01       	movw	r24, r18
    4416:	8f 77       	andi	r24, 0x7F	; 127
				anzeige|=(1<<menueflag);
    4418:	90 62       	ori	r25, 0x20	; 32
    441a:	90 93 40 03 	sts	0x0340, r25
    441e:	80 93 3f 03 	sts	0x033F, r24
    4422:	08 95       	ret
			}
			else if (taste=='0')
    4424:	80 33       	cpi	r24, 0x30	; 48
    4426:	09 f0       	breq	.+2      	; 0x442a <__stack+0x32b>
    4428:	fa c0       	rjmp	.+500    	; 0x461e <__stack+0x51f>
			{
				if (LED.ison())
    442a:	86 e3       	ldi	r24, 0x36	; 54
    442c:	9c e0       	ldi	r25, 0x0C	; 12
    442e:	0e 94 58 2e 	call	0x5cb0	; 0x5cb0 <_ZN6Output4isonEv>
    4432:	88 23       	and	r24, r24
    4434:	29 f0       	breq	.+10     	; 0x4440 <__stack+0x341>
				{
					LED.off();
    4436:	86 e3       	ldi	r24, 0x36	; 54
    4438:	9c e0       	ldi	r25, 0x0C	; 12
    443a:	0c 94 93 2e 	jmp	0x5d26	; 0x5d26 <_ZN6Output3offEv>
    443e:	08 95       	ret
				}
				else{
					LED.on();
    4440:	86 e3       	ldi	r24, 0x36	; 54
    4442:	9c e0       	ldi	r25, 0x0C	; 12
    4444:	0c 94 1b 2e 	jmp	0x5c36	; 0x5c36 <_ZN6Output2onEv>
    4448:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Fahradflag)))
    444a:	20 ff       	sbrs	r18, 0
    444c:	3a c0       	rjmp	.+116    	; 0x44c2 <__stack+0x3c3>
		{
			if (taste=='#')
    444e:	83 32       	cpi	r24, 0x23	; 35
    4450:	51 f4       	brne	.+20     	; 0x4466 <__stack+0x367>
			{
				anzeige&=~(1<<Fahradflag);
    4452:	c9 01       	movw	r24, r18
    4454:	8e 7f       	andi	r24, 0xFE	; 254
				anzeige|=(1<<menueflag);
    4456:	90 62       	ori	r25, 0x20	; 32
    4458:	90 93 40 03 	sts	0x0340, r25
    445c:	80 93 3f 03 	sts	0x033F, r24
				inittimer(2);
    4460:	82 e0       	ldi	r24, 0x02	; 2
    4462:	bd c8       	rjmp	.-3718   	; 0x35de <_Z9inittimerh>
    4464:	08 95       	ret
			}
			else if (taste=='*')
    4466:	8a 32       	cpi	r24, 0x2A	; 42
    4468:	c9 f4       	brne	.+50     	; 0x449c <__stack+0x39d>
			{
				maxgeschw = 0;
    446a:	10 92 30 03 	sts	0x0330, r1
    446e:	10 92 31 03 	sts	0x0331, r1
    4472:	10 92 32 03 	sts	0x0332, r1
    4476:	10 92 33 03 	sts	0x0333, r1
				strecke = 0;
    447a:	10 92 34 03 	sts	0x0334, r1
    447e:	10 92 35 03 	sts	0x0335, r1
    4482:	10 92 36 03 	sts	0x0336, r1
    4486:	10 92 37 03 	sts	0x0337, r1
				Fahrtzeit = 0;
    448a:	10 92 2c 03 	sts	0x032C, r1
    448e:	10 92 2d 03 	sts	0x032D, r1
    4492:	10 92 2e 03 	sts	0x032E, r1
    4496:	10 92 2f 03 	sts	0x032F, r1
    449a:	e7 c0       	rjmp	.+462    	; 0x466a <__stack+0x56b>
			}
			else if (taste=='0')
    449c:	80 33       	cpi	r24, 0x30	; 48
    449e:	09 f0       	breq	.+2      	; 0x44a2 <__stack+0x3a3>
    44a0:	ea c0       	rjmp	.+468    	; 0x4676 <__stack+0x577>
			{
				if (LED.ison())
    44a2:	86 e3       	ldi	r24, 0x36	; 54
    44a4:	9c e0       	ldi	r25, 0x0C	; 12
    44a6:	0e 94 58 2e 	call	0x5cb0	; 0x5cb0 <_ZN6Output4isonEv>
    44aa:	88 23       	and	r24, r24
    44ac:	29 f0       	breq	.+10     	; 0x44b8 <__stack+0x3b9>
				{
					LED.off();
    44ae:	86 e3       	ldi	r24, 0x36	; 54
    44b0:	9c e0       	ldi	r25, 0x0C	; 12
    44b2:	0c 94 93 2e 	jmp	0x5d26	; 0x5d26 <_ZN6Output3offEv>
    44b6:	08 95       	ret
				}
				else{
					LED.on();
    44b8:	86 e3       	ldi	r24, 0x36	; 54
    44ba:	9c e0       	ldi	r25, 0x0C	; 12
    44bc:	0c 94 1b 2e 	jmp	0x5c36	; 0x5c36 <_ZN6Output2onEv>
    44c0:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Druckflag)))
    44c2:	32 ff       	sbrs	r19, 2
    44c4:	1d c0       	rjmp	.+58     	; 0x4500 <__stack+0x401>
		{
			if (taste=='#')
    44c6:	83 32       	cpi	r24, 0x23	; 35
    44c8:	41 f4       	brne	.+16     	; 0x44da <__stack+0x3db>
			{
				anzeige&=~(1<<Druckflag);
    44ca:	c9 01       	movw	r24, r18
    44cc:	9b 7f       	andi	r25, 0xFB	; 251
				anzeige|=(1<<menueflag);
    44ce:	90 62       	ori	r25, 0x20	; 32
    44d0:	90 93 40 03 	sts	0x0340, r25
    44d4:	80 93 3f 03 	sts	0x033F, r24
    44d8:	08 95       	ret
			}
			else if (taste=='*')
			{
				//Baro.set_Pressure0(Baro.Press);
			}
			else if (taste=='0')
    44da:	80 33       	cpi	r24, 0x30	; 48
    44dc:	09 f0       	breq	.+2      	; 0x44e0 <__stack+0x3e1>
    44de:	9f c0       	rjmp	.+318    	; 0x461e <__stack+0x51f>
			{
				if (LED.ison())
    44e0:	86 e3       	ldi	r24, 0x36	; 54
    44e2:	9c e0       	ldi	r25, 0x0C	; 12
    44e4:	0e 94 58 2e 	call	0x5cb0	; 0x5cb0 <_ZN6Output4isonEv>
    44e8:	88 23       	and	r24, r24
    44ea:	29 f0       	breq	.+10     	; 0x44f6 <__stack+0x3f7>
				{
					LED.off();
    44ec:	86 e3       	ldi	r24, 0x36	; 54
    44ee:	9c e0       	ldi	r25, 0x0C	; 12
    44f0:	0c 94 93 2e 	jmp	0x5d26	; 0x5d26 <_ZN6Output3offEv>
    44f4:	08 95       	ret
				}
				else{
					LED.on();
    44f6:	86 e3       	ldi	r24, 0x36	; 54
    44f8:	9c e0       	ldi	r25, 0x0C	; 12
    44fa:	0c 94 1b 2e 	jmp	0x5c36	; 0x5c36 <_ZN6Output2onEv>
    44fe:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Timerflag)))
    4500:	22 ff       	sbrs	r18, 2
    4502:	25 c0       	rjmp	.+74     	; 0x454e <__stack+0x44f>
		{
			if (taste=='#')
    4504:	83 32       	cpi	r24, 0x23	; 35
    4506:	09 f0       	breq	.+2      	; 0x450a <__stack+0x40b>
    4508:	8a c0       	rjmp	.+276    	; 0x461e <__stack+0x51f>
			{
				anzeige&=~((1<<Timerflag)|(1<<blinkflag));
    450a:	2b 7f       	andi	r18, 0xFB	; 251
    450c:	3f 7b       	andi	r19, 0xBF	; 191
    450e:	30 93 40 03 	sts	0x0340, r19
    4512:	20 93 3f 03 	sts	0x033F, r18
				rtc.interupts&=~((1<<Timerlauft)|(1<<Alarm));
    4516:	89 2f       	mov	r24, r25
    4518:	8e 7d       	andi	r24, 0xDE	; 222
    451a:	82 60       	ori	r24, 0x02	; 2
    451c:	80 93 5d 10 	sts	0x105D, r24
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    4520:	60 e0       	ldi	r22, 0x00	; 0
    4522:	84 e4       	ldi	r24, 0x44	; 68
    4524:	9c e0       	ldi	r25, 0x0C	; 12
    4526:	0e 94 51 03 	call	0x6a2	; 0x6a2 <_ZN7Display6invertEh>
				LED.off();
    452a:	86 e3       	ldi	r24, 0x36	; 54
    452c:	9c e0       	ldi	r25, 0x0C	; 12
    452e:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <_ZN6Output3offEv>
				Vibrationsmotor.off();
    4532:	84 e3       	ldi	r24, 0x34	; 52
    4534:	9c e0       	ldi	r25, 0x0C	; 12
    4536:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <_ZN6Output3offEv>
				
				anzeige|=(1<<menueflag);
    453a:	80 91 3f 03 	lds	r24, 0x033F
    453e:	90 91 40 03 	lds	r25, 0x0340
    4542:	90 62       	ori	r25, 0x20	; 32
    4544:	90 93 40 03 	sts	0x0340, r25
    4548:	80 93 3f 03 	sts	0x033F, r24
    454c:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflaggross)))
    454e:	25 ff       	sbrs	r18, 5
    4550:	25 c0       	rjmp	.+74     	; 0x459c <__stack+0x49d>
		{
			if (taste=='#')
    4552:	83 32       	cpi	r24, 0x23	; 35
    4554:	41 f4       	brne	.+16     	; 0x4566 <__stack+0x467>
			{
				anzeige&=~(1<<Uhrflaggross);
    4556:	c9 01       	movw	r24, r18
    4558:	8f 7d       	andi	r24, 0xDF	; 223
				anzeige|=(1<<menueflag);
    455a:	90 62       	ori	r25, 0x20	; 32
    455c:	90 93 40 03 	sts	0x0340, r25
    4560:	80 93 3f 03 	sts	0x033F, r24
    4564:	08 95       	ret
			}
			else if (taste=='0')
    4566:	80 33       	cpi	r24, 0x30	; 48
    4568:	09 f0       	breq	.+2      	; 0x456c <__stack+0x46d>
    456a:	59 c0       	rjmp	.+178    	; 0x461e <__stack+0x51f>
			{
				if (LED.ison())
    456c:	86 e3       	ldi	r24, 0x36	; 54
    456e:	9c e0       	ldi	r25, 0x0C	; 12
    4570:	0e 94 58 2e 	call	0x5cb0	; 0x5cb0 <_ZN6Output4isonEv>
    4574:	88 23       	and	r24, r24
    4576:	49 f0       	breq	.+18     	; 0x458a <__stack+0x48b>
				{
					LED.off();
    4578:	86 e3       	ldi	r24, 0x36	; 54
    457a:	9c e0       	ldi	r25, 0x0C	; 12
    457c:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <_ZN6Output3offEv>
					Lautsprecher.off();
    4580:	85 e4       	ldi	r24, 0x45	; 69
    4582:	9b e0       	ldi	r25, 0x0B	; 11
    4584:	0c 94 76 30 	jmp	0x60ec	; 0x60ec <_ZN5SOUND3offEv>
    4588:	08 95       	ret
				}
				else{
					LED.on();
    458a:	86 e3       	ldi	r24, 0x36	; 54
    458c:	9c e0       	ldi	r25, 0x0C	; 12
    458e:	0e 94 1b 2e 	call	0x5c36	; 0x5c36 <_ZN6Output2onEv>
					Lautsprecher.on();
    4592:	85 e4       	ldi	r24, 0x45	; 69
    4594:	9b e0       	ldi	r25, 0x0B	; 11
    4596:	0c 94 6d 30 	jmp	0x60da	; 0x60da <_ZN5SOUND2onEv>
    459a:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Wanderflag)))
    459c:	33 ff       	sbrs	r19, 3
    459e:	0e c0       	rjmp	.+28     	; 0x45bc <__stack+0x4bd>
		{
			if (taste=='#')
    45a0:	83 32       	cpi	r24, 0x23	; 35
    45a2:	e9 f5       	brne	.+122    	; 0x461e <__stack+0x51f>
			{
				anzeige &= ~(1<<Wanderflag);
    45a4:	c9 01       	movw	r24, r18
    45a6:	97 7f       	andi	r25, 0xF7	; 247
				anzeige |= (1<<menueflag);
    45a8:	90 62       	ori	r25, 0x20	; 32
    45aa:	90 93 40 03 	sts	0x0340, r25
    45ae:	80 93 3f 03 	sts	0x033F, r24
				Accelerometer.ACCBypassmode();
    45b2:	87 e4       	ldi	r24, 0x47	; 71
    45b4:	9b e0       	ldi	r25, 0x0B	; 11
    45b6:	0c 94 59 2b 	jmp	0x56b2	; 0x56b2 <_ZN7LSM303D13ACCBypassmodeEv>
    45ba:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    45bc:	26 ff       	sbrs	r18, 6
    45be:	26 c0       	rjmp	.+76     	; 0x460c <__stack+0x50d>
		{
			if (taste=='#')
    45c0:	83 32       	cpi	r24, 0x23	; 35
    45c2:	41 f4       	brne	.+16     	; 0x45d4 <__stack+0x4d5>
			{
				anzeige&=~(1<<Weckeranzeigeflag);
    45c4:	c9 01       	movw	r24, r18
    45c6:	8f 7b       	andi	r24, 0xBF	; 191
				anzeige|=(1<<menueflag);
    45c8:	90 62       	ori	r25, 0x20	; 32
    45ca:	90 93 40 03 	sts	0x0340, r25
    45ce:	80 93 3f 03 	sts	0x033F, r24
    45d2:	08 95       	ret
			}
			if (taste=='*')
    45d4:	8a 32       	cpi	r24, 0x2A	; 42
    45d6:	09 f0       	breq	.+2      	; 0x45da <__stack+0x4db>
    45d8:	4e c0       	rjmp	.+156    	; 0x4676 <__stack+0x577>
			{
				if (rtc.interupts&(1<<Weckeractiv))
    45da:	94 ff       	sbrs	r25, 4
    45dc:	06 c0       	rjmp	.+12     	; 0x45ea <__stack+0x4eb>
				{
					rtc.interupts &= ~((1<<Weckerein) | (1<<Weckeractiv));
    45de:	89 2f       	mov	r24, r25
    45e0:	87 7e       	andi	r24, 0xE7	; 231
    45e2:	82 60       	ori	r24, 0x02	; 2
    45e4:	80 93 5d 10 	sts	0x105D, r24
    45e8:	0b c0       	rjmp	.+22     	; 0x4600 <__stack+0x501>
				}
				else if ((rtc.interupts&(1<<Weckerein)))
    45ea:	93 ff       	sbrs	r25, 3
    45ec:	06 c0       	rjmp	.+12     	; 0x45fa <__stack+0x4fb>
				{
					rtc.interupts &= ~(1<<Weckerein);
    45ee:	89 2f       	mov	r24, r25
    45f0:	87 7f       	andi	r24, 0xF7	; 247
    45f2:	82 60       	ori	r24, 0x02	; 2
    45f4:	80 93 5d 10 	sts	0x105D, r24
    45f8:	03 c0       	rjmp	.+6      	; 0x4600 <__stack+0x501>
				}
				else{
					rtc.interupts |= (1<<Weckerein);
    45fa:	9a 60       	ori	r25, 0x0A	; 10
    45fc:	90 93 5d 10 	sts	0x105D, r25
				}
				rtc.interupts|=(1<<minuteninterupt);
    4600:	e5 e4       	ldi	r30, 0x45	; 69
    4602:	f0 e1       	ldi	r31, 0x10	; 16
    4604:	80 8d       	ldd	r24, Z+24	; 0x18
    4606:	84 60       	ori	r24, 0x04	; 4
    4608:	80 8f       	std	Z+24, r24	; 0x18
    460a:	2f c0       	rjmp	.+94     	; 0x466a <__stack+0x56b>
			}
		}
		else if (anzeige==0)
    460c:	23 2b       	or	r18, r19
    460e:	39 f4       	brne	.+14     	; 0x461e <__stack+0x51f>
		{
			anzeige|=(1<<menueflag);
    4610:	80 e0       	ldi	r24, 0x00	; 0
    4612:	90 e2       	ldi	r25, 0x20	; 32
    4614:	90 93 40 03 	sts	0x0340, r25
    4618:	80 93 3f 03 	sts	0x033F, r24
    461c:	08 95       	ret
		}
		if ((anzeige&(1<<blinkflag)))
    461e:	20 91 3f 03 	lds	r18, 0x033F
    4622:	30 91 40 03 	lds	r19, 0x0340
    4626:	36 ff       	sbrs	r19, 6
    4628:	26 c0       	rjmp	.+76     	; 0x4676 <__stack+0x577>
		{
			if (taste=='*')
    462a:	8a 32       	cpi	r24, 0x2A	; 42
    462c:	21 f5       	brne	.+72     	; 0x4676 <__stack+0x577>
			{
				anzeige &=~(1<<blinkflag);
    462e:	3f 7b       	andi	r19, 0xBF	; 191
    4630:	30 93 40 03 	sts	0x0340, r19
    4634:	20 93 3f 03 	sts	0x033F, r18
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    4638:	60 e0       	ldi	r22, 0x00	; 0
    463a:	84 e4       	ldi	r24, 0x44	; 68
    463c:	9c e0       	ldi	r25, 0x0C	; 12
    463e:	0e 94 51 03 	call	0x6a2	; 0x6a2 <_ZN7Display6invertEh>
				LED.off();
    4642:	86 e3       	ldi	r24, 0x36	; 54
    4644:	9c e0       	ldi	r25, 0x0C	; 12
    4646:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <_ZN6Output3offEv>
				Vibrationsmotor.off();
    464a:	84 e3       	ldi	r24, 0x34	; 52
    464c:	9c e0       	ldi	r25, 0x0C	; 12
    464e:	0e 94 93 2e 	call	0x5d26	; 0x5d26 <_ZN6Output3offEv>
				if ((rtc.interupts&(1<<Weckeractiv)))
    4652:	80 91 5d 10 	lds	r24, 0x105D
    4656:	98 2f       	mov	r25, r24
    4658:	98 71       	andi	r25, 0x18	; 24
				{
					if ((rtc.interupts&(1<<Weckerein)))
    465a:	98 31       	cpi	r25, 0x18	; 24
    465c:	61 f4       	brne	.+24     	; 0x4676 <__stack+0x577>
					{
						rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
						rtc.interupts &= ~(1<<Alarm);
    465e:	86 7e       	andi	r24, 0xE6	; 230
    4660:	80 93 5d 10 	sts	0x105D, r24
    4664:	08 95       	ret
				anzeige&=~(1<<Uhrflag);
				anzeige|=(1<<menueflag);
			}
			else if (taste=='*')
			{
				pos++;
    4666:	80 93 3d 03 	sts	0x033D, r24
		}
		else if (anzeige==0)
		{
			anzeige|=(1<<menueflag);
		}
		if ((anzeige&(1<<blinkflag)))
    466a:	20 91 3f 03 	lds	r18, 0x033F
    466e:	30 91 40 03 	lds	r19, 0x0340
    4672:	36 fd       	sbrc	r19, 6
    4674:	dc cf       	rjmp	.-72     	; 0x462e <__stack+0x52f>
    4676:	08 95       	ret

00004678 <main>:
void eingabehandler(uint8_t taste);

int main(void)
{
	//initialisierung
	initialisierung();
    4678:	0e 94 0a 1b 	call	0x3614	; 0x3614 <_Z15initialisierungv>
    while(1)
    {
         //Steuerung der interupts durch Handler
         maininterupthandler();
    467c:	4c d8       	rcall	.-3944   	; 0x3716 <_Z19maininterupthandlerv>
         //Steuerung der Anzeige alle Sekunde zur aktualisierung maximale Aktulisierungsrate ist 1Hz
         anzeigehandler();
    467e:	81 d8       	rcall	.-3838   	; 0x3782 <_Z14anzeigehandlerv>
         //Tasthandler
         eingabehandler(Tastatur.Taster());
    4680:	88 e3       	ldi	r24, 0x38	; 56
    4682:	9c e0       	ldi	r25, 0x0C	; 12
    4684:	a7 d3       	rcall	.+1870   	; 0x4dd4 <_ZN9Interface6TasterEv>
    4686:	28 db       	rcall	.-2480   	; 0x3cd8 <_Z14eingabehandlerh>
void inittimer(uint8_t stat);
void maininterupthandler();
void anzeigehandler();
void eingabehandler(uint8_t taste);

int main(void)
    4688:	f9 cf       	rjmp	.-14     	; 0x467c <main+0x4>

0000468a <_GLOBAL__sub_I_kompass>:
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    468a:	84 e6       	ldi	r24, 0x64	; 100
    468c:	90 e1       	ldi	r25, 0x10	; 16
    468e:	77 d4       	rcall	.+2286   	; 0x4f7e <_ZN7KompassC1Ev>

#include "RTC.h"
RTC rtc;
    4690:	85 e4       	ldi	r24, 0x45	; 69
    4692:	90 e1       	ldi	r25, 0x10	; 16
    4694:	0e 94 a5 2f 	call	0x5f4a	; 0x5f4a <_ZN3RTCC1Ev>

#include "Display.h"
Display oled;
    4698:	84 e4       	ldi	r24, 0x44	; 68
    469a:	9c e0       	ldi	r25, 0x0C	; 12
    469c:	0e 94 46 03 	call	0x68c	; 0x68c <_ZN7DisplayC1Ev>

#include "Interface.h"
Interface Tastatur;
    46a0:	88 e3       	ldi	r24, 0x38	; 56
    46a2:	9c e0       	ldi	r25, 0x0C	; 12
    46a4:	5d d3       	rcall	.+1722   	; 0x4d60 <_ZN9InterfaceC1Ev>

#include "Output.h"
Output LED('B',PORTB1);
    46a6:	41 e0       	ldi	r20, 0x01	; 1
    46a8:	62 e4       	ldi	r22, 0x42	; 66
    46aa:	86 e3       	ldi	r24, 0x36	; 54
    46ac:	9c e0       	ldi	r25, 0x0C	; 12
    46ae:	0e 94 e0 2d 	call	0x5bc0	; 0x5bc0 <_ZN6OutputC1Ehh>
Output Vibrationsmotor('B',PORTB2);
    46b2:	42 e0       	ldi	r20, 0x02	; 2
    46b4:	62 e4       	ldi	r22, 0x42	; 66
    46b6:	84 e3       	ldi	r24, 0x34	; 52
    46b8:	9c e0       	ldi	r25, 0x0C	; 12
    46ba:	0e 94 e0 2d 	call	0x5bc0	; 0x5bc0 <_ZN6OutputC1Ehh>
Output IRLED('D',PORTD7);
    46be:	47 e0       	ldi	r20, 0x07	; 7
    46c0:	64 e4       	ldi	r22, 0x44	; 68
    46c2:	82 e3       	ldi	r24, 0x32	; 50
    46c4:	9c e0       	ldi	r25, 0x0C	; 12
    46c6:	0e 94 e0 2d 	call	0x5bc0	; 0x5bc0 <_ZN6OutputC1Ehh>
Output Sound('B',PORTB3);
    46ca:	43 e0       	ldi	r20, 0x03	; 3
    46cc:	62 e4       	ldi	r22, 0x42	; 66
    46ce:	80 e3       	ldi	r24, 0x30	; 48
    46d0:	9c e0       	ldi	r25, 0x0C	; 12
    46d2:	0e 94 e0 2d 	call	0x5bc0	; 0x5bc0 <_ZN6OutputC1Ehh>

#include "LSM303D.h"
LSM303D Accelerometer;
    46d6:	87 e4       	ldi	r24, 0x47	; 71
    46d8:	9b e0       	ldi	r25, 0x0B	; 11
    46da:	0e 94 70 2b 	call	0x56e0	; 0x56e0 <_ZN7LSM303DC1Ev>

//#include "Pressure.h"
//Pressure Baro;

#include "SOUND.h"
SOUND Lautsprecher;
    46de:	85 e4       	ldi	r24, 0x45	; 69
    46e0:	9b e0       	ldi	r25, 0x0B	; 11
    46e2:	0e 94 96 30 	call	0x612c	; 0x612c <_ZN5SOUNDC1Ev>

#include "GOL.h"
GOL gol;
    46e6:	85 e4       	ldi	r24, 0x45	; 69
    46e8:	93 e0       	ldi	r25, 0x03	; 3
    46ea:	49 c0       	rjmp	.+146    	; 0x477e <_ZN3GOLC1Ev>
    46ec:	08 95       	ret

000046ee <_GLOBAL__sub_D_kompass>:
    46ee:	85 e4       	ldi	r24, 0x45	; 69
    46f0:	93 e0       	ldi	r25, 0x03	; 3
    46f2:	26 d0       	rcall	.+76     	; 0x4740 <_ZN3GOLD1Ev>

//#include "Pressure.h"
//Pressure Baro;

#include "SOUND.h"
SOUND Lautsprecher;
    46f4:	85 e4       	ldi	r24, 0x45	; 69
    46f6:	9b e0       	ldi	r25, 0x0B	; 11
    46f8:	0e 94 6c 30 	call	0x60d8	; 0x60d8 <_ZN5SOUNDD1Ev>
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);

#include "LSM303D.h"
LSM303D Accelerometer;
    46fc:	87 e4       	ldi	r24, 0x47	; 71
    46fe:	9b e0       	ldi	r25, 0x0B	; 11
    4700:	67 d6       	rcall	.+3278   	; 0x53d0 <_ZN7LSM303DD1Ev>

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);
    4702:	80 e3       	ldi	r24, 0x30	; 48
    4704:	9c e0       	ldi	r25, 0x0C	; 12
    4706:	0e 94 1a 2e 	call	0x5c34	; 0x5c34 <_ZN6OutputD1Ev>
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
    470a:	82 e3       	ldi	r24, 0x32	; 50
    470c:	9c e0       	ldi	r25, 0x0C	; 12
    470e:	0e 94 1a 2e 	call	0x5c34	; 0x5c34 <_ZN6OutputD1Ev>
#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
    4712:	84 e3       	ldi	r24, 0x34	; 52
    4714:	9c e0       	ldi	r25, 0x0C	; 12
    4716:	0e 94 1a 2e 	call	0x5c34	; 0x5c34 <_ZN6OutputD1Ev>

#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
    471a:	86 e3       	ldi	r24, 0x36	; 54
    471c:	9c e0       	ldi	r25, 0x0C	; 12
    471e:	0e 94 1a 2e 	call	0x5c34	; 0x5c34 <_ZN6OutputD1Ev>

#include "Display.h"
Display oled;

#include "Interface.h"
Interface Tastatur;
    4722:	88 e3       	ldi	r24, 0x38	; 56
    4724:	9c e0       	ldi	r25, 0x0C	; 12
    4726:	2f d3       	rcall	.+1630   	; 0x4d86 <_ZN9InterfaceD1Ev>

#include "RTC.h"
RTC rtc;

#include "Display.h"
Display oled;
    4728:	84 e4       	ldi	r24, 0x44	; 68
    472a:	9c e0       	ldi	r25, 0x0C	; 12
    472c:	0e 94 cf 02 	call	0x59e	; 0x59e <_ZN7DisplayD1Ev>

#include "Kompass.h"
Kompass kompass;

#include "RTC.h"
RTC rtc;
    4730:	85 e4       	ldi	r24, 0x45	; 69
    4732:	90 e1       	ldi	r25, 0x10	; 16
    4734:	0e 94 21 2f 	call	0x5e42	; 0x5e42 <_ZN3RTCD1Ev>
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    4738:	84 e6       	ldi	r24, 0x64	; 100
    473a:	90 e1       	ldi	r25, 0x10	; 16
    473c:	03 c4       	rjmp	.+2054   	; 0x4f44 <_ZN7KompassD1Ev>
    473e:	08 95       	ret

00004740 <_ZN3GOLD1Ev>:
		*y -= GOL_HIGHT;
	}
}

void GOL::set_value(uint8_t x, uint8_t y){
	playground_2[x+(y/8)*GOL_WIDTH] |= (1<<y&7);
    4740:	08 95       	ret

00004742 <_ZN3GOL17delete_playgroundEh>:
    4742:	61 11       	cpse	r22, r1
    4744:	09 c0       	rjmp	.+18     	; 0x4758 <_ZN3GOL17delete_playgroundEh+0x16>
    4746:	fc 01       	movw	r30, r24
    4748:	9c 5f       	subi	r25, 0xFC	; 252
    474a:	dc 01       	movw	r26, r24
    474c:	11 92       	st	Z+, r1
    474e:	1d 92       	st	X+, r1
    4750:	8e 17       	cp	r24, r30
    4752:	9f 07       	cpc	r25, r31
    4754:	d9 f7       	brne	.-10     	; 0x474c <_ZN3GOL17delete_playgroundEh+0xa>
    4756:	08 95       	ret
    4758:	61 30       	cpi	r22, 0x01	; 1
    475a:	39 f4       	brne	.+14     	; 0x476a <_ZN3GOL17delete_playgroundEh+0x28>
    475c:	fc 01       	movw	r30, r24
    475e:	9c 5f       	subi	r25, 0xFC	; 252
    4760:	11 92       	st	Z+, r1
    4762:	e8 17       	cp	r30, r24
    4764:	f9 07       	cpc	r31, r25
    4766:	e1 f7       	brne	.-8      	; 0x4760 <_ZN3GOL17delete_playgroundEh+0x1e>
    4768:	08 95       	ret
    476a:	62 30       	cpi	r22, 0x02	; 2
    476c:	39 f4       	brne	.+14     	; 0x477c <_ZN3GOL17delete_playgroundEh+0x3a>
    476e:	fc 01       	movw	r30, r24
    4770:	fc 5f       	subi	r31, 0xFC	; 252
    4772:	98 5f       	subi	r25, 0xF8	; 248
    4774:	11 92       	st	Z+, r1
    4776:	e8 17       	cp	r30, r24
    4778:	f9 07       	cpc	r31, r25
    477a:	e1 f7       	brne	.-8      	; 0x4774 <_ZN3GOL17delete_playgroundEh+0x32>
    477c:	08 95       	ret

0000477e <_ZN3GOLC1Ev>:
    477e:	60 e0       	ldi	r22, 0x00	; 0
    4780:	e0 cf       	rjmp	.-64     	; 0x4742 <_ZN3GOL17delete_playgroundEh>
    4782:	08 95       	ret

00004784 <_ZN3GOL14set_startvalueEv>:
    4784:	60 e0       	ldi	r22, 0x00	; 0
    4786:	dd cf       	rjmp	.-70     	; 0x4742 <_ZN3GOL17delete_playgroundEh>
    4788:	08 95       	ret

0000478a <_ZN3GOL7check_xEPa>:
    478a:	fb 01       	movw	r30, r22
    478c:	80 81       	ld	r24, Z
    478e:	88 23       	and	r24, r24
    4790:	14 f4       	brge	.+4      	; 0x4796 <_ZN3GOL7check_xEPa+0xc>
    4792:	80 58       	subi	r24, 0x80	; 128
    4794:	80 83       	st	Z, r24
    4796:	08 95       	ret

00004798 <_ZN3GOL7check_yEPa>:
    4798:	fb 01       	movw	r30, r22
    479a:	80 81       	ld	r24, Z
    479c:	88 23       	and	r24, r24
    479e:	1c f4       	brge	.+6      	; 0x47a6 <_ZN3GOL7check_yEPa+0xe>
    47a0:	80 5c       	subi	r24, 0xC0	; 192
    47a2:	80 83       	st	Z, r24
    47a4:	08 95       	ret
    47a6:	80 34       	cpi	r24, 0x40	; 64
    47a8:	1c f0       	brlt	.+6      	; 0x47b0 <_ZN3GOL7check_yEPa+0x18>
    47aa:	80 54       	subi	r24, 0x40	; 64
    47ac:	fb 01       	movw	r30, r22
    47ae:	80 83       	st	Z, r24
    47b0:	08 95       	ret

000047b2 <_ZN3GOL9build_sumEhh>:
    47b2:	af 92       	push	r10
    47b4:	bf 92       	push	r11
    47b6:	cf 92       	push	r12
    47b8:	df 92       	push	r13
    47ba:	ef 92       	push	r14
    47bc:	ff 92       	push	r15
    47be:	0f 93       	push	r16
    47c0:	1f 93       	push	r17
    47c2:	cf 93       	push	r28
    47c4:	df 93       	push	r29
    47c6:	00 d0       	rcall	.+0      	; 0x47c8 <_ZN3GOL9build_sumEhh+0x16>
    47c8:	cd b7       	in	r28, 0x3d	; 61
    47ca:	de b7       	in	r29, 0x3e	; 62
    47cc:	8c 01       	movw	r16, r24
    47ce:	b6 2e       	mov	r11, r22
    47d0:	f4 2e       	mov	r15, r20
    47d2:	19 82       	std	Y+1, r1	; 0x01
    47d4:	ee 24       	eor	r14, r14
    47d6:	e3 94       	inc	r14
    47d8:	e6 0e       	add	r14, r22
    47da:	ea 82       	std	Y+2, r14	; 0x02
    47dc:	be 01       	movw	r22, r28
    47de:	6e 5f       	subi	r22, 0xFE	; 254
    47e0:	7f 4f       	sbci	r23, 0xFF	; 255
    47e2:	d3 df       	rcall	.-90     	; 0x478a <_ZN3GOL7check_xEPa>
    47e4:	f9 82       	std	Y+1, r15	; 0x01
    47e6:	be 01       	movw	r22, r28
    47e8:	6f 5f       	subi	r22, 0xFF	; 255
    47ea:	7f 4f       	sbci	r23, 0xFF	; 255
    47ec:	c8 01       	movw	r24, r16
    47ee:	d4 df       	rcall	.-88     	; 0x4798 <_ZN3GOL7check_yEPa>
    47f0:	8a 81       	ldd	r24, Y+2	; 0x02
    47f2:	08 2e       	mov	r0, r24
    47f4:	00 0c       	add	r0, r0
    47f6:	99 0b       	sbc	r25, r25
    47f8:	f8 01       	movw	r30, r16
    47fa:	e8 0f       	add	r30, r24
    47fc:	f9 1f       	adc	r31, r25
    47fe:	a0 80       	ld	r10, Z
    4800:	39 81       	ldd	r19, Y+1	; 0x01
    4802:	41 e0       	ldi	r20, 0x01	; 1
    4804:	50 e0       	ldi	r21, 0x00	; 0
    4806:	03 2e       	mov	r0, r19
    4808:	02 c0       	rjmp	.+4      	; 0x480e <_ZN3GOL9build_sumEhh+0x5c>
    480a:	44 0f       	add	r20, r20
    480c:	55 1f       	adc	r21, r21
    480e:	0a 94       	dec	r0
    4810:	e2 f7       	brpl	.-8      	; 0x480a <_ZN3GOL9build_sumEhh+0x58>
    4812:	47 70       	andi	r20, 0x07	; 7
    4814:	55 27       	eor	r21, r21
    4816:	23 2f       	mov	r18, r19
    4818:	33 23       	and	r19, r19
    481a:	14 f4       	brge	.+4      	; 0x4820 <_ZN3GOL9build_sumEhh+0x6e>
    481c:	27 e0       	ldi	r18, 0x07	; 7
    481e:	23 0f       	add	r18, r19
    4820:	25 95       	asr	r18
    4822:	25 95       	asr	r18
    4824:	25 95       	asr	r18
    4826:	30 e8       	ldi	r19, 0x80	; 128
    4828:	23 03       	mulsu	r18, r19
    482a:	80 0d       	add	r24, r0
    482c:	91 1d       	adc	r25, r1
    482e:	11 24       	eor	r1, r1
    4830:	f8 01       	movw	r30, r16
    4832:	e8 0f       	add	r30, r24
    4834:	f9 1f       	adc	r31, r25
    4836:	20 81       	ld	r18, Z
    4838:	30 e0       	ldi	r19, 0x00	; 0
    483a:	ca 01       	movw	r24, r20
    483c:	82 23       	and	r24, r18
    483e:	93 23       	and	r25, r19
    4840:	89 2b       	or	r24, r25
    4842:	09 f0       	breq	.+2      	; 0x4846 <_ZN3GOL9build_sumEhh+0x94>
    4844:	a3 94       	inc	r10
    4846:	dd 24       	eor	r13, r13
    4848:	da 94       	dec	r13
    484a:	db 0c       	add	r13, r11
    484c:	da 82       	std	Y+2, r13	; 0x02
    484e:	be 01       	movw	r22, r28
    4850:	6e 5f       	subi	r22, 0xFE	; 254
    4852:	7f 4f       	sbci	r23, 0xFF	; 255
    4854:	c8 01       	movw	r24, r16
    4856:	99 df       	rcall	.-206    	; 0x478a <_ZN3GOL7check_xEPa>
    4858:	f9 82       	std	Y+1, r15	; 0x01
    485a:	be 01       	movw	r22, r28
    485c:	6f 5f       	subi	r22, 0xFF	; 255
    485e:	7f 4f       	sbci	r23, 0xFF	; 255
    4860:	c8 01       	movw	r24, r16
    4862:	9a df       	rcall	.-204    	; 0x4798 <_ZN3GOL7check_yEPa>
    4864:	8a 81       	ldd	r24, Y+2	; 0x02
    4866:	08 2e       	mov	r0, r24
    4868:	00 0c       	add	r0, r0
    486a:	99 0b       	sbc	r25, r25
    486c:	f8 01       	movw	r30, r16
    486e:	e8 0f       	add	r30, r24
    4870:	f9 1f       	adc	r31, r25
    4872:	20 81       	ld	r18, Z
    4874:	a2 0e       	add	r10, r18
    4876:	39 81       	ldd	r19, Y+1	; 0x01
    4878:	41 e0       	ldi	r20, 0x01	; 1
    487a:	50 e0       	ldi	r21, 0x00	; 0
    487c:	03 2e       	mov	r0, r19
    487e:	02 c0       	rjmp	.+4      	; 0x4884 <_ZN3GOL9build_sumEhh+0xd2>
    4880:	44 0f       	add	r20, r20
    4882:	55 1f       	adc	r21, r21
    4884:	0a 94       	dec	r0
    4886:	e2 f7       	brpl	.-8      	; 0x4880 <_ZN3GOL9build_sumEhh+0xce>
    4888:	47 70       	andi	r20, 0x07	; 7
    488a:	55 27       	eor	r21, r21
    488c:	23 2f       	mov	r18, r19
    488e:	33 23       	and	r19, r19
    4890:	14 f4       	brge	.+4      	; 0x4896 <_ZN3GOL9build_sumEhh+0xe4>
    4892:	27 e0       	ldi	r18, 0x07	; 7
    4894:	23 0f       	add	r18, r19
    4896:	25 95       	asr	r18
    4898:	25 95       	asr	r18
    489a:	25 95       	asr	r18
    489c:	30 e8       	ldi	r19, 0x80	; 128
    489e:	23 03       	mulsu	r18, r19
    48a0:	80 0d       	add	r24, r0
    48a2:	91 1d       	adc	r25, r1
    48a4:	11 24       	eor	r1, r1
    48a6:	f8 01       	movw	r30, r16
    48a8:	e8 0f       	add	r30, r24
    48aa:	f9 1f       	adc	r31, r25
    48ac:	80 81       	ld	r24, Z
    48ae:	28 2f       	mov	r18, r24
    48b0:	30 e0       	ldi	r19, 0x00	; 0
    48b2:	ca 01       	movw	r24, r20
    48b4:	82 23       	and	r24, r18
    48b6:	93 23       	and	r25, r19
    48b8:	89 2b       	or	r24, r25
    48ba:	09 f0       	breq	.+2      	; 0x48be <_ZN3GOL9build_sumEhh+0x10c>
    48bc:	a3 94       	inc	r10
    48be:	ba 82       	std	Y+2, r11	; 0x02
    48c0:	be 01       	movw	r22, r28
    48c2:	6e 5f       	subi	r22, 0xFE	; 254
    48c4:	7f 4f       	sbci	r23, 0xFF	; 255
    48c6:	c8 01       	movw	r24, r16
    48c8:	60 df       	rcall	.-320    	; 0x478a <_ZN3GOL7check_xEPa>
    48ca:	cc 24       	eor	r12, r12
    48cc:	c3 94       	inc	r12
    48ce:	cf 0c       	add	r12, r15
    48d0:	c9 82       	std	Y+1, r12	; 0x01
    48d2:	be 01       	movw	r22, r28
    48d4:	6f 5f       	subi	r22, 0xFF	; 255
    48d6:	7f 4f       	sbci	r23, 0xFF	; 255
    48d8:	c8 01       	movw	r24, r16
    48da:	5e df       	rcall	.-324    	; 0x4798 <_ZN3GOL7check_yEPa>
    48dc:	8a 81       	ldd	r24, Y+2	; 0x02
    48de:	08 2e       	mov	r0, r24
    48e0:	00 0c       	add	r0, r0
    48e2:	99 0b       	sbc	r25, r25
    48e4:	f8 01       	movw	r30, r16
    48e6:	e8 0f       	add	r30, r24
    48e8:	f9 1f       	adc	r31, r25
    48ea:	20 81       	ld	r18, Z
    48ec:	a2 0e       	add	r10, r18
    48ee:	59 81       	ldd	r21, Y+1	; 0x01
    48f0:	21 e0       	ldi	r18, 0x01	; 1
    48f2:	30 e0       	ldi	r19, 0x00	; 0
    48f4:	05 2e       	mov	r0, r21
    48f6:	02 c0       	rjmp	.+4      	; 0x48fc <_ZN3GOL9build_sumEhh+0x14a>
    48f8:	22 0f       	add	r18, r18
    48fa:	33 1f       	adc	r19, r19
    48fc:	0a 94       	dec	r0
    48fe:	e2 f7       	brpl	.-8      	; 0x48f8 <_ZN3GOL9build_sumEhh+0x146>
    4900:	27 70       	andi	r18, 0x07	; 7
    4902:	33 27       	eor	r19, r19
    4904:	45 2f       	mov	r20, r21
    4906:	55 23       	and	r21, r21
    4908:	14 f4       	brge	.+4      	; 0x490e <_ZN3GOL9build_sumEhh+0x15c>
    490a:	47 e0       	ldi	r20, 0x07	; 7
    490c:	45 0f       	add	r20, r21
    490e:	45 95       	asr	r20
    4910:	45 95       	asr	r20
    4912:	45 95       	asr	r20
    4914:	50 e8       	ldi	r21, 0x80	; 128
    4916:	45 03       	mulsu	r20, r21
    4918:	80 0d       	add	r24, r0
    491a:	91 1d       	adc	r25, r1
    491c:	11 24       	eor	r1, r1
    491e:	f8 01       	movw	r30, r16
    4920:	e8 0f       	add	r30, r24
    4922:	f9 1f       	adc	r31, r25
    4924:	80 81       	ld	r24, Z
    4926:	90 e0       	ldi	r25, 0x00	; 0
    4928:	82 23       	and	r24, r18
    492a:	93 23       	and	r25, r19
    492c:	89 2b       	or	r24, r25
    492e:	09 f0       	breq	.+2      	; 0x4932 <_ZN3GOL9build_sumEhh+0x180>
    4930:	a3 94       	inc	r10
    4932:	ba 82       	std	Y+2, r11	; 0x02
    4934:	be 01       	movw	r22, r28
    4936:	6e 5f       	subi	r22, 0xFE	; 254
    4938:	7f 4f       	sbci	r23, 0xFF	; 255
    493a:	c8 01       	movw	r24, r16
    493c:	26 df       	rcall	.-436    	; 0x478a <_ZN3GOL7check_xEPa>
    493e:	fa 94       	dec	r15
    4940:	f9 82       	std	Y+1, r15	; 0x01
    4942:	be 01       	movw	r22, r28
    4944:	6f 5f       	subi	r22, 0xFF	; 255
    4946:	7f 4f       	sbci	r23, 0xFF	; 255
    4948:	c8 01       	movw	r24, r16
    494a:	26 df       	rcall	.-436    	; 0x4798 <_ZN3GOL7check_yEPa>
    494c:	8a 81       	ldd	r24, Y+2	; 0x02
    494e:	08 2e       	mov	r0, r24
    4950:	00 0c       	add	r0, r0
    4952:	99 0b       	sbc	r25, r25
    4954:	f8 01       	movw	r30, r16
    4956:	e8 0f       	add	r30, r24
    4958:	f9 1f       	adc	r31, r25
    495a:	20 81       	ld	r18, Z
    495c:	ba 2c       	mov	r11, r10
    495e:	b2 0e       	add	r11, r18
    4960:	39 81       	ldd	r19, Y+1	; 0x01
    4962:	41 e0       	ldi	r20, 0x01	; 1
    4964:	50 e0       	ldi	r21, 0x00	; 0
    4966:	03 2e       	mov	r0, r19
    4968:	02 c0       	rjmp	.+4      	; 0x496e <_ZN3GOL9build_sumEhh+0x1bc>
    496a:	44 0f       	add	r20, r20
    496c:	55 1f       	adc	r21, r21
    496e:	0a 94       	dec	r0
    4970:	e2 f7       	brpl	.-8      	; 0x496a <_ZN3GOL9build_sumEhh+0x1b8>
    4972:	47 70       	andi	r20, 0x07	; 7
    4974:	55 27       	eor	r21, r21
    4976:	23 2f       	mov	r18, r19
    4978:	33 23       	and	r19, r19
    497a:	14 f4       	brge	.+4      	; 0x4980 <_ZN3GOL9build_sumEhh+0x1ce>
    497c:	27 e0       	ldi	r18, 0x07	; 7
    497e:	23 0f       	add	r18, r19
    4980:	25 95       	asr	r18
    4982:	25 95       	asr	r18
    4984:	25 95       	asr	r18
    4986:	30 e8       	ldi	r19, 0x80	; 128
    4988:	23 03       	mulsu	r18, r19
    498a:	80 0d       	add	r24, r0
    498c:	91 1d       	adc	r25, r1
    498e:	11 24       	eor	r1, r1
    4990:	f8 01       	movw	r30, r16
    4992:	e8 0f       	add	r30, r24
    4994:	f9 1f       	adc	r31, r25
    4996:	80 81       	ld	r24, Z
    4998:	28 2f       	mov	r18, r24
    499a:	30 e0       	ldi	r19, 0x00	; 0
    499c:	ca 01       	movw	r24, r20
    499e:	82 23       	and	r24, r18
    49a0:	93 23       	and	r25, r19
    49a2:	89 2b       	or	r24, r25
    49a4:	09 f0       	breq	.+2      	; 0x49a8 <_ZN3GOL9build_sumEhh+0x1f6>
    49a6:	b3 94       	inc	r11
    49a8:	da 82       	std	Y+2, r13	; 0x02
    49aa:	be 01       	movw	r22, r28
    49ac:	6e 5f       	subi	r22, 0xFE	; 254
    49ae:	7f 4f       	sbci	r23, 0xFF	; 255
    49b0:	c8 01       	movw	r24, r16
    49b2:	eb de       	rcall	.-554    	; 0x478a <_ZN3GOL7check_xEPa>
    49b4:	f9 82       	std	Y+1, r15	; 0x01
    49b6:	be 01       	movw	r22, r28
    49b8:	6f 5f       	subi	r22, 0xFF	; 255
    49ba:	7f 4f       	sbci	r23, 0xFF	; 255
    49bc:	c8 01       	movw	r24, r16
    49be:	ec de       	rcall	.-552    	; 0x4798 <_ZN3GOL7check_yEPa>
    49c0:	8a 81       	ldd	r24, Y+2	; 0x02
    49c2:	08 2e       	mov	r0, r24
    49c4:	00 0c       	add	r0, r0
    49c6:	99 0b       	sbc	r25, r25
    49c8:	f8 01       	movw	r30, r16
    49ca:	e8 0f       	add	r30, r24
    49cc:	f9 1f       	adc	r31, r25
    49ce:	20 81       	ld	r18, Z
    49d0:	b2 0e       	add	r11, r18
    49d2:	39 81       	ldd	r19, Y+1	; 0x01
    49d4:	41 e0       	ldi	r20, 0x01	; 1
    49d6:	50 e0       	ldi	r21, 0x00	; 0
    49d8:	03 2e       	mov	r0, r19
    49da:	02 c0       	rjmp	.+4      	; 0x49e0 <_ZN3GOL9build_sumEhh+0x22e>
    49dc:	44 0f       	add	r20, r20
    49de:	55 1f       	adc	r21, r21
    49e0:	0a 94       	dec	r0
    49e2:	e2 f7       	brpl	.-8      	; 0x49dc <_ZN3GOL9build_sumEhh+0x22a>
    49e4:	47 70       	andi	r20, 0x07	; 7
    49e6:	55 27       	eor	r21, r21
    49e8:	23 2f       	mov	r18, r19
    49ea:	33 23       	and	r19, r19
    49ec:	14 f4       	brge	.+4      	; 0x49f2 <_ZN3GOL9build_sumEhh+0x240>
    49ee:	27 e0       	ldi	r18, 0x07	; 7
    49f0:	23 0f       	add	r18, r19
    49f2:	25 95       	asr	r18
    49f4:	25 95       	asr	r18
    49f6:	25 95       	asr	r18
    49f8:	30 e8       	ldi	r19, 0x80	; 128
    49fa:	23 03       	mulsu	r18, r19
    49fc:	80 0d       	add	r24, r0
    49fe:	91 1d       	adc	r25, r1
    4a00:	11 24       	eor	r1, r1
    4a02:	f8 01       	movw	r30, r16
    4a04:	e8 0f       	add	r30, r24
    4a06:	f9 1f       	adc	r31, r25
    4a08:	80 81       	ld	r24, Z
    4a0a:	28 2f       	mov	r18, r24
    4a0c:	30 e0       	ldi	r19, 0x00	; 0
    4a0e:	ca 01       	movw	r24, r20
    4a10:	82 23       	and	r24, r18
    4a12:	93 23       	and	r25, r19
    4a14:	89 2b       	or	r24, r25
    4a16:	09 f0       	breq	.+2      	; 0x4a1a <_ZN3GOL9build_sumEhh+0x268>
    4a18:	b3 94       	inc	r11
    4a1a:	ea 82       	std	Y+2, r14	; 0x02
    4a1c:	be 01       	movw	r22, r28
    4a1e:	6e 5f       	subi	r22, 0xFE	; 254
    4a20:	7f 4f       	sbci	r23, 0xFF	; 255
    4a22:	c8 01       	movw	r24, r16
    4a24:	b2 de       	rcall	.-668    	; 0x478a <_ZN3GOL7check_xEPa>
    4a26:	c9 82       	std	Y+1, r12	; 0x01
    4a28:	be 01       	movw	r22, r28
    4a2a:	6f 5f       	subi	r22, 0xFF	; 255
    4a2c:	7f 4f       	sbci	r23, 0xFF	; 255
    4a2e:	c8 01       	movw	r24, r16
    4a30:	b3 de       	rcall	.-666    	; 0x4798 <_ZN3GOL7check_yEPa>
    4a32:	8a 81       	ldd	r24, Y+2	; 0x02
    4a34:	08 2e       	mov	r0, r24
    4a36:	00 0c       	add	r0, r0
    4a38:	99 0b       	sbc	r25, r25
    4a3a:	f8 01       	movw	r30, r16
    4a3c:	e8 0f       	add	r30, r24
    4a3e:	f9 1f       	adc	r31, r25
    4a40:	20 81       	ld	r18, Z
    4a42:	b2 0e       	add	r11, r18
    4a44:	39 81       	ldd	r19, Y+1	; 0x01
    4a46:	41 e0       	ldi	r20, 0x01	; 1
    4a48:	50 e0       	ldi	r21, 0x00	; 0
    4a4a:	03 2e       	mov	r0, r19
    4a4c:	02 c0       	rjmp	.+4      	; 0x4a52 <_ZN3GOL9build_sumEhh+0x2a0>
    4a4e:	44 0f       	add	r20, r20
    4a50:	55 1f       	adc	r21, r21
    4a52:	0a 94       	dec	r0
    4a54:	e2 f7       	brpl	.-8      	; 0x4a4e <_ZN3GOL9build_sumEhh+0x29c>
    4a56:	47 70       	andi	r20, 0x07	; 7
    4a58:	55 27       	eor	r21, r21
    4a5a:	23 2f       	mov	r18, r19
    4a5c:	33 23       	and	r19, r19
    4a5e:	14 f4       	brge	.+4      	; 0x4a64 <_ZN3GOL9build_sumEhh+0x2b2>
    4a60:	27 e0       	ldi	r18, 0x07	; 7
    4a62:	23 0f       	add	r18, r19
    4a64:	25 95       	asr	r18
    4a66:	25 95       	asr	r18
    4a68:	25 95       	asr	r18
    4a6a:	30 e8       	ldi	r19, 0x80	; 128
    4a6c:	23 03       	mulsu	r18, r19
    4a6e:	80 0d       	add	r24, r0
    4a70:	91 1d       	adc	r25, r1
    4a72:	11 24       	eor	r1, r1
    4a74:	f8 01       	movw	r30, r16
    4a76:	e8 0f       	add	r30, r24
    4a78:	f9 1f       	adc	r31, r25
    4a7a:	80 81       	ld	r24, Z
    4a7c:	28 2f       	mov	r18, r24
    4a7e:	30 e0       	ldi	r19, 0x00	; 0
    4a80:	ca 01       	movw	r24, r20
    4a82:	82 23       	and	r24, r18
    4a84:	93 23       	and	r25, r19
    4a86:	89 2b       	or	r24, r25
    4a88:	09 f0       	breq	.+2      	; 0x4a8c <_ZN3GOL9build_sumEhh+0x2da>
    4a8a:	b3 94       	inc	r11
    4a8c:	da 82       	std	Y+2, r13	; 0x02
    4a8e:	be 01       	movw	r22, r28
    4a90:	6e 5f       	subi	r22, 0xFE	; 254
    4a92:	7f 4f       	sbci	r23, 0xFF	; 255
    4a94:	c8 01       	movw	r24, r16
    4a96:	79 de       	rcall	.-782    	; 0x478a <_ZN3GOL7check_xEPa>
    4a98:	c9 82       	std	Y+1, r12	; 0x01
    4a9a:	be 01       	movw	r22, r28
    4a9c:	6f 5f       	subi	r22, 0xFF	; 255
    4a9e:	7f 4f       	sbci	r23, 0xFF	; 255
    4aa0:	c8 01       	movw	r24, r16
    4aa2:	7a de       	rcall	.-780    	; 0x4798 <_ZN3GOL7check_yEPa>
    4aa4:	2a 81       	ldd	r18, Y+2	; 0x02
    4aa6:	02 2e       	mov	r0, r18
    4aa8:	00 0c       	add	r0, r0
    4aaa:	33 0b       	sbc	r19, r19
    4aac:	f8 01       	movw	r30, r16
    4aae:	e2 0f       	add	r30, r18
    4ab0:	f3 1f       	adc	r31, r19
    4ab2:	90 81       	ld	r25, Z
    4ab4:	8b 2d       	mov	r24, r11
    4ab6:	89 0f       	add	r24, r25
    4ab8:	49 81       	ldd	r20, Y+1	; 0x01
    4aba:	61 e0       	ldi	r22, 0x01	; 1
    4abc:	70 e0       	ldi	r23, 0x00	; 0
    4abe:	04 2e       	mov	r0, r20
    4ac0:	02 c0       	rjmp	.+4      	; 0x4ac6 <_ZN3GOL9build_sumEhh+0x314>
    4ac2:	66 0f       	add	r22, r22
    4ac4:	77 1f       	adc	r23, r23
    4ac6:	0a 94       	dec	r0
    4ac8:	e2 f7       	brpl	.-8      	; 0x4ac2 <_ZN3GOL9build_sumEhh+0x310>
    4aca:	67 70       	andi	r22, 0x07	; 7
    4acc:	77 27       	eor	r23, r23
    4ace:	94 2f       	mov	r25, r20
    4ad0:	44 23       	and	r20, r20
    4ad2:	14 f4       	brge	.+4      	; 0x4ad8 <_ZN3GOL9build_sumEhh+0x326>
    4ad4:	97 e0       	ldi	r25, 0x07	; 7
    4ad6:	94 0f       	add	r25, r20
    4ad8:	49 2f       	mov	r20, r25
    4ada:	45 95       	asr	r20
    4adc:	45 95       	asr	r20
    4ade:	45 95       	asr	r20
    4ae0:	50 e8       	ldi	r21, 0x80	; 128
    4ae2:	45 03       	mulsu	r20, r21
    4ae4:	20 0d       	add	r18, r0
    4ae6:	31 1d       	adc	r19, r1
    4ae8:	11 24       	eor	r1, r1
    4aea:	f8 01       	movw	r30, r16
    4aec:	e2 0f       	add	r30, r18
    4aee:	f3 1f       	adc	r31, r19
    4af0:	40 81       	ld	r20, Z
    4af2:	50 e0       	ldi	r21, 0x00	; 0
    4af4:	9b 01       	movw	r18, r22
    4af6:	24 23       	and	r18, r20
    4af8:	35 23       	and	r19, r21
    4afa:	23 2b       	or	r18, r19
    4afc:	11 f4       	brne	.+4      	; 0x4b02 <_ZN3GOL9build_sumEhh+0x350>
    4afe:	d8 2e       	mov	r13, r24
    4b00:	03 c0       	rjmp	.+6      	; 0x4b08 <_ZN3GOL9build_sumEhh+0x356>
    4b02:	dd 24       	eor	r13, r13
    4b04:	d3 94       	inc	r13
    4b06:	d8 0e       	add	r13, r24
    4b08:	ea 82       	std	Y+2, r14	; 0x02
    4b0a:	be 01       	movw	r22, r28
    4b0c:	6e 5f       	subi	r22, 0xFE	; 254
    4b0e:	7f 4f       	sbci	r23, 0xFF	; 255
    4b10:	c8 01       	movw	r24, r16
    4b12:	3b de       	rcall	.-906    	; 0x478a <_ZN3GOL7check_xEPa>
    4b14:	f9 82       	std	Y+1, r15	; 0x01
    4b16:	be 01       	movw	r22, r28
    4b18:	6f 5f       	subi	r22, 0xFF	; 255
    4b1a:	7f 4f       	sbci	r23, 0xFF	; 255
    4b1c:	c8 01       	movw	r24, r16
    4b1e:	3c de       	rcall	.-904    	; 0x4798 <_ZN3GOL7check_yEPa>
    4b20:	2a 81       	ldd	r18, Y+2	; 0x02
    4b22:	02 2e       	mov	r0, r18
    4b24:	00 0c       	add	r0, r0
    4b26:	33 0b       	sbc	r19, r19
    4b28:	f8 01       	movw	r30, r16
    4b2a:	e2 0f       	add	r30, r18
    4b2c:	f3 1f       	adc	r31, r19
    4b2e:	90 81       	ld	r25, Z
    4b30:	8d 2d       	mov	r24, r13
    4b32:	89 0f       	add	r24, r25
    4b34:	49 81       	ldd	r20, Y+1	; 0x01
    4b36:	61 e0       	ldi	r22, 0x01	; 1
    4b38:	70 e0       	ldi	r23, 0x00	; 0
    4b3a:	04 2e       	mov	r0, r20
    4b3c:	02 c0       	rjmp	.+4      	; 0x4b42 <_ZN3GOL9build_sumEhh+0x390>
    4b3e:	66 0f       	add	r22, r22
    4b40:	77 1f       	adc	r23, r23
    4b42:	0a 94       	dec	r0
    4b44:	e2 f7       	brpl	.-8      	; 0x4b3e <_ZN3GOL9build_sumEhh+0x38c>
    4b46:	67 70       	andi	r22, 0x07	; 7
    4b48:	77 27       	eor	r23, r23
    4b4a:	94 2f       	mov	r25, r20
    4b4c:	44 23       	and	r20, r20
    4b4e:	14 f4       	brge	.+4      	; 0x4b54 <_ZN3GOL9build_sumEhh+0x3a2>
    4b50:	97 e0       	ldi	r25, 0x07	; 7
    4b52:	94 0f       	add	r25, r20
    4b54:	49 2f       	mov	r20, r25
    4b56:	45 95       	asr	r20
    4b58:	45 95       	asr	r20
    4b5a:	45 95       	asr	r20
    4b5c:	50 e8       	ldi	r21, 0x80	; 128
    4b5e:	45 03       	mulsu	r20, r21
    4b60:	20 0d       	add	r18, r0
    4b62:	31 1d       	adc	r19, r1
    4b64:	11 24       	eor	r1, r1
    4b66:	f8 01       	movw	r30, r16
    4b68:	e2 0f       	add	r30, r18
    4b6a:	f3 1f       	adc	r31, r19
    4b6c:	40 81       	ld	r20, Z
    4b6e:	50 e0       	ldi	r21, 0x00	; 0
    4b70:	9b 01       	movw	r18, r22
    4b72:	24 23       	and	r18, r20
    4b74:	35 23       	and	r19, r21
    4b76:	23 2b       	or	r18, r19
    4b78:	09 f0       	breq	.+2      	; 0x4b7c <_ZN3GOL9build_sumEhh+0x3ca>
    4b7a:	8f 5f       	subi	r24, 0xFF	; 255
    4b7c:	0f 90       	pop	r0
    4b7e:	0f 90       	pop	r0
    4b80:	df 91       	pop	r29
    4b82:	cf 91       	pop	r28
    4b84:	1f 91       	pop	r17
    4b86:	0f 91       	pop	r16
    4b88:	ff 90       	pop	r15
    4b8a:	ef 90       	pop	r14
    4b8c:	df 90       	pop	r13
    4b8e:	cf 90       	pop	r12
    4b90:	bf 90       	pop	r11
    4b92:	af 90       	pop	r10
    4b94:	08 95       	ret

00004b96 <_ZN3GOL12delete_valueEhh>:
}

void GOL::delete_value(uint8_t x, uint8_t y){
	playground_2[x+(y/8)*GOL_WIDTH] &= ~(1<<y&7);
    4b96:	e4 2f       	mov	r30, r20
    4b98:	e6 95       	lsr	r30
    4b9a:	e6 95       	lsr	r30
    4b9c:	e6 95       	lsr	r30
    4b9e:	20 e8       	ldi	r18, 0x80	; 128
    4ba0:	e2 9f       	mul	r30, r18
    4ba2:	f0 01       	movw	r30, r0
    4ba4:	11 24       	eor	r1, r1
    4ba6:	e6 0f       	add	r30, r22
    4ba8:	f1 1d       	adc	r31, r1
    4baa:	8e 0f       	add	r24, r30
    4bac:	9f 1f       	adc	r25, r31
    4bae:	fc 01       	movw	r30, r24
    4bb0:	fc 5f       	subi	r31, 0xFC	; 252
    4bb2:	81 e0       	ldi	r24, 0x01	; 1
    4bb4:	90 e0       	ldi	r25, 0x00	; 0
    4bb6:	02 c0       	rjmp	.+4      	; 0x4bbc <_ZN3GOL12delete_valueEhh+0x26>
    4bb8:	88 0f       	add	r24, r24
    4bba:	99 1f       	adc	r25, r25
    4bbc:	4a 95       	dec	r20
    4bbe:	e2 f7       	brpl	.-8      	; 0x4bb8 <_ZN3GOL12delete_valueEhh+0x22>
    4bc0:	87 70       	andi	r24, 0x07	; 7
    4bc2:	80 95       	com	r24
    4bc4:	90 81       	ld	r25, Z
    4bc6:	89 23       	and	r24, r25
    4bc8:	80 83       	st	Z, r24
    4bca:	08 95       	ret

00004bcc <_ZN3GOL9iterationEv>:
// default destructor
GOL::~GOL()
{
} //~GOL

void GOL::iteration(){
    4bcc:	4f 92       	push	r4
    4bce:	5f 92       	push	r5
    4bd0:	6f 92       	push	r6
    4bd2:	7f 92       	push	r7
    4bd4:	8f 92       	push	r8
    4bd6:	9f 92       	push	r9
    4bd8:	af 92       	push	r10
    4bda:	bf 92       	push	r11
    4bdc:	cf 92       	push	r12
    4bde:	df 92       	push	r13
    4be0:	ef 92       	push	r14
    4be2:	ff 92       	push	r15
    4be4:	0f 93       	push	r16
    4be6:	1f 93       	push	r17
    4be8:	cf 93       	push	r28
    4bea:	df 93       	push	r29
    4bec:	7c 01       	movw	r14, r24
	uint8_t summe=0;
	delete_playground(2);
    4bee:	62 e0       	ldi	r22, 0x02	; 2
    4bf0:	a8 dd       	rcall	.-1200   	; 0x4742 <_ZN3GOL17delete_playgroundEh>
    4bf2:	c1 2c       	mov	r12, r1
    4bf4:	d1 2c       	mov	r13, r1
// default destructor
GOL::~GOL()
{
} //~GOL

void GOL::iteration(){
    4bf6:	51 2c       	mov	r5, r1
    4bf8:	41 2c       	mov	r4, r1
		*y -= GOL_HIGHT;
	}
}

void GOL::set_value(uint8_t x, uint8_t y){
	playground_2[x+(y/8)*GOL_WIDTH] |= (1<<y&7);
    4bfa:	aa 24       	eor	r10, r10
    4bfc:	a3 94       	inc	r10
    4bfe:	b1 2c       	mov	r11, r1
    4c00:	9a 2c       	mov	r9, r10
    4c02:	8b 2c       	mov	r8, r11
			summe = build_sum(x,y);
			if (summe > 3 || summe < 2)
			{
				delete_value(x,y);
			}
			else if (summe == 3 && !playground[x+(y/8)*GOL_WIDTH]&(1<<y&7))
    4c04:	75 2c       	mov	r7, r5
    4c06:	64 2c       	mov	r6, r4
    4c08:	5e c0       	rjmp	.+188    	; 0x4cc6 <_ZN3GOL9iterationEv+0xfa>
    4c0a:	1c 2f       	mov	r17, r28
	uint8_t summe=0;
	delete_playground(2);
	for (uint8_t x = 0; x<GOL_WIDTH; x++)
	{
		for (uint8_t y=0; y<GOL_HIGHT;y++){
			summe = build_sum(x,y);
    4c0c:	4c 2f       	mov	r20, r28
    4c0e:	60 2f       	mov	r22, r16
    4c10:	c7 01       	movw	r24, r14
    4c12:	cf dd       	rcall	.-1122   	; 0x47b2 <_ZN3GOL9build_sumEhh>
			if (summe > 3 || summe < 2)
    4c14:	9e ef       	ldi	r25, 0xFE	; 254
    4c16:	98 0f       	add	r25, r24
    4c18:	92 30       	cpi	r25, 0x02	; 2
    4c1a:	28 f0       	brcs	.+10     	; 0x4c26 <_ZN3GOL9iterationEv+0x5a>
			{
				delete_value(x,y);
    4c1c:	4c 2f       	mov	r20, r28
    4c1e:	60 2f       	mov	r22, r16
    4c20:	c7 01       	movw	r24, r14
    4c22:	b9 df       	rcall	.-142    	; 0x4b96 <_ZN3GOL12delete_valueEhh>
    4c24:	44 c0       	rjmp	.+136    	; 0x4cae <_ZN3GOL9iterationEv+0xe2>
			}
			else if (summe == 3 && !playground[x+(y/8)*GOL_WIDTH]&(1<<y&7))
    4c26:	83 30       	cpi	r24, 0x03	; 3
    4c28:	59 f5       	brne	.+86     	; 0x4c80 <_ZN3GOL9iterationEv+0xb4>
    4c2a:	8c 2f       	mov	r24, r28
    4c2c:	86 95       	lsr	r24
    4c2e:	86 95       	lsr	r24
    4c30:	86 95       	lsr	r24
    4c32:	96 01       	movw	r18, r12
    4c34:	90 e8       	ldi	r25, 0x80	; 128
    4c36:	89 9f       	mul	r24, r25
    4c38:	20 0d       	add	r18, r0
    4c3a:	31 1d       	adc	r19, r1
    4c3c:	11 24       	eor	r1, r1
    4c3e:	a5 01       	movw	r20, r10
    4c40:	0c 2e       	mov	r0, r28
    4c42:	02 c0       	rjmp	.+4      	; 0x4c48 <_ZN3GOL9iterationEv+0x7c>
    4c44:	44 0f       	add	r20, r20
    4c46:	55 1f       	adc	r21, r21
    4c48:	0a 94       	dec	r0
    4c4a:	e2 f7       	brpl	.-8      	; 0x4c44 <_ZN3GOL9iterationEv+0x78>
    4c4c:	ba 01       	movw	r22, r20
    4c4e:	67 70       	andi	r22, 0x07	; 7
    4c50:	77 27       	eor	r23, r23
    4c52:	f7 01       	movw	r30, r14
    4c54:	e2 0f       	add	r30, r18
    4c56:	f3 1f       	adc	r31, r19
    4c58:	89 2d       	mov	r24, r9
    4c5a:	98 2d       	mov	r25, r8
    4c5c:	e0 81       	ld	r30, Z
    4c5e:	ee 23       	and	r30, r30
    4c60:	11 f0       	breq	.+4      	; 0x4c66 <_ZN3GOL9iterationEv+0x9a>
    4c62:	87 2d       	mov	r24, r7
    4c64:	96 2d       	mov	r25, r6
    4c66:	86 23       	and	r24, r22
    4c68:	97 23       	and	r25, r23
    4c6a:	89 2b       	or	r24, r25
    4c6c:	49 f0       	breq	.+18     	; 0x4c80 <_ZN3GOL9iterationEv+0xb4>
		*y -= GOL_HIGHT;
	}
}

void GOL::set_value(uint8_t x, uint8_t y){
	playground_2[x+(y/8)*GOL_WIDTH] |= (1<<y&7);
    4c6e:	2e 0d       	add	r18, r14
    4c70:	3f 1d       	adc	r19, r15
    4c72:	f9 01       	movw	r30, r18
    4c74:	fc 5f       	subi	r31, 0xFC	; 252
    4c76:	47 70       	andi	r20, 0x07	; 7
    4c78:	80 81       	ld	r24, Z
    4c7a:	48 2b       	or	r20, r24
    4c7c:	40 83       	st	Z, r20
    4c7e:	17 c0       	rjmp	.+46     	; 0x4cae <_ZN3GOL9iterationEv+0xe2>
    4c80:	16 95       	lsr	r17
    4c82:	16 95       	lsr	r17
    4c84:	16 95       	lsr	r17
    4c86:	f6 01       	movw	r30, r12
    4c88:	90 e8       	ldi	r25, 0x80	; 128
    4c8a:	19 9f       	mul	r17, r25
    4c8c:	e0 0d       	add	r30, r0
    4c8e:	f1 1d       	adc	r31, r1
    4c90:	11 24       	eor	r1, r1
    4c92:	ee 0d       	add	r30, r14
    4c94:	ff 1d       	adc	r31, r15
    4c96:	fc 5f       	subi	r31, 0xFC	; 252
    4c98:	c5 01       	movw	r24, r10
    4c9a:	0c 2e       	mov	r0, r28
    4c9c:	02 c0       	rjmp	.+4      	; 0x4ca2 <_ZN3GOL9iterationEv+0xd6>
    4c9e:	88 0f       	add	r24, r24
    4ca0:	99 1f       	adc	r25, r25
    4ca2:	0a 94       	dec	r0
    4ca4:	e2 f7       	brpl	.-8      	; 0x4c9e <_ZN3GOL9iterationEv+0xd2>
    4ca6:	87 70       	andi	r24, 0x07	; 7
    4ca8:	90 81       	ld	r25, Z
    4caa:	89 2b       	or	r24, r25
    4cac:	80 83       	st	Z, r24
    4cae:	21 96       	adiw	r28, 0x01	; 1
void GOL::iteration(){
	uint8_t summe=0;
	delete_playground(2);
	for (uint8_t x = 0; x<GOL_WIDTH; x++)
	{
		for (uint8_t y=0; y<GOL_HIGHT;y++){
    4cb0:	c0 34       	cpi	r28, 0x40	; 64
    4cb2:	d1 05       	cpc	r29, r1
    4cb4:	09 f0       	breq	.+2      	; 0x4cb8 <_ZN3GOL9iterationEv+0xec>
    4cb6:	a9 cf       	rjmp	.-174    	; 0x4c0a <_ZN3GOL9iterationEv+0x3e>
    4cb8:	8f ef       	ldi	r24, 0xFF	; 255
    4cba:	c8 1a       	sub	r12, r24
    4cbc:	d8 0a       	sbc	r13, r24
} //~GOL

void GOL::iteration(){
	uint8_t summe=0;
	delete_playground(2);
	for (uint8_t x = 0; x<GOL_WIDTH; x++)
    4cbe:	90 e8       	ldi	r25, 0x80	; 128
    4cc0:	c9 16       	cp	r12, r25
    4cc2:	d1 04       	cpc	r13, r1
    4cc4:	21 f0       	breq	.+8      	; 0x4cce <_ZN3GOL9iterationEv+0x102>
    4cc6:	0c 2d       	mov	r16, r12
// default destructor
GOL::~GOL()
{
} //~GOL

void GOL::iteration(){
    4cc8:	c5 2d       	mov	r28, r5
    4cca:	d4 2d       	mov	r29, r4
    4ccc:	9e cf       	rjmp	.-196    	; 0x4c0a <_ZN3GOL9iterationEv+0x3e>
    4cce:	f7 01       	movw	r30, r14
    4cd0:	fc 5f       	subi	r31, 0xFC	; 252
    4cd2:	d7 01       	movw	r26, r14
    4cd4:	98 ef       	ldi	r25, 0xF8	; 248
    4cd6:	f9 1a       	sub	r15, r25
			}
		}
	}
	for (uint16_t i=0; i<GOL_SIZE;i++)
	{
		playground[i]=playground_2[i];
    4cd8:	81 91       	ld	r24, Z+
    4cda:	8d 93       	st	X+, r24
			else{
				set_value(x,y);
			}
		}
	}
	for (uint16_t i=0; i<GOL_SIZE;i++)
    4cdc:	ee 15       	cp	r30, r14
    4cde:	ff 05       	cpc	r31, r15
    4ce0:	d9 f7       	brne	.-10     	; 0x4cd8 <_ZN3GOL9iterationEv+0x10c>
	{
		playground[i]=playground_2[i];
	}
}
    4ce2:	df 91       	pop	r29
    4ce4:	cf 91       	pop	r28
    4ce6:	1f 91       	pop	r17
    4ce8:	0f 91       	pop	r16
    4cea:	ff 90       	pop	r15
    4cec:	ef 90       	pop	r14
    4cee:	df 90       	pop	r13
    4cf0:	cf 90       	pop	r12
    4cf2:	bf 90       	pop	r11
    4cf4:	af 90       	pop	r10
    4cf6:	9f 90       	pop	r9
    4cf8:	8f 90       	pop	r8
    4cfa:	7f 90       	pop	r7
    4cfc:	6f 90       	pop	r6
    4cfe:	5f 90       	pop	r5
    4d00:	4f 90       	pop	r4
    4d02:	08 95       	ret

00004d04 <_ZN3I2CC1Ev>:
void I2C::twi_ack(){
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
}
void I2C::twi_nack(){
	TWCR = (1<<TWINT) | (1<<TWEN);
	TWCR &= ~(1<<TWEA);
    4d04:	82 e0       	ldi	r24, 0x02	; 2
    4d06:	80 93 b8 00 	sts	0x00B8, r24
    4d0a:	08 95       	ret

00004d0c <_ZN3I2CD1Ev>:
    4d0c:	08 95       	ret

00004d0e <_ZN3I2C9twi_startEv>:
    4d0e:	84 ea       	ldi	r24, 0xA4	; 164
    4d10:	80 93 bc 00 	sts	0x00BC, r24
    4d14:	08 95       	ret

00004d16 <_ZN3I2C8twi_stopEv>:
    4d16:	84 e9       	ldi	r24, 0x94	; 148
    4d18:	80 93 bc 00 	sts	0x00BC, r24
    4d1c:	08 95       	ret

00004d1e <_ZN3I2C9twi_writeEh>:
}

void I2C::twi_write(uint8_t data){
	while(!(TWCR & (1<<TWINT)));
    4d1e:	ec eb       	ldi	r30, 0xBC	; 188
    4d20:	f0 e0       	ldi	r31, 0x00	; 0
    4d22:	80 81       	ld	r24, Z
    4d24:	88 23       	and	r24, r24
    4d26:	ec f7       	brge	.-6      	; 0x4d22 <_ZN3I2C9twi_writeEh+0x4>
	TWDR = data;
    4d28:	60 93 bb 00 	sts	0x00BB, r22
	TWCR = (1<<TWINT) | (1<<TWEN);
    4d2c:	84 e8       	ldi	r24, 0x84	; 132
    4d2e:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    4d32:	ec eb       	ldi	r30, 0xBC	; 188
    4d34:	f0 e0       	ldi	r31, 0x00	; 0
    4d36:	80 81       	ld	r24, Z
    4d38:	88 23       	and	r24, r24
    4d3a:	ec f7       	brge	.-6      	; 0x4d36 <_ZN3I2C9twi_writeEh+0x18>
}
    4d3c:	08 95       	ret

00004d3e <_ZN3I2C8twi_readEh>:

uint8_t I2C::twi_read(uint8_t ack){
	if (ack)
    4d3e:	66 23       	and	r22, r22
    4d40:	21 f0       	breq	.+8      	; 0x4d4a <_ZN3I2C8twi_readEh+0xc>
	{
		TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    4d42:	84 ec       	ldi	r24, 0xC4	; 196
    4d44:	80 93 bc 00 	sts	0x00BC, r24
    4d48:	03 c0       	rjmp	.+6      	; 0x4d50 <_ZN3I2C8twi_readEh+0x12>
	}
	else{
		TWCR = (1<<TWINT) | (1<<TWEN);
    4d4a:	84 e8       	ldi	r24, 0x84	; 132
    4d4c:	80 93 bc 00 	sts	0x00BC, r24
	}
	
	while(!(TWCR & (1<<TWINT)));
    4d50:	ec eb       	ldi	r30, 0xBC	; 188
    4d52:	f0 e0       	ldi	r31, 0x00	; 0
    4d54:	80 81       	ld	r24, Z
    4d56:	88 23       	and	r24, r24
    4d58:	ec f7       	brge	.-6      	; 0x4d54 <_ZN3I2C8twi_readEh+0x16>
	return TWDR;
    4d5a:	80 91 bb 00 	lds	r24, 0x00BB
    4d5e:	08 95       	ret

00004d60 <_ZN9InterfaceC1Ev>:
		default:
		abfrage = 0;
		break;
	}
	return abfrage;
}
    4d60:	2a b1       	in	r18, 0x0a	; 10
    4d62:	20 66       	ori	r18, 0x60	; 96
    4d64:	2a b9       	out	0x0a, r18	; 10
    4d66:	28 b1       	in	r18, 0x08	; 8
    4d68:	23 7f       	andi	r18, 0xF3	; 243
    4d6a:	28 b9       	out	0x08, r18	; 8
    4d6c:	27 b1       	in	r18, 0x07	; 7
    4d6e:	2c 60       	ori	r18, 0x0C	; 12
    4d70:	27 b9       	out	0x07, r18	; 7
    4d72:	2a b1       	in	r18, 0x0a	; 10
    4d74:	23 7e       	andi	r18, 0xE3	; 227
    4d76:	2a b9       	out	0x0a, r18	; 10
    4d78:	fc 01       	movw	r30, r24
    4d7a:	0c 96       	adiw	r24, 0x0c	; 12
    4d7c:	11 92       	st	Z+, r1
    4d7e:	e8 17       	cp	r30, r24
    4d80:	f9 07       	cpc	r31, r25
    4d82:	e1 f7       	brne	.-8      	; 0x4d7c <_ZN9InterfaceC1Ev+0x1c>
    4d84:	08 95       	ret

00004d86 <_ZN9InterfaceD1Ev>:
    4d86:	08 95       	ret

00004d88 <_ZN9Interface7paradebEPVhhPh>:
    4d88:	fb 01       	movw	r30, r22
    4d8a:	80 81       	ld	r24, Z
    4d8c:	90 e0       	ldi	r25, 0x00	; 0
    4d8e:	04 2e       	mov	r0, r20
    4d90:	02 c0       	rjmp	.+4      	; 0x4d96 <_ZN9Interface7paradebEPVhhPh+0xe>
    4d92:	95 95       	asr	r25
    4d94:	87 95       	ror	r24
    4d96:	0a 94       	dec	r0
    4d98:	e2 f7       	brpl	.-8      	; 0x4d92 <_ZN9Interface7paradebEPVhhPh+0xa>
    4d9a:	80 ff       	sbrs	r24, 0
    4d9c:	05 c0       	rjmp	.+10     	; 0x4da8 <_ZN9Interface7paradebEPVhhPh+0x20>
    4d9e:	81 e0       	ldi	r24, 0x01	; 1
    4da0:	f9 01       	movw	r30, r18
    4da2:	80 83       	st	Z, r24
    4da4:	80 e0       	ldi	r24, 0x00	; 0
    4da6:	08 95       	ret
    4da8:	f9 01       	movw	r30, r18
    4daa:	80 81       	ld	r24, Z
    4dac:	81 30       	cpi	r24, 0x01	; 1
    4dae:	71 f4       	brne	.+28     	; 0x4dcc <_ZN9Interface7paradebEPVhhPh+0x44>
    4db0:	fb 01       	movw	r30, r22
    4db2:	60 81       	ld	r22, Z
    4db4:	70 e0       	ldi	r23, 0x00	; 0
    4db6:	fb 01       	movw	r30, r22
    4db8:	02 c0       	rjmp	.+4      	; 0x4dbe <_ZN9Interface7paradebEPVhhPh+0x36>
    4dba:	f5 95       	asr	r31
    4dbc:	e7 95       	ror	r30
    4dbe:	4a 95       	dec	r20
    4dc0:	e2 f7       	brpl	.-8      	; 0x4dba <_ZN9Interface7paradebEPVhhPh+0x32>
    4dc2:	e0 fd       	sbrc	r30, 0
    4dc4:	03 c0       	rjmp	.+6      	; 0x4dcc <_ZN9Interface7paradebEPVhhPh+0x44>
    4dc6:	f9 01       	movw	r30, r18
    4dc8:	10 82       	st	Z, r1
    4dca:	08 95       	ret
    4dcc:	f9 01       	movw	r30, r18
    4dce:	10 82       	st	Z, r1
    4dd0:	80 e0       	ldi	r24, 0x00	; 0
    4dd2:	08 95       	ret

00004dd4 <_ZN9Interface6TasterEv>:

uint8_t Interface::Taster(){
    4dd4:	1f 93       	push	r17
    4dd6:	cf 93       	push	r28
    4dd8:	df 93       	push	r29
    4dda:	ec 01       	movw	r28, r24
	uint8_t taste = 'A';
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
    4ddc:	43 9a       	sbi	0x08, 3	; 8
    4dde:	82 e0       	ldi	r24, 0x02	; 2
    4de0:	8a 95       	dec	r24
    4de2:	f1 f7       	brne	.-4      	; 0x4de0 <_ZN9Interface6TasterEv+0xc>
    4de4:	00 c0       	rjmp	.+0      	; 0x4de6 <_ZN9Interface6TasterEv+0x12>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[2])){//debounce(&PIND,PIND4)){
    4de6:	9e 01       	movw	r18, r28
    4de8:	2e 5f       	subi	r18, 0xFE	; 254
    4dea:	3f 4f       	sbci	r19, 0xFF	; 255
    4dec:	44 e0       	ldi	r20, 0x04	; 4
    4dee:	69 e2       	ldi	r22, 0x29	; 41
    4df0:	70 e0       	ldi	r23, 0x00	; 0
    4df2:	ce 01       	movw	r24, r28
    4df4:	c9 df       	rcall	.-110    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4df6:	81 11       	cpse	r24, r1
    4df8:	14 c0       	rjmp	.+40     	; 0x4e22 <_ZN9Interface6TasterEv+0x4e>
		taste = '3';
	}
	else if (paradeb(&PIND,PIND3,&stat[1]))//debounce(&PIND,PIND3))
    4dfa:	9e 01       	movw	r18, r28
    4dfc:	2f 5f       	subi	r18, 0xFF	; 255
    4dfe:	3f 4f       	sbci	r19, 0xFF	; 255
    4e00:	43 e0       	ldi	r20, 0x03	; 3
    4e02:	69 e2       	ldi	r22, 0x29	; 41
    4e04:	70 e0       	ldi	r23, 0x00	; 0
    4e06:	ce 01       	movw	r24, r28
    4e08:	bf df       	rcall	.-130    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4e0a:	81 11       	cpse	r24, r1
    4e0c:	0c c0       	rjmp	.+24     	; 0x4e26 <_ZN9Interface6TasterEv+0x52>
	{
		taste = '2';
	}
	else if (paradeb(&PIND,PIND2,&stat[0]))//debounce(&PIND,PIND2))
    4e0e:	9e 01       	movw	r18, r28
    4e10:	42 e0       	ldi	r20, 0x02	; 2
    4e12:	69 e2       	ldi	r22, 0x29	; 41
    4e14:	70 e0       	ldi	r23, 0x00	; 0
    4e16:	ce 01       	movw	r24, r28
    4e18:	b7 df       	rcall	.-146    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4e1a:	88 23       	and	r24, r24
    4e1c:	31 f0       	breq	.+12     	; 0x4e2a <_ZN9Interface6TasterEv+0x56>
	{
		taste = '1';
    4e1e:	11 e3       	ldi	r17, 0x31	; 49
    4e20:	05 c0       	rjmp	.+10     	; 0x4e2c <_ZN9Interface6TasterEv+0x58>
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[2])){//debounce(&PIND,PIND4)){
		taste = '3';
    4e22:	13 e3       	ldi	r17, 0x33	; 51
    4e24:	03 c0       	rjmp	.+6      	; 0x4e2c <_ZN9Interface6TasterEv+0x58>
	}
	else if (paradeb(&PIND,PIND3,&stat[1]))//debounce(&PIND,PIND3))
	{
		taste = '2';
    4e26:	12 e3       	ldi	r17, 0x32	; 50
    4e28:	01 c0       	rjmp	.+2      	; 0x4e2c <_ZN9Interface6TasterEv+0x58>
	}
	return abfrage;
}

uint8_t Interface::Taster(){
	uint8_t taste = 'A';
    4e2a:	11 e4       	ldi	r17, 0x41	; 65
	}
	else if (paradeb(&PIND,PIND2,&stat[0]))//debounce(&PIND,PIND2))
	{
		taste = '1';
	}
	PORTC &= ~(1<<PORTC3);
    4e2c:	43 98       	cbi	0x08, 3	; 8
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
    4e2e:	42 9a       	sbi	0x08, 2	; 8
    4e30:	82 e0       	ldi	r24, 0x02	; 2
    4e32:	8a 95       	dec	r24
    4e34:	f1 f7       	brne	.-4      	; 0x4e32 <_ZN9Interface6TasterEv+0x5e>
    4e36:	00 c0       	rjmp	.+0      	; 0x4e38 <_ZN9Interface6TasterEv+0x64>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[5])){//debounce(&PIND,PIND4)){
    4e38:	9e 01       	movw	r18, r28
    4e3a:	2b 5f       	subi	r18, 0xFB	; 251
    4e3c:	3f 4f       	sbci	r19, 0xFF	; 255
    4e3e:	44 e0       	ldi	r20, 0x04	; 4
    4e40:	69 e2       	ldi	r22, 0x29	; 41
    4e42:	70 e0       	ldi	r23, 0x00	; 0
    4e44:	ce 01       	movw	r24, r28
    4e46:	a0 df       	rcall	.-192    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4e48:	81 11       	cpse	r24, r1
    4e4a:	16 c0       	rjmp	.+44     	; 0x4e78 <_ZN9Interface6TasterEv+0xa4>
		taste = '6';
	}
	else if (paradeb(&PIND,PIND3,&stat[4]))//debounce(&PIND,PIND3))
    4e4c:	9e 01       	movw	r18, r28
    4e4e:	2c 5f       	subi	r18, 0xFC	; 252
    4e50:	3f 4f       	sbci	r19, 0xFF	; 255
    4e52:	43 e0       	ldi	r20, 0x03	; 3
    4e54:	69 e2       	ldi	r22, 0x29	; 41
    4e56:	70 e0       	ldi	r23, 0x00	; 0
    4e58:	ce 01       	movw	r24, r28
    4e5a:	96 df       	rcall	.-212    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4e5c:	81 11       	cpse	r24, r1
    4e5e:	0e c0       	rjmp	.+28     	; 0x4e7c <_ZN9Interface6TasterEv+0xa8>
	{
		taste = '5';
	}
	else if (paradeb(&PIND,PIND2,&stat[3]))//debounce(&PIND,PIND2))
    4e60:	9e 01       	movw	r18, r28
    4e62:	2d 5f       	subi	r18, 0xFD	; 253
    4e64:	3f 4f       	sbci	r19, 0xFF	; 255
    4e66:	42 e0       	ldi	r20, 0x02	; 2
    4e68:	69 e2       	ldi	r22, 0x29	; 41
    4e6a:	70 e0       	ldi	r23, 0x00	; 0
    4e6c:	ce 01       	movw	r24, r28
    4e6e:	8c df       	rcall	.-232    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4e70:	88 23       	and	r24, r24
    4e72:	29 f0       	breq	.+10     	; 0x4e7e <_ZN9Interface6TasterEv+0xaa>
	{
		taste = '4';
    4e74:	14 e3       	ldi	r17, 0x34	; 52
    4e76:	03 c0       	rjmp	.+6      	; 0x4e7e <_ZN9Interface6TasterEv+0xaa>
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[5])){//debounce(&PIND,PIND4)){
		taste = '6';
    4e78:	16 e3       	ldi	r17, 0x36	; 54
    4e7a:	01 c0       	rjmp	.+2      	; 0x4e7e <_ZN9Interface6TasterEv+0xaa>
	}
	else if (paradeb(&PIND,PIND3,&stat[4]))//debounce(&PIND,PIND3))
	{
		taste = '5';
    4e7c:	15 e3       	ldi	r17, 0x35	; 53
	}
	else if (paradeb(&PIND,PIND2,&stat[3]))//debounce(&PIND,PIND2))
	{
		taste = '4';
	}
	PORTC &= ~(1<<PORTC2);
    4e7e:	42 98       	cbi	0x08, 2	; 8
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
    4e80:	5e 9a       	sbi	0x0b, 6	; 11
    4e82:	82 e0       	ldi	r24, 0x02	; 2
    4e84:	8a 95       	dec	r24
    4e86:	f1 f7       	brne	.-4      	; 0x4e84 <_ZN9Interface6TasterEv+0xb0>
    4e88:	00 c0       	rjmp	.+0      	; 0x4e8a <_ZN9Interface6TasterEv+0xb6>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[8])){//debounce(&PIND,PIND4)){
    4e8a:	9e 01       	movw	r18, r28
    4e8c:	28 5f       	subi	r18, 0xF8	; 248
    4e8e:	3f 4f       	sbci	r19, 0xFF	; 255
    4e90:	44 e0       	ldi	r20, 0x04	; 4
    4e92:	69 e2       	ldi	r22, 0x29	; 41
    4e94:	70 e0       	ldi	r23, 0x00	; 0
    4e96:	ce 01       	movw	r24, r28
    4e98:	77 df       	rcall	.-274    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4e9a:	81 11       	cpse	r24, r1
    4e9c:	16 c0       	rjmp	.+44     	; 0x4eca <_ZN9Interface6TasterEv+0xf6>
		taste = '9';
	}
	else if (paradeb(&PIND,PIND3,&stat[7]))//debounce(&PIND,PIND3))
    4e9e:	9e 01       	movw	r18, r28
    4ea0:	29 5f       	subi	r18, 0xF9	; 249
    4ea2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ea4:	43 e0       	ldi	r20, 0x03	; 3
    4ea6:	69 e2       	ldi	r22, 0x29	; 41
    4ea8:	70 e0       	ldi	r23, 0x00	; 0
    4eaa:	ce 01       	movw	r24, r28
    4eac:	6d df       	rcall	.-294    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4eae:	81 11       	cpse	r24, r1
    4eb0:	0e c0       	rjmp	.+28     	; 0x4ece <_ZN9Interface6TasterEv+0xfa>
	{
		taste = '8';
	}
	else if (paradeb(&PIND,PIND2,&stat[6]))//debounce(&PIND,PIND2))
    4eb2:	9e 01       	movw	r18, r28
    4eb4:	2a 5f       	subi	r18, 0xFA	; 250
    4eb6:	3f 4f       	sbci	r19, 0xFF	; 255
    4eb8:	42 e0       	ldi	r20, 0x02	; 2
    4eba:	69 e2       	ldi	r22, 0x29	; 41
    4ebc:	70 e0       	ldi	r23, 0x00	; 0
    4ebe:	ce 01       	movw	r24, r28
    4ec0:	63 df       	rcall	.-314    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4ec2:	88 23       	and	r24, r24
    4ec4:	29 f0       	breq	.+10     	; 0x4ed0 <_ZN9Interface6TasterEv+0xfc>
	{
		taste = '7';
    4ec6:	17 e3       	ldi	r17, 0x37	; 55
    4ec8:	03 c0       	rjmp	.+6      	; 0x4ed0 <_ZN9Interface6TasterEv+0xfc>
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[8])){//debounce(&PIND,PIND4)){
		taste = '9';
    4eca:	19 e3       	ldi	r17, 0x39	; 57
    4ecc:	01 c0       	rjmp	.+2      	; 0x4ed0 <_ZN9Interface6TasterEv+0xfc>
	}
	else if (paradeb(&PIND,PIND3,&stat[7]))//debounce(&PIND,PIND3))
	{
		taste = '8';
    4ece:	18 e3       	ldi	r17, 0x38	; 56
	}
	else if (paradeb(&PIND,PIND2,&stat[6]))//debounce(&PIND,PIND2))
	{
		taste = '7';
	}
	PORTD &= ~(1<<PORTD6);
    4ed0:	5e 98       	cbi	0x0b, 6	; 11
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
    4ed2:	5d 9a       	sbi	0x0b, 5	; 11
    4ed4:	82 e0       	ldi	r24, 0x02	; 2
    4ed6:	8a 95       	dec	r24
    4ed8:	f1 f7       	brne	.-4      	; 0x4ed6 <_ZN9Interface6TasterEv+0x102>
    4eda:	00 c0       	rjmp	.+0      	; 0x4edc <_ZN9Interface6TasterEv+0x108>
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[11])){//debounce(&PIND,PIND4)){
    4edc:	9e 01       	movw	r18, r28
    4ede:	25 5f       	subi	r18, 0xF5	; 245
    4ee0:	3f 4f       	sbci	r19, 0xFF	; 255
    4ee2:	44 e0       	ldi	r20, 0x04	; 4
    4ee4:	69 e2       	ldi	r22, 0x29	; 41
    4ee6:	70 e0       	ldi	r23, 0x00	; 0
    4ee8:	ce 01       	movw	r24, r28
    4eea:	4e df       	rcall	.-356    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4eec:	81 11       	cpse	r24, r1
    4eee:	16 c0       	rjmp	.+44     	; 0x4f1c <_ZN9Interface6TasterEv+0x148>
		taste = '#';
	}
	else if (paradeb(&PIND,PIND3,&stat[10]))//debounce(&PIND,PIND3))
    4ef0:	9e 01       	movw	r18, r28
    4ef2:	26 5f       	subi	r18, 0xF6	; 246
    4ef4:	3f 4f       	sbci	r19, 0xFF	; 255
    4ef6:	43 e0       	ldi	r20, 0x03	; 3
    4ef8:	69 e2       	ldi	r22, 0x29	; 41
    4efa:	70 e0       	ldi	r23, 0x00	; 0
    4efc:	ce 01       	movw	r24, r28
    4efe:	44 df       	rcall	.-376    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4f00:	81 11       	cpse	r24, r1
    4f02:	0e c0       	rjmp	.+28     	; 0x4f20 <_ZN9Interface6TasterEv+0x14c>
	{
		taste = '0';
	}
	else if (paradeb(&PIND,PIND2,&stat[9]))//debounce(&PIND,PIND2))
    4f04:	9e 01       	movw	r18, r28
    4f06:	27 5f       	subi	r18, 0xF7	; 247
    4f08:	3f 4f       	sbci	r19, 0xFF	; 255
    4f0a:	42 e0       	ldi	r20, 0x02	; 2
    4f0c:	69 e2       	ldi	r22, 0x29	; 41
    4f0e:	70 e0       	ldi	r23, 0x00	; 0
    4f10:	ce 01       	movw	r24, r28
    4f12:	3a df       	rcall	.-396    	; 0x4d88 <_ZN9Interface7paradebEPVhhPh>
    4f14:	88 23       	and	r24, r24
    4f16:	29 f0       	breq	.+10     	; 0x4f22 <_ZN9Interface6TasterEv+0x14e>
	{
		taste = '*';
    4f18:	1a e2       	ldi	r17, 0x2A	; 42
    4f1a:	03 c0       	rjmp	.+6      	; 0x4f22 <_ZN9Interface6TasterEv+0x14e>
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
	_delay_us(1);
	if(paradeb(&PIND,PIND4,&stat[11])){//debounce(&PIND,PIND4)){
		taste = '#';
    4f1c:	13 e2       	ldi	r17, 0x23	; 35
    4f1e:	01 c0       	rjmp	.+2      	; 0x4f22 <_ZN9Interface6TasterEv+0x14e>
	}
	else if (paradeb(&PIND,PIND3,&stat[10]))//debounce(&PIND,PIND3))
	{
		taste = '0';
    4f20:	10 e3       	ldi	r17, 0x30	; 48
	}
	else if (paradeb(&PIND,PIND2,&stat[9]))//debounce(&PIND,PIND2))
	{
		taste = '*';
	}
	PORTD &= ~(1<<PORTD5);
    4f22:	5d 98       	cbi	0x0b, 5	; 11
	
	return taste;
}
    4f24:	81 2f       	mov	r24, r17
    4f26:	df 91       	pop	r29
    4f28:	cf 91       	pop	r28
    4f2a:	1f 91       	pop	r17
    4f2c:	08 95       	ret

00004f2e <_ZN9Interface17ZahlenausTastaturEv>:

uint8_t Interface::ZahlenausTastatur(){
    4f2e:	cf 93       	push	r28
    4f30:	df 93       	push	r29
    4f32:	ec 01       	movw	r28, r24
	while(true){
		uint8_t taste = Taster();
    4f34:	ce 01       	movw	r24, r28
    4f36:	4e df       	rcall	.-356    	; 0x4dd4 <_ZN9Interface6TasterEv>
		if(taste>='0' && taste<='9'){
    4f38:	80 53       	subi	r24, 0x30	; 48
    4f3a:	8a 30       	cpi	r24, 0x0A	; 10
    4f3c:	d8 f7       	brcc	.-10     	; 0x4f34 <_ZN9Interface17ZahlenausTastaturEv+0x6>
			return taste - '0';
		}
	}
}
    4f3e:	df 91       	pop	r29
    4f40:	cf 91       	pop	r28
    4f42:	08 95       	ret

00004f44 <_ZN7KompassD1Ev>:
	for (uint8_t i=0;i<3;i++)
	{
		achsen[i]=0;
		offset[i]=0;
	}
}
    4f44:	06 96       	adiw	r24, 0x06	; 6
    4f46:	e2 ce       	rjmp	.-572    	; 0x4d0c <_ZN3I2CD1Ev>
    4f48:	08 95       	ret

00004f4a <_ZN7Kompass16HMC5883L_commandEhh>:
    4f4a:	0f 93       	push	r16
    4f4c:	1f 93       	push	r17
    4f4e:	cf 93       	push	r28
    4f50:	df 93       	push	r29
    4f52:	06 2f       	mov	r16, r22
    4f54:	14 2f       	mov	r17, r20
    4f56:	ec 01       	movw	r28, r24
    4f58:	26 96       	adiw	r28, 0x06	; 6
    4f5a:	ce 01       	movw	r24, r28
    4f5c:	d8 de       	rcall	.-592    	; 0x4d0e <_ZN3I2C9twi_startEv>
    4f5e:	6c e3       	ldi	r22, 0x3C	; 60
    4f60:	ce 01       	movw	r24, r28
    4f62:	dd de       	rcall	.-582    	; 0x4d1e <_ZN3I2C9twi_writeEh>
    4f64:	60 2f       	mov	r22, r16
    4f66:	ce 01       	movw	r24, r28
    4f68:	da de       	rcall	.-588    	; 0x4d1e <_ZN3I2C9twi_writeEh>
    4f6a:	61 2f       	mov	r22, r17
    4f6c:	ce 01       	movw	r24, r28
    4f6e:	d7 de       	rcall	.-594    	; 0x4d1e <_ZN3I2C9twi_writeEh>
    4f70:	ce 01       	movw	r24, r28
    4f72:	d1 de       	rcall	.-606    	; 0x4d16 <_ZN3I2C8twi_stopEv>
    4f74:	df 91       	pop	r29
    4f76:	cf 91       	pop	r28
    4f78:	1f 91       	pop	r17
    4f7a:	0f 91       	pop	r16
    4f7c:	08 95       	ret

00004f7e <_ZN7KompassC1Ev>:
    4f7e:	cf 93       	push	r28
    4f80:	df 93       	push	r29
    4f82:	ec 01       	movw	r28, r24
    4f84:	06 96       	adiw	r24, 0x06	; 6
    4f86:	be de       	rcall	.-644    	; 0x4d04 <_ZN3I2CC1Ev>
    4f88:	40 e7       	ldi	r20, 0x70	; 112
    4f8a:	60 e0       	ldi	r22, 0x00	; 0
    4f8c:	ce 01       	movw	r24, r28
    4f8e:	dd df       	rcall	.-70     	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
    4f90:	40 e2       	ldi	r20, 0x20	; 32
    4f92:	61 e0       	ldi	r22, 0x01	; 1
    4f94:	ce 01       	movw	r24, r28
    4f96:	d9 df       	rcall	.-78     	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
    4f98:	41 e0       	ldi	r20, 0x01	; 1
    4f9a:	62 e0       	ldi	r22, 0x02	; 2
    4f9c:	ce 01       	movw	r24, r28
    4f9e:	d5 df       	rcall	.-86     	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
    4fa0:	19 82       	std	Y+1, r1	; 0x01
    4fa2:	18 82       	st	Y, r1
    4fa4:	18 86       	std	Y+8, r1	; 0x08
    4fa6:	1f 82       	std	Y+7, r1	; 0x07
    4fa8:	1b 82       	std	Y+3, r1	; 0x03
    4faa:	1a 82       	std	Y+2, r1	; 0x02
    4fac:	1a 86       	std	Y+10, r1	; 0x0a
    4fae:	19 86       	std	Y+9, r1	; 0x09
    4fb0:	1d 82       	std	Y+5, r1	; 0x05
    4fb2:	1c 82       	std	Y+4, r1	; 0x04
    4fb4:	1c 86       	std	Y+12, r1	; 0x0c
    4fb6:	1b 86       	std	Y+11, r1	; 0x0b
    4fb8:	df 91       	pop	r29
    4fba:	cf 91       	pop	r28
    4fbc:	08 95       	ret

00004fbe <_ZN7Kompass20HMC5883L_readHeadingEv>:

uint8_t Kompass::HMC5883L_readHeading(){
    4fbe:	af 92       	push	r10
    4fc0:	bf 92       	push	r11
    4fc2:	cf 92       	push	r12
    4fc4:	df 92       	push	r13
    4fc6:	ef 92       	push	r14
    4fc8:	ff 92       	push	r15
    4fca:	1f 93       	push	r17
    4fcc:	cf 93       	push	r28
    4fce:	df 93       	push	r29
    4fd0:	00 d0       	rcall	.+0      	; 0x4fd2 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14>
    4fd2:	00 d0       	rcall	.+0      	; 0x4fd4 <_ZN7Kompass20HMC5883L_readHeadingEv+0x16>
    4fd4:	00 d0       	rcall	.+0      	; 0x4fd6 <_ZN7Kompass20HMC5883L_readHeadingEv+0x18>
    4fd6:	cd b7       	in	r28, 0x3d	; 61
    4fd8:	de b7       	in	r29, 0x3e	; 62
    4fda:	5c 01       	movw	r10, r24
	cli();
    4fdc:	f8 94       	cli
	uint8_t heading[6];
	i2c.twi_start();
    4fde:	6c 01       	movw	r12, r24
    4fe0:	26 e0       	ldi	r18, 0x06	; 6
    4fe2:	c2 0e       	add	r12, r18
    4fe4:	d1 1c       	adc	r13, r1
    4fe6:	c6 01       	movw	r24, r12
    4fe8:	92 de       	rcall	.-732    	; 0x4d0e <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCWRITEADRESSE);
    4fea:	6c e3       	ldi	r22, 0x3C	; 60
    4fec:	c6 01       	movw	r24, r12
    4fee:	97 de       	rcall	.-722    	; 0x4d1e <_ZN3I2C9twi_writeEh>
	i2c.twi_write(0x03);
    4ff0:	63 e0       	ldi	r22, 0x03	; 3
    4ff2:	c6 01       	movw	r24, r12
    4ff4:	94 de       	rcall	.-728    	; 0x4d1e <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    4ff6:	c6 01       	movw	r24, r12
    4ff8:	8a de       	rcall	.-748    	; 0x4d0e <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCREADADRESSE);
    4ffa:	6d e3       	ldi	r22, 0x3D	; 61
    4ffc:	c6 01       	movw	r24, r12
    4ffe:	8f de       	rcall	.-738    	; 0x4d1e <_ZN3I2C9twi_writeEh>
    5000:	ce 01       	movw	r24, r28
    5002:	01 96       	adiw	r24, 0x01	; 1
    5004:	7c 01       	movw	r14, r24
	
	for(uint8_t i=0; i<6;i++){
    5006:	10 e0       	ldi	r17, 0x00	; 0
		if (i<5)
    5008:	15 30       	cpi	r17, 0x05	; 5
    500a:	30 f4       	brcc	.+12     	; 0x5018 <_ZN7Kompass20HMC5883L_readHeadingEv+0x5a>
		{
			heading[i]=i2c.twi_read(1);
    500c:	61 e0       	ldi	r22, 0x01	; 1
    500e:	c6 01       	movw	r24, r12
    5010:	96 de       	rcall	.-724    	; 0x4d3e <_ZN3I2C8twi_readEh>
    5012:	f7 01       	movw	r30, r14
    5014:	80 83       	st	Z, r24
    5016:	05 c0       	rjmp	.+10     	; 0x5022 <_ZN7Kompass20HMC5883L_readHeadingEv+0x64>
		}
		else
		{
			heading[i]=i2c.twi_read(0);
    5018:	60 e0       	ldi	r22, 0x00	; 0
    501a:	c6 01       	movw	r24, r12
    501c:	90 de       	rcall	.-736    	; 0x4d3e <_ZN3I2C8twi_readEh>
    501e:	f7 01       	movw	r30, r14
    5020:	80 83       	st	Z, r24
	i2c.twi_write(HMCWRITEADRESSE);
	i2c.twi_write(0x03);
	i2c.twi_start();
	i2c.twi_write(HMCREADADRESSE);
	
	for(uint8_t i=0; i<6;i++){
    5022:	1f 5f       	subi	r17, 0xFF	; 255
    5024:	ff ef       	ldi	r31, 0xFF	; 255
    5026:	ef 1a       	sub	r14, r31
    5028:	ff 0a       	sbc	r15, r31
    502a:	16 30       	cpi	r17, 0x06	; 6
    502c:	69 f7       	brne	.-38     	; 0x5008 <_ZN7Kompass20HMC5883L_readHeadingEv+0x4a>
		{
			heading[i]=i2c.twi_read(0);
		}
		
	}
	i2c.twi_stop();
    502e:	c6 01       	movw	r24, r12
    5030:	72 de       	rcall	.-796    	; 0x4d16 <_ZN3I2C8twi_stopEv>
	achsen[0] =(int16_t) (heading[1] | (heading[0] << 8));
    5032:	89 81       	ldd	r24, Y+1	; 0x01
    5034:	90 e0       	ldi	r25, 0x00	; 0
    5036:	98 2f       	mov	r25, r24
    5038:	88 27       	eor	r24, r24
    503a:	2a 81       	ldd	r18, Y+2	; 0x02
    503c:	82 2b       	or	r24, r18
    503e:	f5 01       	movw	r30, r10
    5040:	91 83       	std	Z+1, r25	; 0x01
    5042:	80 83       	st	Z, r24
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
    5044:	8b 81       	ldd	r24, Y+3	; 0x03
    5046:	90 e0       	ldi	r25, 0x00	; 0
    5048:	98 2f       	mov	r25, r24
    504a:	88 27       	eor	r24, r24
    504c:	2c 81       	ldd	r18, Y+4	; 0x04
    504e:	82 2b       	or	r24, r18
    5050:	93 83       	std	Z+3, r25	; 0x03
    5052:	82 83       	std	Z+2, r24	; 0x02
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
    5054:	8d 81       	ldd	r24, Y+5	; 0x05
    5056:	90 e0       	ldi	r25, 0x00	; 0
    5058:	98 2f       	mov	r25, r24
    505a:	88 27       	eor	r24, r24
    505c:	2e 81       	ldd	r18, Y+6	; 0x06
    505e:	82 2b       	or	r24, r18
    5060:	95 83       	std	Z+5, r25	; 0x05
    5062:	84 83       	std	Z+4, r24	; 0x04
	sei();
    5064:	78 94       	sei
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
    5066:	80 81       	ld	r24, Z
    5068:	91 81       	ldd	r25, Z+1	; 0x01
    506a:	81 15       	cp	r24, r1
    506c:	90 4f       	sbci	r25, 0xF0	; 240
    506e:	09 f4       	brne	.+2      	; 0x5072 <_ZN7Kompass20HMC5883L_readHeadingEv+0xb4>
    5070:	49 c0       	rjmp	.+146    	; 0x5104 <_ZN7Kompass20HMC5883L_readHeadingEv+0x146>
    5072:	f5 01       	movw	r30, r10
    5074:	82 81       	ldd	r24, Z+2	; 0x02
    5076:	93 81       	ldd	r25, Z+3	; 0x03
    5078:	81 15       	cp	r24, r1
    507a:	90 4f       	sbci	r25, 0xF0	; 240
    507c:	09 f4       	brne	.+2      	; 0x5080 <_ZN7Kompass20HMC5883L_readHeadingEv+0xc2>
    507e:	44 c0       	rjmp	.+136    	; 0x5108 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14a>
    5080:	f5 01       	movw	r30, r10
    5082:	84 81       	ldd	r24, Z+4	; 0x04
    5084:	95 81       	ldd	r25, Z+5	; 0x05
    5086:	81 15       	cp	r24, r1
    5088:	90 4f       	sbci	r25, 0xF0	; 240
    508a:	09 f4       	brne	.+2      	; 0x508e <_ZN7Kompass20HMC5883L_readHeadingEv+0xd0>
    508c:	3f c0       	rjmp	.+126    	; 0x510c <_ZN7Kompass20HMC5883L_readHeadingEv+0x14e>
    508e:	f5 01       	movw	r30, r10
    5090:	26 e0       	ldi	r18, 0x06	; 6
    5092:	a2 0e       	add	r10, r18
    5094:	b1 1c       	adc	r11, r1
    5096:	df 01       	movw	r26, r30
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
			if(achsen[i]>max[i]){
    5098:	80 81       	ld	r24, Z
    509a:	91 81       	ldd	r25, Z+1	; 0x01
    509c:	25 85       	ldd	r18, Z+13	; 0x0d
    509e:	36 85       	ldd	r19, Z+14	; 0x0e
    50a0:	28 17       	cp	r18, r24
    50a2:	39 07       	cpc	r19, r25
    50a4:	84 f4       	brge	.+32     	; 0x50c6 <_ZN7Kompass20HMC5883L_readHeadingEv+0x108>
				max[i]=achsen[i];
    50a6:	96 87       	std	Z+14, r25	; 0x0e
    50a8:	85 87       	std	Z+13, r24	; 0x0d
				offset[i]=(max[i]+min[i])/2;
    50aa:	23 89       	ldd	r18, Z+19	; 0x13
    50ac:	34 89       	ldd	r19, Z+20	; 0x14
    50ae:	82 0f       	add	r24, r18
    50b0:	93 1f       	adc	r25, r19
    50b2:	99 23       	and	r25, r25
    50b4:	0c f4       	brge	.+2      	; 0x50b8 <_ZN7Kompass20HMC5883L_readHeadingEv+0xfa>
    50b6:	01 96       	adiw	r24, 0x01	; 1
    50b8:	95 95       	asr	r25
    50ba:	87 95       	ror	r24
    50bc:	18 96       	adiw	r26, 0x08	; 8
    50be:	9c 93       	st	X, r25
    50c0:	8e 93       	st	-X, r24
    50c2:	17 97       	sbiw	r26, 0x07	; 7
    50c4:	19 c0       	rjmp	.+50     	; 0x50f8 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13a>
			}
			else if(achsen[i]<min[i]){
    50c6:	43 89       	ldd	r20, Z+19	; 0x13
    50c8:	54 89       	ldd	r21, Z+20	; 0x14
    50ca:	84 17       	cp	r24, r20
    50cc:	95 07       	cpc	r25, r21
    50ce:	74 f4       	brge	.+28     	; 0x50ec <_ZN7Kompass20HMC5883L_readHeadingEv+0x12e>
				min[i]=achsen[i];
    50d0:	94 8b       	std	Z+20, r25	; 0x14
    50d2:	83 8b       	std	Z+19, r24	; 0x13
				offset[i]=(max[i]+min[i])/2;
    50d4:	82 0f       	add	r24, r18
    50d6:	93 1f       	adc	r25, r19
    50d8:	99 23       	and	r25, r25
    50da:	0c f4       	brge	.+2      	; 0x50de <_ZN7Kompass20HMC5883L_readHeadingEv+0x120>
    50dc:	01 96       	adiw	r24, 0x01	; 1
    50de:	95 95       	asr	r25
    50e0:	87 95       	ror	r24
    50e2:	18 96       	adiw	r26, 0x08	; 8
    50e4:	9c 93       	st	X, r25
    50e6:	8e 93       	st	-X, r24
    50e8:	17 97       	sbiw	r26, 0x07	; 7
    50ea:	06 c0       	rjmp	.+12     	; 0x50f8 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13a>
			}
			else {
				achsen[i]-=offset[i];
    50ec:	27 81       	ldd	r18, Z+7	; 0x07
    50ee:	30 85       	ldd	r19, Z+8	; 0x08
    50f0:	82 1b       	sub	r24, r18
    50f2:	93 0b       	sbc	r25, r19
    50f4:	91 83       	std	Z+1, r25	; 0x01
    50f6:	80 83       	st	Z, r24
    50f8:	32 96       	adiw	r30, 0x02	; 2
		return 1;
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
    50fa:	ea 15       	cp	r30, r10
    50fc:	fb 05       	cpc	r31, r11
    50fe:	59 f6       	brne	.-106    	; 0x5096 <_ZN7Kompass20HMC5883L_readHeadingEv+0xd8>
				achsen[i]-=offset[i];
			}
		}
	}
	
	return 0;
    5100:	80 e0       	ldi	r24, 0x00	; 0
    5102:	05 c0       	rjmp	.+10     	; 0x510e <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
	sei();
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
	{
		return 1;
    5104:	81 e0       	ldi	r24, 0x01	; 1
    5106:	03 c0       	rjmp	.+6      	; 0x510e <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    5108:	81 e0       	ldi	r24, 0x01	; 1
    510a:	01 c0       	rjmp	.+2      	; 0x510e <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    510c:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	
	return 0;
}
    510e:	26 96       	adiw	r28, 0x06	; 6
    5110:	0f b6       	in	r0, 0x3f	; 63
    5112:	f8 94       	cli
    5114:	de bf       	out	0x3e, r29	; 62
    5116:	0f be       	out	0x3f, r0	; 63
    5118:	cd bf       	out	0x3d, r28	; 61
    511a:	df 91       	pop	r29
    511c:	cf 91       	pop	r28
    511e:	1f 91       	pop	r17
    5120:	ff 90       	pop	r15
    5122:	ef 90       	pop	r14
    5124:	df 90       	pop	r13
    5126:	cf 90       	pop	r12
    5128:	bf 90       	pop	r11
    512a:	af 90       	pop	r10
    512c:	08 95       	ret

0000512e <_ZN7Kompass5angleEdd>:

double Kompass::angle(double roll, double pitch){
    512e:	2f 92       	push	r2
    5130:	3f 92       	push	r3
    5132:	4f 92       	push	r4
    5134:	5f 92       	push	r5
    5136:	6f 92       	push	r6
    5138:	7f 92       	push	r7
    513a:	8f 92       	push	r8
    513c:	9f 92       	push	r9
    513e:	af 92       	push	r10
    5140:	bf 92       	push	r11
    5142:	cf 92       	push	r12
    5144:	df 92       	push	r13
    5146:	ef 92       	push	r14
    5148:	ff 92       	push	r15
    514a:	0f 93       	push	r16
    514c:	1f 93       	push	r17
    514e:	cf 93       	push	r28
    5150:	df 93       	push	r29
    5152:	cd b7       	in	r28, 0x3d	; 61
    5154:	de b7       	in	r29, 0x3e	; 62
    5156:	64 97       	sbiw	r28, 0x14	; 20
    5158:	0f b6       	in	r0, 0x3f	; 63
    515a:	f8 94       	cli
    515c:	de bf       	out	0x3e, r29	; 62
    515e:	0f be       	out	0x3f, r0	; 63
    5160:	cd bf       	out	0x3d, r28	; 61
    5162:	1c 01       	movw	r2, r24
    5164:	4a 01       	movw	r8, r20
    5166:	5b 01       	movw	r10, r22
    5168:	68 01       	movw	r12, r16
    516a:	79 01       	movw	r14, r18
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
    516c:	28 df       	rcall	.-432    	; 0x4fbe <_ZN7Kompass20HMC5883L_readHeadingEv>
    516e:	81 11       	cpse	r24, r1
    5170:	f4 c0       	rjmp	.+488    	; 0x535a <_ZN7Kompass5angleEdd+0x22c>
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    5172:	c7 01       	movw	r24, r14
    5174:	b6 01       	movw	r22, r12
    5176:	0e 94 78 31 	call	0x62f0	; 0x62f0 <cos>
    517a:	69 83       	std	Y+1, r22	; 0x01
    517c:	7a 83       	std	Y+2, r23	; 0x02
    517e:	8b 83       	std	Y+3, r24	; 0x03
    5180:	9c 83       	std	Y+4, r25	; 0x04
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    5182:	f1 01       	movw	r30, r2
    5184:	62 81       	ldd	r22, Z+2	; 0x02
    5186:	73 81       	ldd	r23, Z+3	; 0x03
    5188:	07 2e       	mov	r0, r23
    518a:	00 0c       	add	r0, r0
    518c:	88 0b       	sbc	r24, r24
    518e:	99 0b       	sbc	r25, r25
    5190:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    5194:	2b 01       	movw	r4, r22
    5196:	3c 01       	movw	r6, r24
    5198:	c5 01       	movw	r24, r10
    519a:	b4 01       	movw	r22, r8
    519c:	0e 94 92 33 	call	0x6724	; 0x6724 <sin>
    51a0:	6d 83       	std	Y+5, r22	; 0x05
    51a2:	7e 83       	std	Y+6, r23	; 0x06
    51a4:	8f 83       	std	Y+7, r24	; 0x07
    51a6:	98 87       	std	Y+8, r25	; 0x08
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    51a8:	f1 01       	movw	r30, r2
    51aa:	64 81       	ldd	r22, Z+4	; 0x04
    51ac:	75 81       	ldd	r23, Z+5	; 0x05
    51ae:	07 2e       	mov	r0, r23
    51b0:	00 0c       	add	r0, r0
    51b2:	88 0b       	sbc	r24, r24
    51b4:	99 0b       	sbc	r25, r25
    51b6:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    51ba:	69 87       	std	Y+9, r22	; 0x09
    51bc:	7a 87       	std	Y+10, r23	; 0x0a
    51be:	8b 87       	std	Y+11, r24	; 0x0b
    51c0:	9c 87       	std	Y+12, r25	; 0x0c
    51c2:	c5 01       	movw	r24, r10
    51c4:	b4 01       	movw	r22, r8
    51c6:	0e 94 78 31 	call	0x62f0	; 0x62f0 <cos>
    51ca:	4b 01       	movw	r8, r22
    51cc:	5c 01       	movw	r10, r24
    51ce:	c7 01       	movw	r24, r14
    51d0:	b6 01       	movw	r22, r12
    51d2:	0e 94 92 33 	call	0x6724	; 0x6724 <sin>
    51d6:	6d 87       	std	Y+13, r22	; 0x0d
    51d8:	7e 87       	std	Y+14, r23	; 0x0e
    51da:	8f 87       	std	Y+15, r24	; 0x0f
    51dc:	98 8b       	std	Y+16, r25	; 0x10
		temp_M[1] = achsen[1]*cos(roll);
    51de:	a5 01       	movw	r20, r10
    51e0:	94 01       	movw	r18, r8
    51e2:	c3 01       	movw	r24, r6
    51e4:	b2 01       	movw	r22, r4
    51e6:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    51ea:	0e 94 e3 31 	call	0x63c6	; 0x63c6 <__fixsfsi>
		temp_M[1]+= achsen[2]*sin(roll);
    51ee:	07 2e       	mov	r0, r23
    51f0:	00 0c       	add	r0, r0
    51f2:	88 0b       	sbc	r24, r24
    51f4:	99 0b       	sbc	r25, r25
    51f6:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    51fa:	6b 01       	movw	r12, r22
    51fc:	7c 01       	movw	r14, r24
    51fe:	29 85       	ldd	r18, Y+9	; 0x09
    5200:	3a 85       	ldd	r19, Y+10	; 0x0a
    5202:	4b 85       	ldd	r20, Y+11	; 0x0b
    5204:	5c 85       	ldd	r21, Y+12	; 0x0c
    5206:	6d 81       	ldd	r22, Y+5	; 0x05
    5208:	7e 81       	ldd	r23, Y+6	; 0x06
    520a:	8f 81       	ldd	r24, Y+7	; 0x07
    520c:	98 85       	ldd	r25, Y+8	; 0x08
    520e:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    5212:	9b 01       	movw	r18, r22
    5214:	ac 01       	movw	r20, r24
    5216:	c7 01       	movw	r24, r14
    5218:	b6 01       	movw	r22, r12
    521a:	a0 d7       	rcall	.+3904   	; 0x615c <__addsf3>
    521c:	0e 94 e3 31 	call	0x63c6	; 0x63c6 <__fixsfsi>
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    5220:	07 2e       	mov	r0, r23
    5222:	00 0c       	add	r0, r0
    5224:	88 0b       	sbc	r24, r24
    5226:	99 0b       	sbc	r25, r25
    5228:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    522c:	69 8b       	std	Y+17, r22	; 0x11
    522e:	7a 8b       	std	Y+18, r23	; 0x12
    5230:	8b 8b       	std	Y+19, r24	; 0x13
    5232:	9c 8b       	std	Y+20, r25	; 0x14
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    5234:	f1 01       	movw	r30, r2
    5236:	60 81       	ld	r22, Z
    5238:	71 81       	ldd	r23, Z+1	; 0x01
    523a:	07 2e       	mov	r0, r23
    523c:	00 0c       	add	r0, r0
    523e:	88 0b       	sbc	r24, r24
    5240:	99 0b       	sbc	r25, r25
    5242:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    5246:	29 81       	ldd	r18, Y+1	; 0x01
    5248:	3a 81       	ldd	r19, Y+2	; 0x02
    524a:	4b 81       	ldd	r20, Y+3	; 0x03
    524c:	5c 81       	ldd	r21, Y+4	; 0x04
    524e:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    5252:	0e 94 e3 31 	call	0x63c6	; 0x63c6 <__fixsfsi>
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    5256:	07 2e       	mov	r0, r23
    5258:	00 0c       	add	r0, r0
    525a:	88 0b       	sbc	r24, r24
    525c:	99 0b       	sbc	r25, r25
    525e:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    5262:	6b 01       	movw	r12, r22
    5264:	7c 01       	movw	r14, r24
    5266:	2d 81       	ldd	r18, Y+5	; 0x05
    5268:	3e 81       	ldd	r19, Y+6	; 0x06
    526a:	4f 81       	ldd	r20, Y+7	; 0x07
    526c:	58 85       	ldd	r21, Y+8	; 0x08
    526e:	c3 01       	movw	r24, r6
    5270:	b2 01       	movw	r22, r4
    5272:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    5276:	9b 01       	movw	r18, r22
    5278:	ac 01       	movw	r20, r24
    527a:	69 81       	ldd	r22, Y+1	; 0x01
    527c:	7a 81       	ldd	r23, Y+2	; 0x02
    527e:	8b 81       	ldd	r24, Y+3	; 0x03
    5280:	9c 81       	ldd	r25, Y+4	; 0x04
    5282:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    5286:	9b 01       	movw	r18, r22
    5288:	ac 01       	movw	r20, r24
    528a:	c7 01       	movw	r24, r14
    528c:	b6 01       	movw	r22, r12
    528e:	66 d7       	rcall	.+3788   	; 0x615c <__addsf3>
    5290:	0e 94 e3 31 	call	0x63c6	; 0x63c6 <__fixsfsi>
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    5294:	07 2e       	mov	r0, r23
    5296:	00 0c       	add	r0, r0
    5298:	88 0b       	sbc	r24, r24
    529a:	99 0b       	sbc	r25, r25
    529c:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    52a0:	6b 01       	movw	r12, r22
    52a2:	7c 01       	movw	r14, r24
    52a4:	a5 01       	movw	r20, r10
    52a6:	94 01       	movw	r18, r8
    52a8:	69 85       	ldd	r22, Y+9	; 0x09
    52aa:	7a 85       	ldd	r23, Y+10	; 0x0a
    52ac:	8b 85       	ldd	r24, Y+11	; 0x0b
    52ae:	9c 85       	ldd	r25, Y+12	; 0x0c
    52b0:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    52b4:	2d 85       	ldd	r18, Y+13	; 0x0d
    52b6:	3e 85       	ldd	r19, Y+14	; 0x0e
    52b8:	4f 85       	ldd	r20, Y+15	; 0x0f
    52ba:	58 89       	ldd	r21, Y+16	; 0x10
    52bc:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    52c0:	9b 01       	movw	r18, r22
    52c2:	ac 01       	movw	r20, r24
    52c4:	c7 01       	movw	r24, r14
    52c6:	b6 01       	movw	r22, r12
    52c8:	49 d7       	rcall	.+3730   	; 0x615c <__addsf3>
    52ca:	0e 94 e3 31 	call	0x63c6	; 0x63c6 <__fixsfsi>
		temp_M[1] = achsen[1]*cos(roll);
		temp_M[1]+= achsen[2]*sin(roll);
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    52ce:	07 2e       	mov	r0, r23
    52d0:	00 0c       	add	r0, r0
    52d2:	88 0b       	sbc	r24, r24
    52d4:	99 0b       	sbc	r25, r25
    52d6:	0e 94 16 32 	call	0x642c	; 0x642c <__floatsisf>
    52da:	29 89       	ldd	r18, Y+17	; 0x11
    52dc:	3a 89       	ldd	r19, Y+18	; 0x12
    52de:	4b 89       	ldd	r20, Y+19	; 0x13
    52e0:	5c 89       	ldd	r21, Y+20	; 0x14
    52e2:	af d7       	rcall	.+3934   	; 0x6242 <atan2>
    52e4:	20 e0       	ldi	r18, 0x00	; 0
    52e6:	30 e0       	ldi	r19, 0x00	; 0
    52e8:	44 e3       	ldi	r20, 0x34	; 52
    52ea:	53 e4       	ldi	r21, 0x43	; 67
    52ec:	0e 94 2f 33 	call	0x665e	; 0x665e <__mulsf3>
    52f0:	2b ed       	ldi	r18, 0xDB	; 219
    52f2:	3f e0       	ldi	r19, 0x0F	; 15
    52f4:	49 e4       	ldi	r20, 0x49	; 73
    52f6:	50 e4       	ldi	r21, 0x40	; 64
    52f8:	fe d7       	rcall	.+4092   	; 0x62f6 <__divsf3>
    52fa:	20 e0       	ldi	r18, 0x00	; 0
    52fc:	30 e0       	ldi	r19, 0x00	; 0
    52fe:	44 e3       	ldi	r20, 0x34	; 52
    5300:	53 e4       	ldi	r21, 0x43	; 67
    5302:	2c d7       	rcall	.+3672   	; 0x615c <__addsf3>
		//Tilt kompensation
		//deklination
		angle+=2.35;
    5304:	26 e6       	ldi	r18, 0x66	; 102
    5306:	36 e6       	ldi	r19, 0x66	; 102
    5308:	46 e1       	ldi	r20, 0x16	; 22
    530a:	50 e4       	ldi	r21, 0x40	; 64
    530c:	27 d7       	rcall	.+3662   	; 0x615c <__addsf3>
    530e:	6b 01       	movw	r12, r22
    5310:	7c 01       	movw	r14, r24
		//Normierung auf %360
		if (angle>=360)
    5312:	20 e0       	ldi	r18, 0x00	; 0
    5314:	30 e0       	ldi	r19, 0x00	; 0
    5316:	44 eb       	ldi	r20, 0xB4	; 180
    5318:	53 e4       	ldi	r21, 0x43	; 67
    531a:	0e 94 24 33 	call	0x6648	; 0x6648 <__gesf2>
    531e:	88 23       	and	r24, r24
    5320:	54 f0       	brlt	.+20     	; 0x5336 <_ZN7Kompass5angleEdd+0x208>
		{
			angle-=360;
    5322:	20 e0       	ldi	r18, 0x00	; 0
    5324:	30 e0       	ldi	r19, 0x00	; 0
    5326:	44 eb       	ldi	r20, 0xB4	; 180
    5328:	53 e4       	ldi	r21, 0x43	; 67
    532a:	c7 01       	movw	r24, r14
    532c:	b6 01       	movw	r22, r12
    532e:	15 d7       	rcall	.+3626   	; 0x615a <__subsf3>
    5330:	6b 01       	movw	r12, r22
    5332:	7c 01       	movw	r14, r24
    5334:	1a c0       	rjmp	.+52     	; 0x536a <_ZN7Kompass5angleEdd+0x23c>
		}
		else if (angle < 0)
    5336:	20 e0       	ldi	r18, 0x00	; 0
    5338:	30 e0       	ldi	r19, 0x00	; 0
    533a:	a9 01       	movw	r20, r18
    533c:	c7 01       	movw	r24, r14
    533e:	b6 01       	movw	r22, r12
    5340:	d3 d7       	rcall	.+4006   	; 0x62e8 <__cmpsf2>
    5342:	88 23       	and	r24, r24
    5344:	94 f4       	brge	.+36     	; 0x536a <_ZN7Kompass5angleEdd+0x23c>
		{
			angle+=360;
    5346:	20 e0       	ldi	r18, 0x00	; 0
    5348:	30 e0       	ldi	r19, 0x00	; 0
    534a:	44 eb       	ldi	r20, 0xB4	; 180
    534c:	53 e4       	ldi	r21, 0x43	; 67
    534e:	c7 01       	movw	r24, r14
    5350:	b6 01       	movw	r22, r12
    5352:	04 d7       	rcall	.+3592   	; 0x615c <__addsf3>
    5354:	6b 01       	movw	r12, r22
    5356:	7c 01       	movw	r14, r24
    5358:	08 c0       	rjmp	.+16     	; 0x536a <_ZN7Kompass5angleEdd+0x23c>
double Kompass::angle(double roll, double pitch){
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
    535a:	0f 2e       	mov	r0, r31
    535c:	c1 2c       	mov	r12, r1
    535e:	d1 2c       	mov	r13, r1
    5360:	f0 e8       	ldi	r31, 0x80	; 128
    5362:	ef 2e       	mov	r14, r31
    5364:	ff eb       	ldi	r31, 0xBF	; 191
    5366:	ff 2e       	mov	r15, r31
    5368:	f0 2d       	mov	r31, r0
		{
			angle+=360;
		}
	}
	
	HMC5883L_command(0x02,HMCSIGLEMODE);
    536a:	41 e0       	ldi	r20, 0x01	; 1
    536c:	62 e0       	ldi	r22, 0x02	; 2
    536e:	c1 01       	movw	r24, r2
    5370:	ec dd       	rcall	.-1064   	; 0x4f4a <_ZN7Kompass16HMC5883L_commandEhh>
	return angle;
}
    5372:	c7 01       	movw	r24, r14
    5374:	b6 01       	movw	r22, r12
    5376:	64 96       	adiw	r28, 0x14	; 20
    5378:	0f b6       	in	r0, 0x3f	; 63
    537a:	f8 94       	cli
    537c:	de bf       	out	0x3e, r29	; 62
    537e:	0f be       	out	0x3f, r0	; 63
    5380:	cd bf       	out	0x3d, r28	; 61
    5382:	df 91       	pop	r29
    5384:	cf 91       	pop	r28
    5386:	1f 91       	pop	r17
    5388:	0f 91       	pop	r16
    538a:	ff 90       	pop	r15
    538c:	ef 90       	pop	r14
    538e:	df 90       	pop	r13
    5390:	cf 90       	pop	r12
    5392:	bf 90       	pop	r11
    5394:	af 90       	pop	r10
    5396:	9f 90       	pop	r9
    5398:	8f 90       	pop	r8
    539a:	7f 90       	pop	r7
    539c:	6f 90       	pop	r6
    539e:	5f 90       	pop	r5
    53a0:	4f 90       	pop	r4
    53a2:	3f 90       	pop	r3
    53a4:	2f 90       	pop	r2
    53a6:	08 95       	ret

000053a8 <_ZN7Kompass25kallibrierung_ruecksetzenEv>:

void Kompass::kallibrierung_ruecksetzen(){
    53a8:	fc 01       	movw	r30, r24
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    53aa:	16 86       	std	Z+14, r1	; 0x0e
    53ac:	15 86       	std	Z+13, r1	; 0x0d
		min[i]=0;
    53ae:	14 8a       	std	Z+20, r1	; 0x14
    53b0:	13 8a       	std	Z+19, r1	; 0x13
		offset[i]=0;
    53b2:	10 86       	std	Z+8, r1	; 0x08
    53b4:	17 82       	std	Z+7, r1	; 0x07
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    53b6:	10 8a       	std	Z+16, r1	; 0x10
    53b8:	17 86       	std	Z+15, r1	; 0x0f
		min[i]=0;
    53ba:	16 8a       	std	Z+22, r1	; 0x16
    53bc:	15 8a       	std	Z+21, r1	; 0x15
		offset[i]=0;
    53be:	12 86       	std	Z+10, r1	; 0x0a
    53c0:	11 86       	std	Z+9, r1	; 0x09
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    53c2:	12 8a       	std	Z+18, r1	; 0x12
    53c4:	11 8a       	std	Z+17, r1	; 0x11
		min[i]=0;
    53c6:	10 8e       	std	Z+24, r1	; 0x18
    53c8:	17 8a       	std	Z+23, r1	; 0x17
		offset[i]=0;
    53ca:	14 86       	std	Z+12, r1	; 0x0c
    53cc:	13 86       	std	Z+11, r1	; 0x0b
    53ce:	08 95       	ret

000053d0 <_ZN7LSM303DD1Ev>:
	//ACC init
	acce_init();
} //LSM303D

// default destructor
LSM303D::~LSM303D()
    53d0:	46 96       	adiw	r24, 0x16	; 22
    53d2:	9c cc       	rjmp	.-1736   	; 0x4d0c <_ZN3I2CD1Ev>
    53d4:	08 95       	ret

000053d6 <_ZN7LSM303D7readaccEv>:

void LSM303D::ACCBypassmode(){
	LSM303_command(FIFO_CTRL,0x00);
}

void LSM303D::readacc(){
    53d6:	4f 92       	push	r4
    53d8:	5f 92       	push	r5
    53da:	6f 92       	push	r6
    53dc:	7f 92       	push	r7
    53de:	af 92       	push	r10
    53e0:	bf 92       	push	r11
    53e2:	cf 92       	push	r12
    53e4:	df 92       	push	r13
    53e6:	ef 92       	push	r14
    53e8:	ff 92       	push	r15
    53ea:	1f 93       	push	r17
    53ec:	cf 93       	push	r28
    53ee:	df 93       	push	r29
    53f0:	00 d0       	rcall	.+0      	; 0x53f2 <_ZN7LSM303D7readaccEv+0x1c>
    53f2:	00 d0       	rcall	.+0      	; 0x53f4 <_ZN7LSM303D7readaccEv+0x1e>
    53f4:	00 d0       	rcall	.+0      	; 0x53f6 <_ZN7LSM303D7readaccEv+0x20>
    53f6:	cd b7       	in	r28, 0x3d	; 61
    53f8:	de b7       	in	r29, 0x3e	; 62
    53fa:	5c 01       	movw	r10, r24
	cli();
    53fc:	f8 94       	cli
	uint8_t input[6];
	i2c.twi_start();
    53fe:	6c 01       	movw	r12, r24
    5400:	86 e1       	ldi	r24, 0x16	; 22
    5402:	c8 0e       	add	r12, r24
    5404:	d1 1c       	adc	r13, r1
    5406:	c6 01       	movw	r24, r12
    5408:	82 dc       	rcall	.-1788   	; 0x4d0e <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_Write);
    540a:	6a e3       	ldi	r22, 0x3A	; 58
    540c:	c6 01       	movw	r24, r12
    540e:	87 dc       	rcall	.-1778   	; 0x4d1e <_ZN3I2C9twi_writeEh>
	i2c.twi_write(OUT_X_L_A|(1<<7));
    5410:	68 ea       	ldi	r22, 0xA8	; 168
    5412:	c6 01       	movw	r24, r12
    5414:	84 dc       	rcall	.-1784   	; 0x4d1e <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    5416:	c6 01       	movw	r24, r12
    5418:	7a dc       	rcall	.-1804   	; 0x4d0e <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_READ);
    541a:	6b e3       	ldi	r22, 0x3B	; 59
    541c:	c6 01       	movw	r24, r12
    541e:	7f dc       	rcall	.-1794   	; 0x4d1e <_ZN3I2C9twi_writeEh>
    5420:	fe 01       	movw	r30, r28
    5422:	31 96       	adiw	r30, 0x01	; 1
    5424:	7f 01       	movw	r14, r30
	
	for(uint8_t i=0; i<6;i++){
    5426:	10 e0       	ldi	r17, 0x00	; 0
		if (i<5)
    5428:	15 30       	cpi	r17, 0x05	; 5
    542a:	30 f4       	brcc	.+12     	; 0x5438 <_ZN7LSM303D7readaccEv+0x62>
		{
			input[i]=i2c.twi_read(1);
    542c:	61 e0       	ldi	r22, 0x01	; 1
    542e:	c6 01       	movw	r24, r12
    5430:	86 dc       	rcall	.-1780   	; 0x4d3e <_ZN3I2C8twi_readEh>
    5432:	f7 01       	movw	r30, r14
    5434:	80 83       	st	Z, r24
    5436:	05 c0       	rjmp	.+10     	; 0x5442 <_ZN7LSM303D7readaccEv+0x6c>
		}
		else
		{
			input[i]=i2c.twi_read(0);
    5438:	60 e0       	ldi	r22, 0x00	; 0
    543a:	c6 01       	movw	r24, r12
    543c:	80 dc       	rcall	.-1792   	; 0x4d3e <_ZN3I2C8twi_readEh>
    543e:	f7 01       	movw	r30, r14
    5440:	80 83       	st	Z, r24
	i2c.twi_write(LSM303D_SA1_Write);
	i2c.twi_write(OUT_X_L_A|(1<<7));
	i2c.twi_start();
	i2c.twi_write(LSM303D_SA1_READ);
	
	for(uint8_t i=0; i<6;i++){
    5442:	1f 5f       	subi	r17, 0xFF	; 255
    5444:	ff ef       	ldi	r31, 0xFF	; 255
    5446:	ef 1a       	sub	r14, r31
    5448:	ff 0a       	sbc	r15, r31
    544a:	16 30       	cpi	r17, 0x06	; 6
    544c:	69 f7       	brne	.-38     	; 0x5428 <_ZN7LSM303D7readaccEv+0x52>
		{
			input[i]=i2c.twi_read(0);
		}
		
	}
	i2c.twi_stop();
    544e:	c6 01       	movw	r24, r12
    5450:	62 dc       	rcall	.-1852   	; 0x4d16 <_ZN3I2C8twi_stopEv>
	achsen_A[2] =(int16_t) (input[1]<<8 | input[0]);
    5452:	6a 81       	ldd	r22, Y+2	; 0x02
    5454:	70 e0       	ldi	r23, 0x00	; 0
    5456:	76 2f       	mov	r23, r22
    5458:	66 27       	eor	r22, r22
    545a:	89 81       	ldd	r24, Y+1	; 0x01
    545c:	68 2b       	or	r22, r24
    545e:	f5 01       	movw	r30, r10
    5460:	75 83       	std	Z+5, r23	; 0x05
    5462:	64 83       	std	Z+4, r22	; 0x04
	achsen_A[0] =(int16_t) (input[3]<<8 | input[2]);
    5464:	8c 81       	ldd	r24, Y+4	; 0x04
    5466:	90 e0       	ldi	r25, 0x00	; 0
    5468:	98 2f       	mov	r25, r24
    546a:	88 27       	eor	r24, r24
    546c:	2b 81       	ldd	r18, Y+3	; 0x03
    546e:	7c 01       	movw	r14, r24
    5470:	e2 2a       	or	r14, r18
    5472:	f1 82       	std	Z+1, r15	; 0x01
    5474:	e0 82       	st	Z, r14
	achsen_A[1] =(int16_t) (input[5]<<8 | input[4]);
    5476:	2e 81       	ldd	r18, Y+6	; 0x06
    5478:	30 e0       	ldi	r19, 0x00	; 0
    547a:	32 2f       	mov	r19, r18
    547c:	22 27       	eor	r18, r18
    547e:	8d 81       	ldd	r24, Y+5	; 0x05
    5480:	69 01       	movw	r12, r18
    5482:	c8 2a       	or	r12, r24
    5484:	d3 82       	std	Z+3, r13	; 0x03
    5486:	c2 82       	std	Z+2, r12	; 0x02
	pitch=atan2(achsen_A[2],achsen_A[1])-M_PI_2;
    5488:	07 2e       	mov	r0, r23
    548a:	00 0c       	add	r0, r0
    548c:	88 0b       	sbc	r24, r24
    548e:	99 0b       	sbc	r25, r25
    5490:	cd d7       	rcall	.+3994   	; 0x642c <__floatsisf>
    5492:	2b 01       	movw	r4, r22
    5494:	3c 01       	movw	r6, r24
    5496:	b6 01       	movw	r22, r12
    5498:	dd 0c       	add	r13, r13
    549a:	88 0b       	sbc	r24, r24
    549c:	99 0b       	sbc	r25, r25
    549e:	c6 d7       	rcall	.+3980   	; 0x642c <__floatsisf>
    54a0:	9b 01       	movw	r18, r22
    54a2:	ac 01       	movw	r20, r24
    54a4:	c3 01       	movw	r24, r6
    54a6:	b2 01       	movw	r22, r4
    54a8:	cc d6       	rcall	.+3480   	; 0x6242 <atan2>
    54aa:	2b ed       	ldi	r18, 0xDB	; 219
    54ac:	3f e0       	ldi	r19, 0x0F	; 15
    54ae:	49 ec       	ldi	r20, 0xC9	; 201
    54b0:	5f e3       	ldi	r21, 0x3F	; 63
    54b2:	53 d6       	rcall	.+3238   	; 0x615a <__subsf3>
    54b4:	f5 01       	movw	r30, r10
    54b6:	64 87       	std	Z+12, r22	; 0x0c
    54b8:	75 87       	std	Z+13, r23	; 0x0d
    54ba:	86 87       	std	Z+14, r24	; 0x0e
    54bc:	97 87       	std	Z+15, r25	; 0x0f
	roll=atan2(achsen_A[2],achsen_A[0])-M_PI_2;
    54be:	b7 01       	movw	r22, r14
    54c0:	ff 0c       	add	r15, r15
    54c2:	88 0b       	sbc	r24, r24
    54c4:	99 0b       	sbc	r25, r25
    54c6:	b2 d7       	rcall	.+3940   	; 0x642c <__floatsisf>
    54c8:	9b 01       	movw	r18, r22
    54ca:	ac 01       	movw	r20, r24
    54cc:	c3 01       	movw	r24, r6
    54ce:	b2 01       	movw	r22, r4
    54d0:	b8 d6       	rcall	.+3440   	; 0x6242 <atan2>
    54d2:	2b ed       	ldi	r18, 0xDB	; 219
    54d4:	3f e0       	ldi	r19, 0x0F	; 15
    54d6:	49 ec       	ldi	r20, 0xC9	; 201
    54d8:	5f e3       	ldi	r21, 0x3F	; 63
    54da:	3f d6       	rcall	.+3198   	; 0x615a <__subsf3>
    54dc:	f5 01       	movw	r30, r10
    54de:	60 87       	std	Z+8, r22	; 0x08
    54e0:	71 87       	std	Z+9, r23	; 0x09
    54e2:	82 87       	std	Z+10, r24	; 0x0a
    54e4:	93 87       	std	Z+11, r25	; 0x0b
	sei();
    54e6:	78 94       	sei
}
    54e8:	26 96       	adiw	r28, 0x06	; 6
    54ea:	0f b6       	in	r0, 0x3f	; 63
    54ec:	f8 94       	cli
    54ee:	de bf       	out	0x3e, r29	; 62
    54f0:	0f be       	out	0x3f, r0	; 63
    54f2:	cd bf       	out	0x3d, r28	; 61
    54f4:	df 91       	pop	r29
    54f6:	cf 91       	pop	r28
    54f8:	1f 91       	pop	r17
    54fa:	ff 90       	pop	r15
    54fc:	ef 90       	pop	r14
    54fe:	df 90       	pop	r13
    5500:	cf 90       	pop	r12
    5502:	bf 90       	pop	r11
    5504:	af 90       	pop	r10
    5506:	7f 90       	pop	r7
    5508:	6f 90       	pop	r6
    550a:	5f 90       	pop	r5
    550c:	4f 90       	pop	r4
    550e:	08 95       	ret

00005510 <_ZN7LSM303D12readacc_fastEv>:

void LSM303D::readacc_fast(){
    5510:	af 92       	push	r10
    5512:	bf 92       	push	r11
    5514:	cf 92       	push	r12
    5516:	df 92       	push	r13
    5518:	ef 92       	push	r14
    551a:	ff 92       	push	r15
    551c:	1f 93       	push	r17
    551e:	cf 93       	push	r28
    5520:	df 93       	push	r29
    5522:	00 d0       	rcall	.+0      	; 0x5524 <_ZN7LSM303D12readacc_fastEv+0x14>
    5524:	00 d0       	rcall	.+0      	; 0x5526 <_ZN7LSM303D12readacc_fastEv+0x16>
    5526:	00 d0       	rcall	.+0      	; 0x5528 <_ZN7LSM303D12readacc_fastEv+0x18>
    5528:	cd b7       	in	r28, 0x3d	; 61
    552a:	de b7       	in	r29, 0x3e	; 62
    552c:	5c 01       	movw	r10, r24
	uint8_t input[6];
	i2c.twi_start();
    552e:	6c 01       	movw	r12, r24
    5530:	86 e1       	ldi	r24, 0x16	; 22
    5532:	c8 0e       	add	r12, r24
    5534:	d1 1c       	adc	r13, r1
    5536:	c6 01       	movw	r24, r12
    5538:	ea db       	rcall	.-2092   	; 0x4d0e <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_Write);
    553a:	6a e3       	ldi	r22, 0x3A	; 58
    553c:	c6 01       	movw	r24, r12
    553e:	ef db       	rcall	.-2082   	; 0x4d1e <_ZN3I2C9twi_writeEh>
	i2c.twi_write(OUT_X_L_A|(1<<7));
    5540:	68 ea       	ldi	r22, 0xA8	; 168
    5542:	c6 01       	movw	r24, r12
    5544:	ec db       	rcall	.-2088   	; 0x4d1e <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    5546:	c6 01       	movw	r24, r12
    5548:	e2 db       	rcall	.-2108   	; 0x4d0e <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_READ);
    554a:	6b e3       	ldi	r22, 0x3B	; 59
    554c:	c6 01       	movw	r24, r12
    554e:	e7 db       	rcall	.-2098   	; 0x4d1e <_ZN3I2C9twi_writeEh>
    5550:	fe 01       	movw	r30, r28
    5552:	31 96       	adiw	r30, 0x01	; 1
    5554:	7f 01       	movw	r14, r30
	
	for(uint8_t i=0; i<6;i++){
    5556:	10 e0       	ldi	r17, 0x00	; 0
		if (i<5)
    5558:	15 30       	cpi	r17, 0x05	; 5
    555a:	30 f4       	brcc	.+12     	; 0x5568 <_ZN7LSM303D12readacc_fastEv+0x58>
		{
			input[i]=i2c.twi_read(1);
    555c:	61 e0       	ldi	r22, 0x01	; 1
    555e:	c6 01       	movw	r24, r12
    5560:	ee db       	rcall	.-2084   	; 0x4d3e <_ZN3I2C8twi_readEh>
    5562:	f7 01       	movw	r30, r14
    5564:	80 83       	st	Z, r24
    5566:	05 c0       	rjmp	.+10     	; 0x5572 <_ZN7LSM303D12readacc_fastEv+0x62>
		}
		else
		{
			input[i]=i2c.twi_read(0);
    5568:	60 e0       	ldi	r22, 0x00	; 0
    556a:	c6 01       	movw	r24, r12
    556c:	e8 db       	rcall	.-2096   	; 0x4d3e <_ZN3I2C8twi_readEh>
    556e:	f7 01       	movw	r30, r14
    5570:	80 83       	st	Z, r24
	i2c.twi_write(LSM303D_SA1_Write);
	i2c.twi_write(OUT_X_L_A|(1<<7));
	i2c.twi_start();
	i2c.twi_write(LSM303D_SA1_READ);
	
	for(uint8_t i=0; i<6;i++){
    5572:	1f 5f       	subi	r17, 0xFF	; 255
    5574:	ff ef       	ldi	r31, 0xFF	; 255
    5576:	ef 1a       	sub	r14, r31
    5578:	ff 0a       	sbc	r15, r31
    557a:	16 30       	cpi	r17, 0x06	; 6
    557c:	69 f7       	brne	.-38     	; 0x5558 <_ZN7LSM303D12readacc_fastEv+0x48>
		else
		{
			input[i]=i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    557e:	c6 01       	movw	r24, r12
    5580:	ca db       	rcall	.-2156   	; 0x4d16 <_ZN3I2C8twi_stopEv>
	
	achsen_A[2] =(int16_t) (input[1]<<8 | input[0]);
    5582:	8a 81       	ldd	r24, Y+2	; 0x02
    5584:	90 e0       	ldi	r25, 0x00	; 0
    5586:	98 2f       	mov	r25, r24
    5588:	88 27       	eor	r24, r24
    558a:	29 81       	ldd	r18, Y+1	; 0x01
    558c:	82 2b       	or	r24, r18
    558e:	f5 01       	movw	r30, r10
    5590:	95 83       	std	Z+5, r25	; 0x05
    5592:	84 83       	std	Z+4, r24	; 0x04
	achsen_A[0] =(int16_t) (input[3]<<8 | input[2]);
    5594:	8c 81       	ldd	r24, Y+4	; 0x04
    5596:	90 e0       	ldi	r25, 0x00	; 0
    5598:	98 2f       	mov	r25, r24
    559a:	88 27       	eor	r24, r24
    559c:	2b 81       	ldd	r18, Y+3	; 0x03
    559e:	82 2b       	or	r24, r18
    55a0:	91 83       	std	Z+1, r25	; 0x01
    55a2:	80 83       	st	Z, r24
	achsen_A[1] =(int16_t) (input[5]<<8 | input[4]);
    55a4:	2e 81       	ldd	r18, Y+6	; 0x06
    55a6:	30 e0       	ldi	r19, 0x00	; 0
    55a8:	32 2f       	mov	r19, r18
    55aa:	22 27       	eor	r18, r18
    55ac:	8d 81       	ldd	r24, Y+5	; 0x05
    55ae:	28 2b       	or	r18, r24
    55b0:	33 83       	std	Z+3, r19	; 0x03
    55b2:	22 83       	std	Z+2, r18	; 0x02
}
    55b4:	26 96       	adiw	r28, 0x06	; 6
    55b6:	0f b6       	in	r0, 0x3f	; 63
    55b8:	f8 94       	cli
    55ba:	de bf       	out	0x3e, r29	; 62
    55bc:	0f be       	out	0x3f, r0	; 63
    55be:	cd bf       	out	0x3d, r28	; 61
    55c0:	df 91       	pop	r29
    55c2:	cf 91       	pop	r28
    55c4:	1f 91       	pop	r17
    55c6:	ff 90       	pop	r15
    55c8:	ef 90       	pop	r14
    55ca:	df 90       	pop	r13
    55cc:	cf 90       	pop	r12
    55ce:	bf 90       	pop	r11
    55d0:	af 90       	pop	r10
    55d2:	08 95       	ret

000055d4 <_ZN7LSM303D11readtemperaEv>:

void LSM303D::readtempera(){
    55d4:	af 92       	push	r10
    55d6:	bf 92       	push	r11
    55d8:	cf 92       	push	r12
    55da:	df 92       	push	r13
    55dc:	ef 92       	push	r14
    55de:	ff 92       	push	r15
    55e0:	1f 93       	push	r17
    55e2:	cf 93       	push	r28
    55e4:	df 93       	push	r29
    55e6:	00 d0       	rcall	.+0      	; 0x55e8 <_ZN7LSM303D11readtemperaEv+0x14>
    55e8:	cd b7       	in	r28, 0x3d	; 61
    55ea:	de b7       	in	r29, 0x3e	; 62
    55ec:	6c 01       	movw	r12, r24
	cli();
    55ee:	f8 94       	cli
	uint8_t Wert[2];
	i2c.twi_start();
    55f0:	7c 01       	movw	r14, r24
    55f2:	86 e1       	ldi	r24, 0x16	; 22
    55f4:	e8 0e       	add	r14, r24
    55f6:	f1 1c       	adc	r15, r1
    55f8:	c7 01       	movw	r24, r14
    55fa:	89 db       	rcall	.-2286   	; 0x4d0e <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_Write);
    55fc:	6a e3       	ldi	r22, 0x3A	; 58
    55fe:	c7 01       	movw	r24, r14
    5600:	8e db       	rcall	.-2276   	; 0x4d1e <_ZN3I2C9twi_writeEh>
	i2c.twi_write(TEMP_OUT_L_A|(1<<7));
    5602:	65 e8       	ldi	r22, 0x85	; 133
    5604:	c7 01       	movw	r24, r14
    5606:	8b db       	rcall	.-2282   	; 0x4d1e <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    5608:	c7 01       	movw	r24, r14
    560a:	81 db       	rcall	.-2302   	; 0x4d0e <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_READ);
    560c:	6b e3       	ldi	r22, 0x3B	; 59
    560e:	c7 01       	movw	r24, r14
    5610:	86 db       	rcall	.-2292   	; 0x4d1e <_ZN3I2C9twi_writeEh>
    5612:	fe 01       	movw	r30, r28
    5614:	31 96       	adiw	r30, 0x01	; 1
    5616:	5f 01       	movw	r10, r30
    5618:	11 e0       	ldi	r17, 0x01	; 1
    561a:	04 c0       	rjmp	.+8      	; 0x5624 <_ZN7LSM303D11readtemperaEv+0x50>
    561c:	1f 5f       	subi	r17, 0xFF	; 255
    561e:	ff ef       	ldi	r31, 0xFF	; 255
    5620:	af 1a       	sub	r10, r31
    5622:	bf 0a       	sbc	r11, r31
	for (uint8_t i=0;i<2;i++)
	{
		if (i<1)
    5624:	11 30       	cpi	r17, 0x01	; 1
    5626:	29 f4       	brne	.+10     	; 0x5632 <_ZN7LSM303D11readtemperaEv+0x5e>
		{
			Wert[i] = i2c.twi_read(1);
    5628:	61 e0       	ldi	r22, 0x01	; 1
    562a:	c7 01       	movw	r24, r14
    562c:	88 db       	rcall	.-2288   	; 0x4d3e <_ZN3I2C8twi_readEh>
    562e:	89 83       	std	Y+1, r24	; 0x01
    5630:	f5 cf       	rjmp	.-22     	; 0x561c <_ZN7LSM303D11readtemperaEv+0x48>
		}
		else{
			Wert[i] = i2c.twi_read(0);
    5632:	60 e0       	ldi	r22, 0x00	; 0
    5634:	c7 01       	movw	r24, r14
    5636:	83 db       	rcall	.-2298   	; 0x4d3e <_ZN3I2C8twi_readEh>
    5638:	f5 01       	movw	r30, r10
    563a:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LSM303D_SA1_Write);
	i2c.twi_write(TEMP_OUT_L_A|(1<<7));
	i2c.twi_start();
	i2c.twi_write(LSM303D_SA1_READ);
	for (uint8_t i=0;i<2;i++)
    563c:	12 30       	cpi	r17, 0x02	; 2
    563e:	70 f3       	brcs	.-36     	; 0x561c <_ZN7LSM303D11readtemperaEv+0x48>
		}
		else{
			Wert[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    5640:	c7 01       	movw	r24, r14
    5642:	69 db       	rcall	.-2350   	; 0x4d16 <_ZN3I2C8twi_stopEv>
	Tempera = (int16_t) (Wert[0]|(Wert[1]<<8));
    5644:	2a 81       	ldd	r18, Y+2	; 0x02
    5646:	30 e0       	ldi	r19, 0x00	; 0
    5648:	32 2f       	mov	r19, r18
    564a:	22 27       	eor	r18, r18
    564c:	89 81       	ldd	r24, Y+1	; 0x01
    564e:	28 2b       	or	r18, r24
	Tempera *= -1;
    5650:	31 95       	neg	r19
    5652:	21 95       	neg	r18
    5654:	31 09       	sbc	r19, r1
    5656:	f6 01       	movw	r30, r12
    5658:	37 83       	std	Z+7, r19	; 0x07
    565a:	26 83       	std	Z+6, r18	; 0x06
	sei();
    565c:	78 94       	sei
}
    565e:	0f 90       	pop	r0
    5660:	0f 90       	pop	r0
    5662:	df 91       	pop	r29
    5664:	cf 91       	pop	r28
    5666:	1f 91       	pop	r17
    5668:	ff 90       	pop	r15
    566a:	ef 90       	pop	r14
    566c:	df 90       	pop	r13
    566e:	cf 90       	pop	r12
    5670:	bf 90       	pop	r11
    5672:	af 90       	pop	r10
    5674:	08 95       	ret

00005676 <_ZN7LSM303D14LSM303_commandEhh>:

void LSM303D::LSM303_command(uint8_t reg, uint8_t c){
    5676:	0f 93       	push	r16
    5678:	1f 93       	push	r17
    567a:	cf 93       	push	r28
    567c:	df 93       	push	r29
    567e:	06 2f       	mov	r16, r22
    5680:	14 2f       	mov	r17, r20
	i2c.twi_start();
    5682:	ec 01       	movw	r28, r24
    5684:	66 96       	adiw	r28, 0x16	; 22
    5686:	ce 01       	movw	r24, r28
    5688:	42 db       	rcall	.-2428   	; 0x4d0e <_ZN3I2C9twi_startEv>
	i2c.twi_write(LSM303D_SA1_Write);
    568a:	6a e3       	ldi	r22, 0x3A	; 58
    568c:	ce 01       	movw	r24, r28
    568e:	47 db       	rcall	.-2418   	; 0x4d1e <_ZN3I2C9twi_writeEh>
	i2c.twi_write(reg);
    5690:	60 2f       	mov	r22, r16
    5692:	ce 01       	movw	r24, r28
    5694:	44 db       	rcall	.-2424   	; 0x4d1e <_ZN3I2C9twi_writeEh>
	i2c.twi_write(c);
    5696:	61 2f       	mov	r22, r17
    5698:	ce 01       	movw	r24, r28
    569a:	41 db       	rcall	.-2430   	; 0x4d1e <_ZN3I2C9twi_writeEh>
	i2c.twi_stop();
    569c:	ce 01       	movw	r24, r28
    569e:	3b db       	rcall	.-2442   	; 0x4d16 <_ZN3I2C8twi_stopEv>
}
    56a0:	df 91       	pop	r29
    56a2:	cf 91       	pop	r28
    56a4:	1f 91       	pop	r17
    56a6:	0f 91       	pop	r16
    56a8:	08 95       	ret

000056aa <_ZN7LSM303D13ACCStreammodeEv>:
	//FIFO Bypass Mode
	ACCBypassmode();
}

void LSM303D::ACCStreammode(){
	LSM303_command(FIFO_CTRL,(1<<FM1));
    56aa:	40 e4       	ldi	r20, 0x40	; 64
    56ac:	6e e2       	ldi	r22, 0x2E	; 46
    56ae:	e3 cf       	rjmp	.-58     	; 0x5676 <_ZN7LSM303D14LSM303_commandEhh>
    56b0:	08 95       	ret

000056b2 <_ZN7LSM303D13ACCBypassmodeEv>:
}

void LSM303D::ACCBypassmode(){
	LSM303_command(FIFO_CTRL,0x00);
    56b2:	40 e0       	ldi	r20, 0x00	; 0
    56b4:	6e e2       	ldi	r22, 0x2E	; 46
    56b6:	df cf       	rjmp	.-66     	; 0x5676 <_ZN7LSM303D14LSM303_commandEhh>
    56b8:	08 95       	ret

000056ba <_ZN7LSM303D9acce_initEv>:
// default destructor
LSM303D::~LSM303D()
{
} //~LSM303D

void LSM303D::acce_init(){
    56ba:	cf 93       	push	r28
    56bc:	df 93       	push	r29
    56be:	ec 01       	movw	r28, r24
	//ACC Activ und 25Hz ohne Block dataread
	LSM303_command(CTRL1,(1<<AXEN)|(1<<AYEN)|(1<<AZEN)|(1<<AODR2));
    56c0:	47 e4       	ldi	r20, 0x47	; 71
    56c2:	60 e2       	ldi	r22, 0x20	; 32
    56c4:	d8 df       	rcall	.-80     	; 0x5676 <_ZN7LSM303D14LSM303_commandEhh>
	
	//ACC fuer +-2g
	LSM303_command(CTRL2,0x00);
    56c6:	40 e0       	ldi	r20, 0x00	; 0
    56c8:	61 e2       	ldi	r22, 0x21	; 33
    56ca:	ce 01       	movw	r24, r28
    56cc:	d4 df       	rcall	.-88     	; 0x5676 <_ZN7LSM303D14LSM303_commandEhh>
	
	//Temperatursensor an
	LSM303_command(CTRL5,(1<<TEMP_EN));
    56ce:	40 e8       	ldi	r20, 0x80	; 128
    56d0:	64 e2       	ldi	r22, 0x24	; 36
    56d2:	ce 01       	movw	r24, r28
    56d4:	d0 df       	rcall	.-96     	; 0x5676 <_ZN7LSM303D14LSM303_commandEhh>
	
	//FIFO Bypass Mode
	ACCBypassmode();
    56d6:	ce 01       	movw	r24, r28
    56d8:	ec df       	rcall	.-40     	; 0x56b2 <_ZN7LSM303D13ACCBypassmodeEv>
}
    56da:	df 91       	pop	r29
    56dc:	cf 91       	pop	r28
    56de:	08 95       	ret

000056e0 <_ZN7LSM303DC1Ev>:


#include "LSM303D.h"

// default constructor
LSM303D::LSM303D()
    56e0:	cf 93       	push	r28
    56e2:	df 93       	push	r29
    56e4:	ec 01       	movw	r28, r24
    56e6:	46 96       	adiw	r24, 0x16	; 22
    56e8:	0d db       	rcall	.-2534   	; 0x4d04 <_ZN3I2CC1Ev>
{
	//Variablen initialisieren
	Tempera=0;
    56ea:	1f 82       	std	Y+7, r1	; 0x07
    56ec:	1e 82       	std	Y+6, r1	; 0x06
	roll=0.0;
    56ee:	18 86       	std	Y+8, r1	; 0x08
    56f0:	19 86       	std	Y+9, r1	; 0x09
    56f2:	1a 86       	std	Y+10, r1	; 0x0a
    56f4:	1b 86       	std	Y+11, r1	; 0x0b
	pitch=0.0;
    56f6:	1c 86       	std	Y+12, r1	; 0x0c
    56f8:	1d 86       	std	Y+13, r1	; 0x0d
    56fa:	1e 86       	std	Y+14, r1	; 0x0e
    56fc:	1f 86       	std	Y+15, r1	; 0x0f
	Schrittzaehler=0;
    56fe:	19 8a       	std	Y+17, r1	; 0x11
    5700:	18 8a       	std	Y+16, r1	; 0x10
	gravity=0;
    5702:	1a 8a       	std	Y+18, r1	; 0x12
    5704:	1b 8a       	std	Y+19, r1	; 0x13
    5706:	1c 8a       	std	Y+20, r1	; 0x14
    5708:	1d 8a       	std	Y+21, r1	; 0x15
	higher=0;
    570a:	de 01       	movw	r26, r28
    570c:	a1 52       	subi	r26, 0x21	; 33
    570e:	bf 4f       	sbci	r27, 0xFF	; 255
    5710:	1d 92       	st	X+, r1
    5712:	1d 92       	st	X+, r1
    5714:	1d 92       	st	X+, r1
    5716:	1c 92       	st	X, r1
    5718:	13 97       	sbiw	r26, 0x03	; 3
	lower=0;
    571a:	fe 01       	movw	r30, r28
    571c:	ed 51       	subi	r30, 0x1D	; 29
    571e:	ff 4f       	sbci	r31, 0xFF	; 255
    5720:	10 82       	st	Z, r1
    5722:	11 82       	std	Z+1, r1	; 0x01
    5724:	12 82       	std	Z+2, r1	; 0x02
    5726:	13 82       	std	Z+3, r1	; 0x03
	threschold=27;	//aus Erfahrung
    5728:	34 96       	adiw	r30, 0x04	; 4
    572a:	8b e1       	ldi	r24, 0x1B	; 27
    572c:	90 e0       	ldi	r25, 0x00	; 0
    572e:	91 83       	std	Z+1, r25	; 0x01
    5730:	80 83       	st	Z, r24
	for (uint8_t i=0;i<3;i++)
	{
		achsen_A[i]=0;
    5732:	19 82       	std	Y+1, r1	; 0x01
    5734:	18 82       	st	Y, r1
    5736:	1b 82       	std	Y+3, r1	; 0x03
    5738:	1a 82       	std	Y+2, r1	; 0x02
    573a:	1d 82       	std	Y+5, r1	; 0x05
    573c:	1c 82       	std	Y+4, r1	; 0x04
    573e:	e0 5d       	subi	r30, 0xD0	; 208
    5740:	f1 09       	sbc	r31, r1
    5742:	9d 01       	movw	r18, r26
	}
	for (uint8_t i=0;i<50;i++)
	{
		Daten[i]=0;
    5744:	11 92       	st	Z+, r1
    5746:	11 92       	st	Z+, r1
    5748:	11 92       	st	Z+, r1
    574a:	11 92       	st	Z+, r1
	threschold=27;	//aus Erfahrung
	for (uint8_t i=0;i<3;i++)
	{
		achsen_A[i]=0;
	}
	for (uint8_t i=0;i<50;i++)
    574c:	e2 17       	cp	r30, r18
    574e:	f3 07       	cpc	r31, r19
    5750:	c9 f7       	brne	.-14     	; 0x5744 <_ZN7LSM303DC1Ev+0x64>
	{
		Daten[i]=0;
	}
	
	//ACC init
	acce_init();
    5752:	ce 01       	movw	r24, r28
    5754:	b2 df       	rcall	.-156    	; 0x56ba <_ZN7LSM303D9acce_initEv>
} //LSM303D
    5756:	df 91       	pop	r29
    5758:	cf 91       	pop	r28
    575a:	08 95       	ret

0000575c <_ZN7LSM303D11get_gravityEv>:
	i2c.twi_write(reg);
	i2c.twi_write(c);
	i2c.twi_stop();
}

void LSM303D::get_gravity(){
    575c:	8f 92       	push	r8
    575e:	9f 92       	push	r9
    5760:	af 92       	push	r10
    5762:	bf 92       	push	r11
    5764:	cf 92       	push	r12
    5766:	df 92       	push	r13
    5768:	ef 92       	push	r14
    576a:	ff 92       	push	r15
    576c:	1f 93       	push	r17
    576e:	cf 93       	push	r28
    5770:	df 93       	push	r29
    5772:	ec 01       	movw	r28, r24
	uint32_t temp=0;
	uint32_t temp2[4];
	cli();
    5774:	f8 94       	cli
    5776:	19 e1       	ldi	r17, 0x19	; 25
	i2c.twi_write(c);
	i2c.twi_stop();
}

void LSM303D::get_gravity(){
	uint32_t temp=0;
    5778:	81 2c       	mov	r8, r1
    577a:	91 2c       	mov	r9, r1
    577c:	54 01       	movw	r10, r8
	uint32_t temp2[4];
	cli();
	for (uint8_t i=0;i<25;i++)
	{
		readacc_fast();
    577e:	ce 01       	movw	r24, r28
    5780:	c7 de       	rcall	.-626    	; 0x5510 <_ZN7LSM303D12readacc_fastEv>
		//readacc();
		temp2[0] = achsen_A[2];
    5782:	ec 81       	ldd	r30, Y+4	; 0x04
    5784:	fd 81       	ldd	r31, Y+5	; 0x05
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
    5786:	a8 81       	ld	r26, Y
    5788:	b9 81       	ldd	r27, Y+1	; 0x01
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
    578a:	4a 81       	ldd	r20, Y+2	; 0x02
    578c:	5b 81       	ldd	r21, Y+3	; 0x03
		readacc_fast();
		//readacc();
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
    578e:	9d 01       	movw	r18, r26
    5790:	0e 94 fd 37 	call	0x6ffa	; 0x6ffa <__mulhisi3>
    5794:	6b 01       	movw	r12, r22
    5796:	7c 01       	movw	r14, r24
	for (uint8_t i=0;i<25;i++)
	{
		readacc_fast();
		//readacc();
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
    5798:	9f 01       	movw	r18, r30
    579a:	df 01       	movw	r26, r30
    579c:	0e 94 fd 37 	call	0x6ffa	; 0x6ffa <__mulhisi3>
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
		temp2[3] = temp2[0]+temp2[1]+temp2[2];
    57a0:	c6 0e       	add	r12, r22
    57a2:	d7 1e       	adc	r13, r23
    57a4:	e8 1e       	adc	r14, r24
    57a6:	f9 1e       	adc	r15, r25
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
    57a8:	9a 01       	movw	r18, r20
    57aa:	da 01       	movw	r26, r20
    57ac:	0e 94 fd 37 	call	0x6ffa	; 0x6ffa <__mulhisi3>
		temp2[3] = temp2[0]+temp2[1]+temp2[2];
    57b0:	c6 0e       	add	r12, r22
    57b2:	d7 1e       	adc	r13, r23
    57b4:	e8 1e       	adc	r14, r24
    57b6:	f9 1e       	adc	r15, r25
		temp +=sqrt(temp2[3]);
    57b8:	c7 01       	movw	r24, r14
    57ba:	b6 01       	movw	r22, r12
    57bc:	35 d6       	rcall	.+3178   	; 0x6428 <__floatunsisf>
    57be:	bc d7       	rcall	.+3960   	; 0x6738 <sqrt>
    57c0:	6b 01       	movw	r12, r22
    57c2:	7c 01       	movw	r14, r24
    57c4:	c5 01       	movw	r24, r10
    57c6:	b4 01       	movw	r22, r8
    57c8:	2f d6       	rcall	.+3166   	; 0x6428 <__floatunsisf>
    57ca:	a7 01       	movw	r20, r14
    57cc:	96 01       	movw	r18, r12
    57ce:	c6 d4       	rcall	.+2444   	; 0x615c <__addsf3>
    57d0:	ff d5       	rcall	.+3070   	; 0x63d0 <__fixunssfsi>
    57d2:	4b 01       	movw	r8, r22
    57d4:	5c 01       	movw	r10, r24
    57d6:	11 50       	subi	r17, 0x01	; 1

void LSM303D::get_gravity(){
	uint32_t temp=0;
	uint32_t temp2[4];
	cli();
	for (uint8_t i=0;i<25;i++)
    57d8:	91 f6       	brne	.-92     	; 0x577e <_ZN7LSM303D11get_gravityEv+0x22>
		temp2[2]*= temp2[2];
		temp2[3] = temp2[0]+temp2[1]+temp2[2];
		temp +=sqrt(temp2[3]);
	}
	//readacc_fast();
	sei();
    57da:	78 94       	sei
	temp/=25;
    57dc:	29 e1       	ldi	r18, 0x19	; 25
    57de:	30 e0       	ldi	r19, 0x00	; 0
    57e0:	40 e0       	ldi	r20, 0x00	; 0
    57e2:	50 e0       	ldi	r21, 0x00	; 0
    57e4:	0e 94 d2 37 	call	0x6fa4	; 0x6fa4 <__udivmodsi4>
	gravity=(gravity+temp)/2;
    57e8:	8a 89       	ldd	r24, Y+18	; 0x12
    57ea:	9b 89       	ldd	r25, Y+19	; 0x13
    57ec:	ac 89       	ldd	r26, Y+20	; 0x14
    57ee:	bd 89       	ldd	r27, Y+21	; 0x15
    57f0:	82 0f       	add	r24, r18
    57f2:	93 1f       	adc	r25, r19
    57f4:	a4 1f       	adc	r26, r20
    57f6:	b5 1f       	adc	r27, r21
    57f8:	b6 95       	lsr	r27
    57fa:	a7 95       	ror	r26
    57fc:	97 95       	ror	r25
    57fe:	87 95       	ror	r24
    5800:	8a 8b       	std	Y+18, r24	; 0x12
    5802:	9b 8b       	std	Y+19, r25	; 0x13
    5804:	ac 8b       	std	Y+20, r26	; 0x14
    5806:	bd 8b       	std	Y+21, r27	; 0x15
}
    5808:	df 91       	pop	r29
    580a:	cf 91       	pop	r28
    580c:	1f 91       	pop	r17
    580e:	ff 90       	pop	r15
    5810:	ef 90       	pop	r14
    5812:	df 90       	pop	r13
    5814:	cf 90       	pop	r12
    5816:	bf 90       	pop	r11
    5818:	af 90       	pop	r10
    581a:	9f 90       	pop	r9
    581c:	8f 90       	pop	r8
    581e:	08 95       	ret

00005820 <_ZN7LSM303D7schrittEh>:

void LSM303D::schritt(uint8_t stat){
    5820:	2f 92       	push	r2
    5822:	3f 92       	push	r3
    5824:	4f 92       	push	r4
    5826:	5f 92       	push	r5
    5828:	6f 92       	push	r6
    582a:	7f 92       	push	r7
    582c:	8f 92       	push	r8
    582e:	9f 92       	push	r9
    5830:	af 92       	push	r10
    5832:	bf 92       	push	r11
    5834:	cf 92       	push	r12
    5836:	df 92       	push	r13
    5838:	ef 92       	push	r14
    583a:	ff 92       	push	r15
    583c:	0f 93       	push	r16
    583e:	1f 93       	push	r17
    5840:	cf 93       	push	r28
    5842:	df 93       	push	r29
    5844:	cd b7       	in	r28, 0x3d	; 61
    5846:	de b7       	in	r29, 0x3e	; 62
    5848:	29 97       	sbiw	r28, 0x09	; 9
    584a:	0f b6       	in	r0, 0x3f	; 63
    584c:	f8 94       	cli
    584e:	de bf       	out	0x3e, r29	; 62
    5850:	0f be       	out	0x3f, r0	; 63
    5852:	cd bf       	out	0x3d, r28	; 61
    5854:	8c 01       	movw	r16, r24
    5856:	96 2e       	mov	r9, r22
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
		Daten[i+stat*25] = sqrt(temp2[0]+temp2[1]+temp2[2]);
    5858:	89 e1       	ldi	r24, 0x19	; 25
    585a:	68 9f       	mul	r22, r24
    585c:	50 01       	movw	r10, r0
    585e:	11 24       	eor	r1, r1
    5860:	aa 0c       	add	r10, r10
    5862:	bb 1c       	adc	r11, r11
    5864:	aa 0c       	add	r10, r10
    5866:	bb 1c       	adc	r11, r11
    5868:	75 01       	movw	r14, r10
    586a:	97 e1       	ldi	r25, 0x17	; 23
    586c:	e9 0e       	add	r14, r25
    586e:	f1 1c       	adc	r15, r1
    5870:	e0 0e       	add	r14, r16
    5872:	f1 1e       	adc	r15, r17
    5874:	ab e7       	ldi	r26, 0x7B	; 123
    5876:	aa 0e       	add	r10, r26
    5878:	b1 1c       	adc	r11, r1
    587a:	a0 0e       	add	r10, r16
    587c:	b1 1e       	adc	r11, r17
    587e:	c8 01       	movw	r24, r16
    5880:	87 01       	movw	r16, r14
    5882:	3c 01       	movw	r6, r24
	uint8_t zaehler=0;
	uint8_t temp=0;
	uint32_t temp2[3];
	for (uint8_t i=0;i<25;i++)
	{
		readacc_fast();
    5884:	c3 01       	movw	r24, r6
    5886:	44 de       	rcall	.-888    	; 0x5510 <_ZN7LSM303D12readacc_fastEv>
		temp2[0] = achsen_A[2];
    5888:	f3 01       	movw	r30, r6
    588a:	44 80       	ldd	r4, Z+4	; 0x04
    588c:	55 80       	ldd	r5, Z+5	; 0x05
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
    588e:	a0 81       	ld	r26, Z
    5890:	b1 81       	ldd	r27, Z+1	; 0x01
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
    5892:	42 81       	ldd	r20, Z+2	; 0x02
    5894:	53 81       	ldd	r21, Z+3	; 0x03
	{
		readacc_fast();
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
    5896:	9d 01       	movw	r18, r26
    5898:	0e 94 fd 37 	call	0x6ffa	; 0x6ffa <__mulhisi3>
    589c:	6b 01       	movw	r12, r22
    589e:	7c 01       	movw	r14, r24
	uint32_t temp2[3];
	for (uint8_t i=0;i<25;i++)
	{
		readacc_fast();
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
    58a0:	92 01       	movw	r18, r4
    58a2:	d2 01       	movw	r26, r4
    58a4:	0e 94 fd 37 	call	0x6ffa	; 0x6ffa <__mulhisi3>
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
		Daten[i+stat*25] = sqrt(temp2[0]+temp2[1]+temp2[2]);
    58a8:	c6 0e       	add	r12, r22
    58aa:	d7 1e       	adc	r13, r23
    58ac:	e8 1e       	adc	r14, r24
    58ae:	f9 1e       	adc	r15, r25
		temp2[0] = achsen_A[2];
		temp2[0]*= temp2[0];
		temp2[1] = achsen_A[0];
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
    58b0:	9a 01       	movw	r18, r20
    58b2:	da 01       	movw	r26, r20
    58b4:	0e 94 fd 37 	call	0x6ffa	; 0x6ffa <__mulhisi3>
		Daten[i+stat*25] = sqrt(temp2[0]+temp2[1]+temp2[2]);
    58b8:	c6 0e       	add	r12, r22
    58ba:	d7 1e       	adc	r13, r23
    58bc:	e8 1e       	adc	r14, r24
    58be:	f9 1e       	adc	r15, r25
    58c0:	c7 01       	movw	r24, r14
    58c2:	b6 01       	movw	r22, r12
    58c4:	b1 d5       	rcall	.+2914   	; 0x6428 <__floatunsisf>
    58c6:	38 d7       	rcall	.+3696   	; 0x6738 <sqrt>
    58c8:	83 d5       	rcall	.+2822   	; 0x63d0 <__fixunssfsi>
    58ca:	d8 01       	movw	r26, r16
    58cc:	6d 93       	st	X+, r22
    58ce:	7d 93       	st	X+, r23
    58d0:	8d 93       	st	X+, r24
    58d2:	9d 93       	st	X+, r25
    58d4:	8d 01       	movw	r16, r26
	uint8_t counter_L=0;
	uint8_t counter_H=0;
	uint8_t zaehler=0;
	uint8_t temp=0;
	uint32_t temp2[3];
	for (uint8_t i=0;i<25;i++)
    58d6:	aa 15       	cp	r26, r10
    58d8:	bb 05       	cpc	r27, r11
    58da:	a1 f6       	brne	.-88     	; 0x5884 <_ZN7LSM303D7schrittEh+0x64>
    58dc:	83 01       	movw	r16, r6
		temp2[1]*= temp2[1];
		temp2[2] = achsen_A[1];
		temp2[2]*= temp2[2];
		Daten[i+stat*25] = sqrt(temp2[0]+temp2[1]+temp2[2]);
	}
	if (stat)
    58de:	99 20       	and	r9, r9
    58e0:	09 f4       	brne	.+2      	; 0x58e4 <_ZN7LSM303D7schrittEh+0xc4>
    58e2:	55 c1       	rjmp	.+682    	; 0x5b8e <_ZN7LSM303D7schrittEh+0x36e>
	{
		//THreshold ausrechnen
		for (uint8_t i=0;i<50;i++)
		{
			if (Daten[i]>=gravity)
    58e4:	f3 01       	movw	r30, r6
    58e6:	82 88       	ldd	r8, Z+18	; 0x12
    58e8:	93 88       	ldd	r9, Z+19	; 0x13
    58ea:	a4 88       	ldd	r10, Z+20	; 0x14
    58ec:	b5 88       	ldd	r11, Z+21	; 0x15
    58ee:	c3 01       	movw	r24, r6
    58f0:	47 96       	adiw	r24, 0x17	; 23
    58f2:	9b 83       	std	Y+3, r25	; 0x03
    58f4:	8a 83       	std	Y+2, r24	; 0x02
    58f6:	73 01       	movw	r14, r6
    58f8:	9f ed       	ldi	r25, 0xDF	; 223
    58fa:	e9 0e       	add	r14, r25
    58fc:	f1 1c       	adc	r15, r1
    58fe:	ea 81       	ldd	r30, Y+2	; 0x02
    5900:	fb 81       	ldd	r31, Y+3	; 0x03
    5902:	20 e0       	ldi	r18, 0x00	; 0
    5904:	71 2c       	mov	r7, r1
			{
				higher+=Daten[i];
				counter_H++;
			}
			else{
				lower+=Daten[i];
    5906:	b8 01       	movw	r22, r16
    5908:	6d 51       	subi	r22, 0x1D	; 29
    590a:	7f 4f       	sbci	r23, 0xFF	; 255
		//THreshold ausrechnen
		for (uint8_t i=0;i<50;i++)
		{
			if (Daten[i]>=gravity)
			{
				higher+=Daten[i];
    590c:	a7 01       	movw	r20, r14
    590e:	37 2d       	mov	r19, r7
    5910:	6f 01       	movw	r12, r30
    5912:	cb 01       	movw	r24, r22
    5914:	bf 01       	movw	r22, r30
    5916:	1c 01       	movw	r2, r24
	if (stat)
	{
		//THreshold ausrechnen
		for (uint8_t i=0;i<50;i++)
		{
			if (Daten[i]>=gravity)
    5918:	f6 01       	movw	r30, r12
    591a:	81 91       	ld	r24, Z+
    591c:	91 91       	ld	r25, Z+
    591e:	a1 91       	ld	r26, Z+
    5920:	b1 91       	ld	r27, Z+
    5922:	6f 01       	movw	r12, r30
    5924:	88 15       	cp	r24, r8
    5926:	99 05       	cpc	r25, r9
    5928:	aa 05       	cpc	r26, r10
    592a:	bb 05       	cpc	r27, r11
    592c:	78 f0       	brcs	.+30     	; 0x594c <_ZN7LSM303D7schrittEh+0x12c>
			{
				higher+=Daten[i];
    592e:	fa 01       	movw	r30, r20
    5930:	40 80       	ld	r4, Z
    5932:	51 80       	ldd	r5, Z+1	; 0x01
    5934:	62 80       	ldd	r6, Z+2	; 0x02
    5936:	73 80       	ldd	r7, Z+3	; 0x03
    5938:	84 0d       	add	r24, r4
    593a:	95 1d       	adc	r25, r5
    593c:	a6 1d       	adc	r26, r6
    593e:	b7 1d       	adc	r27, r7
    5940:	80 83       	st	Z, r24
    5942:	91 83       	std	Z+1, r25	; 0x01
    5944:	a2 83       	std	Z+2, r26	; 0x02
    5946:	b3 83       	std	Z+3, r27	; 0x03
				counter_H++;
    5948:	2f 5f       	subi	r18, 0xFF	; 255
    594a:	0e c0       	rjmp	.+28     	; 0x5968 <_ZN7LSM303D7schrittEh+0x148>
			}
			else{
				lower+=Daten[i];
    594c:	f1 01       	movw	r30, r2
    594e:	40 80       	ld	r4, Z
    5950:	51 80       	ldd	r5, Z+1	; 0x01
    5952:	62 80       	ldd	r6, Z+2	; 0x02
    5954:	73 80       	ldd	r7, Z+3	; 0x03
    5956:	84 0d       	add	r24, r4
    5958:	95 1d       	adc	r25, r5
    595a:	a6 1d       	adc	r26, r6
    595c:	b7 1d       	adc	r27, r7
    595e:	80 83       	st	Z, r24
    5960:	91 83       	std	Z+1, r25	; 0x01
    5962:	a2 83       	std	Z+2, r26	; 0x02
    5964:	b3 83       	std	Z+3, r27	; 0x03
				counter_L++;
    5966:	3f 5f       	subi	r19, 0xFF	; 255
		Daten[i+stat*25] = sqrt(temp2[0]+temp2[1]+temp2[2]);
	}
	if (stat)
	{
		//THreshold ausrechnen
		for (uint8_t i=0;i<50;i++)
    5968:	ce 14       	cp	r12, r14
    596a:	df 04       	cpc	r13, r15
    596c:	a9 f6       	brne	.-86     	; 0x5918 <_ZN7LSM303D7schrittEh+0xf8>
    596e:	73 2e       	mov	r7, r19
    5970:	7b 83       	std	Y+3, r23	; 0x03
    5972:	6a 83       	std	Y+2, r22	; 0x02
			else{
				lower+=Daten[i];
				counter_L++;
			}
		}
		higher/=counter_H;
    5974:	68 01       	movw	r12, r16
    5976:	ff ed       	ldi	r31, 0xDF	; 223
    5978:	cf 0e       	add	r12, r31
    597a:	d1 1c       	adc	r13, r1
    597c:	30 e0       	ldi	r19, 0x00	; 0
    597e:	40 e0       	ldi	r20, 0x00	; 0
    5980:	50 e0       	ldi	r21, 0x00	; 0
    5982:	d6 01       	movw	r26, r12
    5984:	6d 91       	ld	r22, X+
    5986:	7d 91       	ld	r23, X+
    5988:	8d 91       	ld	r24, X+
    598a:	9c 91       	ld	r25, X
    598c:	0e 94 d2 37 	call	0x6fa4	; 0x6fa4 <__udivmodsi4>
    5990:	82 2e       	mov	r8, r18
    5992:	93 2e       	mov	r9, r19
    5994:	a4 2e       	mov	r10, r20
    5996:	b5 2e       	mov	r11, r21
    5998:	f6 01       	movw	r30, r12
    599a:	20 83       	st	Z, r18
    599c:	31 83       	std	Z+1, r19	; 0x01
    599e:	42 83       	std	Z+2, r20	; 0x02
    59a0:	53 83       	std	Z+3, r21	; 0x03
		lower/=counter_L;
    59a2:	68 01       	movw	r12, r16
    59a4:	f3 ee       	ldi	r31, 0xE3	; 227
    59a6:	cf 0e       	add	r12, r31
    59a8:	d1 1c       	adc	r13, r1
    59aa:	27 2d       	mov	r18, r7
    59ac:	30 e0       	ldi	r19, 0x00	; 0
    59ae:	40 e0       	ldi	r20, 0x00	; 0
    59b0:	50 e0       	ldi	r21, 0x00	; 0
    59b2:	d6 01       	movw	r26, r12
    59b4:	6d 91       	ld	r22, X+
    59b6:	7d 91       	ld	r23, X+
    59b8:	8d 91       	ld	r24, X+
    59ba:	9c 91       	ld	r25, X
    59bc:	0e 94 d2 37 	call	0x6fa4	; 0x6fa4 <__udivmodsi4>
    59c0:	42 2e       	mov	r4, r18
    59c2:	53 2e       	mov	r5, r19
    59c4:	64 2e       	mov	r6, r20
    59c6:	75 2e       	mov	r7, r21
    59c8:	f6 01       	movw	r30, r12
    59ca:	20 83       	st	Z, r18
    59cc:	31 83       	std	Z+1, r19	; 0x01
    59ce:	42 83       	std	Z+2, r20	; 0x02
    59d0:	53 83       	std	Z+3, r21	; 0x03

void LSM303D::schritt(uint8_t stat){
	uint8_t counter_L=0;
	uint8_t counter_H=0;
	uint8_t zaehler=0;
	uint8_t temp=0;
    59d2:	30 e0       	ldi	r19, 0x00	; 0
}

void LSM303D::schritt(uint8_t stat){
	uint8_t counter_L=0;
	uint8_t counter_H=0;
	uint8_t zaehler=0;
    59d4:	20 e0       	ldi	r18, 0x00	; 0
			else if (temp == 3 && Daten[i]-threschold>lower)
			{
				zaehler++;
				temp = 4;
			}
			else if (temp == 4 && Daten[i]-threschold>higher)
    59d6:	34 96       	adiw	r30, 0x04	; 4
			{
				temp = 1;
    59d8:	cc 24       	eor	r12, r12
    59da:	c3 94       	inc	r12
				zaehler++;
				temp = 2;
			}
			else if (temp == 2 && Daten[i]+threschold<lower)
			{
				temp = 3;
    59dc:	0f 2e       	mov	r0, r31
    59de:	f3 e0       	ldi	r31, 0x03	; 3
    59e0:	df 2e       	mov	r13, r31
    59e2:	f0 2d       	mov	r31, r0
				
			}
			else if (temp == 1 && Daten[i]+threschold<higher)
			{
				zaehler++;
				temp = 2;
    59e4:	68 94       	set
    59e6:	22 24       	eor	r2, r2
    59e8:	21 f8       	bld	r2, 1
			{
				if (Daten[i]+threschold<lower)
				{
					temp = 3;
				}
				else if (Daten[i]-threschold>higher)
    59ea:	31 2c       	mov	r3, r1
    59ec:	29 83       	std	Y+1, r18	; 0x01
    59ee:	8a 81       	ldd	r24, Y+2	; 0x02
    59f0:	9b 81       	ldd	r25, Y+3	; 0x03
    59f2:	9d 83       	std	Y+5, r25	; 0x05
    59f4:	8c 83       	std	Y+4, r24	; 0x04
    59f6:	1b 83       	std	Y+3, r17	; 0x03
    59f8:	0a 83       	std	Y+2, r16	; 0x02
		}
		higher/=counter_H;
		lower/=counter_L;
		for (uint8_t i=0;i<50;i++)
		{
			if (temp == 0)
    59fa:	31 11       	cpse	r19, r1
    59fc:	25 c0       	rjmp	.+74     	; 0x5a48 <_ZN7LSM303D7schrittEh+0x228>
			{
				if (Daten[i]+threschold<lower)
    59fe:	ac 81       	ldd	r26, Y+4	; 0x04
    5a00:	bd 81       	ldd	r27, Y+5	; 0x05
    5a02:	4d 91       	ld	r20, X+
    5a04:	5d 91       	ld	r21, X+
    5a06:	6d 91       	ld	r22, X+
    5a08:	7c 91       	ld	r23, X
    5a0a:	80 81       	ld	r24, Z
    5a0c:	91 81       	ldd	r25, Z+1	; 0x01
    5a0e:	09 2e       	mov	r0, r25
    5a10:	00 0c       	add	r0, r0
    5a12:	aa 0b       	sbc	r26, r26
    5a14:	bb 0b       	sbc	r27, r27
    5a16:	8a 01       	movw	r16, r20
    5a18:	9b 01       	movw	r18, r22
    5a1a:	08 0f       	add	r16, r24
    5a1c:	19 1f       	adc	r17, r25
    5a1e:	2a 1f       	adc	r18, r26
    5a20:	3b 1f       	adc	r19, r27
    5a22:	04 15       	cp	r16, r4
    5a24:	15 05       	cpc	r17, r5
    5a26:	26 05       	cpc	r18, r6
    5a28:	37 05       	cpc	r19, r7
    5a2a:	08 f4       	brcc	.+2      	; 0x5a2e <_ZN7LSM303D7schrittEh+0x20e>
    5a2c:	8c c0       	rjmp	.+280    	; 0x5b46 <_ZN7LSM303D7schrittEh+0x326>
				{
					temp = 3;
				}
				else if (Daten[i]-threschold>higher)
    5a2e:	48 1b       	sub	r20, r24
    5a30:	59 0b       	sbc	r21, r25
    5a32:	6a 0b       	sbc	r22, r26
    5a34:	7b 0b       	sbc	r23, r27
    5a36:	3c 2d       	mov	r19, r12
    5a38:	84 16       	cp	r8, r20
    5a3a:	95 06       	cpc	r9, r21
    5a3c:	a6 06       	cpc	r10, r22
    5a3e:	b7 06       	cpc	r11, r23
    5a40:	08 f4       	brcc	.+2      	; 0x5a44 <_ZN7LSM303D7schrittEh+0x224>
    5a42:	84 c0       	rjmp	.+264    	; 0x5b4c <_ZN7LSM303D7schrittEh+0x32c>
    5a44:	33 2d       	mov	r19, r3
    5a46:	82 c0       	rjmp	.+260    	; 0x5b4c <_ZN7LSM303D7schrittEh+0x32c>
				{
					temp = 1;
				}
				
			}
			else if (temp == 1 && Daten[i]+threschold<higher)
    5a48:	31 30       	cpi	r19, 0x01	; 1
    5a4a:	01 f5       	brne	.+64     	; 0x5a8c <_ZN7LSM303D7schrittEh+0x26c>
    5a4c:	40 81       	ld	r20, Z
    5a4e:	51 81       	ldd	r21, Z+1	; 0x01
    5a50:	05 2e       	mov	r0, r21
    5a52:	00 0c       	add	r0, r0
    5a54:	66 0b       	sbc	r22, r22
    5a56:	77 0b       	sbc	r23, r23
    5a58:	ac 81       	ldd	r26, Y+4	; 0x04
    5a5a:	bd 81       	ldd	r27, Y+5	; 0x05
    5a5c:	8d 91       	ld	r24, X+
    5a5e:	9d 91       	ld	r25, X+
    5a60:	0d 90       	ld	r0, X+
    5a62:	bc 91       	ld	r27, X
    5a64:	a0 2d       	mov	r26, r0
    5a66:	8e 83       	std	Y+6, r24	; 0x06
    5a68:	9f 83       	std	Y+7, r25	; 0x07
    5a6a:	a8 87       	std	Y+8, r26	; 0x08
    5a6c:	b9 87       	std	Y+9, r27	; 0x09
    5a6e:	84 0f       	add	r24, r20
    5a70:	95 1f       	adc	r25, r21
    5a72:	a6 1f       	adc	r26, r22
    5a74:	b7 1f       	adc	r27, r23
    5a76:	88 15       	cp	r24, r8
    5a78:	99 05       	cpc	r25, r9
    5a7a:	aa 05       	cpc	r26, r10
    5a7c:	bb 05       	cpc	r27, r11
    5a7e:	08 f0       	brcs	.+2      	; 0x5a82 <_ZN7LSM303D7schrittEh+0x262>
    5a80:	65 c0       	rjmp	.+202    	; 0x5b4c <_ZN7LSM303D7schrittEh+0x32c>
			{
				zaehler++;
    5a82:	b9 81       	ldd	r27, Y+1	; 0x01
    5a84:	bf 5f       	subi	r27, 0xFF	; 255
    5a86:	b9 83       	std	Y+1, r27	; 0x01
				temp = 2;
    5a88:	32 2d       	mov	r19, r2
    5a8a:	60 c0       	rjmp	.+192    	; 0x5b4c <_ZN7LSM303D7schrittEh+0x32c>
			}
			else if (temp == 2 && Daten[i]+threschold<lower)
    5a8c:	32 30       	cpi	r19, 0x02	; 2
    5a8e:	e1 f4       	brne	.+56     	; 0x5ac8 <_ZN7LSM303D7schrittEh+0x2a8>
    5a90:	40 81       	ld	r20, Z
    5a92:	51 81       	ldd	r21, Z+1	; 0x01
    5a94:	05 2e       	mov	r0, r21
    5a96:	00 0c       	add	r0, r0
    5a98:	66 0b       	sbc	r22, r22
    5a9a:	77 0b       	sbc	r23, r23
    5a9c:	ac 81       	ldd	r26, Y+4	; 0x04
    5a9e:	bd 81       	ldd	r27, Y+5	; 0x05
    5aa0:	8d 91       	ld	r24, X+
    5aa2:	9d 91       	ld	r25, X+
    5aa4:	0d 90       	ld	r0, X+
    5aa6:	bc 91       	ld	r27, X
    5aa8:	a0 2d       	mov	r26, r0
    5aaa:	8e 83       	std	Y+6, r24	; 0x06
    5aac:	9f 83       	std	Y+7, r25	; 0x07
    5aae:	a8 87       	std	Y+8, r26	; 0x08
    5ab0:	b9 87       	std	Y+9, r27	; 0x09
    5ab2:	84 0f       	add	r24, r20
    5ab4:	95 1f       	adc	r25, r21
    5ab6:	a6 1f       	adc	r26, r22
    5ab8:	b7 1f       	adc	r27, r23
    5aba:	84 15       	cp	r24, r4
    5abc:	95 05       	cpc	r25, r5
    5abe:	a6 05       	cpc	r26, r6
    5ac0:	b7 05       	cpc	r27, r7
    5ac2:	08 f4       	brcc	.+2      	; 0x5ac6 <_ZN7LSM303D7schrittEh+0x2a6>
    5ac4:	42 c0       	rjmp	.+132    	; 0x5b4a <_ZN7LSM303D7schrittEh+0x32a>
    5ac6:	42 c0       	rjmp	.+132    	; 0x5b4c <_ZN7LSM303D7schrittEh+0x32c>
			{
				temp = 3;
			}
			else if (temp == 3 && Daten[i]-threschold>lower)
    5ac8:	33 30       	cpi	r19, 0x03	; 3
    5aca:	f9 f4       	brne	.+62     	; 0x5b0a <_ZN7LSM303D7schrittEh+0x2ea>
    5acc:	40 81       	ld	r20, Z
    5ace:	51 81       	ldd	r21, Z+1	; 0x01
    5ad0:	05 2e       	mov	r0, r21
    5ad2:	00 0c       	add	r0, r0
    5ad4:	66 0b       	sbc	r22, r22
    5ad6:	77 0b       	sbc	r23, r23
    5ad8:	ac 81       	ldd	r26, Y+4	; 0x04
    5ada:	bd 81       	ldd	r27, Y+5	; 0x05
    5adc:	8d 91       	ld	r24, X+
    5ade:	9d 91       	ld	r25, X+
    5ae0:	0d 90       	ld	r0, X+
    5ae2:	bc 91       	ld	r27, X
    5ae4:	a0 2d       	mov	r26, r0
    5ae6:	8e 83       	std	Y+6, r24	; 0x06
    5ae8:	9f 83       	std	Y+7, r25	; 0x07
    5aea:	a8 87       	std	Y+8, r26	; 0x08
    5aec:	b9 87       	std	Y+9, r27	; 0x09
    5aee:	84 1b       	sub	r24, r20
    5af0:	95 0b       	sbc	r25, r21
    5af2:	a6 0b       	sbc	r26, r22
    5af4:	b7 0b       	sbc	r27, r23
    5af6:	48 16       	cp	r4, r24
    5af8:	59 06       	cpc	r5, r25
    5afa:	6a 06       	cpc	r6, r26
    5afc:	7b 06       	cpc	r7, r27
    5afe:	30 f5       	brcc	.+76     	; 0x5b4c <_ZN7LSM303D7schrittEh+0x32c>
			{
				zaehler++;
    5b00:	b9 81       	ldd	r27, Y+1	; 0x01
    5b02:	bf 5f       	subi	r27, 0xFF	; 255
    5b04:	b9 83       	std	Y+1, r27	; 0x01
				temp = 4;
    5b06:	34 e0       	ldi	r19, 0x04	; 4
    5b08:	21 c0       	rjmp	.+66     	; 0x5b4c <_ZN7LSM303D7schrittEh+0x32c>
			}
			else if (temp == 4 && Daten[i]-threschold>higher)
    5b0a:	34 30       	cpi	r19, 0x04	; 4
    5b0c:	f9 f4       	brne	.+62     	; 0x5b4c <_ZN7LSM303D7schrittEh+0x32c>
    5b0e:	40 81       	ld	r20, Z
    5b10:	51 81       	ldd	r21, Z+1	; 0x01
    5b12:	05 2e       	mov	r0, r21
    5b14:	00 0c       	add	r0, r0
    5b16:	66 0b       	sbc	r22, r22
    5b18:	77 0b       	sbc	r23, r23
    5b1a:	ac 81       	ldd	r26, Y+4	; 0x04
    5b1c:	bd 81       	ldd	r27, Y+5	; 0x05
    5b1e:	8d 91       	ld	r24, X+
    5b20:	9d 91       	ld	r25, X+
    5b22:	0d 90       	ld	r0, X+
    5b24:	bc 91       	ld	r27, X
    5b26:	a0 2d       	mov	r26, r0
    5b28:	8e 83       	std	Y+6, r24	; 0x06
    5b2a:	9f 83       	std	Y+7, r25	; 0x07
    5b2c:	a8 87       	std	Y+8, r26	; 0x08
    5b2e:	b9 87       	std	Y+9, r27	; 0x09
    5b30:	84 1b       	sub	r24, r20
    5b32:	95 0b       	sbc	r25, r21
    5b34:	a6 0b       	sbc	r26, r22
    5b36:	b7 0b       	sbc	r27, r23
    5b38:	88 16       	cp	r8, r24
    5b3a:	99 06       	cpc	r9, r25
    5b3c:	aa 06       	cpc	r10, r26
    5b3e:	bb 06       	cpc	r11, r27
    5b40:	28 f4       	brcc	.+10     	; 0x5b4c <_ZN7LSM303D7schrittEh+0x32c>
			{
				temp = 1;
    5b42:	3c 2d       	mov	r19, r12
    5b44:	03 c0       	rjmp	.+6      	; 0x5b4c <_ZN7LSM303D7schrittEh+0x32c>
		{
			if (temp == 0)
			{
				if (Daten[i]+threschold<lower)
				{
					temp = 3;
    5b46:	3d 2d       	mov	r19, r13
    5b48:	01 c0       	rjmp	.+2      	; 0x5b4c <_ZN7LSM303D7schrittEh+0x32c>
				zaehler++;
				temp = 2;
			}
			else if (temp == 2 && Daten[i]+threschold<lower)
			{
				temp = 3;
    5b4a:	3d 2d       	mov	r19, r13
    5b4c:	8c 81       	ldd	r24, Y+4	; 0x04
    5b4e:	9d 81       	ldd	r25, Y+5	; 0x05
    5b50:	04 96       	adiw	r24, 0x04	; 4
    5b52:	9d 83       	std	Y+5, r25	; 0x05
    5b54:	8c 83       	std	Y+4, r24	; 0x04
				counter_L++;
			}
		}
		higher/=counter_H;
		lower/=counter_L;
		for (uint8_t i=0;i<50;i++)
    5b56:	8e 15       	cp	r24, r14
    5b58:	9f 05       	cpc	r25, r15
    5b5a:	09 f0       	breq	.+2      	; 0x5b5e <_ZN7LSM303D7schrittEh+0x33e>
    5b5c:	4e cf       	rjmp	.-356    	; 0x59fa <_ZN7LSM303D7schrittEh+0x1da>
    5b5e:	29 81       	ldd	r18, Y+1	; 0x01
    5b60:	0a 81       	ldd	r16, Y+2	; 0x02
    5b62:	1b 81       	ldd	r17, Y+3	; 0x03
			else if (temp == 4 && Daten[i]-threschold>higher)
			{
				temp = 1;
			}
		}
		if (zaehler==1)
    5b64:	21 30       	cpi	r18, 0x01	; 1
    5b66:	59 f4       	brne	.+22     	; 0x5b7e <_ZN7LSM303D7schrittEh+0x35e>
		{
			Schrittzaehler++;
    5b68:	d8 01       	movw	r26, r16
    5b6a:	50 96       	adiw	r26, 0x10	; 16
    5b6c:	8d 91       	ld	r24, X+
    5b6e:	9c 91       	ld	r25, X
    5b70:	51 97       	sbiw	r26, 0x11	; 17
    5b72:	01 96       	adiw	r24, 0x01	; 1
    5b74:	51 96       	adiw	r26, 0x11	; 17
    5b76:	9c 93       	st	X, r25
    5b78:	8e 93       	st	-X, r24
    5b7a:	50 97       	sbiw	r26, 0x10	; 16
    5b7c:	08 c0       	rjmp	.+16     	; 0x5b8e <_ZN7LSM303D7schrittEh+0x36e>
		}
		else{
			Schrittzaehler+=zaehler/2;
    5b7e:	26 95       	lsr	r18
    5b80:	f8 01       	movw	r30, r16
    5b82:	80 89       	ldd	r24, Z+16	; 0x10
    5b84:	91 89       	ldd	r25, Z+17	; 0x11
    5b86:	82 0f       	add	r24, r18
    5b88:	91 1d       	adc	r25, r1
    5b8a:	91 8b       	std	Z+17, r25	; 0x11
    5b8c:	80 8b       	std	Z+16, r24	; 0x10
		}
	}
}
    5b8e:	29 96       	adiw	r28, 0x09	; 9
    5b90:	0f b6       	in	r0, 0x3f	; 63
    5b92:	f8 94       	cli
    5b94:	de bf       	out	0x3e, r29	; 62
    5b96:	0f be       	out	0x3f, r0	; 63
    5b98:	cd bf       	out	0x3d, r28	; 61
    5b9a:	df 91       	pop	r29
    5b9c:	cf 91       	pop	r28
    5b9e:	1f 91       	pop	r17
    5ba0:	0f 91       	pop	r16
    5ba2:	ff 90       	pop	r15
    5ba4:	ef 90       	pop	r14
    5ba6:	df 90       	pop	r13
    5ba8:	cf 90       	pop	r12
    5baa:	bf 90       	pop	r11
    5bac:	af 90       	pop	r10
    5bae:	9f 90       	pop	r9
    5bb0:	8f 90       	pop	r8
    5bb2:	7f 90       	pop	r7
    5bb4:	6f 90       	pop	r6
    5bb6:	5f 90       	pop	r5
    5bb8:	4f 90       	pop	r4
    5bba:	3f 90       	pop	r3
    5bbc:	2f 90       	pop	r2
    5bbe:	08 95       	ret

00005bc0 <_ZN6OutputC1Ehh>:
#include "Output.h"

// default constructor
Output::Output(uint8_t Portpraefix, uint8_t Pinnumber)
{
	Pin=Pinnumber;
    5bc0:	fc 01       	movw	r30, r24
    5bc2:	41 83       	std	Z+1, r20	; 0x01
	Port=Portpraefix;
    5bc4:	60 83       	st	Z, r22
	switch (Portpraefix)
    5bc6:	62 34       	cpi	r22, 0x42	; 66
    5bc8:	a1 f0       	breq	.+40     	; 0x5bf2 <_ZN6OutputC1Ehh+0x32>
    5bca:	18 f4       	brcc	.+6      	; 0x5bd2 <_ZN6OutputC1Ehh+0x12>
    5bcc:	61 34       	cpi	r22, 0x41	; 65
    5bce:	31 f0       	breq	.+12     	; 0x5bdc <_ZN6OutputC1Ehh+0x1c>
    5bd0:	08 95       	ret
    5bd2:	63 34       	cpi	r22, 0x43	; 67
    5bd4:	c9 f0       	breq	.+50     	; 0x5c08 <_ZN6OutputC1Ehh+0x48>
    5bd6:	64 34       	cpi	r22, 0x44	; 68
    5bd8:	11 f1       	breq	.+68     	; 0x5c1e <_ZN6OutputC1Ehh+0x5e>
    5bda:	08 95       	ret
	{
		case 'A':
			DDRA |= (1<<Pin);
    5bdc:	21 b1       	in	r18, 0x01	; 1
    5bde:	81 e0       	ldi	r24, 0x01	; 1
    5be0:	90 e0       	ldi	r25, 0x00	; 0
    5be2:	02 c0       	rjmp	.+4      	; 0x5be8 <_ZN6OutputC1Ehh+0x28>
    5be4:	88 0f       	add	r24, r24
    5be6:	99 1f       	adc	r25, r25
    5be8:	4a 95       	dec	r20
    5bea:	e2 f7       	brpl	.-8      	; 0x5be4 <_ZN6OutputC1Ehh+0x24>
    5bec:	82 2b       	or	r24, r18
    5bee:	81 b9       	out	0x01, r24	; 1
			break;
    5bf0:	08 95       	ret
		case 'B':
			DDRB |= (1<<Pin);
    5bf2:	24 b1       	in	r18, 0x04	; 4
    5bf4:	81 e0       	ldi	r24, 0x01	; 1
    5bf6:	90 e0       	ldi	r25, 0x00	; 0
    5bf8:	02 c0       	rjmp	.+4      	; 0x5bfe <_ZN6OutputC1Ehh+0x3e>
    5bfa:	88 0f       	add	r24, r24
    5bfc:	99 1f       	adc	r25, r25
    5bfe:	4a 95       	dec	r20
    5c00:	e2 f7       	brpl	.-8      	; 0x5bfa <_ZN6OutputC1Ehh+0x3a>
    5c02:	82 2b       	or	r24, r18
    5c04:	84 b9       	out	0x04, r24	; 4
			break;
    5c06:	08 95       	ret
		case 'C':
			DDRC |= (1<<Pin);
    5c08:	27 b1       	in	r18, 0x07	; 7
    5c0a:	81 e0       	ldi	r24, 0x01	; 1
    5c0c:	90 e0       	ldi	r25, 0x00	; 0
    5c0e:	02 c0       	rjmp	.+4      	; 0x5c14 <_ZN6OutputC1Ehh+0x54>
    5c10:	88 0f       	add	r24, r24
    5c12:	99 1f       	adc	r25, r25
    5c14:	4a 95       	dec	r20
    5c16:	e2 f7       	brpl	.-8      	; 0x5c10 <_ZN6OutputC1Ehh+0x50>
    5c18:	82 2b       	or	r24, r18
    5c1a:	87 b9       	out	0x07, r24	; 7
			break;
    5c1c:	08 95       	ret
		case 'D':
			DDRD |= (1<<Pin);
    5c1e:	2a b1       	in	r18, 0x0a	; 10
    5c20:	81 e0       	ldi	r24, 0x01	; 1
    5c22:	90 e0       	ldi	r25, 0x00	; 0
    5c24:	02 c0       	rjmp	.+4      	; 0x5c2a <_ZN6OutputC1Ehh+0x6a>
    5c26:	88 0f       	add	r24, r24
    5c28:	99 1f       	adc	r25, r25
    5c2a:	4a 95       	dec	r20
    5c2c:	e2 f7       	brpl	.-8      	; 0x5c26 <_ZN6OutputC1Ehh+0x66>
    5c2e:	82 2b       	or	r24, r18
    5c30:	8a b9       	out	0x0a, r24	; 10
    5c32:	08 95       	ret

00005c34 <_ZN6OutputD1Ev>:
			break;
	}
} //Output

// default destructor
Output::~Output()
    5c34:	08 95       	ret

00005c36 <_ZN6Output2onEv>:
{
} //~Output

void Output::on(){
    5c36:	fc 01       	movw	r30, r24
	switch (Port)
    5c38:	90 81       	ld	r25, Z
    5c3a:	92 34       	cpi	r25, 0x42	; 66
    5c3c:	a9 f0       	breq	.+42     	; 0x5c68 <_ZN6Output2onEv+0x32>
    5c3e:	18 f4       	brcc	.+6      	; 0x5c46 <_ZN6Output2onEv+0x10>
    5c40:	91 34       	cpi	r25, 0x41	; 65
    5c42:	31 f0       	breq	.+12     	; 0x5c50 <_ZN6Output2onEv+0x1a>
    5c44:	08 95       	ret
    5c46:	93 34       	cpi	r25, 0x43	; 67
    5c48:	d9 f0       	breq	.+54     	; 0x5c80 <_ZN6Output2onEv+0x4a>
    5c4a:	94 34       	cpi	r25, 0x44	; 68
    5c4c:	29 f1       	breq	.+74     	; 0x5c98 <_ZN6Output2onEv+0x62>
    5c4e:	08 95       	ret
	{
		case 'A':
			PORTA |= (1<<Pin);
    5c50:	22 b1       	in	r18, 0x02	; 2
    5c52:	81 e0       	ldi	r24, 0x01	; 1
    5c54:	90 e0       	ldi	r25, 0x00	; 0
    5c56:	01 80       	ldd	r0, Z+1	; 0x01
    5c58:	02 c0       	rjmp	.+4      	; 0x5c5e <_ZN6Output2onEv+0x28>
    5c5a:	88 0f       	add	r24, r24
    5c5c:	99 1f       	adc	r25, r25
    5c5e:	0a 94       	dec	r0
    5c60:	e2 f7       	brpl	.-8      	; 0x5c5a <_ZN6Output2onEv+0x24>
    5c62:	82 2b       	or	r24, r18
    5c64:	82 b9       	out	0x02, r24	; 2
			break;
    5c66:	08 95       	ret
		case 'B':
			PORTB |= (1<<Pin);
    5c68:	25 b1       	in	r18, 0x05	; 5
    5c6a:	81 e0       	ldi	r24, 0x01	; 1
    5c6c:	90 e0       	ldi	r25, 0x00	; 0
    5c6e:	01 80       	ldd	r0, Z+1	; 0x01
    5c70:	02 c0       	rjmp	.+4      	; 0x5c76 <_ZN6Output2onEv+0x40>
    5c72:	88 0f       	add	r24, r24
    5c74:	99 1f       	adc	r25, r25
    5c76:	0a 94       	dec	r0
    5c78:	e2 f7       	brpl	.-8      	; 0x5c72 <_ZN6Output2onEv+0x3c>
    5c7a:	82 2b       	or	r24, r18
    5c7c:	85 b9       	out	0x05, r24	; 5
			break;
    5c7e:	08 95       	ret
		case 'C':
			PORTC |= (1<<Pin);
    5c80:	28 b1       	in	r18, 0x08	; 8
    5c82:	81 e0       	ldi	r24, 0x01	; 1
    5c84:	90 e0       	ldi	r25, 0x00	; 0
    5c86:	01 80       	ldd	r0, Z+1	; 0x01
    5c88:	02 c0       	rjmp	.+4      	; 0x5c8e <_ZN6Output2onEv+0x58>
    5c8a:	88 0f       	add	r24, r24
    5c8c:	99 1f       	adc	r25, r25
    5c8e:	0a 94       	dec	r0
    5c90:	e2 f7       	brpl	.-8      	; 0x5c8a <_ZN6Output2onEv+0x54>
    5c92:	82 2b       	or	r24, r18
    5c94:	88 b9       	out	0x08, r24	; 8
			break;
    5c96:	08 95       	ret
		case 'D':
			PORTD |= (1<<Pin);
    5c98:	2b b1       	in	r18, 0x0b	; 11
    5c9a:	81 e0       	ldi	r24, 0x01	; 1
    5c9c:	90 e0       	ldi	r25, 0x00	; 0
    5c9e:	01 80       	ldd	r0, Z+1	; 0x01
    5ca0:	02 c0       	rjmp	.+4      	; 0x5ca6 <_ZN6Output2onEv+0x70>
    5ca2:	88 0f       	add	r24, r24
    5ca4:	99 1f       	adc	r25, r25
    5ca6:	0a 94       	dec	r0
    5ca8:	e2 f7       	brpl	.-8      	; 0x5ca2 <_ZN6Output2onEv+0x6c>
    5caa:	82 2b       	or	r24, r18
    5cac:	8b b9       	out	0x0b, r24	; 11
    5cae:	08 95       	ret

00005cb0 <_ZN6Output4isonEv>:
		default:
			break;
	}
}

uint8_t Output::ison(){
    5cb0:	fc 01       	movw	r30, r24
	uint8_t returnparam=0;
	switch (Port)
    5cb2:	90 81       	ld	r25, Z
    5cb4:	92 34       	cpi	r25, 0x42	; 66
    5cb6:	a1 f0       	breq	.+40     	; 0x5ce0 <_ZN6Output4isonEv+0x30>
    5cb8:	18 f4       	brcc	.+6      	; 0x5cc0 <_ZN6Output4isonEv+0x10>
    5cba:	91 34       	cpi	r25, 0x41	; 65
    5cbc:	31 f0       	breq	.+12     	; 0x5cca <_ZN6Output4isonEv+0x1a>
    5cbe:	31 c0       	rjmp	.+98     	; 0x5d22 <_ZN6Output4isonEv+0x72>
    5cc0:	93 34       	cpi	r25, 0x43	; 67
    5cc2:	c9 f0       	breq	.+50     	; 0x5cf6 <_ZN6Output4isonEv+0x46>
    5cc4:	94 34       	cpi	r25, 0x44	; 68
    5cc6:	11 f1       	breq	.+68     	; 0x5d0c <_ZN6Output4isonEv+0x5c>
    5cc8:	2c c0       	rjmp	.+88     	; 0x5d22 <_ZN6Output4isonEv+0x72>
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    5cca:	22 b1       	in	r18, 0x02	; 2
    5ccc:	30 e0       	ldi	r19, 0x00	; 0
    5cce:	c9 01       	movw	r24, r18
    5cd0:	01 80       	ldd	r0, Z+1	; 0x01
    5cd2:	02 c0       	rjmp	.+4      	; 0x5cd8 <_ZN6Output4isonEv+0x28>
    5cd4:	95 95       	asr	r25
    5cd6:	87 95       	ror	r24
    5cd8:	0a 94       	dec	r0
    5cda:	e2 f7       	brpl	.-8      	; 0x5cd4 <_ZN6Output4isonEv+0x24>
    5cdc:	81 70       	andi	r24, 0x01	; 1
    5cde:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    5ce0:	25 b1       	in	r18, 0x05	; 5
    5ce2:	30 e0       	ldi	r19, 0x00	; 0
    5ce4:	c9 01       	movw	r24, r18
    5ce6:	01 80       	ldd	r0, Z+1	; 0x01
    5ce8:	02 c0       	rjmp	.+4      	; 0x5cee <_ZN6Output4isonEv+0x3e>
    5cea:	95 95       	asr	r25
    5cec:	87 95       	ror	r24
    5cee:	0a 94       	dec	r0
    5cf0:	e2 f7       	brpl	.-8      	; 0x5cea <_ZN6Output4isonEv+0x3a>
    5cf2:	81 70       	andi	r24, 0x01	; 1
    5cf4:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    5cf6:	28 b1       	in	r18, 0x08	; 8
    5cf8:	30 e0       	ldi	r19, 0x00	; 0
    5cfa:	c9 01       	movw	r24, r18
    5cfc:	01 80       	ldd	r0, Z+1	; 0x01
    5cfe:	02 c0       	rjmp	.+4      	; 0x5d04 <_ZN6Output4isonEv+0x54>
    5d00:	95 95       	asr	r25
    5d02:	87 95       	ror	r24
    5d04:	0a 94       	dec	r0
    5d06:	e2 f7       	brpl	.-8      	; 0x5d00 <_ZN6Output4isonEv+0x50>
    5d08:	81 70       	andi	r24, 0x01	; 1
    5d0a:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    5d0c:	2b b1       	in	r18, 0x0b	; 11
    5d0e:	30 e0       	ldi	r19, 0x00	; 0
    5d10:	c9 01       	movw	r24, r18
    5d12:	01 80       	ldd	r0, Z+1	; 0x01
    5d14:	02 c0       	rjmp	.+4      	; 0x5d1a <_ZN6Output4isonEv+0x6a>
    5d16:	95 95       	asr	r25
    5d18:	87 95       	ror	r24
    5d1a:	0a 94       	dec	r0
    5d1c:	e2 f7       	brpl	.-8      	; 0x5d16 <_ZN6Output4isonEv+0x66>
    5d1e:	81 70       	andi	r24, 0x01	; 1
    5d20:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		default:
		returnparam = 2;
    5d22:	82 e0       	ldi	r24, 0x02	; 2
			break;
	}
	return returnparam;
}
    5d24:	08 95       	ret

00005d26 <_ZN6Output3offEv>:

void Output::off(){
    5d26:	fc 01       	movw	r30, r24
	switch (Port)
    5d28:	90 81       	ld	r25, Z
    5d2a:	92 34       	cpi	r25, 0x42	; 66
    5d2c:	b1 f0       	breq	.+44     	; 0x5d5a <_ZN6Output3offEv+0x34>
    5d2e:	18 f4       	brcc	.+6      	; 0x5d36 <_ZN6Output3offEv+0x10>
    5d30:	91 34       	cpi	r25, 0x41	; 65
    5d32:	31 f0       	breq	.+12     	; 0x5d40 <_ZN6Output3offEv+0x1a>
    5d34:	08 95       	ret
    5d36:	93 34       	cpi	r25, 0x43	; 67
    5d38:	e9 f0       	breq	.+58     	; 0x5d74 <_ZN6Output3offEv+0x4e>
    5d3a:	94 34       	cpi	r25, 0x44	; 68
    5d3c:	41 f1       	breq	.+80     	; 0x5d8e <_ZN6Output3offEv+0x68>
    5d3e:	08 95       	ret
	{
		case 'A':
			PORTA &= ~(1<<Pin);
    5d40:	22 b1       	in	r18, 0x02	; 2
    5d42:	81 e0       	ldi	r24, 0x01	; 1
    5d44:	90 e0       	ldi	r25, 0x00	; 0
    5d46:	01 80       	ldd	r0, Z+1	; 0x01
    5d48:	02 c0       	rjmp	.+4      	; 0x5d4e <_ZN6Output3offEv+0x28>
    5d4a:	88 0f       	add	r24, r24
    5d4c:	99 1f       	adc	r25, r25
    5d4e:	0a 94       	dec	r0
    5d50:	e2 f7       	brpl	.-8      	; 0x5d4a <_ZN6Output3offEv+0x24>
    5d52:	80 95       	com	r24
    5d54:	82 23       	and	r24, r18
    5d56:	82 b9       	out	0x02, r24	; 2
			break;
    5d58:	08 95       	ret
		case 'B':
			PORTB &= ~(1<<Pin);
    5d5a:	25 b1       	in	r18, 0x05	; 5
    5d5c:	81 e0       	ldi	r24, 0x01	; 1
    5d5e:	90 e0       	ldi	r25, 0x00	; 0
    5d60:	01 80       	ldd	r0, Z+1	; 0x01
    5d62:	02 c0       	rjmp	.+4      	; 0x5d68 <_ZN6Output3offEv+0x42>
    5d64:	88 0f       	add	r24, r24
    5d66:	99 1f       	adc	r25, r25
    5d68:	0a 94       	dec	r0
    5d6a:	e2 f7       	brpl	.-8      	; 0x5d64 <_ZN6Output3offEv+0x3e>
    5d6c:	80 95       	com	r24
    5d6e:	82 23       	and	r24, r18
    5d70:	85 b9       	out	0x05, r24	; 5
			break;
    5d72:	08 95       	ret
		case 'C':
			PORTC &= ~(1<<Pin);
    5d74:	28 b1       	in	r18, 0x08	; 8
    5d76:	81 e0       	ldi	r24, 0x01	; 1
    5d78:	90 e0       	ldi	r25, 0x00	; 0
    5d7a:	01 80       	ldd	r0, Z+1	; 0x01
    5d7c:	02 c0       	rjmp	.+4      	; 0x5d82 <_ZN6Output3offEv+0x5c>
    5d7e:	88 0f       	add	r24, r24
    5d80:	99 1f       	adc	r25, r25
    5d82:	0a 94       	dec	r0
    5d84:	e2 f7       	brpl	.-8      	; 0x5d7e <_ZN6Output3offEv+0x58>
    5d86:	80 95       	com	r24
    5d88:	82 23       	and	r24, r18
    5d8a:	88 b9       	out	0x08, r24	; 8
			break;
    5d8c:	08 95       	ret
		case 'D':
			PORTD &= ~(1<<Pin);
    5d8e:	2b b1       	in	r18, 0x0b	; 11
    5d90:	81 e0       	ldi	r24, 0x01	; 1
    5d92:	90 e0       	ldi	r25, 0x00	; 0
    5d94:	01 80       	ldd	r0, Z+1	; 0x01
    5d96:	02 c0       	rjmp	.+4      	; 0x5d9c <_ZN6Output3offEv+0x76>
    5d98:	88 0f       	add	r24, r24
    5d9a:	99 1f       	adc	r25, r25
    5d9c:	0a 94       	dec	r0
    5d9e:	e2 f7       	brpl	.-8      	; 0x5d98 <_ZN6Output3offEv+0x72>
    5da0:	80 95       	com	r24
    5da2:	82 23       	and	r24, r18
    5da4:	8b b9       	out	0x0b, r24	; 11
    5da6:	08 95       	ret

00005da8 <_ZN6Output6toggleEv>:
		default:
			break;
	}
}

void Output::toggle(){
    5da8:	fc 01       	movw	r30, r24
	switch (Port)
    5daa:	90 81       	ld	r25, Z
    5dac:	92 34       	cpi	r25, 0x42	; 66
    5dae:	c9 f0       	breq	.+50     	; 0x5de2 <_ZN6Output6toggleEv+0x3a>
    5db0:	18 f4       	brcc	.+6      	; 0x5db8 <_ZN6Output6toggleEv+0x10>
    5db2:	91 34       	cpi	r25, 0x41	; 65
    5db4:	31 f0       	breq	.+12     	; 0x5dc2 <_ZN6Output6toggleEv+0x1a>
    5db6:	08 95       	ret
    5db8:	93 34       	cpi	r25, 0x43	; 67
    5dba:	19 f1       	breq	.+70     	; 0x5e02 <_ZN6Output6toggleEv+0x5a>
    5dbc:	94 34       	cpi	r25, 0x44	; 68
    5dbe:	89 f1       	breq	.+98     	; 0x5e22 <_ZN6Output6toggleEv+0x7a>
    5dc0:	08 95       	ret
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    5dc2:	82 b1       	in	r24, 0x02	; 2
    5dc4:	90 e0       	ldi	r25, 0x00	; 0
    5dc6:	01 80       	ldd	r0, Z+1	; 0x01
    5dc8:	02 c0       	rjmp	.+4      	; 0x5dce <_ZN6Output6toggleEv+0x26>
    5dca:	95 95       	asr	r25
    5dcc:	87 95       	ror	r24
    5dce:	0a 94       	dec	r0
    5dd0:	e2 f7       	brpl	.-8      	; 0x5dca <_ZN6Output6toggleEv+0x22>
    5dd2:	80 ff       	sbrs	r24, 0
    5dd4:	03 c0       	rjmp	.+6      	; 0x5ddc <_ZN6Output6toggleEv+0x34>
			{
				off();
    5dd6:	cf 01       	movw	r24, r30
    5dd8:	a6 cf       	rjmp	.-180    	; 0x5d26 <_ZN6Output3offEv>
    5dda:	08 95       	ret
			}
			else{
				on();
    5ddc:	cf 01       	movw	r24, r30
    5dde:	2b cf       	rjmp	.-426    	; 0x5c36 <_ZN6Output2onEv>
    5de0:	08 95       	ret
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    5de2:	85 b1       	in	r24, 0x05	; 5
    5de4:	90 e0       	ldi	r25, 0x00	; 0
    5de6:	01 80       	ldd	r0, Z+1	; 0x01
    5de8:	02 c0       	rjmp	.+4      	; 0x5dee <_ZN6Output6toggleEv+0x46>
    5dea:	95 95       	asr	r25
    5dec:	87 95       	ror	r24
    5dee:	0a 94       	dec	r0
    5df0:	e2 f7       	brpl	.-8      	; 0x5dea <_ZN6Output6toggleEv+0x42>
    5df2:	80 ff       	sbrs	r24, 0
    5df4:	03 c0       	rjmp	.+6      	; 0x5dfc <_ZN6Output6toggleEv+0x54>
			{
				off();
    5df6:	cf 01       	movw	r24, r30
    5df8:	96 cf       	rjmp	.-212    	; 0x5d26 <_ZN6Output3offEv>
    5dfa:	08 95       	ret
			}
			else{
				on();
    5dfc:	cf 01       	movw	r24, r30
    5dfe:	1b cf       	rjmp	.-458    	; 0x5c36 <_ZN6Output2onEv>
    5e00:	08 95       	ret
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    5e02:	88 b1       	in	r24, 0x08	; 8
    5e04:	90 e0       	ldi	r25, 0x00	; 0
    5e06:	01 80       	ldd	r0, Z+1	; 0x01
    5e08:	02 c0       	rjmp	.+4      	; 0x5e0e <_ZN6Output6toggleEv+0x66>
    5e0a:	95 95       	asr	r25
    5e0c:	87 95       	ror	r24
    5e0e:	0a 94       	dec	r0
    5e10:	e2 f7       	brpl	.-8      	; 0x5e0a <_ZN6Output6toggleEv+0x62>
    5e12:	80 ff       	sbrs	r24, 0
    5e14:	03 c0       	rjmp	.+6      	; 0x5e1c <_ZN6Output6toggleEv+0x74>
			{
				off();
    5e16:	cf 01       	movw	r24, r30
    5e18:	86 cf       	rjmp	.-244    	; 0x5d26 <_ZN6Output3offEv>
    5e1a:	08 95       	ret
			}
			else{
				on();
    5e1c:	cf 01       	movw	r24, r30
    5e1e:	0b cf       	rjmp	.-490    	; 0x5c36 <_ZN6Output2onEv>
    5e20:	08 95       	ret
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    5e22:	8b b1       	in	r24, 0x0b	; 11
    5e24:	90 e0       	ldi	r25, 0x00	; 0
    5e26:	01 80       	ldd	r0, Z+1	; 0x01
    5e28:	02 c0       	rjmp	.+4      	; 0x5e2e <_ZN6Output6toggleEv+0x86>
    5e2a:	95 95       	asr	r25
    5e2c:	87 95       	ror	r24
    5e2e:	0a 94       	dec	r0
    5e30:	e2 f7       	brpl	.-8      	; 0x5e2a <_ZN6Output6toggleEv+0x82>
    5e32:	80 ff       	sbrs	r24, 0
    5e34:	03 c0       	rjmp	.+6      	; 0x5e3c <_ZN6Output6toggleEv+0x94>
			{
				off();
    5e36:	cf 01       	movw	r24, r30
    5e38:	76 cf       	rjmp	.-276    	; 0x5d26 <_ZN6Output3offEv>
    5e3a:	08 95       	ret
			}
			else{
				on();
    5e3c:	cf 01       	movw	r24, r30
    5e3e:	fb ce       	rjmp	.-522    	; 0x5c36 <_ZN6Output2onEv>
    5e40:	08 95       	ret

00005e42 <_ZN3RTCD1Ev>:
	Tag=7;
	Monat=9;
	Jahr=15;
	ausgabedatumneu();
	ausgabezeitneu();
}
    5e42:	08 95       	ret

00005e44 <_ZN3RTC6WeckerEv>:
    5e44:	fc 01       	movw	r30, r24
    5e46:	80 8d       	ldd	r24, Z+24	; 0x18
    5e48:	83 ff       	sbrs	r24, 3
    5e4a:	0c c0       	rjmp	.+24     	; 0x5e64 <_ZN3RTC6WeckerEv+0x20>
    5e4c:	84 fd       	sbrc	r24, 4
    5e4e:	0a c0       	rjmp	.+20     	; 0x5e64 <_ZN3RTC6WeckerEv+0x20>
    5e50:	22 8d       	ldd	r18, Z+26	; 0x1a
    5e52:	90 89       	ldd	r25, Z+16	; 0x10
    5e54:	29 13       	cpse	r18, r25
    5e56:	06 c0       	rjmp	.+12     	; 0x5e64 <_ZN3RTC6WeckerEv+0x20>
    5e58:	21 8d       	ldd	r18, Z+25	; 0x19
    5e5a:	91 89       	ldd	r25, Z+17	; 0x11
    5e5c:	29 13       	cpse	r18, r25
    5e5e:	02 c0       	rjmp	.+4      	; 0x5e64 <_ZN3RTC6WeckerEv+0x20>
    5e60:	80 61       	ori	r24, 0x10	; 16
    5e62:	80 8f       	std	Z+24, r24	; 0x18
    5e64:	08 95       	ret

00005e66 <_ZN3RTC14ausgabezeitneuEv>:
    5e66:	fc 01       	movw	r30, r24
    5e68:	20 89       	ldd	r18, Z+16	; 0x10
    5e6a:	9d ec       	ldi	r25, 0xCD	; 205
    5e6c:	29 9f       	mul	r18, r25
    5e6e:	81 2d       	mov	r24, r1
    5e70:	11 24       	eor	r1, r1
    5e72:	86 95       	lsr	r24
    5e74:	86 95       	lsr	r24
    5e76:	86 95       	lsr	r24
    5e78:	30 e3       	ldi	r19, 0x30	; 48
    5e7a:	38 0f       	add	r19, r24
    5e7c:	30 83       	st	Z, r19
    5e7e:	88 0f       	add	r24, r24
    5e80:	38 2f       	mov	r19, r24
    5e82:	33 0f       	add	r19, r19
    5e84:	33 0f       	add	r19, r19
    5e86:	83 0f       	add	r24, r19
    5e88:	28 1b       	sub	r18, r24
    5e8a:	20 5d       	subi	r18, 0xD0	; 208
    5e8c:	21 83       	std	Z+1, r18	; 0x01
    5e8e:	21 89       	ldd	r18, Z+17	; 0x11
    5e90:	29 9f       	mul	r18, r25
    5e92:	81 2d       	mov	r24, r1
    5e94:	11 24       	eor	r1, r1
    5e96:	86 95       	lsr	r24
    5e98:	86 95       	lsr	r24
    5e9a:	86 95       	lsr	r24
    5e9c:	30 e3       	ldi	r19, 0x30	; 48
    5e9e:	38 0f       	add	r19, r24
    5ea0:	33 83       	std	Z+3, r19	; 0x03
    5ea2:	88 0f       	add	r24, r24
    5ea4:	38 2f       	mov	r19, r24
    5ea6:	33 0f       	add	r19, r19
    5ea8:	33 0f       	add	r19, r19
    5eaa:	83 0f       	add	r24, r19
    5eac:	28 1b       	sub	r18, r24
    5eae:	20 5d       	subi	r18, 0xD0	; 208
    5eb0:	24 83       	std	Z+4, r18	; 0x04
    5eb2:	82 89       	ldd	r24, Z+18	; 0x12
    5eb4:	89 9f       	mul	r24, r25
    5eb6:	91 2d       	mov	r25, r1
    5eb8:	11 24       	eor	r1, r1
    5eba:	96 95       	lsr	r25
    5ebc:	96 95       	lsr	r25
    5ebe:	96 95       	lsr	r25
    5ec0:	20 e3       	ldi	r18, 0x30	; 48
    5ec2:	29 0f       	add	r18, r25
    5ec4:	26 83       	std	Z+6, r18	; 0x06
    5ec6:	99 0f       	add	r25, r25
    5ec8:	29 2f       	mov	r18, r25
    5eca:	22 0f       	add	r18, r18
    5ecc:	22 0f       	add	r18, r18
    5ece:	92 0f       	add	r25, r18
    5ed0:	89 1b       	sub	r24, r25
    5ed2:	80 5d       	subi	r24, 0xD0	; 208
    5ed4:	87 83       	std	Z+7, r24	; 0x07
    5ed6:	08 95       	ret

00005ed8 <_ZN3RTC15ausgabedatumneuEv>:
    5ed8:	fc 01       	movw	r30, r24
    5eda:	24 89       	ldd	r18, Z+20	; 0x14
    5edc:	9d ec       	ldi	r25, 0xCD	; 205
    5ede:	29 9f       	mul	r18, r25
    5ee0:	81 2d       	mov	r24, r1
    5ee2:	11 24       	eor	r1, r1
    5ee4:	86 95       	lsr	r24
    5ee6:	86 95       	lsr	r24
    5ee8:	86 95       	lsr	r24
    5eea:	30 e3       	ldi	r19, 0x30	; 48
    5eec:	38 0f       	add	r19, r24
    5eee:	30 87       	std	Z+8, r19	; 0x08
    5ef0:	88 0f       	add	r24, r24
    5ef2:	38 2f       	mov	r19, r24
    5ef4:	33 0f       	add	r19, r19
    5ef6:	33 0f       	add	r19, r19
    5ef8:	83 0f       	add	r24, r19
    5efa:	28 1b       	sub	r18, r24
    5efc:	20 5d       	subi	r18, 0xD0	; 208
    5efe:	21 87       	std	Z+9, r18	; 0x09
    5f00:	26 89       	ldd	r18, Z+22	; 0x16
    5f02:	29 9f       	mul	r18, r25
    5f04:	81 2d       	mov	r24, r1
    5f06:	11 24       	eor	r1, r1
    5f08:	86 95       	lsr	r24
    5f0a:	86 95       	lsr	r24
    5f0c:	86 95       	lsr	r24
    5f0e:	30 e3       	ldi	r19, 0x30	; 48
    5f10:	38 0f       	add	r19, r24
    5f12:	33 87       	std	Z+11, r19	; 0x0b
    5f14:	88 0f       	add	r24, r24
    5f16:	38 2f       	mov	r19, r24
    5f18:	33 0f       	add	r19, r19
    5f1a:	33 0f       	add	r19, r19
    5f1c:	83 0f       	add	r24, r19
    5f1e:	28 1b       	sub	r18, r24
    5f20:	20 5d       	subi	r18, 0xD0	; 208
    5f22:	24 87       	std	Z+12, r18	; 0x0c
    5f24:	87 89       	ldd	r24, Z+23	; 0x17
    5f26:	89 9f       	mul	r24, r25
    5f28:	91 2d       	mov	r25, r1
    5f2a:	11 24       	eor	r1, r1
    5f2c:	96 95       	lsr	r25
    5f2e:	96 95       	lsr	r25
    5f30:	96 95       	lsr	r25
    5f32:	20 e3       	ldi	r18, 0x30	; 48
    5f34:	29 0f       	add	r18, r25
    5f36:	26 87       	std	Z+14, r18	; 0x0e
    5f38:	99 0f       	add	r25, r25
    5f3a:	29 2f       	mov	r18, r25
    5f3c:	22 0f       	add	r18, r18
    5f3e:	22 0f       	add	r18, r18
    5f40:	92 0f       	add	r25, r18
    5f42:	89 1b       	sub	r24, r25
    5f44:	80 5d       	subi	r24, 0xD0	; 208
    5f46:	87 87       	std	Z+15, r24	; 0x0f
    5f48:	08 95       	ret

00005f4a <_ZN3RTCC1Ev>:
    5f4a:	cf 93       	push	r28
    5f4c:	df 93       	push	r29
    5f4e:	ec 01       	movw	r28, r24
    5f50:	1a 8a       	std	Y+18, r1	; 0x12
    5f52:	1b 8a       	std	Y+19, r1	; 0x13
    5f54:	19 8a       	std	Y+17, r1	; 0x11
    5f56:	18 8a       	std	Y+16, r1	; 0x10
    5f58:	1c 8a       	std	Y+20, r1	; 0x14
    5f5a:	1e 8a       	std	Y+22, r1	; 0x16
    5f5c:	1f 8a       	std	Y+23, r1	; 0x17
    5f5e:	1d 8a       	std	Y+21, r1	; 0x15
    5f60:	88 e2       	ldi	r24, 0x28	; 40
    5f62:	89 8f       	std	Y+25, r24	; 0x19
    5f64:	8a e0       	ldi	r24, 0x0A	; 10
    5f66:	8a 8f       	std	Y+26, r24	; 0x1a
    5f68:	1c 8e       	std	Y+28, r1	; 0x1c
    5f6a:	1b 8e       	std	Y+27, r1	; 0x1b
    5f6c:	1e 8e       	std	Y+30, r1	; 0x1e
    5f6e:	1d 8e       	std	Y+29, r1	; 0x1d
    5f70:	fe 01       	movw	r30, r28
    5f72:	ce 01       	movw	r24, r28
    5f74:	08 96       	adiw	r24, 0x08	; 8
    5f76:	dc 01       	movw	r26, r24
    5f78:	11 92       	st	Z+, r1
    5f7a:	1d 92       	st	X+, r1
    5f7c:	e8 17       	cp	r30, r24
    5f7e:	f9 07       	cpc	r31, r25
    5f80:	d9 f7       	brne	.-10     	; 0x5f78 <_ZN3RTCC1Ev+0x2e>
    5f82:	8a e3       	ldi	r24, 0x3A	; 58
    5f84:	8a 83       	std	Y+2, r24	; 0x02
    5f86:	8d 83       	std	Y+5, r24	; 0x05
    5f88:	8e e2       	ldi	r24, 0x2E	; 46
    5f8a:	8a 87       	std	Y+10, r24	; 0x0a
    5f8c:	8d 87       	std	Y+13, r24	; 0x0d
    5f8e:	ce 01       	movw	r24, r28
    5f90:	6a df       	rcall	.-300    	; 0x5e66 <_ZN3RTC14ausgabezeitneuEv>
    5f92:	ce 01       	movw	r24, r28
    5f94:	a1 df       	rcall	.-190    	; 0x5ed8 <_ZN3RTC15ausgabedatumneuEv>
    5f96:	df 91       	pop	r29
    5f98:	cf 91       	pop	r28
    5f9a:	08 95       	ret

00005f9c <_ZN3RTC8kalenderEv>:
    5f9c:	fc 01       	movw	r30, r24
    5f9e:	26 89       	ldd	r18, Z+22	; 0x16
    5fa0:	32 2f       	mov	r19, r18
    5fa2:	3d 7f       	andi	r19, 0xFD	; 253
    5fa4:	34 30       	cpi	r19, 0x04	; 4
    5fa6:	11 f0       	breq	.+4      	; 0x5fac <_ZN3RTC8kalenderEv+0x10>
    5fa8:	39 30       	cpi	r19, 0x09	; 9
    5faa:	91 f4       	brne	.+36     	; 0x5fd0 <_ZN3RTC8kalenderEv+0x34>
    5fac:	fc 01       	movw	r30, r24
    5fae:	34 89       	ldd	r19, Z+20	; 0x14
    5fb0:	3f 31       	cpi	r19, 0x1F	; 31
    5fb2:	b0 f1       	brcs	.+108    	; 0x6020 <_ZN3RTC8kalenderEv+0x84>
    5fb4:	31 e0       	ldi	r19, 0x01	; 1
    5fb6:	34 8b       	std	Z+20, r19	; 0x14
    5fb8:	2f 5f       	subi	r18, 0xFF	; 255
    5fba:	2d 30       	cpi	r18, 0x0D	; 13
    5fbc:	10 f4       	brcc	.+4      	; 0x5fc2 <_ZN3RTC8kalenderEv+0x26>
    5fbe:	26 8b       	std	Z+22, r18	; 0x16
    5fc0:	2f c0       	rjmp	.+94     	; 0x6020 <_ZN3RTC8kalenderEv+0x84>
    5fc2:	21 e0       	ldi	r18, 0x01	; 1
    5fc4:	fc 01       	movw	r30, r24
    5fc6:	26 8b       	std	Z+22, r18	; 0x16
    5fc8:	27 89       	ldd	r18, Z+23	; 0x17
    5fca:	2f 5f       	subi	r18, 0xFF	; 255
    5fcc:	27 8b       	std	Z+23, r18	; 0x17
    5fce:	28 c0       	rjmp	.+80     	; 0x6020 <_ZN3RTC8kalenderEv+0x84>
    5fd0:	22 30       	cpi	r18, 0x02	; 2
    5fd2:	a9 f4       	brne	.+42     	; 0x5ffe <_ZN3RTC8kalenderEv+0x62>
    5fd4:	fc 01       	movw	r30, r24
    5fd6:	27 89       	ldd	r18, Z+23	; 0x17
    5fd8:	23 70       	andi	r18, 0x03	; 3
    5fda:	41 f4       	brne	.+16     	; 0x5fec <_ZN3RTC8kalenderEv+0x50>
    5fdc:	24 89       	ldd	r18, Z+20	; 0x14
    5fde:	2e 31       	cpi	r18, 0x1E	; 30
    5fe0:	f8 f0       	brcs	.+62     	; 0x6020 <_ZN3RTC8kalenderEv+0x84>
    5fe2:	21 e0       	ldi	r18, 0x01	; 1
    5fe4:	24 8b       	std	Z+20, r18	; 0x14
    5fe6:	23 e0       	ldi	r18, 0x03	; 3
    5fe8:	26 8b       	std	Z+22, r18	; 0x16
    5fea:	1a c0       	rjmp	.+52     	; 0x6020 <_ZN3RTC8kalenderEv+0x84>
    5fec:	fc 01       	movw	r30, r24
    5fee:	24 89       	ldd	r18, Z+20	; 0x14
    5ff0:	2d 31       	cpi	r18, 0x1D	; 29
    5ff2:	b0 f0       	brcs	.+44     	; 0x6020 <_ZN3RTC8kalenderEv+0x84>
    5ff4:	21 e0       	ldi	r18, 0x01	; 1
    5ff6:	24 8b       	std	Z+20, r18	; 0x14
    5ff8:	23 e0       	ldi	r18, 0x03	; 3
    5ffa:	26 8b       	std	Z+22, r18	; 0x16
    5ffc:	11 c0       	rjmp	.+34     	; 0x6020 <_ZN3RTC8kalenderEv+0x84>
    5ffe:	fc 01       	movw	r30, r24
    6000:	34 89       	ldd	r19, Z+20	; 0x14
    6002:	30 32       	cpi	r19, 0x20	; 32
    6004:	68 f0       	brcs	.+26     	; 0x6020 <_ZN3RTC8kalenderEv+0x84>
    6006:	31 e0       	ldi	r19, 0x01	; 1
    6008:	34 8b       	std	Z+20, r19	; 0x14
    600a:	2f 5f       	subi	r18, 0xFF	; 255
    600c:	2d 30       	cpi	r18, 0x0D	; 13
    600e:	10 f4       	brcc	.+4      	; 0x6014 <_ZN3RTC8kalenderEv+0x78>
    6010:	26 8b       	std	Z+22, r18	; 0x16
    6012:	06 c0       	rjmp	.+12     	; 0x6020 <_ZN3RTC8kalenderEv+0x84>
    6014:	21 e0       	ldi	r18, 0x01	; 1
    6016:	fc 01       	movw	r30, r24
    6018:	26 8b       	std	Z+22, r18	; 0x16
    601a:	27 89       	ldd	r18, Z+23	; 0x17
    601c:	2f 5f       	subi	r18, 0xFF	; 255
    601e:	27 8b       	std	Z+23, r18	; 0x17
    6020:	5b cf       	rjmp	.-330    	; 0x5ed8 <_ZN3RTC15ausgabedatumneuEv>
    6022:	08 95       	ret

00006024 <_ZN3RTC4zeitEv>:
    6024:	cf 93       	push	r28
    6026:	df 93       	push	r29
    6028:	ec 01       	movw	r28, r24
    602a:	8a 89       	ldd	r24, Y+18	; 0x12
    602c:	8c 53       	subi	r24, 0x3C	; 60
    602e:	8d 38       	cpi	r24, 0x8D	; 141
    6030:	c0 f4       	brcc	.+48     	; 0x6062 <_ZN3RTC4zeitEv+0x3e>
    6032:	1a 8a       	std	Y+18, r1	; 0x12
    6034:	89 89       	ldd	r24, Y+17	; 0x11
    6036:	8f 5f       	subi	r24, 0xFF	; 255
    6038:	89 8b       	std	Y+17, r24	; 0x11
    603a:	98 8d       	ldd	r25, Y+24	; 0x18
    603c:	94 60       	ori	r25, 0x04	; 4
    603e:	98 8f       	std	Y+24, r25	; 0x18
    6040:	8c 33       	cpi	r24, 0x3C	; 60
    6042:	68 f0       	brcs	.+26     	; 0x605e <_ZN3RTC4zeitEv+0x3a>
    6044:	19 8a       	std	Y+17, r1	; 0x11
    6046:	88 89       	ldd	r24, Y+16	; 0x10
    6048:	8f 5f       	subi	r24, 0xFF	; 255
    604a:	88 31       	cpi	r24, 0x18	; 24
    604c:	10 f4       	brcc	.+4      	; 0x6052 <_ZN3RTC4zeitEv+0x2e>
    604e:	88 8b       	std	Y+16, r24	; 0x10
    6050:	06 c0       	rjmp	.+12     	; 0x605e <_ZN3RTC4zeitEv+0x3a>
    6052:	18 8a       	std	Y+16, r1	; 0x10
    6054:	8c 89       	ldd	r24, Y+20	; 0x14
    6056:	8f 5f       	subi	r24, 0xFF	; 255
    6058:	8c 8b       	std	Y+20, r24	; 0x14
    605a:	ce 01       	movw	r24, r28
    605c:	9f df       	rcall	.-194    	; 0x5f9c <_ZN3RTC8kalenderEv>
    605e:	ce 01       	movw	r24, r28
    6060:	f1 de       	rcall	.-542    	; 0x5e44 <_ZN3RTC6WeckerEv>
    6062:	ce 01       	movw	r24, r28
    6064:	00 df       	rcall	.-512    	; 0x5e66 <_ZN3RTC14ausgabezeitneuEv>
    6066:	88 8d       	ldd	r24, Y+24	; 0x18
    6068:	85 ff       	sbrs	r24, 5
    606a:	0b c0       	rjmp	.+22     	; 0x6082 <_ZN3RTC4zeitEv+0x5e>
    606c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    606e:	3c 8d       	ldd	r19, Y+28	; 0x1c
    6070:	21 50       	subi	r18, 0x01	; 1
    6072:	31 09       	sbc	r19, r1
    6074:	3c 8f       	std	Y+28, r19	; 0x1c
    6076:	2b 8f       	std	Y+27, r18	; 0x1b
    6078:	23 2b       	or	r18, r19
    607a:	19 f4       	brne	.+6      	; 0x6082 <_ZN3RTC4zeitEv+0x5e>
    607c:	8f 7d       	andi	r24, 0xDF	; 223
    607e:	81 60       	ori	r24, 0x01	; 1
    6080:	88 8f       	std	Y+24, r24	; 0x18
    6082:	88 8d       	ldd	r24, Y+24	; 0x18
    6084:	86 ff       	sbrs	r24, 6
    6086:	05 c0       	rjmp	.+10     	; 0x6092 <_ZN3RTC4zeitEv+0x6e>
    6088:	8d 8d       	ldd	r24, Y+29	; 0x1d
    608a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    608c:	01 96       	adiw	r24, 0x01	; 1
    608e:	9e 8f       	std	Y+30, r25	; 0x1e
    6090:	8d 8f       	std	Y+29, r24	; 0x1d
    6092:	80 e0       	ldi	r24, 0x00	; 0
    6094:	df 91       	pop	r29
    6096:	cf 91       	pop	r28
    6098:	08 95       	ret

0000609a <_ZN3RTC8RTCstartEv>:

void RTC::RTCstart(){
    609a:	fc 01       	movw	r30, r24
	//Einstellungen des Ausgabebuffers
	msg_uhr[0]='0';
    609c:	80 e3       	ldi	r24, 0x30	; 48
    609e:	80 83       	st	Z, r24
	msg_uhr[1]='0';
    60a0:	81 83       	std	Z+1, r24	; 0x01
	msg_uhr[2]=':';
    60a2:	9a e3       	ldi	r25, 0x3A	; 58
    60a4:	92 83       	std	Z+2, r25	; 0x02
	msg_uhr[3]='0';
    60a6:	83 83       	std	Z+3, r24	; 0x03
	msg_uhr[4]='0';
    60a8:	84 83       	std	Z+4, r24	; 0x04
	msg_uhr[5]=':';
    60aa:	95 83       	std	Z+5, r25	; 0x05
	msg_uhr[6]='0';
    60ac:	86 83       	std	Z+6, r24	; 0x06
	msg_uhr[7]='0';
    60ae:	87 83       	std	Z+7, r24	; 0x07
	//Timer2 als 1ms Timer fuer die RTC
	//asynchron mit 32.768 kHz (noch synchrom)
	TCNT2 = TIMER2RTCTIME;
    60b0:	10 92 b2 00 	sts	0x00B2, r1
	ASSR |= (1<<AS2);
    60b4:	e6 eb       	ldi	r30, 0xB6	; 182
    60b6:	f0 e0       	ldi	r31, 0x00	; 0
    60b8:	80 81       	ld	r24, Z
    60ba:	80 62       	ori	r24, 0x20	; 32
    60bc:	80 83       	st	Z, r24
	TIMSK2 = (1<<TOIE2);
    60be:	81 e0       	ldi	r24, 0x01	; 1
    60c0:	80 93 70 00 	sts	0x0070, r24
	TCCR2B = (1<<CS22) | (1<<CS20);		//Vorteiler 256
    60c4:	85 e0       	ldi	r24, 0x05	; 5
    60c6:	80 93 b1 00 	sts	0x00B1, r24
    60ca:	08 95       	ret

000060cc <_ZN3RTC7RTCstopEv>:
}

void RTC::RTCstop(){
	TCCR2B &= ~((1<<CS22) | (1<<CS21));
    60cc:	e1 eb       	ldi	r30, 0xB1	; 177
    60ce:	f0 e0       	ldi	r31, 0x00	; 0
    60d0:	80 81       	ld	r24, Z
    60d2:	89 7f       	andi	r24, 0xF9	; 249
    60d4:	80 83       	st	Z, r24
    60d6:	08 95       	ret

000060d8 <_ZN5SOUNDD1Ev>:
	setfrequenci(1000);//1KHz
	off();
} //SOUND

// default destructor
SOUND::~SOUND()
    60d8:	08 95       	ret

000060da <_ZN5SOUND2onEv>:
	TCNT0 = 0;
	on();
}

void SOUND::on(){
	if ((interupts&(1<<Soundactiv)))
    60da:	fc 01       	movw	r30, r24
    60dc:	20 81       	ld	r18, Z
    60de:	20 ff       	sbrs	r18, 0
    60e0:	04 c0       	rjmp	.+8      	; 0x60ea <_ZN5SOUND2onEv+0x10>
	{
		TCCR0B |= prescaler;
    60e2:	25 b5       	in	r18, 0x25	; 37
    60e4:	81 81       	ldd	r24, Z+1	; 0x01
    60e6:	82 2b       	or	r24, r18
    60e8:	85 bd       	out	0x25, r24	; 37
    60ea:	08 95       	ret

000060ec <_ZN5SOUND3offEv>:
	}
}

void SOUND::off(){
	TCCR0B &= ~((1<<CS00)|(1<<CS01)|(1<<CS02));
    60ec:	85 b5       	in	r24, 0x25	; 37
    60ee:	88 7f       	andi	r24, 0xF8	; 248
    60f0:	85 bd       	out	0x25, r24	; 37
    60f2:	08 95       	ret

000060f4 <_ZN5SOUND12setfrequenciEj>:
{
} //~SOUND


//WERT = f_CPU/(f*1024)
void SOUND::setfrequenci(uint16_t frequenz){
    60f4:	0f 93       	push	r16
    60f6:	1f 93       	push	r17
    60f8:	cf 93       	push	r28
    60fa:	df 93       	push	r29
    60fc:	8c 01       	movw	r16, r24
    60fe:	eb 01       	movw	r28, r22
	off();
    6100:	f5 df       	rcall	.-22     	; 0x60ec <_ZN5SOUND3offEv>
	float WERT = F_CPU/256.0;
	WERT /= (frequenz);
    6102:	be 01       	movw	r22, r28
    6104:	80 e0       	ldi	r24, 0x00	; 0
    6106:	90 e0       	ldi	r25, 0x00	; 0
    6108:	8f d1       	rcall	.+798    	; 0x6428 <__floatunsisf>
    610a:	9b 01       	movw	r18, r22
    610c:	ac 01       	movw	r20, r24
    610e:	60 e0       	ldi	r22, 0x00	; 0
    6110:	74 e2       	ldi	r23, 0x24	; 36
    6112:	84 ef       	ldi	r24, 0xF4	; 244
    6114:	96 e4       	ldi	r25, 0x46	; 70
    6116:	ef d0       	rcall	.+478    	; 0x62f6 <__divsf3>
	OCR0A = (uint8_t)WERT;
    6118:	5b d1       	rcall	.+694    	; 0x63d0 <__fixunssfsi>
    611a:	67 bd       	out	0x27, r22	; 39
	TCNT0 = 0;
    611c:	16 bc       	out	0x26, r1	; 38
	on();
    611e:	c8 01       	movw	r24, r16
    6120:	dc df       	rcall	.-72     	; 0x60da <_ZN5SOUND2onEv>
}
    6122:	df 91       	pop	r29
    6124:	cf 91       	pop	r28
    6126:	1f 91       	pop	r17
    6128:	0f 91       	pop	r16
    612a:	08 95       	ret

0000612c <_ZN5SOUNDC1Ev>:


#include "SOUND.h"

// default constructor
SOUND::SOUND()
    612c:	cf 93       	push	r28
    612e:	df 93       	push	r29
    6130:	ec 01       	movw	r28, r24
{
	//interuptregister initialisieren
	interupts = 0;
    6132:	18 82       	st	Y, r1
	PORTB &= ~(1<<PORTB3); //Pullups ausschalten
    6134:	2b 98       	cbi	0x05, 3	; 5
	DDRB |= (1<<PORTB3); //Ausgang schalten
    6136:	23 9a       	sbi	0x04, 3	; 4
	//Not inverting PWM, Phase correct
	TCCR0A |= (1<<COM0A0) | (1<<WGM00);
    6138:	84 b5       	in	r24, 0x24	; 36
    613a:	81 64       	ori	r24, 0x41	; 65
    613c:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<WGM02);
    613e:	85 b5       	in	r24, 0x25	; 37
    6140:	88 60       	ori	r24, 0x08	; 8
    6142:	85 bd       	out	0x25, r24	; 37
	fuer	8		1MHz		3.90625KHz
			64		125KHz		488.28Hz
			256		31.25KHz	122.07Hz
			1024	7.8125KHz	30.52Hz
*/
	prescaler = (1<<CS02); //256
    6144:	84 e0       	ldi	r24, 0x04	; 4
    6146:	89 83       	std	Y+1, r24	; 0x01
	setfrequenci(1000);//1KHz
    6148:	68 ee       	ldi	r22, 0xE8	; 232
    614a:	73 e0       	ldi	r23, 0x03	; 3
    614c:	ce 01       	movw	r24, r28
    614e:	d2 df       	rcall	.-92     	; 0x60f4 <_ZN5SOUND12setfrequenciEj>
	off();
    6150:	ce 01       	movw	r24, r28
    6152:	cc df       	rcall	.-104    	; 0x60ec <_ZN5SOUND3offEv>
} //SOUND
    6154:	df 91       	pop	r29
    6156:	cf 91       	pop	r28
    6158:	08 95       	ret

0000615a <__subsf3>:
    615a:	50 58       	subi	r21, 0x80	; 128

0000615c <__addsf3>:
    615c:	bb 27       	eor	r27, r27
    615e:	aa 27       	eor	r26, r26
    6160:	0e d0       	rcall	.+28     	; 0x617e <__addsf3x>
    6162:	27 c2       	rjmp	.+1102   	; 0x65b2 <__fp_round>
    6164:	f0 d1       	rcall	.+992    	; 0x6546 <__fp_pscA>
    6166:	30 f0       	brcs	.+12     	; 0x6174 <__addsf3+0x18>
    6168:	f5 d1       	rcall	.+1002   	; 0x6554 <__fp_pscB>
    616a:	20 f0       	brcs	.+8      	; 0x6174 <__addsf3+0x18>
    616c:	31 f4       	brne	.+12     	; 0x617a <__addsf3+0x1e>
    616e:	9f 3f       	cpi	r25, 0xFF	; 255
    6170:	11 f4       	brne	.+4      	; 0x6176 <__addsf3+0x1a>
    6172:	1e f4       	brtc	.+6      	; 0x617a <__addsf3+0x1e>
    6174:	c0 c1       	rjmp	.+896    	; 0x64f6 <__fp_nan>
    6176:	0e f4       	brtc	.+2      	; 0x617a <__addsf3+0x1e>
    6178:	e0 95       	com	r30
    617a:	e7 fb       	bst	r30, 7
    617c:	b6 c1       	rjmp	.+876    	; 0x64ea <__fp_inf>

0000617e <__addsf3x>:
    617e:	e9 2f       	mov	r30, r25
    6180:	3a d2       	rcall	.+1140   	; 0x65f6 <__fp_split3>
    6182:	80 f3       	brcs	.-32     	; 0x6164 <__addsf3+0x8>
    6184:	ba 17       	cp	r27, r26
    6186:	62 07       	cpc	r22, r18
    6188:	73 07       	cpc	r23, r19
    618a:	84 07       	cpc	r24, r20
    618c:	95 07       	cpc	r25, r21
    618e:	18 f0       	brcs	.+6      	; 0x6196 <__addsf3x+0x18>
    6190:	71 f4       	brne	.+28     	; 0x61ae <__addsf3x+0x30>
    6192:	9e f5       	brtc	.+102    	; 0x61fa <__addsf3x+0x7c>
    6194:	52 c2       	rjmp	.+1188   	; 0x663a <__fp_zero>
    6196:	0e f4       	brtc	.+2      	; 0x619a <__addsf3x+0x1c>
    6198:	e0 95       	com	r30
    619a:	0b 2e       	mov	r0, r27
    619c:	ba 2f       	mov	r27, r26
    619e:	a0 2d       	mov	r26, r0
    61a0:	0b 01       	movw	r0, r22
    61a2:	b9 01       	movw	r22, r18
    61a4:	90 01       	movw	r18, r0
    61a6:	0c 01       	movw	r0, r24
    61a8:	ca 01       	movw	r24, r20
    61aa:	a0 01       	movw	r20, r0
    61ac:	11 24       	eor	r1, r1
    61ae:	ff 27       	eor	r31, r31
    61b0:	59 1b       	sub	r21, r25
    61b2:	99 f0       	breq	.+38     	; 0x61da <__addsf3x+0x5c>
    61b4:	59 3f       	cpi	r21, 0xF9	; 249
    61b6:	50 f4       	brcc	.+20     	; 0x61cc <__addsf3x+0x4e>
    61b8:	50 3e       	cpi	r21, 0xE0	; 224
    61ba:	68 f1       	brcs	.+90     	; 0x6216 <__addsf3x+0x98>
    61bc:	1a 16       	cp	r1, r26
    61be:	f0 40       	sbci	r31, 0x00	; 0
    61c0:	a2 2f       	mov	r26, r18
    61c2:	23 2f       	mov	r18, r19
    61c4:	34 2f       	mov	r19, r20
    61c6:	44 27       	eor	r20, r20
    61c8:	58 5f       	subi	r21, 0xF8	; 248
    61ca:	f3 cf       	rjmp	.-26     	; 0x61b2 <__addsf3x+0x34>
    61cc:	46 95       	lsr	r20
    61ce:	37 95       	ror	r19
    61d0:	27 95       	ror	r18
    61d2:	a7 95       	ror	r26
    61d4:	f0 40       	sbci	r31, 0x00	; 0
    61d6:	53 95       	inc	r21
    61d8:	c9 f7       	brne	.-14     	; 0x61cc <__addsf3x+0x4e>
    61da:	7e f4       	brtc	.+30     	; 0x61fa <__addsf3x+0x7c>
    61dc:	1f 16       	cp	r1, r31
    61de:	ba 0b       	sbc	r27, r26
    61e0:	62 0b       	sbc	r22, r18
    61e2:	73 0b       	sbc	r23, r19
    61e4:	84 0b       	sbc	r24, r20
    61e6:	ba f0       	brmi	.+46     	; 0x6216 <__addsf3x+0x98>
    61e8:	91 50       	subi	r25, 0x01	; 1
    61ea:	a1 f0       	breq	.+40     	; 0x6214 <__addsf3x+0x96>
    61ec:	ff 0f       	add	r31, r31
    61ee:	bb 1f       	adc	r27, r27
    61f0:	66 1f       	adc	r22, r22
    61f2:	77 1f       	adc	r23, r23
    61f4:	88 1f       	adc	r24, r24
    61f6:	c2 f7       	brpl	.-16     	; 0x61e8 <__addsf3x+0x6a>
    61f8:	0e c0       	rjmp	.+28     	; 0x6216 <__addsf3x+0x98>
    61fa:	ba 0f       	add	r27, r26
    61fc:	62 1f       	adc	r22, r18
    61fe:	73 1f       	adc	r23, r19
    6200:	84 1f       	adc	r24, r20
    6202:	48 f4       	brcc	.+18     	; 0x6216 <__addsf3x+0x98>
    6204:	87 95       	ror	r24
    6206:	77 95       	ror	r23
    6208:	67 95       	ror	r22
    620a:	b7 95       	ror	r27
    620c:	f7 95       	ror	r31
    620e:	9e 3f       	cpi	r25, 0xFE	; 254
    6210:	08 f0       	brcs	.+2      	; 0x6214 <__addsf3x+0x96>
    6212:	b3 cf       	rjmp	.-154    	; 0x617a <__addsf3+0x1e>
    6214:	93 95       	inc	r25
    6216:	88 0f       	add	r24, r24
    6218:	08 f0       	brcs	.+2      	; 0x621c <__addsf3x+0x9e>
    621a:	99 27       	eor	r25, r25
    621c:	ee 0f       	add	r30, r30
    621e:	97 95       	ror	r25
    6220:	87 95       	ror	r24
    6222:	08 95       	ret
    6224:	90 d1       	rcall	.+800    	; 0x6546 <__fp_pscA>
    6226:	58 f0       	brcs	.+22     	; 0x623e <__addsf3x+0xc0>
    6228:	80 e8       	ldi	r24, 0x80	; 128
    622a:	91 e0       	ldi	r25, 0x01	; 1
    622c:	09 f4       	brne	.+2      	; 0x6230 <__addsf3x+0xb2>
    622e:	9e ef       	ldi	r25, 0xFE	; 254
    6230:	91 d1       	rcall	.+802    	; 0x6554 <__fp_pscB>
    6232:	28 f0       	brcs	.+10     	; 0x623e <__addsf3x+0xc0>
    6234:	40 e8       	ldi	r20, 0x80	; 128
    6236:	51 e0       	ldi	r21, 0x01	; 1
    6238:	59 f4       	brne	.+22     	; 0x6250 <atan2+0xe>
    623a:	5e ef       	ldi	r21, 0xFE	; 254
    623c:	09 c0       	rjmp	.+18     	; 0x6250 <atan2+0xe>
    623e:	5b c1       	rjmp	.+694    	; 0x64f6 <__fp_nan>
    6240:	fc c1       	rjmp	.+1016   	; 0x663a <__fp_zero>

00006242 <atan2>:
    6242:	e9 2f       	mov	r30, r25
    6244:	e0 78       	andi	r30, 0x80	; 128
    6246:	d7 d1       	rcall	.+942    	; 0x65f6 <__fp_split3>
    6248:	68 f3       	brcs	.-38     	; 0x6224 <__addsf3x+0xa6>
    624a:	09 2e       	mov	r0, r25
    624c:	05 2a       	or	r0, r21
    624e:	c1 f3       	breq	.-16     	; 0x6240 <__addsf3x+0xc2>
    6250:	26 17       	cp	r18, r22
    6252:	37 07       	cpc	r19, r23
    6254:	48 07       	cpc	r20, r24
    6256:	59 07       	cpc	r21, r25
    6258:	38 f0       	brcs	.+14     	; 0x6268 <atan2+0x26>
    625a:	0e 2e       	mov	r0, r30
    625c:	07 f8       	bld	r0, 7
    625e:	e0 25       	eor	r30, r0
    6260:	69 f0       	breq	.+26     	; 0x627c <atan2+0x3a>
    6262:	e0 25       	eor	r30, r0
    6264:	e0 64       	ori	r30, 0x40	; 64
    6266:	0a c0       	rjmp	.+20     	; 0x627c <atan2+0x3a>
    6268:	ef 63       	ori	r30, 0x3F	; 63
    626a:	07 f8       	bld	r0, 7
    626c:	00 94       	com	r0
    626e:	07 fa       	bst	r0, 7
    6270:	db 01       	movw	r26, r22
    6272:	b9 01       	movw	r22, r18
    6274:	9d 01       	movw	r18, r26
    6276:	dc 01       	movw	r26, r24
    6278:	ca 01       	movw	r24, r20
    627a:	ad 01       	movw	r20, r26
    627c:	ef 93       	push	r30
    627e:	4a d0       	rcall	.+148    	; 0x6314 <__divsf3_pse>
    6280:	98 d1       	rcall	.+816    	; 0x65b2 <__fp_round>
    6282:	0a d0       	rcall	.+20     	; 0x6298 <atan>
    6284:	5f 91       	pop	r21
    6286:	55 23       	and	r21, r21
    6288:	31 f0       	breq	.+12     	; 0x6296 <atan2+0x54>
    628a:	2b ed       	ldi	r18, 0xDB	; 219
    628c:	3f e0       	ldi	r19, 0x0F	; 15
    628e:	49 e4       	ldi	r20, 0x49	; 73
    6290:	50 fd       	sbrc	r21, 0
    6292:	49 ec       	ldi	r20, 0xC9	; 201
    6294:	63 cf       	rjmp	.-314    	; 0x615c <__addsf3>
    6296:	08 95       	ret

00006298 <atan>:
    6298:	df 93       	push	r29
    629a:	dd 27       	eor	r29, r29
    629c:	b9 2f       	mov	r27, r25
    629e:	bf 77       	andi	r27, 0x7F	; 127
    62a0:	40 e8       	ldi	r20, 0x80	; 128
    62a2:	5f e3       	ldi	r21, 0x3F	; 63
    62a4:	16 16       	cp	r1, r22
    62a6:	17 06       	cpc	r1, r23
    62a8:	48 07       	cpc	r20, r24
    62aa:	5b 07       	cpc	r21, r27
    62ac:	10 f4       	brcc	.+4      	; 0x62b2 <atan+0x1a>
    62ae:	d9 2f       	mov	r29, r25
    62b0:	cf d1       	rcall	.+926    	; 0x6650 <inverse>
    62b2:	9f 93       	push	r25
    62b4:	8f 93       	push	r24
    62b6:	7f 93       	push	r23
    62b8:	6f 93       	push	r22
    62ba:	7c d2       	rcall	.+1272   	; 0x67b4 <square>
    62bc:	ee eb       	ldi	r30, 0xBE	; 190
    62be:	f0 e0       	ldi	r31, 0x00	; 0
    62c0:	1d d1       	rcall	.+570    	; 0x64fc <__fp_powser>
    62c2:	77 d1       	rcall	.+750    	; 0x65b2 <__fp_round>
    62c4:	2f 91       	pop	r18
    62c6:	3f 91       	pop	r19
    62c8:	4f 91       	pop	r20
    62ca:	5f 91       	pop	r21
    62cc:	d4 d1       	rcall	.+936    	; 0x6676 <__mulsf3x>
    62ce:	dd 23       	and	r29, r29
    62d0:	49 f0       	breq	.+18     	; 0x62e4 <atan+0x4c>
    62d2:	90 58       	subi	r25, 0x80	; 128
    62d4:	a2 ea       	ldi	r26, 0xA2	; 162
    62d6:	2a ed       	ldi	r18, 0xDA	; 218
    62d8:	3f e0       	ldi	r19, 0x0F	; 15
    62da:	49 ec       	ldi	r20, 0xC9	; 201
    62dc:	5f e3       	ldi	r21, 0x3F	; 63
    62de:	d0 78       	andi	r29, 0x80	; 128
    62e0:	5d 27       	eor	r21, r29
    62e2:	4d df       	rcall	.-358    	; 0x617e <__addsf3x>
    62e4:	df 91       	pop	r29
    62e6:	65 c1       	rjmp	.+714    	; 0x65b2 <__fp_round>

000062e8 <__cmpsf2>:
    62e8:	dc d0       	rcall	.+440    	; 0x64a2 <__fp_cmp>
    62ea:	08 f4       	brcc	.+2      	; 0x62ee <__cmpsf2+0x6>
    62ec:	81 e0       	ldi	r24, 0x01	; 1
    62ee:	08 95       	ret

000062f0 <cos>:
    62f0:	39 d1       	rcall	.+626    	; 0x6564 <__fp_rempio2>
    62f2:	e3 95       	inc	r30
    62f4:	6f c1       	rjmp	.+734    	; 0x65d4 <__fp_sinus>

000062f6 <__divsf3>:
    62f6:	0c d0       	rcall	.+24     	; 0x6310 <__divsf3x>
    62f8:	5c c1       	rjmp	.+696    	; 0x65b2 <__fp_round>
    62fa:	2c d1       	rcall	.+600    	; 0x6554 <__fp_pscB>
    62fc:	40 f0       	brcs	.+16     	; 0x630e <__divsf3+0x18>
    62fe:	23 d1       	rcall	.+582    	; 0x6546 <__fp_pscA>
    6300:	30 f0       	brcs	.+12     	; 0x630e <__divsf3+0x18>
    6302:	21 f4       	brne	.+8      	; 0x630c <__divsf3+0x16>
    6304:	5f 3f       	cpi	r21, 0xFF	; 255
    6306:	19 f0       	breq	.+6      	; 0x630e <__divsf3+0x18>
    6308:	f0 c0       	rjmp	.+480    	; 0x64ea <__fp_inf>
    630a:	51 11       	cpse	r21, r1
    630c:	97 c1       	rjmp	.+814    	; 0x663c <__fp_szero>
    630e:	f3 c0       	rjmp	.+486    	; 0x64f6 <__fp_nan>

00006310 <__divsf3x>:
    6310:	72 d1       	rcall	.+740    	; 0x65f6 <__fp_split3>
    6312:	98 f3       	brcs	.-26     	; 0x62fa <__divsf3+0x4>

00006314 <__divsf3_pse>:
    6314:	99 23       	and	r25, r25
    6316:	c9 f3       	breq	.-14     	; 0x630a <__divsf3+0x14>
    6318:	55 23       	and	r21, r21
    631a:	b1 f3       	breq	.-20     	; 0x6308 <__divsf3+0x12>
    631c:	95 1b       	sub	r25, r21
    631e:	55 0b       	sbc	r21, r21
    6320:	bb 27       	eor	r27, r27
    6322:	aa 27       	eor	r26, r26
    6324:	62 17       	cp	r22, r18
    6326:	73 07       	cpc	r23, r19
    6328:	84 07       	cpc	r24, r20
    632a:	38 f0       	brcs	.+14     	; 0x633a <__divsf3_pse+0x26>
    632c:	9f 5f       	subi	r25, 0xFF	; 255
    632e:	5f 4f       	sbci	r21, 0xFF	; 255
    6330:	22 0f       	add	r18, r18
    6332:	33 1f       	adc	r19, r19
    6334:	44 1f       	adc	r20, r20
    6336:	aa 1f       	adc	r26, r26
    6338:	a9 f3       	breq	.-22     	; 0x6324 <__divsf3_pse+0x10>
    633a:	33 d0       	rcall	.+102    	; 0x63a2 <__divsf3_pse+0x8e>
    633c:	0e 2e       	mov	r0, r30
    633e:	3a f0       	brmi	.+14     	; 0x634e <__divsf3_pse+0x3a>
    6340:	e0 e8       	ldi	r30, 0x80	; 128
    6342:	30 d0       	rcall	.+96     	; 0x63a4 <__divsf3_pse+0x90>
    6344:	91 50       	subi	r25, 0x01	; 1
    6346:	50 40       	sbci	r21, 0x00	; 0
    6348:	e6 95       	lsr	r30
    634a:	00 1c       	adc	r0, r0
    634c:	ca f7       	brpl	.-14     	; 0x6340 <__divsf3_pse+0x2c>
    634e:	29 d0       	rcall	.+82     	; 0x63a2 <__divsf3_pse+0x8e>
    6350:	fe 2f       	mov	r31, r30
    6352:	27 d0       	rcall	.+78     	; 0x63a2 <__divsf3_pse+0x8e>
    6354:	66 0f       	add	r22, r22
    6356:	77 1f       	adc	r23, r23
    6358:	88 1f       	adc	r24, r24
    635a:	bb 1f       	adc	r27, r27
    635c:	26 17       	cp	r18, r22
    635e:	37 07       	cpc	r19, r23
    6360:	48 07       	cpc	r20, r24
    6362:	ab 07       	cpc	r26, r27
    6364:	b0 e8       	ldi	r27, 0x80	; 128
    6366:	09 f0       	breq	.+2      	; 0x636a <__divsf3_pse+0x56>
    6368:	bb 0b       	sbc	r27, r27
    636a:	80 2d       	mov	r24, r0
    636c:	bf 01       	movw	r22, r30
    636e:	ff 27       	eor	r31, r31
    6370:	93 58       	subi	r25, 0x83	; 131
    6372:	5f 4f       	sbci	r21, 0xFF	; 255
    6374:	2a f0       	brmi	.+10     	; 0x6380 <__divsf3_pse+0x6c>
    6376:	9e 3f       	cpi	r25, 0xFE	; 254
    6378:	51 05       	cpc	r21, r1
    637a:	68 f0       	brcs	.+26     	; 0x6396 <__divsf3_pse+0x82>
    637c:	b6 c0       	rjmp	.+364    	; 0x64ea <__fp_inf>
    637e:	5e c1       	rjmp	.+700    	; 0x663c <__fp_szero>
    6380:	5f 3f       	cpi	r21, 0xFF	; 255
    6382:	ec f3       	brlt	.-6      	; 0x637e <__divsf3_pse+0x6a>
    6384:	98 3e       	cpi	r25, 0xE8	; 232
    6386:	dc f3       	brlt	.-10     	; 0x637e <__divsf3_pse+0x6a>
    6388:	86 95       	lsr	r24
    638a:	77 95       	ror	r23
    638c:	67 95       	ror	r22
    638e:	b7 95       	ror	r27
    6390:	f7 95       	ror	r31
    6392:	9f 5f       	subi	r25, 0xFF	; 255
    6394:	c9 f7       	brne	.-14     	; 0x6388 <__divsf3_pse+0x74>
    6396:	88 0f       	add	r24, r24
    6398:	91 1d       	adc	r25, r1
    639a:	96 95       	lsr	r25
    639c:	87 95       	ror	r24
    639e:	97 f9       	bld	r25, 7
    63a0:	08 95       	ret
    63a2:	e1 e0       	ldi	r30, 0x01	; 1
    63a4:	66 0f       	add	r22, r22
    63a6:	77 1f       	adc	r23, r23
    63a8:	88 1f       	adc	r24, r24
    63aa:	bb 1f       	adc	r27, r27
    63ac:	62 17       	cp	r22, r18
    63ae:	73 07       	cpc	r23, r19
    63b0:	84 07       	cpc	r24, r20
    63b2:	ba 07       	cpc	r27, r26
    63b4:	20 f0       	brcs	.+8      	; 0x63be <__divsf3_pse+0xaa>
    63b6:	62 1b       	sub	r22, r18
    63b8:	73 0b       	sbc	r23, r19
    63ba:	84 0b       	sbc	r24, r20
    63bc:	ba 0b       	sbc	r27, r26
    63be:	ee 1f       	adc	r30, r30
    63c0:	88 f7       	brcc	.-30     	; 0x63a4 <__divsf3_pse+0x90>
    63c2:	e0 95       	com	r30
    63c4:	08 95       	ret

000063c6 <__fixsfsi>:
    63c6:	04 d0       	rcall	.+8      	; 0x63d0 <__fixunssfsi>
    63c8:	68 94       	set
    63ca:	b1 11       	cpse	r27, r1
    63cc:	37 c1       	rjmp	.+622    	; 0x663c <__fp_szero>
    63ce:	08 95       	ret

000063d0 <__fixunssfsi>:
    63d0:	1a d1       	rcall	.+564    	; 0x6606 <__fp_splitA>
    63d2:	88 f0       	brcs	.+34     	; 0x63f6 <__fixunssfsi+0x26>
    63d4:	9f 57       	subi	r25, 0x7F	; 127
    63d6:	90 f0       	brcs	.+36     	; 0x63fc <__fixunssfsi+0x2c>
    63d8:	b9 2f       	mov	r27, r25
    63da:	99 27       	eor	r25, r25
    63dc:	b7 51       	subi	r27, 0x17	; 23
    63de:	a0 f0       	brcs	.+40     	; 0x6408 <__fixunssfsi+0x38>
    63e0:	d1 f0       	breq	.+52     	; 0x6416 <__fixunssfsi+0x46>
    63e2:	66 0f       	add	r22, r22
    63e4:	77 1f       	adc	r23, r23
    63e6:	88 1f       	adc	r24, r24
    63e8:	99 1f       	adc	r25, r25
    63ea:	1a f0       	brmi	.+6      	; 0x63f2 <__fixunssfsi+0x22>
    63ec:	ba 95       	dec	r27
    63ee:	c9 f7       	brne	.-14     	; 0x63e2 <__fixunssfsi+0x12>
    63f0:	12 c0       	rjmp	.+36     	; 0x6416 <__fixunssfsi+0x46>
    63f2:	b1 30       	cpi	r27, 0x01	; 1
    63f4:	81 f0       	breq	.+32     	; 0x6416 <__fixunssfsi+0x46>
    63f6:	21 d1       	rcall	.+578    	; 0x663a <__fp_zero>
    63f8:	b1 e0       	ldi	r27, 0x01	; 1
    63fa:	08 95       	ret
    63fc:	1e c1       	rjmp	.+572    	; 0x663a <__fp_zero>
    63fe:	67 2f       	mov	r22, r23
    6400:	78 2f       	mov	r23, r24
    6402:	88 27       	eor	r24, r24
    6404:	b8 5f       	subi	r27, 0xF8	; 248
    6406:	39 f0       	breq	.+14     	; 0x6416 <__fixunssfsi+0x46>
    6408:	b9 3f       	cpi	r27, 0xF9	; 249
    640a:	cc f3       	brlt	.-14     	; 0x63fe <__fixunssfsi+0x2e>
    640c:	86 95       	lsr	r24
    640e:	77 95       	ror	r23
    6410:	67 95       	ror	r22
    6412:	b3 95       	inc	r27
    6414:	d9 f7       	brne	.-10     	; 0x640c <__fixunssfsi+0x3c>
    6416:	3e f4       	brtc	.+14     	; 0x6426 <__fixunssfsi+0x56>
    6418:	90 95       	com	r25
    641a:	80 95       	com	r24
    641c:	70 95       	com	r23
    641e:	61 95       	neg	r22
    6420:	7f 4f       	sbci	r23, 0xFF	; 255
    6422:	8f 4f       	sbci	r24, 0xFF	; 255
    6424:	9f 4f       	sbci	r25, 0xFF	; 255
    6426:	08 95       	ret

00006428 <__floatunsisf>:
    6428:	e8 94       	clt
    642a:	09 c0       	rjmp	.+18     	; 0x643e <__floatsisf+0x12>

0000642c <__floatsisf>:
    642c:	97 fb       	bst	r25, 7
    642e:	3e f4       	brtc	.+14     	; 0x643e <__floatsisf+0x12>
    6430:	90 95       	com	r25
    6432:	80 95       	com	r24
    6434:	70 95       	com	r23
    6436:	61 95       	neg	r22
    6438:	7f 4f       	sbci	r23, 0xFF	; 255
    643a:	8f 4f       	sbci	r24, 0xFF	; 255
    643c:	9f 4f       	sbci	r25, 0xFF	; 255
    643e:	99 23       	and	r25, r25
    6440:	a9 f0       	breq	.+42     	; 0x646c <__floatsisf+0x40>
    6442:	f9 2f       	mov	r31, r25
    6444:	96 e9       	ldi	r25, 0x96	; 150
    6446:	bb 27       	eor	r27, r27
    6448:	93 95       	inc	r25
    644a:	f6 95       	lsr	r31
    644c:	87 95       	ror	r24
    644e:	77 95       	ror	r23
    6450:	67 95       	ror	r22
    6452:	b7 95       	ror	r27
    6454:	f1 11       	cpse	r31, r1
    6456:	f8 cf       	rjmp	.-16     	; 0x6448 <__floatsisf+0x1c>
    6458:	fa f4       	brpl	.+62     	; 0x6498 <__floatsisf+0x6c>
    645a:	bb 0f       	add	r27, r27
    645c:	11 f4       	brne	.+4      	; 0x6462 <__floatsisf+0x36>
    645e:	60 ff       	sbrs	r22, 0
    6460:	1b c0       	rjmp	.+54     	; 0x6498 <__floatsisf+0x6c>
    6462:	6f 5f       	subi	r22, 0xFF	; 255
    6464:	7f 4f       	sbci	r23, 0xFF	; 255
    6466:	8f 4f       	sbci	r24, 0xFF	; 255
    6468:	9f 4f       	sbci	r25, 0xFF	; 255
    646a:	16 c0       	rjmp	.+44     	; 0x6498 <__floatsisf+0x6c>
    646c:	88 23       	and	r24, r24
    646e:	11 f0       	breq	.+4      	; 0x6474 <__floatsisf+0x48>
    6470:	96 e9       	ldi	r25, 0x96	; 150
    6472:	11 c0       	rjmp	.+34     	; 0x6496 <__floatsisf+0x6a>
    6474:	77 23       	and	r23, r23
    6476:	21 f0       	breq	.+8      	; 0x6480 <__floatsisf+0x54>
    6478:	9e e8       	ldi	r25, 0x8E	; 142
    647a:	87 2f       	mov	r24, r23
    647c:	76 2f       	mov	r23, r22
    647e:	05 c0       	rjmp	.+10     	; 0x648a <__floatsisf+0x5e>
    6480:	66 23       	and	r22, r22
    6482:	71 f0       	breq	.+28     	; 0x64a0 <__floatsisf+0x74>
    6484:	96 e8       	ldi	r25, 0x86	; 134
    6486:	86 2f       	mov	r24, r22
    6488:	70 e0       	ldi	r23, 0x00	; 0
    648a:	60 e0       	ldi	r22, 0x00	; 0
    648c:	2a f0       	brmi	.+10     	; 0x6498 <__floatsisf+0x6c>
    648e:	9a 95       	dec	r25
    6490:	66 0f       	add	r22, r22
    6492:	77 1f       	adc	r23, r23
    6494:	88 1f       	adc	r24, r24
    6496:	da f7       	brpl	.-10     	; 0x648e <__floatsisf+0x62>
    6498:	88 0f       	add	r24, r24
    649a:	96 95       	lsr	r25
    649c:	87 95       	ror	r24
    649e:	97 f9       	bld	r25, 7
    64a0:	08 95       	ret

000064a2 <__fp_cmp>:
    64a2:	99 0f       	add	r25, r25
    64a4:	00 08       	sbc	r0, r0
    64a6:	55 0f       	add	r21, r21
    64a8:	aa 0b       	sbc	r26, r26
    64aa:	e0 e8       	ldi	r30, 0x80	; 128
    64ac:	fe ef       	ldi	r31, 0xFE	; 254
    64ae:	16 16       	cp	r1, r22
    64b0:	17 06       	cpc	r1, r23
    64b2:	e8 07       	cpc	r30, r24
    64b4:	f9 07       	cpc	r31, r25
    64b6:	c0 f0       	brcs	.+48     	; 0x64e8 <__fp_cmp+0x46>
    64b8:	12 16       	cp	r1, r18
    64ba:	13 06       	cpc	r1, r19
    64bc:	e4 07       	cpc	r30, r20
    64be:	f5 07       	cpc	r31, r21
    64c0:	98 f0       	brcs	.+38     	; 0x64e8 <__fp_cmp+0x46>
    64c2:	62 1b       	sub	r22, r18
    64c4:	73 0b       	sbc	r23, r19
    64c6:	84 0b       	sbc	r24, r20
    64c8:	95 0b       	sbc	r25, r21
    64ca:	39 f4       	brne	.+14     	; 0x64da <__fp_cmp+0x38>
    64cc:	0a 26       	eor	r0, r26
    64ce:	61 f0       	breq	.+24     	; 0x64e8 <__fp_cmp+0x46>
    64d0:	23 2b       	or	r18, r19
    64d2:	24 2b       	or	r18, r20
    64d4:	25 2b       	or	r18, r21
    64d6:	21 f4       	brne	.+8      	; 0x64e0 <__fp_cmp+0x3e>
    64d8:	08 95       	ret
    64da:	0a 26       	eor	r0, r26
    64dc:	09 f4       	brne	.+2      	; 0x64e0 <__fp_cmp+0x3e>
    64de:	a1 40       	sbci	r26, 0x01	; 1
    64e0:	a6 95       	lsr	r26
    64e2:	8f ef       	ldi	r24, 0xFF	; 255
    64e4:	81 1d       	adc	r24, r1
    64e6:	81 1d       	adc	r24, r1
    64e8:	08 95       	ret

000064ea <__fp_inf>:
    64ea:	97 f9       	bld	r25, 7
    64ec:	9f 67       	ori	r25, 0x7F	; 127
    64ee:	80 e8       	ldi	r24, 0x80	; 128
    64f0:	70 e0       	ldi	r23, 0x00	; 0
    64f2:	60 e0       	ldi	r22, 0x00	; 0
    64f4:	08 95       	ret

000064f6 <__fp_nan>:
    64f6:	9f ef       	ldi	r25, 0xFF	; 255
    64f8:	80 ec       	ldi	r24, 0xC0	; 192
    64fa:	08 95       	ret

000064fc <__fp_powser>:
    64fc:	df 93       	push	r29
    64fe:	cf 93       	push	r28
    6500:	1f 93       	push	r17
    6502:	0f 93       	push	r16
    6504:	ff 92       	push	r15
    6506:	ef 92       	push	r14
    6508:	df 92       	push	r13
    650a:	7b 01       	movw	r14, r22
    650c:	8c 01       	movw	r16, r24
    650e:	68 94       	set
    6510:	05 c0       	rjmp	.+10     	; 0x651c <__fp_powser+0x20>
    6512:	da 2e       	mov	r13, r26
    6514:	ef 01       	movw	r28, r30
    6516:	af d0       	rcall	.+350    	; 0x6676 <__mulsf3x>
    6518:	fe 01       	movw	r30, r28
    651a:	e8 94       	clt
    651c:	a5 91       	lpm	r26, Z+
    651e:	25 91       	lpm	r18, Z+
    6520:	35 91       	lpm	r19, Z+
    6522:	45 91       	lpm	r20, Z+
    6524:	55 91       	lpm	r21, Z+
    6526:	ae f3       	brts	.-22     	; 0x6512 <__fp_powser+0x16>
    6528:	ef 01       	movw	r28, r30
    652a:	29 de       	rcall	.-942    	; 0x617e <__addsf3x>
    652c:	fe 01       	movw	r30, r28
    652e:	97 01       	movw	r18, r14
    6530:	a8 01       	movw	r20, r16
    6532:	da 94       	dec	r13
    6534:	79 f7       	brne	.-34     	; 0x6514 <__fp_powser+0x18>
    6536:	df 90       	pop	r13
    6538:	ef 90       	pop	r14
    653a:	ff 90       	pop	r15
    653c:	0f 91       	pop	r16
    653e:	1f 91       	pop	r17
    6540:	cf 91       	pop	r28
    6542:	df 91       	pop	r29
    6544:	08 95       	ret

00006546 <__fp_pscA>:
    6546:	00 24       	eor	r0, r0
    6548:	0a 94       	dec	r0
    654a:	16 16       	cp	r1, r22
    654c:	17 06       	cpc	r1, r23
    654e:	18 06       	cpc	r1, r24
    6550:	09 06       	cpc	r0, r25
    6552:	08 95       	ret

00006554 <__fp_pscB>:
    6554:	00 24       	eor	r0, r0
    6556:	0a 94       	dec	r0
    6558:	12 16       	cp	r1, r18
    655a:	13 06       	cpc	r1, r19
    655c:	14 06       	cpc	r1, r20
    655e:	05 06       	cpc	r0, r21
    6560:	08 95       	ret
    6562:	c9 cf       	rjmp	.-110    	; 0x64f6 <__fp_nan>

00006564 <__fp_rempio2>:
    6564:	50 d0       	rcall	.+160    	; 0x6606 <__fp_splitA>
    6566:	e8 f3       	brcs	.-6      	; 0x6562 <__fp_pscB+0xe>
    6568:	e8 94       	clt
    656a:	e0 e0       	ldi	r30, 0x00	; 0
    656c:	bb 27       	eor	r27, r27
    656e:	9f 57       	subi	r25, 0x7F	; 127
    6570:	f0 f0       	brcs	.+60     	; 0x65ae <__fp_rempio2+0x4a>
    6572:	2a ed       	ldi	r18, 0xDA	; 218
    6574:	3f e0       	ldi	r19, 0x0F	; 15
    6576:	49 ec       	ldi	r20, 0xC9	; 201
    6578:	06 c0       	rjmp	.+12     	; 0x6586 <__fp_rempio2+0x22>
    657a:	ee 0f       	add	r30, r30
    657c:	bb 0f       	add	r27, r27
    657e:	66 1f       	adc	r22, r22
    6580:	77 1f       	adc	r23, r23
    6582:	88 1f       	adc	r24, r24
    6584:	28 f0       	brcs	.+10     	; 0x6590 <__fp_rempio2+0x2c>
    6586:	b2 3a       	cpi	r27, 0xA2	; 162
    6588:	62 07       	cpc	r22, r18
    658a:	73 07       	cpc	r23, r19
    658c:	84 07       	cpc	r24, r20
    658e:	28 f0       	brcs	.+10     	; 0x659a <__fp_rempio2+0x36>
    6590:	b2 5a       	subi	r27, 0xA2	; 162
    6592:	62 0b       	sbc	r22, r18
    6594:	73 0b       	sbc	r23, r19
    6596:	84 0b       	sbc	r24, r20
    6598:	e3 95       	inc	r30
    659a:	9a 95       	dec	r25
    659c:	72 f7       	brpl	.-36     	; 0x657a <__fp_rempio2+0x16>
    659e:	80 38       	cpi	r24, 0x80	; 128
    65a0:	30 f4       	brcc	.+12     	; 0x65ae <__fp_rempio2+0x4a>
    65a2:	9a 95       	dec	r25
    65a4:	bb 0f       	add	r27, r27
    65a6:	66 1f       	adc	r22, r22
    65a8:	77 1f       	adc	r23, r23
    65aa:	88 1f       	adc	r24, r24
    65ac:	d2 f7       	brpl	.-12     	; 0x65a2 <__fp_rempio2+0x3e>
    65ae:	90 48       	sbci	r25, 0x80	; 128
    65b0:	26 c1       	rjmp	.+588    	; 0x67fe <__fp_mpack_finite>

000065b2 <__fp_round>:
    65b2:	09 2e       	mov	r0, r25
    65b4:	03 94       	inc	r0
    65b6:	00 0c       	add	r0, r0
    65b8:	11 f4       	brne	.+4      	; 0x65be <__fp_round+0xc>
    65ba:	88 23       	and	r24, r24
    65bc:	52 f0       	brmi	.+20     	; 0x65d2 <__fp_round+0x20>
    65be:	bb 0f       	add	r27, r27
    65c0:	40 f4       	brcc	.+16     	; 0x65d2 <__fp_round+0x20>
    65c2:	bf 2b       	or	r27, r31
    65c4:	11 f4       	brne	.+4      	; 0x65ca <__fp_round+0x18>
    65c6:	60 ff       	sbrs	r22, 0
    65c8:	04 c0       	rjmp	.+8      	; 0x65d2 <__fp_round+0x20>
    65ca:	6f 5f       	subi	r22, 0xFF	; 255
    65cc:	7f 4f       	sbci	r23, 0xFF	; 255
    65ce:	8f 4f       	sbci	r24, 0xFF	; 255
    65d0:	9f 4f       	sbci	r25, 0xFF	; 255
    65d2:	08 95       	ret

000065d4 <__fp_sinus>:
    65d4:	ef 93       	push	r30
    65d6:	e0 ff       	sbrs	r30, 0
    65d8:	06 c0       	rjmp	.+12     	; 0x65e6 <__fp_sinus+0x12>
    65da:	a2 ea       	ldi	r26, 0xA2	; 162
    65dc:	2a ed       	ldi	r18, 0xDA	; 218
    65de:	3f e0       	ldi	r19, 0x0F	; 15
    65e0:	49 ec       	ldi	r20, 0xC9	; 201
    65e2:	5f eb       	ldi	r21, 0xBF	; 191
    65e4:	cc dd       	rcall	.-1128   	; 0x617e <__addsf3x>
    65e6:	e5 df       	rcall	.-54     	; 0x65b2 <__fp_round>
    65e8:	0f 90       	pop	r0
    65ea:	03 94       	inc	r0
    65ec:	01 fc       	sbrc	r0, 1
    65ee:	90 58       	subi	r25, 0x80	; 128
    65f0:	eb ee       	ldi	r30, 0xEB	; 235
    65f2:	f0 e0       	ldi	r31, 0x00	; 0
    65f4:	17 c1       	rjmp	.+558    	; 0x6824 <__fp_powsodd>

000065f6 <__fp_split3>:
    65f6:	57 fd       	sbrc	r21, 7
    65f8:	90 58       	subi	r25, 0x80	; 128
    65fa:	44 0f       	add	r20, r20
    65fc:	55 1f       	adc	r21, r21
    65fe:	59 f0       	breq	.+22     	; 0x6616 <__fp_splitA+0x10>
    6600:	5f 3f       	cpi	r21, 0xFF	; 255
    6602:	71 f0       	breq	.+28     	; 0x6620 <__fp_splitA+0x1a>
    6604:	47 95       	ror	r20

00006606 <__fp_splitA>:
    6606:	88 0f       	add	r24, r24
    6608:	97 fb       	bst	r25, 7
    660a:	99 1f       	adc	r25, r25
    660c:	61 f0       	breq	.+24     	; 0x6626 <__fp_splitA+0x20>
    660e:	9f 3f       	cpi	r25, 0xFF	; 255
    6610:	79 f0       	breq	.+30     	; 0x6630 <__fp_splitA+0x2a>
    6612:	87 95       	ror	r24
    6614:	08 95       	ret
    6616:	12 16       	cp	r1, r18
    6618:	13 06       	cpc	r1, r19
    661a:	14 06       	cpc	r1, r20
    661c:	55 1f       	adc	r21, r21
    661e:	f2 cf       	rjmp	.-28     	; 0x6604 <__fp_split3+0xe>
    6620:	46 95       	lsr	r20
    6622:	f1 df       	rcall	.-30     	; 0x6606 <__fp_splitA>
    6624:	08 c0       	rjmp	.+16     	; 0x6636 <__fp_splitA+0x30>
    6626:	16 16       	cp	r1, r22
    6628:	17 06       	cpc	r1, r23
    662a:	18 06       	cpc	r1, r24
    662c:	99 1f       	adc	r25, r25
    662e:	f1 cf       	rjmp	.-30     	; 0x6612 <__fp_splitA+0xc>
    6630:	86 95       	lsr	r24
    6632:	71 05       	cpc	r23, r1
    6634:	61 05       	cpc	r22, r1
    6636:	08 94       	sec
    6638:	08 95       	ret

0000663a <__fp_zero>:
    663a:	e8 94       	clt

0000663c <__fp_szero>:
    663c:	bb 27       	eor	r27, r27
    663e:	66 27       	eor	r22, r22
    6640:	77 27       	eor	r23, r23
    6642:	cb 01       	movw	r24, r22
    6644:	97 f9       	bld	r25, 7
    6646:	08 95       	ret

00006648 <__gesf2>:
    6648:	2c df       	rcall	.-424    	; 0x64a2 <__fp_cmp>
    664a:	08 f4       	brcc	.+2      	; 0x664e <__gesf2+0x6>
    664c:	8f ef       	ldi	r24, 0xFF	; 255
    664e:	08 95       	ret

00006650 <inverse>:
    6650:	9b 01       	movw	r18, r22
    6652:	ac 01       	movw	r20, r24
    6654:	60 e0       	ldi	r22, 0x00	; 0
    6656:	70 e0       	ldi	r23, 0x00	; 0
    6658:	80 e8       	ldi	r24, 0x80	; 128
    665a:	9f e3       	ldi	r25, 0x3F	; 63
    665c:	4c ce       	rjmp	.-872    	; 0x62f6 <__divsf3>

0000665e <__mulsf3>:
    665e:	0b d0       	rcall	.+22     	; 0x6676 <__mulsf3x>
    6660:	a8 cf       	rjmp	.-176    	; 0x65b2 <__fp_round>
    6662:	71 df       	rcall	.-286    	; 0x6546 <__fp_pscA>
    6664:	28 f0       	brcs	.+10     	; 0x6670 <__mulsf3+0x12>
    6666:	76 df       	rcall	.-276    	; 0x6554 <__fp_pscB>
    6668:	18 f0       	brcs	.+6      	; 0x6670 <__mulsf3+0x12>
    666a:	95 23       	and	r25, r21
    666c:	09 f0       	breq	.+2      	; 0x6670 <__mulsf3+0x12>
    666e:	3d cf       	rjmp	.-390    	; 0x64ea <__fp_inf>
    6670:	42 cf       	rjmp	.-380    	; 0x64f6 <__fp_nan>
    6672:	11 24       	eor	r1, r1
    6674:	e3 cf       	rjmp	.-58     	; 0x663c <__fp_szero>

00006676 <__mulsf3x>:
    6676:	bf df       	rcall	.-130    	; 0x65f6 <__fp_split3>
    6678:	a0 f3       	brcs	.-24     	; 0x6662 <__mulsf3+0x4>

0000667a <__mulsf3_pse>:
    667a:	95 9f       	mul	r25, r21
    667c:	d1 f3       	breq	.-12     	; 0x6672 <__mulsf3+0x14>
    667e:	95 0f       	add	r25, r21
    6680:	50 e0       	ldi	r21, 0x00	; 0
    6682:	55 1f       	adc	r21, r21
    6684:	62 9f       	mul	r22, r18
    6686:	f0 01       	movw	r30, r0
    6688:	72 9f       	mul	r23, r18
    668a:	bb 27       	eor	r27, r27
    668c:	f0 0d       	add	r31, r0
    668e:	b1 1d       	adc	r27, r1
    6690:	63 9f       	mul	r22, r19
    6692:	aa 27       	eor	r26, r26
    6694:	f0 0d       	add	r31, r0
    6696:	b1 1d       	adc	r27, r1
    6698:	aa 1f       	adc	r26, r26
    669a:	64 9f       	mul	r22, r20
    669c:	66 27       	eor	r22, r22
    669e:	b0 0d       	add	r27, r0
    66a0:	a1 1d       	adc	r26, r1
    66a2:	66 1f       	adc	r22, r22
    66a4:	82 9f       	mul	r24, r18
    66a6:	22 27       	eor	r18, r18
    66a8:	b0 0d       	add	r27, r0
    66aa:	a1 1d       	adc	r26, r1
    66ac:	62 1f       	adc	r22, r18
    66ae:	73 9f       	mul	r23, r19
    66b0:	b0 0d       	add	r27, r0
    66b2:	a1 1d       	adc	r26, r1
    66b4:	62 1f       	adc	r22, r18
    66b6:	83 9f       	mul	r24, r19
    66b8:	a0 0d       	add	r26, r0
    66ba:	61 1d       	adc	r22, r1
    66bc:	22 1f       	adc	r18, r18
    66be:	74 9f       	mul	r23, r20
    66c0:	33 27       	eor	r19, r19
    66c2:	a0 0d       	add	r26, r0
    66c4:	61 1d       	adc	r22, r1
    66c6:	23 1f       	adc	r18, r19
    66c8:	84 9f       	mul	r24, r20
    66ca:	60 0d       	add	r22, r0
    66cc:	21 1d       	adc	r18, r1
    66ce:	82 2f       	mov	r24, r18
    66d0:	76 2f       	mov	r23, r22
    66d2:	6a 2f       	mov	r22, r26
    66d4:	11 24       	eor	r1, r1
    66d6:	9f 57       	subi	r25, 0x7F	; 127
    66d8:	50 40       	sbci	r21, 0x00	; 0
    66da:	8a f0       	brmi	.+34     	; 0x66fe <__mulsf3_pse+0x84>
    66dc:	e1 f0       	breq	.+56     	; 0x6716 <__mulsf3_pse+0x9c>
    66de:	88 23       	and	r24, r24
    66e0:	4a f0       	brmi	.+18     	; 0x66f4 <__mulsf3_pse+0x7a>
    66e2:	ee 0f       	add	r30, r30
    66e4:	ff 1f       	adc	r31, r31
    66e6:	bb 1f       	adc	r27, r27
    66e8:	66 1f       	adc	r22, r22
    66ea:	77 1f       	adc	r23, r23
    66ec:	88 1f       	adc	r24, r24
    66ee:	91 50       	subi	r25, 0x01	; 1
    66f0:	50 40       	sbci	r21, 0x00	; 0
    66f2:	a9 f7       	brne	.-22     	; 0x66de <__mulsf3_pse+0x64>
    66f4:	9e 3f       	cpi	r25, 0xFE	; 254
    66f6:	51 05       	cpc	r21, r1
    66f8:	70 f0       	brcs	.+28     	; 0x6716 <__mulsf3_pse+0x9c>
    66fa:	f7 ce       	rjmp	.-530    	; 0x64ea <__fp_inf>
    66fc:	9f cf       	rjmp	.-194    	; 0x663c <__fp_szero>
    66fe:	5f 3f       	cpi	r21, 0xFF	; 255
    6700:	ec f3       	brlt	.-6      	; 0x66fc <__mulsf3_pse+0x82>
    6702:	98 3e       	cpi	r25, 0xE8	; 232
    6704:	dc f3       	brlt	.-10     	; 0x66fc <__mulsf3_pse+0x82>
    6706:	86 95       	lsr	r24
    6708:	77 95       	ror	r23
    670a:	67 95       	ror	r22
    670c:	b7 95       	ror	r27
    670e:	f7 95       	ror	r31
    6710:	e7 95       	ror	r30
    6712:	9f 5f       	subi	r25, 0xFF	; 255
    6714:	c1 f7       	brne	.-16     	; 0x6706 <__mulsf3_pse+0x8c>
    6716:	fe 2b       	or	r31, r30
    6718:	88 0f       	add	r24, r24
    671a:	91 1d       	adc	r25, r1
    671c:	96 95       	lsr	r25
    671e:	87 95       	ror	r24
    6720:	97 f9       	bld	r25, 7
    6722:	08 95       	ret

00006724 <sin>:
    6724:	9f 93       	push	r25
    6726:	1e df       	rcall	.-452    	; 0x6564 <__fp_rempio2>
    6728:	0f 90       	pop	r0
    672a:	07 fc       	sbrc	r0, 7
    672c:	ee 5f       	subi	r30, 0xFE	; 254
    672e:	52 cf       	rjmp	.-348    	; 0x65d4 <__fp_sinus>
    6730:	11 f4       	brne	.+4      	; 0x6736 <sin+0x12>
    6732:	0e f4       	brtc	.+2      	; 0x6736 <sin+0x12>
    6734:	e0 ce       	rjmp	.-576    	; 0x64f6 <__fp_nan>
    6736:	61 c0       	rjmp	.+194    	; 0x67fa <__fp_mpack>

00006738 <sqrt>:
    6738:	66 df       	rcall	.-308    	; 0x6606 <__fp_splitA>
    673a:	d0 f3       	brcs	.-12     	; 0x6730 <sin+0xc>
    673c:	99 23       	and	r25, r25
    673e:	d9 f3       	breq	.-10     	; 0x6736 <sin+0x12>
    6740:	ce f3       	brts	.-14     	; 0x6734 <sin+0x10>
    6742:	9f 57       	subi	r25, 0x7F	; 127
    6744:	55 0b       	sbc	r21, r21
    6746:	87 ff       	sbrs	r24, 7
    6748:	66 d0       	rcall	.+204    	; 0x6816 <__fp_norm2>
    674a:	00 24       	eor	r0, r0
    674c:	a0 e6       	ldi	r26, 0x60	; 96
    674e:	40 ea       	ldi	r20, 0xA0	; 160
    6750:	90 01       	movw	r18, r0
    6752:	80 58       	subi	r24, 0x80	; 128
    6754:	56 95       	lsr	r21
    6756:	97 95       	ror	r25
    6758:	28 f4       	brcc	.+10     	; 0x6764 <sqrt+0x2c>
    675a:	80 5c       	subi	r24, 0xC0	; 192
    675c:	66 0f       	add	r22, r22
    675e:	77 1f       	adc	r23, r23
    6760:	88 1f       	adc	r24, r24
    6762:	20 f0       	brcs	.+8      	; 0x676c <sqrt+0x34>
    6764:	26 17       	cp	r18, r22
    6766:	37 07       	cpc	r19, r23
    6768:	48 07       	cpc	r20, r24
    676a:	30 f4       	brcc	.+12     	; 0x6778 <sqrt+0x40>
    676c:	62 1b       	sub	r22, r18
    676e:	73 0b       	sbc	r23, r19
    6770:	84 0b       	sbc	r24, r20
    6772:	20 29       	or	r18, r0
    6774:	31 29       	or	r19, r1
    6776:	4a 2b       	or	r20, r26
    6778:	a6 95       	lsr	r26
    677a:	17 94       	ror	r1
    677c:	07 94       	ror	r0
    677e:	20 25       	eor	r18, r0
    6780:	31 25       	eor	r19, r1
    6782:	4a 27       	eor	r20, r26
    6784:	58 f7       	brcc	.-42     	; 0x675c <sqrt+0x24>
    6786:	66 0f       	add	r22, r22
    6788:	77 1f       	adc	r23, r23
    678a:	88 1f       	adc	r24, r24
    678c:	20 f0       	brcs	.+8      	; 0x6796 <sqrt+0x5e>
    678e:	26 17       	cp	r18, r22
    6790:	37 07       	cpc	r19, r23
    6792:	48 07       	cpc	r20, r24
    6794:	30 f4       	brcc	.+12     	; 0x67a2 <sqrt+0x6a>
    6796:	62 0b       	sbc	r22, r18
    6798:	73 0b       	sbc	r23, r19
    679a:	84 0b       	sbc	r24, r20
    679c:	20 0d       	add	r18, r0
    679e:	31 1d       	adc	r19, r1
    67a0:	41 1d       	adc	r20, r1
    67a2:	a0 95       	com	r26
    67a4:	81 f7       	brne	.-32     	; 0x6786 <sqrt+0x4e>
    67a6:	b9 01       	movw	r22, r18
    67a8:	84 2f       	mov	r24, r20
    67aa:	91 58       	subi	r25, 0x81	; 129
    67ac:	88 0f       	add	r24, r24
    67ae:	96 95       	lsr	r25
    67b0:	87 95       	ror	r24
    67b2:	08 95       	ret

000067b4 <square>:
    67b4:	9b 01       	movw	r18, r22
    67b6:	ac 01       	movw	r20, r24
    67b8:	52 cf       	rjmp	.-348    	; 0x665e <__mulsf3>

000067ba <tan>:
    67ba:	df 93       	push	r29
    67bc:	d9 2f       	mov	r29, r25
    67be:	d2 de       	rcall	.-604    	; 0x6564 <__fp_rempio2>
    67c0:	e6 95       	lsr	r30
    67c2:	d7 95       	ror	r29
    67c4:	2a ed       	ldi	r18, 0xDA	; 218
    67c6:	3f e0       	ldi	r19, 0x0F	; 15
    67c8:	49 e4       	ldi	r20, 0x49	; 73
    67ca:	5f e3       	ldi	r21, 0x3F	; 63
    67cc:	b3 3a       	cpi	r27, 0xA3	; 163
    67ce:	62 07       	cpc	r22, r18
    67d0:	73 07       	cpc	r23, r19
    67d2:	84 07       	cpc	r24, r20
    67d4:	95 07       	cpc	r25, r21
    67d6:	d7 95       	ror	r29
    67d8:	2a f0       	brmi	.+10     	; 0x67e4 <tan+0x2a>
    67da:	a2 ea       	ldi	r26, 0xA2	; 162
    67dc:	49 ec       	ldi	r20, 0xC9	; 201
    67de:	90 68       	ori	r25, 0x80	; 128
    67e0:	ce dc       	rcall	.-1636   	; 0x617e <__addsf3x>
    67e2:	e7 de       	rcall	.-562    	; 0x65b2 <__fp_round>
    67e4:	e9 e0       	ldi	r30, 0x09	; 9
    67e6:	f1 e0       	ldi	r31, 0x01	; 1
    67e8:	1d d0       	rcall	.+58     	; 0x6824 <__fp_powsodd>
    67ea:	dd 0f       	add	r29, r29
    67ec:	0b f0       	brvs	.+2      	; 0x67f0 <tan+0x36>
    67ee:	30 df       	rcall	.-416    	; 0x6650 <inverse>
    67f0:	dd 0f       	add	r29, r29
    67f2:	0b f4       	brvc	.+2      	; 0x67f6 <tan+0x3c>
    67f4:	90 58       	subi	r25, 0x80	; 128
    67f6:	df 91       	pop	r29
    67f8:	08 95       	ret

000067fa <__fp_mpack>:
    67fa:	9f 3f       	cpi	r25, 0xFF	; 255
    67fc:	31 f0       	breq	.+12     	; 0x680a <__fp_mpack_finite+0xc>

000067fe <__fp_mpack_finite>:
    67fe:	91 50       	subi	r25, 0x01	; 1
    6800:	20 f4       	brcc	.+8      	; 0x680a <__fp_mpack_finite+0xc>
    6802:	87 95       	ror	r24
    6804:	77 95       	ror	r23
    6806:	67 95       	ror	r22
    6808:	b7 95       	ror	r27
    680a:	88 0f       	add	r24, r24
    680c:	91 1d       	adc	r25, r1
    680e:	96 95       	lsr	r25
    6810:	87 95       	ror	r24
    6812:	97 f9       	bld	r25, 7
    6814:	08 95       	ret

00006816 <__fp_norm2>:
    6816:	91 50       	subi	r25, 0x01	; 1
    6818:	50 40       	sbci	r21, 0x00	; 0
    681a:	66 0f       	add	r22, r22
    681c:	77 1f       	adc	r23, r23
    681e:	88 1f       	adc	r24, r24
    6820:	d2 f7       	brpl	.-12     	; 0x6816 <__fp_norm2>
    6822:	08 95       	ret

00006824 <__fp_powsodd>:
    6824:	9f 93       	push	r25
    6826:	8f 93       	push	r24
    6828:	7f 93       	push	r23
    682a:	6f 93       	push	r22
    682c:	ff 93       	push	r31
    682e:	ef 93       	push	r30
    6830:	9b 01       	movw	r18, r22
    6832:	ac 01       	movw	r20, r24
    6834:	14 df       	rcall	.-472    	; 0x665e <__mulsf3>
    6836:	ef 91       	pop	r30
    6838:	ff 91       	pop	r31
    683a:	60 de       	rcall	.-832    	; 0x64fc <__fp_powser>
    683c:	2f 91       	pop	r18
    683e:	3f 91       	pop	r19
    6840:	4f 91       	pop	r20
    6842:	5f 91       	pop	r21
    6844:	0c cf       	rjmp	.-488    	; 0x665e <__mulsf3>

00006846 <vfprintf>:
    6846:	2f 92       	push	r2
    6848:	3f 92       	push	r3
    684a:	4f 92       	push	r4
    684c:	5f 92       	push	r5
    684e:	6f 92       	push	r6
    6850:	7f 92       	push	r7
    6852:	8f 92       	push	r8
    6854:	9f 92       	push	r9
    6856:	af 92       	push	r10
    6858:	bf 92       	push	r11
    685a:	cf 92       	push	r12
    685c:	df 92       	push	r13
    685e:	ef 92       	push	r14
    6860:	ff 92       	push	r15
    6862:	0f 93       	push	r16
    6864:	1f 93       	push	r17
    6866:	cf 93       	push	r28
    6868:	df 93       	push	r29
    686a:	cd b7       	in	r28, 0x3d	; 61
    686c:	de b7       	in	r29, 0x3e	; 62
    686e:	63 97       	sbiw	r28, 0x13	; 19
    6870:	0f b6       	in	r0, 0x3f	; 63
    6872:	f8 94       	cli
    6874:	de bf       	out	0x3e, r29	; 62
    6876:	0f be       	out	0x3f, r0	; 63
    6878:	cd bf       	out	0x3d, r28	; 61
    687a:	6c 01       	movw	r12, r24
    687c:	4b 01       	movw	r8, r22
    687e:	2a 01       	movw	r4, r20
    6880:	fc 01       	movw	r30, r24
    6882:	17 82       	std	Z+7, r1	; 0x07
    6884:	16 82       	std	Z+6, r1	; 0x06
    6886:	83 81       	ldd	r24, Z+3	; 0x03
    6888:	81 ff       	sbrs	r24, 1
    688a:	29 c3       	rjmp	.+1618   	; 0x6ede <vfprintf+0x698>
    688c:	ae 01       	movw	r20, r28
    688e:	4f 5f       	subi	r20, 0xFF	; 255
    6890:	5f 4f       	sbci	r21, 0xFF	; 255
    6892:	3a 01       	movw	r6, r20
    6894:	f6 01       	movw	r30, r12
    6896:	93 81       	ldd	r25, Z+3	; 0x03
    6898:	f4 01       	movw	r30, r8
    689a:	93 fd       	sbrc	r25, 3
    689c:	85 91       	lpm	r24, Z+
    689e:	93 ff       	sbrs	r25, 3
    68a0:	81 91       	ld	r24, Z+
    68a2:	4f 01       	movw	r8, r30
    68a4:	88 23       	and	r24, r24
    68a6:	09 f4       	brne	.+2      	; 0x68aa <vfprintf+0x64>
    68a8:	16 c3       	rjmp	.+1580   	; 0x6ed6 <vfprintf+0x690>
    68aa:	85 32       	cpi	r24, 0x25	; 37
    68ac:	39 f4       	brne	.+14     	; 0x68bc <vfprintf+0x76>
    68ae:	93 fd       	sbrc	r25, 3
    68b0:	85 91       	lpm	r24, Z+
    68b2:	93 ff       	sbrs	r25, 3
    68b4:	81 91       	ld	r24, Z+
    68b6:	4f 01       	movw	r8, r30
    68b8:	85 32       	cpi	r24, 0x25	; 37
    68ba:	31 f4       	brne	.+12     	; 0x68c8 <vfprintf+0x82>
    68bc:	b6 01       	movw	r22, r12
    68be:	90 e0       	ldi	r25, 0x00	; 0
    68c0:	a5 d4       	rcall	.+2378   	; 0x720c <fputc>
    68c2:	52 01       	movw	r10, r4
    68c4:	25 01       	movw	r4, r10
    68c6:	e6 cf       	rjmp	.-52     	; 0x6894 <vfprintf+0x4e>
    68c8:	10 e0       	ldi	r17, 0x00	; 0
    68ca:	f1 2c       	mov	r15, r1
    68cc:	20 e0       	ldi	r18, 0x00	; 0
    68ce:	20 32       	cpi	r18, 0x20	; 32
    68d0:	a0 f4       	brcc	.+40     	; 0x68fa <vfprintf+0xb4>
    68d2:	8b 32       	cpi	r24, 0x2B	; 43
    68d4:	69 f0       	breq	.+26     	; 0x68f0 <vfprintf+0xaa>
    68d6:	30 f4       	brcc	.+12     	; 0x68e4 <vfprintf+0x9e>
    68d8:	80 32       	cpi	r24, 0x20	; 32
    68da:	59 f0       	breq	.+22     	; 0x68f2 <vfprintf+0xac>
    68dc:	83 32       	cpi	r24, 0x23	; 35
    68de:	69 f4       	brne	.+26     	; 0x68fa <vfprintf+0xb4>
    68e0:	20 61       	ori	r18, 0x10	; 16
    68e2:	2c c0       	rjmp	.+88     	; 0x693c <vfprintf+0xf6>
    68e4:	8d 32       	cpi	r24, 0x2D	; 45
    68e6:	39 f0       	breq	.+14     	; 0x68f6 <vfprintf+0xb0>
    68e8:	80 33       	cpi	r24, 0x30	; 48
    68ea:	39 f4       	brne	.+14     	; 0x68fa <vfprintf+0xb4>
    68ec:	21 60       	ori	r18, 0x01	; 1
    68ee:	26 c0       	rjmp	.+76     	; 0x693c <vfprintf+0xf6>
    68f0:	22 60       	ori	r18, 0x02	; 2
    68f2:	24 60       	ori	r18, 0x04	; 4
    68f4:	23 c0       	rjmp	.+70     	; 0x693c <vfprintf+0xf6>
    68f6:	28 60       	ori	r18, 0x08	; 8
    68f8:	21 c0       	rjmp	.+66     	; 0x693c <vfprintf+0xf6>
    68fa:	27 fd       	sbrc	r18, 7
    68fc:	27 c0       	rjmp	.+78     	; 0x694c <vfprintf+0x106>
    68fe:	30 ed       	ldi	r19, 0xD0	; 208
    6900:	38 0f       	add	r19, r24
    6902:	3a 30       	cpi	r19, 0x0A	; 10
    6904:	78 f4       	brcc	.+30     	; 0x6924 <vfprintf+0xde>
    6906:	26 ff       	sbrs	r18, 6
    6908:	06 c0       	rjmp	.+12     	; 0x6916 <vfprintf+0xd0>
    690a:	fa e0       	ldi	r31, 0x0A	; 10
    690c:	1f 9f       	mul	r17, r31
    690e:	30 0d       	add	r19, r0
    6910:	11 24       	eor	r1, r1
    6912:	13 2f       	mov	r17, r19
    6914:	13 c0       	rjmp	.+38     	; 0x693c <vfprintf+0xf6>
    6916:	4a e0       	ldi	r20, 0x0A	; 10
    6918:	f4 9e       	mul	r15, r20
    691a:	30 0d       	add	r19, r0
    691c:	11 24       	eor	r1, r1
    691e:	f3 2e       	mov	r15, r19
    6920:	20 62       	ori	r18, 0x20	; 32
    6922:	0c c0       	rjmp	.+24     	; 0x693c <vfprintf+0xf6>
    6924:	8e 32       	cpi	r24, 0x2E	; 46
    6926:	21 f4       	brne	.+8      	; 0x6930 <vfprintf+0xea>
    6928:	26 fd       	sbrc	r18, 6
    692a:	d5 c2       	rjmp	.+1450   	; 0x6ed6 <vfprintf+0x690>
    692c:	20 64       	ori	r18, 0x40	; 64
    692e:	06 c0       	rjmp	.+12     	; 0x693c <vfprintf+0xf6>
    6930:	8c 36       	cpi	r24, 0x6C	; 108
    6932:	11 f4       	brne	.+4      	; 0x6938 <vfprintf+0xf2>
    6934:	20 68       	ori	r18, 0x80	; 128
    6936:	02 c0       	rjmp	.+4      	; 0x693c <vfprintf+0xf6>
    6938:	88 36       	cpi	r24, 0x68	; 104
    693a:	41 f4       	brne	.+16     	; 0x694c <vfprintf+0x106>
    693c:	f4 01       	movw	r30, r8
    693e:	93 fd       	sbrc	r25, 3
    6940:	85 91       	lpm	r24, Z+
    6942:	93 ff       	sbrs	r25, 3
    6944:	81 91       	ld	r24, Z+
    6946:	4f 01       	movw	r8, r30
    6948:	81 11       	cpse	r24, r1
    694a:	c1 cf       	rjmp	.-126    	; 0x68ce <vfprintf+0x88>
    694c:	9b eb       	ldi	r25, 0xBB	; 187
    694e:	98 0f       	add	r25, r24
    6950:	93 30       	cpi	r25, 0x03	; 3
    6952:	18 f4       	brcc	.+6      	; 0x695a <vfprintf+0x114>
    6954:	20 61       	ori	r18, 0x10	; 16
    6956:	80 5e       	subi	r24, 0xE0	; 224
    6958:	06 c0       	rjmp	.+12     	; 0x6966 <vfprintf+0x120>
    695a:	9b e9       	ldi	r25, 0x9B	; 155
    695c:	98 0f       	add	r25, r24
    695e:	93 30       	cpi	r25, 0x03	; 3
    6960:	08 f0       	brcs	.+2      	; 0x6964 <vfprintf+0x11e>
    6962:	64 c1       	rjmp	.+712    	; 0x6c2c <vfprintf+0x3e6>
    6964:	2f 7e       	andi	r18, 0xEF	; 239
    6966:	26 ff       	sbrs	r18, 6
    6968:	16 e0       	ldi	r17, 0x06	; 6
    696a:	2f 73       	andi	r18, 0x3F	; 63
    696c:	32 2e       	mov	r3, r18
    696e:	85 36       	cpi	r24, 0x65	; 101
    6970:	19 f4       	brne	.+6      	; 0x6978 <vfprintf+0x132>
    6972:	20 64       	ori	r18, 0x40	; 64
    6974:	32 2e       	mov	r3, r18
    6976:	08 c0       	rjmp	.+16     	; 0x6988 <vfprintf+0x142>
    6978:	86 36       	cpi	r24, 0x66	; 102
    697a:	21 f4       	brne	.+8      	; 0x6984 <vfprintf+0x13e>
    697c:	f2 2f       	mov	r31, r18
    697e:	f0 68       	ori	r31, 0x80	; 128
    6980:	3f 2e       	mov	r3, r31
    6982:	02 c0       	rjmp	.+4      	; 0x6988 <vfprintf+0x142>
    6984:	11 11       	cpse	r17, r1
    6986:	11 50       	subi	r17, 0x01	; 1
    6988:	37 fe       	sbrs	r3, 7
    698a:	07 c0       	rjmp	.+14     	; 0x699a <vfprintf+0x154>
    698c:	1c 33       	cpi	r17, 0x3C	; 60
    698e:	50 f4       	brcc	.+20     	; 0x69a4 <vfprintf+0x15e>
    6990:	ee 24       	eor	r14, r14
    6992:	e3 94       	inc	r14
    6994:	e1 0e       	add	r14, r17
    6996:	27 e0       	ldi	r18, 0x07	; 7
    6998:	0b c0       	rjmp	.+22     	; 0x69b0 <vfprintf+0x16a>
    699a:	18 30       	cpi	r17, 0x08	; 8
    699c:	38 f0       	brcs	.+14     	; 0x69ac <vfprintf+0x166>
    699e:	27 e0       	ldi	r18, 0x07	; 7
    69a0:	17 e0       	ldi	r17, 0x07	; 7
    69a2:	05 c0       	rjmp	.+10     	; 0x69ae <vfprintf+0x168>
    69a4:	27 e0       	ldi	r18, 0x07	; 7
    69a6:	4c e3       	ldi	r20, 0x3C	; 60
    69a8:	e4 2e       	mov	r14, r20
    69aa:	02 c0       	rjmp	.+4      	; 0x69b0 <vfprintf+0x16a>
    69ac:	21 2f       	mov	r18, r17
    69ae:	e1 2c       	mov	r14, r1
    69b0:	52 01       	movw	r10, r4
    69b2:	44 e0       	ldi	r20, 0x04	; 4
    69b4:	a4 0e       	add	r10, r20
    69b6:	b1 1c       	adc	r11, r1
    69b8:	f2 01       	movw	r30, r4
    69ba:	60 81       	ld	r22, Z
    69bc:	71 81       	ldd	r23, Z+1	; 0x01
    69be:	82 81       	ldd	r24, Z+2	; 0x02
    69c0:	93 81       	ldd	r25, Z+3	; 0x03
    69c2:	0e 2d       	mov	r16, r14
    69c4:	a3 01       	movw	r20, r6
    69c6:	34 d3       	rcall	.+1640   	; 0x7030 <__ftoa_engine>
    69c8:	2c 01       	movw	r4, r24
    69ca:	09 81       	ldd	r16, Y+1	; 0x01
    69cc:	00 ff       	sbrs	r16, 0
    69ce:	02 c0       	rjmp	.+4      	; 0x69d4 <vfprintf+0x18e>
    69d0:	03 ff       	sbrs	r16, 3
    69d2:	07 c0       	rjmp	.+14     	; 0x69e2 <vfprintf+0x19c>
    69d4:	31 fc       	sbrc	r3, 1
    69d6:	08 c0       	rjmp	.+16     	; 0x69e8 <vfprintf+0x1a2>
    69d8:	32 fe       	sbrs	r3, 2
    69da:	09 c0       	rjmp	.+18     	; 0x69ee <vfprintf+0x1a8>
    69dc:	30 e2       	ldi	r19, 0x20	; 32
    69de:	23 2e       	mov	r2, r19
    69e0:	07 c0       	rjmp	.+14     	; 0x69f0 <vfprintf+0x1aa>
    69e2:	2d e2       	ldi	r18, 0x2D	; 45
    69e4:	22 2e       	mov	r2, r18
    69e6:	04 c0       	rjmp	.+8      	; 0x69f0 <vfprintf+0x1aa>
    69e8:	9b e2       	ldi	r25, 0x2B	; 43
    69ea:	29 2e       	mov	r2, r25
    69ec:	01 c0       	rjmp	.+2      	; 0x69f0 <vfprintf+0x1aa>
    69ee:	21 2c       	mov	r2, r1
    69f0:	80 2f       	mov	r24, r16
    69f2:	8c 70       	andi	r24, 0x0C	; 12
    69f4:	19 f0       	breq	.+6      	; 0x69fc <vfprintf+0x1b6>
    69f6:	21 10       	cpse	r2, r1
    69f8:	51 c2       	rjmp	.+1186   	; 0x6e9c <vfprintf+0x656>
    69fa:	8d c2       	rjmp	.+1306   	; 0x6f16 <vfprintf+0x6d0>
    69fc:	37 fe       	sbrs	r3, 7
    69fe:	0f c0       	rjmp	.+30     	; 0x6a1e <vfprintf+0x1d8>
    6a00:	e4 0c       	add	r14, r4
    6a02:	04 ff       	sbrs	r16, 4
    6a04:	04 c0       	rjmp	.+8      	; 0x6a0e <vfprintf+0x1c8>
    6a06:	8a 81       	ldd	r24, Y+2	; 0x02
    6a08:	81 33       	cpi	r24, 0x31	; 49
    6a0a:	09 f4       	brne	.+2      	; 0x6a0e <vfprintf+0x1c8>
    6a0c:	ea 94       	dec	r14
    6a0e:	1e 14       	cp	r1, r14
    6a10:	74 f5       	brge	.+92     	; 0x6a6e <vfprintf+0x228>
    6a12:	f8 e0       	ldi	r31, 0x08	; 8
    6a14:	fe 15       	cp	r31, r14
    6a16:	78 f5       	brcc	.+94     	; 0x6a76 <vfprintf+0x230>
    6a18:	88 e0       	ldi	r24, 0x08	; 8
    6a1a:	e8 2e       	mov	r14, r24
    6a1c:	2c c0       	rjmp	.+88     	; 0x6a76 <vfprintf+0x230>
    6a1e:	36 fc       	sbrc	r3, 6
    6a20:	2a c0       	rjmp	.+84     	; 0x6a76 <vfprintf+0x230>
    6a22:	81 2f       	mov	r24, r17
    6a24:	90 e0       	ldi	r25, 0x00	; 0
    6a26:	84 15       	cp	r24, r4
    6a28:	95 05       	cpc	r25, r5
    6a2a:	9c f0       	brlt	.+38     	; 0x6a52 <vfprintf+0x20c>
    6a2c:	2c ef       	ldi	r18, 0xFC	; 252
    6a2e:	42 16       	cp	r4, r18
    6a30:	2f ef       	ldi	r18, 0xFF	; 255
    6a32:	52 06       	cpc	r5, r18
    6a34:	74 f0       	brlt	.+28     	; 0x6a52 <vfprintf+0x20c>
    6a36:	43 2d       	mov	r20, r3
    6a38:	40 68       	ori	r20, 0x80	; 128
    6a3a:	34 2e       	mov	r3, r20
    6a3c:	0a c0       	rjmp	.+20     	; 0x6a52 <vfprintf+0x20c>
    6a3e:	e2 e0       	ldi	r30, 0x02	; 2
    6a40:	f0 e0       	ldi	r31, 0x00	; 0
    6a42:	ec 0f       	add	r30, r28
    6a44:	fd 1f       	adc	r31, r29
    6a46:	e1 0f       	add	r30, r17
    6a48:	f1 1d       	adc	r31, r1
    6a4a:	80 81       	ld	r24, Z
    6a4c:	80 33       	cpi	r24, 0x30	; 48
    6a4e:	19 f4       	brne	.+6      	; 0x6a56 <vfprintf+0x210>
    6a50:	11 50       	subi	r17, 0x01	; 1
    6a52:	11 11       	cpse	r17, r1
    6a54:	f4 cf       	rjmp	.-24     	; 0x6a3e <vfprintf+0x1f8>
    6a56:	37 fe       	sbrs	r3, 7
    6a58:	0e c0       	rjmp	.+28     	; 0x6a76 <vfprintf+0x230>
    6a5a:	ee 24       	eor	r14, r14
    6a5c:	e3 94       	inc	r14
    6a5e:	e1 0e       	add	r14, r17
    6a60:	81 2f       	mov	r24, r17
    6a62:	90 e0       	ldi	r25, 0x00	; 0
    6a64:	48 16       	cp	r4, r24
    6a66:	59 06       	cpc	r5, r25
    6a68:	2c f4       	brge	.+10     	; 0x6a74 <vfprintf+0x22e>
    6a6a:	14 19       	sub	r17, r4
    6a6c:	04 c0       	rjmp	.+8      	; 0x6a76 <vfprintf+0x230>
    6a6e:	ee 24       	eor	r14, r14
    6a70:	e3 94       	inc	r14
    6a72:	01 c0       	rjmp	.+2      	; 0x6a76 <vfprintf+0x230>
    6a74:	10 e0       	ldi	r17, 0x00	; 0
    6a76:	37 fe       	sbrs	r3, 7
    6a78:	06 c0       	rjmp	.+12     	; 0x6a86 <vfprintf+0x240>
    6a7a:	14 14       	cp	r1, r4
    6a7c:	15 04       	cpc	r1, r5
    6a7e:	34 f4       	brge	.+12     	; 0x6a8c <vfprintf+0x246>
    6a80:	c2 01       	movw	r24, r4
    6a82:	01 96       	adiw	r24, 0x01	; 1
    6a84:	05 c0       	rjmp	.+10     	; 0x6a90 <vfprintf+0x24a>
    6a86:	85 e0       	ldi	r24, 0x05	; 5
    6a88:	90 e0       	ldi	r25, 0x00	; 0
    6a8a:	02 c0       	rjmp	.+4      	; 0x6a90 <vfprintf+0x24a>
    6a8c:	81 e0       	ldi	r24, 0x01	; 1
    6a8e:	90 e0       	ldi	r25, 0x00	; 0
    6a90:	21 10       	cpse	r2, r1
    6a92:	01 96       	adiw	r24, 0x01	; 1
    6a94:	11 23       	and	r17, r17
    6a96:	31 f0       	breq	.+12     	; 0x6aa4 <vfprintf+0x25e>
    6a98:	21 2f       	mov	r18, r17
    6a9a:	30 e0       	ldi	r19, 0x00	; 0
    6a9c:	2f 5f       	subi	r18, 0xFF	; 255
    6a9e:	3f 4f       	sbci	r19, 0xFF	; 255
    6aa0:	82 0f       	add	r24, r18
    6aa2:	93 1f       	adc	r25, r19
    6aa4:	2f 2d       	mov	r18, r15
    6aa6:	30 e0       	ldi	r19, 0x00	; 0
    6aa8:	82 17       	cp	r24, r18
    6aaa:	93 07       	cpc	r25, r19
    6aac:	14 f4       	brge	.+4      	; 0x6ab2 <vfprintf+0x26c>
    6aae:	f8 1a       	sub	r15, r24
    6ab0:	01 c0       	rjmp	.+2      	; 0x6ab4 <vfprintf+0x26e>
    6ab2:	f1 2c       	mov	r15, r1
    6ab4:	83 2d       	mov	r24, r3
    6ab6:	89 70       	andi	r24, 0x09	; 9
    6ab8:	41 f4       	brne	.+16     	; 0x6aca <vfprintf+0x284>
    6aba:	ff 20       	and	r15, r15
    6abc:	31 f0       	breq	.+12     	; 0x6aca <vfprintf+0x284>
    6abe:	b6 01       	movw	r22, r12
    6ac0:	80 e2       	ldi	r24, 0x20	; 32
    6ac2:	90 e0       	ldi	r25, 0x00	; 0
    6ac4:	a3 d3       	rcall	.+1862   	; 0x720c <fputc>
    6ac6:	fa 94       	dec	r15
    6ac8:	f8 cf       	rjmp	.-16     	; 0x6aba <vfprintf+0x274>
    6aca:	22 20       	and	r2, r2
    6acc:	21 f0       	breq	.+8      	; 0x6ad6 <vfprintf+0x290>
    6ace:	b6 01       	movw	r22, r12
    6ad0:	82 2d       	mov	r24, r2
    6ad2:	90 e0       	ldi	r25, 0x00	; 0
    6ad4:	9b d3       	rcall	.+1846   	; 0x720c <fputc>
    6ad6:	33 fc       	sbrc	r3, 3
    6ad8:	08 c0       	rjmp	.+16     	; 0x6aea <vfprintf+0x2a4>
    6ada:	ff 20       	and	r15, r15
    6adc:	31 f0       	breq	.+12     	; 0x6aea <vfprintf+0x2a4>
    6ade:	b6 01       	movw	r22, r12
    6ae0:	80 e3       	ldi	r24, 0x30	; 48
    6ae2:	90 e0       	ldi	r25, 0x00	; 0
    6ae4:	93 d3       	rcall	.+1830   	; 0x720c <fputc>
    6ae6:	fa 94       	dec	r15
    6ae8:	f8 cf       	rjmp	.-16     	; 0x6ada <vfprintf+0x294>
    6aea:	37 fe       	sbrs	r3, 7
    6aec:	58 c0       	rjmp	.+176    	; 0x6b9e <vfprintf+0x358>
    6aee:	94 2d       	mov	r25, r4
    6af0:	85 2d       	mov	r24, r5
    6af2:	57 fe       	sbrs	r5, 7
    6af4:	02 c0       	rjmp	.+4      	; 0x6afa <vfprintf+0x2b4>
    6af6:	90 e0       	ldi	r25, 0x00	; 0
    6af8:	80 e0       	ldi	r24, 0x00	; 0
    6afa:	29 2e       	mov	r2, r25
    6afc:	38 2e       	mov	r3, r24
    6afe:	20 e0       	ldi	r18, 0x00	; 0
    6b00:	30 e0       	ldi	r19, 0x00	; 0
    6b02:	a2 01       	movw	r20, r4
    6b04:	4e 19       	sub	r20, r14
    6b06:	51 09       	sbc	r21, r1
    6b08:	5d 87       	std	Y+13, r21	; 0x0d
    6b0a:	4c 87       	std	Y+12, r20	; 0x0c
    6b0c:	a2 01       	movw	r20, r4
    6b0e:	42 19       	sub	r20, r2
    6b10:	53 09       	sbc	r21, r3
    6b12:	5f 87       	std	Y+15, r21	; 0x0f
    6b14:	4e 87       	std	Y+14, r20	; 0x0e
    6b16:	61 2f       	mov	r22, r17
    6b18:	70 e0       	ldi	r23, 0x00	; 0
    6b1a:	44 27       	eor	r20, r20
    6b1c:	55 27       	eor	r21, r21
    6b1e:	46 1b       	sub	r20, r22
    6b20:	57 0b       	sbc	r21, r23
    6b22:	59 8b       	std	Y+17, r21	; 0x11
    6b24:	48 8b       	std	Y+16, r20	; 0x10
    6b26:	5f ef       	ldi	r21, 0xFF	; 255
    6b28:	25 16       	cp	r2, r21
    6b2a:	35 06       	cpc	r3, r21
    6b2c:	41 f4       	brne	.+16     	; 0x6b3e <vfprintf+0x2f8>
    6b2e:	b6 01       	movw	r22, r12
    6b30:	8e e2       	ldi	r24, 0x2E	; 46
    6b32:	90 e0       	ldi	r25, 0x00	; 0
    6b34:	2a 8b       	std	Y+18, r18	; 0x12
    6b36:	3b 8b       	std	Y+19, r19	; 0x13
    6b38:	69 d3       	rcall	.+1746   	; 0x720c <fputc>
    6b3a:	3b 89       	ldd	r19, Y+19	; 0x13
    6b3c:	2a 89       	ldd	r18, Y+18	; 0x12
    6b3e:	42 14       	cp	r4, r2
    6b40:	53 04       	cpc	r5, r3
    6b42:	6c f0       	brlt	.+26     	; 0x6b5e <vfprintf+0x318>
    6b44:	4c 85       	ldd	r20, Y+12	; 0x0c
    6b46:	5d 85       	ldd	r21, Y+13	; 0x0d
    6b48:	42 15       	cp	r20, r2
    6b4a:	53 05       	cpc	r21, r3
    6b4c:	44 f4       	brge	.+16     	; 0x6b5e <vfprintf+0x318>
    6b4e:	ee 85       	ldd	r30, Y+14	; 0x0e
    6b50:	ff 85       	ldd	r31, Y+15	; 0x0f
    6b52:	e2 0f       	add	r30, r18
    6b54:	f3 1f       	adc	r31, r19
    6b56:	e6 0d       	add	r30, r6
    6b58:	f7 1d       	adc	r31, r7
    6b5a:	81 81       	ldd	r24, Z+1	; 0x01
    6b5c:	01 c0       	rjmp	.+2      	; 0x6b60 <vfprintf+0x31a>
    6b5e:	80 e3       	ldi	r24, 0x30	; 48
    6b60:	51 e0       	ldi	r21, 0x01	; 1
    6b62:	25 1a       	sub	r2, r21
    6b64:	31 08       	sbc	r3, r1
    6b66:	2f 5f       	subi	r18, 0xFF	; 255
    6b68:	3f 4f       	sbci	r19, 0xFF	; 255
    6b6a:	48 89       	ldd	r20, Y+16	; 0x10
    6b6c:	59 89       	ldd	r21, Y+17	; 0x11
    6b6e:	24 16       	cp	r2, r20
    6b70:	35 06       	cpc	r3, r21
    6b72:	44 f0       	brlt	.+16     	; 0x6b84 <vfprintf+0x33e>
    6b74:	b6 01       	movw	r22, r12
    6b76:	90 e0       	ldi	r25, 0x00	; 0
    6b78:	2a 8b       	std	Y+18, r18	; 0x12
    6b7a:	3b 8b       	std	Y+19, r19	; 0x13
    6b7c:	47 d3       	rcall	.+1678   	; 0x720c <fputc>
    6b7e:	2a 89       	ldd	r18, Y+18	; 0x12
    6b80:	3b 89       	ldd	r19, Y+19	; 0x13
    6b82:	d1 cf       	rjmp	.-94     	; 0x6b26 <vfprintf+0x2e0>
    6b84:	24 14       	cp	r2, r4
    6b86:	35 04       	cpc	r3, r5
    6b88:	39 f4       	brne	.+14     	; 0x6b98 <vfprintf+0x352>
    6b8a:	9a 81       	ldd	r25, Y+2	; 0x02
    6b8c:	96 33       	cpi	r25, 0x36	; 54
    6b8e:	18 f4       	brcc	.+6      	; 0x6b96 <vfprintf+0x350>
    6b90:	95 33       	cpi	r25, 0x35	; 53
    6b92:	11 f4       	brne	.+4      	; 0x6b98 <vfprintf+0x352>
    6b94:	04 ff       	sbrs	r16, 4
    6b96:	81 e3       	ldi	r24, 0x31	; 49
    6b98:	b6 01       	movw	r22, r12
    6b9a:	90 e0       	ldi	r25, 0x00	; 0
    6b9c:	45 c0       	rjmp	.+138    	; 0x6c28 <vfprintf+0x3e2>
    6b9e:	8a 81       	ldd	r24, Y+2	; 0x02
    6ba0:	81 33       	cpi	r24, 0x31	; 49
    6ba2:	09 f0       	breq	.+2      	; 0x6ba6 <vfprintf+0x360>
    6ba4:	0f 7e       	andi	r16, 0xEF	; 239
    6ba6:	b6 01       	movw	r22, r12
    6ba8:	90 e0       	ldi	r25, 0x00	; 0
    6baa:	30 d3       	rcall	.+1632   	; 0x720c <fputc>
    6bac:	11 11       	cpse	r17, r1
    6bae:	05 c0       	rjmp	.+10     	; 0x6bba <vfprintf+0x374>
    6bb0:	34 fc       	sbrc	r3, 4
    6bb2:	16 c0       	rjmp	.+44     	; 0x6be0 <vfprintf+0x39a>
    6bb4:	85 e6       	ldi	r24, 0x65	; 101
    6bb6:	90 e0       	ldi	r25, 0x00	; 0
    6bb8:	15 c0       	rjmp	.+42     	; 0x6be4 <vfprintf+0x39e>
    6bba:	b6 01       	movw	r22, r12
    6bbc:	8e e2       	ldi	r24, 0x2E	; 46
    6bbe:	90 e0       	ldi	r25, 0x00	; 0
    6bc0:	25 d3       	rcall	.+1610   	; 0x720c <fputc>
    6bc2:	82 e0       	ldi	r24, 0x02	; 2
    6bc4:	ee 24       	eor	r14, r14
    6bc6:	e3 94       	inc	r14
    6bc8:	e8 0e       	add	r14, r24
    6bca:	f3 01       	movw	r30, r6
    6bcc:	e8 0f       	add	r30, r24
    6bce:	f1 1d       	adc	r31, r1
    6bd0:	80 81       	ld	r24, Z
    6bd2:	b6 01       	movw	r22, r12
    6bd4:	90 e0       	ldi	r25, 0x00	; 0
    6bd6:	1a d3       	rcall	.+1588   	; 0x720c <fputc>
    6bd8:	11 50       	subi	r17, 0x01	; 1
    6bda:	8e 2d       	mov	r24, r14
    6bdc:	99 f7       	brne	.-26     	; 0x6bc4 <vfprintf+0x37e>
    6bde:	e8 cf       	rjmp	.-48     	; 0x6bb0 <vfprintf+0x36a>
    6be0:	85 e4       	ldi	r24, 0x45	; 69
    6be2:	90 e0       	ldi	r25, 0x00	; 0
    6be4:	b6 01       	movw	r22, r12
    6be6:	12 d3       	rcall	.+1572   	; 0x720c <fputc>
    6be8:	57 fc       	sbrc	r5, 7
    6bea:	05 c0       	rjmp	.+10     	; 0x6bf6 <vfprintf+0x3b0>
    6bec:	41 14       	cp	r4, r1
    6bee:	51 04       	cpc	r5, r1
    6bf0:	39 f4       	brne	.+14     	; 0x6c00 <vfprintf+0x3ba>
    6bf2:	04 ff       	sbrs	r16, 4
    6bf4:	05 c0       	rjmp	.+10     	; 0x6c00 <vfprintf+0x3ba>
    6bf6:	51 94       	neg	r5
    6bf8:	41 94       	neg	r4
    6bfa:	51 08       	sbc	r5, r1
    6bfc:	8d e2       	ldi	r24, 0x2D	; 45
    6bfe:	01 c0       	rjmp	.+2      	; 0x6c02 <vfprintf+0x3bc>
    6c00:	8b e2       	ldi	r24, 0x2B	; 43
    6c02:	b6 01       	movw	r22, r12
    6c04:	90 e0       	ldi	r25, 0x00	; 0
    6c06:	02 d3       	rcall	.+1540   	; 0x720c <fputc>
    6c08:	80 e3       	ldi	r24, 0x30	; 48
    6c0a:	9a e0       	ldi	r25, 0x0A	; 10
    6c0c:	49 16       	cp	r4, r25
    6c0e:	51 04       	cpc	r5, r1
    6c10:	2c f0       	brlt	.+10     	; 0x6c1c <vfprintf+0x3d6>
    6c12:	8f 5f       	subi	r24, 0xFF	; 255
    6c14:	5a e0       	ldi	r21, 0x0A	; 10
    6c16:	45 1a       	sub	r4, r21
    6c18:	51 08       	sbc	r5, r1
    6c1a:	f7 cf       	rjmp	.-18     	; 0x6c0a <vfprintf+0x3c4>
    6c1c:	b6 01       	movw	r22, r12
    6c1e:	90 e0       	ldi	r25, 0x00	; 0
    6c20:	f5 d2       	rcall	.+1514   	; 0x720c <fputc>
    6c22:	b6 01       	movw	r22, r12
    6c24:	c2 01       	movw	r24, r4
    6c26:	c0 96       	adiw	r24, 0x30	; 48
    6c28:	f1 d2       	rcall	.+1506   	; 0x720c <fputc>
    6c2a:	4c c1       	rjmp	.+664    	; 0x6ec4 <vfprintf+0x67e>
    6c2c:	83 36       	cpi	r24, 0x63	; 99
    6c2e:	31 f0       	breq	.+12     	; 0x6c3c <vfprintf+0x3f6>
    6c30:	83 37       	cpi	r24, 0x73	; 115
    6c32:	79 f0       	breq	.+30     	; 0x6c52 <vfprintf+0x40c>
    6c34:	83 35       	cpi	r24, 0x53	; 83
    6c36:	09 f0       	breq	.+2      	; 0x6c3a <vfprintf+0x3f4>
    6c38:	54 c0       	rjmp	.+168    	; 0x6ce2 <vfprintf+0x49c>
    6c3a:	20 c0       	rjmp	.+64     	; 0x6c7c <vfprintf+0x436>
    6c3c:	52 01       	movw	r10, r4
    6c3e:	e2 e0       	ldi	r30, 0x02	; 2
    6c40:	ae 0e       	add	r10, r30
    6c42:	b1 1c       	adc	r11, r1
    6c44:	f2 01       	movw	r30, r4
    6c46:	80 81       	ld	r24, Z
    6c48:	89 83       	std	Y+1, r24	; 0x01
    6c4a:	01 e0       	ldi	r16, 0x01	; 1
    6c4c:	10 e0       	ldi	r17, 0x00	; 0
    6c4e:	23 01       	movw	r4, r6
    6c50:	13 c0       	rjmp	.+38     	; 0x6c78 <vfprintf+0x432>
    6c52:	52 01       	movw	r10, r4
    6c54:	f2 e0       	ldi	r31, 0x02	; 2
    6c56:	af 0e       	add	r10, r31
    6c58:	b1 1c       	adc	r11, r1
    6c5a:	f2 01       	movw	r30, r4
    6c5c:	40 80       	ld	r4, Z
    6c5e:	51 80       	ldd	r5, Z+1	; 0x01
    6c60:	26 ff       	sbrs	r18, 6
    6c62:	03 c0       	rjmp	.+6      	; 0x6c6a <vfprintf+0x424>
    6c64:	61 2f       	mov	r22, r17
    6c66:	70 e0       	ldi	r23, 0x00	; 0
    6c68:	02 c0       	rjmp	.+4      	; 0x6c6e <vfprintf+0x428>
    6c6a:	6f ef       	ldi	r22, 0xFF	; 255
    6c6c:	7f ef       	ldi	r23, 0xFF	; 255
    6c6e:	c2 01       	movw	r24, r4
    6c70:	2a 8b       	std	Y+18, r18	; 0x12
    6c72:	c1 d2       	rcall	.+1410   	; 0x71f6 <strnlen>
    6c74:	8c 01       	movw	r16, r24
    6c76:	2a 89       	ldd	r18, Y+18	; 0x12
    6c78:	2f 77       	andi	r18, 0x7F	; 127
    6c7a:	14 c0       	rjmp	.+40     	; 0x6ca4 <vfprintf+0x45e>
    6c7c:	52 01       	movw	r10, r4
    6c7e:	f2 e0       	ldi	r31, 0x02	; 2
    6c80:	af 0e       	add	r10, r31
    6c82:	b1 1c       	adc	r11, r1
    6c84:	f2 01       	movw	r30, r4
    6c86:	40 80       	ld	r4, Z
    6c88:	51 80       	ldd	r5, Z+1	; 0x01
    6c8a:	26 ff       	sbrs	r18, 6
    6c8c:	03 c0       	rjmp	.+6      	; 0x6c94 <vfprintf+0x44e>
    6c8e:	61 2f       	mov	r22, r17
    6c90:	70 e0       	ldi	r23, 0x00	; 0
    6c92:	02 c0       	rjmp	.+4      	; 0x6c98 <vfprintf+0x452>
    6c94:	6f ef       	ldi	r22, 0xFF	; 255
    6c96:	7f ef       	ldi	r23, 0xFF	; 255
    6c98:	c2 01       	movw	r24, r4
    6c9a:	2a 8b       	std	Y+18, r18	; 0x12
    6c9c:	a1 d2       	rcall	.+1346   	; 0x71e0 <strnlen_P>
    6c9e:	8c 01       	movw	r16, r24
    6ca0:	2a 89       	ldd	r18, Y+18	; 0x12
    6ca2:	20 68       	ori	r18, 0x80	; 128
    6ca4:	32 2e       	mov	r3, r18
    6ca6:	23 fd       	sbrc	r18, 3
    6ca8:	18 c0       	rjmp	.+48     	; 0x6cda <vfprintf+0x494>
    6caa:	8f 2d       	mov	r24, r15
    6cac:	90 e0       	ldi	r25, 0x00	; 0
    6cae:	08 17       	cp	r16, r24
    6cb0:	19 07       	cpc	r17, r25
    6cb2:	98 f4       	brcc	.+38     	; 0x6cda <vfprintf+0x494>
    6cb4:	b6 01       	movw	r22, r12
    6cb6:	80 e2       	ldi	r24, 0x20	; 32
    6cb8:	90 e0       	ldi	r25, 0x00	; 0
    6cba:	a8 d2       	rcall	.+1360   	; 0x720c <fputc>
    6cbc:	fa 94       	dec	r15
    6cbe:	f5 cf       	rjmp	.-22     	; 0x6caa <vfprintf+0x464>
    6cc0:	f2 01       	movw	r30, r4
    6cc2:	37 fc       	sbrc	r3, 7
    6cc4:	85 91       	lpm	r24, Z+
    6cc6:	37 fe       	sbrs	r3, 7
    6cc8:	81 91       	ld	r24, Z+
    6cca:	2f 01       	movw	r4, r30
    6ccc:	b6 01       	movw	r22, r12
    6cce:	90 e0       	ldi	r25, 0x00	; 0
    6cd0:	9d d2       	rcall	.+1338   	; 0x720c <fputc>
    6cd2:	f1 10       	cpse	r15, r1
    6cd4:	fa 94       	dec	r15
    6cd6:	01 50       	subi	r16, 0x01	; 1
    6cd8:	11 09       	sbc	r17, r1
    6cda:	01 15       	cp	r16, r1
    6cdc:	11 05       	cpc	r17, r1
    6cde:	81 f7       	brne	.-32     	; 0x6cc0 <vfprintf+0x47a>
    6ce0:	f1 c0       	rjmp	.+482    	; 0x6ec4 <vfprintf+0x67e>
    6ce2:	84 36       	cpi	r24, 0x64	; 100
    6ce4:	11 f0       	breq	.+4      	; 0x6cea <vfprintf+0x4a4>
    6ce6:	89 36       	cpi	r24, 0x69	; 105
    6ce8:	51 f5       	brne	.+84     	; 0x6d3e <vfprintf+0x4f8>
    6cea:	52 01       	movw	r10, r4
    6cec:	27 ff       	sbrs	r18, 7
    6cee:	09 c0       	rjmp	.+18     	; 0x6d02 <vfprintf+0x4bc>
    6cf0:	f4 e0       	ldi	r31, 0x04	; 4
    6cf2:	af 0e       	add	r10, r31
    6cf4:	b1 1c       	adc	r11, r1
    6cf6:	f2 01       	movw	r30, r4
    6cf8:	60 81       	ld	r22, Z
    6cfa:	71 81       	ldd	r23, Z+1	; 0x01
    6cfc:	82 81       	ldd	r24, Z+2	; 0x02
    6cfe:	93 81       	ldd	r25, Z+3	; 0x03
    6d00:	0a c0       	rjmp	.+20     	; 0x6d16 <vfprintf+0x4d0>
    6d02:	f2 e0       	ldi	r31, 0x02	; 2
    6d04:	af 0e       	add	r10, r31
    6d06:	b1 1c       	adc	r11, r1
    6d08:	f2 01       	movw	r30, r4
    6d0a:	60 81       	ld	r22, Z
    6d0c:	71 81       	ldd	r23, Z+1	; 0x01
    6d0e:	07 2e       	mov	r0, r23
    6d10:	00 0c       	add	r0, r0
    6d12:	88 0b       	sbc	r24, r24
    6d14:	99 0b       	sbc	r25, r25
    6d16:	2f 76       	andi	r18, 0x6F	; 111
    6d18:	32 2e       	mov	r3, r18
    6d1a:	97 ff       	sbrs	r25, 7
    6d1c:	09 c0       	rjmp	.+18     	; 0x6d30 <vfprintf+0x4ea>
    6d1e:	90 95       	com	r25
    6d20:	80 95       	com	r24
    6d22:	70 95       	com	r23
    6d24:	61 95       	neg	r22
    6d26:	7f 4f       	sbci	r23, 0xFF	; 255
    6d28:	8f 4f       	sbci	r24, 0xFF	; 255
    6d2a:	9f 4f       	sbci	r25, 0xFF	; 255
    6d2c:	20 68       	ori	r18, 0x80	; 128
    6d2e:	32 2e       	mov	r3, r18
    6d30:	2a e0       	ldi	r18, 0x0A	; 10
    6d32:	30 e0       	ldi	r19, 0x00	; 0
    6d34:	a3 01       	movw	r20, r6
    6d36:	d1 d2       	rcall	.+1442   	; 0x72da <__ultoa_invert>
    6d38:	e8 2e       	mov	r14, r24
    6d3a:	e6 18       	sub	r14, r6
    6d3c:	3e c0       	rjmp	.+124    	; 0x6dba <vfprintf+0x574>
    6d3e:	02 2f       	mov	r16, r18
    6d40:	85 37       	cpi	r24, 0x75	; 117
    6d42:	21 f4       	brne	.+8      	; 0x6d4c <vfprintf+0x506>
    6d44:	0f 7e       	andi	r16, 0xEF	; 239
    6d46:	2a e0       	ldi	r18, 0x0A	; 10
    6d48:	30 e0       	ldi	r19, 0x00	; 0
    6d4a:	1d c0       	rjmp	.+58     	; 0x6d86 <vfprintf+0x540>
    6d4c:	09 7f       	andi	r16, 0xF9	; 249
    6d4e:	8f 36       	cpi	r24, 0x6F	; 111
    6d50:	91 f0       	breq	.+36     	; 0x6d76 <vfprintf+0x530>
    6d52:	18 f4       	brcc	.+6      	; 0x6d5a <vfprintf+0x514>
    6d54:	88 35       	cpi	r24, 0x58	; 88
    6d56:	59 f0       	breq	.+22     	; 0x6d6e <vfprintf+0x528>
    6d58:	be c0       	rjmp	.+380    	; 0x6ed6 <vfprintf+0x690>
    6d5a:	80 37       	cpi	r24, 0x70	; 112
    6d5c:	19 f0       	breq	.+6      	; 0x6d64 <vfprintf+0x51e>
    6d5e:	88 37       	cpi	r24, 0x78	; 120
    6d60:	11 f0       	breq	.+4      	; 0x6d66 <vfprintf+0x520>
    6d62:	b9 c0       	rjmp	.+370    	; 0x6ed6 <vfprintf+0x690>
    6d64:	00 61       	ori	r16, 0x10	; 16
    6d66:	04 ff       	sbrs	r16, 4
    6d68:	09 c0       	rjmp	.+18     	; 0x6d7c <vfprintf+0x536>
    6d6a:	04 60       	ori	r16, 0x04	; 4
    6d6c:	07 c0       	rjmp	.+14     	; 0x6d7c <vfprintf+0x536>
    6d6e:	24 ff       	sbrs	r18, 4
    6d70:	08 c0       	rjmp	.+16     	; 0x6d82 <vfprintf+0x53c>
    6d72:	06 60       	ori	r16, 0x06	; 6
    6d74:	06 c0       	rjmp	.+12     	; 0x6d82 <vfprintf+0x53c>
    6d76:	28 e0       	ldi	r18, 0x08	; 8
    6d78:	30 e0       	ldi	r19, 0x00	; 0
    6d7a:	05 c0       	rjmp	.+10     	; 0x6d86 <vfprintf+0x540>
    6d7c:	20 e1       	ldi	r18, 0x10	; 16
    6d7e:	30 e0       	ldi	r19, 0x00	; 0
    6d80:	02 c0       	rjmp	.+4      	; 0x6d86 <vfprintf+0x540>
    6d82:	20 e1       	ldi	r18, 0x10	; 16
    6d84:	32 e0       	ldi	r19, 0x02	; 2
    6d86:	52 01       	movw	r10, r4
    6d88:	07 ff       	sbrs	r16, 7
    6d8a:	09 c0       	rjmp	.+18     	; 0x6d9e <vfprintf+0x558>
    6d8c:	f4 e0       	ldi	r31, 0x04	; 4
    6d8e:	af 0e       	add	r10, r31
    6d90:	b1 1c       	adc	r11, r1
    6d92:	f2 01       	movw	r30, r4
    6d94:	60 81       	ld	r22, Z
    6d96:	71 81       	ldd	r23, Z+1	; 0x01
    6d98:	82 81       	ldd	r24, Z+2	; 0x02
    6d9a:	93 81       	ldd	r25, Z+3	; 0x03
    6d9c:	08 c0       	rjmp	.+16     	; 0x6dae <vfprintf+0x568>
    6d9e:	f2 e0       	ldi	r31, 0x02	; 2
    6da0:	af 0e       	add	r10, r31
    6da2:	b1 1c       	adc	r11, r1
    6da4:	f2 01       	movw	r30, r4
    6da6:	60 81       	ld	r22, Z
    6da8:	71 81       	ldd	r23, Z+1	; 0x01
    6daa:	80 e0       	ldi	r24, 0x00	; 0
    6dac:	90 e0       	ldi	r25, 0x00	; 0
    6dae:	a3 01       	movw	r20, r6
    6db0:	94 d2       	rcall	.+1320   	; 0x72da <__ultoa_invert>
    6db2:	e8 2e       	mov	r14, r24
    6db4:	e6 18       	sub	r14, r6
    6db6:	0f 77       	andi	r16, 0x7F	; 127
    6db8:	30 2e       	mov	r3, r16
    6dba:	36 fe       	sbrs	r3, 6
    6dbc:	0b c0       	rjmp	.+22     	; 0x6dd4 <vfprintf+0x58e>
    6dbe:	33 2d       	mov	r19, r3
    6dc0:	3e 7f       	andi	r19, 0xFE	; 254
    6dc2:	e1 16       	cp	r14, r17
    6dc4:	50 f4       	brcc	.+20     	; 0x6dda <vfprintf+0x594>
    6dc6:	34 fe       	sbrs	r3, 4
    6dc8:	0a c0       	rjmp	.+20     	; 0x6dde <vfprintf+0x598>
    6dca:	32 fc       	sbrc	r3, 2
    6dcc:	08 c0       	rjmp	.+16     	; 0x6dde <vfprintf+0x598>
    6dce:	33 2d       	mov	r19, r3
    6dd0:	3e 7e       	andi	r19, 0xEE	; 238
    6dd2:	05 c0       	rjmp	.+10     	; 0x6dde <vfprintf+0x598>
    6dd4:	0e 2d       	mov	r16, r14
    6dd6:	33 2d       	mov	r19, r3
    6dd8:	03 c0       	rjmp	.+6      	; 0x6de0 <vfprintf+0x59a>
    6dda:	0e 2d       	mov	r16, r14
    6ddc:	01 c0       	rjmp	.+2      	; 0x6de0 <vfprintf+0x59a>
    6dde:	01 2f       	mov	r16, r17
    6de0:	34 ff       	sbrs	r19, 4
    6de2:	0c c0       	rjmp	.+24     	; 0x6dfc <vfprintf+0x5b6>
    6de4:	fe 01       	movw	r30, r28
    6de6:	ee 0d       	add	r30, r14
    6de8:	f1 1d       	adc	r31, r1
    6dea:	80 81       	ld	r24, Z
    6dec:	80 33       	cpi	r24, 0x30	; 48
    6dee:	11 f4       	brne	.+4      	; 0x6df4 <vfprintf+0x5ae>
    6df0:	39 7e       	andi	r19, 0xE9	; 233
    6df2:	08 c0       	rjmp	.+16     	; 0x6e04 <vfprintf+0x5be>
    6df4:	32 ff       	sbrs	r19, 2
    6df6:	05 c0       	rjmp	.+10     	; 0x6e02 <vfprintf+0x5bc>
    6df8:	0e 5f       	subi	r16, 0xFE	; 254
    6dfa:	04 c0       	rjmp	.+8      	; 0x6e04 <vfprintf+0x5be>
    6dfc:	83 2f       	mov	r24, r19
    6dfe:	86 78       	andi	r24, 0x86	; 134
    6e00:	09 f0       	breq	.+2      	; 0x6e04 <vfprintf+0x5be>
    6e02:	0f 5f       	subi	r16, 0xFF	; 255
    6e04:	33 fd       	sbrc	r19, 3
    6e06:	12 c0       	rjmp	.+36     	; 0x6e2c <vfprintf+0x5e6>
    6e08:	30 ff       	sbrs	r19, 0
    6e0a:	06 c0       	rjmp	.+12     	; 0x6e18 <vfprintf+0x5d2>
    6e0c:	1e 2d       	mov	r17, r14
    6e0e:	0f 15       	cp	r16, r15
    6e10:	18 f4       	brcc	.+6      	; 0x6e18 <vfprintf+0x5d2>
    6e12:	1f 0d       	add	r17, r15
    6e14:	10 1b       	sub	r17, r16
    6e16:	0f 2d       	mov	r16, r15
    6e18:	0f 15       	cp	r16, r15
    6e1a:	60 f4       	brcc	.+24     	; 0x6e34 <vfprintf+0x5ee>
    6e1c:	b6 01       	movw	r22, r12
    6e1e:	80 e2       	ldi	r24, 0x20	; 32
    6e20:	90 e0       	ldi	r25, 0x00	; 0
    6e22:	3b 8b       	std	Y+19, r19	; 0x13
    6e24:	f3 d1       	rcall	.+998    	; 0x720c <fputc>
    6e26:	0f 5f       	subi	r16, 0xFF	; 255
    6e28:	3b 89       	ldd	r19, Y+19	; 0x13
    6e2a:	f6 cf       	rjmp	.-20     	; 0x6e18 <vfprintf+0x5d2>
    6e2c:	0f 15       	cp	r16, r15
    6e2e:	10 f4       	brcc	.+4      	; 0x6e34 <vfprintf+0x5ee>
    6e30:	f0 1a       	sub	r15, r16
    6e32:	01 c0       	rjmp	.+2      	; 0x6e36 <vfprintf+0x5f0>
    6e34:	f1 2c       	mov	r15, r1
    6e36:	34 ff       	sbrs	r19, 4
    6e38:	11 c0       	rjmp	.+34     	; 0x6e5c <vfprintf+0x616>
    6e3a:	b6 01       	movw	r22, r12
    6e3c:	80 e3       	ldi	r24, 0x30	; 48
    6e3e:	90 e0       	ldi	r25, 0x00	; 0
    6e40:	3b 8b       	std	Y+19, r19	; 0x13
    6e42:	e4 d1       	rcall	.+968    	; 0x720c <fputc>
    6e44:	3b 89       	ldd	r19, Y+19	; 0x13
    6e46:	32 ff       	sbrs	r19, 2
    6e48:	16 c0       	rjmp	.+44     	; 0x6e76 <vfprintf+0x630>
    6e4a:	31 fd       	sbrc	r19, 1
    6e4c:	03 c0       	rjmp	.+6      	; 0x6e54 <vfprintf+0x60e>
    6e4e:	88 e7       	ldi	r24, 0x78	; 120
    6e50:	90 e0       	ldi	r25, 0x00	; 0
    6e52:	02 c0       	rjmp	.+4      	; 0x6e58 <vfprintf+0x612>
    6e54:	88 e5       	ldi	r24, 0x58	; 88
    6e56:	90 e0       	ldi	r25, 0x00	; 0
    6e58:	b6 01       	movw	r22, r12
    6e5a:	0c c0       	rjmp	.+24     	; 0x6e74 <vfprintf+0x62e>
    6e5c:	83 2f       	mov	r24, r19
    6e5e:	86 78       	andi	r24, 0x86	; 134
    6e60:	51 f0       	breq	.+20     	; 0x6e76 <vfprintf+0x630>
    6e62:	31 ff       	sbrs	r19, 1
    6e64:	02 c0       	rjmp	.+4      	; 0x6e6a <vfprintf+0x624>
    6e66:	8b e2       	ldi	r24, 0x2B	; 43
    6e68:	01 c0       	rjmp	.+2      	; 0x6e6c <vfprintf+0x626>
    6e6a:	80 e2       	ldi	r24, 0x20	; 32
    6e6c:	37 fd       	sbrc	r19, 7
    6e6e:	8d e2       	ldi	r24, 0x2D	; 45
    6e70:	b6 01       	movw	r22, r12
    6e72:	90 e0       	ldi	r25, 0x00	; 0
    6e74:	cb d1       	rcall	.+918    	; 0x720c <fputc>
    6e76:	e1 16       	cp	r14, r17
    6e78:	30 f4       	brcc	.+12     	; 0x6e86 <vfprintf+0x640>
    6e7a:	b6 01       	movw	r22, r12
    6e7c:	80 e3       	ldi	r24, 0x30	; 48
    6e7e:	90 e0       	ldi	r25, 0x00	; 0
    6e80:	c5 d1       	rcall	.+906    	; 0x720c <fputc>
    6e82:	11 50       	subi	r17, 0x01	; 1
    6e84:	f8 cf       	rjmp	.-16     	; 0x6e76 <vfprintf+0x630>
    6e86:	ea 94       	dec	r14
    6e88:	f3 01       	movw	r30, r6
    6e8a:	ee 0d       	add	r30, r14
    6e8c:	f1 1d       	adc	r31, r1
    6e8e:	80 81       	ld	r24, Z
    6e90:	b6 01       	movw	r22, r12
    6e92:	90 e0       	ldi	r25, 0x00	; 0
    6e94:	bb d1       	rcall	.+886    	; 0x720c <fputc>
    6e96:	e1 10       	cpse	r14, r1
    6e98:	f6 cf       	rjmp	.-20     	; 0x6e86 <vfprintf+0x640>
    6e9a:	14 c0       	rjmp	.+40     	; 0x6ec4 <vfprintf+0x67e>
    6e9c:	f4 e0       	ldi	r31, 0x04	; 4
    6e9e:	ff 15       	cp	r31, r15
    6ea0:	48 f5       	brcc	.+82     	; 0x6ef4 <vfprintf+0x6ae>
    6ea2:	84 e0       	ldi	r24, 0x04	; 4
    6ea4:	f8 1a       	sub	r15, r24
    6ea6:	33 fe       	sbrs	r3, 3
    6ea8:	1d c0       	rjmp	.+58     	; 0x6ee4 <vfprintf+0x69e>
    6eaa:	21 10       	cpse	r2, r1
    6eac:	24 c0       	rjmp	.+72     	; 0x6ef6 <vfprintf+0x6b0>
    6eae:	03 ff       	sbrs	r16, 3
    6eb0:	27 c0       	rjmp	.+78     	; 0x6f00 <vfprintf+0x6ba>
    6eb2:	02 e4       	ldi	r16, 0x42	; 66
    6eb4:	14 e0       	ldi	r17, 0x04	; 4
    6eb6:	f3 2d       	mov	r31, r3
    6eb8:	f0 71       	andi	r31, 0x10	; 16
    6eba:	3f 2e       	mov	r3, r31
    6ebc:	f8 01       	movw	r30, r16
    6ebe:	84 91       	lpm	r24, Z
    6ec0:	81 11       	cpse	r24, r1
    6ec2:	21 c0       	rjmp	.+66     	; 0x6f06 <vfprintf+0x6c0>
    6ec4:	ff 20       	and	r15, r15
    6ec6:	09 f4       	brne	.+2      	; 0x6eca <vfprintf+0x684>
    6ec8:	fd cc       	rjmp	.-1542   	; 0x68c4 <vfprintf+0x7e>
    6eca:	b6 01       	movw	r22, r12
    6ecc:	80 e2       	ldi	r24, 0x20	; 32
    6ece:	90 e0       	ldi	r25, 0x00	; 0
    6ed0:	9d d1       	rcall	.+826    	; 0x720c <fputc>
    6ed2:	fa 94       	dec	r15
    6ed4:	f7 cf       	rjmp	.-18     	; 0x6ec4 <vfprintf+0x67e>
    6ed6:	f6 01       	movw	r30, r12
    6ed8:	86 81       	ldd	r24, Z+6	; 0x06
    6eda:	97 81       	ldd	r25, Z+7	; 0x07
    6edc:	23 c0       	rjmp	.+70     	; 0x6f24 <vfprintf+0x6de>
    6ede:	8f ef       	ldi	r24, 0xFF	; 255
    6ee0:	9f ef       	ldi	r25, 0xFF	; 255
    6ee2:	20 c0       	rjmp	.+64     	; 0x6f24 <vfprintf+0x6de>
    6ee4:	b6 01       	movw	r22, r12
    6ee6:	80 e2       	ldi	r24, 0x20	; 32
    6ee8:	90 e0       	ldi	r25, 0x00	; 0
    6eea:	90 d1       	rcall	.+800    	; 0x720c <fputc>
    6eec:	fa 94       	dec	r15
    6eee:	f1 10       	cpse	r15, r1
    6ef0:	f9 cf       	rjmp	.-14     	; 0x6ee4 <vfprintf+0x69e>
    6ef2:	db cf       	rjmp	.-74     	; 0x6eaa <vfprintf+0x664>
    6ef4:	f1 2c       	mov	r15, r1
    6ef6:	b6 01       	movw	r22, r12
    6ef8:	82 2d       	mov	r24, r2
    6efa:	90 e0       	ldi	r25, 0x00	; 0
    6efc:	87 d1       	rcall	.+782    	; 0x720c <fputc>
    6efe:	d7 cf       	rjmp	.-82     	; 0x6eae <vfprintf+0x668>
    6f00:	06 e4       	ldi	r16, 0x46	; 70
    6f02:	14 e0       	ldi	r17, 0x04	; 4
    6f04:	d8 cf       	rjmp	.-80     	; 0x6eb6 <vfprintf+0x670>
    6f06:	31 10       	cpse	r3, r1
    6f08:	80 52       	subi	r24, 0x20	; 32
    6f0a:	b6 01       	movw	r22, r12
    6f0c:	90 e0       	ldi	r25, 0x00	; 0
    6f0e:	7e d1       	rcall	.+764    	; 0x720c <fputc>
    6f10:	0f 5f       	subi	r16, 0xFF	; 255
    6f12:	1f 4f       	sbci	r17, 0xFF	; 255
    6f14:	d3 cf       	rjmp	.-90     	; 0x6ebc <vfprintf+0x676>
    6f16:	23 e0       	ldi	r18, 0x03	; 3
    6f18:	2f 15       	cp	r18, r15
    6f1a:	10 f4       	brcc	.+4      	; 0x6f20 <vfprintf+0x6da>
    6f1c:	83 e0       	ldi	r24, 0x03	; 3
    6f1e:	c2 cf       	rjmp	.-124    	; 0x6ea4 <vfprintf+0x65e>
    6f20:	f1 2c       	mov	r15, r1
    6f22:	c5 cf       	rjmp	.-118    	; 0x6eae <vfprintf+0x668>
    6f24:	63 96       	adiw	r28, 0x13	; 19
    6f26:	0f b6       	in	r0, 0x3f	; 63
    6f28:	f8 94       	cli
    6f2a:	de bf       	out	0x3e, r29	; 62
    6f2c:	0f be       	out	0x3f, r0	; 63
    6f2e:	cd bf       	out	0x3d, r28	; 61
    6f30:	df 91       	pop	r29
    6f32:	cf 91       	pop	r28
    6f34:	1f 91       	pop	r17
    6f36:	0f 91       	pop	r16
    6f38:	ff 90       	pop	r15
    6f3a:	ef 90       	pop	r14
    6f3c:	df 90       	pop	r13
    6f3e:	cf 90       	pop	r12
    6f40:	bf 90       	pop	r11
    6f42:	af 90       	pop	r10
    6f44:	9f 90       	pop	r9
    6f46:	8f 90       	pop	r8
    6f48:	7f 90       	pop	r7
    6f4a:	6f 90       	pop	r6
    6f4c:	5f 90       	pop	r5
    6f4e:	4f 90       	pop	r4
    6f50:	3f 90       	pop	r3
    6f52:	2f 90       	pop	r2
    6f54:	08 95       	ret

00006f56 <__udivmodhi4>:
    6f56:	aa 1b       	sub	r26, r26
    6f58:	bb 1b       	sub	r27, r27
    6f5a:	51 e1       	ldi	r21, 0x11	; 17
    6f5c:	07 c0       	rjmp	.+14     	; 0x6f6c <__udivmodhi4_ep>

00006f5e <__udivmodhi4_loop>:
    6f5e:	aa 1f       	adc	r26, r26
    6f60:	bb 1f       	adc	r27, r27
    6f62:	a6 17       	cp	r26, r22
    6f64:	b7 07       	cpc	r27, r23
    6f66:	10 f0       	brcs	.+4      	; 0x6f6c <__udivmodhi4_ep>
    6f68:	a6 1b       	sub	r26, r22
    6f6a:	b7 0b       	sbc	r27, r23

00006f6c <__udivmodhi4_ep>:
    6f6c:	88 1f       	adc	r24, r24
    6f6e:	99 1f       	adc	r25, r25
    6f70:	5a 95       	dec	r21
    6f72:	a9 f7       	brne	.-22     	; 0x6f5e <__udivmodhi4_loop>
    6f74:	80 95       	com	r24
    6f76:	90 95       	com	r25
    6f78:	bc 01       	movw	r22, r24
    6f7a:	cd 01       	movw	r24, r26
    6f7c:	08 95       	ret

00006f7e <__divmodhi4>:
    6f7e:	97 fb       	bst	r25, 7
    6f80:	07 2e       	mov	r0, r23
    6f82:	16 f4       	brtc	.+4      	; 0x6f88 <__divmodhi4+0xa>
    6f84:	00 94       	com	r0
    6f86:	06 d0       	rcall	.+12     	; 0x6f94 <__divmodhi4_neg1>
    6f88:	77 fd       	sbrc	r23, 7
    6f8a:	08 d0       	rcall	.+16     	; 0x6f9c <__divmodhi4_neg2>
    6f8c:	e4 df       	rcall	.-56     	; 0x6f56 <__udivmodhi4>
    6f8e:	07 fc       	sbrc	r0, 7
    6f90:	05 d0       	rcall	.+10     	; 0x6f9c <__divmodhi4_neg2>
    6f92:	3e f4       	brtc	.+14     	; 0x6fa2 <__divmodhi4_exit>

00006f94 <__divmodhi4_neg1>:
    6f94:	90 95       	com	r25
    6f96:	81 95       	neg	r24
    6f98:	9f 4f       	sbci	r25, 0xFF	; 255
    6f9a:	08 95       	ret

00006f9c <__divmodhi4_neg2>:
    6f9c:	70 95       	com	r23
    6f9e:	61 95       	neg	r22
    6fa0:	7f 4f       	sbci	r23, 0xFF	; 255

00006fa2 <__divmodhi4_exit>:
    6fa2:	08 95       	ret

00006fa4 <__udivmodsi4>:
    6fa4:	a1 e2       	ldi	r26, 0x21	; 33
    6fa6:	1a 2e       	mov	r1, r26
    6fa8:	aa 1b       	sub	r26, r26
    6faa:	bb 1b       	sub	r27, r27
    6fac:	fd 01       	movw	r30, r26
    6fae:	0d c0       	rjmp	.+26     	; 0x6fca <__udivmodsi4_ep>

00006fb0 <__udivmodsi4_loop>:
    6fb0:	aa 1f       	adc	r26, r26
    6fb2:	bb 1f       	adc	r27, r27
    6fb4:	ee 1f       	adc	r30, r30
    6fb6:	ff 1f       	adc	r31, r31
    6fb8:	a2 17       	cp	r26, r18
    6fba:	b3 07       	cpc	r27, r19
    6fbc:	e4 07       	cpc	r30, r20
    6fbe:	f5 07       	cpc	r31, r21
    6fc0:	20 f0       	brcs	.+8      	; 0x6fca <__udivmodsi4_ep>
    6fc2:	a2 1b       	sub	r26, r18
    6fc4:	b3 0b       	sbc	r27, r19
    6fc6:	e4 0b       	sbc	r30, r20
    6fc8:	f5 0b       	sbc	r31, r21

00006fca <__udivmodsi4_ep>:
    6fca:	66 1f       	adc	r22, r22
    6fcc:	77 1f       	adc	r23, r23
    6fce:	88 1f       	adc	r24, r24
    6fd0:	99 1f       	adc	r25, r25
    6fd2:	1a 94       	dec	r1
    6fd4:	69 f7       	brne	.-38     	; 0x6fb0 <__udivmodsi4_loop>
    6fd6:	60 95       	com	r22
    6fd8:	70 95       	com	r23
    6fda:	80 95       	com	r24
    6fdc:	90 95       	com	r25
    6fde:	9b 01       	movw	r18, r22
    6fe0:	ac 01       	movw	r20, r24
    6fe2:	bd 01       	movw	r22, r26
    6fe4:	cf 01       	movw	r24, r30
    6fe6:	08 95       	ret

00006fe8 <__tablejump2__>:
    6fe8:	ee 0f       	add	r30, r30
    6fea:	ff 1f       	adc	r31, r31
    6fec:	00 24       	eor	r0, r0
    6fee:	00 1c       	adc	r0, r0
    6ff0:	0b be       	out	0x3b, r0	; 59
    6ff2:	07 90       	elpm	r0, Z+
    6ff4:	f6 91       	elpm	r31, Z
    6ff6:	e0 2d       	mov	r30, r0
    6ff8:	09 94       	ijmp

00006ffa <__mulhisi3>:
    6ffa:	05 d0       	rcall	.+10     	; 0x7006 <__umulhisi3>
    6ffc:	33 23       	and	r19, r19
    6ffe:	12 f4       	brpl	.+4      	; 0x7004 <__mulhisi3+0xa>
    7000:	8a 1b       	sub	r24, r26
    7002:	9b 0b       	sbc	r25, r27
    7004:	10 c0       	rjmp	.+32     	; 0x7026 <__usmulhisi3_tail>

00007006 <__umulhisi3>:
    7006:	a2 9f       	mul	r26, r18
    7008:	b0 01       	movw	r22, r0
    700a:	b3 9f       	mul	r27, r19
    700c:	c0 01       	movw	r24, r0
    700e:	a3 9f       	mul	r26, r19
    7010:	70 0d       	add	r23, r0
    7012:	81 1d       	adc	r24, r1
    7014:	11 24       	eor	r1, r1
    7016:	91 1d       	adc	r25, r1
    7018:	b2 9f       	mul	r27, r18
    701a:	70 0d       	add	r23, r0
    701c:	81 1d       	adc	r24, r1
    701e:	11 24       	eor	r1, r1
    7020:	91 1d       	adc	r25, r1
    7022:	08 95       	ret

00007024 <__usmulhisi3>:
    7024:	f0 df       	rcall	.-32     	; 0x7006 <__umulhisi3>

00007026 <__usmulhisi3_tail>:
    7026:	b7 ff       	sbrs	r27, 7
    7028:	08 95       	ret
    702a:	82 1b       	sub	r24, r18
    702c:	93 0b       	sbc	r25, r19
    702e:	08 95       	ret

00007030 <__ftoa_engine>:
    7030:	28 30       	cpi	r18, 0x08	; 8
    7032:	08 f0       	brcs	.+2      	; 0x7036 <__ftoa_engine+0x6>
    7034:	27 e0       	ldi	r18, 0x07	; 7
    7036:	33 27       	eor	r19, r19
    7038:	da 01       	movw	r26, r20
    703a:	99 0f       	add	r25, r25
    703c:	31 1d       	adc	r19, r1
    703e:	87 fd       	sbrc	r24, 7
    7040:	91 60       	ori	r25, 0x01	; 1
    7042:	00 96       	adiw	r24, 0x00	; 0
    7044:	61 05       	cpc	r22, r1
    7046:	71 05       	cpc	r23, r1
    7048:	39 f4       	brne	.+14     	; 0x7058 <__ftoa_engine+0x28>
    704a:	32 60       	ori	r19, 0x02	; 2
    704c:	2e 5f       	subi	r18, 0xFE	; 254
    704e:	3d 93       	st	X+, r19
    7050:	30 e3       	ldi	r19, 0x30	; 48
    7052:	2a 95       	dec	r18
    7054:	e1 f7       	brne	.-8      	; 0x704e <__ftoa_engine+0x1e>
    7056:	08 95       	ret
    7058:	9f 3f       	cpi	r25, 0xFF	; 255
    705a:	30 f0       	brcs	.+12     	; 0x7068 <__ftoa_engine+0x38>
    705c:	80 38       	cpi	r24, 0x80	; 128
    705e:	71 05       	cpc	r23, r1
    7060:	61 05       	cpc	r22, r1
    7062:	09 f0       	breq	.+2      	; 0x7066 <__ftoa_engine+0x36>
    7064:	3c 5f       	subi	r19, 0xFC	; 252
    7066:	3c 5f       	subi	r19, 0xFC	; 252
    7068:	3d 93       	st	X+, r19
    706a:	91 30       	cpi	r25, 0x01	; 1
    706c:	08 f0       	brcs	.+2      	; 0x7070 <__ftoa_engine+0x40>
    706e:	80 68       	ori	r24, 0x80	; 128
    7070:	91 1d       	adc	r25, r1
    7072:	df 93       	push	r29
    7074:	cf 93       	push	r28
    7076:	1f 93       	push	r17
    7078:	0f 93       	push	r16
    707a:	ff 92       	push	r15
    707c:	ef 92       	push	r14
    707e:	19 2f       	mov	r17, r25
    7080:	98 7f       	andi	r25, 0xF8	; 248
    7082:	96 95       	lsr	r25
    7084:	e9 2f       	mov	r30, r25
    7086:	96 95       	lsr	r25
    7088:	96 95       	lsr	r25
    708a:	e9 0f       	add	r30, r25
    708c:	ff 27       	eor	r31, r31
    708e:	ec 55       	subi	r30, 0x5C	; 92
    7090:	fb 4f       	sbci	r31, 0xFB	; 251
    7092:	99 27       	eor	r25, r25
    7094:	33 27       	eor	r19, r19
    7096:	ee 24       	eor	r14, r14
    7098:	ff 24       	eor	r15, r15
    709a:	a7 01       	movw	r20, r14
    709c:	e7 01       	movw	r28, r14
    709e:	05 90       	lpm	r0, Z+
    70a0:	08 94       	sec
    70a2:	07 94       	ror	r0
    70a4:	28 f4       	brcc	.+10     	; 0x70b0 <__ftoa_engine+0x80>
    70a6:	36 0f       	add	r19, r22
    70a8:	e7 1e       	adc	r14, r23
    70aa:	f8 1e       	adc	r15, r24
    70ac:	49 1f       	adc	r20, r25
    70ae:	51 1d       	adc	r21, r1
    70b0:	66 0f       	add	r22, r22
    70b2:	77 1f       	adc	r23, r23
    70b4:	88 1f       	adc	r24, r24
    70b6:	99 1f       	adc	r25, r25
    70b8:	06 94       	lsr	r0
    70ba:	a1 f7       	brne	.-24     	; 0x70a4 <__ftoa_engine+0x74>
    70bc:	05 90       	lpm	r0, Z+
    70be:	07 94       	ror	r0
    70c0:	28 f4       	brcc	.+10     	; 0x70cc <__ftoa_engine+0x9c>
    70c2:	e7 0e       	add	r14, r23
    70c4:	f8 1e       	adc	r15, r24
    70c6:	49 1f       	adc	r20, r25
    70c8:	56 1f       	adc	r21, r22
    70ca:	c1 1d       	adc	r28, r1
    70cc:	77 0f       	add	r23, r23
    70ce:	88 1f       	adc	r24, r24
    70d0:	99 1f       	adc	r25, r25
    70d2:	66 1f       	adc	r22, r22
    70d4:	06 94       	lsr	r0
    70d6:	a1 f7       	brne	.-24     	; 0x70c0 <__ftoa_engine+0x90>
    70d8:	05 90       	lpm	r0, Z+
    70da:	07 94       	ror	r0
    70dc:	28 f4       	brcc	.+10     	; 0x70e8 <__ftoa_engine+0xb8>
    70de:	f8 0e       	add	r15, r24
    70e0:	49 1f       	adc	r20, r25
    70e2:	56 1f       	adc	r21, r22
    70e4:	c7 1f       	adc	r28, r23
    70e6:	d1 1d       	adc	r29, r1
    70e8:	88 0f       	add	r24, r24
    70ea:	99 1f       	adc	r25, r25
    70ec:	66 1f       	adc	r22, r22
    70ee:	77 1f       	adc	r23, r23
    70f0:	06 94       	lsr	r0
    70f2:	a1 f7       	brne	.-24     	; 0x70dc <__ftoa_engine+0xac>
    70f4:	05 90       	lpm	r0, Z+
    70f6:	07 94       	ror	r0
    70f8:	20 f4       	brcc	.+8      	; 0x7102 <__ftoa_engine+0xd2>
    70fa:	49 0f       	add	r20, r25
    70fc:	56 1f       	adc	r21, r22
    70fe:	c7 1f       	adc	r28, r23
    7100:	d8 1f       	adc	r29, r24
    7102:	99 0f       	add	r25, r25
    7104:	66 1f       	adc	r22, r22
    7106:	77 1f       	adc	r23, r23
    7108:	88 1f       	adc	r24, r24
    710a:	06 94       	lsr	r0
    710c:	a9 f7       	brne	.-22     	; 0x70f8 <__ftoa_engine+0xc8>
    710e:	84 91       	lpm	r24, Z
    7110:	10 95       	com	r17
    7112:	17 70       	andi	r17, 0x07	; 7
    7114:	41 f0       	breq	.+16     	; 0x7126 <__ftoa_engine+0xf6>
    7116:	d6 95       	lsr	r29
    7118:	c7 95       	ror	r28
    711a:	57 95       	ror	r21
    711c:	47 95       	ror	r20
    711e:	f7 94       	ror	r15
    7120:	e7 94       	ror	r14
    7122:	1a 95       	dec	r17
    7124:	c1 f7       	brne	.-16     	; 0x7116 <__ftoa_engine+0xe6>
    7126:	ea e4       	ldi	r30, 0x4A	; 74
    7128:	f4 e0       	ldi	r31, 0x04	; 4
    712a:	68 94       	set
    712c:	15 90       	lpm	r1, Z+
    712e:	15 91       	lpm	r17, Z+
    7130:	35 91       	lpm	r19, Z+
    7132:	65 91       	lpm	r22, Z+
    7134:	95 91       	lpm	r25, Z+
    7136:	05 90       	lpm	r0, Z+
    7138:	7f e2       	ldi	r23, 0x2F	; 47
    713a:	73 95       	inc	r23
    713c:	e1 18       	sub	r14, r1
    713e:	f1 0a       	sbc	r15, r17
    7140:	43 0b       	sbc	r20, r19
    7142:	56 0b       	sbc	r21, r22
    7144:	c9 0b       	sbc	r28, r25
    7146:	d0 09       	sbc	r29, r0
    7148:	c0 f7       	brcc	.-16     	; 0x713a <__ftoa_engine+0x10a>
    714a:	e1 0c       	add	r14, r1
    714c:	f1 1e       	adc	r15, r17
    714e:	43 1f       	adc	r20, r19
    7150:	56 1f       	adc	r21, r22
    7152:	c9 1f       	adc	r28, r25
    7154:	d0 1d       	adc	r29, r0
    7156:	7e f4       	brtc	.+30     	; 0x7176 <__ftoa_engine+0x146>
    7158:	70 33       	cpi	r23, 0x30	; 48
    715a:	11 f4       	brne	.+4      	; 0x7160 <__ftoa_engine+0x130>
    715c:	8a 95       	dec	r24
    715e:	e6 cf       	rjmp	.-52     	; 0x712c <__ftoa_engine+0xfc>
    7160:	e8 94       	clt
    7162:	01 50       	subi	r16, 0x01	; 1
    7164:	30 f0       	brcs	.+12     	; 0x7172 <__ftoa_engine+0x142>
    7166:	08 0f       	add	r16, r24
    7168:	0a f4       	brpl	.+2      	; 0x716c <__ftoa_engine+0x13c>
    716a:	00 27       	eor	r16, r16
    716c:	02 17       	cp	r16, r18
    716e:	08 f4       	brcc	.+2      	; 0x7172 <__ftoa_engine+0x142>
    7170:	20 2f       	mov	r18, r16
    7172:	23 95       	inc	r18
    7174:	02 2f       	mov	r16, r18
    7176:	7a 33       	cpi	r23, 0x3A	; 58
    7178:	28 f0       	brcs	.+10     	; 0x7184 <__ftoa_engine+0x154>
    717a:	79 e3       	ldi	r23, 0x39	; 57
    717c:	7d 93       	st	X+, r23
    717e:	2a 95       	dec	r18
    7180:	e9 f7       	brne	.-6      	; 0x717c <__ftoa_engine+0x14c>
    7182:	10 c0       	rjmp	.+32     	; 0x71a4 <__ftoa_engine+0x174>
    7184:	7d 93       	st	X+, r23
    7186:	2a 95       	dec	r18
    7188:	89 f6       	brne	.-94     	; 0x712c <__ftoa_engine+0xfc>
    718a:	06 94       	lsr	r0
    718c:	97 95       	ror	r25
    718e:	67 95       	ror	r22
    7190:	37 95       	ror	r19
    7192:	17 95       	ror	r17
    7194:	17 94       	ror	r1
    7196:	e1 18       	sub	r14, r1
    7198:	f1 0a       	sbc	r15, r17
    719a:	43 0b       	sbc	r20, r19
    719c:	56 0b       	sbc	r21, r22
    719e:	c9 0b       	sbc	r28, r25
    71a0:	d0 09       	sbc	r29, r0
    71a2:	98 f0       	brcs	.+38     	; 0x71ca <__ftoa_engine+0x19a>
    71a4:	23 95       	inc	r18
    71a6:	7e 91       	ld	r23, -X
    71a8:	73 95       	inc	r23
    71aa:	7a 33       	cpi	r23, 0x3A	; 58
    71ac:	08 f0       	brcs	.+2      	; 0x71b0 <__ftoa_engine+0x180>
    71ae:	70 e3       	ldi	r23, 0x30	; 48
    71b0:	7c 93       	st	X, r23
    71b2:	20 13       	cpse	r18, r16
    71b4:	b8 f7       	brcc	.-18     	; 0x71a4 <__ftoa_engine+0x174>
    71b6:	7e 91       	ld	r23, -X
    71b8:	70 61       	ori	r23, 0x10	; 16
    71ba:	7d 93       	st	X+, r23
    71bc:	30 f0       	brcs	.+12     	; 0x71ca <__ftoa_engine+0x19a>
    71be:	83 95       	inc	r24
    71c0:	71 e3       	ldi	r23, 0x31	; 49
    71c2:	7d 93       	st	X+, r23
    71c4:	70 e3       	ldi	r23, 0x30	; 48
    71c6:	2a 95       	dec	r18
    71c8:	e1 f7       	brne	.-8      	; 0x71c2 <__ftoa_engine+0x192>
    71ca:	11 24       	eor	r1, r1
    71cc:	ef 90       	pop	r14
    71ce:	ff 90       	pop	r15
    71d0:	0f 91       	pop	r16
    71d2:	1f 91       	pop	r17
    71d4:	cf 91       	pop	r28
    71d6:	df 91       	pop	r29
    71d8:	99 27       	eor	r25, r25
    71da:	87 fd       	sbrc	r24, 7
    71dc:	90 95       	com	r25
    71de:	08 95       	ret

000071e0 <strnlen_P>:
    71e0:	fc 01       	movw	r30, r24
    71e2:	05 90       	lpm	r0, Z+
    71e4:	61 50       	subi	r22, 0x01	; 1
    71e6:	70 40       	sbci	r23, 0x00	; 0
    71e8:	01 10       	cpse	r0, r1
    71ea:	d8 f7       	brcc	.-10     	; 0x71e2 <strnlen_P+0x2>
    71ec:	80 95       	com	r24
    71ee:	90 95       	com	r25
    71f0:	8e 0f       	add	r24, r30
    71f2:	9f 1f       	adc	r25, r31
    71f4:	08 95       	ret

000071f6 <strnlen>:
    71f6:	fc 01       	movw	r30, r24
    71f8:	61 50       	subi	r22, 0x01	; 1
    71fa:	70 40       	sbci	r23, 0x00	; 0
    71fc:	01 90       	ld	r0, Z+
    71fe:	01 10       	cpse	r0, r1
    7200:	d8 f7       	brcc	.-10     	; 0x71f8 <strnlen+0x2>
    7202:	80 95       	com	r24
    7204:	90 95       	com	r25
    7206:	8e 0f       	add	r24, r30
    7208:	9f 1f       	adc	r25, r31
    720a:	08 95       	ret

0000720c <fputc>:
    720c:	0f 93       	push	r16
    720e:	1f 93       	push	r17
    7210:	cf 93       	push	r28
    7212:	df 93       	push	r29
    7214:	fb 01       	movw	r30, r22
    7216:	23 81       	ldd	r18, Z+3	; 0x03
    7218:	21 fd       	sbrc	r18, 1
    721a:	03 c0       	rjmp	.+6      	; 0x7222 <fputc+0x16>
    721c:	8f ef       	ldi	r24, 0xFF	; 255
    721e:	9f ef       	ldi	r25, 0xFF	; 255
    7220:	28 c0       	rjmp	.+80     	; 0x7272 <fputc+0x66>
    7222:	22 ff       	sbrs	r18, 2
    7224:	16 c0       	rjmp	.+44     	; 0x7252 <fputc+0x46>
    7226:	46 81       	ldd	r20, Z+6	; 0x06
    7228:	57 81       	ldd	r21, Z+7	; 0x07
    722a:	24 81       	ldd	r18, Z+4	; 0x04
    722c:	35 81       	ldd	r19, Z+5	; 0x05
    722e:	42 17       	cp	r20, r18
    7230:	53 07       	cpc	r21, r19
    7232:	44 f4       	brge	.+16     	; 0x7244 <fputc+0x38>
    7234:	a0 81       	ld	r26, Z
    7236:	b1 81       	ldd	r27, Z+1	; 0x01
    7238:	9d 01       	movw	r18, r26
    723a:	2f 5f       	subi	r18, 0xFF	; 255
    723c:	3f 4f       	sbci	r19, 0xFF	; 255
    723e:	31 83       	std	Z+1, r19	; 0x01
    7240:	20 83       	st	Z, r18
    7242:	8c 93       	st	X, r24
    7244:	26 81       	ldd	r18, Z+6	; 0x06
    7246:	37 81       	ldd	r19, Z+7	; 0x07
    7248:	2f 5f       	subi	r18, 0xFF	; 255
    724a:	3f 4f       	sbci	r19, 0xFF	; 255
    724c:	37 83       	std	Z+7, r19	; 0x07
    724e:	26 83       	std	Z+6, r18	; 0x06
    7250:	10 c0       	rjmp	.+32     	; 0x7272 <fputc+0x66>
    7252:	eb 01       	movw	r28, r22
    7254:	09 2f       	mov	r16, r25
    7256:	18 2f       	mov	r17, r24
    7258:	00 84       	ldd	r0, Z+8	; 0x08
    725a:	f1 85       	ldd	r31, Z+9	; 0x09
    725c:	e0 2d       	mov	r30, r0
    725e:	09 95       	icall
    7260:	89 2b       	or	r24, r25
    7262:	e1 f6       	brne	.-72     	; 0x721c <fputc+0x10>
    7264:	8e 81       	ldd	r24, Y+6	; 0x06
    7266:	9f 81       	ldd	r25, Y+7	; 0x07
    7268:	01 96       	adiw	r24, 0x01	; 1
    726a:	9f 83       	std	Y+7, r25	; 0x07
    726c:	8e 83       	std	Y+6, r24	; 0x06
    726e:	81 2f       	mov	r24, r17
    7270:	90 2f       	mov	r25, r16
    7272:	df 91       	pop	r29
    7274:	cf 91       	pop	r28
    7276:	1f 91       	pop	r17
    7278:	0f 91       	pop	r16
    727a:	08 95       	ret

0000727c <sprintf>:
    727c:	0f 93       	push	r16
    727e:	1f 93       	push	r17
    7280:	cf 93       	push	r28
    7282:	df 93       	push	r29
    7284:	cd b7       	in	r28, 0x3d	; 61
    7286:	de b7       	in	r29, 0x3e	; 62
    7288:	2e 97       	sbiw	r28, 0x0e	; 14
    728a:	0f b6       	in	r0, 0x3f	; 63
    728c:	f8 94       	cli
    728e:	de bf       	out	0x3e, r29	; 62
    7290:	0f be       	out	0x3f, r0	; 63
    7292:	cd bf       	out	0x3d, r28	; 61
    7294:	0d 89       	ldd	r16, Y+21	; 0x15
    7296:	1e 89       	ldd	r17, Y+22	; 0x16
    7298:	86 e0       	ldi	r24, 0x06	; 6
    729a:	8c 83       	std	Y+4, r24	; 0x04
    729c:	1a 83       	std	Y+2, r17	; 0x02
    729e:	09 83       	std	Y+1, r16	; 0x01
    72a0:	8f ef       	ldi	r24, 0xFF	; 255
    72a2:	9f e7       	ldi	r25, 0x7F	; 127
    72a4:	9e 83       	std	Y+6, r25	; 0x06
    72a6:	8d 83       	std	Y+5, r24	; 0x05
    72a8:	ae 01       	movw	r20, r28
    72aa:	47 5e       	subi	r20, 0xE7	; 231
    72ac:	5f 4f       	sbci	r21, 0xFF	; 255
    72ae:	6f 89       	ldd	r22, Y+23	; 0x17
    72b0:	78 8d       	ldd	r23, Y+24	; 0x18
    72b2:	ce 01       	movw	r24, r28
    72b4:	01 96       	adiw	r24, 0x01	; 1
    72b6:	c7 da       	rcall	.-2674   	; 0x6846 <vfprintf>
    72b8:	2f 81       	ldd	r18, Y+7	; 0x07
    72ba:	38 85       	ldd	r19, Y+8	; 0x08
    72bc:	f8 01       	movw	r30, r16
    72be:	e2 0f       	add	r30, r18
    72c0:	f3 1f       	adc	r31, r19
    72c2:	10 82       	st	Z, r1
    72c4:	2e 96       	adiw	r28, 0x0e	; 14
    72c6:	0f b6       	in	r0, 0x3f	; 63
    72c8:	f8 94       	cli
    72ca:	de bf       	out	0x3e, r29	; 62
    72cc:	0f be       	out	0x3f, r0	; 63
    72ce:	cd bf       	out	0x3d, r28	; 61
    72d0:	df 91       	pop	r29
    72d2:	cf 91       	pop	r28
    72d4:	1f 91       	pop	r17
    72d6:	0f 91       	pop	r16
    72d8:	08 95       	ret

000072da <__ultoa_invert>:
    72da:	fa 01       	movw	r30, r20
    72dc:	aa 27       	eor	r26, r26
    72de:	28 30       	cpi	r18, 0x08	; 8
    72e0:	51 f1       	breq	.+84     	; 0x7336 <__ultoa_invert+0x5c>
    72e2:	20 31       	cpi	r18, 0x10	; 16
    72e4:	81 f1       	breq	.+96     	; 0x7346 <__ultoa_invert+0x6c>
    72e6:	e8 94       	clt
    72e8:	6f 93       	push	r22
    72ea:	6e 7f       	andi	r22, 0xFE	; 254
    72ec:	6e 5f       	subi	r22, 0xFE	; 254
    72ee:	7f 4f       	sbci	r23, 0xFF	; 255
    72f0:	8f 4f       	sbci	r24, 0xFF	; 255
    72f2:	9f 4f       	sbci	r25, 0xFF	; 255
    72f4:	af 4f       	sbci	r26, 0xFF	; 255
    72f6:	b1 e0       	ldi	r27, 0x01	; 1
    72f8:	3e d0       	rcall	.+124    	; 0x7376 <__ultoa_invert+0x9c>
    72fa:	b4 e0       	ldi	r27, 0x04	; 4
    72fc:	3c d0       	rcall	.+120    	; 0x7376 <__ultoa_invert+0x9c>
    72fe:	67 0f       	add	r22, r23
    7300:	78 1f       	adc	r23, r24
    7302:	89 1f       	adc	r24, r25
    7304:	9a 1f       	adc	r25, r26
    7306:	a1 1d       	adc	r26, r1
    7308:	68 0f       	add	r22, r24
    730a:	79 1f       	adc	r23, r25
    730c:	8a 1f       	adc	r24, r26
    730e:	91 1d       	adc	r25, r1
    7310:	a1 1d       	adc	r26, r1
    7312:	6a 0f       	add	r22, r26
    7314:	71 1d       	adc	r23, r1
    7316:	81 1d       	adc	r24, r1
    7318:	91 1d       	adc	r25, r1
    731a:	a1 1d       	adc	r26, r1
    731c:	20 d0       	rcall	.+64     	; 0x735e <__ultoa_invert+0x84>
    731e:	09 f4       	brne	.+2      	; 0x7322 <__ultoa_invert+0x48>
    7320:	68 94       	set
    7322:	3f 91       	pop	r19
    7324:	2a e0       	ldi	r18, 0x0A	; 10
    7326:	26 9f       	mul	r18, r22
    7328:	11 24       	eor	r1, r1
    732a:	30 19       	sub	r19, r0
    732c:	30 5d       	subi	r19, 0xD0	; 208
    732e:	31 93       	st	Z+, r19
    7330:	de f6       	brtc	.-74     	; 0x72e8 <__ultoa_invert+0xe>
    7332:	cf 01       	movw	r24, r30
    7334:	08 95       	ret
    7336:	46 2f       	mov	r20, r22
    7338:	47 70       	andi	r20, 0x07	; 7
    733a:	40 5d       	subi	r20, 0xD0	; 208
    733c:	41 93       	st	Z+, r20
    733e:	b3 e0       	ldi	r27, 0x03	; 3
    7340:	0f d0       	rcall	.+30     	; 0x7360 <__ultoa_invert+0x86>
    7342:	c9 f7       	brne	.-14     	; 0x7336 <__ultoa_invert+0x5c>
    7344:	f6 cf       	rjmp	.-20     	; 0x7332 <__ultoa_invert+0x58>
    7346:	46 2f       	mov	r20, r22
    7348:	4f 70       	andi	r20, 0x0F	; 15
    734a:	40 5d       	subi	r20, 0xD0	; 208
    734c:	4a 33       	cpi	r20, 0x3A	; 58
    734e:	18 f0       	brcs	.+6      	; 0x7356 <__ultoa_invert+0x7c>
    7350:	49 5d       	subi	r20, 0xD9	; 217
    7352:	31 fd       	sbrc	r19, 1
    7354:	40 52       	subi	r20, 0x20	; 32
    7356:	41 93       	st	Z+, r20
    7358:	02 d0       	rcall	.+4      	; 0x735e <__ultoa_invert+0x84>
    735a:	a9 f7       	brne	.-22     	; 0x7346 <__ultoa_invert+0x6c>
    735c:	ea cf       	rjmp	.-44     	; 0x7332 <__ultoa_invert+0x58>
    735e:	b4 e0       	ldi	r27, 0x04	; 4
    7360:	a6 95       	lsr	r26
    7362:	97 95       	ror	r25
    7364:	87 95       	ror	r24
    7366:	77 95       	ror	r23
    7368:	67 95       	ror	r22
    736a:	ba 95       	dec	r27
    736c:	c9 f7       	brne	.-14     	; 0x7360 <__ultoa_invert+0x86>
    736e:	00 97       	sbiw	r24, 0x00	; 0
    7370:	61 05       	cpc	r22, r1
    7372:	71 05       	cpc	r23, r1
    7374:	08 95       	ret
    7376:	9b 01       	movw	r18, r22
    7378:	ac 01       	movw	r20, r24
    737a:	0a 2e       	mov	r0, r26
    737c:	06 94       	lsr	r0
    737e:	57 95       	ror	r21
    7380:	47 95       	ror	r20
    7382:	37 95       	ror	r19
    7384:	27 95       	ror	r18
    7386:	ba 95       	dec	r27
    7388:	c9 f7       	brne	.-14     	; 0x737c <__ultoa_invert+0xa2>
    738a:	62 0f       	add	r22, r18
    738c:	73 1f       	adc	r23, r19
    738e:	84 1f       	adc	r24, r20
    7390:	95 1f       	adc	r25, r21
    7392:	a0 1d       	adc	r26, r0
    7394:	08 95       	ret

00007396 <__do_global_dtors>:
    7396:	12 e0       	ldi	r17, 0x02	; 2
    7398:	c3 ea       	ldi	r28, 0xA3	; 163
    739a:	d2 e0       	ldi	r29, 0x02	; 2
    739c:	03 c0       	rjmp	.+6      	; 0x73a4 <__do_global_dtors+0xe>
    739e:	fe 01       	movw	r30, r28
    73a0:	23 de       	rcall	.-954    	; 0x6fe8 <__tablejump2__>
    73a2:	21 96       	adiw	r28, 0x01	; 1
    73a4:	c4 3a       	cpi	r28, 0xA4	; 164
    73a6:	d1 07       	cpc	r29, r17
    73a8:	d1 f7       	brne	.-12     	; 0x739e <__do_global_dtors+0x8>
    73aa:	f8 94       	cli

000073ac <__stop_program>:
    73ac:	ff cf       	rjmp	.-2      	; 0x73ac <__stop_program>
