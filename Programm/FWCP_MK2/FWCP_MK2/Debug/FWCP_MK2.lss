
FWCP_MK2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000244  00800100  0000699c  00006a30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000699c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000478  00800344  00800344  00006c74  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00006c74  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000428  00000000  00000000  00006cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000976a  00000000  00000000  000070f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000193a  00000000  00000000  00010862  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00003844  00000000  00000000  0001219c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000106c  00000000  00000000  000159e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001370  00000000  00000000  00016a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000071e6  00000000  00000000  00017dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000400  00000000  00000000  0001efa2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	d0 c2       	rjmp	.+1440   	; 0x5a2 <__dtors_end>
       2:	00 00       	nop
       4:	fd c2       	rjmp	.+1530   	; 0x600 <__bad_interrupt>
       6:	00 00       	nop
       8:	fb c2       	rjmp	.+1526   	; 0x600 <__bad_interrupt>
       a:	00 00       	nop
       c:	f9 c2       	rjmp	.+1522   	; 0x600 <__bad_interrupt>
       e:	00 00       	nop
      10:	f7 c2       	rjmp	.+1518   	; 0x600 <__bad_interrupt>
      12:	00 00       	nop
      14:	f5 c2       	rjmp	.+1514   	; 0x600 <__bad_interrupt>
      16:	00 00       	nop
      18:	f3 c2       	rjmp	.+1510   	; 0x600 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f1 c2       	rjmp	.+1506   	; 0x600 <__bad_interrupt>
      1e:	00 00       	nop
      20:	ef c2       	rjmp	.+1502   	; 0x600 <__bad_interrupt>
      22:	00 00       	nop
      24:	ed c2       	rjmp	.+1498   	; 0x600 <__bad_interrupt>
      26:	00 00       	nop
      28:	eb c2       	rjmp	.+1494   	; 0x600 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	0c 94 20 1b 	jmp	0x3640	; 0x3640 <__vector_11>
      30:	e7 c2       	rjmp	.+1486   	; 0x600 <__bad_interrupt>
      32:	00 00       	nop
      34:	e5 c2       	rjmp	.+1482   	; 0x600 <__bad_interrupt>
      36:	00 00       	nop
      38:	e3 c2       	rjmp	.+1478   	; 0x600 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	e1 c2       	rjmp	.+1474   	; 0x600 <__bad_interrupt>
      3e:	00 00       	nop
      40:	df c2       	rjmp	.+1470   	; 0x600 <__bad_interrupt>
      42:	00 00       	nop
      44:	dd c2       	rjmp	.+1466   	; 0x600 <__bad_interrupt>
      46:	00 00       	nop
      48:	db c2       	rjmp	.+1462   	; 0x600 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	d9 c2       	rjmp	.+1458   	; 0x600 <__bad_interrupt>
      4e:	00 00       	nop
      50:	d7 c2       	rjmp	.+1454   	; 0x600 <__bad_interrupt>
      52:	00 00       	nop
      54:	d5 c2       	rjmp	.+1450   	; 0x600 <__bad_interrupt>
      56:	00 00       	nop
      58:	d3 c2       	rjmp	.+1446   	; 0x600 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d1 c2       	rjmp	.+1442   	; 0x600 <__bad_interrupt>
      5e:	00 00       	nop
      60:	cf c2       	rjmp	.+1438   	; 0x600 <__bad_interrupt>
      62:	00 00       	nop
      64:	cd c2       	rjmp	.+1434   	; 0x600 <__bad_interrupt>
      66:	00 00       	nop
      68:	cb c2       	rjmp	.+1430   	; 0x600 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	c9 c2       	rjmp	.+1426   	; 0x600 <__bad_interrupt>
      6e:	00 00       	nop
      70:	c7 c2       	rjmp	.+1422   	; 0x600 <__bad_interrupt>
      72:	00 00       	nop
      74:	c5 c2       	rjmp	.+1418   	; 0x600 <__bad_interrupt>
      76:	00 00       	nop
      78:	c3 c2       	rjmp	.+1414   	; 0x600 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c1 c2       	rjmp	.+1410   	; 0x600 <__bad_interrupt>
      7e:	00 00       	nop
      80:	bf c2       	rjmp	.+1406   	; 0x600 <__bad_interrupt>
      82:	00 00       	nop
      84:	bd c2       	rjmp	.+1402   	; 0x600 <__bad_interrupt>
      86:	00 00       	nop
      88:	bb c2       	rjmp	.+1398   	; 0x600 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	71 18       	sub	r7, r1
      8e:	99 18       	sub	r9, r9
      90:	c3 18       	sub	r12, r3
      92:	ee 18       	sub	r14, r14
      94:	18 19       	sub	r17, r8
      96:	41 19       	sub	r20, r1
      98:	69 19       	sub	r22, r9
      9a:	92 19       	sub	r25, r2
      9c:	0a 1a       	sub	r0, r26
      9e:	35 1a       	sub	r3, r21
      a0:	15 1f       	adc	r17, r21
      a2:	20 1f       	adc	r18, r16
      a4:	26 1f       	adc	r18, r22
      a6:	2c 1f       	adc	r18, r28
      a8:	33 1f       	adc	r19, r19
      aa:	39 1f       	adc	r19, r25
      ac:	47 1f       	adc	r20, r23
      ae:	d6 1f       	adc	r29, r22
      b0:	dc 1f       	adc	r29, r28
      b2:	e2 1f       	adc	r30, r18
      b4:	e8 1f       	adc	r30, r24
      b6:	ee 1f       	adc	r30, r30
      b8:	f4 1f       	adc	r31, r20
      ba:	fa 1f       	adc	r31, r26
      bc:	00 20       	and	r0, r0
      be:	08 4a       	sbci	r16, 0xA8	; 168
      c0:	d7 3b       	cpi	r29, 0xB7	; 183
      c2:	3b ce       	rjmp	.-906    	; 0xfffffd3a <__eeprom_end+0xff7efd3a>
      c4:	01 6e       	ori	r16, 0xE1	; 225
      c6:	84 bc       	out	0x24, r8	; 36
      c8:	bf fd       	.word	0xfdbf	; ????
      ca:	c1 2f       	mov	r28, r17
      cc:	3d 6c       	ori	r19, 0xCD	; 205
      ce:	74 31       	cpi	r23, 0x14	; 20
      d0:	9a bd       	out	0x2a, r25	; 42
      d2:	56 83       	std	Z+6, r21	; 0x06
      d4:	3d da       	rcall	.-2950   	; 0xfffff550 <__eeprom_end+0xff7ef550>
      d6:	3d 00       	.word	0x003d	; ????
      d8:	c7 7f       	andi	r28, 0xF7	; 247
      da:	11 be       	out	0x31, r1	; 49
      dc:	d9 e4       	ldi	r29, 0x49	; 73
      de:	bb 4c       	sbci	r27, 0xCB	; 203
      e0:	3e 91       	ld	r19, -X
      e2:	6b aa       	std	Y+51, r6	; 0x33
      e4:	aa be       	out	0x3a, r10	; 58
      e6:	00 00       	nop
      e8:	00 80       	ld	r0, Z
      ea:	3f 05       	cpc	r19, r15
      ec:	a8 4c       	sbci	r26, 0xC8	; 200
      ee:	cd b2       	in	r12, 0x1d	; 29
      f0:	d4 4e       	sbci	r29, 0xE4	; 228
      f2:	b9 38       	cpi	r27, 0x89	; 137
      f4:	36 a9       	ldd	r19, Z+54	; 0x36
      f6:	02 0c       	add	r0, r2
      f8:	50 b9       	out	0x00, r21	; 0
      fa:	91 86       	std	Z+9, r9	; 0x09
      fc:	88 08       	sbc	r8, r8
      fe:	3c a6       	std	Y+44, r3	; 0x2c
     100:	aa aa       	std	Y+50, r10	; 0x32
     102:	2a be       	out	0x3a, r2	; 58
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	3f 08       	sbc	r3, r15
     10a:	00 00       	nop
     10c:	00 be       	out	0x30, r0	; 48
     10e:	92 24       	eor	r9, r2
     110:	49 12       	cpse	r4, r25
     112:	3e ab       	std	Y+54, r19	; 0x36
     114:	aa aa       	std	Y+50, r10	; 0x32
     116:	2a be       	out	0x3a, r2	; 58
     118:	cd cc       	rjmp	.-1638   	; 0xfffffab4 <__eeprom_end+0xff7efab4>
     11a:	cc 4c       	sbci	r28, 0xCC	; 204
     11c:	3e 00       	.word	0x003e	; ????
     11e:	00 00       	nop
     120:	80 be       	out	0x30, r8	; 48
     122:	ab aa       	std	Y+51, r10	; 0x33
     124:	aa aa       	std	Y+50, r10	; 0x32
     126:	3e 00       	.word	0x003e	; ????
     128:	00 00       	nop
     12a:	00 bf       	out	0x30, r16	; 48
     12c:	00 00       	nop
     12e:	00 80       	ld	r0, Z
     130:	3f 00       	.word	0x003f	; ????
     132:	00 00       	nop
     134:	00 00       	nop
     136:	08 41       	sbci	r16, 0x18	; 24
     138:	78 d3       	rcall	.+1776   	; 0x82a <_ZN7Display9drawVLineEhhh+0x1e>
     13a:	bb 43       	sbci	r27, 0x3B	; 59
     13c:	87 d1       	rcall	.+782    	; 0x44c <_ZL7font5x8+0x186>
     13e:	13 3d       	cpi	r17, 0xD3	; 211
     140:	19 0e       	add	r1, r25
     142:	3c c3       	rjmp	.+1656   	; 0x7bc <_ZN7Display9drawPixelEhhh+0x24>
     144:	bd 42       	sbci	r27, 0x2D	; 45
     146:	82 ad       	ldd	r24, Z+58	; 0x3a
     148:	2b 3e       	cpi	r18, 0xEB	; 235
     14a:	68 ec       	ldi	r22, 0xC8	; 200
     14c:	82 76       	andi	r24, 0x62	; 98
     14e:	be d9       	rcall	.-3204   	; 0xfffff4cc <__eeprom_end+0xff7ef4cc>
     150:	8f e1       	ldi	r24, 0x1F	; 31
     152:	a9 3e       	cpi	r26, 0xE9	; 233
     154:	4c 80       	ldd	r4, Y+4	; 0x04
     156:	ef ff       	.word	0xffef	; ????
     158:	be 01       	movw	r22, r28
     15a:	c4 ff       	sbrs	r28, 4
     15c:	7f 3f       	cpi	r23, 0xFF	; 255
     15e:	00 00       	nop
     160:	00 00       	nop
     162:	00 06       	cpc	r0, r16
     164:	64 ec       	ldi	r22, 0xC4	; 196
     166:	1b 3c       	cpi	r17, 0xCB	; 203
     168:	04 bc       	out	0x24, r0	; 36
     16a:	16 3e       	cpi	r17, 0xE6	; 230
     16c:	3b e5       	ldi	r19, 0x5B	; 91
     16e:	b9 3c       	cpi	r27, 0xC9	; 201
     170:	c9 3c       	cpi	r28, 0xC9	; 201
     172:	37 c2       	rjmp	.+1134   	; 0x5e2 <__do_global_ctors+0xa>
     174:	9e 5a       	subi	r25, 0xAE	; 174
     176:	3d 66       	ori	r19, 0x6D	; 109
     178:	04 98       	cbi	0x00, 4	; 0
     17a:	08 3e       	cpi	r16, 0xE8	; 232
     17c:	ea 69       	ori	r30, 0x9A	; 154
     17e:	aa aa       	std	Y+50, r10	; 0x32
     180:	3e 00       	.word	0x003e	; ????
     182:	00 00       	nop
     184:	80 3f       	cpi	r24, 0xF0	; 240

00000186 <__trampolines_end>:
     186:	00 e0       	ldi	r16, 0x00	; 0
     188:	f8 fc       	.word	0xfcf8	; ????
     18a:	fe 1e       	adc	r15, r30
     18c:	07 07       	cpc	r16, r23
     18e:	07 07       	cpc	r16, r23
     190:	1e fe       	.word	0xfe1e	; ????
     192:	fc f8       	.word	0xf8fc	; ????
     194:	f0 00       	.word	0x00f0	; ????
     196:	00 07       	cpc	r16, r16
     198:	0f 3f       	cpi	r16, 0xFF	; 255
     19a:	3f 7c       	andi	r19, 0xCF	; 207
     19c:	70 70       	andi	r23, 0x00	; 0
     19e:	70 70       	andi	r23, 0x00	; 0
     1a0:	7c 3f       	cpi	r23, 0xFC	; 252
     1a2:	1f 1f       	adc	r17, r31
     1a4:	07 00       	.word	0x0007	; ????
     1a6:	00 00       	nop
     1a8:	00 06       	cpc	r0, r16
     1aa:	07 07       	cpc	r16, r23
     1ac:	ff ff       	.word	0xffff	; ????
     1ae:	ff ff       	.word	0xffff	; ????
	...
     1bc:	7f 7f       	andi	r23, 0xFF	; 255
     1be:	7f 7f       	andi	r23, 0xFF	; 255
     1c0:	00 00       	nop
     1c2:	00 00       	nop
     1c4:	00 00       	nop
     1c6:	00 38       	cpi	r16, 0x80	; 128
     1c8:	3c 3e       	cpi	r19, 0xEC	; 236
     1ca:	3e 0f       	add	r19, r30
     1cc:	07 07       	cpc	r16, r23
     1ce:	07 cf       	rjmp	.-498    	; 0xffffffde <__eeprom_end+0xff7effde>
     1d0:	ff fe       	.word	0xfeff	; ????
     1d2:	fe 38       	cpi	r31, 0x8E	; 142
     1d4:	00 00       	nop
     1d6:	00 40       	sbci	r16, 0x00	; 0
     1d8:	40 60       	ori	r20, 0x00	; 0
     1da:	70 78       	andi	r23, 0x80	; 128
     1dc:	7c 7e       	andi	r23, 0xEC	; 236
     1de:	7f 77       	andi	r23, 0x7F	; 127
     1e0:	73 71       	andi	r23, 0x13	; 19
     1e2:	70 70       	andi	r23, 0x00	; 0
     1e4:	00 00       	nop
     1e6:	00 18       	sub	r0, r0
     1e8:	1c 1e       	adc	r1, r28
     1ea:	1e 0f       	add	r17, r30
     1ec:	c7 c7       	rjmp	.+3982   	; 0x117c <_ZN7Display6analogEhhhh+0x3fc>
     1ee:	e7 ff       	sbrs	r30, 7
     1f0:	fe be       	out	0x3e, r15	; 62
     1f2:	9c 00       	.word	0x009c	; ????
     1f4:	00 00       	nop
     1f6:	00 0c       	add	r0, r0
     1f8:	1c 3c       	cpi	r17, 0xCC	; 204
     1fa:	3c 78       	andi	r19, 0x8C	; 140
     1fc:	70 70       	andi	r23, 0x00	; 0
     1fe:	70 79       	andi	r23, 0x90	; 144
     200:	7f 3f       	cpi	r23, 0xFF	; 255
     202:	1f 0f       	add	r17, r31
     204:	00 00       	nop
     206:	00 00       	nop
     208:	80 c0       	rjmp	.+256    	; 0x30a <_ZL7font5x8+0x44>
     20a:	e0 70       	andi	r30, 0x00	; 0
     20c:	38 1c       	adc	r3, r8
     20e:	1e ff       	.word	0xff1e	; ????
     210:	ff ff       	.word	0xffff	; ????
     212:	ff 00       	.word	0x00ff	; ????
     214:	00 00       	nop
     216:	06 07       	cpc	r16, r22
     218:	07 07       	cpc	r16, r23
     21a:	06 06       	cpc	r0, r22
     21c:	06 06       	cpc	r0, r22
     21e:	06 7f       	andi	r16, 0xF6	; 246
     220:	7f 7f       	andi	r23, 0xFF	; 255
     222:	7f 06       	cpc	r7, r31
     224:	06 00       	.word	0x0006	; ????
     226:	00 00       	nop
     228:	00 00       	nop
     22a:	f0 ff       	sbrs	r31, 0
     22c:	ff ff       	.word	0xffff	; ????
     22e:	e7 e7       	ldi	r30, 0x77	; 119
     230:	e7 e7       	ldi	r30, 0x77	; 119
     232:	c7 87       	std	Z+15, r28	; 0x0f
     234:	00 00       	nop
     236:	00 00       	nop
     238:	38 78       	andi	r19, 0x88	; 136
     23a:	71 70       	andi	r23, 0x01	; 1
     23c:	70 70       	andi	r23, 0x00	; 0
     23e:	70 70       	andi	r23, 0x00	; 0
     240:	39 3f       	cpi	r19, 0xF9	; 249
     242:	3f 1f       	adc	r19, r31
     244:	0f 00       	.word	0x000f	; ????
     246:	00 80       	ld	r0, Z
     248:	e0 f0       	brcs	.+56     	; 0x282 <__trampolines_end+0xfc>
     24a:	f8 fc       	.word	0xfcf8	; ????
     24c:	7f 7f       	andi	r23, 0xFF	; 255
     24e:	6f 67       	ori	r22, 0x7F	; 127
     250:	e1 e1       	ldi	r30, 0x11	; 17
     252:	c0 80       	ld	r12, Z
     254:	00 00       	nop
     256:	00 0f       	add	r16, r16
     258:	1f 3f       	cpi	r17, 0xFF	; 255
     25a:	3f 78       	andi	r19, 0x8F	; 143
     25c:	70 70       	andi	r23, 0x00	; 0
     25e:	70 70       	andi	r23, 0x00	; 0
     260:	78 3f       	cpi	r23, 0xF8	; 248
     262:	3f 1f       	adc	r19, r31
     264:	0f 00       	.word	0x000f	; ????
     266:	00 07       	cpc	r16, r16
     268:	07 07       	cpc	r16, r23
     26a:	07 07       	cpc	r16, r23
     26c:	c7 e7       	ldi	r28, 0x77	; 119
     26e:	f7 ff       	sbrs	r31, 7
     270:	7f 3f       	cpi	r23, 0xFF	; 255
     272:	1f 07       	cpc	r17, r31
     274:	03 01       	movw	r0, r6
     276:	00 20       	and	r0, r0
     278:	38 7c       	andi	r19, 0xC8	; 200
     27a:	7e 3f       	cpi	r23, 0xFE	; 254
     27c:	0f 07       	cpc	r16, r31
     27e:	03 00       	.word	0x0003	; ????
	...
     288:	00 1c       	adc	r0, r0
     28a:	be fe       	.word	0xfebe	; ????
     28c:	ff e7       	ldi	r31, 0x7F	; 127
     28e:	c3 c3       	rjmp	.+1926   	; 0xa16 <_ZN7Display13draw_triangleEhhhff+0x5e>
     290:	e7 ff       	sbrs	r30, 7
     292:	fe be       	out	0x3e, r15	; 62
     294:	1c 00       	.word	0x001c	; ????
     296:	00 00       	nop
     298:	0e 3f       	cpi	r16, 0xFE	; 254
     29a:	3f 7f       	andi	r19, 0xFF	; 255
     29c:	71 60       	ori	r23, 0x01	; 1
     29e:	60 60       	ori	r22, 0x00	; 0
     2a0:	71 7f       	andi	r23, 0xF1	; 241
     2a2:	3f 3f       	cpi	r19, 0xFF	; 255
     2a4:	0f 00       	.word	0x000f	; ????
     2a6:	00 78       	andi	r16, 0x80	; 128
     2a8:	fc fe       	.word	0xfefc	; ????
     2aa:	fe 8f       	std	Y+30, r31	; 0x1e
     2ac:	07 07       	cpc	r16, r23
     2ae:	07 07       	cpc	r16, r23
     2b0:	8f fe       	.word	0xfe8f	; ????
     2b2:	fe fc       	.word	0xfcfe	; ????
     2b4:	f8 00       	.word	0x00f8	; ????
     2b6:	00 00       	nop
     2b8:	00 01       	movw	r0, r0
     2ba:	43 43       	sbci	r20, 0x33	; 51
     2bc:	73 7b       	andi	r23, 0xB3	; 179
     2be:	7f 7f       	andi	r23, 0xFF	; 255
     2c0:	1f 0f       	add	r17, r31
     2c2:	07 03       	mulsu	r16, r23
	...

000002c6 <_ZL7font5x8>:
     2c6:	00 00 5f 00 00 00 07 00 07 00 14 7f 14 7f 14 24     .._............$
     2d6:	2a 7f 2a 12 23 13 08 64 62 36 49 55 22 50 00 05     *.*.#..db6IU"P..
     2e6:	03 00 00 00 1c 22 41 00 00 41 22 1c 00 14 08 3e     ....."A..A"....>
     2f6:	08 14 08 08 3e 08 08 00 50 30 00 00 08 08 08 08     ....>...P0......
     306:	08 00 60 60 00 00 20 10 08 04 02 3e 51 49 45 3e     ..``.. ....>QIE>
     316:	00 42 7f 40 00 42 61 51 49 46 21 41 45 4b 31 18     .B.@.BaQIF!AEK1.
     326:	14 12 7f 10 27 45 45 45 39 3c 4a 49 49 30 01 71     ....'EEE9<JII0.q
     336:	09 05 03 36 49 49 49 36 06 49 49 29 1e 00 36 36     ...6III6.II)..66
     346:	00 00 00 56 36 00 00 08 14 22 41 00 14 14 14 14     ...V6...."A.....
     356:	14 00 41 22 14 08 02 01 51 09 06 32 49 79 41 3e     ..A"....Q..2IyA>
     366:	7e 11 11 11 7e 7f 49 49 49 36 3e 41 41 41 22 7f     ~...~.III6>AAA".
     376:	41 41 22 1c 7f 49 49 49 41 7f 09 09 09 01 3e 41     AA"..IIIA.....>A
     386:	49 49 7a 7f 08 08 08 7f 00 41 7f 41 00 20 40 41     IIz......A.A. @A
     396:	3f 01 7f 08 14 22 41 7f 40 40 40 40 7f 02 0c 02     ?...."A.@@@@....
     3a6:	7f 7f 04 08 10 7f 3e 41 41 41 3e 7f 09 09 09 06     ......>AAA>.....
     3b6:	3e 41 51 21 5e 7f 09 19 29 46 46 49 49 49 31 01     >AQ!^...)FFIII1.
     3c6:	01 7f 01 01 3f 40 40 40 3f 1f 20 40 20 1f 3f 40     ....?@@@?. @ .?@
     3d6:	38 40 3f 63 14 08 14 63 07 08 70 08 07 61 51 49     8@?c...c..p..aQI
     3e6:	45 43 00 7f 41 41 00 02 04 08 10 20 00 41 41 7f     EC..AA..... .AA.
     3f6:	00 04 02 01 02 04 40 40 40 40 40 00 01 02 04 00     ......@@@@@.....
     406:	20 54 54 54 78 7f 48 44 44 38 38 44 44 44 20 38      TTTx.HDD88DDD 8
     416:	44 44 48 7f 38 54 54 54 18 08 7e 09 01 02 0c 52     DDH.8TTT..~....R
     426:	52 52 3e 7f 08 04 04 78 00 44 7d 40 00 20 40 44     RR>....x.D}@. @D
     436:	3d 00 7f 10 28 44 00 00 41 7f 40 00 7c 04 18 04     =...(D..A.@.|...
     446:	78 7c 08 04 04 78 38 44 44 44 38 7c 14 14 14 08     x|...x8DDD8|....
     456:	08 14 14 18 7c 7c 08 04 04 08 48 54 54 54 20 04     ....||....HTTT .
     466:	3f 44 40 20 3c 40 40 20 7c 1c 20 40 20 1c 3c 40     ?D@ <@@ |. @ .<@
     476:	30 40 3c 44 28 10 28 44 0c 50 50 50 3c 44 64 54     0@<D(.(D.PPP<DdT
     486:	4c 44 00 08 36 41 00 00 00 7f 00 00 00 41 36 08     LD..6A.......A6.
     496:	00 10 08 08 10 08                                   ......

0000049c <__c.2161>:
     49c:	6e 61 6e 00                                         nan.

000004a0 <__c.2159>:
     4a0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     4b0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     4c0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     4d0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     4e0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     4f0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     500:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     510:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     520:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     530:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     540:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     550:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     560:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     570:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     580:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     590:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000059e <__ctors_start>:
     59e:	f5 22       	and	r15, r21

000005a0 <__ctors_end>:
     5a0:	1e 23       	and	r17, r30

000005a2 <__dtors_end>:
     5a2:	11 24       	eor	r1, r1
     5a4:	1f be       	out	0x3f, r1	; 63
     5a6:	cf ef       	ldi	r28, 0xFF	; 255
     5a8:	d0 e4       	ldi	r29, 0x40	; 64
     5aa:	de bf       	out	0x3e, r29	; 62
     5ac:	cd bf       	out	0x3d, r28	; 61

000005ae <__do_copy_data>:
     5ae:	13 e0       	ldi	r17, 0x03	; 3
     5b0:	a0 e0       	ldi	r26, 0x00	; 0
     5b2:	b1 e0       	ldi	r27, 0x01	; 1
     5b4:	ec e9       	ldi	r30, 0x9C	; 156
     5b6:	f9 e6       	ldi	r31, 0x69	; 105
     5b8:	00 e0       	ldi	r16, 0x00	; 0
     5ba:	0b bf       	out	0x3b, r16	; 59
     5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <__do_copy_data+0x14>
     5be:	07 90       	elpm	r0, Z+
     5c0:	0d 92       	st	X+, r0
     5c2:	a4 34       	cpi	r26, 0x44	; 68
     5c4:	b1 07       	cpc	r27, r17
     5c6:	d9 f7       	brne	.-10     	; 0x5be <__do_copy_data+0x10>

000005c8 <__do_clear_bss>:
     5c8:	27 e0       	ldi	r18, 0x07	; 7
     5ca:	a4 e4       	ldi	r26, 0x44	; 68
     5cc:	b3 e0       	ldi	r27, 0x03	; 3
     5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <.do_clear_bss_start>

000005d0 <.do_clear_bss_loop>:
     5d0:	1d 92       	st	X+, r1

000005d2 <.do_clear_bss_start>:
     5d2:	ac 3b       	cpi	r26, 0xBC	; 188
     5d4:	b2 07       	cpc	r27, r18
     5d6:	e1 f7       	brne	.-8      	; 0x5d0 <.do_clear_bss_loop>

000005d8 <__do_global_ctors>:
     5d8:	15 e0       	ldi	r17, 0x05	; 5
     5da:	c0 ea       	ldi	r28, 0xA0	; 160
     5dc:	d5 e0       	ldi	r29, 0x05	; 5
     5de:	00 e0       	ldi	r16, 0x00	; 0
     5e0:	06 c0       	rjmp	.+12     	; 0x5ee <__do_global_ctors+0x16>
     5e2:	22 97       	sbiw	r28, 0x02	; 2
     5e4:	01 09       	sbc	r16, r1
     5e6:	fe 01       	movw	r30, r28
     5e8:	0b bf       	out	0x3b, r16	; 59
     5ea:	0e 94 0d 33 	call	0x661a	; 0x661a <__tablejump_elpm__>
     5ee:	ce 39       	cpi	r28, 0x9E	; 158
     5f0:	d1 07       	cpc	r29, r17
     5f2:	80 e0       	ldi	r24, 0x00	; 0
     5f4:	08 07       	cpc	r16, r24
     5f6:	a9 f7       	brne	.-22     	; 0x5e2 <__do_global_ctors+0xa>
     5f8:	0e 94 ed 22 	call	0x45da	; 0x45da <main>
     5fc:	0c 94 bd 34 	jmp	0x697a	; 0x697a <__do_global_dtors>

00000600 <__bad_interrupt>:
     600:	ff cc       	rjmp	.-1538   	; 0x0 <__vectors>

00000602 <_ZN7DisplayD1Ev>:
		for (uint8_t j = 0;j<64;j++)
		{
			Displayframe[i*SSD1306_WIDTH+j]=pgm_read_byte(&Glurak[i][j]);
		}
	}
}
     602:	9c 5f       	subi	r25, 0xFC	; 252
     604:	0c 94 42 23 	jmp	0x4684	; 0x4684 <_ZN3I2CD1Ev>
     608:	08 95       	ret

0000060a <_ZN7Display10clearFrameEv>:
     60a:	fc 01       	movw	r30, r24
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	11 92       	st	Z+, r1
     612:	2f 5f       	subi	r18, 0xFF	; 255
     614:	3f 4f       	sbci	r19, 0xFF	; 255
     616:	21 15       	cp	r18, r1
     618:	84 e0       	ldi	r24, 0x04	; 4
     61a:	38 07       	cpc	r19, r24
     61c:	c9 f7       	brne	.-14     	; 0x610 <_ZN7Display10clearFrameEv+0x6>
     61e:	08 95       	ret

00000620 <_ZN7Display15ssd1306_commandEh>:
     620:	1f 93       	push	r17
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	16 2f       	mov	r17, r22
     628:	ec 01       	movw	r28, r24
     62a:	dc 5f       	subi	r29, 0xFC	; 252
     62c:	ce 01       	movw	r24, r28
     62e:	0e 94 43 23 	call	0x4686	; 0x4686 <_ZN3I2C9twi_startEv>
     632:	68 e7       	ldi	r22, 0x78	; 120
     634:	ce 01       	movw	r24, r28
     636:	0e 94 4b 23 	call	0x4696	; 0x4696 <_ZN3I2C9twi_writeEh>
     63a:	60 e0       	ldi	r22, 0x00	; 0
     63c:	ce 01       	movw	r24, r28
     63e:	0e 94 4b 23 	call	0x4696	; 0x4696 <_ZN3I2C9twi_writeEh>
     642:	61 2f       	mov	r22, r17
     644:	ce 01       	movw	r24, r28
     646:	0e 94 4b 23 	call	0x4696	; 0x4696 <_ZN3I2C9twi_writeEh>
     64a:	ce 01       	movw	r24, r28
     64c:	0e 94 47 23 	call	0x468e	; 0x468e <_ZN3I2C8twi_stopEv>
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	08 95       	ret

00000658 <_ZN7Display17InitializeDisplayEv>:
     658:	cf 93       	push	r28
     65a:	df 93       	push	r29
     65c:	ec 01       	movw	r28, r24
     65e:	6e ea       	ldi	r22, 0xAE	; 174
     660:	df df       	rcall	.-66     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     662:	65 ed       	ldi	r22, 0xD5	; 213
     664:	ce 01       	movw	r24, r28
     666:	dc df       	rcall	.-72     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     668:	60 e8       	ldi	r22, 0x80	; 128
     66a:	ce 01       	movw	r24, r28
     66c:	d9 df       	rcall	.-78     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     66e:	68 ea       	ldi	r22, 0xA8	; 168
     670:	ce 01       	movw	r24, r28
     672:	d6 df       	rcall	.-84     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     674:	6f e3       	ldi	r22, 0x3F	; 63
     676:	ce 01       	movw	r24, r28
     678:	d3 df       	rcall	.-90     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     67a:	63 ed       	ldi	r22, 0xD3	; 211
     67c:	ce 01       	movw	r24, r28
     67e:	d0 df       	rcall	.-96     	; 0x620 <_ZN7Display15ssd1306_commandEh>
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	ce 01       	movw	r24, r28
     684:	cd df       	rcall	.-102    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     686:	60 e4       	ldi	r22, 0x40	; 64
     688:	ce 01       	movw	r24, r28
     68a:	ca df       	rcall	.-108    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     68c:	6d e8       	ldi	r22, 0x8D	; 141
     68e:	ce 01       	movw	r24, r28
     690:	c7 df       	rcall	.-114    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     692:	64 e1       	ldi	r22, 0x14	; 20
     694:	ce 01       	movw	r24, r28
     696:	c4 df       	rcall	.-120    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     698:	60 e2       	ldi	r22, 0x20	; 32
     69a:	ce 01       	movw	r24, r28
     69c:	c1 df       	rcall	.-126    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	ce 01       	movw	r24, r28
     6a2:	be df       	rcall	.-132    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6a4:	61 ea       	ldi	r22, 0xA1	; 161
     6a6:	ce 01       	movw	r24, r28
     6a8:	bb df       	rcall	.-138    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6aa:	68 ec       	ldi	r22, 0xC8	; 200
     6ac:	ce 01       	movw	r24, r28
     6ae:	b8 df       	rcall	.-144    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6b0:	6a ed       	ldi	r22, 0xDA	; 218
     6b2:	ce 01       	movw	r24, r28
     6b4:	b5 df       	rcall	.-150    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6b6:	62 e1       	ldi	r22, 0x12	; 18
     6b8:	ce 01       	movw	r24, r28
     6ba:	b2 df       	rcall	.-156    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6bc:	61 e8       	ldi	r22, 0x81	; 129
     6be:	ce 01       	movw	r24, r28
     6c0:	af df       	rcall	.-162    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6c2:	6f ec       	ldi	r22, 0xCF	; 207
     6c4:	ce 01       	movw	r24, r28
     6c6:	ac df       	rcall	.-168    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6c8:	69 ed       	ldi	r22, 0xD9	; 217
     6ca:	ce 01       	movw	r24, r28
     6cc:	a9 df       	rcall	.-174    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6ce:	61 ef       	ldi	r22, 0xF1	; 241
     6d0:	ce 01       	movw	r24, r28
     6d2:	a6 df       	rcall	.-180    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6d4:	6b ed       	ldi	r22, 0xDB	; 219
     6d6:	ce 01       	movw	r24, r28
     6d8:	a3 df       	rcall	.-186    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6da:	60 e4       	ldi	r22, 0x40	; 64
     6dc:	ce 01       	movw	r24, r28
     6de:	a0 df       	rcall	.-192    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6e0:	64 ea       	ldi	r22, 0xA4	; 164
     6e2:	ce 01       	movw	r24, r28
     6e4:	9d df       	rcall	.-198    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6e6:	66 ea       	ldi	r22, 0xA6	; 166
     6e8:	ce 01       	movw	r24, r28
     6ea:	9a df       	rcall	.-204    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6ec:	6f ea       	ldi	r22, 0xAF	; 175
     6ee:	ce 01       	movw	r24, r28
     6f0:	97 df       	rcall	.-210    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <_ZN7DisplayC1Ev>:
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	ec 01       	movw	r28, r24
     6fe:	9c 5f       	subi	r25, 0xFC	; 252
     700:	0e 94 3e 23 	call	0x467c	; 0x467c <_ZN3I2CC1Ev>
     704:	ce 01       	movw	r24, r28
     706:	a8 df       	rcall	.-176    	; 0x658 <_ZN7Display17InitializeDisplayEv>
     708:	df 91       	pop	r29
     70a:	cf 91       	pop	r28
     70c:	08 95       	ret

0000070e <_ZN7Display6invertEh>:
     70e:	66 23       	and	r22, r22
     710:	19 f0       	breq	.+6      	; 0x718 <_ZN7Display6invertEh+0xa>
     712:	67 ea       	ldi	r22, 0xA7	; 167
     714:	85 cf       	rjmp	.-246    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     716:	08 95       	ret
     718:	66 ea       	ldi	r22, 0xA6	; 166
     71a:	82 cf       	rjmp	.-252    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     71c:	08 95       	ret

0000071e <_ZN7Display9sendFrameEv>:
     71e:	ef 92       	push	r14
     720:	ff 92       	push	r15
     722:	0f 93       	push	r16
     724:	1f 93       	push	r17
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	8c 01       	movw	r16, r24
     72c:	61 e2       	ldi	r22, 0x21	; 33
     72e:	78 df       	rcall	.-272    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     730:	60 e0       	ldi	r22, 0x00	; 0
     732:	c8 01       	movw	r24, r16
     734:	75 df       	rcall	.-278    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     736:	6f e7       	ldi	r22, 0x7F	; 127
     738:	c8 01       	movw	r24, r16
     73a:	72 df       	rcall	.-284    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     73c:	62 e2       	ldi	r22, 0x22	; 34
     73e:	c8 01       	movw	r24, r16
     740:	6f df       	rcall	.-290    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	c8 01       	movw	r24, r16
     746:	6c df       	rcall	.-296    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     748:	67 e0       	ldi	r22, 0x07	; 7
     74a:	c8 01       	movw	r24, r16
     74c:	69 df       	rcall	.-302    	; 0x620 <_ZN7Display15ssd1306_commandEh>
     74e:	78 01       	movw	r14, r16
     750:	8c ef       	ldi	r24, 0xFC	; 252
     752:	f8 1a       	sub	r15, r24
     754:	c7 01       	movw	r24, r14
     756:	0e 94 43 23 	call	0x4686	; 0x4686 <_ZN3I2C9twi_startEv>
     75a:	68 e7       	ldi	r22, 0x78	; 120
     75c:	c7 01       	movw	r24, r14
     75e:	0e 94 4b 23 	call	0x4696	; 0x4696 <_ZN3I2C9twi_writeEh>
     762:	60 e4       	ldi	r22, 0x40	; 64
     764:	c7 01       	movw	r24, r14
     766:	0e 94 4b 23 	call	0x4696	; 0x4696 <_ZN3I2C9twi_writeEh>
     76a:	c0 e0       	ldi	r28, 0x00	; 0
     76c:	d0 e0       	ldi	r29, 0x00	; 0
     76e:	f8 01       	movw	r30, r16
     770:	61 91       	ld	r22, Z+
     772:	8f 01       	movw	r16, r30
     774:	c7 01       	movw	r24, r14
     776:	0e 94 4b 23 	call	0x4696	; 0x4696 <_ZN3I2C9twi_writeEh>
     77a:	21 96       	adiw	r28, 0x01	; 1
     77c:	c1 15       	cp	r28, r1
     77e:	f4 e0       	ldi	r31, 0x04	; 4
     780:	df 07       	cpc	r29, r31
     782:	a9 f7       	brne	.-22     	; 0x76e <_ZN7Display9sendFrameEv+0x50>
     784:	c7 01       	movw	r24, r14
     786:	0e 94 47 23 	call	0x468e	; 0x468e <_ZN3I2C8twi_stopEv>
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	1f 91       	pop	r17
     790:	0f 91       	pop	r16
     792:	ff 90       	pop	r15
     794:	ef 90       	pop	r14
     796:	08 95       	ret

00000798 <_ZN7Display9drawPixelEhhh>:
     798:	66 23       	and	r22, r22
     79a:	bc f1       	brlt	.+110    	; 0x80a <_ZN7Display9drawPixelEhhh+0x72>
     79c:	40 34       	cpi	r20, 0x40	; 64
     79e:	a8 f5       	brcc	.+106    	; 0x80a <_ZN7Display9drawPixelEhhh+0x72>
     7a0:	21 11       	cpse	r18, r1
     7a2:	19 c0       	rjmp	.+50     	; 0x7d6 <_ZN7Display9drawPixelEhhh+0x3e>
     7a4:	e4 2f       	mov	r30, r20
     7a6:	e6 95       	lsr	r30
     7a8:	e6 95       	lsr	r30
     7aa:	e6 95       	lsr	r30
     7ac:	20 e8       	ldi	r18, 0x80	; 128
     7ae:	e2 9f       	mul	r30, r18
     7b0:	f0 01       	movw	r30, r0
     7b2:	11 24       	eor	r1, r1
     7b4:	e6 0f       	add	r30, r22
     7b6:	f1 1d       	adc	r31, r1
     7b8:	e8 0f       	add	r30, r24
     7ba:	f9 1f       	adc	r31, r25
     7bc:	47 70       	andi	r20, 0x07	; 7
     7be:	21 e0       	ldi	r18, 0x01	; 1
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	c9 01       	movw	r24, r18
     7c4:	02 c0       	rjmp	.+4      	; 0x7ca <_ZN7Display9drawPixelEhhh+0x32>
     7c6:	88 0f       	add	r24, r24
     7c8:	99 1f       	adc	r25, r25
     7ca:	4a 95       	dec	r20
     7cc:	e2 f7       	brpl	.-8      	; 0x7c6 <_ZN7Display9drawPixelEhhh+0x2e>
     7ce:	90 81       	ld	r25, Z
     7d0:	89 2b       	or	r24, r25
     7d2:	80 83       	st	Z, r24
     7d4:	08 95       	ret
     7d6:	e4 2f       	mov	r30, r20
     7d8:	e6 95       	lsr	r30
     7da:	e6 95       	lsr	r30
     7dc:	e6 95       	lsr	r30
     7de:	30 e8       	ldi	r19, 0x80	; 128
     7e0:	e3 9f       	mul	r30, r19
     7e2:	f0 01       	movw	r30, r0
     7e4:	11 24       	eor	r1, r1
     7e6:	e6 0f       	add	r30, r22
     7e8:	f1 1d       	adc	r31, r1
     7ea:	e8 0f       	add	r30, r24
     7ec:	f9 1f       	adc	r31, r25
     7ee:	47 70       	andi	r20, 0x07	; 7
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	9c 01       	movw	r18, r24
     7f6:	02 c0       	rjmp	.+4      	; 0x7fc <_ZN7Display9drawPixelEhhh+0x64>
     7f8:	22 0f       	add	r18, r18
     7fa:	33 1f       	adc	r19, r19
     7fc:	4a 95       	dec	r20
     7fe:	e2 f7       	brpl	.-8      	; 0x7f8 <_ZN7Display9drawPixelEhhh+0x60>
     800:	a9 01       	movw	r20, r18
     802:	40 95       	com	r20
     804:	80 81       	ld	r24, Z
     806:	48 23       	and	r20, r24
     808:	40 83       	st	Z, r20
     80a:	08 95       	ret

0000080c <_ZN7Display9drawVLineEhhh>:
     80c:	ff 92       	push	r15
     80e:	0f 93       	push	r16
     810:	1f 93       	push	r17
     812:	cf 93       	push	r28
     814:	df 93       	push	r29
     816:	ec 01       	movw	r28, r24
     818:	06 2f       	mov	r16, r22
     81a:	22 23       	and	r18, r18
     81c:	59 f0       	breq	.+22     	; 0x834 <_ZN7Display9drawVLineEhhh+0x28>
     81e:	f2 2e       	mov	r15, r18
     820:	f4 0e       	add	r15, r20
     822:	14 2f       	mov	r17, r20
     824:	20 e0       	ldi	r18, 0x00	; 0
     826:	41 2f       	mov	r20, r17
     828:	60 2f       	mov	r22, r16
     82a:	ce 01       	movw	r24, r28
     82c:	b5 df       	rcall	.-150    	; 0x798 <_ZN7Display9drawPixelEhhh>
     82e:	1f 5f       	subi	r17, 0xFF	; 255
     830:	1f 11       	cpse	r17, r15
     832:	f8 cf       	rjmp	.-16     	; 0x824 <_ZN7Display9drawVLineEhhh+0x18>
     834:	df 91       	pop	r29
     836:	cf 91       	pop	r28
     838:	1f 91       	pop	r17
     83a:	0f 91       	pop	r16
     83c:	ff 90       	pop	r15
     83e:	08 95       	ret

00000840 <_ZN7Display9drawHLineEhhh>:
     840:	ff 92       	push	r15
     842:	0f 93       	push	r16
     844:	1f 93       	push	r17
     846:	cf 93       	push	r28
     848:	df 93       	push	r29
     84a:	ec 01       	movw	r28, r24
     84c:	04 2f       	mov	r16, r20
     84e:	22 23       	and	r18, r18
     850:	59 f0       	breq	.+22     	; 0x868 <_ZN7Display9drawHLineEhhh+0x28>
     852:	f2 2e       	mov	r15, r18
     854:	f6 0e       	add	r15, r22
     856:	16 2f       	mov	r17, r22
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	40 2f       	mov	r20, r16
     85c:	61 2f       	mov	r22, r17
     85e:	ce 01       	movw	r24, r28
     860:	9b df       	rcall	.-202    	; 0x798 <_ZN7Display9drawPixelEhhh>
     862:	1f 5f       	subi	r17, 0xFF	; 255
     864:	1f 11       	cpse	r17, r15
     866:	f8 cf       	rjmp	.-16     	; 0x858 <_ZN7Display9drawHLineEhhh+0x18>
     868:	df 91       	pop	r29
     86a:	cf 91       	pop	r28
     86c:	1f 91       	pop	r17
     86e:	0f 91       	pop	r16
     870:	ff 90       	pop	r15
     872:	08 95       	ret

00000874 <_ZN7Display9draw_lineEhhhf>:
     874:	2f 92       	push	r2
     876:	3f 92       	push	r3
     878:	4f 92       	push	r4
     87a:	5f 92       	push	r5
     87c:	6f 92       	push	r6
     87e:	7f 92       	push	r7
     880:	8f 92       	push	r8
     882:	9f 92       	push	r9
     884:	af 92       	push	r10
     886:	bf 92       	push	r11
     888:	cf 92       	push	r12
     88a:	df 92       	push	r13
     88c:	ef 92       	push	r14
     88e:	ff 92       	push	r15
     890:	0f 93       	push	r16
     892:	1f 93       	push	r17
     894:	cf 93       	push	r28
     896:	df 93       	push	r29
     898:	cd b7       	in	r28, 0x3d	; 61
     89a:	de b7       	in	r29, 0x3e	; 62
     89c:	2b 97       	sbiw	r28, 0x0b	; 11
     89e:	0f b6       	in	r0, 0x3f	; 63
     8a0:	f8 94       	cli
     8a2:	de bf       	out	0x3e, r29	; 62
     8a4:	0f be       	out	0x3f, r0	; 63
     8a6:	cd bf       	out	0x3d, r28	; 61
     8a8:	1c 01       	movw	r2, r24
     8aa:	d6 2e       	mov	r13, r22
     8ac:	c4 2e       	mov	r12, r20
     8ae:	29 83       	std	Y+1, r18	; 0x01
     8b0:	22 23       	and	r18, r18
     8b2:	09 f4       	brne	.+2      	; 0x8b6 <_ZN7Display9draw_lineEhhhf+0x42>
     8b4:	68 c0       	rjmp	.+208    	; 0x986 <_ZN7Display9draw_lineEhhhf+0x112>
     8b6:	c8 01       	movw	r24, r16
     8b8:	b7 01       	movw	r22, r14
     8ba:	0e 94 a3 2c 	call	0x5946	; 0x5946 <cos>
     8be:	2b 01       	movw	r4, r22
     8c0:	3c 01       	movw	r6, r24
     8c2:	c8 01       	movw	r24, r16
     8c4:	b7 01       	movw	r22, r14
     8c6:	0e 94 02 2f 	call	0x5e04	; 0x5e04 <sin>
     8ca:	4b 01       	movw	r8, r22
     8cc:	5c 01       	movw	r10, r24
     8ce:	1b 86       	std	Y+11, r1	; 0x0b
     8d0:	1a 86       	std	Y+10, r1	; 0x0a
     8d2:	8c 2d       	mov	r24, r12
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	a0 e0       	ldi	r26, 0x00	; 0
     8d8:	b0 e0       	ldi	r27, 0x00	; 0
     8da:	8a 83       	std	Y+2, r24	; 0x02
     8dc:	9b 83       	std	Y+3, r25	; 0x03
     8de:	ac 83       	std	Y+4, r26	; 0x04
     8e0:	bd 83       	std	Y+5, r27	; 0x05
     8e2:	8d 2d       	mov	r24, r13
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	b0 e0       	ldi	r27, 0x00	; 0
     8ea:	8e 83       	std	Y+6, r24	; 0x06
     8ec:	9f 83       	std	Y+7, r25	; 0x07
     8ee:	a8 87       	std	Y+8, r26	; 0x08
     8f0:	b9 87       	std	Y+9, r27	; 0x09
     8f2:	aa 85       	ldd	r26, Y+10	; 0x0a
     8f4:	bb 85       	ldd	r27, Y+11	; 0x0b
     8f6:	bd 01       	movw	r22, r26
     8f8:	88 27       	eor	r24, r24
     8fa:	77 fd       	sbrc	r23, 7
     8fc:	80 95       	com	r24
     8fe:	98 2f       	mov	r25, r24
     900:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     904:	a5 01       	movw	r20, r10
     906:	94 01       	movw	r18, r8
     908:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     90c:	6b 01       	movw	r12, r22
     90e:	7c 01       	movw	r14, r24
     910:	6a 81       	ldd	r22, Y+2	; 0x02
     912:	7b 81       	ldd	r23, Y+3	; 0x03
     914:	8c 81       	ldd	r24, Y+4	; 0x04
     916:	9d 81       	ldd	r25, Y+5	; 0x05
     918:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     91c:	9b 01       	movw	r18, r22
     91e:	ac 01       	movw	r20, r24
     920:	c7 01       	movw	r24, r14
     922:	b6 01       	movw	r22, r12
     924:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     928:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
     92c:	16 2f       	mov	r17, r22
     92e:	6a 85       	ldd	r22, Y+10	; 0x0a
     930:	7b 85       	ldd	r23, Y+11	; 0x0b
     932:	71 95       	neg	r23
     934:	61 95       	neg	r22
     936:	71 09       	sbc	r23, r1
     938:	88 27       	eor	r24, r24
     93a:	77 fd       	sbrc	r23, 7
     93c:	80 95       	com	r24
     93e:	98 2f       	mov	r25, r24
     940:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     944:	a3 01       	movw	r20, r6
     946:	92 01       	movw	r18, r4
     948:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     94c:	6b 01       	movw	r12, r22
     94e:	7c 01       	movw	r14, r24
     950:	6e 81       	ldd	r22, Y+6	; 0x06
     952:	7f 81       	ldd	r23, Y+7	; 0x07
     954:	88 85       	ldd	r24, Y+8	; 0x08
     956:	99 85       	ldd	r25, Y+9	; 0x09
     958:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     95c:	9b 01       	movw	r18, r22
     95e:	ac 01       	movw	r20, r24
     960:	c7 01       	movw	r24, r14
     962:	b6 01       	movw	r22, r12
     964:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     968:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
     96c:	20 e0       	ldi	r18, 0x00	; 0
     96e:	41 2f       	mov	r20, r17
     970:	c1 01       	movw	r24, r2
     972:	12 df       	rcall	.-476    	; 0x798 <_ZN7Display9drawPixelEhhh>
     974:	ea 85       	ldd	r30, Y+10	; 0x0a
     976:	fb 85       	ldd	r31, Y+11	; 0x0b
     978:	31 96       	adiw	r30, 0x01	; 1
     97a:	fb 87       	std	Y+11, r31	; 0x0b
     97c:	ea 87       	std	Y+10, r30	; 0x0a
     97e:	f9 81       	ldd	r31, Y+1	; 0x01
     980:	ef 17       	cp	r30, r31
     982:	08 f4       	brcc	.+2      	; 0x986 <_ZN7Display9draw_lineEhhhf+0x112>
     984:	b6 cf       	rjmp	.-148    	; 0x8f2 <_ZN7Display9draw_lineEhhhf+0x7e>
     986:	2b 96       	adiw	r28, 0x0b	; 11
     988:	0f b6       	in	r0, 0x3f	; 63
     98a:	f8 94       	cli
     98c:	de bf       	out	0x3e, r29	; 62
     98e:	0f be       	out	0x3f, r0	; 63
     990:	cd bf       	out	0x3d, r28	; 61
     992:	df 91       	pop	r29
     994:	cf 91       	pop	r28
     996:	1f 91       	pop	r17
     998:	0f 91       	pop	r16
     99a:	ff 90       	pop	r15
     99c:	ef 90       	pop	r14
     99e:	df 90       	pop	r13
     9a0:	cf 90       	pop	r12
     9a2:	bf 90       	pop	r11
     9a4:	af 90       	pop	r10
     9a6:	9f 90       	pop	r9
     9a8:	8f 90       	pop	r8
     9aa:	7f 90       	pop	r7
     9ac:	6f 90       	pop	r6
     9ae:	5f 90       	pop	r5
     9b0:	4f 90       	pop	r4
     9b2:	3f 90       	pop	r3
     9b4:	2f 90       	pop	r2
     9b6:	08 95       	ret

000009b8 <_ZN7Display13draw_triangleEhhhff>:
     9b8:	2f 92       	push	r2
     9ba:	3f 92       	push	r3
     9bc:	4f 92       	push	r4
     9be:	5f 92       	push	r5
     9c0:	6f 92       	push	r6
     9c2:	7f 92       	push	r7
     9c4:	8f 92       	push	r8
     9c6:	9f 92       	push	r9
     9c8:	af 92       	push	r10
     9ca:	bf 92       	push	r11
     9cc:	cf 92       	push	r12
     9ce:	df 92       	push	r13
     9d0:	ef 92       	push	r14
     9d2:	ff 92       	push	r15
     9d4:	0f 93       	push	r16
     9d6:	1f 93       	push	r17
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	cd b7       	in	r28, 0x3d	; 61
     9de:	de b7       	in	r29, 0x3e	; 62
     9e0:	60 97       	sbiw	r28, 0x10	; 16
     9e2:	0f b6       	in	r0, 0x3f	; 63
     9e4:	f8 94       	cli
     9e6:	de bf       	out	0x3e, r29	; 62
     9e8:	0f be       	out	0x3f, r0	; 63
     9ea:	cd bf       	out	0x3d, r28	; 61
     9ec:	1c 01       	movw	r2, r24
     9ee:	6f 87       	std	Y+15, r22	; 0x0f
     9f0:	4d 83       	std	Y+5, r20	; 0x05
     9f2:	29 83       	std	Y+1, r18	; 0x01
     9f4:	c6 01       	movw	r24, r12
     9f6:	b5 01       	movw	r22, r10
     9f8:	25 e3       	ldi	r18, 0x35	; 53
     9fa:	3a ef       	ldi	r19, 0xFA	; 250
     9fc:	4e e8       	ldi	r20, 0x8E	; 142
     9fe:	5c e3       	ldi	r21, 0x3C	; 60
     a00:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     a04:	4b 01       	movw	r8, r22
     a06:	5c 01       	movw	r10, r24
     a08:	25 e3       	ldi	r18, 0x35	; 53
     a0a:	3a ef       	ldi	r19, 0xFA	; 250
     a0c:	4e e8       	ldi	r20, 0x8E	; 142
     a0e:	5c e3       	ldi	r21, 0x3C	; 60
     a10:	c8 01       	movw	r24, r16
     a12:	b7 01       	movw	r22, r14
     a14:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     a18:	6e 83       	std	Y+6, r22	; 0x06
     a1a:	7f 83       	std	Y+7, r23	; 0x07
     a1c:	88 87       	std	Y+8, r24	; 0x08
     a1e:	99 87       	std	Y+9, r25	; 0x09
     a20:	79 80       	ldd	r7, Y+1	; 0x01
     a22:	76 94       	lsr	r7
     a24:	85 01       	movw	r16, r10
     a26:	74 01       	movw	r14, r8
     a28:	27 2d       	mov	r18, r7
     a2a:	4d 81       	ldd	r20, Y+5	; 0x05
     a2c:	6f 85       	ldd	r22, Y+15	; 0x0f
     a2e:	c1 01       	movw	r24, r2
     a30:	21 df       	rcall	.-446    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     a32:	2b ed       	ldi	r18, 0xDB	; 219
     a34:	3f e0       	ldi	r19, 0x0F	; 15
     a36:	49 e4       	ldi	r20, 0x49	; 73
     a38:	50 e4       	ldi	r21, 0x40	; 64
     a3a:	c5 01       	movw	r24, r10
     a3c:	b4 01       	movw	r22, r8
     a3e:	0e 94 d8 2b 	call	0x57b0	; 0x57b0 <__subsf3>
     a42:	7b 01       	movw	r14, r22
     a44:	8c 01       	movw	r16, r24
     a46:	27 2d       	mov	r18, r7
     a48:	4d 81       	ldd	r20, Y+5	; 0x05
     a4a:	6f 85       	ldd	r22, Y+15	; 0x0f
     a4c:	c1 01       	movw	r24, r2
     a4e:	12 df       	rcall	.-476    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     a50:	6e 81       	ldd	r22, Y+6	; 0x06
     a52:	7f 81       	ldd	r23, Y+7	; 0x07
     a54:	88 85       	ldd	r24, Y+8	; 0x08
     a56:	99 85       	ldd	r25, Y+9	; 0x09
     a58:	0e 94 0b 2f 	call	0x5e16	; 0x5e16 <tan>
     a5c:	6b 01       	movw	r12, r22
     a5e:	7c 01       	movw	r14, r24
     a60:	67 2d       	mov	r22, r7
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	80 e0       	ldi	r24, 0x00	; 0
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     a6c:	a7 01       	movw	r20, r14
     a6e:	96 01       	movw	r18, r12
     a70:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     a74:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
     a78:	68 8b       	std	Y+16, r22	; 0x10
     a7a:	2b ed       	ldi	r18, 0xDB	; 219
     a7c:	3f e0       	ldi	r19, 0x0F	; 15
     a7e:	49 ec       	ldi	r20, 0xC9	; 201
     a80:	5f e3       	ldi	r21, 0x3F	; 63
     a82:	c5 01       	movw	r24, r10
     a84:	b4 01       	movw	r22, r8
     a86:	0e 94 d8 2b 	call	0x57b0	; 0x57b0 <__subsf3>
     a8a:	6a 87       	std	Y+10, r22	; 0x0a
     a8c:	7b 87       	std	Y+11, r23	; 0x0b
     a8e:	8c 87       	std	Y+12, r24	; 0x0c
     a90:	9d 87       	std	Y+13, r25	; 0x0d
     a92:	7b 01       	movw	r14, r22
     a94:	8c 01       	movw	r16, r24
     a96:	28 89       	ldd	r18, Y+16	; 0x10
     a98:	4d 81       	ldd	r20, Y+5	; 0x05
     a9a:	6f 85       	ldd	r22, Y+15	; 0x0f
     a9c:	c1 01       	movw	r24, r2
     a9e:	ea de       	rcall	.-556    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     aa0:	6e 81       	ldd	r22, Y+6	; 0x06
     aa2:	7f 81       	ldd	r23, Y+7	; 0x07
     aa4:	88 85       	ldd	r24, Y+8	; 0x08
     aa6:	99 85       	ldd	r25, Y+9	; 0x09
     aa8:	0e 94 a3 2c 	call	0x5946	; 0x5946 <cos>
     aac:	6b 01       	movw	r12, r22
     aae:	7c 01       	movw	r14, r24
     ab0:	29 81       	ldd	r18, Y+1	; 0x01
     ab2:	62 2f       	mov	r22, r18
     ab4:	70 e0       	ldi	r23, 0x00	; 0
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     abe:	2b 01       	movw	r4, r22
     ac0:	3c 01       	movw	r6, r24
     ac2:	a7 01       	movw	r20, r14
     ac4:	96 01       	movw	r18, r12
     ac6:	c7 01       	movw	r24, r14
     ac8:	b6 01       	movw	r22, r12
     aca:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     ace:	9b 01       	movw	r18, r22
     ad0:	ac 01       	movw	r20, r24
     ad2:	c3 01       	movw	r24, r6
     ad4:	b2 01       	movw	r22, r4
     ad6:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
     ada:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
     ade:	6e 87       	std	Y+14, r22	; 0x0e
     ae0:	e8 89       	ldd	r30, Y+16	; 0x10
     ae2:	6e 2f       	mov	r22, r30
     ae4:	70 e0       	ldi	r23, 0x00	; 0
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     aee:	69 83       	std	Y+1, r22	; 0x01
     af0:	7a 83       	std	Y+2, r23	; 0x02
     af2:	8b 83       	std	Y+3, r24	; 0x03
     af4:	9c 83       	std	Y+4, r25	; 0x04
     af6:	6a 85       	ldd	r22, Y+10	; 0x0a
     af8:	7b 85       	ldd	r23, Y+11	; 0x0b
     afa:	8c 85       	ldd	r24, Y+12	; 0x0c
     afc:	9d 85       	ldd	r25, Y+13	; 0x0d
     afe:	0e 94 a3 2c 	call	0x5946	; 0x5946 <cos>
     b02:	6b 01       	movw	r12, r22
     b04:	7c 01       	movw	r14, r24
     b06:	ff 85       	ldd	r31, Y+15	; 0x0f
     b08:	6f 2f       	mov	r22, r31
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	80 e0       	ldi	r24, 0x00	; 0
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     b14:	2b 01       	movw	r4, r22
     b16:	3c 01       	movw	r6, r24
     b18:	a7 01       	movw	r20, r14
     b1a:	96 01       	movw	r18, r12
     b1c:	69 81       	ldd	r22, Y+1	; 0x01
     b1e:	7a 81       	ldd	r23, Y+2	; 0x02
     b20:	8b 81       	ldd	r24, Y+3	; 0x03
     b22:	9c 81       	ldd	r25, Y+4	; 0x04
     b24:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     b28:	9b 01       	movw	r18, r22
     b2a:	ac 01       	movw	r20, r24
     b2c:	c3 01       	movw	r24, r6
     b2e:	b2 01       	movw	r22, r4
     b30:	0e 94 d8 2b 	call	0x57b0	; 0x57b0 <__subsf3>
     b34:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
     b38:	6f 87       	std	Y+15, r22	; 0x0f
     b3a:	6a 85       	ldd	r22, Y+10	; 0x0a
     b3c:	7b 85       	ldd	r23, Y+11	; 0x0b
     b3e:	8c 85       	ldd	r24, Y+12	; 0x0c
     b40:	9d 85       	ldd	r25, Y+13	; 0x0d
     b42:	0e 94 02 2f 	call	0x5e04	; 0x5e04 <sin>
     b46:	6b 01       	movw	r12, r22
     b48:	7c 01       	movw	r14, r24
     b4a:	2d 81       	ldd	r18, Y+5	; 0x05
     b4c:	62 2f       	mov	r22, r18
     b4e:	70 e0       	ldi	r23, 0x00	; 0
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     b58:	2b 01       	movw	r4, r22
     b5a:	3c 01       	movw	r6, r24
     b5c:	a7 01       	movw	r20, r14
     b5e:	96 01       	movw	r18, r12
     b60:	69 81       	ldd	r22, Y+1	; 0x01
     b62:	7a 81       	ldd	r23, Y+2	; 0x02
     b64:	8b 81       	ldd	r24, Y+3	; 0x03
     b66:	9c 81       	ldd	r25, Y+4	; 0x04
     b68:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     b6c:	9b 01       	movw	r18, r22
     b6e:	ac 01       	movw	r20, r24
     b70:	c3 01       	movw	r24, r6
     b72:	b2 01       	movw	r22, r4
     b74:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     b78:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
     b7c:	d6 2e       	mov	r13, r22
     b7e:	a5 01       	movw	r20, r10
     b80:	94 01       	movw	r18, r8
     b82:	6e 81       	ldd	r22, Y+6	; 0x06
     b84:	7f 81       	ldd	r23, Y+7	; 0x07
     b86:	88 85       	ldd	r24, Y+8	; 0x08
     b88:	99 85       	ldd	r25, Y+9	; 0x09
     b8a:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     b8e:	7b 01       	movw	r14, r22
     b90:	8c 01       	movw	r16, r24
     b92:	2e 85       	ldd	r18, Y+14	; 0x0e
     b94:	4d 2d       	mov	r20, r13
     b96:	6f 85       	ldd	r22, Y+15	; 0x0f
     b98:	c1 01       	movw	r24, r2
     b9a:	6c de       	rcall	.-808    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     b9c:	2e 81       	ldd	r18, Y+6	; 0x06
     b9e:	3f 81       	ldd	r19, Y+7	; 0x07
     ba0:	48 85       	ldd	r20, Y+8	; 0x08
     ba2:	59 85       	ldd	r21, Y+9	; 0x09
     ba4:	c5 01       	movw	r24, r10
     ba6:	b4 01       	movw	r22, r8
     ba8:	0e 94 d8 2b 	call	0x57b0	; 0x57b0 <__subsf3>
     bac:	2b ed       	ldi	r18, 0xDB	; 219
     bae:	3f e0       	ldi	r19, 0x0F	; 15
     bb0:	49 e4       	ldi	r20, 0x49	; 73
     bb2:	50 e4       	ldi	r21, 0x40	; 64
     bb4:	0e 94 d8 2b 	call	0x57b0	; 0x57b0 <__subsf3>
     bb8:	7b 01       	movw	r14, r22
     bba:	8c 01       	movw	r16, r24
     bbc:	2e 85       	ldd	r18, Y+14	; 0x0e
     bbe:	4d 2d       	mov	r20, r13
     bc0:	6f 85       	ldd	r22, Y+15	; 0x0f
     bc2:	c1 01       	movw	r24, r2
     bc4:	57 de       	rcall	.-850    	; 0x874 <_ZN7Display9draw_lineEhhhf>
     bc6:	60 96       	adiw	r28, 0x10	; 16
     bc8:	0f b6       	in	r0, 0x3f	; 63
     bca:	f8 94       	cli
     bcc:	de bf       	out	0x3e, r29	; 62
     bce:	0f be       	out	0x3f, r0	; 63
     bd0:	cd bf       	out	0x3d, r28	; 61
     bd2:	df 91       	pop	r29
     bd4:	cf 91       	pop	r28
     bd6:	1f 91       	pop	r17
     bd8:	0f 91       	pop	r16
     bda:	ff 90       	pop	r15
     bdc:	ef 90       	pop	r14
     bde:	df 90       	pop	r13
     be0:	cf 90       	pop	r12
     be2:	bf 90       	pop	r11
     be4:	af 90       	pop	r10
     be6:	9f 90       	pop	r9
     be8:	8f 90       	pop	r8
     bea:	7f 90       	pop	r7
     bec:	6f 90       	pop	r6
     bee:	5f 90       	pop	r5
     bf0:	4f 90       	pop	r4
     bf2:	3f 90       	pop	r3
     bf4:	2f 90       	pop	r2
     bf6:	08 95       	ret

00000bf8 <_ZN7Display9draw_ASCIEhhh>:
     bf8:	0f 93       	push	r16
     bfa:	1f 93       	push	r17
     bfc:	cf 93       	push	r28
     bfe:	df 93       	push	r29
     c00:	61 32       	cpi	r22, 0x21	; 33
     c02:	08 f4       	brcc	.+2      	; 0xc06 <_ZN7Display9draw_ASCIEhhh+0xe>
     c04:	42 c0       	rjmp	.+132    	; 0xc8a <_ZN7Display9draw_ASCIEhhh+0x92>
     c06:	a4 2f       	mov	r26, r20
     c08:	b0 e0       	ldi	r27, 0x00	; 0
     c0a:	02 2f       	mov	r16, r18
     c0c:	06 95       	lsr	r16
     c0e:	06 95       	lsr	r16
     c10:	06 95       	lsr	r16
     c12:	30 e8       	ldi	r19, 0x80	; 128
     c14:	03 9f       	mul	r16, r19
     c16:	80 01       	movw	r16, r0
     c18:	11 24       	eor	r1, r1
     c1a:	ed 01       	movw	r28, r26
     c1c:	c0 0f       	add	r28, r16
     c1e:	d1 1f       	adc	r29, r17
     c20:	00 58       	subi	r16, 0x80	; 128
     c22:	1f 4f       	sbci	r17, 0xFF	; 255
     c24:	0a 0f       	add	r16, r26
     c26:	1b 1f       	adc	r17, r27
     c28:	61 52       	subi	r22, 0x21	; 33
     c2a:	46 2f       	mov	r20, r22
     c2c:	50 e0       	ldi	r21, 0x00	; 0
     c2e:	fa 01       	movw	r30, r20
     c30:	ee 0f       	add	r30, r30
     c32:	ff 1f       	adc	r31, r31
     c34:	ee 0f       	add	r30, r30
     c36:	ff 1f       	adc	r31, r31
     c38:	e4 0f       	add	r30, r20
     c3a:	f5 1f       	adc	r31, r21
     c3c:	ea 53       	subi	r30, 0x3A	; 58
     c3e:	fd 4f       	sbci	r31, 0xFD	; 253
     c40:	dc 01       	movw	r26, r24
     c42:	ac 0f       	add	r26, r28
     c44:	bd 1f       	adc	r27, r29
     c46:	ae 01       	movw	r20, r28
     c48:	05 96       	adiw	r24, 0x05	; 5
     c4a:	8c 0f       	add	r24, r28
     c4c:	9d 1f       	adc	r25, r29
     c4e:	27 70       	andi	r18, 0x07	; 7
     c50:	64 91       	lpm	r22, Z
     c52:	70 e0       	ldi	r23, 0x00	; 0
     c54:	02 2e       	mov	r0, r18
     c56:	02 c0       	rjmp	.+4      	; 0xc5c <_ZN7Display9draw_ASCIEhhh+0x64>
     c58:	66 0f       	add	r22, r22
     c5a:	77 1f       	adc	r23, r23
     c5c:	0a 94       	dec	r0
     c5e:	e2 f7       	brpl	.-8      	; 0xc58 <_ZN7Display9draw_ASCIEhhh+0x60>
     c60:	3c 91       	ld	r19, X
     c62:	36 2b       	or	r19, r22
     c64:	3c 93       	st	X, r19
     c66:	67 2f       	mov	r22, r23
     c68:	77 27       	eor	r23, r23
     c6a:	61 15       	cp	r22, r1
     c6c:	71 05       	cpc	r23, r1
     c6e:	41 f0       	breq	.+16     	; 0xc80 <_ZN7Display9draw_ASCIEhhh+0x88>
     c70:	ed 01       	movw	r28, r26
     c72:	c4 1b       	sub	r28, r20
     c74:	d5 0b       	sbc	r29, r21
     c76:	c0 0f       	add	r28, r16
     c78:	d1 1f       	adc	r29, r17
     c7a:	38 81       	ld	r19, Y
     c7c:	63 2b       	or	r22, r19
     c7e:	68 83       	st	Y, r22
     c80:	31 96       	adiw	r30, 0x01	; 1
     c82:	11 96       	adiw	r26, 0x01	; 1
     c84:	a8 17       	cp	r26, r24
     c86:	b9 07       	cpc	r27, r25
     c88:	19 f7       	brne	.-58     	; 0xc50 <_ZN7Display9draw_ASCIEhhh+0x58>
     c8a:	df 91       	pop	r29
     c8c:	cf 91       	pop	r28
     c8e:	1f 91       	pop	r17
     c90:	0f 91       	pop	r16
     c92:	08 95       	ret

00000c94 <_ZN7Display16draw_number16x16Ehhh>:

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
     c94:	ef 92       	push	r14
     c96:	ff 92       	push	r15
     c98:	0f 93       	push	r16
     c9a:	1f 93       	push	r17
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
	uint16_t symbol;
	if(number>=0 && number<10){
     ca0:	6a 30       	cpi	r22, 0x0A	; 10
     ca2:	08 f0       	brcs	.+2      	; 0xca6 <_ZN7Display16draw_number16x16Ehhh+0x12>
     ca4:	66 c0       	rjmp	.+204    	; 0xd72 <_ZN7Display16draw_number16x16Ehhh+0xde>
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     ca6:	50 e0       	ldi	r21, 0x00	; 0
     ca8:	02 2f       	mov	r16, r18
     caa:	06 95       	lsr	r16
     cac:	06 95       	lsr	r16
     cae:	06 95       	lsr	r16
     cb0:	10 e0       	ldi	r17, 0x00	; 0
     cb2:	d8 01       	movw	r26, r16
     cb4:	b6 95       	lsr	r27
     cb6:	ba 2f       	mov	r27, r26
     cb8:	aa 27       	eor	r26, r26
     cba:	b7 95       	ror	r27
     cbc:	a7 95       	ror	r26
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     cbe:	0f 5f       	subi	r16, 0xFF	; 255
     cc0:	1f 4f       	sbci	r17, 0xFF	; 255
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     cc2:	16 95       	lsr	r17
     cc4:	10 2f       	mov	r17, r16
     cc6:	00 27       	eor	r16, r16
     cc8:	17 95       	ror	r17
     cca:	07 95       	ror	r16
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     ccc:	7d 01       	movw	r14, r26
     cce:	30 e8       	ldi	r19, 0x80	; 128
     cd0:	e3 0e       	add	r14, r19
     cd2:	f1 1c       	adc	r15, r1
     cd4:	e4 0e       	add	r14, r20
     cd6:	f5 1e       	adc	r15, r21
     cd8:	e8 0e       	add	r14, r24
     cda:	f9 1e       	adc	r15, r25
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     cdc:	ea 01       	movw	r28, r20
     cde:	c0 0f       	add	r28, r16
     ce0:	d1 1f       	adc	r29, r17
     ce2:	60 97       	sbiw	r28, 0x10	; 16
     ce4:	c8 0f       	add	r28, r24
     ce6:	d9 1f       	adc	r29, r25
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     ce8:	04 0f       	add	r16, r20
     cea:	15 1f       	adc	r17, r21
     cec:	00 59       	subi	r16, 0x90	; 144
     cee:	1f 4f       	sbci	r17, 0xFF	; 255
     cf0:	08 0f       	add	r16, r24
     cf2:	19 1f       	adc	r17, r25
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
			if(i<16){
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     cf4:	a4 0f       	add	r26, r20
     cf6:	b5 1f       	adc	r27, r21
     cf8:	a8 0f       	add	r26, r24
     cfa:	b9 1f       	adc	r27, r25
     cfc:	e0 e2       	ldi	r30, 0x20	; 32
     cfe:	6e 9f       	mul	r22, r30
     d00:	c0 01       	movw	r24, r0
     d02:	11 24       	eor	r1, r1
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
				if(((symbol&0xFF00)>>8)==0){
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d04:	40 e0       	ldi	r20, 0x00	; 0
     d06:	50 e0       	ldi	r21, 0x00	; 0
     d08:	8a 57       	subi	r24, 0x7A	; 122
     d0a:	9e 4f       	sbci	r25, 0xFE	; 254
void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
			symbol = symbol << y%8;
     d0c:	27 70       	andi	r18, 0x07	; 7
     d0e:	fc 01       	movw	r30, r24
     d10:	e4 0f       	add	r30, r20
     d12:	f5 1f       	adc	r31, r21

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
			symbol = pgm_read_byte(&digits16x16[number][i]);
     d14:	e4 91       	lpm	r30, Z
     d16:	f0 e0       	ldi	r31, 0x00	; 0
			symbol = symbol << y%8;
     d18:	02 2e       	mov	r0, r18
     d1a:	02 c0       	rjmp	.+4      	; 0xd20 <_ZN7Display16draw_number16x16Ehhh+0x8c>
     d1c:	ee 0f       	add	r30, r30
     d1e:	ff 1f       	adc	r31, r31
     d20:	0a 94       	dec	r0
     d22:	e2 f7       	brpl	.-8      	; 0xd1c <_ZN7Display16draw_number16x16Ehhh+0x88>
			if(i<16){
     d24:	40 31       	cpi	r20, 0x10	; 16
     d26:	68 f4       	brcc	.+26     	; 0xd42 <_ZN7Display16draw_number16x16Ehhh+0xae>
				Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d28:	3c 91       	ld	r19, X
     d2a:	3e 2b       	or	r19, r30
     d2c:	3c 93       	st	X, r19
				if(((symbol&0xFF00)>>8)==0){
     d2e:	6f 2f       	mov	r22, r31
     d30:	77 27       	eor	r23, r23
     d32:	61 15       	cp	r22, r1
     d34:	71 05       	cpc	r23, r1
     d36:	89 f0       	breq	.+34     	; 0xd5a <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
				}
				else {
					Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d38:	f7 01       	movw	r30, r14
     d3a:	30 81       	ld	r19, Z
     d3c:	36 2b       	or	r19, r22
     d3e:	30 83       	st	Z, r19
     d40:	0c c0       	rjmp	.+24     	; 0xd5a <_ZN7Display16draw_number16x16Ehhh+0xc6>
				}
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+(i-16)] |= (uint8_t) (symbol & 0x00FF);
     d42:	38 81       	ld	r19, Y
     d44:	3e 2b       	or	r19, r30
     d46:	38 83       	st	Y, r19
				if(((symbol&0xFF00)>>8)==0){
     d48:	6f 2f       	mov	r22, r31
     d4a:	77 27       	eor	r23, r23
     d4c:	61 15       	cp	r22, r1
     d4e:	71 05       	cpc	r23, r1
     d50:	21 f0       	breq	.+8      	; 0xd5a <_ZN7Display16draw_number16x16Ehhh+0xc6>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= 0;
				}
				else {
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d52:	f8 01       	movw	r30, r16
     d54:	30 81       	ld	r19, Z
     d56:	36 2b       	or	r19, r22
     d58:	30 83       	st	Z, r19
     d5a:	4f 5f       	subi	r20, 0xFF	; 255
     d5c:	5f 4f       	sbci	r21, 0xFF	; 255
     d5e:	ff ef       	ldi	r31, 0xFF	; 255
     d60:	ef 1a       	sub	r14, r31
     d62:	ff 0a       	sbc	r15, r31
     d64:	21 96       	adiw	r28, 0x01	; 1
     d66:	0f 5f       	subi	r16, 0xFF	; 255
     d68:	1f 4f       	sbci	r17, 0xFF	; 255
     d6a:	11 96       	adiw	r26, 0x01	; 1
}

void Display::draw_number16x16(uint8_t number, uint8_t x, uint8_t y){
	uint16_t symbol;
	if(number>=0 && number<10){
		for(uint8_t i = 0; i < 32;i++){
     d6c:	40 32       	cpi	r20, 0x20	; 32
     d6e:	51 05       	cpc	r21, r1
     d70:	71 f6       	brne	.-100    	; 0xd0e <_ZN7Display16draw_number16x16Ehhh+0x7a>
					Displayframe[x+(y/8+2)*SSD1306_WIDTH+(i-16)] |= (uint8_t) ((symbol & 0xFF00)>>8);
				}
			}
		}
	}
}
     d72:	df 91       	pop	r29
     d74:	cf 91       	pop	r28
     d76:	1f 91       	pop	r17
     d78:	0f 91       	pop	r16
     d7a:	ff 90       	pop	r15
     d7c:	ef 90       	pop	r14
     d7e:	08 95       	ret

00000d80 <_ZN7Display6analogEhhhh>:

void Display::analog(uint8_t stunde, uint8_t minute, uint8_t sekunde, uint8_t sekanzeige){
     d80:	2f 92       	push	r2
     d82:	3f 92       	push	r3
     d84:	4f 92       	push	r4
     d86:	5f 92       	push	r5
     d88:	6f 92       	push	r6
     d8a:	7f 92       	push	r7
     d8c:	8f 92       	push	r8
     d8e:	9f 92       	push	r9
     d90:	af 92       	push	r10
     d92:	bf 92       	push	r11
     d94:	cf 92       	push	r12
     d96:	df 92       	push	r13
     d98:	ef 92       	push	r14
     d9a:	ff 92       	push	r15
     d9c:	0f 93       	push	r16
     d9e:	1f 93       	push	r17
     da0:	cf 93       	push	r28
     da2:	df 93       	push	r29
     da4:	cd b7       	in	r28, 0x3d	; 61
     da6:	de b7       	in	r29, 0x3e	; 62
     da8:	27 97       	sbiw	r28, 0x07	; 7
     daa:	0f b6       	in	r0, 0x3f	; 63
     dac:	f8 94       	cli
     dae:	de bf       	out	0x3e, r29	; 62
     db0:	0f be       	out	0x3f, r0	; 63
     db2:	cd bf       	out	0x3d, r28	; 61
     db4:	9f 83       	std	Y+7, r25	; 0x07
     db6:	8e 83       	std	Y+6, r24	; 0x06
     db8:	6d 83       	std	Y+5, r22	; 0x05
     dba:	34 2e       	mov	r3, r20
	uint8_t Px=32-1;
	uint8_t Py=32-1;
	uint8_t x=0,y=0;
	float winkel=0;
	
	if (sekanzeige)
     dbc:	00 23       	and	r16, r16
     dbe:	09 f4       	brne	.+2      	; 0xdc2 <_ZN7Display6analogEhhhh+0x42>
     dc0:	26 c1       	rjmp	.+588    	; 0x100e <_ZN7Display6analogEhhhh+0x28e>
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
     dc2:	62 2f       	mov	r22, r18
     dc4:	70 e0       	ldi	r23, 0x00	; 0
     dc6:	80 e0       	ldi	r24, 0x00	; 0
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     dce:	20 e0       	ldi	r18, 0x00	; 0
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	40 ec       	ldi	r20, 0xC0	; 192
     dd4:	50 e4       	ldi	r21, 0x40	; 64
     dd6:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     dda:	2b ed       	ldi	r18, 0xDB	; 219
     ddc:	3f e0       	ldi	r19, 0x0F	; 15
     dde:	49 e4       	ldi	r20, 0x49	; 73
     de0:	50 e4       	ldi	r21, 0x40	; 64
     de2:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     de6:	20 e0       	ldi	r18, 0x00	; 0
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	44 e3       	ldi	r20, 0x34	; 52
     dec:	53 e4       	ldi	r21, 0x43	; 67
     dee:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
     df2:	2b ed       	ldi	r18, 0xDB	; 219
     df4:	3f e0       	ldi	r19, 0x0F	; 15
     df6:	49 ec       	ldi	r20, 0xC9	; 201
     df8:	5f e3       	ldi	r21, 0x3F	; 63
     dfa:	0e 94 d8 2b 	call	0x57b0	; 0x57b0 <__subsf3>
     dfe:	6b 01       	movw	r12, r22
     e00:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     e02:	0e 94 a3 2c 	call	0x5946	; 0x5946 <cos>
     e06:	2b 01       	movw	r4, r22
     e08:	3c 01       	movw	r6, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e0a:	c7 01       	movw	r24, r14
     e0c:	b6 01       	movw	r22, r12
     e0e:	0e 94 02 2f 	call	0x5e04	; 0x5e04 <sin>
     e12:	4b 01       	movw	r8, r22
     e14:	5c 01       	movw	r10, r24
     e16:	00 e0       	ldi	r16, 0x00	; 0
     e18:	10 e0       	ldi	r17, 0x00	; 0
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e1a:	b8 01       	movw	r22, r16
     e1c:	88 27       	eor	r24, r24
     e1e:	77 fd       	sbrc	r23, 7
     e20:	80 95       	com	r24
     e22:	98 2f       	mov	r25, r24
     e24:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     e28:	6b 01       	movw	r12, r22
     e2a:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     e2c:	a5 01       	movw	r20, r10
     e2e:	94 01       	movw	r18, r8
     e30:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     e34:	20 e0       	ldi	r18, 0x00	; 0
     e36:	30 e0       	ldi	r19, 0x00	; 0
     e38:	48 ef       	ldi	r20, 0xF8	; 248
     e3a:	51 e4       	ldi	r21, 0x41	; 65
     e3c:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     e40:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
     e44:	26 2e       	mov	r2, r22
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(sekunde*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     e46:	a3 01       	movw	r20, r6
     e48:	92 01       	movw	r18, r4
     e4a:	c7 01       	movw	r24, r14
     e4c:	b6 01       	movw	r22, r12
     e4e:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     e52:	20 e0       	ldi	r18, 0x00	; 0
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	48 ef       	ldi	r20, 0xF8	; 248
     e58:	51 e4       	ldi	r21, 0x41	; 65
     e5a:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     e5e:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     e62:	20 e0       	ldi	r18, 0x00	; 0
     e64:	42 2d       	mov	r20, r2
     e66:	8e 81       	ldd	r24, Y+6	; 0x06
     e68:	9f 81       	ldd	r25, Y+7	; 0x07
     e6a:	96 dc       	rcall	.-1748   	; 0x798 <_ZN7Display9drawPixelEhhh>
     e6c:	0f 5f       	subi	r16, 0xFF	; 255
     e6e:	1f 4f       	sbci	r17, 0xFF	; 255
	float winkel=0;
	
	if (sekanzeige)
	{
		//Berechnen des Sekundenzeigers
		for(uint8_t i=0;i<r;i++){
     e70:	09 31       	cpi	r16, 0x19	; 25
     e72:	11 05       	cpc	r17, r1
     e74:	91 f6       	brne	.-92     	; 0xe1a <_ZN7Display6analogEhhhh+0x9a>
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
     e76:	63 2d       	mov	r22, r3
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     e82:	69 83       	std	Y+1, r22	; 0x01
     e84:	7a 83       	std	Y+2, r23	; 0x02
     e86:	8b 83       	std	Y+3, r24	; 0x03
     e88:	9c 83       	std	Y+4, r25	; 0x04
     e8a:	20 e0       	ldi	r18, 0x00	; 0
     e8c:	30 e0       	ldi	r19, 0x00	; 0
     e8e:	40 ec       	ldi	r20, 0xC0	; 192
     e90:	50 e4       	ldi	r21, 0x40	; 64
     e92:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     e96:	2b ed       	ldi	r18, 0xDB	; 219
     e98:	3f e0       	ldi	r19, 0x0F	; 15
     e9a:	49 e4       	ldi	r20, 0x49	; 73
     e9c:	50 e4       	ldi	r21, 0x40	; 64
     e9e:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	44 e3       	ldi	r20, 0x34	; 52
     ea8:	53 e4       	ldi	r21, 0x43	; 67
     eaa:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
     eae:	2b ed       	ldi	r18, 0xDB	; 219
     eb0:	3f e0       	ldi	r19, 0x0F	; 15
     eb2:	49 ec       	ldi	r20, 0xC9	; 201
     eb4:	5f e3       	ldi	r21, 0x3F	; 63
     eb6:	0e 94 d8 2b 	call	0x57b0	; 0x57b0 <__subsf3>
     eba:	6b 01       	movw	r12, r22
     ebc:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
     ebe:	0e 94 a3 2c 	call	0x5946	; 0x5946 <cos>
     ec2:	4b 01       	movw	r8, r22
     ec4:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
     ec6:	c7 01       	movw	r24, r14
     ec8:	b6 01       	movw	r22, r12
     eca:	0e 94 02 2f 	call	0x5e04	; 0x5e04 <sin>
     ece:	2b 01       	movw	r4, r22
     ed0:	3c 01       	movw	r6, r24
     ed2:	00 e0       	ldi	r16, 0x00	; 0
     ed4:	10 e0       	ldi	r17, 0x00	; 0

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     ed6:	b8 01       	movw	r22, r16
     ed8:	88 27       	eor	r24, r24
     eda:	77 fd       	sbrc	r23, 7
     edc:	80 95       	com	r24
     ede:	98 2f       	mov	r25, r24
     ee0:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     ee4:	6b 01       	movw	r12, r22
     ee6:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
     ee8:	a3 01       	movw	r20, r6
     eea:	92 01       	movw	r18, r4
     eec:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     ef0:	20 e0       	ldi	r18, 0x00	; 0
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	48 ef       	ldi	r20, 0xF8	; 248
     ef6:	51 e4       	ldi	r21, 0x41	; 65
     ef8:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     efc:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
     f00:	36 2e       	mov	r3, r22

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
     f02:	a5 01       	movw	r20, r10
     f04:	94 01       	movw	r18, r8
     f06:	c7 01       	movw	r24, r14
     f08:	b6 01       	movw	r22, r12
     f0a:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     f0e:	20 e0       	ldi	r18, 0x00	; 0
     f10:	30 e0       	ldi	r19, 0x00	; 0
     f12:	48 ef       	ldi	r20, 0xF8	; 248
     f14:	51 e4       	ldi	r21, 0x41	; 65
     f16:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     f1a:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
     f1e:	20 e0       	ldi	r18, 0x00	; 0
     f20:	43 2d       	mov	r20, r3
     f22:	8e 81       	ldd	r24, Y+6	; 0x06
     f24:	9f 81       	ldd	r25, Y+7	; 0x07
     f26:	38 dc       	rcall	.-1936   	; 0x798 <_ZN7Display9drawPixelEhhh>
     f28:	0f 5f       	subi	r16, 0xFF	; 255
     f2a:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=21;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
     f2c:	05 31       	cpi	r16, 0x15	; 21
     f2e:	11 05       	cpc	r17, r1
     f30:	91 f6       	brne	.-92     	; 0xed6 <_ZN7Display6analogEhhhh+0x156>
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
     f32:	2d 81       	ldd	r18, Y+5	; 0x05
     f34:	62 2f       	mov	r22, r18
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	80 e0       	ldi	r24, 0x00	; 0
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	30 e0       	ldi	r19, 0x00	; 0
     f44:	40 ef       	ldi	r20, 0xF0	; 240
     f46:	51 e4       	ldi	r21, 0x41	; 65
     f48:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     f4c:	6b 01       	movw	r12, r22
     f4e:	7c 01       	movw	r14, r24
     f50:	20 e0       	ldi	r18, 0x00	; 0
     f52:	30 e0       	ldi	r19, 0x00	; 0
     f54:	40 e0       	ldi	r20, 0x00	; 0
     f56:	5f e3       	ldi	r21, 0x3F	; 63
     f58:	69 81       	ldd	r22, Y+1	; 0x01
     f5a:	7a 81       	ldd	r23, Y+2	; 0x02
     f5c:	8b 81       	ldd	r24, Y+3	; 0x03
     f5e:	9c 81       	ldd	r25, Y+4	; 0x04
     f60:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     f64:	9b 01       	movw	r18, r22
     f66:	ac 01       	movw	r20, r24
     f68:	c7 01       	movw	r24, r14
     f6a:	b6 01       	movw	r22, r12
     f6c:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     f70:	2b ed       	ldi	r18, 0xDB	; 219
     f72:	3f e0       	ldi	r19, 0x0F	; 15
     f74:	49 e4       	ldi	r20, 0x49	; 73
     f76:	50 e4       	ldi	r21, 0x40	; 64
     f78:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     f7c:	20 e0       	ldi	r18, 0x00	; 0
     f7e:	30 e0       	ldi	r19, 0x00	; 0
     f80:	44 e3       	ldi	r20, 0x34	; 52
     f82:	53 e4       	ldi	r21, 0x43	; 67
     f84:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
     f88:	2b ed       	ldi	r18, 0xDB	; 219
     f8a:	3f e0       	ldi	r19, 0x0F	; 15
     f8c:	49 ec       	ldi	r20, 0xC9	; 201
     f8e:	5f e3       	ldi	r21, 0x3F	; 63
     f90:	0e 94 d8 2b 	call	0x57b0	; 0x57b0 <__subsf3>
     f94:	6b 01       	movw	r12, r22
     f96:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
     f98:	0e 94 a3 2c 	call	0x5946	; 0x5946 <cos>
     f9c:	2b 01       	movw	r4, r22
     f9e:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
     fa0:	c7 01       	movw	r24, r14
     fa2:	b6 01       	movw	r22, r12
     fa4:	0e 94 02 2f 	call	0x5e04	; 0x5e04 <sin>
     fa8:	4b 01       	movw	r8, r22
     faa:	5c 01       	movw	r10, r24
     fac:	00 e0       	ldi	r16, 0x00	; 0
     fae:	10 e0       	ldi	r17, 0x00	; 0

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
     fb0:	b8 01       	movw	r22, r16
     fb2:	88 27       	eor	r24, r24
     fb4:	77 fd       	sbrc	r23, 7
     fb6:	80 95       	com	r24
     fb8:	98 2f       	mov	r25, r24
     fba:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
     fbe:	6b 01       	movw	r12, r22
     fc0:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
     fc2:	a5 01       	movw	r20, r10
     fc4:	94 01       	movw	r18, r8
     fc6:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     fca:	20 e0       	ldi	r18, 0x00	; 0
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	48 ef       	ldi	r20, 0xF8	; 248
     fd0:	51 e4       	ldi	r21, 0x41	; 65
     fd2:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     fd6:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
     fda:	36 2e       	mov	r3, r22

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
     fdc:	a3 01       	movw	r20, r6
     fde:	92 01       	movw	r18, r4
     fe0:	c7 01       	movw	r24, r14
     fe2:	b6 01       	movw	r22, r12
     fe4:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
     fe8:	20 e0       	ldi	r18, 0x00	; 0
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	48 ef       	ldi	r20, 0xF8	; 248
     fee:	51 e4       	ldi	r21, 0x41	; 65
     ff0:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
     ff4:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
     ff8:	20 e0       	ldi	r18, 0x00	; 0
     ffa:	43 2d       	mov	r20, r3
     ffc:	8e 81       	ldd	r24, Y+6	; 0x06
     ffe:	9f 81       	ldd	r25, Y+7	; 0x07
    1000:	cb db       	rcall	.-2154   	; 0x798 <_ZN7Display9drawPixelEhhh>
    1002:	0f 5f       	subi	r16, 0xFF	; 255
    1004:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=13;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    1006:	0d 30       	cpi	r16, 0x0D	; 13
    1008:	11 05       	cpc	r17, r1
    100a:	91 f6       	brne	.-92     	; 0xfb0 <_ZN7Display6analogEhhhh+0x230>
    100c:	cb c0       	rjmp	.+406    	; 0x11a4 <_ZN7Display6analogEhhhh+0x424>
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
    100e:	64 2f       	mov	r22, r20
    1010:	70 e0       	ldi	r23, 0x00	; 0
    1012:	80 e0       	ldi	r24, 0x00	; 0
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
    101a:	69 83       	std	Y+1, r22	; 0x01
    101c:	7a 83       	std	Y+2, r23	; 0x02
    101e:	8b 83       	std	Y+3, r24	; 0x03
    1020:	9c 83       	std	Y+4, r25	; 0x04
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	40 ec       	ldi	r20, 0xC0	; 192
    1028:	50 e4       	ldi	r21, 0x40	; 64
    102a:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    102e:	2b ed       	ldi	r18, 0xDB	; 219
    1030:	3f e0       	ldi	r19, 0x0F	; 15
    1032:	49 e4       	ldi	r20, 0x49	; 73
    1034:	50 e4       	ldi	r21, 0x40	; 64
    1036:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    103a:	20 e0       	ldi	r18, 0x00	; 0
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	44 e3       	ldi	r20, 0x34	; 52
    1040:	53 e4       	ldi	r21, 0x43	; 67
    1042:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
    1046:	2b ed       	ldi	r18, 0xDB	; 219
    1048:	3f e0       	ldi	r19, 0x0F	; 15
    104a:	49 ec       	ldi	r20, 0xC9	; 201
    104c:	5f e3       	ldi	r21, 0x3F	; 63
    104e:	0e 94 d8 2b 	call	0x57b0	; 0x57b0 <__subsf3>
    1052:	6b 01       	movw	r12, r22
    1054:	7c 01       	movw	r14, r24
			x=(uint8_t) i*cos(winkel)+Px;
    1056:	0e 94 a3 2c 	call	0x5946	; 0x5946 <cos>
    105a:	4b 01       	movw	r8, r22
    105c:	5c 01       	movw	r10, r24
			y=(uint8_t) i*sin(winkel)+Py;
    105e:	c7 01       	movw	r24, r14
    1060:	b6 01       	movw	r22, r12
    1062:	0e 94 02 2f 	call	0x5e04	; 0x5e04 <sin>
    1066:	2b 01       	movw	r4, r22
    1068:	3c 01       	movw	r6, r24
    106a:	00 e0       	ldi	r16, 0x00	; 0
    106c:	10 e0       	ldi	r17, 0x00	; 0
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    106e:	b8 01       	movw	r22, r16
    1070:	88 27       	eor	r24, r24
    1072:	77 fd       	sbrc	r23, 7
    1074:	80 95       	com	r24
    1076:	98 2f       	mov	r25, r24
    1078:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
    107c:	6b 01       	movw	r12, r22
    107e:	7c 01       	movw	r14, r24
			y=(uint8_t) i*sin(winkel)+Py;
    1080:	a3 01       	movw	r20, r6
    1082:	92 01       	movw	r18, r4
    1084:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    1088:	20 e0       	ldi	r18, 0x00	; 0
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	48 ef       	ldi	r20, 0xF8	; 248
    108e:	51 e4       	ldi	r21, 0x41	; 65
    1090:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
    1094:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
    1098:	36 2e       	mov	r3, r22
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(minute*6.0)*M_PI/180.0-M_PI/2.0;
			x=(uint8_t) i*cos(winkel)+Px;
    109a:	a5 01       	movw	r20, r10
    109c:	94 01       	movw	r18, r8
    109e:	c7 01       	movw	r24, r14
    10a0:	b6 01       	movw	r22, r12
    10a2:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    10a6:	20 e0       	ldi	r18, 0x00	; 0
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	48 ef       	ldi	r20, 0xF8	; 248
    10ac:	51 e4       	ldi	r21, 0x41	; 65
    10ae:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
    10b2:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
			y=(uint8_t) i*sin(winkel)+Py;

			drawPixel(x,y,0);
    10b6:	20 e0       	ldi	r18, 0x00	; 0
    10b8:	43 2d       	mov	r20, r3
    10ba:	8e 81       	ldd	r24, Y+6	; 0x06
    10bc:	9f 81       	ldd	r25, Y+7	; 0x07
    10be:	6c db       	rcall	.-2344   	; 0x798 <_ZN7Display9drawPixelEhhh>
    10c0:	0f 5f       	subi	r16, 0xFF	; 255
    10c2:	1f 4f       	sbci	r17, 0xFF	; 255
		}
	}
	else{
		r=25;
		//Berechnen des Minutenzeigers
		for(uint8_t i=0;i<r;i++){
    10c4:	09 31       	cpi	r16, 0x19	; 25
    10c6:	11 05       	cpc	r17, r1
    10c8:	91 f6       	brne	.-92     	; 0x106e <_ZN7Display6analogEhhhh+0x2ee>
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
    10ca:	ed 81       	ldd	r30, Y+5	; 0x05
    10cc:	6e 2f       	mov	r22, r30
    10ce:	70 e0       	ldi	r23, 0x00	; 0
    10d0:	80 e0       	ldi	r24, 0x00	; 0
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
    10d8:	20 e0       	ldi	r18, 0x00	; 0
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	40 ef       	ldi	r20, 0xF0	; 240
    10de:	51 e4       	ldi	r21, 0x41	; 65
    10e0:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    10e4:	6b 01       	movw	r12, r22
    10e6:	7c 01       	movw	r14, r24
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	40 e0       	ldi	r20, 0x00	; 0
    10ee:	5f e3       	ldi	r21, 0x3F	; 63
    10f0:	69 81       	ldd	r22, Y+1	; 0x01
    10f2:	7a 81       	ldd	r23, Y+2	; 0x02
    10f4:	8b 81       	ldd	r24, Y+3	; 0x03
    10f6:	9c 81       	ldd	r25, Y+4	; 0x04
    10f8:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    10fc:	9b 01       	movw	r18, r22
    10fe:	ac 01       	movw	r20, r24
    1100:	c7 01       	movw	r24, r14
    1102:	b6 01       	movw	r22, r12
    1104:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
    1108:	2b ed       	ldi	r18, 0xDB	; 219
    110a:	3f e0       	ldi	r19, 0x0F	; 15
    110c:	49 e4       	ldi	r20, 0x49	; 73
    110e:	50 e4       	ldi	r21, 0x40	; 64
    1110:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    1114:	20 e0       	ldi	r18, 0x00	; 0
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	44 e3       	ldi	r20, 0x34	; 52
    111a:	53 e4       	ldi	r21, 0x43	; 67
    111c:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
    1120:	2b ed       	ldi	r18, 0xDB	; 219
    1122:	3f e0       	ldi	r19, 0x0F	; 15
    1124:	49 ec       	ldi	r20, 0xC9	; 201
    1126:	5f e3       	ldi	r21, 0x3F	; 63
    1128:	0e 94 d8 2b 	call	0x57b0	; 0x57b0 <__subsf3>
    112c:	6b 01       	movw	r12, r22
    112e:	7c 01       	movw	r14, r24
			x= (uint8_t) i*cos(winkel) +Px;
    1130:	0e 94 a3 2c 	call	0x5946	; 0x5946 <cos>
    1134:	2b 01       	movw	r4, r22
    1136:	3c 01       	movw	r6, r24
			y= (uint8_t) i*sin(winkel) +Py;
    1138:	c7 01       	movw	r24, r14
    113a:	b6 01       	movw	r22, r12
    113c:	0e 94 02 2f 	call	0x5e04	; 0x5e04 <sin>
    1140:	4b 01       	movw	r8, r22
    1142:	5c 01       	movw	r10, r24
    1144:	00 e0       	ldi	r16, 0x00	; 0
    1146:	10 e0       	ldi	r17, 0x00	; 0

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    1148:	b8 01       	movw	r22, r16
    114a:	88 27       	eor	r24, r24
    114c:	77 fd       	sbrc	r23, 7
    114e:	80 95       	com	r24
    1150:	98 2f       	mov	r25, r24
    1152:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
    1156:	6b 01       	movw	r12, r22
    1158:	7c 01       	movw	r14, r24
			y= (uint8_t) i*sin(winkel) +Py;
    115a:	a5 01       	movw	r20, r10
    115c:	94 01       	movw	r18, r8
    115e:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    1162:	20 e0       	ldi	r18, 0x00	; 0
    1164:	30 e0       	ldi	r19, 0x00	; 0
    1166:	48 ef       	ldi	r20, 0xF8	; 248
    1168:	51 e4       	ldi	r21, 0x41	; 65
    116a:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
    116e:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
    1172:	36 2e       	mov	r3, r22

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
			winkel=(stunde*30.0+minute/2.0)*M_PI/180.0-M_PI/2.0;
			x= (uint8_t) i*cos(winkel) +Px;
    1174:	a3 01       	movw	r20, r6
    1176:	92 01       	movw	r18, r4
    1178:	c7 01       	movw	r24, r14
    117a:	b6 01       	movw	r22, r12
    117c:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	48 ef       	ldi	r20, 0xF8	; 248
    1186:	51 e4       	ldi	r21, 0x41	; 65
    1188:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
    118c:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
			y= (uint8_t) i*sin(winkel) +Py;

			drawPixel(x,y,0);
    1190:	20 e0       	ldi	r18, 0x00	; 0
    1192:	43 2d       	mov	r20, r3
    1194:	8e 81       	ldd	r24, Y+6	; 0x06
    1196:	9f 81       	ldd	r25, Y+7	; 0x07
    1198:	ff da       	rcall	.-2562   	; 0x798 <_ZN7Display9drawPixelEhhh>
    119a:	0f 5f       	subi	r16, 0xFF	; 255
    119c:	1f 4f       	sbci	r17, 0xFF	; 255
			drawPixel(x,y,0);
		}

		r=17;
		//Berechnen des Stundenzeigers
		for(uint8_t i=0;i<r;i++){
    119e:	01 31       	cpi	r16, 0x11	; 17
    11a0:	11 05       	cpc	r17, r1
    11a2:	91 f6       	brne	.-92     	; 0x1148 <_ZN7Display6analogEhhhh+0x3c8>
		}
	}
	

	//Anzeige der Zahlen
	draw_ASCI('1',32-charsize,0);
    11a4:	20 e0       	ldi	r18, 0x00	; 0
    11a6:	4a e1       	ldi	r20, 0x1A	; 26
    11a8:	61 e3       	ldi	r22, 0x31	; 49
    11aa:	8e 81       	ldd	r24, Y+6	; 0x06
    11ac:	9f 81       	ldd	r25, Y+7	; 0x07
    11ae:	24 dd       	rcall	.-1464   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('2',32,0);
    11b0:	20 e0       	ldi	r18, 0x00	; 0
    11b2:	40 e2       	ldi	r20, 0x20	; 32
    11b4:	62 e3       	ldi	r22, 0x32	; 50
    11b6:	8e 81       	ldd	r24, Y+6	; 0x06
    11b8:	9f 81       	ldd	r25, Y+7	; 0x07
    11ba:	1e dd       	rcall	.-1476   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('3',64-charsize,4*charhighte-charhighte/2);
    11bc:	2c e1       	ldi	r18, 0x1C	; 28
    11be:	4a e3       	ldi	r20, 0x3A	; 58
    11c0:	63 e3       	ldi	r22, 0x33	; 51
    11c2:	8e 81       	ldd	r24, Y+6	; 0x06
    11c4:	9f 81       	ldd	r25, Y+7	; 0x07
    11c6:	18 dd       	rcall	.-1488   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('6',32-charsize/2,7*charhighte);
    11c8:	28 e3       	ldi	r18, 0x38	; 56
    11ca:	4d e1       	ldi	r20, 0x1D	; 29
    11cc:	66 e3       	ldi	r22, 0x36	; 54
    11ce:	8e 81       	ldd	r24, Y+6	; 0x06
    11d0:	9f 81       	ldd	r25, Y+7	; 0x07
    11d2:	12 dd       	rcall	.-1500   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
	draw_ASCI('9',0,4*charhighte-charhighte/2);
    11d4:	2c e1       	ldi	r18, 0x1C	; 28
    11d6:	40 e0       	ldi	r20, 0x00	; 0
    11d8:	69 e3       	ldi	r22, 0x39	; 57
    11da:	8e 81       	ldd	r24, Y+6	; 0x06
    11dc:	9f 81       	ldd	r25, Y+7	; 0x07
    11de:	0c dd       	rcall	.-1512   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>

	//anzeige des Rings fuer die Restlichen Stunden Zahlen
	//1
	drawPixel(26*cos((30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11e0:	20 e0       	ldi	r18, 0x00	; 0
    11e2:	48 e0       	ldi	r20, 0x08	; 8
    11e4:	6c e2       	ldi	r22, 0x2C	; 44
    11e6:	8e 81       	ldd	r24, Y+6	; 0x06
    11e8:	9f 81       	ldd	r25, Y+7	; 0x07
    11ea:	d6 da       	rcall	.-2644   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//2
	drawPixel(26*cos((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((2*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11ec:	20 e0       	ldi	r18, 0x00	; 0
    11ee:	42 e1       	ldi	r20, 0x12	; 18
    11f0:	65 e3       	ldi	r22, 0x35	; 53
    11f2:	8e 81       	ldd	r24, Y+6	; 0x06
    11f4:	9f 81       	ldd	r25, Y+7	; 0x07
    11f6:	d0 da       	rcall	.-2656   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//4
	drawPixel(26*cos((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((4*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    11f8:	20 e0       	ldi	r18, 0x00	; 0
    11fa:	4c e2       	ldi	r20, 0x2C	; 44
    11fc:	65 e3       	ldi	r22, 0x35	; 53
    11fe:	8e 81       	ldd	r24, Y+6	; 0x06
    1200:	9f 81       	ldd	r25, Y+7	; 0x07
    1202:	ca da       	rcall	.-2668   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//5
	drawPixel(26*cos((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((5*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1204:	20 e0       	ldi	r18, 0x00	; 0
    1206:	45 e3       	ldi	r20, 0x35	; 53
    1208:	6b e2       	ldi	r22, 0x2B	; 43
    120a:	8e 81       	ldd	r24, Y+6	; 0x06
    120c:	9f 81       	ldd	r25, Y+7	; 0x07
    120e:	c4 da       	rcall	.-2680   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//7
	drawPixel(26*cos((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((7*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1210:	20 e0       	ldi	r18, 0x00	; 0
    1212:	45 e3       	ldi	r20, 0x35	; 53
    1214:	61 e1       	ldi	r22, 0x11	; 17
    1216:	8e 81       	ldd	r24, Y+6	; 0x06
    1218:	9f 81       	ldd	r25, Y+7	; 0x07
    121a:	be da       	rcall	.-2692   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//8
	drawPixel(26*cos((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((8*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    121c:	20 e0       	ldi	r18, 0x00	; 0
    121e:	4c e2       	ldi	r20, 0x2C	; 44
    1220:	68 e0       	ldi	r22, 0x08	; 8
    1222:	8e 81       	ldd	r24, Y+6	; 0x06
    1224:	9f 81       	ldd	r25, Y+7	; 0x07
    1226:	b8 da       	rcall	.-2704   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//10
	drawPixel(26*cos((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((10*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1228:	20 e0       	ldi	r18, 0x00	; 0
    122a:	41 e1       	ldi	r20, 0x11	; 17
    122c:	68 e0       	ldi	r22, 0x08	; 8
    122e:	8e 81       	ldd	r24, Y+6	; 0x06
    1230:	9f 81       	ldd	r25, Y+7	; 0x07
    1232:	b2 da       	rcall	.-2716   	; 0x798 <_ZN7Display9drawPixelEhhh>
	//11
	drawPixel(26*cos((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,26*sin((11*30.0)*M_PI/180.0-M_PI/2.0)+Px,0);
    1234:	20 e0       	ldi	r18, 0x00	; 0
    1236:	48 e0       	ldi	r20, 0x08	; 8
    1238:	62 e1       	ldi	r22, 0x12	; 18
    123a:	8e 81       	ldd	r24, Y+6	; 0x06
    123c:	9f 81       	ldd	r25, Y+7	; 0x07
    123e:	ac da       	rcall	.-2728   	; 0x798 <_ZN7Display9drawPixelEhhh>
}
    1240:	27 96       	adiw	r28, 0x07	; 7
    1242:	0f b6       	in	r0, 0x3f	; 63
    1244:	f8 94       	cli
    1246:	de bf       	out	0x3e, r29	; 62
    1248:	0f be       	out	0x3f, r0	; 63
    124a:	cd bf       	out	0x3d, r28	; 61
    124c:	df 91       	pop	r29
    124e:	cf 91       	pop	r28
    1250:	1f 91       	pop	r17
    1252:	0f 91       	pop	r16
    1254:	ff 90       	pop	r15
    1256:	ef 90       	pop	r14
    1258:	df 90       	pop	r13
    125a:	cf 90       	pop	r12
    125c:	bf 90       	pop	r11
    125e:	af 90       	pop	r10
    1260:	9f 90       	pop	r9
    1262:	8f 90       	pop	r8
    1264:	7f 90       	pop	r7
    1266:	6f 90       	pop	r6
    1268:	5f 90       	pop	r5
    126a:	4f 90       	pop	r4
    126c:	3f 90       	pop	r3
    126e:	2f 90       	pop	r2
    1270:	08 95       	ret

00001272 <_Z8ADC_Readh>:
		oled.draw_pikachu();
		break;
	default:
		break;
	}
}
    1272:	ec e7       	ldi	r30, 0x7C	; 124
    1274:	f0 e0       	ldi	r31, 0x00	; 0
    1276:	90 81       	ld	r25, Z
    1278:	8f 71       	andi	r24, 0x1F	; 31
    127a:	90 7e       	andi	r25, 0xE0	; 224
    127c:	98 2b       	or	r25, r24
    127e:	90 83       	st	Z, r25
    1280:	ea e7       	ldi	r30, 0x7A	; 122
    1282:	f0 e0       	ldi	r31, 0x00	; 0
    1284:	80 81       	ld	r24, Z
    1286:	80 64       	ori	r24, 0x40	; 64
    1288:	80 83       	st	Z, r24
    128a:	80 81       	ld	r24, Z
    128c:	86 fd       	sbrc	r24, 6
    128e:	fd cf       	rjmp	.-6      	; 0x128a <_Z8ADC_Readh+0x18>
    1290:	80 91 78 00 	lds	r24, 0x0078
    1294:	90 91 79 00 	lds	r25, 0x0079
    1298:	08 95       	ret

0000129a <_Z14Batteriestatusv>:
    129a:	cf 92       	push	r12
    129c:	df 92       	push	r13
    129e:	ef 92       	push	r14
    12a0:	ff 92       	push	r15
    12a2:	80 e0       	ldi	r24, 0x00	; 0
    12a4:	e6 df       	rcall	.-52     	; 0x1272 <_Z8ADC_Readh>
    12a6:	bc 01       	movw	r22, r24
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	0e 94 3f 2d 	call	0x5a7e	; 0x5a7e <__floatunsisf>
    12b0:	20 e0       	ldi	r18, 0x00	; 0
    12b2:	30 ec       	ldi	r19, 0xC0	; 192
    12b4:	4f e7       	ldi	r20, 0x7F	; 127
    12b6:	54 e4       	ldi	r21, 0x44	; 68
    12b8:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
    12bc:	2c e5       	ldi	r18, 0x5C	; 92
    12be:	3f e8       	ldi	r19, 0x8F	; 143
    12c0:	42 e5       	ldi	r20, 0x52	; 82
    12c2:	50 e4       	ldi	r21, 0x40	; 64
    12c4:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    12c8:	2d e0       	ldi	r18, 0x0D	; 13
    12ca:	31 e7       	ldi	r19, 0x71	; 113
    12cc:	40 e0       	ldi	r20, 0x00	; 0
    12ce:	50 e4       	ldi	r21, 0x40	; 64
    12d0:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    12d4:	60 93 57 03 	sts	0x0357, r22
    12d8:	70 93 58 03 	sts	0x0358, r23
    12dc:	80 93 59 03 	sts	0x0359, r24
    12e0:	90 93 5a 03 	sts	0x035A, r25
    12e4:	20 e0       	ldi	r18, 0x00	; 0
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	40 e4       	ldi	r20, 0x40	; 64
    12ea:	50 e4       	ldi	r21, 0x40	; 64
    12ec:	0e 94 d8 2b 	call	0x57b0	; 0x57b0 <__subsf3>
    12f0:	28 e9       	ldi	r18, 0x98	; 152
    12f2:	39 e9       	ldi	r19, 0x99	; 153
    12f4:	49 e9       	ldi	r20, 0x99	; 153
    12f6:	5f e3       	ldi	r21, 0x3F	; 63
    12f8:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
    12fc:	20 e0       	ldi	r18, 0x00	; 0
    12fe:	30 e0       	ldi	r19, 0x00	; 0
    1300:	48 ec       	ldi	r20, 0xC8	; 200
    1302:	52 e4       	ldi	r21, 0x42	; 66
    1304:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    1308:	6b 01       	movw	r12, r22
    130a:	7c 01       	movw	r14, r24
    130c:	20 e0       	ldi	r18, 0x00	; 0
    130e:	30 e0       	ldi	r19, 0x00	; 0
    1310:	40 e2       	ldi	r20, 0x20	; 32
    1312:	51 e4       	ldi	r21, 0x41	; 65
    1314:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    1318:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
    131c:	8d ec       	ldi	r24, 0xCD	; 205
    131e:	68 9f       	mul	r22, r24
    1320:	81 2d       	mov	r24, r1
    1322:	11 24       	eor	r1, r1
    1324:	86 95       	lsr	r24
    1326:	86 95       	lsr	r24
    1328:	86 95       	lsr	r24
    132a:	88 0f       	add	r24, r24
    132c:	98 2f       	mov	r25, r24
    132e:	99 0f       	add	r25, r25
    1330:	99 0f       	add	r25, r25
    1332:	89 0f       	add	r24, r25
    1334:	68 1b       	sub	r22, r24
    1336:	65 30       	cpi	r22, 0x05	; 5
    1338:	70 f0       	brcs	.+28     	; 0x1356 <_Z14Batteriestatusv+0xbc>
    133a:	c7 01       	movw	r24, r14
    133c:	b6 01       	movw	r22, r12
    133e:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	6f 5f       	subi	r22, 0xFF	; 255
    1346:	7f 4f       	sbci	r23, 0xFF	; 255
    1348:	88 27       	eor	r24, r24
    134a:	77 fd       	sbrc	r23, 7
    134c:	80 95       	com	r24
    134e:	98 2f       	mov	r25, r24
    1350:	0e 94 41 2d 	call	0x5a82	; 0x5a82 <__floatsisf>
    1354:	09 c0       	rjmp	.+18     	; 0x1368 <_Z14Batteriestatusv+0xce>
    1356:	c7 01       	movw	r24, r14
    1358:	b6 01       	movw	r22, r12
    135a:	0e 94 13 2d 	call	0x5a26	; 0x5a26 <__fixunssfsi>
    135e:	70 e0       	ldi	r23, 0x00	; 0
    1360:	80 e0       	ldi	r24, 0x00	; 0
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	0e 94 3f 2d 	call	0x5a7e	; 0x5a7e <__floatunsisf>
    1368:	0e 94 0e 2d 	call	0x5a1c	; 0x5a1c <__fixsfsi>
    136c:	86 2f       	mov	r24, r22
    136e:	ff 90       	pop	r15
    1370:	ef 90       	pop	r14
    1372:	df 90       	pop	r13
    1374:	cf 90       	pop	r12
    1376:	08 95       	ret

00001378 <_Z14willkommenpagev>:
    1378:	cf 92       	push	r12
    137a:	df 92       	push	r13
    137c:	ef 92       	push	r14
    137e:	ff 92       	push	r15
    1380:	0f 93       	push	r16
    1382:	1f 93       	push	r17
    1384:	cf 93       	push	r28
    1386:	df 93       	push	r29
    1388:	cd b7       	in	r28, 0x3d	; 61
    138a:	de b7       	in	r29, 0x3e	; 62
    138c:	64 97       	sbiw	r28, 0x14	; 20
    138e:	0f b6       	in	r0, 0x3f	; 63
    1390:	f8 94       	cli
    1392:	de bf       	out	0x3e, r29	; 62
    1394:	0f be       	out	0x3f, r0	; 63
    1396:	cd bf       	out	0x3d, r28	; 61
    1398:	83 e8       	ldi	r24, 0x83	; 131
    139a:	93 e0       	ldi	r25, 0x03	; 3
    139c:	36 d9       	rcall	.-3476   	; 0x60a <_ZN7Display10clearFrameEv>
    139e:	8f e0       	ldi	r24, 0x0F	; 15
    13a0:	e0 e0       	ldi	r30, 0x00	; 0
    13a2:	f1 e0       	ldi	r31, 0x01	; 1
    13a4:	8e 01       	movw	r16, r28
    13a6:	0f 5f       	subi	r16, 0xFF	; 255
    13a8:	1f 4f       	sbci	r17, 0xFF	; 255
    13aa:	d8 01       	movw	r26, r16
    13ac:	01 90       	ld	r0, Z+
    13ae:	0d 92       	st	X+, r0
    13b0:	8a 95       	dec	r24
    13b2:	e1 f7       	brne	.-8      	; 0x13ac <_Z14willkommenpagev+0x34>
    13b4:	c0 2e       	mov	r12, r16
    13b6:	d1 2e       	mov	r13, r17
    13b8:	78 01       	movw	r14, r16
    13ba:	10 e0       	ldi	r17, 0x00	; 0
    13bc:	f7 01       	movw	r30, r14
    13be:	61 91       	ld	r22, Z+
    13c0:	7f 01       	movw	r14, r30
    13c2:	20 e0       	ldi	r18, 0x00	; 0
    13c4:	41 2f       	mov	r20, r17
    13c6:	83 e8       	ldi	r24, 0x83	; 131
    13c8:	93 e0       	ldi	r25, 0x03	; 3
    13ca:	16 dc       	rcall	.-2004   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    13cc:	1a 5f       	subi	r17, 0xFA	; 250
    13ce:	14 35       	cpi	r17, 0x54	; 84
    13d0:	a9 f7       	brne	.-22     	; 0x13bc <_Z14willkommenpagev+0x44>
    13d2:	8f e0       	ldi	r24, 0x0F	; 15
    13d4:	ef e0       	ldi	r30, 0x0F	; 15
    13d6:	f1 e0       	ldi	r31, 0x01	; 1
    13d8:	de 01       	movw	r26, r28
    13da:	11 96       	adiw	r26, 0x01	; 1
    13dc:	01 90       	ld	r0, Z+
    13de:	0d 92       	st	X+, r0
    13e0:	8a 95       	dec	r24
    13e2:	e1 f7       	brne	.-8      	; 0x13dc <_Z14willkommenpagev+0x64>
    13e4:	ec 2c       	mov	r14, r12
    13e6:	fd 2c       	mov	r15, r13
    13e8:	10 e0       	ldi	r17, 0x00	; 0
    13ea:	f7 01       	movw	r30, r14
    13ec:	61 91       	ld	r22, Z+
    13ee:	7f 01       	movw	r14, r30
    13f0:	28 e0       	ldi	r18, 0x08	; 8
    13f2:	41 2f       	mov	r20, r17
    13f4:	83 e8       	ldi	r24, 0x83	; 131
    13f6:	93 e0       	ldi	r25, 0x03	; 3
    13f8:	ff db       	rcall	.-2050   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    13fa:	1a 5f       	subi	r17, 0xFA	; 250
    13fc:	14 35       	cpi	r17, 0x54	; 84
    13fe:	a9 f7       	brne	.-22     	; 0x13ea <_Z14willkommenpagev+0x72>
    1400:	80 e4       	ldi	r24, 0x40	; 64
    1402:	8f 93       	push	r24
    1404:	86 e0       	ldi	r24, 0x06	; 6
    1406:	8f 93       	push	r24
    1408:	86 e6       	ldi	r24, 0x66	; 102
    140a:	8f 93       	push	r24
    140c:	8f 93       	push	r24
    140e:	8e e1       	ldi	r24, 0x1E	; 30
    1410:	91 e0       	ldi	r25, 0x01	; 1
    1412:	9f 93       	push	r25
    1414:	8f 93       	push	r24
    1416:	ce 01       	movw	r24, r28
    1418:	01 96       	adiw	r24, 0x01	; 1
    141a:	9f 93       	push	r25
    141c:	8f 93       	push	r24
    141e:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    1422:	0f b6       	in	r0, 0x3f	; 63
    1424:	f8 94       	cli
    1426:	de bf       	out	0x3e, r29	; 62
    1428:	0f be       	out	0x3f, r0	; 63
    142a:	cd bf       	out	0x3d, r28	; 61
    142c:	88 23       	and	r24, r24
    142e:	c9 f0       	breq	.+50     	; 0x1462 <_Z14willkommenpagev+0xea>
    1430:	81 50       	subi	r24, 0x01	; 1
    1432:	68 94       	set
    1434:	ee 24       	eor	r14, r14
    1436:	e1 f8       	bld	r14, 1
    1438:	f1 2c       	mov	r15, r1
    143a:	ec 0e       	add	r14, r28
    143c:	fd 1e       	adc	r15, r29
    143e:	e8 0e       	add	r14, r24
    1440:	f1 1c       	adc	r15, r1
    1442:	0c 2d       	mov	r16, r12
    1444:	1d 2d       	mov	r17, r13
    1446:	d1 2c       	mov	r13, r1
    1448:	f8 01       	movw	r30, r16
    144a:	61 91       	ld	r22, Z+
    144c:	8f 01       	movw	r16, r30
    144e:	20 e2       	ldi	r18, 0x20	; 32
    1450:	4d 2d       	mov	r20, r13
    1452:	83 e8       	ldi	r24, 0x83	; 131
    1454:	93 e0       	ldi	r25, 0x03	; 3
    1456:	d0 db       	rcall	.-2144   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1458:	f6 e0       	ldi	r31, 0x06	; 6
    145a:	df 0e       	add	r13, r31
    145c:	0e 15       	cp	r16, r14
    145e:	1f 05       	cpc	r17, r15
    1460:	99 f7       	brne	.-26     	; 0x1448 <_Z14willkommenpagev+0xd0>
    1462:	83 e8       	ldi	r24, 0x83	; 131
    1464:	93 e0       	ldi	r25, 0x03	; 3
    1466:	5b d9       	rcall	.-3402   	; 0x71e <_ZN7Display9sendFrameEv>
    1468:	83 e8       	ldi	r24, 0x83	; 131
    146a:	93 e0       	ldi	r25, 0x03	; 3
    146c:	ce d8       	rcall	.-3684   	; 0x60a <_ZN7Display10clearFrameEv>
    146e:	85 e0       	ldi	r24, 0x05	; 5
    1470:	2f e7       	ldi	r18, 0x7F	; 127
    1472:	38 e3       	ldi	r19, 0x38	; 56
    1474:	91 e0       	ldi	r25, 0x01	; 1
    1476:	21 50       	subi	r18, 0x01	; 1
    1478:	30 40       	sbci	r19, 0x00	; 0
    147a:	90 40       	sbci	r25, 0x00	; 0
    147c:	e1 f7       	brne	.-8      	; 0x1476 <_Z14willkommenpagev+0xfe>
    147e:	00 c0       	rjmp	.+0      	; 0x1480 <_Z14willkommenpagev+0x108>
    1480:	00 00       	nop
    1482:	ef e7       	ldi	r30, 0x7F	; 127
    1484:	f8 e3       	ldi	r31, 0x38	; 56
    1486:	21 e0       	ldi	r18, 0x01	; 1
    1488:	e1 50       	subi	r30, 0x01	; 1
    148a:	f0 40       	sbci	r31, 0x00	; 0
    148c:	20 40       	sbci	r18, 0x00	; 0
    148e:	e1 f7       	brne	.-8      	; 0x1488 <_Z14willkommenpagev+0x110>
    1490:	00 c0       	rjmp	.+0      	; 0x1492 <_Z14willkommenpagev+0x11a>
    1492:	00 00       	nop
    1494:	81 50       	subi	r24, 0x01	; 1
    1496:	61 f7       	brne	.-40     	; 0x1470 <_Z14willkommenpagev+0xf8>
    1498:	64 96       	adiw	r28, 0x14	; 20
    149a:	0f b6       	in	r0, 0x3f	; 63
    149c:	f8 94       	cli
    149e:	de bf       	out	0x3e, r29	; 62
    14a0:	0f be       	out	0x3f, r0	; 63
    14a2:	cd bf       	out	0x3d, r28	; 61
    14a4:	df 91       	pop	r29
    14a6:	cf 91       	pop	r28
    14a8:	1f 91       	pop	r17
    14aa:	0f 91       	pop	r16
    14ac:	ff 90       	pop	r15
    14ae:	ef 90       	pop	r14
    14b0:	df 90       	pop	r13
    14b2:	cf 90       	pop	r12
    14b4:	08 95       	ret

000014b6 <_Z6headerh>:
    14b6:	ef 92       	push	r14
    14b8:	ff 92       	push	r15
    14ba:	0f 93       	push	r16
    14bc:	1f 93       	push	r17
    14be:	cf 93       	push	r28
    14c0:	df 93       	push	r29
    14c2:	cd b7       	in	r28, 0x3d	; 61
    14c4:	de b7       	in	r29, 0x3e	; 62
    14c6:	64 97       	sbiw	r28, 0x14	; 20
    14c8:	0f b6       	in	r0, 0x3f	; 63
    14ca:	f8 94       	cli
    14cc:	de bf       	out	0x3e, r29	; 62
    14ce:	0f be       	out	0x3f, r0	; 63
    14d0:	cd bf       	out	0x3d, r28	; 61
    14d2:	81 30       	cpi	r24, 0x01	; 1
    14d4:	09 f4       	brne	.+2      	; 0x14d8 <_Z6headerh+0x22>
    14d6:	51 c0       	rjmp	.+162    	; 0x157a <_Z6headerh+0xc4>
    14d8:	20 f0       	brcs	.+8      	; 0x14e2 <_Z6headerh+0x2c>
    14da:	82 30       	cpi	r24, 0x02	; 2
    14dc:	09 f4       	brne	.+2      	; 0x14e0 <_Z6headerh+0x2a>
    14de:	87 c0       	rjmp	.+270    	; 0x15ee <_Z6headerh+0x138>
    14e0:	be c0       	rjmp	.+380    	; 0x165e <_Z6headerh+0x1a8>
    14e2:	0f 2e       	mov	r0, r31
    14e4:	f4 e8       	ldi	r31, 0x84	; 132
    14e6:	ef 2e       	mov	r14, r31
    14e8:	f7 e0       	ldi	r31, 0x07	; 7
    14ea:	ff 2e       	mov	r15, r31
    14ec:	f0 2d       	mov	r31, r0
    14ee:	10 e0       	ldi	r17, 0x00	; 0
    14f0:	f7 01       	movw	r30, r14
    14f2:	61 91       	ld	r22, Z+
    14f4:	7f 01       	movw	r14, r30
    14f6:	20 e0       	ldi	r18, 0x00	; 0
    14f8:	41 2f       	mov	r20, r17
    14fa:	83 e8       	ldi	r24, 0x83	; 131
    14fc:	93 e0       	ldi	r25, 0x03	; 3
    14fe:	7c db       	rcall	.-2312   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1500:	1a 5f       	subi	r17, 0xFA	; 250
    1502:	10 33       	cpi	r17, 0x30	; 48
    1504:	a9 f7       	brne	.-22     	; 0x14f0 <_Z6headerh+0x3a>
    1506:	c9 de       	rcall	.-622    	; 0x129a <_Z14Batteriestatusv>
    1508:	28 2f       	mov	r18, r24
    150a:	33 27       	eor	r19, r19
    150c:	27 fd       	sbrc	r18, 7
    150e:	30 95       	com	r19
    1510:	3f 93       	push	r19
    1512:	8f 93       	push	r24
    1514:	8c e2       	ldi	r24, 0x2C	; 44
    1516:	91 e0       	ldi	r25, 0x01	; 1
    1518:	9f 93       	push	r25
    151a:	8f 93       	push	r24
    151c:	ce 01       	movw	r24, r28
    151e:	01 96       	adiw	r24, 0x01	; 1
    1520:	9f 93       	push	r25
    1522:	8f 93       	push	r24
    1524:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    1528:	25 e1       	ldi	r18, 0x15	; 21
    152a:	f2 2e       	mov	r15, r18
    152c:	f8 1a       	sub	r15, r24
    152e:	0f 90       	pop	r0
    1530:	0f 90       	pop	r0
    1532:	0f 90       	pop	r0
    1534:	0f 90       	pop	r0
    1536:	0f 90       	pop	r0
    1538:	0f 90       	pop	r0
    153a:	f4 e1       	ldi	r31, 0x14	; 20
    153c:	ff 15       	cp	r31, r15
    153e:	08 f4       	brcc	.+2      	; 0x1542 <_Z6headerh+0x8c>
    1540:	8e c0       	rjmp	.+284    	; 0x165e <_Z6headerh+0x1a8>
    1542:	ef 2c       	mov	r14, r15
    1544:	ee 0c       	add	r14, r14
    1546:	ef 0c       	add	r14, r15
    1548:	ee 0c       	add	r14, r14
    154a:	8c 01       	movw	r16, r24
    154c:	11 27       	eor	r17, r17
    154e:	e1 e0       	ldi	r30, 0x01	; 1
    1550:	f0 e0       	ldi	r31, 0x00	; 0
    1552:	ec 0f       	add	r30, r28
    1554:	fd 1f       	adc	r31, r29
    1556:	ef 0d       	add	r30, r15
    1558:	f1 1d       	adc	r31, r1
    155a:	e0 0f       	add	r30, r16
    155c:	f1 1f       	adc	r31, r17
    155e:	75 97       	sbiw	r30, 0x15	; 21
    1560:	20 e0       	ldi	r18, 0x00	; 0
    1562:	4e 2d       	mov	r20, r14
    1564:	60 81       	ld	r22, Z
    1566:	83 e8       	ldi	r24, 0x83	; 131
    1568:	93 e0       	ldi	r25, 0x03	; 3
    156a:	46 db       	rcall	.-2420   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    156c:	f3 94       	inc	r15
    156e:	26 e0       	ldi	r18, 0x06	; 6
    1570:	e2 0e       	add	r14, r18
    1572:	85 e1       	ldi	r24, 0x15	; 21
    1574:	f8 12       	cpse	r15, r24
    1576:	eb cf       	rjmp	.-42     	; 0x154e <_Z6headerh+0x98>
    1578:	72 c0       	rjmp	.+228    	; 0x165e <_Z6headerh+0x1a8>
    157a:	8f de       	rcall	.-738    	; 0x129a <_Z14Batteriestatusv>
    157c:	28 2f       	mov	r18, r24
    157e:	33 27       	eor	r19, r19
    1580:	27 fd       	sbrc	r18, 7
    1582:	30 95       	com	r19
    1584:	3f 93       	push	r19
    1586:	8f 93       	push	r24
    1588:	8c e2       	ldi	r24, 0x2C	; 44
    158a:	91 e0       	ldi	r25, 0x01	; 1
    158c:	9f 93       	push	r25
    158e:	8f 93       	push	r24
    1590:	ce 01       	movw	r24, r28
    1592:	01 96       	adiw	r24, 0x01	; 1
    1594:	9f 93       	push	r25
    1596:	8f 93       	push	r24
    1598:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    159c:	25 e1       	ldi	r18, 0x15	; 21
    159e:	f2 2e       	mov	r15, r18
    15a0:	f8 1a       	sub	r15, r24
    15a2:	0f 90       	pop	r0
    15a4:	0f 90       	pop	r0
    15a6:	0f 90       	pop	r0
    15a8:	0f 90       	pop	r0
    15aa:	0f 90       	pop	r0
    15ac:	0f 90       	pop	r0
    15ae:	e4 e1       	ldi	r30, 0x14	; 20
    15b0:	ef 15       	cp	r30, r15
    15b2:	08 f4       	brcc	.+2      	; 0x15b6 <_Z6headerh+0x100>
    15b4:	54 c0       	rjmp	.+168    	; 0x165e <_Z6headerh+0x1a8>
    15b6:	ef 2c       	mov	r14, r15
    15b8:	ee 0c       	add	r14, r14
    15ba:	ef 0c       	add	r14, r15
    15bc:	ee 0c       	add	r14, r14
    15be:	8c 01       	movw	r16, r24
    15c0:	11 27       	eor	r17, r17
    15c2:	e1 e0       	ldi	r30, 0x01	; 1
    15c4:	f0 e0       	ldi	r31, 0x00	; 0
    15c6:	ec 0f       	add	r30, r28
    15c8:	fd 1f       	adc	r31, r29
    15ca:	ef 0d       	add	r30, r15
    15cc:	f1 1d       	adc	r31, r1
    15ce:	e0 0f       	add	r30, r16
    15d0:	f1 1f       	adc	r31, r17
    15d2:	75 97       	sbiw	r30, 0x15	; 21
    15d4:	20 e0       	ldi	r18, 0x00	; 0
    15d6:	4e 2d       	mov	r20, r14
    15d8:	60 81       	ld	r22, Z
    15da:	83 e8       	ldi	r24, 0x83	; 131
    15dc:	93 e0       	ldi	r25, 0x03	; 3
    15de:	0c db       	rcall	.-2536   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    15e0:	f3 94       	inc	r15
    15e2:	f6 e0       	ldi	r31, 0x06	; 6
    15e4:	ef 0e       	add	r14, r31
    15e6:	25 e1       	ldi	r18, 0x15	; 21
    15e8:	f2 12       	cpse	r15, r18
    15ea:	eb cf       	rjmp	.-42     	; 0x15c2 <_Z6headerh+0x10c>
    15ec:	38 c0       	rjmp	.+112    	; 0x165e <_Z6headerh+0x1a8>
    15ee:	55 de       	rcall	.-854    	; 0x129a <_Z14Batteriestatusv>
    15f0:	28 2f       	mov	r18, r24
    15f2:	33 27       	eor	r19, r19
    15f4:	27 fd       	sbrc	r18, 7
    15f6:	30 95       	com	r19
    15f8:	3f 93       	push	r19
    15fa:	8f 93       	push	r24
    15fc:	81 e3       	ldi	r24, 0x31	; 49
    15fe:	91 e0       	ldi	r25, 0x01	; 1
    1600:	9f 93       	push	r25
    1602:	8f 93       	push	r24
    1604:	ce 01       	movw	r24, r28
    1606:	01 96       	adiw	r24, 0x01	; 1
    1608:	9f 93       	push	r25
    160a:	8f 93       	push	r24
    160c:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    1610:	25 e1       	ldi	r18, 0x15	; 21
    1612:	f2 2e       	mov	r15, r18
    1614:	f8 1a       	sub	r15, r24
    1616:	0f 90       	pop	r0
    1618:	0f 90       	pop	r0
    161a:	0f 90       	pop	r0
    161c:	0f 90       	pop	r0
    161e:	0f 90       	pop	r0
    1620:	0f 90       	pop	r0
    1622:	e4 e1       	ldi	r30, 0x14	; 20
    1624:	ef 15       	cp	r30, r15
    1626:	d8 f0       	brcs	.+54     	; 0x165e <_Z6headerh+0x1a8>
    1628:	ef 2c       	mov	r14, r15
    162a:	ee 0c       	add	r14, r14
    162c:	ef 0c       	add	r14, r15
    162e:	ee 0c       	add	r14, r14
    1630:	8c 01       	movw	r16, r24
    1632:	11 27       	eor	r17, r17
    1634:	e1 e0       	ldi	r30, 0x01	; 1
    1636:	f0 e0       	ldi	r31, 0x00	; 0
    1638:	ec 0f       	add	r30, r28
    163a:	fd 1f       	adc	r31, r29
    163c:	ef 0d       	add	r30, r15
    163e:	f1 1d       	adc	r31, r1
    1640:	e0 0f       	add	r30, r16
    1642:	f1 1f       	adc	r31, r17
    1644:	75 97       	sbiw	r30, 0x15	; 21
    1646:	20 e0       	ldi	r18, 0x00	; 0
    1648:	4e 2d       	mov	r20, r14
    164a:	60 81       	ld	r22, Z
    164c:	83 e8       	ldi	r24, 0x83	; 131
    164e:	93 e0       	ldi	r25, 0x03	; 3
    1650:	d3 da       	rcall	.-2650   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1652:	f3 94       	inc	r15
    1654:	f6 e0       	ldi	r31, 0x06	; 6
    1656:	ef 0e       	add	r14, r31
    1658:	25 e1       	ldi	r18, 0x15	; 21
    165a:	f2 12       	cpse	r15, r18
    165c:	eb cf       	rjmp	.-42     	; 0x1634 <_Z6headerh+0x17e>
    165e:	64 96       	adiw	r28, 0x14	; 20
    1660:	0f b6       	in	r0, 0x3f	; 63
    1662:	f8 94       	cli
    1664:	de bf       	out	0x3e, r29	; 62
    1666:	0f be       	out	0x3f, r0	; 63
    1668:	cd bf       	out	0x3d, r28	; 61
    166a:	df 91       	pop	r29
    166c:	cf 91       	pop	r28
    166e:	1f 91       	pop	r17
    1670:	0f 91       	pop	r16
    1672:	ff 90       	pop	r15
    1674:	ef 90       	pop	r14
    1676:	08 95       	ret

00001678 <_Z6bottomh>:
    1678:	1f 93       	push	r17
    167a:	cf 93       	push	r28
    167c:	df 93       	push	r29
    167e:	88 23       	and	r24, r24
    1680:	19 f0       	breq	.+6      	; 0x1688 <_Z6bottomh+0x10>
    1682:	81 30       	cpi	r24, 0x01	; 1
    1684:	71 f0       	breq	.+28     	; 0x16a2 <_Z6bottomh+0x2a>
    1686:	19 c0       	rjmp	.+50     	; 0x16ba <_Z6bottomh+0x42>
    1688:	cc e8       	ldi	r28, 0x8C	; 140
    168a:	d7 e0       	ldi	r29, 0x07	; 7
    168c:	10 e5       	ldi	r17, 0x50	; 80
    168e:	69 91       	ld	r22, Y+
    1690:	28 e3       	ldi	r18, 0x38	; 56
    1692:	41 2f       	mov	r20, r17
    1694:	83 e8       	ldi	r24, 0x83	; 131
    1696:	93 e0       	ldi	r25, 0x03	; 3
    1698:	af da       	rcall	.-2722   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    169a:	1a 5f       	subi	r17, 0xFA	; 250
    169c:	10 38       	cpi	r17, 0x80	; 128
    169e:	b9 f7       	brne	.-18     	; 0x168e <_Z6bottomh+0x16>
    16a0:	0c c0       	rjmp	.+24     	; 0x16ba <_Z6bottomh+0x42>
    16a2:	cc e8       	ldi	r28, 0x8C	; 140
    16a4:	d7 e0       	ldi	r29, 0x07	; 7
    16a6:	15 e0       	ldi	r17, 0x05	; 5
    16a8:	69 91       	ld	r22, Y+
    16aa:	28 e3       	ldi	r18, 0x38	; 56
    16ac:	41 2f       	mov	r20, r17
    16ae:	83 e8       	ldi	r24, 0x83	; 131
    16b0:	93 e0       	ldi	r25, 0x03	; 3
    16b2:	a2 da       	rcall	.-2748   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    16b4:	1a 5f       	subi	r17, 0xFA	; 250
    16b6:	15 33       	cpi	r17, 0x35	; 53
    16b8:	b9 f7       	brne	.-18     	; 0x16a8 <_Z6bottomh+0x30>
    16ba:	df 91       	pop	r29
    16bc:	cf 91       	pop	r28
    16be:	1f 91       	pop	r17
    16c0:	08 95       	ret

000016c2 <_Z16anzeige_richtungfhh>:
    16c2:	cf 92       	push	r12
    16c4:	df 92       	push	r13
    16c6:	ef 92       	push	r14
    16c8:	ff 92       	push	r15
    16ca:	cf 93       	push	r28
    16cc:	df 93       	push	r29
    16ce:	6b 01       	movw	r12, r22
    16d0:	7c 01       	movw	r14, r24
    16d2:	c4 2f       	mov	r28, r20
    16d4:	d2 2f       	mov	r29, r18
    16d6:	20 e0       	ldi	r18, 0x00	; 0
    16d8:	30 e0       	ldi	r19, 0x00	; 0
    16da:	40 eb       	ldi	r20, 0xB0	; 176
    16dc:	51 e4       	ldi	r21, 0x41	; 65
    16de:	0e 94 9f 2c 	call	0x593e	; 0x593e <__cmpsf2>
    16e2:	88 23       	and	r24, r24
    16e4:	54 f0       	brlt	.+20     	; 0x16fa <_Z16anzeige_richtungfhh+0x38>
    16e6:	20 e0       	ldi	r18, 0x00	; 0
    16e8:	30 e0       	ldi	r19, 0x00	; 0
    16ea:	49 ea       	ldi	r20, 0xA9	; 169
    16ec:	53 e4       	ldi	r21, 0x43	; 67
    16ee:	c7 01       	movw	r24, r14
    16f0:	b6 01       	movw	r22, r12
    16f2:	0e 94 4f 2e 	call	0x5c9e	; 0x5c9e <__gesf2>
    16f6:	88 23       	and	r24, r24
    16f8:	54 f0       	brlt	.+20     	; 0x170e <_Z16anzeige_richtungfhh+0x4c>
    16fa:	2d 2f       	mov	r18, r29
    16fc:	22 0f       	add	r18, r18
    16fe:	22 0f       	add	r18, r18
    1700:	22 0f       	add	r18, r18
    1702:	4c 2f       	mov	r20, r28
    1704:	6e e4       	ldi	r22, 0x4E	; 78
    1706:	83 e8       	ldi	r24, 0x83	; 131
    1708:	93 e0       	ldi	r25, 0x03	; 3
    170a:	76 da       	rcall	.-2836   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    170c:	ab c0       	rjmp	.+342    	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    170e:	20 e0       	ldi	r18, 0x00	; 0
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	48 e8       	ldi	r20, 0x88	; 136
    1714:	52 e4       	ldi	r21, 0x42	; 66
    1716:	c7 01       	movw	r24, r14
    1718:	b6 01       	movw	r22, r12
    171a:	0e 94 9f 2c 	call	0x593e	; 0x593e <__cmpsf2>
    171e:	88 23       	and	r24, r24
    1720:	94 f4       	brge	.+36     	; 0x1746 <_Z16anzeige_richtungfhh+0x84>
    1722:	dd 0f       	add	r29, r29
    1724:	dd 0f       	add	r29, r29
    1726:	dd 0f       	add	r29, r29
    1728:	4d ef       	ldi	r20, 0xFD	; 253
    172a:	4c 0f       	add	r20, r28
    172c:	2d 2f       	mov	r18, r29
    172e:	6e e4       	ldi	r22, 0x4E	; 78
    1730:	83 e8       	ldi	r24, 0x83	; 131
    1732:	93 e0       	ldi	r25, 0x03	; 3
    1734:	61 da       	rcall	.-2878   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1736:	43 e0       	ldi	r20, 0x03	; 3
    1738:	4c 0f       	add	r20, r28
    173a:	2d 2f       	mov	r18, r29
    173c:	6f e4       	ldi	r22, 0x4F	; 79
    173e:	83 e8       	ldi	r24, 0x83	; 131
    1740:	93 e0       	ldi	r25, 0x03	; 3
    1742:	5a da       	rcall	.-2892   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1744:	8f c0       	rjmp	.+286    	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    1746:	20 e0       	ldi	r18, 0x00	; 0
    1748:	30 e0       	ldi	r19, 0x00	; 0
    174a:	42 ee       	ldi	r20, 0xE2	; 226
    174c:	52 e4       	ldi	r21, 0x42	; 66
    174e:	c7 01       	movw	r24, r14
    1750:	b6 01       	movw	r22, r12
    1752:	0e 94 9f 2c 	call	0x593e	; 0x593e <__cmpsf2>
    1756:	88 23       	and	r24, r24
    1758:	54 f4       	brge	.+20     	; 0x176e <_Z16anzeige_richtungfhh+0xac>
    175a:	2d 2f       	mov	r18, r29
    175c:	22 0f       	add	r18, r18
    175e:	22 0f       	add	r18, r18
    1760:	22 0f       	add	r18, r18
    1762:	4c 2f       	mov	r20, r28
    1764:	6f e4       	ldi	r22, 0x4F	; 79
    1766:	83 e8       	ldi	r24, 0x83	; 131
    1768:	93 e0       	ldi	r25, 0x03	; 3
    176a:	46 da       	rcall	.-2932   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    176c:	7b c0       	rjmp	.+246    	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    176e:	20 e0       	ldi	r18, 0x00	; 0
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	4e e1       	ldi	r20, 0x1E	; 30
    1774:	53 e4       	ldi	r21, 0x43	; 67
    1776:	c7 01       	movw	r24, r14
    1778:	b6 01       	movw	r22, r12
    177a:	0e 94 9f 2c 	call	0x593e	; 0x593e <__cmpsf2>
    177e:	88 23       	and	r24, r24
    1780:	94 f4       	brge	.+36     	; 0x17a6 <_Z16anzeige_richtungfhh+0xe4>
    1782:	dd 0f       	add	r29, r29
    1784:	dd 0f       	add	r29, r29
    1786:	dd 0f       	add	r29, r29
    1788:	4d ef       	ldi	r20, 0xFD	; 253
    178a:	4c 0f       	add	r20, r28
    178c:	2d 2f       	mov	r18, r29
    178e:	63 e5       	ldi	r22, 0x53	; 83
    1790:	83 e8       	ldi	r24, 0x83	; 131
    1792:	93 e0       	ldi	r25, 0x03	; 3
    1794:	31 da       	rcall	.-2974   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1796:	43 e0       	ldi	r20, 0x03	; 3
    1798:	4c 0f       	add	r20, r28
    179a:	2d 2f       	mov	r18, r29
    179c:	6f e4       	ldi	r22, 0x4F	; 79
    179e:	83 e8       	ldi	r24, 0x83	; 131
    17a0:	93 e0       	ldi	r25, 0x03	; 3
    17a2:	2a da       	rcall	.-2988   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    17a4:	5f c0       	rjmp	.+190    	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    17a6:	20 e0       	ldi	r18, 0x00	; 0
    17a8:	30 e0       	ldi	r19, 0x00	; 0
    17aa:	4b e4       	ldi	r20, 0x4B	; 75
    17ac:	53 e4       	ldi	r21, 0x43	; 67
    17ae:	c7 01       	movw	r24, r14
    17b0:	b6 01       	movw	r22, r12
    17b2:	0e 94 9f 2c 	call	0x593e	; 0x593e <__cmpsf2>
    17b6:	88 23       	and	r24, r24
    17b8:	54 f4       	brge	.+20     	; 0x17ce <_Z16anzeige_richtungfhh+0x10c>
    17ba:	2d 2f       	mov	r18, r29
    17bc:	22 0f       	add	r18, r18
    17be:	22 0f       	add	r18, r18
    17c0:	22 0f       	add	r18, r18
    17c2:	4c 2f       	mov	r20, r28
    17c4:	63 e5       	ldi	r22, 0x53	; 83
    17c6:	83 e8       	ldi	r24, 0x83	; 131
    17c8:	93 e0       	ldi	r25, 0x03	; 3
    17ca:	16 da       	rcall	.-3028   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    17cc:	4b c0       	rjmp	.+150    	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    17ce:	20 e0       	ldi	r18, 0x00	; 0
    17d0:	30 e0       	ldi	r19, 0x00	; 0
    17d2:	48 e7       	ldi	r20, 0x78	; 120
    17d4:	53 e4       	ldi	r21, 0x43	; 67
    17d6:	c7 01       	movw	r24, r14
    17d8:	b6 01       	movw	r22, r12
    17da:	0e 94 9f 2c 	call	0x593e	; 0x593e <__cmpsf2>
    17de:	88 23       	and	r24, r24
    17e0:	94 f4       	brge	.+36     	; 0x1806 <_Z16anzeige_richtungfhh+0x144>
    17e2:	dd 0f       	add	r29, r29
    17e4:	dd 0f       	add	r29, r29
    17e6:	dd 0f       	add	r29, r29
    17e8:	4d ef       	ldi	r20, 0xFD	; 253
    17ea:	4c 0f       	add	r20, r28
    17ec:	2d 2f       	mov	r18, r29
    17ee:	63 e5       	ldi	r22, 0x53	; 83
    17f0:	83 e8       	ldi	r24, 0x83	; 131
    17f2:	93 e0       	ldi	r25, 0x03	; 3
    17f4:	01 da       	rcall	.-3070   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    17f6:	43 e0       	ldi	r20, 0x03	; 3
    17f8:	4c 0f       	add	r20, r28
    17fa:	2d 2f       	mov	r18, r29
    17fc:	67 e5       	ldi	r22, 0x57	; 87
    17fe:	83 e8       	ldi	r24, 0x83	; 131
    1800:	93 e0       	ldi	r25, 0x03	; 3
    1802:	fa d9       	rcall	.-3084   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1804:	2f c0       	rjmp	.+94     	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    1806:	20 e0       	ldi	r18, 0x00	; 0
    1808:	30 e8       	ldi	r19, 0x80	; 128
    180a:	42 e9       	ldi	r20, 0x92	; 146
    180c:	53 e4       	ldi	r21, 0x43	; 67
    180e:	c7 01       	movw	r24, r14
    1810:	b6 01       	movw	r22, r12
    1812:	0e 94 9f 2c 	call	0x593e	; 0x593e <__cmpsf2>
    1816:	88 23       	and	r24, r24
    1818:	54 f4       	brge	.+20     	; 0x182e <_Z16anzeige_richtungfhh+0x16c>
    181a:	2d 2f       	mov	r18, r29
    181c:	22 0f       	add	r18, r18
    181e:	22 0f       	add	r18, r18
    1820:	22 0f       	add	r18, r18
    1822:	4c 2f       	mov	r20, r28
    1824:	67 e5       	ldi	r22, 0x57	; 87
    1826:	83 e8       	ldi	r24, 0x83	; 131
    1828:	93 e0       	ldi	r25, 0x03	; 3
    182a:	e6 d9       	rcall	.-3124   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    182c:	1b c0       	rjmp	.+54     	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	30 e0       	ldi	r19, 0x00	; 0
    1832:	49 ea       	ldi	r20, 0xA9	; 169
    1834:	53 e4       	ldi	r21, 0x43	; 67
    1836:	c7 01       	movw	r24, r14
    1838:	b6 01       	movw	r22, r12
    183a:	0e 94 9f 2c 	call	0x593e	; 0x593e <__cmpsf2>
    183e:	88 23       	and	r24, r24
    1840:	8c f4       	brge	.+34     	; 0x1864 <_Z16anzeige_richtungfhh+0x1a2>
    1842:	dd 0f       	add	r29, r29
    1844:	dd 0f       	add	r29, r29
    1846:	dd 0f       	add	r29, r29
    1848:	4d ef       	ldi	r20, 0xFD	; 253
    184a:	4c 0f       	add	r20, r28
    184c:	2d 2f       	mov	r18, r29
    184e:	6e e4       	ldi	r22, 0x4E	; 78
    1850:	83 e8       	ldi	r24, 0x83	; 131
    1852:	93 e0       	ldi	r25, 0x03	; 3
    1854:	d1 d9       	rcall	.-3166   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1856:	43 e0       	ldi	r20, 0x03	; 3
    1858:	4c 0f       	add	r20, r28
    185a:	2d 2f       	mov	r18, r29
    185c:	67 e5       	ldi	r22, 0x57	; 87
    185e:	83 e8       	ldi	r24, 0x83	; 131
    1860:	93 e0       	ldi	r25, 0x03	; 3
    1862:	ca d9       	rcall	.-3180   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1864:	df 91       	pop	r29
    1866:	cf 91       	pop	r28
    1868:	ff 90       	pop	r15
    186a:	ef 90       	pop	r14
    186c:	df 90       	pop	r13
    186e:	cf 90       	pop	r12
    1870:	08 95       	ret

00001872 <_Z13anzeige_nadelhhf>:
    1872:	af 92       	push	r10
    1874:	bf 92       	push	r11
    1876:	cf 92       	push	r12
    1878:	df 92       	push	r13
    187a:	ef 92       	push	r14
    187c:	ff 92       	push	r15
    187e:	0f 93       	push	r16
    1880:	1f 93       	push	r17
    1882:	59 01       	movw	r10, r18
    1884:	6a 01       	movw	r12, r20
    1886:	e1 2c       	mov	r14, r1
    1888:	f1 2c       	mov	r15, r1
    188a:	0c e8       	ldi	r16, 0x8C	; 140
    188c:	12 e4       	ldi	r17, 0x42	; 66
    188e:	24 e1       	ldi	r18, 0x14	; 20
    1890:	46 2f       	mov	r20, r22
    1892:	68 2f       	mov	r22, r24
    1894:	83 e8       	ldi	r24, 0x83	; 131
    1896:	93 e0       	ldi	r25, 0x03	; 3
    1898:	8f d8       	rcall	.-3810   	; 0x9b8 <_ZN7Display13draw_triangleEhhhff>
    189a:	1f 91       	pop	r17
    189c:	0f 91       	pop	r16
    189e:	ff 90       	pop	r15
    18a0:	ef 90       	pop	r14
    18a2:	df 90       	pop	r13
    18a4:	cf 90       	pop	r12
    18a6:	bf 90       	pop	r11
    18a8:	af 90       	pop	r10
    18aa:	08 95       	ret

000018ac <_Z19anzeige_kleinenadelhhf>:
    18ac:	af 92       	push	r10
    18ae:	bf 92       	push	r11
    18b0:	cf 92       	push	r12
    18b2:	df 92       	push	r13
    18b4:	ef 92       	push	r14
    18b6:	ff 92       	push	r15
    18b8:	0f 93       	push	r16
    18ba:	1f 93       	push	r17
    18bc:	59 01       	movw	r10, r18
    18be:	6a 01       	movw	r12, r20
    18c0:	e1 2c       	mov	r14, r1
    18c2:	f1 2c       	mov	r15, r1
    18c4:	0c e8       	ldi	r16, 0x8C	; 140
    18c6:	12 e4       	ldi	r17, 0x42	; 66
    18c8:	2a e0       	ldi	r18, 0x0A	; 10
    18ca:	46 2f       	mov	r20, r22
    18cc:	68 2f       	mov	r22, r24
    18ce:	83 e8       	ldi	r24, 0x83	; 131
    18d0:	93 e0       	ldi	r25, 0x03	; 3
    18d2:	72 d8       	rcall	.-3868   	; 0x9b8 <_ZN7Display13draw_triangleEhhhff>
    18d4:	1f 91       	pop	r17
    18d6:	0f 91       	pop	r16
    18d8:	ff 90       	pop	r15
    18da:	ef 90       	pop	r14
    18dc:	df 90       	pop	r13
    18de:	cf 90       	pop	r12
    18e0:	bf 90       	pop	r11
    18e2:	af 90       	pop	r10
    18e4:	08 95       	ret

000018e6 <_Z11menue_hauptv>:
    18e6:	cf 92       	push	r12
    18e8:	df 92       	push	r13
    18ea:	ef 92       	push	r14
    18ec:	ff 92       	push	r15
    18ee:	0f 93       	push	r16
    18f0:	1f 93       	push	r17
    18f2:	cf 93       	push	r28
    18f4:	df 93       	push	r29
    18f6:	cd b7       	in	r28, 0x3d	; 61
    18f8:	de b7       	in	r29, 0x3e	; 62
    18fa:	64 97       	sbiw	r28, 0x14	; 20
    18fc:	0f b6       	in	r0, 0x3f	; 63
    18fe:	f8 94       	cli
    1900:	de bf       	out	0x3e, r29	; 62
    1902:	0f be       	out	0x3f, r0	; 63
    1904:	cd bf       	out	0x3d, r28	; 61
    1906:	83 e8       	ldi	r24, 0x83	; 131
    1908:	93 e0       	ldi	r25, 0x03	; 3
    190a:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    190e:	80 e1       	ldi	r24, 0x10	; 16
    1910:	e6 e3       	ldi	r30, 0x36	; 54
    1912:	f1 e0       	ldi	r31, 0x01	; 1
    1914:	8e 01       	movw	r16, r28
    1916:	0f 5f       	subi	r16, 0xFF	; 255
    1918:	1f 4f       	sbci	r17, 0xFF	; 255
    191a:	d8 01       	movw	r26, r16
    191c:	01 90       	ld	r0, Z+
    191e:	0d 92       	st	X+, r0
    1920:	8a 95       	dec	r24
    1922:	e1 f7       	brne	.-8      	; 0x191c <_Z11menue_hauptv+0x36>
    1924:	e0 2e       	mov	r14, r16
    1926:	f1 2e       	mov	r15, r17
    1928:	68 01       	movw	r12, r16
    192a:	10 e0       	ldi	r17, 0x00	; 0
    192c:	f6 01       	movw	r30, r12
    192e:	61 91       	ld	r22, Z+
    1930:	6f 01       	movw	r12, r30
    1932:	20 e0       	ldi	r18, 0x00	; 0
    1934:	41 2f       	mov	r20, r17
    1936:	83 e8       	ldi	r24, 0x83	; 131
    1938:	93 e0       	ldi	r25, 0x03	; 3
    193a:	5e d9       	rcall	.-3396   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    193c:	1a 5f       	subi	r17, 0xFA	; 250
    193e:	1a 35       	cpi	r17, 0x5A	; 90
    1940:	a9 f7       	brne	.-22     	; 0x192c <_Z11menue_hauptv+0x46>
    1942:	81 e1       	ldi	r24, 0x11	; 17
    1944:	e6 e4       	ldi	r30, 0x46	; 70
    1946:	f1 e0       	ldi	r31, 0x01	; 1
    1948:	de 01       	movw	r26, r28
    194a:	11 96       	adiw	r26, 0x01	; 1
    194c:	01 90       	ld	r0, Z+
    194e:	0d 92       	st	X+, r0
    1950:	8a 95       	dec	r24
    1952:	e1 f7       	brne	.-8      	; 0x194c <_Z11menue_hauptv+0x66>
    1954:	ce 2c       	mov	r12, r14
    1956:	df 2c       	mov	r13, r15
    1958:	10 e0       	ldi	r17, 0x00	; 0
    195a:	f6 01       	movw	r30, r12
    195c:	61 91       	ld	r22, Z+
    195e:	6f 01       	movw	r12, r30
    1960:	28 e0       	ldi	r18, 0x08	; 8
    1962:	41 2f       	mov	r20, r17
    1964:	83 e8       	ldi	r24, 0x83	; 131
    1966:	93 e0       	ldi	r25, 0x03	; 3
    1968:	47 d9       	rcall	.-3442   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    196a:	1a 5f       	subi	r17, 0xFA	; 250
    196c:	10 36       	cpi	r17, 0x60	; 96
    196e:	a9 f7       	brne	.-22     	; 0x195a <_Z11menue_hauptv+0x74>
    1970:	8a e0       	ldi	r24, 0x0A	; 10
    1972:	e7 e5       	ldi	r30, 0x57	; 87
    1974:	f1 e0       	ldi	r31, 0x01	; 1
    1976:	de 01       	movw	r26, r28
    1978:	11 96       	adiw	r26, 0x01	; 1
    197a:	01 90       	ld	r0, Z+
    197c:	0d 92       	st	X+, r0
    197e:	8a 95       	dec	r24
    1980:	e1 f7       	brne	.-8      	; 0x197a <_Z11menue_hauptv+0x94>
    1982:	ce 2c       	mov	r12, r14
    1984:	df 2c       	mov	r13, r15
    1986:	10 e0       	ldi	r17, 0x00	; 0
    1988:	f6 01       	movw	r30, r12
    198a:	61 91       	ld	r22, Z+
    198c:	6f 01       	movw	r12, r30
    198e:	20 e1       	ldi	r18, 0x10	; 16
    1990:	41 2f       	mov	r20, r17
    1992:	83 e8       	ldi	r24, 0x83	; 131
    1994:	93 e0       	ldi	r25, 0x03	; 3
    1996:	30 d9       	rcall	.-3488   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1998:	1a 5f       	subi	r17, 0xFA	; 250
    199a:	16 33       	cpi	r17, 0x36	; 54
    199c:	a9 f7       	brne	.-22     	; 0x1988 <_Z11menue_hauptv+0xa2>
    199e:	8b e0       	ldi	r24, 0x0B	; 11
    19a0:	e1 e6       	ldi	r30, 0x61	; 97
    19a2:	f1 e0       	ldi	r31, 0x01	; 1
    19a4:	de 01       	movw	r26, r28
    19a6:	11 96       	adiw	r26, 0x01	; 1
    19a8:	01 90       	ld	r0, Z+
    19aa:	0d 92       	st	X+, r0
    19ac:	8a 95       	dec	r24
    19ae:	e1 f7       	brne	.-8      	; 0x19a8 <_Z11menue_hauptv+0xc2>
    19b0:	ce 2c       	mov	r12, r14
    19b2:	df 2c       	mov	r13, r15
    19b4:	10 e0       	ldi	r17, 0x00	; 0
    19b6:	f6 01       	movw	r30, r12
    19b8:	61 91       	ld	r22, Z+
    19ba:	6f 01       	movw	r12, r30
    19bc:	28 e1       	ldi	r18, 0x18	; 24
    19be:	41 2f       	mov	r20, r17
    19c0:	83 e8       	ldi	r24, 0x83	; 131
    19c2:	93 e0       	ldi	r25, 0x03	; 3
    19c4:	19 d9       	rcall	.-3534   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    19c6:	1a 5f       	subi	r17, 0xFA	; 250
    19c8:	1c 33       	cpi	r17, 0x3C	; 60
    19ca:	a9 f7       	brne	.-22     	; 0x19b6 <_Z11menue_hauptv+0xd0>
    19cc:	80 e1       	ldi	r24, 0x10	; 16
    19ce:	ec e6       	ldi	r30, 0x6C	; 108
    19d0:	f1 e0       	ldi	r31, 0x01	; 1
    19d2:	de 01       	movw	r26, r28
    19d4:	11 96       	adiw	r26, 0x01	; 1
    19d6:	01 90       	ld	r0, Z+
    19d8:	0d 92       	st	X+, r0
    19da:	8a 95       	dec	r24
    19dc:	e1 f7       	brne	.-8      	; 0x19d6 <_Z11menue_hauptv+0xf0>
    19de:	ce 2c       	mov	r12, r14
    19e0:	df 2c       	mov	r13, r15
    19e2:	10 e0       	ldi	r17, 0x00	; 0
    19e4:	f6 01       	movw	r30, r12
    19e6:	61 91       	ld	r22, Z+
    19e8:	6f 01       	movw	r12, r30
    19ea:	20 e2       	ldi	r18, 0x20	; 32
    19ec:	41 2f       	mov	r20, r17
    19ee:	83 e8       	ldi	r24, 0x83	; 131
    19f0:	93 e0       	ldi	r25, 0x03	; 3
    19f2:	02 d9       	rcall	.-3580   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    19f4:	1a 5f       	subi	r17, 0xFA	; 250
    19f6:	1a 35       	cpi	r17, 0x5A	; 90
    19f8:	a9 f7       	brne	.-22     	; 0x19e4 <_Z11menue_hauptv+0xfe>
    19fa:	8e e0       	ldi	r24, 0x0E	; 14
    19fc:	ec e7       	ldi	r30, 0x7C	; 124
    19fe:	f1 e0       	ldi	r31, 0x01	; 1
    1a00:	de 01       	movw	r26, r28
    1a02:	11 96       	adiw	r26, 0x01	; 1
    1a04:	01 90       	ld	r0, Z+
    1a06:	0d 92       	st	X+, r0
    1a08:	8a 95       	dec	r24
    1a0a:	e1 f7       	brne	.-8      	; 0x1a04 <_Z11menue_hauptv+0x11e>
    1a0c:	ce 2c       	mov	r12, r14
    1a0e:	df 2c       	mov	r13, r15
    1a10:	10 e0       	ldi	r17, 0x00	; 0
    1a12:	f6 01       	movw	r30, r12
    1a14:	61 91       	ld	r22, Z+
    1a16:	6f 01       	movw	r12, r30
    1a18:	28 e2       	ldi	r18, 0x28	; 40
    1a1a:	41 2f       	mov	r20, r17
    1a1c:	83 e8       	ldi	r24, 0x83	; 131
    1a1e:	93 e0       	ldi	r25, 0x03	; 3
    1a20:	eb d8       	rcall	.-3626   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1a22:	1a 5f       	subi	r17, 0xFA	; 250
    1a24:	1e 34       	cpi	r17, 0x4E	; 78
    1a26:	a9 f7       	brne	.-22     	; 0x1a12 <_Z11menue_hauptv+0x12c>
    1a28:	8e e0       	ldi	r24, 0x0E	; 14
    1a2a:	ea e8       	ldi	r30, 0x8A	; 138
    1a2c:	f1 e0       	ldi	r31, 0x01	; 1
    1a2e:	de 01       	movw	r26, r28
    1a30:	11 96       	adiw	r26, 0x01	; 1
    1a32:	01 90       	ld	r0, Z+
    1a34:	0d 92       	st	X+, r0
    1a36:	8a 95       	dec	r24
    1a38:	e1 f7       	brne	.-8      	; 0x1a32 <_Z11menue_hauptv+0x14c>
    1a3a:	ce 2c       	mov	r12, r14
    1a3c:	df 2c       	mov	r13, r15
    1a3e:	10 e0       	ldi	r17, 0x00	; 0
    1a40:	f6 01       	movw	r30, r12
    1a42:	61 91       	ld	r22, Z+
    1a44:	6f 01       	movw	r12, r30
    1a46:	20 e3       	ldi	r18, 0x30	; 48
    1a48:	41 2f       	mov	r20, r17
    1a4a:	83 e8       	ldi	r24, 0x83	; 131
    1a4c:	93 e0       	ldi	r25, 0x03	; 3
    1a4e:	d4 d8       	rcall	.-3672   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1a50:	1a 5f       	subi	r17, 0xFA	; 250
    1a52:	1e 34       	cpi	r17, 0x4E	; 78
    1a54:	a9 f7       	brne	.-22     	; 0x1a40 <_Z11menue_hauptv+0x15a>
    1a56:	64 96       	adiw	r28, 0x14	; 20
    1a58:	0f b6       	in	r0, 0x3f	; 63
    1a5a:	f8 94       	cli
    1a5c:	de bf       	out	0x3e, r29	; 62
    1a5e:	0f be       	out	0x3f, r0	; 63
    1a60:	cd bf       	out	0x3d, r28	; 61
    1a62:	df 91       	pop	r29
    1a64:	cf 91       	pop	r28
    1a66:	1f 91       	pop	r17
    1a68:	0f 91       	pop	r16
    1a6a:	ff 90       	pop	r15
    1a6c:	ef 90       	pop	r14
    1a6e:	df 90       	pop	r13
    1a70:	cf 90       	pop	r12
    1a72:	08 95       	ret

00001a74 <_Z11menue_einstv>:
    1a74:	af 92       	push	r10
    1a76:	bf 92       	push	r11
    1a78:	df 92       	push	r13
    1a7a:	ef 92       	push	r14
    1a7c:	0f 93       	push	r16
    1a7e:	1f 93       	push	r17
    1a80:	cf 93       	push	r28
    1a82:	df 93       	push	r29
    1a84:	cd b7       	in	r28, 0x3d	; 61
    1a86:	de b7       	in	r29, 0x3e	; 62
    1a88:	64 97       	sbiw	r28, 0x14	; 20
    1a8a:	0f b6       	in	r0, 0x3f	; 63
    1a8c:	f8 94       	cli
    1a8e:	de bf       	out	0x3e, r29	; 62
    1a90:	0f be       	out	0x3f, r0	; 63
    1a92:	cd bf       	out	0x3d, r28	; 61
    1a94:	83 e8       	ldi	r24, 0x83	; 131
    1a96:	93 e0       	ldi	r25, 0x03	; 3
    1a98:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1a9c:	81 e1       	ldi	r24, 0x11	; 17
    1a9e:	e8 e9       	ldi	r30, 0x98	; 152
    1aa0:	f1 e0       	ldi	r31, 0x01	; 1
    1aa2:	8e 01       	movw	r16, r28
    1aa4:	0f 5f       	subi	r16, 0xFF	; 255
    1aa6:	1f 4f       	sbci	r17, 0xFF	; 255
    1aa8:	d8 01       	movw	r26, r16
    1aaa:	01 90       	ld	r0, Z+
    1aac:	0d 92       	st	X+, r0
    1aae:	8a 95       	dec	r24
    1ab0:	e1 f7       	brne	.-8      	; 0x1aaa <_Z11menue_einstv+0x36>
    1ab2:	d0 2e       	mov	r13, r16
    1ab4:	e1 2e       	mov	r14, r17
    1ab6:	58 01       	movw	r10, r16
    1ab8:	10 e0       	ldi	r17, 0x00	; 0
    1aba:	f5 01       	movw	r30, r10
    1abc:	61 91       	ld	r22, Z+
    1abe:	5f 01       	movw	r10, r30
    1ac0:	20 e0       	ldi	r18, 0x00	; 0
    1ac2:	41 2f       	mov	r20, r17
    1ac4:	83 e8       	ldi	r24, 0x83	; 131
    1ac6:	93 e0       	ldi	r25, 0x03	; 3
    1ac8:	97 d8       	rcall	.-3794   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1aca:	1a 5f       	subi	r17, 0xFA	; 250
    1acc:	10 36       	cpi	r17, 0x60	; 96
    1ace:	a9 f7       	brne	.-22     	; 0x1aba <_Z11menue_einstv+0x46>
    1ad0:	86 e1       	ldi	r24, 0x16	; 22
    1ad2:	e9 ea       	ldi	r30, 0xA9	; 169
    1ad4:	f1 e0       	ldi	r31, 0x01	; 1
    1ad6:	de 01       	movw	r26, r28
    1ad8:	11 96       	adiw	r26, 0x01	; 1
    1ada:	01 90       	ld	r0, Z+
    1adc:	0d 92       	st	X+, r0
    1ade:	8a 95       	dec	r24
    1ae0:	e1 f7       	brne	.-8      	; 0x1ada <_Z11menue_einstv+0x66>
    1ae2:	ad 2c       	mov	r10, r13
    1ae4:	be 2c       	mov	r11, r14
    1ae6:	10 e0       	ldi	r17, 0x00	; 0
    1ae8:	f5 01       	movw	r30, r10
    1aea:	61 91       	ld	r22, Z+
    1aec:	5f 01       	movw	r10, r30
    1aee:	28 e0       	ldi	r18, 0x08	; 8
    1af0:	41 2f       	mov	r20, r17
    1af2:	83 e8       	ldi	r24, 0x83	; 131
    1af4:	93 e0       	ldi	r25, 0x03	; 3
    1af6:	80 d8       	rcall	.-3840   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1af8:	1a 5f       	subi	r17, 0xFA	; 250
    1afa:	1e 37       	cpi	r17, 0x7E	; 126
    1afc:	a9 f7       	brne	.-22     	; 0x1ae8 <_Z11menue_einstv+0x74>
    1afe:	81 e1       	ldi	r24, 0x11	; 17
    1b00:	ef eb       	ldi	r30, 0xBF	; 191
    1b02:	f1 e0       	ldi	r31, 0x01	; 1
    1b04:	de 01       	movw	r26, r28
    1b06:	11 96       	adiw	r26, 0x01	; 1
    1b08:	01 90       	ld	r0, Z+
    1b0a:	0d 92       	st	X+, r0
    1b0c:	8a 95       	dec	r24
    1b0e:	e1 f7       	brne	.-8      	; 0x1b08 <_Z11menue_einstv+0x94>
    1b10:	ad 2c       	mov	r10, r13
    1b12:	be 2c       	mov	r11, r14
    1b14:	10 e0       	ldi	r17, 0x00	; 0
    1b16:	f5 01       	movw	r30, r10
    1b18:	61 91       	ld	r22, Z+
    1b1a:	5f 01       	movw	r10, r30
    1b1c:	20 e1       	ldi	r18, 0x10	; 16
    1b1e:	41 2f       	mov	r20, r17
    1b20:	83 e8       	ldi	r24, 0x83	; 131
    1b22:	93 e0       	ldi	r25, 0x03	; 3
    1b24:	69 d8       	rcall	.-3886   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1b26:	1a 5f       	subi	r17, 0xFA	; 250
    1b28:	10 36       	cpi	r17, 0x60	; 96
    1b2a:	a9 f7       	brne	.-22     	; 0x1b16 <_Z11menue_einstv+0xa2>
    1b2c:	83 e1       	ldi	r24, 0x13	; 19
    1b2e:	e0 ed       	ldi	r30, 0xD0	; 208
    1b30:	f1 e0       	ldi	r31, 0x01	; 1
    1b32:	de 01       	movw	r26, r28
    1b34:	11 96       	adiw	r26, 0x01	; 1
    1b36:	01 90       	ld	r0, Z+
    1b38:	0d 92       	st	X+, r0
    1b3a:	8a 95       	dec	r24
    1b3c:	e1 f7       	brne	.-8      	; 0x1b36 <_Z11menue_einstv+0xc2>
    1b3e:	ad 2c       	mov	r10, r13
    1b40:	be 2c       	mov	r11, r14
    1b42:	10 e0       	ldi	r17, 0x00	; 0
    1b44:	f5 01       	movw	r30, r10
    1b46:	61 91       	ld	r22, Z+
    1b48:	5f 01       	movw	r10, r30
    1b4a:	28 e1       	ldi	r18, 0x18	; 24
    1b4c:	41 2f       	mov	r20, r17
    1b4e:	83 e8       	ldi	r24, 0x83	; 131
    1b50:	93 e0       	ldi	r25, 0x03	; 3
    1b52:	52 d8       	rcall	.-3932   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1b54:	1a 5f       	subi	r17, 0xFA	; 250
    1b56:	1c 36       	cpi	r17, 0x6C	; 108
    1b58:	a9 f7       	brne	.-22     	; 0x1b44 <_Z11menue_einstv+0xd0>
    1b5a:	64 96       	adiw	r28, 0x14	; 20
    1b5c:	0f b6       	in	r0, 0x3f	; 63
    1b5e:	f8 94       	cli
    1b60:	de bf       	out	0x3e, r29	; 62
    1b62:	0f be       	out	0x3f, r0	; 63
    1b64:	cd bf       	out	0x3d, r28	; 61
    1b66:	df 91       	pop	r29
    1b68:	cf 91       	pop	r28
    1b6a:	1f 91       	pop	r17
    1b6c:	0f 91       	pop	r16
    1b6e:	ef 90       	pop	r14
    1b70:	df 90       	pop	r13
    1b72:	bf 90       	pop	r11
    1b74:	af 90       	pop	r10
    1b76:	08 95       	ret

00001b78 <_Z9menue_uhrv>:
    1b78:	cf 92       	push	r12
    1b7a:	df 92       	push	r13
    1b7c:	ef 92       	push	r14
    1b7e:	ff 92       	push	r15
    1b80:	0f 93       	push	r16
    1b82:	1f 93       	push	r17
    1b84:	cf 93       	push	r28
    1b86:	df 93       	push	r29
    1b88:	cd b7       	in	r28, 0x3d	; 61
    1b8a:	de b7       	in	r29, 0x3e	; 62
    1b8c:	64 97       	sbiw	r28, 0x14	; 20
    1b8e:	0f b6       	in	r0, 0x3f	; 63
    1b90:	f8 94       	cli
    1b92:	de bf       	out	0x3e, r29	; 62
    1b94:	0f be       	out	0x3f, r0	; 63
    1b96:	cd bf       	out	0x3d, r28	; 61
    1b98:	83 e8       	ldi	r24, 0x83	; 131
    1b9a:	93 e0       	ldi	r25, 0x03	; 3
    1b9c:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1ba0:	86 e0       	ldi	r24, 0x06	; 6
    1ba2:	e3 ee       	ldi	r30, 0xE3	; 227
    1ba4:	f1 e0       	ldi	r31, 0x01	; 1
    1ba6:	8e 01       	movw	r16, r28
    1ba8:	0f 5f       	subi	r16, 0xFF	; 255
    1baa:	1f 4f       	sbci	r17, 0xFF	; 255
    1bac:	d8 01       	movw	r26, r16
    1bae:	01 90       	ld	r0, Z+
    1bb0:	0d 92       	st	X+, r0
    1bb2:	8a 95       	dec	r24
    1bb4:	e1 f7       	brne	.-8      	; 0x1bae <_Z9menue_uhrv+0x36>
    1bb6:	e0 2e       	mov	r14, r16
    1bb8:	f1 2e       	mov	r15, r17
    1bba:	68 01       	movw	r12, r16
    1bbc:	10 e0       	ldi	r17, 0x00	; 0
    1bbe:	f6 01       	movw	r30, r12
    1bc0:	61 91       	ld	r22, Z+
    1bc2:	6f 01       	movw	r12, r30
    1bc4:	20 e0       	ldi	r18, 0x00	; 0
    1bc6:	41 2f       	mov	r20, r17
    1bc8:	83 e8       	ldi	r24, 0x83	; 131
    1bca:	93 e0       	ldi	r25, 0x03	; 3
    1bcc:	15 d8       	rcall	.-4054   	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1bce:	1a 5f       	subi	r17, 0xFA	; 250
    1bd0:	1e 31       	cpi	r17, 0x1E	; 30
    1bd2:	a9 f7       	brne	.-22     	; 0x1bbe <_Z9menue_uhrv+0x46>
    1bd4:	8b e0       	ldi	r24, 0x0B	; 11
    1bd6:	e9 ee       	ldi	r30, 0xE9	; 233
    1bd8:	f1 e0       	ldi	r31, 0x01	; 1
    1bda:	de 01       	movw	r26, r28
    1bdc:	11 96       	adiw	r26, 0x01	; 1
    1bde:	01 90       	ld	r0, Z+
    1be0:	0d 92       	st	X+, r0
    1be2:	8a 95       	dec	r24
    1be4:	e1 f7       	brne	.-8      	; 0x1bde <_Z9menue_uhrv+0x66>
    1be6:	ce 2c       	mov	r12, r14
    1be8:	df 2c       	mov	r13, r15
    1bea:	10 e0       	ldi	r17, 0x00	; 0
    1bec:	f6 01       	movw	r30, r12
    1bee:	61 91       	ld	r22, Z+
    1bf0:	6f 01       	movw	r12, r30
    1bf2:	28 e0       	ldi	r18, 0x08	; 8
    1bf4:	41 2f       	mov	r20, r17
    1bf6:	83 e8       	ldi	r24, 0x83	; 131
    1bf8:	93 e0       	ldi	r25, 0x03	; 3
    1bfa:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1bfe:	1a 5f       	subi	r17, 0xFA	; 250
    1c00:	1c 33       	cpi	r17, 0x3C	; 60
    1c02:	a1 f7       	brne	.-24     	; 0x1bec <_Z9menue_uhrv+0x74>
    1c04:	88 e0       	ldi	r24, 0x08	; 8
    1c06:	e4 ef       	ldi	r30, 0xF4	; 244
    1c08:	f1 e0       	ldi	r31, 0x01	; 1
    1c0a:	de 01       	movw	r26, r28
    1c0c:	11 96       	adiw	r26, 0x01	; 1
    1c0e:	01 90       	ld	r0, Z+
    1c10:	0d 92       	st	X+, r0
    1c12:	8a 95       	dec	r24
    1c14:	e1 f7       	brne	.-8      	; 0x1c0e <_Z9menue_uhrv+0x96>
    1c16:	ce 2c       	mov	r12, r14
    1c18:	df 2c       	mov	r13, r15
    1c1a:	10 e0       	ldi	r17, 0x00	; 0
    1c1c:	f6 01       	movw	r30, r12
    1c1e:	61 91       	ld	r22, Z+
    1c20:	6f 01       	movw	r12, r30
    1c22:	20 e1       	ldi	r18, 0x10	; 16
    1c24:	41 2f       	mov	r20, r17
    1c26:	83 e8       	ldi	r24, 0x83	; 131
    1c28:	93 e0       	ldi	r25, 0x03	; 3
    1c2a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1c2e:	1a 5f       	subi	r17, 0xFA	; 250
    1c30:	1a 32       	cpi	r17, 0x2A	; 42
    1c32:	a1 f7       	brne	.-24     	; 0x1c1c <_Z9menue_uhrv+0xa4>
    1c34:	88 e0       	ldi	r24, 0x08	; 8
    1c36:	ec ef       	ldi	r30, 0xFC	; 252
    1c38:	f1 e0       	ldi	r31, 0x01	; 1
    1c3a:	de 01       	movw	r26, r28
    1c3c:	11 96       	adiw	r26, 0x01	; 1
    1c3e:	01 90       	ld	r0, Z+
    1c40:	0d 92       	st	X+, r0
    1c42:	8a 95       	dec	r24
    1c44:	e1 f7       	brne	.-8      	; 0x1c3e <_Z9menue_uhrv+0xc6>
    1c46:	ce 2c       	mov	r12, r14
    1c48:	df 2c       	mov	r13, r15
    1c4a:	10 e0       	ldi	r17, 0x00	; 0
    1c4c:	f6 01       	movw	r30, r12
    1c4e:	61 91       	ld	r22, Z+
    1c50:	6f 01       	movw	r12, r30
    1c52:	28 e1       	ldi	r18, 0x18	; 24
    1c54:	41 2f       	mov	r20, r17
    1c56:	83 e8       	ldi	r24, 0x83	; 131
    1c58:	93 e0       	ldi	r25, 0x03	; 3
    1c5a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1c5e:	1a 5f       	subi	r17, 0xFA	; 250
    1c60:	1a 32       	cpi	r17, 0x2A	; 42
    1c62:	a1 f7       	brne	.-24     	; 0x1c4c <_Z9menue_uhrv+0xd4>
    1c64:	8c e0       	ldi	r24, 0x0C	; 12
    1c66:	e4 e0       	ldi	r30, 0x04	; 4
    1c68:	f2 e0       	ldi	r31, 0x02	; 2
    1c6a:	de 01       	movw	r26, r28
    1c6c:	11 96       	adiw	r26, 0x01	; 1
    1c6e:	01 90       	ld	r0, Z+
    1c70:	0d 92       	st	X+, r0
    1c72:	8a 95       	dec	r24
    1c74:	e1 f7       	brne	.-8      	; 0x1c6e <_Z9menue_uhrv+0xf6>
    1c76:	ce 2c       	mov	r12, r14
    1c78:	df 2c       	mov	r13, r15
    1c7a:	10 e0       	ldi	r17, 0x00	; 0
    1c7c:	f6 01       	movw	r30, r12
    1c7e:	61 91       	ld	r22, Z+
    1c80:	6f 01       	movw	r12, r30
    1c82:	20 e2       	ldi	r18, 0x20	; 32
    1c84:	41 2f       	mov	r20, r17
    1c86:	83 e8       	ldi	r24, 0x83	; 131
    1c88:	93 e0       	ldi	r25, 0x03	; 3
    1c8a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1c8e:	1a 5f       	subi	r17, 0xFA	; 250
    1c90:	12 34       	cpi	r17, 0x42	; 66
    1c92:	a1 f7       	brne	.-24     	; 0x1c7c <_Z9menue_uhrv+0x104>
    1c94:	89 e0       	ldi	r24, 0x09	; 9
    1c96:	e0 e1       	ldi	r30, 0x10	; 16
    1c98:	f2 e0       	ldi	r31, 0x02	; 2
    1c9a:	de 01       	movw	r26, r28
    1c9c:	11 96       	adiw	r26, 0x01	; 1
    1c9e:	01 90       	ld	r0, Z+
    1ca0:	0d 92       	st	X+, r0
    1ca2:	8a 95       	dec	r24
    1ca4:	e1 f7       	brne	.-8      	; 0x1c9e <_Z9menue_uhrv+0x126>
    1ca6:	ce 2c       	mov	r12, r14
    1ca8:	df 2c       	mov	r13, r15
    1caa:	10 e0       	ldi	r17, 0x00	; 0
    1cac:	f6 01       	movw	r30, r12
    1cae:	61 91       	ld	r22, Z+
    1cb0:	6f 01       	movw	r12, r30
    1cb2:	28 e2       	ldi	r18, 0x28	; 40
    1cb4:	41 2f       	mov	r20, r17
    1cb6:	83 e8       	ldi	r24, 0x83	; 131
    1cb8:	93 e0       	ldi	r25, 0x03	; 3
    1cba:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1cbe:	1a 5f       	subi	r17, 0xFA	; 250
    1cc0:	10 33       	cpi	r17, 0x30	; 48
    1cc2:	a1 f7       	brne	.-24     	; 0x1cac <_Z9menue_uhrv+0x134>
    1cc4:	64 96       	adiw	r28, 0x14	; 20
    1cc6:	0f b6       	in	r0, 0x3f	; 63
    1cc8:	f8 94       	cli
    1cca:	de bf       	out	0x3e, r29	; 62
    1ccc:	0f be       	out	0x3f, r0	; 63
    1cce:	cd bf       	out	0x3d, r28	; 61
    1cd0:	df 91       	pop	r29
    1cd2:	cf 91       	pop	r28
    1cd4:	1f 91       	pop	r17
    1cd6:	0f 91       	pop	r16
    1cd8:	ff 90       	pop	r15
    1cda:	ef 90       	pop	r14
    1cdc:	df 90       	pop	r13
    1cde:	cf 90       	pop	r12
    1ce0:	08 95       	ret

00001ce2 <_Z11uhranzeigenv>:
    1ce2:	df 92       	push	r13
    1ce4:	ef 92       	push	r14
    1ce6:	ff 92       	push	r15
    1ce8:	0f 93       	push	r16
    1cea:	1f 93       	push	r17
    1cec:	cf 93       	push	r28
    1cee:	df 93       	push	r29
    1cf0:	cd b7       	in	r28, 0x3d	; 61
    1cf2:	de b7       	in	r29, 0x3e	; 62
    1cf4:	64 97       	sbiw	r28, 0x14	; 20
    1cf6:	0f b6       	in	r0, 0x3f	; 63
    1cf8:	f8 94       	cli
    1cfa:	de bf       	out	0x3e, r29	; 62
    1cfc:	0f be       	out	0x3f, r0	; 63
    1cfe:	cd bf       	out	0x3d, r28	; 61
    1d00:	8c e6       	ldi	r24, 0x6C	; 108
    1d02:	93 e0       	ldi	r25, 0x03	; 3
    1d04:	0e 94 d7 29 	call	0x53ae	; 0x53ae <_ZN8Pressure16READ_TemperatureEv>
    1d08:	83 e8       	ldi	r24, 0x83	; 131
    1d0a:	93 e0       	ldi	r25, 0x03	; 3
    1d0c:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1d10:	01 e0       	ldi	r16, 0x01	; 1
    1d12:	20 91 96 07 	lds	r18, 0x0796
    1d16:	40 91 95 07 	lds	r20, 0x0795
    1d1a:	60 91 94 07 	lds	r22, 0x0794
    1d1e:	83 e8       	ldi	r24, 0x83	; 131
    1d20:	93 e0       	ldi	r25, 0x03	; 3
    1d22:	2e d8       	rcall	.-4004   	; 0xd80 <_ZN7Display6analogEhhhh>
    1d24:	0f 2e       	mov	r0, r31
    1d26:	f4 e8       	ldi	r31, 0x84	; 132
    1d28:	ef 2e       	mov	r14, r31
    1d2a:	f7 e0       	ldi	r31, 0x07	; 7
    1d2c:	ff 2e       	mov	r15, r31
    1d2e:	f0 2d       	mov	r31, r0
    1d30:	11 e4       	ldi	r17, 0x41	; 65
    1d32:	f7 01       	movw	r30, r14
    1d34:	61 91       	ld	r22, Z+
    1d36:	7f 01       	movw	r14, r30
    1d38:	20 e0       	ldi	r18, 0x00	; 0
    1d3a:	41 2f       	mov	r20, r17
    1d3c:	83 e8       	ldi	r24, 0x83	; 131
    1d3e:	93 e0       	ldi	r25, 0x03	; 3
    1d40:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1d44:	1a 5f       	subi	r17, 0xFA	; 250
    1d46:	11 37       	cpi	r17, 0x71	; 113
    1d48:	a1 f7       	brne	.-24     	; 0x1d32 <_Z11uhranzeigenv+0x50>
    1d4a:	0f 2e       	mov	r0, r31
    1d4c:	fc e8       	ldi	r31, 0x8C	; 140
    1d4e:	ef 2e       	mov	r14, r31
    1d50:	f7 e0       	ldi	r31, 0x07	; 7
    1d52:	ff 2e       	mov	r15, r31
    1d54:	f0 2d       	mov	r31, r0
    1d56:	11 e4       	ldi	r17, 0x41	; 65
    1d58:	f7 01       	movw	r30, r14
    1d5a:	61 91       	ld	r22, Z+
    1d5c:	7f 01       	movw	r14, r30
    1d5e:	28 e3       	ldi	r18, 0x38	; 56
    1d60:	41 2f       	mov	r20, r17
    1d62:	83 e8       	ldi	r24, 0x83	; 131
    1d64:	93 e0       	ldi	r25, 0x03	; 3
    1d66:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1d6a:	1a 5f       	subi	r17, 0xFA	; 250
    1d6c:	11 37       	cpi	r17, 0x71	; 113
    1d6e:	a1 f7       	brne	.-24     	; 0x1d58 <_Z11uhranzeigenv+0x76>
    1d70:	94 da       	rcall	.-2776   	; 0x129a <_Z14Batteriestatusv>
    1d72:	28 2f       	mov	r18, r24
    1d74:	33 27       	eor	r19, r19
    1d76:	27 fd       	sbrc	r18, 7
    1d78:	30 95       	com	r19
    1d7a:	3f 93       	push	r19
    1d7c:	8f 93       	push	r24
    1d7e:	81 e3       	ldi	r24, 0x31	; 49
    1d80:	91 e0       	ldi	r25, 0x01	; 1
    1d82:	9f 93       	push	r25
    1d84:	8f 93       	push	r24
    1d86:	ce 01       	movw	r24, r28
    1d88:	01 96       	adiw	r24, 0x01	; 1
    1d8a:	9f 93       	push	r25
    1d8c:	8f 93       	push	r24
    1d8e:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    1d92:	0f 90       	pop	r0
    1d94:	0f 90       	pop	r0
    1d96:	0f 90       	pop	r0
    1d98:	0f 90       	pop	r0
    1d9a:	0f 90       	pop	r0
    1d9c:	0f 90       	pop	r0
    1d9e:	88 23       	and	r24, r24
    1da0:	59 f1       	breq	.+86     	; 0x1df8 <_Z11uhranzeigenv+0x116>
    1da2:	8e 01       	movw	r16, r28
    1da4:	0f 5f       	subi	r16, 0xFF	; 255
    1da6:	1f 4f       	sbci	r17, 0xFF	; 255
    1da8:	81 50       	subi	r24, 0x01	; 1
    1daa:	68 94       	set
    1dac:	ee 24       	eor	r14, r14
    1dae:	e1 f8       	bld	r14, 1
    1db0:	f1 2c       	mov	r15, r1
    1db2:	ec 0e       	add	r14, r28
    1db4:	fd 1e       	adc	r15, r29
    1db6:	e8 0e       	add	r14, r24
    1db8:	f1 1c       	adc	r15, r1
    1dba:	0f 2e       	mov	r0, r31
    1dbc:	f9 e4       	ldi	r31, 0x49	; 73
    1dbe:	df 2e       	mov	r13, r31
    1dc0:	f0 2d       	mov	r31, r0
    1dc2:	f8 01       	movw	r30, r16
    1dc4:	61 91       	ld	r22, Z+
    1dc6:	8f 01       	movw	r16, r30
    1dc8:	86 2f       	mov	r24, r22
    1dca:	87 7f       	andi	r24, 0xF7	; 247
    1dcc:	85 32       	cpi	r24, 0x25	; 37
    1dce:	39 f4       	brne	.+14     	; 0x1dde <_Z11uhranzeigenv+0xfc>
    1dd0:	28 e1       	ldi	r18, 0x18	; 24
    1dd2:	4d 2d       	mov	r20, r13
    1dd4:	83 e8       	ldi	r24, 0x83	; 131
    1dd6:	93 e0       	ldi	r25, 0x03	; 3
    1dd8:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1ddc:	08 c0       	rjmp	.+16     	; 0x1dee <_Z11uhranzeigenv+0x10c>
    1dde:	60 53       	subi	r22, 0x30	; 48
    1de0:	24 e1       	ldi	r18, 0x14	; 20
    1de2:	4d ef       	ldi	r20, 0xFD	; 253
    1de4:	4d 0d       	add	r20, r13
    1de6:	83 e8       	ldi	r24, 0x83	; 131
    1de8:	93 e0       	ldi	r25, 0x03	; 3
    1dea:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1dee:	f0 e1       	ldi	r31, 0x10	; 16
    1df0:	df 0e       	add	r13, r31
    1df2:	0e 15       	cp	r16, r14
    1df4:	1f 05       	cpc	r17, r15
    1df6:	29 f7       	brne	.-54     	; 0x1dc2 <_Z11uhranzeigenv+0xe0>
    1df8:	e0 e7       	ldi	r30, 0x70	; 112
    1dfa:	f3 e0       	ldi	r31, 0x03	; 3
    1dfc:	83 81       	ldd	r24, Z+3	; 0x03
    1dfe:	8f 93       	push	r24
    1e00:	82 81       	ldd	r24, Z+2	; 0x02
    1e02:	8f 93       	push	r24
    1e04:	81 81       	ldd	r24, Z+1	; 0x01
    1e06:	8f 93       	push	r24
    1e08:	80 81       	ld	r24, Z
    1e0a:	8f 93       	push	r24
    1e0c:	89 e1       	ldi	r24, 0x19	; 25
    1e0e:	92 e0       	ldi	r25, 0x02	; 2
    1e10:	9f 93       	push	r25
    1e12:	8f 93       	push	r24
    1e14:	ce 01       	movw	r24, r28
    1e16:	01 96       	adiw	r24, 0x01	; 1
    1e18:	9f 93       	push	r25
    1e1a:	8f 93       	push	r24
    1e1c:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    1e20:	0f b6       	in	r0, 0x3f	; 63
    1e22:	f8 94       	cli
    1e24:	de bf       	out	0x3e, r29	; 62
    1e26:	0f be       	out	0x3f, r0	; 63
    1e28:	cd bf       	out	0x3d, r28	; 61
    1e2a:	88 23       	and	r24, r24
    1e2c:	f1 f0       	breq	.+60     	; 0x1e6a <_Z11uhranzeigenv+0x188>
    1e2e:	8e 01       	movw	r16, r28
    1e30:	0f 5f       	subi	r16, 0xFF	; 255
    1e32:	1f 4f       	sbci	r17, 0xFF	; 255
    1e34:	81 50       	subi	r24, 0x01	; 1
    1e36:	68 94       	set
    1e38:	ee 24       	eor	r14, r14
    1e3a:	e1 f8       	bld	r14, 1
    1e3c:	f1 2c       	mov	r15, r1
    1e3e:	ec 0e       	add	r14, r28
    1e40:	fd 1e       	adc	r15, r29
    1e42:	e8 0e       	add	r14, r24
    1e44:	f1 1c       	adc	r15, r1
    1e46:	0f 2e       	mov	r0, r31
    1e48:	f6 e4       	ldi	r31, 0x46	; 70
    1e4a:	df 2e       	mov	r13, r31
    1e4c:	f0 2d       	mov	r31, r0
    1e4e:	f8 01       	movw	r30, r16
    1e50:	61 91       	ld	r22, Z+
    1e52:	8f 01       	movw	r16, r30
    1e54:	28 e2       	ldi	r18, 0x28	; 40
    1e56:	4d 2d       	mov	r20, r13
    1e58:	83 e8       	ldi	r24, 0x83	; 131
    1e5a:	93 e0       	ldi	r25, 0x03	; 3
    1e5c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1e60:	f6 e0       	ldi	r31, 0x06	; 6
    1e62:	df 0e       	add	r13, r31
    1e64:	0e 15       	cp	r16, r14
    1e66:	1f 05       	cpc	r17, r15
    1e68:	91 f7       	brne	.-28     	; 0x1e4e <_Z11uhranzeigenv+0x16c>
    1e6a:	64 96       	adiw	r28, 0x14	; 20
    1e6c:	0f b6       	in	r0, 0x3f	; 63
    1e6e:	f8 94       	cli
    1e70:	de bf       	out	0x3e, r29	; 62
    1e72:	0f be       	out	0x3f, r0	; 63
    1e74:	cd bf       	out	0x3d, r28	; 61
    1e76:	df 91       	pop	r29
    1e78:	cf 91       	pop	r28
    1e7a:	1f 91       	pop	r17
    1e7c:	0f 91       	pop	r16
    1e7e:	ff 90       	pop	r15
    1e80:	ef 90       	pop	r14
    1e82:	df 90       	pop	r13
    1e84:	08 95       	ret

00001e86 <_Z14uhranzeigenminv>:
    1e86:	0f 93       	push	r16
    1e88:	1f 93       	push	r17
    1e8a:	cf 93       	push	r28
    1e8c:	df 93       	push	r29
    1e8e:	83 e8       	ldi	r24, 0x83	; 131
    1e90:	93 e0       	ldi	r25, 0x03	; 3
    1e92:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1e96:	82 e0       	ldi	r24, 0x02	; 2
    1e98:	0e db       	rcall	.-2532   	; 0x14b6 <_Z6headerh>
    1e9a:	00 e0       	ldi	r16, 0x00	; 0
    1e9c:	20 91 96 07 	lds	r18, 0x0796
    1ea0:	40 91 95 07 	lds	r20, 0x0795
    1ea4:	60 91 94 07 	lds	r22, 0x0794
    1ea8:	83 e8       	ldi	r24, 0x83	; 131
    1eaa:	93 e0       	ldi	r25, 0x03	; 3
    1eac:	0e 94 c0 06 	call	0xd80	; 0xd80 <_ZN7Display6analogEhhhh>
    1eb0:	c4 e8       	ldi	r28, 0x84	; 132
    1eb2:	d7 e0       	ldi	r29, 0x07	; 7
    1eb4:	11 e4       	ldi	r17, 0x41	; 65
    1eb6:	69 91       	ld	r22, Y+
    1eb8:	20 e0       	ldi	r18, 0x00	; 0
    1eba:	41 2f       	mov	r20, r17
    1ebc:	83 e8       	ldi	r24, 0x83	; 131
    1ebe:	93 e0       	ldi	r25, 0x03	; 3
    1ec0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1ec4:	1a 5f       	subi	r17, 0xFA	; 250
    1ec6:	1f 35       	cpi	r17, 0x5F	; 95
    1ec8:	b1 f7       	brne	.-20     	; 0x1eb6 <_Z14uhranzeigenminv+0x30>
    1eca:	cc e8       	ldi	r28, 0x8C	; 140
    1ecc:	d7 e0       	ldi	r29, 0x07	; 7
    1ece:	11 e4       	ldi	r17, 0x41	; 65
    1ed0:	69 91       	ld	r22, Y+
    1ed2:	28 e3       	ldi	r18, 0x38	; 56
    1ed4:	41 2f       	mov	r20, r17
    1ed6:	83 e8       	ldi	r24, 0x83	; 131
    1ed8:	93 e0       	ldi	r25, 0x03	; 3
    1eda:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    1ede:	1a 5f       	subi	r17, 0xFA	; 250
    1ee0:	11 37       	cpi	r17, 0x71	; 113
    1ee2:	b1 f7       	brne	.-20     	; 0x1ed0 <_Z14uhranzeigenminv+0x4a>
    1ee4:	60 91 84 07 	lds	r22, 0x0784
    1ee8:	60 53       	subi	r22, 0x30	; 48
    1eea:	2d e0       	ldi	r18, 0x0D	; 13
    1eec:	46 e4       	ldi	r20, 0x46	; 70
    1eee:	83 e8       	ldi	r24, 0x83	; 131
    1ef0:	93 e0       	ldi	r25, 0x03	; 3
    1ef2:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1ef6:	60 91 85 07 	lds	r22, 0x0785
    1efa:	60 53       	subi	r22, 0x30	; 48
    1efc:	2d e0       	ldi	r18, 0x0D	; 13
    1efe:	46 e5       	ldi	r20, 0x56	; 86
    1f00:	83 e8       	ldi	r24, 0x83	; 131
    1f02:	93 e0       	ldi	r25, 0x03	; 3
    1f04:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f08:	60 91 87 07 	lds	r22, 0x0787
    1f0c:	60 53       	subi	r22, 0x30	; 48
    1f0e:	22 e2       	ldi	r18, 0x22	; 34
    1f10:	46 e4       	ldi	r20, 0x46	; 70
    1f12:	83 e8       	ldi	r24, 0x83	; 131
    1f14:	93 e0       	ldi	r25, 0x03	; 3
    1f16:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f1a:	60 91 88 07 	lds	r22, 0x0788
    1f1e:	60 53       	subi	r22, 0x30	; 48
    1f20:	22 e2       	ldi	r18, 0x22	; 34
    1f22:	46 e5       	ldi	r20, 0x56	; 86
    1f24:	83 e8       	ldi	r24, 0x83	; 131
    1f26:	93 e0       	ldi	r25, 0x03	; 3
    1f28:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f2c:	df 91       	pop	r29
    1f2e:	cf 91       	pop	r28
    1f30:	1f 91       	pop	r17
    1f32:	0f 91       	pop	r16
    1f34:	08 95       	ret

00001f36 <_Z13Weckeranzeigev>:
    1f36:	1f 93       	push	r17
    1f38:	cf 93       	push	r28
    1f3a:	df 93       	push	r29
    1f3c:	83 e8       	ldi	r24, 0x83	; 131
    1f3e:	93 e0       	ldi	r25, 0x03	; 3
    1f40:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    1f44:	81 e0       	ldi	r24, 0x01	; 1
    1f46:	98 db       	rcall	.-2256   	; 0x1678 <_Z6bottomh>
    1f48:	81 e0       	ldi	r24, 0x01	; 1
    1f4a:	b5 da       	rcall	.-2710   	; 0x14b6 <_Z6headerh>
    1f4c:	60 91 84 07 	lds	r22, 0x0784
    1f50:	60 53       	subi	r22, 0x30	; 48
    1f52:	2d e0       	ldi	r18, 0x0D	; 13
    1f54:	45 e0       	ldi	r20, 0x05	; 5
    1f56:	83 e8       	ldi	r24, 0x83	; 131
    1f58:	93 e0       	ldi	r25, 0x03	; 3
    1f5a:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f5e:	60 91 85 07 	lds	r22, 0x0785
    1f62:	60 53       	subi	r22, 0x30	; 48
    1f64:	2d e0       	ldi	r18, 0x0D	; 13
    1f66:	45 e1       	ldi	r20, 0x15	; 21
    1f68:	83 e8       	ldi	r24, 0x83	; 131
    1f6a:	93 e0       	ldi	r25, 0x03	; 3
    1f6c:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f70:	60 91 87 07 	lds	r22, 0x0787
    1f74:	60 53       	subi	r22, 0x30	; 48
    1f76:	22 e2       	ldi	r18, 0x22	; 34
    1f78:	45 e0       	ldi	r20, 0x05	; 5
    1f7a:	83 e8       	ldi	r24, 0x83	; 131
    1f7c:	93 e0       	ldi	r25, 0x03	; 3
    1f7e:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f82:	60 91 88 07 	lds	r22, 0x0788
    1f86:	60 53       	subi	r22, 0x30	; 48
    1f88:	22 e2       	ldi	r18, 0x22	; 34
    1f8a:	45 e1       	ldi	r20, 0x15	; 21
    1f8c:	83 e8       	ldi	r24, 0x83	; 131
    1f8e:	93 e0       	ldi	r25, 0x03	; 3
    1f90:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1f94:	ce e9       	ldi	r28, 0x9E	; 158
    1f96:	d7 e0       	ldi	r29, 0x07	; 7
    1f98:	68 81       	ld	r22, Y
    1f9a:	1d ec       	ldi	r17, 0xCD	; 205
    1f9c:	61 9f       	mul	r22, r17
    1f9e:	61 2d       	mov	r22, r1
    1fa0:	11 24       	eor	r1, r1
    1fa2:	66 95       	lsr	r22
    1fa4:	66 95       	lsr	r22
    1fa6:	66 95       	lsr	r22
    1fa8:	2d e0       	ldi	r18, 0x0D	; 13
    1faa:	46 e4       	ldi	r20, 0x46	; 70
    1fac:	83 e8       	ldi	r24, 0x83	; 131
    1fae:	93 e0       	ldi	r25, 0x03	; 3
    1fb0:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1fb4:	68 81       	ld	r22, Y
    1fb6:	61 9f       	mul	r22, r17
    1fb8:	81 2d       	mov	r24, r1
    1fba:	11 24       	eor	r1, r1
    1fbc:	86 95       	lsr	r24
    1fbe:	86 95       	lsr	r24
    1fc0:	86 95       	lsr	r24
    1fc2:	88 0f       	add	r24, r24
    1fc4:	98 2f       	mov	r25, r24
    1fc6:	99 0f       	add	r25, r25
    1fc8:	99 0f       	add	r25, r25
    1fca:	89 0f       	add	r24, r25
    1fcc:	68 1b       	sub	r22, r24
    1fce:	2d e0       	ldi	r18, 0x0D	; 13
    1fd0:	46 e5       	ldi	r20, 0x56	; 86
    1fd2:	83 e8       	ldi	r24, 0x83	; 131
    1fd4:	93 e0       	ldi	r25, 0x03	; 3
    1fd6:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1fda:	cd e9       	ldi	r28, 0x9D	; 157
    1fdc:	d7 e0       	ldi	r29, 0x07	; 7
    1fde:	68 81       	ld	r22, Y
    1fe0:	61 9f       	mul	r22, r17
    1fe2:	61 2d       	mov	r22, r1
    1fe4:	11 24       	eor	r1, r1
    1fe6:	66 95       	lsr	r22
    1fe8:	66 95       	lsr	r22
    1fea:	66 95       	lsr	r22
    1fec:	22 e2       	ldi	r18, 0x22	; 34
    1fee:	46 e4       	ldi	r20, 0x46	; 70
    1ff0:	83 e8       	ldi	r24, 0x83	; 131
    1ff2:	93 e0       	ldi	r25, 0x03	; 3
    1ff4:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    1ff8:	68 81       	ld	r22, Y
    1ffa:	61 9f       	mul	r22, r17
    1ffc:	11 2d       	mov	r17, r1
    1ffe:	11 24       	eor	r1, r1
    2000:	16 95       	lsr	r17
    2002:	16 95       	lsr	r17
    2004:	16 95       	lsr	r17
    2006:	11 0f       	add	r17, r17
    2008:	81 2f       	mov	r24, r17
    200a:	88 0f       	add	r24, r24
    200c:	88 0f       	add	r24, r24
    200e:	18 0f       	add	r17, r24
    2010:	61 1b       	sub	r22, r17
    2012:	22 e2       	ldi	r18, 0x22	; 34
    2014:	46 e5       	ldi	r20, 0x56	; 86
    2016:	83 e8       	ldi	r24, 0x83	; 131
    2018:	93 e0       	ldi	r25, 0x03	; 3
    201a:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    201e:	80 91 9c 07 	lds	r24, 0x079C
    2022:	83 ff       	sbrs	r24, 3
    2024:	07 c0       	rjmp	.+14     	; 0x2034 <_Z13Weckeranzeigev+0xfe>
    2026:	20 e0       	ldi	r18, 0x00	; 0
    2028:	40 e0       	ldi	r20, 0x00	; 0
    202a:	6f e6       	ldi	r22, 0x6F	; 111
    202c:	83 e8       	ldi	r24, 0x83	; 131
    202e:	93 e0       	ldi	r25, 0x03	; 3
    2030:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2034:	80 91 55 03 	lds	r24, 0x0355
    2038:	90 91 56 03 	lds	r25, 0x0356
    203c:	94 ff       	sbrs	r25, 4
    203e:	09 c0       	rjmp	.+18     	; 0x2052 <_Z13Weckeranzeigev+0x11c>
    2040:	60 91 54 03 	lds	r22, 0x0354
    2044:	60 5d       	subi	r22, 0xD0	; 208
    2046:	20 e0       	ldi	r18, 0x00	; 0
    2048:	46 e0       	ldi	r20, 0x06	; 6
    204a:	83 e8       	ldi	r24, 0x83	; 131
    204c:	93 e0       	ldi	r25, 0x03	; 3
    204e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2052:	df 91       	pop	r29
    2054:	cf 91       	pop	r28
    2056:	1f 91       	pop	r17
    2058:	08 95       	ret

0000205a <_Z12fahradschirmddddm>:
    205a:	2f 92       	push	r2
    205c:	3f 92       	push	r3
    205e:	4f 92       	push	r4
    2060:	5f 92       	push	r5
    2062:	6f 92       	push	r6
    2064:	7f 92       	push	r7
    2066:	8f 92       	push	r8
    2068:	9f 92       	push	r9
    206a:	af 92       	push	r10
    206c:	bf 92       	push	r11
    206e:	cf 92       	push	r12
    2070:	df 92       	push	r13
    2072:	ef 92       	push	r14
    2074:	ff 92       	push	r15
    2076:	0f 93       	push	r16
    2078:	1f 93       	push	r17
    207a:	cf 93       	push	r28
    207c:	df 93       	push	r29
    207e:	cd b7       	in	r28, 0x3d	; 61
    2080:	de b7       	in	r29, 0x3e	; 62
    2082:	60 97       	sbiw	r28, 0x10	; 16
    2084:	0f b6       	in	r0, 0x3f	; 63
    2086:	f8 94       	cli
    2088:	de bf       	out	0x3e, r29	; 62
    208a:	0f be       	out	0x3f, r0	; 63
    208c:	cd bf       	out	0x3d, r28	; 61
    208e:	96 2e       	mov	r9, r22
    2090:	27 2e       	mov	r2, r23
    2092:	88 2e       	mov	r8, r24
    2094:	39 2e       	mov	r3, r25
    2096:	29 01       	movw	r4, r18
    2098:	3a 01       	movw	r6, r20
    209a:	0b 87       	std	Y+11, r16	; 0x0b
    209c:	1c 87       	std	Y+12, r17	; 0x0c
    209e:	2d a1       	ldd	r18, Y+37	; 0x25
    20a0:	2d 87       	std	Y+13, r18	; 0x0d
    20a2:	3e a1       	ldd	r19, Y+38	; 0x26
    20a4:	3e 87       	std	Y+14, r19	; 0x0e
    20a6:	8f a1       	ldd	r24, Y+39	; 0x27
    20a8:	8f 87       	std	Y+15, r24	; 0x0f
    20aa:	98 a5       	ldd	r25, Y+40	; 0x28
    20ac:	98 8b       	std	Y+16, r25	; 0x10
    20ae:	83 e8       	ldi	r24, 0x83	; 131
    20b0:	93 e0       	ldi	r25, 0x03	; 3
    20b2:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    20b6:	81 e0       	ldi	r24, 0x01	; 1
    20b8:	fe d9       	rcall	.-3076   	; 0x14b6 <_Z6headerh>
    20ba:	80 e0       	ldi	r24, 0x00	; 0
    20bc:	dd da       	rcall	.-2630   	; 0x1678 <_Z6bottomh>
    20be:	20 e8       	ldi	r18, 0x80	; 128
    20c0:	47 e3       	ldi	r20, 0x37	; 55
    20c2:	60 e0       	ldi	r22, 0x00	; 0
    20c4:	83 e8       	ldi	r24, 0x83	; 131
    20c6:	93 e0       	ldi	r25, 0x03	; 3
    20c8:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    20cc:	25 e4       	ldi	r18, 0x45	; 69
    20ce:	4f e0       	ldi	r20, 0x0F	; 15
    20d0:	60 e0       	ldi	r22, 0x00	; 0
    20d2:	83 e8       	ldi	r24, 0x83	; 131
    20d4:	93 e0       	ldi	r25, 0x03	; 3
    20d6:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    20da:	2b e3       	ldi	r18, 0x3B	; 59
    20dc:	48 e0       	ldi	r20, 0x08	; 8
    20de:	65 e4       	ldi	r22, 0x45	; 69
    20e0:	83 e8       	ldi	r24, 0x83	; 131
    20e2:	93 e0       	ldi	r25, 0x03	; 3
    20e4:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    20e8:	20 e1       	ldi	r18, 0x10	; 16
    20ea:	40 e0       	ldi	r20, 0x00	; 0
    20ec:	65 e4       	ldi	r22, 0x45	; 69
    20ee:	83 e8       	ldi	r24, 0x83	; 131
    20f0:	93 e0       	ldi	r25, 0x03	; 3
    20f2:	0e 94 06 04 	call	0x80c	; 0x80c <_ZN7Display9drawVLineEhhh>
    20f6:	21 e4       	ldi	r18, 0x41	; 65
    20f8:	48 e2       	ldi	r20, 0x28	; 40
    20fa:	6f e3       	ldi	r22, 0x3F	; 63
    20fc:	83 e8       	ldi	r24, 0x83	; 131
    20fe:	93 e0       	ldi	r25, 0x03	; 3
    2100:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    2104:	20 e3       	ldi	r18, 0x30	; 48
    2106:	40 e1       	ldi	r20, 0x10	; 16
    2108:	6f e3       	ldi	r22, 0x3F	; 63
    210a:	83 e8       	ldi	r24, 0x83	; 131
    210c:	93 e0       	ldi	r25, 0x03	; 3
    210e:	0e 94 06 04 	call	0x80c	; 0x80c <_ZN7Display9drawVLineEhhh>
    2112:	21 e4       	ldi	r18, 0x41	; 65
    2114:	48 e1       	ldi	r20, 0x18	; 24
    2116:	6f e3       	ldi	r22, 0x3F	; 63
    2118:	83 e8       	ldi	r24, 0x83	; 131
    211a:	93 e0       	ldi	r25, 0x03	; 3
    211c:	0e 94 20 04 	call	0x840	; 0x840 <_ZN7Display9drawHLineEhhh>
    2120:	60 91 84 07 	lds	r22, 0x0784
    2124:	60 53       	subi	r22, 0x30	; 48
    2126:	20 e0       	ldi	r18, 0x00	; 0
    2128:	40 e0       	ldi	r20, 0x00	; 0
    212a:	83 e8       	ldi	r24, 0x83	; 131
    212c:	93 e0       	ldi	r25, 0x03	; 3
    212e:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2132:	60 91 85 07 	lds	r22, 0x0785
    2136:	60 53       	subi	r22, 0x30	; 48
    2138:	20 e0       	ldi	r18, 0x00	; 0
    213a:	40 e1       	ldi	r20, 0x10	; 16
    213c:	83 e8       	ldi	r24, 0x83	; 131
    213e:	93 e0       	ldi	r25, 0x03	; 3
    2140:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2144:	60 91 87 07 	lds	r22, 0x0787
    2148:	60 53       	subi	r22, 0x30	; 48
    214a:	20 e0       	ldi	r18, 0x00	; 0
    214c:	45 e2       	ldi	r20, 0x25	; 37
    214e:	83 e8       	ldi	r24, 0x83	; 131
    2150:	93 e0       	ldi	r25, 0x03	; 3
    2152:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2156:	60 91 88 07 	lds	r22, 0x0788
    215a:	60 53       	subi	r22, 0x30	; 48
    215c:	20 e0       	ldi	r18, 0x00	; 0
    215e:	45 e3       	ldi	r20, 0x35	; 53
    2160:	83 e8       	ldi	r24, 0x83	; 131
    2162:	93 e0       	ldi	r25, 0x03	; 3
    2164:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2168:	3f 92       	push	r3
    216a:	8f 92       	push	r8
    216c:	2f 92       	push	r2
    216e:	9f 92       	push	r9
    2170:	80 e2       	ldi	r24, 0x20	; 32
    2172:	92 e0       	ldi	r25, 0x02	; 2
    2174:	9f 93       	push	r25
    2176:	8f 93       	push	r24
    2178:	ce 01       	movw	r24, r28
    217a:	01 96       	adiw	r24, 0x01	; 1
    217c:	9f 93       	push	r25
    217e:	8f 93       	push	r24
    2180:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    2184:	28 e0       	ldi	r18, 0x08	; 8
    2186:	02 2f       	mov	r16, r18
    2188:	08 1b       	sub	r16, r24
    218a:	0f b6       	in	r0, 0x3f	; 63
    218c:	f8 94       	cli
    218e:	de bf       	out	0x3e, r29	; 62
    2190:	0f be       	out	0x3f, r0	; 63
    2192:	cd bf       	out	0x3d, r28	; 61
    2194:	08 30       	cpi	r16, 0x08	; 8
    2196:	18 f5       	brcc	.+70     	; 0x21de <_Z12fahradschirmddddm+0x184>
    2198:	10 2f       	mov	r17, r16
    219a:	12 95       	swap	r17
    219c:	10 7f       	andi	r17, 0xF0	; 240
    219e:	4c 01       	movw	r8, r24
    21a0:	99 24       	eor	r9, r9
    21a2:	e1 e0       	ldi	r30, 0x01	; 1
    21a4:	f0 e0       	ldi	r31, 0x00	; 0
    21a6:	ec 0f       	add	r30, r28
    21a8:	fd 1f       	adc	r31, r29
    21aa:	e0 0f       	add	r30, r16
    21ac:	f1 1d       	adc	r31, r1
    21ae:	e8 0d       	add	r30, r8
    21b0:	f9 1d       	adc	r31, r9
    21b2:	38 97       	sbiw	r30, 0x08	; 8
    21b4:	60 81       	ld	r22, Z
    21b6:	6e 32       	cpi	r22, 0x2E	; 46
    21b8:	39 f4       	brne	.+14     	; 0x21c8 <_Z12fahradschirmddddm+0x16e>
    21ba:	20 e2       	ldi	r18, 0x20	; 32
    21bc:	41 2f       	mov	r20, r17
    21be:	83 e8       	ldi	r24, 0x83	; 131
    21c0:	93 e0       	ldi	r25, 0x03	; 3
    21c2:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    21c6:	07 c0       	rjmp	.+14     	; 0x21d6 <_Z12fahradschirmddddm+0x17c>
    21c8:	60 53       	subi	r22, 0x30	; 48
    21ca:	28 e1       	ldi	r18, 0x18	; 24
    21cc:	41 2f       	mov	r20, r17
    21ce:	83 e8       	ldi	r24, 0x83	; 131
    21d0:	93 e0       	ldi	r25, 0x03	; 3
    21d2:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    21d6:	0f 5f       	subi	r16, 0xFF	; 255
    21d8:	10 5f       	subi	r17, 0xF0	; 240
    21da:	08 30       	cpi	r16, 0x08	; 8
    21dc:	11 f7       	brne	.-60     	; 0x21a2 <_Z12fahradschirmddddm+0x148>
    21de:	a3 01       	movw	r20, r6
    21e0:	92 01       	movw	r18, r4
    21e2:	67 e2       	ldi	r22, 0x27	; 39
    21e4:	8f e1       	ldi	r24, 0x1F	; 31
    21e6:	62 db       	rcall	.-2364   	; 0x18ac <_Z19anzeige_kleinenadelhhf>
    21e8:	fc 85       	ldd	r31, Y+12	; 0x0c
    21ea:	ff 93       	push	r31
    21ec:	2b 85       	ldd	r18, Y+11	; 0x0b
    21ee:	2f 93       	push	r18
    21f0:	ff 92       	push	r15
    21f2:	ef 92       	push	r14
    21f4:	86 e2       	ldi	r24, 0x26	; 38
    21f6:	92 e0       	ldi	r25, 0x02	; 2
    21f8:	9f 93       	push	r25
    21fa:	8f 93       	push	r24
    21fc:	ce 01       	movw	r24, r28
    21fe:	01 96       	adiw	r24, 0x01	; 1
    2200:	9f 93       	push	r25
    2202:	8f 93       	push	r24
    2204:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    2208:	88 2e       	mov	r8, r24
    220a:	0f b6       	in	r0, 0x3f	; 63
    220c:	f8 94       	cli
    220e:	de bf       	out	0x3e, r29	; 62
    2210:	0f be       	out	0x3f, r0	; 63
    2212:	cd bf       	out	0x3d, r28	; 61
    2214:	88 20       	and	r8, r8
    2216:	b9 f0       	breq	.+46     	; 0x2246 <_Z12fahradschirmddddm+0x1ec>
    2218:	fe 01       	movw	r30, r28
    221a:	31 96       	adiw	r30, 0x01	; 1
    221c:	7f 01       	movw	r14, r30
    221e:	8f 01       	movw	r16, r30
    2220:	0f 2e       	mov	r0, r31
    2222:	f6 e4       	ldi	r31, 0x46	; 70
    2224:	9f 2e       	mov	r9, r31
    2226:	f0 2d       	mov	r31, r0
    2228:	f8 01       	movw	r30, r16
    222a:	61 91       	ld	r22, Z+
    222c:	8f 01       	movw	r16, r30
    222e:	20 e1       	ldi	r18, 0x10	; 16
    2230:	49 2d       	mov	r20, r9
    2232:	83 e8       	ldi	r24, 0x83	; 131
    2234:	93 e0       	ldi	r25, 0x03	; 3
    2236:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    223a:	f6 e0       	ldi	r31, 0x06	; 6
    223c:	9f 0e       	add	r9, r31
    223e:	90 2f       	mov	r25, r16
    2240:	9e 19       	sub	r25, r14
    2242:	98 15       	cp	r25, r8
    2244:	88 f3       	brcs	.-30     	; 0x2228 <_Z12fahradschirmddddm+0x1ce>
    2246:	df 92       	push	r13
    2248:	cf 92       	push	r12
    224a:	bf 92       	push	r11
    224c:	af 92       	push	r10
    224e:	8c e2       	ldi	r24, 0x2C	; 44
    2250:	92 e0       	ldi	r25, 0x02	; 2
    2252:	9f 93       	push	r25
    2254:	8f 93       	push	r24
    2256:	ce 01       	movw	r24, r28
    2258:	01 96       	adiw	r24, 0x01	; 1
    225a:	9f 93       	push	r25
    225c:	8f 93       	push	r24
    225e:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    2262:	c8 2e       	mov	r12, r24
    2264:	0f b6       	in	r0, 0x3f	; 63
    2266:	f8 94       	cli
    2268:	de bf       	out	0x3e, r29	; 62
    226a:	0f be       	out	0x3f, r0	; 63
    226c:	cd bf       	out	0x3d, r28	; 61
    226e:	88 23       	and	r24, r24
    2270:	b9 f0       	breq	.+46     	; 0x22a0 <_Z12fahradschirmddddm+0x246>
    2272:	ce 01       	movw	r24, r28
    2274:	01 96       	adiw	r24, 0x01	; 1
    2276:	7c 01       	movw	r14, r24
    2278:	8c 01       	movw	r16, r24
    227a:	0f 2e       	mov	r0, r31
    227c:	f6 e4       	ldi	r31, 0x46	; 70
    227e:	df 2e       	mov	r13, r31
    2280:	f0 2d       	mov	r31, r0
    2282:	f8 01       	movw	r30, r16
    2284:	61 91       	ld	r22, Z+
    2286:	8f 01       	movw	r16, r30
    2288:	28 e2       	ldi	r18, 0x28	; 40
    228a:	4d 2d       	mov	r20, r13
    228c:	83 e8       	ldi	r24, 0x83	; 131
    228e:	93 e0       	ldi	r25, 0x03	; 3
    2290:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2294:	f6 e0       	ldi	r31, 0x06	; 6
    2296:	df 0e       	add	r13, r31
    2298:	90 2f       	mov	r25, r16
    229a:	9e 19       	sub	r25, r14
    229c:	9c 15       	cp	r25, r12
    229e:	88 f3       	brcs	.-30     	; 0x2282 <_Z12fahradschirmddddm+0x228>
    22a0:	28 89       	ldd	r18, Y+16	; 0x10
    22a2:	2f 93       	push	r18
    22a4:	3f 85       	ldd	r19, Y+15	; 0x0f
    22a6:	3f 93       	push	r19
    22a8:	8e 85       	ldd	r24, Y+14	; 0x0e
    22aa:	8f 93       	push	r24
    22ac:	9d 85       	ldd	r25, Y+13	; 0x0d
    22ae:	9f 93       	push	r25
    22b0:	85 e3       	ldi	r24, 0x35	; 53
    22b2:	92 e0       	ldi	r25, 0x02	; 2
    22b4:	9f 93       	push	r25
    22b6:	8f 93       	push	r24
    22b8:	ce 01       	movw	r24, r28
    22ba:	01 96       	adiw	r24, 0x01	; 1
    22bc:	9f 93       	push	r25
    22be:	8f 93       	push	r24
    22c0:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    22c4:	c8 2e       	mov	r12, r24
    22c6:	0f b6       	in	r0, 0x3f	; 63
    22c8:	f8 94       	cli
    22ca:	de bf       	out	0x3e, r29	; 62
    22cc:	0f be       	out	0x3f, r0	; 63
    22ce:	cd bf       	out	0x3d, r28	; 61
    22d0:	88 23       	and	r24, r24
    22d2:	c1 f0       	breq	.+48     	; 0x2304 <_Z12fahradschirmddddm+0x2aa>
    22d4:	9e 01       	movw	r18, r28
    22d6:	2f 5f       	subi	r18, 0xFF	; 255
    22d8:	3f 4f       	sbci	r19, 0xFF	; 255
    22da:	79 01       	movw	r14, r18
    22dc:	89 01       	movw	r16, r18
    22de:	0f 2e       	mov	r0, r31
    22e0:	f6 e4       	ldi	r31, 0x46	; 70
    22e2:	df 2e       	mov	r13, r31
    22e4:	f0 2d       	mov	r31, r0
    22e6:	f8 01       	movw	r30, r16
    22e8:	61 91       	ld	r22, Z+
    22ea:	8f 01       	movw	r16, r30
    22ec:	20 e3       	ldi	r18, 0x30	; 48
    22ee:	4d 2d       	mov	r20, r13
    22f0:	83 e8       	ldi	r24, 0x83	; 131
    22f2:	93 e0       	ldi	r25, 0x03	; 3
    22f4:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    22f8:	f6 e0       	ldi	r31, 0x06	; 6
    22fa:	df 0e       	add	r13, r31
    22fc:	90 2f       	mov	r25, r16
    22fe:	9e 19       	sub	r25, r14
    2300:	9c 15       	cp	r25, r12
    2302:	88 f3       	brcs	.-30     	; 0x22e6 <_Z12fahradschirmddddm+0x28c>
    2304:	60 96       	adiw	r28, 0x10	; 16
    2306:	0f b6       	in	r0, 0x3f	; 63
    2308:	f8 94       	cli
    230a:	de bf       	out	0x3e, r29	; 62
    230c:	0f be       	out	0x3f, r0	; 63
    230e:	cd bf       	out	0x3d, r28	; 61
    2310:	df 91       	pop	r29
    2312:	cf 91       	pop	r28
    2314:	1f 91       	pop	r17
    2316:	0f 91       	pop	r16
    2318:	ff 90       	pop	r15
    231a:	ef 90       	pop	r14
    231c:	df 90       	pop	r13
    231e:	cf 90       	pop	r12
    2320:	bf 90       	pop	r11
    2322:	af 90       	pop	r10
    2324:	9f 90       	pop	r9
    2326:	8f 90       	pop	r8
    2328:	7f 90       	pop	r7
    232a:	6f 90       	pop	r6
    232c:	5f 90       	pop	r5
    232e:	4f 90       	pop	r4
    2330:	3f 90       	pop	r3
    2332:	2f 90       	pop	r2
    2334:	08 95       	ret

00002336 <_Z14Gaineinstellenv>:
    2336:	cf 92       	push	r12
    2338:	df 92       	push	r13
    233a:	ef 92       	push	r14
    233c:	ff 92       	push	r15
    233e:	0f 93       	push	r16
    2340:	1f 93       	push	r17
    2342:	cf 93       	push	r28
    2344:	df 93       	push	r29
    2346:	cd b7       	in	r28, 0x3d	; 61
    2348:	de b7       	in	r29, 0x3e	; 62
    234a:	64 97       	sbiw	r28, 0x14	; 20
    234c:	0f b6       	in	r0, 0x3f	; 63
    234e:	f8 94       	cli
    2350:	de bf       	out	0x3e, r29	; 62
    2352:	0f be       	out	0x3f, r0	; 63
    2354:	cd bf       	out	0x3d, r28	; 61
    2356:	83 e8       	ldi	r24, 0x83	; 131
    2358:	93 e0       	ldi	r25, 0x03	; 3
    235a:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    235e:	88 e0       	ldi	r24, 0x08	; 8
    2360:	ea e3       	ldi	r30, 0x3A	; 58
    2362:	f2 e0       	ldi	r31, 0x02	; 2
    2364:	8e 01       	movw	r16, r28
    2366:	0f 5f       	subi	r16, 0xFF	; 255
    2368:	1f 4f       	sbci	r17, 0xFF	; 255
    236a:	d8 01       	movw	r26, r16
    236c:	01 90       	ld	r0, Z+
    236e:	0d 92       	st	X+, r0
    2370:	8a 95       	dec	r24
    2372:	e1 f7       	brne	.-8      	; 0x236c <_Z14Gaineinstellenv+0x36>
    2374:	e0 2e       	mov	r14, r16
    2376:	f1 2e       	mov	r15, r17
    2378:	68 01       	movw	r12, r16
    237a:	10 e0       	ldi	r17, 0x00	; 0
    237c:	f6 01       	movw	r30, r12
    237e:	61 91       	ld	r22, Z+
    2380:	6f 01       	movw	r12, r30
    2382:	20 e0       	ldi	r18, 0x00	; 0
    2384:	41 2f       	mov	r20, r17
    2386:	83 e8       	ldi	r24, 0x83	; 131
    2388:	93 e0       	ldi	r25, 0x03	; 3
    238a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    238e:	1a 5f       	subi	r17, 0xFA	; 250
    2390:	1a 32       	cpi	r17, 0x2A	; 42
    2392:	a1 f7       	brne	.-24     	; 0x237c <_Z14Gaineinstellenv+0x46>
    2394:	88 e0       	ldi	r24, 0x08	; 8
    2396:	e2 e4       	ldi	r30, 0x42	; 66
    2398:	f2 e0       	ldi	r31, 0x02	; 2
    239a:	de 01       	movw	r26, r28
    239c:	11 96       	adiw	r26, 0x01	; 1
    239e:	01 90       	ld	r0, Z+
    23a0:	0d 92       	st	X+, r0
    23a2:	8a 95       	dec	r24
    23a4:	e1 f7       	brne	.-8      	; 0x239e <_Z14Gaineinstellenv+0x68>
    23a6:	ce 2c       	mov	r12, r14
    23a8:	df 2c       	mov	r13, r15
    23aa:	10 e0       	ldi	r17, 0x00	; 0
    23ac:	f6 01       	movw	r30, r12
    23ae:	61 91       	ld	r22, Z+
    23b0:	6f 01       	movw	r12, r30
    23b2:	28 e0       	ldi	r18, 0x08	; 8
    23b4:	41 2f       	mov	r20, r17
    23b6:	83 e8       	ldi	r24, 0x83	; 131
    23b8:	93 e0       	ldi	r25, 0x03	; 3
    23ba:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    23be:	1a 5f       	subi	r17, 0xFA	; 250
    23c0:	1a 32       	cpi	r17, 0x2A	; 42
    23c2:	a1 f7       	brne	.-24     	; 0x23ac <_Z14Gaineinstellenv+0x76>
    23c4:	88 e0       	ldi	r24, 0x08	; 8
    23c6:	ea e4       	ldi	r30, 0x4A	; 74
    23c8:	f2 e0       	ldi	r31, 0x02	; 2
    23ca:	de 01       	movw	r26, r28
    23cc:	11 96       	adiw	r26, 0x01	; 1
    23ce:	01 90       	ld	r0, Z+
    23d0:	0d 92       	st	X+, r0
    23d2:	8a 95       	dec	r24
    23d4:	e1 f7       	brne	.-8      	; 0x23ce <_Z14Gaineinstellenv+0x98>
    23d6:	ce 2c       	mov	r12, r14
    23d8:	df 2c       	mov	r13, r15
    23da:	10 e0       	ldi	r17, 0x00	; 0
    23dc:	f6 01       	movw	r30, r12
    23de:	61 91       	ld	r22, Z+
    23e0:	6f 01       	movw	r12, r30
    23e2:	20 e1       	ldi	r18, 0x10	; 16
    23e4:	41 2f       	mov	r20, r17
    23e6:	83 e8       	ldi	r24, 0x83	; 131
    23e8:	93 e0       	ldi	r25, 0x03	; 3
    23ea:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    23ee:	1a 5f       	subi	r17, 0xFA	; 250
    23f0:	1a 32       	cpi	r17, 0x2A	; 42
    23f2:	a1 f7       	brne	.-24     	; 0x23dc <_Z14Gaineinstellenv+0xa6>
    23f4:	88 e0       	ldi	r24, 0x08	; 8
    23f6:	e2 e5       	ldi	r30, 0x52	; 82
    23f8:	f2 e0       	ldi	r31, 0x02	; 2
    23fa:	de 01       	movw	r26, r28
    23fc:	11 96       	adiw	r26, 0x01	; 1
    23fe:	01 90       	ld	r0, Z+
    2400:	0d 92       	st	X+, r0
    2402:	8a 95       	dec	r24
    2404:	e1 f7       	brne	.-8      	; 0x23fe <_Z14Gaineinstellenv+0xc8>
    2406:	ce 2c       	mov	r12, r14
    2408:	df 2c       	mov	r13, r15
    240a:	10 e0       	ldi	r17, 0x00	; 0
    240c:	f6 01       	movw	r30, r12
    240e:	61 91       	ld	r22, Z+
    2410:	6f 01       	movw	r12, r30
    2412:	28 e1       	ldi	r18, 0x18	; 24
    2414:	41 2f       	mov	r20, r17
    2416:	83 e8       	ldi	r24, 0x83	; 131
    2418:	93 e0       	ldi	r25, 0x03	; 3
    241a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    241e:	1a 5f       	subi	r17, 0xFA	; 250
    2420:	1a 32       	cpi	r17, 0x2A	; 42
    2422:	a1 f7       	brne	.-24     	; 0x240c <_Z14Gaineinstellenv+0xd6>
    2424:	88 e0       	ldi	r24, 0x08	; 8
    2426:	ea e5       	ldi	r30, 0x5A	; 90
    2428:	f2 e0       	ldi	r31, 0x02	; 2
    242a:	de 01       	movw	r26, r28
    242c:	11 96       	adiw	r26, 0x01	; 1
    242e:	01 90       	ld	r0, Z+
    2430:	0d 92       	st	X+, r0
    2432:	8a 95       	dec	r24
    2434:	e1 f7       	brne	.-8      	; 0x242e <_Z14Gaineinstellenv+0xf8>
    2436:	ce 2c       	mov	r12, r14
    2438:	df 2c       	mov	r13, r15
    243a:	10 e0       	ldi	r17, 0x00	; 0
    243c:	f6 01       	movw	r30, r12
    243e:	61 91       	ld	r22, Z+
    2440:	6f 01       	movw	r12, r30
    2442:	20 e2       	ldi	r18, 0x20	; 32
    2444:	41 2f       	mov	r20, r17
    2446:	83 e8       	ldi	r24, 0x83	; 131
    2448:	93 e0       	ldi	r25, 0x03	; 3
    244a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    244e:	1a 5f       	subi	r17, 0xFA	; 250
    2450:	1a 32       	cpi	r17, 0x2A	; 42
    2452:	a1 f7       	brne	.-24     	; 0x243c <_Z14Gaineinstellenv+0x106>
    2454:	88 e0       	ldi	r24, 0x08	; 8
    2456:	e2 e6       	ldi	r30, 0x62	; 98
    2458:	f2 e0       	ldi	r31, 0x02	; 2
    245a:	de 01       	movw	r26, r28
    245c:	11 96       	adiw	r26, 0x01	; 1
    245e:	01 90       	ld	r0, Z+
    2460:	0d 92       	st	X+, r0
    2462:	8a 95       	dec	r24
    2464:	e1 f7       	brne	.-8      	; 0x245e <_Z14Gaineinstellenv+0x128>
    2466:	ce 2c       	mov	r12, r14
    2468:	df 2c       	mov	r13, r15
    246a:	10 e0       	ldi	r17, 0x00	; 0
    246c:	f6 01       	movw	r30, r12
    246e:	61 91       	ld	r22, Z+
    2470:	6f 01       	movw	r12, r30
    2472:	28 e2       	ldi	r18, 0x28	; 40
    2474:	41 2f       	mov	r20, r17
    2476:	83 e8       	ldi	r24, 0x83	; 131
    2478:	93 e0       	ldi	r25, 0x03	; 3
    247a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    247e:	1a 5f       	subi	r17, 0xFA	; 250
    2480:	1a 32       	cpi	r17, 0x2A	; 42
    2482:	a1 f7       	brne	.-24     	; 0x246c <_Z14Gaineinstellenv+0x136>
    2484:	88 e0       	ldi	r24, 0x08	; 8
    2486:	ea e6       	ldi	r30, 0x6A	; 106
    2488:	f2 e0       	ldi	r31, 0x02	; 2
    248a:	de 01       	movw	r26, r28
    248c:	11 96       	adiw	r26, 0x01	; 1
    248e:	01 90       	ld	r0, Z+
    2490:	0d 92       	st	X+, r0
    2492:	8a 95       	dec	r24
    2494:	e1 f7       	brne	.-8      	; 0x248e <_Z14Gaineinstellenv+0x158>
    2496:	ce 2c       	mov	r12, r14
    2498:	df 2c       	mov	r13, r15
    249a:	10 e0       	ldi	r17, 0x00	; 0
    249c:	f6 01       	movw	r30, r12
    249e:	61 91       	ld	r22, Z+
    24a0:	6f 01       	movw	r12, r30
    24a2:	20 e3       	ldi	r18, 0x30	; 48
    24a4:	41 2f       	mov	r20, r17
    24a6:	83 e8       	ldi	r24, 0x83	; 131
    24a8:	93 e0       	ldi	r25, 0x03	; 3
    24aa:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    24ae:	1a 5f       	subi	r17, 0xFA	; 250
    24b0:	1a 32       	cpi	r17, 0x2A	; 42
    24b2:	a1 f7       	brne	.-24     	; 0x249c <_Z14Gaineinstellenv+0x166>
    24b4:	88 e0       	ldi	r24, 0x08	; 8
    24b6:	e2 e7       	ldi	r30, 0x72	; 114
    24b8:	f2 e0       	ldi	r31, 0x02	; 2
    24ba:	de 01       	movw	r26, r28
    24bc:	11 96       	adiw	r26, 0x01	; 1
    24be:	01 90       	ld	r0, Z+
    24c0:	0d 92       	st	X+, r0
    24c2:	8a 95       	dec	r24
    24c4:	e1 f7       	brne	.-8      	; 0x24be <_Z14Gaineinstellenv+0x188>
    24c6:	ce 2c       	mov	r12, r14
    24c8:	df 2c       	mov	r13, r15
    24ca:	10 e0       	ldi	r17, 0x00	; 0
    24cc:	f6 01       	movw	r30, r12
    24ce:	61 91       	ld	r22, Z+
    24d0:	6f 01       	movw	r12, r30
    24d2:	28 e3       	ldi	r18, 0x38	; 56
    24d4:	41 2f       	mov	r20, r17
    24d6:	83 e8       	ldi	r24, 0x83	; 131
    24d8:	93 e0       	ldi	r25, 0x03	; 3
    24da:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    24de:	1a 5f       	subi	r17, 0xFA	; 250
    24e0:	1a 32       	cpi	r17, 0x2A	; 42
    24e2:	a1 f7       	brne	.-24     	; 0x24cc <_Z14Gaineinstellenv+0x196>
    24e4:	64 96       	adiw	r28, 0x14	; 20
    24e6:	0f b6       	in	r0, 0x3f	; 63
    24e8:	f8 94       	cli
    24ea:	de bf       	out	0x3e, r29	; 62
    24ec:	0f be       	out	0x3f, r0	; 63
    24ee:	cd bf       	out	0x3d, r28	; 61
    24f0:	df 91       	pop	r29
    24f2:	cf 91       	pop	r28
    24f4:	1f 91       	pop	r17
    24f6:	0f 91       	pop	r16
    24f8:	ff 90       	pop	r15
    24fa:	ef 90       	pop	r14
    24fc:	df 90       	pop	r13
    24fe:	cf 90       	pop	r12
    2500:	08 95       	ret

00002502 <_Z15anzeige_kompassd>:
    2502:	9f 92       	push	r9
    2504:	af 92       	push	r10
    2506:	bf 92       	push	r11
    2508:	cf 92       	push	r12
    250a:	df 92       	push	r13
    250c:	ef 92       	push	r14
    250e:	ff 92       	push	r15
    2510:	0f 93       	push	r16
    2512:	1f 93       	push	r17
    2514:	cf 93       	push	r28
    2516:	df 93       	push	r29
    2518:	cd b7       	in	r28, 0x3d	; 61
    251a:	de b7       	in	r29, 0x3e	; 62
    251c:	64 97       	sbiw	r28, 0x14	; 20
    251e:	0f b6       	in	r0, 0x3f	; 63
    2520:	f8 94       	cli
    2522:	de bf       	out	0x3e, r29	; 62
    2524:	0f be       	out	0x3f, r0	; 63
    2526:	cd bf       	out	0x3d, r28	; 61
    2528:	c6 2e       	mov	r12, r22
    252a:	d7 2e       	mov	r13, r23
    252c:	e8 2e       	mov	r14, r24
    252e:	f9 2e       	mov	r15, r25
    2530:	8c e6       	ldi	r24, 0x6C	; 108
    2532:	93 e0       	ldi	r25, 0x03	; 3
    2534:	0e 94 5f 29 	call	0x52be	; 0x52be <_ZN8Pressure18READ_Pressure_onceEv>
    2538:	8c e6       	ldi	r24, 0x6C	; 108
    253a:	93 e0       	ldi	r25, 0x03	; 3
    253c:	0e 94 d7 29 	call	0x53ae	; 0x53ae <_ZN8Pressure16READ_TemperatureEv>
    2540:	83 e8       	ldi	r24, 0x83	; 131
    2542:	93 e0       	ldi	r25, 0x03	; 3
    2544:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2548:	0f 2e       	mov	r0, r31
    254a:	f4 e8       	ldi	r31, 0x84	; 132
    254c:	af 2e       	mov	r10, r31
    254e:	f7 e0       	ldi	r31, 0x07	; 7
    2550:	bf 2e       	mov	r11, r31
    2552:	f0 2d       	mov	r31, r0
    2554:	11 e4       	ldi	r17, 0x41	; 65
    2556:	f5 01       	movw	r30, r10
    2558:	61 91       	ld	r22, Z+
    255a:	5f 01       	movw	r10, r30
    255c:	20 e0       	ldi	r18, 0x00	; 0
    255e:	41 2f       	mov	r20, r17
    2560:	83 e8       	ldi	r24, 0x83	; 131
    2562:	93 e0       	ldi	r25, 0x03	; 3
    2564:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2568:	1a 5f       	subi	r17, 0xFA	; 250
    256a:	11 37       	cpi	r17, 0x71	; 113
    256c:	a1 f7       	brne	.-24     	; 0x2556 <_Z15anzeige_kompassd+0x54>
    256e:	0f 2e       	mov	r0, r31
    2570:	fc e8       	ldi	r31, 0x8C	; 140
    2572:	af 2e       	mov	r10, r31
    2574:	f7 e0       	ldi	r31, 0x07	; 7
    2576:	bf 2e       	mov	r11, r31
    2578:	f0 2d       	mov	r31, r0
    257a:	11 e4       	ldi	r17, 0x41	; 65
    257c:	f5 01       	movw	r30, r10
    257e:	61 91       	ld	r22, Z+
    2580:	5f 01       	movw	r10, r30
    2582:	28 e3       	ldi	r18, 0x38	; 56
    2584:	41 2f       	mov	r20, r17
    2586:	83 e8       	ldi	r24, 0x83	; 131
    2588:	93 e0       	ldi	r25, 0x03	; 3
    258a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    258e:	1a 5f       	subi	r17, 0xFA	; 250
    2590:	11 37       	cpi	r17, 0x71	; 113
    2592:	a1 f7       	brne	.-24     	; 0x257c <_Z15anzeige_kompassd+0x7a>
    2594:	40 91 6c 03 	lds	r20, 0x036C
    2598:	50 91 6d 03 	lds	r21, 0x036D
    259c:	60 91 6e 03 	lds	r22, 0x036E
    25a0:	70 91 6f 03 	lds	r23, 0x036F
    25a4:	8c e6       	ldi	r24, 0x6C	; 108
    25a6:	93 e0       	ldi	r25, 0x03	; 3
    25a8:	0e 94 47 2a 	call	0x548e	; 0x548e <_ZN8Pressure8altitudeEd>
    25ac:	9f 93       	push	r25
    25ae:	8f 93       	push	r24
    25b0:	7f 93       	push	r23
    25b2:	6f 93       	push	r22
    25b4:	8a e7       	ldi	r24, 0x7A	; 122
    25b6:	92 e0       	ldi	r25, 0x02	; 2
    25b8:	9f 93       	push	r25
    25ba:	8f 93       	push	r24
    25bc:	ce 01       	movw	r24, r28
    25be:	01 96       	adiw	r24, 0x01	; 1
    25c0:	9f 93       	push	r25
    25c2:	8f 93       	push	r24
    25c4:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    25c8:	0f b6       	in	r0, 0x3f	; 63
    25ca:	f8 94       	cli
    25cc:	de bf       	out	0x3e, r29	; 62
    25ce:	0f be       	out	0x3f, r0	; 63
    25d0:	cd bf       	out	0x3d, r28	; 61
    25d2:	88 23       	and	r24, r24
    25d4:	f1 f0       	breq	.+60     	; 0x2612 <_Z15anzeige_kompassd+0x110>
    25d6:	8e 01       	movw	r16, r28
    25d8:	0f 5f       	subi	r16, 0xFF	; 255
    25da:	1f 4f       	sbci	r17, 0xFF	; 255
    25dc:	81 50       	subi	r24, 0x01	; 1
    25de:	68 94       	set
    25e0:	aa 24       	eor	r10, r10
    25e2:	a1 f8       	bld	r10, 1
    25e4:	b1 2c       	mov	r11, r1
    25e6:	ac 0e       	add	r10, r28
    25e8:	bd 1e       	adc	r11, r29
    25ea:	a8 0e       	add	r10, r24
    25ec:	b1 1c       	adc	r11, r1
    25ee:	0f 2e       	mov	r0, r31
    25f0:	f1 e4       	ldi	r31, 0x41	; 65
    25f2:	9f 2e       	mov	r9, r31
    25f4:	f0 2d       	mov	r31, r0
    25f6:	f8 01       	movw	r30, r16
    25f8:	61 91       	ld	r22, Z+
    25fa:	8f 01       	movw	r16, r30
    25fc:	2a e0       	ldi	r18, 0x0A	; 10
    25fe:	49 2d       	mov	r20, r9
    2600:	83 e8       	ldi	r24, 0x83	; 131
    2602:	93 e0       	ldi	r25, 0x03	; 3
    2604:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2608:	f6 e0       	ldi	r31, 0x06	; 6
    260a:	9f 0e       	add	r9, r31
    260c:	0a 15       	cp	r16, r10
    260e:	1b 05       	cpc	r17, r11
    2610:	91 f7       	brne	.-28     	; 0x25f6 <_Z15anzeige_kompassd+0xf4>
    2612:	e0 e7       	ldi	r30, 0x70	; 112
    2614:	f3 e0       	ldi	r31, 0x03	; 3
    2616:	83 81       	ldd	r24, Z+3	; 0x03
    2618:	8f 93       	push	r24
    261a:	82 81       	ldd	r24, Z+2	; 0x02
    261c:	8f 93       	push	r24
    261e:	81 81       	ldd	r24, Z+1	; 0x01
    2620:	8f 93       	push	r24
    2622:	80 81       	ld	r24, Z
    2624:	8f 93       	push	r24
    2626:	89 e1       	ldi	r24, 0x19	; 25
    2628:	92 e0       	ldi	r25, 0x02	; 2
    262a:	9f 93       	push	r25
    262c:	8f 93       	push	r24
    262e:	ce 01       	movw	r24, r28
    2630:	01 96       	adiw	r24, 0x01	; 1
    2632:	9f 93       	push	r25
    2634:	8f 93       	push	r24
    2636:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    263a:	0f b6       	in	r0, 0x3f	; 63
    263c:	f8 94       	cli
    263e:	de bf       	out	0x3e, r29	; 62
    2640:	0f be       	out	0x3f, r0	; 63
    2642:	cd bf       	out	0x3d, r28	; 61
    2644:	88 23       	and	r24, r24
    2646:	f1 f0       	breq	.+60     	; 0x2684 <_Z15anzeige_kompassd+0x182>
    2648:	8e 01       	movw	r16, r28
    264a:	0f 5f       	subi	r16, 0xFF	; 255
    264c:	1f 4f       	sbci	r17, 0xFF	; 255
    264e:	81 50       	subi	r24, 0x01	; 1
    2650:	68 94       	set
    2652:	aa 24       	eor	r10, r10
    2654:	a1 f8       	bld	r10, 1
    2656:	b1 2c       	mov	r11, r1
    2658:	ac 0e       	add	r10, r28
    265a:	bd 1e       	adc	r11, r29
    265c:	a8 0e       	add	r10, r24
    265e:	b1 1c       	adc	r11, r1
    2660:	0f 2e       	mov	r0, r31
    2662:	f1 e4       	ldi	r31, 0x41	; 65
    2664:	9f 2e       	mov	r9, r31
    2666:	f0 2d       	mov	r31, r0
    2668:	f8 01       	movw	r30, r16
    266a:	61 91       	ld	r22, Z+
    266c:	8f 01       	movw	r16, r30
    266e:	28 e2       	ldi	r18, 0x28	; 40
    2670:	49 2d       	mov	r20, r9
    2672:	83 e8       	ldi	r24, 0x83	; 131
    2674:	93 e0       	ldi	r25, 0x03	; 3
    2676:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    267a:	f6 e0       	ldi	r31, 0x06	; 6
    267c:	9f 0e       	add	r9, r31
    267e:	0a 15       	cp	r16, r10
    2680:	1b 05       	cpc	r17, r11
    2682:	91 f7       	brne	.-28     	; 0x2668 <_Z15anzeige_kompassd+0x166>
    2684:	ff 92       	push	r15
    2686:	ef 92       	push	r14
    2688:	df 92       	push	r13
    268a:	cf 92       	push	r12
    268c:	84 e8       	ldi	r24, 0x84	; 132
    268e:	92 e0       	ldi	r25, 0x02	; 2
    2690:	9f 93       	push	r25
    2692:	8f 93       	push	r24
    2694:	ce 01       	movw	r24, r28
    2696:	01 96       	adiw	r24, 0x01	; 1
    2698:	9f 93       	push	r25
    269a:	8f 93       	push	r24
    269c:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    26a0:	0f b6       	in	r0, 0x3f	; 63
    26a2:	f8 94       	cli
    26a4:	de bf       	out	0x3e, r29	; 62
    26a6:	0f be       	out	0x3f, r0	; 63
    26a8:	cd bf       	out	0x3d, r28	; 61
    26aa:	88 23       	and	r24, r24
    26ac:	f1 f0       	breq	.+60     	; 0x26ea <_Z15anzeige_kompassd+0x1e8>
    26ae:	8e 01       	movw	r16, r28
    26b0:	0f 5f       	subi	r16, 0xFF	; 255
    26b2:	1f 4f       	sbci	r17, 0xFF	; 255
    26b4:	81 50       	subi	r24, 0x01	; 1
    26b6:	68 94       	set
    26b8:	aa 24       	eor	r10, r10
    26ba:	a1 f8       	bld	r10, 1
    26bc:	b1 2c       	mov	r11, r1
    26be:	ac 0e       	add	r10, r28
    26c0:	bd 1e       	adc	r11, r29
    26c2:	a8 0e       	add	r10, r24
    26c4:	b1 1c       	adc	r11, r1
    26c6:	0f 2e       	mov	r0, r31
    26c8:	f1 e4       	ldi	r31, 0x41	; 65
    26ca:	9f 2e       	mov	r9, r31
    26cc:	f0 2d       	mov	r31, r0
    26ce:	f8 01       	movw	r30, r16
    26d0:	61 91       	ld	r22, Z+
    26d2:	8f 01       	movw	r16, r30
    26d4:	20 e3       	ldi	r18, 0x30	; 48
    26d6:	49 2d       	mov	r20, r9
    26d8:	83 e8       	ldi	r24, 0x83	; 131
    26da:	93 e0       	ldi	r25, 0x03	; 3
    26dc:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    26e0:	f6 e0       	ldi	r31, 0x06	; 6
    26e2:	9f 0e       	add	r9, r31
    26e4:	0a 15       	cp	r16, r10
    26e6:	1b 05       	cpc	r17, r11
    26e8:	91 f7       	brne	.-28     	; 0x26ce <_Z15anzeige_kompassd+0x1cc>
    26ea:	2c 2d       	mov	r18, r12
    26ec:	3d 2d       	mov	r19, r13
    26ee:	4e 2d       	mov	r20, r14
    26f0:	5f 2d       	mov	r21, r15
    26f2:	6f e1       	ldi	r22, 0x1F	; 31
    26f4:	8f e1       	ldi	r24, 0x1F	; 31
    26f6:	bd d8       	rcall	.-3718   	; 0x1872 <_Z13anzeige_nadelhhf>
    26f8:	23 e0       	ldi	r18, 0x03	; 3
    26fa:	40 e5       	ldi	r20, 0x50	; 80
    26fc:	6c 2d       	mov	r22, r12
    26fe:	7d 2d       	mov	r23, r13
    2700:	8e 2d       	mov	r24, r14
    2702:	9f 2d       	mov	r25, r15
    2704:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <_Z16anzeige_richtungfhh>
    2708:	64 96       	adiw	r28, 0x14	; 20
    270a:	0f b6       	in	r0, 0x3f	; 63
    270c:	f8 94       	cli
    270e:	de bf       	out	0x3e, r29	; 62
    2710:	0f be       	out	0x3f, r0	; 63
    2712:	cd bf       	out	0x3d, r28	; 61
    2714:	df 91       	pop	r29
    2716:	cf 91       	pop	r28
    2718:	1f 91       	pop	r17
    271a:	0f 91       	pop	r16
    271c:	ff 90       	pop	r15
    271e:	ef 90       	pop	r14
    2720:	df 90       	pop	r13
    2722:	cf 90       	pop	r12
    2724:	bf 90       	pop	r11
    2726:	af 90       	pop	r10
    2728:	9f 90       	pop	r9
    272a:	08 95       	ret

0000272c <_Z10timerseitev>:
    272c:	cf 92       	push	r12
    272e:	df 92       	push	r13
    2730:	ef 92       	push	r14
    2732:	ff 92       	push	r15
    2734:	0f 93       	push	r16
    2736:	1f 93       	push	r17
    2738:	cf 93       	push	r28
    273a:	df 93       	push	r29
    273c:	cd b7       	in	r28, 0x3d	; 61
    273e:	de b7       	in	r29, 0x3e	; 62
    2740:	64 97       	sbiw	r28, 0x14	; 20
    2742:	0f b6       	in	r0, 0x3f	; 63
    2744:	f8 94       	cli
    2746:	de bf       	out	0x3e, r29	; 62
    2748:	0f be       	out	0x3f, r0	; 63
    274a:	cd bf       	out	0x3d, r28	; 61
    274c:	83 e8       	ldi	r24, 0x83	; 131
    274e:	93 e0       	ldi	r25, 0x03	; 3
    2750:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2754:	88 e0       	ldi	r24, 0x08	; 8
    2756:	ef e8       	ldi	r30, 0x8F	; 143
    2758:	f2 e0       	ldi	r31, 0x02	; 2
    275a:	8e 01       	movw	r16, r28
    275c:	0f 5f       	subi	r16, 0xFF	; 255
    275e:	1f 4f       	sbci	r17, 0xFF	; 255
    2760:	d8 01       	movw	r26, r16
    2762:	01 90       	ld	r0, Z+
    2764:	0d 92       	st	X+, r0
    2766:	8a 95       	dec	r24
    2768:	e1 f7       	brne	.-8      	; 0x2762 <_Z10timerseitev+0x36>
    276a:	c0 2e       	mov	r12, r16
    276c:	d1 2e       	mov	r13, r17
    276e:	78 01       	movw	r14, r16
    2770:	10 e0       	ldi	r17, 0x00	; 0
    2772:	f7 01       	movw	r30, r14
    2774:	61 91       	ld	r22, Z+
    2776:	7f 01       	movw	r14, r30
    2778:	20 e0       	ldi	r18, 0x00	; 0
    277a:	41 2f       	mov	r20, r17
    277c:	83 e8       	ldi	r24, 0x83	; 131
    277e:	93 e0       	ldi	r25, 0x03	; 3
    2780:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2784:	1a 5f       	subi	r17, 0xFA	; 250
    2786:	1a 32       	cpi	r17, 0x2A	; 42
    2788:	a1 f7       	brne	.-24     	; 0x2772 <_Z10timerseitev+0x46>
    278a:	60 91 54 03 	lds	r22, 0x0354
    278e:	66 23       	and	r22, r22
    2790:	39 f0       	breq	.+14     	; 0x27a0 <_Z10timerseitev+0x74>
    2792:	60 5d       	subi	r22, 0xD0	; 208
    2794:	20 e0       	ldi	r18, 0x00	; 0
    2796:	4a e2       	ldi	r20, 0x2A	; 42
    2798:	83 e8       	ldi	r24, 0x83	; 131
    279a:	93 e0       	ldi	r25, 0x03	; 3
    279c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    27a0:	e0 91 9f 07 	lds	r30, 0x079F
    27a4:	f0 91 a0 07 	lds	r31, 0x07A0
    27a8:	0f 2e       	mov	r0, r31
    27aa:	f0 e1       	ldi	r31, 0x10	; 16
    27ac:	ef 2e       	mov	r14, r31
    27ae:	fe e0       	ldi	r31, 0x0E	; 14
    27b0:	ff 2e       	mov	r15, r31
    27b2:	f0 2d       	mov	r31, r0
    27b4:	cf 01       	movw	r24, r30
    27b6:	b7 01       	movw	r22, r14
    27b8:	0e 94 d1 32 	call	0x65a2	; 0x65a2 <__udivmodhi4>
    27bc:	ab 01       	movw	r20, r22
    27be:	9c 01       	movw	r18, r24
    27c0:	a9 e8       	ldi	r26, 0x89	; 137
    27c2:	b8 e8       	ldi	r27, 0x88	; 136
    27c4:	0e 94 fe 32 	call	0x65fc	; 0x65fc <__umulhisi3>
    27c8:	8c 01       	movw	r16, r24
    27ca:	16 95       	lsr	r17
    27cc:	07 95       	ror	r16
    27ce:	12 95       	swap	r17
    27d0:	02 95       	swap	r16
    27d2:	0f 70       	andi	r16, 0x0F	; 15
    27d4:	01 27       	eor	r16, r17
    27d6:	1f 70       	andi	r17, 0x0F	; 15
    27d8:	01 27       	eor	r16, r17
    27da:	9f 01       	movw	r18, r30
    27dc:	0e 94 fe 32 	call	0x65fc	; 0x65fc <__umulhisi3>
    27e0:	96 95       	lsr	r25
    27e2:	87 95       	ror	r24
    27e4:	92 95       	swap	r25
    27e6:	82 95       	swap	r24
    27e8:	8f 70       	andi	r24, 0x0F	; 15
    27ea:	89 27       	eor	r24, r25
    27ec:	9f 70       	andi	r25, 0x0F	; 15
    27ee:	89 27       	eor	r24, r25
    27f0:	6c e3       	ldi	r22, 0x3C	; 60
    27f2:	68 9f       	mul	r22, r24
    27f4:	90 01       	movw	r18, r0
    27f6:	69 9f       	mul	r22, r25
    27f8:	30 0d       	add	r19, r0
    27fa:	11 24       	eor	r1, r1
    27fc:	e2 1b       	sub	r30, r18
    27fe:	f3 0b       	sbc	r31, r19
    2800:	ca 01       	movw	r24, r20
    2802:	99 27       	eor	r25, r25
    2804:	91 95       	neg	r25
    2806:	81 95       	neg	r24
    2808:	91 09       	sbc	r25, r1
    280a:	b7 01       	movw	r22, r14
    280c:	0e 94 e5 32 	call	0x65ca	; 0x65ca <__divmodhi4>
    2810:	cb 01       	movw	r24, r22
    2812:	6a e0       	ldi	r22, 0x0A	; 10
    2814:	70 e0       	ldi	r23, 0x00	; 0
    2816:	0e 94 e5 32 	call	0x65ca	; 0x65ca <__divmodhi4>
    281a:	69 83       	std	Y+1, r22	; 0x01
    281c:	8d ec       	ldi	r24, 0xCD	; 205
    281e:	48 9f       	mul	r20, r24
    2820:	91 2d       	mov	r25, r1
    2822:	11 24       	eor	r1, r1
    2824:	96 95       	lsr	r25
    2826:	96 95       	lsr	r25
    2828:	96 95       	lsr	r25
    282a:	99 0f       	add	r25, r25
    282c:	29 2f       	mov	r18, r25
    282e:	22 0f       	add	r18, r18
    2830:	22 0f       	add	r18, r18
    2832:	92 0f       	add	r25, r18
    2834:	49 1b       	sub	r20, r25
    2836:	4a 83       	std	Y+2, r20	; 0x02
    2838:	9a e3       	ldi	r25, 0x3A	; 58
    283a:	9b 83       	std	Y+3, r25	; 0x03
    283c:	08 9f       	mul	r16, r24
    283e:	21 2d       	mov	r18, r1
    2840:	11 24       	eor	r1, r1
    2842:	26 95       	lsr	r18
    2844:	26 95       	lsr	r18
    2846:	26 95       	lsr	r18
    2848:	2c 83       	std	Y+4, r18	; 0x04
    284a:	22 0f       	add	r18, r18
    284c:	32 2f       	mov	r19, r18
    284e:	33 0f       	add	r19, r19
    2850:	33 0f       	add	r19, r19
    2852:	23 0f       	add	r18, r19
    2854:	02 1b       	sub	r16, r18
    2856:	0d 83       	std	Y+5, r16	; 0x05
    2858:	9e 83       	std	Y+6, r25	; 0x06
    285a:	e8 9f       	mul	r30, r24
    285c:	81 2d       	mov	r24, r1
    285e:	11 24       	eor	r1, r1
    2860:	86 95       	lsr	r24
    2862:	86 95       	lsr	r24
    2864:	86 95       	lsr	r24
    2866:	8f 83       	std	Y+7, r24	; 0x07
    2868:	88 0f       	add	r24, r24
    286a:	98 2f       	mov	r25, r24
    286c:	99 0f       	add	r25, r25
    286e:	99 0f       	add	r25, r25
    2870:	89 0f       	add	r24, r25
    2872:	e8 1b       	sub	r30, r24
    2874:	e8 87       	std	Y+8, r30	; 0x08
    2876:	ec 2c       	mov	r14, r12
    2878:	fd 2c       	mov	r15, r13
    287a:	10 e0       	ldi	r17, 0x00	; 0
    287c:	f7 01       	movw	r30, r14
    287e:	61 91       	ld	r22, Z+
    2880:	7f 01       	movw	r14, r30
    2882:	6a 33       	cpi	r22, 0x3A	; 58
    2884:	39 f4       	brne	.+14     	; 0x2894 <_Z10timerseitev+0x168>
    2886:	24 e1       	ldi	r18, 0x14	; 20
    2888:	41 2f       	mov	r20, r17
    288a:	83 e8       	ldi	r24, 0x83	; 131
    288c:	93 e0       	ldi	r25, 0x03	; 3
    288e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2892:	06 c0       	rjmp	.+12     	; 0x28a0 <_Z10timerseitev+0x174>
    2894:	20 e1       	ldi	r18, 0x10	; 16
    2896:	41 2f       	mov	r20, r17
    2898:	83 e8       	ldi	r24, 0x83	; 131
    289a:	93 e0       	ldi	r25, 0x03	; 3
    289c:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    28a0:	10 5f       	subi	r17, 0xF0	; 240
    28a2:	10 38       	cpi	r17, 0x80	; 128
    28a4:	59 f7       	brne	.-42     	; 0x287c <_Z10timerseitev+0x150>
    28a6:	64 96       	adiw	r28, 0x14	; 20
    28a8:	0f b6       	in	r0, 0x3f	; 63
    28aa:	f8 94       	cli
    28ac:	de bf       	out	0x3e, r29	; 62
    28ae:	0f be       	out	0x3f, r0	; 63
    28b0:	cd bf       	out	0x3d, r28	; 61
    28b2:	df 91       	pop	r29
    28b4:	cf 91       	pop	r28
    28b6:	1f 91       	pop	r17
    28b8:	0f 91       	pop	r16
    28ba:	ff 90       	pop	r15
    28bc:	ef 90       	pop	r14
    28be:	df 90       	pop	r13
    28c0:	cf 90       	pop	r12
    28c2:	08 95       	ret

000028c4 <_Z13Stoppuhrseitev>:
    28c4:	cf 92       	push	r12
    28c6:	df 92       	push	r13
    28c8:	ef 92       	push	r14
    28ca:	ff 92       	push	r15
    28cc:	0f 93       	push	r16
    28ce:	1f 93       	push	r17
    28d0:	cf 93       	push	r28
    28d2:	df 93       	push	r29
    28d4:	cd b7       	in	r28, 0x3d	; 61
    28d6:	de b7       	in	r29, 0x3e	; 62
    28d8:	64 97       	sbiw	r28, 0x14	; 20
    28da:	0f b6       	in	r0, 0x3f	; 63
    28dc:	f8 94       	cli
    28de:	de bf       	out	0x3e, r29	; 62
    28e0:	0f be       	out	0x3f, r0	; 63
    28e2:	cd bf       	out	0x3d, r28	; 61
    28e4:	83 e8       	ldi	r24, 0x83	; 131
    28e6:	93 e0       	ldi	r25, 0x03	; 3
    28e8:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    28ec:	8b e0       	ldi	r24, 0x0B	; 11
    28ee:	e7 e9       	ldi	r30, 0x97	; 151
    28f0:	f2 e0       	ldi	r31, 0x02	; 2
    28f2:	8e 01       	movw	r16, r28
    28f4:	0f 5f       	subi	r16, 0xFF	; 255
    28f6:	1f 4f       	sbci	r17, 0xFF	; 255
    28f8:	d8 01       	movw	r26, r16
    28fa:	01 90       	ld	r0, Z+
    28fc:	0d 92       	st	X+, r0
    28fe:	8a 95       	dec	r24
    2900:	e1 f7       	brne	.-8      	; 0x28fa <_Z13Stoppuhrseitev+0x36>
    2902:	c0 2e       	mov	r12, r16
    2904:	d1 2e       	mov	r13, r17
    2906:	78 01       	movw	r14, r16
    2908:	10 e0       	ldi	r17, 0x00	; 0
    290a:	f7 01       	movw	r30, r14
    290c:	61 91       	ld	r22, Z+
    290e:	7f 01       	movw	r14, r30
    2910:	20 e0       	ldi	r18, 0x00	; 0
    2912:	41 2f       	mov	r20, r17
    2914:	83 e8       	ldi	r24, 0x83	; 131
    2916:	93 e0       	ldi	r25, 0x03	; 3
    2918:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    291c:	1a 5f       	subi	r17, 0xFA	; 250
    291e:	1c 33       	cpi	r17, 0x3C	; 60
    2920:	a1 f7       	brne	.-24     	; 0x290a <_Z13Stoppuhrseitev+0x46>
    2922:	e0 91 a1 07 	lds	r30, 0x07A1
    2926:	f0 91 a2 07 	lds	r31, 0x07A2
    292a:	0f 2e       	mov	r0, r31
    292c:	f0 e1       	ldi	r31, 0x10	; 16
    292e:	ef 2e       	mov	r14, r31
    2930:	fe e0       	ldi	r31, 0x0E	; 14
    2932:	ff 2e       	mov	r15, r31
    2934:	f0 2d       	mov	r31, r0
    2936:	cf 01       	movw	r24, r30
    2938:	b7 01       	movw	r22, r14
    293a:	0e 94 d1 32 	call	0x65a2	; 0x65a2 <__udivmodhi4>
    293e:	ab 01       	movw	r20, r22
    2940:	9c 01       	movw	r18, r24
    2942:	a9 e8       	ldi	r26, 0x89	; 137
    2944:	b8 e8       	ldi	r27, 0x88	; 136
    2946:	0e 94 fe 32 	call	0x65fc	; 0x65fc <__umulhisi3>
    294a:	8c 01       	movw	r16, r24
    294c:	16 95       	lsr	r17
    294e:	07 95       	ror	r16
    2950:	12 95       	swap	r17
    2952:	02 95       	swap	r16
    2954:	0f 70       	andi	r16, 0x0F	; 15
    2956:	01 27       	eor	r16, r17
    2958:	1f 70       	andi	r17, 0x0F	; 15
    295a:	01 27       	eor	r16, r17
    295c:	9f 01       	movw	r18, r30
    295e:	0e 94 fe 32 	call	0x65fc	; 0x65fc <__umulhisi3>
    2962:	96 95       	lsr	r25
    2964:	87 95       	ror	r24
    2966:	92 95       	swap	r25
    2968:	82 95       	swap	r24
    296a:	8f 70       	andi	r24, 0x0F	; 15
    296c:	89 27       	eor	r24, r25
    296e:	9f 70       	andi	r25, 0x0F	; 15
    2970:	89 27       	eor	r24, r25
    2972:	6c e3       	ldi	r22, 0x3C	; 60
    2974:	68 9f       	mul	r22, r24
    2976:	90 01       	movw	r18, r0
    2978:	69 9f       	mul	r22, r25
    297a:	30 0d       	add	r19, r0
    297c:	11 24       	eor	r1, r1
    297e:	e2 1b       	sub	r30, r18
    2980:	f3 0b       	sbc	r31, r19
    2982:	ca 01       	movw	r24, r20
    2984:	99 27       	eor	r25, r25
    2986:	91 95       	neg	r25
    2988:	81 95       	neg	r24
    298a:	91 09       	sbc	r25, r1
    298c:	b7 01       	movw	r22, r14
    298e:	0e 94 e5 32 	call	0x65ca	; 0x65ca <__divmodhi4>
    2992:	cb 01       	movw	r24, r22
    2994:	6a e0       	ldi	r22, 0x0A	; 10
    2996:	70 e0       	ldi	r23, 0x00	; 0
    2998:	0e 94 e5 32 	call	0x65ca	; 0x65ca <__divmodhi4>
    299c:	69 83       	std	Y+1, r22	; 0x01
    299e:	8d ec       	ldi	r24, 0xCD	; 205
    29a0:	48 9f       	mul	r20, r24
    29a2:	91 2d       	mov	r25, r1
    29a4:	11 24       	eor	r1, r1
    29a6:	96 95       	lsr	r25
    29a8:	96 95       	lsr	r25
    29aa:	96 95       	lsr	r25
    29ac:	99 0f       	add	r25, r25
    29ae:	29 2f       	mov	r18, r25
    29b0:	22 0f       	add	r18, r18
    29b2:	22 0f       	add	r18, r18
    29b4:	92 0f       	add	r25, r18
    29b6:	49 1b       	sub	r20, r25
    29b8:	4a 83       	std	Y+2, r20	; 0x02
    29ba:	9a e3       	ldi	r25, 0x3A	; 58
    29bc:	9b 83       	std	Y+3, r25	; 0x03
    29be:	08 9f       	mul	r16, r24
    29c0:	21 2d       	mov	r18, r1
    29c2:	11 24       	eor	r1, r1
    29c4:	26 95       	lsr	r18
    29c6:	26 95       	lsr	r18
    29c8:	26 95       	lsr	r18
    29ca:	2c 83       	std	Y+4, r18	; 0x04
    29cc:	22 0f       	add	r18, r18
    29ce:	32 2f       	mov	r19, r18
    29d0:	33 0f       	add	r19, r19
    29d2:	33 0f       	add	r19, r19
    29d4:	23 0f       	add	r18, r19
    29d6:	02 1b       	sub	r16, r18
    29d8:	0d 83       	std	Y+5, r16	; 0x05
    29da:	9e 83       	std	Y+6, r25	; 0x06
    29dc:	e8 9f       	mul	r30, r24
    29de:	81 2d       	mov	r24, r1
    29e0:	11 24       	eor	r1, r1
    29e2:	86 95       	lsr	r24
    29e4:	86 95       	lsr	r24
    29e6:	86 95       	lsr	r24
    29e8:	8f 83       	std	Y+7, r24	; 0x07
    29ea:	88 0f       	add	r24, r24
    29ec:	98 2f       	mov	r25, r24
    29ee:	99 0f       	add	r25, r25
    29f0:	99 0f       	add	r25, r25
    29f2:	89 0f       	add	r24, r25
    29f4:	e8 1b       	sub	r30, r24
    29f6:	e8 87       	std	Y+8, r30	; 0x08
    29f8:	ec 2c       	mov	r14, r12
    29fa:	fd 2c       	mov	r15, r13
    29fc:	10 e0       	ldi	r17, 0x00	; 0
    29fe:	f7 01       	movw	r30, r14
    2a00:	61 91       	ld	r22, Z+
    2a02:	7f 01       	movw	r14, r30
    2a04:	6a 33       	cpi	r22, 0x3A	; 58
    2a06:	39 f4       	brne	.+14     	; 0x2a16 <_Z13Stoppuhrseitev+0x152>
    2a08:	24 e1       	ldi	r18, 0x14	; 20
    2a0a:	41 2f       	mov	r20, r17
    2a0c:	83 e8       	ldi	r24, 0x83	; 131
    2a0e:	93 e0       	ldi	r25, 0x03	; 3
    2a10:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2a14:	06 c0       	rjmp	.+12     	; 0x2a22 <_Z13Stoppuhrseitev+0x15e>
    2a16:	20 e1       	ldi	r18, 0x10	; 16
    2a18:	41 2f       	mov	r20, r17
    2a1a:	83 e8       	ldi	r24, 0x83	; 131
    2a1c:	93 e0       	ldi	r25, 0x03	; 3
    2a1e:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    2a22:	10 5f       	subi	r17, 0xF0	; 240
    2a24:	10 38       	cpi	r17, 0x80	; 128
    2a26:	59 f7       	brne	.-42     	; 0x29fe <_Z13Stoppuhrseitev+0x13a>
    2a28:	64 96       	adiw	r28, 0x14	; 20
    2a2a:	0f b6       	in	r0, 0x3f	; 63
    2a2c:	f8 94       	cli
    2a2e:	de bf       	out	0x3e, r29	; 62
    2a30:	0f be       	out	0x3f, r0	; 63
    2a32:	cd bf       	out	0x3d, r28	; 61
    2a34:	df 91       	pop	r29
    2a36:	cf 91       	pop	r28
    2a38:	1f 91       	pop	r17
    2a3a:	0f 91       	pop	r16
    2a3c:	ff 90       	pop	r15
    2a3e:	ef 90       	pop	r14
    2a40:	df 90       	pop	r13
    2a42:	cf 90       	pop	r12
    2a44:	08 95       	ret

00002a46 <_Z14Pressuresensorv>:
    2a46:	bf 92       	push	r11
    2a48:	cf 92       	push	r12
    2a4a:	df 92       	push	r13
    2a4c:	ef 92       	push	r14
    2a4e:	ff 92       	push	r15
    2a50:	0f 93       	push	r16
    2a52:	1f 93       	push	r17
    2a54:	cf 93       	push	r28
    2a56:	df 93       	push	r29
    2a58:	cd b7       	in	r28, 0x3d	; 61
    2a5a:	de b7       	in	r29, 0x3e	; 62
    2a5c:	64 97       	sbiw	r28, 0x14	; 20
    2a5e:	0f b6       	in	r0, 0x3f	; 63
    2a60:	f8 94       	cli
    2a62:	de bf       	out	0x3e, r29	; 62
    2a64:	0f be       	out	0x3f, r0	; 63
    2a66:	cd bf       	out	0x3d, r28	; 61
    2a68:	8c e6       	ldi	r24, 0x6C	; 108
    2a6a:	93 e0       	ldi	r25, 0x03	; 3
    2a6c:	0e 94 5f 29 	call	0x52be	; 0x52be <_ZN8Pressure18READ_Pressure_onceEv>
    2a70:	8c e6       	ldi	r24, 0x6C	; 108
    2a72:	93 e0       	ldi	r25, 0x03	; 3
    2a74:	0e 94 d7 29 	call	0x53ae	; 0x53ae <_ZN8Pressure16READ_TemperatureEv>
    2a78:	83 e8       	ldi	r24, 0x83	; 131
    2a7a:	93 e0       	ldi	r25, 0x03	; 3
    2a7c:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
    2a80:	80 e0       	ldi	r24, 0x00	; 0
    2a82:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <_Z6headerh>
    2a86:	80 e0       	ldi	r24, 0x00	; 0
    2a88:	0e 94 3c 0b 	call	0x1678	; 0x1678 <_Z6bottomh>
    2a8c:	8e e0       	ldi	r24, 0x0E	; 14
    2a8e:	e2 ea       	ldi	r30, 0xA2	; 162
    2a90:	f2 e0       	ldi	r31, 0x02	; 2
    2a92:	8e 01       	movw	r16, r28
    2a94:	0f 5f       	subi	r16, 0xFF	; 255
    2a96:	1f 4f       	sbci	r17, 0xFF	; 255
    2a98:	d8 01       	movw	r26, r16
    2a9a:	01 90       	ld	r0, Z+
    2a9c:	0d 92       	st	X+, r0
    2a9e:	8a 95       	dec	r24
    2aa0:	e1 f7       	brne	.-8      	; 0x2a9a <_Z14Pressuresensorv+0x54>
    2aa2:	c0 2e       	mov	r12, r16
    2aa4:	d1 2e       	mov	r13, r17
    2aa6:	78 01       	movw	r14, r16
    2aa8:	10 e0       	ldi	r17, 0x00	; 0
    2aaa:	f7 01       	movw	r30, r14
    2aac:	61 91       	ld	r22, Z+
    2aae:	7f 01       	movw	r14, r30
    2ab0:	20 e1       	ldi	r18, 0x10	; 16
    2ab2:	41 2f       	mov	r20, r17
    2ab4:	83 e8       	ldi	r24, 0x83	; 131
    2ab6:	93 e0       	ldi	r25, 0x03	; 3
    2ab8:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2abc:	1a 5f       	subi	r17, 0xFA	; 250
    2abe:	1e 34       	cpi	r17, 0x4E	; 78
    2ac0:	a1 f7       	brne	.-24     	; 0x2aaa <_Z14Pressuresensorv+0x64>
    2ac2:	ec e6       	ldi	r30, 0x6C	; 108
    2ac4:	f3 e0       	ldi	r31, 0x03	; 3
    2ac6:	83 81       	ldd	r24, Z+3	; 0x03
    2ac8:	8f 93       	push	r24
    2aca:	82 81       	ldd	r24, Z+2	; 0x02
    2acc:	8f 93       	push	r24
    2ace:	81 81       	ldd	r24, Z+1	; 0x01
    2ad0:	8f 93       	push	r24
    2ad2:	80 81       	ld	r24, Z
    2ad4:	8f 93       	push	r24
    2ad6:	80 eb       	ldi	r24, 0xB0	; 176
    2ad8:	92 e0       	ldi	r25, 0x02	; 2
    2ada:	9f 93       	push	r25
    2adc:	8f 93       	push	r24
    2ade:	ce 01       	movw	r24, r28
    2ae0:	01 96       	adiw	r24, 0x01	; 1
    2ae2:	9f 93       	push	r25
    2ae4:	8f 93       	push	r24
    2ae6:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    2aea:	0f b6       	in	r0, 0x3f	; 63
    2aec:	f8 94       	cli
    2aee:	de bf       	out	0x3e, r29	; 62
    2af0:	0f be       	out	0x3f, r0	; 63
    2af2:	cd bf       	out	0x3d, r28	; 61
    2af4:	88 23       	and	r24, r24
    2af6:	d1 f0       	breq	.+52     	; 0x2b2c <_Z14Pressuresensorv+0xe6>
    2af8:	81 50       	subi	r24, 0x01	; 1
    2afa:	68 94       	set
    2afc:	ee 24       	eor	r14, r14
    2afe:	e1 f8       	bld	r14, 1
    2b00:	f1 2c       	mov	r15, r1
    2b02:	ec 0e       	add	r14, r28
    2b04:	fd 1e       	adc	r15, r29
    2b06:	e8 0e       	add	r14, r24
    2b08:	f1 1c       	adc	r15, r1
    2b0a:	0c 2d       	mov	r16, r12
    2b0c:	1d 2d       	mov	r17, r13
    2b0e:	b1 2c       	mov	r11, r1
    2b10:	f8 01       	movw	r30, r16
    2b12:	61 91       	ld	r22, Z+
    2b14:	8f 01       	movw	r16, r30
    2b16:	28 e1       	ldi	r18, 0x18	; 24
    2b18:	4b 2d       	mov	r20, r11
    2b1a:	83 e8       	ldi	r24, 0x83	; 131
    2b1c:	93 e0       	ldi	r25, 0x03	; 3
    2b1e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2b22:	f6 e0       	ldi	r31, 0x06	; 6
    2b24:	bf 0e       	add	r11, r31
    2b26:	0e 15       	cp	r16, r14
    2b28:	1f 05       	cpc	r17, r15
    2b2a:	91 f7       	brne	.-28     	; 0x2b10 <_Z14Pressuresensorv+0xca>
    2b2c:	40 91 6c 03 	lds	r20, 0x036C
    2b30:	50 91 6d 03 	lds	r21, 0x036D
    2b34:	60 91 6e 03 	lds	r22, 0x036E
    2b38:	70 91 6f 03 	lds	r23, 0x036F
    2b3c:	8c e6       	ldi	r24, 0x6C	; 108
    2b3e:	93 e0       	ldi	r25, 0x03	; 3
    2b40:	0e 94 47 2a 	call	0x548e	; 0x548e <_ZN8Pressure8altitudeEd>
    2b44:	9f 93       	push	r25
    2b46:	8f 93       	push	r24
    2b48:	7f 93       	push	r23
    2b4a:	6f 93       	push	r22
    2b4c:	89 eb       	ldi	r24, 0xB9	; 185
    2b4e:	92 e0       	ldi	r25, 0x02	; 2
    2b50:	9f 93       	push	r25
    2b52:	8f 93       	push	r24
    2b54:	ce 01       	movw	r24, r28
    2b56:	01 96       	adiw	r24, 0x01	; 1
    2b58:	9f 93       	push	r25
    2b5a:	8f 93       	push	r24
    2b5c:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    2b60:	0f b6       	in	r0, 0x3f	; 63
    2b62:	f8 94       	cli
    2b64:	de bf       	out	0x3e, r29	; 62
    2b66:	0f be       	out	0x3f, r0	; 63
    2b68:	cd bf       	out	0x3d, r28	; 61
    2b6a:	88 23       	and	r24, r24
    2b6c:	d1 f0       	breq	.+52     	; 0x2ba2 <_Z14Pressuresensorv+0x15c>
    2b6e:	81 50       	subi	r24, 0x01	; 1
    2b70:	68 94       	set
    2b72:	ee 24       	eor	r14, r14
    2b74:	e1 f8       	bld	r14, 1
    2b76:	f1 2c       	mov	r15, r1
    2b78:	ec 0e       	add	r14, r28
    2b7a:	fd 1e       	adc	r15, r29
    2b7c:	e8 0e       	add	r14, r24
    2b7e:	f1 1c       	adc	r15, r1
    2b80:	0c 2d       	mov	r16, r12
    2b82:	1d 2d       	mov	r17, r13
    2b84:	b1 2c       	mov	r11, r1
    2b86:	f8 01       	movw	r30, r16
    2b88:	61 91       	ld	r22, Z+
    2b8a:	8f 01       	movw	r16, r30
    2b8c:	20 e2       	ldi	r18, 0x20	; 32
    2b8e:	4b 2d       	mov	r20, r11
    2b90:	83 e8       	ldi	r24, 0x83	; 131
    2b92:	93 e0       	ldi	r25, 0x03	; 3
    2b94:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2b98:	f6 e0       	ldi	r31, 0x06	; 6
    2b9a:	bf 0e       	add	r11, r31
    2b9c:	0e 15       	cp	r16, r14
    2b9e:	1f 05       	cpc	r17, r15
    2ba0:	91 f7       	brne	.-28     	; 0x2b86 <_Z14Pressuresensorv+0x140>
    2ba2:	e0 e7       	ldi	r30, 0x70	; 112
    2ba4:	f3 e0       	ldi	r31, 0x03	; 3
    2ba6:	83 81       	ldd	r24, Z+3	; 0x03
    2ba8:	8f 93       	push	r24
    2baa:	82 81       	ldd	r24, Z+2	; 0x02
    2bac:	8f 93       	push	r24
    2bae:	81 81       	ldd	r24, Z+1	; 0x01
    2bb0:	8f 93       	push	r24
    2bb2:	80 81       	ld	r24, Z
    2bb4:	8f 93       	push	r24
    2bb6:	89 e1       	ldi	r24, 0x19	; 25
    2bb8:	92 e0       	ldi	r25, 0x02	; 2
    2bba:	9f 93       	push	r25
    2bbc:	8f 93       	push	r24
    2bbe:	ce 01       	movw	r24, r28
    2bc0:	01 96       	adiw	r24, 0x01	; 1
    2bc2:	9f 93       	push	r25
    2bc4:	8f 93       	push	r24
    2bc6:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
    2bca:	0f b6       	in	r0, 0x3f	; 63
    2bcc:	f8 94       	cli
    2bce:	de bf       	out	0x3e, r29	; 62
    2bd0:	0f be       	out	0x3f, r0	; 63
    2bd2:	cd bf       	out	0x3d, r28	; 61
    2bd4:	88 23       	and	r24, r24
    2bd6:	d1 f0       	breq	.+52     	; 0x2c0c <_Z14Pressuresensorv+0x1c6>
    2bd8:	81 50       	subi	r24, 0x01	; 1
    2bda:	68 94       	set
    2bdc:	ee 24       	eor	r14, r14
    2bde:	e1 f8       	bld	r14, 1
    2be0:	f1 2c       	mov	r15, r1
    2be2:	ec 0e       	add	r14, r28
    2be4:	fd 1e       	adc	r15, r29
    2be6:	e8 0e       	add	r14, r24
    2be8:	f1 1c       	adc	r15, r1
    2bea:	0c 2d       	mov	r16, r12
    2bec:	1d 2d       	mov	r17, r13
    2bee:	d1 2c       	mov	r13, r1
    2bf0:	f8 01       	movw	r30, r16
    2bf2:	61 91       	ld	r22, Z+
    2bf4:	8f 01       	movw	r16, r30
    2bf6:	20 e3       	ldi	r18, 0x30	; 48
    2bf8:	4d 2d       	mov	r20, r13
    2bfa:	83 e8       	ldi	r24, 0x83	; 131
    2bfc:	93 e0       	ldi	r25, 0x03	; 3
    2bfe:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2c02:	f6 e0       	ldi	r31, 0x06	; 6
    2c04:	df 0e       	add	r13, r31
    2c06:	0e 15       	cp	r16, r14
    2c08:	1f 05       	cpc	r17, r15
    2c0a:	91 f7       	brne	.-28     	; 0x2bf0 <_Z14Pressuresensorv+0x1aa>
    2c0c:	64 96       	adiw	r28, 0x14	; 20
    2c0e:	0f b6       	in	r0, 0x3f	; 63
    2c10:	f8 94       	cli
    2c12:	de bf       	out	0x3e, r29	; 62
    2c14:	0f be       	out	0x3f, r0	; 63
    2c16:	cd bf       	out	0x3d, r28	; 61
    2c18:	df 91       	pop	r29
    2c1a:	cf 91       	pop	r28
    2c1c:	1f 91       	pop	r17
    2c1e:	0f 91       	pop	r16
    2c20:	ff 90       	pop	r15
    2c22:	ef 90       	pop	r14
    2c24:	df 90       	pop	r13
    2c26:	cf 90       	pop	r12
    2c28:	bf 90       	pop	r11
    2c2a:	08 95       	ret

00002c2c <_Z11Wanderseitev>:

void Wanderseite(){
    2c2c:	bf 92       	push	r11
    2c2e:	cf 92       	push	r12
    2c30:	df 92       	push	r13
    2c32:	ef 92       	push	r14
    2c34:	ff 92       	push	r15
    2c36:	0f 93       	push	r16
    2c38:	1f 93       	push	r17
    2c3a:	cf 93       	push	r28
    2c3c:	df 93       	push	r29
    2c3e:	cd b7       	in	r28, 0x3d	; 61
    2c40:	de b7       	in	r29, 0x3e	; 62
    2c42:	64 97       	sbiw	r28, 0x14	; 20
    2c44:	0f b6       	in	r0, 0x3f	; 63
    2c46:	f8 94       	cli
    2c48:	de bf       	out	0x3e, r29	; 62
    2c4a:	0f be       	out	0x3f, r0	; 63
    2c4c:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	uint8_t buffersize=0;
	oled.clearFrame();
    2c4e:	83 e8       	ldi	r24, 0x83	; 131
    2c50:	93 e0       	ldi	r25, 0x03	; 3
    2c52:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	header(0);
    2c56:	80 e0       	ldi	r24, 0x00	; 0
    2c58:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <_Z6headerh>
	bottom(0);
    2c5c:	80 e0       	ldi	r24, 0x00	; 0
    2c5e:	0e 94 3c 0b 	call	0x1678	; 0x1678 <_Z6bottomh>
	
	Accelerometer.readtempera();
    2c62:	8b e5       	ldi	r24, 0x5B	; 91
    2c64:	93 e0       	ldi	r25, 0x03	; 3
    2c66:	0e 94 10 27 	call	0x4e20	; 0x4e20 <_ZN7LSM303D11readtemperaEv>
	Accelerometer.readacc();
    2c6a:	8b e5       	ldi	r24, 0x5B	; 91
    2c6c:	93 e0       	ldi	r25, 0x03	; 3
    2c6e:	0e 94 73 26 	call	0x4ce6	; 0x4ce6 <_ZN7LSM303D7readaccEv>
	
	buffersize=sprintf(buffer,"LSM303D Daten:");
    2c72:	8f e0       	ldi	r24, 0x0F	; 15
    2c74:	e7 ec       	ldi	r30, 0xC7	; 199
    2c76:	f2 e0       	ldi	r31, 0x02	; 2
    2c78:	8e 01       	movw	r16, r28
    2c7a:	0f 5f       	subi	r16, 0xFF	; 255
    2c7c:	1f 4f       	sbci	r17, 0xFF	; 255
    2c7e:	d8 01       	movw	r26, r16
    2c80:	01 90       	ld	r0, Z+
    2c82:	0d 92       	st	X+, r0
    2c84:	8a 95       	dec	r24
    2c86:	e1 f7       	brne	.-8      	; 0x2c80 <_Z11Wanderseitev+0x54>
    2c88:	e0 2e       	mov	r14, r16
    2c8a:	f1 2e       	mov	r15, r17
    2c8c:	68 01       	movw	r12, r16
    2c8e:	10 e0       	ldi	r17, 0x00	; 0
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,1*charhighte);}
    2c90:	f6 01       	movw	r30, r12
    2c92:	61 91       	ld	r22, Z+
    2c94:	6f 01       	movw	r12, r30
    2c96:	28 e0       	ldi	r18, 0x08	; 8
    2c98:	41 2f       	mov	r20, r17
    2c9a:	83 e8       	ldi	r24, 0x83	; 131
    2c9c:	93 e0       	ldi	r25, 0x03	; 3
    2c9e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2ca2:	1a 5f       	subi	r17, 0xFA	; 250
    2ca4:	14 35       	cpi	r17, 0x54	; 84
    2ca6:	a1 f7       	brne	.-24     	; 0x2c90 <_Z11Wanderseitev+0x64>
	buffersize=sprintf(buffer,"X: %.1f",Accelerometer.roll*180.0/M_PI);
    2ca8:	20 e0       	ldi	r18, 0x00	; 0
    2caa:	30 e0       	ldi	r19, 0x00	; 0
    2cac:	44 e3       	ldi	r20, 0x34	; 52
    2cae:	53 e4       	ldi	r21, 0x43	; 67
    2cb0:	60 91 63 03 	lds	r22, 0x0363
    2cb4:	70 91 64 03 	lds	r23, 0x0364
    2cb8:	80 91 65 03 	lds	r24, 0x0365
    2cbc:	90 91 66 03 	lds	r25, 0x0366
    2cc0:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    2cc4:	2b ed       	ldi	r18, 0xDB	; 219
    2cc6:	3f e0       	ldi	r19, 0x0F	; 15
    2cc8:	49 e4       	ldi	r20, 0x49	; 73
    2cca:	50 e4       	ldi	r21, 0x40	; 64
    2ccc:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
    2cd0:	9f 93       	push	r25
    2cd2:	8f 93       	push	r24
    2cd4:	7f 93       	push	r23
    2cd6:	6f 93       	push	r22
    2cd8:	86 ed       	ldi	r24, 0xD6	; 214
    2cda:	92 e0       	ldi	r25, 0x02	; 2
    2cdc:	9f 93       	push	r25
    2cde:	8f 93       	push	r24
    2ce0:	ce 01       	movw	r24, r28
    2ce2:	01 96       	adiw	r24, 0x01	; 1
    2ce4:	9f 93       	push	r25
    2ce6:	8f 93       	push	r24
    2ce8:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
    2cec:	0f b6       	in	r0, 0x3f	; 63
    2cee:	f8 94       	cli
    2cf0:	de bf       	out	0x3e, r29	; 62
    2cf2:	0f be       	out	0x3f, r0	; 63
    2cf4:	cd bf       	out	0x3d, r28	; 61
    2cf6:	88 23       	and	r24, r24
    2cf8:	d1 f0       	breq	.+52     	; 0x2d2e <_Z11Wanderseitev+0x102>
    2cfa:	81 50       	subi	r24, 0x01	; 1
    2cfc:	68 94       	set
    2cfe:	cc 24       	eor	r12, r12
    2d00:	c1 f8       	bld	r12, 1
    2d02:	d1 2c       	mov	r13, r1
    2d04:	cc 0e       	add	r12, r28
    2d06:	dd 1e       	adc	r13, r29
    2d08:	c8 0e       	add	r12, r24
    2d0a:	d1 1c       	adc	r13, r1
    2d0c:	0e 2d       	mov	r16, r14
    2d0e:	1f 2d       	mov	r17, r15
    2d10:	b1 2c       	mov	r11, r1
    2d12:	f8 01       	movw	r30, r16
    2d14:	61 91       	ld	r22, Z+
    2d16:	8f 01       	movw	r16, r30
    2d18:	28 e1       	ldi	r18, 0x18	; 24
    2d1a:	4b 2d       	mov	r20, r11
    2d1c:	83 e8       	ldi	r24, 0x83	; 131
    2d1e:	93 e0       	ldi	r25, 0x03	; 3
    2d20:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2d24:	f6 e0       	ldi	r31, 0x06	; 6
    2d26:	bf 0e       	add	r11, r31
    2d28:	0c 15       	cp	r16, r12
    2d2a:	1d 05       	cpc	r17, r13
    2d2c:	91 f7       	brne	.-28     	; 0x2d12 <_Z11Wanderseitev+0xe6>
	buffersize=sprintf(buffer,"Y: %.1f",Accelerometer.pitch*180.0/M_PI);
    2d2e:	20 e0       	ldi	r18, 0x00	; 0
    2d30:	30 e0       	ldi	r19, 0x00	; 0
    2d32:	44 e3       	ldi	r20, 0x34	; 52
    2d34:	53 e4       	ldi	r21, 0x43	; 67
    2d36:	60 91 67 03 	lds	r22, 0x0367
    2d3a:	70 91 68 03 	lds	r23, 0x0368
    2d3e:	80 91 69 03 	lds	r24, 0x0369
    2d42:	90 91 6a 03 	lds	r25, 0x036A
    2d46:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    2d4a:	2b ed       	ldi	r18, 0xDB	; 219
    2d4c:	3f e0       	ldi	r19, 0x0F	; 15
    2d4e:	49 e4       	ldi	r20, 0x49	; 73
    2d50:	50 e4       	ldi	r21, 0x40	; 64
    2d52:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
    2d56:	9f 93       	push	r25
    2d58:	8f 93       	push	r24
    2d5a:	7f 93       	push	r23
    2d5c:	6f 93       	push	r22
    2d5e:	8e ed       	ldi	r24, 0xDE	; 222
    2d60:	92 e0       	ldi	r25, 0x02	; 2
    2d62:	9f 93       	push	r25
    2d64:	8f 93       	push	r24
    2d66:	ce 01       	movw	r24, r28
    2d68:	01 96       	adiw	r24, 0x01	; 1
    2d6a:	9f 93       	push	r25
    2d6c:	8f 93       	push	r24
    2d6e:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,4*charhighte);}
    2d72:	0f b6       	in	r0, 0x3f	; 63
    2d74:	f8 94       	cli
    2d76:	de bf       	out	0x3e, r29	; 62
    2d78:	0f be       	out	0x3f, r0	; 63
    2d7a:	cd bf       	out	0x3d, r28	; 61
    2d7c:	88 23       	and	r24, r24
    2d7e:	d1 f0       	breq	.+52     	; 0x2db4 <_Z11Wanderseitev+0x188>
    2d80:	81 50       	subi	r24, 0x01	; 1
    2d82:	68 94       	set
    2d84:	cc 24       	eor	r12, r12
    2d86:	c1 f8       	bld	r12, 1
    2d88:	d1 2c       	mov	r13, r1
    2d8a:	cc 0e       	add	r12, r28
    2d8c:	dd 1e       	adc	r13, r29
    2d8e:	c8 0e       	add	r12, r24
    2d90:	d1 1c       	adc	r13, r1
    2d92:	0e 2d       	mov	r16, r14
    2d94:	1f 2d       	mov	r17, r15
    2d96:	b1 2c       	mov	r11, r1
    2d98:	f8 01       	movw	r30, r16
    2d9a:	61 91       	ld	r22, Z+
    2d9c:	8f 01       	movw	r16, r30
    2d9e:	20 e2       	ldi	r18, 0x20	; 32
    2da0:	4b 2d       	mov	r20, r11
    2da2:	83 e8       	ldi	r24, 0x83	; 131
    2da4:	93 e0       	ldi	r25, 0x03	; 3
    2da6:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2daa:	f6 e0       	ldi	r31, 0x06	; 6
    2dac:	bf 0e       	add	r11, r31
    2dae:	0c 15       	cp	r16, r12
    2db0:	1d 05       	cpc	r17, r13
    2db2:	91 f7       	brne	.-28     	; 0x2d98 <_Z11Wanderseitev+0x16c>
	buffersize=sprintf(buffer,"Z: %.1i",Accelerometer.achsen_A[2]);
    2db4:	ef e5       	ldi	r30, 0x5F	; 95
    2db6:	f3 e0       	ldi	r31, 0x03	; 3
    2db8:	81 81       	ldd	r24, Z+1	; 0x01
    2dba:	8f 93       	push	r24
    2dbc:	80 81       	ld	r24, Z
    2dbe:	8f 93       	push	r24
    2dc0:	86 ee       	ldi	r24, 0xE6	; 230
    2dc2:	92 e0       	ldi	r25, 0x02	; 2
    2dc4:	9f 93       	push	r25
    2dc6:	8f 93       	push	r24
    2dc8:	ce 01       	movw	r24, r28
    2dca:	01 96       	adiw	r24, 0x01	; 1
    2dcc:	9f 93       	push	r25
    2dce:	8f 93       	push	r24
    2dd0:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,5*charhighte);}	
    2dd4:	0f 90       	pop	r0
    2dd6:	0f 90       	pop	r0
    2dd8:	0f 90       	pop	r0
    2dda:	0f 90       	pop	r0
    2ddc:	0f 90       	pop	r0
    2dde:	0f 90       	pop	r0
    2de0:	88 23       	and	r24, r24
    2de2:	d1 f0       	breq	.+52     	; 0x2e18 <_Z11Wanderseitev+0x1ec>
    2de4:	81 50       	subi	r24, 0x01	; 1
    2de6:	68 94       	set
    2de8:	cc 24       	eor	r12, r12
    2dea:	c1 f8       	bld	r12, 1
    2dec:	d1 2c       	mov	r13, r1
    2dee:	cc 0e       	add	r12, r28
    2df0:	dd 1e       	adc	r13, r29
    2df2:	c8 0e       	add	r12, r24
    2df4:	d1 1c       	adc	r13, r1
    2df6:	0e 2d       	mov	r16, r14
    2df8:	1f 2d       	mov	r17, r15
    2dfa:	b1 2c       	mov	r11, r1
    2dfc:	f8 01       	movw	r30, r16
    2dfe:	61 91       	ld	r22, Z+
    2e00:	8f 01       	movw	r16, r30
    2e02:	28 e2       	ldi	r18, 0x28	; 40
    2e04:	4b 2d       	mov	r20, r11
    2e06:	83 e8       	ldi	r24, 0x83	; 131
    2e08:	93 e0       	ldi	r25, 0x03	; 3
    2e0a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2e0e:	f6 e0       	ldi	r31, 0x06	; 6
    2e10:	bf 0e       	add	r11, r31
    2e12:	0c 15       	cp	r16, r12
    2e14:	1d 05       	cpc	r17, r13
    2e16:	91 f7       	brne	.-28     	; 0x2dfc <_Z11Wanderseitev+0x1d0>
		
	buffersize=sprintf(buffer,"%i C",Accelerometer.Tempera);
    2e18:	e1 e6       	ldi	r30, 0x61	; 97
    2e1a:	f3 e0       	ldi	r31, 0x03	; 3
    2e1c:	81 81       	ldd	r24, Z+1	; 0x01
    2e1e:	8f 93       	push	r24
    2e20:	80 81       	ld	r24, Z
    2e22:	8f 93       	push	r24
    2e24:	8e ee       	ldi	r24, 0xEE	; 238
    2e26:	92 e0       	ldi	r25, 0x02	; 2
    2e28:	9f 93       	push	r25
    2e2a:	8f 93       	push	r24
    2e2c:	ce 01       	movw	r24, r28
    2e2e:	01 96       	adiw	r24, 0x01	; 1
    2e30:	9f 93       	push	r25
    2e32:	8f 93       	push	r24
    2e34:	0e 94 31 34 	call	0x6862	; 0x6862 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,6*charhighte);}
    2e38:	0f 90       	pop	r0
    2e3a:	0f 90       	pop	r0
    2e3c:	0f 90       	pop	r0
    2e3e:	0f 90       	pop	r0
    2e40:	0f 90       	pop	r0
    2e42:	0f 90       	pop	r0
    2e44:	88 23       	and	r24, r24
    2e46:	d1 f0       	breq	.+52     	; 0x2e7c <_Z11Wanderseitev+0x250>
    2e48:	81 50       	subi	r24, 0x01	; 1
    2e4a:	68 94       	set
    2e4c:	cc 24       	eor	r12, r12
    2e4e:	c1 f8       	bld	r12, 1
    2e50:	d1 2c       	mov	r13, r1
    2e52:	cc 0e       	add	r12, r28
    2e54:	dd 1e       	adc	r13, r29
    2e56:	c8 0e       	add	r12, r24
    2e58:	d1 1c       	adc	r13, r1
    2e5a:	0e 2d       	mov	r16, r14
    2e5c:	1f 2d       	mov	r17, r15
    2e5e:	f1 2c       	mov	r15, r1
    2e60:	f8 01       	movw	r30, r16
    2e62:	61 91       	ld	r22, Z+
    2e64:	8f 01       	movw	r16, r30
    2e66:	20 e3       	ldi	r18, 0x30	; 48
    2e68:	4f 2d       	mov	r20, r15
    2e6a:	83 e8       	ldi	r24, 0x83	; 131
    2e6c:	93 e0       	ldi	r25, 0x03	; 3
    2e6e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2e72:	f6 e0       	ldi	r31, 0x06	; 6
    2e74:	ff 0e       	add	r15, r31
    2e76:	0c 15       	cp	r16, r12
    2e78:	1d 05       	cpc	r17, r13
    2e7a:	91 f7       	brne	.-28     	; 0x2e60 <_Z11Wanderseitev+0x234>
	
}
    2e7c:	64 96       	adiw	r28, 0x14	; 20
    2e7e:	0f b6       	in	r0, 0x3f	; 63
    2e80:	f8 94       	cli
    2e82:	de bf       	out	0x3e, r29	; 62
    2e84:	0f be       	out	0x3f, r0	; 63
    2e86:	cd bf       	out	0x3d, r28	; 61
    2e88:	df 91       	pop	r29
    2e8a:	cf 91       	pop	r28
    2e8c:	1f 91       	pop	r17
    2e8e:	0f 91       	pop	r16
    2e90:	ff 90       	pop	r15
    2e92:	ef 90       	pop	r14
    2e94:	df 90       	pop	r13
    2e96:	cf 90       	pop	r12
    2e98:	bf 90       	pop	r11
    2e9a:	08 95       	ret

00002e9c <_Z13uhreinstellenv>:

void uhreinstellen(){
    2e9c:	2f 92       	push	r2
    2e9e:	3f 92       	push	r3
    2ea0:	4f 92       	push	r4
    2ea2:	5f 92       	push	r5
    2ea4:	6f 92       	push	r6
    2ea6:	7f 92       	push	r7
    2ea8:	8f 92       	push	r8
    2eaa:	9f 92       	push	r9
    2eac:	af 92       	push	r10
    2eae:	bf 92       	push	r11
    2eb0:	cf 92       	push	r12
    2eb2:	df 92       	push	r13
    2eb4:	ef 92       	push	r14
    2eb6:	ff 92       	push	r15
    2eb8:	0f 93       	push	r16
    2eba:	1f 93       	push	r17
    2ebc:	cf 93       	push	r28
    2ebe:	df 93       	push	r29
    2ec0:	cd b7       	in	r28, 0x3d	; 61
    2ec2:	de b7       	in	r29, 0x3e	; 62
    2ec4:	66 97       	sbiw	r28, 0x16	; 22
    2ec6:	0f b6       	in	r0, 0x3f	; 63
    2ec8:	f8 94       	cli
    2eca:	de bf       	out	0x3e, r29	; 62
    2ecc:	0f be       	out	0x3f, r0	; 63
    2ece:	cd bf       	out	0x3d, r28	; 61
	rtc.RTCstop();
    2ed0:	84 e8       	ldi	r24, 0x84	; 132
    2ed2:	97 e0       	ldi	r25, 0x07	; 7
    2ed4:	0e 94 d2 2b 	call	0x57a4	; 0x57a4 <_ZN3RTC7RTCstopEv>
	
	oled.clearFrame();
    2ed8:	83 e8       	ldi	r24, 0x83	; 131
    2eda:	93 e0       	ldi	r25, 0x03	; 3
    2edc:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
    2ee0:	91 2c       	mov	r9, r1
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2ee2:	0f 2e       	mov	r0, r31
    2ee4:	ff e0       	ldi	r31, 0x0F	; 15
    2ee6:	6f 2e       	mov	r6, r31
    2ee8:	f0 2d       	mov	r31, r0
    2eea:	ce 01       	movw	r24, r28
    2eec:	01 96       	adiw	r24, 0x01	; 1
    2eee:	7c 01       	movw	r14, r24
    2ef0:	78 2e       	mov	r7, r24
    2ef2:	8f 2c       	mov	r8, r15
    2ef4:	b1 2c       	mov	r11, r1
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2ef6:	8d 8b       	std	Y+21, r24	; 0x15
    2ef8:	fe 8a       	std	Y+22, r15	; 0x16
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2efa:	0f 2e       	mov	r0, r31
    2efc:	fd ec       	ldi	r31, 0xCD	; 205
    2efe:	af 2e       	mov	r10, r31
    2f00:	f0 2d       	mov	r31, r0
		buffer[1]=rtc.Stunden%10;
		buffer[2]=':';
		buffer[3]=rtc.Minuten/10;
		buffer[4]=rtc.Minuten%10;
		buffer[5]=' ';
		buffer[6]=rtc.Tag/10;
    2f02:	0f 2e       	mov	r0, r31
    2f04:	f8 e9       	ldi	r31, 0x98	; 152
    2f06:	4f 2e       	mov	r4, r31
    2f08:	f7 e0       	ldi	r31, 0x07	; 7
    2f0a:	5f 2e       	mov	r5, r31
    2f0c:	f0 2d       	mov	r31, r0
		buffer[7]=rtc.Tag%10;
		buffer[8]='.';
		buffer[9]=rtc.Monat/10;
    2f0e:	0f 2e       	mov	r0, r31
    2f10:	fa e9       	ldi	r31, 0x9A	; 154
    2f12:	cf 2e       	mov	r12, r31
    2f14:	f7 e0       	ldi	r31, 0x07	; 7
    2f16:	df 2e       	mov	r13, r31
    2f18:	f0 2d       	mov	r31, r0
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
    2f1a:	e3 ef       	ldi	r30, 0xF3	; 243
    2f1c:	f2 e0       	ldi	r31, 0x02	; 2
    2f1e:	a7 2d       	mov	r26, r7
    2f20:	b8 2d       	mov	r27, r8
    2f22:	86 2d       	mov	r24, r6
    2f24:	01 90       	ld	r0, Z+
    2f26:	0d 92       	st	X+, r0
    2f28:	8a 95       	dec	r24
    2f2a:	e1 f7       	brne	.-8      	; 0x2f24 <_Z13uhreinstellenv+0x88>
    2f2c:	27 2c       	mov	r2, r7
    2f2e:	38 2c       	mov	r3, r8
    2f30:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
    2f32:	f1 01       	movw	r30, r2
    2f34:	61 91       	ld	r22, Z+
    2f36:	1f 01       	movw	r2, r30
    2f38:	2b 2d       	mov	r18, r11
    2f3a:	41 2f       	mov	r20, r17
    2f3c:	83 e8       	ldi	r24, 0x83	; 131
    2f3e:	93 e0       	ldi	r25, 0x03	; 3
    2f40:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2f44:	1a 5f       	subi	r17, 0xFA	; 250
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
    2f46:	14 35       	cpi	r17, 0x54	; 84
    2f48:	a1 f7       	brne	.-24     	; 0x2f32 <_Z13uhreinstellenv+0x96>
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
    2f4a:	ef e0       	ldi	r30, 0x0F	; 15
    2f4c:	f1 e0       	ldi	r31, 0x01	; 1
    2f4e:	a7 2d       	mov	r26, r7
    2f50:	b8 2d       	mov	r27, r8
    2f52:	86 2d       	mov	r24, r6
    2f54:	01 90       	ld	r0, Z+
    2f56:	0d 92       	st	X+, r0
    2f58:	8a 95       	dec	r24
    2f5a:	e1 f7       	brne	.-8      	; 0x2f54 <_Z13uhreinstellenv+0xb8>
    2f5c:	2d 88       	ldd	r2, Y+21	; 0x15
    2f5e:	3e 88       	ldd	r3, Y+22	; 0x16
    2f60:	1b 2d       	mov	r17, r11
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,8);
    2f62:	f1 01       	movw	r30, r2
    2f64:	61 91       	ld	r22, Z+
    2f66:	1f 01       	movw	r2, r30
    2f68:	28 e0       	ldi	r18, 0x08	; 8
    2f6a:	41 2f       	mov	r20, r17
    2f6c:	83 e8       	ldi	r24, 0x83	; 131
    2f6e:	93 e0       	ldi	r25, 0x03	; 3
    2f70:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    2f74:	1a 5f       	subi	r17, 0xFA	; 250
		buffersize=sprintf(buffer,"Uhreinstellung");
		for(uint8_t i = 0; i<buffersize;i++){
			oled.draw_ASCI(buffer[i],charsize*i,0);
		}
		buffersize=sprintf(buffer,"--------------");
		for(uint8_t i = 0; i<buffersize;i++){
    2f76:	14 35       	cpi	r17, 0x54	; 84
    2f78:	a1 f7       	brne	.-24     	; 0x2f62 <_Z13uhreinstellenv+0xc6>
			oled.draw_ASCI(buffer[i],charsize*i,8);
		}
		buffer[0]=rtc.Stunden/10;
    2f7a:	e4 e9       	ldi	r30, 0x94	; 148
    2f7c:	f7 e0       	ldi	r31, 0x07	; 7
    2f7e:	80 81       	ld	r24, Z
    2f80:	8a 9d       	mul	r24, r10
    2f82:	91 2d       	mov	r25, r1
    2f84:	11 24       	eor	r1, r1
    2f86:	96 95       	lsr	r25
    2f88:	96 95       	lsr	r25
    2f8a:	96 95       	lsr	r25
    2f8c:	99 83       	std	Y+1, r25	; 0x01
		buffer[1]=rtc.Stunden%10;
    2f8e:	99 0f       	add	r25, r25
    2f90:	29 2f       	mov	r18, r25
    2f92:	22 0f       	add	r18, r18
    2f94:	22 0f       	add	r18, r18
    2f96:	92 0f       	add	r25, r18
    2f98:	89 1b       	sub	r24, r25
    2f9a:	8a 83       	std	Y+2, r24	; 0x02
		buffer[2]=':';
    2f9c:	fa e3       	ldi	r31, 0x3A	; 58
    2f9e:	fb 83       	std	Y+3, r31	; 0x03
		buffer[3]=rtc.Minuten/10;
    2fa0:	e5 e9       	ldi	r30, 0x95	; 149
    2fa2:	f7 e0       	ldi	r31, 0x07	; 7
    2fa4:	80 81       	ld	r24, Z
    2fa6:	8a 9d       	mul	r24, r10
    2fa8:	91 2d       	mov	r25, r1
    2faa:	11 24       	eor	r1, r1
    2fac:	96 95       	lsr	r25
    2fae:	96 95       	lsr	r25
    2fb0:	96 95       	lsr	r25
    2fb2:	9c 83       	std	Y+4, r25	; 0x04
		buffer[4]=rtc.Minuten%10;
    2fb4:	99 0f       	add	r25, r25
    2fb6:	29 2f       	mov	r18, r25
    2fb8:	22 0f       	add	r18, r18
    2fba:	22 0f       	add	r18, r18
    2fbc:	92 0f       	add	r25, r18
    2fbe:	89 1b       	sub	r24, r25
    2fc0:	8d 83       	std	Y+5, r24	; 0x05
		buffer[5]=' ';
    2fc2:	80 e2       	ldi	r24, 0x20	; 32
    2fc4:	8e 83       	std	Y+6, r24	; 0x06
		buffer[6]=rtc.Tag/10;
    2fc6:	f2 01       	movw	r30, r4
    2fc8:	80 81       	ld	r24, Z
    2fca:	8a 9d       	mul	r24, r10
    2fcc:	91 2d       	mov	r25, r1
    2fce:	11 24       	eor	r1, r1
    2fd0:	96 95       	lsr	r25
    2fd2:	96 95       	lsr	r25
    2fd4:	96 95       	lsr	r25
    2fd6:	9f 83       	std	Y+7, r25	; 0x07
		buffer[7]=rtc.Tag%10;
    2fd8:	99 0f       	add	r25, r25
    2fda:	29 2f       	mov	r18, r25
    2fdc:	22 0f       	add	r18, r18
    2fde:	22 0f       	add	r18, r18
    2fe0:	92 0f       	add	r25, r18
    2fe2:	89 1b       	sub	r24, r25
    2fe4:	88 87       	std	Y+8, r24	; 0x08
		buffer[8]='.';
    2fe6:	8e e2       	ldi	r24, 0x2E	; 46
    2fe8:	89 87       	std	Y+9, r24	; 0x09
		buffer[9]=rtc.Monat/10;
    2fea:	f6 01       	movw	r30, r12
    2fec:	90 81       	ld	r25, Z
    2fee:	9a 9d       	mul	r25, r10
    2ff0:	21 2d       	mov	r18, r1
    2ff2:	11 24       	eor	r1, r1
    2ff4:	26 95       	lsr	r18
    2ff6:	26 95       	lsr	r18
    2ff8:	26 95       	lsr	r18
    2ffa:	2a 87       	std	Y+10, r18	; 0x0a
		buffer[10]=rtc.Monat%10;
    2ffc:	22 0f       	add	r18, r18
    2ffe:	32 2f       	mov	r19, r18
    3000:	33 0f       	add	r19, r19
    3002:	33 0f       	add	r19, r19
    3004:	23 0f       	add	r18, r19
    3006:	92 1b       	sub	r25, r18
    3008:	9b 87       	std	Y+11, r25	; 0x0b
		buffer[11]='.';
    300a:	8c 87       	std	Y+12, r24	; 0x0c
		buffer[12]=rtc.Jahr/10;
    300c:	eb e9       	ldi	r30, 0x9B	; 155
    300e:	f7 e0       	ldi	r31, 0x07	; 7
    3010:	80 81       	ld	r24, Z
    3012:	8a 9d       	mul	r24, r10
    3014:	91 2d       	mov	r25, r1
    3016:	11 24       	eor	r1, r1
    3018:	96 95       	lsr	r25
    301a:	96 95       	lsr	r25
    301c:	96 95       	lsr	r25
    301e:	9d 87       	std	Y+13, r25	; 0x0d
		buffer[13]=rtc.Jahr%10;
    3020:	99 0f       	add	r25, r25
    3022:	29 2f       	mov	r18, r25
    3024:	22 0f       	add	r18, r18
    3026:	22 0f       	add	r18, r18
    3028:	92 0f       	add	r25, r18
    302a:	89 1b       	sub	r24, r25
    302c:	8e 87       	std	Y+14, r24	; 0x0e
    302e:	3b 2c       	mov	r3, r11
    3030:	01 e0       	ldi	r16, 0x01	; 1
    3032:	1b 2d       	mov	r17, r11
    3034:	04 c0       	rjmp	.+8      	; 0x303e <_Z13uhreinstellenv+0x1a2>
    3036:	1f 5f       	subi	r17, 0xFF	; 255
    3038:	0f 5f       	subi	r16, 0xFF	; 255
    303a:	f0 e1       	ldi	r31, 0x10	; 16
    303c:	3f 0e       	add	r3, r31
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
			if(i!=2){
    303e:	12 30       	cpi	r17, 0x02	; 2
    3040:	69 f0       	breq	.+26     	; 0x305c <_Z13uhreinstellenv+0x1c0>
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
    3042:	20 e1       	ldi	r18, 0x10	; 16
    3044:	43 2d       	mov	r20, r3
    3046:	f7 01       	movw	r30, r14
    3048:	e1 0f       	add	r30, r17
    304a:	f1 1d       	adc	r31, r1
    304c:	60 81       	ld	r22, Z
    304e:	83 e8       	ldi	r24, 0x83	; 131
    3050:	93 e0       	ldi	r25, 0x03	; 3
    3052:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    3056:	05 30       	cpi	r16, 0x05	; 5
    3058:	70 f3       	brcs	.-36     	; 0x3036 <_Z13uhreinstellenv+0x19a>
    305a:	08 c0       	rjmp	.+16     	; 0x306c <_Z13uhreinstellenv+0x1d0>
			if(i!=2){
				oled.draw_number16x16(buffer[i],i*numbersmalsize,2*charhighte);
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
    305c:	24 e1       	ldi	r18, 0x14	; 20
    305e:	48 e2       	ldi	r20, 0x28	; 40
    3060:	6b 81       	ldd	r22, Y+3	; 0x03
    3062:	83 e8       	ldi	r24, 0x83	; 131
    3064:	93 e0       	ldi	r25, 0x03	; 3
    3066:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    306a:	e5 cf       	rjmp	.-54     	; 0x3036 <_Z13uhreinstellenv+0x19a>
    306c:	8e 01       	movw	r16, r28
    306e:	09 5f       	subi	r16, 0xF9	; 249
    3070:	1f 4f       	sbci	r17, 0xFF	; 255
		buffer[10]=rtc.Monat%10;
		buffer[11]='.';
		buffer[12]=rtc.Jahr/10;
		buffer[13]=rtc.Jahr%10;
		buffersize=14;
		for(uint8_t i = 0; i<5;i++){
    3072:	2b 2c       	mov	r2, r11
    3074:	0f 2e       	mov	r0, r31
    3076:	f6 e0       	ldi	r31, 0x06	; 6
    3078:	3f 2e       	mov	r3, r31
    307a:	f0 2d       	mov	r31, r0
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
			if(i!=8 && i!=11){
    307c:	88 e0       	ldi	r24, 0x08	; 8
    307e:	38 16       	cp	r3, r24
    3080:	61 f0       	breq	.+24     	; 0x309a <_Z13uhreinstellenv+0x1fe>
    3082:	9b e0       	ldi	r25, 0x0B	; 11
    3084:	39 16       	cp	r3, r25
    3086:	49 f0       	breq	.+18     	; 0x309a <_Z13uhreinstellenv+0x1fe>
				oled.draw_number16x16(buffer[i],i*numbersmalsize-6*numbersmalsize,4*charhighte);
    3088:	20 e2       	ldi	r18, 0x20	; 32
    308a:	42 2d       	mov	r20, r2
    308c:	f8 01       	movw	r30, r16
    308e:	60 81       	ld	r22, Z
    3090:	83 e8       	ldi	r24, 0x83	; 131
    3092:	93 e0       	ldi	r25, 0x03	; 3
    3094:	0e 94 4a 06 	call	0xc94	; 0xc94 <_ZN7Display16draw_number16x16Ehhh>
    3098:	09 c0       	rjmp	.+18     	; 0x30ac <_Z13uhreinstellenv+0x210>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
    309a:	28 e2       	ldi	r18, 0x28	; 40
    309c:	48 e0       	ldi	r20, 0x08	; 8
    309e:	42 0d       	add	r20, r2
    30a0:	f8 01       	movw	r30, r16
    30a2:	60 81       	ld	r22, Z
    30a4:	83 e8       	ldi	r24, 0x83	; 131
    30a6:	93 e0       	ldi	r25, 0x03	; 3
    30a8:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
			}
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2,2*charhighte+charhighte/2);
			}
		}
		for(uint8_t i = 6; i<buffersize;i++){
    30ac:	33 94       	inc	r3
    30ae:	0f 5f       	subi	r16, 0xFF	; 255
    30b0:	1f 4f       	sbci	r17, 0xFF	; 255
    30b2:	f0 e1       	ldi	r31, 0x10	; 16
    30b4:	2f 0e       	add	r2, r31
    30b6:	8e e0       	ldi	r24, 0x0E	; 14
    30b8:	38 12       	cpse	r3, r24
    30ba:	e0 cf       	rjmp	.-64     	; 0x307c <_Z13uhreinstellenv+0x1e0>
			else {
				oled.draw_ASCI(buffer[i],i*numbersmalsize+numbersmalsize/2-6*numbersmalsize,5*charhighte);
			}
		}

		oled.sendFrame();
    30bc:	83 e8       	ldi	r24, 0x83	; 131
    30be:	93 e0       	ldi	r25, 0x03	; 3
    30c0:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN7Display9sendFrameEv>
		oled.clearFrame();
    30c4:	83 e8       	ldi	r24, 0x83	; 131
    30c6:	93 e0       	ldi	r25, 0x03	; 3
    30c8:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
		switch (pos) {
    30cc:	89 2d       	mov	r24, r9
    30ce:	90 e0       	ldi	r25, 0x00	; 0
    30d0:	8a 30       	cpi	r24, 0x0A	; 10
    30d2:	91 05       	cpc	r25, r1
    30d4:	08 f0       	brcs	.+2      	; 0x30d8 <_Z13uhreinstellenv+0x23c>
    30d6:	47 c2       	rjmp	.+1166   	; 0x3566 <_Z13uhreinstellenv+0x6ca>
    30d8:	fc 01       	movw	r30, r24
    30da:	ea 5b       	subi	r30, 0xBA	; 186
    30dc:	ff 4f       	sbci	r31, 0xFF	; 255
    30de:	0c 94 f8 32 	jmp	0x65f0	; 0x65f0 <__tablejump2__>
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    30e2:	82 e8       	ldi	r24, 0x82	; 130
    30e4:	93 e0       	ldi	r25, 0x03	; 3
    30e6:	0e 94 2e 24 	call	0x485c	; 0x485c <_ZN9Interface17ZahlenausTastaturEv>
    30ea:	88 0f       	add	r24, r24
    30ec:	98 2f       	mov	r25, r24
    30ee:	99 0f       	add	r25, r25
    30f0:	99 0f       	add	r25, r25
    30f2:	89 0f       	add	r24, r25
				if(rtc.Stunden>=24){
    30f4:	88 31       	cpi	r24, 0x18	; 24
    30f6:	08 f4       	brcc	.+2      	; 0x30fa <_Z13uhreinstellenv+0x25e>
    30f8:	51 c2       	rjmp	.+1186   	; 0x359c <_Z13uhreinstellenv+0x700>
					rtc.Stunden=0;
    30fa:	e4 e9       	ldi	r30, 0x94	; 148
    30fc:	f7 e0       	ldi	r31, 0x07	; 7
    30fe:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    3100:	e2 e0       	ldi	r30, 0x02	; 2
    3102:	f3 e0       	ldi	r31, 0x03	; 3
    3104:	a7 2d       	mov	r26, r7
    3106:	b8 2d       	mov	r27, r8
    3108:	86 2d       	mov	r24, r6
    310a:	01 90       	ld	r0, Z+
    310c:	0d 92       	st	X+, r0
    310e:	8a 95       	dec	r24
    3110:	e1 f7       	brne	.-8      	; 0x310a <_Z13uhreinstellenv+0x26e>
    3112:	2d 88       	ldd	r2, Y+21	; 0x15
    3114:	3e 88       	ldd	r3, Y+22	; 0x16
    3116:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3118:	f1 01       	movw	r30, r2
    311a:	61 91       	ld	r22, Z+
    311c:	1f 01       	movw	r2, r30
    311e:	28 e3       	ldi	r18, 0x38	; 56
    3120:	41 2f       	mov	r20, r17
    3122:	83 e8       	ldi	r24, 0x83	; 131
    3124:	93 e0       	ldi	r25, 0x03	; 3
    3126:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    312a:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    312c:	14 35       	cpi	r17, 0x54	; 84
    312e:	a1 f7       	brne	.-24     	; 0x3118 <_Z13uhreinstellenv+0x27c>
    3130:	39 c2       	rjmp	.+1138   	; 0x35a4 <_Z13uhreinstellenv+0x708>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    3132:	82 e8       	ldi	r24, 0x82	; 130
    3134:	93 e0       	ldi	r25, 0x03	; 3
    3136:	0e 94 2e 24 	call	0x485c	; 0x485c <_ZN9Interface17ZahlenausTastaturEv>
    313a:	e4 e9       	ldi	r30, 0x94	; 148
    313c:	f7 e0       	ldi	r31, 0x07	; 7
    313e:	20 81       	ld	r18, Z
    3140:	90 e0       	ldi	r25, 0x00	; 0
    3142:	82 0f       	add	r24, r18
    3144:	91 1d       	adc	r25, r1
				if(rtc.Stunden>=24){
    3146:	88 31       	cpi	r24, 0x18	; 24
    3148:	10 f4       	brcc	.+4      	; 0x314e <_Z13uhreinstellenv+0x2b2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
    314a:	80 83       	st	Z, r24
    314c:	5e c2       	rjmp	.+1212   	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
    314e:	e4 e9       	ldi	r30, 0x94	; 148
    3150:	f7 e0       	ldi	r31, 0x07	; 7
    3152:	10 82       	st	Z, r1
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
    3154:	e2 e0       	ldi	r30, 0x02	; 2
    3156:	f3 e0       	ldi	r31, 0x03	; 3
    3158:	a7 2d       	mov	r26, r7
    315a:	b8 2d       	mov	r27, r8
    315c:	86 2d       	mov	r24, r6
    315e:	01 90       	ld	r0, Z+
    3160:	0d 92       	st	X+, r0
    3162:	8a 95       	dec	r24
    3164:	e1 f7       	brne	.-8      	; 0x315e <_Z13uhreinstellenv+0x2c2>
    3166:	2d 88       	ldd	r2, Y+21	; 0x15
    3168:	3e 88       	ldd	r3, Y+22	; 0x16
    316a:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    316c:	f1 01       	movw	r30, r2
    316e:	61 91       	ld	r22, Z+
    3170:	1f 01       	movw	r2, r30
    3172:	28 e3       	ldi	r18, 0x38	; 56
    3174:	41 2f       	mov	r20, r17
    3176:	83 e8       	ldi	r24, 0x83	; 131
    3178:	93 e0       	ldi	r25, 0x03	; 3
    317a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    317e:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
					buffersize=sprintf(buffer,"Stunden falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3180:	14 35       	cpi	r17, 0x54	; 84
    3182:	a1 f7       	brne	.-24     	; 0x316c <_Z13uhreinstellenv+0x2d0>
    3184:	12 c2       	rjmp	.+1060   	; 0x35aa <_Z13uhreinstellenv+0x70e>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    3186:	82 e8       	ldi	r24, 0x82	; 130
    3188:	93 e0       	ldi	r25, 0x03	; 3
    318a:	0e 94 2e 24 	call	0x485c	; 0x485c <_ZN9Interface17ZahlenausTastaturEv>
    318e:	88 0f       	add	r24, r24
    3190:	98 2f       	mov	r25, r24
    3192:	99 0f       	add	r25, r25
    3194:	99 0f       	add	r25, r25
    3196:	89 0f       	add	r24, r25
				if(rtc.Minuten>=60){
    3198:	8c 33       	cpi	r24, 0x3C	; 60
    319a:	20 f4       	brcc	.+8      	; 0x31a4 <_Z13uhreinstellenv+0x308>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
    319c:	e5 e9       	ldi	r30, 0x95	; 149
    319e:	f7 e0       	ldi	r31, 0x07	; 7
    31a0:	80 83       	st	Z, r24
    31a2:	33 c2       	rjmp	.+1126   	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    31a4:	e5 e9       	ldi	r30, 0x95	; 149
    31a6:	f7 e0       	ldi	r31, 0x07	; 7
    31a8:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    31aa:	e1 e1       	ldi	r30, 0x11	; 17
    31ac:	f3 e0       	ldi	r31, 0x03	; 3
    31ae:	a7 2d       	mov	r26, r7
    31b0:	b8 2d       	mov	r27, r8
    31b2:	86 2d       	mov	r24, r6
    31b4:	01 90       	ld	r0, Z+
    31b6:	0d 92       	st	X+, r0
    31b8:	8a 95       	dec	r24
    31ba:	e1 f7       	brne	.-8      	; 0x31b4 <_Z13uhreinstellenv+0x318>
    31bc:	2d 88       	ldd	r2, Y+21	; 0x15
    31be:	3e 88       	ldd	r3, Y+22	; 0x16
    31c0:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    31c2:	f1 01       	movw	r30, r2
    31c4:	61 91       	ld	r22, Z+
    31c6:	1f 01       	movw	r2, r30
    31c8:	28 e3       	ldi	r18, 0x38	; 56
    31ca:	41 2f       	mov	r20, r17
    31cc:	83 e8       	ldi	r24, 0x83	; 131
    31ce:	93 e0       	ldi	r25, 0x03	; 3
    31d0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    31d4:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    31d6:	14 35       	cpi	r17, 0x54	; 84
    31d8:	a1 f7       	brne	.-24     	; 0x31c2 <_Z13uhreinstellenv+0x326>
    31da:	ea c1       	rjmp	.+980    	; 0x35b0 <_Z13uhreinstellenv+0x714>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    31dc:	82 e8       	ldi	r24, 0x82	; 130
    31de:	93 e0       	ldi	r25, 0x03	; 3
    31e0:	0e 94 2e 24 	call	0x485c	; 0x485c <_ZN9Interface17ZahlenausTastaturEv>
    31e4:	e5 e9       	ldi	r30, 0x95	; 149
    31e6:	f7 e0       	ldi	r31, 0x07	; 7
    31e8:	20 81       	ld	r18, Z
    31ea:	90 e0       	ldi	r25, 0x00	; 0
    31ec:	82 0f       	add	r24, r18
    31ee:	91 1d       	adc	r25, r1
				if(rtc.Minuten>=60){
    31f0:	8c 33       	cpi	r24, 0x3C	; 60
    31f2:	10 f4       	brcc	.+4      	; 0x31f8 <_Z13uhreinstellenv+0x35c>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
    31f4:	80 83       	st	Z, r24
    31f6:	09 c2       	rjmp	.+1042   	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
    31f8:	e5 e9       	ldi	r30, 0x95	; 149
    31fa:	f7 e0       	ldi	r31, 0x07	; 7
    31fc:	10 82       	st	Z, r1
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
    31fe:	e1 e1       	ldi	r30, 0x11	; 17
    3200:	f3 e0       	ldi	r31, 0x03	; 3
    3202:	a7 2d       	mov	r26, r7
    3204:	b8 2d       	mov	r27, r8
    3206:	86 2d       	mov	r24, r6
    3208:	01 90       	ld	r0, Z+
    320a:	0d 92       	st	X+, r0
    320c:	8a 95       	dec	r24
    320e:	e1 f7       	brne	.-8      	; 0x3208 <_Z13uhreinstellenv+0x36c>
    3210:	2d 88       	ldd	r2, Y+21	; 0x15
    3212:	3e 88       	ldd	r3, Y+22	; 0x16
    3214:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3216:	f1 01       	movw	r30, r2
    3218:	61 91       	ld	r22, Z+
    321a:	1f 01       	movw	r2, r30
    321c:	28 e3       	ldi	r18, 0x38	; 56
    321e:	41 2f       	mov	r20, r17
    3220:	83 e8       	ldi	r24, 0x83	; 131
    3222:	93 e0       	ldi	r25, 0x03	; 3
    3224:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3228:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
					buffersize=sprintf(buffer,"Minuten falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    322a:	14 35       	cpi	r17, 0x54	; 84
    322c:	a1 f7       	brne	.-24     	; 0x3216 <_Z13uhreinstellenv+0x37a>
    322e:	c3 c1       	rjmp	.+902    	; 0x35b6 <_Z13uhreinstellenv+0x71a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    3230:	82 e8       	ldi	r24, 0x82	; 130
    3232:	93 e0       	ldi	r25, 0x03	; 3
    3234:	0e 94 2e 24 	call	0x485c	; 0x485c <_ZN9Interface17ZahlenausTastaturEv>
    3238:	88 0f       	add	r24, r24
    323a:	98 2f       	mov	r25, r24
    323c:	99 0f       	add	r25, r25
    323e:	99 0f       	add	r25, r25
    3240:	89 0f       	add	r24, r25
				if(rtc.Tag>=32){
    3242:	80 32       	cpi	r24, 0x20	; 32
    3244:	18 f4       	brcc	.+6      	; 0x324c <_Z13uhreinstellenv+0x3b0>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
    3246:	f2 01       	movw	r30, r4
    3248:	80 83       	st	Z, r24
    324a:	df c1       	rjmp	.+958    	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    324c:	f2 01       	movw	r30, r4
    324e:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    3250:	8b e0       	ldi	r24, 0x0B	; 11
    3252:	e0 e2       	ldi	r30, 0x20	; 32
    3254:	f3 e0       	ldi	r31, 0x03	; 3
    3256:	a7 2d       	mov	r26, r7
    3258:	b8 2d       	mov	r27, r8
    325a:	01 90       	ld	r0, Z+
    325c:	0d 92       	st	X+, r0
    325e:	8a 95       	dec	r24
    3260:	e1 f7       	brne	.-8      	; 0x325a <_Z13uhreinstellenv+0x3be>
    3262:	2d 88       	ldd	r2, Y+21	; 0x15
    3264:	3e 88       	ldd	r3, Y+22	; 0x16
    3266:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3268:	f1 01       	movw	r30, r2
    326a:	61 91       	ld	r22, Z+
    326c:	1f 01       	movw	r2, r30
    326e:	28 e3       	ldi	r18, 0x38	; 56
    3270:	41 2f       	mov	r20, r17
    3272:	83 e8       	ldi	r24, 0x83	; 131
    3274:	93 e0       	ldi	r25, 0x03	; 3
    3276:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    327a:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    327c:	1c 33       	cpi	r17, 0x3C	; 60
    327e:	a1 f7       	brne	.-24     	; 0x3268 <_Z13uhreinstellenv+0x3cc>
    3280:	9d c1       	rjmp	.+826    	; 0x35bc <_Z13uhreinstellenv+0x720>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    3282:	82 e8       	ldi	r24, 0x82	; 130
    3284:	93 e0       	ldi	r25, 0x03	; 3
    3286:	0e 94 2e 24 	call	0x485c	; 0x485c <_ZN9Interface17ZahlenausTastaturEv>
    328a:	f2 01       	movw	r30, r4
    328c:	20 81       	ld	r18, Z
    328e:	90 e0       	ldi	r25, 0x00	; 0
    3290:	82 0f       	add	r24, r18
    3292:	91 1d       	adc	r25, r1
				if(rtc.Tag>=32){
    3294:	80 32       	cpi	r24, 0x20	; 32
    3296:	10 f4       	brcc	.+4      	; 0x329c <_Z13uhreinstellenv+0x400>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
    3298:	80 83       	st	Z, r24
    329a:	b7 c1       	rjmp	.+878    	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Tag>=32){
					rtc.Tag=0;
    329c:	f2 01       	movw	r30, r4
    329e:	10 82       	st	Z, r1
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
    32a0:	8b e0       	ldi	r24, 0x0B	; 11
    32a2:	e0 e2       	ldi	r30, 0x20	; 32
    32a4:	f3 e0       	ldi	r31, 0x03	; 3
    32a6:	a7 2d       	mov	r26, r7
    32a8:	b8 2d       	mov	r27, r8
    32aa:	01 90       	ld	r0, Z+
    32ac:	0d 92       	st	X+, r0
    32ae:	8a 95       	dec	r24
    32b0:	e1 f7       	brne	.-8      	; 0x32aa <_Z13uhreinstellenv+0x40e>
    32b2:	2d 88       	ldd	r2, Y+21	; 0x15
    32b4:	3e 88       	ldd	r3, Y+22	; 0x16
    32b6:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    32b8:	f1 01       	movw	r30, r2
    32ba:	61 91       	ld	r22, Z+
    32bc:	1f 01       	movw	r2, r30
    32be:	28 e3       	ldi	r18, 0x38	; 56
    32c0:	41 2f       	mov	r20, r17
    32c2:	83 e8       	ldi	r24, 0x83	; 131
    32c4:	93 e0       	ldi	r25, 0x03	; 3
    32c6:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    32ca:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
					buffersize=sprintf(buffer,"Tag falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    32cc:	1c 33       	cpi	r17, 0x3C	; 60
    32ce:	a1 f7       	brne	.-24     	; 0x32b8 <_Z13uhreinstellenv+0x41c>
    32d0:	7a c1       	rjmp	.+756    	; 0x35c6 <_Z13uhreinstellenv+0x72a>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    32d2:	82 e8       	ldi	r24, 0x82	; 130
    32d4:	93 e0       	ldi	r25, 0x03	; 3
    32d6:	0e 94 2e 24 	call	0x485c	; 0x485c <_ZN9Interface17ZahlenausTastaturEv>
    32da:	88 0f       	add	r24, r24
    32dc:	98 2f       	mov	r25, r24
    32de:	99 0f       	add	r25, r25
    32e0:	99 0f       	add	r25, r25
    32e2:	89 0f       	add	r24, r25
				if(rtc.Monat>=13){
    32e4:	8d 30       	cpi	r24, 0x0D	; 13
    32e6:	18 f4       	brcc	.+6      	; 0x32ee <_Z13uhreinstellenv+0x452>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
    32e8:	f6 01       	movw	r30, r12
    32ea:	80 83       	st	Z, r24
    32ec:	8e c1       	rjmp	.+796    	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    32ee:	f6 01       	movw	r30, r12
    32f0:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    32f2:	8d e0       	ldi	r24, 0x0D	; 13
    32f4:	eb e2       	ldi	r30, 0x2B	; 43
    32f6:	f3 e0       	ldi	r31, 0x03	; 3
    32f8:	a7 2d       	mov	r26, r7
    32fa:	b8 2d       	mov	r27, r8
    32fc:	01 90       	ld	r0, Z+
    32fe:	0d 92       	st	X+, r0
    3300:	8a 95       	dec	r24
    3302:	e1 f7       	brne	.-8      	; 0x32fc <_Z13uhreinstellenv+0x460>
    3304:	2d 88       	ldd	r2, Y+21	; 0x15
    3306:	3e 88       	ldd	r3, Y+22	; 0x16
    3308:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    330a:	f1 01       	movw	r30, r2
    330c:	61 91       	ld	r22, Z+
    330e:	1f 01       	movw	r2, r30
    3310:	28 e3       	ldi	r18, 0x38	; 56
    3312:	41 2f       	mov	r20, r17
    3314:	83 e8       	ldi	r24, 0x83	; 131
    3316:	93 e0       	ldi	r25, 0x03	; 3
    3318:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    331c:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    331e:	18 34       	cpi	r17, 0x48	; 72
    3320:	a1 f7       	brne	.-24     	; 0x330a <_Z13uhreinstellenv+0x46e>
    3322:	56 c1       	rjmp	.+684    	; 0x35d0 <_Z13uhreinstellenv+0x734>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    3324:	82 e8       	ldi	r24, 0x82	; 130
    3326:	93 e0       	ldi	r25, 0x03	; 3
    3328:	0e 94 2e 24 	call	0x485c	; 0x485c <_ZN9Interface17ZahlenausTastaturEv>
    332c:	f6 01       	movw	r30, r12
    332e:	20 81       	ld	r18, Z
    3330:	90 e0       	ldi	r25, 0x00	; 0
    3332:	82 0f       	add	r24, r18
    3334:	91 1d       	adc	r25, r1
				if(rtc.Monat>=13){
    3336:	8d 30       	cpi	r24, 0x0D	; 13
    3338:	10 f4       	brcc	.+4      	; 0x333e <_Z13uhreinstellenv+0x4a2>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
    333a:	80 83       	st	Z, r24
    333c:	1e c0       	rjmp	.+60     	; 0x337a <_Z13uhreinstellenv+0x4de>
				if(rtc.Monat>=13){
					rtc.Monat=0;
    333e:	f6 01       	movw	r30, r12
    3340:	10 82       	st	Z, r1
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
    3342:	8d e0       	ldi	r24, 0x0D	; 13
    3344:	eb e2       	ldi	r30, 0x2B	; 43
    3346:	f3 e0       	ldi	r31, 0x03	; 3
    3348:	a7 2d       	mov	r26, r7
    334a:	b8 2d       	mov	r27, r8
    334c:	01 90       	ld	r0, Z+
    334e:	0d 92       	st	X+, r0
    3350:	8a 95       	dec	r24
    3352:	e1 f7       	brne	.-8      	; 0x334c <_Z13uhreinstellenv+0x4b0>
    3354:	2d 88       	ldd	r2, Y+21	; 0x15
    3356:	3e 88       	ldd	r3, Y+22	; 0x16
    3358:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    335a:	f1 01       	movw	r30, r2
    335c:	61 91       	ld	r22, Z+
    335e:	1f 01       	movw	r2, r30
    3360:	28 e3       	ldi	r18, 0x38	; 56
    3362:	41 2f       	mov	r20, r17
    3364:	83 e8       	ldi	r24, 0x83	; 131
    3366:	93 e0       	ldi	r25, 0x03	; 3
    3368:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    336c:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    336e:	18 34       	cpi	r17, 0x48	; 72
    3370:	a1 f7       	brne	.-24     	; 0x335a <_Z13uhreinstellenv+0x4be>
				break;
			case 7:
				rtc.Monat+=Tastatur.ZahlenausTastatur();
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    3372:	0f 2e       	mov	r0, r31
    3374:	f5 e0       	ldi	r31, 0x05	; 5
    3376:	9f 2e       	mov	r9, r31
    3378:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Monat falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
    337a:	f6 01       	movw	r30, r12
    337c:	90 81       	ld	r25, Z
    337e:	89 2f       	mov	r24, r25
    3380:	8d 7f       	andi	r24, 0xFD	; 253
    3382:	84 30       	cpi	r24, 0x04	; 4
    3384:	11 f0       	breq	.+4      	; 0x338a <_Z13uhreinstellenv+0x4ee>
    3386:	89 30       	cpi	r24, 0x09	; 9
    3388:	09 f5       	brne	.+66     	; 0x33cc <_Z13uhreinstellenv+0x530>
					if(rtc.Tag>=31){
    338a:	f2 01       	movw	r30, r4
    338c:	80 81       	ld	r24, Z
    338e:	8f 31       	cpi	r24, 0x1F	; 31
    3390:	08 f4       	brcc	.+2      	; 0x3394 <_Z13uhreinstellenv+0x4f8>
    3392:	ea c0       	rjmp	.+468    	; 0x3568 <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    3394:	10 82       	st	Z, r1
						rtc.Monat=0;
    3396:	f6 01       	movw	r30, r12
    3398:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    339a:	8b e0       	ldi	r24, 0x0B	; 11
    339c:	e0 e2       	ldi	r30, 0x20	; 32
    339e:	f3 e0       	ldi	r31, 0x03	; 3
    33a0:	a7 2d       	mov	r26, r7
    33a2:	b8 2d       	mov	r27, r8
    33a4:	01 90       	ld	r0, Z+
    33a6:	0d 92       	st	X+, r0
    33a8:	8a 95       	dec	r24
    33aa:	e1 f7       	brne	.-8      	; 0x33a4 <_Z13uhreinstellenv+0x508>
    33ac:	2d 88       	ldd	r2, Y+21	; 0x15
    33ae:	3e 88       	ldd	r3, Y+22	; 0x16
    33b0:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    33b2:	f1 01       	movw	r30, r2
    33b4:	61 91       	ld	r22, Z+
    33b6:	1f 01       	movw	r2, r30
    33b8:	28 e3       	ldi	r18, 0x38	; 56
    33ba:	41 2f       	mov	r20, r17
    33bc:	83 e8       	ldi	r24, 0x83	; 131
    33be:	93 e0       	ldi	r25, 0x03	; 3
    33c0:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    33c4:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    33c6:	1c 33       	cpi	r17, 0x3C	; 60
    33c8:	a1 f7       	brne	.-24     	; 0x33b2 <_Z13uhreinstellenv+0x516>
    33ca:	07 c1       	rjmp	.+526    	; 0x35da <_Z13uhreinstellenv+0x73e>
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
						}
					}
				}
				else if(rtc.Monat==2){
    33cc:	92 30       	cpi	r25, 0x02	; 2
    33ce:	09 f0       	breq	.+2      	; 0x33d2 <_Z13uhreinstellenv+0x536>
    33d0:	cb c0       	rjmp	.+406    	; 0x3568 <_Z13uhreinstellenv+0x6cc>
					if(rtc.Tag>=30){
    33d2:	f2 01       	movw	r30, r4
    33d4:	80 81       	ld	r24, Z
    33d6:	8e 31       	cpi	r24, 0x1E	; 30
    33d8:	08 f4       	brcc	.+2      	; 0x33dc <_Z13uhreinstellenv+0x540>
    33da:	c6 c0       	rjmp	.+396    	; 0x3568 <_Z13uhreinstellenv+0x6cc>
						rtc.Tag=0;
    33dc:	10 82       	st	Z, r1
						rtc.Monat=0;
    33de:	f6 01       	movw	r30, r12
    33e0:	10 82       	st	Z, r1
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
    33e2:	8b e0       	ldi	r24, 0x0B	; 11
    33e4:	e0 e2       	ldi	r30, 0x20	; 32
    33e6:	f3 e0       	ldi	r31, 0x03	; 3
    33e8:	a7 2d       	mov	r26, r7
    33ea:	b8 2d       	mov	r27, r8
    33ec:	01 90       	ld	r0, Z+
    33ee:	0d 92       	st	X+, r0
    33f0:	8a 95       	dec	r24
    33f2:	e1 f7       	brne	.-8      	; 0x33ec <_Z13uhreinstellenv+0x550>
    33f4:	2d 88       	ldd	r2, Y+21	; 0x15
    33f6:	3e 88       	ldd	r3, Y+22	; 0x16
    33f8:	1b 2d       	mov	r17, r11
						for(uint8_t i = 0; i<buffersize;i++){
							oled.draw_ASCI(buffer[i],charsize*i,7*8);
    33fa:	f1 01       	movw	r30, r2
    33fc:	61 91       	ld	r22, Z+
    33fe:	1f 01       	movw	r2, r30
    3400:	28 e3       	ldi	r18, 0x38	; 56
    3402:	41 2f       	mov	r20, r17
    3404:	83 e8       	ldi	r24, 0x83	; 131
    3406:	93 e0       	ldi	r25, 0x03	; 3
    3408:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    340c:	1a 5f       	subi	r17, 0xFA	; 250
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
						buffersize=sprintf(buffer,"Tag falsch");
						for(uint8_t i = 0; i<buffersize;i++){
    340e:	1c 33       	cpi	r17, 0x3C	; 60
    3410:	a1 f7       	brne	.-24     	; 0x33fa <_Z13uhreinstellenv+0x55e>
    3412:	e8 c0       	rjmp	.+464    	; 0x35e4 <_Z13uhreinstellenv+0x748>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    3414:	82 e8       	ldi	r24, 0x82	; 130
    3416:	93 e0       	ldi	r25, 0x03	; 3
    3418:	0e 94 2e 24 	call	0x485c	; 0x485c <_ZN9Interface17ZahlenausTastaturEv>
    341c:	88 0f       	add	r24, r24
    341e:	98 2f       	mov	r25, r24
    3420:	99 0f       	add	r25, r25
    3422:	99 0f       	add	r25, r25
    3424:	89 0f       	add	r24, r25
				if(rtc.Jahr>=50){
    3426:	82 33       	cpi	r24, 0x32	; 50
    3428:	20 f4       	brcc	.+8      	; 0x3432 <_Z13uhreinstellenv+0x596>
						}
					}
				}
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
    342a:	eb e9       	ldi	r30, 0x9B	; 155
    342c:	f7 e0       	ldi	r31, 0x07	; 7
    342e:	80 83       	st	Z, r24
    3430:	ec c0       	rjmp	.+472    	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    3432:	eb e9       	ldi	r30, 0x9B	; 155
    3434:	f7 e0       	ldi	r31, 0x07	; 7
    3436:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    3438:	8c e0       	ldi	r24, 0x0C	; 12
    343a:	e8 e3       	ldi	r30, 0x38	; 56
    343c:	f3 e0       	ldi	r31, 0x03	; 3
    343e:	a7 2d       	mov	r26, r7
    3440:	b8 2d       	mov	r27, r8
    3442:	01 90       	ld	r0, Z+
    3444:	0d 92       	st	X+, r0
    3446:	8a 95       	dec	r24
    3448:	e1 f7       	brne	.-8      	; 0x3442 <_Z13uhreinstellenv+0x5a6>
    344a:	2d 88       	ldd	r2, Y+21	; 0x15
    344c:	3e 88       	ldd	r3, Y+22	; 0x16
    344e:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3450:	f1 01       	movw	r30, r2
    3452:	61 91       	ld	r22, Z+
    3454:	1f 01       	movw	r2, r30
    3456:	28 e3       	ldi	r18, 0x38	; 56
    3458:	41 2f       	mov	r20, r17
    345a:	83 e8       	ldi	r24, 0x83	; 131
    345c:	93 e0       	ldi	r25, 0x03	; 3
    345e:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3462:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    3464:	12 34       	cpi	r17, 0x42	; 66
    3466:	a1 f7       	brne	.-24     	; 0x3450 <_Z13uhreinstellenv+0x5b4>
    3468:	c2 c0       	rjmp	.+388    	; 0x35ee <_Z13uhreinstellenv+0x752>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    346a:	82 e8       	ldi	r24, 0x82	; 130
    346c:	93 e0       	ldi	r25, 0x03	; 3
    346e:	0e 94 2e 24 	call	0x485c	; 0x485c <_ZN9Interface17ZahlenausTastaturEv>
    3472:	eb e9       	ldi	r30, 0x9B	; 155
    3474:	f7 e0       	ldi	r31, 0x07	; 7
    3476:	20 81       	ld	r18, Z
    3478:	90 e0       	ldi	r25, 0x00	; 0
    347a:	82 0f       	add	r24, r18
    347c:	91 1d       	adc	r25, r1
				if(rtc.Jahr>=50){
    347e:	82 33       	cpi	r24, 0x32	; 50
    3480:	10 f4       	brcc	.+4      	; 0x3486 <_Z13uhreinstellenv+0x5ea>
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
    3482:	80 83       	st	Z, r24
    3484:	1f c0       	rjmp	.+62     	; 0x34c4 <_Z13uhreinstellenv+0x628>
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
    3486:	eb e9       	ldi	r30, 0x9B	; 155
    3488:	f7 e0       	ldi	r31, 0x07	; 7
    348a:	10 82       	st	Z, r1
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
    348c:	8c e0       	ldi	r24, 0x0C	; 12
    348e:	e8 e3       	ldi	r30, 0x38	; 56
    3490:	f3 e0       	ldi	r31, 0x03	; 3
    3492:	a7 2d       	mov	r26, r7
    3494:	b8 2d       	mov	r27, r8
    3496:	01 90       	ld	r0, Z+
    3498:	0d 92       	st	X+, r0
    349a:	8a 95       	dec	r24
    349c:	e1 f7       	brne	.-8      	; 0x3496 <_Z13uhreinstellenv+0x5fa>
    349e:	2d 88       	ldd	r2, Y+21	; 0x15
    34a0:	3e 88       	ldd	r3, Y+22	; 0x16
    34a2:	1b 2d       	mov	r17, r11
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
    34a4:	f1 01       	movw	r30, r2
    34a6:	61 91       	ld	r22, Z+
    34a8:	1f 01       	movw	r2, r30
    34aa:	28 e3       	ldi	r18, 0x38	; 56
    34ac:	41 2f       	mov	r20, r17
    34ae:	83 e8       	ldi	r24, 0x83	; 131
    34b0:	93 e0       	ldi	r25, 0x03	; 3
    34b2:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    34b6:	1a 5f       	subi	r17, 0xFA	; 250
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
    34b8:	12 34       	cpi	r17, 0x42	; 66
    34ba:	a1 f7       	brne	.-24     	; 0x34a4 <_Z13uhreinstellenv+0x608>
				break;
			case 9:
				rtc.Jahr+=Tastatur.ZahlenausTastatur();
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    34bc:	0f 2e       	mov	r0, r31
    34be:	f7 e0       	ldi	r31, 0x07	; 7
    34c0:	9f 2e       	mov	r9, r31
    34c2:	f0 2d       	mov	r31, r0
					buffersize=sprintf(buffer,"Jahr falsch");
					for(uint8_t i = 0; i<buffersize;i++){
						oled.draw_ASCI(buffer[i],charsize*i,7*8);
					}
				}
				if(rtc.Monat==2){
    34c4:	f6 01       	movw	r30, r12
    34c6:	80 81       	ld	r24, Z
    34c8:	82 30       	cpi	r24, 0x02	; 2
    34ca:	09 f0       	breq	.+2      	; 0x34ce <_Z13uhreinstellenv+0x632>
    34cc:	4d c0       	rjmp	.+154    	; 0x3568 <_Z13uhreinstellenv+0x6cc>
					if(rtc.Jahr%4==0){
    34ce:	eb e9       	ldi	r30, 0x9B	; 155
    34d0:	f7 e0       	ldi	r31, 0x07	; 7
    34d2:	80 81       	ld	r24, Z
    34d4:	83 70       	andi	r24, 0x03	; 3
    34d6:	21 f5       	brne	.+72     	; 0x3520 <_Z13uhreinstellenv+0x684>
						if (rtc.Tag>=30)
    34d8:	f2 01       	movw	r30, r4
    34da:	80 81       	ld	r24, Z
    34dc:	8e 31       	cpi	r24, 0x1E	; 30
    34de:	08 f4       	brcc	.+2      	; 0x34e2 <_Z13uhreinstellenv+0x646>
    34e0:	43 c0       	rjmp	.+134    	; 0x3568 <_Z13uhreinstellenv+0x6cc>
						{
							rtc.Tag=0;
    34e2:	10 82       	st	Z, r1
							rtc.Monat=0;
    34e4:	f6 01       	movw	r30, r12
    34e6:	10 82       	st	Z, r1
							rtc.Jahr=0;
    34e8:	eb e9       	ldi	r30, 0x9B	; 155
    34ea:	f7 e0       	ldi	r31, 0x07	; 7
    34ec:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    34ee:	8b e0       	ldi	r24, 0x0B	; 11
    34f0:	e0 e2       	ldi	r30, 0x20	; 32
    34f2:	f3 e0       	ldi	r31, 0x03	; 3
    34f4:	a7 2d       	mov	r26, r7
    34f6:	b8 2d       	mov	r27, r8
    34f8:	01 90       	ld	r0, Z+
    34fa:	0d 92       	st	X+, r0
    34fc:	8a 95       	dec	r24
    34fe:	e1 f7       	brne	.-8      	; 0x34f8 <_Z13uhreinstellenv+0x65c>
    3500:	2d 88       	ldd	r2, Y+21	; 0x15
    3502:	3e 88       	ldd	r3, Y+22	; 0x16
    3504:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    3506:	f1 01       	movw	r30, r2
    3508:	61 91       	ld	r22, Z+
    350a:	1f 01       	movw	r2, r30
    350c:	28 e3       	ldi	r18, 0x38	; 56
    350e:	41 2f       	mov	r20, r17
    3510:	83 e8       	ldi	r24, 0x83	; 131
    3512:	93 e0       	ldi	r25, 0x03	; 3
    3514:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    3518:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    351a:	1c 33       	cpi	r17, 0x3C	; 60
    351c:	a1 f7       	brne	.-24     	; 0x3506 <_Z13uhreinstellenv+0x66a>
    351e:	6c c0       	rjmp	.+216    	; 0x35f8 <_Z13uhreinstellenv+0x75c>
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
							}
						}
					}
					else{
						if(rtc.Tag>=29){
    3520:	f2 01       	movw	r30, r4
    3522:	80 81       	ld	r24, Z
    3524:	8d 31       	cpi	r24, 0x1D	; 29
    3526:	00 f1       	brcs	.+64     	; 0x3568 <_Z13uhreinstellenv+0x6cc>
							rtc.Tag=0;
    3528:	10 82       	st	Z, r1
							rtc.Monat=0;
    352a:	f6 01       	movw	r30, r12
    352c:	10 82       	st	Z, r1
							rtc.Jahr=0;
    352e:	eb e9       	ldi	r30, 0x9B	; 155
    3530:	f7 e0       	ldi	r31, 0x07	; 7
    3532:	10 82       	st	Z, r1
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
    3534:	8b e0       	ldi	r24, 0x0B	; 11
    3536:	e0 e2       	ldi	r30, 0x20	; 32
    3538:	f3 e0       	ldi	r31, 0x03	; 3
    353a:	a7 2d       	mov	r26, r7
    353c:	b8 2d       	mov	r27, r8
    353e:	01 90       	ld	r0, Z+
    3540:	0d 92       	st	X+, r0
    3542:	8a 95       	dec	r24
    3544:	e1 f7       	brne	.-8      	; 0x353e <_Z13uhreinstellenv+0x6a2>
    3546:	2d 88       	ldd	r2, Y+21	; 0x15
    3548:	3e 88       	ldd	r3, Y+22	; 0x16
    354a:	1b 2d       	mov	r17, r11
							for(uint8_t i = 0; i<buffersize;i++){
								oled.draw_ASCI(buffer[i],charsize*i,7*8);
    354c:	f1 01       	movw	r30, r2
    354e:	61 91       	ld	r22, Z+
    3550:	1f 01       	movw	r2, r30
    3552:	28 e3       	ldi	r18, 0x38	; 56
    3554:	41 2f       	mov	r20, r17
    3556:	83 e8       	ldi	r24, 0x83	; 131
    3558:	93 e0       	ldi	r25, 0x03	; 3
    355a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <_ZN7Display9draw_ASCIEhhh>
    355e:	1a 5f       	subi	r17, 0xFA	; 250
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
							buffersize=sprintf(buffer,"Tag falsch");
							for(uint8_t i = 0; i<buffersize;i++){
    3560:	1c 33       	cpi	r17, 0x3C	; 60
    3562:	a1 f7       	brne	.-24     	; 0x354c <_Z13uhreinstellenv+0x6b0>
    3564:	4e c0       	rjmp	.+156    	; 0x3602 <_Z13uhreinstellenv+0x766>
						}
					}
				}
				break;
			default:
				pos++;
    3566:	93 94       	inc	r9
				break;
		}
		pos++;
    3568:	93 94       	inc	r9
	
	oled.clearFrame();
	char buffer[20];
	uint8_t buffersize;
	uint8_t pos=0;
	while(pos<11){
    356a:	fa e0       	ldi	r31, 0x0A	; 10
    356c:	f9 15       	cp	r31, r9
    356e:	08 f0       	brcs	.+2      	; 0x3572 <_Z13uhreinstellenv+0x6d6>
    3570:	d4 cc       	rjmp	.-1624   	; 0x2f1a <_Z13uhreinstellenv+0x7e>
				break;
		}
		pos++;
	}
	
	rtc.Sekunden		= 0;
    3572:	10 92 96 07 	sts	0x0796, r1
	rtc.HundSekunden	= 0;
    3576:	10 92 97 07 	sts	0x0797, r1
	oled.clearFrame();
    357a:	83 e8       	ldi	r24, 0x83	; 131
    357c:	93 e0       	ldi	r25, 0x03	; 3
    357e:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	rtc.ausgabedatumneu();
    3582:	84 e8       	ldi	r24, 0x84	; 132
    3584:	97 e0       	ldi	r25, 0x07	; 7
    3586:	0e 94 c5 2a 	call	0x558a	; 0x558a <_ZN3RTC15ausgabedatumneuEv>
	rtc.ausgabezeitneu();
    358a:	84 e8       	ldi	r24, 0x84	; 132
    358c:	97 e0       	ldi	r25, 0x07	; 7
    358e:	0e 94 8c 2a 	call	0x5518	; 0x5518 <_ZN3RTC14ausgabezeitneuEv>
	rtc.RTCstart();
    3592:	84 e8       	ldi	r24, 0x84	; 132
    3594:	97 e0       	ldi	r25, 0x07	; 7
    3596:	0e 94 b9 2b 	call	0x5772	; 0x5772 <_ZN3RTC8RTCstartEv>
    359a:	39 c0       	rjmp	.+114    	; 0x360e <_Z13uhreinstellenv+0x772>

		oled.sendFrame();
		oled.clearFrame();
		switch (pos) {
			case 0:
				rtc.Stunden=Tastatur.ZahlenausTastatur()*10;
    359c:	e4 e9       	ldi	r30, 0x94	; 148
    359e:	f7 e0       	ldi	r31, 0x07	; 7
    35a0:	80 83       	st	Z, r24
    35a2:	33 c0       	rjmp	.+102    	; 0x360a <_Z13uhreinstellenv+0x76e>
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    35a4:	99 24       	eor	r9, r9
    35a6:	9a 94       	dec	r9
    35a8:	30 c0       	rjmp	.+96     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 1:
				rtc.Stunden+=Tastatur.ZahlenausTastatur();
				if(rtc.Stunden>=24){
					rtc.Stunden=0;
					pos=-1;
    35aa:	99 24       	eor	r9, r9
    35ac:	9a 94       	dec	r9
    35ae:	2d c0       	rjmp	.+90     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 2:
				rtc.Minuten=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    35b0:	99 24       	eor	r9, r9
    35b2:	93 94       	inc	r9
    35b4:	2a c0       	rjmp	.+84     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 3:
				rtc.Minuten+=Tastatur.ZahlenausTastatur();
				if(rtc.Minuten>=60){
					rtc.Minuten=0;
					pos=1;
    35b6:	99 24       	eor	r9, r9
    35b8:	93 94       	inc	r9
    35ba:	27 c0       	rjmp	.+78     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 4:
				rtc.Tag=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    35bc:	0f 2e       	mov	r0, r31
    35be:	f3 e0       	ldi	r31, 0x03	; 3
    35c0:	9f 2e       	mov	r9, r31
    35c2:	f0 2d       	mov	r31, r0
    35c4:	22 c0       	rjmp	.+68     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 5:
				rtc.Tag+=Tastatur.ZahlenausTastatur();
				if(rtc.Tag>=32){
					rtc.Tag=0;
					pos=3;
    35c6:	0f 2e       	mov	r0, r31
    35c8:	f3 e0       	ldi	r31, 0x03	; 3
    35ca:	9f 2e       	mov	r9, r31
    35cc:	f0 2d       	mov	r31, r0
    35ce:	1d c0       	rjmp	.+58     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 6:
				rtc.Monat=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Monat>=13){
					rtc.Monat=0;
					pos=5;
    35d0:	0f 2e       	mov	r0, r31
    35d2:	f5 e0       	ldi	r31, 0x05	; 5
    35d4:	9f 2e       	mov	r9, r31
    35d6:	f0 2d       	mov	r31, r0
    35d8:	18 c0       	rjmp	.+48     	; 0x360a <_Z13uhreinstellenv+0x76e>
				}
				if(rtc.Monat==4||rtc.Monat==6||rtc.Monat==9||rtc.Monat==11){
					if(rtc.Tag>=31){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    35da:	0f 2e       	mov	r0, r31
    35dc:	f3 e0       	ldi	r31, 0x03	; 3
    35de:	9f 2e       	mov	r9, r31
    35e0:	f0 2d       	mov	r31, r0
    35e2:	13 c0       	rjmp	.+38     	; 0x360a <_Z13uhreinstellenv+0x76e>
				}
				else if(rtc.Monat==2){
					if(rtc.Tag>=30){
						rtc.Tag=0;
						rtc.Monat=0;
						pos=3;
    35e4:	0f 2e       	mov	r0, r31
    35e6:	f3 e0       	ldi	r31, 0x03	; 3
    35e8:	9f 2e       	mov	r9, r31
    35ea:	f0 2d       	mov	r31, r0
    35ec:	0e c0       	rjmp	.+28     	; 0x360a <_Z13uhreinstellenv+0x76e>
				break;
			case 8:
				rtc.Jahr=Tastatur.ZahlenausTastatur()*10;
				if(rtc.Jahr>=50){
					rtc.Jahr=0;
					pos=7;
    35ee:	0f 2e       	mov	r0, r31
    35f0:	f7 e0       	ldi	r31, 0x07	; 7
    35f2:	9f 2e       	mov	r9, r31
    35f4:	f0 2d       	mov	r31, r0
    35f6:	09 c0       	rjmp	.+18     	; 0x360a <_Z13uhreinstellenv+0x76e>
						if (rtc.Tag>=30)
						{
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    35f8:	0f 2e       	mov	r0, r31
    35fa:	f3 e0       	ldi	r31, 0x03	; 3
    35fc:	9f 2e       	mov	r9, r31
    35fe:	f0 2d       	mov	r31, r0
    3600:	04 c0       	rjmp	.+8      	; 0x360a <_Z13uhreinstellenv+0x76e>
					else{
						if(rtc.Tag>=29){
							rtc.Tag=0;
							rtc.Monat=0;
							rtc.Jahr=0;
							pos=3;
    3602:	0f 2e       	mov	r0, r31
    3604:	f3 e0       	ldi	r31, 0x03	; 3
    3606:	9f 2e       	mov	r9, r31
    3608:	f0 2d       	mov	r31, r0
				break;
			default:
				pos++;
				break;
		}
		pos++;
    360a:	93 94       	inc	r9
    360c:	86 cc       	rjmp	.-1780   	; 0x2f1a <_Z13uhreinstellenv+0x7e>
	rtc.HundSekunden	= 0;
	oled.clearFrame();
	rtc.ausgabedatumneu();
	rtc.ausgabezeitneu();
	rtc.RTCstart();
}
    360e:	66 96       	adiw	r28, 0x16	; 22
    3610:	0f b6       	in	r0, 0x3f	; 63
    3612:	f8 94       	cli
    3614:	de bf       	out	0x3e, r29	; 62
    3616:	0f be       	out	0x3f, r0	; 63
    3618:	cd bf       	out	0x3d, r28	; 61
    361a:	df 91       	pop	r29
    361c:	cf 91       	pop	r28
    361e:	1f 91       	pop	r17
    3620:	0f 91       	pop	r16
    3622:	ff 90       	pop	r15
    3624:	ef 90       	pop	r14
    3626:	df 90       	pop	r13
    3628:	cf 90       	pop	r12
    362a:	bf 90       	pop	r11
    362c:	af 90       	pop	r10
    362e:	9f 90       	pop	r9
    3630:	8f 90       	pop	r8
    3632:	7f 90       	pop	r7
    3634:	6f 90       	pop	r6
    3636:	5f 90       	pop	r5
    3638:	4f 90       	pop	r4
    363a:	3f 90       	pop	r3
    363c:	2f 90       	pop	r2
    363e:	08 95       	ret

00003640 <__vector_11>:
uint8_t pos;		//Handler fuer die Einganbe von Zahlen

//Ausgelagerte Sammlung der einzelnen Seitenlayouts
#include "Seiten.h"

ISR(TIMER2_OVF_vect){	//Vektor fuer die RTC
    3640:	1f 92       	push	r1
    3642:	0f 92       	push	r0
    3644:	0f b6       	in	r0, 0x3f	; 63
    3646:	0f 92       	push	r0
    3648:	11 24       	eor	r1, r1
    364a:	0b b6       	in	r0, 0x3b	; 59
    364c:	0f 92       	push	r0
    364e:	8f 93       	push	r24
    3650:	ef 93       	push	r30
    3652:	ff 93       	push	r31
	TCNT2=TIMER2RTCTIME;
    3654:	10 92 b2 00 	sts	0x00B2, r1
	rtc.Sekunden++;
    3658:	e6 e9       	ldi	r30, 0x96	; 150
    365a:	f7 e0       	ldi	r31, 0x07	; 7
    365c:	80 81       	ld	r24, Z
    365e:	8f 5f       	subi	r24, 0xFF	; 255
    3660:	80 83       	st	Z, r24
	rtc.interupts|= (1<<sekundeninterupt);
    3662:	ec e9       	ldi	r30, 0x9C	; 156
    3664:	f7 e0       	ldi	r31, 0x07	; 7
    3666:	80 81       	ld	r24, Z
    3668:	82 60       	ori	r24, 0x02	; 2
    366a:	80 83       	st	Z, r24
}
    366c:	ff 91       	pop	r31
    366e:	ef 91       	pop	r30
    3670:	8f 91       	pop	r24
    3672:	0f 90       	pop	r0
    3674:	0b be       	out	0x3b, r0	; 59
    3676:	0f 90       	pop	r0
    3678:	0f be       	out	0x3f, r0	; 63
    367a:	0f 90       	pop	r0
    367c:	1f 90       	pop	r1
    367e:	18 95       	reti

00003680 <_Z15geschwindigkeitf>:

double geschw;
double strecke;
double maxgeschw;
uint32_t Fahrtzeit;
void geschwindigkeit(float durch){
    3680:	cf 92       	push	r12
    3682:	df 92       	push	r13
    3684:	ef 92       	push	r14
    3686:	ff 92       	push	r15
    3688:	cf 93       	push	r28
    368a:	df 93       	push	r29
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
    368c:	e4 e8       	ldi	r30, 0x84	; 132
    368e:	f0 e0       	ldi	r31, 0x00	; 0
    3690:	c0 81       	ld	r28, Z
    3692:	d1 81       	ldd	r29, Z+1	; 0x01
	TCNT1 = 0;
    3694:	11 82       	std	Z+1, r1	; 0x01
    3696:	10 82       	st	Z, r1
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
    3698:	2b ed       	ldi	r18, 0xDB	; 219
    369a:	3f e0       	ldi	r19, 0x0F	; 15
    369c:	49 e4       	ldi	r20, 0x49	; 73
    369e:	50 e4       	ldi	r21, 0x40	; 64
    36a0:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    36a4:	26 e6       	ldi	r18, 0x66	; 102
    36a6:	36 e6       	ldi	r19, 0x66	; 102
    36a8:	46 e6       	ldi	r20, 0x66	; 102
    36aa:	50 e4       	ldi	r21, 0x40	; 64
    36ac:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    36b0:	6b 01       	movw	r12, r22
    36b2:	7c 01       	movw	r14, r24
	//Einholen der Daten und ruecksetzen
	uint16_t zaehlungen = TCNT1;
	TCNT1 = 0;
	//Berechnung
	double temp = geschw;
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
    36b4:	be 01       	movw	r22, r28
    36b6:	80 e0       	ldi	r24, 0x00	; 0
    36b8:	90 e0       	ldi	r25, 0x00	; 0
    36ba:	0e 94 3f 2d 	call	0x5a7e	; 0x5a7e <__floatunsisf>
    36be:	20 e0       	ldi	r18, 0x00	; 0
    36c0:	30 e0       	ldi	r19, 0x00	; 0
    36c2:	40 e0       	ldi	r20, 0x00	; 0
    36c4:	5e e3       	ldi	r21, 0x3E	; 62
    36c6:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    36ca:	2d eb       	ldi	r18, 0xBD	; 189
    36cc:	37 e3       	ldi	r19, 0x37	; 55
    36ce:	46 e8       	ldi	r20, 0x86	; 134
    36d0:	5a e3       	ldi	r21, 0x3A	; 58
    36d2:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    36d6:	2a e0       	ldi	r18, 0x0A	; 10
    36d8:	37 ed       	ldi	r19, 0xD7	; 215
    36da:	43 ea       	ldi	r20, 0xA3	; 163
    36dc:	5b e3       	ldi	r21, 0x3B	; 59
    36de:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
    36e2:	9b 01       	movw	r18, r22
    36e4:	ac 01       	movw	r20, r24
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
    36e6:	c7 01       	movw	r24, r14
    36e8:	b6 01       	movw	r22, r12
    36ea:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
    36ee:	20 91 50 03 	lds	r18, 0x0350
    36f2:	30 91 51 03 	lds	r19, 0x0351
    36f6:	40 91 52 03 	lds	r20, 0x0352
    36fa:	50 91 53 03 	lds	r21, 0x0353
    36fe:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
	geschw /= 2.0;
    3702:	20 e0       	ldi	r18, 0x00	; 0
    3704:	30 e0       	ldi	r19, 0x00	; 0
    3706:	40 e0       	ldi	r20, 0x00	; 0
    3708:	5f e3       	ldi	r21, 0x3F	; 63
    370a:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    370e:	6b 01       	movw	r12, r22
    3710:	7c 01       	movw	r14, r24
	if (geschw >=160)
    3712:	20 e0       	ldi	r18, 0x00	; 0
    3714:	30 e0       	ldi	r19, 0x00	; 0
    3716:	40 e2       	ldi	r20, 0x20	; 32
    3718:	53 e4       	ldi	r21, 0x43	; 67
    371a:	0e 94 4f 2e 	call	0x5c9e	; 0x5c9e <__gesf2>
    371e:	88 23       	and	r24, r24
    3720:	4c f4       	brge	.+18     	; 0x3734 <_Z15geschwindigkeitf+0xb4>
	double umlaufzeit = (REEDMS/1000.0+(zaehlungen/zaehlungenprozeiteinheit)*zeitproachtzaehlungen);
	geschw = (durch)*M_PI*3.6;
	geschw /= umlaufzeit;
	//Mittelwert aus der letzten Messung zum Fehler minimieren
	geschw += temp;
	geschw /= 2.0;
    3722:	c0 92 50 03 	sts	0x0350, r12
    3726:	d0 92 51 03 	sts	0x0351, r13
    372a:	e0 92 52 03 	sts	0x0352, r14
    372e:	f0 92 53 03 	sts	0x0353, r15
    3732:	08 c0       	rjmp	.+16     	; 0x3744 <_Z15geschwindigkeitf+0xc4>
	if (geschw >=160)
	{
		geschw=0;
    3734:	10 92 50 03 	sts	0x0350, r1
    3738:	10 92 51 03 	sts	0x0351, r1
    373c:	10 92 52 03 	sts	0x0352, r1
    3740:	10 92 53 03 	sts	0x0353, r1
	}
}
    3744:	df 91       	pop	r29
    3746:	cf 91       	pop	r28
    3748:	ff 90       	pop	r15
    374a:	ef 90       	pop	r14
    374c:	df 90       	pop	r13
    374e:	cf 90       	pop	r12
    3750:	08 95       	ret

00003752 <_Z13reed_debouncePVhh>:

uint8_t reed_debounce(volatile uint8_t *port, uint8_t pin)
{
	if ( (*port & (1 << pin)) )
    3752:	fc 01       	movw	r30, r24
    3754:	20 81       	ld	r18, Z
    3756:	30 e0       	ldi	r19, 0x00	; 0
    3758:	06 2e       	mov	r0, r22
    375a:	02 c0       	rjmp	.+4      	; 0x3760 <_Z13reed_debouncePVhh+0xe>
    375c:	35 95       	asr	r19
    375e:	27 95       	ror	r18
    3760:	0a 94       	dec	r0
    3762:	e2 f7       	brpl	.-8      	; 0x375c <_Z13reed_debouncePVhh+0xa>
    3764:	20 ff       	sbrs	r18, 0
    3766:	17 c0       	rjmp	.+46     	; 0x3796 <_Z13reed_debouncePVhh+0x44>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3768:	ef e0       	ldi	r30, 0x0F	; 15
    376a:	f7 e2       	ldi	r31, 0x27	; 39
    376c:	31 97       	sbiw	r30, 0x01	; 1
    376e:	f1 f7       	brne	.-4      	; 0x376c <_Z13reed_debouncePVhh+0x1a>
    3770:	00 c0       	rjmp	.+0      	; 0x3772 <_Z13reed_debouncePVhh+0x20>
    3772:	00 00       	nop
	{
		/* Pin wurde auf Masse gezogen, ms warten   */
		_delay_ms(REEDMS);
		if ( !(*port & (1 << pin)) )
    3774:	fc 01       	movw	r30, r24
    3776:	80 81       	ld	r24, Z
    3778:	90 e0       	ldi	r25, 0x00	; 0
    377a:	9c 01       	movw	r18, r24
    377c:	02 c0       	rjmp	.+4      	; 0x3782 <_Z13reed_debouncePVhh+0x30>
    377e:	35 95       	asr	r19
    3780:	27 95       	ror	r18
    3782:	6a 95       	dec	r22
    3784:	e2 f7       	brpl	.-8      	; 0x377e <_Z13reed_debouncePVhh+0x2c>
    3786:	20 fd       	sbrc	r18, 0
    3788:	08 c0       	rjmp	.+16     	; 0x379a <_Z13reed_debouncePVhh+0x48>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    378a:	32 e0       	ldi	r19, 0x02	; 2
    378c:	3a 95       	dec	r19
    378e:	f1 f7       	brne	.-4      	; 0x378c <_Z13reed_debouncePVhh+0x3a>
    3790:	00 c0       	rjmp	.+0      	; 0x3792 <_Z13reed_debouncePVhh+0x40>
		{
			/* Anwender Zeit zum Loslassen des Tasters geben */
			_delay_us(1);
			return 1;
    3792:	81 e0       	ldi	r24, 0x01	; 1
    3794:	08 95       	ret
		}
	}
	return 0;
    3796:	80 e0       	ldi	r24, 0x00	; 0
    3798:	08 95       	ret
    379a:	80 e0       	ldi	r24, 0x00	; 0
}
    379c:	08 95       	ret

0000379e <_Z15initialisierungv>:
    }
}

void initialisierung(){
	//nullen der Flagregister
	rtc.interupts=0;
    379e:	10 92 9c 07 	sts	0x079C, r1
	anzeige=0;
    37a2:	10 92 56 03 	sts	0x0356, r1
    37a6:	10 92 55 03 	sts	0x0355, r1
	pos=0;
    37aa:	10 92 54 03 	sts	0x0354, r1
	//initialisieren des Zaehler fuer die Winkelgeschw sowie den Timer
	geschw=0;
    37ae:	10 92 50 03 	sts	0x0350, r1
    37b2:	10 92 51 03 	sts	0x0351, r1
    37b6:	10 92 52 03 	sts	0x0352, r1
    37ba:	10 92 53 03 	sts	0x0353, r1
	strecke = 0;
    37be:	10 92 4c 03 	sts	0x034C, r1
    37c2:	10 92 4d 03 	sts	0x034D, r1
    37c6:	10 92 4e 03 	sts	0x034E, r1
    37ca:	10 92 4f 03 	sts	0x034F, r1
	maxgeschw = 0;
    37ce:	10 92 48 03 	sts	0x0348, r1
    37d2:	10 92 49 03 	sts	0x0349, r1
    37d6:	10 92 4a 03 	sts	0x034A, r1
    37da:	10 92 4b 03 	sts	0x034B, r1
	Fahrtzeit = 0;
    37de:	10 92 44 03 	sts	0x0344, r1
    37e2:	10 92 45 03 	sts	0x0345, r1
    37e6:	10 92 46 03 	sts	0x0346, r1
    37ea:	10 92 47 03 	sts	0x0347, r1
	TCNT1=0;
    37ee:	10 92 85 00 	sts	0x0085, r1
    37f2:	10 92 84 00 	sts	0x0084, r1
	//Tastatur inm Contruktor initialisiert
	//Eingang fuer den Reedkontak schalten mit internem Pullup
	DDRA |= ((1<<PORTA6));
    37f6:	0e 9a       	sbi	0x01, 6	; 1
	PORTA |= (1<<PORTA6);
    37f8:	16 9a       	sbi	0x02, 6	; 2
	//Display
	oled.InitializeDisplay();
    37fa:	83 e8       	ldi	r24, 0x83	; 131
    37fc:	93 e0       	ldi	r25, 0x03	; 3
    37fe:	0e 94 2c 03 	call	0x658	; 0x658 <_ZN7Display17InitializeDisplayEv>
	//initialisierung wird im konstruktor vorgenommen
	oled.clearFrame();
    3802:	83 e8       	ldi	r24, 0x83	; 131
    3804:	93 e0       	ldi	r25, 0x03	; 3
    3806:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
	//HMC5883L initialisieren
	//kompass.initialize_HMC5883L();
	//initialisierung wird im Konstruktor erledigt
	
	//ADC Initialisieren auf CH0
	ADMUX = (1<<REFS0);
    380a:	80 e4       	ldi	r24, 0x40	; 64
    380c:	80 93 7c 00 	sts	0x007C, r24
	ADCSRA = (1<<ADPS1) | (1<<ADPS0);
    3810:	ea e7       	ldi	r30, 0x7A	; 122
    3812:	f0 e0       	ldi	r31, 0x00	; 0
    3814:	83 e0       	ldi	r24, 0x03	; 3
    3816:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN);
    3818:	80 81       	ld	r24, Z
    381a:	80 68       	ori	r24, 0x80	; 128
    381c:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);
    381e:	80 81       	ld	r24, Z
    3820:	80 64       	ori	r24, 0x40	; 64
    3822:	80 83       	st	Z, r24
	while (ADCSRA & (1<<ADSC) ) {}
    3824:	80 81       	ld	r24, Z
    3826:	86 fd       	sbrc	r24, 6
    3828:	fd cf       	rjmp	.-6      	; 0x3824 <_Z15initialisierungv+0x86>
	(void) ADCW;
    382a:	80 91 78 00 	lds	r24, 0x0078
    382e:	90 91 79 00 	lds	r25, 0x0079
	//Wilkommensanzeige
	willkommenpage();
    3832:	0e 94 bc 09 	call	0x1378	; 0x1378 <_Z14willkommenpagev>
	//Uhreinstellungen
	//uhreinstellen();
	//*************************************************
	//Nur Test, damit es schneller geht beim Start
	rtc.dummyeinst();
    3836:	84 e8       	ldi	r24, 0x84	; 132
    3838:	97 e0       	ldi	r25, 0x07	; 7
    383a:	0e 94 a5 2b 	call	0x574a	; 0x574a <_ZN3RTC10dummyeinstEv>
	//*********************************
	rtc.RTCstart();
    383e:	84 e8       	ldi	r24, 0x84	; 132
    3840:	97 e0       	ldi	r25, 0x07	; 7
    3842:	0e 94 b9 2b 	call	0x5772	; 0x5772 <_ZN3RTC8RTCstartEv>
	//ausgabe starten
	anzeige|=(1<<Uhrflag);
    3846:	80 91 55 03 	lds	r24, 0x0355
    384a:	90 91 56 03 	lds	r25, 0x0356
    384e:	82 60       	ori	r24, 0x02	; 2
    3850:	90 93 56 03 	sts	0x0356, r25
    3854:	80 93 55 03 	sts	0x0355, r24
	sei();
    3858:	78 94       	sei
    385a:	08 95       	ret

0000385c <_Z19maininterupthandlerv>:
	//interupt dierekt aus der rtc
	//if((rtc.interupts & (1<<hundinterupt))){
	//rtc.zeit();
	//rtc.interupts&=~(1<<hundinterupt);
	//}
	if ((anzeige&(1<<Fahradflag)))
    385c:	80 91 55 03 	lds	r24, 0x0355
    3860:	80 ff       	sbrs	r24, 0
    3862:	1f c0       	rjmp	.+62     	; 0x38a2 <_Z19maininterupthandlerv+0x46>
	{
		//debounce Funktion fuer den Reedswitch
		if (reed_debounce(&PINA,PINA7))
    3864:	67 e0       	ldi	r22, 0x07	; 7
    3866:	80 e2       	ldi	r24, 0x20	; 32
    3868:	90 e0       	ldi	r25, 0x00	; 0
    386a:	73 df       	rcall	.-282    	; 0x3752 <_Z13reed_debouncePVhh>
    386c:	88 23       	and	r24, r24
    386e:	31 f0       	breq	.+12     	; 0x387c <_Z19maininterupthandlerv+0x20>
		{
			//Durchmesser ist 28 Zoll
			geschwindigkeit(28.0*2.54/100.0);
    3870:	63 e3       	ldi	r22, 0x33	; 51
    3872:	71 e1       	ldi	r23, 0x11	; 17
    3874:	86 e3       	ldi	r24, 0x36	; 54
    3876:	9f e3       	ldi	r25, 0x3F	; 63
    3878:	03 df       	rcall	.-506    	; 0x3680 <_Z15geschwindigkeitf>
    387a:	13 c0       	rjmp	.+38     	; 0x38a2 <_Z19maininterupthandlerv+0x46>
		}
		//Hier mit werden geschwindigkeiten, die kleiner als 2.6km/h betragen gefiltert
		//Somit wird die letzte Geschwindigkeit nach 3 Sekunden geloescht
		//Das ist noch nicht die beste Variante
		else if (TCNT1>23437)
    387c:	80 91 84 00 	lds	r24, 0x0084
    3880:	90 91 85 00 	lds	r25, 0x0085
    3884:	8e 38       	cpi	r24, 0x8E	; 142
    3886:	9b 45       	sbci	r25, 0x5B	; 91
    3888:	60 f0       	brcs	.+24     	; 0x38a2 <_Z19maininterupthandlerv+0x46>
		{
			TCNT1=0;
    388a:	10 92 85 00 	sts	0x0085, r1
    388e:	10 92 84 00 	sts	0x0084, r1
			geschw=0;
    3892:	10 92 50 03 	sts	0x0350, r1
    3896:	10 92 51 03 	sts	0x0351, r1
    389a:	10 92 52 03 	sts	0x0352, r1
    389e:	10 92 53 03 	sts	0x0353, r1
		}
	}
	if ((rtc.interupts&(1<<Weckeractiv)))
    38a2:	20 91 9c 07 	lds	r18, 0x079C
    38a6:	82 2f       	mov	r24, r18
    38a8:	88 71       	andi	r24, 0x18	; 24
	{
		if ((rtc.interupts&(1<<Weckerein)))
    38aa:	88 31       	cpi	r24, 0x18	; 24
    38ac:	61 f4       	brne	.+24     	; 0x38c6 <_Z19maininterupthandlerv+0x6a>
		{
			anzeige |= (1<<blinkflag) | (1<<refreshdisplay);
    38ae:	80 91 55 03 	lds	r24, 0x0355
    38b2:	90 91 56 03 	lds	r25, 0x0356
    38b6:	90 6c       	ori	r25, 0xC0	; 192
    38b8:	90 93 56 03 	sts	0x0356, r25
    38bc:	80 93 55 03 	sts	0x0355, r24
			rtc.interupts &= ~(1<<Weckerein);
    38c0:	27 7f       	andi	r18, 0xF7	; 247
    38c2:	20 93 9c 07 	sts	0x079C, r18
    38c6:	08 95       	ret

000038c8 <_Z14anzeigehandlerv>:
		}
	}
}

void anzeigehandler(){
    38c8:	4f 92       	push	r4
    38ca:	5f 92       	push	r5
    38cc:	6f 92       	push	r6
    38ce:	7f 92       	push	r7
    38d0:	af 92       	push	r10
    38d2:	bf 92       	push	r11
    38d4:	cf 92       	push	r12
    38d6:	df 92       	push	r13
    38d8:	ef 92       	push	r14
    38da:	ff 92       	push	r15
    38dc:	0f 93       	push	r16
    38de:	1f 93       	push	r17
    38e0:	cf 93       	push	r28
    38e2:	df 93       	push	r29
	//Handler fuer 1Hz Flag
	if ((rtc.interupts & (1<<sekundeninterupt)))
    38e4:	80 91 9c 07 	lds	r24, 0x079C
    38e8:	81 ff       	sbrs	r24, 1
    38ea:	91 c1       	rjmp	.+802    	; 0x3c0e <_Z14anzeigehandlerv+0x346>
	{
		rtc.zeit();
    38ec:	84 e8       	ldi	r24, 0x84	; 132
    38ee:	97 e0       	ldi	r25, 0x07	; 7
    38f0:	0e 94 6b 2b 	call	0x56d6	; 0x56d6 <_ZN3RTC4zeitEv>
		//Handler fuer die Anzeige der Seiten
		//Die einzelnen Funktionen beschreiben nur den Framebuffer und nicht dierekt das Display
		if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))
    38f4:	80 91 55 03 	lds	r24, 0x0355
    38f8:	90 91 56 03 	lds	r25, 0x0356
    38fc:	9c 01       	movw	r18, r24
    38fe:	22 70       	andi	r18, 0x02	; 2
    3900:	30 72       	andi	r19, 0x20	; 32
    3902:	22 30       	cpi	r18, 0x02	; 2
    3904:	30 42       	sbci	r19, 0x20	; 32
    3906:	61 f4       	brne	.+24     	; 0x3920 <_Z14anzeigehandlerv+0x58>
		{
			menue_uhr();
    3908:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <_Z9menue_uhrv>
			anzeige|=(1<<refreshdisplay);
    390c:	80 91 55 03 	lds	r24, 0x0355
    3910:	90 91 56 03 	lds	r25, 0x0356
    3914:	90 68       	ori	r25, 0x80	; 128
    3916:	90 93 56 03 	sts	0x0356, r25
    391a:	80 93 55 03 	sts	0x0355, r24
    391e:	5d c1       	rjmp	.+698    	; 0x3bda <_Z14anzeigehandlerv+0x312>
    3920:	9c 01       	movw	r18, r24
    3922:	22 27       	eor	r18, r18
    3924:	30 73       	andi	r19, 0x30	; 48
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))
    3926:	21 15       	cp	r18, r1
    3928:	30 43       	sbci	r19, 0x30	; 48
    392a:	61 f4       	brne	.+24     	; 0x3944 <_Z14anzeigehandlerv+0x7c>
		{
			menue_einst();
    392c:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <_Z11menue_einstv>
			anzeige|=(1<<refreshdisplay);
    3930:	80 91 55 03 	lds	r24, 0x0355
    3934:	90 91 56 03 	lds	r25, 0x0356
    3938:	90 68       	ori	r25, 0x80	; 128
    393a:	90 93 56 03 	sts	0x0356, r25
    393e:	80 93 55 03 	sts	0x0355, r24
    3942:	4b c1       	rjmp	.+662    	; 0x3bda <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<menueflag)))
    3944:	95 ff       	sbrs	r25, 5
    3946:	0c c0       	rjmp	.+24     	; 0x3960 <_Z14anzeigehandlerv+0x98>
		{
			menue_haupt();
    3948:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <_Z11menue_hauptv>
			anzeige|=(1<<refreshdisplay);
    394c:	80 91 55 03 	lds	r24, 0x0355
    3950:	90 91 56 03 	lds	r25, 0x0356
    3954:	90 68       	ori	r25, 0x80	; 128
    3956:	90 93 56 03 	sts	0x0356, r25
    395a:	80 93 55 03 	sts	0x0355, r24
    395e:	3d c1       	rjmp	.+634    	; 0x3bda <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3960:	91 ff       	sbrs	r25, 1
    3962:	0c c0       	rjmp	.+24     	; 0x397c <_Z14anzeigehandlerv+0xb4>
		{
			Gaineinstellen();
    3964:	0e 94 9b 11 	call	0x2336	; 0x2336 <_Z14Gaineinstellenv>
			anzeige|=(1<<refreshdisplay);
    3968:	80 91 55 03 	lds	r24, 0x0355
    396c:	90 91 56 03 	lds	r25, 0x0356
    3970:	90 68       	ori	r25, 0x80	; 128
    3972:	90 93 56 03 	sts	0x0356, r25
    3976:	80 93 55 03 	sts	0x0355, r24
    397a:	2f c1       	rjmp	.+606    	; 0x3bda <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Uhrflag)))
    397c:	81 ff       	sbrs	r24, 1
    397e:	0c c0       	rjmp	.+24     	; 0x3998 <_Z14anzeigehandlerv+0xd0>
		{
			uhranzeigen();
    3980:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <_Z11uhranzeigenv>
			anzeige|=(1<<refreshdisplay);
    3984:	80 91 55 03 	lds	r24, 0x0355
    3988:	90 91 56 03 	lds	r25, 0x0356
    398c:	90 68       	ori	r25, 0x80	; 128
    398e:	90 93 56 03 	sts	0x0356, r25
    3992:	80 93 55 03 	sts	0x0355, r24
    3996:	21 c1       	rjmp	.+578    	; 0x3bda <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Kompasflag)))
    3998:	87 ff       	sbrs	r24, 7
    399a:	24 c0       	rjmp	.+72     	; 0x39e4 <_Z14anzeigehandlerv+0x11c>
		{
			Accelerometer.readacc();
    399c:	8b e5       	ldi	r24, 0x5B	; 91
    399e:	93 e0       	ldi	r25, 0x03	; 3
    39a0:	0e 94 73 26 	call	0x4ce6	; 0x4ce6 <_ZN7LSM303D7readaccEv>
			anzeige_kompass(kompass.angle(Accelerometer.roll,Accelerometer.pitch));
    39a4:	00 91 67 03 	lds	r16, 0x0367
    39a8:	10 91 68 03 	lds	r17, 0x0368
    39ac:	20 91 69 03 	lds	r18, 0x0369
    39b0:	30 91 6a 03 	lds	r19, 0x036A
    39b4:	40 91 63 03 	lds	r20, 0x0363
    39b8:	50 91 64 03 	lds	r21, 0x0364
    39bc:	60 91 65 03 	lds	r22, 0x0365
    39c0:	70 91 66 03 	lds	r23, 0x0366
    39c4:	83 ea       	ldi	r24, 0xA3	; 163
    39c6:	97 e0       	ldi	r25, 0x07	; 7
    39c8:	0e 94 2e 25 	call	0x4a5c	; 0x4a5c <_ZN7Kompass5angleEdd>
    39cc:	0e 94 81 12 	call	0x2502	; 0x2502 <_Z15anzeige_kompassd>
			anzeige|=(1<<refreshdisplay);
    39d0:	80 91 55 03 	lds	r24, 0x0355
    39d4:	90 91 56 03 	lds	r25, 0x0356
    39d8:	90 68       	ori	r25, 0x80	; 128
    39da:	90 93 56 03 	sts	0x0356, r25
    39de:	80 93 55 03 	sts	0x0355, r24
    39e2:	fb c0       	rjmp	.+502    	; 0x3bda <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Fahradflag)))
    39e4:	80 ff       	sbrs	r24, 0
    39e6:	a6 c0       	rjmp	.+332    	; 0x3b34 <_Z14anzeigehandlerv+0x26c>
		{
			if (geschw>maxgeschw)
    39e8:	c0 90 50 03 	lds	r12, 0x0350
    39ec:	d0 90 51 03 	lds	r13, 0x0351
    39f0:	e0 90 52 03 	lds	r14, 0x0352
    39f4:	f0 90 53 03 	lds	r15, 0x0353
    39f8:	20 91 48 03 	lds	r18, 0x0348
    39fc:	30 91 49 03 	lds	r19, 0x0349
    3a00:	40 91 4a 03 	lds	r20, 0x034A
    3a04:	50 91 4b 03 	lds	r21, 0x034B
    3a08:	c7 01       	movw	r24, r14
    3a0a:	b6 01       	movw	r22, r12
    3a0c:	0e 94 4f 2e 	call	0x5c9e	; 0x5c9e <__gesf2>
    3a10:	18 16       	cp	r1, r24
    3a12:	44 f4       	brge	.+16     	; 0x3a24 <_Z14anzeigehandlerv+0x15c>
			{
				maxgeschw=geschw;
    3a14:	c0 92 48 03 	sts	0x0348, r12
    3a18:	d0 92 49 03 	sts	0x0349, r13
    3a1c:	e0 92 4a 03 	sts	0x034A, r14
    3a20:	f0 92 4b 03 	sts	0x034B, r15
			}
			if (geschw >= 1.0)
    3a24:	20 e0       	ldi	r18, 0x00	; 0
    3a26:	30 e0       	ldi	r19, 0x00	; 0
    3a28:	40 e8       	ldi	r20, 0x80	; 128
    3a2a:	5f e3       	ldi	r21, 0x3F	; 63
    3a2c:	c7 01       	movw	r24, r14
    3a2e:	b6 01       	movw	r22, r12
    3a30:	0e 94 4f 2e 	call	0x5c9e	; 0x5c9e <__gesf2>
    3a34:	88 23       	and	r24, r24
    3a36:	9c f0       	brlt	.+38     	; 0x3a5e <_Z14anzeigehandlerv+0x196>
			{
				Fahrtzeit++;
    3a38:	80 91 44 03 	lds	r24, 0x0344
    3a3c:	90 91 45 03 	lds	r25, 0x0345
    3a40:	a0 91 46 03 	lds	r26, 0x0346
    3a44:	b0 91 47 03 	lds	r27, 0x0347
    3a48:	01 96       	adiw	r24, 0x01	; 1
    3a4a:	a1 1d       	adc	r26, r1
    3a4c:	b1 1d       	adc	r27, r1
    3a4e:	80 93 44 03 	sts	0x0344, r24
    3a52:	90 93 45 03 	sts	0x0345, r25
    3a56:	a0 93 46 03 	sts	0x0346, r26
    3a5a:	b0 93 47 03 	sts	0x0347, r27
			}
			strecke+=geschw/3.6;
    3a5e:	26 e6       	ldi	r18, 0x66	; 102
    3a60:	36 e6       	ldi	r19, 0x66	; 102
    3a62:	46 e6       	ldi	r20, 0x66	; 102
    3a64:	50 e4       	ldi	r21, 0x40	; 64
    3a66:	c7 01       	movw	r24, r14
    3a68:	b6 01       	movw	r22, r12
    3a6a:	0e 94 a6 2c 	call	0x594c	; 0x594c <__divsf3>
    3a6e:	9b 01       	movw	r18, r22
    3a70:	ac 01       	movw	r20, r24
    3a72:	60 91 4c 03 	lds	r22, 0x034C
    3a76:	70 91 4d 03 	lds	r23, 0x034D
    3a7a:	80 91 4e 03 	lds	r24, 0x034E
    3a7e:	90 91 4f 03 	lds	r25, 0x034F
    3a82:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <__addsf3>
    3a86:	60 93 4c 03 	sts	0x034C, r22
    3a8a:	70 93 4d 03 	sts	0x034D, r23
    3a8e:	80 93 4e 03 	sts	0x034E, r24
    3a92:	90 93 4f 03 	sts	0x034F, r25
			Accelerometer.readacc();
    3a96:	8b e5       	ldi	r24, 0x5B	; 91
    3a98:	93 e0       	ldi	r25, 0x03	; 3
    3a9a:	0e 94 73 26 	call	0x4ce6	; 0x4ce6 <_ZN7LSM303D7readaccEv>
			fahradschirm(geschw,kompass.angle(Accelerometer.roll,Accelerometer.pitch),strecke,maxgeschw, Fahrtzeit);
    3a9e:	e0 90 44 03 	lds	r14, 0x0344
    3aa2:	f0 90 45 03 	lds	r15, 0x0345
    3aa6:	c0 91 46 03 	lds	r28, 0x0346
    3aaa:	d0 91 47 03 	lds	r29, 0x0347
    3aae:	a0 90 48 03 	lds	r10, 0x0348
    3ab2:	b0 90 49 03 	lds	r11, 0x0349
    3ab6:	c0 90 4a 03 	lds	r12, 0x034A
    3aba:	d0 90 4b 03 	lds	r13, 0x034B
    3abe:	40 90 4c 03 	lds	r4, 0x034C
    3ac2:	50 90 4d 03 	lds	r5, 0x034D
    3ac6:	60 90 4e 03 	lds	r6, 0x034E
    3aca:	70 90 4f 03 	lds	r7, 0x034F
    3ace:	00 91 67 03 	lds	r16, 0x0367
    3ad2:	10 91 68 03 	lds	r17, 0x0368
    3ad6:	20 91 69 03 	lds	r18, 0x0369
    3ada:	30 91 6a 03 	lds	r19, 0x036A
    3ade:	40 91 63 03 	lds	r20, 0x0363
    3ae2:	50 91 64 03 	lds	r21, 0x0364
    3ae6:	60 91 65 03 	lds	r22, 0x0365
    3aea:	70 91 66 03 	lds	r23, 0x0366
    3aee:	83 ea       	ldi	r24, 0xA3	; 163
    3af0:	97 e0       	ldi	r25, 0x07	; 7
    3af2:	b4 d7       	rcall	.+3944   	; 0x4a5c <_ZN7Kompass5angleEdd>
    3af4:	9b 01       	movw	r18, r22
    3af6:	ac 01       	movw	r20, r24
    3af8:	60 91 50 03 	lds	r22, 0x0350
    3afc:	70 91 51 03 	lds	r23, 0x0351
    3b00:	80 91 52 03 	lds	r24, 0x0352
    3b04:	90 91 53 03 	lds	r25, 0x0353
    3b08:	df 93       	push	r29
    3b0a:	cf 93       	push	r28
    3b0c:	ff 92       	push	r15
    3b0e:	ef 92       	push	r14
    3b10:	83 01       	movw	r16, r6
    3b12:	72 01       	movw	r14, r4
    3b14:	0e 94 2d 10 	call	0x205a	; 0x205a <_Z12fahradschirmddddm>
			//Fuer Testzwecke entfernt um neue Methode zu testen, siehe Oben
			//if (rtc.Sekunden%2)
			//{
				//geschw=0;
			//}
			anzeige|=(1<<refreshdisplay);
    3b18:	80 91 55 03 	lds	r24, 0x0355
    3b1c:	90 91 56 03 	lds	r25, 0x0356
    3b20:	90 68       	ori	r25, 0x80	; 128
    3b22:	90 93 56 03 	sts	0x0356, r25
    3b26:	80 93 55 03 	sts	0x0355, r24
    3b2a:	0f 90       	pop	r0
    3b2c:	0f 90       	pop	r0
    3b2e:	0f 90       	pop	r0
    3b30:	0f 90       	pop	r0
    3b32:	53 c0       	rjmp	.+166    	; 0x3bda <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    3b34:	83 ff       	sbrs	r24, 3
    3b36:	0c c0       	rjmp	.+24     	; 0x3b50 <_Z14anzeigehandlerv+0x288>
		{
			Stoppuhrseite();
    3b38:	0e 94 62 14 	call	0x28c4	; 0x28c4 <_Z13Stoppuhrseitev>
			anzeige|=(1<<refreshdisplay);
    3b3c:	80 91 55 03 	lds	r24, 0x0355
    3b40:	90 91 56 03 	lds	r25, 0x0356
    3b44:	90 68       	ori	r25, 0x80	; 128
    3b46:	90 93 56 03 	sts	0x0356, r25
    3b4a:	80 93 55 03 	sts	0x0355, r24
    3b4e:	45 c0       	rjmp	.+138    	; 0x3bda <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Timerflag)))
    3b50:	82 ff       	sbrs	r24, 2
    3b52:	18 c0       	rjmp	.+48     	; 0x3b84 <_Z14anzeigehandlerv+0x2bc>
		{
			if (rtc.interupts&(1<<Alarm))
    3b54:	20 91 9c 07 	lds	r18, 0x079C
    3b58:	20 ff       	sbrs	r18, 0
    3b5a:	08 c0       	rjmp	.+16     	; 0x3b6c <_Z14anzeigehandlerv+0x2a4>
			{
				anzeige |= (1<<blinkflag);
    3b5c:	90 64       	ori	r25, 0x40	; 64
    3b5e:	90 93 56 03 	sts	0x0356, r25
    3b62:	80 93 55 03 	sts	0x0355, r24
				rtc.interupts &= ~(1<<Alarm);
    3b66:	2e 7f       	andi	r18, 0xFE	; 254
    3b68:	20 93 9c 07 	sts	0x079C, r18
			}
			timerseite();
    3b6c:	0e 94 96 13 	call	0x272c	; 0x272c <_Z10timerseitev>
			anzeige|=(1<<refreshdisplay);
    3b70:	80 91 55 03 	lds	r24, 0x0355
    3b74:	90 91 56 03 	lds	r25, 0x0356
    3b78:	90 68       	ori	r25, 0x80	; 128
    3b7a:	90 93 56 03 	sts	0x0356, r25
    3b7e:	80 93 55 03 	sts	0x0355, r24
    3b82:	2b c0       	rjmp	.+86     	; 0x3bda <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Druckflag)))
    3b84:	92 ff       	sbrs	r25, 2
    3b86:	0c c0       	rjmp	.+24     	; 0x3ba0 <_Z14anzeigehandlerv+0x2d8>
		{
			Pressuresensor();
    3b88:	0e 94 23 15 	call	0x2a46	; 0x2a46 <_Z14Pressuresensorv>
			anzeige |= (1<<refreshdisplay);
    3b8c:	80 91 55 03 	lds	r24, 0x0355
    3b90:	90 91 56 03 	lds	r25, 0x0356
    3b94:	90 68       	ori	r25, 0x80	; 128
    3b96:	90 93 56 03 	sts	0x0356, r25
    3b9a:	80 93 55 03 	sts	0x0355, r24
    3b9e:	1d c0       	rjmp	.+58     	; 0x3bda <_Z14anzeigehandlerv+0x312>
		}
		else if ((anzeige&(1<<Wanderflag)))
    3ba0:	93 ff       	sbrs	r25, 3
    3ba2:	0b c0       	rjmp	.+22     	; 0x3bba <_Z14anzeigehandlerv+0x2f2>
		{
			Wanderseite();
    3ba4:	43 d8       	rcall	.-3962   	; 0x2c2c <_Z11Wanderseitev>
			anzeige |= (1<<refreshdisplay);
    3ba6:	80 91 55 03 	lds	r24, 0x0355
    3baa:	90 91 56 03 	lds	r25, 0x0356
    3bae:	90 68       	ori	r25, 0x80	; 128
    3bb0:	90 93 56 03 	sts	0x0356, r25
    3bb4:	80 93 55 03 	sts	0x0355, r24
    3bb8:	10 c0       	rjmp	.+32     	; 0x3bda <_Z14anzeigehandlerv+0x312>
    3bba:	80 74       	andi	r24, 0x40	; 64
    3bbc:	90 71       	andi	r25, 0x10	; 16
		}
		else if ((anzeige&(1<<Weckeranzeigeflag))&&(anzeige&(1<<Einstellungsflag)))
    3bbe:	80 34       	cpi	r24, 0x40	; 64
    3bc0:	90 41       	sbci	r25, 0x10	; 16
    3bc2:	59 f4       	brne	.+22     	; 0x3bda <_Z14anzeigehandlerv+0x312>
		{
			Weckeranzeige();
    3bc4:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3bc8:	80 91 55 03 	lds	r24, 0x0355
    3bcc:	90 91 56 03 	lds	r25, 0x0356
    3bd0:	90 68       	ori	r25, 0x80	; 128
    3bd2:	90 93 56 03 	sts	0x0356, r25
    3bd6:	80 93 55 03 	sts	0x0355, r24
		}
		if ((anzeige&(1<<blinkflag)))
    3bda:	80 91 55 03 	lds	r24, 0x0355
    3bde:	90 91 56 03 	lds	r25, 0x0356
    3be2:	96 ff       	sbrs	r25, 6
    3be4:	0f c0       	rjmp	.+30     	; 0x3c04 <_Z14anzeigehandlerv+0x33c>
		{
			oled.invert(rtc.Sekunden%2);
    3be6:	60 91 96 07 	lds	r22, 0x0796
    3bea:	61 70       	andi	r22, 0x01	; 1
    3bec:	83 e8       	ldi	r24, 0x83	; 131
    3bee:	93 e0       	ldi	r25, 0x03	; 3
    3bf0:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
			LED.toggle();
    3bf4:	80 e8       	ldi	r24, 0x80	; 128
    3bf6:	93 e0       	ldi	r25, 0x03	; 3
    3bf8:	0e 94 c8 28 	call	0x5190	; 0x5190 <_ZN6Output6toggleEv>
			Vibrationsmotor.on();
    3bfc:	8e e7       	ldi	r24, 0x7E	; 126
    3bfe:	93 e0       	ldi	r25, 0x03	; 3
    3c00:	0e 94 ef 27 	call	0x4fde	; 0x4fde <_ZN6Output2onEv>
		}
		rtc.interupts&=~(1<<sekundeninterupt);
    3c04:	ec e9       	ldi	r30, 0x9C	; 156
    3c06:	f7 e0       	ldi	r31, 0x07	; 7
    3c08:	80 81       	ld	r24, Z
    3c0a:	8d 7f       	andi	r24, 0xFD	; 253
    3c0c:	80 83       	st	Z, r24
	}
	//Minuteninterrupt
	if ((rtc.interupts&(1<<minuteninterupt)))
    3c0e:	80 91 9c 07 	lds	r24, 0x079C
    3c12:	82 ff       	sbrs	r24, 2
    3c14:	22 c0       	rjmp	.+68     	; 0x3c5a <_Z14anzeigehandlerv+0x392>
	{
		if ((anzeige&(1<<Uhrflaggross)))
    3c16:	80 91 55 03 	lds	r24, 0x0355
    3c1a:	85 ff       	sbrs	r24, 5
    3c1c:	0c c0       	rjmp	.+24     	; 0x3c36 <_Z14anzeigehandlerv+0x36e>
		{
			uhranzeigenmin();
    3c1e:	0e 94 43 0f 	call	0x1e86	; 0x1e86 <_Z14uhranzeigenminv>
			anzeige|=(1<<refreshdisplay);
    3c22:	80 91 55 03 	lds	r24, 0x0355
    3c26:	90 91 56 03 	lds	r25, 0x0356
    3c2a:	90 68       	ori	r25, 0x80	; 128
    3c2c:	90 93 56 03 	sts	0x0356, r25
    3c30:	80 93 55 03 	sts	0x0355, r24
    3c34:	0d c0       	rjmp	.+26     	; 0x3c50 <_Z14anzeigehandlerv+0x388>
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    3c36:	86 ff       	sbrs	r24, 6
    3c38:	0b c0       	rjmp	.+22     	; 0x3c50 <_Z14anzeigehandlerv+0x388>
		{
			Weckeranzeige();
    3c3a:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <_Z13Weckeranzeigev>
			anzeige|=(1<<refreshdisplay);
    3c3e:	80 91 55 03 	lds	r24, 0x0355
    3c42:	90 91 56 03 	lds	r25, 0x0356
    3c46:	90 68       	ori	r25, 0x80	; 128
    3c48:	90 93 56 03 	sts	0x0356, r25
    3c4c:	80 93 55 03 	sts	0x0355, r24
		}
		rtc.interupts&=~(1<<minuteninterupt);
    3c50:	ec e9       	ldi	r30, 0x9C	; 156
    3c52:	f7 e0       	ldi	r31, 0x07	; 7
    3c54:	80 81       	ld	r24, Z
    3c56:	8b 7f       	andi	r24, 0xFB	; 251
    3c58:	80 83       	st	Z, r24
	}
	//neuen Framebuffer an das Dispay senden
	if ((anzeige&(1<<refreshdisplay)))
    3c5a:	80 91 55 03 	lds	r24, 0x0355
    3c5e:	90 91 56 03 	lds	r25, 0x0356
    3c62:	99 23       	and	r25, r25
    3c64:	6c f4       	brge	.+26     	; 0x3c80 <_Z14anzeigehandlerv+0x3b8>
	{
		oled.sendFrame();
    3c66:	83 e8       	ldi	r24, 0x83	; 131
    3c68:	93 e0       	ldi	r25, 0x03	; 3
    3c6a:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN7Display9sendFrameEv>
		anzeige&=~(1<<refreshdisplay);
    3c6e:	80 91 55 03 	lds	r24, 0x0355
    3c72:	90 91 56 03 	lds	r25, 0x0356
    3c76:	9f 77       	andi	r25, 0x7F	; 127
    3c78:	90 93 56 03 	sts	0x0356, r25
    3c7c:	80 93 55 03 	sts	0x0355, r24
	}
}
    3c80:	df 91       	pop	r29
    3c82:	cf 91       	pop	r28
    3c84:	1f 91       	pop	r17
    3c86:	0f 91       	pop	r16
    3c88:	ff 90       	pop	r15
    3c8a:	ef 90       	pop	r14
    3c8c:	df 90       	pop	r13
    3c8e:	cf 90       	pop	r12
    3c90:	bf 90       	pop	r11
    3c92:	af 90       	pop	r10
    3c94:	7f 90       	pop	r7
    3c96:	6f 90       	pop	r6
    3c98:	5f 90       	pop	r5
    3c9a:	4f 90       	pop	r4
    3c9c:	08 95       	ret

00003c9e <_Z14eingabehandlerh>:

void eingabehandler(uint8_t taste){
	if (taste!='A')
    3c9e:	81 34       	cpi	r24, 0x41	; 65
    3ca0:	09 f4       	brne	.+2      	; 0x3ca4 <_Z14eingabehandlerh+0x6>
    3ca2:	9a c4       	rjmp	.+2356   	; 0x45d8 <__stack+0x4d9>
	{
		rtc.interupts |= (1<<sekundeninterupt);
    3ca4:	ec e9       	ldi	r30, 0x9C	; 156
    3ca6:	f7 e0       	ldi	r31, 0x07	; 7
    3ca8:	90 81       	ld	r25, Z
    3caa:	29 2f       	mov	r18, r25
    3cac:	22 60       	ori	r18, 0x02	; 2
    3cae:	20 83       	st	Z, r18
		if (anzeige==255)
    3cb0:	20 91 55 03 	lds	r18, 0x0355
    3cb4:	30 91 56 03 	lds	r19, 0x0356
    3cb8:	2f 3f       	cpi	r18, 0xFF	; 255
    3cba:	31 05       	cpc	r19, r1
    3cbc:	61 f4       	brne	.+24     	; 0x3cd6 <_Z14eingabehandlerh+0x38>
		{
			oled.ssd1306_command(SSD1306_DISPLAYON);
    3cbe:	6f ea       	ldi	r22, 0xAF	; 175
    3cc0:	83 e8       	ldi	r24, 0x83	; 131
    3cc2:	93 e0       	ldi	r25, 0x03	; 3
    3cc4:	0e 94 10 03 	call	0x620	; 0x620 <_ZN7Display15ssd1306_commandEh>
			//entweder display aus oder das Menue starten
			anzeige=(1<<menueflag);
    3cc8:	80 e0       	ldi	r24, 0x00	; 0
    3cca:	90 e2       	ldi	r25, 0x20	; 32
    3ccc:	90 93 56 03 	sts	0x0356, r25
    3cd0:	80 93 55 03 	sts	0x0355, r24
    3cd4:	08 95       	ret
    3cd6:	a9 01       	movw	r20, r18
    3cd8:	42 70       	andi	r20, 0x02	; 2
    3cda:	50 72       	andi	r21, 0x20	; 32
		}
		//gleicher Handler wie oben, aber hier speziell fuer die Bearbeitung von Tastereingaben mit switch fuer die Tasten
		//es sind einfach so viele Tasten moeglich
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Uhrflag)))	//Menue der Uhr
    3cdc:	42 30       	cpi	r20, 0x02	; 2
    3cde:	50 42       	sbci	r21, 0x20	; 32
    3ce0:	09 f0       	breq	.+2      	; 0x3ce4 <_Z14eingabehandlerh+0x46>
    3ce2:	50 c0       	rjmp	.+160    	; 0x3d84 <_Z14eingabehandlerh+0xe6>
		{
			anzeige&=~((1<<menueflag)|(1<<Uhrflag));
    3ce4:	2d 7f       	andi	r18, 0xFD	; 253
    3ce6:	3f 7d       	andi	r19, 0xDF	; 223
    3ce8:	30 93 56 03 	sts	0x0356, r19
    3cec:	20 93 55 03 	sts	0x0355, r18
			switch (taste)
    3cf0:	83 33       	cpi	r24, 0x33	; 51
    3cf2:	c9 f0       	breq	.+50     	; 0x3d26 <_Z14eingabehandlerh+0x88>
    3cf4:	28 f4       	brcc	.+10     	; 0x3d00 <_Z14eingabehandlerh+0x62>
    3cf6:	81 33       	cpi	r24, 0x31	; 49
    3cf8:	49 f0       	breq	.+18     	; 0x3d0c <_Z14eingabehandlerh+0x6e>
    3cfa:	82 33       	cpi	r24, 0x32	; 50
    3cfc:	69 f0       	breq	.+26     	; 0x3d18 <_Z14eingabehandlerh+0x7a>
    3cfe:	3b c0       	rjmp	.+118    	; 0x3d76 <_Z14eingabehandlerh+0xd8>
    3d00:	85 33       	cpi	r24, 0x35	; 53
    3d02:	31 f1       	breq	.+76     	; 0x3d50 <_Z14eingabehandlerh+0xb2>
    3d04:	b8 f0       	brcs	.+46     	; 0x3d34 <_Z14eingabehandlerh+0x96>
    3d06:	86 33       	cpi	r24, 0x36	; 54
    3d08:	69 f1       	breq	.+90     	; 0x3d64 <_Z14eingabehandlerh+0xc6>
    3d0a:	35 c0       	rjmp	.+106    	; 0x3d76 <_Z14eingabehandlerh+0xd8>
			{
				case '1':
				//Wechseln auf die Uhr
				anzeige|=(1<<Uhrflag);
    3d0c:	22 60       	ori	r18, 0x02	; 2
    3d0e:	30 93 56 03 	sts	0x0356, r19
    3d12:	20 93 55 03 	sts	0x0355, r18
				break;
    3d16:	08 95       	ret
				
				case '2':
				//starten der Stoppuhr APP
				anzeige|=(1<<refreshdisplay) | (1<<Stoppuhrflag);
    3d18:	28 60       	ori	r18, 0x08	; 8
    3d1a:	30 68       	ori	r19, 0x80	; 128
    3d1c:	30 93 56 03 	sts	0x0356, r19
    3d20:	20 93 55 03 	sts	0x0355, r18
				break;
    3d24:	08 95       	ret
				
				case '3':
				//Starten der Timer APP	
				anzeige|=(1<<Timerflag) | (1<<Einstellungsflag);
    3d26:	24 60       	ori	r18, 0x04	; 4
    3d28:	30 61       	ori	r19, 0x10	; 16
    3d2a:	30 93 56 03 	sts	0x0356, r19
    3d2e:	20 93 55 03 	sts	0x0355, r18
				break;
    3d32:	08 95       	ret
				
				case '4':
				//Starten der Alarmapp, momentan nicht implementiert
				oled.clearFrame();
    3d34:	83 e8       	ldi	r24, 0x83	; 131
    3d36:	93 e0       	ldi	r25, 0x03	; 3
    3d38:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
				anzeige|=(1<<refreshdisplay);
    3d3c:	80 91 55 03 	lds	r24, 0x0355
    3d40:	90 91 56 03 	lds	r25, 0x0356
    3d44:	90 68       	ori	r25, 0x80	; 128
    3d46:	90 93 56 03 	sts	0x0356, r25
    3d4a:	80 93 55 03 	sts	0x0355, r24
				break;
    3d4e:	08 95       	ret
				
				case '5':
				//Wechseln auf grosse Uhr
				rtc.interupts |=(1<<minuteninterupt);
    3d50:	96 60       	ori	r25, 0x06	; 6
    3d52:	90 93 9c 07 	sts	0x079C, r25
				anzeige |=(1<<Uhrflaggross) | (1<<refreshdisplay);
    3d56:	20 62       	ori	r18, 0x20	; 32
    3d58:	30 68       	ori	r19, 0x80	; 128
    3d5a:	30 93 56 03 	sts	0x0356, r19
    3d5e:	20 93 55 03 	sts	0x0355, r18
				break;
    3d62:	08 95       	ret
				case '6':
				rtc.interupts |=(1<<minuteninterupt);
    3d64:	96 60       	ori	r25, 0x06	; 6
    3d66:	90 93 9c 07 	sts	0x079C, r25
				anzeige |= (1<<Weckeranzeigeflag);
    3d6a:	20 64       	ori	r18, 0x40	; 64
    3d6c:	30 93 56 03 	sts	0x0356, r19
    3d70:	20 93 55 03 	sts	0x0355, r18
				break;
    3d74:	08 95       	ret
				default:
				//menueflag erneu setzen
				anzeige|=(1<<menueflag)|(1<<Uhrflag);
    3d76:	22 60       	ori	r18, 0x02	; 2
    3d78:	30 62       	ori	r19, 0x20	; 32
    3d7a:	30 93 56 03 	sts	0x0356, r19
    3d7e:	20 93 55 03 	sts	0x0355, r18
				break;
    3d82:	00 c4       	rjmp	.+2048   	; 0x4584 <__stack+0x485>
    3d84:	a9 01       	movw	r20, r18
    3d86:	44 27       	eor	r20, r20
    3d88:	50 73       	andi	r21, 0x30	; 48
			}
		}
		else if ((anzeige&(1<<menueflag)) && (anzeige&(1<<Einstellungsflag)))	//Menue der Einstellungen
    3d8a:	41 15       	cp	r20, r1
    3d8c:	50 43       	sbci	r21, 0x30	; 48
    3d8e:	d9 f5       	brne	.+118    	; 0x3e06 <_Z14eingabehandlerh+0x168>
		{
			anzeige&=~((1<<menueflag)|(1<<Einstellungsflag));
    3d90:	3f 7c       	andi	r19, 0xCF	; 207
    3d92:	30 93 56 03 	sts	0x0356, r19
    3d96:	20 93 55 03 	sts	0x0355, r18
			switch (taste)
    3d9a:	82 33       	cpi	r24, 0x32	; 50
    3d9c:	b1 f0       	breq	.+44     	; 0x3dca <_Z14eingabehandlerh+0x12c>
    3d9e:	18 f4       	brcc	.+6      	; 0x3da6 <_Z14eingabehandlerh+0x108>
    3da0:	81 33       	cpi	r24, 0x31	; 49
    3da2:	31 f0       	breq	.+12     	; 0x3db0 <_Z14eingabehandlerh+0x112>
    3da4:	2a c0       	rjmp	.+84     	; 0x3dfa <_Z14eingabehandlerh+0x15c>
    3da6:	83 33       	cpi	r24, 0x33	; 51
    3da8:	b1 f0       	breq	.+44     	; 0x3dd6 <_Z14eingabehandlerh+0x138>
    3daa:	84 33       	cpi	r24, 0x34	; 52
    3dac:	f9 f0       	breq	.+62     	; 0x3dec <_Z14eingabehandlerh+0x14e>
    3dae:	25 c0       	rjmp	.+74     	; 0x3dfa <_Z14eingabehandlerh+0x15c>
			{
				case '1':
				//zuruecksetzen der Kalibrierung, da passive Kallibrierung eingebaut
				kompass.kallibrierung_ruecksetzen();
    3db0:	83 ea       	ldi	r24, 0xA3	; 163
    3db2:	97 e0       	ldi	r25, 0x07	; 7
    3db4:	81 d7       	rcall	.+3842   	; 0x4cb8 <_ZN7Kompass25kallibrierung_ruecksetzenEv>
				anzeige|=(1<<Kompasflag);
    3db6:	80 91 55 03 	lds	r24, 0x0355
    3dba:	90 91 56 03 	lds	r25, 0x0356
    3dbe:	80 68       	ori	r24, 0x80	; 128
    3dc0:	90 93 56 03 	sts	0x0356, r25
    3dc4:	80 93 55 03 	sts	0x0355, r24
				break;
    3dc8:	08 95       	ret
				case '2':
				//Gaineinstellung fuer den Kompass
				anzeige|=(1<<Kompasgaineinstellenflag);
    3dca:	32 60       	ori	r19, 0x02	; 2
    3dcc:	30 93 56 03 	sts	0x0356, r19
    3dd0:	20 93 55 03 	sts	0x0355, r18
				break;
    3dd4:	08 95       	ret
				case '3':
				//dies ist eine der wenigen Funktinen, die die Handler Strucktur nicht anwenden, da sie die rtc anhaellt
				uhreinstellen();
    3dd6:	62 d8       	rcall	.-3900   	; 0x2e9c <_Z13uhreinstellenv>
				anzeige|=(1<<Uhrflag);
    3dd8:	80 91 55 03 	lds	r24, 0x0355
    3ddc:	90 91 56 03 	lds	r25, 0x0356
    3de0:	82 60       	ori	r24, 0x02	; 2
    3de2:	90 93 56 03 	sts	0x0356, r25
    3de6:	80 93 55 03 	sts	0x0355, r24
				break;
    3dea:	08 95       	ret
				case '4':
				anzeige |= (1<<Einstellungsflag) | (1<<Weckeranzeigeflag);
    3dec:	20 64       	ori	r18, 0x40	; 64
    3dee:	30 61       	ori	r19, 0x10	; 16
    3df0:	30 93 56 03 	sts	0x0356, r19
    3df4:	20 93 55 03 	sts	0x0355, r18
				break;
    3df8:	08 95       	ret
				default:
				//Menueflag neu setzten
				anzeige|=(1<<menueflag)|(1<<Einstellungsflag);
    3dfa:	30 63       	ori	r19, 0x30	; 48
    3dfc:	30 93 56 03 	sts	0x0356, r19
    3e00:	20 93 55 03 	sts	0x0355, r18
				break;
    3e04:	bf c3       	rjmp	.+1918   	; 0x4584 <__stack+0x485>
			}
		}
		else if ((anzeige&(1<<menueflag)))	//nur das grosse menue
    3e06:	35 ff       	sbrs	r19, 5
    3e08:	4e c0       	rjmp	.+156    	; 0x3ea6 <_Z14eingabehandlerh+0x208>
		{
			anzeige&=~(1<<menueflag);
    3e0a:	3f 7d       	andi	r19, 0xDF	; 223
    3e0c:	30 93 56 03 	sts	0x0356, r19
    3e10:	20 93 55 03 	sts	0x0355, r18
			switch (taste)
    3e14:	48 2f       	mov	r20, r24
    3e16:	50 e0       	ldi	r21, 0x00	; 0
    3e18:	fa 01       	movw	r30, r20
    3e1a:	f1 97       	sbiw	r30, 0x31	; 49
    3e1c:	e7 30       	cpi	r30, 0x07	; 7
    3e1e:	f1 05       	cpc	r31, r1
    3e20:	e0 f5       	brcc	.+120    	; 0x3e9a <_Z14eingabehandlerh+0x1fc>
    3e22:	e0 5b       	subi	r30, 0xB0	; 176
    3e24:	ff 4f       	sbci	r31, 0xFF	; 255
    3e26:	0c 94 f8 32 	jmp	0x65f0	; 0x65f0 <__tablejump2__>
			{
				case '1':
				anzeige|=(1<<Fahradflag);
    3e2a:	21 60       	ori	r18, 0x01	; 1
    3e2c:	30 93 56 03 	sts	0x0356, r19
    3e30:	20 93 55 03 	sts	0x0355, r18
				//starten des Timers fuer die geschwindigkeit
				TCCR1B |= ((1<<CS12) | (1<<CS10));
    3e34:	e1 e8       	ldi	r30, 0x81	; 129
    3e36:	f0 e0       	ldi	r31, 0x00	; 0
    3e38:	80 81       	ld	r24, Z
    3e3a:	85 60       	ori	r24, 0x05	; 5
    3e3c:	80 83       	st	Z, r24
				break;
    3e3e:	08 95       	ret
				
				case '2':
				//Wanderanzeige schalten
				anzeige|=(1<<refreshdisplay) | (1<<Wanderflag);
    3e40:	38 68       	ori	r19, 0x88	; 136
    3e42:	30 93 56 03 	sts	0x0356, r19
    3e46:	20 93 55 03 	sts	0x0355, r18
				break;
    3e4a:	08 95       	ret
				
				case '3':
				anzeige|=(1<<Kompasflag);
    3e4c:	20 68       	ori	r18, 0x80	; 128
    3e4e:	30 93 56 03 	sts	0x0356, r19
    3e52:	20 93 55 03 	sts	0x0355, r18
				break;
    3e56:	08 95       	ret
				
				case '4':
				//Menue der Uhr
				anzeige|=(1<<menueflag) | (1<<Uhrflag);
    3e58:	22 60       	ori	r18, 0x02	; 2
    3e5a:	30 62       	ori	r19, 0x20	; 32
    3e5c:	30 93 56 03 	sts	0x0356, r19
    3e60:	20 93 55 03 	sts	0x0355, r18
				break;
    3e64:	08 95       	ret
				
				case '5':
				//menue der Einstellungen
				anzeige|=(1<<menueflag) | (1<<Einstellungsflag);
    3e66:	30 63       	ori	r19, 0x30	; 48
    3e68:	30 93 56 03 	sts	0x0356, r19
    3e6c:	20 93 55 03 	sts	0x0355, r18
				break;
    3e70:	08 95       	ret
				
				case '6':
				//Display ausschalten
				//anzeige=255;
				oled.clearFrame();
    3e72:	83 e8       	ldi	r24, 0x83	; 131
    3e74:	93 e0       	ldi	r25, 0x03	; 3
    3e76:	0e 94 05 03 	call	0x60a	; 0x60a <_ZN7Display10clearFrameEv>
				anzeige|=(1<<refreshdisplay);
    3e7a:	80 91 55 03 	lds	r24, 0x0355
    3e7e:	90 91 56 03 	lds	r25, 0x0356
    3e82:	90 68       	ori	r25, 0x80	; 128
    3e84:	90 93 56 03 	sts	0x0356, r25
    3e88:	80 93 55 03 	sts	0x0355, r24
				break;
    3e8c:	08 95       	ret
				case '7':
				anzeige |= (1<<Druckflag);
    3e8e:	34 60       	ori	r19, 0x04	; 4
    3e90:	30 93 56 03 	sts	0x0356, r19
    3e94:	20 93 55 03 	sts	0x0355, r18
				break;
    3e98:	08 95       	ret
				default:
				//menueflag erneut setzen um abschalten zu verhindern
				anzeige|=(1<<menueflag);
    3e9a:	30 62       	ori	r19, 0x20	; 32
    3e9c:	30 93 56 03 	sts	0x0356, r19
    3ea0:	20 93 55 03 	sts	0x0355, r18
				break;
    3ea4:	6f c3       	rjmp	.+1758   	; 0x4584 <__stack+0x485>
    3ea6:	a9 01       	movw	r20, r18
    3ea8:	40 74       	andi	r20, 0x40	; 64
    3eaa:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag))&&(anzeige&(1<<Weckeranzeigeflag)))
    3eac:	40 34       	cpi	r20, 0x40	; 64
    3eae:	50 41       	sbci	r21, 0x10	; 16
    3eb0:	09 f0       	breq	.+2      	; 0x3eb4 <_Z14eingabehandlerh+0x216>
    3eb2:	68 c0       	rjmp	.+208    	; 0x3f84 <_Z14eingabehandlerh+0x2e6>
		{
			switch (pos)
    3eb4:	40 91 54 03 	lds	r20, 0x0354
    3eb8:	41 30       	cpi	r20, 0x01	; 1
    3eba:	11 f1       	breq	.+68     	; 0x3f00 <_Z14eingabehandlerh+0x262>
    3ebc:	30 f0       	brcs	.+12     	; 0x3eca <_Z14eingabehandlerh+0x22c>
    3ebe:	42 30       	cpi	r20, 0x02	; 2
    3ec0:	79 f1       	breq	.+94     	; 0x3f20 <_Z14eingabehandlerh+0x282>
    3ec2:	43 30       	cpi	r20, 0x03	; 3
    3ec4:	09 f4       	brne	.+2      	; 0x3ec8 <_Z14eingabehandlerh+0x22a>
    3ec6:	3f c0       	rjmp	.+126    	; 0x3f46 <_Z14eingabehandlerh+0x2a8>
    3ec8:	5d c3       	rjmp	.+1722   	; 0x4584 <__stack+0x485>
			{
				case 0:
				rtc.WStunden=0;
    3eca:	10 92 9e 07 	sts	0x079E, r1
				rtc.WMinuten=0;
    3ece:	10 92 9d 07 	sts	0x079D, r1
				rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
    3ed2:	97 7e       	andi	r25, 0xE7	; 231
    3ed4:	92 60       	ori	r25, 0x02	; 2
    3ed6:	90 93 9c 07 	sts	0x079C, r25
				switch (taste)
    3eda:	83 32       	cpi	r24, 0x23	; 35
    3edc:	09 f4       	brne	.+2      	; 0x3ee0 <_Z14eingabehandlerh+0x242>
    3ede:	52 c3       	rjmp	.+1700   	; 0x4584 <__stack+0x485>
    3ee0:	8a 32       	cpi	r24, 0x2A	; 42
    3ee2:	09 f4       	brne	.+2      	; 0x3ee6 <_Z14eingabehandlerh+0x248>
    3ee4:	4f c3       	rjmp	.+1694   	; 0x4584 <__stack+0x485>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden=(taste-'0')*10;
    3ee6:	98 2f       	mov	r25, r24
    3ee8:	99 0f       	add	r25, r25
    3eea:	90 56       	subi	r25, 0x60	; 96
    3eec:	29 2f       	mov	r18, r25
    3eee:	22 0f       	add	r18, r18
    3ef0:	22 0f       	add	r18, r18
    3ef2:	92 0f       	add	r25, r18
    3ef4:	90 93 9e 07 	sts	0x079E, r25
					pos++;
    3ef8:	91 e0       	ldi	r25, 0x01	; 1
    3efa:	90 93 54 03 	sts	0x0354, r25
					break;
    3efe:	42 c3       	rjmp	.+1668   	; 0x4584 <__stack+0x485>
				}
				break;
				case 1:
				switch (taste)
    3f00:	83 32       	cpi	r24, 0x23	; 35
    3f02:	09 f4       	brne	.+2      	; 0x3f06 <_Z14eingabehandlerh+0x268>
    3f04:	3f c3       	rjmp	.+1662   	; 0x4584 <__stack+0x485>
    3f06:	8a 32       	cpi	r24, 0x2A	; 42
    3f08:	09 f4       	brne	.+2      	; 0x3f0c <_Z14eingabehandlerh+0x26e>
    3f0a:	3c c3       	rjmp	.+1656   	; 0x4584 <__stack+0x485>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WStunden+=(taste-'0');
    3f0c:	ee e9       	ldi	r30, 0x9E	; 158
    3f0e:	f7 e0       	ldi	r31, 0x07	; 7
    3f10:	90 81       	ld	r25, Z
    3f12:	90 53       	subi	r25, 0x30	; 48
    3f14:	98 0f       	add	r25, r24
    3f16:	90 83       	st	Z, r25
					pos++;
    3f18:	92 e0       	ldi	r25, 0x02	; 2
    3f1a:	90 93 54 03 	sts	0x0354, r25
					break;
    3f1e:	32 c3       	rjmp	.+1636   	; 0x4584 <__stack+0x485>
				}
				break;
				case 2:
				switch (taste)
    3f20:	83 32       	cpi	r24, 0x23	; 35
    3f22:	09 f4       	brne	.+2      	; 0x3f26 <_Z14eingabehandlerh+0x288>
    3f24:	2f c3       	rjmp	.+1630   	; 0x4584 <__stack+0x485>
    3f26:	8a 32       	cpi	r24, 0x2A	; 42
    3f28:	09 f4       	brne	.+2      	; 0x3f2c <_Z14eingabehandlerh+0x28e>
    3f2a:	2c c3       	rjmp	.+1624   	; 0x4584 <__stack+0x485>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten=(taste-'0')*10;
    3f2c:	98 2f       	mov	r25, r24
    3f2e:	99 0f       	add	r25, r25
    3f30:	90 56       	subi	r25, 0x60	; 96
    3f32:	29 2f       	mov	r18, r25
    3f34:	22 0f       	add	r18, r18
    3f36:	22 0f       	add	r18, r18
    3f38:	92 0f       	add	r25, r18
    3f3a:	90 93 9d 07 	sts	0x079D, r25
					pos++;
    3f3e:	93 e0       	ldi	r25, 0x03	; 3
    3f40:	90 93 54 03 	sts	0x0354, r25
					break;
    3f44:	1f c3       	rjmp	.+1598   	; 0x4584 <__stack+0x485>
				}
				break;
				case 3:
				switch (taste)
    3f46:	83 32       	cpi	r24, 0x23	; 35
    3f48:	41 f0       	breq	.+16     	; 0x3f5a <_Z14eingabehandlerh+0x2bc>
    3f4a:	8a 32       	cpi	r24, 0x2A	; 42
    3f4c:	31 f0       	breq	.+12     	; 0x3f5a <_Z14eingabehandlerh+0x2bc>
					case '#':
					break;
					case '*':
					break;
					default:
					rtc.WMinuten+=(taste-'0');
    3f4e:	ed e9       	ldi	r30, 0x9D	; 157
    3f50:	f7 e0       	ldi	r31, 0x07	; 7
    3f52:	40 81       	ld	r20, Z
    3f54:	40 53       	subi	r20, 0x30	; 48
    3f56:	48 0f       	add	r20, r24
    3f58:	40 83       	st	Z, r20
					pos++;
					break;
				}
				pos=0;
    3f5a:	10 92 54 03 	sts	0x0354, r1
				if (!(rtc.WStunden>=24) && !(rtc.WMinuten>=60))
    3f5e:	40 91 9e 07 	lds	r20, 0x079E
    3f62:	48 31       	cpi	r20, 0x18	; 24
    3f64:	08 f0       	brcs	.+2      	; 0x3f68 <_Z14eingabehandlerh+0x2ca>
    3f66:	0e c3       	rjmp	.+1564   	; 0x4584 <__stack+0x485>
    3f68:	40 91 9d 07 	lds	r20, 0x079D
    3f6c:	4c 33       	cpi	r20, 0x3C	; 60
    3f6e:	08 f0       	brcs	.+2      	; 0x3f72 <_Z14eingabehandlerh+0x2d4>
    3f70:	09 c3       	rjmp	.+1554   	; 0x4584 <__stack+0x485>
				{
					anzeige&=~(1<<Einstellungsflag);
    3f72:	3f 7e       	andi	r19, 0xEF	; 239
    3f74:	30 93 56 03 	sts	0x0356, r19
    3f78:	20 93 55 03 	sts	0x0355, r18
					rtc.interupts|=(1<<Weckerein);
					rtc.interupts|=(1<<minuteninterupt);
    3f7c:	9e 60       	ori	r25, 0x0E	; 14
    3f7e:	90 93 9c 07 	sts	0x079C, r25
    3f82:	00 c3       	rjmp	.+1536   	; 0x4584 <__stack+0x485>
				}
				break;
			}
		}
		else if ((anzeige&(1<<Kompasgaineinstellenflag)))
    3f84:	31 ff       	sbrs	r19, 1
    3f86:	4a c0       	rjmp	.+148    	; 0x401c <_Z14eingabehandlerh+0x37e>
		{
			anzeige&=~(1<<Kompasgaineinstellenflag);
    3f88:	a9 01       	movw	r20, r18
    3f8a:	5d 7f       	andi	r21, 0xFD	; 253
			anzeige|=(1<<Kompasflag);
    3f8c:	40 68       	ori	r20, 0x80	; 128
    3f8e:	50 93 56 03 	sts	0x0356, r21
    3f92:	40 93 55 03 	sts	0x0355, r20
			switch (taste) {
    3f96:	48 2f       	mov	r20, r24
    3f98:	50 e0       	ldi	r21, 0x00	; 0
    3f9a:	fa 01       	movw	r30, r20
    3f9c:	f1 97       	sbiw	r30, 0x31	; 49
    3f9e:	e8 30       	cpi	r30, 0x08	; 8
    3fa0:	f1 05       	cpc	r31, r1
    3fa2:	a0 f5       	brcc	.+104    	; 0x400c <_Z14eingabehandlerh+0x36e>
    3fa4:	e9 5a       	subi	r30, 0xA9	; 169
    3fa6:	ff 4f       	sbci	r31, 0xFF	; 255
    3fa8:	0c 94 f8 32 	jmp	0x65f0	; 0x65f0 <__tablejump2__>
				case '1':
				kompass.HMC5883L_command(0x01,HMCGAIN1370);
    3fac:	40 e0       	ldi	r20, 0x00	; 0
    3fae:	61 e0       	ldi	r22, 0x01	; 1
    3fb0:	83 ea       	ldi	r24, 0xA3	; 163
    3fb2:	97 e0       	ldi	r25, 0x07	; 7
    3fb4:	61 c4       	rjmp	.+2242   	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fb6:	08 95       	ret
				case '2':
				kompass.HMC5883L_command(0x01,HMCGAIN1090);
    3fb8:	40 e2       	ldi	r20, 0x20	; 32
    3fba:	61 e0       	ldi	r22, 0x01	; 1
    3fbc:	83 ea       	ldi	r24, 0xA3	; 163
    3fbe:	97 e0       	ldi	r25, 0x07	; 7
    3fc0:	5b c4       	rjmp	.+2230   	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fc2:	08 95       	ret
				case '3':
				kompass.HMC5883L_command(0x01,HMCGAIN820);
    3fc4:	40 e4       	ldi	r20, 0x40	; 64
    3fc6:	61 e0       	ldi	r22, 0x01	; 1
    3fc8:	83 ea       	ldi	r24, 0xA3	; 163
    3fca:	97 e0       	ldi	r25, 0x07	; 7
    3fcc:	55 c4       	rjmp	.+2218   	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fce:	08 95       	ret
				case '4':
				kompass.HMC5883L_command(0x01,HMCGAIN660);
    3fd0:	40 e6       	ldi	r20, 0x60	; 96
    3fd2:	61 e0       	ldi	r22, 0x01	; 1
    3fd4:	83 ea       	ldi	r24, 0xA3	; 163
    3fd6:	97 e0       	ldi	r25, 0x07	; 7
    3fd8:	4f c4       	rjmp	.+2206   	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fda:	08 95       	ret
				case '5':
				kompass.HMC5883L_command(0x01,HMCGAIN440);
    3fdc:	40 e8       	ldi	r20, 0x80	; 128
    3fde:	61 e0       	ldi	r22, 0x01	; 1
    3fe0:	83 ea       	ldi	r24, 0xA3	; 163
    3fe2:	97 e0       	ldi	r25, 0x07	; 7
    3fe4:	49 c4       	rjmp	.+2194   	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3fe6:	08 95       	ret
				case '6':
				kompass.HMC5883L_command(0x01,HMCGAIN390);
    3fe8:	40 ea       	ldi	r20, 0xA0	; 160
    3fea:	61 e0       	ldi	r22, 0x01	; 1
    3fec:	83 ea       	ldi	r24, 0xA3	; 163
    3fee:	97 e0       	ldi	r25, 0x07	; 7
    3ff0:	43 c4       	rjmp	.+2182   	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3ff2:	08 95       	ret
				case '7':
				kompass.HMC5883L_command(0x01,HMCGAIN330);
    3ff4:	40 ec       	ldi	r20, 0xC0	; 192
    3ff6:	61 e0       	ldi	r22, 0x01	; 1
    3ff8:	83 ea       	ldi	r24, 0xA3	; 163
    3ffa:	97 e0       	ldi	r25, 0x07	; 7
    3ffc:	3d c4       	rjmp	.+2170   	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    3ffe:	08 95       	ret
				case '8':
				kompass.HMC5883L_command(0x01,HMCGAIN230);
    4000:	40 ee       	ldi	r20, 0xE0	; 224
    4002:	61 e0       	ldi	r22, 0x01	; 1
    4004:	83 ea       	ldi	r24, 0xA3	; 163
    4006:	97 e0       	ldi	r25, 0x07	; 7
    4008:	37 c4       	rjmp	.+2158   	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
				break;
    400a:	08 95       	ret
				default:
				anzeige &=~(1<<Kompasflag);
    400c:	2f 77       	andi	r18, 0x7F	; 127
    400e:	3d 7f       	andi	r19, 0xFD	; 253
				anzeige|=(1<<Kompasgaineinstellenflag);
    4010:	32 60       	ori	r19, 0x02	; 2
    4012:	30 93 56 03 	sts	0x0356, r19
    4016:	20 93 55 03 	sts	0x0355, r18
				break;
    401a:	b4 c2       	rjmp	.+1384   	; 0x4584 <__stack+0x485>
    401c:	a9 01       	movw	r20, r18
    401e:	44 70       	andi	r20, 0x04	; 4
    4020:	50 71       	andi	r21, 0x10	; 16
			}
		}
		else if ((anzeige&(1<<Einstellungsflag)) && (anzeige&(1<<Timerflag)))
    4022:	44 30       	cpi	r20, 0x04	; 4
    4024:	50 41       	sbci	r21, 0x10	; 16
    4026:	09 f0       	breq	.+2      	; 0x402a <_Z14eingabehandlerh+0x38c>
    4028:	60 c1       	rjmp	.+704    	; 0x42ea <__stack+0x1eb>
		{
			switch (pos)
    402a:	40 91 54 03 	lds	r20, 0x0354
    402e:	42 30       	cpi	r20, 0x02	; 2
    4030:	09 f4       	brne	.+2      	; 0x4034 <_Z14eingabehandlerh+0x396>
    4032:	6d c0       	rjmp	.+218    	; 0x410e <__stack+0xf>
    4034:	28 f4       	brcc	.+10     	; 0x4040 <_Z14eingabehandlerh+0x3a2>
    4036:	44 23       	and	r20, r20
    4038:	61 f0       	breq	.+24     	; 0x4052 <_Z14eingabehandlerh+0x3b4>
    403a:	41 30       	cpi	r20, 0x01	; 1
    403c:	d9 f1       	breq	.+118    	; 0x40b4 <_Z14eingabehandlerh+0x416>
    403e:	a2 c2       	rjmp	.+1348   	; 0x4584 <__stack+0x485>
    4040:	44 30       	cpi	r20, 0x04	; 4
    4042:	09 f4       	brne	.+2      	; 0x4046 <_Z14eingabehandlerh+0x3a8>
    4044:	d1 c0       	rjmp	.+418    	; 0x41e8 <__stack+0xe9>
    4046:	08 f4       	brcc	.+2      	; 0x404a <_Z14eingabehandlerh+0x3ac>
    4048:	9a c0       	rjmp	.+308    	; 0x417e <__stack+0x7f>
    404a:	45 30       	cpi	r20, 0x05	; 5
    404c:	09 f4       	brne	.+2      	; 0x4050 <_Z14eingabehandlerh+0x3b2>
    404e:	04 c1       	rjmp	.+520    	; 0x4258 <__stack+0x159>
    4050:	99 c2       	rjmp	.+1330   	; 0x4584 <__stack+0x485>
			{
				case 0:
					switch (taste)
    4052:	83 32       	cpi	r24, 0x23	; 35
    4054:	19 f0       	breq	.+6      	; 0x405c <_Z14eingabehandlerh+0x3be>
    4056:	8a 32       	cpi	r24, 0x2A	; 42
    4058:	41 f0       	breq	.+16     	; 0x406a <_Z14eingabehandlerh+0x3cc>
    405a:	1a c0       	rjmp	.+52     	; 0x4090 <_Z14eingabehandlerh+0x3f2>
					{
						case '#':
							pos=0;
    405c:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    4060:	10 92 a0 07 	sts	0x07A0, r1
    4064:	10 92 9f 07 	sts	0x079F, r1
							break;
    4068:	08 95       	ret
						case '*':
							pos=0;
    406a:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    406e:	ef e9       	ldi	r30, 0x9F	; 159
    4070:	f7 e0       	ldi	r31, 0x07	; 7
    4072:	40 81       	ld	r20, Z
    4074:	51 81       	ldd	r21, Z+1	; 0x01
    4076:	4f 5f       	subi	r20, 0xFF	; 255
    4078:	5f 4f       	sbci	r21, 0xFF	; 255
    407a:	51 83       	std	Z+1, r21	; 0x01
    407c:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    407e:	3f 7e       	andi	r19, 0xEF	; 239
    4080:	30 93 56 03 	sts	0x0356, r19
    4084:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    4088:	92 62       	ori	r25, 0x22	; 34
    408a:	90 93 9c 07 	sts	0x079C, r25
							break;
    408e:	9e c2       	rjmp	.+1340   	; 0x45cc <__stack+0x4cd>
						default:
						rtc.Timerzahler=(taste-'0')*10;
    4090:	48 2f       	mov	r20, r24
    4092:	50 e0       	ldi	r21, 0x00	; 0
    4094:	40 53       	subi	r20, 0x30	; 48
    4096:	51 09       	sbc	r21, r1
    4098:	9a e0       	ldi	r25, 0x0A	; 10
    409a:	94 9f       	mul	r25, r20
    409c:	90 01       	movw	r18, r0
    409e:	95 9f       	mul	r25, r21
    40a0:	30 0d       	add	r19, r0
    40a2:	11 24       	eor	r1, r1
    40a4:	30 93 a0 07 	sts	0x07A0, r19
    40a8:	20 93 9f 07 	sts	0x079F, r18
						pos++;
    40ac:	91 e0       	ldi	r25, 0x01	; 1
    40ae:	90 93 54 03 	sts	0x0354, r25
						break;
    40b2:	68 c2       	rjmp	.+1232   	; 0x4584 <__stack+0x485>
					}
					break;
				case 1:
					switch (taste)
    40b4:	83 32       	cpi	r24, 0x23	; 35
    40b6:	19 f0       	breq	.+6      	; 0x40be <_Z14eingabehandlerh+0x420>
    40b8:	8a 32       	cpi	r24, 0x2A	; 42
    40ba:	41 f0       	breq	.+16     	; 0x40cc <_Z14eingabehandlerh+0x42e>
    40bc:	1a c0       	rjmp	.+52     	; 0x40f2 <_Z14eingabehandlerh+0x454>
					{
						case '#':
							pos=0;
    40be:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    40c2:	10 92 a0 07 	sts	0x07A0, r1
    40c6:	10 92 9f 07 	sts	0x079F, r1
							break;
    40ca:	08 95       	ret
						case '*':
							pos=0;
    40cc:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    40d0:	ef e9       	ldi	r30, 0x9F	; 159
    40d2:	f7 e0       	ldi	r31, 0x07	; 7
    40d4:	40 81       	ld	r20, Z
    40d6:	51 81       	ldd	r21, Z+1	; 0x01
    40d8:	4f 5f       	subi	r20, 0xFF	; 255
    40da:	5f 4f       	sbci	r21, 0xFF	; 255
    40dc:	51 83       	std	Z+1, r21	; 0x01
    40de:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    40e0:	3f 7e       	andi	r19, 0xEF	; 239
    40e2:	30 93 56 03 	sts	0x0356, r19
    40e6:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    40ea:	92 62       	ori	r25, 0x22	; 34
    40ec:	90 93 9c 07 	sts	0x079C, r25
							break;
    40f0:	6d c2       	rjmp	.+1242   	; 0x45cc <__stack+0x4cd>
						default:
						rtc.Timerzahler+=(taste-'0');
    40f2:	ef e9       	ldi	r30, 0x9F	; 159
    40f4:	f7 e0       	ldi	r31, 0x07	; 7
    40f6:	20 81       	ld	r18, Z
    40f8:	31 81       	ldd	r19, Z+1	; 0x01
    40fa:	20 53       	subi	r18, 0x30	; 48
    40fc:	31 09       	sbc	r19, r1
    40fe:	28 0f       	add	r18, r24
    4100:	31 1d       	adc	r19, r1
    4102:	31 83       	std	Z+1, r19	; 0x01
    4104:	20 83       	st	Z, r18
						pos++;
    4106:	92 e0       	ldi	r25, 0x02	; 2
    4108:	90 93 54 03 	sts	0x0354, r25
						break;
    410c:	3b c2       	rjmp	.+1142   	; 0x4584 <__stack+0x485>
					}
					break;
				case 2:
					switch (taste)
    410e:	83 32       	cpi	r24, 0x23	; 35
    4110:	19 f0       	breq	.+6      	; 0x4118 <__stack+0x19>
    4112:	8a 32       	cpi	r24, 0x2A	; 42
    4114:	41 f0       	breq	.+16     	; 0x4126 <__stack+0x27>
    4116:	1a c0       	rjmp	.+52     	; 0x414c <__stack+0x4d>
					{
						case '#':
							pos=0;
    4118:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    411c:	10 92 a0 07 	sts	0x07A0, r1
    4120:	10 92 9f 07 	sts	0x079F, r1
							break;
    4124:	08 95       	ret
						case '*':
							pos=0;
    4126:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    412a:	ef e9       	ldi	r30, 0x9F	; 159
    412c:	f7 e0       	ldi	r31, 0x07	; 7
    412e:	40 81       	ld	r20, Z
    4130:	51 81       	ldd	r21, Z+1	; 0x01
    4132:	4f 5f       	subi	r20, 0xFF	; 255
    4134:	5f 4f       	sbci	r21, 0xFF	; 255
    4136:	51 83       	std	Z+1, r21	; 0x01
    4138:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    413a:	3f 7e       	andi	r19, 0xEF	; 239
    413c:	30 93 56 03 	sts	0x0356, r19
    4140:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);;
    4144:	92 62       	ori	r25, 0x22	; 34
    4146:	90 93 9c 07 	sts	0x079C, r25
							break;
    414a:	40 c2       	rjmp	.+1152   	; 0x45cc <__stack+0x4cd>
						default:
						rtc.Timerzahler+=(taste-'0')*10*60;
    414c:	ef e9       	ldi	r30, 0x9F	; 159
    414e:	f7 e0       	ldi	r31, 0x07	; 7
    4150:	68 2f       	mov	r22, r24
    4152:	70 e0       	ldi	r23, 0x00	; 0
    4154:	60 53       	subi	r22, 0x30	; 48
    4156:	71 09       	sbc	r23, r1
    4158:	28 e5       	ldi	r18, 0x58	; 88
    415a:	32 e0       	ldi	r19, 0x02	; 2
    415c:	62 9f       	mul	r22, r18
    415e:	a0 01       	movw	r20, r0
    4160:	63 9f       	mul	r22, r19
    4162:	50 0d       	add	r21, r0
    4164:	72 9f       	mul	r23, r18
    4166:	50 0d       	add	r21, r0
    4168:	11 24       	eor	r1, r1
    416a:	20 81       	ld	r18, Z
    416c:	31 81       	ldd	r19, Z+1	; 0x01
    416e:	24 0f       	add	r18, r20
    4170:	35 1f       	adc	r19, r21
    4172:	31 83       	std	Z+1, r19	; 0x01
    4174:	20 83       	st	Z, r18
						pos++;
    4176:	93 e0       	ldi	r25, 0x03	; 3
    4178:	90 93 54 03 	sts	0x0354, r25
						break;
    417c:	03 c2       	rjmp	.+1030   	; 0x4584 <__stack+0x485>
					}
					break;
				case 3:
					switch (taste)
    417e:	83 32       	cpi	r24, 0x23	; 35
    4180:	19 f0       	breq	.+6      	; 0x4188 <__stack+0x89>
    4182:	8a 32       	cpi	r24, 0x2A	; 42
    4184:	41 f0       	breq	.+16     	; 0x4196 <__stack+0x97>
    4186:	1a c0       	rjmp	.+52     	; 0x41bc <__stack+0xbd>
					{
						case '#':
							pos=0;
    4188:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    418c:	10 92 a0 07 	sts	0x07A0, r1
    4190:	10 92 9f 07 	sts	0x079F, r1
							break;
    4194:	08 95       	ret
						case '*':
							pos=0;
    4196:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    419a:	ef e9       	ldi	r30, 0x9F	; 159
    419c:	f7 e0       	ldi	r31, 0x07	; 7
    419e:	40 81       	ld	r20, Z
    41a0:	51 81       	ldd	r21, Z+1	; 0x01
    41a2:	4f 5f       	subi	r20, 0xFF	; 255
    41a4:	5f 4f       	sbci	r21, 0xFF	; 255
    41a6:	51 83       	std	Z+1, r21	; 0x01
    41a8:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    41aa:	3f 7e       	andi	r19, 0xEF	; 239
    41ac:	30 93 56 03 	sts	0x0356, r19
    41b0:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    41b4:	92 62       	ori	r25, 0x22	; 34
    41b6:	90 93 9c 07 	sts	0x079C, r25
							break;
    41ba:	08 c2       	rjmp	.+1040   	; 0x45cc <__stack+0x4cd>
						default:
						rtc.Timerzahler+=(taste-'0')*60;
    41bc:	ef e9       	ldi	r30, 0x9F	; 159
    41be:	f7 e0       	ldi	r31, 0x07	; 7
    41c0:	28 2f       	mov	r18, r24
    41c2:	30 e0       	ldi	r19, 0x00	; 0
    41c4:	20 53       	subi	r18, 0x30	; 48
    41c6:	31 09       	sbc	r19, r1
    41c8:	9c e3       	ldi	r25, 0x3C	; 60
    41ca:	92 9f       	mul	r25, r18
    41cc:	a0 01       	movw	r20, r0
    41ce:	93 9f       	mul	r25, r19
    41d0:	50 0d       	add	r21, r0
    41d2:	11 24       	eor	r1, r1
    41d4:	20 81       	ld	r18, Z
    41d6:	31 81       	ldd	r19, Z+1	; 0x01
    41d8:	24 0f       	add	r18, r20
    41da:	35 1f       	adc	r19, r21
    41dc:	31 83       	std	Z+1, r19	; 0x01
    41de:	20 83       	st	Z, r18
						pos++;
    41e0:	94 e0       	ldi	r25, 0x04	; 4
    41e2:	90 93 54 03 	sts	0x0354, r25
						break;
    41e6:	ce c1       	rjmp	.+924    	; 0x4584 <__stack+0x485>
					}
					break;
				case 4:
					switch (taste)
    41e8:	83 32       	cpi	r24, 0x23	; 35
    41ea:	19 f0       	breq	.+6      	; 0x41f2 <__stack+0xf3>
    41ec:	8a 32       	cpi	r24, 0x2A	; 42
    41ee:	41 f0       	breq	.+16     	; 0x4200 <__stack+0x101>
    41f0:	1a c0       	rjmp	.+52     	; 0x4226 <__stack+0x127>
					{
						case '#':
							pos=0;
    41f2:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler=0;
    41f6:	10 92 a0 07 	sts	0x07A0, r1
    41fa:	10 92 9f 07 	sts	0x079F, r1
							break;
    41fe:	08 95       	ret
						case '*':
							pos=0;
    4200:	10 92 54 03 	sts	0x0354, r1
							rtc.Timerzahler++;
    4204:	ef e9       	ldi	r30, 0x9F	; 159
    4206:	f7 e0       	ldi	r31, 0x07	; 7
    4208:	40 81       	ld	r20, Z
    420a:	51 81       	ldd	r21, Z+1	; 0x01
    420c:	4f 5f       	subi	r20, 0xFF	; 255
    420e:	5f 4f       	sbci	r21, 0xFF	; 255
    4210:	51 83       	std	Z+1, r21	; 0x01
    4212:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    4214:	3f 7e       	andi	r19, 0xEF	; 239
    4216:	30 93 56 03 	sts	0x0356, r19
    421a:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    421e:	92 62       	ori	r25, 0x22	; 34
    4220:	90 93 9c 07 	sts	0x079C, r25
							break;
    4224:	d3 c1       	rjmp	.+934    	; 0x45cc <__stack+0x4cd>
						default:
						rtc.Timerzahler+=(taste-'0')*10*3600;
    4226:	ef e9       	ldi	r30, 0x9F	; 159
    4228:	f7 e0       	ldi	r31, 0x07	; 7
    422a:	68 2f       	mov	r22, r24
    422c:	70 e0       	ldi	r23, 0x00	; 0
    422e:	60 53       	subi	r22, 0x30	; 48
    4230:	71 09       	sbc	r23, r1
    4232:	20 ea       	ldi	r18, 0xA0	; 160
    4234:	3c e8       	ldi	r19, 0x8C	; 140
    4236:	62 9f       	mul	r22, r18
    4238:	a0 01       	movw	r20, r0
    423a:	63 9f       	mul	r22, r19
    423c:	50 0d       	add	r21, r0
    423e:	72 9f       	mul	r23, r18
    4240:	50 0d       	add	r21, r0
    4242:	11 24       	eor	r1, r1
    4244:	20 81       	ld	r18, Z
    4246:	31 81       	ldd	r19, Z+1	; 0x01
    4248:	24 0f       	add	r18, r20
    424a:	35 1f       	adc	r19, r21
    424c:	31 83       	std	Z+1, r19	; 0x01
    424e:	20 83       	st	Z, r18
						pos++;
    4250:	95 e0       	ldi	r25, 0x05	; 5
    4252:	90 93 54 03 	sts	0x0354, r25
						break;
    4256:	96 c1       	rjmp	.+812    	; 0x4584 <__stack+0x485>
					}
					break;
				case 5:
					switch (taste)
    4258:	83 32       	cpi	r24, 0x23	; 35
    425a:	19 f0       	breq	.+6      	; 0x4262 <__stack+0x163>
    425c:	8a 32       	cpi	r24, 0x2A	; 42
    425e:	31 f0       	breq	.+12     	; 0x426c <__stack+0x16d>
    4260:	16 c0       	rjmp	.+44     	; 0x428e <__stack+0x18f>
					{
						case '#':
							pos=0;
							rtc.Timerzahler=0;
    4262:	10 92 a0 07 	sts	0x07A0, r1
    4266:	10 92 9f 07 	sts	0x079F, r1
							break;
    426a:	26 c0       	rjmp	.+76     	; 0x42b8 <__stack+0x1b9>
						case '*':
							pos=0;
							rtc.Timerzahler++;
    426c:	ef e9       	ldi	r30, 0x9F	; 159
    426e:	f7 e0       	ldi	r31, 0x07	; 7
    4270:	40 81       	ld	r20, Z
    4272:	51 81       	ldd	r21, Z+1	; 0x01
    4274:	4f 5f       	subi	r20, 0xFF	; 255
    4276:	5f 4f       	sbci	r21, 0xFF	; 255
    4278:	51 83       	std	Z+1, r21	; 0x01
    427a:	40 83       	st	Z, r20
							anzeige&=~(1<<Einstellungsflag);
    427c:	3f 7e       	andi	r19, 0xEF	; 239
    427e:	30 93 56 03 	sts	0x0356, r19
    4282:	20 93 55 03 	sts	0x0355, r18
							rtc.interupts|=(1<<Timerlauft);
    4286:	92 62       	ori	r25, 0x22	; 34
    4288:	90 93 9c 07 	sts	0x079C, r25
							break;
    428c:	15 c0       	rjmp	.+42     	; 0x42b8 <__stack+0x1b9>
						default:
						rtc.Timerzahler+=(taste-'0')*3600;
    428e:	ef e9       	ldi	r30, 0x9F	; 159
    4290:	f7 e0       	ldi	r31, 0x07	; 7
    4292:	68 2f       	mov	r22, r24
    4294:	70 e0       	ldi	r23, 0x00	; 0
    4296:	60 53       	subi	r22, 0x30	; 48
    4298:	71 09       	sbc	r23, r1
    429a:	20 e1       	ldi	r18, 0x10	; 16
    429c:	3e e0       	ldi	r19, 0x0E	; 14
    429e:	62 9f       	mul	r22, r18
    42a0:	a0 01       	movw	r20, r0
    42a2:	63 9f       	mul	r22, r19
    42a4:	50 0d       	add	r21, r0
    42a6:	72 9f       	mul	r23, r18
    42a8:	50 0d       	add	r21, r0
    42aa:	11 24       	eor	r1, r1
    42ac:	20 81       	ld	r18, Z
    42ae:	31 81       	ldd	r19, Z+1	; 0x01
    42b0:	24 0f       	add	r18, r20
    42b2:	35 1f       	adc	r19, r21
    42b4:	31 83       	std	Z+1, r19	; 0x01
    42b6:	20 83       	st	Z, r18
						pos++;
						break;
					}
					pos=0;
    42b8:	10 92 54 03 	sts	0x0354, r1
					rtc.Timerzahler++;
    42bc:	ef e9       	ldi	r30, 0x9F	; 159
    42be:	f7 e0       	ldi	r31, 0x07	; 7
    42c0:	20 81       	ld	r18, Z
    42c2:	31 81       	ldd	r19, Z+1	; 0x01
    42c4:	2f 5f       	subi	r18, 0xFF	; 255
    42c6:	3f 4f       	sbci	r19, 0xFF	; 255
    42c8:	31 83       	std	Z+1, r19	; 0x01
    42ca:	20 83       	st	Z, r18
					anzeige&=~(1<<Einstellungsflag);
    42cc:	20 91 55 03 	lds	r18, 0x0355
    42d0:	30 91 56 03 	lds	r19, 0x0356
    42d4:	3f 7e       	andi	r19, 0xEF	; 239
    42d6:	30 93 56 03 	sts	0x0356, r19
    42da:	20 93 55 03 	sts	0x0355, r18
					rtc.interupts|=(1<<Timerlauft);
    42de:	ec e9       	ldi	r30, 0x9C	; 156
    42e0:	f7 e0       	ldi	r31, 0x07	; 7
    42e2:	90 81       	ld	r25, Z
    42e4:	90 62       	ori	r25, 0x20	; 32
    42e6:	90 83       	st	Z, r25
					break;
    42e8:	4d c1       	rjmp	.+666    	; 0x4584 <__stack+0x485>
				default:
					break;
			}
		}
		else if ((anzeige&(1<<Stoppuhrflag)))
    42ea:	23 ff       	sbrs	r18, 3
    42ec:	22 c0       	rjmp	.+68     	; 0x4332 <__stack+0x233>
		{
			if (taste=='*')
    42ee:	8a 32       	cpi	r24, 0x2A	; 42
    42f0:	59 f4       	brne	.+22     	; 0x4308 <__stack+0x209>
			{
				if ((rtc.interupts&(1<<Stoppuhrlauft)))
    42f2:	96 ff       	sbrs	r25, 6
    42f4:	05 c0       	rjmp	.+10     	; 0x4300 <__stack+0x201>
				{
					rtc.interupts&=~(1<<Stoppuhrlauft);
    42f6:	9f 7b       	andi	r25, 0xBF	; 191
    42f8:	92 60       	ori	r25, 0x02	; 2
    42fa:	90 93 9c 07 	sts	0x079C, r25
    42fe:	66 c1       	rjmp	.+716    	; 0x45cc <__stack+0x4cd>
				}
				else{
					rtc.interupts|=(1<<Stoppuhrlauft);
    4300:	92 64       	ori	r25, 0x42	; 66
    4302:	90 93 9c 07 	sts	0x079C, r25
    4306:	62 c1       	rjmp	.+708    	; 0x45cc <__stack+0x4cd>
				}
			}
			else if (taste=='0')
    4308:	80 33       	cpi	r24, 0x30	; 48
    430a:	29 f4       	brne	.+10     	; 0x4316 <__stack+0x217>
			{
				rtc.Stoppuhrzahler=0;
    430c:	10 92 a2 07 	sts	0x07A2, r1
    4310:	10 92 a1 07 	sts	0x07A1, r1
    4314:	08 95       	ret
			}
			else if (taste=='#')
    4316:	83 32       	cpi	r24, 0x23	; 35
    4318:	09 f0       	breq	.+2      	; 0x431c <__stack+0x21d>
    431a:	5e c1       	rjmp	.+700    	; 0x45d8 <__stack+0x4d9>
			{
				anzeige&=~((1<<Stoppuhrflag));
				rtc.interupts&=~(1<<Stoppuhrlauft);
    431c:	9f 7b       	andi	r25, 0xBF	; 191
    431e:	92 60       	ori	r25, 0x02	; 2
    4320:	90 93 9c 07 	sts	0x079C, r25
			{
				rtc.Stoppuhrzahler=0;
			}
			else if (taste=='#')
			{
				anzeige&=~((1<<Stoppuhrflag));
    4324:	27 7f       	andi	r18, 0xF7	; 247
				rtc.interupts&=~(1<<Stoppuhrlauft);
				anzeige|=(1<<menueflag);
    4326:	30 62       	ori	r19, 0x20	; 32
    4328:	30 93 56 03 	sts	0x0356, r19
    432c:	20 93 55 03 	sts	0x0355, r18
    4330:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflag)))
    4332:	21 ff       	sbrs	r18, 1
    4334:	26 c0       	rjmp	.+76     	; 0x4382 <__stack+0x283>
		{
			if (taste=='#')
    4336:	83 32       	cpi	r24, 0x23	; 35
    4338:	49 f4       	brne	.+18     	; 0x434c <__stack+0x24d>
			{
				pos=0;
    433a:	10 92 54 03 	sts	0x0354, r1
				anzeige&=~(1<<Uhrflag);
    433e:	2d 7f       	andi	r18, 0xFD	; 253
				anzeige|=(1<<menueflag);
    4340:	30 62       	ori	r19, 0x20	; 32
    4342:	30 93 56 03 	sts	0x0356, r19
    4346:	20 93 55 03 	sts	0x0355, r18
    434a:	08 95       	ret
			}
			else if (taste=='*')
    434c:	8a 32       	cpi	r24, 0x2A	; 42
    434e:	49 f4       	brne	.+18     	; 0x4362 <__stack+0x263>
			{
				pos++;
    4350:	80 91 54 03 	lds	r24, 0x0354
    4354:	8f 5f       	subi	r24, 0xFF	; 255
				if (pos>1)
    4356:	82 30       	cpi	r24, 0x02	; 2
    4358:	08 f4       	brcc	.+2      	; 0x435c <__stack+0x25d>
    435a:	36 c1       	rjmp	.+620    	; 0x45c8 <__stack+0x4c9>
				{
					pos=0;
    435c:	10 92 54 03 	sts	0x0354, r1
    4360:	35 c1       	rjmp	.+618    	; 0x45cc <__stack+0x4cd>
				}
			}
			else if (taste=='0')
    4362:	80 33       	cpi	r24, 0x30	; 48
    4364:	09 f0       	breq	.+2      	; 0x4368 <__stack+0x269>
    4366:	38 c1       	rjmp	.+624    	; 0x45d8 <__stack+0x4d9>
			{
				if (LED.ison())
    4368:	80 e8       	ldi	r24, 0x80	; 128
    436a:	93 e0       	ldi	r25, 0x03	; 3
    436c:	81 d6       	rcall	.+3330   	; 0x5070 <_ZN6Output4isonEv>
    436e:	88 23       	and	r24, r24
    4370:	21 f0       	breq	.+8      	; 0x437a <__stack+0x27b>
				{
					LED.off();
    4372:	80 e8       	ldi	r24, 0x80	; 128
    4374:	93 e0       	ldi	r25, 0x03	; 3
    4376:	bf c6       	rjmp	.+3454   	; 0x50f6 <_ZN6Output3offEv>
    4378:	08 95       	ret
				}
				else{
					LED.on();
    437a:	80 e8       	ldi	r24, 0x80	; 128
    437c:	93 e0       	ldi	r25, 0x03	; 3
    437e:	2f c6       	rjmp	.+3166   	; 0x4fde <_ZN6Output2onEv>
    4380:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Kompasflag)))
    4382:	27 ff       	sbrs	r18, 7
    4384:	1a c0       	rjmp	.+52     	; 0x43ba <__stack+0x2bb>
		{
			if (taste=='#')
    4386:	83 32       	cpi	r24, 0x23	; 35
    4388:	41 f4       	brne	.+16     	; 0x439a <__stack+0x29b>
			{
				anzeige&=~(1<<Kompasflag);
    438a:	c9 01       	movw	r24, r18
    438c:	8f 77       	andi	r24, 0x7F	; 127
				anzeige|=(1<<menueflag);
    438e:	90 62       	ori	r25, 0x20	; 32
    4390:	90 93 56 03 	sts	0x0356, r25
    4394:	80 93 55 03 	sts	0x0355, r24
    4398:	08 95       	ret
			}
			else if (taste=='0')
    439a:	80 33       	cpi	r24, 0x30	; 48
    439c:	09 f0       	breq	.+2      	; 0x43a0 <__stack+0x2a1>
    439e:	f2 c0       	rjmp	.+484    	; 0x4584 <__stack+0x485>
			{
				if (LED.ison())
    43a0:	80 e8       	ldi	r24, 0x80	; 128
    43a2:	93 e0       	ldi	r25, 0x03	; 3
    43a4:	65 d6       	rcall	.+3274   	; 0x5070 <_ZN6Output4isonEv>
    43a6:	88 23       	and	r24, r24
    43a8:	21 f0       	breq	.+8      	; 0x43b2 <__stack+0x2b3>
				{
					LED.off();
    43aa:	80 e8       	ldi	r24, 0x80	; 128
    43ac:	93 e0       	ldi	r25, 0x03	; 3
    43ae:	a3 c6       	rjmp	.+3398   	; 0x50f6 <_ZN6Output3offEv>
    43b0:	08 95       	ret
				}
				else{
					LED.on();
    43b2:	80 e8       	ldi	r24, 0x80	; 128
    43b4:	93 e0       	ldi	r25, 0x03	; 3
    43b6:	13 c6       	rjmp	.+3110   	; 0x4fde <_ZN6Output2onEv>
    43b8:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Fahradflag)))
    43ba:	20 ff       	sbrs	r18, 0
    43bc:	3a c0       	rjmp	.+116    	; 0x4432 <__stack+0x333>
		{
			if (taste=='#')
    43be:	83 32       	cpi	r24, 0x23	; 35
    43c0:	69 f4       	brne	.+26     	; 0x43dc <__stack+0x2dd>
			{
				anzeige&=~(1<<Fahradflag);
    43c2:	c9 01       	movw	r24, r18
    43c4:	8e 7f       	andi	r24, 0xFE	; 254
				anzeige|=(1<<menueflag);
    43c6:	90 62       	ori	r25, 0x20	; 32
    43c8:	90 93 56 03 	sts	0x0356, r25
    43cc:	80 93 55 03 	sts	0x0355, r24
				TCCR1B &= ~((1<<CS12) | (1<<CS10));
    43d0:	e1 e8       	ldi	r30, 0x81	; 129
    43d2:	f0 e0       	ldi	r31, 0x00	; 0
    43d4:	80 81       	ld	r24, Z
    43d6:	8a 7f       	andi	r24, 0xFA	; 250
    43d8:	80 83       	st	Z, r24
    43da:	08 95       	ret
			}
			else if (taste=='*')
    43dc:	8a 32       	cpi	r24, 0x2A	; 42
    43de:	c9 f4       	brne	.+50     	; 0x4412 <__stack+0x313>
			{
				maxgeschw = 0;
    43e0:	10 92 48 03 	sts	0x0348, r1
    43e4:	10 92 49 03 	sts	0x0349, r1
    43e8:	10 92 4a 03 	sts	0x034A, r1
    43ec:	10 92 4b 03 	sts	0x034B, r1
				strecke = 0;
    43f0:	10 92 4c 03 	sts	0x034C, r1
    43f4:	10 92 4d 03 	sts	0x034D, r1
    43f8:	10 92 4e 03 	sts	0x034E, r1
    43fc:	10 92 4f 03 	sts	0x034F, r1
				Fahrtzeit = 0;
    4400:	10 92 44 03 	sts	0x0344, r1
    4404:	10 92 45 03 	sts	0x0345, r1
    4408:	10 92 46 03 	sts	0x0346, r1
    440c:	10 92 47 03 	sts	0x0347, r1
    4410:	dd c0       	rjmp	.+442    	; 0x45cc <__stack+0x4cd>
			}
			else if (taste=='0')
    4412:	80 33       	cpi	r24, 0x30	; 48
    4414:	09 f0       	breq	.+2      	; 0x4418 <__stack+0x319>
    4416:	e0 c0       	rjmp	.+448    	; 0x45d8 <__stack+0x4d9>
			{
				if (LED.ison())
    4418:	80 e8       	ldi	r24, 0x80	; 128
    441a:	93 e0       	ldi	r25, 0x03	; 3
    441c:	29 d6       	rcall	.+3154   	; 0x5070 <_ZN6Output4isonEv>
    441e:	88 23       	and	r24, r24
    4420:	21 f0       	breq	.+8      	; 0x442a <__stack+0x32b>
				{
					LED.off();
    4422:	80 e8       	ldi	r24, 0x80	; 128
    4424:	93 e0       	ldi	r25, 0x03	; 3
    4426:	67 c6       	rjmp	.+3278   	; 0x50f6 <_ZN6Output3offEv>
    4428:	08 95       	ret
				}
				else{
					LED.on();
    442a:	80 e8       	ldi	r24, 0x80	; 128
    442c:	93 e0       	ldi	r25, 0x03	; 3
    442e:	d7 c5       	rjmp	.+2990   	; 0x4fde <_ZN6Output2onEv>
    4430:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Druckflag)))
    4432:	32 ff       	sbrs	r19, 2
    4434:	29 c0       	rjmp	.+82     	; 0x4488 <__stack+0x389>
		{
			if (taste=='#')
    4436:	83 32       	cpi	r24, 0x23	; 35
    4438:	41 f4       	brne	.+16     	; 0x444a <__stack+0x34b>
			{
				anzeige&=~(1<<Druckflag);
    443a:	c9 01       	movw	r24, r18
    443c:	9b 7f       	andi	r25, 0xFB	; 251
				anzeige|=(1<<menueflag);
    443e:	90 62       	ori	r25, 0x20	; 32
    4440:	90 93 56 03 	sts	0x0356, r25
    4444:	80 93 55 03 	sts	0x0355, r24
    4448:	08 95       	ret
			}
			else if (taste=='*')
    444a:	8a 32       	cpi	r24, 0x2A	; 42
    444c:	69 f4       	brne	.+26     	; 0x4468 <__stack+0x369>
			{
				Baro.set_Pressure0(Baro.Press);
    444e:	40 91 6c 03 	lds	r20, 0x036C
    4452:	50 91 6d 03 	lds	r21, 0x036D
    4456:	60 91 6e 03 	lds	r22, 0x036E
    445a:	70 91 6f 03 	lds	r23, 0x036F
    445e:	8c e6       	ldi	r24, 0x6C	; 108
    4460:	93 e0       	ldi	r25, 0x03	; 3
    4462:	0e 94 74 2a 	call	0x54e8	; 0x54e8 <_ZN8Pressure13set_Pressure0Ed>
    4466:	b2 c0       	rjmp	.+356    	; 0x45cc <__stack+0x4cd>
			}
			else if (taste=='0')
    4468:	80 33       	cpi	r24, 0x30	; 48
    446a:	09 f0       	breq	.+2      	; 0x446e <__stack+0x36f>
    446c:	b5 c0       	rjmp	.+362    	; 0x45d8 <__stack+0x4d9>
			{
				if (LED.ison())
    446e:	80 e8       	ldi	r24, 0x80	; 128
    4470:	93 e0       	ldi	r25, 0x03	; 3
    4472:	fe d5       	rcall	.+3068   	; 0x5070 <_ZN6Output4isonEv>
    4474:	88 23       	and	r24, r24
    4476:	21 f0       	breq	.+8      	; 0x4480 <__stack+0x381>
				{
					LED.off();
    4478:	80 e8       	ldi	r24, 0x80	; 128
    447a:	93 e0       	ldi	r25, 0x03	; 3
    447c:	3c c6       	rjmp	.+3192   	; 0x50f6 <_ZN6Output3offEv>
    447e:	08 95       	ret
				}
				else{
					LED.on();
    4480:	80 e8       	ldi	r24, 0x80	; 128
    4482:	93 e0       	ldi	r25, 0x03	; 3
    4484:	ac c5       	rjmp	.+2904   	; 0x4fde <_ZN6Output2onEv>
    4486:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Timerflag)))
    4488:	22 ff       	sbrs	r18, 2
    448a:	23 c0       	rjmp	.+70     	; 0x44d2 <__stack+0x3d3>
		{
			if (taste=='#')
    448c:	83 32       	cpi	r24, 0x23	; 35
    448e:	09 f0       	breq	.+2      	; 0x4492 <__stack+0x393>
    4490:	79 c0       	rjmp	.+242    	; 0x4584 <__stack+0x485>
			{
				anzeige&=~((1<<Timerflag)|(1<<blinkflag));
    4492:	2b 7f       	andi	r18, 0xFB	; 251
    4494:	3f 7b       	andi	r19, 0xBF	; 191
    4496:	30 93 56 03 	sts	0x0356, r19
    449a:	20 93 55 03 	sts	0x0355, r18
				rtc.interupts&=~((1<<Timerlauft)|(1<<Alarm));
    449e:	89 2f       	mov	r24, r25
    44a0:	8e 7d       	andi	r24, 0xDE	; 222
    44a2:	82 60       	ori	r24, 0x02	; 2
    44a4:	80 93 9c 07 	sts	0x079C, r24
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    44a8:	60 e0       	ldi	r22, 0x00	; 0
    44aa:	83 e8       	ldi	r24, 0x83	; 131
    44ac:	93 e0       	ldi	r25, 0x03	; 3
    44ae:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
				LED.off();
    44b2:	80 e8       	ldi	r24, 0x80	; 128
    44b4:	93 e0       	ldi	r25, 0x03	; 3
    44b6:	1f d6       	rcall	.+3134   	; 0x50f6 <_ZN6Output3offEv>
				Vibrationsmotor.off();
    44b8:	8e e7       	ldi	r24, 0x7E	; 126
    44ba:	93 e0       	ldi	r25, 0x03	; 3
    44bc:	1c d6       	rcall	.+3128   	; 0x50f6 <_ZN6Output3offEv>
				
				anzeige|=(1<<menueflag);
    44be:	80 91 55 03 	lds	r24, 0x0355
    44c2:	90 91 56 03 	lds	r25, 0x0356
    44c6:	90 62       	ori	r25, 0x20	; 32
    44c8:	90 93 56 03 	sts	0x0356, r25
    44cc:	80 93 55 03 	sts	0x0355, r24
    44d0:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Uhrflaggross)))
    44d2:	25 ff       	sbrs	r18, 5
    44d4:	1a c0       	rjmp	.+52     	; 0x450a <__stack+0x40b>
		{
			if (taste=='#')
    44d6:	83 32       	cpi	r24, 0x23	; 35
    44d8:	41 f4       	brne	.+16     	; 0x44ea <__stack+0x3eb>
			{
				anzeige&=~(1<<Uhrflaggross);
    44da:	c9 01       	movw	r24, r18
    44dc:	8f 7d       	andi	r24, 0xDF	; 223
				anzeige|=(1<<menueflag);
    44de:	90 62       	ori	r25, 0x20	; 32
    44e0:	90 93 56 03 	sts	0x0356, r25
    44e4:	80 93 55 03 	sts	0x0355, r24
    44e8:	08 95       	ret
			}
			else if (taste=='0')
    44ea:	80 33       	cpi	r24, 0x30	; 48
    44ec:	09 f0       	breq	.+2      	; 0x44f0 <__stack+0x3f1>
    44ee:	4a c0       	rjmp	.+148    	; 0x4584 <__stack+0x485>
			{
				if (LED.ison())
    44f0:	80 e8       	ldi	r24, 0x80	; 128
    44f2:	93 e0       	ldi	r25, 0x03	; 3
    44f4:	bd d5       	rcall	.+2938   	; 0x5070 <_ZN6Output4isonEv>
    44f6:	88 23       	and	r24, r24
    44f8:	21 f0       	breq	.+8      	; 0x4502 <__stack+0x403>
				{
					LED.off();
    44fa:	80 e8       	ldi	r24, 0x80	; 128
    44fc:	93 e0       	ldi	r25, 0x03	; 3
    44fe:	fb c5       	rjmp	.+3062   	; 0x50f6 <_ZN6Output3offEv>
    4500:	08 95       	ret
				}
				else{
					LED.on();
    4502:	80 e8       	ldi	r24, 0x80	; 128
    4504:	93 e0       	ldi	r25, 0x03	; 3
    4506:	6b c5       	rjmp	.+2774   	; 0x4fde <_ZN6Output2onEv>
    4508:	08 95       	ret
				}
			}
		}
		else if ((anzeige&(1<<Wanderflag)))
    450a:	33 ff       	sbrs	r19, 3
    450c:	0a c0       	rjmp	.+20     	; 0x4522 <__stack+0x423>
		{
			if (taste=='#')
    450e:	83 32       	cpi	r24, 0x23	; 35
    4510:	c9 f5       	brne	.+114    	; 0x4584 <__stack+0x485>
			{
				anzeige &= ~(1<<Wanderflag);
    4512:	c9 01       	movw	r24, r18
    4514:	97 7f       	andi	r25, 0xF7	; 247
				anzeige |= (1<<menueflag);
    4516:	90 62       	ori	r25, 0x20	; 32
    4518:	90 93 56 03 	sts	0x0356, r25
    451c:	80 93 55 03 	sts	0x0355, r24
    4520:	08 95       	ret
			}
		}
		else if ((anzeige&(1<<Weckeranzeigeflag)))
    4522:	26 ff       	sbrs	r18, 6
    4524:	26 c0       	rjmp	.+76     	; 0x4572 <__stack+0x473>
		{
			if (taste=='#')
    4526:	83 32       	cpi	r24, 0x23	; 35
    4528:	41 f4       	brne	.+16     	; 0x453a <__stack+0x43b>
			{
				anzeige&=~(1<<Weckeranzeigeflag);
    452a:	c9 01       	movw	r24, r18
    452c:	8f 7b       	andi	r24, 0xBF	; 191
				anzeige|=(1<<menueflag);
    452e:	90 62       	ori	r25, 0x20	; 32
    4530:	90 93 56 03 	sts	0x0356, r25
    4534:	80 93 55 03 	sts	0x0355, r24
    4538:	08 95       	ret
			}
			if (taste=='*')
    453a:	8a 32       	cpi	r24, 0x2A	; 42
    453c:	09 f0       	breq	.+2      	; 0x4540 <__stack+0x441>
    453e:	4c c0       	rjmp	.+152    	; 0x45d8 <__stack+0x4d9>
			{
				if (rtc.interupts&(1<<Weckeractiv))
    4540:	94 ff       	sbrs	r25, 4
    4542:	06 c0       	rjmp	.+12     	; 0x4550 <__stack+0x451>
				{
					rtc.interupts &= ~((1<<Weckerein) | (1<<Weckeractiv));
    4544:	89 2f       	mov	r24, r25
    4546:	87 7e       	andi	r24, 0xE7	; 231
    4548:	82 60       	ori	r24, 0x02	; 2
    454a:	80 93 9c 07 	sts	0x079C, r24
    454e:	0b c0       	rjmp	.+22     	; 0x4566 <__stack+0x467>
				}
				else if ((rtc.interupts&(1<<Weckerein)))
    4550:	93 ff       	sbrs	r25, 3
    4552:	06 c0       	rjmp	.+12     	; 0x4560 <__stack+0x461>
				{
					rtc.interupts &= ~(1<<Weckerein);
    4554:	89 2f       	mov	r24, r25
    4556:	87 7f       	andi	r24, 0xF7	; 247
    4558:	82 60       	ori	r24, 0x02	; 2
    455a:	80 93 9c 07 	sts	0x079C, r24
    455e:	03 c0       	rjmp	.+6      	; 0x4566 <__stack+0x467>
				}
				else{
					rtc.interupts |= (1<<Weckerein);
    4560:	9a 60       	ori	r25, 0x0A	; 10
    4562:	90 93 9c 07 	sts	0x079C, r25
				}
				rtc.interupts|=(1<<minuteninterupt);
    4566:	ec e9       	ldi	r30, 0x9C	; 156
    4568:	f7 e0       	ldi	r31, 0x07	; 7
    456a:	80 81       	ld	r24, Z
    456c:	84 60       	ori	r24, 0x04	; 4
    456e:	80 83       	st	Z, r24
    4570:	2d c0       	rjmp	.+90     	; 0x45cc <__stack+0x4cd>
			}
		}
		else if (anzeige==0)
    4572:	23 2b       	or	r18, r19
    4574:	39 f4       	brne	.+14     	; 0x4584 <__stack+0x485>
		{
			anzeige|=(1<<menueflag);
    4576:	80 e0       	ldi	r24, 0x00	; 0
    4578:	90 e2       	ldi	r25, 0x20	; 32
    457a:	90 93 56 03 	sts	0x0356, r25
    457e:	80 93 55 03 	sts	0x0355, r24
    4582:	08 95       	ret
		}
		if ((anzeige&(1<<blinkflag)))
    4584:	20 91 55 03 	lds	r18, 0x0355
    4588:	30 91 56 03 	lds	r19, 0x0356
    458c:	36 ff       	sbrs	r19, 6
    458e:	24 c0       	rjmp	.+72     	; 0x45d8 <__stack+0x4d9>
		{
			if (taste=='*')
    4590:	8a 32       	cpi	r24, 0x2A	; 42
    4592:	11 f5       	brne	.+68     	; 0x45d8 <__stack+0x4d9>
			{
				anzeige &=~(1<<blinkflag);
    4594:	3f 7b       	andi	r19, 0xBF	; 191
    4596:	30 93 56 03 	sts	0x0356, r19
    459a:	20 93 55 03 	sts	0x0355, r18
				oled.invert(0);	//fuer den Fall, dass es invertiert blieb (50% der Faelle)
    459e:	60 e0       	ldi	r22, 0x00	; 0
    45a0:	83 e8       	ldi	r24, 0x83	; 131
    45a2:	93 e0       	ldi	r25, 0x03	; 3
    45a4:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN7Display6invertEh>
				LED.off();
    45a8:	80 e8       	ldi	r24, 0x80	; 128
    45aa:	93 e0       	ldi	r25, 0x03	; 3
    45ac:	a4 d5       	rcall	.+2888   	; 0x50f6 <_ZN6Output3offEv>
				Vibrationsmotor.off();
    45ae:	8e e7       	ldi	r24, 0x7E	; 126
    45b0:	93 e0       	ldi	r25, 0x03	; 3
    45b2:	a1 d5       	rcall	.+2882   	; 0x50f6 <_ZN6Output3offEv>
				if ((rtc.interupts&(1<<Weckeractiv)))
    45b4:	80 91 9c 07 	lds	r24, 0x079C
    45b8:	98 2f       	mov	r25, r24
    45ba:	98 71       	andi	r25, 0x18	; 24
				{
					if ((rtc.interupts&(1<<Weckerein)))
    45bc:	98 31       	cpi	r25, 0x18	; 24
    45be:	61 f4       	brne	.+24     	; 0x45d8 <__stack+0x4d9>
					{
						rtc.interupts &= ~((1<<Weckerein)|(1<<Weckeractiv));
						rtc.interupts &= ~(1<<Alarm);
    45c0:	86 7e       	andi	r24, 0xE6	; 230
    45c2:	80 93 9c 07 	sts	0x079C, r24
    45c6:	08 95       	ret
				anzeige&=~(1<<Uhrflag);
				anzeige|=(1<<menueflag);
			}
			else if (taste=='*')
			{
				pos++;
    45c8:	80 93 54 03 	sts	0x0354, r24
		}
		else if (anzeige==0)
		{
			anzeige|=(1<<menueflag);
		}
		if ((anzeige&(1<<blinkflag)))
    45cc:	20 91 55 03 	lds	r18, 0x0355
    45d0:	30 91 56 03 	lds	r19, 0x0356
    45d4:	36 fd       	sbrc	r19, 6
    45d6:	de cf       	rjmp	.-68     	; 0x4594 <__stack+0x495>
    45d8:	08 95       	ret

000045da <main>:
void eingabehandler(uint8_t taste);

int main(void)
{
	//initialisierung
	initialisierung();
    45da:	e1 d8       	rcall	.-3646   	; 0x379e <_Z15initialisierungv>
    while(1)
    {
         //Steuerung der interupts durch Handler
         maininterupthandler();
    45dc:	3f d9       	rcall	.-3458   	; 0x385c <_Z19maininterupthandlerv>
         //Steuerung der Anzeige alle Sekunde zur aktualisierung maximale Aktulisierungsrate ist 1Hz
         anzeigehandler();
    45de:	74 d9       	rcall	.-3352   	; 0x38c8 <_Z14anzeigehandlerv>
         //Tasthandler
         eingabehandler(Tastatur.Taster());
    45e0:	82 e8       	ldi	r24, 0x82	; 130
    45e2:	93 e0       	ldi	r25, 0x03	; 3
    45e4:	ad d0       	rcall	.+346    	; 0x4740 <_ZN9Interface6TasterEv>
    45e6:	5b db       	rcall	.-2378   	; 0x3c9e <_Z14eingabehandlerh>
    45e8:	f9 cf       	rjmp	.-14     	; 0x45dc <main+0x2>

000045ea <_GLOBAL__sub_I_kompass>:
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    45ea:	83 ea       	ldi	r24, 0xA3	; 163
    45ec:	97 e0       	ldi	r25, 0x07	; 7
    45ee:	5e d1       	rcall	.+700    	; 0x48ac <_ZN7KompassC1Ev>

#include "RTC.h"
RTC rtc;
    45f0:	84 e8       	ldi	r24, 0x84	; 132
    45f2:	97 e0       	ldi	r25, 0x07	; 7
    45f4:	0e 94 fe 2a 	call	0x55fc	; 0x55fc <_ZN3RTCC1Ev>

#include "Display.h"
Display oled;
    45f8:	83 e8       	ldi	r24, 0x83	; 131
    45fa:	93 e0       	ldi	r25, 0x03	; 3
    45fc:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <_ZN7DisplayC1Ev>

#include "Interface.h"
Interface Tastatur;
    4600:	82 e8       	ldi	r24, 0x82	; 130
    4602:	93 e0       	ldi	r25, 0x03	; 3
    4604:	69 d0       	rcall	.+210    	; 0x46d8 <_ZN9InterfaceC1Ev>

#include "Output.h"
Output LED('B',PORTB1);
    4606:	41 e0       	ldi	r20, 0x01	; 1
    4608:	62 e4       	ldi	r22, 0x42	; 66
    460a:	80 e8       	ldi	r24, 0x80	; 128
    460c:	93 e0       	ldi	r25, 0x03	; 3
    460e:	a4 d4       	rcall	.+2376   	; 0x4f58 <_ZN6OutputC1Ehh>
Output Vibrationsmotor('B',PORTB2);
    4610:	42 e0       	ldi	r20, 0x02	; 2
    4612:	62 e4       	ldi	r22, 0x42	; 66
    4614:	8e e7       	ldi	r24, 0x7E	; 126
    4616:	93 e0       	ldi	r25, 0x03	; 3
    4618:	9f d4       	rcall	.+2366   	; 0x4f58 <_ZN6OutputC1Ehh>
Output IRLED('D',PORTD7);
    461a:	47 e0       	ldi	r20, 0x07	; 7
    461c:	64 e4       	ldi	r22, 0x44	; 68
    461e:	8c e7       	ldi	r24, 0x7C	; 124
    4620:	93 e0       	ldi	r25, 0x03	; 3
    4622:	9a d4       	rcall	.+2356   	; 0x4f58 <_ZN6OutputC1Ehh>
Output Sound('B',PORTB3);
    4624:	43 e0       	ldi	r20, 0x03	; 3
    4626:	62 e4       	ldi	r22, 0x42	; 66
    4628:	8a e7       	ldi	r24, 0x7A	; 122
    462a:	93 e0       	ldi	r25, 0x03	; 3
    462c:	95 d4       	rcall	.+2346   	; 0x4f58 <_ZN6OutputC1Ehh>

#include "Pressure.h"
Pressure Baro;
    462e:	8c e6       	ldi	r24, 0x6C	; 108
    4630:	93 e0       	ldi	r25, 0x03	; 3
    4632:	29 d6       	rcall	.+3154   	; 0x5286 <_ZN8PressureC1Ev>

#include "LSM303D.h"
LSM303D Accelerometer;
    4634:	8b e5       	ldi	r24, 0x5B	; 91
    4636:	93 e0       	ldi	r25, 0x03	; 3
    4638:	75 c4       	rjmp	.+2282   	; 0x4f24 <_ZN7LSM303DC1Ev>
    463a:	08 95       	ret

0000463c <_GLOBAL__sub_D_kompass>:
    463c:	8b e5       	ldi	r24, 0x5B	; 91
    463e:	93 e0       	ldi	r25, 0x03	; 3
    4640:	4f d3       	rcall	.+1694   	; 0x4ce0 <_ZN7LSM303DD1Ev>
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);

#include "Pressure.h"
Pressure Baro;
    4642:	8c e6       	ldi	r24, 0x6C	; 108
    4644:	93 e0       	ldi	r25, 0x03	; 3
    4646:	ed d5       	rcall	.+3034   	; 0x5222 <_ZN8PressureD1Ev>

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
Output Sound('B',PORTB3);
    4648:	8a e7       	ldi	r24, 0x7A	; 122
    464a:	93 e0       	ldi	r25, 0x03	; 3
    464c:	c7 d4       	rcall	.+2446   	; 0x4fdc <_ZN6OutputD1Ev>
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
Output IRLED('D',PORTD7);
    464e:	8c e7       	ldi	r24, 0x7C	; 124
    4650:	93 e0       	ldi	r25, 0x03	; 3
    4652:	c4 d4       	rcall	.+2440   	; 0x4fdc <_ZN6OutputD1Ev>
#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
Output Vibrationsmotor('B',PORTB2);
    4654:	8e e7       	ldi	r24, 0x7E	; 126
    4656:	93 e0       	ldi	r25, 0x03	; 3
    4658:	c1 d4       	rcall	.+2434   	; 0x4fdc <_ZN6OutputD1Ev>

#include "Interface.h"
Interface Tastatur;

#include "Output.h"
Output LED('B',PORTB1);
    465a:	80 e8       	ldi	r24, 0x80	; 128
    465c:	93 e0       	ldi	r25, 0x03	; 3
    465e:	be d4       	rcall	.+2428   	; 0x4fdc <_ZN6OutputD1Ev>

#include "Display.h"
Display oled;

#include "Interface.h"
Interface Tastatur;
    4660:	82 e8       	ldi	r24, 0x82	; 130
    4662:	93 e0       	ldi	r25, 0x03	; 3
    4664:	46 d0       	rcall	.+140    	; 0x46f2 <_ZN9InterfaceD1Ev>

#include "RTC.h"
RTC rtc;

#include "Display.h"
Display oled;
    4666:	83 e8       	ldi	r24, 0x83	; 131
    4668:	93 e0       	ldi	r25, 0x03	; 3
    466a:	0e 94 01 03 	call	0x602	; 0x602 <_ZN7DisplayD1Ev>

#include "Kompass.h"
Kompass kompass;

#include "RTC.h"
RTC rtc;
    466e:	84 e8       	ldi	r24, 0x84	; 132
    4670:	97 e0       	ldi	r25, 0x07	; 7
    4672:	40 d7       	rcall	.+3712   	; 0x54f4 <_ZN3RTCD1Ev>
#include <stdlib.h>
#include <stdio.h>
#include <avr/interrupt.h>

#include "Kompass.h"
Kompass kompass;
    4674:	83 ea       	ldi	r24, 0xA3	; 163
    4676:	97 e0       	ldi	r25, 0x07	; 7
    4678:	fc c0       	rjmp	.+504    	; 0x4872 <_ZN7KompassD1Ev>
    467a:	08 95       	ret

0000467c <_ZN3I2CC1Ev>:
void I2C::twi_ack(){
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
}
void I2C::twi_nack(){
	TWCR = (1<<TWINT) | (1<<TWEN);
	TWCR &= ~(1<<TWEA);
    467c:	82 e0       	ldi	r24, 0x02	; 2
    467e:	80 93 b8 00 	sts	0x00B8, r24
    4682:	08 95       	ret

00004684 <_ZN3I2CD1Ev>:
    4684:	08 95       	ret

00004686 <_ZN3I2C9twi_startEv>:
    4686:	84 ea       	ldi	r24, 0xA4	; 164
    4688:	80 93 bc 00 	sts	0x00BC, r24
    468c:	08 95       	ret

0000468e <_ZN3I2C8twi_stopEv>:
    468e:	84 e9       	ldi	r24, 0x94	; 148
    4690:	80 93 bc 00 	sts	0x00BC, r24
    4694:	08 95       	ret

00004696 <_ZN3I2C9twi_writeEh>:
}

void I2C::twi_write(uint8_t data){
	while(!(TWCR & (1<<TWINT)));
    4696:	ec eb       	ldi	r30, 0xBC	; 188
    4698:	f0 e0       	ldi	r31, 0x00	; 0
    469a:	80 81       	ld	r24, Z
    469c:	88 23       	and	r24, r24
    469e:	ec f7       	brge	.-6      	; 0x469a <_ZN3I2C9twi_writeEh+0x4>
	TWDR = data;
    46a0:	60 93 bb 00 	sts	0x00BB, r22
	TWCR = (1<<TWINT) | (1<<TWEN);
    46a4:	84 e8       	ldi	r24, 0x84	; 132
    46a6:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    46aa:	ec eb       	ldi	r30, 0xBC	; 188
    46ac:	f0 e0       	ldi	r31, 0x00	; 0
    46ae:	80 81       	ld	r24, Z
    46b0:	88 23       	and	r24, r24
    46b2:	ec f7       	brge	.-6      	; 0x46ae <_ZN3I2C9twi_writeEh+0x18>
}
    46b4:	08 95       	ret

000046b6 <_ZN3I2C8twi_readEh>:

uint8_t I2C::twi_read(uint8_t ack){
	if (ack)
    46b6:	66 23       	and	r22, r22
    46b8:	21 f0       	breq	.+8      	; 0x46c2 <_ZN3I2C8twi_readEh+0xc>
	{
		TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
    46ba:	84 ec       	ldi	r24, 0xC4	; 196
    46bc:	80 93 bc 00 	sts	0x00BC, r24
    46c0:	03 c0       	rjmp	.+6      	; 0x46c8 <_ZN3I2C8twi_readEh+0x12>
	}
	else{
		TWCR = (1<<TWINT) | (1<<TWEN);
    46c2:	84 e8       	ldi	r24, 0x84	; 132
    46c4:	80 93 bc 00 	sts	0x00BC, r24
	}
	
	while(!(TWCR & (1<<TWINT)));
    46c8:	ec eb       	ldi	r30, 0xBC	; 188
    46ca:	f0 e0       	ldi	r31, 0x00	; 0
    46cc:	80 81       	ld	r24, Z
    46ce:	88 23       	and	r24, r24
    46d0:	ec f7       	brge	.-6      	; 0x46cc <_ZN3I2C8twi_readEh+0x16>
	return TWDR;
    46d2:	80 91 bb 00 	lds	r24, 0x00BB
    46d6:	08 95       	ret

000046d8 <_ZN9InterfaceC1Ev>:
		default:
		abfrage = 0;
		break;
	}
	return abfrage;
}
    46d8:	8a b1       	in	r24, 0x0a	; 10
    46da:	80 66       	ori	r24, 0x60	; 96
    46dc:	8a b9       	out	0x0a, r24	; 10
    46de:	88 b1       	in	r24, 0x08	; 8
    46e0:	83 7f       	andi	r24, 0xF3	; 243
    46e2:	88 b9       	out	0x08, r24	; 8
    46e4:	87 b1       	in	r24, 0x07	; 7
    46e6:	8c 60       	ori	r24, 0x0C	; 12
    46e8:	87 b9       	out	0x07, r24	; 7
    46ea:	8a b1       	in	r24, 0x0a	; 10
    46ec:	83 7e       	andi	r24, 0xE3	; 227
    46ee:	8a b9       	out	0x0a, r24	; 10
    46f0:	08 95       	ret

000046f2 <_ZN9InterfaceD1Ev>:
    46f2:	08 95       	ret

000046f4 <_ZN9Interface8debounceEPVhh>:
    46f4:	fb 01       	movw	r30, r22
    46f6:	80 81       	ld	r24, Z
    46f8:	90 e0       	ldi	r25, 0x00	; 0
    46fa:	04 2e       	mov	r0, r20
    46fc:	02 c0       	rjmp	.+4      	; 0x4702 <_ZN9Interface8debounceEPVhh+0xe>
    46fe:	95 95       	asr	r25
    4700:	87 95       	ror	r24
    4702:	0a 94       	dec	r0
    4704:	e2 f7       	brpl	.-8      	; 0x46fe <_ZN9Interface8debounceEPVhh+0xa>
    4706:	80 ff       	sbrs	r24, 0
    4708:	17 c0       	rjmp	.+46     	; 0x4738 <_ZN9Interface8debounceEPVhh+0x44>
    470a:	8f ec       	ldi	r24, 0xCF	; 207
    470c:	97 e0       	ldi	r25, 0x07	; 7
    470e:	01 97       	sbiw	r24, 0x01	; 1
    4710:	f1 f7       	brne	.-4      	; 0x470e <_ZN9Interface8debounceEPVhh+0x1a>
    4712:	00 c0       	rjmp	.+0      	; 0x4714 <_ZN9Interface8debounceEPVhh+0x20>
    4714:	00 00       	nop
    4716:	fb 01       	movw	r30, r22
    4718:	80 81       	ld	r24, Z
    471a:	90 e0       	ldi	r25, 0x00	; 0
    471c:	9c 01       	movw	r18, r24
    471e:	02 c0       	rjmp	.+4      	; 0x4724 <_ZN9Interface8debounceEPVhh+0x30>
    4720:	35 95       	asr	r19
    4722:	27 95       	ror	r18
    4724:	4a 95       	dec	r20
    4726:	e2 f7       	brpl	.-8      	; 0x4720 <_ZN9Interface8debounceEPVhh+0x2c>
    4728:	20 fd       	sbrc	r18, 0
    472a:	08 c0       	rjmp	.+16     	; 0x473c <_ZN9Interface8debounceEPVhh+0x48>
    472c:	3a e1       	ldi	r19, 0x1A	; 26
    472e:	3a 95       	dec	r19
    4730:	f1 f7       	brne	.-4      	; 0x472e <_ZN9Interface8debounceEPVhh+0x3a>
    4732:	00 c0       	rjmp	.+0      	; 0x4734 <_ZN9Interface8debounceEPVhh+0x40>
    4734:	81 e0       	ldi	r24, 0x01	; 1
    4736:	08 95       	ret
    4738:	80 e0       	ldi	r24, 0x00	; 0
    473a:	08 95       	ret
    473c:	80 e0       	ldi	r24, 0x00	; 0
    473e:	08 95       	ret

00004740 <_ZN9Interface6TasterEv>:

uint8_t Interface::Taster(){
    4740:	1f 93       	push	r17
    4742:	cf 93       	push	r28
    4744:	df 93       	push	r29
    4746:	ec 01       	movw	r28, r24
	uint8_t taste = 'A';
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
    4748:	43 9a       	sbi	0x08, 3	; 8
    474a:	82 e0       	ldi	r24, 0x02	; 2
    474c:	8a 95       	dec	r24
    474e:	f1 f7       	brne	.-4      	; 0x474c <_ZN9Interface6TasterEv+0xc>
    4750:	00 c0       	rjmp	.+0      	; 0x4752 <_ZN9Interface6TasterEv+0x12>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    4752:	44 e0       	ldi	r20, 0x04	; 4
    4754:	69 e2       	ldi	r22, 0x29	; 41
    4756:	70 e0       	ldi	r23, 0x00	; 0
    4758:	ce 01       	movw	r24, r28
    475a:	cc df       	rcall	.-104    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    475c:	81 11       	cpse	r24, r1
    475e:	10 c0       	rjmp	.+32     	; 0x4780 <_ZN9Interface6TasterEv+0x40>
		taste = '3';
	}
	else if (debounce(&PIND,PIND3))
    4760:	43 e0       	ldi	r20, 0x03	; 3
    4762:	69 e2       	ldi	r22, 0x29	; 41
    4764:	70 e0       	ldi	r23, 0x00	; 0
    4766:	ce 01       	movw	r24, r28
    4768:	c5 df       	rcall	.-118    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    476a:	81 11       	cpse	r24, r1
    476c:	0b c0       	rjmp	.+22     	; 0x4784 <_ZN9Interface6TasterEv+0x44>
	{
		taste = '2';
	}
	else if (debounce(&PIND,PIND2))
    476e:	42 e0       	ldi	r20, 0x02	; 2
    4770:	69 e2       	ldi	r22, 0x29	; 41
    4772:	70 e0       	ldi	r23, 0x00	; 0
    4774:	ce 01       	movw	r24, r28
    4776:	be df       	rcall	.-132    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    4778:	81 11       	cpse	r24, r1
    477a:	06 c0       	rjmp	.+12     	; 0x4788 <_ZN9Interface6TasterEv+0x48>
	}
	return abfrage;
}

uint8_t Interface::Taster(){
	uint8_t taste = 'A';
    477c:	11 e4       	ldi	r17, 0x41	; 65
    477e:	05 c0       	rjmp	.+10     	; 0x478a <_ZN9Interface6TasterEv+0x4a>
	
	//erste Zeile
	PORTC |= (1<<PORTC3);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '3';
    4780:	13 e3       	ldi	r17, 0x33	; 51
    4782:	03 c0       	rjmp	.+6      	; 0x478a <_ZN9Interface6TasterEv+0x4a>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '2';
    4784:	12 e3       	ldi	r17, 0x32	; 50
    4786:	01 c0       	rjmp	.+2      	; 0x478a <_ZN9Interface6TasterEv+0x4a>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '1';
    4788:	11 e3       	ldi	r17, 0x31	; 49
	}
	PORTC &= ~(1<<PORTC3);
    478a:	43 98       	cbi	0x08, 3	; 8
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
    478c:	42 9a       	sbi	0x08, 2	; 8
    478e:	82 e0       	ldi	r24, 0x02	; 2
    4790:	8a 95       	dec	r24
    4792:	f1 f7       	brne	.-4      	; 0x4790 <_ZN9Interface6TasterEv+0x50>
    4794:	00 c0       	rjmp	.+0      	; 0x4796 <_ZN9Interface6TasterEv+0x56>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    4796:	44 e0       	ldi	r20, 0x04	; 4
    4798:	69 e2       	ldi	r22, 0x29	; 41
    479a:	70 e0       	ldi	r23, 0x00	; 0
    479c:	ce 01       	movw	r24, r28
    479e:	aa df       	rcall	.-172    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    47a0:	81 11       	cpse	r24, r1
    47a2:	0f c0       	rjmp	.+30     	; 0x47c2 <_ZN9Interface6TasterEv+0x82>
		taste = '6';
	}
	else if (debounce(&PIND,PIND3))
    47a4:	43 e0       	ldi	r20, 0x03	; 3
    47a6:	69 e2       	ldi	r22, 0x29	; 41
    47a8:	70 e0       	ldi	r23, 0x00	; 0
    47aa:	ce 01       	movw	r24, r28
    47ac:	a3 df       	rcall	.-186    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    47ae:	81 11       	cpse	r24, r1
    47b0:	0a c0       	rjmp	.+20     	; 0x47c6 <_ZN9Interface6TasterEv+0x86>
	{
		taste = '5';
	}
	else if (debounce(&PIND,PIND2))
    47b2:	42 e0       	ldi	r20, 0x02	; 2
    47b4:	69 e2       	ldi	r22, 0x29	; 41
    47b6:	70 e0       	ldi	r23, 0x00	; 0
    47b8:	ce 01       	movw	r24, r28
    47ba:	9c df       	rcall	.-200    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    47bc:	81 11       	cpse	r24, r1
    47be:	05 c0       	rjmp	.+10     	; 0x47ca <_ZN9Interface6TasterEv+0x8a>
    47c0:	05 c0       	rjmp	.+10     	; 0x47cc <_ZN9Interface6TasterEv+0x8c>
	
	//zweite Zeile
	PORTC |= (1<<PORTC2);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '6';
    47c2:	16 e3       	ldi	r17, 0x36	; 54
    47c4:	03 c0       	rjmp	.+6      	; 0x47cc <_ZN9Interface6TasterEv+0x8c>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '5';
    47c6:	15 e3       	ldi	r17, 0x35	; 53
    47c8:	01 c0       	rjmp	.+2      	; 0x47cc <_ZN9Interface6TasterEv+0x8c>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '4';
    47ca:	14 e3       	ldi	r17, 0x34	; 52
	}
	PORTC &= ~(1<<PORTC2);
    47cc:	42 98       	cbi	0x08, 2	; 8
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
    47ce:	5e 9a       	sbi	0x0b, 6	; 11
    47d0:	82 e0       	ldi	r24, 0x02	; 2
    47d2:	8a 95       	dec	r24
    47d4:	f1 f7       	brne	.-4      	; 0x47d2 <_ZN9Interface6TasterEv+0x92>
    47d6:	00 c0       	rjmp	.+0      	; 0x47d8 <_ZN9Interface6TasterEv+0x98>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    47d8:	44 e0       	ldi	r20, 0x04	; 4
    47da:	69 e2       	ldi	r22, 0x29	; 41
    47dc:	70 e0       	ldi	r23, 0x00	; 0
    47de:	ce 01       	movw	r24, r28
    47e0:	89 df       	rcall	.-238    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    47e2:	81 11       	cpse	r24, r1
    47e4:	0f c0       	rjmp	.+30     	; 0x4804 <_ZN9Interface6TasterEv+0xc4>
		taste = '9';
	}
	else if (debounce(&PIND,PIND3))
    47e6:	43 e0       	ldi	r20, 0x03	; 3
    47e8:	69 e2       	ldi	r22, 0x29	; 41
    47ea:	70 e0       	ldi	r23, 0x00	; 0
    47ec:	ce 01       	movw	r24, r28
    47ee:	82 df       	rcall	.-252    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    47f0:	81 11       	cpse	r24, r1
    47f2:	0a c0       	rjmp	.+20     	; 0x4808 <_ZN9Interface6TasterEv+0xc8>
	{
		taste = '8';
	}
	else if (debounce(&PIND,PIND2))
    47f4:	42 e0       	ldi	r20, 0x02	; 2
    47f6:	69 e2       	ldi	r22, 0x29	; 41
    47f8:	70 e0       	ldi	r23, 0x00	; 0
    47fa:	ce 01       	movw	r24, r28
    47fc:	7b df       	rcall	.-266    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    47fe:	81 11       	cpse	r24, r1
    4800:	05 c0       	rjmp	.+10     	; 0x480c <_ZN9Interface6TasterEv+0xcc>
    4802:	05 c0       	rjmp	.+10     	; 0x480e <_ZN9Interface6TasterEv+0xce>
	
	//dritte Zeile
	PORTD |= (1<<PORTD6);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '9';
    4804:	19 e3       	ldi	r17, 0x39	; 57
    4806:	03 c0       	rjmp	.+6      	; 0x480e <_ZN9Interface6TasterEv+0xce>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '8';
    4808:	18 e3       	ldi	r17, 0x38	; 56
    480a:	01 c0       	rjmp	.+2      	; 0x480e <_ZN9Interface6TasterEv+0xce>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '7';
    480c:	17 e3       	ldi	r17, 0x37	; 55
	}
	PORTD &= ~(1<<PORTD6);
    480e:	5e 98       	cbi	0x0b, 6	; 11
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
    4810:	5d 9a       	sbi	0x0b, 5	; 11
    4812:	82 e0       	ldi	r24, 0x02	; 2
    4814:	8a 95       	dec	r24
    4816:	f1 f7       	brne	.-4      	; 0x4814 <_ZN9Interface6TasterEv+0xd4>
    4818:	00 c0       	rjmp	.+0      	; 0x481a <_ZN9Interface6TasterEv+0xda>
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
    481a:	44 e0       	ldi	r20, 0x04	; 4
    481c:	69 e2       	ldi	r22, 0x29	; 41
    481e:	70 e0       	ldi	r23, 0x00	; 0
    4820:	ce 01       	movw	r24, r28
    4822:	68 df       	rcall	.-304    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    4824:	81 11       	cpse	r24, r1
    4826:	0f c0       	rjmp	.+30     	; 0x4846 <_ZN9Interface6TasterEv+0x106>
		taste = '#';
	}
	else if (debounce(&PIND,PIND3))
    4828:	43 e0       	ldi	r20, 0x03	; 3
    482a:	69 e2       	ldi	r22, 0x29	; 41
    482c:	70 e0       	ldi	r23, 0x00	; 0
    482e:	ce 01       	movw	r24, r28
    4830:	61 df       	rcall	.-318    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    4832:	81 11       	cpse	r24, r1
    4834:	0a c0       	rjmp	.+20     	; 0x484a <_ZN9Interface6TasterEv+0x10a>
	{
		taste = '0';
	}
	else if (debounce(&PIND,PIND2))
    4836:	42 e0       	ldi	r20, 0x02	; 2
    4838:	69 e2       	ldi	r22, 0x29	; 41
    483a:	70 e0       	ldi	r23, 0x00	; 0
    483c:	ce 01       	movw	r24, r28
    483e:	5a df       	rcall	.-332    	; 0x46f4 <_ZN9Interface8debounceEPVhh>
    4840:	81 11       	cpse	r24, r1
    4842:	05 c0       	rjmp	.+10     	; 0x484e <_ZN9Interface6TasterEv+0x10e>
    4844:	05 c0       	rjmp	.+10     	; 0x4850 <_ZN9Interface6TasterEv+0x110>
	
	//vierte Zeile
	PORTD |= (1<<PORTD5);
	_delay_us(1);
	if(debounce(&PIND,PIND4)){
		taste = '#';
    4846:	13 e2       	ldi	r17, 0x23	; 35
    4848:	03 c0       	rjmp	.+6      	; 0x4850 <_ZN9Interface6TasterEv+0x110>
	}
	else if (debounce(&PIND,PIND3))
	{
		taste = '0';
    484a:	10 e3       	ldi	r17, 0x30	; 48
    484c:	01 c0       	rjmp	.+2      	; 0x4850 <_ZN9Interface6TasterEv+0x110>
	}
	else if (debounce(&PIND,PIND2))
	{
		taste = '*';
    484e:	1a e2       	ldi	r17, 0x2A	; 42
	}
	PORTD &= ~(1<<PORTD5);
    4850:	5d 98       	cbi	0x0b, 5	; 11
	
	return taste;
}
    4852:	81 2f       	mov	r24, r17
    4854:	df 91       	pop	r29
    4856:	cf 91       	pop	r28
    4858:	1f 91       	pop	r17
    485a:	08 95       	ret

0000485c <_ZN9Interface17ZahlenausTastaturEv>:

uint8_t Interface::ZahlenausTastatur(){
    485c:	cf 93       	push	r28
    485e:	df 93       	push	r29
    4860:	ec 01       	movw	r28, r24
	while(true){
		uint8_t taste = Taster();
    4862:	ce 01       	movw	r24, r28
    4864:	6d df       	rcall	.-294    	; 0x4740 <_ZN9Interface6TasterEv>
		if(taste>='0' && taste<='9'){
    4866:	80 53       	subi	r24, 0x30	; 48
    4868:	8a 30       	cpi	r24, 0x0A	; 10
    486a:	d8 f7       	brcc	.-10     	; 0x4862 <_ZN9Interface17ZahlenausTastaturEv+0x6>
			return taste - '0';
		}
	}
}
    486c:	df 91       	pop	r29
    486e:	cf 91       	pop	r28
    4870:	08 95       	ret

00004872 <_ZN7KompassD1Ev>:
	for (uint8_t i=0;i<3;i++)
	{
		achsen[i]=0;
		offset[i]=0;
	}
}
    4872:	06 96       	adiw	r24, 0x06	; 6
    4874:	07 cf       	rjmp	.-498    	; 0x4684 <_ZN3I2CD1Ev>
    4876:	08 95       	ret

00004878 <_ZN7Kompass16HMC5883L_commandEhh>:
    4878:	0f 93       	push	r16
    487a:	1f 93       	push	r17
    487c:	cf 93       	push	r28
    487e:	df 93       	push	r29
    4880:	06 2f       	mov	r16, r22
    4882:	14 2f       	mov	r17, r20
    4884:	ec 01       	movw	r28, r24
    4886:	26 96       	adiw	r28, 0x06	; 6
    4888:	ce 01       	movw	r24, r28
    488a:	fd de       	rcall	.-518    	; 0x4686 <_ZN3I2C9twi_startEv>
    488c:	6c e3       	ldi	r22, 0x3C	; 60
    488e:	ce 01       	movw	r24, r28
    4890:	02 df       	rcall	.-508    	; 0x4696 <_ZN3I2C9twi_writeEh>
    4892:	60 2f       	mov	r22, r16
    4894:	ce 01       	movw	r24, r28
    4896:	ff de       	rcall	.-514    	; 0x4696 <_ZN3I2C9twi_writeEh>
    4898:	61 2f       	mov	r22, r17
    489a:	ce 01       	movw	r24, r28
    489c:	fc de       	rcall	.-520    	; 0x4696 <_ZN3I2C9twi_writeEh>
    489e:	ce 01       	movw	r24, r28
    48a0:	f6 de       	rcall	.-532    	; 0x468e <_ZN3I2C8twi_stopEv>
    48a2:	df 91       	pop	r29
    48a4:	cf 91       	pop	r28
    48a6:	1f 91       	pop	r17
    48a8:	0f 91       	pop	r16
    48aa:	08 95       	ret

000048ac <_ZN7KompassC1Ev>:
    48ac:	cf 93       	push	r28
    48ae:	df 93       	push	r29
    48b0:	ec 01       	movw	r28, r24
    48b2:	06 96       	adiw	r24, 0x06	; 6
    48b4:	e3 de       	rcall	.-570    	; 0x467c <_ZN3I2CC1Ev>
    48b6:	40 e7       	ldi	r20, 0x70	; 112
    48b8:	60 e0       	ldi	r22, 0x00	; 0
    48ba:	ce 01       	movw	r24, r28
    48bc:	dd df       	rcall	.-70     	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
    48be:	40 e2       	ldi	r20, 0x20	; 32
    48c0:	61 e0       	ldi	r22, 0x01	; 1
    48c2:	ce 01       	movw	r24, r28
    48c4:	d9 df       	rcall	.-78     	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
    48c6:	41 e0       	ldi	r20, 0x01	; 1
    48c8:	62 e0       	ldi	r22, 0x02	; 2
    48ca:	ce 01       	movw	r24, r28
    48cc:	d5 df       	rcall	.-86     	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
    48ce:	19 82       	std	Y+1, r1	; 0x01
    48d0:	18 82       	st	Y, r1
    48d2:	18 86       	std	Y+8, r1	; 0x08
    48d4:	1f 82       	std	Y+7, r1	; 0x07
    48d6:	1b 82       	std	Y+3, r1	; 0x03
    48d8:	1a 82       	std	Y+2, r1	; 0x02
    48da:	1a 86       	std	Y+10, r1	; 0x0a
    48dc:	19 86       	std	Y+9, r1	; 0x09
    48de:	1d 82       	std	Y+5, r1	; 0x05
    48e0:	1c 82       	std	Y+4, r1	; 0x04
    48e2:	1c 86       	std	Y+12, r1	; 0x0c
    48e4:	1b 86       	std	Y+11, r1	; 0x0b
    48e6:	df 91       	pop	r29
    48e8:	cf 91       	pop	r28
    48ea:	08 95       	ret

000048ec <_ZN7Kompass20HMC5883L_readHeadingEv>:

uint8_t Kompass::HMC5883L_readHeading(){
    48ec:	bf 92       	push	r11
    48ee:	cf 92       	push	r12
    48f0:	df 92       	push	r13
    48f2:	ef 92       	push	r14
    48f4:	ff 92       	push	r15
    48f6:	0f 93       	push	r16
    48f8:	1f 93       	push	r17
    48fa:	cf 93       	push	r28
    48fc:	df 93       	push	r29
    48fe:	00 d0       	rcall	.+0      	; 0x4900 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14>
    4900:	00 d0       	rcall	.+0      	; 0x4902 <_ZN7Kompass20HMC5883L_readHeadingEv+0x16>
    4902:	00 d0       	rcall	.+0      	; 0x4904 <_ZN7Kompass20HMC5883L_readHeadingEv+0x18>
    4904:	cd b7       	in	r28, 0x3d	; 61
    4906:	de b7       	in	r29, 0x3e	; 62
    4908:	6c 01       	movw	r12, r24
	cli();
    490a:	f8 94       	cli
	uint8_t heading[6];
	i2c.twi_start();
    490c:	7c 01       	movw	r14, r24
    490e:	26 e0       	ldi	r18, 0x06	; 6
    4910:	e2 0e       	add	r14, r18
    4912:	f1 1c       	adc	r15, r1
    4914:	c7 01       	movw	r24, r14
    4916:	b7 de       	rcall	.-658    	; 0x4686 <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCWRITEADRESSE);
    4918:	6c e3       	ldi	r22, 0x3C	; 60
    491a:	c7 01       	movw	r24, r14
    491c:	bc de       	rcall	.-648    	; 0x4696 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(0x03);
    491e:	63 e0       	ldi	r22, 0x03	; 3
    4920:	c7 01       	movw	r24, r14
    4922:	b9 de       	rcall	.-654    	; 0x4696 <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    4924:	c7 01       	movw	r24, r14
    4926:	af de       	rcall	.-674    	; 0x4686 <_ZN3I2C9twi_startEv>
	i2c.twi_write(HMCREADADRESSE);
    4928:	6d e3       	ldi	r22, 0x3D	; 61
    492a:	c7 01       	movw	r24, r14
    492c:	b4 de       	rcall	.-664    	; 0x4696 <_ZN3I2C9twi_writeEh>
    492e:	8e 01       	movw	r16, r28
    4930:	0f 5f       	subi	r16, 0xFF	; 255
    4932:	1f 4f       	sbci	r17, 0xFF	; 255
	
	for(uint8_t i=0; i<6;i++){
    4934:	b1 2c       	mov	r11, r1
		if (i<5)
    4936:	84 e0       	ldi	r24, 0x04	; 4
    4938:	8b 15       	cp	r24, r11
    493a:	30 f0       	brcs	.+12     	; 0x4948 <_ZN7Kompass20HMC5883L_readHeadingEv+0x5c>
		{
			heading[i]=i2c.twi_read(1);
    493c:	61 e0       	ldi	r22, 0x01	; 1
    493e:	c7 01       	movw	r24, r14
    4940:	ba de       	rcall	.-652    	; 0x46b6 <_ZN3I2C8twi_readEh>
    4942:	f8 01       	movw	r30, r16
    4944:	80 83       	st	Z, r24
    4946:	05 c0       	rjmp	.+10     	; 0x4952 <_ZN7Kompass20HMC5883L_readHeadingEv+0x66>
		}
		else
		{
			heading[i]=i2c.twi_read(0);
    4948:	60 e0       	ldi	r22, 0x00	; 0
    494a:	c7 01       	movw	r24, r14
    494c:	b4 de       	rcall	.-664    	; 0x46b6 <_ZN3I2C8twi_readEh>
    494e:	f8 01       	movw	r30, r16
    4950:	80 83       	st	Z, r24
	i2c.twi_write(HMCWRITEADRESSE);
	i2c.twi_write(0x03);
	i2c.twi_start();
	i2c.twi_write(HMCREADADRESSE);
	
	for(uint8_t i=0; i<6;i++){
    4952:	b3 94       	inc	r11
    4954:	0f 5f       	subi	r16, 0xFF	; 255
    4956:	1f 4f       	sbci	r17, 0xFF	; 255
    4958:	f6 e0       	ldi	r31, 0x06	; 6
    495a:	bf 12       	cpse	r11, r31
    495c:	ec cf       	rjmp	.-40     	; 0x4936 <_ZN7Kompass20HMC5883L_readHeadingEv+0x4a>
		{
			heading[i]=i2c.twi_read(0);
		}
		
	}
	i2c.twi_stop();
    495e:	c7 01       	movw	r24, r14
    4960:	96 de       	rcall	.-724    	; 0x468e <_ZN3I2C8twi_stopEv>
	achsen[0] =(int16_t) (heading[1] | (heading[0] << 8));
    4962:	89 81       	ldd	r24, Y+1	; 0x01
    4964:	90 e0       	ldi	r25, 0x00	; 0
    4966:	98 2f       	mov	r25, r24
    4968:	88 27       	eor	r24, r24
    496a:	2a 81       	ldd	r18, Y+2	; 0x02
    496c:	82 2b       	or	r24, r18
    496e:	f6 01       	movw	r30, r12
    4970:	91 83       	std	Z+1, r25	; 0x01
    4972:	80 83       	st	Z, r24
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
    4974:	8b 81       	ldd	r24, Y+3	; 0x03
    4976:	90 e0       	ldi	r25, 0x00	; 0
    4978:	98 2f       	mov	r25, r24
    497a:	88 27       	eor	r24, r24
    497c:	2c 81       	ldd	r18, Y+4	; 0x04
    497e:	82 2b       	or	r24, r18
    4980:	93 83       	std	Z+3, r25	; 0x03
    4982:	82 83       	std	Z+2, r24	; 0x02
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
    4984:	8d 81       	ldd	r24, Y+5	; 0x05
    4986:	90 e0       	ldi	r25, 0x00	; 0
    4988:	98 2f       	mov	r25, r24
    498a:	88 27       	eor	r24, r24
    498c:	2e 81       	ldd	r18, Y+6	; 0x06
    498e:	82 2b       	or	r24, r18
    4990:	95 83       	std	Z+5, r25	; 0x05
    4992:	84 83       	std	Z+4, r24	; 0x04
	sei();
    4994:	78 94       	sei
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
    4996:	f6 01       	movw	r30, r12
    4998:	80 81       	ld	r24, Z
    499a:	91 81       	ldd	r25, Z+1	; 0x01
    499c:	81 15       	cp	r24, r1
    499e:	90 4f       	sbci	r25, 0xF0	; 240
    49a0:	09 f4       	brne	.+2      	; 0x49a4 <_ZN7Kompass20HMC5883L_readHeadingEv+0xb8>
    49a2:	47 c0       	rjmp	.+142    	; 0x4a32 <_ZN7Kompass20HMC5883L_readHeadingEv+0x146>
    49a4:	f6 01       	movw	r30, r12
    49a6:	82 81       	ldd	r24, Z+2	; 0x02
    49a8:	93 81       	ldd	r25, Z+3	; 0x03
    49aa:	81 15       	cp	r24, r1
    49ac:	90 4f       	sbci	r25, 0xF0	; 240
    49ae:	09 f4       	brne	.+2      	; 0x49b2 <_ZN7Kompass20HMC5883L_readHeadingEv+0xc6>
    49b0:	42 c0       	rjmp	.+132    	; 0x4a36 <_ZN7Kompass20HMC5883L_readHeadingEv+0x14a>
    49b2:	f6 01       	movw	r30, r12
    49b4:	84 81       	ldd	r24, Z+4	; 0x04
    49b6:	95 81       	ldd	r25, Z+5	; 0x05
    49b8:	81 15       	cp	r24, r1
    49ba:	90 4f       	sbci	r25, 0xF0	; 240
    49bc:	f1 f1       	breq	.+124    	; 0x4a3a <_ZN7Kompass20HMC5883L_readHeadingEv+0x14e>
    49be:	f6 01       	movw	r30, r12
    49c0:	83 e0       	ldi	r24, 0x03	; 3
    49c2:	df 01       	movw	r26, r30
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
			if(achsen[i]>max[i]){
    49c4:	20 81       	ld	r18, Z
    49c6:	31 81       	ldd	r19, Z+1	; 0x01
    49c8:	45 85       	ldd	r20, Z+13	; 0x0d
    49ca:	56 85       	ldd	r21, Z+14	; 0x0e
    49cc:	42 17       	cp	r20, r18
    49ce:	53 07       	cpc	r21, r19
    49d0:	8c f4       	brge	.+34     	; 0x49f4 <_ZN7Kompass20HMC5883L_readHeadingEv+0x108>
				max[i]=achsen[i];
    49d2:	36 87       	std	Z+14, r19	; 0x0e
    49d4:	25 87       	std	Z+13, r18	; 0x0d
				offset[i]=(max[i]+min[i])/2;
    49d6:	43 89       	ldd	r20, Z+19	; 0x13
    49d8:	54 89       	ldd	r21, Z+20	; 0x14
    49da:	24 0f       	add	r18, r20
    49dc:	35 1f       	adc	r19, r21
    49de:	33 23       	and	r19, r19
    49e0:	14 f4       	brge	.+4      	; 0x49e6 <_ZN7Kompass20HMC5883L_readHeadingEv+0xfa>
    49e2:	2f 5f       	subi	r18, 0xFF	; 255
    49e4:	3f 4f       	sbci	r19, 0xFF	; 255
    49e6:	35 95       	asr	r19
    49e8:	27 95       	ror	r18
    49ea:	18 96       	adiw	r26, 0x08	; 8
    49ec:	3c 93       	st	X, r19
    49ee:	2e 93       	st	-X, r18
    49f0:	17 97       	sbiw	r26, 0x07	; 7
    49f2:	1a c0       	rjmp	.+52     	; 0x4a28 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else if(achsen[i]<min[i]){
    49f4:	63 89       	ldd	r22, Z+19	; 0x13
    49f6:	74 89       	ldd	r23, Z+20	; 0x14
    49f8:	26 17       	cp	r18, r22
    49fa:	37 07       	cpc	r19, r23
    49fc:	7c f4       	brge	.+30     	; 0x4a1c <_ZN7Kompass20HMC5883L_readHeadingEv+0x130>
				min[i]=achsen[i];
    49fe:	34 8b       	std	Z+20, r19	; 0x14
    4a00:	23 8b       	std	Z+19, r18	; 0x13
				offset[i]=(max[i]+min[i])/2;
    4a02:	24 0f       	add	r18, r20
    4a04:	35 1f       	adc	r19, r21
    4a06:	33 23       	and	r19, r19
    4a08:	14 f4       	brge	.+4      	; 0x4a0e <_ZN7Kompass20HMC5883L_readHeadingEv+0x122>
    4a0a:	2f 5f       	subi	r18, 0xFF	; 255
    4a0c:	3f 4f       	sbci	r19, 0xFF	; 255
    4a0e:	35 95       	asr	r19
    4a10:	27 95       	ror	r18
    4a12:	18 96       	adiw	r26, 0x08	; 8
    4a14:	3c 93       	st	X, r19
    4a16:	2e 93       	st	-X, r18
    4a18:	17 97       	sbiw	r26, 0x07	; 7
    4a1a:	06 c0       	rjmp	.+12     	; 0x4a28 <_ZN7Kompass20HMC5883L_readHeadingEv+0x13c>
			}
			else {
				achsen[i]-=offset[i];
    4a1c:	47 81       	ldd	r20, Z+7	; 0x07
    4a1e:	50 85       	ldd	r21, Z+8	; 0x08
    4a20:	24 1b       	sub	r18, r20
    4a22:	35 0b       	sbc	r19, r21
    4a24:	31 83       	std	Z+1, r19	; 0x01
    4a26:	20 83       	st	Z, r18
    4a28:	81 50       	subi	r24, 0x01	; 1
    4a2a:	32 96       	adiw	r30, 0x02	; 2
		return 1;
	}
	//Kallibrierung durchfuehren, jedes mal, wenn eine abfrage stattfindet
	//somit passive kalibrierung
	else{
		for(uint8_t i=0;i<3;i++){
    4a2c:	81 11       	cpse	r24, r1
    4a2e:	c9 cf       	rjmp	.-110    	; 0x49c2 <_ZN7Kompass20HMC5883L_readHeadingEv+0xd6>
    4a30:	05 c0       	rjmp	.+10     	; 0x4a3c <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
	achsen[1] =(int16_t) (heading[3] | (heading[2] << 8));
	achsen[2] =(int16_t) (heading[5] | (heading[4] << 8));
	sei();
	if (achsen[0]==-4096 || achsen[1]==-4096 || achsen[2]==-4096)
	{
		return 1;
    4a32:	81 e0       	ldi	r24, 0x01	; 1
    4a34:	03 c0       	rjmp	.+6      	; 0x4a3c <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    4a36:	81 e0       	ldi	r24, 0x01	; 1
    4a38:	01 c0       	rjmp	.+2      	; 0x4a3c <_ZN7Kompass20HMC5883L_readHeadingEv+0x150>
    4a3a:	81 e0       	ldi	r24, 0x01	; 1
			}
		}
	}
	
	return 0;
}
    4a3c:	26 96       	adiw	r28, 0x06	; 6
    4a3e:	0f b6       	in	r0, 0x3f	; 63
    4a40:	f8 94       	cli
    4a42:	de bf       	out	0x3e, r29	; 62
    4a44:	0f be       	out	0x3f, r0	; 63
    4a46:	cd bf       	out	0x3d, r28	; 61
    4a48:	df 91       	pop	r29
    4a4a:	cf 91       	pop	r28
    4a4c:	1f 91       	pop	r17
    4a4e:	0f 91       	pop	r16
    4a50:	ff 90       	pop	r15
    4a52:	ef 90       	pop	r14
    4a54:	df 90       	pop	r13
    4a56:	cf 90       	pop	r12
    4a58:	bf 90       	pop	r11
    4a5a:	08 95       	ret

00004a5c <_ZN7Kompass5angleEdd>:

double Kompass::angle(double roll, double pitch){
    4a5c:	2f 92       	push	r2
    4a5e:	3f 92       	push	r3
    4a60:	4f 92       	push	r4
    4a62:	5f 92       	push	r5
    4a64:	6f 92       	push	r6
    4a66:	7f 92       	push	r7
    4a68:	8f 92       	push	r8
    4a6a:	9f 92       	push	r9
    4a6c:	af 92       	push	r10
    4a6e:	bf 92       	push	r11
    4a70:	cf 92       	push	r12
    4a72:	df 92       	push	r13
    4a74:	ef 92       	push	r14
    4a76:	ff 92       	push	r15
    4a78:	0f 93       	push	r16
    4a7a:	1f 93       	push	r17
    4a7c:	cf 93       	push	r28
    4a7e:	df 93       	push	r29
    4a80:	cd b7       	in	r28, 0x3d	; 61
    4a82:	de b7       	in	r29, 0x3e	; 62
    4a84:	64 97       	sbiw	r28, 0x14	; 20
    4a86:	0f b6       	in	r0, 0x3f	; 63
    4a88:	f8 94       	cli
    4a8a:	de bf       	out	0x3e, r29	; 62
    4a8c:	0f be       	out	0x3f, r0	; 63
    4a8e:	cd bf       	out	0x3d, r28	; 61
    4a90:	1c 01       	movw	r2, r24
    4a92:	4a 01       	movw	r8, r20
    4a94:	5b 01       	movw	r10, r22
    4a96:	68 01       	movw	r12, r16
    4a98:	79 01       	movw	r14, r18
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
    4a9a:	28 df       	rcall	.-432    	; 0x48ec <_ZN7Kompass20HMC5883L_readHeadingEv>
    4a9c:	81 11       	cpse	r24, r1
    4a9e:	e5 c0       	rjmp	.+458    	; 0x4c6a <_ZN7Kompass5angleEdd+0x20e>
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4aa0:	c7 01       	movw	r24, r14
    4aa2:	b6 01       	movw	r22, r12
    4aa4:	50 d7       	rcall	.+3744   	; 0x5946 <cos>
    4aa6:	69 83       	std	Y+1, r22	; 0x01
    4aa8:	7a 83       	std	Y+2, r23	; 0x02
    4aaa:	8b 83       	std	Y+3, r24	; 0x03
    4aac:	9c 83       	std	Y+4, r25	; 0x04
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4aae:	f1 01       	movw	r30, r2
    4ab0:	62 81       	ldd	r22, Z+2	; 0x02
    4ab2:	73 81       	ldd	r23, Z+3	; 0x03
    4ab4:	88 27       	eor	r24, r24
    4ab6:	77 fd       	sbrc	r23, 7
    4ab8:	80 95       	com	r24
    4aba:	98 2f       	mov	r25, r24
    4abc:	e2 d7       	rcall	.+4036   	; 0x5a82 <__floatsisf>
    4abe:	2b 01       	movw	r4, r22
    4ac0:	3c 01       	movw	r6, r24
    4ac2:	c5 01       	movw	r24, r10
    4ac4:	b4 01       	movw	r22, r8
    4ac6:	0e 94 02 2f 	call	0x5e04	; 0x5e04 <sin>
    4aca:	6d 83       	std	Y+5, r22	; 0x05
    4acc:	7e 83       	std	Y+6, r23	; 0x06
    4ace:	8f 83       	std	Y+7, r24	; 0x07
    4ad0:	98 87       	std	Y+8, r25	; 0x08
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    4ad2:	f1 01       	movw	r30, r2
    4ad4:	64 81       	ldd	r22, Z+4	; 0x04
    4ad6:	75 81       	ldd	r23, Z+5	; 0x05
    4ad8:	88 27       	eor	r24, r24
    4ada:	77 fd       	sbrc	r23, 7
    4adc:	80 95       	com	r24
    4ade:	98 2f       	mov	r25, r24
    4ae0:	d0 d7       	rcall	.+4000   	; 0x5a82 <__floatsisf>
    4ae2:	69 87       	std	Y+9, r22	; 0x09
    4ae4:	7a 87       	std	Y+10, r23	; 0x0a
    4ae6:	8b 87       	std	Y+11, r24	; 0x0b
    4ae8:	9c 87       	std	Y+12, r25	; 0x0c
    4aea:	c5 01       	movw	r24, r10
    4aec:	b4 01       	movw	r22, r8
    4aee:	2b d7       	rcall	.+3670   	; 0x5946 <cos>
    4af0:	4b 01       	movw	r8, r22
    4af2:	5c 01       	movw	r10, r24
    4af4:	c7 01       	movw	r24, r14
    4af6:	b6 01       	movw	r22, r12
    4af8:	0e 94 02 2f 	call	0x5e04	; 0x5e04 <sin>
    4afc:	6d 87       	std	Y+13, r22	; 0x0d
    4afe:	7e 87       	std	Y+14, r23	; 0x0e
    4b00:	8f 87       	std	Y+15, r24	; 0x0f
    4b02:	98 8b       	std	Y+16, r25	; 0x10
		temp_M[1] = achsen[1]*cos(roll);
    4b04:	a5 01       	movw	r20, r10
    4b06:	94 01       	movw	r18, r8
    4b08:	c3 01       	movw	r24, r6
    4b0a:	b2 01       	movw	r22, r4
    4b0c:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    4b10:	85 d7       	rcall	.+3850   	; 0x5a1c <__fixsfsi>
		temp_M[1]+= achsen[2]*sin(roll);
    4b12:	88 27       	eor	r24, r24
    4b14:	77 fd       	sbrc	r23, 7
    4b16:	80 95       	com	r24
    4b18:	98 2f       	mov	r25, r24
    4b1a:	b3 d7       	rcall	.+3942   	; 0x5a82 <__floatsisf>
    4b1c:	6b 01       	movw	r12, r22
    4b1e:	7c 01       	movw	r14, r24
    4b20:	29 85       	ldd	r18, Y+9	; 0x09
    4b22:	3a 85       	ldd	r19, Y+10	; 0x0a
    4b24:	4b 85       	ldd	r20, Y+11	; 0x0b
    4b26:	5c 85       	ldd	r21, Y+12	; 0x0c
    4b28:	6d 81       	ldd	r22, Y+5	; 0x05
    4b2a:	7e 81       	ldd	r23, Y+6	; 0x06
    4b2c:	8f 81       	ldd	r24, Y+7	; 0x07
    4b2e:	98 85       	ldd	r25, Y+8	; 0x08
    4b30:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    4b34:	9b 01       	movw	r18, r22
    4b36:	ac 01       	movw	r20, r24
    4b38:	c7 01       	movw	r24, r14
    4b3a:	b6 01       	movw	r22, r12
    4b3c:	3a d6       	rcall	.+3188   	; 0x57b2 <__addsf3>
    4b3e:	6e d7       	rcall	.+3804   	; 0x5a1c <__fixsfsi>
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4b40:	88 27       	eor	r24, r24
    4b42:	77 fd       	sbrc	r23, 7
    4b44:	80 95       	com	r24
    4b46:	98 2f       	mov	r25, r24
    4b48:	9c d7       	rcall	.+3896   	; 0x5a82 <__floatsisf>
    4b4a:	69 8b       	std	Y+17, r22	; 0x11
    4b4c:	7a 8b       	std	Y+18, r23	; 0x12
    4b4e:	8b 8b       	std	Y+19, r24	; 0x13
    4b50:	9c 8b       	std	Y+20, r25	; 0x14
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
	}
	else{
		temp_M[0] = achsen[0]*cos(pitch);
    4b52:	f1 01       	movw	r30, r2
    4b54:	60 81       	ld	r22, Z
    4b56:	71 81       	ldd	r23, Z+1	; 0x01
    4b58:	88 27       	eor	r24, r24
    4b5a:	77 fd       	sbrc	r23, 7
    4b5c:	80 95       	com	r24
    4b5e:	98 2f       	mov	r25, r24
    4b60:	90 d7       	rcall	.+3872   	; 0x5a82 <__floatsisf>
    4b62:	29 81       	ldd	r18, Y+1	; 0x01
    4b64:	3a 81       	ldd	r19, Y+2	; 0x02
    4b66:	4b 81       	ldd	r20, Y+3	; 0x03
    4b68:	5c 81       	ldd	r21, Y+4	; 0x04
    4b6a:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    4b6e:	56 d7       	rcall	.+3756   	; 0x5a1c <__fixsfsi>
		temp_M[0]+= achsen[1]*sin(roll)*cos(pitch);
    4b70:	88 27       	eor	r24, r24
    4b72:	77 fd       	sbrc	r23, 7
    4b74:	80 95       	com	r24
    4b76:	98 2f       	mov	r25, r24
    4b78:	84 d7       	rcall	.+3848   	; 0x5a82 <__floatsisf>
    4b7a:	6b 01       	movw	r12, r22
    4b7c:	7c 01       	movw	r14, r24
    4b7e:	2d 81       	ldd	r18, Y+5	; 0x05
    4b80:	3e 81       	ldd	r19, Y+6	; 0x06
    4b82:	4f 81       	ldd	r20, Y+7	; 0x07
    4b84:	58 85       	ldd	r21, Y+8	; 0x08
    4b86:	c3 01       	movw	r24, r6
    4b88:	b2 01       	movw	r22, r4
    4b8a:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    4b8e:	9b 01       	movw	r18, r22
    4b90:	ac 01       	movw	r20, r24
    4b92:	69 81       	ldd	r22, Y+1	; 0x01
    4b94:	7a 81       	ldd	r23, Y+2	; 0x02
    4b96:	8b 81       	ldd	r24, Y+3	; 0x03
    4b98:	9c 81       	ldd	r25, Y+4	; 0x04
    4b9a:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    4b9e:	9b 01       	movw	r18, r22
    4ba0:	ac 01       	movw	r20, r24
    4ba2:	c7 01       	movw	r24, r14
    4ba4:	b6 01       	movw	r22, r12
    4ba6:	05 d6       	rcall	.+3082   	; 0x57b2 <__addsf3>
    4ba8:	39 d7       	rcall	.+3698   	; 0x5a1c <__fixsfsi>
		temp_M[0]+= achsen[2]*cos(roll)*sin(pitch);
    4baa:	88 27       	eor	r24, r24
    4bac:	77 fd       	sbrc	r23, 7
    4bae:	80 95       	com	r24
    4bb0:	98 2f       	mov	r25, r24
    4bb2:	67 d7       	rcall	.+3790   	; 0x5a82 <__floatsisf>
    4bb4:	6b 01       	movw	r12, r22
    4bb6:	7c 01       	movw	r14, r24
    4bb8:	a5 01       	movw	r20, r10
    4bba:	94 01       	movw	r18, r8
    4bbc:	69 85       	ldd	r22, Y+9	; 0x09
    4bbe:	7a 85       	ldd	r23, Y+10	; 0x0a
    4bc0:	8b 85       	ldd	r24, Y+11	; 0x0b
    4bc2:	9c 85       	ldd	r25, Y+12	; 0x0c
    4bc4:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    4bc8:	2d 85       	ldd	r18, Y+13	; 0x0d
    4bca:	3e 85       	ldd	r19, Y+14	; 0x0e
    4bcc:	4f 85       	ldd	r20, Y+15	; 0x0f
    4bce:	58 89       	ldd	r21, Y+16	; 0x10
    4bd0:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    4bd4:	9b 01       	movw	r18, r22
    4bd6:	ac 01       	movw	r20, r24
    4bd8:	c7 01       	movw	r24, r14
    4bda:	b6 01       	movw	r22, r12
    4bdc:	ea d5       	rcall	.+3028   	; 0x57b2 <__addsf3>
    4bde:	1e d7       	rcall	.+3644   	; 0x5a1c <__fixsfsi>
		temp_M[1] = achsen[1]*cos(roll);
		temp_M[1]+= achsen[2]*sin(roll);
		//temp_M[0]=achsen[0];
		//temp_M[1]=achsen[1];
		angle=atan2(temp_M[0],temp_M[1])*180.0/M_PI+180.0;
    4be0:	88 27       	eor	r24, r24
    4be2:	77 fd       	sbrc	r23, 7
    4be4:	80 95       	com	r24
    4be6:	98 2f       	mov	r25, r24
    4be8:	4c d7       	rcall	.+3736   	; 0x5a82 <__floatsisf>
    4bea:	29 89       	ldd	r18, Y+17	; 0x11
    4bec:	3a 89       	ldd	r19, Y+18	; 0x12
    4bee:	4b 89       	ldd	r20, Y+19	; 0x13
    4bf0:	5c 89       	ldd	r21, Y+20	; 0x14
    4bf2:	52 d6       	rcall	.+3236   	; 0x5898 <atan2>
    4bf4:	20 e0       	ldi	r18, 0x00	; 0
    4bf6:	30 e0       	ldi	r19, 0x00	; 0
    4bf8:	44 e3       	ldi	r20, 0x34	; 52
    4bfa:	53 e4       	ldi	r21, 0x43	; 67
    4bfc:	0e 94 9f 2e 	call	0x5d3e	; 0x5d3e <__mulsf3>
    4c00:	2b ed       	ldi	r18, 0xDB	; 219
    4c02:	3f e0       	ldi	r19, 0x0F	; 15
    4c04:	49 e4       	ldi	r20, 0x49	; 73
    4c06:	50 e4       	ldi	r21, 0x40	; 64
    4c08:	a1 d6       	rcall	.+3394   	; 0x594c <__divsf3>
    4c0a:	20 e0       	ldi	r18, 0x00	; 0
    4c0c:	30 e0       	ldi	r19, 0x00	; 0
    4c0e:	44 e3       	ldi	r20, 0x34	; 52
    4c10:	53 e4       	ldi	r21, 0x43	; 67
    4c12:	cf d5       	rcall	.+2974   	; 0x57b2 <__addsf3>
		//Tilt kompensation
		//deklination
		angle+=2.35;
    4c14:	26 e6       	ldi	r18, 0x66	; 102
    4c16:	36 e6       	ldi	r19, 0x66	; 102
    4c18:	46 e1       	ldi	r20, 0x16	; 22
    4c1a:	50 e4       	ldi	r21, 0x40	; 64
    4c1c:	ca d5       	rcall	.+2964   	; 0x57b2 <__addsf3>
    4c1e:	6b 01       	movw	r12, r22
    4c20:	7c 01       	movw	r14, r24
		//Normierung auf %360
		if (angle>=360)
    4c22:	20 e0       	ldi	r18, 0x00	; 0
    4c24:	30 e0       	ldi	r19, 0x00	; 0
    4c26:	44 eb       	ldi	r20, 0xB4	; 180
    4c28:	53 e4       	ldi	r21, 0x43	; 67
    4c2a:	0e 94 4f 2e 	call	0x5c9e	; 0x5c9e <__gesf2>
    4c2e:	88 23       	and	r24, r24
    4c30:	54 f0       	brlt	.+20     	; 0x4c46 <_ZN7Kompass5angleEdd+0x1ea>
		{
			angle-=360;
    4c32:	20 e0       	ldi	r18, 0x00	; 0
    4c34:	30 e0       	ldi	r19, 0x00	; 0
    4c36:	44 eb       	ldi	r20, 0xB4	; 180
    4c38:	53 e4       	ldi	r21, 0x43	; 67
    4c3a:	c7 01       	movw	r24, r14
    4c3c:	b6 01       	movw	r22, r12
    4c3e:	b8 d5       	rcall	.+2928   	; 0x57b0 <__subsf3>
    4c40:	6b 01       	movw	r12, r22
    4c42:	7c 01       	movw	r14, r24
    4c44:	1a c0       	rjmp	.+52     	; 0x4c7a <_ZN7Kompass5angleEdd+0x21e>
		}
		else if (angle < 0)
    4c46:	20 e0       	ldi	r18, 0x00	; 0
    4c48:	30 e0       	ldi	r19, 0x00	; 0
    4c4a:	a9 01       	movw	r20, r18
    4c4c:	c7 01       	movw	r24, r14
    4c4e:	b6 01       	movw	r22, r12
    4c50:	76 d6       	rcall	.+3308   	; 0x593e <__cmpsf2>
    4c52:	88 23       	and	r24, r24
    4c54:	94 f4       	brge	.+36     	; 0x4c7a <_ZN7Kompass5angleEdd+0x21e>
		{
			angle+=360;
    4c56:	20 e0       	ldi	r18, 0x00	; 0
    4c58:	30 e0       	ldi	r19, 0x00	; 0
    4c5a:	44 eb       	ldi	r20, 0xB4	; 180
    4c5c:	53 e4       	ldi	r21, 0x43	; 67
    4c5e:	c7 01       	movw	r24, r14
    4c60:	b6 01       	movw	r22, r12
    4c62:	a7 d5       	rcall	.+2894   	; 0x57b2 <__addsf3>
    4c64:	6b 01       	movw	r12, r22
    4c66:	7c 01       	movw	r14, r24
    4c68:	08 c0       	rjmp	.+16     	; 0x4c7a <_ZN7Kompass5angleEdd+0x21e>
double Kompass::angle(double roll, double pitch){
	double angle=0;
	int16_t temp_M[2];
	if (HMC5883L_readHeading())
	{
		angle=-1.0;
    4c6a:	0f 2e       	mov	r0, r31
    4c6c:	c1 2c       	mov	r12, r1
    4c6e:	d1 2c       	mov	r13, r1
    4c70:	f0 e8       	ldi	r31, 0x80	; 128
    4c72:	ef 2e       	mov	r14, r31
    4c74:	ff eb       	ldi	r31, 0xBF	; 191
    4c76:	ff 2e       	mov	r15, r31
    4c78:	f0 2d       	mov	r31, r0
		{
			angle+=360;
		}
	}
	
	HMC5883L_command(0x02,HMCSIGLEMODE);
    4c7a:	41 e0       	ldi	r20, 0x01	; 1
    4c7c:	62 e0       	ldi	r22, 0x02	; 2
    4c7e:	c1 01       	movw	r24, r2
    4c80:	fb dd       	rcall	.-1034   	; 0x4878 <_ZN7Kompass16HMC5883L_commandEhh>
	return angle;
}
    4c82:	c7 01       	movw	r24, r14
    4c84:	b6 01       	movw	r22, r12
    4c86:	64 96       	adiw	r28, 0x14	; 20
    4c88:	0f b6       	in	r0, 0x3f	; 63
    4c8a:	f8 94       	cli
    4c8c:	de bf       	out	0x3e, r29	; 62
    4c8e:	0f be       	out	0x3f, r0	; 63
    4c90:	cd bf       	out	0x3d, r28	; 61
    4c92:	df 91       	pop	r29
    4c94:	cf 91       	pop	r28
    4c96:	1f 91       	pop	r17
    4c98:	0f 91       	pop	r16
    4c9a:	ff 90       	pop	r15
    4c9c:	ef 90       	pop	r14
    4c9e:	df 90       	pop	r13
    4ca0:	cf 90       	pop	r12
    4ca2:	bf 90       	pop	r11
    4ca4:	af 90       	pop	r10
    4ca6:	9f 90       	pop	r9
    4ca8:	8f 90       	pop	r8
    4caa:	7f 90       	pop	r7
    4cac:	6f 90       	pop	r6
    4cae:	5f 90       	pop	r5
    4cb0:	4f 90       	pop	r4
    4cb2:	3f 90       	pop	r3
    4cb4:	2f 90       	pop	r2
    4cb6:	08 95       	ret

00004cb8 <_ZN7Kompass25kallibrierung_ruecksetzenEv>:

void Kompass::kallibrierung_ruecksetzen(){
    4cb8:	fc 01       	movw	r30, r24
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4cba:	16 86       	std	Z+14, r1	; 0x0e
    4cbc:	15 86       	std	Z+13, r1	; 0x0d
		min[i]=0;
    4cbe:	14 8a       	std	Z+20, r1	; 0x14
    4cc0:	13 8a       	std	Z+19, r1	; 0x13
		offset[i]=0;
    4cc2:	10 86       	std	Z+8, r1	; 0x08
    4cc4:	17 82       	std	Z+7, r1	; 0x07
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4cc6:	10 8a       	std	Z+16, r1	; 0x10
    4cc8:	17 86       	std	Z+15, r1	; 0x0f
		min[i]=0;
    4cca:	16 8a       	std	Z+22, r1	; 0x16
    4ccc:	15 8a       	std	Z+21, r1	; 0x15
		offset[i]=0;
    4cce:	12 86       	std	Z+10, r1	; 0x0a
    4cd0:	11 86       	std	Z+9, r1	; 0x09
}

void Kompass::kallibrierung_ruecksetzen(){
	for (uint8_t i=0;i<3;i++)
	{
		max[i]=0;
    4cd2:	12 8a       	std	Z+18, r1	; 0x12
    4cd4:	11 8a       	std	Z+17, r1	; 0x11
		min[i]=0;
    4cd6:	10 8e       	std	Z+24, r1	; 0x18
    4cd8:	17 8a       	std	Z+23, r1	; 0x17
		offset[i]=0;
    4cda:	14 86       	std	Z+12, r1	; 0x0c
    4cdc:	13 86       	std	Z+11, r1	; 0x0b
    4cde:	08 95       	ret

00004ce0 <_ZN7LSM303DD1Ev>:
	//FIFO Bypass Mode
	ACCBypassmode();
}

void LSM303D::ACCStreammode(){
	LSM303_command(FIFO_CTRL,(1<<FM1));
    4ce0:	40 96       	adiw	r24, 0x10	; 16
    4ce2:	d0 cc       	rjmp	.-1632   	; 0x4684 <_ZN3I2CD1Ev>
    4ce4:	08 95       	ret

00004ce6 <_ZN7LSM303D7readaccEv>:
    4ce6:	6f 92       	push	r6
    4ce8:	7f 92       	push	r7
    4cea:	8f 92       	push	r8
    4cec:	9f 92       	push	r9
    4cee:	af 92       	push	r10
    4cf0:	bf 92       	push	r11
    4cf2:	cf 92       	push	r12
    4cf4:	df 92       	push	r13
    4cf6:	ef 92       	push	r14
    4cf8:	ff 92       	push	r15
    4cfa:	1f 93       	push	r17
    4cfc:	cf 93       	push	r28
    4cfe:	df 93       	push	r29
    4d00:	00 d0       	rcall	.+0      	; 0x4d02 <_ZN7LSM303D7readaccEv+0x1c>
    4d02:	00 d0       	rcall	.+0      	; 0x4d04 <_ZN7LSM303D7readaccEv+0x1e>
    4d04:	00 d0       	rcall	.+0      	; 0x4d06 <_ZN7LSM303D7readaccEv+0x20>
    4d06:	cd b7       	in	r28, 0x3d	; 61
    4d08:	de b7       	in	r29, 0x3e	; 62
    4d0a:	3c 01       	movw	r6, r24
    4d0c:	f8 94       	cli
    4d0e:	6c 01       	movw	r12, r24
    4d10:	80 e1       	ldi	r24, 0x10	; 16
    4d12:	c8 0e       	add	r12, r24
    4d14:	d1 1c       	adc	r13, r1
    4d16:	c6 01       	movw	r24, r12
    4d18:	b6 dc       	rcall	.-1684   	; 0x4686 <_ZN3I2C9twi_startEv>
    4d1a:	6a e3       	ldi	r22, 0x3A	; 58
    4d1c:	c6 01       	movw	r24, r12
    4d1e:	bb dc       	rcall	.-1674   	; 0x4696 <_ZN3I2C9twi_writeEh>
    4d20:	68 ea       	ldi	r22, 0xA8	; 168
    4d22:	c6 01       	movw	r24, r12
    4d24:	b8 dc       	rcall	.-1680   	; 0x4696 <_ZN3I2C9twi_writeEh>
    4d26:	c6 01       	movw	r24, r12
    4d28:	ae dc       	rcall	.-1700   	; 0x4686 <_ZN3I2C9twi_startEv>
    4d2a:	6b e3       	ldi	r22, 0x3B	; 59
    4d2c:	c6 01       	movw	r24, r12
    4d2e:	b3 dc       	rcall	.-1690   	; 0x4696 <_ZN3I2C9twi_writeEh>
    4d30:	fe 01       	movw	r30, r28
    4d32:	31 96       	adiw	r30, 0x01	; 1
    4d34:	7f 01       	movw	r14, r30
    4d36:	10 e0       	ldi	r17, 0x00	; 0
    4d38:	15 30       	cpi	r17, 0x05	; 5
    4d3a:	30 f4       	brcc	.+12     	; 0x4d48 <_ZN7LSM303D7readaccEv+0x62>
    4d3c:	61 e0       	ldi	r22, 0x01	; 1
    4d3e:	c6 01       	movw	r24, r12
    4d40:	ba dc       	rcall	.-1676   	; 0x46b6 <_ZN3I2C8twi_readEh>
    4d42:	f7 01       	movw	r30, r14
    4d44:	80 83       	st	Z, r24
    4d46:	05 c0       	rjmp	.+10     	; 0x4d52 <_ZN7LSM303D7readaccEv+0x6c>
    4d48:	60 e0       	ldi	r22, 0x00	; 0
    4d4a:	c6 01       	movw	r24, r12
    4d4c:	b4 dc       	rcall	.-1688   	; 0x46b6 <_ZN3I2C8twi_readEh>
    4d4e:	f7 01       	movw	r30, r14
    4d50:	80 83       	st	Z, r24
    4d52:	1f 5f       	subi	r17, 0xFF	; 255
    4d54:	ff ef       	ldi	r31, 0xFF	; 255
    4d56:	ef 1a       	sub	r14, r31
    4d58:	ff 0a       	sbc	r15, r31
    4d5a:	16 30       	cpi	r17, 0x06	; 6
    4d5c:	69 f7       	brne	.-38     	; 0x4d38 <_ZN7LSM303D7readaccEv+0x52>
    4d5e:	c6 01       	movw	r24, r12
    4d60:	96 dc       	rcall	.-1748   	; 0x468e <_ZN3I2C8twi_stopEv>
    4d62:	6a 81       	ldd	r22, Y+2	; 0x02
    4d64:	70 e0       	ldi	r23, 0x00	; 0
    4d66:	76 2f       	mov	r23, r22
    4d68:	66 27       	eor	r22, r22
    4d6a:	89 81       	ldd	r24, Y+1	; 0x01
    4d6c:	68 2b       	or	r22, r24
    4d6e:	f3 01       	movw	r30, r6
    4d70:	75 83       	std	Z+5, r23	; 0x05
    4d72:	64 83       	std	Z+4, r22	; 0x04
    4d74:	ac 80       	ldd	r10, Y+4	; 0x04
    4d76:	b1 2c       	mov	r11, r1
    4d78:	ba 2c       	mov	r11, r10
    4d7a:	aa 24       	eor	r10, r10
    4d7c:	8b 81       	ldd	r24, Y+3	; 0x03
    4d7e:	a8 2a       	or	r10, r24
    4d80:	b1 82       	std	Z+1, r11	; 0x01
    4d82:	a0 82       	st	Z, r10
    4d84:	8e 80       	ldd	r8, Y+6	; 0x06
    4d86:	91 2c       	mov	r9, r1
    4d88:	98 2c       	mov	r9, r8
    4d8a:	88 24       	eor	r8, r8
    4d8c:	8d 81       	ldd	r24, Y+5	; 0x05
    4d8e:	88 2a       	or	r8, r24
    4d90:	93 82       	std	Z+3, r9	; 0x03
    4d92:	82 82       	std	Z+2, r8	; 0x02
    4d94:	88 27       	eor	r24, r24
    4d96:	77 fd       	sbrc	r23, 7
    4d98:	80 95       	com	r24
    4d9a:	98 2f       	mov	r25, r24
    4d9c:	72 d6       	rcall	.+3300   	; 0x5a82 <__floatsisf>
    4d9e:	6b 01       	movw	r12, r22
    4da0:	7c 01       	movw	r14, r24
    4da2:	b4 01       	movw	r22, r8
    4da4:	88 27       	eor	r24, r24
    4da6:	77 fd       	sbrc	r23, 7
    4da8:	80 95       	com	r24
    4daa:	98 2f       	mov	r25, r24
    4dac:	6a d6       	rcall	.+3284   	; 0x5a82 <__floatsisf>
    4dae:	9b 01       	movw	r18, r22
    4db0:	ac 01       	movw	r20, r24
    4db2:	c7 01       	movw	r24, r14
    4db4:	b6 01       	movw	r22, r12
    4db6:	70 d5       	rcall	.+2784   	; 0x5898 <atan2>
    4db8:	2b ed       	ldi	r18, 0xDB	; 219
    4dba:	3f e0       	ldi	r19, 0x0F	; 15
    4dbc:	49 ec       	ldi	r20, 0xC9	; 201
    4dbe:	5f e3       	ldi	r21, 0x3F	; 63
    4dc0:	f7 d4       	rcall	.+2542   	; 0x57b0 <__subsf3>
    4dc2:	f3 01       	movw	r30, r6
    4dc4:	64 87       	std	Z+12, r22	; 0x0c
    4dc6:	75 87       	std	Z+13, r23	; 0x0d
    4dc8:	86 87       	std	Z+14, r24	; 0x0e
    4dca:	97 87       	std	Z+15, r25	; 0x0f
    4dcc:	b5 01       	movw	r22, r10
    4dce:	88 27       	eor	r24, r24
    4dd0:	77 fd       	sbrc	r23, 7
    4dd2:	80 95       	com	r24
    4dd4:	98 2f       	mov	r25, r24
    4dd6:	55 d6       	rcall	.+3242   	; 0x5a82 <__floatsisf>
    4dd8:	9b 01       	movw	r18, r22
    4dda:	ac 01       	movw	r20, r24
    4ddc:	c7 01       	movw	r24, r14
    4dde:	b6 01       	movw	r22, r12
    4de0:	5b d5       	rcall	.+2742   	; 0x5898 <atan2>
    4de2:	2b ed       	ldi	r18, 0xDB	; 219
    4de4:	3f e0       	ldi	r19, 0x0F	; 15
    4de6:	49 ec       	ldi	r20, 0xC9	; 201
    4de8:	5f e3       	ldi	r21, 0x3F	; 63
    4dea:	e2 d4       	rcall	.+2500   	; 0x57b0 <__subsf3>
    4dec:	f3 01       	movw	r30, r6
    4dee:	60 87       	std	Z+8, r22	; 0x08
    4df0:	71 87       	std	Z+9, r23	; 0x09
    4df2:	82 87       	std	Z+10, r24	; 0x0a
    4df4:	93 87       	std	Z+11, r25	; 0x0b
    4df6:	78 94       	sei
    4df8:	26 96       	adiw	r28, 0x06	; 6
    4dfa:	0f b6       	in	r0, 0x3f	; 63
    4dfc:	f8 94       	cli
    4dfe:	de bf       	out	0x3e, r29	; 62
    4e00:	0f be       	out	0x3f, r0	; 63
    4e02:	cd bf       	out	0x3d, r28	; 61
    4e04:	df 91       	pop	r29
    4e06:	cf 91       	pop	r28
    4e08:	1f 91       	pop	r17
    4e0a:	ff 90       	pop	r15
    4e0c:	ef 90       	pop	r14
    4e0e:	df 90       	pop	r13
    4e10:	cf 90       	pop	r12
    4e12:	bf 90       	pop	r11
    4e14:	af 90       	pop	r10
    4e16:	9f 90       	pop	r9
    4e18:	8f 90       	pop	r8
    4e1a:	7f 90       	pop	r7
    4e1c:	6f 90       	pop	r6
    4e1e:	08 95       	ret

00004e20 <_ZN7LSM303D11readtemperaEv>:
    4e20:	cf 92       	push	r12
    4e22:	df 92       	push	r13
    4e24:	ef 92       	push	r14
    4e26:	ff 92       	push	r15
    4e28:	0f 93       	push	r16
    4e2a:	1f 93       	push	r17
    4e2c:	cf 93       	push	r28
    4e2e:	df 93       	push	r29
    4e30:	00 d0       	rcall	.+0      	; 0x4e32 <_ZN7LSM303D11readtemperaEv+0x12>
    4e32:	cd b7       	in	r28, 0x3d	; 61
    4e34:	de b7       	in	r29, 0x3e	; 62
    4e36:	7c 01       	movw	r14, r24
    4e38:	f8 94       	cli
    4e3a:	8c 01       	movw	r16, r24
    4e3c:	00 5f       	subi	r16, 0xF0	; 240
    4e3e:	1f 4f       	sbci	r17, 0xFF	; 255
    4e40:	c8 01       	movw	r24, r16
    4e42:	21 dc       	rcall	.-1982   	; 0x4686 <_ZN3I2C9twi_startEv>
    4e44:	6a e3       	ldi	r22, 0x3A	; 58
    4e46:	c8 01       	movw	r24, r16
    4e48:	26 dc       	rcall	.-1972   	; 0x4696 <_ZN3I2C9twi_writeEh>
    4e4a:	65 e8       	ldi	r22, 0x85	; 133
    4e4c:	c8 01       	movw	r24, r16
    4e4e:	23 dc       	rcall	.-1978   	; 0x4696 <_ZN3I2C9twi_writeEh>
    4e50:	c8 01       	movw	r24, r16
    4e52:	19 dc       	rcall	.-1998   	; 0x4686 <_ZN3I2C9twi_startEv>
    4e54:	6b e3       	ldi	r22, 0x3B	; 59
    4e56:	c8 01       	movw	r24, r16
    4e58:	1e dc       	rcall	.-1988   	; 0x4696 <_ZN3I2C9twi_writeEh>
    4e5a:	cc 24       	eor	r12, r12
    4e5c:	c3 94       	inc	r12
    4e5e:	d1 2c       	mov	r13, r1
    4e60:	02 c0       	rjmp	.+4      	; 0x4e66 <_ZN7LSM303D11readtemperaEv+0x46>
    4e62:	d3 94       	inc	r13
    4e64:	c3 94       	inc	r12
    4e66:	d1 10       	cpse	r13, r1
    4e68:	05 c0       	rjmp	.+10     	; 0x4e74 <_ZN7LSM303D11readtemperaEv+0x54>
    4e6a:	61 e0       	ldi	r22, 0x01	; 1
    4e6c:	c8 01       	movw	r24, r16
    4e6e:	23 dc       	rcall	.-1978   	; 0x46b6 <_ZN3I2C8twi_readEh>
    4e70:	89 83       	std	Y+1, r24	; 0x01
    4e72:	f7 cf       	rjmp	.-18     	; 0x4e62 <_ZN7LSM303D11readtemperaEv+0x42>
    4e74:	60 e0       	ldi	r22, 0x00	; 0
    4e76:	c8 01       	movw	r24, r16
    4e78:	1e dc       	rcall	.-1988   	; 0x46b6 <_ZN3I2C8twi_readEh>
    4e7a:	e1 e0       	ldi	r30, 0x01	; 1
    4e7c:	f0 e0       	ldi	r31, 0x00	; 0
    4e7e:	ec 0f       	add	r30, r28
    4e80:	fd 1f       	adc	r31, r29
    4e82:	ed 0d       	add	r30, r13
    4e84:	f1 1d       	adc	r31, r1
    4e86:	80 83       	st	Z, r24
    4e88:	81 e0       	ldi	r24, 0x01	; 1
    4e8a:	8c 15       	cp	r24, r12
    4e8c:	50 f7       	brcc	.-44     	; 0x4e62 <_ZN7LSM303D11readtemperaEv+0x42>
    4e8e:	c8 01       	movw	r24, r16
    4e90:	fe db       	rcall	.-2052   	; 0x468e <_ZN3I2C8twi_stopEv>
    4e92:	8a 81       	ldd	r24, Y+2	; 0x02
    4e94:	90 e0       	ldi	r25, 0x00	; 0
    4e96:	98 2f       	mov	r25, r24
    4e98:	88 27       	eor	r24, r24
    4e9a:	29 81       	ldd	r18, Y+1	; 0x01
    4e9c:	82 2b       	or	r24, r18
    4e9e:	91 95       	neg	r25
    4ea0:	81 95       	neg	r24
    4ea2:	91 09       	sbc	r25, r1
    4ea4:	f7 01       	movw	r30, r14
    4ea6:	97 83       	std	Z+7, r25	; 0x07
    4ea8:	86 83       	std	Z+6, r24	; 0x06
    4eaa:	78 94       	sei
    4eac:	0f 90       	pop	r0
    4eae:	0f 90       	pop	r0
    4eb0:	df 91       	pop	r29
    4eb2:	cf 91       	pop	r28
    4eb4:	1f 91       	pop	r17
    4eb6:	0f 91       	pop	r16
    4eb8:	ff 90       	pop	r15
    4eba:	ef 90       	pop	r14
    4ebc:	df 90       	pop	r13
    4ebe:	cf 90       	pop	r12
    4ec0:	08 95       	ret

00004ec2 <_ZN7LSM303D14LSM303_commandEhh>:
    4ec2:	0f 93       	push	r16
    4ec4:	1f 93       	push	r17
    4ec6:	cf 93       	push	r28
    4ec8:	df 93       	push	r29
    4eca:	06 2f       	mov	r16, r22
    4ecc:	14 2f       	mov	r17, r20
    4ece:	ec 01       	movw	r28, r24
    4ed0:	60 96       	adiw	r28, 0x10	; 16
    4ed2:	ce 01       	movw	r24, r28
    4ed4:	d8 db       	rcall	.-2128   	; 0x4686 <_ZN3I2C9twi_startEv>
    4ed6:	6a e3       	ldi	r22, 0x3A	; 58
    4ed8:	ce 01       	movw	r24, r28
    4eda:	dd db       	rcall	.-2118   	; 0x4696 <_ZN3I2C9twi_writeEh>
    4edc:	60 2f       	mov	r22, r16
    4ede:	ce 01       	movw	r24, r28
    4ee0:	da db       	rcall	.-2124   	; 0x4696 <_ZN3I2C9twi_writeEh>
    4ee2:	61 2f       	mov	r22, r17
    4ee4:	ce 01       	movw	r24, r28
    4ee6:	d7 db       	rcall	.-2130   	; 0x4696 <_ZN3I2C9twi_writeEh>
    4ee8:	ce 01       	movw	r24, r28
    4eea:	d1 db       	rcall	.-2142   	; 0x468e <_ZN3I2C8twi_stopEv>
    4eec:	df 91       	pop	r29
    4eee:	cf 91       	pop	r28
    4ef0:	1f 91       	pop	r17
    4ef2:	0f 91       	pop	r16
    4ef4:	08 95       	ret

00004ef6 <_ZN7LSM303D13ACCBypassmodeEv>:
}

void LSM303D::ACCBypassmode(){
	LSM303_command(FIFO_CTRL,0x00);
    4ef6:	40 e0       	ldi	r20, 0x00	; 0
    4ef8:	6e e2       	ldi	r22, 0x2E	; 46
    4efa:	e3 cf       	rjmp	.-58     	; 0x4ec2 <_ZN7LSM303D14LSM303_commandEhh>
    4efc:	08 95       	ret

00004efe <_ZN7LSM303D9acce_initEv>:
// default destructor
LSM303D::~LSM303D()
{
} //~LSM303D

void LSM303D::acce_init(){
    4efe:	cf 93       	push	r28
    4f00:	df 93       	push	r29
    4f02:	ec 01       	movw	r28, r24
	//ACC Activ und 25Hz ohne Block dataread
	LSM303_command(CTRL1,(1<<AXEN)|(1<<AYEN)|(1<<AZEN)|(1<<AODR2));
    4f04:	47 e4       	ldi	r20, 0x47	; 71
    4f06:	60 e2       	ldi	r22, 0x20	; 32
    4f08:	dc df       	rcall	.-72     	; 0x4ec2 <_ZN7LSM303D14LSM303_commandEhh>
	
	//ACC fuer +-2g
	LSM303_command(CTRL2,0x00);
    4f0a:	40 e0       	ldi	r20, 0x00	; 0
    4f0c:	61 e2       	ldi	r22, 0x21	; 33
    4f0e:	ce 01       	movw	r24, r28
    4f10:	d8 df       	rcall	.-80     	; 0x4ec2 <_ZN7LSM303D14LSM303_commandEhh>
	
	//Temperatursensor an
	LSM303_command(CTRL5,(1<<TEMP_EN));
    4f12:	40 e8       	ldi	r20, 0x80	; 128
    4f14:	64 e2       	ldi	r22, 0x24	; 36
    4f16:	ce 01       	movw	r24, r28
    4f18:	d4 df       	rcall	.-88     	; 0x4ec2 <_ZN7LSM303D14LSM303_commandEhh>
	
	//FIFO Bypass Mode
	ACCBypassmode();
    4f1a:	ce 01       	movw	r24, r28
    4f1c:	ec df       	rcall	.-40     	; 0x4ef6 <_ZN7LSM303D13ACCBypassmodeEv>
}
    4f1e:	df 91       	pop	r29
    4f20:	cf 91       	pop	r28
    4f22:	08 95       	ret

00004f24 <_ZN7LSM303DC1Ev>:


#include "LSM303D.h"

// default constructor
LSM303D::LSM303D()
    4f24:	cf 93       	push	r28
    4f26:	df 93       	push	r29
    4f28:	ec 01       	movw	r28, r24
    4f2a:	40 96       	adiw	r24, 0x10	; 16
    4f2c:	a7 db       	rcall	.-2226   	; 0x467c <_ZN3I2CC1Ev>
{
	//Variablen initialisieren
	Tempera=0;
    4f2e:	1f 82       	std	Y+7, r1	; 0x07
    4f30:	1e 82       	std	Y+6, r1	; 0x06
	roll=0.0;
    4f32:	18 86       	std	Y+8, r1	; 0x08
    4f34:	19 86       	std	Y+9, r1	; 0x09
    4f36:	1a 86       	std	Y+10, r1	; 0x0a
    4f38:	1b 86       	std	Y+11, r1	; 0x0b
	pitch=0.0;
    4f3a:	1c 86       	std	Y+12, r1	; 0x0c
    4f3c:	1d 86       	std	Y+13, r1	; 0x0d
    4f3e:	1e 86       	std	Y+14, r1	; 0x0e
    4f40:	1f 86       	std	Y+15, r1	; 0x0f
	for (uint8_t i=0;i<3;i++)
	{
		achsen_A[i]=0;
    4f42:	19 82       	std	Y+1, r1	; 0x01
    4f44:	18 82       	st	Y, r1
    4f46:	1b 82       	std	Y+3, r1	; 0x03
    4f48:	1a 82       	std	Y+2, r1	; 0x02
    4f4a:	1d 82       	std	Y+5, r1	; 0x05
    4f4c:	1c 82       	std	Y+4, r1	; 0x04
	}
	
	//ACC init
	acce_init();
    4f4e:	ce 01       	movw	r24, r28
    4f50:	d6 df       	rcall	.-84     	; 0x4efe <_ZN7LSM303D9acce_initEv>
} //LSM303D
    4f52:	df 91       	pop	r29
    4f54:	cf 91       	pop	r28
    4f56:	08 95       	ret

00004f58 <_ZN6OutputC1Ehh>:
#include "Output.h"

// default constructor
Output::Output(uint8_t Portpraefix, uint8_t Pinnumber)
{
	Pin=Pinnumber;
    4f58:	fc 01       	movw	r30, r24
    4f5a:	41 83       	std	Z+1, r20	; 0x01
	Port=Portpraefix;
    4f5c:	60 83       	st	Z, r22
	switch (Portpraefix)
    4f5e:	62 34       	cpi	r22, 0x42	; 66
    4f60:	b1 f0       	breq	.+44     	; 0x4f8e <_ZN6OutputC1Ehh+0x36>
    4f62:	18 f4       	brcc	.+6      	; 0x4f6a <_ZN6OutputC1Ehh+0x12>
    4f64:	61 34       	cpi	r22, 0x41	; 65
    4f66:	31 f0       	breq	.+12     	; 0x4f74 <_ZN6OutputC1Ehh+0x1c>
    4f68:	08 95       	ret
    4f6a:	63 34       	cpi	r22, 0x43	; 67
    4f6c:	e9 f0       	breq	.+58     	; 0x4fa8 <_ZN6OutputC1Ehh+0x50>
    4f6e:	64 34       	cpi	r22, 0x44	; 68
    4f70:	41 f1       	breq	.+80     	; 0x4fc2 <_ZN6OutputC1Ehh+0x6a>
    4f72:	08 95       	ret
	{
		case 'A':
			DDRA |= (1<<Pin);
    4f74:	21 b1       	in	r18, 0x01	; 1
    4f76:	81 e0       	ldi	r24, 0x01	; 1
    4f78:	90 e0       	ldi	r25, 0x00	; 0
    4f7a:	bc 01       	movw	r22, r24
    4f7c:	02 c0       	rjmp	.+4      	; 0x4f82 <_ZN6OutputC1Ehh+0x2a>
    4f7e:	66 0f       	add	r22, r22
    4f80:	77 1f       	adc	r23, r23
    4f82:	4a 95       	dec	r20
    4f84:	e2 f7       	brpl	.-8      	; 0x4f7e <_ZN6OutputC1Ehh+0x26>
    4f86:	ab 01       	movw	r20, r22
    4f88:	42 2b       	or	r20, r18
    4f8a:	41 b9       	out	0x01, r20	; 1
			break;
    4f8c:	08 95       	ret
		case 'B':
			DDRB |= (1<<Pin);
    4f8e:	24 b1       	in	r18, 0x04	; 4
    4f90:	81 e0       	ldi	r24, 0x01	; 1
    4f92:	90 e0       	ldi	r25, 0x00	; 0
    4f94:	fc 01       	movw	r30, r24
    4f96:	02 c0       	rjmp	.+4      	; 0x4f9c <_ZN6OutputC1Ehh+0x44>
    4f98:	ee 0f       	add	r30, r30
    4f9a:	ff 1f       	adc	r31, r31
    4f9c:	4a 95       	dec	r20
    4f9e:	e2 f7       	brpl	.-8      	; 0x4f98 <_ZN6OutputC1Ehh+0x40>
    4fa0:	af 01       	movw	r20, r30
    4fa2:	42 2b       	or	r20, r18
    4fa4:	44 b9       	out	0x04, r20	; 4
			break;
    4fa6:	08 95       	ret
		case 'C':
			DDRC |= (1<<Pin);
    4fa8:	27 b1       	in	r18, 0x07	; 7
    4faa:	81 e0       	ldi	r24, 0x01	; 1
    4fac:	90 e0       	ldi	r25, 0x00	; 0
    4fae:	bc 01       	movw	r22, r24
    4fb0:	02 c0       	rjmp	.+4      	; 0x4fb6 <_ZN6OutputC1Ehh+0x5e>
    4fb2:	66 0f       	add	r22, r22
    4fb4:	77 1f       	adc	r23, r23
    4fb6:	4a 95       	dec	r20
    4fb8:	e2 f7       	brpl	.-8      	; 0x4fb2 <_ZN6OutputC1Ehh+0x5a>
    4fba:	ab 01       	movw	r20, r22
    4fbc:	42 2b       	or	r20, r18
    4fbe:	47 b9       	out	0x07, r20	; 7
			break;
    4fc0:	08 95       	ret
		case 'D':
			DDRD |= (1<<Pin);
    4fc2:	2a b1       	in	r18, 0x0a	; 10
    4fc4:	81 e0       	ldi	r24, 0x01	; 1
    4fc6:	90 e0       	ldi	r25, 0x00	; 0
    4fc8:	fc 01       	movw	r30, r24
    4fca:	02 c0       	rjmp	.+4      	; 0x4fd0 <_ZN6OutputC1Ehh+0x78>
    4fcc:	ee 0f       	add	r30, r30
    4fce:	ff 1f       	adc	r31, r31
    4fd0:	4a 95       	dec	r20
    4fd2:	e2 f7       	brpl	.-8      	; 0x4fcc <_ZN6OutputC1Ehh+0x74>
    4fd4:	af 01       	movw	r20, r30
    4fd6:	42 2b       	or	r20, r18
    4fd8:	4a b9       	out	0x0a, r20	; 10
    4fda:	08 95       	ret

00004fdc <_ZN6OutputD1Ev>:
			break;
	}
} //Output

// default destructor
Output::~Output()
    4fdc:	08 95       	ret

00004fde <_ZN6Output2onEv>:
{
} //~Output

void Output::on(){
	switch (Port)
    4fde:	fc 01       	movw	r30, r24
    4fe0:	20 81       	ld	r18, Z
    4fe2:	22 34       	cpi	r18, 0x42	; 66
    4fe4:	c1 f0       	breq	.+48     	; 0x5016 <_ZN6Output2onEv+0x38>
    4fe6:	18 f4       	brcc	.+6      	; 0x4fee <_ZN6Output2onEv+0x10>
    4fe8:	21 34       	cpi	r18, 0x41	; 65
    4fea:	31 f0       	breq	.+12     	; 0x4ff8 <_ZN6Output2onEv+0x1a>
    4fec:	08 95       	ret
    4fee:	23 34       	cpi	r18, 0x43	; 67
    4ff0:	09 f1       	breq	.+66     	; 0x5034 <_ZN6Output2onEv+0x56>
    4ff2:	24 34       	cpi	r18, 0x44	; 68
    4ff4:	71 f1       	breq	.+92     	; 0x5052 <_ZN6Output2onEv+0x74>
    4ff6:	08 95       	ret
	{
		case 'A':
			PORTA |= (1<<Pin);
    4ff8:	42 b1       	in	r20, 0x02	; 2
    4ffa:	21 e0       	ldi	r18, 0x01	; 1
    4ffc:	30 e0       	ldi	r19, 0x00	; 0
    4ffe:	b9 01       	movw	r22, r18
    5000:	fc 01       	movw	r30, r24
    5002:	01 80       	ldd	r0, Z+1	; 0x01
    5004:	02 c0       	rjmp	.+4      	; 0x500a <_ZN6Output2onEv+0x2c>
    5006:	66 0f       	add	r22, r22
    5008:	77 1f       	adc	r23, r23
    500a:	0a 94       	dec	r0
    500c:	e2 f7       	brpl	.-8      	; 0x5006 <_ZN6Output2onEv+0x28>
    500e:	cb 01       	movw	r24, r22
    5010:	84 2b       	or	r24, r20
    5012:	82 b9       	out	0x02, r24	; 2
			break;
    5014:	08 95       	ret
		case 'B':
			PORTB |= (1<<Pin);
    5016:	45 b1       	in	r20, 0x05	; 5
    5018:	21 e0       	ldi	r18, 0x01	; 1
    501a:	30 e0       	ldi	r19, 0x00	; 0
    501c:	b9 01       	movw	r22, r18
    501e:	fc 01       	movw	r30, r24
    5020:	01 80       	ldd	r0, Z+1	; 0x01
    5022:	02 c0       	rjmp	.+4      	; 0x5028 <_ZN6Output2onEv+0x4a>
    5024:	66 0f       	add	r22, r22
    5026:	77 1f       	adc	r23, r23
    5028:	0a 94       	dec	r0
    502a:	e2 f7       	brpl	.-8      	; 0x5024 <_ZN6Output2onEv+0x46>
    502c:	cb 01       	movw	r24, r22
    502e:	84 2b       	or	r24, r20
    5030:	85 b9       	out	0x05, r24	; 5
			break;
    5032:	08 95       	ret
		case 'C':
			PORTC |= (1<<Pin);
    5034:	48 b1       	in	r20, 0x08	; 8
    5036:	21 e0       	ldi	r18, 0x01	; 1
    5038:	30 e0       	ldi	r19, 0x00	; 0
    503a:	b9 01       	movw	r22, r18
    503c:	fc 01       	movw	r30, r24
    503e:	01 80       	ldd	r0, Z+1	; 0x01
    5040:	02 c0       	rjmp	.+4      	; 0x5046 <_ZN6Output2onEv+0x68>
    5042:	66 0f       	add	r22, r22
    5044:	77 1f       	adc	r23, r23
    5046:	0a 94       	dec	r0
    5048:	e2 f7       	brpl	.-8      	; 0x5042 <_ZN6Output2onEv+0x64>
    504a:	cb 01       	movw	r24, r22
    504c:	84 2b       	or	r24, r20
    504e:	88 b9       	out	0x08, r24	; 8
			break;
    5050:	08 95       	ret
		case 'D':
			PORTD |= (1<<Pin);
    5052:	4b b1       	in	r20, 0x0b	; 11
    5054:	21 e0       	ldi	r18, 0x01	; 1
    5056:	30 e0       	ldi	r19, 0x00	; 0
    5058:	b9 01       	movw	r22, r18
    505a:	fc 01       	movw	r30, r24
    505c:	01 80       	ldd	r0, Z+1	; 0x01
    505e:	02 c0       	rjmp	.+4      	; 0x5064 <_ZN6Output2onEv+0x86>
    5060:	66 0f       	add	r22, r22
    5062:	77 1f       	adc	r23, r23
    5064:	0a 94       	dec	r0
    5066:	e2 f7       	brpl	.-8      	; 0x5060 <_ZN6Output2onEv+0x82>
    5068:	cb 01       	movw	r24, r22
    506a:	84 2b       	or	r24, r20
    506c:	8b b9       	out	0x0b, r24	; 11
    506e:	08 95       	ret

00005070 <_ZN6Output4isonEv>:
	}
}

uint8_t Output::ison(){
	uint8_t returnparam=0;
	switch (Port)
    5070:	fc 01       	movw	r30, r24
    5072:	20 81       	ld	r18, Z
    5074:	22 34       	cpi	r18, 0x42	; 66
    5076:	b1 f0       	breq	.+44     	; 0x50a4 <_ZN6Output4isonEv+0x34>
    5078:	18 f4       	brcc	.+6      	; 0x5080 <_ZN6Output4isonEv+0x10>
    507a:	21 34       	cpi	r18, 0x41	; 65
    507c:	31 f0       	breq	.+12     	; 0x508a <_ZN6Output4isonEv+0x1a>
    507e:	39 c0       	rjmp	.+114    	; 0x50f2 <_ZN6Output4isonEv+0x82>
    5080:	23 34       	cpi	r18, 0x43	; 67
    5082:	e9 f0       	breq	.+58     	; 0x50be <_ZN6Output4isonEv+0x4e>
    5084:	24 34       	cpi	r18, 0x44	; 68
    5086:	41 f1       	breq	.+80     	; 0x50d8 <_ZN6Output4isonEv+0x68>
    5088:	34 c0       	rjmp	.+104    	; 0x50f2 <_ZN6Output4isonEv+0x82>
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    508a:	22 b1       	in	r18, 0x02	; 2
    508c:	30 e0       	ldi	r19, 0x00	; 0
    508e:	a9 01       	movw	r20, r18
    5090:	fc 01       	movw	r30, r24
    5092:	01 80       	ldd	r0, Z+1	; 0x01
    5094:	02 c0       	rjmp	.+4      	; 0x509a <_ZN6Output4isonEv+0x2a>
    5096:	55 95       	asr	r21
    5098:	47 95       	ror	r20
    509a:	0a 94       	dec	r0
    509c:	e2 f7       	brpl	.-8      	; 0x5096 <_ZN6Output4isonEv+0x26>
    509e:	ca 01       	movw	r24, r20
    50a0:	81 70       	andi	r24, 0x01	; 1
    50a2:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    50a4:	25 b1       	in	r18, 0x05	; 5
    50a6:	30 e0       	ldi	r19, 0x00	; 0
    50a8:	a9 01       	movw	r20, r18
    50aa:	fc 01       	movw	r30, r24
    50ac:	01 80       	ldd	r0, Z+1	; 0x01
    50ae:	02 c0       	rjmp	.+4      	; 0x50b4 <_ZN6Output4isonEv+0x44>
    50b0:	55 95       	asr	r21
    50b2:	47 95       	ror	r20
    50b4:	0a 94       	dec	r0
    50b6:	e2 f7       	brpl	.-8      	; 0x50b0 <_ZN6Output4isonEv+0x40>
    50b8:	ca 01       	movw	r24, r20
    50ba:	81 70       	andi	r24, 0x01	; 1
    50bc:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    50be:	28 b1       	in	r18, 0x08	; 8
    50c0:	30 e0       	ldi	r19, 0x00	; 0
    50c2:	a9 01       	movw	r20, r18
    50c4:	fc 01       	movw	r30, r24
    50c6:	01 80       	ldd	r0, Z+1	; 0x01
    50c8:	02 c0       	rjmp	.+4      	; 0x50ce <_ZN6Output4isonEv+0x5e>
    50ca:	55 95       	asr	r21
    50cc:	47 95       	ror	r20
    50ce:	0a 94       	dec	r0
    50d0:	e2 f7       	brpl	.-8      	; 0x50ca <_ZN6Output4isonEv+0x5a>
    50d2:	ca 01       	movw	r24, r20
    50d4:	81 70       	andi	r24, 0x01	; 1
    50d6:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    50d8:	2b b1       	in	r18, 0x0b	; 11
    50da:	30 e0       	ldi	r19, 0x00	; 0
    50dc:	a9 01       	movw	r20, r18
    50de:	fc 01       	movw	r30, r24
    50e0:	01 80       	ldd	r0, Z+1	; 0x01
    50e2:	02 c0       	rjmp	.+4      	; 0x50e8 <_ZN6Output4isonEv+0x78>
    50e4:	55 95       	asr	r21
    50e6:	47 95       	ror	r20
    50e8:	0a 94       	dec	r0
    50ea:	e2 f7       	brpl	.-8      	; 0x50e4 <_ZN6Output4isonEv+0x74>
    50ec:	ca 01       	movw	r24, r20
    50ee:	81 70       	andi	r24, 0x01	; 1
    50f0:	08 95       	ret
			{
				returnparam = 1;
			}
			break;
		default:
		returnparam = 2;
    50f2:	82 e0       	ldi	r24, 0x02	; 2
			break;
	}
	return returnparam;
}
    50f4:	08 95       	ret

000050f6 <_ZN6Output3offEv>:

void Output::off(){
	switch (Port)
    50f6:	fc 01       	movw	r30, r24
    50f8:	20 81       	ld	r18, Z
    50fa:	22 34       	cpi	r18, 0x42	; 66
    50fc:	c9 f0       	breq	.+50     	; 0x5130 <_ZN6Output3offEv+0x3a>
    50fe:	18 f4       	brcc	.+6      	; 0x5106 <_ZN6Output3offEv+0x10>
    5100:	21 34       	cpi	r18, 0x41	; 65
    5102:	31 f0       	breq	.+12     	; 0x5110 <_ZN6Output3offEv+0x1a>
    5104:	08 95       	ret
    5106:	23 34       	cpi	r18, 0x43	; 67
    5108:	19 f1       	breq	.+70     	; 0x5150 <_ZN6Output3offEv+0x5a>
    510a:	24 34       	cpi	r18, 0x44	; 68
    510c:	89 f1       	breq	.+98     	; 0x5170 <_ZN6Output3offEv+0x7a>
    510e:	08 95       	ret
	{
		case 'A':
			PORTA &= ~(1<<Pin);
    5110:	42 b1       	in	r20, 0x02	; 2
    5112:	21 e0       	ldi	r18, 0x01	; 1
    5114:	30 e0       	ldi	r19, 0x00	; 0
    5116:	b9 01       	movw	r22, r18
    5118:	fc 01       	movw	r30, r24
    511a:	01 80       	ldd	r0, Z+1	; 0x01
    511c:	02 c0       	rjmp	.+4      	; 0x5122 <_ZN6Output3offEv+0x2c>
    511e:	66 0f       	add	r22, r22
    5120:	77 1f       	adc	r23, r23
    5122:	0a 94       	dec	r0
    5124:	e2 f7       	brpl	.-8      	; 0x511e <_ZN6Output3offEv+0x28>
    5126:	cb 01       	movw	r24, r22
    5128:	80 95       	com	r24
    512a:	84 23       	and	r24, r20
    512c:	82 b9       	out	0x02, r24	; 2
			break;
    512e:	08 95       	ret
		case 'B':
			PORTB &= ~(1<<Pin);
    5130:	45 b1       	in	r20, 0x05	; 5
    5132:	21 e0       	ldi	r18, 0x01	; 1
    5134:	30 e0       	ldi	r19, 0x00	; 0
    5136:	b9 01       	movw	r22, r18
    5138:	fc 01       	movw	r30, r24
    513a:	01 80       	ldd	r0, Z+1	; 0x01
    513c:	02 c0       	rjmp	.+4      	; 0x5142 <_ZN6Output3offEv+0x4c>
    513e:	66 0f       	add	r22, r22
    5140:	77 1f       	adc	r23, r23
    5142:	0a 94       	dec	r0
    5144:	e2 f7       	brpl	.-8      	; 0x513e <_ZN6Output3offEv+0x48>
    5146:	cb 01       	movw	r24, r22
    5148:	80 95       	com	r24
    514a:	84 23       	and	r24, r20
    514c:	85 b9       	out	0x05, r24	; 5
			break;
    514e:	08 95       	ret
		case 'C':
			PORTC &= ~(1<<Pin);
    5150:	48 b1       	in	r20, 0x08	; 8
    5152:	21 e0       	ldi	r18, 0x01	; 1
    5154:	30 e0       	ldi	r19, 0x00	; 0
    5156:	b9 01       	movw	r22, r18
    5158:	fc 01       	movw	r30, r24
    515a:	01 80       	ldd	r0, Z+1	; 0x01
    515c:	02 c0       	rjmp	.+4      	; 0x5162 <_ZN6Output3offEv+0x6c>
    515e:	66 0f       	add	r22, r22
    5160:	77 1f       	adc	r23, r23
    5162:	0a 94       	dec	r0
    5164:	e2 f7       	brpl	.-8      	; 0x515e <_ZN6Output3offEv+0x68>
    5166:	cb 01       	movw	r24, r22
    5168:	80 95       	com	r24
    516a:	84 23       	and	r24, r20
    516c:	88 b9       	out	0x08, r24	; 8
			break;
    516e:	08 95       	ret
		case 'D':
			PORTD &= ~(1<<Pin);
    5170:	4b b1       	in	r20, 0x0b	; 11
    5172:	21 e0       	ldi	r18, 0x01	; 1
    5174:	30 e0       	ldi	r19, 0x00	; 0
    5176:	b9 01       	movw	r22, r18
    5178:	fc 01       	movw	r30, r24
    517a:	01 80       	ldd	r0, Z+1	; 0x01
    517c:	02 c0       	rjmp	.+4      	; 0x5182 <_ZN6Output3offEv+0x8c>
    517e:	66 0f       	add	r22, r22
    5180:	77 1f       	adc	r23, r23
    5182:	0a 94       	dec	r0
    5184:	e2 f7       	brpl	.-8      	; 0x517e <_ZN6Output3offEv+0x88>
    5186:	cb 01       	movw	r24, r22
    5188:	80 95       	com	r24
    518a:	84 23       	and	r24, r20
    518c:	8b b9       	out	0x0b, r24	; 11
    518e:	08 95       	ret

00005190 <_ZN6Output6toggleEv>:
			break;
	}
}

void Output::toggle(){
	switch (Port)
    5190:	fc 01       	movw	r30, r24
    5192:	20 81       	ld	r18, Z
    5194:	22 34       	cpi	r18, 0x42	; 66
    5196:	c1 f0       	breq	.+48     	; 0x51c8 <_ZN6Output6toggleEv+0x38>
    5198:	18 f4       	brcc	.+6      	; 0x51a0 <_ZN6Output6toggleEv+0x10>
    519a:	21 34       	cpi	r18, 0x41	; 65
    519c:	31 f0       	breq	.+12     	; 0x51aa <_ZN6Output6toggleEv+0x1a>
    519e:	08 95       	ret
    51a0:	23 34       	cpi	r18, 0x43	; 67
    51a2:	09 f1       	breq	.+66     	; 0x51e6 <_ZN6Output6toggleEv+0x56>
    51a4:	24 34       	cpi	r18, 0x44	; 68
    51a6:	71 f1       	breq	.+92     	; 0x5204 <_ZN6Output6toggleEv+0x74>
    51a8:	08 95       	ret
	{
		case 'A':
			if ((PORTA&(1<<Pin)))
    51aa:	22 b1       	in	r18, 0x02	; 2
    51ac:	30 e0       	ldi	r19, 0x00	; 0
    51ae:	fc 01       	movw	r30, r24
    51b0:	01 80       	ldd	r0, Z+1	; 0x01
    51b2:	02 c0       	rjmp	.+4      	; 0x51b8 <_ZN6Output6toggleEv+0x28>
    51b4:	35 95       	asr	r19
    51b6:	27 95       	ror	r18
    51b8:	0a 94       	dec	r0
    51ba:	e2 f7       	brpl	.-8      	; 0x51b4 <_ZN6Output6toggleEv+0x24>
    51bc:	20 ff       	sbrs	r18, 0
    51be:	02 c0       	rjmp	.+4      	; 0x51c4 <_ZN6Output6toggleEv+0x34>
			{
				off();
    51c0:	9a cf       	rjmp	.-204    	; 0x50f6 <_ZN6Output3offEv>
    51c2:	08 95       	ret
			}
			else{
				on();
    51c4:	0c cf       	rjmp	.-488    	; 0x4fde <_ZN6Output2onEv>
    51c6:	08 95       	ret
			}
			break;
		case 'B':
			if ((PORTB&(1<<Pin)))
    51c8:	25 b1       	in	r18, 0x05	; 5
    51ca:	30 e0       	ldi	r19, 0x00	; 0
    51cc:	fc 01       	movw	r30, r24
    51ce:	01 80       	ldd	r0, Z+1	; 0x01
    51d0:	02 c0       	rjmp	.+4      	; 0x51d6 <_ZN6Output6toggleEv+0x46>
    51d2:	35 95       	asr	r19
    51d4:	27 95       	ror	r18
    51d6:	0a 94       	dec	r0
    51d8:	e2 f7       	brpl	.-8      	; 0x51d2 <_ZN6Output6toggleEv+0x42>
    51da:	20 ff       	sbrs	r18, 0
    51dc:	02 c0       	rjmp	.+4      	; 0x51e2 <_ZN6Output6toggleEv+0x52>
			{
				off();
    51de:	8b cf       	rjmp	.-234    	; 0x50f6 <_ZN6Output3offEv>
    51e0:	08 95       	ret
			}
			else{
				on();
    51e2:	fd ce       	rjmp	.-518    	; 0x4fde <_ZN6Output2onEv>
    51e4:	08 95       	ret
			}
			break;
		case 'C':
			if ((PORTC&(1<<Pin)))
    51e6:	28 b1       	in	r18, 0x08	; 8
    51e8:	30 e0       	ldi	r19, 0x00	; 0
    51ea:	fc 01       	movw	r30, r24
    51ec:	01 80       	ldd	r0, Z+1	; 0x01
    51ee:	02 c0       	rjmp	.+4      	; 0x51f4 <_ZN6Output6toggleEv+0x64>
    51f0:	35 95       	asr	r19
    51f2:	27 95       	ror	r18
    51f4:	0a 94       	dec	r0
    51f6:	e2 f7       	brpl	.-8      	; 0x51f0 <_ZN6Output6toggleEv+0x60>
    51f8:	20 ff       	sbrs	r18, 0
    51fa:	02 c0       	rjmp	.+4      	; 0x5200 <_ZN6Output6toggleEv+0x70>
			{
				off();
    51fc:	7c cf       	rjmp	.-264    	; 0x50f6 <_ZN6Output3offEv>
    51fe:	08 95       	ret
			}
			else{
				on();
    5200:	ee ce       	rjmp	.-548    	; 0x4fde <_ZN6Output2onEv>
    5202:	08 95       	ret
			}
			break;
		case 'D':
			if ((PORTD&(1<<Pin)))
    5204:	2b b1       	in	r18, 0x0b	; 11
    5206:	30 e0       	ldi	r19, 0x00	; 0
    5208:	fc 01       	movw	r30, r24
    520a:	01 80       	ldd	r0, Z+1	; 0x01
    520c:	02 c0       	rjmp	.+4      	; 0x5212 <_ZN6Output6toggleEv+0x82>
    520e:	35 95       	asr	r19
    5210:	27 95       	ror	r18
    5212:	0a 94       	dec	r0
    5214:	e2 f7       	brpl	.-8      	; 0x520e <_ZN6Output6toggleEv+0x7e>
    5216:	20 ff       	sbrs	r18, 0
    5218:	02 c0       	rjmp	.+4      	; 0x521e <_ZN6Output6toggleEv+0x8e>
			{
				off();
    521a:	6d cf       	rjmp	.-294    	; 0x50f6 <_ZN6Output3offEv>
    521c:	08 95       	ret
			}
			else{
				on();
    521e:	df ce       	rjmp	.-578    	; 0x4fde <_ZN6Output2onEv>
    5220:	08 95       	ret

00005222 <_ZN8PressureD1Ev>:
	Pressure0=1;
	LPS25H_initialize();
} //Pressure

// default destructor
Pressure::~Pressure()
    5222:	0d 96       	adiw	r24, 0x0d	; 13
    5224:	2f ca       	rjmp	.-2978   	; 0x4684 <_ZN3I2CD1Ev>
    5226:	08 95       	ret

00005228 <_ZN8Pressure14LPS25H_commandEhh>:
{
} //~Pressure

void Pressure::LPS25H_command(uint8_t add, uint8_t command){
    5228:	0f 93       	push	r16
    522a:	1f 93       	push	r17
    522c:	cf 93       	push	r28
    522e:	df 93       	push	r29
    5230:	06 2f       	mov	r16, r22
    5232:	14 2f       	mov	r17, r20
	i2c.twi_start();
    5234:	ec 01       	movw	r28, r24
    5236:	2d 96       	adiw	r28, 0x0d	; 13
    5238:	ce 01       	movw	r24, r28
    523a:	25 da       	rcall	.-2998   	; 0x4686 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    523c:	6a eb       	ldi	r22, 0xBA	; 186
    523e:	ce 01       	movw	r24, r28
    5240:	2a da       	rcall	.-2988   	; 0x4696 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(add);
    5242:	60 2f       	mov	r22, r16
    5244:	ce 01       	movw	r24, r28
    5246:	27 da       	rcall	.-2994   	; 0x4696 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(command);
    5248:	61 2f       	mov	r22, r17
    524a:	ce 01       	movw	r24, r28
    524c:	24 da       	rcall	.-3000   	; 0x4696 <_ZN3I2C9twi_writeEh>
	i2c.twi_stop();
    524e:	ce 01       	movw	r24, r28
    5250:	1e da       	rcall	.-3012   	; 0x468e <_ZN3I2C8twi_stopEv>
}
    5252:	df 91       	pop	r29
    5254:	cf 91       	pop	r28
    5256:	1f 91       	pop	r17
    5258:	0f 91       	pop	r16
    525a:	08 95       	ret

0000525c <_ZN8Pressure17LPS25H_initializeEv>:

void Pressure::LPS25H_initialize(){
    525c:	cf 93       	push	r28
    525e:	df 93       	push	r29
    5260:	ec 01       	movw	r28, r24
	uint8_t temp=0;
	//internal averages Pressure and Temperature (both 8)
	temp &= ~((1<<AVGT1) | (1<<AVGT0) | (1<<AVGP1) | (1<<AVGP0)); 
	LPS25H_command(RES_CONF,temp);
    5262:	40 e0       	ldi	r20, 0x00	; 0
    5264:	60 e1       	ldi	r22, 0x10	; 16
    5266:	e0 df       	rcall	.-64     	; 0x5228 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//Enable device and set a single shot as well as Lock while reading
	temp |= (1<<PD) | (1<<BDU) | (1<<ODR1);
	LPS25H_command(CTRL_REG1,temp);
    5268:	44 ea       	ldi	r20, 0xA4	; 164
    526a:	60 e2       	ldi	r22, 0x20	; 32
    526c:	ce 01       	movw	r24, r28
    526e:	dc df       	rcall	.-72     	; 0x5228 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//FIFO on, no watermark no reset, reboot memory content, FIFO MEAN Mode
	temp |= (1<<BOOT) | (1<<FIFO_EN) | (1<<FIFO_MEAN_DEC);
	LPS25H_command(CTRL_REG2,temp);
    5270:	40 ed       	ldi	r20, 0xD0	; 208
    5272:	61 e2       	ldi	r22, 0x21	; 33
    5274:	ce 01       	movw	r24, r28
    5276:	d8 df       	rcall	.-80     	; 0x5228 <_ZN8Pressure14LPS25H_commandEhh>
	temp=0;
	//FIFO Controll register for MEAN Mode und 8 moving averages
	temp|=(1<<F_MODE2) | (1<<F_MODE1) | (1<<WTM_POINT0) | (1<<WTM_POINT1) | (1<<WTM_POINT2);
	LPS25H_command(FIFO_CTRL,temp);
    5278:	47 ec       	ldi	r20, 0xC7	; 199
    527a:	6e e2       	ldi	r22, 0x2E	; 46
    527c:	ce 01       	movw	r24, r28
    527e:	d4 df       	rcall	.-88     	; 0x5228 <_ZN8Pressure14LPS25H_commandEhh>
	//CTRL_REG4 not set
	//INTERRUPT_CFG not set
	//no threshold used
	//no Pressure offset used
	
}
    5280:	df 91       	pop	r29
    5282:	cf 91       	pop	r28
    5284:	08 95       	ret

00005286 <_ZN8PressureC1Ev>:


#include "Pressure.h"

// default constructor
Pressure::Pressure()
    5286:	cf 93       	push	r28
    5288:	df 93       	push	r29
    528a:	ec 01       	movw	r28, r24
    528c:	0d 96       	adiw	r24, 0x0d	; 13
    528e:	f6 d9       	rcall	.-3092   	; 0x467c <_ZN3I2CC1Ev>
{
	Press = 0;
    5290:	18 82       	st	Y, r1
    5292:	19 82       	std	Y+1, r1	; 0x01
    5294:	1a 82       	std	Y+2, r1	; 0x02
    5296:	1b 82       	std	Y+3, r1	; 0x03
	Tempera = 0;
    5298:	1c 82       	std	Y+4, r1	; 0x04
    529a:	1d 82       	std	Y+5, r1	; 0x05
    529c:	1e 82       	std	Y+6, r1	; 0x06
    529e:	1f 82       	std	Y+7, r1	; 0x07
	Tempoffset = -4;	//Aus Erfahrung
    52a0:	8c ef       	ldi	r24, 0xFC	; 252
    52a2:	88 87       	std	Y+8, r24	; 0x08
	Pressure0=1;
    52a4:	40 e0       	ldi	r20, 0x00	; 0
    52a6:	50 e0       	ldi	r21, 0x00	; 0
    52a8:	60 e8       	ldi	r22, 0x80	; 128
    52aa:	7f e3       	ldi	r23, 0x3F	; 63
    52ac:	49 87       	std	Y+9, r20	; 0x09
    52ae:	5a 87       	std	Y+10, r21	; 0x0a
    52b0:	6b 87       	std	Y+11, r22	; 0x0b
    52b2:	7c 87       	std	Y+12, r23	; 0x0c
	LPS25H_initialize();
    52b4:	ce 01       	movw	r24, r28
    52b6:	d2 df       	rcall	.-92     	; 0x525c <_ZN8Pressure17LPS25H_initializeEv>
} //Pressure
    52b8:	df 91       	pop	r29
    52ba:	cf 91       	pop	r28
    52bc:	08 95       	ret

000052be <_ZN8Pressure18READ_Pressure_onceEv>:
	//no threshold used
	//no Pressure offset used
	
}

void Pressure::READ_Pressure_once(){
    52be:	af 92       	push	r10
    52c0:	bf 92       	push	r11
    52c2:	cf 92       	push	r12
    52c4:	df 92       	push	r13
    52c6:	ef 92       	push	r14
    52c8:	ff 92       	push	r15
    52ca:	1f 93       	push	r17
    52cc:	cf 93       	push	r28
    52ce:	df 93       	push	r29
    52d0:	00 d0       	rcall	.+0      	; 0x52d2 <_ZN8Pressure18READ_Pressure_onceEv+0x14>
    52d2:	1f 92       	push	r1
    52d4:	cd b7       	in	r28, 0x3d	; 61
    52d6:	de b7       	in	r29, 0x3e	; 62
    52d8:	5c 01       	movw	r10, r24
	uint8_t Wertedruck[3];
	cli();
    52da:	f8 94       	cli
	i2c.twi_start();
    52dc:	7c 01       	movw	r14, r24
    52de:	8d e0       	ldi	r24, 0x0D	; 13
    52e0:	e8 0e       	add	r14, r24
    52e2:	f1 1c       	adc	r15, r1
    52e4:	c7 01       	movw	r24, r14
    52e6:	cf d9       	rcall	.-3170   	; 0x4686 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    52e8:	6a eb       	ldi	r22, 0xBA	; 186
    52ea:	c7 01       	movw	r24, r14
    52ec:	d4 d9       	rcall	.-3160   	; 0x4696 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(PRESS_OUT_XL|(1<<autoincrement));
    52ee:	68 ea       	ldi	r22, 0xA8	; 168
    52f0:	c7 01       	movw	r24, r14
    52f2:	d1 d9       	rcall	.-3166   	; 0x4696 <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    52f4:	c7 01       	movw	r24, r14
    52f6:	c7 d9       	rcall	.-3186   	; 0x4686 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_READ);
    52f8:	6b eb       	ldi	r22, 0xBB	; 187
    52fa:	c7 01       	movw	r24, r14
    52fc:	cc d9       	rcall	.-3176   	; 0x4696 <_ZN3I2C9twi_writeEh>
    52fe:	fe 01       	movw	r30, r28
    5300:	31 96       	adiw	r30, 0x01	; 1
    5302:	6f 01       	movw	r12, r30
	for (uint8_t i=0;i<3;i++)
    5304:	10 e0       	ldi	r17, 0x00	; 0
	{
		if (i<2)
    5306:	12 30       	cpi	r17, 0x02	; 2
    5308:	30 f4       	brcc	.+12     	; 0x5316 <_ZN8Pressure18READ_Pressure_onceEv+0x58>
		{
			Wertedruck[i] = i2c.twi_read(1);
    530a:	61 e0       	ldi	r22, 0x01	; 1
    530c:	c7 01       	movw	r24, r14
    530e:	d3 d9       	rcall	.-3162   	; 0x46b6 <_ZN3I2C8twi_readEh>
    5310:	f6 01       	movw	r30, r12
    5312:	80 83       	st	Z, r24
    5314:	05 c0       	rjmp	.+10     	; 0x5320 <_ZN8Pressure18READ_Pressure_onceEv+0x62>
		}
		else{
			Wertedruck[i] = i2c.twi_read(0);
    5316:	60 e0       	ldi	r22, 0x00	; 0
    5318:	c7 01       	movw	r24, r14
    531a:	cd d9       	rcall	.-3174   	; 0x46b6 <_ZN3I2C8twi_readEh>
    531c:	f6 01       	movw	r30, r12
    531e:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_Write);
	i2c.twi_write(PRESS_OUT_XL|(1<<autoincrement));
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_READ);
	for (uint8_t i=0;i<3;i++)
    5320:	1f 5f       	subi	r17, 0xFF	; 255
    5322:	ff ef       	ldi	r31, 0xFF	; 255
    5324:	cf 1a       	sub	r12, r31
    5326:	df 0a       	sbc	r13, r31
    5328:	13 30       	cpi	r17, 0x03	; 3
    532a:	69 f7       	brne	.-38     	; 0x5306 <_ZN8Pressure18READ_Pressure_onceEv+0x48>
		}
		else{
			Wertedruck[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    532c:	c7 01       	movw	r24, r14
    532e:	af d9       	rcall	.-3234   	; 0x468e <_ZN3I2C8twi_stopEv>
	Press = ((double)Wertedruck[2]*65536);
    5330:	6b 81       	ldd	r22, Y+3	; 0x03
    5332:	70 e0       	ldi	r23, 0x00	; 0
    5334:	80 e0       	ldi	r24, 0x00	; 0
    5336:	90 e0       	ldi	r25, 0x00	; 0
    5338:	a2 d3       	rcall	.+1860   	; 0x5a7e <__floatunsisf>
    533a:	20 e0       	ldi	r18, 0x00	; 0
    533c:	30 e0       	ldi	r19, 0x00	; 0
    533e:	40 e8       	ldi	r20, 0x80	; 128
    5340:	57 e4       	ldi	r21, 0x47	; 71
    5342:	fd d4       	rcall	.+2554   	; 0x5d3e <__mulsf3>
    5344:	6b 01       	movw	r12, r22
    5346:	7c 01       	movw	r14, r24
	Press += ((double)Wertedruck[1]*256);
    5348:	6a 81       	ldd	r22, Y+2	; 0x02
    534a:	70 e0       	ldi	r23, 0x00	; 0
    534c:	80 e0       	ldi	r24, 0x00	; 0
    534e:	90 e0       	ldi	r25, 0x00	; 0
    5350:	96 d3       	rcall	.+1836   	; 0x5a7e <__floatunsisf>
    5352:	20 e0       	ldi	r18, 0x00	; 0
    5354:	30 e0       	ldi	r19, 0x00	; 0
    5356:	40 e8       	ldi	r20, 0x80	; 128
    5358:	53 e4       	ldi	r21, 0x43	; 67
    535a:	f1 d4       	rcall	.+2530   	; 0x5d3e <__mulsf3>
    535c:	9b 01       	movw	r18, r22
    535e:	ac 01       	movw	r20, r24
    5360:	c7 01       	movw	r24, r14
    5362:	b6 01       	movw	r22, r12
    5364:	26 d2       	rcall	.+1100   	; 0x57b2 <__addsf3>
    5366:	6b 01       	movw	r12, r22
    5368:	7c 01       	movw	r14, r24
	Press += (double)Wertedruck[0];
    536a:	69 81       	ldd	r22, Y+1	; 0x01
    536c:	70 e0       	ldi	r23, 0x00	; 0
    536e:	80 e0       	ldi	r24, 0x00	; 0
    5370:	90 e0       	ldi	r25, 0x00	; 0
    5372:	85 d3       	rcall	.+1802   	; 0x5a7e <__floatunsisf>
    5374:	9b 01       	movw	r18, r22
    5376:	ac 01       	movw	r20, r24
    5378:	c7 01       	movw	r24, r14
    537a:	b6 01       	movw	r22, r12
    537c:	1a d2       	rcall	.+1076   	; 0x57b2 <__addsf3>
	//Press = (Wertedruck[0] + (Wertedruck[1]*256) + (Wertedruck[2]*65536));
	Press/=4096.0;
    537e:	20 e0       	ldi	r18, 0x00	; 0
    5380:	30 e0       	ldi	r19, 0x00	; 0
    5382:	40 e8       	ldi	r20, 0x80	; 128
    5384:	59 e3       	ldi	r21, 0x39	; 57
    5386:	db d4       	rcall	.+2486   	; 0x5d3e <__mulsf3>
    5388:	f5 01       	movw	r30, r10
    538a:	60 83       	st	Z, r22
    538c:	71 83       	std	Z+1, r23	; 0x01
    538e:	82 83       	std	Z+2, r24	; 0x02
    5390:	93 83       	std	Z+3, r25	; 0x03
	sei();
    5392:	78 94       	sei
}
    5394:	0f 90       	pop	r0
    5396:	0f 90       	pop	r0
    5398:	0f 90       	pop	r0
    539a:	df 91       	pop	r29
    539c:	cf 91       	pop	r28
    539e:	1f 91       	pop	r17
    53a0:	ff 90       	pop	r15
    53a2:	ef 90       	pop	r14
    53a4:	df 90       	pop	r13
    53a6:	cf 90       	pop	r12
    53a8:	bf 90       	pop	r11
    53aa:	af 90       	pop	r10
    53ac:	08 95       	ret

000053ae <_ZN8Pressure16READ_TemperatureEv>:

void Pressure::READ_Temperature(){
    53ae:	cf 92       	push	r12
    53b0:	df 92       	push	r13
    53b2:	ef 92       	push	r14
    53b4:	ff 92       	push	r15
    53b6:	0f 93       	push	r16
    53b8:	1f 93       	push	r17
    53ba:	cf 93       	push	r28
    53bc:	df 93       	push	r29
    53be:	00 d0       	rcall	.+0      	; 0x53c0 <_ZN8Pressure16READ_TemperatureEv+0x12>
    53c0:	cd b7       	in	r28, 0x3d	; 61
    53c2:	de b7       	in	r29, 0x3e	; 62
    53c4:	8c 01       	movw	r16, r24
	cli();
    53c6:	f8 94       	cli
	uint8_t Wert[2];
	i2c.twi_start();
    53c8:	7c 01       	movw	r14, r24
    53ca:	8d e0       	ldi	r24, 0x0D	; 13
    53cc:	e8 0e       	add	r14, r24
    53ce:	f1 1c       	adc	r15, r1
    53d0:	c7 01       	movw	r24, r14
    53d2:	59 d9       	rcall	.-3406   	; 0x4686 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_Write);
    53d4:	6a eb       	ldi	r22, 0xBA	; 186
    53d6:	c7 01       	movw	r24, r14
    53d8:	5e d9       	rcall	.-3396   	; 0x4696 <_ZN3I2C9twi_writeEh>
	i2c.twi_write(TEMP_OUT_L|(1<<autoincrement));
    53da:	6b ea       	ldi	r22, 0xAB	; 171
    53dc:	c7 01       	movw	r24, r14
    53de:	5b d9       	rcall	.-3402   	; 0x4696 <_ZN3I2C9twi_writeEh>
	i2c.twi_start();
    53e0:	c7 01       	movw	r24, r14
    53e2:	51 d9       	rcall	.-3422   	; 0x4686 <_ZN3I2C9twi_startEv>
	i2c.twi_write(LPS25H_SA1_READ);
    53e4:	6b eb       	ldi	r22, 0xBB	; 187
    53e6:	c7 01       	movw	r24, r14
    53e8:	56 d9       	rcall	.-3412   	; 0x4696 <_ZN3I2C9twi_writeEh>
    53ea:	cc 24       	eor	r12, r12
    53ec:	c3 94       	inc	r12
    53ee:	d1 2c       	mov	r13, r1
    53f0:	02 c0       	rjmp	.+4      	; 0x53f6 <_ZN8Pressure16READ_TemperatureEv+0x48>
    53f2:	d3 94       	inc	r13
    53f4:	c3 94       	inc	r12
	for (uint8_t i=0;i<2;i++)
	{
		if (i<1)
    53f6:	d1 10       	cpse	r13, r1
    53f8:	05 c0       	rjmp	.+10     	; 0x5404 <_ZN8Pressure16READ_TemperatureEv+0x56>
		{
			Wert[i] = i2c.twi_read(1);
    53fa:	61 e0       	ldi	r22, 0x01	; 1
    53fc:	c7 01       	movw	r24, r14
    53fe:	5b d9       	rcall	.-3402   	; 0x46b6 <_ZN3I2C8twi_readEh>
    5400:	89 83       	std	Y+1, r24	; 0x01
    5402:	f7 cf       	rjmp	.-18     	; 0x53f2 <_ZN8Pressure16READ_TemperatureEv+0x44>
		}
		else{
			Wert[i] = i2c.twi_read(0);
    5404:	60 e0       	ldi	r22, 0x00	; 0
    5406:	c7 01       	movw	r24, r14
    5408:	56 d9       	rcall	.-3412   	; 0x46b6 <_ZN3I2C8twi_readEh>
    540a:	e1 e0       	ldi	r30, 0x01	; 1
    540c:	f0 e0       	ldi	r31, 0x00	; 0
    540e:	ec 0f       	add	r30, r28
    5410:	fd 1f       	adc	r31, r29
    5412:	ed 0d       	add	r30, r13
    5414:	f1 1d       	adc	r31, r1
    5416:	80 83       	st	Z, r24
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_Write);
	i2c.twi_write(TEMP_OUT_L|(1<<autoincrement));
	i2c.twi_start();
	i2c.twi_write(LPS25H_SA1_READ);
	for (uint8_t i=0;i<2;i++)
    5418:	e1 e0       	ldi	r30, 0x01	; 1
    541a:	ec 15       	cp	r30, r12
    541c:	50 f7       	brcc	.-44     	; 0x53f2 <_ZN8Pressure16READ_TemperatureEv+0x44>
		}
		else{
			Wert[i] = i2c.twi_read(0);
		}
	}
	i2c.twi_stop();
    541e:	c7 01       	movw	r24, r14
    5420:	36 d9       	rcall	.-3476   	; 0x468e <_ZN3I2C8twi_stopEv>
	Tempera = ((int16_t)(Wert[0]+(Wert[1]<<8)))/480.0;
    5422:	89 81       	ldd	r24, Y+1	; 0x01
    5424:	6a 81       	ldd	r22, Y+2	; 0x02
    5426:	70 e0       	ldi	r23, 0x00	; 0
    5428:	76 2f       	mov	r23, r22
    542a:	66 27       	eor	r22, r22
    542c:	68 0f       	add	r22, r24
    542e:	71 1d       	adc	r23, r1
    5430:	88 27       	eor	r24, r24
    5432:	77 fd       	sbrc	r23, 7
    5434:	80 95       	com	r24
    5436:	98 2f       	mov	r25, r24
    5438:	24 d3       	rcall	.+1608   	; 0x5a82 <__floatsisf>
    543a:	20 e0       	ldi	r18, 0x00	; 0
    543c:	30 e0       	ldi	r19, 0x00	; 0
    543e:	40 ef       	ldi	r20, 0xF0	; 240
    5440:	53 e4       	ldi	r21, 0x43	; 67
    5442:	84 d2       	rcall	.+1288   	; 0x594c <__divsf3>
    5444:	6b 01       	movw	r12, r22
    5446:	7c 01       	movw	r14, r24
	Tempera+=42.5+Tempoffset;
    5448:	f8 01       	movw	r30, r16
    544a:	60 85       	ldd	r22, Z+8	; 0x08
    544c:	77 27       	eor	r23, r23
    544e:	67 fd       	sbrc	r22, 7
    5450:	70 95       	com	r23
    5452:	87 2f       	mov	r24, r23
    5454:	97 2f       	mov	r25, r23
    5456:	15 d3       	rcall	.+1578   	; 0x5a82 <__floatsisf>
    5458:	20 e0       	ldi	r18, 0x00	; 0
    545a:	30 e0       	ldi	r19, 0x00	; 0
    545c:	4a e2       	ldi	r20, 0x2A	; 42
    545e:	52 e4       	ldi	r21, 0x42	; 66
    5460:	a8 d1       	rcall	.+848    	; 0x57b2 <__addsf3>
    5462:	9b 01       	movw	r18, r22
    5464:	ac 01       	movw	r20, r24
    5466:	c7 01       	movw	r24, r14
    5468:	b6 01       	movw	r22, r12
    546a:	a3 d1       	rcall	.+838    	; 0x57b2 <__addsf3>
    546c:	f8 01       	movw	r30, r16
    546e:	64 83       	std	Z+4, r22	; 0x04
    5470:	75 83       	std	Z+5, r23	; 0x05
    5472:	86 83       	std	Z+6, r24	; 0x06
    5474:	97 83       	std	Z+7, r25	; 0x07
	sei();
    5476:	78 94       	sei
}
    5478:	0f 90       	pop	r0
    547a:	0f 90       	pop	r0
    547c:	df 91       	pop	r29
    547e:	cf 91       	pop	r28
    5480:	1f 91       	pop	r17
    5482:	0f 91       	pop	r16
    5484:	ff 90       	pop	r15
    5486:	ef 90       	pop	r14
    5488:	df 90       	pop	r13
    548a:	cf 90       	pop	r12
    548c:	08 95       	ret

0000548e <_ZN8Pressure8altitudeEd>:

double Pressure::altitude(double Pressurevalue){
    548e:	8f 92       	push	r8
    5490:	9f 92       	push	r9
    5492:	af 92       	push	r10
    5494:	bf 92       	push	r11
    5496:	cf 92       	push	r12
    5498:	df 92       	push	r13
    549a:	ef 92       	push	r14
    549c:	ff 92       	push	r15
	return (Pressure0*100*log(Pressure0/Pressurevalue)/(1.2041*9.81));
    549e:	fc 01       	movw	r30, r24
    54a0:	c1 84       	ldd	r12, Z+9	; 0x09
    54a2:	d2 84       	ldd	r13, Z+10	; 0x0a
    54a4:	e3 84       	ldd	r14, Z+11	; 0x0b
    54a6:	f4 84       	ldd	r15, Z+12	; 0x0c
    54a8:	9a 01       	movw	r18, r20
    54aa:	ab 01       	movw	r20, r22
    54ac:	c7 01       	movw	r24, r14
    54ae:	b6 01       	movw	r22, r12
    54b0:	4d d2       	rcall	.+1178   	; 0x594c <__divsf3>
    54b2:	05 d4       	rcall	.+2058   	; 0x5cbe <log>
    54b4:	4b 01       	movw	r8, r22
    54b6:	5c 01       	movw	r10, r24
    54b8:	20 e0       	ldi	r18, 0x00	; 0
    54ba:	30 e0       	ldi	r19, 0x00	; 0
    54bc:	48 ec       	ldi	r20, 0xC8	; 200
    54be:	52 e4       	ldi	r21, 0x42	; 66
    54c0:	c7 01       	movw	r24, r14
    54c2:	b6 01       	movw	r22, r12
    54c4:	3c d4       	rcall	.+2168   	; 0x5d3e <__mulsf3>
    54c6:	a5 01       	movw	r20, r10
    54c8:	94 01       	movw	r18, r8
    54ca:	39 d4       	rcall	.+2162   	; 0x5d3e <__mulsf3>
    54cc:	2c ed       	ldi	r18, 0xDC	; 220
    54ce:	3e ef       	ldi	r19, 0xFE	; 254
    54d0:	4c e3       	ldi	r20, 0x3C	; 60
    54d2:	51 e4       	ldi	r21, 0x41	; 65
    54d4:	3b d2       	rcall	.+1142   	; 0x594c <__divsf3>
}
    54d6:	ff 90       	pop	r15
    54d8:	ef 90       	pop	r14
    54da:	df 90       	pop	r13
    54dc:	cf 90       	pop	r12
    54de:	bf 90       	pop	r11
    54e0:	af 90       	pop	r10
    54e2:	9f 90       	pop	r9
    54e4:	8f 90       	pop	r8
    54e6:	08 95       	ret

000054e8 <_ZN8Pressure13set_Pressure0Ed>:
void Pressure::set_Pressure0(double Pressurevalue){
	Pressure0=Pressurevalue;
    54e8:	fc 01       	movw	r30, r24
    54ea:	41 87       	std	Z+9, r20	; 0x09
    54ec:	52 87       	std	Z+10, r21	; 0x0a
    54ee:	63 87       	std	Z+11, r22	; 0x0b
    54f0:	74 87       	std	Z+12, r23	; 0x0c
    54f2:	08 95       	ret

000054f4 <_ZN3RTCD1Ev>:
		}
		Wecker();
	}
	ausgabezeitneu();
	return 0;
}
    54f4:	08 95       	ret

000054f6 <_ZN3RTC6WeckerEv>:
    54f6:	fc 01       	movw	r30, r24
    54f8:	80 8d       	ldd	r24, Z+24	; 0x18
    54fa:	83 ff       	sbrs	r24, 3
    54fc:	0c c0       	rjmp	.+24     	; 0x5516 <_ZN3RTC6WeckerEv+0x20>
    54fe:	84 fd       	sbrc	r24, 4
    5500:	0a c0       	rjmp	.+20     	; 0x5516 <_ZN3RTC6WeckerEv+0x20>
    5502:	22 8d       	ldd	r18, Z+26	; 0x1a
    5504:	90 89       	ldd	r25, Z+16	; 0x10
    5506:	29 13       	cpse	r18, r25
    5508:	06 c0       	rjmp	.+12     	; 0x5516 <_ZN3RTC6WeckerEv+0x20>
    550a:	21 8d       	ldd	r18, Z+25	; 0x19
    550c:	91 89       	ldd	r25, Z+17	; 0x11
    550e:	29 13       	cpse	r18, r25
    5510:	02 c0       	rjmp	.+4      	; 0x5516 <_ZN3RTC6WeckerEv+0x20>
    5512:	80 61       	ori	r24, 0x10	; 16
    5514:	80 8f       	std	Z+24, r24	; 0x18
    5516:	08 95       	ret

00005518 <_ZN3RTC14ausgabezeitneuEv>:
    5518:	fc 01       	movw	r30, r24
    551a:	90 89       	ldd	r25, Z+16	; 0x10
    551c:	8d ec       	ldi	r24, 0xCD	; 205
    551e:	98 9f       	mul	r25, r24
    5520:	21 2d       	mov	r18, r1
    5522:	11 24       	eor	r1, r1
    5524:	26 95       	lsr	r18
    5526:	26 95       	lsr	r18
    5528:	26 95       	lsr	r18
    552a:	30 e3       	ldi	r19, 0x30	; 48
    552c:	32 0f       	add	r19, r18
    552e:	30 83       	st	Z, r19
    5530:	22 0f       	add	r18, r18
    5532:	32 2f       	mov	r19, r18
    5534:	33 0f       	add	r19, r19
    5536:	33 0f       	add	r19, r19
    5538:	23 0f       	add	r18, r19
    553a:	92 1b       	sub	r25, r18
    553c:	90 5d       	subi	r25, 0xD0	; 208
    553e:	91 83       	std	Z+1, r25	; 0x01
    5540:	91 89       	ldd	r25, Z+17	; 0x11
    5542:	98 9f       	mul	r25, r24
    5544:	21 2d       	mov	r18, r1
    5546:	11 24       	eor	r1, r1
    5548:	26 95       	lsr	r18
    554a:	26 95       	lsr	r18
    554c:	26 95       	lsr	r18
    554e:	30 e3       	ldi	r19, 0x30	; 48
    5550:	32 0f       	add	r19, r18
    5552:	33 83       	std	Z+3, r19	; 0x03
    5554:	22 0f       	add	r18, r18
    5556:	32 2f       	mov	r19, r18
    5558:	33 0f       	add	r19, r19
    555a:	33 0f       	add	r19, r19
    555c:	23 0f       	add	r18, r19
    555e:	92 1b       	sub	r25, r18
    5560:	90 5d       	subi	r25, 0xD0	; 208
    5562:	94 83       	std	Z+4, r25	; 0x04
    5564:	92 89       	ldd	r25, Z+18	; 0x12
    5566:	98 9f       	mul	r25, r24
    5568:	81 2d       	mov	r24, r1
    556a:	11 24       	eor	r1, r1
    556c:	86 95       	lsr	r24
    556e:	86 95       	lsr	r24
    5570:	86 95       	lsr	r24
    5572:	20 e3       	ldi	r18, 0x30	; 48
    5574:	28 0f       	add	r18, r24
    5576:	26 83       	std	Z+6, r18	; 0x06
    5578:	88 0f       	add	r24, r24
    557a:	28 2f       	mov	r18, r24
    557c:	22 0f       	add	r18, r18
    557e:	22 0f       	add	r18, r18
    5580:	82 0f       	add	r24, r18
    5582:	98 1b       	sub	r25, r24
    5584:	90 5d       	subi	r25, 0xD0	; 208
    5586:	97 83       	std	Z+7, r25	; 0x07
    5588:	08 95       	ret

0000558a <_ZN3RTC15ausgabedatumneuEv>:
    558a:	fc 01       	movw	r30, r24
    558c:	94 89       	ldd	r25, Z+20	; 0x14
    558e:	8d ec       	ldi	r24, 0xCD	; 205
    5590:	98 9f       	mul	r25, r24
    5592:	21 2d       	mov	r18, r1
    5594:	11 24       	eor	r1, r1
    5596:	26 95       	lsr	r18
    5598:	26 95       	lsr	r18
    559a:	26 95       	lsr	r18
    559c:	30 e3       	ldi	r19, 0x30	; 48
    559e:	32 0f       	add	r19, r18
    55a0:	30 87       	std	Z+8, r19	; 0x08
    55a2:	22 0f       	add	r18, r18
    55a4:	32 2f       	mov	r19, r18
    55a6:	33 0f       	add	r19, r19
    55a8:	33 0f       	add	r19, r19
    55aa:	23 0f       	add	r18, r19
    55ac:	92 1b       	sub	r25, r18
    55ae:	90 5d       	subi	r25, 0xD0	; 208
    55b0:	91 87       	std	Z+9, r25	; 0x09
    55b2:	96 89       	ldd	r25, Z+22	; 0x16
    55b4:	98 9f       	mul	r25, r24
    55b6:	21 2d       	mov	r18, r1
    55b8:	11 24       	eor	r1, r1
    55ba:	26 95       	lsr	r18
    55bc:	26 95       	lsr	r18
    55be:	26 95       	lsr	r18
    55c0:	30 e3       	ldi	r19, 0x30	; 48
    55c2:	32 0f       	add	r19, r18
    55c4:	33 87       	std	Z+11, r19	; 0x0b
    55c6:	22 0f       	add	r18, r18
    55c8:	32 2f       	mov	r19, r18
    55ca:	33 0f       	add	r19, r19
    55cc:	33 0f       	add	r19, r19
    55ce:	23 0f       	add	r18, r19
    55d0:	92 1b       	sub	r25, r18
    55d2:	90 5d       	subi	r25, 0xD0	; 208
    55d4:	94 87       	std	Z+12, r25	; 0x0c
    55d6:	97 89       	ldd	r25, Z+23	; 0x17
    55d8:	98 9f       	mul	r25, r24
    55da:	81 2d       	mov	r24, r1
    55dc:	11 24       	eor	r1, r1
    55de:	86 95       	lsr	r24
    55e0:	86 95       	lsr	r24
    55e2:	86 95       	lsr	r24
    55e4:	20 e3       	ldi	r18, 0x30	; 48
    55e6:	28 0f       	add	r18, r24
    55e8:	26 87       	std	Z+14, r18	; 0x0e
    55ea:	88 0f       	add	r24, r24
    55ec:	28 2f       	mov	r18, r24
    55ee:	22 0f       	add	r18, r18
    55f0:	22 0f       	add	r18, r18
    55f2:	82 0f       	add	r24, r18
    55f4:	98 1b       	sub	r25, r24
    55f6:	90 5d       	subi	r25, 0xD0	; 208
    55f8:	97 87       	std	Z+15, r25	; 0x0f
    55fa:	08 95       	ret

000055fc <_ZN3RTCC1Ev>:
    55fc:	cf 93       	push	r28
    55fe:	df 93       	push	r29
    5600:	ec 01       	movw	r28, r24
    5602:	1a 8a       	std	Y+18, r1	; 0x12
    5604:	1b 8a       	std	Y+19, r1	; 0x13
    5606:	19 8a       	std	Y+17, r1	; 0x11
    5608:	18 8a       	std	Y+16, r1	; 0x10
    560a:	1c 8a       	std	Y+20, r1	; 0x14
    560c:	1e 8a       	std	Y+22, r1	; 0x16
    560e:	1f 8a       	std	Y+23, r1	; 0x17
    5610:	1d 8a       	std	Y+21, r1	; 0x15
    5612:	88 e2       	ldi	r24, 0x28	; 40
    5614:	89 8f       	std	Y+25, r24	; 0x19
    5616:	8a e0       	ldi	r24, 0x0A	; 10
    5618:	8a 8f       	std	Y+26, r24	; 0x1a
    561a:	1c 8e       	std	Y+28, r1	; 0x1c
    561c:	1b 8e       	std	Y+27, r1	; 0x1b
    561e:	1e 8e       	std	Y+30, r1	; 0x1e
    5620:	1d 8e       	std	Y+29, r1	; 0x1d
    5622:	de 01       	movw	r26, r28
    5624:	fe 01       	movw	r30, r28
    5626:	38 96       	adiw	r30, 0x08	; 8
    5628:	80 e0       	ldi	r24, 0x00	; 0
    562a:	1d 92       	st	X+, r1
    562c:	11 92       	st	Z+, r1
    562e:	8f 5f       	subi	r24, 0xFF	; 255
    5630:	88 30       	cpi	r24, 0x08	; 8
    5632:	d9 f7       	brne	.-10     	; 0x562a <_ZN3RTCC1Ev+0x2e>
    5634:	8a e3       	ldi	r24, 0x3A	; 58
    5636:	8a 83       	std	Y+2, r24	; 0x02
    5638:	8d 83       	std	Y+5, r24	; 0x05
    563a:	8e e2       	ldi	r24, 0x2E	; 46
    563c:	8a 87       	std	Y+10, r24	; 0x0a
    563e:	8d 87       	std	Y+13, r24	; 0x0d
    5640:	ce 01       	movw	r24, r28
    5642:	6a df       	rcall	.-300    	; 0x5518 <_ZN3RTC14ausgabezeitneuEv>
    5644:	ce 01       	movw	r24, r28
    5646:	a1 df       	rcall	.-190    	; 0x558a <_ZN3RTC15ausgabedatumneuEv>
    5648:	df 91       	pop	r29
    564a:	cf 91       	pop	r28
    564c:	08 95       	ret

0000564e <_ZN3RTC8kalenderEv>:
    564e:	fc 01       	movw	r30, r24
    5650:	26 89       	ldd	r18, Z+22	; 0x16
    5652:	32 2f       	mov	r19, r18
    5654:	3d 7f       	andi	r19, 0xFD	; 253
    5656:	34 30       	cpi	r19, 0x04	; 4
    5658:	11 f0       	breq	.+4      	; 0x565e <_ZN3RTC8kalenderEv+0x10>
    565a:	39 30       	cpi	r19, 0x09	; 9
    565c:	91 f4       	brne	.+36     	; 0x5682 <_ZN3RTC8kalenderEv+0x34>
    565e:	fc 01       	movw	r30, r24
    5660:	34 89       	ldd	r19, Z+20	; 0x14
    5662:	3f 31       	cpi	r19, 0x1F	; 31
    5664:	b0 f1       	brcs	.+108    	; 0x56d2 <_ZN3RTC8kalenderEv+0x84>
    5666:	31 e0       	ldi	r19, 0x01	; 1
    5668:	34 8b       	std	Z+20, r19	; 0x14
    566a:	2f 5f       	subi	r18, 0xFF	; 255
    566c:	2d 30       	cpi	r18, 0x0D	; 13
    566e:	10 f4       	brcc	.+4      	; 0x5674 <_ZN3RTC8kalenderEv+0x26>
    5670:	26 8b       	std	Z+22, r18	; 0x16
    5672:	2f c0       	rjmp	.+94     	; 0x56d2 <_ZN3RTC8kalenderEv+0x84>
    5674:	21 e0       	ldi	r18, 0x01	; 1
    5676:	fc 01       	movw	r30, r24
    5678:	26 8b       	std	Z+22, r18	; 0x16
    567a:	27 89       	ldd	r18, Z+23	; 0x17
    567c:	2f 5f       	subi	r18, 0xFF	; 255
    567e:	27 8b       	std	Z+23, r18	; 0x17
    5680:	28 c0       	rjmp	.+80     	; 0x56d2 <_ZN3RTC8kalenderEv+0x84>
    5682:	22 30       	cpi	r18, 0x02	; 2
    5684:	a9 f4       	brne	.+42     	; 0x56b0 <_ZN3RTC8kalenderEv+0x62>
    5686:	fc 01       	movw	r30, r24
    5688:	27 89       	ldd	r18, Z+23	; 0x17
    568a:	23 70       	andi	r18, 0x03	; 3
    568c:	41 f4       	brne	.+16     	; 0x569e <_ZN3RTC8kalenderEv+0x50>
    568e:	24 89       	ldd	r18, Z+20	; 0x14
    5690:	2e 31       	cpi	r18, 0x1E	; 30
    5692:	f8 f0       	brcs	.+62     	; 0x56d2 <_ZN3RTC8kalenderEv+0x84>
    5694:	21 e0       	ldi	r18, 0x01	; 1
    5696:	24 8b       	std	Z+20, r18	; 0x14
    5698:	23 e0       	ldi	r18, 0x03	; 3
    569a:	26 8b       	std	Z+22, r18	; 0x16
    569c:	1a c0       	rjmp	.+52     	; 0x56d2 <_ZN3RTC8kalenderEv+0x84>
    569e:	fc 01       	movw	r30, r24
    56a0:	24 89       	ldd	r18, Z+20	; 0x14
    56a2:	2d 31       	cpi	r18, 0x1D	; 29
    56a4:	b0 f0       	brcs	.+44     	; 0x56d2 <_ZN3RTC8kalenderEv+0x84>
    56a6:	21 e0       	ldi	r18, 0x01	; 1
    56a8:	24 8b       	std	Z+20, r18	; 0x14
    56aa:	23 e0       	ldi	r18, 0x03	; 3
    56ac:	26 8b       	std	Z+22, r18	; 0x16
    56ae:	11 c0       	rjmp	.+34     	; 0x56d2 <_ZN3RTC8kalenderEv+0x84>
    56b0:	fc 01       	movw	r30, r24
    56b2:	34 89       	ldd	r19, Z+20	; 0x14
    56b4:	30 32       	cpi	r19, 0x20	; 32
    56b6:	68 f0       	brcs	.+26     	; 0x56d2 <_ZN3RTC8kalenderEv+0x84>
    56b8:	31 e0       	ldi	r19, 0x01	; 1
    56ba:	34 8b       	std	Z+20, r19	; 0x14
    56bc:	2f 5f       	subi	r18, 0xFF	; 255
    56be:	2d 30       	cpi	r18, 0x0D	; 13
    56c0:	10 f4       	brcc	.+4      	; 0x56c6 <_ZN3RTC8kalenderEv+0x78>
    56c2:	26 8b       	std	Z+22, r18	; 0x16
    56c4:	06 c0       	rjmp	.+12     	; 0x56d2 <_ZN3RTC8kalenderEv+0x84>
    56c6:	21 e0       	ldi	r18, 0x01	; 1
    56c8:	fc 01       	movw	r30, r24
    56ca:	26 8b       	std	Z+22, r18	; 0x16
    56cc:	27 89       	ldd	r18, Z+23	; 0x17
    56ce:	2f 5f       	subi	r18, 0xFF	; 255
    56d0:	27 8b       	std	Z+23, r18	; 0x17
    56d2:	5b cf       	rjmp	.-330    	; 0x558a <_ZN3RTC15ausgabedatumneuEv>
    56d4:	08 95       	ret

000056d6 <_ZN3RTC4zeitEv>:

uint8_t RTC::zeit(){
    56d6:	cf 93       	push	r28
    56d8:	df 93       	push	r29
    56da:	ec 01       	movw	r28, r24
	//Sekunden++; sitzt im Vektor um Taster besser entprellen zu koennen
	if (Sekunden >= 60 && Sekunden <=200){
    56dc:	8a 89       	ldd	r24, Y+18	; 0x12
    56de:	8c 53       	subi	r24, 0x3C	; 60
    56e0:	8d 38       	cpi	r24, 0x8D	; 141
    56e2:	c0 f4       	brcc	.+48     	; 0x5714 <_ZN3RTC4zeitEv+0x3e>
		Sekunden = 0;
    56e4:	1a 8a       	std	Y+18, r1	; 0x12
		Minuten++;
    56e6:	89 89       	ldd	r24, Y+17	; 0x11
    56e8:	8f 5f       	subi	r24, 0xFF	; 255
    56ea:	89 8b       	std	Y+17, r24	; 0x11
		interupts |= (1<<minuteninterupt);
    56ec:	98 8d       	ldd	r25, Y+24	; 0x18
    56ee:	94 60       	ori	r25, 0x04	; 4
    56f0:	98 8f       	std	Y+24, r25	; 0x18
		if(Minuten >= 60){
    56f2:	8c 33       	cpi	r24, 0x3C	; 60
    56f4:	68 f0       	brcs	.+26     	; 0x5710 <_ZN3RTC4zeitEv+0x3a>
			Minuten = 0;
    56f6:	19 8a       	std	Y+17, r1	; 0x11
			Stunden++;
    56f8:	88 89       	ldd	r24, Y+16	; 0x10
    56fa:	8f 5f       	subi	r24, 0xFF	; 255
			if(Stunden >= 24){
    56fc:	88 31       	cpi	r24, 0x18	; 24
    56fe:	10 f4       	brcc	.+4      	; 0x5704 <_ZN3RTC4zeitEv+0x2e>
		Sekunden = 0;
		Minuten++;
		interupts |= (1<<minuteninterupt);
		if(Minuten >= 60){
			Minuten = 0;
			Stunden++;
    5700:	88 8b       	std	Y+16, r24	; 0x10
    5702:	06 c0       	rjmp	.+12     	; 0x5710 <_ZN3RTC4zeitEv+0x3a>
			if(Stunden >= 24){
				Stunden = 0;
    5704:	18 8a       	std	Y+16, r1	; 0x10
				Tag++;
    5706:	8c 89       	ldd	r24, Y+20	; 0x14
    5708:	8f 5f       	subi	r24, 0xFF	; 255
    570a:	8c 8b       	std	Y+20, r24	; 0x14
				kalender();
    570c:	ce 01       	movw	r24, r28
    570e:	9f df       	rcall	.-194    	; 0x564e <_ZN3RTC8kalenderEv>
			}
		}
		Wecker();
    5710:	ce 01       	movw	r24, r28
    5712:	f1 de       	rcall	.-542    	; 0x54f6 <_ZN3RTC6WeckerEv>
	}
	ausgabezeitneu();
    5714:	ce 01       	movw	r24, r28
    5716:	00 df       	rcall	.-512    	; 0x5518 <_ZN3RTC14ausgabezeitneuEv>
	if (interupts&(1<<Timerlauft))
    5718:	28 8d       	ldd	r18, Y+24	; 0x18
    571a:	25 ff       	sbrs	r18, 5
    571c:	0a c0       	rjmp	.+20     	; 0x5732 <_ZN3RTC4zeitEv+0x5c>
	{
		Timerzahler--;
    571e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5720:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5722:	01 97       	sbiw	r24, 0x01	; 1
    5724:	9c 8f       	std	Y+28, r25	; 0x1c
    5726:	8b 8f       	std	Y+27, r24	; 0x1b
		if (Timerzahler<=0)
    5728:	89 2b       	or	r24, r25
    572a:	19 f4       	brne	.+6      	; 0x5732 <_ZN3RTC4zeitEv+0x5c>
		{
			interupts|=(1<<Alarm);
			interupts&=~(1<<Timerlauft);
    572c:	2f 7d       	andi	r18, 0xDF	; 223
    572e:	21 60       	ori	r18, 0x01	; 1
    5730:	28 8f       	std	Y+24, r18	; 0x18
		}
	}
	if (interupts&(1<<Stoppuhrlauft))
    5732:	88 8d       	ldd	r24, Y+24	; 0x18
    5734:	86 ff       	sbrs	r24, 6
    5736:	05 c0       	rjmp	.+10     	; 0x5742 <_ZN3RTC4zeitEv+0x6c>
	{
		Stoppuhrzahler++;
    5738:	8d 8d       	ldd	r24, Y+29	; 0x1d
    573a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    573c:	01 96       	adiw	r24, 0x01	; 1
    573e:	9e 8f       	std	Y+30, r25	; 0x1e
    5740:	8d 8f       	std	Y+29, r24	; 0x1d
	}
	return 0;
}
    5742:	80 e0       	ldi	r24, 0x00	; 0
    5744:	df 91       	pop	r29
    5746:	cf 91       	pop	r28
    5748:	08 95       	ret

0000574a <_ZN3RTC10dummyeinstEv>:
	msg_dat[4]='0'+Monat%10;
	msg_dat[6]='0'+Jahr/10;
	msg_dat[7]='0'+Jahr%10;
}

void RTC::dummyeinst(){
    574a:	cf 93       	push	r28
    574c:	df 93       	push	r29
    574e:	ec 01       	movw	r28, r24
	Stunden=10;
    5750:	8a e0       	ldi	r24, 0x0A	; 10
    5752:	88 8b       	std	Y+16, r24	; 0x10
	Minuten=30;
    5754:	8e e1       	ldi	r24, 0x1E	; 30
    5756:	89 8b       	std	Y+17, r24	; 0x11
	Tag=7;
    5758:	87 e0       	ldi	r24, 0x07	; 7
    575a:	8c 8b       	std	Y+20, r24	; 0x14
	Monat=9;
    575c:	89 e0       	ldi	r24, 0x09	; 9
    575e:	8e 8b       	std	Y+22, r24	; 0x16
	Jahr=15;
    5760:	8f e0       	ldi	r24, 0x0F	; 15
    5762:	8f 8b       	std	Y+23, r24	; 0x17
	ausgabedatumneu();
    5764:	ce 01       	movw	r24, r28
    5766:	11 df       	rcall	.-478    	; 0x558a <_ZN3RTC15ausgabedatumneuEv>
	ausgabezeitneu();
    5768:	ce 01       	movw	r24, r28
    576a:	d6 de       	rcall	.-596    	; 0x5518 <_ZN3RTC14ausgabezeitneuEv>
}
    576c:	df 91       	pop	r29
    576e:	cf 91       	pop	r28
    5770:	08 95       	ret

00005772 <_ZN3RTC8RTCstartEv>:

void RTC::RTCstart(){
    5772:	fc 01       	movw	r30, r24
	//Einstellungen des Ausgabebuffers
	msg_uhr[0]='0';
    5774:	80 e3       	ldi	r24, 0x30	; 48
    5776:	80 83       	st	Z, r24
	msg_uhr[1]='0';
    5778:	81 83       	std	Z+1, r24	; 0x01
	msg_uhr[2]=':';
    577a:	9a e3       	ldi	r25, 0x3A	; 58
    577c:	92 83       	std	Z+2, r25	; 0x02
	msg_uhr[3]='0';
    577e:	83 83       	std	Z+3, r24	; 0x03
	msg_uhr[4]='0';
    5780:	84 83       	std	Z+4, r24	; 0x04
	msg_uhr[5]=':';
    5782:	95 83       	std	Z+5, r25	; 0x05
	msg_uhr[6]='0';
    5784:	86 83       	std	Z+6, r24	; 0x06
	msg_uhr[7]='0';
    5786:	87 83       	std	Z+7, r24	; 0x07
	//Timer2 als 1ms Timer fuer die RTC
	//asynchron mit 32.768 kHz (noch synchrom)
	TCNT2 = TIMER2RTCTIME;
    5788:	10 92 b2 00 	sts	0x00B2, r1
	ASSR |= (1<<AS2);
    578c:	e6 eb       	ldi	r30, 0xB6	; 182
    578e:	f0 e0       	ldi	r31, 0x00	; 0
    5790:	80 81       	ld	r24, Z
    5792:	80 62       	ori	r24, 0x20	; 32
    5794:	80 83       	st	Z, r24
	TIMSK2 = (1<<TOIE2);
    5796:	81 e0       	ldi	r24, 0x01	; 1
    5798:	80 93 70 00 	sts	0x0070, r24
	TCCR2B = (1<<CS22) | (1<<CS20);		//Vorteiler 256
    579c:	85 e0       	ldi	r24, 0x05	; 5
    579e:	80 93 b1 00 	sts	0x00B1, r24
    57a2:	08 95       	ret

000057a4 <_ZN3RTC7RTCstopEv>:
}

void RTC::RTCstop(){
	TCCR2B &= ~((1<<CS22) | (1<<CS21));
    57a4:	e1 eb       	ldi	r30, 0xB1	; 177
    57a6:	f0 e0       	ldi	r31, 0x00	; 0
    57a8:	80 81       	ld	r24, Z
    57aa:	89 7f       	andi	r24, 0xF9	; 249
    57ac:	80 83       	st	Z, r24
    57ae:	08 95       	ret

000057b0 <__subsf3>:
    57b0:	50 58       	subi	r21, 0x80	; 128

000057b2 <__addsf3>:
    57b2:	bb 27       	eor	r27, r27
    57b4:	aa 27       	eor	r26, r26
    57b6:	0e d0       	rcall	.+28     	; 0x57d4 <__addsf3x>
    57b8:	27 c2       	rjmp	.+1102   	; 0x5c08 <__fp_round>
    57ba:	f0 d1       	rcall	.+992    	; 0x5b9c <__fp_pscA>
    57bc:	30 f0       	brcs	.+12     	; 0x57ca <__addsf3+0x18>
    57be:	f5 d1       	rcall	.+1002   	; 0x5baa <__fp_pscB>
    57c0:	20 f0       	brcs	.+8      	; 0x57ca <__addsf3+0x18>
    57c2:	31 f4       	brne	.+12     	; 0x57d0 <__addsf3+0x1e>
    57c4:	9f 3f       	cpi	r25, 0xFF	; 255
    57c6:	11 f4       	brne	.+4      	; 0x57cc <__addsf3+0x1a>
    57c8:	1e f4       	brtc	.+6      	; 0x57d0 <__addsf3+0x1e>
    57ca:	c0 c1       	rjmp	.+896    	; 0x5b4c <__fp_nan>
    57cc:	0e f4       	brtc	.+2      	; 0x57d0 <__addsf3+0x1e>
    57ce:	e0 95       	com	r30
    57d0:	e7 fb       	bst	r30, 7
    57d2:	b6 c1       	rjmp	.+876    	; 0x5b40 <__fp_inf>

000057d4 <__addsf3x>:
    57d4:	e9 2f       	mov	r30, r25
    57d6:	3a d2       	rcall	.+1140   	; 0x5c4c <__fp_split3>
    57d8:	80 f3       	brcs	.-32     	; 0x57ba <__addsf3+0x8>
    57da:	ba 17       	cp	r27, r26
    57dc:	62 07       	cpc	r22, r18
    57de:	73 07       	cpc	r23, r19
    57e0:	84 07       	cpc	r24, r20
    57e2:	95 07       	cpc	r25, r21
    57e4:	18 f0       	brcs	.+6      	; 0x57ec <__addsf3x+0x18>
    57e6:	71 f4       	brne	.+28     	; 0x5804 <__addsf3x+0x30>
    57e8:	9e f5       	brtc	.+102    	; 0x5850 <__addsf3x+0x7c>
    57ea:	52 c2       	rjmp	.+1188   	; 0x5c90 <__fp_zero>
    57ec:	0e f4       	brtc	.+2      	; 0x57f0 <__addsf3x+0x1c>
    57ee:	e0 95       	com	r30
    57f0:	0b 2e       	mov	r0, r27
    57f2:	ba 2f       	mov	r27, r26
    57f4:	a0 2d       	mov	r26, r0
    57f6:	0b 01       	movw	r0, r22
    57f8:	b9 01       	movw	r22, r18
    57fa:	90 01       	movw	r18, r0
    57fc:	0c 01       	movw	r0, r24
    57fe:	ca 01       	movw	r24, r20
    5800:	a0 01       	movw	r20, r0
    5802:	11 24       	eor	r1, r1
    5804:	ff 27       	eor	r31, r31
    5806:	59 1b       	sub	r21, r25
    5808:	99 f0       	breq	.+38     	; 0x5830 <__addsf3x+0x5c>
    580a:	59 3f       	cpi	r21, 0xF9	; 249
    580c:	50 f4       	brcc	.+20     	; 0x5822 <__addsf3x+0x4e>
    580e:	50 3e       	cpi	r21, 0xE0	; 224
    5810:	68 f1       	brcs	.+90     	; 0x586c <__addsf3x+0x98>
    5812:	1a 16       	cp	r1, r26
    5814:	f0 40       	sbci	r31, 0x00	; 0
    5816:	a2 2f       	mov	r26, r18
    5818:	23 2f       	mov	r18, r19
    581a:	34 2f       	mov	r19, r20
    581c:	44 27       	eor	r20, r20
    581e:	58 5f       	subi	r21, 0xF8	; 248
    5820:	f3 cf       	rjmp	.-26     	; 0x5808 <__addsf3x+0x34>
    5822:	46 95       	lsr	r20
    5824:	37 95       	ror	r19
    5826:	27 95       	ror	r18
    5828:	a7 95       	ror	r26
    582a:	f0 40       	sbci	r31, 0x00	; 0
    582c:	53 95       	inc	r21
    582e:	c9 f7       	brne	.-14     	; 0x5822 <__addsf3x+0x4e>
    5830:	7e f4       	brtc	.+30     	; 0x5850 <__addsf3x+0x7c>
    5832:	1f 16       	cp	r1, r31
    5834:	ba 0b       	sbc	r27, r26
    5836:	62 0b       	sbc	r22, r18
    5838:	73 0b       	sbc	r23, r19
    583a:	84 0b       	sbc	r24, r20
    583c:	ba f0       	brmi	.+46     	; 0x586c <__addsf3x+0x98>
    583e:	91 50       	subi	r25, 0x01	; 1
    5840:	a1 f0       	breq	.+40     	; 0x586a <__addsf3x+0x96>
    5842:	ff 0f       	add	r31, r31
    5844:	bb 1f       	adc	r27, r27
    5846:	66 1f       	adc	r22, r22
    5848:	77 1f       	adc	r23, r23
    584a:	88 1f       	adc	r24, r24
    584c:	c2 f7       	brpl	.-16     	; 0x583e <__addsf3x+0x6a>
    584e:	0e c0       	rjmp	.+28     	; 0x586c <__addsf3x+0x98>
    5850:	ba 0f       	add	r27, r26
    5852:	62 1f       	adc	r22, r18
    5854:	73 1f       	adc	r23, r19
    5856:	84 1f       	adc	r24, r20
    5858:	48 f4       	brcc	.+18     	; 0x586c <__addsf3x+0x98>
    585a:	87 95       	ror	r24
    585c:	77 95       	ror	r23
    585e:	67 95       	ror	r22
    5860:	b7 95       	ror	r27
    5862:	f7 95       	ror	r31
    5864:	9e 3f       	cpi	r25, 0xFE	; 254
    5866:	08 f0       	brcs	.+2      	; 0x586a <__addsf3x+0x96>
    5868:	b3 cf       	rjmp	.-154    	; 0x57d0 <__addsf3+0x1e>
    586a:	93 95       	inc	r25
    586c:	88 0f       	add	r24, r24
    586e:	08 f0       	brcs	.+2      	; 0x5872 <__addsf3x+0x9e>
    5870:	99 27       	eor	r25, r25
    5872:	ee 0f       	add	r30, r30
    5874:	97 95       	ror	r25
    5876:	87 95       	ror	r24
    5878:	08 95       	ret
    587a:	90 d1       	rcall	.+800    	; 0x5b9c <__fp_pscA>
    587c:	58 f0       	brcs	.+22     	; 0x5894 <__addsf3x+0xc0>
    587e:	80 e8       	ldi	r24, 0x80	; 128
    5880:	91 e0       	ldi	r25, 0x01	; 1
    5882:	09 f4       	brne	.+2      	; 0x5886 <__addsf3x+0xb2>
    5884:	9e ef       	ldi	r25, 0xFE	; 254
    5886:	91 d1       	rcall	.+802    	; 0x5baa <__fp_pscB>
    5888:	28 f0       	brcs	.+10     	; 0x5894 <__addsf3x+0xc0>
    588a:	40 e8       	ldi	r20, 0x80	; 128
    588c:	51 e0       	ldi	r21, 0x01	; 1
    588e:	59 f4       	brne	.+22     	; 0x58a6 <atan2+0xe>
    5890:	5e ef       	ldi	r21, 0xFE	; 254
    5892:	09 c0       	rjmp	.+18     	; 0x58a6 <atan2+0xe>
    5894:	5b c1       	rjmp	.+694    	; 0x5b4c <__fp_nan>
    5896:	fc c1       	rjmp	.+1016   	; 0x5c90 <__fp_zero>

00005898 <atan2>:
    5898:	e9 2f       	mov	r30, r25
    589a:	e0 78       	andi	r30, 0x80	; 128
    589c:	d7 d1       	rcall	.+942    	; 0x5c4c <__fp_split3>
    589e:	68 f3       	brcs	.-38     	; 0x587a <__addsf3x+0xa6>
    58a0:	09 2e       	mov	r0, r25
    58a2:	05 2a       	or	r0, r21
    58a4:	c1 f3       	breq	.-16     	; 0x5896 <__addsf3x+0xc2>
    58a6:	26 17       	cp	r18, r22
    58a8:	37 07       	cpc	r19, r23
    58aa:	48 07       	cpc	r20, r24
    58ac:	59 07       	cpc	r21, r25
    58ae:	38 f0       	brcs	.+14     	; 0x58be <atan2+0x26>
    58b0:	0e 2e       	mov	r0, r30
    58b2:	07 f8       	bld	r0, 7
    58b4:	e0 25       	eor	r30, r0
    58b6:	69 f0       	breq	.+26     	; 0x58d2 <atan2+0x3a>
    58b8:	e0 25       	eor	r30, r0
    58ba:	e0 64       	ori	r30, 0x40	; 64
    58bc:	0a c0       	rjmp	.+20     	; 0x58d2 <atan2+0x3a>
    58be:	ef 63       	ori	r30, 0x3F	; 63
    58c0:	07 f8       	bld	r0, 7
    58c2:	00 94       	com	r0
    58c4:	07 fa       	bst	r0, 7
    58c6:	db 01       	movw	r26, r22
    58c8:	b9 01       	movw	r22, r18
    58ca:	9d 01       	movw	r18, r26
    58cc:	dc 01       	movw	r26, r24
    58ce:	ca 01       	movw	r24, r20
    58d0:	ad 01       	movw	r20, r26
    58d2:	ef 93       	push	r30
    58d4:	4a d0       	rcall	.+148    	; 0x596a <__divsf3_pse>
    58d6:	98 d1       	rcall	.+816    	; 0x5c08 <__fp_round>
    58d8:	0a d0       	rcall	.+20     	; 0x58ee <atan>
    58da:	5f 91       	pop	r21
    58dc:	55 23       	and	r21, r21
    58de:	31 f0       	breq	.+12     	; 0x58ec <atan2+0x54>
    58e0:	2b ed       	ldi	r18, 0xDB	; 219
    58e2:	3f e0       	ldi	r19, 0x0F	; 15
    58e4:	49 e4       	ldi	r20, 0x49	; 73
    58e6:	50 fd       	sbrc	r21, 0
    58e8:	49 ec       	ldi	r20, 0xC9	; 201
    58ea:	63 cf       	rjmp	.-314    	; 0x57b2 <__addsf3>
    58ec:	08 95       	ret

000058ee <atan>:
    58ee:	df 93       	push	r29
    58f0:	dd 27       	eor	r29, r29
    58f2:	b9 2f       	mov	r27, r25
    58f4:	bf 77       	andi	r27, 0x7F	; 127
    58f6:	40 e8       	ldi	r20, 0x80	; 128
    58f8:	5f e3       	ldi	r21, 0x3F	; 63
    58fa:	16 16       	cp	r1, r22
    58fc:	17 06       	cpc	r1, r23
    58fe:	48 07       	cpc	r20, r24
    5900:	5b 07       	cpc	r21, r27
    5902:	10 f4       	brcc	.+4      	; 0x5908 <atan+0x1a>
    5904:	d9 2f       	mov	r29, r25
    5906:	cf d1       	rcall	.+926    	; 0x5ca6 <inverse>
    5908:	9f 93       	push	r25
    590a:	8f 93       	push	r24
    590c:	7f 93       	push	r23
    590e:	6f 93       	push	r22
    5910:	7f d2       	rcall	.+1278   	; 0x5e10 <square>
    5912:	ee eb       	ldi	r30, 0xBE	; 190
    5914:	f0 e0       	ldi	r31, 0x00	; 0
    5916:	1d d1       	rcall	.+570    	; 0x5b52 <__fp_powser>
    5918:	77 d1       	rcall	.+750    	; 0x5c08 <__fp_round>
    591a:	2f 91       	pop	r18
    591c:	3f 91       	pop	r19
    591e:	4f 91       	pop	r20
    5920:	5f 91       	pop	r21
    5922:	19 d2       	rcall	.+1074   	; 0x5d56 <__mulsf3x>
    5924:	dd 23       	and	r29, r29
    5926:	49 f0       	breq	.+18     	; 0x593a <atan+0x4c>
    5928:	90 58       	subi	r25, 0x80	; 128
    592a:	a2 ea       	ldi	r26, 0xA2	; 162
    592c:	2a ed       	ldi	r18, 0xDA	; 218
    592e:	3f e0       	ldi	r19, 0x0F	; 15
    5930:	49 ec       	ldi	r20, 0xC9	; 201
    5932:	5f e3       	ldi	r21, 0x3F	; 63
    5934:	d0 78       	andi	r29, 0x80	; 128
    5936:	5d 27       	eor	r21, r29
    5938:	4d df       	rcall	.-358    	; 0x57d4 <__addsf3x>
    593a:	df 91       	pop	r29
    593c:	65 c1       	rjmp	.+714    	; 0x5c08 <__fp_round>

0000593e <__cmpsf2>:
    593e:	dc d0       	rcall	.+440    	; 0x5af8 <__fp_cmp>
    5940:	08 f4       	brcc	.+2      	; 0x5944 <__cmpsf2+0x6>
    5942:	81 e0       	ldi	r24, 0x01	; 1
    5944:	08 95       	ret

00005946 <cos>:
    5946:	39 d1       	rcall	.+626    	; 0x5bba <__fp_rempio2>
    5948:	e3 95       	inc	r30
    594a:	6f c1       	rjmp	.+734    	; 0x5c2a <__fp_sinus>

0000594c <__divsf3>:
    594c:	0c d0       	rcall	.+24     	; 0x5966 <__divsf3x>
    594e:	5c c1       	rjmp	.+696    	; 0x5c08 <__fp_round>
    5950:	2c d1       	rcall	.+600    	; 0x5baa <__fp_pscB>
    5952:	40 f0       	brcs	.+16     	; 0x5964 <__divsf3+0x18>
    5954:	23 d1       	rcall	.+582    	; 0x5b9c <__fp_pscA>
    5956:	30 f0       	brcs	.+12     	; 0x5964 <__divsf3+0x18>
    5958:	21 f4       	brne	.+8      	; 0x5962 <__divsf3+0x16>
    595a:	5f 3f       	cpi	r21, 0xFF	; 255
    595c:	19 f0       	breq	.+6      	; 0x5964 <__divsf3+0x18>
    595e:	f0 c0       	rjmp	.+480    	; 0x5b40 <__fp_inf>
    5960:	51 11       	cpse	r21, r1
    5962:	97 c1       	rjmp	.+814    	; 0x5c92 <__fp_szero>
    5964:	f3 c0       	rjmp	.+486    	; 0x5b4c <__fp_nan>

00005966 <__divsf3x>:
    5966:	72 d1       	rcall	.+740    	; 0x5c4c <__fp_split3>
    5968:	98 f3       	brcs	.-26     	; 0x5950 <__divsf3+0x4>

0000596a <__divsf3_pse>:
    596a:	99 23       	and	r25, r25
    596c:	c9 f3       	breq	.-14     	; 0x5960 <__divsf3+0x14>
    596e:	55 23       	and	r21, r21
    5970:	b1 f3       	breq	.-20     	; 0x595e <__divsf3+0x12>
    5972:	95 1b       	sub	r25, r21
    5974:	55 0b       	sbc	r21, r21
    5976:	bb 27       	eor	r27, r27
    5978:	aa 27       	eor	r26, r26
    597a:	62 17       	cp	r22, r18
    597c:	73 07       	cpc	r23, r19
    597e:	84 07       	cpc	r24, r20
    5980:	38 f0       	brcs	.+14     	; 0x5990 <__divsf3_pse+0x26>
    5982:	9f 5f       	subi	r25, 0xFF	; 255
    5984:	5f 4f       	sbci	r21, 0xFF	; 255
    5986:	22 0f       	add	r18, r18
    5988:	33 1f       	adc	r19, r19
    598a:	44 1f       	adc	r20, r20
    598c:	aa 1f       	adc	r26, r26
    598e:	a9 f3       	breq	.-22     	; 0x597a <__divsf3_pse+0x10>
    5990:	33 d0       	rcall	.+102    	; 0x59f8 <__divsf3_pse+0x8e>
    5992:	0e 2e       	mov	r0, r30
    5994:	3a f0       	brmi	.+14     	; 0x59a4 <__divsf3_pse+0x3a>
    5996:	e0 e8       	ldi	r30, 0x80	; 128
    5998:	30 d0       	rcall	.+96     	; 0x59fa <__divsf3_pse+0x90>
    599a:	91 50       	subi	r25, 0x01	; 1
    599c:	50 40       	sbci	r21, 0x00	; 0
    599e:	e6 95       	lsr	r30
    59a0:	00 1c       	adc	r0, r0
    59a2:	ca f7       	brpl	.-14     	; 0x5996 <__divsf3_pse+0x2c>
    59a4:	29 d0       	rcall	.+82     	; 0x59f8 <__divsf3_pse+0x8e>
    59a6:	fe 2f       	mov	r31, r30
    59a8:	27 d0       	rcall	.+78     	; 0x59f8 <__divsf3_pse+0x8e>
    59aa:	66 0f       	add	r22, r22
    59ac:	77 1f       	adc	r23, r23
    59ae:	88 1f       	adc	r24, r24
    59b0:	bb 1f       	adc	r27, r27
    59b2:	26 17       	cp	r18, r22
    59b4:	37 07       	cpc	r19, r23
    59b6:	48 07       	cpc	r20, r24
    59b8:	ab 07       	cpc	r26, r27
    59ba:	b0 e8       	ldi	r27, 0x80	; 128
    59bc:	09 f0       	breq	.+2      	; 0x59c0 <__divsf3_pse+0x56>
    59be:	bb 0b       	sbc	r27, r27
    59c0:	80 2d       	mov	r24, r0
    59c2:	bf 01       	movw	r22, r30
    59c4:	ff 27       	eor	r31, r31
    59c6:	93 58       	subi	r25, 0x83	; 131
    59c8:	5f 4f       	sbci	r21, 0xFF	; 255
    59ca:	2a f0       	brmi	.+10     	; 0x59d6 <__divsf3_pse+0x6c>
    59cc:	9e 3f       	cpi	r25, 0xFE	; 254
    59ce:	51 05       	cpc	r21, r1
    59d0:	68 f0       	brcs	.+26     	; 0x59ec <__divsf3_pse+0x82>
    59d2:	b6 c0       	rjmp	.+364    	; 0x5b40 <__fp_inf>
    59d4:	5e c1       	rjmp	.+700    	; 0x5c92 <__fp_szero>
    59d6:	5f 3f       	cpi	r21, 0xFF	; 255
    59d8:	ec f3       	brlt	.-6      	; 0x59d4 <__divsf3_pse+0x6a>
    59da:	98 3e       	cpi	r25, 0xE8	; 232
    59dc:	dc f3       	brlt	.-10     	; 0x59d4 <__divsf3_pse+0x6a>
    59de:	86 95       	lsr	r24
    59e0:	77 95       	ror	r23
    59e2:	67 95       	ror	r22
    59e4:	b7 95       	ror	r27
    59e6:	f7 95       	ror	r31
    59e8:	9f 5f       	subi	r25, 0xFF	; 255
    59ea:	c9 f7       	brne	.-14     	; 0x59de <__divsf3_pse+0x74>
    59ec:	88 0f       	add	r24, r24
    59ee:	91 1d       	adc	r25, r1
    59f0:	96 95       	lsr	r25
    59f2:	87 95       	ror	r24
    59f4:	97 f9       	bld	r25, 7
    59f6:	08 95       	ret
    59f8:	e1 e0       	ldi	r30, 0x01	; 1
    59fa:	66 0f       	add	r22, r22
    59fc:	77 1f       	adc	r23, r23
    59fe:	88 1f       	adc	r24, r24
    5a00:	bb 1f       	adc	r27, r27
    5a02:	62 17       	cp	r22, r18
    5a04:	73 07       	cpc	r23, r19
    5a06:	84 07       	cpc	r24, r20
    5a08:	ba 07       	cpc	r27, r26
    5a0a:	20 f0       	brcs	.+8      	; 0x5a14 <__divsf3_pse+0xaa>
    5a0c:	62 1b       	sub	r22, r18
    5a0e:	73 0b       	sbc	r23, r19
    5a10:	84 0b       	sbc	r24, r20
    5a12:	ba 0b       	sbc	r27, r26
    5a14:	ee 1f       	adc	r30, r30
    5a16:	88 f7       	brcc	.-30     	; 0x59fa <__divsf3_pse+0x90>
    5a18:	e0 95       	com	r30
    5a1a:	08 95       	ret

00005a1c <__fixsfsi>:
    5a1c:	04 d0       	rcall	.+8      	; 0x5a26 <__fixunssfsi>
    5a1e:	68 94       	set
    5a20:	b1 11       	cpse	r27, r1
    5a22:	37 c1       	rjmp	.+622    	; 0x5c92 <__fp_szero>
    5a24:	08 95       	ret

00005a26 <__fixunssfsi>:
    5a26:	1a d1       	rcall	.+564    	; 0x5c5c <__fp_splitA>
    5a28:	88 f0       	brcs	.+34     	; 0x5a4c <__fixunssfsi+0x26>
    5a2a:	9f 57       	subi	r25, 0x7F	; 127
    5a2c:	90 f0       	brcs	.+36     	; 0x5a52 <__fixunssfsi+0x2c>
    5a2e:	b9 2f       	mov	r27, r25
    5a30:	99 27       	eor	r25, r25
    5a32:	b7 51       	subi	r27, 0x17	; 23
    5a34:	a0 f0       	brcs	.+40     	; 0x5a5e <__fixunssfsi+0x38>
    5a36:	d1 f0       	breq	.+52     	; 0x5a6c <__fixunssfsi+0x46>
    5a38:	66 0f       	add	r22, r22
    5a3a:	77 1f       	adc	r23, r23
    5a3c:	88 1f       	adc	r24, r24
    5a3e:	99 1f       	adc	r25, r25
    5a40:	1a f0       	brmi	.+6      	; 0x5a48 <__fixunssfsi+0x22>
    5a42:	ba 95       	dec	r27
    5a44:	c9 f7       	brne	.-14     	; 0x5a38 <__fixunssfsi+0x12>
    5a46:	12 c0       	rjmp	.+36     	; 0x5a6c <__fixunssfsi+0x46>
    5a48:	b1 30       	cpi	r27, 0x01	; 1
    5a4a:	81 f0       	breq	.+32     	; 0x5a6c <__fixunssfsi+0x46>
    5a4c:	21 d1       	rcall	.+578    	; 0x5c90 <__fp_zero>
    5a4e:	b1 e0       	ldi	r27, 0x01	; 1
    5a50:	08 95       	ret
    5a52:	1e c1       	rjmp	.+572    	; 0x5c90 <__fp_zero>
    5a54:	67 2f       	mov	r22, r23
    5a56:	78 2f       	mov	r23, r24
    5a58:	88 27       	eor	r24, r24
    5a5a:	b8 5f       	subi	r27, 0xF8	; 248
    5a5c:	39 f0       	breq	.+14     	; 0x5a6c <__fixunssfsi+0x46>
    5a5e:	b9 3f       	cpi	r27, 0xF9	; 249
    5a60:	cc f3       	brlt	.-14     	; 0x5a54 <__fixunssfsi+0x2e>
    5a62:	86 95       	lsr	r24
    5a64:	77 95       	ror	r23
    5a66:	67 95       	ror	r22
    5a68:	b3 95       	inc	r27
    5a6a:	d9 f7       	brne	.-10     	; 0x5a62 <__fixunssfsi+0x3c>
    5a6c:	3e f4       	brtc	.+14     	; 0x5a7c <__fixunssfsi+0x56>
    5a6e:	90 95       	com	r25
    5a70:	80 95       	com	r24
    5a72:	70 95       	com	r23
    5a74:	61 95       	neg	r22
    5a76:	7f 4f       	sbci	r23, 0xFF	; 255
    5a78:	8f 4f       	sbci	r24, 0xFF	; 255
    5a7a:	9f 4f       	sbci	r25, 0xFF	; 255
    5a7c:	08 95       	ret

00005a7e <__floatunsisf>:
    5a7e:	e8 94       	clt
    5a80:	09 c0       	rjmp	.+18     	; 0x5a94 <__floatsisf+0x12>

00005a82 <__floatsisf>:
    5a82:	97 fb       	bst	r25, 7
    5a84:	3e f4       	brtc	.+14     	; 0x5a94 <__floatsisf+0x12>
    5a86:	90 95       	com	r25
    5a88:	80 95       	com	r24
    5a8a:	70 95       	com	r23
    5a8c:	61 95       	neg	r22
    5a8e:	7f 4f       	sbci	r23, 0xFF	; 255
    5a90:	8f 4f       	sbci	r24, 0xFF	; 255
    5a92:	9f 4f       	sbci	r25, 0xFF	; 255
    5a94:	99 23       	and	r25, r25
    5a96:	a9 f0       	breq	.+42     	; 0x5ac2 <__floatsisf+0x40>
    5a98:	f9 2f       	mov	r31, r25
    5a9a:	96 e9       	ldi	r25, 0x96	; 150
    5a9c:	bb 27       	eor	r27, r27
    5a9e:	93 95       	inc	r25
    5aa0:	f6 95       	lsr	r31
    5aa2:	87 95       	ror	r24
    5aa4:	77 95       	ror	r23
    5aa6:	67 95       	ror	r22
    5aa8:	b7 95       	ror	r27
    5aaa:	f1 11       	cpse	r31, r1
    5aac:	f8 cf       	rjmp	.-16     	; 0x5a9e <__floatsisf+0x1c>
    5aae:	fa f4       	brpl	.+62     	; 0x5aee <__floatsisf+0x6c>
    5ab0:	bb 0f       	add	r27, r27
    5ab2:	11 f4       	brne	.+4      	; 0x5ab8 <__floatsisf+0x36>
    5ab4:	60 ff       	sbrs	r22, 0
    5ab6:	1b c0       	rjmp	.+54     	; 0x5aee <__floatsisf+0x6c>
    5ab8:	6f 5f       	subi	r22, 0xFF	; 255
    5aba:	7f 4f       	sbci	r23, 0xFF	; 255
    5abc:	8f 4f       	sbci	r24, 0xFF	; 255
    5abe:	9f 4f       	sbci	r25, 0xFF	; 255
    5ac0:	16 c0       	rjmp	.+44     	; 0x5aee <__floatsisf+0x6c>
    5ac2:	88 23       	and	r24, r24
    5ac4:	11 f0       	breq	.+4      	; 0x5aca <__floatsisf+0x48>
    5ac6:	96 e9       	ldi	r25, 0x96	; 150
    5ac8:	11 c0       	rjmp	.+34     	; 0x5aec <__floatsisf+0x6a>
    5aca:	77 23       	and	r23, r23
    5acc:	21 f0       	breq	.+8      	; 0x5ad6 <__floatsisf+0x54>
    5ace:	9e e8       	ldi	r25, 0x8E	; 142
    5ad0:	87 2f       	mov	r24, r23
    5ad2:	76 2f       	mov	r23, r22
    5ad4:	05 c0       	rjmp	.+10     	; 0x5ae0 <__floatsisf+0x5e>
    5ad6:	66 23       	and	r22, r22
    5ad8:	71 f0       	breq	.+28     	; 0x5af6 <__floatsisf+0x74>
    5ada:	96 e8       	ldi	r25, 0x86	; 134
    5adc:	86 2f       	mov	r24, r22
    5ade:	70 e0       	ldi	r23, 0x00	; 0
    5ae0:	60 e0       	ldi	r22, 0x00	; 0
    5ae2:	2a f0       	brmi	.+10     	; 0x5aee <__floatsisf+0x6c>
    5ae4:	9a 95       	dec	r25
    5ae6:	66 0f       	add	r22, r22
    5ae8:	77 1f       	adc	r23, r23
    5aea:	88 1f       	adc	r24, r24
    5aec:	da f7       	brpl	.-10     	; 0x5ae4 <__floatsisf+0x62>
    5aee:	88 0f       	add	r24, r24
    5af0:	96 95       	lsr	r25
    5af2:	87 95       	ror	r24
    5af4:	97 f9       	bld	r25, 7
    5af6:	08 95       	ret

00005af8 <__fp_cmp>:
    5af8:	99 0f       	add	r25, r25
    5afa:	00 08       	sbc	r0, r0
    5afc:	55 0f       	add	r21, r21
    5afe:	aa 0b       	sbc	r26, r26
    5b00:	e0 e8       	ldi	r30, 0x80	; 128
    5b02:	fe ef       	ldi	r31, 0xFE	; 254
    5b04:	16 16       	cp	r1, r22
    5b06:	17 06       	cpc	r1, r23
    5b08:	e8 07       	cpc	r30, r24
    5b0a:	f9 07       	cpc	r31, r25
    5b0c:	c0 f0       	brcs	.+48     	; 0x5b3e <__fp_cmp+0x46>
    5b0e:	12 16       	cp	r1, r18
    5b10:	13 06       	cpc	r1, r19
    5b12:	e4 07       	cpc	r30, r20
    5b14:	f5 07       	cpc	r31, r21
    5b16:	98 f0       	brcs	.+38     	; 0x5b3e <__fp_cmp+0x46>
    5b18:	62 1b       	sub	r22, r18
    5b1a:	73 0b       	sbc	r23, r19
    5b1c:	84 0b       	sbc	r24, r20
    5b1e:	95 0b       	sbc	r25, r21
    5b20:	39 f4       	brne	.+14     	; 0x5b30 <__fp_cmp+0x38>
    5b22:	0a 26       	eor	r0, r26
    5b24:	61 f0       	breq	.+24     	; 0x5b3e <__fp_cmp+0x46>
    5b26:	23 2b       	or	r18, r19
    5b28:	24 2b       	or	r18, r20
    5b2a:	25 2b       	or	r18, r21
    5b2c:	21 f4       	brne	.+8      	; 0x5b36 <__fp_cmp+0x3e>
    5b2e:	08 95       	ret
    5b30:	0a 26       	eor	r0, r26
    5b32:	09 f4       	brne	.+2      	; 0x5b36 <__fp_cmp+0x3e>
    5b34:	a1 40       	sbci	r26, 0x01	; 1
    5b36:	a6 95       	lsr	r26
    5b38:	8f ef       	ldi	r24, 0xFF	; 255
    5b3a:	81 1d       	adc	r24, r1
    5b3c:	81 1d       	adc	r24, r1
    5b3e:	08 95       	ret

00005b40 <__fp_inf>:
    5b40:	97 f9       	bld	r25, 7
    5b42:	9f 67       	ori	r25, 0x7F	; 127
    5b44:	80 e8       	ldi	r24, 0x80	; 128
    5b46:	70 e0       	ldi	r23, 0x00	; 0
    5b48:	60 e0       	ldi	r22, 0x00	; 0
    5b4a:	08 95       	ret

00005b4c <__fp_nan>:
    5b4c:	9f ef       	ldi	r25, 0xFF	; 255
    5b4e:	80 ec       	ldi	r24, 0xC0	; 192
    5b50:	08 95       	ret

00005b52 <__fp_powser>:
    5b52:	df 93       	push	r29
    5b54:	cf 93       	push	r28
    5b56:	1f 93       	push	r17
    5b58:	0f 93       	push	r16
    5b5a:	ff 92       	push	r15
    5b5c:	ef 92       	push	r14
    5b5e:	df 92       	push	r13
    5b60:	7b 01       	movw	r14, r22
    5b62:	8c 01       	movw	r16, r24
    5b64:	68 94       	set
    5b66:	05 c0       	rjmp	.+10     	; 0x5b72 <__fp_powser+0x20>
    5b68:	da 2e       	mov	r13, r26
    5b6a:	ef 01       	movw	r28, r30
    5b6c:	f4 d0       	rcall	.+488    	; 0x5d56 <__mulsf3x>
    5b6e:	fe 01       	movw	r30, r28
    5b70:	e8 94       	clt
    5b72:	a5 91       	lpm	r26, Z+
    5b74:	25 91       	lpm	r18, Z+
    5b76:	35 91       	lpm	r19, Z+
    5b78:	45 91       	lpm	r20, Z+
    5b7a:	55 91       	lpm	r21, Z+
    5b7c:	ae f3       	brts	.-22     	; 0x5b68 <__fp_powser+0x16>
    5b7e:	ef 01       	movw	r28, r30
    5b80:	29 de       	rcall	.-942    	; 0x57d4 <__addsf3x>
    5b82:	fe 01       	movw	r30, r28
    5b84:	97 01       	movw	r18, r14
    5b86:	a8 01       	movw	r20, r16
    5b88:	da 94       	dec	r13
    5b8a:	79 f7       	brne	.-34     	; 0x5b6a <__fp_powser+0x18>
    5b8c:	df 90       	pop	r13
    5b8e:	ef 90       	pop	r14
    5b90:	ff 90       	pop	r15
    5b92:	0f 91       	pop	r16
    5b94:	1f 91       	pop	r17
    5b96:	cf 91       	pop	r28
    5b98:	df 91       	pop	r29
    5b9a:	08 95       	ret

00005b9c <__fp_pscA>:
    5b9c:	00 24       	eor	r0, r0
    5b9e:	0a 94       	dec	r0
    5ba0:	16 16       	cp	r1, r22
    5ba2:	17 06       	cpc	r1, r23
    5ba4:	18 06       	cpc	r1, r24
    5ba6:	09 06       	cpc	r0, r25
    5ba8:	08 95       	ret

00005baa <__fp_pscB>:
    5baa:	00 24       	eor	r0, r0
    5bac:	0a 94       	dec	r0
    5bae:	12 16       	cp	r1, r18
    5bb0:	13 06       	cpc	r1, r19
    5bb2:	14 06       	cpc	r1, r20
    5bb4:	05 06       	cpc	r0, r21
    5bb6:	08 95       	ret
    5bb8:	c9 cf       	rjmp	.-110    	; 0x5b4c <__fp_nan>

00005bba <__fp_rempio2>:
    5bba:	50 d0       	rcall	.+160    	; 0x5c5c <__fp_splitA>
    5bbc:	e8 f3       	brcs	.-6      	; 0x5bb8 <__fp_pscB+0xe>
    5bbe:	e8 94       	clt
    5bc0:	e0 e0       	ldi	r30, 0x00	; 0
    5bc2:	bb 27       	eor	r27, r27
    5bc4:	9f 57       	subi	r25, 0x7F	; 127
    5bc6:	f0 f0       	brcs	.+60     	; 0x5c04 <__fp_rempio2+0x4a>
    5bc8:	2a ed       	ldi	r18, 0xDA	; 218
    5bca:	3f e0       	ldi	r19, 0x0F	; 15
    5bcc:	49 ec       	ldi	r20, 0xC9	; 201
    5bce:	06 c0       	rjmp	.+12     	; 0x5bdc <__fp_rempio2+0x22>
    5bd0:	ee 0f       	add	r30, r30
    5bd2:	bb 0f       	add	r27, r27
    5bd4:	66 1f       	adc	r22, r22
    5bd6:	77 1f       	adc	r23, r23
    5bd8:	88 1f       	adc	r24, r24
    5bda:	28 f0       	brcs	.+10     	; 0x5be6 <__fp_rempio2+0x2c>
    5bdc:	b2 3a       	cpi	r27, 0xA2	; 162
    5bde:	62 07       	cpc	r22, r18
    5be0:	73 07       	cpc	r23, r19
    5be2:	84 07       	cpc	r24, r20
    5be4:	28 f0       	brcs	.+10     	; 0x5bf0 <__fp_rempio2+0x36>
    5be6:	b2 5a       	subi	r27, 0xA2	; 162
    5be8:	62 0b       	sbc	r22, r18
    5bea:	73 0b       	sbc	r23, r19
    5bec:	84 0b       	sbc	r24, r20
    5bee:	e3 95       	inc	r30
    5bf0:	9a 95       	dec	r25
    5bf2:	72 f7       	brpl	.-36     	; 0x5bd0 <__fp_rempio2+0x16>
    5bf4:	80 38       	cpi	r24, 0x80	; 128
    5bf6:	30 f4       	brcc	.+12     	; 0x5c04 <__fp_rempio2+0x4a>
    5bf8:	9a 95       	dec	r25
    5bfa:	bb 0f       	add	r27, r27
    5bfc:	66 1f       	adc	r22, r22
    5bfe:	77 1f       	adc	r23, r23
    5c00:	88 1f       	adc	r24, r24
    5c02:	d2 f7       	brpl	.-12     	; 0x5bf8 <__fp_rempio2+0x3e>
    5c04:	90 48       	sbci	r25, 0x80	; 128
    5c06:	29 c1       	rjmp	.+594    	; 0x5e5a <__fp_mpack_finite>

00005c08 <__fp_round>:
    5c08:	09 2e       	mov	r0, r25
    5c0a:	03 94       	inc	r0
    5c0c:	00 0c       	add	r0, r0
    5c0e:	11 f4       	brne	.+4      	; 0x5c14 <__fp_round+0xc>
    5c10:	88 23       	and	r24, r24
    5c12:	52 f0       	brmi	.+20     	; 0x5c28 <__fp_round+0x20>
    5c14:	bb 0f       	add	r27, r27
    5c16:	40 f4       	brcc	.+16     	; 0x5c28 <__fp_round+0x20>
    5c18:	bf 2b       	or	r27, r31
    5c1a:	11 f4       	brne	.+4      	; 0x5c20 <__fp_round+0x18>
    5c1c:	60 ff       	sbrs	r22, 0
    5c1e:	04 c0       	rjmp	.+8      	; 0x5c28 <__fp_round+0x20>
    5c20:	6f 5f       	subi	r22, 0xFF	; 255
    5c22:	7f 4f       	sbci	r23, 0xFF	; 255
    5c24:	8f 4f       	sbci	r24, 0xFF	; 255
    5c26:	9f 4f       	sbci	r25, 0xFF	; 255
    5c28:	08 95       	ret

00005c2a <__fp_sinus>:
    5c2a:	ef 93       	push	r30
    5c2c:	e0 ff       	sbrs	r30, 0
    5c2e:	06 c0       	rjmp	.+12     	; 0x5c3c <__fp_sinus+0x12>
    5c30:	a2 ea       	ldi	r26, 0xA2	; 162
    5c32:	2a ed       	ldi	r18, 0xDA	; 218
    5c34:	3f e0       	ldi	r19, 0x0F	; 15
    5c36:	49 ec       	ldi	r20, 0xC9	; 201
    5c38:	5f eb       	ldi	r21, 0xBF	; 191
    5c3a:	cc dd       	rcall	.-1128   	; 0x57d4 <__addsf3x>
    5c3c:	e5 df       	rcall	.-54     	; 0x5c08 <__fp_round>
    5c3e:	0f 90       	pop	r0
    5c40:	03 94       	inc	r0
    5c42:	01 fc       	sbrc	r0, 1
    5c44:	90 58       	subi	r25, 0x80	; 128
    5c46:	eb ee       	ldi	r30, 0xEB	; 235
    5c48:	f0 e0       	ldi	r31, 0x00	; 0
    5c4a:	13 c1       	rjmp	.+550    	; 0x5e72 <__fp_powsodd>

00005c4c <__fp_split3>:
    5c4c:	57 fd       	sbrc	r21, 7
    5c4e:	90 58       	subi	r25, 0x80	; 128
    5c50:	44 0f       	add	r20, r20
    5c52:	55 1f       	adc	r21, r21
    5c54:	59 f0       	breq	.+22     	; 0x5c6c <__fp_splitA+0x10>
    5c56:	5f 3f       	cpi	r21, 0xFF	; 255
    5c58:	71 f0       	breq	.+28     	; 0x5c76 <__fp_splitA+0x1a>
    5c5a:	47 95       	ror	r20

00005c5c <__fp_splitA>:
    5c5c:	88 0f       	add	r24, r24
    5c5e:	97 fb       	bst	r25, 7
    5c60:	99 1f       	adc	r25, r25
    5c62:	61 f0       	breq	.+24     	; 0x5c7c <__fp_splitA+0x20>
    5c64:	9f 3f       	cpi	r25, 0xFF	; 255
    5c66:	79 f0       	breq	.+30     	; 0x5c86 <__fp_splitA+0x2a>
    5c68:	87 95       	ror	r24
    5c6a:	08 95       	ret
    5c6c:	12 16       	cp	r1, r18
    5c6e:	13 06       	cpc	r1, r19
    5c70:	14 06       	cpc	r1, r20
    5c72:	55 1f       	adc	r21, r21
    5c74:	f2 cf       	rjmp	.-28     	; 0x5c5a <__fp_split3+0xe>
    5c76:	46 95       	lsr	r20
    5c78:	f1 df       	rcall	.-30     	; 0x5c5c <__fp_splitA>
    5c7a:	08 c0       	rjmp	.+16     	; 0x5c8c <__fp_splitA+0x30>
    5c7c:	16 16       	cp	r1, r22
    5c7e:	17 06       	cpc	r1, r23
    5c80:	18 06       	cpc	r1, r24
    5c82:	99 1f       	adc	r25, r25
    5c84:	f1 cf       	rjmp	.-30     	; 0x5c68 <__fp_splitA+0xc>
    5c86:	86 95       	lsr	r24
    5c88:	71 05       	cpc	r23, r1
    5c8a:	61 05       	cpc	r22, r1
    5c8c:	08 94       	sec
    5c8e:	08 95       	ret

00005c90 <__fp_zero>:
    5c90:	e8 94       	clt

00005c92 <__fp_szero>:
    5c92:	bb 27       	eor	r27, r27
    5c94:	66 27       	eor	r22, r22
    5c96:	77 27       	eor	r23, r23
    5c98:	cb 01       	movw	r24, r22
    5c9a:	97 f9       	bld	r25, 7
    5c9c:	08 95       	ret

00005c9e <__gesf2>:
    5c9e:	2c df       	rcall	.-424    	; 0x5af8 <__fp_cmp>
    5ca0:	08 f4       	brcc	.+2      	; 0x5ca4 <__gesf2+0x6>
    5ca2:	8f ef       	ldi	r24, 0xFF	; 255
    5ca4:	08 95       	ret

00005ca6 <inverse>:
    5ca6:	9b 01       	movw	r18, r22
    5ca8:	ac 01       	movw	r20, r24
    5caa:	60 e0       	ldi	r22, 0x00	; 0
    5cac:	70 e0       	ldi	r23, 0x00	; 0
    5cae:	80 e8       	ldi	r24, 0x80	; 128
    5cb0:	9f e3       	ldi	r25, 0x3F	; 63
    5cb2:	4c ce       	rjmp	.-872    	; 0x594c <__divsf3>
    5cb4:	0e f0       	brts	.+2      	; 0x5cb8 <inverse+0x12>
    5cb6:	cf c0       	rjmp	.+414    	; 0x5e56 <__fp_mpack>
    5cb8:	49 cf       	rjmp	.-366    	; 0x5b4c <__fp_nan>
    5cba:	68 94       	set
    5cbc:	41 cf       	rjmp	.-382    	; 0x5b40 <__fp_inf>

00005cbe <log>:
    5cbe:	ce df       	rcall	.-100    	; 0x5c5c <__fp_splitA>
    5cc0:	c8 f3       	brcs	.-14     	; 0x5cb4 <inverse+0xe>
    5cc2:	99 23       	and	r25, r25
    5cc4:	d1 f3       	breq	.-12     	; 0x5cba <inverse+0x14>
    5cc6:	c6 f3       	brts	.-16     	; 0x5cb8 <inverse+0x12>
    5cc8:	df 93       	push	r29
    5cca:	cf 93       	push	r28
    5ccc:	1f 93       	push	r17
    5cce:	0f 93       	push	r16
    5cd0:	ff 92       	push	r15
    5cd2:	c9 2f       	mov	r28, r25
    5cd4:	dd 27       	eor	r29, r29
    5cd6:	88 23       	and	r24, r24
    5cd8:	2a f0       	brmi	.+10     	; 0x5ce4 <log+0x26>
    5cda:	21 97       	sbiw	r28, 0x01	; 1
    5cdc:	66 0f       	add	r22, r22
    5cde:	77 1f       	adc	r23, r23
    5ce0:	88 1f       	adc	r24, r24
    5ce2:	da f7       	brpl	.-10     	; 0x5cda <log+0x1c>
    5ce4:	20 e0       	ldi	r18, 0x00	; 0
    5ce6:	30 e0       	ldi	r19, 0x00	; 0
    5ce8:	40 e8       	ldi	r20, 0x80	; 128
    5cea:	5f eb       	ldi	r21, 0xBF	; 191
    5cec:	9f e3       	ldi	r25, 0x3F	; 63
    5cee:	88 39       	cpi	r24, 0x98	; 152
    5cf0:	20 f0       	brcs	.+8      	; 0x5cfa <log+0x3c>
    5cf2:	80 3e       	cpi	r24, 0xE0	; 224
    5cf4:	30 f0       	brcs	.+12     	; 0x5d02 <log+0x44>
    5cf6:	21 96       	adiw	r28, 0x01	; 1
    5cf8:	8f 77       	andi	r24, 0x7F	; 127
    5cfa:	5b dd       	rcall	.-1354   	; 0x57b2 <__addsf3>
    5cfc:	e9 e0       	ldi	r30, 0x09	; 9
    5cfe:	f1 e0       	ldi	r31, 0x01	; 1
    5d00:	03 c0       	rjmp	.+6      	; 0x5d08 <log+0x4a>
    5d02:	57 dd       	rcall	.-1362   	; 0x57b2 <__addsf3>
    5d04:	e6 e3       	ldi	r30, 0x36	; 54
    5d06:	f1 e0       	ldi	r31, 0x01	; 1
    5d08:	24 df       	rcall	.-440    	; 0x5b52 <__fp_powser>
    5d0a:	8b 01       	movw	r16, r22
    5d0c:	be 01       	movw	r22, r28
    5d0e:	ec 01       	movw	r28, r24
    5d10:	fb 2e       	mov	r15, r27
    5d12:	6f 57       	subi	r22, 0x7F	; 127
    5d14:	71 09       	sbc	r23, r1
    5d16:	75 95       	asr	r23
    5d18:	77 1f       	adc	r23, r23
    5d1a:	88 0b       	sbc	r24, r24
    5d1c:	99 0b       	sbc	r25, r25
    5d1e:	b1 de       	rcall	.-670    	; 0x5a82 <__floatsisf>
    5d20:	28 e1       	ldi	r18, 0x18	; 24
    5d22:	32 e7       	ldi	r19, 0x72	; 114
    5d24:	41 e3       	ldi	r20, 0x31	; 49
    5d26:	5f e3       	ldi	r21, 0x3F	; 63
    5d28:	16 d0       	rcall	.+44     	; 0x5d56 <__mulsf3x>
    5d2a:	af 2d       	mov	r26, r15
    5d2c:	98 01       	movw	r18, r16
    5d2e:	ae 01       	movw	r20, r28
    5d30:	ff 90       	pop	r15
    5d32:	0f 91       	pop	r16
    5d34:	1f 91       	pop	r17
    5d36:	cf 91       	pop	r28
    5d38:	df 91       	pop	r29
    5d3a:	4c dd       	rcall	.-1384   	; 0x57d4 <__addsf3x>
    5d3c:	65 cf       	rjmp	.-310    	; 0x5c08 <__fp_round>

00005d3e <__mulsf3>:
    5d3e:	0b d0       	rcall	.+22     	; 0x5d56 <__mulsf3x>
    5d40:	63 cf       	rjmp	.-314    	; 0x5c08 <__fp_round>
    5d42:	2c df       	rcall	.-424    	; 0x5b9c <__fp_pscA>
    5d44:	28 f0       	brcs	.+10     	; 0x5d50 <__mulsf3+0x12>
    5d46:	31 df       	rcall	.-414    	; 0x5baa <__fp_pscB>
    5d48:	18 f0       	brcs	.+6      	; 0x5d50 <__mulsf3+0x12>
    5d4a:	95 23       	and	r25, r21
    5d4c:	09 f0       	breq	.+2      	; 0x5d50 <__mulsf3+0x12>
    5d4e:	f8 ce       	rjmp	.-528    	; 0x5b40 <__fp_inf>
    5d50:	fd ce       	rjmp	.-518    	; 0x5b4c <__fp_nan>
    5d52:	11 24       	eor	r1, r1
    5d54:	9e cf       	rjmp	.-196    	; 0x5c92 <__fp_szero>

00005d56 <__mulsf3x>:
    5d56:	7a df       	rcall	.-268    	; 0x5c4c <__fp_split3>
    5d58:	a0 f3       	brcs	.-24     	; 0x5d42 <__mulsf3+0x4>

00005d5a <__mulsf3_pse>:
    5d5a:	95 9f       	mul	r25, r21
    5d5c:	d1 f3       	breq	.-12     	; 0x5d52 <__mulsf3+0x14>
    5d5e:	95 0f       	add	r25, r21
    5d60:	50 e0       	ldi	r21, 0x00	; 0
    5d62:	55 1f       	adc	r21, r21
    5d64:	62 9f       	mul	r22, r18
    5d66:	f0 01       	movw	r30, r0
    5d68:	72 9f       	mul	r23, r18
    5d6a:	bb 27       	eor	r27, r27
    5d6c:	f0 0d       	add	r31, r0
    5d6e:	b1 1d       	adc	r27, r1
    5d70:	63 9f       	mul	r22, r19
    5d72:	aa 27       	eor	r26, r26
    5d74:	f0 0d       	add	r31, r0
    5d76:	b1 1d       	adc	r27, r1
    5d78:	aa 1f       	adc	r26, r26
    5d7a:	64 9f       	mul	r22, r20
    5d7c:	66 27       	eor	r22, r22
    5d7e:	b0 0d       	add	r27, r0
    5d80:	a1 1d       	adc	r26, r1
    5d82:	66 1f       	adc	r22, r22
    5d84:	82 9f       	mul	r24, r18
    5d86:	22 27       	eor	r18, r18
    5d88:	b0 0d       	add	r27, r0
    5d8a:	a1 1d       	adc	r26, r1
    5d8c:	62 1f       	adc	r22, r18
    5d8e:	73 9f       	mul	r23, r19
    5d90:	b0 0d       	add	r27, r0
    5d92:	a1 1d       	adc	r26, r1
    5d94:	62 1f       	adc	r22, r18
    5d96:	83 9f       	mul	r24, r19
    5d98:	a0 0d       	add	r26, r0
    5d9a:	61 1d       	adc	r22, r1
    5d9c:	22 1f       	adc	r18, r18
    5d9e:	74 9f       	mul	r23, r20
    5da0:	33 27       	eor	r19, r19
    5da2:	a0 0d       	add	r26, r0
    5da4:	61 1d       	adc	r22, r1
    5da6:	23 1f       	adc	r18, r19
    5da8:	84 9f       	mul	r24, r20
    5daa:	60 0d       	add	r22, r0
    5dac:	21 1d       	adc	r18, r1
    5dae:	82 2f       	mov	r24, r18
    5db0:	76 2f       	mov	r23, r22
    5db2:	6a 2f       	mov	r22, r26
    5db4:	11 24       	eor	r1, r1
    5db6:	9f 57       	subi	r25, 0x7F	; 127
    5db8:	50 40       	sbci	r21, 0x00	; 0
    5dba:	8a f0       	brmi	.+34     	; 0x5dde <__mulsf3_pse+0x84>
    5dbc:	e1 f0       	breq	.+56     	; 0x5df6 <__mulsf3_pse+0x9c>
    5dbe:	88 23       	and	r24, r24
    5dc0:	4a f0       	brmi	.+18     	; 0x5dd4 <__mulsf3_pse+0x7a>
    5dc2:	ee 0f       	add	r30, r30
    5dc4:	ff 1f       	adc	r31, r31
    5dc6:	bb 1f       	adc	r27, r27
    5dc8:	66 1f       	adc	r22, r22
    5dca:	77 1f       	adc	r23, r23
    5dcc:	88 1f       	adc	r24, r24
    5dce:	91 50       	subi	r25, 0x01	; 1
    5dd0:	50 40       	sbci	r21, 0x00	; 0
    5dd2:	a9 f7       	brne	.-22     	; 0x5dbe <__mulsf3_pse+0x64>
    5dd4:	9e 3f       	cpi	r25, 0xFE	; 254
    5dd6:	51 05       	cpc	r21, r1
    5dd8:	70 f0       	brcs	.+28     	; 0x5df6 <__mulsf3_pse+0x9c>
    5dda:	b2 ce       	rjmp	.-668    	; 0x5b40 <__fp_inf>
    5ddc:	5a cf       	rjmp	.-332    	; 0x5c92 <__fp_szero>
    5dde:	5f 3f       	cpi	r21, 0xFF	; 255
    5de0:	ec f3       	brlt	.-6      	; 0x5ddc <__mulsf3_pse+0x82>
    5de2:	98 3e       	cpi	r25, 0xE8	; 232
    5de4:	dc f3       	brlt	.-10     	; 0x5ddc <__mulsf3_pse+0x82>
    5de6:	86 95       	lsr	r24
    5de8:	77 95       	ror	r23
    5dea:	67 95       	ror	r22
    5dec:	b7 95       	ror	r27
    5dee:	f7 95       	ror	r31
    5df0:	e7 95       	ror	r30
    5df2:	9f 5f       	subi	r25, 0xFF	; 255
    5df4:	c1 f7       	brne	.-16     	; 0x5de6 <__mulsf3_pse+0x8c>
    5df6:	fe 2b       	or	r31, r30
    5df8:	88 0f       	add	r24, r24
    5dfa:	91 1d       	adc	r25, r1
    5dfc:	96 95       	lsr	r25
    5dfe:	87 95       	ror	r24
    5e00:	97 f9       	bld	r25, 7
    5e02:	08 95       	ret

00005e04 <sin>:
    5e04:	9f 93       	push	r25
    5e06:	d9 de       	rcall	.-590    	; 0x5bba <__fp_rempio2>
    5e08:	0f 90       	pop	r0
    5e0a:	07 fc       	sbrc	r0, 7
    5e0c:	ee 5f       	subi	r30, 0xFE	; 254
    5e0e:	0d cf       	rjmp	.-486    	; 0x5c2a <__fp_sinus>

00005e10 <square>:
    5e10:	9b 01       	movw	r18, r22
    5e12:	ac 01       	movw	r20, r24
    5e14:	94 cf       	rjmp	.-216    	; 0x5d3e <__mulsf3>

00005e16 <tan>:
    5e16:	df 93       	push	r29
    5e18:	d9 2f       	mov	r29, r25
    5e1a:	cf de       	rcall	.-610    	; 0x5bba <__fp_rempio2>
    5e1c:	e6 95       	lsr	r30
    5e1e:	d7 95       	ror	r29
    5e20:	2a ed       	ldi	r18, 0xDA	; 218
    5e22:	3f e0       	ldi	r19, 0x0F	; 15
    5e24:	49 e4       	ldi	r20, 0x49	; 73
    5e26:	5f e3       	ldi	r21, 0x3F	; 63
    5e28:	b3 3a       	cpi	r27, 0xA3	; 163
    5e2a:	62 07       	cpc	r22, r18
    5e2c:	73 07       	cpc	r23, r19
    5e2e:	84 07       	cpc	r24, r20
    5e30:	95 07       	cpc	r25, r21
    5e32:	d7 95       	ror	r29
    5e34:	2a f0       	brmi	.+10     	; 0x5e40 <tan+0x2a>
    5e36:	a2 ea       	ldi	r26, 0xA2	; 162
    5e38:	49 ec       	ldi	r20, 0xC9	; 201
    5e3a:	90 68       	ori	r25, 0x80	; 128
    5e3c:	cb dc       	rcall	.-1642   	; 0x57d4 <__addsf3x>
    5e3e:	e4 de       	rcall	.-568    	; 0x5c08 <__fp_round>
    5e40:	e3 e6       	ldi	r30, 0x63	; 99
    5e42:	f1 e0       	ldi	r31, 0x01	; 1
    5e44:	16 d0       	rcall	.+44     	; 0x5e72 <__fp_powsodd>
    5e46:	dd 0f       	add	r29, r29
    5e48:	0b f0       	brvs	.+2      	; 0x5e4c <tan+0x36>
    5e4a:	2d df       	rcall	.-422    	; 0x5ca6 <inverse>
    5e4c:	dd 0f       	add	r29, r29
    5e4e:	0b f4       	brvc	.+2      	; 0x5e52 <tan+0x3c>
    5e50:	90 58       	subi	r25, 0x80	; 128
    5e52:	df 91       	pop	r29
    5e54:	08 95       	ret

00005e56 <__fp_mpack>:
    5e56:	9f 3f       	cpi	r25, 0xFF	; 255
    5e58:	31 f0       	breq	.+12     	; 0x5e66 <__fp_mpack_finite+0xc>

00005e5a <__fp_mpack_finite>:
    5e5a:	91 50       	subi	r25, 0x01	; 1
    5e5c:	20 f4       	brcc	.+8      	; 0x5e66 <__fp_mpack_finite+0xc>
    5e5e:	87 95       	ror	r24
    5e60:	77 95       	ror	r23
    5e62:	67 95       	ror	r22
    5e64:	b7 95       	ror	r27
    5e66:	88 0f       	add	r24, r24
    5e68:	91 1d       	adc	r25, r1
    5e6a:	96 95       	lsr	r25
    5e6c:	87 95       	ror	r24
    5e6e:	97 f9       	bld	r25, 7
    5e70:	08 95       	ret

00005e72 <__fp_powsodd>:
    5e72:	9f 93       	push	r25
    5e74:	8f 93       	push	r24
    5e76:	7f 93       	push	r23
    5e78:	6f 93       	push	r22
    5e7a:	ff 93       	push	r31
    5e7c:	ef 93       	push	r30
    5e7e:	9b 01       	movw	r18, r22
    5e80:	ac 01       	movw	r20, r24
    5e82:	5d df       	rcall	.-326    	; 0x5d3e <__mulsf3>
    5e84:	ef 91       	pop	r30
    5e86:	ff 91       	pop	r31
    5e88:	64 de       	rcall	.-824    	; 0x5b52 <__fp_powser>
    5e8a:	2f 91       	pop	r18
    5e8c:	3f 91       	pop	r19
    5e8e:	4f 91       	pop	r20
    5e90:	5f 91       	pop	r21
    5e92:	55 cf       	rjmp	.-342    	; 0x5d3e <__mulsf3>

00005e94 <vfprintf>:
    5e94:	2f 92       	push	r2
    5e96:	3f 92       	push	r3
    5e98:	4f 92       	push	r4
    5e9a:	5f 92       	push	r5
    5e9c:	6f 92       	push	r6
    5e9e:	7f 92       	push	r7
    5ea0:	8f 92       	push	r8
    5ea2:	9f 92       	push	r9
    5ea4:	af 92       	push	r10
    5ea6:	bf 92       	push	r11
    5ea8:	cf 92       	push	r12
    5eaa:	df 92       	push	r13
    5eac:	ef 92       	push	r14
    5eae:	ff 92       	push	r15
    5eb0:	0f 93       	push	r16
    5eb2:	1f 93       	push	r17
    5eb4:	cf 93       	push	r28
    5eb6:	df 93       	push	r29
    5eb8:	cd b7       	in	r28, 0x3d	; 61
    5eba:	de b7       	in	r29, 0x3e	; 62
    5ebc:	63 97       	sbiw	r28, 0x13	; 19
    5ebe:	0f b6       	in	r0, 0x3f	; 63
    5ec0:	f8 94       	cli
    5ec2:	de bf       	out	0x3e, r29	; 62
    5ec4:	0f be       	out	0x3f, r0	; 63
    5ec6:	cd bf       	out	0x3d, r28	; 61
    5ec8:	7c 01       	movw	r14, r24
    5eca:	1b 01       	movw	r2, r22
    5ecc:	6a 01       	movw	r12, r20
    5ece:	fc 01       	movw	r30, r24
    5ed0:	17 82       	std	Z+7, r1	; 0x07
    5ed2:	16 82       	std	Z+6, r1	; 0x06
    5ed4:	83 81       	ldd	r24, Z+3	; 0x03
    5ed6:	81 ff       	sbrs	r24, 1
    5ed8:	49 c3       	rjmp	.+1682   	; 0x656c <vfprintf+0x6d8>
    5eda:	be 01       	movw	r22, r28
    5edc:	6f 5f       	subi	r22, 0xFF	; 255
    5ede:	7f 4f       	sbci	r23, 0xFF	; 255
    5ee0:	4b 01       	movw	r8, r22
    5ee2:	f7 01       	movw	r30, r14
    5ee4:	93 81       	ldd	r25, Z+3	; 0x03
    5ee6:	f1 01       	movw	r30, r2
    5ee8:	93 fd       	sbrc	r25, 3
    5eea:	85 91       	lpm	r24, Z+
    5eec:	93 ff       	sbrs	r25, 3
    5eee:	81 91       	ld	r24, Z+
    5ef0:	1f 01       	movw	r2, r30
    5ef2:	88 23       	and	r24, r24
    5ef4:	09 f4       	brne	.+2      	; 0x5ef8 <vfprintf+0x64>
    5ef6:	36 c3       	rjmp	.+1644   	; 0x6564 <vfprintf+0x6d0>
    5ef8:	85 32       	cpi	r24, 0x25	; 37
    5efa:	39 f4       	brne	.+14     	; 0x5f0a <vfprintf+0x76>
    5efc:	93 fd       	sbrc	r25, 3
    5efe:	85 91       	lpm	r24, Z+
    5f00:	93 ff       	sbrs	r25, 3
    5f02:	81 91       	ld	r24, Z+
    5f04:	1f 01       	movw	r2, r30
    5f06:	85 32       	cpi	r24, 0x25	; 37
    5f08:	31 f4       	brne	.+12     	; 0x5f16 <vfprintf+0x82>
    5f0a:	b7 01       	movw	r22, r14
    5f0c:	90 e0       	ldi	r25, 0x00	; 0
    5f0e:	77 d4       	rcall	.+2286   	; 0x67fe <fputc>
    5f10:	56 01       	movw	r10, r12
    5f12:	65 01       	movw	r12, r10
    5f14:	e6 cf       	rjmp	.-52     	; 0x5ee2 <vfprintf+0x4e>
    5f16:	10 e0       	ldi	r17, 0x00	; 0
    5f18:	51 2c       	mov	r5, r1
    5f1a:	20 e0       	ldi	r18, 0x00	; 0
    5f1c:	20 32       	cpi	r18, 0x20	; 32
    5f1e:	a0 f4       	brcc	.+40     	; 0x5f48 <vfprintf+0xb4>
    5f20:	8b 32       	cpi	r24, 0x2B	; 43
    5f22:	69 f0       	breq	.+26     	; 0x5f3e <vfprintf+0xaa>
    5f24:	30 f4       	brcc	.+12     	; 0x5f32 <vfprintf+0x9e>
    5f26:	80 32       	cpi	r24, 0x20	; 32
    5f28:	59 f0       	breq	.+22     	; 0x5f40 <vfprintf+0xac>
    5f2a:	83 32       	cpi	r24, 0x23	; 35
    5f2c:	69 f4       	brne	.+26     	; 0x5f48 <vfprintf+0xb4>
    5f2e:	20 61       	ori	r18, 0x10	; 16
    5f30:	2c c0       	rjmp	.+88     	; 0x5f8a <vfprintf+0xf6>
    5f32:	8d 32       	cpi	r24, 0x2D	; 45
    5f34:	39 f0       	breq	.+14     	; 0x5f44 <vfprintf+0xb0>
    5f36:	80 33       	cpi	r24, 0x30	; 48
    5f38:	39 f4       	brne	.+14     	; 0x5f48 <vfprintf+0xb4>
    5f3a:	21 60       	ori	r18, 0x01	; 1
    5f3c:	26 c0       	rjmp	.+76     	; 0x5f8a <vfprintf+0xf6>
    5f3e:	22 60       	ori	r18, 0x02	; 2
    5f40:	24 60       	ori	r18, 0x04	; 4
    5f42:	23 c0       	rjmp	.+70     	; 0x5f8a <vfprintf+0xf6>
    5f44:	28 60       	ori	r18, 0x08	; 8
    5f46:	21 c0       	rjmp	.+66     	; 0x5f8a <vfprintf+0xf6>
    5f48:	27 fd       	sbrc	r18, 7
    5f4a:	27 c0       	rjmp	.+78     	; 0x5f9a <vfprintf+0x106>
    5f4c:	30 ed       	ldi	r19, 0xD0	; 208
    5f4e:	38 0f       	add	r19, r24
    5f50:	3a 30       	cpi	r19, 0x0A	; 10
    5f52:	78 f4       	brcc	.+30     	; 0x5f72 <vfprintf+0xde>
    5f54:	26 ff       	sbrs	r18, 6
    5f56:	06 c0       	rjmp	.+12     	; 0x5f64 <vfprintf+0xd0>
    5f58:	fa e0       	ldi	r31, 0x0A	; 10
    5f5a:	1f 9f       	mul	r17, r31
    5f5c:	30 0d       	add	r19, r0
    5f5e:	11 24       	eor	r1, r1
    5f60:	13 2f       	mov	r17, r19
    5f62:	13 c0       	rjmp	.+38     	; 0x5f8a <vfprintf+0xf6>
    5f64:	6a e0       	ldi	r22, 0x0A	; 10
    5f66:	56 9e       	mul	r5, r22
    5f68:	30 0d       	add	r19, r0
    5f6a:	11 24       	eor	r1, r1
    5f6c:	53 2e       	mov	r5, r19
    5f6e:	20 62       	ori	r18, 0x20	; 32
    5f70:	0c c0       	rjmp	.+24     	; 0x5f8a <vfprintf+0xf6>
    5f72:	8e 32       	cpi	r24, 0x2E	; 46
    5f74:	21 f4       	brne	.+8      	; 0x5f7e <vfprintf+0xea>
    5f76:	26 fd       	sbrc	r18, 6
    5f78:	f5 c2       	rjmp	.+1514   	; 0x6564 <vfprintf+0x6d0>
    5f7a:	20 64       	ori	r18, 0x40	; 64
    5f7c:	06 c0       	rjmp	.+12     	; 0x5f8a <vfprintf+0xf6>
    5f7e:	8c 36       	cpi	r24, 0x6C	; 108
    5f80:	11 f4       	brne	.+4      	; 0x5f86 <vfprintf+0xf2>
    5f82:	20 68       	ori	r18, 0x80	; 128
    5f84:	02 c0       	rjmp	.+4      	; 0x5f8a <vfprintf+0xf6>
    5f86:	88 36       	cpi	r24, 0x68	; 104
    5f88:	41 f4       	brne	.+16     	; 0x5f9a <vfprintf+0x106>
    5f8a:	f1 01       	movw	r30, r2
    5f8c:	93 fd       	sbrc	r25, 3
    5f8e:	85 91       	lpm	r24, Z+
    5f90:	93 ff       	sbrs	r25, 3
    5f92:	81 91       	ld	r24, Z+
    5f94:	1f 01       	movw	r2, r30
    5f96:	81 11       	cpse	r24, r1
    5f98:	c1 cf       	rjmp	.-126    	; 0x5f1c <vfprintf+0x88>
    5f9a:	9b eb       	ldi	r25, 0xBB	; 187
    5f9c:	98 0f       	add	r25, r24
    5f9e:	93 30       	cpi	r25, 0x03	; 3
    5fa0:	18 f4       	brcc	.+6      	; 0x5fa8 <vfprintf+0x114>
    5fa2:	20 61       	ori	r18, 0x10	; 16
    5fa4:	80 5e       	subi	r24, 0xE0	; 224
    5fa6:	06 c0       	rjmp	.+12     	; 0x5fb4 <vfprintf+0x120>
    5fa8:	9b e9       	ldi	r25, 0x9B	; 155
    5faa:	98 0f       	add	r25, r24
    5fac:	93 30       	cpi	r25, 0x03	; 3
    5fae:	08 f0       	brcs	.+2      	; 0x5fb2 <vfprintf+0x11e>
    5fb0:	9a c1       	rjmp	.+820    	; 0x62e6 <vfprintf+0x452>
    5fb2:	2f 7e       	andi	r18, 0xEF	; 239
    5fb4:	26 ff       	sbrs	r18, 6
    5fb6:	16 e0       	ldi	r17, 0x06	; 6
    5fb8:	2f 73       	andi	r18, 0x3F	; 63
    5fba:	72 2e       	mov	r7, r18
    5fbc:	85 36       	cpi	r24, 0x65	; 101
    5fbe:	21 f4       	brne	.+8      	; 0x5fc8 <vfprintf+0x134>
    5fc0:	f2 2f       	mov	r31, r18
    5fc2:	f0 64       	ori	r31, 0x40	; 64
    5fc4:	7f 2e       	mov	r7, r31
    5fc6:	08 c0       	rjmp	.+16     	; 0x5fd8 <vfprintf+0x144>
    5fc8:	86 36       	cpi	r24, 0x66	; 102
    5fca:	21 f4       	brne	.+8      	; 0x5fd4 <vfprintf+0x140>
    5fcc:	62 2f       	mov	r22, r18
    5fce:	60 68       	ori	r22, 0x80	; 128
    5fd0:	76 2e       	mov	r7, r22
    5fd2:	02 c0       	rjmp	.+4      	; 0x5fd8 <vfprintf+0x144>
    5fd4:	11 11       	cpse	r17, r1
    5fd6:	11 50       	subi	r17, 0x01	; 1
    5fd8:	77 fe       	sbrs	r7, 7
    5fda:	07 c0       	rjmp	.+14     	; 0x5fea <vfprintf+0x156>
    5fdc:	1c 33       	cpi	r17, 0x3C	; 60
    5fde:	48 f4       	brcc	.+18     	; 0x5ff2 <vfprintf+0x15e>
    5fe0:	44 24       	eor	r4, r4
    5fe2:	43 94       	inc	r4
    5fe4:	41 0e       	add	r4, r17
    5fe6:	27 e0       	ldi	r18, 0x07	; 7
    5fe8:	0b c0       	rjmp	.+22     	; 0x6000 <vfprintf+0x16c>
    5fea:	18 30       	cpi	r17, 0x08	; 8
    5fec:	30 f4       	brcc	.+12     	; 0x5ffa <vfprintf+0x166>
    5fee:	21 2f       	mov	r18, r17
    5ff0:	06 c0       	rjmp	.+12     	; 0x5ffe <vfprintf+0x16a>
    5ff2:	27 e0       	ldi	r18, 0x07	; 7
    5ff4:	4c e3       	ldi	r20, 0x3C	; 60
    5ff6:	44 2e       	mov	r4, r20
    5ff8:	03 c0       	rjmp	.+6      	; 0x6000 <vfprintf+0x16c>
    5ffa:	27 e0       	ldi	r18, 0x07	; 7
    5ffc:	17 e0       	ldi	r17, 0x07	; 7
    5ffe:	41 2c       	mov	r4, r1
    6000:	56 01       	movw	r10, r12
    6002:	74 e0       	ldi	r23, 0x04	; 4
    6004:	a7 0e       	add	r10, r23
    6006:	b1 1c       	adc	r11, r1
    6008:	f6 01       	movw	r30, r12
    600a:	60 81       	ld	r22, Z
    600c:	71 81       	ldd	r23, Z+1	; 0x01
    600e:	82 81       	ldd	r24, Z+2	; 0x02
    6010:	93 81       	ldd	r25, Z+3	; 0x03
    6012:	04 2d       	mov	r16, r4
    6014:	a4 01       	movw	r20, r8
    6016:	05 d3       	rcall	.+1546   	; 0x6622 <__ftoa_engine>
    6018:	6c 01       	movw	r12, r24
    601a:	09 81       	ldd	r16, Y+1	; 0x01
    601c:	00 ff       	sbrs	r16, 0
    601e:	02 c0       	rjmp	.+4      	; 0x6024 <vfprintf+0x190>
    6020:	03 ff       	sbrs	r16, 3
    6022:	06 c0       	rjmp	.+12     	; 0x6030 <vfprintf+0x19c>
    6024:	71 fc       	sbrc	r7, 1
    6026:	07 c0       	rjmp	.+14     	; 0x6036 <vfprintf+0x1a2>
    6028:	72 fc       	sbrc	r7, 2
    602a:	08 c0       	rjmp	.+16     	; 0x603c <vfprintf+0x1a8>
    602c:	61 2c       	mov	r6, r1
    602e:	08 c0       	rjmp	.+16     	; 0x6040 <vfprintf+0x1ac>
    6030:	3d e2       	ldi	r19, 0x2D	; 45
    6032:	63 2e       	mov	r6, r19
    6034:	05 c0       	rjmp	.+10     	; 0x6040 <vfprintf+0x1ac>
    6036:	2b e2       	ldi	r18, 0x2B	; 43
    6038:	62 2e       	mov	r6, r18
    603a:	02 c0       	rjmp	.+4      	; 0x6040 <vfprintf+0x1ac>
    603c:	90 e2       	ldi	r25, 0x20	; 32
    603e:	69 2e       	mov	r6, r25
    6040:	80 2f       	mov	r24, r16
    6042:	8c 70       	andi	r24, 0x0C	; 12
    6044:	81 f1       	breq	.+96     	; 0x60a6 <vfprintf+0x212>
    6046:	66 20       	and	r6, r6
    6048:	11 f0       	breq	.+4      	; 0x604e <vfprintf+0x1ba>
    604a:	84 e0       	ldi	r24, 0x04	; 4
    604c:	01 c0       	rjmp	.+2      	; 0x6050 <vfprintf+0x1bc>
    604e:	83 e0       	ldi	r24, 0x03	; 3
    6050:	85 15       	cp	r24, r5
    6052:	10 f0       	brcs	.+4      	; 0x6058 <vfprintf+0x1c4>
    6054:	51 2c       	mov	r5, r1
    6056:	0a c0       	rjmp	.+20     	; 0x606c <vfprintf+0x1d8>
    6058:	58 1a       	sub	r5, r24
    605a:	73 fc       	sbrc	r7, 3
    605c:	07 c0       	rjmp	.+14     	; 0x606c <vfprintf+0x1d8>
    605e:	b7 01       	movw	r22, r14
    6060:	80 e2       	ldi	r24, 0x20	; 32
    6062:	90 e0       	ldi	r25, 0x00	; 0
    6064:	cc d3       	rcall	.+1944   	; 0x67fe <fputc>
    6066:	5a 94       	dec	r5
    6068:	d1 f7       	brne	.-12     	; 0x605e <vfprintf+0x1ca>
    606a:	f4 cf       	rjmp	.-24     	; 0x6054 <vfprintf+0x1c0>
    606c:	66 20       	and	r6, r6
    606e:	21 f0       	breq	.+8      	; 0x6078 <vfprintf+0x1e4>
    6070:	b7 01       	movw	r22, r14
    6072:	86 2d       	mov	r24, r6
    6074:	90 e0       	ldi	r25, 0x00	; 0
    6076:	c3 d3       	rcall	.+1926   	; 0x67fe <fputc>
    6078:	03 fd       	sbrc	r16, 3
    607a:	03 c0       	rjmp	.+6      	; 0x6082 <vfprintf+0x1ee>
    607c:	00 ea       	ldi	r16, 0xA0	; 160
    607e:	14 e0       	ldi	r17, 0x04	; 4
    6080:	02 c0       	rjmp	.+4      	; 0x6086 <vfprintf+0x1f2>
    6082:	0c e9       	ldi	r16, 0x9C	; 156
    6084:	14 e0       	ldi	r17, 0x04	; 4
    6086:	f7 2d       	mov	r31, r7
    6088:	f0 71       	andi	r31, 0x10	; 16
    608a:	7f 2e       	mov	r7, r31
    608c:	f8 01       	movw	r30, r16
    608e:	84 91       	lpm	r24, Z
    6090:	88 23       	and	r24, r24
    6092:	09 f4       	brne	.+2      	; 0x6096 <vfprintf+0x202>
    6094:	5e c2       	rjmp	.+1212   	; 0x6552 <vfprintf+0x6be>
    6096:	71 10       	cpse	r7, r1
    6098:	80 52       	subi	r24, 0x20	; 32
    609a:	b7 01       	movw	r22, r14
    609c:	90 e0       	ldi	r25, 0x00	; 0
    609e:	af d3       	rcall	.+1886   	; 0x67fe <fputc>
    60a0:	0f 5f       	subi	r16, 0xFF	; 255
    60a2:	1f 4f       	sbci	r17, 0xFF	; 255
    60a4:	f3 cf       	rjmp	.-26     	; 0x608c <vfprintf+0x1f8>
    60a6:	77 fe       	sbrs	r7, 7
    60a8:	0f c0       	rjmp	.+30     	; 0x60c8 <vfprintf+0x234>
    60aa:	4c 0c       	add	r4, r12
    60ac:	04 ff       	sbrs	r16, 4
    60ae:	04 c0       	rjmp	.+8      	; 0x60b8 <vfprintf+0x224>
    60b0:	8a 81       	ldd	r24, Y+2	; 0x02
    60b2:	81 33       	cpi	r24, 0x31	; 49
    60b4:	09 f4       	brne	.+2      	; 0x60b8 <vfprintf+0x224>
    60b6:	4a 94       	dec	r4
    60b8:	14 14       	cp	r1, r4
    60ba:	74 f5       	brge	.+92     	; 0x6118 <vfprintf+0x284>
    60bc:	f8 e0       	ldi	r31, 0x08	; 8
    60be:	f4 15       	cp	r31, r4
    60c0:	78 f5       	brcc	.+94     	; 0x6120 <vfprintf+0x28c>
    60c2:	88 e0       	ldi	r24, 0x08	; 8
    60c4:	48 2e       	mov	r4, r24
    60c6:	2c c0       	rjmp	.+88     	; 0x6120 <vfprintf+0x28c>
    60c8:	76 fc       	sbrc	r7, 6
    60ca:	2a c0       	rjmp	.+84     	; 0x6120 <vfprintf+0x28c>
    60cc:	81 2f       	mov	r24, r17
    60ce:	90 e0       	ldi	r25, 0x00	; 0
    60d0:	8c 15       	cp	r24, r12
    60d2:	9d 05       	cpc	r25, r13
    60d4:	9c f0       	brlt	.+38     	; 0x60fc <vfprintf+0x268>
    60d6:	6c ef       	ldi	r22, 0xFC	; 252
    60d8:	c6 16       	cp	r12, r22
    60da:	6f ef       	ldi	r22, 0xFF	; 255
    60dc:	d6 06       	cpc	r13, r22
    60de:	74 f0       	brlt	.+28     	; 0x60fc <vfprintf+0x268>
    60e0:	77 2d       	mov	r23, r7
    60e2:	70 68       	ori	r23, 0x80	; 128
    60e4:	77 2e       	mov	r7, r23
    60e6:	0a c0       	rjmp	.+20     	; 0x60fc <vfprintf+0x268>
    60e8:	e2 e0       	ldi	r30, 0x02	; 2
    60ea:	f0 e0       	ldi	r31, 0x00	; 0
    60ec:	ec 0f       	add	r30, r28
    60ee:	fd 1f       	adc	r31, r29
    60f0:	e1 0f       	add	r30, r17
    60f2:	f1 1d       	adc	r31, r1
    60f4:	80 81       	ld	r24, Z
    60f6:	80 33       	cpi	r24, 0x30	; 48
    60f8:	19 f4       	brne	.+6      	; 0x6100 <vfprintf+0x26c>
    60fa:	11 50       	subi	r17, 0x01	; 1
    60fc:	11 11       	cpse	r17, r1
    60fe:	f4 cf       	rjmp	.-24     	; 0x60e8 <vfprintf+0x254>
    6100:	77 fe       	sbrs	r7, 7
    6102:	0e c0       	rjmp	.+28     	; 0x6120 <vfprintf+0x28c>
    6104:	44 24       	eor	r4, r4
    6106:	43 94       	inc	r4
    6108:	41 0e       	add	r4, r17
    610a:	81 2f       	mov	r24, r17
    610c:	90 e0       	ldi	r25, 0x00	; 0
    610e:	c8 16       	cp	r12, r24
    6110:	d9 06       	cpc	r13, r25
    6112:	2c f4       	brge	.+10     	; 0x611e <vfprintf+0x28a>
    6114:	1c 19       	sub	r17, r12
    6116:	04 c0       	rjmp	.+8      	; 0x6120 <vfprintf+0x28c>
    6118:	44 24       	eor	r4, r4
    611a:	43 94       	inc	r4
    611c:	01 c0       	rjmp	.+2      	; 0x6120 <vfprintf+0x28c>
    611e:	10 e0       	ldi	r17, 0x00	; 0
    6120:	77 fe       	sbrs	r7, 7
    6122:	07 c0       	rjmp	.+14     	; 0x6132 <vfprintf+0x29e>
    6124:	1c 14       	cp	r1, r12
    6126:	1d 04       	cpc	r1, r13
    6128:	3c f4       	brge	.+14     	; 0x6138 <vfprintf+0x2a4>
    612a:	96 01       	movw	r18, r12
    612c:	2f 5f       	subi	r18, 0xFF	; 255
    612e:	3f 4f       	sbci	r19, 0xFF	; 255
    6130:	05 c0       	rjmp	.+10     	; 0x613c <vfprintf+0x2a8>
    6132:	25 e0       	ldi	r18, 0x05	; 5
    6134:	30 e0       	ldi	r19, 0x00	; 0
    6136:	02 c0       	rjmp	.+4      	; 0x613c <vfprintf+0x2a8>
    6138:	21 e0       	ldi	r18, 0x01	; 1
    613a:	30 e0       	ldi	r19, 0x00	; 0
    613c:	66 20       	and	r6, r6
    613e:	11 f0       	breq	.+4      	; 0x6144 <vfprintf+0x2b0>
    6140:	2f 5f       	subi	r18, 0xFF	; 255
    6142:	3f 4f       	sbci	r19, 0xFF	; 255
    6144:	11 23       	and	r17, r17
    6146:	31 f0       	breq	.+12     	; 0x6154 <vfprintf+0x2c0>
    6148:	41 2f       	mov	r20, r17
    614a:	50 e0       	ldi	r21, 0x00	; 0
    614c:	4f 5f       	subi	r20, 0xFF	; 255
    614e:	5f 4f       	sbci	r21, 0xFF	; 255
    6150:	24 0f       	add	r18, r20
    6152:	35 1f       	adc	r19, r21
    6154:	45 2d       	mov	r20, r5
    6156:	50 e0       	ldi	r21, 0x00	; 0
    6158:	24 17       	cp	r18, r20
    615a:	35 07       	cpc	r19, r21
    615c:	14 f4       	brge	.+4      	; 0x6162 <vfprintf+0x2ce>
    615e:	52 1a       	sub	r5, r18
    6160:	01 c0       	rjmp	.+2      	; 0x6164 <vfprintf+0x2d0>
    6162:	51 2c       	mov	r5, r1
    6164:	87 2d       	mov	r24, r7
    6166:	89 70       	andi	r24, 0x09	; 9
    6168:	41 f4       	brne	.+16     	; 0x617a <vfprintf+0x2e6>
    616a:	55 20       	and	r5, r5
    616c:	31 f0       	breq	.+12     	; 0x617a <vfprintf+0x2e6>
    616e:	b7 01       	movw	r22, r14
    6170:	80 e2       	ldi	r24, 0x20	; 32
    6172:	90 e0       	ldi	r25, 0x00	; 0
    6174:	44 d3       	rcall	.+1672   	; 0x67fe <fputc>
    6176:	5a 94       	dec	r5
    6178:	f8 cf       	rjmp	.-16     	; 0x616a <vfprintf+0x2d6>
    617a:	66 20       	and	r6, r6
    617c:	21 f0       	breq	.+8      	; 0x6186 <vfprintf+0x2f2>
    617e:	b7 01       	movw	r22, r14
    6180:	86 2d       	mov	r24, r6
    6182:	90 e0       	ldi	r25, 0x00	; 0
    6184:	3c d3       	rcall	.+1656   	; 0x67fe <fputc>
    6186:	73 fc       	sbrc	r7, 3
    6188:	08 c0       	rjmp	.+16     	; 0x619a <vfprintf+0x306>
    618a:	55 20       	and	r5, r5
    618c:	31 f0       	breq	.+12     	; 0x619a <vfprintf+0x306>
    618e:	b7 01       	movw	r22, r14
    6190:	80 e3       	ldi	r24, 0x30	; 48
    6192:	90 e0       	ldi	r25, 0x00	; 0
    6194:	34 d3       	rcall	.+1640   	; 0x67fe <fputc>
    6196:	5a 94       	dec	r5
    6198:	f8 cf       	rjmp	.-16     	; 0x618a <vfprintf+0x2f6>
    619a:	77 fe       	sbrs	r7, 7
    619c:	5d c0       	rjmp	.+186    	; 0x6258 <vfprintf+0x3c4>
    619e:	9c 2d       	mov	r25, r12
    61a0:	8d 2d       	mov	r24, r13
    61a2:	d7 fe       	sbrs	r13, 7
    61a4:	02 c0       	rjmp	.+4      	; 0x61aa <vfprintf+0x316>
    61a6:	90 e0       	ldi	r25, 0x00	; 0
    61a8:	80 e0       	ldi	r24, 0x00	; 0
    61aa:	69 2e       	mov	r6, r25
    61ac:	78 2e       	mov	r7, r24
    61ae:	40 e0       	ldi	r20, 0x00	; 0
    61b0:	50 e0       	ldi	r21, 0x00	; 0
    61b2:	c6 01       	movw	r24, r12
    61b4:	84 19       	sub	r24, r4
    61b6:	91 09       	sbc	r25, r1
    61b8:	9d 87       	std	Y+13, r25	; 0x0d
    61ba:	8c 87       	std	Y+12, r24	; 0x0c
    61bc:	96 01       	movw	r18, r12
    61be:	26 19       	sub	r18, r6
    61c0:	37 09       	sbc	r19, r7
    61c2:	28 0d       	add	r18, r8
    61c4:	39 1d       	adc	r19, r9
    61c6:	81 2f       	mov	r24, r17
    61c8:	90 e0       	ldi	r25, 0x00	; 0
    61ca:	ee 27       	eor	r30, r30
    61cc:	ff 27       	eor	r31, r31
    61ce:	e8 1b       	sub	r30, r24
    61d0:	f9 0b       	sbc	r31, r25
    61d2:	ff 87       	std	Y+15, r31	; 0x0f
    61d4:	ee 87       	std	Y+14, r30	; 0x0e
    61d6:	ff ef       	ldi	r31, 0xFF	; 255
    61d8:	6f 16       	cp	r6, r31
    61da:	7f 06       	cpc	r7, r31
    61dc:	61 f4       	brne	.+24     	; 0x61f6 <vfprintf+0x362>
    61de:	b7 01       	movw	r22, r14
    61e0:	8e e2       	ldi	r24, 0x2E	; 46
    61e2:	90 e0       	ldi	r25, 0x00	; 0
    61e4:	2b 8b       	std	Y+19, r18	; 0x13
    61e6:	3a 8b       	std	Y+18, r19	; 0x12
    61e8:	48 8b       	std	Y+16, r20	; 0x10
    61ea:	59 8b       	std	Y+17, r21	; 0x11
    61ec:	08 d3       	rcall	.+1552   	; 0x67fe <fputc>
    61ee:	59 89       	ldd	r21, Y+17	; 0x11
    61f0:	48 89       	ldd	r20, Y+16	; 0x10
    61f2:	3a 89       	ldd	r19, Y+18	; 0x12
    61f4:	2b 89       	ldd	r18, Y+19	; 0x13
    61f6:	c6 14       	cp	r12, r6
    61f8:	d7 04       	cpc	r13, r7
    61fa:	54 f0       	brlt	.+20     	; 0x6210 <vfprintf+0x37c>
    61fc:	6c 85       	ldd	r22, Y+12	; 0x0c
    61fe:	7d 85       	ldd	r23, Y+13	; 0x0d
    6200:	66 15       	cp	r22, r6
    6202:	77 05       	cpc	r23, r7
    6204:	2c f4       	brge	.+10     	; 0x6210 <vfprintf+0x37c>
    6206:	f9 01       	movw	r30, r18
    6208:	e4 0f       	add	r30, r20
    620a:	f5 1f       	adc	r31, r21
    620c:	81 81       	ldd	r24, Z+1	; 0x01
    620e:	01 c0       	rjmp	.+2      	; 0x6212 <vfprintf+0x37e>
    6210:	80 e3       	ldi	r24, 0x30	; 48
    6212:	71 e0       	ldi	r23, 0x01	; 1
    6214:	67 1a       	sub	r6, r23
    6216:	71 08       	sbc	r7, r1
    6218:	4f 5f       	subi	r20, 0xFF	; 255
    621a:	5f 4f       	sbci	r21, 0xFF	; 255
    621c:	ee 85       	ldd	r30, Y+14	; 0x0e
    621e:	ff 85       	ldd	r31, Y+15	; 0x0f
    6220:	6e 16       	cp	r6, r30
    6222:	7f 06       	cpc	r7, r31
    6224:	64 f0       	brlt	.+24     	; 0x623e <vfprintf+0x3aa>
    6226:	b7 01       	movw	r22, r14
    6228:	90 e0       	ldi	r25, 0x00	; 0
    622a:	2b 8b       	std	Y+19, r18	; 0x13
    622c:	3a 8b       	std	Y+18, r19	; 0x12
    622e:	48 8b       	std	Y+16, r20	; 0x10
    6230:	59 8b       	std	Y+17, r21	; 0x11
    6232:	e5 d2       	rcall	.+1482   	; 0x67fe <fputc>
    6234:	2b 89       	ldd	r18, Y+19	; 0x13
    6236:	3a 89       	ldd	r19, Y+18	; 0x12
    6238:	48 89       	ldd	r20, Y+16	; 0x10
    623a:	59 89       	ldd	r21, Y+17	; 0x11
    623c:	cc cf       	rjmp	.-104    	; 0x61d6 <vfprintf+0x342>
    623e:	6c 14       	cp	r6, r12
    6240:	7d 04       	cpc	r7, r13
    6242:	39 f4       	brne	.+14     	; 0x6252 <vfprintf+0x3be>
    6244:	9a 81       	ldd	r25, Y+2	; 0x02
    6246:	96 33       	cpi	r25, 0x36	; 54
    6248:	18 f4       	brcc	.+6      	; 0x6250 <vfprintf+0x3bc>
    624a:	95 33       	cpi	r25, 0x35	; 53
    624c:	11 f4       	brne	.+4      	; 0x6252 <vfprintf+0x3be>
    624e:	04 ff       	sbrs	r16, 4
    6250:	81 e3       	ldi	r24, 0x31	; 49
    6252:	b7 01       	movw	r22, r14
    6254:	90 e0       	ldi	r25, 0x00	; 0
    6256:	45 c0       	rjmp	.+138    	; 0x62e2 <vfprintf+0x44e>
    6258:	8a 81       	ldd	r24, Y+2	; 0x02
    625a:	81 33       	cpi	r24, 0x31	; 49
    625c:	09 f0       	breq	.+2      	; 0x6260 <vfprintf+0x3cc>
    625e:	0f 7e       	andi	r16, 0xEF	; 239
    6260:	b7 01       	movw	r22, r14
    6262:	90 e0       	ldi	r25, 0x00	; 0
    6264:	cc d2       	rcall	.+1432   	; 0x67fe <fputc>
    6266:	11 11       	cpse	r17, r1
    6268:	05 c0       	rjmp	.+10     	; 0x6274 <vfprintf+0x3e0>
    626a:	74 fe       	sbrs	r7, 4
    626c:	16 c0       	rjmp	.+44     	; 0x629a <vfprintf+0x406>
    626e:	85 e4       	ldi	r24, 0x45	; 69
    6270:	90 e0       	ldi	r25, 0x00	; 0
    6272:	15 c0       	rjmp	.+42     	; 0x629e <vfprintf+0x40a>
    6274:	b7 01       	movw	r22, r14
    6276:	8e e2       	ldi	r24, 0x2E	; 46
    6278:	90 e0       	ldi	r25, 0x00	; 0
    627a:	c1 d2       	rcall	.+1410   	; 0x67fe <fputc>
    627c:	82 e0       	ldi	r24, 0x02	; 2
    627e:	66 24       	eor	r6, r6
    6280:	63 94       	inc	r6
    6282:	68 0e       	add	r6, r24
    6284:	f4 01       	movw	r30, r8
    6286:	e8 0f       	add	r30, r24
    6288:	f1 1d       	adc	r31, r1
    628a:	80 81       	ld	r24, Z
    628c:	b7 01       	movw	r22, r14
    628e:	90 e0       	ldi	r25, 0x00	; 0
    6290:	b6 d2       	rcall	.+1388   	; 0x67fe <fputc>
    6292:	11 50       	subi	r17, 0x01	; 1
    6294:	51 f3       	breq	.-44     	; 0x626a <vfprintf+0x3d6>
    6296:	86 2d       	mov	r24, r6
    6298:	f2 cf       	rjmp	.-28     	; 0x627e <vfprintf+0x3ea>
    629a:	85 e6       	ldi	r24, 0x65	; 101
    629c:	90 e0       	ldi	r25, 0x00	; 0
    629e:	b7 01       	movw	r22, r14
    62a0:	ae d2       	rcall	.+1372   	; 0x67fe <fputc>
    62a2:	d7 fc       	sbrc	r13, 7
    62a4:	05 c0       	rjmp	.+10     	; 0x62b0 <vfprintf+0x41c>
    62a6:	c1 14       	cp	r12, r1
    62a8:	d1 04       	cpc	r13, r1
    62aa:	39 f4       	brne	.+14     	; 0x62ba <vfprintf+0x426>
    62ac:	04 ff       	sbrs	r16, 4
    62ae:	05 c0       	rjmp	.+10     	; 0x62ba <vfprintf+0x426>
    62b0:	d1 94       	neg	r13
    62b2:	c1 94       	neg	r12
    62b4:	d1 08       	sbc	r13, r1
    62b6:	8d e2       	ldi	r24, 0x2D	; 45
    62b8:	01 c0       	rjmp	.+2      	; 0x62bc <vfprintf+0x428>
    62ba:	8b e2       	ldi	r24, 0x2B	; 43
    62bc:	b7 01       	movw	r22, r14
    62be:	90 e0       	ldi	r25, 0x00	; 0
    62c0:	9e d2       	rcall	.+1340   	; 0x67fe <fputc>
    62c2:	80 e3       	ldi	r24, 0x30	; 48
    62c4:	6a e0       	ldi	r22, 0x0A	; 10
    62c6:	c6 16       	cp	r12, r22
    62c8:	d1 04       	cpc	r13, r1
    62ca:	2c f0       	brlt	.+10     	; 0x62d6 <vfprintf+0x442>
    62cc:	8f 5f       	subi	r24, 0xFF	; 255
    62ce:	fa e0       	ldi	r31, 0x0A	; 10
    62d0:	cf 1a       	sub	r12, r31
    62d2:	d1 08       	sbc	r13, r1
    62d4:	f7 cf       	rjmp	.-18     	; 0x62c4 <vfprintf+0x430>
    62d6:	b7 01       	movw	r22, r14
    62d8:	90 e0       	ldi	r25, 0x00	; 0
    62da:	91 d2       	rcall	.+1314   	; 0x67fe <fputc>
    62dc:	b7 01       	movw	r22, r14
    62de:	c6 01       	movw	r24, r12
    62e0:	c0 96       	adiw	r24, 0x30	; 48
    62e2:	8d d2       	rcall	.+1306   	; 0x67fe <fputc>
    62e4:	36 c1       	rjmp	.+620    	; 0x6552 <vfprintf+0x6be>
    62e6:	83 36       	cpi	r24, 0x63	; 99
    62e8:	31 f0       	breq	.+12     	; 0x62f6 <vfprintf+0x462>
    62ea:	83 37       	cpi	r24, 0x73	; 115
    62ec:	79 f0       	breq	.+30     	; 0x630c <vfprintf+0x478>
    62ee:	83 35       	cpi	r24, 0x53	; 83
    62f0:	09 f0       	breq	.+2      	; 0x62f4 <vfprintf+0x460>
    62f2:	54 c0       	rjmp	.+168    	; 0x639c <vfprintf+0x508>
    62f4:	20 c0       	rjmp	.+64     	; 0x6336 <vfprintf+0x4a2>
    62f6:	56 01       	movw	r10, r12
    62f8:	72 e0       	ldi	r23, 0x02	; 2
    62fa:	a7 0e       	add	r10, r23
    62fc:	b1 1c       	adc	r11, r1
    62fe:	f6 01       	movw	r30, r12
    6300:	80 81       	ld	r24, Z
    6302:	89 83       	std	Y+1, r24	; 0x01
    6304:	01 e0       	ldi	r16, 0x01	; 1
    6306:	10 e0       	ldi	r17, 0x00	; 0
    6308:	64 01       	movw	r12, r8
    630a:	13 c0       	rjmp	.+38     	; 0x6332 <vfprintf+0x49e>
    630c:	56 01       	movw	r10, r12
    630e:	f2 e0       	ldi	r31, 0x02	; 2
    6310:	af 0e       	add	r10, r31
    6312:	b1 1c       	adc	r11, r1
    6314:	f6 01       	movw	r30, r12
    6316:	c0 80       	ld	r12, Z
    6318:	d1 80       	ldd	r13, Z+1	; 0x01
    631a:	26 ff       	sbrs	r18, 6
    631c:	03 c0       	rjmp	.+6      	; 0x6324 <vfprintf+0x490>
    631e:	61 2f       	mov	r22, r17
    6320:	70 e0       	ldi	r23, 0x00	; 0
    6322:	02 c0       	rjmp	.+4      	; 0x6328 <vfprintf+0x494>
    6324:	6f ef       	ldi	r22, 0xFF	; 255
    6326:	7f ef       	ldi	r23, 0xFF	; 255
    6328:	c6 01       	movw	r24, r12
    632a:	2b 8b       	std	Y+19, r18	; 0x13
    632c:	5d d2       	rcall	.+1210   	; 0x67e8 <strnlen>
    632e:	8c 01       	movw	r16, r24
    6330:	2b 89       	ldd	r18, Y+19	; 0x13
    6332:	2f 77       	andi	r18, 0x7F	; 127
    6334:	14 c0       	rjmp	.+40     	; 0x635e <vfprintf+0x4ca>
    6336:	56 01       	movw	r10, r12
    6338:	f2 e0       	ldi	r31, 0x02	; 2
    633a:	af 0e       	add	r10, r31
    633c:	b1 1c       	adc	r11, r1
    633e:	f6 01       	movw	r30, r12
    6340:	c0 80       	ld	r12, Z
    6342:	d1 80       	ldd	r13, Z+1	; 0x01
    6344:	26 ff       	sbrs	r18, 6
    6346:	03 c0       	rjmp	.+6      	; 0x634e <vfprintf+0x4ba>
    6348:	61 2f       	mov	r22, r17
    634a:	70 e0       	ldi	r23, 0x00	; 0
    634c:	02 c0       	rjmp	.+4      	; 0x6352 <vfprintf+0x4be>
    634e:	6f ef       	ldi	r22, 0xFF	; 255
    6350:	7f ef       	ldi	r23, 0xFF	; 255
    6352:	c6 01       	movw	r24, r12
    6354:	2b 8b       	std	Y+19, r18	; 0x13
    6356:	3d d2       	rcall	.+1146   	; 0x67d2 <strnlen_P>
    6358:	8c 01       	movw	r16, r24
    635a:	2b 89       	ldd	r18, Y+19	; 0x13
    635c:	20 68       	ori	r18, 0x80	; 128
    635e:	72 2e       	mov	r7, r18
    6360:	23 fd       	sbrc	r18, 3
    6362:	18 c0       	rjmp	.+48     	; 0x6394 <vfprintf+0x500>
    6364:	85 2d       	mov	r24, r5
    6366:	90 e0       	ldi	r25, 0x00	; 0
    6368:	08 17       	cp	r16, r24
    636a:	19 07       	cpc	r17, r25
    636c:	98 f4       	brcc	.+38     	; 0x6394 <vfprintf+0x500>
    636e:	b7 01       	movw	r22, r14
    6370:	80 e2       	ldi	r24, 0x20	; 32
    6372:	90 e0       	ldi	r25, 0x00	; 0
    6374:	44 d2       	rcall	.+1160   	; 0x67fe <fputc>
    6376:	5a 94       	dec	r5
    6378:	f5 cf       	rjmp	.-22     	; 0x6364 <vfprintf+0x4d0>
    637a:	f6 01       	movw	r30, r12
    637c:	77 fc       	sbrc	r7, 7
    637e:	85 91       	lpm	r24, Z+
    6380:	77 fe       	sbrs	r7, 7
    6382:	81 91       	ld	r24, Z+
    6384:	6f 01       	movw	r12, r30
    6386:	b7 01       	movw	r22, r14
    6388:	90 e0       	ldi	r25, 0x00	; 0
    638a:	39 d2       	rcall	.+1138   	; 0x67fe <fputc>
    638c:	51 10       	cpse	r5, r1
    638e:	5a 94       	dec	r5
    6390:	01 50       	subi	r16, 0x01	; 1
    6392:	11 09       	sbc	r17, r1
    6394:	01 15       	cp	r16, r1
    6396:	11 05       	cpc	r17, r1
    6398:	81 f7       	brne	.-32     	; 0x637a <vfprintf+0x4e6>
    639a:	db c0       	rjmp	.+438    	; 0x6552 <vfprintf+0x6be>
    639c:	84 36       	cpi	r24, 0x64	; 100
    639e:	11 f0       	breq	.+4      	; 0x63a4 <vfprintf+0x510>
    63a0:	89 36       	cpi	r24, 0x69	; 105
    63a2:	49 f5       	brne	.+82     	; 0x63f6 <vfprintf+0x562>
    63a4:	56 01       	movw	r10, r12
    63a6:	27 ff       	sbrs	r18, 7
    63a8:	09 c0       	rjmp	.+18     	; 0x63bc <vfprintf+0x528>
    63aa:	f4 e0       	ldi	r31, 0x04	; 4
    63ac:	af 0e       	add	r10, r31
    63ae:	b1 1c       	adc	r11, r1
    63b0:	f6 01       	movw	r30, r12
    63b2:	60 81       	ld	r22, Z
    63b4:	71 81       	ldd	r23, Z+1	; 0x01
    63b6:	82 81       	ldd	r24, Z+2	; 0x02
    63b8:	93 81       	ldd	r25, Z+3	; 0x03
    63ba:	0a c0       	rjmp	.+20     	; 0x63d0 <vfprintf+0x53c>
    63bc:	f2 e0       	ldi	r31, 0x02	; 2
    63be:	af 0e       	add	r10, r31
    63c0:	b1 1c       	adc	r11, r1
    63c2:	f6 01       	movw	r30, r12
    63c4:	60 81       	ld	r22, Z
    63c6:	71 81       	ldd	r23, Z+1	; 0x01
    63c8:	88 27       	eor	r24, r24
    63ca:	77 fd       	sbrc	r23, 7
    63cc:	80 95       	com	r24
    63ce:	98 2f       	mov	r25, r24
    63d0:	02 2f       	mov	r16, r18
    63d2:	0f 76       	andi	r16, 0x6F	; 111
    63d4:	97 ff       	sbrs	r25, 7
    63d6:	08 c0       	rjmp	.+16     	; 0x63e8 <vfprintf+0x554>
    63d8:	90 95       	com	r25
    63da:	80 95       	com	r24
    63dc:	70 95       	com	r23
    63de:	61 95       	neg	r22
    63e0:	7f 4f       	sbci	r23, 0xFF	; 255
    63e2:	8f 4f       	sbci	r24, 0xFF	; 255
    63e4:	9f 4f       	sbci	r25, 0xFF	; 255
    63e6:	00 68       	ori	r16, 0x80	; 128
    63e8:	2a e0       	ldi	r18, 0x0A	; 10
    63ea:	30 e0       	ldi	r19, 0x00	; 0
    63ec:	a4 01       	movw	r20, r8
    63ee:	67 d2       	rcall	.+1230   	; 0x68be <__ultoa_invert>
    63f0:	c8 2e       	mov	r12, r24
    63f2:	c8 18       	sub	r12, r8
    63f4:	3d c0       	rjmp	.+122    	; 0x6470 <vfprintf+0x5dc>
    63f6:	02 2f       	mov	r16, r18
    63f8:	85 37       	cpi	r24, 0x75	; 117
    63fa:	21 f4       	brne	.+8      	; 0x6404 <vfprintf+0x570>
    63fc:	0f 7e       	andi	r16, 0xEF	; 239
    63fe:	2a e0       	ldi	r18, 0x0A	; 10
    6400:	30 e0       	ldi	r19, 0x00	; 0
    6402:	1d c0       	rjmp	.+58     	; 0x643e <vfprintf+0x5aa>
    6404:	09 7f       	andi	r16, 0xF9	; 249
    6406:	8f 36       	cpi	r24, 0x6F	; 111
    6408:	91 f0       	breq	.+36     	; 0x642e <vfprintf+0x59a>
    640a:	18 f4       	brcc	.+6      	; 0x6412 <vfprintf+0x57e>
    640c:	88 35       	cpi	r24, 0x58	; 88
    640e:	59 f0       	breq	.+22     	; 0x6426 <vfprintf+0x592>
    6410:	a9 c0       	rjmp	.+338    	; 0x6564 <vfprintf+0x6d0>
    6412:	80 37       	cpi	r24, 0x70	; 112
    6414:	19 f0       	breq	.+6      	; 0x641c <vfprintf+0x588>
    6416:	88 37       	cpi	r24, 0x78	; 120
    6418:	11 f0       	breq	.+4      	; 0x641e <vfprintf+0x58a>
    641a:	a4 c0       	rjmp	.+328    	; 0x6564 <vfprintf+0x6d0>
    641c:	00 61       	ori	r16, 0x10	; 16
    641e:	04 ff       	sbrs	r16, 4
    6420:	09 c0       	rjmp	.+18     	; 0x6434 <vfprintf+0x5a0>
    6422:	04 60       	ori	r16, 0x04	; 4
    6424:	07 c0       	rjmp	.+14     	; 0x6434 <vfprintf+0x5a0>
    6426:	24 ff       	sbrs	r18, 4
    6428:	08 c0       	rjmp	.+16     	; 0x643a <vfprintf+0x5a6>
    642a:	06 60       	ori	r16, 0x06	; 6
    642c:	06 c0       	rjmp	.+12     	; 0x643a <vfprintf+0x5a6>
    642e:	28 e0       	ldi	r18, 0x08	; 8
    6430:	30 e0       	ldi	r19, 0x00	; 0
    6432:	05 c0       	rjmp	.+10     	; 0x643e <vfprintf+0x5aa>
    6434:	20 e1       	ldi	r18, 0x10	; 16
    6436:	30 e0       	ldi	r19, 0x00	; 0
    6438:	02 c0       	rjmp	.+4      	; 0x643e <vfprintf+0x5aa>
    643a:	20 e1       	ldi	r18, 0x10	; 16
    643c:	32 e0       	ldi	r19, 0x02	; 2
    643e:	56 01       	movw	r10, r12
    6440:	07 ff       	sbrs	r16, 7
    6442:	09 c0       	rjmp	.+18     	; 0x6456 <vfprintf+0x5c2>
    6444:	f4 e0       	ldi	r31, 0x04	; 4
    6446:	af 0e       	add	r10, r31
    6448:	b1 1c       	adc	r11, r1
    644a:	f6 01       	movw	r30, r12
    644c:	60 81       	ld	r22, Z
    644e:	71 81       	ldd	r23, Z+1	; 0x01
    6450:	82 81       	ldd	r24, Z+2	; 0x02
    6452:	93 81       	ldd	r25, Z+3	; 0x03
    6454:	08 c0       	rjmp	.+16     	; 0x6466 <vfprintf+0x5d2>
    6456:	f2 e0       	ldi	r31, 0x02	; 2
    6458:	af 0e       	add	r10, r31
    645a:	b1 1c       	adc	r11, r1
    645c:	f6 01       	movw	r30, r12
    645e:	60 81       	ld	r22, Z
    6460:	71 81       	ldd	r23, Z+1	; 0x01
    6462:	80 e0       	ldi	r24, 0x00	; 0
    6464:	90 e0       	ldi	r25, 0x00	; 0
    6466:	a4 01       	movw	r20, r8
    6468:	2a d2       	rcall	.+1108   	; 0x68be <__ultoa_invert>
    646a:	c8 2e       	mov	r12, r24
    646c:	c8 18       	sub	r12, r8
    646e:	0f 77       	andi	r16, 0x7F	; 127
    6470:	06 ff       	sbrs	r16, 6
    6472:	0b c0       	rjmp	.+22     	; 0x648a <vfprintf+0x5f6>
    6474:	20 2f       	mov	r18, r16
    6476:	2e 7f       	andi	r18, 0xFE	; 254
    6478:	c1 16       	cp	r12, r17
    647a:	50 f4       	brcc	.+20     	; 0x6490 <vfprintf+0x5fc>
    647c:	04 ff       	sbrs	r16, 4
    647e:	0a c0       	rjmp	.+20     	; 0x6494 <vfprintf+0x600>
    6480:	02 fd       	sbrc	r16, 2
    6482:	08 c0       	rjmp	.+16     	; 0x6494 <vfprintf+0x600>
    6484:	20 2f       	mov	r18, r16
    6486:	2e 7e       	andi	r18, 0xEE	; 238
    6488:	05 c0       	rjmp	.+10     	; 0x6494 <vfprintf+0x600>
    648a:	dc 2c       	mov	r13, r12
    648c:	20 2f       	mov	r18, r16
    648e:	03 c0       	rjmp	.+6      	; 0x6496 <vfprintf+0x602>
    6490:	dc 2c       	mov	r13, r12
    6492:	01 c0       	rjmp	.+2      	; 0x6496 <vfprintf+0x602>
    6494:	d1 2e       	mov	r13, r17
    6496:	24 ff       	sbrs	r18, 4
    6498:	0d c0       	rjmp	.+26     	; 0x64b4 <vfprintf+0x620>
    649a:	fe 01       	movw	r30, r28
    649c:	ec 0d       	add	r30, r12
    649e:	f1 1d       	adc	r31, r1
    64a0:	80 81       	ld	r24, Z
    64a2:	80 33       	cpi	r24, 0x30	; 48
    64a4:	11 f4       	brne	.+4      	; 0x64aa <vfprintf+0x616>
    64a6:	29 7e       	andi	r18, 0xE9	; 233
    64a8:	09 c0       	rjmp	.+18     	; 0x64bc <vfprintf+0x628>
    64aa:	22 ff       	sbrs	r18, 2
    64ac:	06 c0       	rjmp	.+12     	; 0x64ba <vfprintf+0x626>
    64ae:	d3 94       	inc	r13
    64b0:	d3 94       	inc	r13
    64b2:	04 c0       	rjmp	.+8      	; 0x64bc <vfprintf+0x628>
    64b4:	82 2f       	mov	r24, r18
    64b6:	86 78       	andi	r24, 0x86	; 134
    64b8:	09 f0       	breq	.+2      	; 0x64bc <vfprintf+0x628>
    64ba:	d3 94       	inc	r13
    64bc:	23 fd       	sbrc	r18, 3
    64be:	12 c0       	rjmp	.+36     	; 0x64e4 <vfprintf+0x650>
    64c0:	20 ff       	sbrs	r18, 0
    64c2:	06 c0       	rjmp	.+12     	; 0x64d0 <vfprintf+0x63c>
    64c4:	1c 2d       	mov	r17, r12
    64c6:	d5 14       	cp	r13, r5
    64c8:	18 f4       	brcc	.+6      	; 0x64d0 <vfprintf+0x63c>
    64ca:	15 0d       	add	r17, r5
    64cc:	1d 19       	sub	r17, r13
    64ce:	d5 2c       	mov	r13, r5
    64d0:	d5 14       	cp	r13, r5
    64d2:	60 f4       	brcc	.+24     	; 0x64ec <vfprintf+0x658>
    64d4:	b7 01       	movw	r22, r14
    64d6:	80 e2       	ldi	r24, 0x20	; 32
    64d8:	90 e0       	ldi	r25, 0x00	; 0
    64da:	2b 8b       	std	Y+19, r18	; 0x13
    64dc:	90 d1       	rcall	.+800    	; 0x67fe <fputc>
    64de:	d3 94       	inc	r13
    64e0:	2b 89       	ldd	r18, Y+19	; 0x13
    64e2:	f6 cf       	rjmp	.-20     	; 0x64d0 <vfprintf+0x63c>
    64e4:	d5 14       	cp	r13, r5
    64e6:	10 f4       	brcc	.+4      	; 0x64ec <vfprintf+0x658>
    64e8:	5d 18       	sub	r5, r13
    64ea:	01 c0       	rjmp	.+2      	; 0x64ee <vfprintf+0x65a>
    64ec:	51 2c       	mov	r5, r1
    64ee:	24 ff       	sbrs	r18, 4
    64f0:	11 c0       	rjmp	.+34     	; 0x6514 <vfprintf+0x680>
    64f2:	b7 01       	movw	r22, r14
    64f4:	80 e3       	ldi	r24, 0x30	; 48
    64f6:	90 e0       	ldi	r25, 0x00	; 0
    64f8:	2b 8b       	std	Y+19, r18	; 0x13
    64fa:	81 d1       	rcall	.+770    	; 0x67fe <fputc>
    64fc:	2b 89       	ldd	r18, Y+19	; 0x13
    64fe:	22 ff       	sbrs	r18, 2
    6500:	16 c0       	rjmp	.+44     	; 0x652e <vfprintf+0x69a>
    6502:	21 ff       	sbrs	r18, 1
    6504:	03 c0       	rjmp	.+6      	; 0x650c <vfprintf+0x678>
    6506:	88 e5       	ldi	r24, 0x58	; 88
    6508:	90 e0       	ldi	r25, 0x00	; 0
    650a:	02 c0       	rjmp	.+4      	; 0x6510 <vfprintf+0x67c>
    650c:	88 e7       	ldi	r24, 0x78	; 120
    650e:	90 e0       	ldi	r25, 0x00	; 0
    6510:	b7 01       	movw	r22, r14
    6512:	0c c0       	rjmp	.+24     	; 0x652c <vfprintf+0x698>
    6514:	82 2f       	mov	r24, r18
    6516:	86 78       	andi	r24, 0x86	; 134
    6518:	51 f0       	breq	.+20     	; 0x652e <vfprintf+0x69a>
    651a:	21 fd       	sbrc	r18, 1
    651c:	02 c0       	rjmp	.+4      	; 0x6522 <vfprintf+0x68e>
    651e:	80 e2       	ldi	r24, 0x20	; 32
    6520:	01 c0       	rjmp	.+2      	; 0x6524 <vfprintf+0x690>
    6522:	8b e2       	ldi	r24, 0x2B	; 43
    6524:	27 fd       	sbrc	r18, 7
    6526:	8d e2       	ldi	r24, 0x2D	; 45
    6528:	b7 01       	movw	r22, r14
    652a:	90 e0       	ldi	r25, 0x00	; 0
    652c:	68 d1       	rcall	.+720    	; 0x67fe <fputc>
    652e:	c1 16       	cp	r12, r17
    6530:	30 f4       	brcc	.+12     	; 0x653e <vfprintf+0x6aa>
    6532:	b7 01       	movw	r22, r14
    6534:	80 e3       	ldi	r24, 0x30	; 48
    6536:	90 e0       	ldi	r25, 0x00	; 0
    6538:	62 d1       	rcall	.+708    	; 0x67fe <fputc>
    653a:	11 50       	subi	r17, 0x01	; 1
    653c:	f8 cf       	rjmp	.-16     	; 0x652e <vfprintf+0x69a>
    653e:	ca 94       	dec	r12
    6540:	f4 01       	movw	r30, r8
    6542:	ec 0d       	add	r30, r12
    6544:	f1 1d       	adc	r31, r1
    6546:	80 81       	ld	r24, Z
    6548:	b7 01       	movw	r22, r14
    654a:	90 e0       	ldi	r25, 0x00	; 0
    654c:	58 d1       	rcall	.+688    	; 0x67fe <fputc>
    654e:	c1 10       	cpse	r12, r1
    6550:	f6 cf       	rjmp	.-20     	; 0x653e <vfprintf+0x6aa>
    6552:	55 20       	and	r5, r5
    6554:	09 f4       	brne	.+2      	; 0x6558 <vfprintf+0x6c4>
    6556:	dd cc       	rjmp	.-1606   	; 0x5f12 <vfprintf+0x7e>
    6558:	b7 01       	movw	r22, r14
    655a:	80 e2       	ldi	r24, 0x20	; 32
    655c:	90 e0       	ldi	r25, 0x00	; 0
    655e:	4f d1       	rcall	.+670    	; 0x67fe <fputc>
    6560:	5a 94       	dec	r5
    6562:	f7 cf       	rjmp	.-18     	; 0x6552 <vfprintf+0x6be>
    6564:	f7 01       	movw	r30, r14
    6566:	86 81       	ldd	r24, Z+6	; 0x06
    6568:	97 81       	ldd	r25, Z+7	; 0x07
    656a:	02 c0       	rjmp	.+4      	; 0x6570 <vfprintf+0x6dc>
    656c:	8f ef       	ldi	r24, 0xFF	; 255
    656e:	9f ef       	ldi	r25, 0xFF	; 255
    6570:	63 96       	adiw	r28, 0x13	; 19
    6572:	0f b6       	in	r0, 0x3f	; 63
    6574:	f8 94       	cli
    6576:	de bf       	out	0x3e, r29	; 62
    6578:	0f be       	out	0x3f, r0	; 63
    657a:	cd bf       	out	0x3d, r28	; 61
    657c:	df 91       	pop	r29
    657e:	cf 91       	pop	r28
    6580:	1f 91       	pop	r17
    6582:	0f 91       	pop	r16
    6584:	ff 90       	pop	r15
    6586:	ef 90       	pop	r14
    6588:	df 90       	pop	r13
    658a:	cf 90       	pop	r12
    658c:	bf 90       	pop	r11
    658e:	af 90       	pop	r10
    6590:	9f 90       	pop	r9
    6592:	8f 90       	pop	r8
    6594:	7f 90       	pop	r7
    6596:	6f 90       	pop	r6
    6598:	5f 90       	pop	r5
    659a:	4f 90       	pop	r4
    659c:	3f 90       	pop	r3
    659e:	2f 90       	pop	r2
    65a0:	08 95       	ret

000065a2 <__udivmodhi4>:
    65a2:	aa 1b       	sub	r26, r26
    65a4:	bb 1b       	sub	r27, r27
    65a6:	51 e1       	ldi	r21, 0x11	; 17
    65a8:	07 c0       	rjmp	.+14     	; 0x65b8 <__udivmodhi4_ep>

000065aa <__udivmodhi4_loop>:
    65aa:	aa 1f       	adc	r26, r26
    65ac:	bb 1f       	adc	r27, r27
    65ae:	a6 17       	cp	r26, r22
    65b0:	b7 07       	cpc	r27, r23
    65b2:	10 f0       	brcs	.+4      	; 0x65b8 <__udivmodhi4_ep>
    65b4:	a6 1b       	sub	r26, r22
    65b6:	b7 0b       	sbc	r27, r23

000065b8 <__udivmodhi4_ep>:
    65b8:	88 1f       	adc	r24, r24
    65ba:	99 1f       	adc	r25, r25
    65bc:	5a 95       	dec	r21
    65be:	a9 f7       	brne	.-22     	; 0x65aa <__udivmodhi4_loop>
    65c0:	80 95       	com	r24
    65c2:	90 95       	com	r25
    65c4:	bc 01       	movw	r22, r24
    65c6:	cd 01       	movw	r24, r26
    65c8:	08 95       	ret

000065ca <__divmodhi4>:
    65ca:	97 fb       	bst	r25, 7
    65cc:	07 2e       	mov	r0, r23
    65ce:	16 f4       	brtc	.+4      	; 0x65d4 <__divmodhi4+0xa>
    65d0:	00 94       	com	r0
    65d2:	06 d0       	rcall	.+12     	; 0x65e0 <__divmodhi4_neg1>
    65d4:	77 fd       	sbrc	r23, 7
    65d6:	08 d0       	rcall	.+16     	; 0x65e8 <__divmodhi4_neg2>
    65d8:	e4 df       	rcall	.-56     	; 0x65a2 <__udivmodhi4>
    65da:	07 fc       	sbrc	r0, 7
    65dc:	05 d0       	rcall	.+10     	; 0x65e8 <__divmodhi4_neg2>
    65de:	3e f4       	brtc	.+14     	; 0x65ee <__divmodhi4_exit>

000065e0 <__divmodhi4_neg1>:
    65e0:	90 95       	com	r25
    65e2:	81 95       	neg	r24
    65e4:	9f 4f       	sbci	r25, 0xFF	; 255
    65e6:	08 95       	ret

000065e8 <__divmodhi4_neg2>:
    65e8:	70 95       	com	r23
    65ea:	61 95       	neg	r22
    65ec:	7f 4f       	sbci	r23, 0xFF	; 255

000065ee <__divmodhi4_exit>:
    65ee:	08 95       	ret

000065f0 <__tablejump2__>:
    65f0:	ee 0f       	add	r30, r30
    65f2:	ff 1f       	adc	r31, r31

000065f4 <__tablejump__>:
    65f4:	05 90       	lpm	r0, Z+
    65f6:	f4 91       	lpm	r31, Z
    65f8:	e0 2d       	mov	r30, r0
    65fa:	09 94       	ijmp

000065fc <__umulhisi3>:
    65fc:	a2 9f       	mul	r26, r18
    65fe:	b0 01       	movw	r22, r0
    6600:	b3 9f       	mul	r27, r19
    6602:	c0 01       	movw	r24, r0
    6604:	a3 9f       	mul	r26, r19
    6606:	70 0d       	add	r23, r0
    6608:	81 1d       	adc	r24, r1
    660a:	11 24       	eor	r1, r1
    660c:	91 1d       	adc	r25, r1
    660e:	b2 9f       	mul	r27, r18
    6610:	70 0d       	add	r23, r0
    6612:	81 1d       	adc	r24, r1
    6614:	11 24       	eor	r1, r1
    6616:	91 1d       	adc	r25, r1
    6618:	08 95       	ret

0000661a <__tablejump_elpm__>:
    661a:	07 90       	elpm	r0, Z+
    661c:	f6 91       	elpm	r31, Z
    661e:	e0 2d       	mov	r30, r0
    6620:	09 94       	ijmp

00006622 <__ftoa_engine>:
    6622:	28 30       	cpi	r18, 0x08	; 8
    6624:	08 f0       	brcs	.+2      	; 0x6628 <__ftoa_engine+0x6>
    6626:	27 e0       	ldi	r18, 0x07	; 7
    6628:	33 27       	eor	r19, r19
    662a:	da 01       	movw	r26, r20
    662c:	99 0f       	add	r25, r25
    662e:	31 1d       	adc	r19, r1
    6630:	87 fd       	sbrc	r24, 7
    6632:	91 60       	ori	r25, 0x01	; 1
    6634:	00 96       	adiw	r24, 0x00	; 0
    6636:	61 05       	cpc	r22, r1
    6638:	71 05       	cpc	r23, r1
    663a:	39 f4       	brne	.+14     	; 0x664a <__ftoa_engine+0x28>
    663c:	32 60       	ori	r19, 0x02	; 2
    663e:	2e 5f       	subi	r18, 0xFE	; 254
    6640:	3d 93       	st	X+, r19
    6642:	30 e3       	ldi	r19, 0x30	; 48
    6644:	2a 95       	dec	r18
    6646:	e1 f7       	brne	.-8      	; 0x6640 <__ftoa_engine+0x1e>
    6648:	08 95       	ret
    664a:	9f 3f       	cpi	r25, 0xFF	; 255
    664c:	30 f0       	brcs	.+12     	; 0x665a <__ftoa_engine+0x38>
    664e:	80 38       	cpi	r24, 0x80	; 128
    6650:	71 05       	cpc	r23, r1
    6652:	61 05       	cpc	r22, r1
    6654:	09 f0       	breq	.+2      	; 0x6658 <__ftoa_engine+0x36>
    6656:	3c 5f       	subi	r19, 0xFC	; 252
    6658:	3c 5f       	subi	r19, 0xFC	; 252
    665a:	3d 93       	st	X+, r19
    665c:	91 30       	cpi	r25, 0x01	; 1
    665e:	08 f0       	brcs	.+2      	; 0x6662 <__ftoa_engine+0x40>
    6660:	80 68       	ori	r24, 0x80	; 128
    6662:	91 1d       	adc	r25, r1
    6664:	df 93       	push	r29
    6666:	cf 93       	push	r28
    6668:	1f 93       	push	r17
    666a:	0f 93       	push	r16
    666c:	ff 92       	push	r15
    666e:	ef 92       	push	r14
    6670:	19 2f       	mov	r17, r25
    6672:	98 7f       	andi	r25, 0xF8	; 248
    6674:	96 95       	lsr	r25
    6676:	e9 2f       	mov	r30, r25
    6678:	96 95       	lsr	r25
    667a:	96 95       	lsr	r25
    667c:	e9 0f       	add	r30, r25
    667e:	ff 27       	eor	r31, r31
    6680:	e2 50       	subi	r30, 0x02	; 2
    6682:	fb 4f       	sbci	r31, 0xFB	; 251
    6684:	99 27       	eor	r25, r25
    6686:	33 27       	eor	r19, r19
    6688:	ee 24       	eor	r14, r14
    668a:	ff 24       	eor	r15, r15
    668c:	a7 01       	movw	r20, r14
    668e:	e7 01       	movw	r28, r14
    6690:	05 90       	lpm	r0, Z+
    6692:	08 94       	sec
    6694:	07 94       	ror	r0
    6696:	28 f4       	brcc	.+10     	; 0x66a2 <__ftoa_engine+0x80>
    6698:	36 0f       	add	r19, r22
    669a:	e7 1e       	adc	r14, r23
    669c:	f8 1e       	adc	r15, r24
    669e:	49 1f       	adc	r20, r25
    66a0:	51 1d       	adc	r21, r1
    66a2:	66 0f       	add	r22, r22
    66a4:	77 1f       	adc	r23, r23
    66a6:	88 1f       	adc	r24, r24
    66a8:	99 1f       	adc	r25, r25
    66aa:	06 94       	lsr	r0
    66ac:	a1 f7       	brne	.-24     	; 0x6696 <__ftoa_engine+0x74>
    66ae:	05 90       	lpm	r0, Z+
    66b0:	07 94       	ror	r0
    66b2:	28 f4       	brcc	.+10     	; 0x66be <__ftoa_engine+0x9c>
    66b4:	e7 0e       	add	r14, r23
    66b6:	f8 1e       	adc	r15, r24
    66b8:	49 1f       	adc	r20, r25
    66ba:	56 1f       	adc	r21, r22
    66bc:	c1 1d       	adc	r28, r1
    66be:	77 0f       	add	r23, r23
    66c0:	88 1f       	adc	r24, r24
    66c2:	99 1f       	adc	r25, r25
    66c4:	66 1f       	adc	r22, r22
    66c6:	06 94       	lsr	r0
    66c8:	a1 f7       	brne	.-24     	; 0x66b2 <__ftoa_engine+0x90>
    66ca:	05 90       	lpm	r0, Z+
    66cc:	07 94       	ror	r0
    66ce:	28 f4       	brcc	.+10     	; 0x66da <__ftoa_engine+0xb8>
    66d0:	f8 0e       	add	r15, r24
    66d2:	49 1f       	adc	r20, r25
    66d4:	56 1f       	adc	r21, r22
    66d6:	c7 1f       	adc	r28, r23
    66d8:	d1 1d       	adc	r29, r1
    66da:	88 0f       	add	r24, r24
    66dc:	99 1f       	adc	r25, r25
    66de:	66 1f       	adc	r22, r22
    66e0:	77 1f       	adc	r23, r23
    66e2:	06 94       	lsr	r0
    66e4:	a1 f7       	brne	.-24     	; 0x66ce <__ftoa_engine+0xac>
    66e6:	05 90       	lpm	r0, Z+
    66e8:	07 94       	ror	r0
    66ea:	20 f4       	brcc	.+8      	; 0x66f4 <__ftoa_engine+0xd2>
    66ec:	49 0f       	add	r20, r25
    66ee:	56 1f       	adc	r21, r22
    66f0:	c7 1f       	adc	r28, r23
    66f2:	d8 1f       	adc	r29, r24
    66f4:	99 0f       	add	r25, r25
    66f6:	66 1f       	adc	r22, r22
    66f8:	77 1f       	adc	r23, r23
    66fa:	88 1f       	adc	r24, r24
    66fc:	06 94       	lsr	r0
    66fe:	a9 f7       	brne	.-22     	; 0x66ea <__ftoa_engine+0xc8>
    6700:	84 91       	lpm	r24, Z
    6702:	10 95       	com	r17
    6704:	17 70       	andi	r17, 0x07	; 7
    6706:	41 f0       	breq	.+16     	; 0x6718 <__ftoa_engine+0xf6>
    6708:	d6 95       	lsr	r29
    670a:	c7 95       	ror	r28
    670c:	57 95       	ror	r21
    670e:	47 95       	ror	r20
    6710:	f7 94       	ror	r15
    6712:	e7 94       	ror	r14
    6714:	1a 95       	dec	r17
    6716:	c1 f7       	brne	.-16     	; 0x6708 <__ftoa_engine+0xe6>
    6718:	e4 ea       	ldi	r30, 0xA4	; 164
    671a:	f4 e0       	ldi	r31, 0x04	; 4
    671c:	68 94       	set
    671e:	15 90       	lpm	r1, Z+
    6720:	15 91       	lpm	r17, Z+
    6722:	35 91       	lpm	r19, Z+
    6724:	65 91       	lpm	r22, Z+
    6726:	95 91       	lpm	r25, Z+
    6728:	05 90       	lpm	r0, Z+
    672a:	7f e2       	ldi	r23, 0x2F	; 47
    672c:	73 95       	inc	r23
    672e:	e1 18       	sub	r14, r1
    6730:	f1 0a       	sbc	r15, r17
    6732:	43 0b       	sbc	r20, r19
    6734:	56 0b       	sbc	r21, r22
    6736:	c9 0b       	sbc	r28, r25
    6738:	d0 09       	sbc	r29, r0
    673a:	c0 f7       	brcc	.-16     	; 0x672c <__ftoa_engine+0x10a>
    673c:	e1 0c       	add	r14, r1
    673e:	f1 1e       	adc	r15, r17
    6740:	43 1f       	adc	r20, r19
    6742:	56 1f       	adc	r21, r22
    6744:	c9 1f       	adc	r28, r25
    6746:	d0 1d       	adc	r29, r0
    6748:	7e f4       	brtc	.+30     	; 0x6768 <__ftoa_engine+0x146>
    674a:	70 33       	cpi	r23, 0x30	; 48
    674c:	11 f4       	brne	.+4      	; 0x6752 <__ftoa_engine+0x130>
    674e:	8a 95       	dec	r24
    6750:	e6 cf       	rjmp	.-52     	; 0x671e <__ftoa_engine+0xfc>
    6752:	e8 94       	clt
    6754:	01 50       	subi	r16, 0x01	; 1
    6756:	30 f0       	brcs	.+12     	; 0x6764 <__ftoa_engine+0x142>
    6758:	08 0f       	add	r16, r24
    675a:	0a f4       	brpl	.+2      	; 0x675e <__ftoa_engine+0x13c>
    675c:	00 27       	eor	r16, r16
    675e:	02 17       	cp	r16, r18
    6760:	08 f4       	brcc	.+2      	; 0x6764 <__ftoa_engine+0x142>
    6762:	20 2f       	mov	r18, r16
    6764:	23 95       	inc	r18
    6766:	02 2f       	mov	r16, r18
    6768:	7a 33       	cpi	r23, 0x3A	; 58
    676a:	28 f0       	brcs	.+10     	; 0x6776 <__ftoa_engine+0x154>
    676c:	79 e3       	ldi	r23, 0x39	; 57
    676e:	7d 93       	st	X+, r23
    6770:	2a 95       	dec	r18
    6772:	e9 f7       	brne	.-6      	; 0x676e <__ftoa_engine+0x14c>
    6774:	10 c0       	rjmp	.+32     	; 0x6796 <__ftoa_engine+0x174>
    6776:	7d 93       	st	X+, r23
    6778:	2a 95       	dec	r18
    677a:	89 f6       	brne	.-94     	; 0x671e <__ftoa_engine+0xfc>
    677c:	06 94       	lsr	r0
    677e:	97 95       	ror	r25
    6780:	67 95       	ror	r22
    6782:	37 95       	ror	r19
    6784:	17 95       	ror	r17
    6786:	17 94       	ror	r1
    6788:	e1 18       	sub	r14, r1
    678a:	f1 0a       	sbc	r15, r17
    678c:	43 0b       	sbc	r20, r19
    678e:	56 0b       	sbc	r21, r22
    6790:	c9 0b       	sbc	r28, r25
    6792:	d0 09       	sbc	r29, r0
    6794:	98 f0       	brcs	.+38     	; 0x67bc <__ftoa_engine+0x19a>
    6796:	23 95       	inc	r18
    6798:	7e 91       	ld	r23, -X
    679a:	73 95       	inc	r23
    679c:	7a 33       	cpi	r23, 0x3A	; 58
    679e:	08 f0       	brcs	.+2      	; 0x67a2 <__ftoa_engine+0x180>
    67a0:	70 e3       	ldi	r23, 0x30	; 48
    67a2:	7c 93       	st	X, r23
    67a4:	20 13       	cpse	r18, r16
    67a6:	b8 f7       	brcc	.-18     	; 0x6796 <__ftoa_engine+0x174>
    67a8:	7e 91       	ld	r23, -X
    67aa:	70 61       	ori	r23, 0x10	; 16
    67ac:	7d 93       	st	X+, r23
    67ae:	30 f0       	brcs	.+12     	; 0x67bc <__ftoa_engine+0x19a>
    67b0:	83 95       	inc	r24
    67b2:	71 e3       	ldi	r23, 0x31	; 49
    67b4:	7d 93       	st	X+, r23
    67b6:	70 e3       	ldi	r23, 0x30	; 48
    67b8:	2a 95       	dec	r18
    67ba:	e1 f7       	brne	.-8      	; 0x67b4 <__ftoa_engine+0x192>
    67bc:	11 24       	eor	r1, r1
    67be:	ef 90       	pop	r14
    67c0:	ff 90       	pop	r15
    67c2:	0f 91       	pop	r16
    67c4:	1f 91       	pop	r17
    67c6:	cf 91       	pop	r28
    67c8:	df 91       	pop	r29
    67ca:	99 27       	eor	r25, r25
    67cc:	87 fd       	sbrc	r24, 7
    67ce:	90 95       	com	r25
    67d0:	08 95       	ret

000067d2 <strnlen_P>:
    67d2:	fc 01       	movw	r30, r24
    67d4:	05 90       	lpm	r0, Z+
    67d6:	61 50       	subi	r22, 0x01	; 1
    67d8:	70 40       	sbci	r23, 0x00	; 0
    67da:	01 10       	cpse	r0, r1
    67dc:	d8 f7       	brcc	.-10     	; 0x67d4 <strnlen_P+0x2>
    67de:	80 95       	com	r24
    67e0:	90 95       	com	r25
    67e2:	8e 0f       	add	r24, r30
    67e4:	9f 1f       	adc	r25, r31
    67e6:	08 95       	ret

000067e8 <strnlen>:
    67e8:	fc 01       	movw	r30, r24
    67ea:	61 50       	subi	r22, 0x01	; 1
    67ec:	70 40       	sbci	r23, 0x00	; 0
    67ee:	01 90       	ld	r0, Z+
    67f0:	01 10       	cpse	r0, r1
    67f2:	d8 f7       	brcc	.-10     	; 0x67ea <strnlen+0x2>
    67f4:	80 95       	com	r24
    67f6:	90 95       	com	r25
    67f8:	8e 0f       	add	r24, r30
    67fa:	9f 1f       	adc	r25, r31
    67fc:	08 95       	ret

000067fe <fputc>:
    67fe:	0f 93       	push	r16
    6800:	1f 93       	push	r17
    6802:	cf 93       	push	r28
    6804:	df 93       	push	r29
    6806:	18 2f       	mov	r17, r24
    6808:	09 2f       	mov	r16, r25
    680a:	eb 01       	movw	r28, r22
    680c:	8b 81       	ldd	r24, Y+3	; 0x03
    680e:	81 fd       	sbrc	r24, 1
    6810:	03 c0       	rjmp	.+6      	; 0x6818 <fputc+0x1a>
    6812:	8f ef       	ldi	r24, 0xFF	; 255
    6814:	9f ef       	ldi	r25, 0xFF	; 255
    6816:	20 c0       	rjmp	.+64     	; 0x6858 <fputc+0x5a>
    6818:	82 ff       	sbrs	r24, 2
    681a:	10 c0       	rjmp	.+32     	; 0x683c <fputc+0x3e>
    681c:	4e 81       	ldd	r20, Y+6	; 0x06
    681e:	5f 81       	ldd	r21, Y+7	; 0x07
    6820:	2c 81       	ldd	r18, Y+4	; 0x04
    6822:	3d 81       	ldd	r19, Y+5	; 0x05
    6824:	42 17       	cp	r20, r18
    6826:	53 07       	cpc	r21, r19
    6828:	7c f4       	brge	.+30     	; 0x6848 <fputc+0x4a>
    682a:	e8 81       	ld	r30, Y
    682c:	f9 81       	ldd	r31, Y+1	; 0x01
    682e:	9f 01       	movw	r18, r30
    6830:	2f 5f       	subi	r18, 0xFF	; 255
    6832:	3f 4f       	sbci	r19, 0xFF	; 255
    6834:	39 83       	std	Y+1, r19	; 0x01
    6836:	28 83       	st	Y, r18
    6838:	10 83       	st	Z, r17
    683a:	06 c0       	rjmp	.+12     	; 0x6848 <fputc+0x4a>
    683c:	e8 85       	ldd	r30, Y+8	; 0x08
    683e:	f9 85       	ldd	r31, Y+9	; 0x09
    6840:	81 2f       	mov	r24, r17
    6842:	09 95       	icall
    6844:	89 2b       	or	r24, r25
    6846:	29 f7       	brne	.-54     	; 0x6812 <fputc+0x14>
    6848:	2e 81       	ldd	r18, Y+6	; 0x06
    684a:	3f 81       	ldd	r19, Y+7	; 0x07
    684c:	2f 5f       	subi	r18, 0xFF	; 255
    684e:	3f 4f       	sbci	r19, 0xFF	; 255
    6850:	3f 83       	std	Y+7, r19	; 0x07
    6852:	2e 83       	std	Y+6, r18	; 0x06
    6854:	81 2f       	mov	r24, r17
    6856:	90 2f       	mov	r25, r16
    6858:	df 91       	pop	r29
    685a:	cf 91       	pop	r28
    685c:	1f 91       	pop	r17
    685e:	0f 91       	pop	r16
    6860:	08 95       	ret

00006862 <sprintf>:
    6862:	0f 93       	push	r16
    6864:	1f 93       	push	r17
    6866:	cf 93       	push	r28
    6868:	df 93       	push	r29
    686a:	cd b7       	in	r28, 0x3d	; 61
    686c:	de b7       	in	r29, 0x3e	; 62
    686e:	2e 97       	sbiw	r28, 0x0e	; 14
    6870:	0f b6       	in	r0, 0x3f	; 63
    6872:	f8 94       	cli
    6874:	de bf       	out	0x3e, r29	; 62
    6876:	0f be       	out	0x3f, r0	; 63
    6878:	cd bf       	out	0x3d, r28	; 61
    687a:	0d 89       	ldd	r16, Y+21	; 0x15
    687c:	1e 89       	ldd	r17, Y+22	; 0x16
    687e:	86 e0       	ldi	r24, 0x06	; 6
    6880:	8c 83       	std	Y+4, r24	; 0x04
    6882:	1a 83       	std	Y+2, r17	; 0x02
    6884:	09 83       	std	Y+1, r16	; 0x01
    6886:	8f ef       	ldi	r24, 0xFF	; 255
    6888:	9f e7       	ldi	r25, 0x7F	; 127
    688a:	9e 83       	std	Y+6, r25	; 0x06
    688c:	8d 83       	std	Y+5, r24	; 0x05
    688e:	ae 01       	movw	r20, r28
    6890:	47 5e       	subi	r20, 0xE7	; 231
    6892:	5f 4f       	sbci	r21, 0xFF	; 255
    6894:	6f 89       	ldd	r22, Y+23	; 0x17
    6896:	78 8d       	ldd	r23, Y+24	; 0x18
    6898:	ce 01       	movw	r24, r28
    689a:	01 96       	adiw	r24, 0x01	; 1
    689c:	fb da       	rcall	.-2570   	; 0x5e94 <vfprintf>
    689e:	ef 81       	ldd	r30, Y+7	; 0x07
    68a0:	f8 85       	ldd	r31, Y+8	; 0x08
    68a2:	e0 0f       	add	r30, r16
    68a4:	f1 1f       	adc	r31, r17
    68a6:	10 82       	st	Z, r1
    68a8:	2e 96       	adiw	r28, 0x0e	; 14
    68aa:	0f b6       	in	r0, 0x3f	; 63
    68ac:	f8 94       	cli
    68ae:	de bf       	out	0x3e, r29	; 62
    68b0:	0f be       	out	0x3f, r0	; 63
    68b2:	cd bf       	out	0x3d, r28	; 61
    68b4:	df 91       	pop	r29
    68b6:	cf 91       	pop	r28
    68b8:	1f 91       	pop	r17
    68ba:	0f 91       	pop	r16
    68bc:	08 95       	ret

000068be <__ultoa_invert>:
    68be:	fa 01       	movw	r30, r20
    68c0:	aa 27       	eor	r26, r26
    68c2:	28 30       	cpi	r18, 0x08	; 8
    68c4:	51 f1       	breq	.+84     	; 0x691a <__ultoa_invert+0x5c>
    68c6:	20 31       	cpi	r18, 0x10	; 16
    68c8:	81 f1       	breq	.+96     	; 0x692a <__ultoa_invert+0x6c>
    68ca:	e8 94       	clt
    68cc:	6f 93       	push	r22
    68ce:	6e 7f       	andi	r22, 0xFE	; 254
    68d0:	6e 5f       	subi	r22, 0xFE	; 254
    68d2:	7f 4f       	sbci	r23, 0xFF	; 255
    68d4:	8f 4f       	sbci	r24, 0xFF	; 255
    68d6:	9f 4f       	sbci	r25, 0xFF	; 255
    68d8:	af 4f       	sbci	r26, 0xFF	; 255
    68da:	b1 e0       	ldi	r27, 0x01	; 1
    68dc:	3e d0       	rcall	.+124    	; 0x695a <__ultoa_invert+0x9c>
    68de:	b4 e0       	ldi	r27, 0x04	; 4
    68e0:	3c d0       	rcall	.+120    	; 0x695a <__ultoa_invert+0x9c>
    68e2:	67 0f       	add	r22, r23
    68e4:	78 1f       	adc	r23, r24
    68e6:	89 1f       	adc	r24, r25
    68e8:	9a 1f       	adc	r25, r26
    68ea:	a1 1d       	adc	r26, r1
    68ec:	68 0f       	add	r22, r24
    68ee:	79 1f       	adc	r23, r25
    68f0:	8a 1f       	adc	r24, r26
    68f2:	91 1d       	adc	r25, r1
    68f4:	a1 1d       	adc	r26, r1
    68f6:	6a 0f       	add	r22, r26
    68f8:	71 1d       	adc	r23, r1
    68fa:	81 1d       	adc	r24, r1
    68fc:	91 1d       	adc	r25, r1
    68fe:	a1 1d       	adc	r26, r1
    6900:	20 d0       	rcall	.+64     	; 0x6942 <__ultoa_invert+0x84>
    6902:	09 f4       	brne	.+2      	; 0x6906 <__ultoa_invert+0x48>
    6904:	68 94       	set
    6906:	3f 91       	pop	r19
    6908:	2a e0       	ldi	r18, 0x0A	; 10
    690a:	26 9f       	mul	r18, r22
    690c:	11 24       	eor	r1, r1
    690e:	30 19       	sub	r19, r0
    6910:	30 5d       	subi	r19, 0xD0	; 208
    6912:	31 93       	st	Z+, r19
    6914:	de f6       	brtc	.-74     	; 0x68cc <__ultoa_invert+0xe>
    6916:	cf 01       	movw	r24, r30
    6918:	08 95       	ret
    691a:	46 2f       	mov	r20, r22
    691c:	47 70       	andi	r20, 0x07	; 7
    691e:	40 5d       	subi	r20, 0xD0	; 208
    6920:	41 93       	st	Z+, r20
    6922:	b3 e0       	ldi	r27, 0x03	; 3
    6924:	0f d0       	rcall	.+30     	; 0x6944 <__ultoa_invert+0x86>
    6926:	c9 f7       	brne	.-14     	; 0x691a <__ultoa_invert+0x5c>
    6928:	f6 cf       	rjmp	.-20     	; 0x6916 <__ultoa_invert+0x58>
    692a:	46 2f       	mov	r20, r22
    692c:	4f 70       	andi	r20, 0x0F	; 15
    692e:	40 5d       	subi	r20, 0xD0	; 208
    6930:	4a 33       	cpi	r20, 0x3A	; 58
    6932:	18 f0       	brcs	.+6      	; 0x693a <__ultoa_invert+0x7c>
    6934:	49 5d       	subi	r20, 0xD9	; 217
    6936:	31 fd       	sbrc	r19, 1
    6938:	40 52       	subi	r20, 0x20	; 32
    693a:	41 93       	st	Z+, r20
    693c:	02 d0       	rcall	.+4      	; 0x6942 <__ultoa_invert+0x84>
    693e:	a9 f7       	brne	.-22     	; 0x692a <__ultoa_invert+0x6c>
    6940:	ea cf       	rjmp	.-44     	; 0x6916 <__ultoa_invert+0x58>
    6942:	b4 e0       	ldi	r27, 0x04	; 4
    6944:	a6 95       	lsr	r26
    6946:	97 95       	ror	r25
    6948:	87 95       	ror	r24
    694a:	77 95       	ror	r23
    694c:	67 95       	ror	r22
    694e:	ba 95       	dec	r27
    6950:	c9 f7       	brne	.-14     	; 0x6944 <__ultoa_invert+0x86>
    6952:	00 97       	sbiw	r24, 0x00	; 0
    6954:	61 05       	cpc	r22, r1
    6956:	71 05       	cpc	r23, r1
    6958:	08 95       	ret
    695a:	9b 01       	movw	r18, r22
    695c:	ac 01       	movw	r20, r24
    695e:	0a 2e       	mov	r0, r26
    6960:	06 94       	lsr	r0
    6962:	57 95       	ror	r21
    6964:	47 95       	ror	r20
    6966:	37 95       	ror	r19
    6968:	27 95       	ror	r18
    696a:	ba 95       	dec	r27
    696c:	c9 f7       	brne	.-14     	; 0x6960 <__ultoa_invert+0xa2>
    696e:	62 0f       	add	r22, r18
    6970:	73 1f       	adc	r23, r19
    6972:	84 1f       	adc	r24, r20
    6974:	95 1f       	adc	r25, r21
    6976:	a0 1d       	adc	r26, r0
    6978:	08 95       	ret

0000697a <__do_global_dtors>:
    697a:	15 e0       	ldi	r17, 0x05	; 5
    697c:	c0 ea       	ldi	r28, 0xA0	; 160
    697e:	d5 e0       	ldi	r29, 0x05	; 5
    6980:	00 e0       	ldi	r16, 0x00	; 0
    6982:	05 c0       	rjmp	.+10     	; 0x698e <__do_global_dtors+0x14>
    6984:	22 97       	sbiw	r28, 0x02	; 2
    6986:	01 09       	sbc	r16, r1
    6988:	fe 01       	movw	r30, r28
    698a:	0b bf       	out	0x3b, r16	; 59
    698c:	46 de       	rcall	.-884    	; 0x661a <__tablejump_elpm__>
    698e:	c2 3a       	cpi	r28, 0xA2	; 162
    6990:	d1 07       	cpc	r29, r17
    6992:	80 e0       	ldi	r24, 0x00	; 0
    6994:	08 07       	cpc	r16, r24
    6996:	b1 f7       	brne	.-20     	; 0x6984 <__do_global_dtors+0xa>
    6998:	f8 94       	cli

0000699a <__stop_program>:
    699a:	ff cf       	rjmp	.-2      	; 0x699a <__stop_program>
