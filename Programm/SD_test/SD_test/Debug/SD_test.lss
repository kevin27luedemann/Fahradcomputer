
SD_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000e8  00800100  00003eba  00003f4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003eba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000409  008001e8  008001e8  00004036  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00004036  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004094  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000398  00000000  00000000  000040d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000903e  00000000  00000000  0000446c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dd0  00000000  00000000  0000d4aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000042fe  00000000  00000000  0000e27a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001424  00000000  00000000  00012578  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f13  00000000  00000000  0001399c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000adfe  00000000  00000000  000148af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000408  00000000  00000000  0001f6ad  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	69 c1       	rjmp	.+722    	; 0x2d4 <__dtors_end>
       2:	00 00       	nop
       4:	91 c1       	rjmp	.+802    	; 0x328 <__bad_interrupt>
       6:	00 00       	nop
       8:	8f c1       	rjmp	.+798    	; 0x328 <__bad_interrupt>
       a:	00 00       	nop
       c:	8d c1       	rjmp	.+794    	; 0x328 <__bad_interrupt>
       e:	00 00       	nop
      10:	8b c1       	rjmp	.+790    	; 0x328 <__bad_interrupt>
      12:	00 00       	nop
      14:	89 c1       	rjmp	.+786    	; 0x328 <__bad_interrupt>
      16:	00 00       	nop
      18:	87 c1       	rjmp	.+782    	; 0x328 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	85 c1       	rjmp	.+778    	; 0x328 <__bad_interrupt>
      1e:	00 00       	nop
      20:	83 c1       	rjmp	.+774    	; 0x328 <__bad_interrupt>
      22:	00 00       	nop
      24:	81 c1       	rjmp	.+770    	; 0x328 <__bad_interrupt>
      26:	00 00       	nop
      28:	7f c1       	rjmp	.+766    	; 0x328 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7d c1       	rjmp	.+762    	; 0x328 <__bad_interrupt>
      2e:	00 00       	nop
      30:	7b c1       	rjmp	.+758    	; 0x328 <__bad_interrupt>
      32:	00 00       	nop
      34:	79 c1       	rjmp	.+754    	; 0x328 <__bad_interrupt>
      36:	00 00       	nop
      38:	77 c1       	rjmp	.+750    	; 0x328 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	75 c1       	rjmp	.+746    	; 0x328 <__bad_interrupt>
      3e:	00 00       	nop
      40:	0c 94 02 1a 	jmp	0x3404	; 0x3404 <__vector_16>
      44:	71 c1       	rjmp	.+738    	; 0x328 <__bad_interrupt>
      46:	00 00       	nop
      48:	6f c1       	rjmp	.+734    	; 0x328 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6d c1       	rjmp	.+730    	; 0x328 <__bad_interrupt>
      4e:	00 00       	nop
      50:	6b c1       	rjmp	.+726    	; 0x328 <__bad_interrupt>
      52:	00 00       	nop
      54:	69 c1       	rjmp	.+722    	; 0x328 <__bad_interrupt>
      56:	00 00       	nop
      58:	67 c1       	rjmp	.+718    	; 0x328 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	65 c1       	rjmp	.+714    	; 0x328 <__bad_interrupt>
      5e:	00 00       	nop
      60:	63 c1       	rjmp	.+710    	; 0x328 <__bad_interrupt>
      62:	00 00       	nop
      64:	61 c1       	rjmp	.+706    	; 0x328 <__bad_interrupt>
      66:	00 00       	nop
      68:	5f c1       	rjmp	.+702    	; 0x328 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5d c1       	rjmp	.+698    	; 0x328 <__bad_interrupt>
      6e:	00 00       	nop
      70:	5b c1       	rjmp	.+694    	; 0x328 <__bad_interrupt>
      72:	00 00       	nop
      74:	59 c1       	rjmp	.+690    	; 0x328 <__bad_interrupt>
      76:	00 00       	nop
      78:	57 c1       	rjmp	.+686    	; 0x328 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	55 c1       	rjmp	.+682    	; 0x328 <__bad_interrupt>
      7e:	00 00       	nop
      80:	53 c1       	rjmp	.+678    	; 0x328 <__bad_interrupt>
      82:	00 00       	nop
      84:	51 c1       	rjmp	.+674    	; 0x328 <__bad_interrupt>
      86:	00 00       	nop
      88:	4f c1       	rjmp	.+670    	; 0x328 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	2d 04       	cpc	r2, r13
      8e:	34 04       	cpc	r3, r4
      90:	81 05       	cpc	r24, r1
      92:	a4 04       	cpc	r10, r4
      94:	81 05       	cpc	r24, r1
      96:	81 05       	cpc	r24, r1
      98:	81 05       	cpc	r24, r1
      9a:	79 05       	cpc	r23, r9
      9c:	81 05       	cpc	r24, r1
      9e:	81 05       	cpc	r24, r1
      a0:	81 05       	cpc	r24, r1
      a2:	81 05       	cpc	r24, r1
      a4:	81 05       	cpc	r24, r1
      a6:	81 05       	cpc	r24, r1
      a8:	81 05       	cpc	r24, r1
      aa:	81 05       	cpc	r24, r1
      ac:	81 05       	cpc	r24, r1
      ae:	81 05       	cpc	r24, r1
      b0:	81 05       	cpc	r24, r1
      b2:	81 05       	cpc	r24, r1
      b4:	81 05       	cpc	r24, r1
      b6:	81 05       	cpc	r24, r1
      b8:	81 05       	cpc	r24, r1
      ba:	81 05       	cpc	r24, r1
      bc:	81 05       	cpc	r24, r1
      be:	81 05       	cpc	r24, r1
      c0:	81 05       	cpc	r24, r1
      c2:	81 05       	cpc	r24, r1
      c4:	81 05       	cpc	r24, r1
      c6:	81 05       	cpc	r24, r1
      c8:	81 05       	cpc	r24, r1
      ca:	81 05       	cpc	r24, r1
      cc:	81 05       	cpc	r24, r1
      ce:	81 05       	cpc	r24, r1
      d0:	81 05       	cpc	r24, r1
      d2:	81 05       	cpc	r24, r1
      d4:	81 05       	cpc	r24, r1
      d6:	81 05       	cpc	r24, r1
      d8:	81 05       	cpc	r24, r1
      da:	81 05       	cpc	r24, r1
      dc:	81 05       	cpc	r24, r1
      de:	81 05       	cpc	r24, r1
      e0:	81 05       	cpc	r24, r1
      e2:	81 05       	cpc	r24, r1
      e4:	81 05       	cpc	r24, r1
      e6:	81 05       	cpc	r24, r1
      e8:	81 05       	cpc	r24, r1
      ea:	81 05       	cpc	r24, r1
      ec:	81 05       	cpc	r24, r1
      ee:	81 05       	cpc	r24, r1
      f0:	2a 05       	cpc	r18, r10
      f2:	30 05       	cpc	r19, r0
      f4:	41 05       	cpc	r20, r1
      f6:	52 05       	cpc	r21, r2
      f8:	67 05       	cpc	r22, r7

000000fa <__trampolines_end>:
      fa:	00 00       	nop
      fc:	5f 00       	.word	0x005f	; ????
      fe:	00 00       	nop
     100:	07 00       	.word	0x0007	; ????
     102:	07 00       	.word	0x0007	; ????
     104:	14 7f       	andi	r17, 0xF4	; 244
     106:	14 7f       	andi	r17, 0xF4	; 244
     108:	14 24       	eor	r1, r4
     10a:	2a 7f       	andi	r18, 0xFA	; 250
     10c:	2a 12       	cpse	r2, r26
     10e:	23 13       	cpse	r18, r19
     110:	08 64       	ori	r16, 0x48	; 72
     112:	62 36       	cpi	r22, 0x62	; 98
     114:	49 55       	subi	r20, 0x59	; 89
     116:	22 50       	subi	r18, 0x02	; 2
     118:	00 05       	cpc	r16, r0
     11a:	03 00       	.word	0x0003	; ????
     11c:	00 00       	nop
     11e:	1c 22       	and	r1, r28
     120:	41 00       	.word	0x0041	; ????
     122:	00 41       	sbci	r16, 0x10	; 16
     124:	22 1c       	adc	r2, r2
     126:	00 14       	cp	r0, r0
     128:	08 3e       	cpi	r16, 0xE8	; 232
     12a:	08 14       	cp	r0, r8
     12c:	08 08       	sbc	r0, r8
     12e:	3e 08       	sbc	r3, r14
     130:	08 00       	.word	0x0008	; ????
     132:	50 30       	cpi	r21, 0x00	; 0
     134:	00 00       	nop
     136:	08 08       	sbc	r0, r8
     138:	08 08       	sbc	r0, r8
     13a:	08 00       	.word	0x0008	; ????
     13c:	60 60       	ori	r22, 0x00	; 0
     13e:	00 00       	nop
     140:	20 10       	cpse	r2, r0
     142:	08 04       	cpc	r0, r8
     144:	02 3e       	cpi	r16, 0xE2	; 226
     146:	51 49       	sbci	r21, 0x91	; 145
     148:	45 3e       	cpi	r20, 0xE5	; 229
     14a:	00 42       	sbci	r16, 0x20	; 32
     14c:	7f 40       	sbci	r23, 0x0F	; 15
     14e:	00 42       	sbci	r16, 0x20	; 32
     150:	61 51       	subi	r22, 0x11	; 17
     152:	49 46       	sbci	r20, 0x69	; 105
     154:	21 41       	sbci	r18, 0x11	; 17
     156:	45 4b       	sbci	r20, 0xB5	; 181
     158:	31 18       	sub	r3, r1
     15a:	14 12       	cpse	r1, r20
     15c:	7f 10       	cpse	r7, r15
     15e:	27 45       	sbci	r18, 0x57	; 87
     160:	45 45       	sbci	r20, 0x55	; 85
     162:	39 3c       	cpi	r19, 0xC9	; 201
     164:	4a 49       	sbci	r20, 0x9A	; 154
     166:	49 30       	cpi	r20, 0x09	; 9
     168:	01 71       	andi	r16, 0x11	; 17
     16a:	09 05       	cpc	r16, r9
     16c:	03 36       	cpi	r16, 0x63	; 99
     16e:	49 49       	sbci	r20, 0x99	; 153
     170:	49 36       	cpi	r20, 0x69	; 105
     172:	06 49       	sbci	r16, 0x96	; 150
     174:	49 29       	or	r20, r9
     176:	1e 00       	.word	0x001e	; ????
     178:	36 36       	cpi	r19, 0x66	; 102
     17a:	00 00       	nop
     17c:	00 56       	subi	r16, 0x60	; 96
     17e:	36 00       	.word	0x0036	; ????
     180:	00 08       	sbc	r0, r0
     182:	14 22       	and	r1, r20
     184:	41 00       	.word	0x0041	; ????
     186:	14 14       	cp	r1, r4
     188:	14 14       	cp	r1, r4
     18a:	14 00       	.word	0x0014	; ????
     18c:	41 22       	and	r4, r17
     18e:	14 08       	sbc	r1, r4
     190:	02 01       	movw	r0, r4
     192:	51 09       	sbc	r21, r1
     194:	06 32       	cpi	r16, 0x26	; 38
     196:	49 79       	andi	r20, 0x99	; 153
     198:	41 3e       	cpi	r20, 0xE1	; 225
     19a:	7e 11       	cpse	r23, r14
     19c:	11 11       	cpse	r17, r1
     19e:	7e 7f       	andi	r23, 0xFE	; 254
     1a0:	49 49       	sbci	r20, 0x99	; 153
     1a2:	49 36       	cpi	r20, 0x69	; 105
     1a4:	3e 41       	sbci	r19, 0x1E	; 30
     1a6:	41 41       	sbci	r20, 0x11	; 17
     1a8:	22 7f       	andi	r18, 0xF2	; 242
     1aa:	41 41       	sbci	r20, 0x11	; 17
     1ac:	22 1c       	adc	r2, r2
     1ae:	7f 49       	sbci	r23, 0x9F	; 159
     1b0:	49 49       	sbci	r20, 0x99	; 153
     1b2:	41 7f       	andi	r20, 0xF1	; 241
     1b4:	09 09       	sbc	r16, r9
     1b6:	09 01       	movw	r0, r18
     1b8:	3e 41       	sbci	r19, 0x1E	; 30
     1ba:	49 49       	sbci	r20, 0x99	; 153
     1bc:	7a 7f       	andi	r23, 0xFA	; 250
     1be:	08 08       	sbc	r0, r8
     1c0:	08 7f       	andi	r16, 0xF8	; 248
     1c2:	00 41       	sbci	r16, 0x10	; 16
     1c4:	7f 41       	sbci	r23, 0x1F	; 31
     1c6:	00 20       	and	r0, r0
     1c8:	40 41       	sbci	r20, 0x10	; 16
     1ca:	3f 01       	movw	r6, r30
     1cc:	7f 08       	sbc	r7, r15
     1ce:	14 22       	and	r1, r20
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	40 40       	sbci	r20, 0x00	; 0
     1d4:	40 40       	sbci	r20, 0x00	; 0
     1d6:	7f 02       	muls	r23, r31
     1d8:	0c 02       	muls	r16, r28
     1da:	7f 7f       	andi	r23, 0xFF	; 255
     1dc:	04 08       	sbc	r0, r4
     1de:	10 7f       	andi	r17, 0xF0	; 240
     1e0:	3e 41       	sbci	r19, 0x1E	; 30
     1e2:	41 41       	sbci	r20, 0x11	; 17
     1e4:	3e 7f       	andi	r19, 0xFE	; 254
     1e6:	09 09       	sbc	r16, r9
     1e8:	09 06       	cpc	r0, r25
     1ea:	3e 41       	sbci	r19, 0x1E	; 30
     1ec:	51 21       	and	r21, r1
     1ee:	5e 7f       	andi	r21, 0xFE	; 254
     1f0:	09 19       	sub	r16, r9
     1f2:	29 46       	sbci	r18, 0x69	; 105
     1f4:	46 49       	sbci	r20, 0x96	; 150
     1f6:	49 49       	sbci	r20, 0x99	; 153
     1f8:	31 01       	movw	r6, r2
     1fa:	01 7f       	andi	r16, 0xF1	; 241
     1fc:	01 01       	movw	r0, r2
     1fe:	3f 40       	sbci	r19, 0x0F	; 15
     200:	40 40       	sbci	r20, 0x00	; 0
     202:	3f 1f       	adc	r19, r31
     204:	20 40       	sbci	r18, 0x00	; 0
     206:	20 1f       	adc	r18, r16
     208:	3f 40       	sbci	r19, 0x0F	; 15
     20a:	38 40       	sbci	r19, 0x08	; 8
     20c:	3f 63       	ori	r19, 0x3F	; 63
     20e:	14 08       	sbc	r1, r4
     210:	14 63       	ori	r17, 0x34	; 52
     212:	07 08       	sbc	r0, r7
     214:	70 08       	sbc	r7, r0
     216:	07 61       	ori	r16, 0x17	; 23
     218:	51 49       	sbci	r21, 0x91	; 145
     21a:	45 43       	sbci	r20, 0x35	; 53
     21c:	00 7f       	andi	r16, 0xF0	; 240
     21e:	41 41       	sbci	r20, 0x11	; 17
     220:	00 02       	muls	r16, r16
     222:	04 08       	sbc	r0, r4
     224:	10 20       	and	r1, r0
     226:	00 41       	sbci	r16, 0x10	; 16
     228:	41 7f       	andi	r20, 0xF1	; 241
     22a:	00 04       	cpc	r0, r0
     22c:	02 01       	movw	r0, r4
     22e:	02 04       	cpc	r0, r2
     230:	40 40       	sbci	r20, 0x00	; 0
     232:	40 40       	sbci	r20, 0x00	; 0
     234:	40 00       	.word	0x0040	; ????
     236:	01 02       	muls	r16, r17
     238:	04 00       	.word	0x0004	; ????
     23a:	20 54       	subi	r18, 0x40	; 64
     23c:	54 54       	subi	r21, 0x44	; 68
     23e:	78 7f       	andi	r23, 0xF8	; 248
     240:	48 44       	sbci	r20, 0x48	; 72
     242:	44 38       	cpi	r20, 0x84	; 132
     244:	38 44       	sbci	r19, 0x48	; 72
     246:	44 44       	sbci	r20, 0x44	; 68
     248:	20 38       	cpi	r18, 0x80	; 128
     24a:	44 44       	sbci	r20, 0x44	; 68
     24c:	48 7f       	andi	r20, 0xF8	; 248
     24e:	38 54       	subi	r19, 0x48	; 72
     250:	54 54       	subi	r21, 0x44	; 68
     252:	18 08       	sbc	r1, r8
     254:	7e 09       	sbc	r23, r14
     256:	01 02       	muls	r16, r17
     258:	0c 52       	subi	r16, 0x2C	; 44
     25a:	52 52       	subi	r21, 0x22	; 34
     25c:	3e 7f       	andi	r19, 0xFE	; 254
     25e:	08 04       	cpc	r0, r8
     260:	04 78       	andi	r16, 0x84	; 132
     262:	00 44       	sbci	r16, 0x40	; 64
     264:	7d 40       	sbci	r23, 0x0D	; 13
     266:	00 20       	and	r0, r0
     268:	40 44       	sbci	r20, 0x40	; 64
     26a:	3d 00       	.word	0x003d	; ????
     26c:	7f 10       	cpse	r7, r15
     26e:	28 44       	sbci	r18, 0x48	; 72
     270:	00 00       	nop
     272:	41 7f       	andi	r20, 0xF1	; 241
     274:	40 00       	.word	0x0040	; ????
     276:	7c 04       	cpc	r7, r12
     278:	18 04       	cpc	r1, r8
     27a:	78 7c       	andi	r23, 0xC8	; 200
     27c:	08 04       	cpc	r0, r8
     27e:	04 78       	andi	r16, 0x84	; 132
     280:	38 44       	sbci	r19, 0x48	; 72
     282:	44 44       	sbci	r20, 0x44	; 68
     284:	38 7c       	andi	r19, 0xC8	; 200
     286:	14 14       	cp	r1, r4
     288:	14 08       	sbc	r1, r4
     28a:	08 14       	cp	r0, r8
     28c:	14 18       	sub	r1, r4
     28e:	7c 7c       	andi	r23, 0xCC	; 204
     290:	08 04       	cpc	r0, r8
     292:	04 08       	sbc	r0, r4
     294:	48 54       	subi	r20, 0x48	; 72
     296:	54 54       	subi	r21, 0x44	; 68
     298:	20 04       	cpc	r2, r0
     29a:	3f 44       	sbci	r19, 0x4F	; 79
     29c:	40 20       	and	r4, r0
     29e:	3c 40       	sbci	r19, 0x0C	; 12
     2a0:	40 20       	and	r4, r0
     2a2:	7c 1c       	adc	r7, r12
     2a4:	20 40       	sbci	r18, 0x00	; 0
     2a6:	20 1c       	adc	r2, r0
     2a8:	3c 40       	sbci	r19, 0x0C	; 12
     2aa:	30 40       	sbci	r19, 0x00	; 0
     2ac:	3c 44       	sbci	r19, 0x4C	; 76
     2ae:	28 10       	cpse	r2, r8
     2b0:	28 44       	sbci	r18, 0x48	; 72
     2b2:	0c 50       	subi	r16, 0x0C	; 12
     2b4:	50 50       	subi	r21, 0x00	; 0
     2b6:	3c 44       	sbci	r19, 0x4C	; 76
     2b8:	64 54       	subi	r22, 0x44	; 68
     2ba:	4c 44       	sbci	r20, 0x4C	; 76
     2bc:	00 08       	sbc	r0, r0
     2be:	36 41       	sbci	r19, 0x16	; 22
     2c0:	00 00       	nop
     2c2:	00 7f       	andi	r16, 0xF0	; 240
     2c4:	00 00       	nop
     2c6:	00 41       	sbci	r16, 0x10	; 16
     2c8:	36 08       	sbc	r3, r6
     2ca:	00 10       	cpse	r0, r0
     2cc:	08 08       	sbc	r0, r8
     2ce:	10 08       	sbc	r1, r0

000002d0 <__ctors_start>:
     2d0:	3a 1c       	adc	r3, r10

000002d2 <__ctors_end>:
     2d2:	3f 1c       	adc	r3, r15

000002d4 <__dtors_end>:
     2d4:	11 24       	eor	r1, r1
     2d6:	1f be       	out	0x3f, r1	; 63
     2d8:	cf ef       	ldi	r28, 0xFF	; 255
     2da:	d0 e4       	ldi	r29, 0x40	; 64
     2dc:	de bf       	out	0x3e, r29	; 62
     2de:	cd bf       	out	0x3d, r28	; 61

000002e0 <__do_copy_data>:
     2e0:	11 e0       	ldi	r17, 0x01	; 1
     2e2:	a0 e0       	ldi	r26, 0x00	; 0
     2e4:	b1 e0       	ldi	r27, 0x01	; 1
     2e6:	ea eb       	ldi	r30, 0xBA	; 186
     2e8:	fe e3       	ldi	r31, 0x3E	; 62
     2ea:	00 e0       	ldi	r16, 0x00	; 0
     2ec:	0b bf       	out	0x3b, r16	; 59
     2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <__do_copy_data+0x14>
     2f0:	07 90       	elpm	r0, Z+
     2f2:	0d 92       	st	X+, r0
     2f4:	a8 3e       	cpi	r26, 0xE8	; 232
     2f6:	b1 07       	cpc	r27, r17
     2f8:	d9 f7       	brne	.-10     	; 0x2f0 <__do_copy_data+0x10>

000002fa <__do_clear_bss>:
     2fa:	25 e0       	ldi	r18, 0x05	; 5
     2fc:	a8 ee       	ldi	r26, 0xE8	; 232
     2fe:	b1 e0       	ldi	r27, 0x01	; 1
     300:	01 c0       	rjmp	.+2      	; 0x304 <.do_clear_bss_start>

00000302 <.do_clear_bss_loop>:
     302:	1d 92       	st	X+, r1

00000304 <.do_clear_bss_start>:
     304:	a1 3f       	cpi	r26, 0xF1	; 241
     306:	b2 07       	cpc	r27, r18
     308:	e1 f7       	brne	.-8      	; 0x302 <.do_clear_bss_loop>

0000030a <__do_global_ctors>:
     30a:	11 e0       	ldi	r17, 0x01	; 1
     30c:	c9 e6       	ldi	r28, 0x69	; 105
     30e:	d1 e0       	ldi	r29, 0x01	; 1
     310:	04 c0       	rjmp	.+8      	; 0x31a <__do_global_ctors+0x10>
     312:	21 97       	sbiw	r28, 0x01	; 1
     314:	fe 01       	movw	r30, r28
     316:	0e 94 66 1c 	call	0x38cc	; 0x38cc <__tablejump2__>
     31a:	c8 36       	cpi	r28, 0x68	; 104
     31c:	d1 07       	cpc	r29, r17
     31e:	c9 f7       	brne	.-14     	; 0x312 <__do_global_ctors+0x8>
     320:	0e 94 2f 1a 	call	0x345e	; 0x345e <main>
     324:	0c 94 51 1f 	jmp	0x3ea2	; 0x3ea2 <__do_global_dtors>

00000328 <__bad_interrupt>:
     328:	6b ce       	rjmp	.-810    	; 0x0 <__vectors>

0000032a <power_off>:
}

static
void power_off (void)
{
	SPCR = 0;				/* Disable SPI function */
     32a:	1c bc       	out	0x2c, r1	; 44

	DDRB  &= ~((1<<PORTB7) | (1<<PORTB5) | (1<<PORTB4));	/* Set SCK/MOSI/CS as hi-z, INS#/WP as pull-up */
     32c:	84 b1       	in	r24, 0x04	; 4
     32e:	8f 74       	andi	r24, 0x4F	; 79
     330:	84 b9       	out	0x04, r24	; 4
     332:	08 95       	ret

00000334 <xchg_spi>:
static
BYTE xchg_spi (		/* Returns received data */
BYTE dat		/* Data to be sent */
)
{
	SPDR = dat;
     334:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR, SPIF);
     336:	0d b4       	in	r0, 0x2d	; 45
     338:	07 fe       	sbrs	r0, 7
     33a:	fd cf       	rjmp	.-6      	; 0x336 <xchg_spi+0x2>
	return SPDR;
     33c:	8e b5       	in	r24, 0x2e	; 46
}
     33e:	08 95       	ret

00000340 <deselect>:
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();		/* Set CS# high */
     340:	2c 9a       	sbi	0x05, 4	; 5
	xchg_spi(0xFF);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
     342:	8f ef       	ldi	r24, 0xFF	; 255
     344:	f7 cf       	rjmp	.-18     	; 0x334 <xchg_spi>
     346:	08 95       	ret

00000348 <select>:
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();		/* Set CS# low */
     348:	2c 98       	cbi	0x05, 4	; 5
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
     34a:	8f ef       	ldi	r24, 0xFF	; 255
     34c:	f3 df       	rcall	.-26     	; 0x334 <xchg_spi>
)
{
	BYTE d;


	Timer2 = wt / 10;
     34e:	82 e3       	ldi	r24, 0x32	; 50
     350:	80 93 e9 01 	sts	0x01E9, r24
	do{
		d = xchg_spi(0xFF);
     354:	8f ef       	ldi	r24, 0xFF	; 255
     356:	ee df       	rcall	.-36     	; 0x334 <xchg_spi>
	}while (d != 0xFF && Timer2);
     358:	8f 3f       	cpi	r24, 0xFF	; 255
     35a:	41 f0       	breq	.+16     	; 0x36c <select+0x24>
     35c:	80 91 e9 01 	lds	r24, 0x01E9
     360:	81 11       	cpse	r24, r1
     362:	f8 cf       	rjmp	.-16     	; 0x354 <select+0xc>
{
	CS_LOW();		/* Set CS# low */
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
	if (wait_ready(500)) return 1;	/* Wait for card ready */

	deselect();
     364:	ed df       	rcall	.-38     	; 0x340 <deselect>
	return 0;	/* Timeout */
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	08 95       	ret
static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();		/* Set CS# low */
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
	if (wait_ready(500)) return 1;	/* Wait for card ready */
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	90 e0       	ldi	r25, 0x00	; 0

	deselect();
	return 0;	/* Timeout */
}
     370:	08 95       	ret

00000372 <rcvr_datablock>:
static
int rcvr_datablock (
BYTE *buff,			/* Data buffer to store received data */
UINT btr			/* Byte count (must be multiple of 4) */
)
{
     372:	0f 93       	push	r16
     374:	1f 93       	push	r17
     376:	cf 93       	push	r28
     378:	df 93       	push	r29
     37a:	ec 01       	movw	r28, r24
     37c:	8b 01       	movw	r16, r22
	BYTE token;


	Timer1 = 20;
     37e:	84 e1       	ldi	r24, 0x14	; 20
     380:	80 93 ea 01 	sts	0x01EA, r24
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
     384:	8f ef       	ldi	r24, 0xFF	; 255
     386:	d6 df       	rcall	.-84     	; 0x334 <xchg_spi>
	} while ((token == 0xFF) && Timer1);
     388:	8f 3f       	cpi	r24, 0xFF	; 255
     38a:	39 f4       	brne	.+14     	; 0x39a <rcvr_datablock+0x28>
     38c:	90 91 ea 01 	lds	r25, 0x01EA
     390:	91 11       	cpse	r25, r1
     392:	f8 cf       	rjmp	.-16     	; 0x384 <rcvr_datablock+0x12>
	if (token != 0xFE) return 0;	/* If not valid data token, return with error */
     394:	80 e0       	ldi	r24, 0x00	; 0
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	20 c0       	rjmp	.+64     	; 0x3da <rcvr_datablock+0x68>
     39a:	8e 3f       	cpi	r24, 0xFE	; 254
     39c:	e1 f4       	brne	.+56     	; 0x3d6 <rcvr_datablock+0x64>
void rcvr_spi_multi (
BYTE *p,	/* Data buffer */
UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	cli();
     39e:	f8 94       	cli
	do {
		SPDR = 0xFF; loop_until_bit_is_set(SPSR,SPIF); *p++ = SPDR;
     3a0:	8f ef       	ldi	r24, 0xFF	; 255
     3a2:	8e bd       	out	0x2e, r24	; 46
     3a4:	0d b4       	in	r0, 0x2d	; 45
     3a6:	07 fe       	sbrs	r0, 7
     3a8:	fd cf       	rjmp	.-6      	; 0x3a4 <rcvr_datablock+0x32>
     3aa:	9e b5       	in	r25, 0x2e	; 46
     3ac:	98 83       	st	Y, r25
		SPDR = 0xFF; loop_until_bit_is_set(SPSR,SPIF); *p++ = SPDR;
     3ae:	8e bd       	out	0x2e, r24	; 46
     3b0:	0d b4       	in	r0, 0x2d	; 45
     3b2:	07 fe       	sbrs	r0, 7
     3b4:	fd cf       	rjmp	.-6      	; 0x3b0 <rcvr_datablock+0x3e>
     3b6:	22 96       	adiw	r28, 0x02	; 2
     3b8:	9e b5       	in	r25, 0x2e	; 46
     3ba:	fe 01       	movw	r30, r28
     3bc:	31 97       	sbiw	r30, 0x01	; 1
     3be:	90 83       	st	Z, r25
	} while (cnt -= 2);
     3c0:	02 50       	subi	r16, 0x02	; 2
     3c2:	11 09       	sbc	r17, r1
     3c4:	71 f7       	brne	.-36     	; 0x3a2 <rcvr_datablock+0x30>
	sei();
     3c6:	78 94       	sei
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
	if (token != 0xFE) return 0;	/* If not valid data token, return with error */

	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
     3c8:	8f ef       	ldi	r24, 0xFF	; 255
     3ca:	b4 df       	rcall	.-152    	; 0x334 <xchg_spi>
	xchg_spi(0xFF);
     3cc:	8f ef       	ldi	r24, 0xFF	; 255
     3ce:	b2 df       	rcall	.-156    	; 0x334 <xchg_spi>

	return 1;						/* Return with success */
     3d0:	81 e0       	ldi	r24, 0x01	; 1
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	02 c0       	rjmp	.+4      	; 0x3da <rcvr_datablock+0x68>

	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
	if (token != 0xFE) return 0;	/* If not valid data token, return with error */
     3d6:	80 e0       	ldi	r24, 0x00	; 0
     3d8:	90 e0       	ldi	r25, 0x00	; 0
	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
	xchg_spi(0xFF);

	return 1;						/* Return with success */
}
     3da:	df 91       	pop	r29
     3dc:	cf 91       	pop	r28
     3de:	1f 91       	pop	r17
     3e0:	0f 91       	pop	r16
     3e2:	08 95       	ret

000003e4 <send_cmd>:
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
     3e4:	ff 92       	push	r15
     3e6:	0f 93       	push	r16
     3e8:	1f 93       	push	r17
     3ea:	cf 93       	push	r28
     3ec:	df 93       	push	r29
     3ee:	c8 2f       	mov	r28, r24
     3f0:	d4 2f       	mov	r29, r20
     3f2:	15 2f       	mov	r17, r21
     3f4:	06 2f       	mov	r16, r22
     3f6:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
     3f8:	88 23       	and	r24, r24
     3fa:	4c f4       	brge	.+18     	; 0x40e <send_cmd+0x2a>
		cmd &= 0x7F;
		res = send_cmd(CMD55, 0);
     3fc:	40 e0       	ldi	r20, 0x00	; 0
     3fe:	50 e0       	ldi	r21, 0x00	; 0
     400:	ba 01       	movw	r22, r20
     402:	87 e3       	ldi	r24, 0x37	; 55
     404:	ef df       	rcall	.-34     	; 0x3e4 <send_cmd>
		if (res > 1) return res;
     406:	82 30       	cpi	r24, 0x02	; 2
     408:	08 f0       	brcs	.+2      	; 0x40c <send_cmd+0x28>
     40a:	3c c0       	rjmp	.+120    	; 0x484 <send_cmd+0xa0>
{
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
		cmd &= 0x7F;
     40c:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
		if (res > 1) return res;
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
     40e:	cc 30       	cpi	r28, 0x0C	; 12
     410:	f1 f0       	breq	.+60     	; 0x44e <send_cmd+0x6a>
		deselect();
     412:	96 df       	rcall	.-212    	; 0x340 <deselect>
		if (!select()) return 0xFF;
     414:	99 df       	rcall	.-206    	; 0x348 <select>
     416:	89 2b       	or	r24, r25
     418:	c1 f0       	breq	.+48     	; 0x44a <send_cmd+0x66>
	}

	/* Send command packet */
	xchg_spi(0x40 | cmd);				/* Start + Command index */
     41a:	8c 2f       	mov	r24, r28
     41c:	80 64       	ori	r24, 0x40	; 64
     41e:	8a df       	rcall	.-236    	; 0x334 <xchg_spi>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
     420:	8f 2d       	mov	r24, r15
     422:	88 df       	rcall	.-240    	; 0x334 <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
     424:	80 2f       	mov	r24, r16
     426:	86 df       	rcall	.-244    	; 0x334 <xchg_spi>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
     428:	81 2f       	mov	r24, r17
     42a:	84 df       	rcall	.-248    	; 0x334 <xchg_spi>
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
     42c:	8d 2f       	mov	r24, r29
     42e:	82 df       	rcall	.-252    	; 0x334 <xchg_spi>
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
     430:	cc 23       	and	r28, r28
     432:	29 f1       	breq	.+74     	; 0x47e <send_cmd+0x9a>
     434:	21 c0       	rjmp	.+66     	; 0x478 <send_cmd+0x94>
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
     436:	8f ef       	ldi	r24, 0xFF	; 255
     438:	7d df       	rcall	.-262    	; 0x334 <xchg_spi>
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
     43a:	ca e0       	ldi	r28, 0x0A	; 10

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		res = xchg_spi(0xFF);
     43c:	8f ef       	ldi	r24, 0xFF	; 255
     43e:	7a df       	rcall	.-268    	; 0x334 <xchg_spi>
	while ((res & 0x80) && --n);
     440:	88 23       	and	r24, r24
     442:	04 f5       	brge	.+64     	; 0x484 <send_cmd+0xa0>
     444:	c1 50       	subi	r28, 0x01	; 1
     446:	d1 f7       	brne	.-12     	; 0x43c <send_cmd+0x58>
     448:	1d c0       	rjmp	.+58     	; 0x484 <send_cmd+0xa0>
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
		deselect();
		if (!select()) return 0xFF;
     44a:	8f ef       	ldi	r24, 0xFF	; 255
     44c:	1b c0       	rjmp	.+54     	; 0x484 <send_cmd+0xa0>
	}

	/* Send command packet */
	xchg_spi(0x40 | cmd);				/* Start + Command index */
     44e:	8c e4       	ldi	r24, 0x4C	; 76
     450:	71 df       	rcall	.-286    	; 0x334 <xchg_spi>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
     452:	8f 2d       	mov	r24, r15
     454:	6f df       	rcall	.-290    	; 0x334 <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
     456:	80 2f       	mov	r24, r16
     458:	6d df       	rcall	.-294    	; 0x334 <xchg_spi>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
     45a:	81 2f       	mov	r24, r17
     45c:	6b df       	rcall	.-298    	; 0x334 <xchg_spi>
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
     45e:	8d 2f       	mov	r24, r29
     460:	69 df       	rcall	.-302    	; 0x334 <xchg_spi>
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);
     462:	81 e0       	ldi	r24, 0x01	; 1
     464:	67 df       	rcall	.-306    	; 0x334 <xchg_spi>

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
     466:	cc 30       	cpi	r28, 0x0C	; 12
     468:	31 f3       	breq	.-52     	; 0x436 <send_cmd+0x52>
     46a:	e7 cf       	rjmp	.-50     	; 0x43a <send_cmd+0x56>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);
     46c:	87 e8       	ldi	r24, 0x87	; 135
     46e:	62 df       	rcall	.-316    	; 0x334 <xchg_spi>
     470:	e4 cf       	rjmp	.-56     	; 0x43a <send_cmd+0x56>
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	5f df       	rcall	.-322    	; 0x334 <xchg_spi>
     476:	e1 cf       	rjmp	.-62     	; 0x43a <send_cmd+0x56>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
     478:	c8 30       	cpi	r28, 0x08	; 8
     47a:	c1 f3       	breq	.-16     	; 0x46c <send_cmd+0x88>
     47c:	fa cf       	rjmp	.-12     	; 0x472 <send_cmd+0x8e>
	xchg_spi(n);
     47e:	85 e9       	ldi	r24, 0x95	; 149
     480:	59 df       	rcall	.-334    	; 0x334 <xchg_spi>
     482:	db cf       	rjmp	.-74     	; 0x43a <send_cmd+0x56>
	do
		res = xchg_spi(0xFF);
	while ((res & 0x80) && --n);

	return res;			/* Return with the response value */
}
     484:	df 91       	pop	r29
     486:	cf 91       	pop	r28
     488:	1f 91       	pop	r17
     48a:	0f 91       	pop	r16
     48c:	ff 90       	pop	r15
     48e:	08 95       	ret

00000490 <xmit_datablock>:
static
int xmit_datablock (
const BYTE *buff,	/* 512 byte data block to be transmitted */
BYTE token			/* Data/Stop token */
)
{
     490:	1f 93       	push	r17
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	ec 01       	movw	r28, r24
     498:	16 2f       	mov	r17, r22
)
{
	BYTE d;


	Timer2 = wt / 10;
     49a:	92 e3       	ldi	r25, 0x32	; 50
     49c:	90 93 e9 01 	sts	0x01E9, r25
	do{
		d = xchg_spi(0xFF);
     4a0:	8f ef       	ldi	r24, 0xFF	; 255
     4a2:	48 df       	rcall	.-368    	; 0x334 <xchg_spi>
	}while (d != 0xFF && Timer2);
     4a4:	8f 3f       	cpi	r24, 0xFF	; 255
     4a6:	31 f0       	breq	.+12     	; 0x4b4 <xmit_datablock+0x24>
     4a8:	90 91 e9 01 	lds	r25, 0x01E9
     4ac:	91 11       	cpse	r25, r1
     4ae:	f8 cf       	rjmp	.-16     	; 0x4a0 <xmit_datablock+0x10>
)
{
	BYTE resp;


	if (!wait_ready(500)) return 0;
     4b0:	80 e0       	ldi	r24, 0x00	; 0
     4b2:	28 c0       	rjmp	.+80     	; 0x504 <xmit_datablock+0x74>

	xchg_spi(token);					/* Xmit data token */
     4b4:	81 2f       	mov	r24, r17
     4b6:	3e df       	rcall	.-388    	; 0x334 <xchg_spi>
	if (token != 0xFD) {	/* Is data token */
     4b8:	1d 3f       	cpi	r17, 0xFD	; 253
     4ba:	11 f1       	breq	.+68     	; 0x500 <xmit_datablock+0x70>
void xmit_spi_multi (
const BYTE *p,	/* Data block to be sent */
UINT cnt		/* Size of data block (must be multiple of 2) */
)
{
	cli();
     4bc:	f8 94       	cli
     4be:	9e 01       	movw	r18, r28
     4c0:	3c 5f       	subi	r19, 0xFC	; 252
	do {
		SPDR = *p++; loop_until_bit_is_set(SPSR,SPIF);
     4c2:	88 81       	ld	r24, Y
     4c4:	8e bd       	out	0x2e, r24	; 46
     4c6:	0d b4       	in	r0, 0x2d	; 45
     4c8:	07 fe       	sbrs	r0, 7
     4ca:	fd cf       	rjmp	.-6      	; 0x4c6 <xmit_datablock+0x36>
     4cc:	22 96       	adiw	r28, 0x02	; 2
     4ce:	fe 01       	movw	r30, r28
     4d0:	31 97       	sbiw	r30, 0x01	; 1
		SPDR = *p++; loop_until_bit_is_set(SPSR,SPIF);
     4d2:	80 81       	ld	r24, Z
     4d4:	8e bd       	out	0x2e, r24	; 46
     4d6:	0d b4       	in	r0, 0x2d	; 45
     4d8:	07 fe       	sbrs	r0, 7
     4da:	fd cf       	rjmp	.-6      	; 0x4d6 <xmit_datablock+0x46>
	} while (cnt -= 2);
     4dc:	2c 17       	cp	r18, r28
     4de:	3d 07       	cpc	r19, r29
     4e0:	81 f7       	brne	.-32     	; 0x4c2 <xmit_datablock+0x32>
	sei();
     4e2:	78 94       	sei
	if (!wait_ready(500)) return 0;

	xchg_spi(token);					/* Xmit data token */
	if (token != 0xFD) {	/* Is data token */
		xmit_spi_multi(buff, CLUSTERSIZE);		/* Xmit the data block to the MMC */
		xchg_spi(0xFF);					/* CRC (Dummy) */
     4e4:	8f ef       	ldi	r24, 0xFF	; 255
     4e6:	26 df       	rcall	.-436    	; 0x334 <xchg_spi>
		xchg_spi(0xFF);
     4e8:	8f ef       	ldi	r24, 0xFF	; 255
     4ea:	24 df       	rcall	.-440    	; 0x334 <xchg_spi>
		resp = xchg_spi(0xFF);			/* Reveive data response */
     4ec:	8f ef       	ldi	r24, 0xFF	; 255
     4ee:	22 df       	rcall	.-444    	; 0x334 <xchg_spi>
		if ((resp & 0x1F) != 0x05)		/* If not accepted, return with error */
     4f0:	28 2f       	mov	r18, r24
     4f2:	2f 71       	andi	r18, 0x1F	; 31
     4f4:	81 e0       	ldi	r24, 0x01	; 1
     4f6:	90 e0       	ldi	r25, 0x00	; 0
     4f8:	25 30       	cpi	r18, 0x05	; 5
     4fa:	21 f0       	breq	.+8      	; 0x504 <xmit_datablock+0x74>
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	02 c0       	rjmp	.+4      	; 0x504 <xmit_datablock+0x74>
		return 0;
	}

	return 1;
     500:	81 e0       	ldi	r24, 0x01	; 1
     502:	90 e0       	ldi	r25, 0x00	; 0
}
     504:	df 91       	pop	r29
     506:	cf 91       	pop	r28
     508:	1f 91       	pop	r17
     50a:	08 95       	ret

0000050c <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE pdrv		/* Physical drive number (0) */
)
{
     50c:	cf 92       	push	r12
     50e:	df 92       	push	r13
     510:	ef 92       	push	r14
     512:	ff 92       	push	r15
     514:	0f 93       	push	r16
     516:	1f 93       	push	r17
     518:	cf 93       	push	r28
     51a:	df 93       	push	r29
     51c:	00 d0       	rcall	.+0      	; 0x51e <disk_initialize+0x12>
     51e:	00 d0       	rcall	.+0      	; 0x520 <disk_initialize+0x14>
     520:	cd b7       	in	r28, 0x3d	; 61
     522:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
     524:	81 11       	cpse	r24, r1
     526:	9a c0       	rjmp	.+308    	; 0x65c <disk_initialize+0x150>
	power_off();						/* Turn off the socket power to reset the card */
     528:	00 df       	rcall	.-512    	; 0x32a <power_off>
	if (Stat & (1<<STA_NODISK)) return Stat;	/* No card in the socket */
     52a:	80 91 00 01 	lds	r24, 0x0100
     52e:	82 ff       	sbrs	r24, 2
     530:	03 c0       	rjmp	.+6      	; 0x538 <disk_initialize+0x2c>
     532:	80 91 00 01 	lds	r24, 0x0100
     536:	9d c0       	rjmp	.+314    	; 0x672 <disk_initialize+0x166>

static
void power_on (void)
{
	//PORTB |= (1<<PORTB7) | (1<<PORTB5) | (1<<PORTB4);	/* Configure SCK/MOSI/CS as output */
	DDRB |= (1<<PORTB7) | (1<<PORTB5) | (1<<PORTB4);
     538:	84 b1       	in	r24, 0x04	; 4
     53a:	80 6b       	ori	r24, 0xB0	; 176
     53c:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1<<PORTB6);
     53e:	26 98       	cbi	0x04, 6	; 4

	SPSR = 0x01;			/* SPI 2x mode */
     540:	81 e0       	ldi	r24, 0x01	; 1
     542:	8d bd       	out	0x2d, r24	; 45
	SPCR = 0x52;			/* Enable SPI function in mode 0 */
     544:	82 e5       	ldi	r24, 0x52	; 82
     546:	8c bd       	out	0x2c, r24	; 44
     548:	1a e0       	ldi	r17, 0x0A	; 10
	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
	power_off();						/* Turn off the socket power to reset the card */
	if (Stat & (1<<STA_NODISK)) return Stat;	/* No card in the socket */
	power_on();							/* Turn on the socket power */
//	FCLK_SLOW();
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */
     54a:	8f ef       	ldi	r24, 0xFF	; 255
     54c:	f3 de       	rcall	.-538    	; 0x334 <xchg_spi>
     54e:	11 50       	subi	r17, 0x01	; 1
     550:	e1 f7       	brne	.-8      	; 0x54a <disk_initialize+0x3e>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
     552:	40 e0       	ldi	r20, 0x00	; 0
     554:	50 e0       	ldi	r21, 0x00	; 0
     556:	ba 01       	movw	r22, r20
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	44 df       	rcall	.-376    	; 0x3e4 <send_cmd>
     55c:	81 30       	cpi	r24, 0x01	; 1
     55e:	09 f0       	breq	.+2      	; 0x562 <disk_initialize+0x56>
     560:	84 c0       	rjmp	.+264    	; 0x66a <disk_initialize+0x15e>
		Timer1 = 100;						/* Initialization timeout of 1000 msec */
     562:	84 e6       	ldi	r24, 0x64	; 100
     564:	80 93 ea 01 	sts	0x01EA, r24
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
     568:	4a ea       	ldi	r20, 0xAA	; 170
     56a:	51 e0       	ldi	r21, 0x01	; 1
     56c:	60 e0       	ldi	r22, 0x00	; 0
     56e:	70 e0       	ldi	r23, 0x00	; 0
     570:	88 e0       	ldi	r24, 0x08	; 8
     572:	38 df       	rcall	.-400    	; 0x3e4 <send_cmd>
     574:	81 30       	cpi	r24, 0x01	; 1
     576:	09 f0       	breq	.+2      	; 0x57a <disk_initialize+0x6e>
     578:	3f c0       	rjmp	.+126    	; 0x5f8 <disk_initialize+0xec>
     57a:	ce 01       	movw	r24, r28
     57c:	01 96       	adiw	r24, 0x01	; 1
     57e:	6c 01       	movw	r12, r24
     580:	7e 01       	movw	r14, r28
     582:	95 e0       	ldi	r25, 0x05	; 5
     584:	e9 0e       	add	r14, r25
     586:	f1 1c       	adc	r15, r1
     588:	86 01       	movw	r16, r12
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
     58a:	8f ef       	ldi	r24, 0xFF	; 255
     58c:	d3 de       	rcall	.-602    	; 0x334 <xchg_spi>
     58e:	f8 01       	movw	r30, r16
     590:	81 93       	st	Z+, r24
     592:	8f 01       	movw	r16, r30
     594:	ee 15       	cp	r30, r14
     596:	ff 05       	cpc	r31, r15
     598:	c1 f7       	brne	.-16     	; 0x58a <disk_initialize+0x7e>
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
     59a:	8b 81       	ldd	r24, Y+3	; 0x03
     59c:	81 30       	cpi	r24, 0x01	; 1
     59e:	09 f0       	breq	.+2      	; 0x5a2 <disk_initialize+0x96>
     5a0:	64 c0       	rjmp	.+200    	; 0x66a <disk_initialize+0x15e>
     5a2:	8c 81       	ldd	r24, Y+4	; 0x04
     5a4:	8a 3a       	cpi	r24, 0xAA	; 170
     5a6:	09 f0       	breq	.+2      	; 0x5aa <disk_initialize+0x9e>
     5a8:	60 c0       	rjmp	.+192    	; 0x66a <disk_initialize+0x15e>
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
     5aa:	80 91 ea 01 	lds	r24, 0x01EA
     5ae:	88 23       	and	r24, r24
     5b0:	41 f0       	breq	.+16     	; 0x5c2 <disk_initialize+0xb6>
     5b2:	40 e0       	ldi	r20, 0x00	; 0
     5b4:	50 e0       	ldi	r21, 0x00	; 0
     5b6:	60 e0       	ldi	r22, 0x00	; 0
     5b8:	70 e4       	ldi	r23, 0x40	; 64
     5ba:	89 ea       	ldi	r24, 0xA9	; 169
     5bc:	13 df       	rcall	.-474    	; 0x3e4 <send_cmd>
     5be:	81 11       	cpse	r24, r1
     5c0:	f4 cf       	rjmp	.-24     	; 0x5aa <disk_initialize+0x9e>
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
     5c2:	80 91 ea 01 	lds	r24, 0x01EA
     5c6:	88 23       	and	r24, r24
     5c8:	09 f4       	brne	.+2      	; 0x5cc <disk_initialize+0xc0>
     5ca:	4f c0       	rjmp	.+158    	; 0x66a <disk_initialize+0x15e>
     5cc:	40 e0       	ldi	r20, 0x00	; 0
     5ce:	50 e0       	ldi	r21, 0x00	; 0
     5d0:	ba 01       	movw	r22, r20
     5d2:	8a e3       	ldi	r24, 0x3A	; 58
     5d4:	07 df       	rcall	.-498    	; 0x3e4 <send_cmd>
     5d6:	81 11       	cpse	r24, r1
     5d8:	48 c0       	rjmp	.+144    	; 0x66a <disk_initialize+0x15e>
     5da:	76 01       	movw	r14, r12
     5dc:	14 e0       	ldi	r17, 0x04	; 4
     5de:	1c 0d       	add	r17, r12
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
     5e0:	8f ef       	ldi	r24, 0xFF	; 255
     5e2:	a8 de       	rcall	.-688    	; 0x334 <xchg_spi>
     5e4:	f7 01       	movw	r30, r14
     5e6:	81 93       	st	Z+, r24
     5e8:	7f 01       	movw	r14, r30
     5ea:	1e 13       	cpse	r17, r30
     5ec:	f9 cf       	rjmp	.-14     	; 0x5e0 <disk_initialize+0xd4>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
     5ee:	89 81       	ldd	r24, Y+1	; 0x01
     5f0:	86 fd       	sbrc	r24, 6
     5f2:	36 c0       	rjmp	.+108    	; 0x660 <disk_initialize+0x154>
     5f4:	84 e0       	ldi	r24, 0x04	; 4
     5f6:	35 c0       	rjmp	.+106    	; 0x662 <disk_initialize+0x156>
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
     5f8:	40 e0       	ldi	r20, 0x00	; 0
     5fa:	50 e0       	ldi	r21, 0x00	; 0
     5fc:	ba 01       	movw	r22, r20
     5fe:	89 ea       	ldi	r24, 0xA9	; 169
     600:	f1 de       	rcall	.-542    	; 0x3e4 <send_cmd>
     602:	82 30       	cpi	r24, 0x02	; 2
     604:	18 f0       	brcs	.+6      	; 0x60c <disk_initialize+0x100>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
     606:	01 e0       	ldi	r16, 0x01	; 1
     608:	11 e0       	ldi	r17, 0x01	; 1
     60a:	02 c0       	rjmp	.+4      	; 0x610 <disk_initialize+0x104>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
     60c:	02 e0       	ldi	r16, 0x02	; 2
     60e:	19 ea       	ldi	r17, 0xA9	; 169
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
			}
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
     610:	90 91 ea 01 	lds	r25, 0x01EA
     614:	99 23       	and	r25, r25
     616:	39 f0       	breq	.+14     	; 0x626 <disk_initialize+0x11a>
     618:	40 e0       	ldi	r20, 0x00	; 0
     61a:	50 e0       	ldi	r21, 0x00	; 0
     61c:	ba 01       	movw	r22, r20
     61e:	81 2f       	mov	r24, r17
     620:	e1 de       	rcall	.-574    	; 0x3e4 <send_cmd>
     622:	81 11       	cpse	r24, r1
     624:	f5 cf       	rjmp	.-22     	; 0x610 <disk_initialize+0x104>
			if (!Timer1 || send_cmd(CMD16, CLUSTERSIZE) != 0)	/* Set R/W block length to 512 */
     626:	80 91 ea 01 	lds	r24, 0x01EA
     62a:	88 23       	and	r24, r24
     62c:	f1 f0       	breq	.+60     	; 0x66a <disk_initialize+0x15e>
     62e:	40 e0       	ldi	r20, 0x00	; 0
     630:	54 e0       	ldi	r21, 0x04	; 4
     632:	60 e0       	ldi	r22, 0x00	; 0
     634:	70 e0       	ldi	r23, 0x00	; 0
     636:	80 e1       	ldi	r24, 0x10	; 16
     638:	d5 de       	rcall	.-598    	; 0x3e4 <send_cmd>
     63a:	81 11       	cpse	r24, r1
     63c:	16 c0       	rjmp	.+44     	; 0x66a <disk_initialize+0x15e>
				ty = 0;
		}
	}
	CardType = ty;
     63e:	00 93 e8 01 	sts	0x01E8, r16
	deselect();
     642:	7e de       	rcall	.-772    	; 0x340 <deselect>

	if (ty) {			/* Initialization succeded */
     644:	00 23       	and	r16, r16
     646:	31 f0       	breq	.+12     	; 0x654 <disk_initialize+0x148>
		Stat &= ~STA_NOINIT;		/* Clear STA_NOINIT */
     648:	80 91 00 01 	lds	r24, 0x0100
     64c:	8e 7f       	andi	r24, 0xFE	; 254
     64e:	80 93 00 01 	sts	0x0100, r24
     652:	01 c0       	rjmp	.+2      	; 0x656 <disk_initialize+0x14a>
//		FCLK_FAST();
	} else {			/* Initialization failed */
		power_off();
     654:	6a de       	rcall	.-812    	; 0x32a <power_off>
	}

	return Stat;
     656:	80 91 00 01 	lds	r24, 0x0100
     65a:	0b c0       	rjmp	.+22     	; 0x672 <disk_initialize+0x166>
)
{
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
     65c:	81 e0       	ldi	r24, 0x01	; 1
     65e:	09 c0       	rjmp	.+18     	; 0x672 <disk_initialize+0x166>
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
     660:	8c e0       	ldi	r24, 0x0C	; 12
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, CLUSTERSIZE) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
     662:	80 93 e8 01 	sts	0x01E8, r24
	deselect();
     666:	6c de       	rcall	.-808    	; 0x340 <deselect>
     668:	ef cf       	rjmp	.-34     	; 0x648 <disk_initialize+0x13c>
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, CLUSTERSIZE) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
     66a:	10 92 e8 01 	sts	0x01E8, r1
	deselect();
     66e:	68 de       	rcall	.-816    	; 0x340 <deselect>
     670:	f1 cf       	rjmp	.-30     	; 0x654 <disk_initialize+0x148>
	} else {			/* Initialization failed */
		power_off();
	}

	return Stat;
}
     672:	0f 90       	pop	r0
     674:	0f 90       	pop	r0
     676:	0f 90       	pop	r0
     678:	0f 90       	pop	r0
     67a:	df 91       	pop	r29
     67c:	cf 91       	pop	r28
     67e:	1f 91       	pop	r17
     680:	0f 91       	pop	r16
     682:	ff 90       	pop	r15
     684:	ef 90       	pop	r14
     686:	df 90       	pop	r13
     688:	cf 90       	pop	r12
     68a:	08 95       	ret

0000068c <disk_status>:

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
     68c:	81 11       	cpse	r24, r1
     68e:	03 c0       	rjmp	.+6      	; 0x696 <disk_status+0xa>
	return Stat;
     690:	80 91 00 01 	lds	r24, 0x0100
     694:	08 95       	ret

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
     696:	81 e0       	ldi	r24, 0x01	; 1
	return Stat;
}
     698:	08 95       	ret

0000069a <disk_read>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
     69a:	ff 92       	push	r15
     69c:	0f 93       	push	r16
     69e:	1f 93       	push	r17
     6a0:	cf 93       	push	r28
     6a2:	df 93       	push	r29
     6a4:	eb 01       	movw	r28, r22
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
     6a6:	81 11       	cpse	r24, r1
     6a8:	3f c0       	rjmp	.+126    	; 0x728 <disk_read+0x8e>
     6aa:	01 15       	cp	r16, r1
     6ac:	11 05       	cpc	r17, r1
     6ae:	09 f4       	brne	.+2      	; 0x6b2 <disk_read+0x18>
     6b0:	3d c0       	rjmp	.+122    	; 0x72c <disk_read+0x92>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     6b2:	80 91 00 01 	lds	r24, 0x0100
     6b6:	80 fd       	sbrc	r24, 0
     6b8:	3b c0       	rjmp	.+118    	; 0x730 <disk_read+0x96>

	if (!(CardType & CT_BLOCK)) sector *= CLUSTERSIZE;	/* Convert to byte address if needed */
     6ba:	80 91 e8 01 	lds	r24, 0x01E8
     6be:	83 fd       	sbrc	r24, 3
     6c0:	09 c0       	rjmp	.+18     	; 0x6d4 <disk_read+0x3a>
     6c2:	01 2e       	mov	r0, r17
     6c4:	1a e0       	ldi	r17, 0x0A	; 10
     6c6:	22 0f       	add	r18, r18
     6c8:	33 1f       	adc	r19, r19
     6ca:	44 1f       	adc	r20, r20
     6cc:	55 1f       	adc	r21, r21
     6ce:	1a 95       	dec	r17
     6d0:	d1 f7       	brne	.-12     	; 0x6c6 <disk_read+0x2c>
     6d2:	10 2d       	mov	r17, r0

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
     6d4:	02 30       	cpi	r16, 0x02	; 2
     6d6:	11 05       	cpc	r17, r1
     6d8:	28 f4       	brcc	.+10     	; 0x6e4 <disk_read+0x4a>
     6da:	0f 2e       	mov	r0, r31
     6dc:	f1 e1       	ldi	r31, 0x11	; 17
     6de:	ff 2e       	mov	r15, r31
     6e0:	f0 2d       	mov	r31, r0
     6e2:	04 c0       	rjmp	.+8      	; 0x6ec <disk_read+0x52>
     6e4:	0f 2e       	mov	r0, r31
     6e6:	f2 e1       	ldi	r31, 0x12	; 18
     6e8:	ff 2e       	mov	r15, r31
     6ea:	f0 2d       	mov	r31, r0
	if (send_cmd(cmd, sector) == 0) {
     6ec:	ba 01       	movw	r22, r20
     6ee:	a9 01       	movw	r20, r18
     6f0:	8f 2d       	mov	r24, r15
     6f2:	78 de       	rcall	.-784    	; 0x3e4 <send_cmd>
     6f4:	81 11       	cpse	r24, r1
     6f6:	12 c0       	rjmp	.+36     	; 0x71c <disk_read+0x82>
		do {
			if (!rcvr_datablock(buff, CLUSTERSIZE)) break;
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	74 e0       	ldi	r23, 0x04	; 4
     6fc:	ce 01       	movw	r24, r28
     6fe:	39 de       	rcall	.-910    	; 0x372 <rcvr_datablock>
     700:	89 2b       	or	r24, r25
     702:	21 f0       	breq	.+8      	; 0x70c <disk_read+0x72>
			buff += CLUSTERSIZE;
     704:	dc 5f       	subi	r29, 0xFC	; 252
		} while (--count);
     706:	01 50       	subi	r16, 0x01	; 1
     708:	11 09       	sbc	r17, r1
     70a:	b1 f7       	brne	.-20     	; 0x6f8 <disk_read+0x5e>
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
     70c:	82 e1       	ldi	r24, 0x12	; 18
     70e:	f8 12       	cpse	r15, r24
     710:	05 c0       	rjmp	.+10     	; 0x71c <disk_read+0x82>
     712:	40 e0       	ldi	r20, 0x00	; 0
     714:	50 e0       	ldi	r21, 0x00	; 0
     716:	ba 01       	movw	r22, r20
     718:	8c e0       	ldi	r24, 0x0C	; 12
     71a:	64 de       	rcall	.-824    	; 0x3e4 <send_cmd>
	}
	deselect();
     71c:	11 de       	rcall	.-990    	; 0x340 <deselect>

	return count ? RES_ERROR : RES_OK;
     71e:	81 e0       	ldi	r24, 0x01	; 1
     720:	01 2b       	or	r16, r17
     722:	39 f4       	brne	.+14     	; 0x732 <disk_read+0x98>
     724:	80 e0       	ldi	r24, 0x00	; 0
     726:	05 c0       	rjmp	.+10     	; 0x732 <disk_read+0x98>
)
{
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
     728:	84 e0       	ldi	r24, 0x04	; 4
     72a:	03 c0       	rjmp	.+6      	; 0x732 <disk_read+0x98>
     72c:	84 e0       	ldi	r24, 0x04	; 4
     72e:	01 c0       	rjmp	.+2      	; 0x732 <disk_read+0x98>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     730:	83 e0       	ldi	r24, 0x03	; 3
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
     732:	df 91       	pop	r29
     734:	cf 91       	pop	r28
     736:	1f 91       	pop	r17
     738:	0f 91       	pop	r16
     73a:	ff 90       	pop	r15
     73c:	08 95       	ret

0000073e <disk_write>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
     73e:	cf 92       	push	r12
     740:	df 92       	push	r13
     742:	ef 92       	push	r14
     744:	ff 92       	push	r15
     746:	0f 93       	push	r16
     748:	1f 93       	push	r17
     74a:	cf 93       	push	r28
     74c:	df 93       	push	r29
     74e:	eb 01       	movw	r28, r22
     750:	69 01       	movw	r12, r18
     752:	7a 01       	movw	r14, r20
	if (pdrv || !count) return RES_PARERR;
     754:	81 11       	cpse	r24, r1
     756:	51 c0       	rjmp	.+162    	; 0x7fa <disk_write+0xbc>
     758:	01 15       	cp	r16, r1
     75a:	11 05       	cpc	r17, r1
     75c:	09 f4       	brne	.+2      	; 0x760 <disk_write+0x22>
     75e:	4f c0       	rjmp	.+158    	; 0x7fe <disk_write+0xc0>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     760:	80 91 00 01 	lds	r24, 0x0100
     764:	80 fd       	sbrc	r24, 0
     766:	4d c0       	rjmp	.+154    	; 0x802 <disk_write+0xc4>
	if (Stat & STA_PROTECT) return RES_WRPRT;
     768:	80 91 00 01 	lds	r24, 0x0100
     76c:	82 fd       	sbrc	r24, 2
     76e:	4b c0       	rjmp	.+150    	; 0x806 <disk_write+0xc8>

	if (!(CardType & CT_BLOCK)) sector *= CLUSTERSIZE;	/* Convert to byte address if needed */
     770:	80 91 e8 01 	lds	r24, 0x01E8
     774:	83 fd       	sbrc	r24, 3
     776:	09 c0       	rjmp	.+18     	; 0x78a <disk_write+0x4c>
     778:	0b 2e       	mov	r0, r27
     77a:	ba e0       	ldi	r27, 0x0A	; 10
     77c:	cc 0c       	add	r12, r12
     77e:	dd 1c       	adc	r13, r13
     780:	ee 1c       	adc	r14, r14
     782:	ff 1c       	adc	r15, r15
     784:	ba 95       	dec	r27
     786:	d1 f7       	brne	.-12     	; 0x77c <disk_write+0x3e>
     788:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block write */
     78a:	01 30       	cpi	r16, 0x01	; 1
     78c:	11 05       	cpc	r17, r1
     78e:	89 f4       	brne	.+34     	; 0x7b2 <disk_write+0x74>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
     790:	b7 01       	movw	r22, r14
     792:	a6 01       	movw	r20, r12
     794:	88 e1       	ldi	r24, 0x18	; 24
     796:	26 de       	rcall	.-948    	; 0x3e4 <send_cmd>
     798:	81 11       	cpse	r24, r1
     79a:	29 c0       	rjmp	.+82     	; 0x7ee <disk_write+0xb0>
			&& xmit_datablock(buff, 0xFE))
     79c:	6e ef       	ldi	r22, 0xFE	; 254
     79e:	ce 01       	movw	r24, r28
     7a0:	77 de       	rcall	.-786    	; 0x490 <xmit_datablock>
     7a2:	31 e0       	ldi	r19, 0x01	; 1
     7a4:	20 e0       	ldi	r18, 0x00	; 0
     7a6:	89 2b       	or	r24, r25
     7a8:	09 f0       	breq	.+2      	; 0x7ac <disk_write+0x6e>
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	03 2f       	mov	r16, r19
     7ae:	12 2f       	mov	r17, r18
     7b0:	1e c0       	rjmp	.+60     	; 0x7ee <disk_write+0xb0>
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
     7b2:	86 70       	andi	r24, 0x06	; 6
     7b4:	29 f0       	breq	.+10     	; 0x7c0 <disk_write+0x82>
     7b6:	a8 01       	movw	r20, r16
     7b8:	60 e0       	ldi	r22, 0x00	; 0
     7ba:	70 e0       	ldi	r23, 0x00	; 0
     7bc:	87 e9       	ldi	r24, 0x97	; 151
     7be:	12 de       	rcall	.-988    	; 0x3e4 <send_cmd>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
     7c0:	b7 01       	movw	r22, r14
     7c2:	a6 01       	movw	r20, r12
     7c4:	89 e1       	ldi	r24, 0x19	; 25
     7c6:	0e de       	rcall	.-996    	; 0x3e4 <send_cmd>
     7c8:	81 11       	cpse	r24, r1
     7ca:	11 c0       	rjmp	.+34     	; 0x7ee <disk_write+0xb0>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
     7cc:	6c ef       	ldi	r22, 0xFC	; 252
     7ce:	ce 01       	movw	r24, r28
     7d0:	5f de       	rcall	.-834    	; 0x490 <xmit_datablock>
     7d2:	89 2b       	or	r24, r25
     7d4:	21 f0       	breq	.+8      	; 0x7de <disk_write+0xa0>
				buff += CLUSTERSIZE;
     7d6:	dc 5f       	subi	r29, 0xFC	; 252
			} while (--count);
     7d8:	01 50       	subi	r16, 0x01	; 1
     7da:	11 09       	sbc	r17, r1
     7dc:	b9 f7       	brne	.-18     	; 0x7cc <disk_write+0x8e>
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
     7de:	6d ef       	ldi	r22, 0xFD	; 253
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	55 de       	rcall	.-854    	; 0x490 <xmit_datablock>
     7e6:	89 2b       	or	r24, r25
     7e8:	11 f4       	brne	.+4      	; 0x7ee <disk_write+0xb0>
				count = 1;
     7ea:	01 e0       	ldi	r16, 0x01	; 1
     7ec:	10 e0       	ldi	r17, 0x00	; 0
		}
	}
	deselect();
     7ee:	a8 dd       	rcall	.-1200   	; 0x340 <deselect>

	return count ? RES_ERROR : RES_OK;
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	01 2b       	or	r16, r17
     7f4:	49 f4       	brne	.+18     	; 0x808 <disk_write+0xca>
     7f6:	80 e0       	ldi	r24, 0x00	; 0
     7f8:	07 c0       	rjmp	.+14     	; 0x808 <disk_write+0xca>
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
	if (pdrv || !count) return RES_PARERR;
     7fa:	84 e0       	ldi	r24, 0x04	; 4
     7fc:	05 c0       	rjmp	.+10     	; 0x808 <disk_write+0xca>
     7fe:	84 e0       	ldi	r24, 0x04	; 4
     800:	03 c0       	rjmp	.+6      	; 0x808 <disk_write+0xca>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     802:	83 e0       	ldi	r24, 0x03	; 3
     804:	01 c0       	rjmp	.+2      	; 0x808 <disk_write+0xca>
	if (Stat & STA_PROTECT) return RES_WRPRT;
     806:	82 e0       	ldi	r24, 0x02	; 2
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
     808:	df 91       	pop	r29
     80a:	cf 91       	pop	r28
     80c:	1f 91       	pop	r17
     80e:	0f 91       	pop	r16
     810:	ff 90       	pop	r15
     812:	ef 90       	pop	r14
     814:	df 90       	pop	r13
     816:	cf 90       	pop	r12
     818:	08 95       	ret

0000081a <disk_ioctl>:
DRESULT disk_ioctl (
	BYTE pdrv,		/* Physical drive nmuber (0) */
	BYTE cmd,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
     81a:	ef 92       	push	r14
     81c:	ff 92       	push	r15
     81e:	0f 93       	push	r16
     820:	1f 93       	push	r17
     822:	cf 93       	push	r28
     824:	df 93       	push	r29
     826:	cd b7       	in	r28, 0x3d	; 61
     828:	de b7       	in	r29, 0x3e	; 62
     82a:	60 97       	sbiw	r28, 0x10	; 16
     82c:	0f b6       	in	r0, 0x3f	; 63
     82e:	f8 94       	cli
     830:	de bf       	out	0x3e, r29	; 62
     832:	0f be       	out	0x3f, r0	; 63
     834:	cd bf       	out	0x3d, r28	; 61
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
     836:	81 11       	cpse	r24, r1
     838:	7c c1       	rjmp	.+760    	; 0xb32 <disk_ioctl+0x318>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
     83a:	80 91 00 01 	lds	r24, 0x0100
     83e:	80 fd       	sbrc	r24, 0
     840:	7a c1       	rjmp	.+756    	; 0xb36 <disk_ioctl+0x31c>
     842:	7a 01       	movw	r14, r20

	switch (cmd) {
     844:	06 2f       	mov	r16, r22
     846:	10 e0       	ldi	r17, 0x00	; 0
     848:	07 33       	cpi	r16, 0x37	; 55
     84a:	11 05       	cpc	r17, r1
     84c:	08 f0       	brcs	.+2      	; 0x850 <disk_ioctl+0x36>
     84e:	59 c1       	rjmp	.+690    	; 0xb02 <disk_ioctl+0x2e8>
     850:	f8 01       	movw	r30, r16
     852:	ea 5b       	subi	r30, 0xBA	; 186
     854:	ff 4f       	sbci	r31, 0xFF	; 255
     856:	0c 94 66 1c 	jmp	0x38cc	; 0x38cc <__tablejump2__>
	case CTRL_SYNC :		/* Make sure that no pending write process. Do not remove this or written sector might not left updated. */
		if (select()) res = RES_OK;
     85a:	76 dd       	rcall	.-1300   	; 0x348 <select>
     85c:	11 e0       	ldi	r17, 0x01	; 1
     85e:	89 2b       	or	r24, r25
     860:	09 f4       	brne	.+2      	; 0x864 <disk_ioctl+0x4a>
     862:	64 c1       	rjmp	.+712    	; 0xb2c <disk_ioctl+0x312>
     864:	10 e0       	ldi	r17, 0x00	; 0
     866:	62 c1       	rjmp	.+708    	; 0xb2c <disk_ioctl+0x312>
		break;

	case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
     868:	40 e0       	ldi	r20, 0x00	; 0
     86a:	50 e0       	ldi	r21, 0x00	; 0
     86c:	ba 01       	movw	r22, r20
     86e:	89 e0       	ldi	r24, 0x09	; 9
     870:	b9 dd       	rcall	.-1166   	; 0x3e4 <send_cmd>
     872:	81 11       	cpse	r24, r1
     874:	48 c1       	rjmp	.+656    	; 0xb06 <disk_ioctl+0x2ec>
     876:	60 e1       	ldi	r22, 0x10	; 16
     878:	70 e0       	ldi	r23, 0x00	; 0
     87a:	ce 01       	movw	r24, r28
     87c:	01 96       	adiw	r24, 0x01	; 1
     87e:	79 dd       	rcall	.-1294   	; 0x372 <rcvr_datablock>
     880:	89 2b       	or	r24, r25
     882:	09 f4       	brne	.+2      	; 0x886 <disk_ioctl+0x6c>
     884:	42 c1       	rjmp	.+644    	; 0xb0a <disk_ioctl+0x2f0>
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
     886:	89 81       	ldd	r24, Y+1	; 0x01
     888:	82 95       	swap	r24
     88a:	86 95       	lsr	r24
     88c:	86 95       	lsr	r24
     88e:	83 70       	andi	r24, 0x03	; 3
     890:	81 30       	cpi	r24, 0x01	; 1
     892:	31 f5       	brne	.+76     	; 0x8e0 <disk_ioctl+0xc6>
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
     894:	88 85       	ldd	r24, Y+8	; 0x08
     896:	8f 73       	andi	r24, 0x3F	; 63
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	a0 e0       	ldi	r26, 0x00	; 0
     89c:	b0 e0       	ldi	r27, 0x00	; 0
     89e:	dc 01       	movw	r26, r24
     8a0:	99 27       	eor	r25, r25
     8a2:	88 27       	eor	r24, r24
     8a4:	01 96       	adiw	r24, 0x01	; 1
     8a6:	a1 1d       	adc	r26, r1
     8a8:	b1 1d       	adc	r27, r1
     8aa:	29 85       	ldd	r18, Y+9	; 0x09
     8ac:	30 e0       	ldi	r19, 0x00	; 0
     8ae:	32 2f       	mov	r19, r18
     8b0:	22 27       	eor	r18, r18
     8b2:	4a 85       	ldd	r20, Y+10	; 0x0a
     8b4:	24 0f       	add	r18, r20
     8b6:	31 1d       	adc	r19, r1
     8b8:	82 0f       	add	r24, r18
     8ba:	93 1f       	adc	r25, r19
     8bc:	a1 1d       	adc	r26, r1
     8be:	b1 1d       	adc	r27, r1
				*(DWORD*)buff = csize << 10;
     8c0:	07 2e       	mov	r0, r23
     8c2:	7a e0       	ldi	r23, 0x0A	; 10
     8c4:	88 0f       	add	r24, r24
     8c6:	99 1f       	adc	r25, r25
     8c8:	aa 1f       	adc	r26, r26
     8ca:	bb 1f       	adc	r27, r27
     8cc:	7a 95       	dec	r23
     8ce:	d1 f7       	brne	.-12     	; 0x8c4 <disk_ioctl+0xaa>
     8d0:	70 2d       	mov	r23, r0
     8d2:	f7 01       	movw	r30, r14
     8d4:	80 83       	st	Z, r24
     8d6:	91 83       	std	Z+1, r25	; 0x01
     8d8:	a2 83       	std	Z+2, r26	; 0x02
     8da:	b3 83       	std	Z+3, r27	; 0x03
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
			}
			res = RES_OK;
     8dc:	10 e0       	ldi	r17, 0x00	; 0
     8de:	26 c1       	rjmp	.+588    	; 0xb2c <disk_ioctl+0x312>
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
     8e0:	89 85       	ldd	r24, Y+9	; 0x09
     8e2:	82 95       	swap	r24
     8e4:	86 95       	lsr	r24
     8e6:	86 95       	lsr	r24
     8e8:	83 70       	andi	r24, 0x03	; 3
     8ea:	28 85       	ldd	r18, Y+8	; 0x08
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	f4 e0       	ldi	r31, 0x04	; 4
     8f0:	2f 9f       	mul	r18, r31
     8f2:	80 0d       	add	r24, r0
     8f4:	91 1d       	adc	r25, r1
     8f6:	11 24       	eor	r1, r1
     8f8:	9c 01       	movw	r18, r24
     8fa:	2f 5f       	subi	r18, 0xFF	; 255
     8fc:	3f 4f       	sbci	r19, 0xFF	; 255
     8fe:	8f 81       	ldd	r24, Y+7	; 0x07
     900:	83 70       	andi	r24, 0x03	; 3
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	98 2f       	mov	r25, r24
     906:	88 27       	eor	r24, r24
     908:	99 0f       	add	r25, r25
     90a:	99 0f       	add	r25, r25
     90c:	82 0f       	add	r24, r18
     90e:	93 1f       	adc	r25, r19
     910:	a0 e0       	ldi	r26, 0x00	; 0
     912:	b0 e0       	ldi	r27, 0x00	; 0
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
     914:	3e 81       	ldd	r19, Y+6	; 0x06
     916:	3f 70       	andi	r19, 0x0F	; 15
     918:	2b 85       	ldd	r18, Y+11	; 0x0b
     91a:	22 1f       	adc	r18, r18
     91c:	22 27       	eor	r18, r18
     91e:	22 1f       	adc	r18, r18
     920:	32 0f       	add	r19, r18
     922:	2a 85       	ldd	r18, Y+10	; 0x0a
     924:	23 70       	andi	r18, 0x03	; 3
     926:	22 0f       	add	r18, r18
     928:	23 0f       	add	r18, r19
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
     92a:	27 50       	subi	r18, 0x07	; 7
     92c:	04 c0       	rjmp	.+8      	; 0x936 <disk_ioctl+0x11c>
     92e:	88 0f       	add	r24, r24
     930:	99 1f       	adc	r25, r25
     932:	aa 1f       	adc	r26, r26
     934:	bb 1f       	adc	r27, r27
     936:	2a 95       	dec	r18
     938:	d2 f7       	brpl	.-12     	; 0x92e <disk_ioctl+0x114>
     93a:	f7 01       	movw	r30, r14
     93c:	80 83       	st	Z, r24
     93e:	91 83       	std	Z+1, r25	; 0x01
     940:	a2 83       	std	Z+2, r26	; 0x02
     942:	b3 83       	std	Z+3, r27	; 0x03
			}
			res = RES_OK;
     944:	10 e0       	ldi	r17, 0x00	; 0
     946:	f2 c0       	rjmp	.+484    	; 0xb2c <disk_ioctl+0x312>
		}
		break;

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
     948:	10 91 e8 01 	lds	r17, 0x01E8
     94c:	12 ff       	sbrs	r17, 2
     94e:	2a c0       	rjmp	.+84     	; 0x9a4 <disk_ioctl+0x18a>
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
     950:	40 e0       	ldi	r20, 0x00	; 0
     952:	50 e0       	ldi	r21, 0x00	; 0
     954:	ba 01       	movw	r22, r20
     956:	8d e8       	ldi	r24, 0x8D	; 141
     958:	45 dd       	rcall	.-1398   	; 0x3e4 <send_cmd>
     95a:	81 11       	cpse	r24, r1
     95c:	d8 c0       	rjmp	.+432    	; 0xb0e <disk_ioctl+0x2f4>
				xchg_spi(0xFF);
     95e:	8f ef       	ldi	r24, 0xFF	; 255
     960:	e9 dc       	rcall	.-1582   	; 0x334 <xchg_spi>
				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
     962:	60 e1       	ldi	r22, 0x10	; 16
     964:	70 e0       	ldi	r23, 0x00	; 0
     966:	ce 01       	movw	r24, r28
     968:	01 96       	adiw	r24, 0x01	; 1
     96a:	03 dd       	rcall	.-1530   	; 0x372 <rcvr_datablock>
     96c:	89 2b       	or	r24, r25
     96e:	09 f4       	brne	.+2      	; 0x972 <disk_ioctl+0x158>
     970:	d0 c0       	rjmp	.+416    	; 0xb12 <disk_ioctl+0x2f8>
     972:	10 e3       	ldi	r17, 0x30	; 48
					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
     974:	8f ef       	ldi	r24, 0xFF	; 255
     976:	de dc       	rcall	.-1604   	; 0x334 <xchg_spi>
     978:	11 50       	subi	r17, 0x01	; 1
     97a:	e1 f7       	brne	.-8      	; 0x974 <disk_ioctl+0x15a>
					*(DWORD*)buff = 16UL << (csd[10] >> 4);
     97c:	2b 85       	ldd	r18, Y+11	; 0x0b
     97e:	22 95       	swap	r18
     980:	2f 70       	andi	r18, 0x0F	; 15
     982:	80 e1       	ldi	r24, 0x10	; 16
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	a0 e0       	ldi	r26, 0x00	; 0
     988:	b0 e0       	ldi	r27, 0x00	; 0
     98a:	04 c0       	rjmp	.+8      	; 0x994 <disk_ioctl+0x17a>
     98c:	88 0f       	add	r24, r24
     98e:	99 1f       	adc	r25, r25
     990:	aa 1f       	adc	r26, r26
     992:	bb 1f       	adc	r27, r27
     994:	2a 95       	dec	r18
     996:	d2 f7       	brpl	.-12     	; 0x98c <disk_ioctl+0x172>
     998:	f7 01       	movw	r30, r14
     99a:	80 83       	st	Z, r24
     99c:	91 83       	std	Z+1, r25	; 0x01
     99e:	a2 83       	std	Z+2, r26	; 0x02
     9a0:	b3 83       	std	Z+3, r27	; 0x03
     9a2:	c4 c0       	rjmp	.+392    	; 0xb2c <disk_ioctl+0x312>
					res = RES_OK;
				}
			}
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
     9a4:	40 e0       	ldi	r20, 0x00	; 0
     9a6:	50 e0       	ldi	r21, 0x00	; 0
     9a8:	ba 01       	movw	r22, r20
     9aa:	89 e0       	ldi	r24, 0x09	; 9
     9ac:	1b dd       	rcall	.-1482   	; 0x3e4 <send_cmd>
     9ae:	81 11       	cpse	r24, r1
     9b0:	b2 c0       	rjmp	.+356    	; 0xb16 <disk_ioctl+0x2fc>
     9b2:	60 e1       	ldi	r22, 0x10	; 16
     9b4:	70 e0       	ldi	r23, 0x00	; 0
     9b6:	ce 01       	movw	r24, r28
     9b8:	01 96       	adiw	r24, 0x01	; 1
     9ba:	db dc       	rcall	.-1610   	; 0x372 <rcvr_datablock>
     9bc:	89 2b       	or	r24, r25
     9be:	09 f4       	brne	.+2      	; 0x9c2 <disk_ioctl+0x1a8>
     9c0:	ac c0       	rjmp	.+344    	; 0xb1a <disk_ioctl+0x300>
				if (CardType & CT_SD1) {	/* SDv1 */
     9c2:	11 ff       	sbrs	r17, 1
     9c4:	20 c0       	rjmp	.+64     	; 0xa06 <disk_ioctl+0x1ec>
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
     9c6:	8c 85       	ldd	r24, Y+12	; 0x0c
     9c8:	88 1f       	adc	r24, r24
     9ca:	88 27       	eor	r24, r24
     9cc:	88 1f       	adc	r24, r24
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	01 96       	adiw	r24, 0x01	; 1
     9d2:	2b 85       	ldd	r18, Y+11	; 0x0b
     9d4:	2f 73       	andi	r18, 0x3F	; 63
     9d6:	82 0f       	add	r24, r18
     9d8:	91 1d       	adc	r25, r1
     9da:	82 0f       	add	r24, r18
     9dc:	91 1d       	adc	r25, r1
     9de:	2e 85       	ldd	r18, Y+14	; 0x0e
     9e0:	22 95       	swap	r18
     9e2:	26 95       	lsr	r18
     9e4:	26 95       	lsr	r18
     9e6:	23 70       	andi	r18, 0x03	; 3
     9e8:	21 50       	subi	r18, 0x01	; 1
     9ea:	02 c0       	rjmp	.+4      	; 0x9f0 <disk_ioctl+0x1d6>
     9ec:	88 0f       	add	r24, r24
     9ee:	99 1f       	adc	r25, r25
     9f0:	2a 95       	dec	r18
     9f2:	e2 f7       	brpl	.-8      	; 0x9ec <disk_ioctl+0x1d2>
     9f4:	a0 e0       	ldi	r26, 0x00	; 0
     9f6:	b0 e0       	ldi	r27, 0x00	; 0
     9f8:	f7 01       	movw	r30, r14
     9fa:	80 83       	st	Z, r24
     9fc:	91 83       	std	Z+1, r25	; 0x01
     9fe:	a2 83       	std	Z+2, r26	; 0x02
     a00:	b3 83       	std	Z+3, r27	; 0x03
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
				}
				res = RES_OK;
     a02:	10 e0       	ldi	r17, 0x00	; 0
     a04:	93 c0       	rjmp	.+294    	; 0xb2c <disk_ioctl+0x312>
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
				if (CardType & CT_SD1) {	/* SDv1 */
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
     a06:	8c 85       	ldd	r24, Y+12	; 0x0c
     a08:	28 2f       	mov	r18, r24
     a0a:	23 70       	andi	r18, 0x03	; 3
     a0c:	82 95       	swap	r24
     a0e:	86 95       	lsr	r24
     a10:	87 70       	andi	r24, 0x07	; 7
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	f8 e0       	ldi	r31, 0x08	; 8
     a16:	2f 9f       	mul	r18, r31
     a18:	80 0d       	add	r24, r0
     a1a:	91 1d       	adc	r25, r1
     a1c:	11 24       	eor	r1, r1
     a1e:	01 96       	adiw	r24, 0x01	; 1
     a20:	2b 85       	ldd	r18, Y+11	; 0x0b
     a22:	2c 77       	andi	r18, 0x7C	; 124
     a24:	30 e0       	ldi	r19, 0x00	; 0
     a26:	35 95       	asr	r19
     a28:	27 95       	ror	r18
     a2a:	35 95       	asr	r19
     a2c:	27 95       	ror	r18
     a2e:	2f 5f       	subi	r18, 0xFF	; 255
     a30:	3f 4f       	sbci	r19, 0xFF	; 255
     a32:	82 9f       	mul	r24, r18
     a34:	a0 01       	movw	r20, r0
     a36:	83 9f       	mul	r24, r19
     a38:	50 0d       	add	r21, r0
     a3a:	92 9f       	mul	r25, r18
     a3c:	50 0d       	add	r21, r0
     a3e:	11 24       	eor	r1, r1
     a40:	ca 01       	movw	r24, r20
     a42:	a0 e0       	ldi	r26, 0x00	; 0
     a44:	b0 e0       	ldi	r27, 0x00	; 0
     a46:	f7 01       	movw	r30, r14
     a48:	80 83       	st	Z, r24
     a4a:	91 83       	std	Z+1, r25	; 0x01
     a4c:	a2 83       	std	Z+2, r26	; 0x02
     a4e:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
     a50:	10 e0       	ldi	r17, 0x00	; 0
     a52:	6c c0       	rjmp	.+216    	; 0xb2c <disk_ioctl+0x312>
		break;

	/* Following commands are never used by FatFs module */

	case MMC_GET_TYPE :		/* Get card type flags (1 byte) */
		*ptr = CardType;
     a54:	80 91 e8 01 	lds	r24, 0x01E8
     a58:	fa 01       	movw	r30, r20
     a5a:	80 83       	st	Z, r24
		res = RES_OK;
     a5c:	10 e0       	ldi	r17, 0x00	; 0
		break;
     a5e:	66 c0       	rjmp	.+204    	; 0xb2c <disk_ioctl+0x312>

	case MMC_GET_CSD :		/* Receive CSD as a data block (16 bytes) */
		if (send_cmd(CMD9, 0) == 0		/* READ_CSD */
     a60:	40 e0       	ldi	r20, 0x00	; 0
     a62:	50 e0       	ldi	r21, 0x00	; 0
     a64:	ba 01       	movw	r22, r20
     a66:	89 e0       	ldi	r24, 0x09	; 9
     a68:	bd dc       	rcall	.-1670   	; 0x3e4 <send_cmd>
     a6a:	81 11       	cpse	r24, r1
     a6c:	58 c0       	rjmp	.+176    	; 0xb1e <disk_ioctl+0x304>
			&& rcvr_datablock(ptr, 16))
     a6e:	60 e1       	ldi	r22, 0x10	; 16
     a70:	70 e0       	ldi	r23, 0x00	; 0
     a72:	c7 01       	movw	r24, r14
     a74:	7e dc       	rcall	.-1796   	; 0x372 <rcvr_datablock>
     a76:	11 e0       	ldi	r17, 0x01	; 1
     a78:	89 2b       	or	r24, r25
     a7a:	09 f4       	brne	.+2      	; 0xa7e <disk_ioctl+0x264>
     a7c:	57 c0       	rjmp	.+174    	; 0xb2c <disk_ioctl+0x312>
     a7e:	10 e0       	ldi	r17, 0x00	; 0
     a80:	55 c0       	rjmp	.+170    	; 0xb2c <disk_ioctl+0x312>
			res = RES_OK;
		break;

	case MMC_GET_CID :		/* Receive CID as a data block (16 bytes) */
		if (send_cmd(CMD10, 0) == 0		/* READ_CID */
     a82:	40 e0       	ldi	r20, 0x00	; 0
     a84:	50 e0       	ldi	r21, 0x00	; 0
     a86:	ba 01       	movw	r22, r20
     a88:	8a e0       	ldi	r24, 0x0A	; 10
     a8a:	ac dc       	rcall	.-1704   	; 0x3e4 <send_cmd>
     a8c:	81 11       	cpse	r24, r1
     a8e:	49 c0       	rjmp	.+146    	; 0xb22 <disk_ioctl+0x308>
			&& rcvr_datablock(ptr, 16))
     a90:	60 e1       	ldi	r22, 0x10	; 16
     a92:	70 e0       	ldi	r23, 0x00	; 0
     a94:	c7 01       	movw	r24, r14
     a96:	6d dc       	rcall	.-1830   	; 0x372 <rcvr_datablock>
     a98:	11 e0       	ldi	r17, 0x01	; 1
     a9a:	89 2b       	or	r24, r25
     a9c:	09 f4       	brne	.+2      	; 0xaa0 <disk_ioctl+0x286>
     a9e:	46 c0       	rjmp	.+140    	; 0xb2c <disk_ioctl+0x312>
     aa0:	10 e0       	ldi	r17, 0x00	; 0
     aa2:	44 c0       	rjmp	.+136    	; 0xb2c <disk_ioctl+0x312>
			res = RES_OK;
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
     aa4:	40 e0       	ldi	r20, 0x00	; 0
     aa6:	50 e0       	ldi	r21, 0x00	; 0
     aa8:	ba 01       	movw	r22, r20
     aaa:	8a e3       	ldi	r24, 0x3A	; 58
     aac:	9b dc       	rcall	.-1738   	; 0x3e4 <send_cmd>
     aae:	81 11       	cpse	r24, r1
     ab0:	3a c0       	rjmp	.+116    	; 0xb26 <disk_ioctl+0x30c>
     ab2:	87 01       	movw	r16, r14
     ab4:	f4 e0       	ldi	r31, 0x04	; 4
     ab6:	ef 0e       	add	r14, r31
     ab8:	f1 1c       	adc	r15, r1
			for (n = 4; n; n--) *ptr++ = xchg_spi(0xFF);
     aba:	8f ef       	ldi	r24, 0xFF	; 255
     abc:	3b dc       	rcall	.-1930   	; 0x334 <xchg_spi>
     abe:	f8 01       	movw	r30, r16
     ac0:	81 93       	st	Z+, r24
     ac2:	8f 01       	movw	r16, r30
     ac4:	ee 15       	cp	r30, r14
     ac6:	ff 05       	cpc	r31, r15
     ac8:	c1 f7       	brne	.-16     	; 0xaba <disk_ioctl+0x2a0>
			res = RES_OK;
     aca:	10 e0       	ldi	r17, 0x00	; 0
     acc:	2f c0       	rjmp	.+94     	; 0xb2c <disk_ioctl+0x312>
		}
		break;

	case MMC_GET_SDSTAT :	/* Receive SD statsu as a data block (64 bytes) */
		if (send_cmd(ACMD13, 0) == 0) {	/* SD_STATUS */
     ace:	40 e0       	ldi	r20, 0x00	; 0
     ad0:	50 e0       	ldi	r21, 0x00	; 0
     ad2:	ba 01       	movw	r22, r20
     ad4:	8d e8       	ldi	r24, 0x8D	; 141
     ad6:	86 dc       	rcall	.-1780   	; 0x3e4 <send_cmd>
     ad8:	81 11       	cpse	r24, r1
     ada:	27 c0       	rjmp	.+78     	; 0xb2a <disk_ioctl+0x310>
			xchg_spi(0xFF);
     adc:	8f ef       	ldi	r24, 0xFF	; 255
     ade:	2a dc       	rcall	.-1964   	; 0x334 <xchg_spi>
			if (rcvr_datablock(ptr, 64))
     ae0:	60 e4       	ldi	r22, 0x40	; 64
     ae2:	70 e0       	ldi	r23, 0x00	; 0
     ae4:	c7 01       	movw	r24, r14
     ae6:	45 dc       	rcall	.-1910   	; 0x372 <rcvr_datablock>
     ae8:	11 e0       	ldi	r17, 0x01	; 1
     aea:	89 2b       	or	r24, r25
     aec:	f9 f0       	breq	.+62     	; 0xb2c <disk_ioctl+0x312>
     aee:	10 e0       	ldi	r17, 0x00	; 0
     af0:	1d c0       	rjmp	.+58     	; 0xb2c <disk_ioctl+0x312>
				res = RES_OK;
		}
		break;

	case CTRL_POWER_OFF :	/* Power off */
		power_off();
     af2:	1b dc       	rcall	.-1994   	; 0x32a <power_off>
		Stat |= STA_NOINIT;
     af4:	80 91 00 01 	lds	r24, 0x0100
     af8:	81 60       	ori	r24, 0x01	; 1
     afa:	80 93 00 01 	sts	0x0100, r24
		res = RES_OK;
     afe:	10 e0       	ldi	r17, 0x00	; 0
		break;
     b00:	15 c0       	rjmp	.+42     	; 0xb2c <disk_ioctl+0x312>

	default:
		res = RES_PARERR;
     b02:	14 e0       	ldi	r17, 0x04	; 4
     b04:	13 c0       	rjmp	.+38     	; 0xb2c <disk_ioctl+0x312>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
     b06:	11 e0       	ldi	r17, 0x01	; 1
     b08:	11 c0       	rjmp	.+34     	; 0xb2c <disk_ioctl+0x312>
     b0a:	11 e0       	ldi	r17, 0x01	; 1
     b0c:	0f c0       	rjmp	.+30     	; 0xb2c <disk_ioctl+0x312>
     b0e:	11 e0       	ldi	r17, 0x01	; 1
     b10:	0d c0       	rjmp	.+26     	; 0xb2c <disk_ioctl+0x312>
     b12:	11 e0       	ldi	r17, 0x01	; 1
     b14:	0b c0       	rjmp	.+22     	; 0xb2c <disk_ioctl+0x312>
     b16:	11 e0       	ldi	r17, 0x01	; 1
     b18:	09 c0       	rjmp	.+18     	; 0xb2c <disk_ioctl+0x312>
     b1a:	11 e0       	ldi	r17, 0x01	; 1
     b1c:	07 c0       	rjmp	.+14     	; 0xb2c <disk_ioctl+0x312>
     b1e:	11 e0       	ldi	r17, 0x01	; 1
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <disk_ioctl+0x312>
     b22:	11 e0       	ldi	r17, 0x01	; 1
     b24:	03 c0       	rjmp	.+6      	; 0xb2c <disk_ioctl+0x312>
     b26:	11 e0       	ldi	r17, 0x01	; 1
     b28:	01 c0       	rjmp	.+2      	; 0xb2c <disk_ioctl+0x312>
     b2a:	11 e0       	ldi	r17, 0x01	; 1

	default:
		res = RES_PARERR;
	}

	deselect();
     b2c:	09 dc       	rcall	.-2030   	; 0x340 <deselect>

	return res;
     b2e:	81 2f       	mov	r24, r17
     b30:	03 c0       	rjmp	.+6      	; 0xb38 <disk_ioctl+0x31e>
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
     b32:	84 e0       	ldi	r24, 0x04	; 4
     b34:	01 c0       	rjmp	.+2      	; 0xb38 <disk_ioctl+0x31e>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
     b36:	83 e0       	ldi	r24, 0x03	; 3
	}

	deselect();

	return res;
}
     b38:	60 96       	adiw	r28, 0x10	; 16
     b3a:	0f b6       	in	r0, 0x3f	; 63
     b3c:	f8 94       	cli
     b3e:	de bf       	out	0x3e, r29	; 62
     b40:	0f be       	out	0x3f, r0	; 63
     b42:	cd bf       	out	0x3d, r28	; 61
     b44:	df 91       	pop	r29
     b46:	cf 91       	pop	r28
     b48:	1f 91       	pop	r17
     b4a:	0f 91       	pop	r16
     b4c:	ff 90       	pop	r15
     b4e:	ef 90       	pop	r14
     b50:	08 95       	ret

00000b52 <disk_timerproc>:
void disk_timerproc (void)
{
	BYTE n, s;


	n = Timer1;				/* 100Hz decrement timer */
     b52:	80 91 ea 01 	lds	r24, 0x01EA
	if (n) Timer1 = --n;
     b56:	88 23       	and	r24, r24
     b58:	19 f0       	breq	.+6      	; 0xb60 <disk_timerproc+0xe>
     b5a:	81 50       	subi	r24, 0x01	; 1
     b5c:	80 93 ea 01 	sts	0x01EA, r24
	n = Timer2;
     b60:	80 91 e9 01 	lds	r24, 0x01E9
	if (n) Timer2 = --n;
     b64:	88 23       	and	r24, r24
     b66:	19 f0       	breq	.+6      	; 0xb6e <disk_timerproc+0x1c>
     b68:	81 50       	subi	r24, 0x01	; 1
     b6a:	80 93 e9 01 	sts	0x01E9, r24
	
	s = Stat;
     b6e:	80 91 00 01 	lds	r24, 0x0100
//	if (MMC_CD)				/* Card inserted */
//		s &= ~STA_NODISK;
//	else					/* Socket empty */
//		s |= (STA_NODISK | STA_NOINIT);

	Stat = s;				/* Update MMC status */
     b72:	80 93 00 01 	sts	0x0100, r24
     b76:	08 95       	ret

00000b78 <_ZN7DisplayD1Ev>:
	uint8_t sx = basecenter_x-middlelength*cos(rotationangle-M_PI_2);
	uint8_t sy = basecenter_y+middlelength*sin(rotationangle-M_PI_2);
	draw_line(sx,sy,lengtharm,baseangle+rotationangle);
	//draw right arm
	draw_line(sx,sy,lengtharm,-baseangle+rotationangle-M_PI);
}
     b78:	9c 5f       	subi	r25, 0xFC	; 252
     b7a:	0c 94 e9 19 	jmp	0x33d2	; 0x33d2 <_ZN3I2CD1Ev>
     b7e:	08 95       	ret

00000b80 <_ZN7Display10clearFrameEv>:
     b80:	fc 01       	movw	r30, r24
     b82:	9c 5f       	subi	r25, 0xFC	; 252
     b84:	11 92       	st	Z+, r1
     b86:	e8 17       	cp	r30, r24
     b88:	f9 07       	cpc	r31, r25
     b8a:	e1 f7       	brne	.-8      	; 0xb84 <_ZN7Display10clearFrameEv+0x4>
     b8c:	08 95       	ret

00000b8e <_ZN7Display15ssd1306_commandEh>:
     b8e:	1f 93       	push	r17
     b90:	cf 93       	push	r28
     b92:	df 93       	push	r29
     b94:	16 2f       	mov	r17, r22
     b96:	ec 01       	movw	r28, r24
     b98:	dc 5f       	subi	r29, 0xFC	; 252
     b9a:	ce 01       	movw	r24, r28
     b9c:	0e 94 ea 19 	call	0x33d4	; 0x33d4 <_ZN3I2C9twi_startEv>
     ba0:	68 e7       	ldi	r22, 0x78	; 120
     ba2:	ce 01       	movw	r24, r28
     ba4:	0e 94 f2 19 	call	0x33e4	; 0x33e4 <_ZN3I2C9twi_writeEh>
     ba8:	60 e0       	ldi	r22, 0x00	; 0
     baa:	ce 01       	movw	r24, r28
     bac:	0e 94 f2 19 	call	0x33e4	; 0x33e4 <_ZN3I2C9twi_writeEh>
     bb0:	61 2f       	mov	r22, r17
     bb2:	ce 01       	movw	r24, r28
     bb4:	0e 94 f2 19 	call	0x33e4	; 0x33e4 <_ZN3I2C9twi_writeEh>
     bb8:	ce 01       	movw	r24, r28
     bba:	0e 94 ee 19 	call	0x33dc	; 0x33dc <_ZN3I2C8twi_stopEv>
     bbe:	df 91       	pop	r29
     bc0:	cf 91       	pop	r28
     bc2:	1f 91       	pop	r17
     bc4:	08 95       	ret

00000bc6 <_ZN7Display17InitializeDisplayEv>:
     bc6:	cf 93       	push	r28
     bc8:	df 93       	push	r29
     bca:	ec 01       	movw	r28, r24
     bcc:	6e ea       	ldi	r22, 0xAE	; 174
     bce:	df df       	rcall	.-66     	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     bd0:	65 ed       	ldi	r22, 0xD5	; 213
     bd2:	ce 01       	movw	r24, r28
     bd4:	dc df       	rcall	.-72     	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     bd6:	60 e8       	ldi	r22, 0x80	; 128
     bd8:	ce 01       	movw	r24, r28
     bda:	d9 df       	rcall	.-78     	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     bdc:	68 ea       	ldi	r22, 0xA8	; 168
     bde:	ce 01       	movw	r24, r28
     be0:	d6 df       	rcall	.-84     	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     be2:	6f e3       	ldi	r22, 0x3F	; 63
     be4:	ce 01       	movw	r24, r28
     be6:	d3 df       	rcall	.-90     	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     be8:	63 ed       	ldi	r22, 0xD3	; 211
     bea:	ce 01       	movw	r24, r28
     bec:	d0 df       	rcall	.-96     	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     bee:	60 e0       	ldi	r22, 0x00	; 0
     bf0:	ce 01       	movw	r24, r28
     bf2:	cd df       	rcall	.-102    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     bf4:	60 e4       	ldi	r22, 0x40	; 64
     bf6:	ce 01       	movw	r24, r28
     bf8:	ca df       	rcall	.-108    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     bfa:	6d e8       	ldi	r22, 0x8D	; 141
     bfc:	ce 01       	movw	r24, r28
     bfe:	c7 df       	rcall	.-114    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c00:	64 e1       	ldi	r22, 0x14	; 20
     c02:	ce 01       	movw	r24, r28
     c04:	c4 df       	rcall	.-120    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c06:	60 e2       	ldi	r22, 0x20	; 32
     c08:	ce 01       	movw	r24, r28
     c0a:	c1 df       	rcall	.-126    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c0c:	60 e0       	ldi	r22, 0x00	; 0
     c0e:	ce 01       	movw	r24, r28
     c10:	be df       	rcall	.-132    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c12:	61 ea       	ldi	r22, 0xA1	; 161
     c14:	ce 01       	movw	r24, r28
     c16:	bb df       	rcall	.-138    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c18:	68 ec       	ldi	r22, 0xC8	; 200
     c1a:	ce 01       	movw	r24, r28
     c1c:	b8 df       	rcall	.-144    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c1e:	6a ed       	ldi	r22, 0xDA	; 218
     c20:	ce 01       	movw	r24, r28
     c22:	b5 df       	rcall	.-150    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c24:	62 e1       	ldi	r22, 0x12	; 18
     c26:	ce 01       	movw	r24, r28
     c28:	b2 df       	rcall	.-156    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c2a:	61 e8       	ldi	r22, 0x81	; 129
     c2c:	ce 01       	movw	r24, r28
     c2e:	af df       	rcall	.-162    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c30:	6f ec       	ldi	r22, 0xCF	; 207
     c32:	ce 01       	movw	r24, r28
     c34:	ac df       	rcall	.-168    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c36:	69 ed       	ldi	r22, 0xD9	; 217
     c38:	ce 01       	movw	r24, r28
     c3a:	a9 df       	rcall	.-174    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c3c:	61 ef       	ldi	r22, 0xF1	; 241
     c3e:	ce 01       	movw	r24, r28
     c40:	a6 df       	rcall	.-180    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c42:	6b ed       	ldi	r22, 0xDB	; 219
     c44:	ce 01       	movw	r24, r28
     c46:	a3 df       	rcall	.-186    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c48:	60 e4       	ldi	r22, 0x40	; 64
     c4a:	ce 01       	movw	r24, r28
     c4c:	a0 df       	rcall	.-192    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c4e:	64 ea       	ldi	r22, 0xA4	; 164
     c50:	ce 01       	movw	r24, r28
     c52:	9d df       	rcall	.-198    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c54:	66 ea       	ldi	r22, 0xA6	; 166
     c56:	ce 01       	movw	r24, r28
     c58:	9a df       	rcall	.-204    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c5a:	6f ea       	ldi	r22, 0xAF	; 175
     c5c:	ce 01       	movw	r24, r28
     c5e:	97 df       	rcall	.-210    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c60:	df 91       	pop	r29
     c62:	cf 91       	pop	r28
     c64:	08 95       	ret

00000c66 <_ZN7DisplayC1Ev>:
     c66:	cf 93       	push	r28
     c68:	df 93       	push	r29
     c6a:	ec 01       	movw	r28, r24
     c6c:	9c 5f       	subi	r25, 0xFC	; 252
     c6e:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN3I2CC1Ev>
     c72:	ce 01       	movw	r24, r28
     c74:	a8 df       	rcall	.-176    	; 0xbc6 <_ZN7Display17InitializeDisplayEv>
     c76:	ce 01       	movw	r24, r28
     c78:	83 df       	rcall	.-250    	; 0xb80 <_ZN7Display10clearFrameEv>
     c7a:	df 91       	pop	r29
     c7c:	cf 91       	pop	r28
     c7e:	08 95       	ret

00000c80 <_ZN7Display9sendFrameEv>:
     c80:	ef 92       	push	r14
     c82:	ff 92       	push	r15
     c84:	0f 93       	push	r16
     c86:	1f 93       	push	r17
     c88:	cf 93       	push	r28
     c8a:	df 93       	push	r29
     c8c:	ec 01       	movw	r28, r24
     c8e:	61 e2       	ldi	r22, 0x21	; 33
     c90:	7e df       	rcall	.-260    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c92:	60 e0       	ldi	r22, 0x00	; 0
     c94:	ce 01       	movw	r24, r28
     c96:	7b df       	rcall	.-266    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c98:	6f e7       	ldi	r22, 0x7F	; 127
     c9a:	ce 01       	movw	r24, r28
     c9c:	78 df       	rcall	.-272    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     c9e:	62 e2       	ldi	r22, 0x22	; 34
     ca0:	ce 01       	movw	r24, r28
     ca2:	75 df       	rcall	.-278    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	ce 01       	movw	r24, r28
     ca8:	72 df       	rcall	.-284    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     caa:	67 e0       	ldi	r22, 0x07	; 7
     cac:	ce 01       	movw	r24, r28
     cae:	6f df       	rcall	.-290    	; 0xb8e <_ZN7Display15ssd1306_commandEh>
     cb0:	8e 01       	movw	r16, r28
     cb2:	1c 5f       	subi	r17, 0xFC	; 252
     cb4:	c8 01       	movw	r24, r16
     cb6:	0e 94 ea 19 	call	0x33d4	; 0x33d4 <_ZN3I2C9twi_startEv>
     cba:	68 e7       	ldi	r22, 0x78	; 120
     cbc:	c8 01       	movw	r24, r16
     cbe:	0e 94 f2 19 	call	0x33e4	; 0x33e4 <_ZN3I2C9twi_writeEh>
     cc2:	60 e4       	ldi	r22, 0x40	; 64
     cc4:	c8 01       	movw	r24, r16
     cc6:	0e 94 f2 19 	call	0x33e4	; 0x33e4 <_ZN3I2C9twi_writeEh>
     cca:	78 01       	movw	r14, r16
     ccc:	69 91       	ld	r22, Y+
     cce:	c8 01       	movw	r24, r16
     cd0:	0e 94 f2 19 	call	0x33e4	; 0x33e4 <_ZN3I2C9twi_writeEh>
     cd4:	ce 15       	cp	r28, r14
     cd6:	df 05       	cpc	r29, r15
     cd8:	c9 f7       	brne	.-14     	; 0xccc <_ZN7Display9sendFrameEv+0x4c>
     cda:	c8 01       	movw	r24, r16
     cdc:	0e 94 ee 19 	call	0x33dc	; 0x33dc <_ZN3I2C8twi_stopEv>
     ce0:	df 91       	pop	r29
     ce2:	cf 91       	pop	r28
     ce4:	1f 91       	pop	r17
     ce6:	0f 91       	pop	r16
     ce8:	ff 90       	pop	r15
     cea:	ef 90       	pop	r14
     cec:	08 95       	ret

00000cee <_ZN7Display9draw_ASCIEhhh>:

void Display::draw_ASCI(uint8_t sym,uint8_t x, uint8_t y){
     cee:	0f 93       	push	r16
     cf0:	1f 93       	push	r17
     cf2:	cf 93       	push	r28
     cf4:	df 93       	push	r29
	if(sym!=' ' && sym>=33){
     cf6:	61 32       	cpi	r22, 0x21	; 33
     cf8:	08 f4       	brcc	.+2      	; 0xcfc <_ZN7Display9draw_ASCIEhhh+0xe>
     cfa:	3e c0       	rjmp	.+124    	; 0xd78 <_ZN7Display9draw_ASCIEhhh+0x8a>
		sym-=33;
		uint16_t symbol;
		for(uint8_t i = 0; i < 5; i++){
			symbol = pgm_read_byte(&font5x8[sym][i]);
			symbol = symbol << y%8;
			Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     cfc:	a4 2f       	mov	r26, r20
     cfe:	b0 e0       	ldi	r27, 0x00	; 0
     d00:	02 2f       	mov	r16, r18
     d02:	06 95       	lsr	r16
     d04:	06 95       	lsr	r16
     d06:	06 95       	lsr	r16
     d08:	30 e8       	ldi	r19, 0x80	; 128
     d0a:	03 9f       	mul	r16, r19
     d0c:	80 01       	movw	r16, r0
     d0e:	11 24       	eor	r1, r1
	draw_line(sx,sy,lengtharm,-baseangle+rotationangle-M_PI);
}

void Display::draw_ASCI(uint8_t sym,uint8_t x, uint8_t y){
	if(sym!=' ' && sym>=33){
		sym-=33;
     d10:	61 52       	subi	r22, 0x21	; 33
     d12:	70 e0       	ldi	r23, 0x00	; 0
     d14:	fb 01       	movw	r30, r22
     d16:	ee 0f       	add	r30, r30
     d18:	ff 1f       	adc	r31, r31
     d1a:	ee 0f       	add	r30, r30
     d1c:	ff 1f       	adc	r31, r31
     d1e:	e6 0f       	add	r30, r22
     d20:	f7 1f       	adc	r31, r23
     d22:	e6 50       	subi	r30, 0x06	; 6
     d24:	ff 4f       	sbci	r31, 0xFF	; 255
		uint16_t symbol;
		for(uint8_t i = 0; i < 5; i++){
			symbol = pgm_read_byte(&font5x8[sym][i]);
			symbol = symbol << y%8;
			Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d26:	ad 01       	movw	r20, r26
     d28:	40 0f       	add	r20, r16
     d2a:	51 1f       	adc	r21, r17
     d2c:	ec 01       	movw	r28, r24
     d2e:	c4 0f       	add	r28, r20
     d30:	d5 1f       	adc	r29, r21
			if(((symbol&0xFF00)>>8)==0){
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d32:	00 58       	subi	r16, 0x80	; 128
     d34:	1f 4f       	sbci	r17, 0xFF	; 255
     d36:	a0 0f       	add	r26, r16
     d38:	b1 1f       	adc	r27, r17
     d3a:	a8 0f       	add	r26, r24
     d3c:	b9 1f       	adc	r27, r25
     d3e:	4b 5f       	subi	r20, 0xFB	; 251
     d40:	5f 4f       	sbci	r21, 0xFF	; 255
     d42:	48 0f       	add	r20, r24
     d44:	59 1f       	adc	r21, r25
	if(sym!=' ' && sym>=33){
		sym-=33;
		uint16_t symbol;
		for(uint8_t i = 0; i < 5; i++){
			symbol = pgm_read_byte(&font5x8[sym][i]);
			symbol = symbol << y%8;
     d46:	27 70       	andi	r18, 0x07	; 7
void Display::draw_ASCI(uint8_t sym,uint8_t x, uint8_t y){
	if(sym!=' ' && sym>=33){
		sym-=33;
		uint16_t symbol;
		for(uint8_t i = 0; i < 5; i++){
			symbol = pgm_read_byte(&font5x8[sym][i]);
     d48:	64 91       	lpm	r22, Z
     d4a:	70 e0       	ldi	r23, 0x00	; 0
			symbol = symbol << y%8;
     d4c:	02 2e       	mov	r0, r18
     d4e:	02 c0       	rjmp	.+4      	; 0xd54 <_ZN7Display9draw_ASCIEhhh+0x66>
     d50:	66 0f       	add	r22, r22
     d52:	77 1f       	adc	r23, r23
     d54:	0a 94       	dec	r0
     d56:	e2 f7       	brpl	.-8      	; 0xd50 <_ZN7Display9draw_ASCIEhhh+0x62>
			Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d58:	98 81       	ld	r25, Y
     d5a:	96 2b       	or	r25, r22
     d5c:	99 93       	st	Y+, r25
			if(((symbol&0xFF00)>>8)==0){
     d5e:	67 2f       	mov	r22, r23
     d60:	77 27       	eor	r23, r23
     d62:	61 15       	cp	r22, r1
     d64:	71 05       	cpc	r23, r1
     d66:	19 f0       	breq	.+6      	; 0xd6e <_ZN7Display9draw_ASCIEhhh+0x80>
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d68:	8c 91       	ld	r24, X
     d6a:	68 2b       	or	r22, r24
     d6c:	6c 93       	st	X, r22
     d6e:	31 96       	adiw	r30, 0x01	; 1
     d70:	11 96       	adiw	r26, 0x01	; 1

void Display::draw_ASCI(uint8_t sym,uint8_t x, uint8_t y){
	if(sym!=' ' && sym>=33){
		sym-=33;
		uint16_t symbol;
		for(uint8_t i = 0; i < 5; i++){
     d72:	c4 17       	cp	r28, r20
     d74:	d5 07       	cpc	r29, r21
     d76:	41 f7       	brne	.-48     	; 0xd48 <_ZN7Display9draw_ASCIEhhh+0x5a>
	else{
		for(uint8_t i = 0; i < 7; i++){
			Displayframe[x+(y/8)*SSD1306_WIDTH+i] |= 0;
		}
	}
}
     d78:	df 91       	pop	r29
     d7a:	cf 91       	pop	r28
     d7c:	1f 91       	pop	r17
     d7e:	0f 91       	pop	r16
     d80:	08 95       	ret

00000d82 <mem_cpy>:
			}
		}
	}

	LEAVE_FF(dj.fs, res);
}
     d82:	41 15       	cp	r20, r1
     d84:	51 05       	cpc	r21, r1
     d86:	51 f0       	breq	.+20     	; 0xd9c <mem_cpy+0x1a>
     d88:	a6 2f       	mov	r26, r22
     d8a:	b7 2f       	mov	r27, r23
     d8c:	fc 01       	movw	r30, r24
     d8e:	48 0f       	add	r20, r24
     d90:	59 1f       	adc	r21, r25
     d92:	9d 91       	ld	r25, X+
     d94:	91 93       	st	Z+, r25
     d96:	e4 17       	cp	r30, r20
     d98:	f5 07       	cpc	r31, r21
     d9a:	d9 f7       	brne	.-10     	; 0xd92 <mem_cpy+0x10>
     d9c:	08 95       	ret

00000d9e <mem_set>:
     d9e:	41 15       	cp	r20, r1
     da0:	51 05       	cpc	r21, r1
     da2:	39 f0       	breq	.+14     	; 0xdb2 <mem_set+0x14>
     da4:	fc 01       	movw	r30, r24
     da6:	84 0f       	add	r24, r20
     da8:	95 1f       	adc	r25, r21
     daa:	61 93       	st	Z+, r22
     dac:	e8 17       	cp	r30, r24
     dae:	f9 07       	cpc	r31, r25
     db0:	e1 f7       	brne	.-8      	; 0xdaa <mem_set+0xc>
     db2:	08 95       	ret

00000db4 <clmt_clust>:
     db4:	0f 93       	push	r16
     db6:	1f 93       	push	r17
     db8:	cf 93       	push	r28
     dba:	df 93       	push	r29
     dbc:	fc 01       	movw	r30, r24
     dbe:	00 a1       	ldd	r16, Z+32	; 0x20
     dc0:	11 a1       	ldd	r17, Z+33	; 0x21
     dc2:	e8 01       	movw	r28, r16
     dc4:	24 96       	adiw	r28, 0x04	; 4
     dc6:	cb 01       	movw	r24, r22
     dc8:	ba 01       	movw	r22, r20
     dca:	05 2e       	mov	r0, r21
     dcc:	5a e0       	ldi	r21, 0x0A	; 10
     dce:	96 95       	lsr	r25
     dd0:	87 95       	ror	r24
     dd2:	77 95       	ror	r23
     dd4:	67 95       	ror	r22
     dd6:	5a 95       	dec	r21
     dd8:	d1 f7       	brne	.-12     	; 0xdce <clmt_clust+0x1a>
     dda:	50 2d       	mov	r21, r0
     ddc:	01 90       	ld	r0, Z+
     dde:	f0 81       	ld	r31, Z
     de0:	e0 2d       	mov	r30, r0
     de2:	22 81       	ldd	r18, Z+2	; 0x02
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	40 e0       	ldi	r20, 0x00	; 0
     de8:	50 e0       	ldi	r21, 0x00	; 0
     dea:	0e 94 44 1c 	call	0x3888	; 0x3888 <__udivmodsi4>
     dee:	f8 01       	movw	r30, r16
     df0:	84 81       	ldd	r24, Z+4	; 0x04
     df2:	95 81       	ldd	r25, Z+5	; 0x05
     df4:	a6 81       	ldd	r26, Z+6	; 0x06
     df6:	b7 81       	ldd	r27, Z+7	; 0x07
     df8:	00 97       	sbiw	r24, 0x00	; 0
     dfa:	a1 05       	cpc	r26, r1
     dfc:	b1 05       	cpc	r27, r1
     dfe:	21 f1       	breq	.+72     	; 0xe48 <clmt_clust+0x94>
     e00:	28 17       	cp	r18, r24
     e02:	39 07       	cpc	r19, r25
     e04:	4a 07       	cpc	r20, r26
     e06:	5b 07       	cpc	r21, r27
     e08:	30 f4       	brcc	.+12     	; 0xe16 <clmt_clust+0x62>
     e0a:	13 c0       	rjmp	.+38     	; 0xe32 <clmt_clust+0x7e>
     e0c:	28 17       	cp	r18, r24
     e0e:	39 07       	cpc	r19, r25
     e10:	4a 07       	cpc	r20, r26
     e12:	5b 07       	cpc	r21, r27
     e14:	70 f0       	brcs	.+28     	; 0xe32 <clmt_clust+0x7e>
     e16:	28 1b       	sub	r18, r24
     e18:	39 0b       	sbc	r19, r25
     e1a:	4a 0b       	sbc	r20, r26
     e1c:	5b 0b       	sbc	r21, r27
     e1e:	28 96       	adiw	r28, 0x08	; 8
     e20:	88 81       	ld	r24, Y
     e22:	99 81       	ldd	r25, Y+1	; 0x01
     e24:	aa 81       	ldd	r26, Y+2	; 0x02
     e26:	bb 81       	ldd	r27, Y+3	; 0x03
     e28:	00 97       	sbiw	r24, 0x00	; 0
     e2a:	a1 05       	cpc	r26, r1
     e2c:	b1 05       	cpc	r27, r1
     e2e:	71 f7       	brne	.-36     	; 0xe0c <clmt_clust+0x58>
     e30:	0f c0       	rjmp	.+30     	; 0xe50 <clmt_clust+0x9c>
     e32:	8c 81       	ldd	r24, Y+4	; 0x04
     e34:	9d 81       	ldd	r25, Y+5	; 0x05
     e36:	ae 81       	ldd	r26, Y+6	; 0x06
     e38:	bf 81       	ldd	r27, Y+7	; 0x07
     e3a:	bc 01       	movw	r22, r24
     e3c:	cd 01       	movw	r24, r26
     e3e:	62 0f       	add	r22, r18
     e40:	73 1f       	adc	r23, r19
     e42:	84 1f       	adc	r24, r20
     e44:	95 1f       	adc	r25, r21
     e46:	07 c0       	rjmp	.+14     	; 0xe56 <clmt_clust+0xa2>
     e48:	60 e0       	ldi	r22, 0x00	; 0
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	cb 01       	movw	r24, r22
     e4e:	03 c0       	rjmp	.+6      	; 0xe56 <clmt_clust+0xa2>
     e50:	60 e0       	ldi	r22, 0x00	; 0
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	cb 01       	movw	r24, r22
     e56:	df 91       	pop	r29
     e58:	cf 91       	pop	r28
     e5a:	1f 91       	pop	r17
     e5c:	0f 91       	pop	r16
     e5e:	08 95       	ret

00000e60 <ld_clust>:
     e60:	0f 93       	push	r16
     e62:	1f 93       	push	r17
     e64:	dc 01       	movw	r26, r24
     e66:	fb 01       	movw	r30, r22
     e68:	93 8d       	ldd	r25, Z+27	; 0x1b
     e6a:	69 2f       	mov	r22, r25
     e6c:	70 e0       	ldi	r23, 0x00	; 0
     e6e:	76 2f       	mov	r23, r22
     e70:	66 27       	eor	r22, r22
     e72:	82 8d       	ldd	r24, Z+26	; 0x1a
     e74:	68 2b       	or	r22, r24
     e76:	80 e0       	ldi	r24, 0x00	; 0
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	2c 91       	ld	r18, X
     e7c:	23 30       	cpi	r18, 0x03	; 3
     e7e:	79 f4       	brne	.+30     	; 0xe9e <ld_clust+0x3e>
     e80:	05 89       	ldd	r16, Z+21	; 0x15
     e82:	10 e0       	ldi	r17, 0x00	; 0
     e84:	10 2f       	mov	r17, r16
     e86:	00 27       	eor	r16, r16
     e88:	24 89       	ldd	r18, Z+20	; 0x14
     e8a:	02 2b       	or	r16, r18
     e8c:	20 e0       	ldi	r18, 0x00	; 0
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	98 01       	movw	r18, r16
     e92:	11 27       	eor	r17, r17
     e94:	00 27       	eor	r16, r16
     e96:	60 2b       	or	r22, r16
     e98:	71 2b       	or	r23, r17
     e9a:	82 2b       	or	r24, r18
     e9c:	93 2b       	or	r25, r19
     e9e:	1f 91       	pop	r17
     ea0:	0f 91       	pop	r16
     ea2:	08 95       	ret

00000ea4 <get_ldnumber>:
     ea4:	cf 93       	push	r28
     ea6:	df 93       	push	r29
     ea8:	ec 01       	movw	r28, r24
     eaa:	a8 81       	ld	r26, Y
     eac:	b9 81       	ldd	r27, Y+1	; 0x01
     eae:	10 97       	sbiw	r26, 0x00	; 0
     eb0:	f9 f0       	breq	.+62     	; 0xef0 <get_ldnumber+0x4c>
     eb2:	4c 91       	ld	r20, X
     eb4:	41 32       	cpi	r20, 0x21	; 33
     eb6:	58 f0       	brcs	.+22     	; 0xece <get_ldnumber+0x2a>
     eb8:	4a 33       	cpi	r20, 0x3A	; 58
     eba:	31 f1       	breq	.+76     	; 0xf08 <get_ldnumber+0x64>
     ebc:	fd 01       	movw	r30, r26
     ebe:	31 96       	adiw	r30, 0x01	; 1
     ec0:	9f 01       	movw	r18, r30
     ec2:	91 91       	ld	r25, Z+
     ec4:	91 32       	cpi	r25, 0x21	; 33
     ec6:	28 f0       	brcs	.+10     	; 0xed2 <get_ldnumber+0x2e>
     ec8:	9a 33       	cpi	r25, 0x3A	; 58
     eca:	d1 f7       	brne	.-12     	; 0xec0 <get_ldnumber+0x1c>
     ecc:	04 c0       	rjmp	.+8      	; 0xed6 <get_ldnumber+0x32>
     ece:	94 2f       	mov	r25, r20
     ed0:	9d 01       	movw	r18, r26
     ed2:	9a 33       	cpi	r25, 0x3A	; 58
     ed4:	81 f4       	brne	.+32     	; 0xef6 <get_ldnumber+0x52>
     ed6:	cd 01       	movw	r24, r26
     ed8:	01 96       	adiw	r24, 0x01	; 1
     eda:	28 17       	cp	r18, r24
     edc:	39 07       	cpc	r19, r25
     ede:	71 f4       	brne	.+28     	; 0xefc <get_ldnumber+0x58>
     ee0:	40 33       	cpi	r20, 0x30	; 48
     ee2:	79 f4       	brne	.+30     	; 0xf02 <get_ldnumber+0x5e>
     ee4:	12 96       	adiw	r26, 0x02	; 2
     ee6:	b9 83       	std	Y+1, r27	; 0x01
     ee8:	a8 83       	st	Y, r26
     eea:	80 e0       	ldi	r24, 0x00	; 0
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	0e c0       	rjmp	.+28     	; 0xf0c <get_ldnumber+0x68>
     ef0:	8f ef       	ldi	r24, 0xFF	; 255
     ef2:	9f ef       	ldi	r25, 0xFF	; 255
     ef4:	0b c0       	rjmp	.+22     	; 0xf0c <get_ldnumber+0x68>
     ef6:	80 e0       	ldi	r24, 0x00	; 0
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	08 c0       	rjmp	.+16     	; 0xf0c <get_ldnumber+0x68>
     efc:	8f ef       	ldi	r24, 0xFF	; 255
     efe:	9f ef       	ldi	r25, 0xFF	; 255
     f00:	05 c0       	rjmp	.+10     	; 0xf0c <get_ldnumber+0x68>
     f02:	8f ef       	ldi	r24, 0xFF	; 255
     f04:	9f ef       	ldi	r25, 0xFF	; 255
     f06:	02 c0       	rjmp	.+4      	; 0xf0c <get_ldnumber+0x68>
     f08:	9d 01       	movw	r18, r26
     f0a:	e5 cf       	rjmp	.-54     	; 0xed6 <get_ldnumber+0x32>
     f0c:	df 91       	pop	r29
     f0e:	cf 91       	pop	r28
     f10:	08 95       	ret

00000f12 <sync_window>:
     f12:	8f 92       	push	r8
     f14:	9f 92       	push	r9
     f16:	af 92       	push	r10
     f18:	bf 92       	push	r11
     f1a:	cf 92       	push	r12
     f1c:	df 92       	push	r13
     f1e:	ef 92       	push	r14
     f20:	ff 92       	push	r15
     f22:	0f 93       	push	r16
     f24:	1f 93       	push	r17
     f26:	cf 93       	push	r28
     f28:	df 93       	push	r29
     f2a:	fc 01       	movw	r30, r24
     f2c:	24 81       	ldd	r18, Z+4	; 0x04
     f2e:	22 23       	and	r18, r18
     f30:	09 f4       	brne	.+2      	; 0xf34 <sync_window+0x22>
     f32:	44 c0       	rjmp	.+136    	; 0xfbc <sync_window+0xaa>
     f34:	ec 01       	movw	r28, r24
     f36:	c6 a4       	ldd	r12, Z+46	; 0x2e
     f38:	d7 a4       	ldd	r13, Z+47	; 0x2f
     f3a:	e0 a8       	ldd	r14, Z+48	; 0x30
     f3c:	f1 a8       	ldd	r15, Z+49	; 0x31
     f3e:	5c 01       	movw	r10, r24
     f40:	f2 e3       	ldi	r31, 0x32	; 50
     f42:	af 0e       	add	r10, r31
     f44:	b1 1c       	adc	r11, r1
     f46:	01 e0       	ldi	r16, 0x01	; 1
     f48:	10 e0       	ldi	r17, 0x00	; 0
     f4a:	a7 01       	movw	r20, r14
     f4c:	96 01       	movw	r18, r12
     f4e:	b5 01       	movw	r22, r10
     f50:	89 81       	ldd	r24, Y+1	; 0x01
     f52:	f5 db       	rcall	.-2070   	; 0x73e <disk_write>
     f54:	81 11       	cpse	r24, r1
     f56:	34 c0       	rjmp	.+104    	; 0xfc0 <sync_window+0xae>
     f58:	1c 82       	std	Y+4, r1	; 0x04
     f5a:	8a a1       	ldd	r24, Y+34	; 0x22
     f5c:	9b a1       	ldd	r25, Y+35	; 0x23
     f5e:	ac a1       	ldd	r26, Y+36	; 0x24
     f60:	bd a1       	ldd	r27, Y+37	; 0x25
     f62:	b7 01       	movw	r22, r14
     f64:	a6 01       	movw	r20, r12
     f66:	48 1b       	sub	r20, r24
     f68:	59 0b       	sbc	r21, r25
     f6a:	6a 0b       	sbc	r22, r26
     f6c:	7b 0b       	sbc	r23, r27
     f6e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f70:	9b 8d       	ldd	r25, Y+27	; 0x1b
     f72:	ac 8d       	ldd	r26, Y+28	; 0x1c
     f74:	bd 8d       	ldd	r27, Y+29	; 0x1d
     f76:	48 17       	cp	r20, r24
     f78:	59 07       	cpc	r21, r25
     f7a:	6a 07       	cpc	r22, r26
     f7c:	7b 07       	cpc	r23, r27
     f7e:	10 f5       	brcc	.+68     	; 0xfc4 <sync_window+0xb2>
     f80:	8b 80       	ldd	r8, Y+3	; 0x03
     f82:	91 2c       	mov	r9, r1
     f84:	82 e0       	ldi	r24, 0x02	; 2
     f86:	88 16       	cp	r8, r24
     f88:	91 04       	cpc	r9, r1
     f8a:	f0 f0       	brcs	.+60     	; 0xfc8 <sync_window+0xb6>
     f8c:	8a 8d       	ldd	r24, Y+26	; 0x1a
     f8e:	9b 8d       	ldd	r25, Y+27	; 0x1b
     f90:	ac 8d       	ldd	r26, Y+28	; 0x1c
     f92:	bd 8d       	ldd	r27, Y+29	; 0x1d
     f94:	c8 0e       	add	r12, r24
     f96:	d9 1e       	adc	r13, r25
     f98:	ea 1e       	adc	r14, r26
     f9a:	fb 1e       	adc	r15, r27
     f9c:	01 e0       	ldi	r16, 0x01	; 1
     f9e:	10 e0       	ldi	r17, 0x00	; 0
     fa0:	a7 01       	movw	r20, r14
     fa2:	96 01       	movw	r18, r12
     fa4:	b5 01       	movw	r22, r10
     fa6:	89 81       	ldd	r24, Y+1	; 0x01
     fa8:	ca db       	rcall	.-2156   	; 0x73e <disk_write>
     faa:	e1 e0       	ldi	r30, 0x01	; 1
     fac:	8e 1a       	sub	r8, r30
     fae:	91 08       	sbc	r9, r1
     fb0:	f1 e0       	ldi	r31, 0x01	; 1
     fb2:	8f 16       	cp	r8, r31
     fb4:	91 04       	cpc	r9, r1
     fb6:	51 f7       	brne	.-44     	; 0xf8c <sync_window+0x7a>
     fb8:	80 e0       	ldi	r24, 0x00	; 0
     fba:	07 c0       	rjmp	.+14     	; 0xfca <sync_window+0xb8>
     fbc:	80 e0       	ldi	r24, 0x00	; 0
     fbe:	05 c0       	rjmp	.+10     	; 0xfca <sync_window+0xb8>
     fc0:	81 e0       	ldi	r24, 0x01	; 1
     fc2:	03 c0       	rjmp	.+6      	; 0xfca <sync_window+0xb8>
     fc4:	80 e0       	ldi	r24, 0x00	; 0
     fc6:	01 c0       	rjmp	.+2      	; 0xfca <sync_window+0xb8>
     fc8:	80 e0       	ldi	r24, 0x00	; 0
     fca:	df 91       	pop	r29
     fcc:	cf 91       	pop	r28
     fce:	1f 91       	pop	r17
     fd0:	0f 91       	pop	r16
     fd2:	ff 90       	pop	r15
     fd4:	ef 90       	pop	r14
     fd6:	df 90       	pop	r13
     fd8:	cf 90       	pop	r12
     fda:	bf 90       	pop	r11
     fdc:	af 90       	pop	r10
     fde:	9f 90       	pop	r9
     fe0:	8f 90       	pop	r8
     fe2:	08 95       	ret

00000fe4 <move_window>:
     fe4:	8f 92       	push	r8
     fe6:	9f 92       	push	r9
     fe8:	af 92       	push	r10
     fea:	bf 92       	push	r11
     fec:	ff 92       	push	r15
     fee:	0f 93       	push	r16
     ff0:	1f 93       	push	r17
     ff2:	cf 93       	push	r28
     ff4:	df 93       	push	r29
     ff6:	ec 01       	movw	r28, r24
     ff8:	4a 01       	movw	r8, r20
     ffa:	5b 01       	movw	r10, r22
     ffc:	8e a5       	ldd	r24, Y+46	; 0x2e
     ffe:	9f a5       	ldd	r25, Y+47	; 0x2f
    1000:	a8 a9       	ldd	r26, Y+48	; 0x30
    1002:	b9 a9       	ldd	r27, Y+49	; 0x31
    1004:	84 17       	cp	r24, r20
    1006:	95 07       	cpc	r25, r21
    1008:	a6 07       	cpc	r26, r22
    100a:	b7 07       	cpc	r27, r23
    100c:	d9 f0       	breq	.+54     	; 0x1044 <move_window+0x60>
    100e:	ce 01       	movw	r24, r28
    1010:	80 df       	rcall	.-256    	; 0xf12 <sync_window>
    1012:	f8 2e       	mov	r15, r24
    1014:	81 11       	cpse	r24, r1
    1016:	17 c0       	rjmp	.+46     	; 0x1046 <move_window+0x62>
    1018:	01 e0       	ldi	r16, 0x01	; 1
    101a:	10 e0       	ldi	r17, 0x00	; 0
    101c:	a5 01       	movw	r20, r10
    101e:	94 01       	movw	r18, r8
    1020:	be 01       	movw	r22, r28
    1022:	6e 5c       	subi	r22, 0xCE	; 206
    1024:	7f 4f       	sbci	r23, 0xFF	; 255
    1026:	89 81       	ldd	r24, Y+1	; 0x01
    1028:	38 db       	rcall	.-2448   	; 0x69a <disk_read>
    102a:	88 23       	and	r24, r24
    102c:	31 f0       	breq	.+12     	; 0x103a <move_window+0x56>
    102e:	ff 24       	eor	r15, r15
    1030:	f3 94       	inc	r15
    1032:	88 24       	eor	r8, r8
    1034:	8a 94       	dec	r8
    1036:	98 2c       	mov	r9, r8
    1038:	54 01       	movw	r10, r8
    103a:	8e a6       	std	Y+46, r8	; 0x2e
    103c:	9f a6       	std	Y+47, r9	; 0x2f
    103e:	a8 aa       	std	Y+48, r10	; 0x30
    1040:	b9 aa       	std	Y+49, r11	; 0x31
    1042:	01 c0       	rjmp	.+2      	; 0x1046 <move_window+0x62>
    1044:	f1 2c       	mov	r15, r1
    1046:	8f 2d       	mov	r24, r15
    1048:	df 91       	pop	r29
    104a:	cf 91       	pop	r28
    104c:	1f 91       	pop	r17
    104e:	0f 91       	pop	r16
    1050:	ff 90       	pop	r15
    1052:	bf 90       	pop	r11
    1054:	af 90       	pop	r10
    1056:	9f 90       	pop	r9
    1058:	8f 90       	pop	r8
    105a:	08 95       	ret

0000105c <check_fs>:
    105c:	cf 93       	push	r28
    105e:	df 93       	push	r29
    1060:	ec 01       	movw	r28, r24
    1062:	1c 82       	std	Y+4, r1	; 0x04
    1064:	8f ef       	ldi	r24, 0xFF	; 255
    1066:	9f ef       	ldi	r25, 0xFF	; 255
    1068:	dc 01       	movw	r26, r24
    106a:	8e a7       	std	Y+46, r24	; 0x2e
    106c:	9f a7       	std	Y+47, r25	; 0x2f
    106e:	a8 ab       	std	Y+48, r26	; 0x30
    1070:	b9 ab       	std	Y+49, r27	; 0x31
    1072:	ce 01       	movw	r24, r28
    1074:	b7 df       	rcall	.-146    	; 0xfe4 <move_window>
    1076:	81 11       	cpse	r24, r1
    1078:	51 c0       	rjmp	.+162    	; 0x111c <check_fs+0xc0>
    107a:	fe 01       	movw	r30, r28
    107c:	ef 5c       	subi	r30, 0xCF	; 207
    107e:	fd 4f       	sbci	r31, 0xFD	; 253
    1080:	80 81       	ld	r24, Z
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	98 2f       	mov	r25, r24
    1086:	88 27       	eor	r24, r24
    1088:	31 97       	sbiw	r30, 0x01	; 1
    108a:	20 81       	ld	r18, Z
    108c:	82 2b       	or	r24, r18
    108e:	85 35       	cpi	r24, 0x55	; 85
    1090:	9a 4a       	sbci	r25, 0xAA	; 170
    1092:	09 f0       	breq	.+2      	; 0x1096 <check_fs+0x3a>
    1094:	45 c0       	rjmp	.+138    	; 0x1120 <check_fs+0xc4>
    1096:	e5 5c       	subi	r30, 0xC5	; 197
    1098:	f1 40       	sbci	r31, 0x01	; 1
    109a:	20 81       	ld	r18, Z
    109c:	31 97       	sbiw	r30, 0x01	; 1
    109e:	80 81       	ld	r24, Z
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	a0 e0       	ldi	r26, 0x00	; 0
    10a4:	b0 e0       	ldi	r27, 0x00	; 0
    10a6:	dc 01       	movw	r26, r24
    10a8:	99 27       	eor	r25, r25
    10aa:	88 27       	eor	r24, r24
    10ac:	b2 2b       	or	r27, r18
    10ae:	32 97       	sbiw	r30, 0x02	; 2
    10b0:	20 81       	ld	r18, Z
    10b2:	82 2b       	or	r24, r18
    10b4:	31 96       	adiw	r30, 0x01	; 1
    10b6:	40 81       	ld	r20, Z
    10b8:	50 e0       	ldi	r21, 0x00	; 0
    10ba:	54 2f       	mov	r21, r20
    10bc:	44 27       	eor	r20, r20
    10be:	60 e0       	ldi	r22, 0x00	; 0
    10c0:	70 e0       	ldi	r23, 0x00	; 0
    10c2:	84 2b       	or	r24, r20
    10c4:	95 2b       	or	r25, r21
    10c6:	a6 2b       	or	r26, r22
    10c8:	b7 2b       	or	r27, r23
    10ca:	bb 27       	eor	r27, r27
    10cc:	86 34       	cpi	r24, 0x46	; 70
    10ce:	91 44       	sbci	r25, 0x41	; 65
    10d0:	a4 45       	sbci	r26, 0x54	; 84
    10d2:	b1 05       	cpc	r27, r1
    10d4:	39 f1       	breq	.+78     	; 0x1124 <check_fs+0xc8>
    10d6:	7e 96       	adiw	r30, 0x1e	; 30
    10d8:	80 81       	ld	r24, Z
    10da:	31 97       	sbiw	r30, 0x01	; 1
    10dc:	40 81       	ld	r20, Z
    10de:	50 e0       	ldi	r21, 0x00	; 0
    10e0:	60 e0       	ldi	r22, 0x00	; 0
    10e2:	70 e0       	ldi	r23, 0x00	; 0
    10e4:	ba 01       	movw	r22, r20
    10e6:	55 27       	eor	r21, r21
    10e8:	44 27       	eor	r20, r20
    10ea:	78 2b       	or	r23, r24
    10ec:	32 97       	sbiw	r30, 0x02	; 2
    10ee:	80 81       	ld	r24, Z
    10f0:	48 2b       	or	r20, r24
    10f2:	cb 57       	subi	r28, 0x7B	; 123
    10f4:	df 4f       	sbci	r29, 0xFF	; 255
    10f6:	88 81       	ld	r24, Y
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	98 2f       	mov	r25, r24
    10fc:	88 27       	eor	r24, r24
    10fe:	a0 e0       	ldi	r26, 0x00	; 0
    1100:	b0 e0       	ldi	r27, 0x00	; 0
    1102:	48 2b       	or	r20, r24
    1104:	59 2b       	or	r21, r25
    1106:	6a 2b       	or	r22, r26
    1108:	7b 2b       	or	r23, r27
    110a:	77 27       	eor	r23, r23
    110c:	81 e0       	ldi	r24, 0x01	; 1
    110e:	46 34       	cpi	r20, 0x46	; 70
    1110:	51 44       	sbci	r21, 0x41	; 65
    1112:	64 45       	sbci	r22, 0x54	; 84
    1114:	71 05       	cpc	r23, r1
    1116:	39 f4       	brne	.+14     	; 0x1126 <check_fs+0xca>
    1118:	80 e0       	ldi	r24, 0x00	; 0
    111a:	05 c0       	rjmp	.+10     	; 0x1126 <check_fs+0xca>
    111c:	83 e0       	ldi	r24, 0x03	; 3
    111e:	03 c0       	rjmp	.+6      	; 0x1126 <check_fs+0xca>
    1120:	82 e0       	ldi	r24, 0x02	; 2
    1122:	01 c0       	rjmp	.+2      	; 0x1126 <check_fs+0xca>
    1124:	80 e0       	ldi	r24, 0x00	; 0
    1126:	df 91       	pop	r29
    1128:	cf 91       	pop	r28
    112a:	08 95       	ret

0000112c <validate>:
    112c:	00 97       	sbiw	r24, 0x00	; 0
    112e:	c1 f0       	breq	.+48     	; 0x1160 <validate+0x34>
    1130:	dc 01       	movw	r26, r24
    1132:	ed 91       	ld	r30, X+
    1134:	fc 91       	ld	r31, X
    1136:	11 97       	sbiw	r26, 0x01	; 1
    1138:	30 97       	sbiw	r30, 0x00	; 0
    113a:	a1 f0       	breq	.+40     	; 0x1164 <validate+0x38>
    113c:	20 81       	ld	r18, Z
    113e:	22 23       	and	r18, r18
    1140:	99 f0       	breq	.+38     	; 0x1168 <validate+0x3c>
    1142:	26 81       	ldd	r18, Z+6	; 0x06
    1144:	37 81       	ldd	r19, Z+7	; 0x07
    1146:	12 96       	adiw	r26, 0x02	; 2
    1148:	8d 91       	ld	r24, X+
    114a:	9c 91       	ld	r25, X
    114c:	13 97       	sbiw	r26, 0x03	; 3
    114e:	28 17       	cp	r18, r24
    1150:	39 07       	cpc	r19, r25
    1152:	61 f4       	brne	.+24     	; 0x116c <validate+0x40>
    1154:	81 81       	ldd	r24, Z+1	; 0x01
    1156:	9a da       	rcall	.-2764   	; 0x68c <disk_status>
    1158:	80 ff       	sbrs	r24, 0
    115a:	0a c0       	rjmp	.+20     	; 0x1170 <validate+0x44>
    115c:	89 e0       	ldi	r24, 0x09	; 9
    115e:	08 95       	ret
    1160:	89 e0       	ldi	r24, 0x09	; 9
    1162:	08 95       	ret
    1164:	89 e0       	ldi	r24, 0x09	; 9
    1166:	08 95       	ret
    1168:	89 e0       	ldi	r24, 0x09	; 9
    116a:	08 95       	ret
    116c:	89 e0       	ldi	r24, 0x09	; 9
    116e:	08 95       	ret
    1170:	80 e0       	ldi	r24, 0x00	; 0
    1172:	08 95       	ret

00001174 <find_volume>:
    1174:	2f 92       	push	r2
    1176:	3f 92       	push	r3
    1178:	4f 92       	push	r4
    117a:	5f 92       	push	r5
    117c:	6f 92       	push	r6
    117e:	7f 92       	push	r7
    1180:	8f 92       	push	r8
    1182:	9f 92       	push	r9
    1184:	af 92       	push	r10
    1186:	bf 92       	push	r11
    1188:	cf 92       	push	r12
    118a:	df 92       	push	r13
    118c:	ef 92       	push	r14
    118e:	ff 92       	push	r15
    1190:	0f 93       	push	r16
    1192:	1f 93       	push	r17
    1194:	cf 93       	push	r28
    1196:	df 93       	push	r29
    1198:	cd b7       	in	r28, 0x3d	; 61
    119a:	de b7       	in	r29, 0x3e	; 62
    119c:	6d 97       	sbiw	r28, 0x1d	; 29
    119e:	0f b6       	in	r0, 0x3f	; 63
    11a0:	f8 94       	cli
    11a2:	de bf       	out	0x3e, r29	; 62
    11a4:	0f be       	out	0x3f, r0	; 63
    11a6:	cd bf       	out	0x3d, r28	; 61
    11a8:	6c 01       	movw	r12, r24
    11aa:	cb 01       	movw	r24, r22
    11ac:	b4 2e       	mov	r11, r20
    11ae:	d6 01       	movw	r26, r12
    11b0:	1d 92       	st	X+, r1
    11b2:	1c 92       	st	X, r1
    11b4:	77 de       	rcall	.-786    	; 0xea4 <get_ldnumber>
    11b6:	7c 01       	movw	r14, r24
    11b8:	99 23       	and	r25, r25
    11ba:	0c f4       	brge	.+2      	; 0x11be <find_volume+0x4a>
    11bc:	e4 c2       	rjmp	.+1480   	; 0x1786 <find_volume+0x612>
    11be:	fc 01       	movw	r30, r24
    11c0:	ee 0f       	add	r30, r30
    11c2:	ff 1f       	adc	r31, r31
    11c4:	e3 51       	subi	r30, 0x13	; 19
    11c6:	fe 4f       	sbci	r31, 0xFE	; 254
    11c8:	00 81       	ld	r16, Z
    11ca:	11 81       	ldd	r17, Z+1	; 0x01
    11cc:	01 15       	cp	r16, r1
    11ce:	11 05       	cpc	r17, r1
    11d0:	09 f4       	brne	.+2      	; 0x11d4 <find_volume+0x60>
    11d2:	db c2       	rjmp	.+1462   	; 0x178a <find_volume+0x616>
    11d4:	f6 01       	movw	r30, r12
    11d6:	11 83       	std	Z+1, r17	; 0x01
    11d8:	00 83       	st	Z, r16
    11da:	d8 01       	movw	r26, r16
    11dc:	8c 91       	ld	r24, X
    11de:	88 23       	and	r24, r24
    11e0:	61 f0       	breq	.+24     	; 0x11fa <find_volume+0x86>
    11e2:	11 96       	adiw	r26, 0x01	; 1
    11e4:	8c 91       	ld	r24, X
    11e6:	52 da       	rcall	.-2908   	; 0x68c <disk_status>
    11e8:	80 fd       	sbrc	r24, 0
    11ea:	07 c0       	rjmp	.+14     	; 0x11fa <find_volume+0x86>
    11ec:	bb 20       	and	r11, r11
    11ee:	09 f4       	brne	.+2      	; 0x11f2 <find_volume+0x7e>
    11f0:	ce c2       	rjmp	.+1436   	; 0x178e <find_volume+0x61a>
    11f2:	82 ff       	sbrs	r24, 2
    11f4:	ce c2       	rjmp	.+1436   	; 0x1792 <find_volume+0x61e>
    11f6:	8a e0       	ldi	r24, 0x0A	; 10
    11f8:	73 c3       	rjmp	.+1766   	; 0x18e0 <find_volume+0x76c>
    11fa:	f8 01       	movw	r30, r16
    11fc:	10 82       	st	Z, r1
    11fe:	e1 82       	std	Z+1, r14	; 0x01
    1200:	8e 2d       	mov	r24, r14
    1202:	84 d9       	rcall	.-3320   	; 0x50c <disk_initialize>
    1204:	80 fd       	sbrc	r24, 0
    1206:	c7 c2       	rjmp	.+1422   	; 0x1796 <find_volume+0x622>
    1208:	bb 20       	and	r11, r11
    120a:	09 f4       	brne	.+2      	; 0x120e <find_volume+0x9a>
    120c:	e4 c2       	rjmp	.+1480   	; 0x17d6 <find_volume+0x662>
    120e:	82 fd       	sbrc	r24, 2
    1210:	c4 c2       	rjmp	.+1416   	; 0x179a <find_volume+0x626>
    1212:	e1 c2       	rjmp	.+1474   	; 0x17d6 <find_volume+0x662>
    1214:	df 01       	movw	r26, r30
    1216:	17 97       	sbiw	r26, 0x07	; 7
    1218:	8c 91       	ld	r24, X
    121a:	88 23       	and	r24, r24
    121c:	b9 f0       	breq	.+46     	; 0x124c <find_volume+0xd8>
    121e:	14 96       	adiw	r26, 0x04	; 4
    1220:	cc 90       	ld	r12, X
    1222:	80 81       	ld	r24, Z
    1224:	d1 2c       	mov	r13, r1
    1226:	e1 2c       	mov	r14, r1
    1228:	f1 2c       	mov	r15, r1
    122a:	f8 2a       	or	r15, r24
    122c:	12 96       	adiw	r26, 0x02	; 2
    122e:	8c 91       	ld	r24, X
    1230:	e8 2a       	or	r14, r24
    1232:	11 97       	sbiw	r26, 0x01	; 1
    1234:	ac 91       	ld	r26, X
    1236:	b0 e0       	ldi	r27, 0x00	; 0
    1238:	ba 2f       	mov	r27, r26
    123a:	aa 27       	eor	r26, r26
    123c:	cd 01       	movw	r24, r26
    123e:	a0 e0       	ldi	r26, 0x00	; 0
    1240:	b0 e0       	ldi	r27, 0x00	; 0
    1242:	c8 2a       	or	r12, r24
    1244:	d9 2a       	or	r13, r25
    1246:	ea 2a       	or	r14, r26
    1248:	fb 2a       	or	r15, r27
    124a:	04 c0       	rjmp	.+8      	; 0x1254 <find_volume+0xe0>
    124c:	c8 2c       	mov	r12, r8
    124e:	d9 2c       	mov	r13, r9
    1250:	e7 2e       	mov	r14, r23
    1252:	f6 2e       	mov	r15, r22
    1254:	d9 01       	movw	r26, r18
    1256:	cd 92       	st	X+, r12
    1258:	dd 92       	st	X+, r13
    125a:	ed 92       	st	X+, r14
    125c:	fd 92       	st	X+, r15
    125e:	9d 01       	movw	r18, r26
    1260:	70 96       	adiw	r30, 0x10	; 16
    1262:	e4 17       	cp	r30, r20
    1264:	f5 07       	cpc	r31, r21
    1266:	b1 f6       	brne	.-84     	; 0x1214 <find_volume+0xa0>
    1268:	4e 01       	movw	r8, r28
    126a:	b1 e1       	ldi	r27, 0x11	; 17
    126c:	8b 0e       	add	r8, r27
    126e:	91 1c       	adc	r9, r1
    1270:	68 94       	set
    1272:	77 24       	eor	r7, r7
    1274:	71 f8       	bld	r7, 1
    1276:	f5 01       	movw	r30, r10
    1278:	c1 90       	ld	r12, Z+
    127a:	d1 90       	ld	r13, Z+
    127c:	e1 90       	ld	r14, Z+
    127e:	f1 90       	ld	r15, Z+
    1280:	5f 01       	movw	r10, r30
    1282:	c1 14       	cp	r12, r1
    1284:	d1 04       	cpc	r13, r1
    1286:	e1 04       	cpc	r14, r1
    1288:	f1 04       	cpc	r15, r1
    128a:	39 f0       	breq	.+14     	; 0x129a <find_volume+0x126>
    128c:	b7 01       	movw	r22, r14
    128e:	a6 01       	movw	r20, r12
    1290:	c8 01       	movw	r24, r16
    1292:	e4 de       	rcall	.-568    	; 0x105c <check_fs>
    1294:	81 11       	cpse	r24, r1
    1296:	02 c0       	rjmp	.+4      	; 0x129c <find_volume+0x128>
    1298:	0d c0       	rjmp	.+26     	; 0x12b4 <find_volume+0x140>
    129a:	87 2d       	mov	r24, r7
    129c:	a8 14       	cp	r10, r8
    129e:	b9 04       	cpc	r11, r9
    12a0:	51 f7       	brne	.-44     	; 0x1276 <find_volume+0x102>
    12a2:	03 c0       	rjmp	.+6      	; 0x12aa <find_volume+0x136>
    12a4:	c1 2c       	mov	r12, r1
    12a6:	d1 2c       	mov	r13, r1
    12a8:	76 01       	movw	r14, r12
    12aa:	83 30       	cpi	r24, 0x03	; 3
    12ac:	09 f4       	brne	.+2      	; 0x12b0 <find_volume+0x13c>
    12ae:	77 c2       	rjmp	.+1262   	; 0x179e <find_volume+0x62a>
    12b0:	81 11       	cpse	r24, r1
    12b2:	77 c2       	rjmp	.+1262   	; 0x17a2 <find_volume+0x62e>
    12b4:	d8 01       	movw	r26, r16
    12b6:	de 96       	adiw	r26, 0x3e	; 62
    12b8:	8c 91       	ld	r24, X
    12ba:	de 97       	sbiw	r26, 0x3e	; 62
    12bc:	90 e0       	ldi	r25, 0x00	; 0
    12be:	98 2f       	mov	r25, r24
    12c0:	88 27       	eor	r24, r24
    12c2:	dd 96       	adiw	r26, 0x3d	; 61
    12c4:	2c 91       	ld	r18, X
    12c6:	82 2b       	or	r24, r18
    12c8:	81 15       	cp	r24, r1
    12ca:	94 40       	sbci	r25, 0x04	; 4
    12cc:	09 f0       	breq	.+2      	; 0x12d0 <find_volume+0x15c>
    12ce:	6b c2       	rjmp	.+1238   	; 0x17a6 <find_volume+0x632>
    12d0:	f8 01       	movw	r30, r16
    12d2:	e7 5b       	subi	r30, 0xB7	; 183
    12d4:	ff 4f       	sbci	r31, 0xFF	; 255
    12d6:	80 80       	ld	r8, Z
    12d8:	91 2c       	mov	r9, r1
    12da:	98 2c       	mov	r9, r8
    12dc:	88 24       	eor	r8, r8
    12de:	31 97       	sbiw	r30, 0x01	; 1
    12e0:	80 81       	ld	r24, Z
    12e2:	88 2a       	or	r8, r24
    12e4:	a1 2c       	mov	r10, r1
    12e6:	b1 2c       	mov	r11, r1
    12e8:	81 14       	cp	r8, r1
    12ea:	91 04       	cpc	r9, r1
    12ec:	a1 04       	cpc	r10, r1
    12ee:	b1 04       	cpc	r11, r1
    12f0:	e9 f4       	brne	.+58     	; 0x132c <find_volume+0x1b8>
    12f2:	71 96       	adiw	r30, 0x11	; 17
    12f4:	80 81       	ld	r24, Z
    12f6:	31 97       	sbiw	r30, 0x01	; 1
    12f8:	80 80       	ld	r8, Z
    12fa:	91 2c       	mov	r9, r1
    12fc:	a1 2c       	mov	r10, r1
    12fe:	b1 2c       	mov	r11, r1
    1300:	54 01       	movw	r10, r8
    1302:	99 24       	eor	r9, r9
    1304:	88 24       	eor	r8, r8
    1306:	b8 2a       	or	r11, r24
    1308:	32 97       	sbiw	r30, 0x02	; 2
    130a:	80 81       	ld	r24, Z
    130c:	a5 01       	movw	r20, r10
    130e:	94 01       	movw	r18, r8
    1310:	28 2b       	or	r18, r24
    1312:	da 01       	movw	r26, r20
    1314:	c9 01       	movw	r24, r18
    1316:	31 96       	adiw	r30, 0x01	; 1
    1318:	80 80       	ld	r8, Z
    131a:	91 2c       	mov	r9, r1
    131c:	98 2c       	mov	r9, r8
    131e:	88 24       	eor	r8, r8
    1320:	a1 2c       	mov	r10, r1
    1322:	b1 2c       	mov	r11, r1
    1324:	88 2a       	or	r8, r24
    1326:	99 2a       	or	r9, r25
    1328:	aa 2a       	or	r10, r26
    132a:	bb 2a       	or	r11, r27
    132c:	d8 01       	movw	r26, r16
    132e:	5a 96       	adiw	r26, 0x1a	; 26
    1330:	8d 92       	st	X+, r8
    1332:	9d 92       	st	X+, r9
    1334:	ad 92       	st	X+, r10
    1336:	bc 92       	st	X, r11
    1338:	5d 97       	sbiw	r26, 0x1d	; 29
    133a:	f8 01       	movw	r30, r16
    133c:	ee 5b       	subi	r30, 0xBE	; 190
    133e:	ff 4f       	sbci	r31, 0xFF	; 255
    1340:	a0 81       	ld	r26, Z
    1342:	f8 01       	movw	r30, r16
    1344:	a3 83       	std	Z+3, r26	; 0x03
    1346:	8f ef       	ldi	r24, 0xFF	; 255
    1348:	8a 0f       	add	r24, r26
    134a:	82 30       	cpi	r24, 0x02	; 2
    134c:	08 f0       	brcs	.+2      	; 0x1350 <find_volume+0x1dc>
    134e:	2d c2       	rjmp	.+1114   	; 0x17aa <find_volume+0x636>
    1350:	f7 ad       	ldd	r31, Z+63	; 0x3f
    1352:	f9 8b       	std	Y+17, r31	; 0x11
    1354:	2f 2f       	mov	r18, r31
    1356:	f8 01       	movw	r30, r16
    1358:	22 83       	std	Z+2, r18	; 0x02
    135a:	22 23       	and	r18, r18
    135c:	09 f4       	brne	.+2      	; 0x1360 <find_volume+0x1ec>
    135e:	27 c2       	rjmp	.+1102   	; 0x17ae <find_volume+0x63a>
    1360:	82 2f       	mov	r24, r18
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	9c 01       	movw	r18, r24
    1366:	21 50       	subi	r18, 0x01	; 1
    1368:	31 09       	sbc	r19, r1
    136a:	82 23       	and	r24, r18
    136c:	93 23       	and	r25, r19
    136e:	89 2b       	or	r24, r25
    1370:	09 f0       	breq	.+2      	; 0x1374 <find_volume+0x200>
    1372:	1f c2       	rjmp	.+1086   	; 0x17b2 <find_volume+0x63e>
    1374:	ec 5b       	subi	r30, 0xBC	; 188
    1376:	ff 4f       	sbci	r31, 0xFF	; 255
    1378:	80 81       	ld	r24, Z
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	98 2f       	mov	r25, r24
    137e:	88 27       	eor	r24, r24
    1380:	31 97       	sbiw	r30, 0x01	; 1
    1382:	20 81       	ld	r18, Z
    1384:	1c 01       	movw	r2, r24
    1386:	22 2a       	or	r2, r18
    1388:	f8 01       	movw	r30, r16
    138a:	31 86       	std	Z+9, r3	; 0x09
    138c:	20 86       	std	Z+8, r2	; 0x08
    138e:	c1 01       	movw	r24, r2
    1390:	8f 71       	andi	r24, 0x1F	; 31
    1392:	99 27       	eor	r25, r25
    1394:	89 2b       	or	r24, r25
    1396:	09 f0       	breq	.+2      	; 0x139a <find_volume+0x226>
    1398:	0e c2       	rjmp	.+1052   	; 0x17b6 <find_volume+0x642>
    139a:	ea 5b       	subi	r30, 0xBA	; 186
    139c:	ff 4f       	sbci	r31, 0xFF	; 255
    139e:	40 80       	ld	r4, Z
    13a0:	51 2c       	mov	r5, r1
    13a2:	54 2c       	mov	r5, r4
    13a4:	44 24       	eor	r4, r4
    13a6:	31 97       	sbiw	r30, 0x01	; 1
    13a8:	80 81       	ld	r24, Z
    13aa:	48 2a       	or	r4, r24
    13ac:	61 2c       	mov	r6, r1
    13ae:	71 2c       	mov	r7, r1
    13b0:	41 14       	cp	r4, r1
    13b2:	51 04       	cpc	r5, r1
    13b4:	61 04       	cpc	r6, r1
    13b6:	71 04       	cpc	r7, r1
    13b8:	d1 f4       	brne	.+52     	; 0x13ee <find_volume+0x27a>
    13ba:	70 96       	adiw	r30, 0x10	; 16
    13bc:	80 81       	ld	r24, Z
    13be:	31 97       	sbiw	r30, 0x01	; 1
    13c0:	40 80       	ld	r4, Z
    13c2:	51 2c       	mov	r5, r1
    13c4:	61 2c       	mov	r6, r1
    13c6:	71 2c       	mov	r7, r1
    13c8:	32 01       	movw	r6, r4
    13ca:	55 24       	eor	r5, r5
    13cc:	44 24       	eor	r4, r4
    13ce:	78 2a       	or	r7, r24
    13d0:	32 97       	sbiw	r30, 0x02	; 2
    13d2:	80 81       	ld	r24, Z
    13d4:	48 2a       	or	r4, r24
    13d6:	31 96       	adiw	r30, 0x01	; 1
    13d8:	80 81       	ld	r24, Z
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	98 2f       	mov	r25, r24
    13de:	88 27       	eor	r24, r24
    13e0:	ac 01       	movw	r20, r24
    13e2:	60 e0       	ldi	r22, 0x00	; 0
    13e4:	70 e0       	ldi	r23, 0x00	; 0
    13e6:	44 2a       	or	r4, r20
    13e8:	55 2a       	or	r5, r21
    13ea:	66 2a       	or	r6, r22
    13ec:	77 2a       	or	r7, r23
    13ee:	f8 01       	movw	r30, r16
    13f0:	ef 5b       	subi	r30, 0xBF	; 191
    13f2:	ff 4f       	sbci	r31, 0xFF	; 255
    13f4:	e0 81       	ld	r30, Z
    13f6:	f0 e0       	ldi	r31, 0x00	; 0
    13f8:	3e 2f       	mov	r19, r30
    13fa:	22 27       	eor	r18, r18
    13fc:	c8 01       	movw	r24, r16
    13fe:	80 5c       	subi	r24, 0xC0	; 192
    1400:	9f 4f       	sbci	r25, 0xFF	; 255
    1402:	fc 01       	movw	r30, r24
    1404:	80 81       	ld	r24, Z
    1406:	f9 01       	movw	r30, r18
    1408:	e8 2b       	or	r30, r24
    140a:	30 97       	sbiw	r30, 0x00	; 0
    140c:	09 f4       	brne	.+2      	; 0x1410 <find_volume+0x29c>
    140e:	d5 c1       	rjmp	.+938    	; 0x17ba <find_volume+0x646>
    1410:	b0 e0       	ldi	r27, 0x00	; 0
    1412:	a5 01       	movw	r20, r10
    1414:	94 01       	movw	r18, r8
    1416:	0e 94 6f 1c 	call	0x38de	; 0x38de <__muluhisi3>
    141a:	6a 8f       	std	Y+26, r22	; 0x1a
    141c:	7b 8f       	std	Y+27, r23	; 0x1b
    141e:	8c 8f       	std	Y+28, r24	; 0x1c
    1420:	9d 8f       	std	Y+29, r25	; 0x1d
    1422:	9f 01       	movw	r18, r30
    1424:	40 e0       	ldi	r20, 0x00	; 0
    1426:	50 e0       	ldi	r21, 0x00	; 0
    1428:	2e 8b       	std	Y+22, r18	; 0x16
    142a:	3f 8b       	std	Y+23, r19	; 0x17
    142c:	48 8f       	std	Y+24, r20	; 0x18
    142e:	59 8f       	std	Y+25, r21	; 0x19
    1430:	c1 01       	movw	r24, r2
    1432:	96 95       	lsr	r25
    1434:	87 95       	ror	r24
    1436:	92 95       	swap	r25
    1438:	82 95       	swap	r24
    143a:	8f 70       	andi	r24, 0x0F	; 15
    143c:	89 27       	eor	r24, r25
    143e:	9f 70       	andi	r25, 0x0F	; 15
    1440:	89 27       	eor	r24, r25
    1442:	28 0f       	add	r18, r24
    1444:	39 1f       	adc	r19, r25
    1446:	41 1d       	adc	r20, r1
    1448:	51 1d       	adc	r21, r1
    144a:	da 01       	movw	r26, r20
    144c:	c9 01       	movw	r24, r18
    144e:	2a 8d       	ldd	r18, Y+26	; 0x1a
    1450:	3b 8d       	ldd	r19, Y+27	; 0x1b
    1452:	4c 8d       	ldd	r20, Y+28	; 0x1c
    1454:	5d 8d       	ldd	r21, Y+29	; 0x1d
    1456:	28 0f       	add	r18, r24
    1458:	39 1f       	adc	r19, r25
    145a:	4a 1f       	adc	r20, r26
    145c:	5b 1f       	adc	r21, r27
    145e:	2a 8b       	std	Y+18, r18	; 0x12
    1460:	3b 8b       	std	Y+19, r19	; 0x13
    1462:	4c 8b       	std	Y+20, r20	; 0x14
    1464:	5d 8b       	std	Y+21, r21	; 0x15
    1466:	42 16       	cp	r4, r18
    1468:	53 06       	cpc	r5, r19
    146a:	64 06       	cpc	r6, r20
    146c:	75 06       	cpc	r7, r21
    146e:	08 f4       	brcc	.+2      	; 0x1472 <find_volume+0x2fe>
    1470:	a6 c1       	rjmp	.+844    	; 0x17be <find_volume+0x64a>
    1472:	c3 01       	movw	r24, r6
    1474:	b2 01       	movw	r22, r4
    1476:	62 1b       	sub	r22, r18
    1478:	73 0b       	sbc	r23, r19
    147a:	84 0b       	sbc	r24, r20
    147c:	95 0b       	sbc	r25, r21
    147e:	e9 89       	ldd	r30, Y+17	; 0x11
    1480:	2e 2f       	mov	r18, r30
    1482:	30 e0       	ldi	r19, 0x00	; 0
    1484:	40 e0       	ldi	r20, 0x00	; 0
    1486:	50 e0       	ldi	r21, 0x00	; 0
    1488:	0e 94 44 1c 	call	0x3888	; 0x3888 <__udivmodsi4>
    148c:	da 01       	movw	r26, r20
    148e:	c9 01       	movw	r24, r18
    1490:	21 15       	cp	r18, r1
    1492:	31 05       	cpc	r19, r1
    1494:	41 05       	cpc	r20, r1
    1496:	51 05       	cpc	r21, r1
    1498:	09 f4       	brne	.+2      	; 0x149c <find_volume+0x328>
    149a:	93 c1       	rjmp	.+806    	; 0x17c2 <find_volume+0x64e>
    149c:	26 3f       	cpi	r18, 0xF6	; 246
    149e:	ff e0       	ldi	r31, 0x0F	; 15
    14a0:	3f 07       	cpc	r19, r31
    14a2:	41 05       	cpc	r20, r1
    14a4:	51 05       	cpc	r21, r1
    14a6:	18 f0       	brcs	.+6      	; 0x14ae <find_volume+0x33a>
    14a8:	e2 e0       	ldi	r30, 0x02	; 2
    14aa:	e9 8b       	std	Y+17, r30	; 0x11
    14ac:	02 c0       	rjmp	.+4      	; 0x14b2 <find_volume+0x33e>
    14ae:	f1 e0       	ldi	r31, 0x01	; 1
    14b0:	f9 8b       	std	Y+17, r31	; 0x11
    14b2:	86 3f       	cpi	r24, 0xF6	; 246
    14b4:	9f 4f       	sbci	r25, 0xFF	; 255
    14b6:	a1 05       	cpc	r26, r1
    14b8:	b1 05       	cpc	r27, r1
    14ba:	08 f0       	brcs	.+2      	; 0x14be <find_volume+0x34a>
    14bc:	a3 c1       	rjmp	.+838    	; 0x1804 <find_volume+0x690>
    14be:	29 01       	movw	r4, r18
    14c0:	3a 01       	movw	r6, r20
    14c2:	82 e0       	ldi	r24, 0x02	; 2
    14c4:	48 0e       	add	r4, r24
    14c6:	51 1c       	adc	r5, r1
    14c8:	61 1c       	adc	r6, r1
    14ca:	71 1c       	adc	r7, r1
    14cc:	d8 01       	movw	r26, r16
    14ce:	56 96       	adiw	r26, 0x16	; 22
    14d0:	4d 92       	st	X+, r4
    14d2:	5d 92       	st	X+, r5
    14d4:	6d 92       	st	X+, r6
    14d6:	7c 92       	st	X, r7
    14d8:	59 97       	sbiw	r26, 0x19	; 25
    14da:	f8 01       	movw	r30, r16
    14dc:	c6 8e       	std	Z+30, r12	; 0x1e
    14de:	d7 8e       	std	Z+31, r13	; 0x1f
    14e0:	e0 a2       	std	Z+32, r14	; 0x20
    14e2:	f1 a2       	std	Z+33, r15	; 0x21
    14e4:	8e 89       	ldd	r24, Y+22	; 0x16
    14e6:	9f 89       	ldd	r25, Y+23	; 0x17
    14e8:	a8 8d       	ldd	r26, Y+24	; 0x18
    14ea:	b9 8d       	ldd	r27, Y+25	; 0x19
    14ec:	8c 0d       	add	r24, r12
    14ee:	9d 1d       	adc	r25, r13
    14f0:	ae 1d       	adc	r26, r14
    14f2:	bf 1d       	adc	r27, r15
    14f4:	82 a3       	std	Z+34, r24	; 0x22
    14f6:	93 a3       	std	Z+35, r25	; 0x23
    14f8:	a4 a3       	std	Z+36, r26	; 0x24
    14fa:	b5 a3       	std	Z+37, r27	; 0x25
    14fc:	4a 89       	ldd	r20, Y+18	; 0x12
    14fe:	5b 89       	ldd	r21, Y+19	; 0x13
    1500:	6c 89       	ldd	r22, Y+20	; 0x14
    1502:	7d 89       	ldd	r23, Y+21	; 0x15
    1504:	4c 0d       	add	r20, r12
    1506:	5d 1d       	adc	r21, r13
    1508:	6e 1d       	adc	r22, r14
    150a:	7f 1d       	adc	r23, r15
    150c:	42 a7       	std	Z+42, r20	; 0x2a
    150e:	53 a7       	std	Z+43, r21	; 0x2b
    1510:	64 a7       	std	Z+44, r22	; 0x2c
    1512:	75 a7       	std	Z+45, r23	; 0x2d
    1514:	f9 89       	ldd	r31, Y+17	; 0x11
    1516:	f3 30       	cpi	r31, 0x03	; 3
    1518:	09 f0       	breq	.+2      	; 0x151c <find_volume+0x3a8>
    151a:	44 c0       	rjmp	.+136    	; 0x15a4 <find_volume+0x430>
    151c:	23 28       	or	r2, r3
    151e:	09 f0       	breq	.+2      	; 0x1522 <find_volume+0x3ae>
    1520:	52 c1       	rjmp	.+676    	; 0x17c6 <find_volume+0x652>
    1522:	f8 01       	movw	r30, r16
    1524:	ef 59       	subi	r30, 0x9F	; 159
    1526:	ff 4f       	sbci	r31, 0xFF	; 255
    1528:	20 81       	ld	r18, Z
    152a:	31 97       	sbiw	r30, 0x01	; 1
    152c:	80 81       	ld	r24, Z
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	a0 e0       	ldi	r26, 0x00	; 0
    1532:	b0 e0       	ldi	r27, 0x00	; 0
    1534:	dc 01       	movw	r26, r24
    1536:	99 27       	eor	r25, r25
    1538:	88 27       	eor	r24, r24
    153a:	b2 2b       	or	r27, r18
    153c:	32 97       	sbiw	r30, 0x02	; 2
    153e:	20 81       	ld	r18, Z
    1540:	ac 01       	movw	r20, r24
    1542:	bd 01       	movw	r22, r26
    1544:	42 2b       	or	r20, r18
    1546:	31 96       	adiw	r30, 0x01	; 1
    1548:	80 81       	ld	r24, Z
    154a:	28 2f       	mov	r18, r24
    154c:	30 e0       	ldi	r19, 0x00	; 0
    154e:	92 2f       	mov	r25, r18
    1550:	88 27       	eor	r24, r24
    1552:	a0 e0       	ldi	r26, 0x00	; 0
    1554:	b0 e0       	ldi	r27, 0x00	; 0
    1556:	84 2b       	or	r24, r20
    1558:	95 2b       	or	r25, r21
    155a:	a6 2b       	or	r26, r22
    155c:	b7 2b       	or	r27, r23
    155e:	f8 01       	movw	r30, r16
    1560:	86 a3       	std	Z+38, r24	; 0x26
    1562:	97 a3       	std	Z+39, r25	; 0x27
    1564:	a0 a7       	std	Z+40, r26	; 0x28
    1566:	b1 a7       	std	Z+41, r27	; 0x29
    1568:	44 0c       	add	r4, r4
    156a:	55 1c       	adc	r5, r5
    156c:	66 1c       	adc	r6, r6
    156e:	77 1c       	adc	r7, r7
    1570:	44 0c       	add	r4, r4
    1572:	55 1c       	adc	r5, r5
    1574:	66 1c       	adc	r6, r6
    1576:	77 1c       	adc	r7, r7
    1578:	ff ef       	ldi	r31, 0xFF	; 255
    157a:	4f 0e       	add	r4, r31
    157c:	f3 e0       	ldi	r31, 0x03	; 3
    157e:	5f 1e       	adc	r5, r31
    1580:	61 1c       	adc	r6, r1
    1582:	71 1c       	adc	r7, r1
    1584:	03 2e       	mov	r0, r19
    1586:	3a e0       	ldi	r19, 0x0A	; 10
    1588:	76 94       	lsr	r7
    158a:	67 94       	ror	r6
    158c:	57 94       	ror	r5
    158e:	47 94       	ror	r4
    1590:	3a 95       	dec	r19
    1592:	d1 f7       	brne	.-12     	; 0x1588 <find_volume+0x414>
    1594:	30 2d       	mov	r19, r0
    1596:	84 14       	cp	r8, r4
    1598:	95 04       	cpc	r9, r5
    159a:	a6 04       	cpc	r10, r6
    159c:	b7 04       	cpc	r11, r7
    159e:	08 f4       	brcc	.+2      	; 0x15a2 <find_volume+0x42e>
    15a0:	14 c1       	rjmp	.+552    	; 0x17ca <find_volume+0x656>
    15a2:	5c c1       	rjmp	.+696    	; 0x185c <find_volume+0x6e8>
    15a4:	23 28       	or	r2, r3
    15a6:	09 f4       	brne	.+2      	; 0x15aa <find_volume+0x436>
    15a8:	12 c1       	rjmp	.+548    	; 0x17ce <find_volume+0x65a>
    15aa:	2a 8d       	ldd	r18, Y+26	; 0x1a
    15ac:	3b 8d       	ldd	r19, Y+27	; 0x1b
    15ae:	4c 8d       	ldd	r20, Y+28	; 0x1c
    15b0:	5d 8d       	ldd	r21, Y+29	; 0x1d
    15b2:	82 0f       	add	r24, r18
    15b4:	93 1f       	adc	r25, r19
    15b6:	a4 1f       	adc	r26, r20
    15b8:	b5 1f       	adc	r27, r21
    15ba:	f8 01       	movw	r30, r16
    15bc:	86 a3       	std	Z+38, r24	; 0x26
    15be:	97 a3       	std	Z+39, r25	; 0x27
    15c0:	a0 a7       	std	Z+40, r26	; 0x28
    15c2:	b1 a7       	std	Z+41, r27	; 0x29
    15c4:	f9 89       	ldd	r31, Y+17	; 0x11
    15c6:	f2 30       	cpi	r31, 0x02	; 2
    15c8:	29 f4       	brne	.+10     	; 0x15d4 <find_volume+0x460>
    15ca:	44 0c       	add	r4, r4
    15cc:	55 1c       	adc	r5, r5
    15ce:	66 1c       	adc	r6, r6
    15d0:	77 1c       	adc	r7, r7
    15d2:	70 c1       	rjmp	.+736    	; 0x18b4 <find_volume+0x740>
    15d4:	a3 e0       	ldi	r26, 0x03	; 3
    15d6:	b0 e0       	ldi	r27, 0x00	; 0
    15d8:	a3 01       	movw	r20, r6
    15da:	92 01       	movw	r18, r4
    15dc:	0e 94 6f 1c 	call	0x38de	; 0x38de <__muluhisi3>
    15e0:	dc 01       	movw	r26, r24
    15e2:	cb 01       	movw	r24, r22
    15e4:	b6 95       	lsr	r27
    15e6:	a7 95       	ror	r26
    15e8:	97 95       	ror	r25
    15ea:	87 95       	ror	r24
    15ec:	21 e0       	ldi	r18, 0x01	; 1
    15ee:	42 22       	and	r4, r18
    15f0:	55 24       	eor	r5, r5
    15f2:	66 24       	eor	r6, r6
    15f4:	77 24       	eor	r7, r7
    15f6:	48 0e       	add	r4, r24
    15f8:	59 1e       	adc	r5, r25
    15fa:	6a 1e       	adc	r6, r26
    15fc:	7b 1e       	adc	r7, r27
    15fe:	5a c1       	rjmp	.+692    	; 0x18b4 <find_volume+0x740>
    1600:	b7 01       	movw	r22, r14
    1602:	a6 01       	movw	r20, r12
    1604:	4f 5f       	subi	r20, 0xFF	; 255
    1606:	5f 4f       	sbci	r21, 0xFF	; 255
    1608:	6f 4f       	sbci	r22, 0xFF	; 255
    160a:	7f 4f       	sbci	r23, 0xFF	; 255
    160c:	c8 01       	movw	r24, r16
    160e:	ea dc       	rcall	.-1580   	; 0xfe4 <move_window>
    1610:	81 11       	cpse	r24, r1
    1612:	96 c0       	rjmp	.+300    	; 0x1740 <find_volume+0x5cc>
    1614:	d8 01       	movw	r26, r16
    1616:	15 96       	adiw	r26, 0x05	; 5
    1618:	1c 92       	st	X, r1
    161a:	f8 01       	movw	r30, r16
    161c:	ef 5c       	subi	r30, 0xCF	; 207
    161e:	fd 4f       	sbci	r31, 0xFD	; 253
    1620:	80 81       	ld	r24, Z
    1622:	90 e0       	ldi	r25, 0x00	; 0
    1624:	98 2f       	mov	r25, r24
    1626:	88 27       	eor	r24, r24
    1628:	31 97       	sbiw	r30, 0x01	; 1
    162a:	20 81       	ld	r18, Z
    162c:	82 2b       	or	r24, r18
    162e:	85 35       	cpi	r24, 0x55	; 85
    1630:	9a 4a       	sbci	r25, 0xAA	; 170
    1632:	09 f0       	breq	.+2      	; 0x1636 <find_volume+0x4c2>
    1634:	88 c0       	rjmp	.+272    	; 0x1746 <find_volume+0x5d2>
    1636:	f8 01       	movw	r30, r16
    1638:	25 a9       	ldd	r18, Z+53	; 0x35
    163a:	84 a9       	ldd	r24, Z+52	; 0x34
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	a0 e0       	ldi	r26, 0x00	; 0
    1640:	b0 e0       	ldi	r27, 0x00	; 0
    1642:	dc 01       	movw	r26, r24
    1644:	99 27       	eor	r25, r25
    1646:	88 27       	eor	r24, r24
    1648:	b2 2b       	or	r27, r18
    164a:	22 a9       	ldd	r18, Z+50	; 0x32
    164c:	ac 01       	movw	r20, r24
    164e:	bd 01       	movw	r22, r26
    1650:	42 2b       	or	r20, r18
    1652:	23 a9       	ldd	r18, Z+51	; 0x33
    1654:	30 e0       	ldi	r19, 0x00	; 0
    1656:	92 2f       	mov	r25, r18
    1658:	88 27       	eor	r24, r24
    165a:	a0 e0       	ldi	r26, 0x00	; 0
    165c:	b0 e0       	ldi	r27, 0x00	; 0
    165e:	84 2b       	or	r24, r20
    1660:	95 2b       	or	r25, r21
    1662:	a6 2b       	or	r26, r22
    1664:	b7 2b       	or	r27, r23
    1666:	82 35       	cpi	r24, 0x52	; 82
    1668:	92 45       	sbci	r25, 0x52	; 82
    166a:	a1 46       	sbci	r26, 0x61	; 97
    166c:	b1 44       	sbci	r27, 0x41	; 65
    166e:	09 f0       	breq	.+2      	; 0x1672 <find_volume+0x4fe>
    1670:	6d c0       	rjmp	.+218    	; 0x174c <find_volume+0x5d8>
    1672:	f8 01       	movw	r30, r16
    1674:	e7 5e       	subi	r30, 0xE7	; 231
    1676:	fd 4f       	sbci	r31, 0xFD	; 253
    1678:	20 81       	ld	r18, Z
    167a:	31 97       	sbiw	r30, 0x01	; 1
    167c:	80 81       	ld	r24, Z
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	a0 e0       	ldi	r26, 0x00	; 0
    1682:	b0 e0       	ldi	r27, 0x00	; 0
    1684:	dc 01       	movw	r26, r24
    1686:	99 27       	eor	r25, r25
    1688:	88 27       	eor	r24, r24
    168a:	b2 2b       	or	r27, r18
    168c:	32 97       	sbiw	r30, 0x02	; 2
    168e:	20 81       	ld	r18, Z
    1690:	ac 01       	movw	r20, r24
    1692:	bd 01       	movw	r22, r26
    1694:	42 2b       	or	r20, r18
    1696:	31 96       	adiw	r30, 0x01	; 1
    1698:	20 81       	ld	r18, Z
    169a:	30 e0       	ldi	r19, 0x00	; 0
    169c:	92 2f       	mov	r25, r18
    169e:	88 27       	eor	r24, r24
    16a0:	a0 e0       	ldi	r26, 0x00	; 0
    16a2:	b0 e0       	ldi	r27, 0x00	; 0
    16a4:	84 2b       	or	r24, r20
    16a6:	95 2b       	or	r25, r21
    16a8:	a6 2b       	or	r26, r22
    16aa:	b7 2b       	or	r27, r23
    16ac:	82 37       	cpi	r24, 0x72	; 114
    16ae:	92 47       	sbci	r25, 0x72	; 114
    16b0:	a1 44       	sbci	r26, 0x41	; 65
    16b2:	b1 46       	sbci	r27, 0x61	; 97
    16b4:	09 f0       	breq	.+2      	; 0x16b8 <find_volume+0x544>
    16b6:	4d c0       	rjmp	.+154    	; 0x1752 <find_volume+0x5de>
    16b8:	36 96       	adiw	r30, 0x06	; 6
    16ba:	20 81       	ld	r18, Z
    16bc:	31 97       	sbiw	r30, 0x01	; 1
    16be:	80 81       	ld	r24, Z
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	a0 e0       	ldi	r26, 0x00	; 0
    16c4:	b0 e0       	ldi	r27, 0x00	; 0
    16c6:	dc 01       	movw	r26, r24
    16c8:	99 27       	eor	r25, r25
    16ca:	88 27       	eor	r24, r24
    16cc:	b2 2b       	or	r27, r18
    16ce:	32 97       	sbiw	r30, 0x02	; 2
    16d0:	20 81       	ld	r18, Z
    16d2:	ac 01       	movw	r20, r24
    16d4:	bd 01       	movw	r22, r26
    16d6:	42 2b       	or	r20, r18
    16d8:	31 96       	adiw	r30, 0x01	; 1
    16da:	20 81       	ld	r18, Z
    16dc:	30 e0       	ldi	r19, 0x00	; 0
    16de:	92 2f       	mov	r25, r18
    16e0:	88 27       	eor	r24, r24
    16e2:	a0 e0       	ldi	r26, 0x00	; 0
    16e4:	b0 e0       	ldi	r27, 0x00	; 0
    16e6:	84 2b       	or	r24, r20
    16e8:	95 2b       	or	r25, r21
    16ea:	a6 2b       	or	r26, r22
    16ec:	b7 2b       	or	r27, r23
    16ee:	f8 01       	movw	r30, r16
    16f0:	86 87       	std	Z+14, r24	; 0x0e
    16f2:	97 87       	std	Z+15, r25	; 0x0f
    16f4:	a0 8b       	std	Z+16, r26	; 0x10
    16f6:	b1 8b       	std	Z+17, r27	; 0x11
    16f8:	ef 5d       	subi	r30, 0xDF	; 223
    16fa:	fd 4f       	sbci	r31, 0xFD	; 253
    16fc:	20 81       	ld	r18, Z
    16fe:	31 97       	sbiw	r30, 0x01	; 1
    1700:	80 81       	ld	r24, Z
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	a0 e0       	ldi	r26, 0x00	; 0
    1706:	b0 e0       	ldi	r27, 0x00	; 0
    1708:	dc 01       	movw	r26, r24
    170a:	99 27       	eor	r25, r25
    170c:	88 27       	eor	r24, r24
    170e:	b2 2b       	or	r27, r18
    1710:	32 97       	sbiw	r30, 0x02	; 2
    1712:	20 81       	ld	r18, Z
    1714:	ac 01       	movw	r20, r24
    1716:	bd 01       	movw	r22, r26
    1718:	42 2b       	or	r20, r18
    171a:	31 96       	adiw	r30, 0x01	; 1
    171c:	20 81       	ld	r18, Z
    171e:	30 e0       	ldi	r19, 0x00	; 0
    1720:	92 2f       	mov	r25, r18
    1722:	88 27       	eor	r24, r24
    1724:	a0 e0       	ldi	r26, 0x00	; 0
    1726:	b0 e0       	ldi	r27, 0x00	; 0
    1728:	84 2b       	or	r24, r20
    172a:	95 2b       	or	r25, r21
    172c:	a6 2b       	or	r26, r22
    172e:	b7 2b       	or	r27, r23
    1730:	f8 01       	movw	r30, r16
    1732:	82 87       	std	Z+10, r24	; 0x0a
    1734:	93 87       	std	Z+11, r25	; 0x0b
    1736:	a4 87       	std	Z+12, r26	; 0x0c
    1738:	b5 87       	std	Z+13, r27	; 0x0d
    173a:	f3 e0       	ldi	r31, 0x03	; 3
    173c:	f9 8b       	std	Y+17, r31	; 0x11
    173e:	0b c0       	rjmp	.+22     	; 0x1756 <find_volume+0x5e2>
    1740:	e3 e0       	ldi	r30, 0x03	; 3
    1742:	e9 8b       	std	Y+17, r30	; 0x11
    1744:	08 c0       	rjmp	.+16     	; 0x1756 <find_volume+0x5e2>
    1746:	f3 e0       	ldi	r31, 0x03	; 3
    1748:	f9 8b       	std	Y+17, r31	; 0x11
    174a:	05 c0       	rjmp	.+10     	; 0x1756 <find_volume+0x5e2>
    174c:	e3 e0       	ldi	r30, 0x03	; 3
    174e:	e9 8b       	std	Y+17, r30	; 0x11
    1750:	02 c0       	rjmp	.+4      	; 0x1756 <find_volume+0x5e2>
    1752:	f3 e0       	ldi	r31, 0x03	; 3
    1754:	f9 8b       	std	Y+17, r31	; 0x11
    1756:	e9 89       	ldd	r30, Y+17	; 0x11
    1758:	d8 01       	movw	r26, r16
    175a:	ec 93       	st	X, r30
    175c:	80 91 eb 01 	lds	r24, 0x01EB
    1760:	90 91 ec 01 	lds	r25, 0x01EC
    1764:	01 96       	adiw	r24, 0x01	; 1
    1766:	90 93 ec 01 	sts	0x01EC, r25
    176a:	80 93 eb 01 	sts	0x01EB, r24
    176e:	17 96       	adiw	r26, 0x07	; 7
    1770:	9c 93       	st	X, r25
    1772:	8e 93       	st	-X, r24
    1774:	16 97       	sbiw	r26, 0x06	; 6
    1776:	52 96       	adiw	r26, 0x12	; 18
    1778:	1d 92       	st	X+, r1
    177a:	1d 92       	st	X+, r1
    177c:	1d 92       	st	X+, r1
    177e:	1c 92       	st	X, r1
    1780:	55 97       	sbiw	r26, 0x15	; 21
    1782:	80 e0       	ldi	r24, 0x00	; 0
    1784:	ad c0       	rjmp	.+346    	; 0x18e0 <find_volume+0x76c>
    1786:	8b e0       	ldi	r24, 0x0B	; 11
    1788:	ab c0       	rjmp	.+342    	; 0x18e0 <find_volume+0x76c>
    178a:	8c e0       	ldi	r24, 0x0C	; 12
    178c:	a9 c0       	rjmp	.+338    	; 0x18e0 <find_volume+0x76c>
    178e:	80 e0       	ldi	r24, 0x00	; 0
    1790:	a7 c0       	rjmp	.+334    	; 0x18e0 <find_volume+0x76c>
    1792:	80 e0       	ldi	r24, 0x00	; 0
    1794:	a5 c0       	rjmp	.+330    	; 0x18e0 <find_volume+0x76c>
    1796:	83 e0       	ldi	r24, 0x03	; 3
    1798:	a3 c0       	rjmp	.+326    	; 0x18e0 <find_volume+0x76c>
    179a:	8a e0       	ldi	r24, 0x0A	; 10
    179c:	a1 c0       	rjmp	.+322    	; 0x18e0 <find_volume+0x76c>
    179e:	81 e0       	ldi	r24, 0x01	; 1
    17a0:	9f c0       	rjmp	.+318    	; 0x18e0 <find_volume+0x76c>
    17a2:	8d e0       	ldi	r24, 0x0D	; 13
    17a4:	9d c0       	rjmp	.+314    	; 0x18e0 <find_volume+0x76c>
    17a6:	8d e0       	ldi	r24, 0x0D	; 13
    17a8:	9b c0       	rjmp	.+310    	; 0x18e0 <find_volume+0x76c>
    17aa:	8d e0       	ldi	r24, 0x0D	; 13
    17ac:	99 c0       	rjmp	.+306    	; 0x18e0 <find_volume+0x76c>
    17ae:	8d e0       	ldi	r24, 0x0D	; 13
    17b0:	97 c0       	rjmp	.+302    	; 0x18e0 <find_volume+0x76c>
    17b2:	8d e0       	ldi	r24, 0x0D	; 13
    17b4:	95 c0       	rjmp	.+298    	; 0x18e0 <find_volume+0x76c>
    17b6:	8d e0       	ldi	r24, 0x0D	; 13
    17b8:	93 c0       	rjmp	.+294    	; 0x18e0 <find_volume+0x76c>
    17ba:	8d e0       	ldi	r24, 0x0D	; 13
    17bc:	91 c0       	rjmp	.+290    	; 0x18e0 <find_volume+0x76c>
    17be:	8d e0       	ldi	r24, 0x0D	; 13
    17c0:	8f c0       	rjmp	.+286    	; 0x18e0 <find_volume+0x76c>
    17c2:	8d e0       	ldi	r24, 0x0D	; 13
    17c4:	8d c0       	rjmp	.+282    	; 0x18e0 <find_volume+0x76c>
    17c6:	8d e0       	ldi	r24, 0x0D	; 13
    17c8:	8b c0       	rjmp	.+278    	; 0x18e0 <find_volume+0x76c>
    17ca:	8d e0       	ldi	r24, 0x0D	; 13
    17cc:	89 c0       	rjmp	.+274    	; 0x18e0 <find_volume+0x76c>
    17ce:	8d e0       	ldi	r24, 0x0D	; 13
    17d0:	87 c0       	rjmp	.+270    	; 0x18e0 <find_volume+0x76c>
    17d2:	8d e0       	ldi	r24, 0x0D	; 13
    17d4:	85 c0       	rjmp	.+266    	; 0x18e0 <find_volume+0x76c>
    17d6:	40 e0       	ldi	r20, 0x00	; 0
    17d8:	50 e0       	ldi	r21, 0x00	; 0
    17da:	ba 01       	movw	r22, r20
    17dc:	c8 01       	movw	r24, r16
    17de:	3e dc       	rcall	.-1924   	; 0x105c <check_fs>
    17e0:	81 30       	cpi	r24, 0x01	; 1
    17e2:	09 f0       	breq	.+2      	; 0x17e6 <find_volume+0x672>
    17e4:	5f cd       	rjmp	.-1346   	; 0x12a4 <find_volume+0x130>
    17e6:	fe 01       	movw	r30, r28
    17e8:	31 96       	adiw	r30, 0x01	; 1
    17ea:	5f 01       	movw	r10, r30
    17ec:	f8 01       	movw	r30, r16
    17ee:	e5 50       	subi	r30, 0x05	; 5
    17f0:	fe 4f       	sbci	r31, 0xFE	; 254
    17f2:	a8 01       	movw	r20, r16
    17f4:	45 5c       	subi	r20, 0xC5	; 197
    17f6:	5d 4f       	sbci	r21, 0xFD	; 253
    17f8:	95 01       	movw	r18, r10
    17fa:	81 2c       	mov	r8, r1
    17fc:	91 2c       	mov	r9, r1
    17fe:	70 e0       	ldi	r23, 0x00	; 0
    1800:	60 e0       	ldi	r22, 0x00	; 0
    1802:	08 cd       	rjmp	.-1520   	; 0x1214 <find_volume+0xa0>
    1804:	29 01       	movw	r4, r18
    1806:	3a 01       	movw	r6, r20
    1808:	f2 e0       	ldi	r31, 0x02	; 2
    180a:	4f 0e       	add	r4, r31
    180c:	51 1c       	adc	r5, r1
    180e:	61 1c       	adc	r6, r1
    1810:	71 1c       	adc	r7, r1
    1812:	d8 01       	movw	r26, r16
    1814:	56 96       	adiw	r26, 0x16	; 22
    1816:	4d 92       	st	X+, r4
    1818:	5d 92       	st	X+, r5
    181a:	6d 92       	st	X+, r6
    181c:	7c 92       	st	X, r7
    181e:	59 97       	sbiw	r26, 0x19	; 25
    1820:	f8 01       	movw	r30, r16
    1822:	c6 8e       	std	Z+30, r12	; 0x1e
    1824:	d7 8e       	std	Z+31, r13	; 0x1f
    1826:	e0 a2       	std	Z+32, r14	; 0x20
    1828:	f1 a2       	std	Z+33, r15	; 0x21
    182a:	8e 89       	ldd	r24, Y+22	; 0x16
    182c:	9f 89       	ldd	r25, Y+23	; 0x17
    182e:	a8 8d       	ldd	r26, Y+24	; 0x18
    1830:	b9 8d       	ldd	r27, Y+25	; 0x19
    1832:	8c 0d       	add	r24, r12
    1834:	9d 1d       	adc	r25, r13
    1836:	ae 1d       	adc	r26, r14
    1838:	bf 1d       	adc	r27, r15
    183a:	82 a3       	std	Z+34, r24	; 0x22
    183c:	93 a3       	std	Z+35, r25	; 0x23
    183e:	a4 a3       	std	Z+36, r26	; 0x24
    1840:	b5 a3       	std	Z+37, r27	; 0x25
    1842:	8a 89       	ldd	r24, Y+18	; 0x12
    1844:	9b 89       	ldd	r25, Y+19	; 0x13
    1846:	ac 89       	ldd	r26, Y+20	; 0x14
    1848:	bd 89       	ldd	r27, Y+21	; 0x15
    184a:	8c 0d       	add	r24, r12
    184c:	9d 1d       	adc	r25, r13
    184e:	ae 1d       	adc	r26, r14
    1850:	bf 1d       	adc	r27, r15
    1852:	82 a7       	std	Z+42, r24	; 0x2a
    1854:	93 a7       	std	Z+43, r25	; 0x2b
    1856:	a4 a7       	std	Z+44, r26	; 0x2c
    1858:	b5 a7       	std	Z+45, r27	; 0x2d
    185a:	60 ce       	rjmp	.-832    	; 0x151c <find_volume+0x3a8>
    185c:	8f ef       	ldi	r24, 0xFF	; 255
    185e:	9f ef       	ldi	r25, 0xFF	; 255
    1860:	dc 01       	movw	r26, r24
    1862:	f8 01       	movw	r30, r16
    1864:	86 87       	std	Z+14, r24	; 0x0e
    1866:	97 87       	std	Z+15, r25	; 0x0f
    1868:	a0 8b       	std	Z+16, r26	; 0x10
    186a:	b1 8b       	std	Z+17, r27	; 0x11
    186c:	82 87       	std	Z+10, r24	; 0x0a
    186e:	93 87       	std	Z+11, r25	; 0x0b
    1870:	a4 87       	std	Z+12, r26	; 0x0c
    1872:	b5 87       	std	Z+13, r27	; 0x0d
    1874:	80 e8       	ldi	r24, 0x80	; 128
    1876:	85 83       	std	Z+5, r24	; 0x05
    1878:	ed 59       	subi	r30, 0x9D	; 157
    187a:	ff 4f       	sbci	r31, 0xFF	; 255
    187c:	80 81       	ld	r24, Z
    187e:	90 e0       	ldi	r25, 0x00	; 0
    1880:	98 2f       	mov	r25, r24
    1882:	88 27       	eor	r24, r24
    1884:	31 97       	sbiw	r30, 0x01	; 1
    1886:	20 81       	ld	r18, Z
    1888:	82 2b       	or	r24, r18
    188a:	01 97       	sbiw	r24, 0x01	; 1
    188c:	09 f4       	brne	.+2      	; 0x1890 <find_volume+0x71c>
    188e:	b8 ce       	rjmp	.-656    	; 0x1600 <find_volume+0x48c>
    1890:	f3 e0       	ldi	r31, 0x03	; 3
    1892:	f9 8b       	std	Y+17, r31	; 0x11
    1894:	60 cf       	rjmp	.-320    	; 0x1756 <find_volume+0x5e2>
    1896:	8f ef       	ldi	r24, 0xFF	; 255
    1898:	9f ef       	ldi	r25, 0xFF	; 255
    189a:	dc 01       	movw	r26, r24
    189c:	f8 01       	movw	r30, r16
    189e:	86 87       	std	Z+14, r24	; 0x0e
    18a0:	97 87       	std	Z+15, r25	; 0x0f
    18a2:	a0 8b       	std	Z+16, r26	; 0x10
    18a4:	b1 8b       	std	Z+17, r27	; 0x11
    18a6:	82 87       	std	Z+10, r24	; 0x0a
    18a8:	93 87       	std	Z+11, r25	; 0x0b
    18aa:	a4 87       	std	Z+12, r26	; 0x0c
    18ac:	b5 87       	std	Z+13, r27	; 0x0d
    18ae:	80 e8       	ldi	r24, 0x80	; 128
    18b0:	85 83       	std	Z+5, r24	; 0x05
    18b2:	51 cf       	rjmp	.-350    	; 0x1756 <find_volume+0x5e2>
    18b4:	ff ef       	ldi	r31, 0xFF	; 255
    18b6:	4f 0e       	add	r4, r31
    18b8:	f3 e0       	ldi	r31, 0x03	; 3
    18ba:	5f 1e       	adc	r5, r31
    18bc:	61 1c       	adc	r6, r1
    18be:	71 1c       	adc	r7, r1
    18c0:	03 2e       	mov	r0, r19
    18c2:	3a e0       	ldi	r19, 0x0A	; 10
    18c4:	76 94       	lsr	r7
    18c6:	67 94       	ror	r6
    18c8:	57 94       	ror	r5
    18ca:	47 94       	ror	r4
    18cc:	3a 95       	dec	r19
    18ce:	d1 f7       	brne	.-12     	; 0x18c4 <find_volume+0x750>
    18d0:	30 2d       	mov	r19, r0
    18d2:	84 14       	cp	r8, r4
    18d4:	95 04       	cpc	r9, r5
    18d6:	a6 04       	cpc	r10, r6
    18d8:	b7 04       	cpc	r11, r7
    18da:	08 f4       	brcc	.+2      	; 0x18de <find_volume+0x76a>
    18dc:	7a cf       	rjmp	.-268    	; 0x17d2 <find_volume+0x65e>
    18de:	db cf       	rjmp	.-74     	; 0x1896 <find_volume+0x722>
    18e0:	6d 96       	adiw	r28, 0x1d	; 29
    18e2:	0f b6       	in	r0, 0x3f	; 63
    18e4:	f8 94       	cli
    18e6:	de bf       	out	0x3e, r29	; 62
    18e8:	0f be       	out	0x3f, r0	; 63
    18ea:	cd bf       	out	0x3d, r28	; 61
    18ec:	df 91       	pop	r29
    18ee:	cf 91       	pop	r28
    18f0:	1f 91       	pop	r17
    18f2:	0f 91       	pop	r16
    18f4:	ff 90       	pop	r15
    18f6:	ef 90       	pop	r14
    18f8:	df 90       	pop	r13
    18fa:	cf 90       	pop	r12
    18fc:	bf 90       	pop	r11
    18fe:	af 90       	pop	r10
    1900:	9f 90       	pop	r9
    1902:	8f 90       	pop	r8
    1904:	7f 90       	pop	r7
    1906:	6f 90       	pop	r6
    1908:	5f 90       	pop	r5
    190a:	4f 90       	pop	r4
    190c:	3f 90       	pop	r3
    190e:	2f 90       	pop	r2
    1910:	08 95       	ret

00001912 <sync_fs>:
    1912:	ef 92       	push	r14
    1914:	ff 92       	push	r15
    1916:	0f 93       	push	r16
    1918:	1f 93       	push	r17
    191a:	cf 93       	push	r28
    191c:	df 93       	push	r29
    191e:	ec 01       	movw	r28, r24
    1920:	f8 da       	rcall	.-2576   	; 0xf12 <sync_window>
    1922:	98 2f       	mov	r25, r24
    1924:	81 11       	cpse	r24, r1
    1926:	61 c0       	rjmp	.+194    	; 0x19ea <sync_fs+0xd8>
    1928:	88 81       	ld	r24, Y
    192a:	83 30       	cpi	r24, 0x03	; 3
    192c:	09 f0       	breq	.+2      	; 0x1930 <sync_fs+0x1e>
    192e:	53 c0       	rjmp	.+166    	; 0x19d6 <sync_fs+0xc4>
    1930:	8d 81       	ldd	r24, Y+5	; 0x05
    1932:	81 30       	cpi	r24, 0x01	; 1
    1934:	09 f0       	breq	.+2      	; 0x1938 <sync_fs+0x26>
    1936:	4f c0       	rjmp	.+158    	; 0x19d6 <sync_fs+0xc4>
    1938:	40 e0       	ldi	r20, 0x00	; 0
    193a:	54 e0       	ldi	r21, 0x04	; 4
    193c:	60 e0       	ldi	r22, 0x00	; 0
    193e:	70 e0       	ldi	r23, 0x00	; 0
    1940:	7e 01       	movw	r14, r28
    1942:	82 e3       	ldi	r24, 0x32	; 50
    1944:	e8 0e       	add	r14, r24
    1946:	f1 1c       	adc	r15, r1
    1948:	c7 01       	movw	r24, r14
    194a:	29 da       	rcall	.-2990   	; 0xd9e <mem_set>
    194c:	85 e5       	ldi	r24, 0x55	; 85
    194e:	fe 01       	movw	r30, r28
    1950:	e0 5d       	subi	r30, 0xD0	; 208
    1952:	fd 4f       	sbci	r31, 0xFD	; 253
    1954:	80 83       	st	Z, r24
    1956:	8a ea       	ldi	r24, 0xAA	; 170
    1958:	31 96       	adiw	r30, 0x01	; 1
    195a:	80 83       	st	Z, r24
    195c:	82 e5       	ldi	r24, 0x52	; 82
    195e:	8a ab       	std	Y+50, r24	; 0x32
    1960:	8b ab       	std	Y+51, r24	; 0x33
    1962:	81 e6       	ldi	r24, 0x61	; 97
    1964:	8c ab       	std	Y+52, r24	; 0x34
    1966:	91 e4       	ldi	r25, 0x41	; 65
    1968:	9d ab       	std	Y+53, r25	; 0x35
    196a:	22 e7       	ldi	r18, 0x72	; 114
    196c:	7b 97       	sbiw	r30, 0x1b	; 27
    196e:	20 83       	st	Z, r18
    1970:	31 96       	adiw	r30, 0x01	; 1
    1972:	20 83       	st	Z, r18
    1974:	31 96       	adiw	r30, 0x01	; 1
    1976:	90 83       	st	Z, r25
    1978:	31 96       	adiw	r30, 0x01	; 1
    197a:	80 83       	st	Z, r24
    197c:	3e 85       	ldd	r19, Y+14	; 0x0e
    197e:	2f 85       	ldd	r18, Y+15	; 0x0f
    1980:	98 89       	ldd	r25, Y+16	; 0x10
    1982:	89 89       	ldd	r24, Y+17	; 0x11
    1984:	31 96       	adiw	r30, 0x01	; 1
    1986:	30 83       	st	Z, r19
    1988:	31 96       	adiw	r30, 0x01	; 1
    198a:	20 83       	st	Z, r18
    198c:	31 96       	adiw	r30, 0x01	; 1
    198e:	90 83       	st	Z, r25
    1990:	31 96       	adiw	r30, 0x01	; 1
    1992:	80 83       	st	Z, r24
    1994:	3a 85       	ldd	r19, Y+10	; 0x0a
    1996:	2b 85       	ldd	r18, Y+11	; 0x0b
    1998:	9c 85       	ldd	r25, Y+12	; 0x0c
    199a:	8d 85       	ldd	r24, Y+13	; 0x0d
    199c:	31 96       	adiw	r30, 0x01	; 1
    199e:	30 83       	st	Z, r19
    19a0:	31 96       	adiw	r30, 0x01	; 1
    19a2:	20 83       	st	Z, r18
    19a4:	31 96       	adiw	r30, 0x01	; 1
    19a6:	90 83       	st	Z, r25
    19a8:	31 96       	adiw	r30, 0x01	; 1
    19aa:	80 83       	st	Z, r24
    19ac:	8e 8d       	ldd	r24, Y+30	; 0x1e
    19ae:	9f 8d       	ldd	r25, Y+31	; 0x1f
    19b0:	a8 a1       	ldd	r26, Y+32	; 0x20
    19b2:	b9 a1       	ldd	r27, Y+33	; 0x21
    19b4:	9c 01       	movw	r18, r24
    19b6:	ad 01       	movw	r20, r26
    19b8:	2f 5f       	subi	r18, 0xFF	; 255
    19ba:	3f 4f       	sbci	r19, 0xFF	; 255
    19bc:	4f 4f       	sbci	r20, 0xFF	; 255
    19be:	5f 4f       	sbci	r21, 0xFF	; 255
    19c0:	2e a7       	std	Y+46, r18	; 0x2e
    19c2:	3f a7       	std	Y+47, r19	; 0x2f
    19c4:	48 ab       	std	Y+48, r20	; 0x30
    19c6:	59 ab       	std	Y+49, r21	; 0x31
    19c8:	01 e0       	ldi	r16, 0x01	; 1
    19ca:	10 e0       	ldi	r17, 0x00	; 0
    19cc:	b7 01       	movw	r22, r14
    19ce:	89 81       	ldd	r24, Y+1	; 0x01
    19d0:	0e 94 9f 03 	call	0x73e	; 0x73e <disk_write>
    19d4:	1d 82       	std	Y+5, r1	; 0x05
    19d6:	40 e0       	ldi	r20, 0x00	; 0
    19d8:	50 e0       	ldi	r21, 0x00	; 0
    19da:	60 e0       	ldi	r22, 0x00	; 0
    19dc:	89 81       	ldd	r24, Y+1	; 0x01
    19de:	0e 94 0d 04 	call	0x81a	; 0x81a <disk_ioctl>
    19e2:	91 e0       	ldi	r25, 0x01	; 1
    19e4:	81 11       	cpse	r24, r1
    19e6:	01 c0       	rjmp	.+2      	; 0x19ea <sync_fs+0xd8>
    19e8:	90 e0       	ldi	r25, 0x00	; 0
    19ea:	89 2f       	mov	r24, r25
    19ec:	df 91       	pop	r29
    19ee:	cf 91       	pop	r28
    19f0:	1f 91       	pop	r17
    19f2:	0f 91       	pop	r16
    19f4:	ff 90       	pop	r15
    19f6:	ef 90       	pop	r14
    19f8:	08 95       	ret

000019fa <clust2sect>:
    19fa:	cf 92       	push	r12
    19fc:	df 92       	push	r13
    19fe:	ef 92       	push	r14
    1a00:	ff 92       	push	r15
    1a02:	fc 01       	movw	r30, r24
    1a04:	9a 01       	movw	r18, r20
    1a06:	ab 01       	movw	r20, r22
    1a08:	22 50       	subi	r18, 0x02	; 2
    1a0a:	31 09       	sbc	r19, r1
    1a0c:	41 09       	sbc	r20, r1
    1a0e:	51 09       	sbc	r21, r1
    1a10:	c6 88       	ldd	r12, Z+22	; 0x16
    1a12:	d7 88       	ldd	r13, Z+23	; 0x17
    1a14:	e0 8c       	ldd	r14, Z+24	; 0x18
    1a16:	f1 8c       	ldd	r15, Z+25	; 0x19
    1a18:	82 e0       	ldi	r24, 0x02	; 2
    1a1a:	c8 1a       	sub	r12, r24
    1a1c:	d1 08       	sbc	r13, r1
    1a1e:	e1 08       	sbc	r14, r1
    1a20:	f1 08       	sbc	r15, r1
    1a22:	2c 15       	cp	r18, r12
    1a24:	3d 05       	cpc	r19, r13
    1a26:	4e 05       	cpc	r20, r14
    1a28:	5f 05       	cpc	r21, r15
    1a2a:	68 f4       	brcc	.+26     	; 0x1a46 <clust2sect+0x4c>
    1a2c:	a2 81       	ldd	r26, Z+2	; 0x02
    1a2e:	b0 e0       	ldi	r27, 0x00	; 0
    1a30:	0e 94 6f 1c 	call	0x38de	; 0x38de <__muluhisi3>
    1a34:	c2 a4       	ldd	r12, Z+42	; 0x2a
    1a36:	d3 a4       	ldd	r13, Z+43	; 0x2b
    1a38:	e4 a4       	ldd	r14, Z+44	; 0x2c
    1a3a:	f5 a4       	ldd	r15, Z+45	; 0x2d
    1a3c:	6c 0d       	add	r22, r12
    1a3e:	7d 1d       	adc	r23, r13
    1a40:	8e 1d       	adc	r24, r14
    1a42:	9f 1d       	adc	r25, r15
    1a44:	03 c0       	rjmp	.+6      	; 0x1a4c <clust2sect+0x52>
    1a46:	60 e0       	ldi	r22, 0x00	; 0
    1a48:	70 e0       	ldi	r23, 0x00	; 0
    1a4a:	cb 01       	movw	r24, r22
    1a4c:	ff 90       	pop	r15
    1a4e:	ef 90       	pop	r14
    1a50:	df 90       	pop	r13
    1a52:	cf 90       	pop	r12
    1a54:	08 95       	ret

00001a56 <get_fat>:
    1a56:	af 92       	push	r10
    1a58:	bf 92       	push	r11
    1a5a:	cf 92       	push	r12
    1a5c:	df 92       	push	r13
    1a5e:	ef 92       	push	r14
    1a60:	ff 92       	push	r15
    1a62:	0f 93       	push	r16
    1a64:	1f 93       	push	r17
    1a66:	cf 93       	push	r28
    1a68:	df 93       	push	r29
    1a6a:	ec 01       	movw	r28, r24
    1a6c:	6a 01       	movw	r12, r20
    1a6e:	7b 01       	movw	r14, r22
    1a70:	42 30       	cpi	r20, 0x02	; 2
    1a72:	51 05       	cpc	r21, r1
    1a74:	61 05       	cpc	r22, r1
    1a76:	71 05       	cpc	r23, r1
    1a78:	08 f4       	brcc	.+2      	; 0x1a7c <get_fat+0x26>
    1a7a:	c6 c0       	rjmp	.+396    	; 0x1c08 <get_fat+0x1b2>
    1a7c:	8e 89       	ldd	r24, Y+22	; 0x16
    1a7e:	9f 89       	ldd	r25, Y+23	; 0x17
    1a80:	a8 8d       	ldd	r26, Y+24	; 0x18
    1a82:	b9 8d       	ldd	r27, Y+25	; 0x19
    1a84:	48 17       	cp	r20, r24
    1a86:	59 07       	cpc	r21, r25
    1a88:	6a 07       	cpc	r22, r26
    1a8a:	7b 07       	cpc	r23, r27
    1a8c:	08 f0       	brcs	.+2      	; 0x1a90 <get_fat+0x3a>
    1a8e:	c1 c0       	rjmp	.+386    	; 0x1c12 <get_fat+0x1bc>
    1a90:	88 81       	ld	r24, Y
    1a92:	82 30       	cpi	r24, 0x02	; 2
    1a94:	09 f4       	brne	.+2      	; 0x1a98 <get_fat+0x42>
    1a96:	4d c0       	rjmp	.+154    	; 0x1b32 <get_fat+0xdc>
    1a98:	83 30       	cpi	r24, 0x03	; 3
    1a9a:	09 f4       	brne	.+2      	; 0x1a9e <get_fat+0x48>
    1a9c:	73 c0       	rjmp	.+230    	; 0x1b84 <get_fat+0x12e>
    1a9e:	81 30       	cpi	r24, 0x01	; 1
    1aa0:	09 f0       	breq	.+2      	; 0x1aa4 <get_fat+0x4e>
    1aa2:	bc c0       	rjmp	.+376    	; 0x1c1c <get_fat+0x1c6>
    1aa4:	8a 01       	movw	r16, r20
    1aa6:	16 95       	lsr	r17
    1aa8:	07 95       	ror	r16
    1aaa:	04 0f       	add	r16, r20
    1aac:	15 1f       	adc	r17, r21
    1aae:	c8 01       	movw	r24, r16
    1ab0:	89 2f       	mov	r24, r25
    1ab2:	99 27       	eor	r25, r25
    1ab4:	86 95       	lsr	r24
    1ab6:	86 95       	lsr	r24
    1ab8:	4a a1       	ldd	r20, Y+34	; 0x22
    1aba:	5b a1       	ldd	r21, Y+35	; 0x23
    1abc:	6c a1       	ldd	r22, Y+36	; 0x24
    1abe:	7d a1       	ldd	r23, Y+37	; 0x25
    1ac0:	48 0f       	add	r20, r24
    1ac2:	59 1f       	adc	r21, r25
    1ac4:	61 1d       	adc	r22, r1
    1ac6:	71 1d       	adc	r23, r1
    1ac8:	ce 01       	movw	r24, r28
    1aca:	8c da       	rcall	.-2792   	; 0xfe4 <move_window>
    1acc:	81 11       	cpse	r24, r1
    1ace:	ab c0       	rjmp	.+342    	; 0x1c26 <get_fat+0x1d0>
    1ad0:	58 01       	movw	r10, r16
    1ad2:	8f ef       	ldi	r24, 0xFF	; 255
    1ad4:	a8 1a       	sub	r10, r24
    1ad6:	b8 0a       	sbc	r11, r24
    1ad8:	13 70       	andi	r17, 0x03	; 3
    1ada:	fe 01       	movw	r30, r28
    1adc:	e0 0f       	add	r30, r16
    1ade:	f1 1f       	adc	r31, r17
    1ae0:	12 a9       	ldd	r17, Z+50	; 0x32
    1ae2:	c5 01       	movw	r24, r10
    1ae4:	89 2f       	mov	r24, r25
    1ae6:	99 27       	eor	r25, r25
    1ae8:	86 95       	lsr	r24
    1aea:	86 95       	lsr	r24
    1aec:	4a a1       	ldd	r20, Y+34	; 0x22
    1aee:	5b a1       	ldd	r21, Y+35	; 0x23
    1af0:	6c a1       	ldd	r22, Y+36	; 0x24
    1af2:	7d a1       	ldd	r23, Y+37	; 0x25
    1af4:	48 0f       	add	r20, r24
    1af6:	59 1f       	adc	r21, r25
    1af8:	61 1d       	adc	r22, r1
    1afa:	71 1d       	adc	r23, r1
    1afc:	ce 01       	movw	r24, r28
    1afe:	72 da       	rcall	.-2844   	; 0xfe4 <move_window>
    1b00:	81 11       	cpse	r24, r1
    1b02:	95 c0       	rjmp	.+298    	; 0x1c2e <get_fat+0x1d8>
    1b04:	83 e0       	ldi	r24, 0x03	; 3
    1b06:	b8 22       	and	r11, r24
    1b08:	ca 0d       	add	r28, r10
    1b0a:	db 1d       	adc	r29, r11
    1b0c:	8a a9       	ldd	r24, Y+50	; 0x32
    1b0e:	61 2f       	mov	r22, r17
    1b10:	70 e0       	ldi	r23, 0x00	; 0
    1b12:	78 2b       	or	r23, r24
    1b14:	c0 fe       	sbrs	r12, 0
    1b16:	09 c0       	rjmp	.+18     	; 0x1b2a <get_fat+0xd4>
    1b18:	72 95       	swap	r23
    1b1a:	62 95       	swap	r22
    1b1c:	6f 70       	andi	r22, 0x0F	; 15
    1b1e:	67 27       	eor	r22, r23
    1b20:	7f 70       	andi	r23, 0x0F	; 15
    1b22:	67 27       	eor	r22, r23
    1b24:	80 e0       	ldi	r24, 0x00	; 0
    1b26:	90 e0       	ldi	r25, 0x00	; 0
    1b28:	8d c0       	rjmp	.+282    	; 0x1c44 <get_fat+0x1ee>
    1b2a:	7f 70       	andi	r23, 0x0F	; 15
    1b2c:	80 e0       	ldi	r24, 0x00	; 0
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	89 c0       	rjmp	.+274    	; 0x1c44 <get_fat+0x1ee>
    1b32:	8a a1       	ldd	r24, Y+34	; 0x22
    1b34:	9b a1       	ldd	r25, Y+35	; 0x23
    1b36:	ac a1       	ldd	r26, Y+36	; 0x24
    1b38:	bd a1       	ldd	r27, Y+37	; 0x25
    1b3a:	03 2e       	mov	r0, r19
    1b3c:	39 e0       	ldi	r19, 0x09	; 9
    1b3e:	76 95       	lsr	r23
    1b40:	67 95       	ror	r22
    1b42:	57 95       	ror	r21
    1b44:	47 95       	ror	r20
    1b46:	3a 95       	dec	r19
    1b48:	d1 f7       	brne	.-12     	; 0x1b3e <get_fat+0xe8>
    1b4a:	30 2d       	mov	r19, r0
    1b4c:	48 0f       	add	r20, r24
    1b4e:	59 1f       	adc	r21, r25
    1b50:	6a 1f       	adc	r22, r26
    1b52:	7b 1f       	adc	r23, r27
    1b54:	ce 01       	movw	r24, r28
    1b56:	46 da       	rcall	.-2932   	; 0xfe4 <move_window>
    1b58:	81 11       	cpse	r24, r1
    1b5a:	6d c0       	rjmp	.+218    	; 0x1c36 <get_fat+0x1e0>
    1b5c:	cc 0c       	add	r12, r12
    1b5e:	dd 1c       	adc	r13, r13
    1b60:	ee 1c       	adc	r14, r14
    1b62:	ff 1c       	adc	r15, r15
    1b64:	e8 94       	clt
    1b66:	c0 f8       	bld	r12, 0
    1b68:	83 e0       	ldi	r24, 0x03	; 3
    1b6a:	d8 22       	and	r13, r24
    1b6c:	ee 24       	eor	r14, r14
    1b6e:	ff 24       	eor	r15, r15
    1b70:	fe 01       	movw	r30, r28
    1b72:	ec 0d       	add	r30, r12
    1b74:	fd 1d       	adc	r31, r13
    1b76:	62 a9       	ldd	r22, Z+50	; 0x32
    1b78:	83 a9       	ldd	r24, Z+51	; 0x33
    1b7a:	70 e0       	ldi	r23, 0x00	; 0
    1b7c:	78 2b       	or	r23, r24
    1b7e:	80 e0       	ldi	r24, 0x00	; 0
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	60 c0       	rjmp	.+192    	; 0x1c44 <get_fat+0x1ee>
    1b84:	45 2f       	mov	r20, r21
    1b86:	56 2f       	mov	r21, r22
    1b88:	67 2f       	mov	r22, r23
    1b8a:	77 27       	eor	r23, r23
    1b8c:	8a a1       	ldd	r24, Y+34	; 0x22
    1b8e:	9b a1       	ldd	r25, Y+35	; 0x23
    1b90:	ac a1       	ldd	r26, Y+36	; 0x24
    1b92:	bd a1       	ldd	r27, Y+37	; 0x25
    1b94:	48 0f       	add	r20, r24
    1b96:	59 1f       	adc	r21, r25
    1b98:	6a 1f       	adc	r22, r26
    1b9a:	7b 1f       	adc	r23, r27
    1b9c:	ce 01       	movw	r24, r28
    1b9e:	22 da       	rcall	.-3004   	; 0xfe4 <move_window>
    1ba0:	81 11       	cpse	r24, r1
    1ba2:	4d c0       	rjmp	.+154    	; 0x1c3e <get_fat+0x1e8>
    1ba4:	cc 0c       	add	r12, r12
    1ba6:	dd 1c       	adc	r13, r13
    1ba8:	ee 1c       	adc	r14, r14
    1baa:	ff 1c       	adc	r15, r15
    1bac:	cc 0c       	add	r12, r12
    1bae:	dd 1c       	adc	r13, r13
    1bb0:	ee 1c       	adc	r14, r14
    1bb2:	ff 1c       	adc	r15, r15
    1bb4:	8c ef       	ldi	r24, 0xFC	; 252
    1bb6:	c8 22       	and	r12, r24
    1bb8:	83 e0       	ldi	r24, 0x03	; 3
    1bba:	d8 22       	and	r13, r24
    1bbc:	ee 24       	eor	r14, r14
    1bbe:	ff 24       	eor	r15, r15
    1bc0:	f6 01       	movw	r30, r12
    1bc2:	f2 96       	adiw	r30, 0x32	; 50
    1bc4:	ec 0f       	add	r30, r28
    1bc6:	fd 1f       	adc	r31, r29
    1bc8:	22 81       	ldd	r18, Z+2	; 0x02
    1bca:	63 81       	ldd	r22, Z+3	; 0x03
    1bcc:	86 2f       	mov	r24, r22
    1bce:	90 e0       	ldi	r25, 0x00	; 0
    1bd0:	a0 e0       	ldi	r26, 0x00	; 0
    1bd2:	b0 e0       	ldi	r27, 0x00	; 0
    1bd4:	b8 2f       	mov	r27, r24
    1bd6:	aa 27       	eor	r26, r26
    1bd8:	99 27       	eor	r25, r25
    1bda:	88 27       	eor	r24, r24
    1bdc:	ac 01       	movw	r20, r24
    1bde:	bd 01       	movw	r22, r26
    1be0:	62 2b       	or	r22, r18
    1be2:	81 81       	ldd	r24, Z+1	; 0x01
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	98 2f       	mov	r25, r24
    1be8:	88 27       	eor	r24, r24
    1bea:	a0 e0       	ldi	r26, 0x00	; 0
    1bec:	b0 e0       	ldi	r27, 0x00	; 0
    1bee:	84 2b       	or	r24, r20
    1bf0:	95 2b       	or	r25, r21
    1bf2:	a6 2b       	or	r26, r22
    1bf4:	b7 2b       	or	r27, r23
    1bf6:	fe 01       	movw	r30, r28
    1bf8:	ec 0d       	add	r30, r12
    1bfa:	fd 1d       	adc	r31, r13
    1bfc:	22 a9       	ldd	r18, Z+50	; 0x32
    1bfe:	82 2b       	or	r24, r18
    1c00:	bc 01       	movw	r22, r24
    1c02:	cd 01       	movw	r24, r26
    1c04:	9f 70       	andi	r25, 0x0F	; 15
    1c06:	1e c0       	rjmp	.+60     	; 0x1c44 <get_fat+0x1ee>
    1c08:	61 e0       	ldi	r22, 0x01	; 1
    1c0a:	70 e0       	ldi	r23, 0x00	; 0
    1c0c:	80 e0       	ldi	r24, 0x00	; 0
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	19 c0       	rjmp	.+50     	; 0x1c44 <get_fat+0x1ee>
    1c12:	61 e0       	ldi	r22, 0x01	; 1
    1c14:	70 e0       	ldi	r23, 0x00	; 0
    1c16:	80 e0       	ldi	r24, 0x00	; 0
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	14 c0       	rjmp	.+40     	; 0x1c44 <get_fat+0x1ee>
    1c1c:	61 e0       	ldi	r22, 0x01	; 1
    1c1e:	70 e0       	ldi	r23, 0x00	; 0
    1c20:	80 e0       	ldi	r24, 0x00	; 0
    1c22:	90 e0       	ldi	r25, 0x00	; 0
    1c24:	0f c0       	rjmp	.+30     	; 0x1c44 <get_fat+0x1ee>
    1c26:	6f ef       	ldi	r22, 0xFF	; 255
    1c28:	7f ef       	ldi	r23, 0xFF	; 255
    1c2a:	cb 01       	movw	r24, r22
    1c2c:	0b c0       	rjmp	.+22     	; 0x1c44 <get_fat+0x1ee>
    1c2e:	6f ef       	ldi	r22, 0xFF	; 255
    1c30:	7f ef       	ldi	r23, 0xFF	; 255
    1c32:	cb 01       	movw	r24, r22
    1c34:	07 c0       	rjmp	.+14     	; 0x1c44 <get_fat+0x1ee>
    1c36:	6f ef       	ldi	r22, 0xFF	; 255
    1c38:	7f ef       	ldi	r23, 0xFF	; 255
    1c3a:	cb 01       	movw	r24, r22
    1c3c:	03 c0       	rjmp	.+6      	; 0x1c44 <get_fat+0x1ee>
    1c3e:	6f ef       	ldi	r22, 0xFF	; 255
    1c40:	7f ef       	ldi	r23, 0xFF	; 255
    1c42:	cb 01       	movw	r24, r22
    1c44:	df 91       	pop	r29
    1c46:	cf 91       	pop	r28
    1c48:	1f 91       	pop	r17
    1c4a:	0f 91       	pop	r16
    1c4c:	ff 90       	pop	r15
    1c4e:	ef 90       	pop	r14
    1c50:	df 90       	pop	r13
    1c52:	cf 90       	pop	r12
    1c54:	bf 90       	pop	r11
    1c56:	af 90       	pop	r10
    1c58:	08 95       	ret

00001c5a <dir_sdi>:
    1c5a:	af 92       	push	r10
    1c5c:	bf 92       	push	r11
    1c5e:	cf 92       	push	r12
    1c60:	df 92       	push	r13
    1c62:	ef 92       	push	r14
    1c64:	ff 92       	push	r15
    1c66:	0f 93       	push	r16
    1c68:	1f 93       	push	r17
    1c6a:	cf 93       	push	r28
    1c6c:	df 93       	push	r29
    1c6e:	ec 01       	movw	r28, r24
    1c70:	8b 01       	movw	r16, r22
    1c72:	7d 83       	std	Y+5, r23	; 0x05
    1c74:	6c 83       	std	Y+4, r22	; 0x04
    1c76:	ce 80       	ldd	r12, Y+6	; 0x06
    1c78:	df 80       	ldd	r13, Y+7	; 0x07
    1c7a:	e8 84       	ldd	r14, Y+8	; 0x08
    1c7c:	f9 84       	ldd	r15, Y+9	; 0x09
    1c7e:	81 e0       	ldi	r24, 0x01	; 1
    1c80:	c8 16       	cp	r12, r24
    1c82:	d1 04       	cpc	r13, r1
    1c84:	e1 04       	cpc	r14, r1
    1c86:	f1 04       	cpc	r15, r1
    1c88:	09 f4       	brne	.+2      	; 0x1c8c <dir_sdi+0x32>
    1c8a:	8c c0       	rjmp	.+280    	; 0x1da4 <dir_sdi+0x14a>
    1c8c:	e8 81       	ld	r30, Y
    1c8e:	f9 81       	ldd	r31, Y+1	; 0x01
    1c90:	86 89       	ldd	r24, Z+22	; 0x16
    1c92:	97 89       	ldd	r25, Z+23	; 0x17
    1c94:	a0 8d       	ldd	r26, Z+24	; 0x18
    1c96:	b1 8d       	ldd	r27, Z+25	; 0x19
    1c98:	c8 16       	cp	r12, r24
    1c9a:	d9 06       	cpc	r13, r25
    1c9c:	ea 06       	cpc	r14, r26
    1c9e:	fb 06       	cpc	r15, r27
    1ca0:	08 f0       	brcs	.+2      	; 0x1ca4 <dir_sdi+0x4a>
    1ca2:	82 c0       	rjmp	.+260    	; 0x1da8 <dir_sdi+0x14e>
    1ca4:	c1 14       	cp	r12, r1
    1ca6:	d1 04       	cpc	r13, r1
    1ca8:	e1 04       	cpc	r14, r1
    1caa:	f1 04       	cpc	r15, r1
    1cac:	c1 f4       	brne	.+48     	; 0x1cde <dir_sdi+0x84>
    1cae:	80 81       	ld	r24, Z
    1cb0:	83 30       	cpi	r24, 0x03	; 3
    1cb2:	41 f4       	brne	.+16     	; 0x1cc4 <dir_sdi+0x6a>
    1cb4:	86 a1       	ldd	r24, Z+38	; 0x26
    1cb6:	97 a1       	ldd	r25, Z+39	; 0x27
    1cb8:	a0 a5       	ldd	r26, Z+40	; 0x28
    1cba:	b1 a5       	ldd	r27, Z+41	; 0x29
    1cbc:	00 97       	sbiw	r24, 0x00	; 0
    1cbe:	a1 05       	cpc	r26, r1
    1cc0:	b1 05       	cpc	r27, r1
    1cc2:	59 f4       	brne	.+22     	; 0x1cda <dir_sdi+0x80>
    1cc4:	80 85       	ldd	r24, Z+8	; 0x08
    1cc6:	91 85       	ldd	r25, Z+9	; 0x09
    1cc8:	08 17       	cp	r16, r24
    1cca:	19 07       	cpc	r17, r25
    1ccc:	08 f0       	brcs	.+2      	; 0x1cd0 <dir_sdi+0x76>
    1cce:	6e c0       	rjmp	.+220    	; 0x1dac <dir_sdi+0x152>
    1cd0:	66 a1       	ldd	r22, Z+38	; 0x26
    1cd2:	77 a1       	ldd	r23, Z+39	; 0x27
    1cd4:	80 a5       	ldd	r24, Z+40	; 0x28
    1cd6:	91 a5       	ldd	r25, Z+41	; 0x29
    1cd8:	35 c0       	rjmp	.+106    	; 0x1d44 <dir_sdi+0xea>
    1cda:	6c 01       	movw	r12, r24
    1cdc:	7d 01       	movw	r14, r26
    1cde:	a2 80       	ldd	r10, Z+2	; 0x02
    1ce0:	80 e2       	ldi	r24, 0x20	; 32
    1ce2:	a8 9e       	mul	r10, r24
    1ce4:	50 01       	movw	r10, r0
    1ce6:	11 24       	eor	r1, r1
    1ce8:	0a 15       	cp	r16, r10
    1cea:	1b 05       	cpc	r17, r11
    1cec:	30 f1       	brcs	.+76     	; 0x1d3a <dir_sdi+0xe0>
    1cee:	b7 01       	movw	r22, r14
    1cf0:	a6 01       	movw	r20, r12
    1cf2:	88 81       	ld	r24, Y
    1cf4:	99 81       	ldd	r25, Y+1	; 0x01
    1cf6:	af de       	rcall	.-674    	; 0x1a56 <get_fat>
    1cf8:	6b 01       	movw	r12, r22
    1cfa:	7c 01       	movw	r14, r24
    1cfc:	8f ef       	ldi	r24, 0xFF	; 255
    1cfe:	c8 16       	cp	r12, r24
    1d00:	d8 06       	cpc	r13, r24
    1d02:	e8 06       	cpc	r14, r24
    1d04:	f8 06       	cpc	r15, r24
    1d06:	09 f4       	brne	.+2      	; 0x1d0a <dir_sdi+0xb0>
    1d08:	53 c0       	rjmp	.+166    	; 0x1db0 <dir_sdi+0x156>
    1d0a:	82 e0       	ldi	r24, 0x02	; 2
    1d0c:	c8 16       	cp	r12, r24
    1d0e:	d1 04       	cpc	r13, r1
    1d10:	e1 04       	cpc	r14, r1
    1d12:	f1 04       	cpc	r15, r1
    1d14:	08 f4       	brcc	.+2      	; 0x1d18 <dir_sdi+0xbe>
    1d16:	4e c0       	rjmp	.+156    	; 0x1db4 <dir_sdi+0x15a>
    1d18:	e8 81       	ld	r30, Y
    1d1a:	f9 81       	ldd	r31, Y+1	; 0x01
    1d1c:	86 89       	ldd	r24, Z+22	; 0x16
    1d1e:	97 89       	ldd	r25, Z+23	; 0x17
    1d20:	a0 8d       	ldd	r26, Z+24	; 0x18
    1d22:	b1 8d       	ldd	r27, Z+25	; 0x19
    1d24:	c8 16       	cp	r12, r24
    1d26:	d9 06       	cpc	r13, r25
    1d28:	ea 06       	cpc	r14, r26
    1d2a:	fb 06       	cpc	r15, r27
    1d2c:	08 f0       	brcs	.+2      	; 0x1d30 <dir_sdi+0xd6>
    1d2e:	44 c0       	rjmp	.+136    	; 0x1db8 <dir_sdi+0x15e>
    1d30:	0a 19       	sub	r16, r10
    1d32:	1b 09       	sbc	r17, r11
    1d34:	0a 15       	cp	r16, r10
    1d36:	1b 05       	cpc	r17, r11
    1d38:	d0 f6       	brcc	.-76     	; 0x1cee <dir_sdi+0x94>
    1d3a:	b7 01       	movw	r22, r14
    1d3c:	a6 01       	movw	r20, r12
    1d3e:	88 81       	ld	r24, Y
    1d40:	99 81       	ldd	r25, Y+1	; 0x01
    1d42:	5b de       	rcall	.-842    	; 0x19fa <clust2sect>
    1d44:	ca 86       	std	Y+10, r12	; 0x0a
    1d46:	db 86       	std	Y+11, r13	; 0x0b
    1d48:	ec 86       	std	Y+12, r14	; 0x0c
    1d4a:	fd 86       	std	Y+13, r15	; 0x0d
    1d4c:	61 15       	cp	r22, r1
    1d4e:	71 05       	cpc	r23, r1
    1d50:	81 05       	cpc	r24, r1
    1d52:	91 05       	cpc	r25, r1
    1d54:	99 f1       	breq	.+102    	; 0x1dbc <dir_sdi+0x162>
    1d56:	98 01       	movw	r18, r16
    1d58:	36 95       	lsr	r19
    1d5a:	27 95       	ror	r18
    1d5c:	32 95       	swap	r19
    1d5e:	22 95       	swap	r18
    1d60:	2f 70       	andi	r18, 0x0F	; 15
    1d62:	23 27       	eor	r18, r19
    1d64:	3f 70       	andi	r19, 0x0F	; 15
    1d66:	23 27       	eor	r18, r19
    1d68:	dc 01       	movw	r26, r24
    1d6a:	cb 01       	movw	r24, r22
    1d6c:	82 0f       	add	r24, r18
    1d6e:	93 1f       	adc	r25, r19
    1d70:	a1 1d       	adc	r26, r1
    1d72:	b1 1d       	adc	r27, r1
    1d74:	8e 87       	std	Y+14, r24	; 0x0e
    1d76:	9f 87       	std	Y+15, r25	; 0x0f
    1d78:	a8 8b       	std	Y+16, r26	; 0x10
    1d7a:	b9 8b       	std	Y+17, r27	; 0x11
    1d7c:	0f 71       	andi	r16, 0x1F	; 31
    1d7e:	11 27       	eor	r17, r17
    1d80:	00 0f       	add	r16, r16
    1d82:	11 1f       	adc	r17, r17
    1d84:	02 95       	swap	r16
    1d86:	12 95       	swap	r17
    1d88:	10 7f       	andi	r17, 0xF0	; 240
    1d8a:	10 27       	eor	r17, r16
    1d8c:	00 7f       	andi	r16, 0xF0	; 240
    1d8e:	10 27       	eor	r17, r16
    1d90:	0e 5c       	subi	r16, 0xCE	; 206
    1d92:	1f 4f       	sbci	r17, 0xFF	; 255
    1d94:	88 81       	ld	r24, Y
    1d96:	99 81       	ldd	r25, Y+1	; 0x01
    1d98:	80 0f       	add	r24, r16
    1d9a:	91 1f       	adc	r25, r17
    1d9c:	9b 8b       	std	Y+19, r25	; 0x13
    1d9e:	8a 8b       	std	Y+18, r24	; 0x12
    1da0:	80 e0       	ldi	r24, 0x00	; 0
    1da2:	0d c0       	rjmp	.+26     	; 0x1dbe <dir_sdi+0x164>
    1da4:	82 e0       	ldi	r24, 0x02	; 2
    1da6:	0b c0       	rjmp	.+22     	; 0x1dbe <dir_sdi+0x164>
    1da8:	82 e0       	ldi	r24, 0x02	; 2
    1daa:	09 c0       	rjmp	.+18     	; 0x1dbe <dir_sdi+0x164>
    1dac:	82 e0       	ldi	r24, 0x02	; 2
    1dae:	07 c0       	rjmp	.+14     	; 0x1dbe <dir_sdi+0x164>
    1db0:	81 e0       	ldi	r24, 0x01	; 1
    1db2:	05 c0       	rjmp	.+10     	; 0x1dbe <dir_sdi+0x164>
    1db4:	82 e0       	ldi	r24, 0x02	; 2
    1db6:	03 c0       	rjmp	.+6      	; 0x1dbe <dir_sdi+0x164>
    1db8:	82 e0       	ldi	r24, 0x02	; 2
    1dba:	01 c0       	rjmp	.+2      	; 0x1dbe <dir_sdi+0x164>
    1dbc:	82 e0       	ldi	r24, 0x02	; 2
    1dbe:	df 91       	pop	r29
    1dc0:	cf 91       	pop	r28
    1dc2:	1f 91       	pop	r17
    1dc4:	0f 91       	pop	r16
    1dc6:	ff 90       	pop	r15
    1dc8:	ef 90       	pop	r14
    1dca:	df 90       	pop	r13
    1dcc:	cf 90       	pop	r12
    1dce:	bf 90       	pop	r11
    1dd0:	af 90       	pop	r10
    1dd2:	08 95       	ret

00001dd4 <put_fat>:
    1dd4:	4f 92       	push	r4
    1dd6:	5f 92       	push	r5
    1dd8:	6f 92       	push	r6
    1dda:	7f 92       	push	r7
    1ddc:	8f 92       	push	r8
    1dde:	9f 92       	push	r9
    1de0:	af 92       	push	r10
    1de2:	bf 92       	push	r11
    1de4:	cf 92       	push	r12
    1de6:	df 92       	push	r13
    1de8:	ef 92       	push	r14
    1dea:	ff 92       	push	r15
    1dec:	0f 93       	push	r16
    1dee:	1f 93       	push	r17
    1df0:	cf 93       	push	r28
    1df2:	df 93       	push	r29
    1df4:	ec 01       	movw	r28, r24
    1df6:	6a 01       	movw	r12, r20
    1df8:	7b 01       	movw	r14, r22
    1dfa:	28 01       	movw	r4, r16
    1dfc:	39 01       	movw	r6, r18
    1dfe:	42 30       	cpi	r20, 0x02	; 2
    1e00:	51 05       	cpc	r21, r1
    1e02:	61 05       	cpc	r22, r1
    1e04:	71 05       	cpc	r23, r1
    1e06:	08 f4       	brcc	.+2      	; 0x1e0a <put_fat+0x36>
    1e08:	dc c0       	rjmp	.+440    	; 0x1fc2 <put_fat+0x1ee>
    1e0a:	8e 89       	ldd	r24, Y+22	; 0x16
    1e0c:	9f 89       	ldd	r25, Y+23	; 0x17
    1e0e:	a8 8d       	ldd	r26, Y+24	; 0x18
    1e10:	b9 8d       	ldd	r27, Y+25	; 0x19
    1e12:	48 17       	cp	r20, r24
    1e14:	59 07       	cpc	r21, r25
    1e16:	6a 07       	cpc	r22, r26
    1e18:	7b 07       	cpc	r23, r27
    1e1a:	08 f0       	brcs	.+2      	; 0x1e1e <put_fat+0x4a>
    1e1c:	d4 c0       	rjmp	.+424    	; 0x1fc6 <put_fat+0x1f2>
    1e1e:	88 81       	ld	r24, Y
    1e20:	82 30       	cpi	r24, 0x02	; 2
    1e22:	09 f4       	brne	.+2      	; 0x1e26 <put_fat+0x52>
    1e24:	65 c0       	rjmp	.+202    	; 0x1ef0 <put_fat+0x11c>
    1e26:	83 30       	cpi	r24, 0x03	; 3
    1e28:	09 f4       	brne	.+2      	; 0x1e2c <put_fat+0x58>
    1e2a:	8d c0       	rjmp	.+282    	; 0x1f46 <put_fat+0x172>
    1e2c:	81 30       	cpi	r24, 0x01	; 1
    1e2e:	09 f0       	breq	.+2      	; 0x1e32 <put_fat+0x5e>
    1e30:	cc c0       	rjmp	.+408    	; 0x1fca <put_fat+0x1f6>
    1e32:	5a 01       	movw	r10, r20
    1e34:	b6 94       	lsr	r11
    1e36:	a7 94       	ror	r10
    1e38:	a4 0e       	add	r10, r20
    1e3a:	b5 1e       	adc	r11, r21
    1e3c:	c5 01       	movw	r24, r10
    1e3e:	89 2f       	mov	r24, r25
    1e40:	99 27       	eor	r25, r25
    1e42:	86 95       	lsr	r24
    1e44:	86 95       	lsr	r24
    1e46:	4a a1       	ldd	r20, Y+34	; 0x22
    1e48:	5b a1       	ldd	r21, Y+35	; 0x23
    1e4a:	6c a1       	ldd	r22, Y+36	; 0x24
    1e4c:	7d a1       	ldd	r23, Y+37	; 0x25
    1e4e:	48 0f       	add	r20, r24
    1e50:	59 1f       	adc	r21, r25
    1e52:	61 1d       	adc	r22, r1
    1e54:	71 1d       	adc	r23, r1
    1e56:	ce 01       	movw	r24, r28
    1e58:	c5 d8       	rcall	.-3702   	; 0xfe4 <move_window>
    1e5a:	18 2f       	mov	r17, r24
    1e5c:	81 11       	cpse	r24, r1
    1e5e:	d3 c0       	rjmp	.+422    	; 0x2006 <put_fat+0x232>
    1e60:	45 01       	movw	r8, r10
    1e62:	8f ef       	ldi	r24, 0xFF	; 255
    1e64:	88 1a       	sub	r8, r24
    1e66:	98 0a       	sbc	r9, r24
    1e68:	a3 e0       	ldi	r26, 0x03	; 3
    1e6a:	ba 22       	and	r11, r26
    1e6c:	c0 fe       	sbrs	r12, 0
    1e6e:	21 c0       	rjmp	.+66     	; 0x1eb2 <put_fat+0xde>
    1e70:	fe 01       	movw	r30, r28
    1e72:	ea 0d       	add	r30, r10
    1e74:	fb 1d       	adc	r31, r11
    1e76:	82 a9       	ldd	r24, Z+50	; 0x32
    1e78:	28 2f       	mov	r18, r24
    1e7a:	2f 70       	andi	r18, 0x0F	; 15
    1e7c:	b0 e1       	ldi	r27, 0x10	; 16
    1e7e:	4b 9e       	mul	r4, r27
    1e80:	c0 01       	movw	r24, r0
    1e82:	11 24       	eor	r1, r1
    1e84:	82 2b       	or	r24, r18
    1e86:	82 ab       	std	Z+50, r24	; 0x32
    1e88:	81 e0       	ldi	r24, 0x01	; 1
    1e8a:	8c 83       	std	Y+4, r24	; 0x04
    1e8c:	4a a1       	ldd	r20, Y+34	; 0x22
    1e8e:	5b a1       	ldd	r21, Y+35	; 0x23
    1e90:	6c a1       	ldd	r22, Y+36	; 0x24
    1e92:	7d a1       	ldd	r23, Y+37	; 0x25
    1e94:	c4 01       	movw	r24, r8
    1e96:	89 2f       	mov	r24, r25
    1e98:	99 27       	eor	r25, r25
    1e9a:	86 95       	lsr	r24
    1e9c:	86 95       	lsr	r24
    1e9e:	48 0f       	add	r20, r24
    1ea0:	59 1f       	adc	r21, r25
    1ea2:	61 1d       	adc	r22, r1
    1ea4:	71 1d       	adc	r23, r1
    1ea6:	ce 01       	movw	r24, r28
    1ea8:	9d d8       	rcall	.-3782   	; 0xfe4 <move_window>
    1eaa:	88 23       	and	r24, r24
    1eac:	09 f4       	brne	.+2      	; 0x1eb0 <put_fat+0xdc>
    1eae:	93 c0       	rjmp	.+294    	; 0x1fd6 <put_fat+0x202>
    1eb0:	8e c0       	rjmp	.+284    	; 0x1fce <put_fat+0x1fa>
    1eb2:	fe 01       	movw	r30, r28
    1eb4:	ea 0d       	add	r30, r10
    1eb6:	fb 1d       	adc	r31, r11
    1eb8:	42 aa       	std	Z+50, r4	; 0x32
    1eba:	81 e0       	ldi	r24, 0x01	; 1
    1ebc:	8c 83       	std	Y+4, r24	; 0x04
    1ebe:	4a a1       	ldd	r20, Y+34	; 0x22
    1ec0:	5b a1       	ldd	r21, Y+35	; 0x23
    1ec2:	6c a1       	ldd	r22, Y+36	; 0x24
    1ec4:	7d a1       	ldd	r23, Y+37	; 0x25
    1ec6:	c4 01       	movw	r24, r8
    1ec8:	89 2f       	mov	r24, r25
    1eca:	99 27       	eor	r25, r25
    1ecc:	86 95       	lsr	r24
    1ece:	86 95       	lsr	r24
    1ed0:	48 0f       	add	r20, r24
    1ed2:	59 1f       	adc	r21, r25
    1ed4:	61 1d       	adc	r22, r1
    1ed6:	71 1d       	adc	r23, r1
    1ed8:	ce 01       	movw	r24, r28
    1eda:	84 d8       	rcall	.-3832   	; 0xfe4 <move_window>
    1edc:	88 23       	and	r24, r24
    1ede:	09 f4       	brne	.+2      	; 0x1ee2 <put_fat+0x10e>
    1ee0:	85 c0       	rjmp	.+266    	; 0x1fec <put_fat+0x218>
    1ee2:	77 c0       	rjmp	.+238    	; 0x1fd2 <put_fat+0x1fe>
    1ee4:	ec 0f       	add	r30, r28
    1ee6:	fd 1f       	adc	r31, r29
    1ee8:	42 aa       	std	Z+50, r4	; 0x32
    1eea:	81 e0       	ldi	r24, 0x01	; 1
    1eec:	8c 83       	std	Y+4, r24	; 0x04
    1eee:	8b c0       	rjmp	.+278    	; 0x2006 <put_fat+0x232>
    1ef0:	8a a1       	ldd	r24, Y+34	; 0x22
    1ef2:	9b a1       	ldd	r25, Y+35	; 0x23
    1ef4:	ac a1       	ldd	r26, Y+36	; 0x24
    1ef6:	bd a1       	ldd	r27, Y+37	; 0x25
    1ef8:	03 2e       	mov	r0, r19
    1efa:	39 e0       	ldi	r19, 0x09	; 9
    1efc:	76 95       	lsr	r23
    1efe:	67 95       	ror	r22
    1f00:	57 95       	ror	r21
    1f02:	47 95       	ror	r20
    1f04:	3a 95       	dec	r19
    1f06:	d1 f7       	brne	.-12     	; 0x1efc <put_fat+0x128>
    1f08:	30 2d       	mov	r19, r0
    1f0a:	48 0f       	add	r20, r24
    1f0c:	59 1f       	adc	r21, r25
    1f0e:	6a 1f       	adc	r22, r26
    1f10:	7b 1f       	adc	r23, r27
    1f12:	ce 01       	movw	r24, r28
    1f14:	67 d8       	rcall	.-3890   	; 0xfe4 <move_window>
    1f16:	18 2f       	mov	r17, r24
    1f18:	81 11       	cpse	r24, r1
    1f1a:	75 c0       	rjmp	.+234    	; 0x2006 <put_fat+0x232>
    1f1c:	cc 0c       	add	r12, r12
    1f1e:	dd 1c       	adc	r13, r13
    1f20:	ee 1c       	adc	r14, r14
    1f22:	ff 1c       	adc	r15, r15
    1f24:	e8 94       	clt
    1f26:	c0 f8       	bld	r12, 0
    1f28:	33 e0       	ldi	r19, 0x03	; 3
    1f2a:	d3 22       	and	r13, r19
    1f2c:	ee 24       	eor	r14, r14
    1f2e:	ff 24       	eor	r15, r15
    1f30:	fe 01       	movw	r30, r28
    1f32:	ec 0d       	add	r30, r12
    1f34:	fd 1d       	adc	r31, r13
    1f36:	42 aa       	std	Z+50, r4	; 0x32
    1f38:	fe 01       	movw	r30, r28
    1f3a:	ec 0d       	add	r30, r12
    1f3c:	fd 1d       	adc	r31, r13
    1f3e:	53 aa       	std	Z+51, r5	; 0x33
    1f40:	81 e0       	ldi	r24, 0x01	; 1
    1f42:	8c 83       	std	Y+4, r24	; 0x04
    1f44:	60 c0       	rjmp	.+192    	; 0x2006 <put_fat+0x232>
    1f46:	45 2f       	mov	r20, r21
    1f48:	56 2f       	mov	r21, r22
    1f4a:	67 2f       	mov	r22, r23
    1f4c:	77 27       	eor	r23, r23
    1f4e:	8a a1       	ldd	r24, Y+34	; 0x22
    1f50:	9b a1       	ldd	r25, Y+35	; 0x23
    1f52:	ac a1       	ldd	r26, Y+36	; 0x24
    1f54:	bd a1       	ldd	r27, Y+37	; 0x25
    1f56:	48 0f       	add	r20, r24
    1f58:	59 1f       	adc	r21, r25
    1f5a:	6a 1f       	adc	r22, r26
    1f5c:	7b 1f       	adc	r23, r27
    1f5e:	ce 01       	movw	r24, r28
    1f60:	41 d8       	rcall	.-3966   	; 0xfe4 <move_window>
    1f62:	18 2f       	mov	r17, r24
    1f64:	81 11       	cpse	r24, r1
    1f66:	4f c0       	rjmp	.+158    	; 0x2006 <put_fat+0x232>
    1f68:	cc 0c       	add	r12, r12
    1f6a:	dd 1c       	adc	r13, r13
    1f6c:	ee 1c       	adc	r14, r14
    1f6e:	ff 1c       	adc	r15, r15
    1f70:	cc 0c       	add	r12, r12
    1f72:	dd 1c       	adc	r13, r13
    1f74:	ee 1c       	adc	r14, r14
    1f76:	ff 1c       	adc	r15, r15
    1f78:	8c ef       	ldi	r24, 0xFC	; 252
    1f7a:	c8 22       	and	r12, r24
    1f7c:	83 e0       	ldi	r24, 0x03	; 3
    1f7e:	d8 22       	and	r13, r24
    1f80:	ee 24       	eor	r14, r14
    1f82:	ff 24       	eor	r15, r15
    1f84:	f6 01       	movw	r30, r12
    1f86:	f2 96       	adiw	r30, 0x32	; 50
    1f88:	ec 0f       	add	r30, r28
    1f8a:	fd 1f       	adc	r31, r29
    1f8c:	83 81       	ldd	r24, Z+3	; 0x03
    1f8e:	90 e0       	ldi	r25, 0x00	; 0
    1f90:	a0 e0       	ldi	r26, 0x00	; 0
    1f92:	b0 e0       	ldi	r27, 0x00	; 0
    1f94:	b8 2f       	mov	r27, r24
    1f96:	aa 27       	eor	r26, r26
    1f98:	99 27       	eor	r25, r25
    1f9a:	88 27       	eor	r24, r24
    1f9c:	cc 0e       	add	r12, r28
    1f9e:	dd 1e       	adc	r13, r29
    1fa0:	88 27       	eor	r24, r24
    1fa2:	99 27       	eor	r25, r25
    1fa4:	aa 27       	eor	r26, r26
    1fa6:	b0 7f       	andi	r27, 0xF0	; 240
    1fa8:	48 2a       	or	r4, r24
    1faa:	59 2a       	or	r5, r25
    1fac:	6a 2a       	or	r6, r26
    1fae:	7b 2a       	or	r7, r27
    1fb0:	d6 01       	movw	r26, r12
    1fb2:	d2 96       	adiw	r26, 0x32	; 50
    1fb4:	4c 92       	st	X, r4
    1fb6:	51 82       	std	Z+1, r5	; 0x01
    1fb8:	62 82       	std	Z+2, r6	; 0x02
    1fba:	73 82       	std	Z+3, r7	; 0x03
    1fbc:	81 e0       	ldi	r24, 0x01	; 1
    1fbe:	8c 83       	std	Y+4, r24	; 0x04
    1fc0:	22 c0       	rjmp	.+68     	; 0x2006 <put_fat+0x232>
    1fc2:	12 e0       	ldi	r17, 0x02	; 2
    1fc4:	20 c0       	rjmp	.+64     	; 0x2006 <put_fat+0x232>
    1fc6:	12 e0       	ldi	r17, 0x02	; 2
    1fc8:	1e c0       	rjmp	.+60     	; 0x2006 <put_fat+0x232>
    1fca:	12 e0       	ldi	r17, 0x02	; 2
    1fcc:	1c c0       	rjmp	.+56     	; 0x2006 <put_fat+0x232>
    1fce:	18 2f       	mov	r17, r24
    1fd0:	1a c0       	rjmp	.+52     	; 0x2006 <put_fat+0x232>
    1fd2:	18 2f       	mov	r17, r24
    1fd4:	18 c0       	rjmp	.+48     	; 0x2006 <put_fat+0x232>
    1fd6:	f4 01       	movw	r30, r8
    1fd8:	f3 70       	andi	r31, 0x03	; 3
    1fda:	68 94       	set
    1fdc:	13 f8       	bld	r1, 3
    1fde:	76 94       	lsr	r7
    1fe0:	67 94       	ror	r6
    1fe2:	57 94       	ror	r5
    1fe4:	47 94       	ror	r4
    1fe6:	16 94       	lsr	r1
    1fe8:	d1 f7       	brne	.-12     	; 0x1fde <put_fat+0x20a>
    1fea:	7c cf       	rjmp	.-264    	; 0x1ee4 <put_fat+0x110>
    1fec:	f4 01       	movw	r30, r8
    1fee:	f3 70       	andi	r31, 0x03	; 3
    1ff0:	de 01       	movw	r26, r28
    1ff2:	ae 0f       	add	r26, r30
    1ff4:	bf 1f       	adc	r27, r31
    1ff6:	d2 96       	adiw	r26, 0x32	; 50
    1ff8:	9c 91       	ld	r25, X
    1ffa:	90 7f       	andi	r25, 0xF0	; 240
    1ffc:	85 2d       	mov	r24, r5
    1ffe:	8f 70       	andi	r24, 0x0F	; 15
    2000:	49 2e       	mov	r4, r25
    2002:	48 2a       	or	r4, r24
    2004:	6f cf       	rjmp	.-290    	; 0x1ee4 <put_fat+0x110>
    2006:	81 2f       	mov	r24, r17
    2008:	df 91       	pop	r29
    200a:	cf 91       	pop	r28
    200c:	1f 91       	pop	r17
    200e:	0f 91       	pop	r16
    2010:	ff 90       	pop	r15
    2012:	ef 90       	pop	r14
    2014:	df 90       	pop	r13
    2016:	cf 90       	pop	r12
    2018:	bf 90       	pop	r11
    201a:	af 90       	pop	r10
    201c:	9f 90       	pop	r9
    201e:	8f 90       	pop	r8
    2020:	7f 90       	pop	r7
    2022:	6f 90       	pop	r6
    2024:	5f 90       	pop	r5
    2026:	4f 90       	pop	r4
    2028:	08 95       	ret

0000202a <create_chain>:
    202a:	2f 92       	push	r2
    202c:	3f 92       	push	r3
    202e:	4f 92       	push	r4
    2030:	5f 92       	push	r5
    2032:	6f 92       	push	r6
    2034:	7f 92       	push	r7
    2036:	8f 92       	push	r8
    2038:	9f 92       	push	r9
    203a:	af 92       	push	r10
    203c:	bf 92       	push	r11
    203e:	cf 92       	push	r12
    2040:	df 92       	push	r13
    2042:	ef 92       	push	r14
    2044:	ff 92       	push	r15
    2046:	0f 93       	push	r16
    2048:	1f 93       	push	r17
    204a:	cf 93       	push	r28
    204c:	df 93       	push	r29
    204e:	ec 01       	movw	r28, r24
    2050:	2a 01       	movw	r4, r20
    2052:	3b 01       	movw	r6, r22
    2054:	41 15       	cp	r20, r1
    2056:	51 05       	cpc	r21, r1
    2058:	61 05       	cpc	r22, r1
    205a:	71 05       	cpc	r23, r1
    205c:	b9 f4       	brne	.+46     	; 0x208c <create_chain+0x62>
    205e:	8a 84       	ldd	r8, Y+10	; 0x0a
    2060:	9b 84       	ldd	r9, Y+11	; 0x0b
    2062:	ac 84       	ldd	r10, Y+12	; 0x0c
    2064:	bd 84       	ldd	r11, Y+13	; 0x0d
    2066:	81 14       	cp	r8, r1
    2068:	91 04       	cpc	r9, r1
    206a:	a1 04       	cpc	r10, r1
    206c:	b1 04       	cpc	r11, r1
    206e:	59 f1       	breq	.+86     	; 0x20c6 <create_chain+0x9c>
    2070:	8e 89       	ldd	r24, Y+22	; 0x16
    2072:	9f 89       	ldd	r25, Y+23	; 0x17
    2074:	a8 8d       	ldd	r26, Y+24	; 0x18
    2076:	b9 8d       	ldd	r27, Y+25	; 0x19
    2078:	88 16       	cp	r8, r24
    207a:	99 06       	cpc	r9, r25
    207c:	aa 06       	cpc	r10, r26
    207e:	bb 06       	cpc	r11, r27
    2080:	30 f1       	brcs	.+76     	; 0x20ce <create_chain+0xa4>
    2082:	81 2c       	mov	r8, r1
    2084:	91 2c       	mov	r9, r1
    2086:	54 01       	movw	r10, r8
    2088:	83 94       	inc	r8
    208a:	21 c0       	rjmp	.+66     	; 0x20ce <create_chain+0xa4>
    208c:	e4 dc       	rcall	.-1592   	; 0x1a56 <get_fat>
    208e:	6b 01       	movw	r12, r22
    2090:	7c 01       	movw	r14, r24
    2092:	62 30       	cpi	r22, 0x02	; 2
    2094:	71 05       	cpc	r23, r1
    2096:	81 05       	cpc	r24, r1
    2098:	91 05       	cpc	r25, r1
    209a:	08 f4       	brcc	.+2      	; 0x209e <create_chain+0x74>
    209c:	96 c0       	rjmp	.+300    	; 0x21ca <create_chain+0x1a0>
    209e:	8f ef       	ldi	r24, 0xFF	; 255
    20a0:	c8 16       	cp	r12, r24
    20a2:	d8 06       	cpc	r13, r24
    20a4:	e8 06       	cpc	r14, r24
    20a6:	f8 06       	cpc	r15, r24
    20a8:	09 f4       	brne	.+2      	; 0x20ac <create_chain+0x82>
    20aa:	94 c0       	rjmp	.+296    	; 0x21d4 <create_chain+0x1aa>
    20ac:	8e 89       	ldd	r24, Y+22	; 0x16
    20ae:	9f 89       	ldd	r25, Y+23	; 0x17
    20b0:	a8 8d       	ldd	r26, Y+24	; 0x18
    20b2:	b9 8d       	ldd	r27, Y+25	; 0x19
    20b4:	c8 16       	cp	r12, r24
    20b6:	d9 06       	cpc	r13, r25
    20b8:	ea 06       	cpc	r14, r26
    20ba:	fb 06       	cpc	r15, r27
    20bc:	08 f4       	brcc	.+2      	; 0x20c0 <create_chain+0x96>
    20be:	8f c0       	rjmp	.+286    	; 0x21de <create_chain+0x1b4>
    20c0:	53 01       	movw	r10, r6
    20c2:	42 01       	movw	r8, r4
    20c4:	04 c0       	rjmp	.+8      	; 0x20ce <create_chain+0xa4>
    20c6:	81 2c       	mov	r8, r1
    20c8:	91 2c       	mov	r9, r1
    20ca:	54 01       	movw	r10, r8
    20cc:	83 94       	inc	r8
    20ce:	75 01       	movw	r14, r10
    20d0:	64 01       	movw	r12, r8
    20d2:	68 94       	set
    20d4:	22 24       	eor	r2, r2
    20d6:	21 f8       	bld	r2, 1
    20d8:	31 2c       	mov	r3, r1
    20da:	00 e0       	ldi	r16, 0x00	; 0
    20dc:	10 e0       	ldi	r17, 0x00	; 0
    20de:	2f ef       	ldi	r18, 0xFF	; 255
    20e0:	c2 1a       	sub	r12, r18
    20e2:	d2 0a       	sbc	r13, r18
    20e4:	e2 0a       	sbc	r14, r18
    20e6:	f2 0a       	sbc	r15, r18
    20e8:	8e 89       	ldd	r24, Y+22	; 0x16
    20ea:	9f 89       	ldd	r25, Y+23	; 0x17
    20ec:	a8 8d       	ldd	r26, Y+24	; 0x18
    20ee:	b9 8d       	ldd	r27, Y+25	; 0x19
    20f0:	c8 16       	cp	r12, r24
    20f2:	d9 06       	cpc	r13, r25
    20f4:	ea 06       	cpc	r14, r26
    20f6:	fb 06       	cpc	r15, r27
    20f8:	58 f0       	brcs	.+22     	; 0x2110 <create_chain+0xe6>
    20fa:	82 e0       	ldi	r24, 0x02	; 2
    20fc:	88 16       	cp	r8, r24
    20fe:	91 04       	cpc	r9, r1
    2100:	a1 04       	cpc	r10, r1
    2102:	b1 04       	cpc	r11, r1
    2104:	08 f4       	brcc	.+2      	; 0x2108 <create_chain+0xde>
    2106:	70 c0       	rjmp	.+224    	; 0x21e8 <create_chain+0x1be>
    2108:	c2 2c       	mov	r12, r2
    210a:	d3 2c       	mov	r13, r3
    210c:	e0 2e       	mov	r14, r16
    210e:	f1 2e       	mov	r15, r17
    2110:	b7 01       	movw	r22, r14
    2112:	a6 01       	movw	r20, r12
    2114:	ce 01       	movw	r24, r28
    2116:	9f dc       	rcall	.-1730   	; 0x1a56 <get_fat>
    2118:	61 15       	cp	r22, r1
    211a:	71 05       	cpc	r23, r1
    211c:	81 05       	cpc	r24, r1
    211e:	91 05       	cpc	r25, r1
    2120:	99 f0       	breq	.+38     	; 0x2148 <create_chain+0x11e>
    2122:	6f 3f       	cpi	r22, 0xFF	; 255
    2124:	2f ef       	ldi	r18, 0xFF	; 255
    2126:	72 07       	cpc	r23, r18
    2128:	82 07       	cpc	r24, r18
    212a:	92 07       	cpc	r25, r18
    212c:	09 f4       	brne	.+2      	; 0x2130 <create_chain+0x106>
    212e:	61 c0       	rjmp	.+194    	; 0x21f2 <create_chain+0x1c8>
    2130:	61 30       	cpi	r22, 0x01	; 1
    2132:	71 05       	cpc	r23, r1
    2134:	81 05       	cpc	r24, r1
    2136:	91 05       	cpc	r25, r1
    2138:	09 f4       	brne	.+2      	; 0x213c <create_chain+0x112>
    213a:	60 c0       	rjmp	.+192    	; 0x21fc <create_chain+0x1d2>
    213c:	c8 14       	cp	r12, r8
    213e:	d9 04       	cpc	r13, r9
    2140:	ea 04       	cpc	r14, r10
    2142:	fb 04       	cpc	r15, r11
    2144:	61 f6       	brne	.-104    	; 0x20de <create_chain+0xb4>
    2146:	5f c0       	rjmp	.+190    	; 0x2206 <create_chain+0x1dc>
    2148:	8c 2c       	mov	r8, r12
    214a:	9d 2c       	mov	r9, r13
    214c:	ae 2c       	mov	r10, r14
    214e:	bf 2c       	mov	r11, r15
    2150:	0f ef       	ldi	r16, 0xFF	; 255
    2152:	1f ef       	ldi	r17, 0xFF	; 255
    2154:	2f ef       	ldi	r18, 0xFF	; 255
    2156:	3f e0       	ldi	r19, 0x0F	; 15
    2158:	b7 01       	movw	r22, r14
    215a:	a6 01       	movw	r20, r12
    215c:	ce 01       	movw	r24, r28
    215e:	3a de       	rcall	.-908    	; 0x1dd4 <put_fat>
    2160:	81 11       	cpse	r24, r1
    2162:	2c c0       	rjmp	.+88     	; 0x21bc <create_chain+0x192>
    2164:	41 14       	cp	r4, r1
    2166:	51 04       	cpc	r5, r1
    2168:	61 04       	cpc	r6, r1
    216a:	71 04       	cpc	r7, r1
    216c:	51 f0       	breq	.+20     	; 0x2182 <create_chain+0x158>
    216e:	0c 2d       	mov	r16, r12
    2170:	1d 2d       	mov	r17, r13
    2172:	2e 2d       	mov	r18, r14
    2174:	3f 2d       	mov	r19, r15
    2176:	b3 01       	movw	r22, r6
    2178:	a2 01       	movw	r20, r4
    217a:	ce 01       	movw	r24, r28
    217c:	2b de       	rcall	.-938    	; 0x1dd4 <put_fat>
    217e:	81 11       	cpse	r24, r1
    2180:	1d c0       	rjmp	.+58     	; 0x21bc <create_chain+0x192>
    2182:	8a 86       	std	Y+10, r8	; 0x0a
    2184:	9b 86       	std	Y+11, r9	; 0x0b
    2186:	ac 86       	std	Y+12, r10	; 0x0c
    2188:	bd 86       	std	Y+13, r11	; 0x0d
    218a:	8e 85       	ldd	r24, Y+14	; 0x0e
    218c:	9f 85       	ldd	r25, Y+15	; 0x0f
    218e:	a8 89       	ldd	r26, Y+16	; 0x10
    2190:	b9 89       	ldd	r27, Y+17	; 0x11
    2192:	8f 3f       	cpi	r24, 0xFF	; 255
    2194:	2f ef       	ldi	r18, 0xFF	; 255
    2196:	92 07       	cpc	r25, r18
    2198:	a2 07       	cpc	r26, r18
    219a:	b2 07       	cpc	r27, r18
    219c:	c9 f1       	breq	.+114    	; 0x2210 <create_chain+0x1e6>
    219e:	01 97       	sbiw	r24, 0x01	; 1
    21a0:	a1 09       	sbc	r26, r1
    21a2:	b1 09       	sbc	r27, r1
    21a4:	8e 87       	std	Y+14, r24	; 0x0e
    21a6:	9f 87       	std	Y+15, r25	; 0x0f
    21a8:	a8 8b       	std	Y+16, r26	; 0x10
    21aa:	b9 8b       	std	Y+17, r27	; 0x11
    21ac:	8d 81       	ldd	r24, Y+5	; 0x05
    21ae:	81 60       	ori	r24, 0x01	; 1
    21b0:	8d 83       	std	Y+5, r24	; 0x05
    21b2:	6c 2d       	mov	r22, r12
    21b4:	7d 2d       	mov	r23, r13
    21b6:	8e 2d       	mov	r24, r14
    21b8:	9f 2d       	mov	r25, r15
    21ba:	33 c0       	rjmp	.+102    	; 0x2222 <create_chain+0x1f8>
    21bc:	81 30       	cpi	r24, 0x01	; 1
    21be:	69 f1       	breq	.+90     	; 0x221a <create_chain+0x1f0>
    21c0:	61 e0       	ldi	r22, 0x01	; 1
    21c2:	70 e0       	ldi	r23, 0x00	; 0
    21c4:	80 e0       	ldi	r24, 0x00	; 0
    21c6:	90 e0       	ldi	r25, 0x00	; 0
    21c8:	2c c0       	rjmp	.+88     	; 0x2222 <create_chain+0x1f8>
    21ca:	61 e0       	ldi	r22, 0x01	; 1
    21cc:	70 e0       	ldi	r23, 0x00	; 0
    21ce:	80 e0       	ldi	r24, 0x00	; 0
    21d0:	90 e0       	ldi	r25, 0x00	; 0
    21d2:	27 c0       	rjmp	.+78     	; 0x2222 <create_chain+0x1f8>
    21d4:	6f ef       	ldi	r22, 0xFF	; 255
    21d6:	7f ef       	ldi	r23, 0xFF	; 255
    21d8:	8f ef       	ldi	r24, 0xFF	; 255
    21da:	9f ef       	ldi	r25, 0xFF	; 255
    21dc:	22 c0       	rjmp	.+68     	; 0x2222 <create_chain+0x1f8>
    21de:	6c 2d       	mov	r22, r12
    21e0:	7d 2d       	mov	r23, r13
    21e2:	8e 2d       	mov	r24, r14
    21e4:	9f 2d       	mov	r25, r15
    21e6:	1d c0       	rjmp	.+58     	; 0x2222 <create_chain+0x1f8>
    21e8:	60 e0       	ldi	r22, 0x00	; 0
    21ea:	70 e0       	ldi	r23, 0x00	; 0
    21ec:	80 e0       	ldi	r24, 0x00	; 0
    21ee:	90 e0       	ldi	r25, 0x00	; 0
    21f0:	18 c0       	rjmp	.+48     	; 0x2222 <create_chain+0x1f8>
    21f2:	6f ef       	ldi	r22, 0xFF	; 255
    21f4:	7f ef       	ldi	r23, 0xFF	; 255
    21f6:	8f ef       	ldi	r24, 0xFF	; 255
    21f8:	9f ef       	ldi	r25, 0xFF	; 255
    21fa:	13 c0       	rjmp	.+38     	; 0x2222 <create_chain+0x1f8>
    21fc:	61 e0       	ldi	r22, 0x01	; 1
    21fe:	70 e0       	ldi	r23, 0x00	; 0
    2200:	80 e0       	ldi	r24, 0x00	; 0
    2202:	90 e0       	ldi	r25, 0x00	; 0
    2204:	0e c0       	rjmp	.+28     	; 0x2222 <create_chain+0x1f8>
    2206:	60 e0       	ldi	r22, 0x00	; 0
    2208:	70 e0       	ldi	r23, 0x00	; 0
    220a:	80 e0       	ldi	r24, 0x00	; 0
    220c:	90 e0       	ldi	r25, 0x00	; 0
    220e:	09 c0       	rjmp	.+18     	; 0x2222 <create_chain+0x1f8>
    2210:	6c 2d       	mov	r22, r12
    2212:	7d 2d       	mov	r23, r13
    2214:	8e 2d       	mov	r24, r14
    2216:	9f 2d       	mov	r25, r15
    2218:	04 c0       	rjmp	.+8      	; 0x2222 <create_chain+0x1f8>
    221a:	6f ef       	ldi	r22, 0xFF	; 255
    221c:	7f ef       	ldi	r23, 0xFF	; 255
    221e:	8f ef       	ldi	r24, 0xFF	; 255
    2220:	9f ef       	ldi	r25, 0xFF	; 255
    2222:	df 91       	pop	r29
    2224:	cf 91       	pop	r28
    2226:	1f 91       	pop	r17
    2228:	0f 91       	pop	r16
    222a:	ff 90       	pop	r15
    222c:	ef 90       	pop	r14
    222e:	df 90       	pop	r13
    2230:	cf 90       	pop	r12
    2232:	bf 90       	pop	r11
    2234:	af 90       	pop	r10
    2236:	9f 90       	pop	r9
    2238:	8f 90       	pop	r8
    223a:	7f 90       	pop	r7
    223c:	6f 90       	pop	r6
    223e:	5f 90       	pop	r5
    2240:	4f 90       	pop	r4
    2242:	3f 90       	pop	r3
    2244:	2f 90       	pop	r2
    2246:	08 95       	ret

00002248 <dir_next>:
    2248:	7f 92       	push	r7
    224a:	8f 92       	push	r8
    224c:	9f 92       	push	r9
    224e:	af 92       	push	r10
    2250:	bf 92       	push	r11
    2252:	cf 92       	push	r12
    2254:	df 92       	push	r13
    2256:	ef 92       	push	r14
    2258:	ff 92       	push	r15
    225a:	0f 93       	push	r16
    225c:	1f 93       	push	r17
    225e:	cf 93       	push	r28
    2260:	df 93       	push	r29
    2262:	dc 01       	movw	r26, r24
    2264:	14 96       	adiw	r26, 0x04	; 4
    2266:	cd 91       	ld	r28, X+
    2268:	dc 91       	ld	r29, X
    226a:	15 97       	sbiw	r26, 0x05	; 5
    226c:	21 96       	adiw	r28, 0x01	; 1
    226e:	09 f4       	brne	.+2      	; 0x2272 <dir_next+0x2a>
    2270:	04 c1       	rjmp	.+520    	; 0x247a <dir_next+0x232>
    2272:	1e 96       	adiw	r26, 0x0e	; 14
    2274:	8d 90       	ld	r8, X+
    2276:	9d 90       	ld	r9, X+
    2278:	ad 90       	ld	r10, X+
    227a:	bc 90       	ld	r11, X
    227c:	51 97       	sbiw	r26, 0x11	; 17
    227e:	81 14       	cp	r8, r1
    2280:	91 04       	cpc	r9, r1
    2282:	a1 04       	cpc	r10, r1
    2284:	b1 04       	cpc	r11, r1
    2286:	09 f4       	brne	.+2      	; 0x228a <dir_next+0x42>
    2288:	fa c0       	rjmp	.+500    	; 0x247e <dir_next+0x236>
    228a:	7b 01       	movw	r14, r22
    228c:	8c 01       	movw	r16, r24
    228e:	6e 01       	movw	r12, r28
    2290:	bf e1       	ldi	r27, 0x1F	; 31
    2292:	cb 22       	and	r12, r27
    2294:	dd 24       	eor	r13, r13
    2296:	c1 14       	cp	r12, r1
    2298:	d1 04       	cpc	r13, r1
    229a:	09 f0       	breq	.+2      	; 0x229e <dir_next+0x56>
    229c:	d2 c0       	rjmp	.+420    	; 0x2442 <dir_next+0x1fa>
    229e:	ef ef       	ldi	r30, 0xFF	; 255
    22a0:	8e 1a       	sub	r8, r30
    22a2:	9e 0a       	sbc	r9, r30
    22a4:	ae 0a       	sbc	r10, r30
    22a6:	be 0a       	sbc	r11, r30
    22a8:	dc 01       	movw	r26, r24
    22aa:	1e 96       	adiw	r26, 0x0e	; 14
    22ac:	8d 92       	st	X+, r8
    22ae:	9d 92       	st	X+, r9
    22b0:	ad 92       	st	X+, r10
    22b2:	bc 92       	st	X, r11
    22b4:	51 97       	sbiw	r26, 0x11	; 17
    22b6:	1a 96       	adiw	r26, 0x0a	; 10
    22b8:	4d 91       	ld	r20, X+
    22ba:	5d 91       	ld	r21, X+
    22bc:	6d 91       	ld	r22, X+
    22be:	7c 91       	ld	r23, X
    22c0:	1d 97       	sbiw	r26, 0x0d	; 13
    22c2:	41 15       	cp	r20, r1
    22c4:	51 05       	cpc	r21, r1
    22c6:	61 05       	cpc	r22, r1
    22c8:	71 05       	cpc	r23, r1
    22ca:	49 f4       	brne	.+18     	; 0x22de <dir_next+0x96>
    22cc:	ed 91       	ld	r30, X+
    22ce:	fc 91       	ld	r31, X
    22d0:	80 85       	ldd	r24, Z+8	; 0x08
    22d2:	91 85       	ldd	r25, Z+9	; 0x09
    22d4:	c8 17       	cp	r28, r24
    22d6:	d9 07       	cpc	r29, r25
    22d8:	08 f0       	brcs	.+2      	; 0x22dc <dir_next+0x94>
    22da:	d3 c0       	rjmp	.+422    	; 0x2482 <dir_next+0x23a>
    22dc:	b2 c0       	rjmp	.+356    	; 0x2442 <dir_next+0x1fa>
    22de:	dc 01       	movw	r26, r24
    22e0:	ed 91       	ld	r30, X+
    22e2:	fc 91       	ld	r31, X
    22e4:	22 81       	ldd	r18, Z+2	; 0x02
    22e6:	30 e0       	ldi	r19, 0x00	; 0
    22e8:	21 50       	subi	r18, 0x01	; 1
    22ea:	31 09       	sbc	r19, r1
    22ec:	ce 01       	movw	r24, r28
    22ee:	96 95       	lsr	r25
    22f0:	87 95       	ror	r24
    22f2:	92 95       	swap	r25
    22f4:	82 95       	swap	r24
    22f6:	8f 70       	andi	r24, 0x0F	; 15
    22f8:	89 27       	eor	r24, r25
    22fa:	9f 70       	andi	r25, 0x0F	; 15
    22fc:	89 27       	eor	r24, r25
    22fe:	28 23       	and	r18, r24
    2300:	39 23       	and	r19, r25
    2302:	23 2b       	or	r18, r19
    2304:	09 f0       	breq	.+2      	; 0x2308 <dir_next+0xc0>
    2306:	9d c0       	rjmp	.+314    	; 0x2442 <dir_next+0x1fa>
    2308:	cf 01       	movw	r24, r30
    230a:	a5 db       	rcall	.-2230   	; 0x1a56 <get_fat>
    230c:	4b 01       	movw	r8, r22
    230e:	5c 01       	movw	r10, r24
    2310:	62 30       	cpi	r22, 0x02	; 2
    2312:	71 05       	cpc	r23, r1
    2314:	81 05       	cpc	r24, r1
    2316:	91 05       	cpc	r25, r1
    2318:	08 f4       	brcc	.+2      	; 0x231c <dir_next+0xd4>
    231a:	b5 c0       	rjmp	.+362    	; 0x2486 <dir_next+0x23e>
    231c:	6f 3f       	cpi	r22, 0xFF	; 255
    231e:	7f 4f       	sbci	r23, 0xFF	; 255
    2320:	8f 4f       	sbci	r24, 0xFF	; 255
    2322:	9f 4f       	sbci	r25, 0xFF	; 255
    2324:	09 f4       	brne	.+2      	; 0x2328 <dir_next+0xe0>
    2326:	b1 c0       	rjmp	.+354    	; 0x248a <dir_next+0x242>
    2328:	d8 01       	movw	r26, r16
    232a:	ed 91       	ld	r30, X+
    232c:	fc 91       	ld	r31, X
    232e:	86 89       	ldd	r24, Z+22	; 0x16
    2330:	97 89       	ldd	r25, Z+23	; 0x17
    2332:	a0 8d       	ldd	r26, Z+24	; 0x18
    2334:	b1 8d       	ldd	r27, Z+25	; 0x19
    2336:	88 16       	cp	r8, r24
    2338:	99 06       	cpc	r9, r25
    233a:	aa 06       	cpc	r10, r26
    233c:	bb 06       	cpc	r11, r27
    233e:	08 f4       	brcc	.+2      	; 0x2342 <dir_next+0xfa>
    2340:	6f c0       	rjmp	.+222    	; 0x2420 <dir_next+0x1d8>
    2342:	ef 28       	or	r14, r15
    2344:	09 f4       	brne	.+2      	; 0x2348 <dir_next+0x100>
    2346:	a3 c0       	rjmp	.+326    	; 0x248e <dir_next+0x246>
    2348:	d8 01       	movw	r26, r16
    234a:	1a 96       	adiw	r26, 0x0a	; 10
    234c:	4d 91       	ld	r20, X+
    234e:	5d 91       	ld	r21, X+
    2350:	6d 91       	ld	r22, X+
    2352:	7c 91       	ld	r23, X
    2354:	1d 97       	sbiw	r26, 0x0d	; 13
    2356:	cf 01       	movw	r24, r30
    2358:	68 de       	rcall	.-816    	; 0x202a <create_chain>
    235a:	4b 01       	movw	r8, r22
    235c:	5c 01       	movw	r10, r24
    235e:	61 15       	cp	r22, r1
    2360:	71 05       	cpc	r23, r1
    2362:	81 05       	cpc	r24, r1
    2364:	91 05       	cpc	r25, r1
    2366:	09 f4       	brne	.+2      	; 0x236a <dir_next+0x122>
    2368:	94 c0       	rjmp	.+296    	; 0x2492 <dir_next+0x24a>
    236a:	61 30       	cpi	r22, 0x01	; 1
    236c:	71 05       	cpc	r23, r1
    236e:	81 05       	cpc	r24, r1
    2370:	91 05       	cpc	r25, r1
    2372:	09 f4       	brne	.+2      	; 0x2376 <dir_next+0x12e>
    2374:	90 c0       	rjmp	.+288    	; 0x2496 <dir_next+0x24e>
    2376:	6f 3f       	cpi	r22, 0xFF	; 255
    2378:	7f 4f       	sbci	r23, 0xFF	; 255
    237a:	8f 4f       	sbci	r24, 0xFF	; 255
    237c:	9f 4f       	sbci	r25, 0xFF	; 255
    237e:	09 f4       	brne	.+2      	; 0x2382 <dir_next+0x13a>
    2380:	8c c0       	rjmp	.+280    	; 0x249a <dir_next+0x252>
    2382:	d8 01       	movw	r26, r16
    2384:	8d 91       	ld	r24, X+
    2386:	9c 91       	ld	r25, X
    2388:	0e 94 89 07 	call	0xf12	; 0xf12 <sync_window>
    238c:	81 11       	cpse	r24, r1
    238e:	87 c0       	rjmp	.+270    	; 0x249e <dir_next+0x256>
    2390:	f8 01       	movw	r30, r16
    2392:	80 81       	ld	r24, Z
    2394:	91 81       	ldd	r25, Z+1	; 0x01
    2396:	40 e0       	ldi	r20, 0x00	; 0
    2398:	54 e0       	ldi	r21, 0x04	; 4
    239a:	60 e0       	ldi	r22, 0x00	; 0
    239c:	70 e0       	ldi	r23, 0x00	; 0
    239e:	c2 96       	adiw	r24, 0x32	; 50
    23a0:	0e 94 cf 06 	call	0xd9e	; 0xd9e <mem_set>
    23a4:	d8 01       	movw	r26, r16
    23a6:	ed 90       	ld	r14, X+
    23a8:	fc 90       	ld	r15, X
    23aa:	b5 01       	movw	r22, r10
    23ac:	a4 01       	movw	r20, r8
    23ae:	c7 01       	movw	r24, r14
    23b0:	24 db       	rcall	.-2488   	; 0x19fa <clust2sect>
    23b2:	f7 01       	movw	r30, r14
    23b4:	66 a7       	std	Z+46, r22	; 0x2e
    23b6:	77 a7       	std	Z+47, r23	; 0x2f
    23b8:	80 ab       	std	Z+48, r24	; 0x30
    23ba:	91 ab       	std	Z+49, r25	; 0x31
    23bc:	e1 2c       	mov	r14, r1
    23be:	f1 2c       	mov	r15, r1
    23c0:	77 24       	eor	r7, r7
    23c2:	73 94       	inc	r7
    23c4:	19 c0       	rjmp	.+50     	; 0x23f8 <dir_next+0x1b0>
    23c6:	74 82       	std	Z+4, r7	; 0x04
    23c8:	d8 01       	movw	r26, r16
    23ca:	8d 91       	ld	r24, X+
    23cc:	9c 91       	ld	r25, X
    23ce:	0e 94 89 07 	call	0xf12	; 0xf12 <sync_window>
    23d2:	81 11       	cpse	r24, r1
    23d4:	66 c0       	rjmp	.+204    	; 0x24a2 <dir_next+0x25a>
    23d6:	d8 01       	movw	r26, r16
    23d8:	ed 91       	ld	r30, X+
    23da:	fc 91       	ld	r31, X
    23dc:	86 a5       	ldd	r24, Z+46	; 0x2e
    23de:	97 a5       	ldd	r25, Z+47	; 0x2f
    23e0:	a0 a9       	ldd	r26, Z+48	; 0x30
    23e2:	b1 a9       	ldd	r27, Z+49	; 0x31
    23e4:	01 96       	adiw	r24, 0x01	; 1
    23e6:	a1 1d       	adc	r26, r1
    23e8:	b1 1d       	adc	r27, r1
    23ea:	86 a7       	std	Z+46, r24	; 0x2e
    23ec:	97 a7       	std	Z+47, r25	; 0x2f
    23ee:	a0 ab       	std	Z+48, r26	; 0x30
    23f0:	b1 ab       	std	Z+49, r27	; 0x31
    23f2:	bf ef       	ldi	r27, 0xFF	; 255
    23f4:	eb 1a       	sub	r14, r27
    23f6:	fb 0a       	sbc	r15, r27
    23f8:	d8 01       	movw	r26, r16
    23fa:	ed 91       	ld	r30, X+
    23fc:	fc 91       	ld	r31, X
    23fe:	82 81       	ldd	r24, Z+2	; 0x02
    2400:	90 e0       	ldi	r25, 0x00	; 0
    2402:	e8 16       	cp	r14, r24
    2404:	f9 06       	cpc	r15, r25
    2406:	f8 f2       	brcs	.-66     	; 0x23c6 <dir_next+0x17e>
    2408:	86 a5       	ldd	r24, Z+46	; 0x2e
    240a:	97 a5       	ldd	r25, Z+47	; 0x2f
    240c:	a0 a9       	ldd	r26, Z+48	; 0x30
    240e:	b1 a9       	ldd	r27, Z+49	; 0x31
    2410:	8e 19       	sub	r24, r14
    2412:	9f 09       	sbc	r25, r15
    2414:	a1 09       	sbc	r26, r1
    2416:	b1 09       	sbc	r27, r1
    2418:	86 a7       	std	Z+46, r24	; 0x2e
    241a:	97 a7       	std	Z+47, r25	; 0x2f
    241c:	a0 ab       	std	Z+48, r26	; 0x30
    241e:	b1 ab       	std	Z+49, r27	; 0x31
    2420:	f8 01       	movw	r30, r16
    2422:	82 86       	std	Z+10, r8	; 0x0a
    2424:	93 86       	std	Z+11, r9	; 0x0b
    2426:	a4 86       	std	Z+12, r10	; 0x0c
    2428:	b5 86       	std	Z+13, r11	; 0x0d
    242a:	b5 01       	movw	r22, r10
    242c:	a4 01       	movw	r20, r8
    242e:	80 81       	ld	r24, Z
    2430:	91 81       	ldd	r25, Z+1	; 0x01
    2432:	e3 da       	rcall	.-2618   	; 0x19fa <clust2sect>
    2434:	d8 01       	movw	r26, r16
    2436:	1e 96       	adiw	r26, 0x0e	; 14
    2438:	6d 93       	st	X+, r22
    243a:	7d 93       	st	X+, r23
    243c:	8d 93       	st	X+, r24
    243e:	9c 93       	st	X, r25
    2440:	51 97       	sbiw	r26, 0x11	; 17
    2442:	f8 01       	movw	r30, r16
    2444:	d5 83       	std	Z+5, r29	; 0x05
    2446:	c4 83       	std	Z+4, r28	; 0x04
    2448:	cc 0c       	add	r12, r12
    244a:	dd 1c       	adc	r13, r13
    244c:	cc 0c       	add	r12, r12
    244e:	dd 1c       	adc	r13, r13
    2450:	cc 0c       	add	r12, r12
    2452:	dd 1c       	adc	r13, r13
    2454:	cc 0c       	add	r12, r12
    2456:	dd 1c       	adc	r13, r13
    2458:	cc 0c       	add	r12, r12
    245a:	dd 1c       	adc	r13, r13
    245c:	f2 e3       	ldi	r31, 0x32	; 50
    245e:	cf 0e       	add	r12, r31
    2460:	d1 1c       	adc	r13, r1
    2462:	d8 01       	movw	r26, r16
    2464:	8d 91       	ld	r24, X+
    2466:	9c 91       	ld	r25, X
    2468:	11 97       	sbiw	r26, 0x01	; 1
    246a:	c8 0e       	add	r12, r24
    246c:	d9 1e       	adc	r13, r25
    246e:	53 96       	adiw	r26, 0x13	; 19
    2470:	dc 92       	st	X, r13
    2472:	ce 92       	st	-X, r12
    2474:	52 97       	sbiw	r26, 0x12	; 18
    2476:	80 e0       	ldi	r24, 0x00	; 0
    2478:	15 c0       	rjmp	.+42     	; 0x24a4 <dir_next+0x25c>
    247a:	84 e0       	ldi	r24, 0x04	; 4
    247c:	13 c0       	rjmp	.+38     	; 0x24a4 <dir_next+0x25c>
    247e:	84 e0       	ldi	r24, 0x04	; 4
    2480:	11 c0       	rjmp	.+34     	; 0x24a4 <dir_next+0x25c>
    2482:	84 e0       	ldi	r24, 0x04	; 4
    2484:	0f c0       	rjmp	.+30     	; 0x24a4 <dir_next+0x25c>
    2486:	82 e0       	ldi	r24, 0x02	; 2
    2488:	0d c0       	rjmp	.+26     	; 0x24a4 <dir_next+0x25c>
    248a:	81 e0       	ldi	r24, 0x01	; 1
    248c:	0b c0       	rjmp	.+22     	; 0x24a4 <dir_next+0x25c>
    248e:	84 e0       	ldi	r24, 0x04	; 4
    2490:	09 c0       	rjmp	.+18     	; 0x24a4 <dir_next+0x25c>
    2492:	87 e0       	ldi	r24, 0x07	; 7
    2494:	07 c0       	rjmp	.+14     	; 0x24a4 <dir_next+0x25c>
    2496:	82 e0       	ldi	r24, 0x02	; 2
    2498:	05 c0       	rjmp	.+10     	; 0x24a4 <dir_next+0x25c>
    249a:	81 e0       	ldi	r24, 0x01	; 1
    249c:	03 c0       	rjmp	.+6      	; 0x24a4 <dir_next+0x25c>
    249e:	81 e0       	ldi	r24, 0x01	; 1
    24a0:	01 c0       	rjmp	.+2      	; 0x24a4 <dir_next+0x25c>
    24a2:	81 e0       	ldi	r24, 0x01	; 1
    24a4:	df 91       	pop	r29
    24a6:	cf 91       	pop	r28
    24a8:	1f 91       	pop	r17
    24aa:	0f 91       	pop	r16
    24ac:	ff 90       	pop	r15
    24ae:	ef 90       	pop	r14
    24b0:	df 90       	pop	r13
    24b2:	cf 90       	pop	r12
    24b4:	bf 90       	pop	r11
    24b6:	af 90       	pop	r10
    24b8:	9f 90       	pop	r9
    24ba:	8f 90       	pop	r8
    24bc:	7f 90       	pop	r7
    24be:	08 95       	ret

000024c0 <follow_path>:
    24c0:	2f 92       	push	r2
    24c2:	3f 92       	push	r3
    24c4:	4f 92       	push	r4
    24c6:	5f 92       	push	r5
    24c8:	6f 92       	push	r6
    24ca:	7f 92       	push	r7
    24cc:	8f 92       	push	r8
    24ce:	9f 92       	push	r9
    24d0:	af 92       	push	r10
    24d2:	bf 92       	push	r11
    24d4:	cf 92       	push	r12
    24d6:	df 92       	push	r13
    24d8:	ef 92       	push	r14
    24da:	ff 92       	push	r15
    24dc:	0f 93       	push	r16
    24de:	1f 93       	push	r17
    24e0:	cf 93       	push	r28
    24e2:	df 93       	push	r29
    24e4:	cd b7       	in	r28, 0x3d	; 61
    24e6:	de b7       	in	r29, 0x3e	; 62
    24e8:	27 97       	sbiw	r28, 0x07	; 7
    24ea:	0f b6       	in	r0, 0x3f	; 63
    24ec:	f8 94       	cli
    24ee:	de bf       	out	0x3e, r29	; 62
    24f0:	0f be       	out	0x3f, r0	; 63
    24f2:	cd bf       	out	0x3d, r28	; 61
    24f4:	7c 01       	movw	r14, r24
    24f6:	8b 01       	movw	r16, r22
    24f8:	db 01       	movw	r26, r22
    24fa:	8c 91       	ld	r24, X
    24fc:	8f 32       	cpi	r24, 0x2F	; 47
    24fe:	11 f0       	breq	.+4      	; 0x2504 <follow_path+0x44>
    2500:	8c 35       	cpi	r24, 0x5C	; 92
    2502:	41 f4       	brne	.+16     	; 0x2514 <follow_path+0x54>
    2504:	0f 5f       	subi	r16, 0xFF	; 255
    2506:	1f 4f       	sbci	r17, 0xFF	; 255
    2508:	f7 01       	movw	r30, r14
    250a:	16 82       	std	Z+6, r1	; 0x06
    250c:	17 82       	std	Z+7, r1	; 0x07
    250e:	10 86       	std	Z+8, r1	; 0x08
    2510:	11 86       	std	Z+9, r1	; 0x09
    2512:	0c c0       	rjmp	.+24     	; 0x252c <follow_path+0x6c>
    2514:	d7 01       	movw	r26, r14
    2516:	ed 91       	ld	r30, X+
    2518:	fc 91       	ld	r31, X
    251a:	82 89       	ldd	r24, Z+18	; 0x12
    251c:	93 89       	ldd	r25, Z+19	; 0x13
    251e:	a4 89       	ldd	r26, Z+20	; 0x14
    2520:	b5 89       	ldd	r27, Z+21	; 0x15
    2522:	f7 01       	movw	r30, r14
    2524:	86 83       	std	Z+6, r24	; 0x06
    2526:	97 83       	std	Z+7, r25	; 0x07
    2528:	a0 87       	std	Z+8, r26	; 0x08
    252a:	b1 87       	std	Z+9, r27	; 0x09
    252c:	d8 01       	movw	r26, r16
    252e:	8c 91       	ld	r24, X
    2530:	80 32       	cpi	r24, 0x20	; 32
    2532:	40 f4       	brcc	.+16     	; 0x2544 <follow_path+0x84>
    2534:	60 e0       	ldi	r22, 0x00	; 0
    2536:	70 e0       	ldi	r23, 0x00	; 0
    2538:	c7 01       	movw	r24, r14
    253a:	8f db       	rcall	.-2274   	; 0x1c5a <dir_sdi>
    253c:	f7 01       	movw	r30, r14
    253e:	13 8a       	std	Z+19, r1	; 0x13
    2540:	12 8a       	std	Z+18, r1	; 0x12
    2542:	66 c1       	rjmp	.+716    	; 0x2810 <follow_path+0x350>
    2544:	0f 2e       	mov	r0, r31
    2546:	fb e0       	ldi	r31, 0x0B	; 11
    2548:	8f 2e       	mov	r8, r31
    254a:	f0 2d       	mov	r31, r0
    254c:	71 2c       	mov	r7, r1
    254e:	0f 2e       	mov	r0, r31
    2550:	fe e2       	ldi	r31, 0x2E	; 46
    2552:	6f 2e       	mov	r6, r31
    2554:	f0 2d       	mov	r31, r0
    2556:	b1 2c       	mov	r11, r1
    2558:	a1 2c       	mov	r10, r1
    255a:	68 94       	set
    255c:	55 24       	eor	r5, r5
    255e:	53 f8       	bld	r5, 3
    2560:	31 2c       	mov	r3, r1
    2562:	21 2c       	mov	r2, r1
    2564:	3a 82       	std	Y+2, r3	; 0x02
    2566:	8b 82       	std	Y+3, r8	; 0x03
    2568:	7c 82       	std	Y+4, r7	; 0x04
    256a:	ff 82       	std	Y+7, r15	; 0x07
    256c:	ee 82       	std	Y+6, r14	; 0x06
    256e:	59 82       	std	Y+1, r5	; 0x01
    2570:	5d 82       	std	Y+5, r5	; 0x05
    2572:	f8 01       	movw	r30, r16
    2574:	2e 81       	ldd	r18, Y+6	; 0x06
    2576:	3f 81       	ldd	r19, Y+7	; 0x07
    2578:	7f 01       	movw	r14, r30
    257a:	81 91       	ld	r24, Z+
    257c:	8f 32       	cpi	r24, 0x2F	; 47
    257e:	e1 f3       	breq	.-8      	; 0x2578 <follow_path+0xb8>
    2580:	8c 35       	cpi	r24, 0x5C	; 92
    2582:	d1 f3       	breq	.-12     	; 0x2578 <follow_path+0xb8>
    2584:	3f 83       	std	Y+7, r19	; 0x07
    2586:	2e 83       	std	Y+6, r18	; 0x06
    2588:	d9 01       	movw	r26, r18
    258a:	54 96       	adiw	r26, 0x14	; 20
    258c:	cd 90       	ld	r12, X+
    258e:	dc 90       	ld	r13, X
    2590:	55 97       	sbiw	r26, 0x15	; 21
    2592:	48 2d       	mov	r20, r8
    2594:	57 2d       	mov	r21, r7
    2596:	60 e2       	ldi	r22, 0x20	; 32
    2598:	70 e0       	ldi	r23, 0x00	; 0
    259a:	c6 01       	movw	r24, r12
    259c:	0e 94 cf 06 	call	0xd9e	; 0xd9e <mem_set>
    25a0:	f7 01       	movw	r30, r14
    25a2:	80 81       	ld	r24, Z
    25a4:	8e 32       	cpi	r24, 0x2E	; 46
    25a6:	49 f0       	breq	.+18     	; 0x25ba <follow_path+0xfa>
    25a8:	d7 01       	movw	r26, r14
    25aa:	6b 2d       	mov	r22, r11
    25ac:	7a 2d       	mov	r23, r10
    25ae:	8b 2d       	mov	r24, r11
    25b0:	9a 2d       	mov	r25, r10
    25b2:	49 80       	ldd	r4, Y+1	; 0x01
    25b4:	53 2c       	mov	r5, r3
    25b6:	02 2d       	mov	r16, r2
    25b8:	1f c0       	rjmp	.+62     	; 0x25f8 <follow_path+0x138>
    25ba:	d6 01       	movw	r26, r12
    25bc:	6c 92       	st	X, r6
    25be:	f7 01       	movw	r30, r14
    25c0:	91 81       	ldd	r25, Z+1	; 0x01
    25c2:	9e 32       	cpi	r25, 0x2E	; 46
    25c4:	49 f4       	brne	.+18     	; 0x25d8 <follow_path+0x118>
    25c6:	11 96       	adiw	r26, 0x01	; 1
    25c8:	6c 92       	st	X, r6
    25ca:	92 81       	ldd	r25, Z+2	; 0x02
    25cc:	9e 32       	cpi	r25, 0x2E	; 46
    25ce:	09 f4       	brne	.+2      	; 0x25d2 <follow_path+0x112>
    25d0:	6c c0       	rjmp	.+216    	; 0x26aa <follow_path+0x1ea>
    25d2:	03 e0       	ldi	r16, 0x03	; 3
    25d4:	10 e0       	ldi	r17, 0x00	; 0
    25d6:	02 c0       	rjmp	.+4      	; 0x25dc <follow_path+0x11c>
    25d8:	02 e0       	ldi	r16, 0x02	; 2
    25da:	10 e0       	ldi	r17, 0x00	; 0
    25dc:	9f 32       	cpi	r25, 0x2F	; 47
    25de:	09 f4       	brne	.+2      	; 0x25e2 <follow_path+0x122>
    25e0:	c7 c0       	rjmp	.+398    	; 0x2770 <follow_path+0x2b0>
    25e2:	9c 35       	cpi	r25, 0x5C	; 92
    25e4:	09 f4       	brne	.+2      	; 0x25e8 <follow_path+0x128>
    25e6:	c4 c0       	rjmp	.+392    	; 0x2770 <follow_path+0x2b0>
    25e8:	91 32       	cpi	r25, 0x21	; 33
    25ea:	08 f0       	brcs	.+2      	; 0x25ee <follow_path+0x12e>
    25ec:	ea c0       	rjmp	.+468    	; 0x27c2 <follow_path+0x302>
    25ee:	c4 c0       	rjmp	.+392    	; 0x2778 <follow_path+0x2b8>
    25f0:	d6 01       	movw	r26, r12
    25f2:	1b 96       	adiw	r26, 0x0b	; 11
    25f4:	8c 93       	st	X, r24
    25f6:	e7 c0       	rjmp	.+462    	; 0x27c6 <follow_path+0x306>
    25f8:	01 96       	adiw	r24, 0x01	; 1
    25fa:	1d 91       	ld	r17, X+
    25fc:	11 32       	cpi	r17, 0x21	; 33
    25fe:	08 f4       	brcc	.+2      	; 0x2602 <follow_path+0x142>
    2600:	d4 c0       	rjmp	.+424    	; 0x27aa <follow_path+0x2ea>
    2602:	1f 32       	cpi	r17, 0x2F	; 47
    2604:	09 f4       	brne	.+2      	; 0x2608 <follow_path+0x148>
    2606:	d7 c0       	rjmp	.+430    	; 0x27b6 <follow_path+0x2f6>
    2608:	1c 35       	cpi	r17, 0x5C	; 92
    260a:	09 f4       	brne	.+2      	; 0x260e <follow_path+0x14e>
    260c:	d4 c0       	rjmp	.+424    	; 0x27b6 <follow_path+0x2f6>
    260e:	1e 32       	cpi	r17, 0x2E	; 46
    2610:	09 f4       	brne	.+2      	; 0x2614 <follow_path+0x154>
    2612:	b6 c0       	rjmp	.+364    	; 0x2780 <follow_path+0x2c0>
    2614:	64 15       	cp	r22, r4
    2616:	75 05       	cpc	r23, r5
    2618:	08 f0       	brcs	.+2      	; 0x261c <follow_path+0x15c>
    261a:	d3 c0       	rjmp	.+422    	; 0x27c2 <follow_path+0x302>
    261c:	07 c0       	rjmp	.+14     	; 0x262c <follow_path+0x16c>
    261e:	00 0f       	add	r16, r16
    2620:	00 0f       	add	r16, r16
    2622:	6d 81       	ldd	r22, Y+5	; 0x05
    2624:	7a 81       	ldd	r23, Y+2	; 0x02
    2626:	4b 80       	ldd	r4, Y+3	; 0x03
    2628:	5c 80       	ldd	r5, Y+4	; 0x04
    262a:	e6 cf       	rjmp	.-52     	; 0x25f8 <follow_path+0x138>
    262c:	11 23       	and	r17, r17
    262e:	0c f0       	brlt	.+2      	; 0x2632 <follow_path+0x172>
    2630:	ad c0       	rjmp	.+346    	; 0x278c <follow_path+0x2cc>
    2632:	03 60       	ori	r16, 0x03	; 3
    2634:	e1 2f       	mov	r30, r17
    2636:	f0 e0       	ldi	r31, 0x00	; 0
    2638:	ec 52       	subi	r30, 0x2C	; 44
    263a:	ff 4f       	sbci	r31, 0xFF	; 255
    263c:	10 81       	ld	r17, Z
    263e:	a6 c0       	rjmp	.+332    	; 0x278c <follow_path+0x2cc>
    2640:	21 91       	ld	r18, Z+
    2642:	22 23       	and	r18, r18
    2644:	09 f4       	brne	.+2      	; 0x2648 <follow_path+0x188>
    2646:	ab c0       	rjmp	.+342    	; 0x279e <follow_path+0x2de>
    2648:	30 e0       	ldi	r19, 0x00	; 0
    264a:	42 17       	cp	r20, r18
    264c:	53 07       	cpc	r21, r19
    264e:	c1 f7       	brne	.-16     	; 0x2640 <follow_path+0x180>
    2650:	2c c0       	rjmp	.+88     	; 0x26aa <follow_path+0x1ea>
    2652:	02 60       	ori	r16, 0x02	; 2
    2654:	06 c0       	rjmp	.+12     	; 0x2662 <follow_path+0x1a2>
    2656:	2f e9       	ldi	r18, 0x9F	; 159
    2658:	21 0f       	add	r18, r17
    265a:	2a 31       	cpi	r18, 0x1A	; 26
    265c:	10 f4       	brcc	.+4      	; 0x2662 <follow_path+0x1a2>
    265e:	01 60       	ori	r16, 0x01	; 1
    2660:	10 52       	subi	r17, 0x20	; 32
    2662:	f6 01       	movw	r30, r12
    2664:	e6 0f       	add	r30, r22
    2666:	f7 1f       	adc	r31, r23
    2668:	10 83       	st	Z, r17
    266a:	6f 5f       	subi	r22, 0xFF	; 255
    266c:	7f 4f       	sbci	r23, 0xFF	; 255
    266e:	c4 cf       	rjmp	.-120    	; 0x25f8 <follow_path+0x138>
    2670:	67 2b       	or	r22, r23
    2672:	09 f4       	brne	.+2      	; 0x2676 <follow_path+0x1b6>
    2674:	a6 c0       	rjmp	.+332    	; 0x27c2 <follow_path+0x302>
    2676:	f6 01       	movw	r30, r12
    2678:	90 81       	ld	r25, Z
    267a:	95 3e       	cpi	r25, 0xE5	; 229
    267c:	11 f4       	brne	.+4      	; 0x2682 <follow_path+0x1c2>
    267e:	25 e0       	ldi	r18, 0x05	; 5
    2680:	20 83       	st	Z, r18
    2682:	38 e0       	ldi	r19, 0x08	; 8
    2684:	43 16       	cp	r4, r19
    2686:	51 04       	cpc	r5, r1
    2688:	11 f4       	brne	.+4      	; 0x268e <follow_path+0x1ce>
    268a:	99 0c       	add	r9, r9
    268c:	99 0c       	add	r9, r9
    268e:	99 2d       	mov	r25, r9
    2690:	93 70       	andi	r25, 0x03	; 3
    2692:	91 30       	cpi	r25, 0x01	; 1
    2694:	09 f4       	brne	.+2      	; 0x2698 <follow_path+0x1d8>
    2696:	80 61       	ori	r24, 0x10	; 16
    2698:	99 2d       	mov	r25, r9
    269a:	9c 70       	andi	r25, 0x0C	; 12
    269c:	94 30       	cpi	r25, 0x04	; 4
    269e:	09 f4       	brne	.+2      	; 0x26a2 <follow_path+0x1e2>
    26a0:	88 60       	ori	r24, 0x08	; 8
    26a2:	d6 01       	movw	r26, r12
    26a4:	1b 96       	adiw	r26, 0x0b	; 11
    26a6:	8c 93       	st	X, r24
    26a8:	8e c0       	rjmp	.+284    	; 0x27c6 <follow_path+0x306>
    26aa:	86 e0       	ldi	r24, 0x06	; 6
    26ac:	b1 c0       	rjmp	.+354    	; 0x2810 <follow_path+0x350>
    26ae:	ee 80       	ldd	r14, Y+6	; 0x06
    26b0:	ff 80       	ldd	r15, Y+7	; 0x07
    26b2:	f7 01       	movw	r30, r14
    26b4:	46 85       	ldd	r20, Z+14	; 0x0e
    26b6:	57 85       	ldd	r21, Z+15	; 0x0f
    26b8:	60 89       	ldd	r22, Z+16	; 0x10
    26ba:	71 89       	ldd	r23, Z+17	; 0x11
    26bc:	80 81       	ld	r24, Z
    26be:	91 81       	ldd	r25, Z+1	; 0x01
    26c0:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <move_window>
    26c4:	81 11       	cpse	r24, r1
    26c6:	88 c0       	rjmp	.+272    	; 0x27d8 <follow_path+0x318>
    26c8:	d7 01       	movw	r26, r14
    26ca:	52 96       	adiw	r26, 0x12	; 18
    26cc:	6d 91       	ld	r22, X+
    26ce:	7c 91       	ld	r23, X
    26d0:	53 97       	sbiw	r26, 0x13	; 19
    26d2:	fb 01       	movw	r30, r22
    26d4:	90 81       	ld	r25, Z
    26d6:	99 23       	and	r25, r25
    26d8:	09 f4       	brne	.+2      	; 0x26dc <follow_path+0x21c>
    26da:	8b c0       	rjmp	.+278    	; 0x27f2 <follow_path+0x332>
    26dc:	93 85       	ldd	r25, Z+11	; 0x0b
    26de:	93 fd       	sbrc	r25, 3
    26e0:	13 c0       	rjmp	.+38     	; 0x2708 <follow_path+0x248>
    26e2:	54 96       	adiw	r26, 0x14	; 20
    26e4:	4d 91       	ld	r20, X+
    26e6:	5c 91       	ld	r21, X
    26e8:	55 97       	sbiw	r26, 0x15	; 21
    26ea:	da 01       	movw	r26, r20
    26ec:	9b 01       	movw	r18, r22
    26ee:	25 5f       	subi	r18, 0xF5	; 245
    26f0:	3f 4f       	sbci	r19, 0xFF	; 255
    26f2:	67 01       	movw	r12, r14
    26f4:	04 c0       	rjmp	.+8      	; 0x26fe <follow_path+0x23e>
    26f6:	e2 17       	cp	r30, r18
    26f8:	f3 07       	cpc	r31, r19
    26fa:	09 f4       	brne	.+2      	; 0x26fe <follow_path+0x23e>
    26fc:	83 c0       	rjmp	.+262    	; 0x2804 <follow_path+0x344>
    26fe:	f1 90       	ld	r15, Z+
    2700:	9d 91       	ld	r25, X+
    2702:	f9 16       	cp	r15, r25
    2704:	c1 f3       	breq	.-16     	; 0x26f6 <follow_path+0x236>
    2706:	76 01       	movw	r14, r12
    2708:	6b 2d       	mov	r22, r11
    270a:	7a 2d       	mov	r23, r10
    270c:	c7 01       	movw	r24, r14
    270e:	9c dd       	rcall	.-1224   	; 0x2248 <dir_next>
    2710:	88 23       	and	r24, r24
    2712:	79 f2       	breq	.-98     	; 0x26b2 <follow_path+0x1f2>
    2714:	ff 82       	std	Y+7, r15	; 0x07
    2716:	ee 82       	std	Y+6, r14	; 0x06
    2718:	61 c0       	rjmp	.+194    	; 0x27dc <follow_path+0x31c>
    271a:	95 ff       	sbrs	r25, 5
    271c:	10 c0       	rjmp	.+32     	; 0x273e <follow_path+0x27e>
    271e:	ae 81       	ldd	r26, Y+6	; 0x06
    2720:	bf 81       	ldd	r27, Y+7	; 0x07
    2722:	16 96       	adiw	r26, 0x06	; 6
    2724:	1d 92       	st	X+, r1
    2726:	1d 92       	st	X+, r1
    2728:	1d 92       	st	X+, r1
    272a:	1c 92       	st	X, r1
    272c:	19 97       	sbiw	r26, 0x09	; 9
    272e:	53 96       	adiw	r26, 0x13	; 19
    2730:	1c 92       	st	X, r1
    2732:	1e 92       	st	-X, r1
    2734:	52 97       	sbiw	r26, 0x12	; 18
    2736:	92 ff       	sbrs	r25, 2
    2738:	1c cf       	rjmp	.-456    	; 0x2572 <follow_path+0xb2>
    273a:	80 e0       	ldi	r24, 0x00	; 0
    273c:	69 c0       	rjmp	.+210    	; 0x2810 <follow_path+0x350>
    273e:	92 fd       	sbrc	r25, 2
    2740:	13 c0       	rjmp	.+38     	; 0x2768 <follow_path+0x2a8>
    2742:	85 e0       	ldi	r24, 0x05	; 5
    2744:	65 c0       	rjmp	.+202    	; 0x2810 <follow_path+0x350>
    2746:	fb 01       	movw	r30, r22
    2748:	83 85       	ldd	r24, Z+11	; 0x0b
    274a:	84 ff       	sbrs	r24, 4
    274c:	0f c0       	rjmp	.+30     	; 0x276c <follow_path+0x2ac>
    274e:	ae 81       	ldd	r26, Y+6	; 0x06
    2750:	bf 81       	ldd	r27, Y+7	; 0x07
    2752:	8d 91       	ld	r24, X+
    2754:	9c 91       	ld	r25, X
    2756:	0e 94 30 07 	call	0xe60	; 0xe60 <ld_clust>
    275a:	ee 81       	ldd	r30, Y+6	; 0x06
    275c:	ff 81       	ldd	r31, Y+7	; 0x07
    275e:	66 83       	std	Z+6, r22	; 0x06
    2760:	77 83       	std	Z+7, r23	; 0x07
    2762:	80 87       	std	Z+8, r24	; 0x08
    2764:	91 87       	std	Z+9, r25	; 0x09
    2766:	05 cf       	rjmp	.-502    	; 0x2572 <follow_path+0xb2>
    2768:	84 e0       	ldi	r24, 0x04	; 4
    276a:	52 c0       	rjmp	.+164    	; 0x2810 <follow_path+0x350>
    276c:	85 e0       	ldi	r24, 0x05	; 5
    276e:	50 c0       	rjmp	.+160    	; 0x2810 <follow_path+0x350>
    2770:	0e 0d       	add	r16, r14
    2772:	1f 1d       	adc	r17, r15
    2774:	80 e2       	ldi	r24, 0x20	; 32
    2776:	3c cf       	rjmp	.-392    	; 0x25f0 <follow_path+0x130>
    2778:	0e 0d       	add	r16, r14
    277a:	1f 1d       	adc	r17, r15
    277c:	84 e2       	ldi	r24, 0x24	; 36
    277e:	38 cf       	rjmp	.-400    	; 0x25f0 <follow_path+0x130>
    2780:	f8 e0       	ldi	r31, 0x08	; 8
    2782:	4f 16       	cp	r4, r31
    2784:	51 04       	cpc	r5, r1
    2786:	09 f4       	brne	.+2      	; 0x278a <follow_path+0x2ca>
    2788:	4a cf       	rjmp	.-364    	; 0x261e <follow_path+0x15e>
    278a:	8f cf       	rjmp	.-226    	; 0x26aa <follow_path+0x1ea>
    278c:	41 2f       	mov	r20, r17
    278e:	50 e0       	ldi	r21, 0x00	; 0
    2790:	42 32       	cpi	r20, 0x22	; 34
    2792:	51 05       	cpc	r21, r1
    2794:	09 f4       	brne	.+2      	; 0x2798 <follow_path+0x2d8>
    2796:	89 cf       	rjmp	.-238    	; 0x26aa <follow_path+0x1ea>
    2798:	e2 e0       	ldi	r30, 0x02	; 2
    279a:	f1 e0       	ldi	r31, 0x01	; 1
    279c:	51 cf       	rjmp	.-350    	; 0x2640 <follow_path+0x180>
    279e:	2f eb       	ldi	r18, 0xBF	; 191
    27a0:	21 0f       	add	r18, r17
    27a2:	2a 31       	cpi	r18, 0x1A	; 26
    27a4:	08 f4       	brcc	.+2      	; 0x27a8 <follow_path+0x2e8>
    27a6:	55 cf       	rjmp	.-342    	; 0x2652 <follow_path+0x192>
    27a8:	56 cf       	rjmp	.-340    	; 0x2656 <follow_path+0x196>
    27aa:	90 2e       	mov	r9, r16
    27ac:	87 01       	movw	r16, r14
    27ae:	08 0f       	add	r16, r24
    27b0:	19 1f       	adc	r17, r25
    27b2:	84 e0       	ldi	r24, 0x04	; 4
    27b4:	5d cf       	rjmp	.-326    	; 0x2670 <follow_path+0x1b0>
    27b6:	90 2e       	mov	r9, r16
    27b8:	87 01       	movw	r16, r14
    27ba:	08 0f       	add	r16, r24
    27bc:	19 1f       	adc	r17, r25
    27be:	82 2d       	mov	r24, r2
    27c0:	57 cf       	rjmp	.-338    	; 0x2670 <follow_path+0x1b0>
    27c2:	86 e0       	ldi	r24, 0x06	; 6
    27c4:	25 c0       	rjmp	.+74     	; 0x2810 <follow_path+0x350>
    27c6:	6b 2d       	mov	r22, r11
    27c8:	7a 2d       	mov	r23, r10
    27ca:	8e 81       	ldd	r24, Y+6	; 0x06
    27cc:	9f 81       	ldd	r25, Y+7	; 0x07
    27ce:	45 da       	rcall	.-2934   	; 0x1c5a <dir_sdi>
    27d0:	88 23       	and	r24, r24
    27d2:	09 f4       	brne	.+2      	; 0x27d6 <follow_path+0x316>
    27d4:	6c cf       	rjmp	.-296    	; 0x26ae <follow_path+0x1ee>
    27d6:	02 c0       	rjmp	.+4      	; 0x27dc <follow_path+0x31c>
    27d8:	ff 82       	std	Y+7, r15	; 0x07
    27da:	ee 82       	std	Y+6, r14	; 0x06
    27dc:	ae 81       	ldd	r26, Y+6	; 0x06
    27de:	bf 81       	ldd	r27, Y+7	; 0x07
    27e0:	54 96       	adiw	r26, 0x14	; 20
    27e2:	ed 91       	ld	r30, X+
    27e4:	fc 91       	ld	r31, X
    27e6:	55 97       	sbiw	r26, 0x15	; 21
    27e8:	93 85       	ldd	r25, Z+11	; 0x0b
    27ea:	84 30       	cpi	r24, 0x04	; 4
    27ec:	09 f4       	brne	.+2      	; 0x27f0 <follow_path+0x330>
    27ee:	95 cf       	rjmp	.-214    	; 0x271a <follow_path+0x25a>
    27f0:	0f c0       	rjmp	.+30     	; 0x2810 <follow_path+0x350>
    27f2:	ff 82       	std	Y+7, r15	; 0x07
    27f4:	ee 82       	std	Y+6, r14	; 0x06
    27f6:	d7 01       	movw	r26, r14
    27f8:	54 96       	adiw	r26, 0x14	; 20
    27fa:	ed 91       	ld	r30, X+
    27fc:	fc 91       	ld	r31, X
    27fe:	55 97       	sbiw	r26, 0x15	; 21
    2800:	93 85       	ldd	r25, Z+11	; 0x0b
    2802:	8b cf       	rjmp	.-234    	; 0x271a <follow_path+0x25a>
    2804:	df 82       	std	Y+7, r13	; 0x07
    2806:	ce 82       	std	Y+6, r12	; 0x06
    2808:	fa 01       	movw	r30, r20
    280a:	93 85       	ldd	r25, Z+11	; 0x0b
    280c:	92 ff       	sbrs	r25, 2
    280e:	9b cf       	rjmp	.-202    	; 0x2746 <follow_path+0x286>
    2810:	27 96       	adiw	r28, 0x07	; 7
    2812:	0f b6       	in	r0, 0x3f	; 63
    2814:	f8 94       	cli
    2816:	de bf       	out	0x3e, r29	; 62
    2818:	0f be       	out	0x3f, r0	; 63
    281a:	cd bf       	out	0x3d, r28	; 61
    281c:	df 91       	pop	r29
    281e:	cf 91       	pop	r28
    2820:	1f 91       	pop	r17
    2822:	0f 91       	pop	r16
    2824:	ff 90       	pop	r15
    2826:	ef 90       	pop	r14
    2828:	df 90       	pop	r13
    282a:	cf 90       	pop	r12
    282c:	bf 90       	pop	r11
    282e:	af 90       	pop	r10
    2830:	9f 90       	pop	r9
    2832:	8f 90       	pop	r8
    2834:	7f 90       	pop	r7
    2836:	6f 90       	pop	r6
    2838:	5f 90       	pop	r5
    283a:	4f 90       	pop	r4
    283c:	3f 90       	pop	r3
    283e:	2f 90       	pop	r2
    2840:	08 95       	ret

00002842 <dir_alloc>:
    2842:	cf 92       	push	r12
    2844:	df 92       	push	r13
    2846:	ef 92       	push	r14
    2848:	ff 92       	push	r15
    284a:	0f 93       	push	r16
    284c:	1f 93       	push	r17
    284e:	cf 93       	push	r28
    2850:	df 93       	push	r29
    2852:	ec 01       	movw	r28, r24
    2854:	7b 01       	movw	r14, r22
    2856:	60 e0       	ldi	r22, 0x00	; 0
    2858:	70 e0       	ldi	r23, 0x00	; 0
    285a:	ff d9       	rcall	.-3074   	; 0x1c5a <dir_sdi>
    285c:	81 11       	cpse	r24, r1
    285e:	23 c0       	rjmp	.+70     	; 0x28a6 <dir_alloc+0x64>
    2860:	00 e0       	ldi	r16, 0x00	; 0
    2862:	10 e0       	ldi	r17, 0x00	; 0
    2864:	c1 2c       	mov	r12, r1
    2866:	d1 2c       	mov	r13, r1
    2868:	4e 85       	ldd	r20, Y+14	; 0x0e
    286a:	5f 85       	ldd	r21, Y+15	; 0x0f
    286c:	68 89       	ldd	r22, Y+16	; 0x10
    286e:	79 89       	ldd	r23, Y+17	; 0x11
    2870:	88 81       	ld	r24, Y
    2872:	99 81       	ldd	r25, Y+1	; 0x01
    2874:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <move_window>
    2878:	81 11       	cpse	r24, r1
    287a:	15 c0       	rjmp	.+42     	; 0x28a6 <dir_alloc+0x64>
    287c:	ea 89       	ldd	r30, Y+18	; 0x12
    287e:	fb 89       	ldd	r31, Y+19	; 0x13
    2880:	90 81       	ld	r25, Z
    2882:	95 3e       	cpi	r25, 0xE5	; 229
    2884:	11 f0       	breq	.+4      	; 0x288a <dir_alloc+0x48>
    2886:	91 11       	cpse	r25, r1
    2888:	06 c0       	rjmp	.+12     	; 0x2896 <dir_alloc+0x54>
    288a:	0f 5f       	subi	r16, 0xFF	; 255
    288c:	1f 4f       	sbci	r17, 0xFF	; 255
    288e:	0e 15       	cp	r16, r14
    2890:	1f 05       	cpc	r17, r15
    2892:	19 f4       	brne	.+6      	; 0x289a <dir_alloc+0x58>
    2894:	0b c0       	rjmp	.+22     	; 0x28ac <dir_alloc+0x6a>
    2896:	0c 2d       	mov	r16, r12
    2898:	1d 2d       	mov	r17, r13
    289a:	61 e0       	ldi	r22, 0x01	; 1
    289c:	70 e0       	ldi	r23, 0x00	; 0
    289e:	ce 01       	movw	r24, r28
    28a0:	d3 dc       	rcall	.-1626   	; 0x2248 <dir_next>
    28a2:	88 23       	and	r24, r24
    28a4:	09 f3       	breq	.-62     	; 0x2868 <dir_alloc+0x26>
    28a6:	84 30       	cpi	r24, 0x04	; 4
    28a8:	09 f4       	brne	.+2      	; 0x28ac <dir_alloc+0x6a>
    28aa:	87 e0       	ldi	r24, 0x07	; 7
    28ac:	df 91       	pop	r29
    28ae:	cf 91       	pop	r28
    28b0:	1f 91       	pop	r17
    28b2:	0f 91       	pop	r16
    28b4:	ff 90       	pop	r15
    28b6:	ef 90       	pop	r14
    28b8:	df 90       	pop	r13
    28ba:	cf 90       	pop	r12
    28bc:	08 95       	ret

000028be <dir_register>:
    28be:	0f 93       	push	r16
    28c0:	1f 93       	push	r17
    28c2:	cf 93       	push	r28
    28c4:	8c 01       	movw	r16, r24
    28c6:	61 e0       	ldi	r22, 0x01	; 1
    28c8:	70 e0       	ldi	r23, 0x00	; 0
    28ca:	bb df       	rcall	.-138    	; 0x2842 <dir_alloc>
    28cc:	c8 2f       	mov	r28, r24
    28ce:	81 11       	cpse	r24, r1
    28d0:	29 c0       	rjmp	.+82     	; 0x2924 <dir_register+0x66>
    28d2:	d8 01       	movw	r26, r16
    28d4:	1e 96       	adiw	r26, 0x0e	; 14
    28d6:	4d 91       	ld	r20, X+
    28d8:	5d 91       	ld	r21, X+
    28da:	6d 91       	ld	r22, X+
    28dc:	7c 91       	ld	r23, X
    28de:	51 97       	sbiw	r26, 0x11	; 17
    28e0:	8d 91       	ld	r24, X+
    28e2:	9c 91       	ld	r25, X
    28e4:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <move_window>
    28e8:	c8 2f       	mov	r28, r24
    28ea:	81 11       	cpse	r24, r1
    28ec:	1b c0       	rjmp	.+54     	; 0x2924 <dir_register+0x66>
    28ee:	40 e2       	ldi	r20, 0x20	; 32
    28f0:	50 e0       	ldi	r21, 0x00	; 0
    28f2:	60 e0       	ldi	r22, 0x00	; 0
    28f4:	70 e0       	ldi	r23, 0x00	; 0
    28f6:	f8 01       	movw	r30, r16
    28f8:	82 89       	ldd	r24, Z+18	; 0x12
    28fa:	93 89       	ldd	r25, Z+19	; 0x13
    28fc:	0e 94 cf 06 	call	0xd9e	; 0xd9e <mem_set>
    2900:	d8 01       	movw	r26, r16
    2902:	54 96       	adiw	r26, 0x14	; 20
    2904:	6d 91       	ld	r22, X+
    2906:	7c 91       	ld	r23, X
    2908:	55 97       	sbiw	r26, 0x15	; 21
    290a:	4b e0       	ldi	r20, 0x0B	; 11
    290c:	50 e0       	ldi	r21, 0x00	; 0
    290e:	52 96       	adiw	r26, 0x12	; 18
    2910:	8d 91       	ld	r24, X+
    2912:	9c 91       	ld	r25, X
    2914:	53 97       	sbiw	r26, 0x13	; 19
    2916:	0e 94 c1 06 	call	0xd82	; 0xd82 <mem_cpy>
    291a:	d8 01       	movw	r26, r16
    291c:	ed 91       	ld	r30, X+
    291e:	fc 91       	ld	r31, X
    2920:	81 e0       	ldi	r24, 0x01	; 1
    2922:	84 83       	std	Z+4, r24	; 0x04
    2924:	8c 2f       	mov	r24, r28
    2926:	cf 91       	pop	r28
    2928:	1f 91       	pop	r17
    292a:	0f 91       	pop	r16
    292c:	08 95       	ret

0000292e <dir_read>:
    292e:	cf 92       	push	r12
    2930:	df 92       	push	r13
    2932:	ef 92       	push	r14
    2934:	ff 92       	push	r15
    2936:	0f 93       	push	r16
    2938:	1f 93       	push	r17
    293a:	cf 93       	push	r28
    293c:	df 93       	push	r29
    293e:	ec 01       	movw	r28, r24
    2940:	8b 01       	movw	r16, r22
    2942:	94 e0       	ldi	r25, 0x04	; 4
    2944:	cc 24       	eor	r12, r12
    2946:	c3 94       	inc	r12
    2948:	d1 2c       	mov	r13, r1
    294a:	e1 2c       	mov	r14, r1
    294c:	f1 2c       	mov	r15, r1
    294e:	22 c0       	rjmp	.+68     	; 0x2994 <dir_read+0x66>
    2950:	88 81       	ld	r24, Y
    2952:	99 81       	ldd	r25, Y+1	; 0x01
    2954:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <move_window>
    2958:	81 11       	cpse	r24, r1
    295a:	28 c0       	rjmp	.+80     	; 0x29ac <dir_read+0x7e>
    295c:	ea 89       	ldd	r30, Y+18	; 0x12
    295e:	fb 89       	ldd	r31, Y+19	; 0x13
    2960:	20 81       	ld	r18, Z
    2962:	22 23       	and	r18, r18
    2964:	41 f1       	breq	.+80     	; 0x29b6 <dir_read+0x88>
    2966:	93 85       	ldd	r25, Z+11	; 0x0b
    2968:	9f 73       	andi	r25, 0x3F	; 63
    296a:	25 3e       	cpi	r18, 0xE5	; 229
    296c:	61 f0       	breq	.+24     	; 0x2986 <dir_read+0x58>
    296e:	9f 30       	cpi	r25, 0x0F	; 15
    2970:	51 f0       	breq	.+20     	; 0x2986 <dir_read+0x58>
    2972:	9f 71       	andi	r25, 0x1F	; 31
    2974:	2c 2d       	mov	r18, r12
    2976:	3d 2d       	mov	r19, r13
    2978:	98 30       	cpi	r25, 0x08	; 8
    297a:	11 f0       	breq	.+4      	; 0x2980 <dir_read+0x52>
    297c:	2e 2d       	mov	r18, r14
    297e:	3f 2d       	mov	r19, r15
    2980:	20 17       	cp	r18, r16
    2982:	31 07       	cpc	r19, r17
    2984:	d9 f0       	breq	.+54     	; 0x29bc <dir_read+0x8e>
    2986:	6e 2d       	mov	r22, r14
    2988:	7f 2d       	mov	r23, r15
    298a:	ce 01       	movw	r24, r28
    298c:	5d dc       	rcall	.-1862   	; 0x2248 <dir_next>
    298e:	98 2f       	mov	r25, r24
    2990:	81 11       	cpse	r24, r1
    2992:	13 c0       	rjmp	.+38     	; 0x29ba <dir_read+0x8c>
    2994:	4e 85       	ldd	r20, Y+14	; 0x0e
    2996:	5f 85       	ldd	r21, Y+15	; 0x0f
    2998:	68 89       	ldd	r22, Y+16	; 0x10
    299a:	79 89       	ldd	r23, Y+17	; 0x11
    299c:	41 15       	cp	r20, r1
    299e:	51 05       	cpc	r21, r1
    29a0:	61 05       	cpc	r22, r1
    29a2:	71 05       	cpc	r23, r1
    29a4:	a9 f6       	brne	.-86     	; 0x2950 <dir_read+0x22>
    29a6:	89 2f       	mov	r24, r25
    29a8:	99 23       	and	r25, r25
    29aa:	41 f0       	breq	.+16     	; 0x29bc <dir_read+0x8e>
    29ac:	1e 86       	std	Y+14, r1	; 0x0e
    29ae:	1f 86       	std	Y+15, r1	; 0x0f
    29b0:	18 8a       	std	Y+16, r1	; 0x10
    29b2:	19 8a       	std	Y+17, r1	; 0x11
    29b4:	03 c0       	rjmp	.+6      	; 0x29bc <dir_read+0x8e>
    29b6:	84 e0       	ldi	r24, 0x04	; 4
    29b8:	f9 cf       	rjmp	.-14     	; 0x29ac <dir_read+0x7e>
    29ba:	f8 cf       	rjmp	.-16     	; 0x29ac <dir_read+0x7e>
    29bc:	df 91       	pop	r29
    29be:	cf 91       	pop	r28
    29c0:	1f 91       	pop	r17
    29c2:	0f 91       	pop	r16
    29c4:	ff 90       	pop	r15
    29c6:	ef 90       	pop	r14
    29c8:	df 90       	pop	r13
    29ca:	cf 90       	pop	r12
    29cc:	08 95       	ret

000029ce <remove_chain>:
    29ce:	8f 92       	push	r8
    29d0:	9f 92       	push	r9
    29d2:	af 92       	push	r10
    29d4:	bf 92       	push	r11
    29d6:	cf 92       	push	r12
    29d8:	df 92       	push	r13
    29da:	ef 92       	push	r14
    29dc:	ff 92       	push	r15
    29de:	0f 93       	push	r16
    29e0:	1f 93       	push	r17
    29e2:	cf 93       	push	r28
    29e4:	df 93       	push	r29
    29e6:	ec 01       	movw	r28, r24
    29e8:	6a 01       	movw	r12, r20
    29ea:	7b 01       	movw	r14, r22
    29ec:	42 30       	cpi	r20, 0x02	; 2
    29ee:	51 05       	cpc	r21, r1
    29f0:	61 05       	cpc	r22, r1
    29f2:	71 05       	cpc	r23, r1
    29f4:	08 f4       	brcc	.+2      	; 0x29f8 <remove_chain+0x2a>
    29f6:	4c c0       	rjmp	.+152    	; 0x2a90 <remove_chain+0xc2>
    29f8:	8e 89       	ldd	r24, Y+22	; 0x16
    29fa:	9f 89       	ldd	r25, Y+23	; 0x17
    29fc:	a8 8d       	ldd	r26, Y+24	; 0x18
    29fe:	b9 8d       	ldd	r27, Y+25	; 0x19
    2a00:	48 17       	cp	r20, r24
    2a02:	59 07       	cpc	r21, r25
    2a04:	6a 07       	cpc	r22, r26
    2a06:	7b 07       	cpc	r23, r27
    2a08:	08 f0       	brcs	.+2      	; 0x2a0c <remove_chain+0x3e>
    2a0a:	44 c0       	rjmp	.+136    	; 0x2a94 <remove_chain+0xc6>
    2a0c:	35 c0       	rjmp	.+106    	; 0x2a78 <remove_chain+0xaa>
    2a0e:	b7 01       	movw	r22, r14
    2a10:	a6 01       	movw	r20, r12
    2a12:	ce 01       	movw	r24, r28
    2a14:	20 d8       	rcall	.-4032   	; 0x1a56 <get_fat>
    2a16:	4b 01       	movw	r8, r22
    2a18:	5c 01       	movw	r10, r24
    2a1a:	67 2b       	or	r22, r23
    2a1c:	68 2b       	or	r22, r24
    2a1e:	69 2b       	or	r22, r25
    2a20:	d9 f1       	breq	.+118    	; 0x2a98 <remove_chain+0xca>
    2a22:	81 e0       	ldi	r24, 0x01	; 1
    2a24:	88 16       	cp	r8, r24
    2a26:	91 04       	cpc	r9, r1
    2a28:	a1 04       	cpc	r10, r1
    2a2a:	b1 04       	cpc	r11, r1
    2a2c:	b9 f1       	breq	.+110    	; 0x2a9c <remove_chain+0xce>
    2a2e:	2f ef       	ldi	r18, 0xFF	; 255
    2a30:	82 16       	cp	r8, r18
    2a32:	92 06       	cpc	r9, r18
    2a34:	a2 06       	cpc	r10, r18
    2a36:	b2 06       	cpc	r11, r18
    2a38:	99 f1       	breq	.+102    	; 0x2aa0 <remove_chain+0xd2>
    2a3a:	00 e0       	ldi	r16, 0x00	; 0
    2a3c:	10 e0       	ldi	r17, 0x00	; 0
    2a3e:	98 01       	movw	r18, r16
    2a40:	b7 01       	movw	r22, r14
    2a42:	a6 01       	movw	r20, r12
    2a44:	ce 01       	movw	r24, r28
    2a46:	c6 d9       	rcall	.-3188   	; 0x1dd4 <put_fat>
    2a48:	81 11       	cpse	r24, r1
    2a4a:	2b c0       	rjmp	.+86     	; 0x2aa2 <remove_chain+0xd4>
    2a4c:	8e 85       	ldd	r24, Y+14	; 0x0e
    2a4e:	9f 85       	ldd	r25, Y+15	; 0x0f
    2a50:	a8 89       	ldd	r26, Y+16	; 0x10
    2a52:	b9 89       	ldd	r27, Y+17	; 0x11
    2a54:	8f 3f       	cpi	r24, 0xFF	; 255
    2a56:	2f ef       	ldi	r18, 0xFF	; 255
    2a58:	92 07       	cpc	r25, r18
    2a5a:	a2 07       	cpc	r26, r18
    2a5c:	b2 07       	cpc	r27, r18
    2a5e:	51 f0       	breq	.+20     	; 0x2a74 <remove_chain+0xa6>
    2a60:	01 96       	adiw	r24, 0x01	; 1
    2a62:	a1 1d       	adc	r26, r1
    2a64:	b1 1d       	adc	r27, r1
    2a66:	8e 87       	std	Y+14, r24	; 0x0e
    2a68:	9f 87       	std	Y+15, r25	; 0x0f
    2a6a:	a8 8b       	std	Y+16, r26	; 0x10
    2a6c:	b9 8b       	std	Y+17, r27	; 0x11
    2a6e:	8d 81       	ldd	r24, Y+5	; 0x05
    2a70:	81 60       	ori	r24, 0x01	; 1
    2a72:	8d 83       	std	Y+5, r24	; 0x05
    2a74:	75 01       	movw	r14, r10
    2a76:	64 01       	movw	r12, r8
    2a78:	8e 89       	ldd	r24, Y+22	; 0x16
    2a7a:	9f 89       	ldd	r25, Y+23	; 0x17
    2a7c:	a8 8d       	ldd	r26, Y+24	; 0x18
    2a7e:	b9 8d       	ldd	r27, Y+25	; 0x19
    2a80:	c8 16       	cp	r12, r24
    2a82:	d9 06       	cpc	r13, r25
    2a84:	ea 06       	cpc	r14, r26
    2a86:	fb 06       	cpc	r15, r27
    2a88:	08 f4       	brcc	.+2      	; 0x2a8c <remove_chain+0xbe>
    2a8a:	c1 cf       	rjmp	.-126    	; 0x2a0e <remove_chain+0x40>
    2a8c:	80 e0       	ldi	r24, 0x00	; 0
    2a8e:	09 c0       	rjmp	.+18     	; 0x2aa2 <remove_chain+0xd4>
    2a90:	82 e0       	ldi	r24, 0x02	; 2
    2a92:	07 c0       	rjmp	.+14     	; 0x2aa2 <remove_chain+0xd4>
    2a94:	82 e0       	ldi	r24, 0x02	; 2
    2a96:	05 c0       	rjmp	.+10     	; 0x2aa2 <remove_chain+0xd4>
    2a98:	80 e0       	ldi	r24, 0x00	; 0
    2a9a:	03 c0       	rjmp	.+6      	; 0x2aa2 <remove_chain+0xd4>
    2a9c:	82 e0       	ldi	r24, 0x02	; 2
    2a9e:	01 c0       	rjmp	.+2      	; 0x2aa2 <remove_chain+0xd4>
    2aa0:	81 e0       	ldi	r24, 0x01	; 1
    2aa2:	df 91       	pop	r29
    2aa4:	cf 91       	pop	r28
    2aa6:	1f 91       	pop	r17
    2aa8:	0f 91       	pop	r16
    2aaa:	ff 90       	pop	r15
    2aac:	ef 90       	pop	r14
    2aae:	df 90       	pop	r13
    2ab0:	cf 90       	pop	r12
    2ab2:	bf 90       	pop	r11
    2ab4:	af 90       	pop	r10
    2ab6:	9f 90       	pop	r9
    2ab8:	8f 90       	pop	r8
    2aba:	08 95       	ret

00002abc <f_mount>:
    2abc:	1f 93       	push	r17
    2abe:	cf 93       	push	r28
    2ac0:	df 93       	push	r29
    2ac2:	00 d0       	rcall	.+0      	; 0x2ac4 <f_mount+0x8>
    2ac4:	00 d0       	rcall	.+0      	; 0x2ac6 <f_mount+0xa>
    2ac6:	00 d0       	rcall	.+0      	; 0x2ac8 <f_mount+0xc>
    2ac8:	cd b7       	in	r28, 0x3d	; 61
    2aca:	de b7       	in	r29, 0x3e	; 62
    2acc:	9c 83       	std	Y+4, r25	; 0x04
    2ace:	8b 83       	std	Y+3, r24	; 0x03
    2ad0:	7e 83       	std	Y+6, r23	; 0x06
    2ad2:	6d 83       	std	Y+5, r22	; 0x05
    2ad4:	14 2f       	mov	r17, r20
    2ad6:	7a 83       	std	Y+2, r23	; 0x02
    2ad8:	69 83       	std	Y+1, r22	; 0x01
    2ada:	ce 01       	movw	r24, r28
    2adc:	01 96       	adiw	r24, 0x01	; 1
    2ade:	0e 94 52 07 	call	0xea4	; 0xea4 <get_ldnumber>
    2ae2:	99 23       	and	r25, r25
    2ae4:	34 f1       	brlt	.+76     	; 0x2b32 <f_mount+0x76>
    2ae6:	fc 01       	movw	r30, r24
    2ae8:	ee 0f       	add	r30, r30
    2aea:	ff 1f       	adc	r31, r31
    2aec:	e3 51       	subi	r30, 0x13	; 19
    2aee:	fe 4f       	sbci	r31, 0xFE	; 254
    2af0:	01 90       	ld	r0, Z+
    2af2:	f0 81       	ld	r31, Z
    2af4:	e0 2d       	mov	r30, r0
    2af6:	30 97       	sbiw	r30, 0x00	; 0
    2af8:	09 f0       	breq	.+2      	; 0x2afc <f_mount+0x40>
    2afa:	10 82       	st	Z, r1
    2afc:	eb 81       	ldd	r30, Y+3	; 0x03
    2afe:	fc 81       	ldd	r31, Y+4	; 0x04
    2b00:	30 97       	sbiw	r30, 0x00	; 0
    2b02:	e9 f0       	breq	.+58     	; 0x2b3e <f_mount+0x82>
    2b04:	10 82       	st	Z, r1
    2b06:	2b 81       	ldd	r18, Y+3	; 0x03
    2b08:	3c 81       	ldd	r19, Y+4	; 0x04
    2b0a:	88 0f       	add	r24, r24
    2b0c:	99 1f       	adc	r25, r25
    2b0e:	fc 01       	movw	r30, r24
    2b10:	e3 51       	subi	r30, 0x13	; 19
    2b12:	fe 4f       	sbci	r31, 0xFE	; 254
    2b14:	31 83       	std	Z+1, r19	; 0x01
    2b16:	20 83       	st	Z, r18
    2b18:	23 2b       	or	r18, r19
    2b1a:	69 f0       	breq	.+26     	; 0x2b36 <f_mount+0x7a>
    2b1c:	11 30       	cpi	r17, 0x01	; 1
    2b1e:	69 f4       	brne	.+26     	; 0x2b3a <f_mount+0x7e>
    2b20:	40 e0       	ldi	r20, 0x00	; 0
    2b22:	be 01       	movw	r22, r28
    2b24:	6b 5f       	subi	r22, 0xFB	; 251
    2b26:	7f 4f       	sbci	r23, 0xFF	; 255
    2b28:	ce 01       	movw	r24, r28
    2b2a:	03 96       	adiw	r24, 0x03	; 3
    2b2c:	0e 94 ba 08 	call	0x1174	; 0x1174 <find_volume>
    2b30:	0e c0       	rjmp	.+28     	; 0x2b4e <f_mount+0x92>
    2b32:	8b e0       	ldi	r24, 0x0B	; 11
    2b34:	0c c0       	rjmp	.+24     	; 0x2b4e <f_mount+0x92>
    2b36:	80 e0       	ldi	r24, 0x00	; 0
    2b38:	0a c0       	rjmp	.+20     	; 0x2b4e <f_mount+0x92>
    2b3a:	80 e0       	ldi	r24, 0x00	; 0
    2b3c:	08 c0       	rjmp	.+16     	; 0x2b4e <f_mount+0x92>
    2b3e:	88 0f       	add	r24, r24
    2b40:	99 1f       	adc	r25, r25
    2b42:	fc 01       	movw	r30, r24
    2b44:	e3 51       	subi	r30, 0x13	; 19
    2b46:	fe 4f       	sbci	r31, 0xFE	; 254
    2b48:	11 82       	std	Z+1, r1	; 0x01
    2b4a:	10 82       	st	Z, r1
    2b4c:	80 e0       	ldi	r24, 0x00	; 0
    2b4e:	26 96       	adiw	r28, 0x06	; 6
    2b50:	0f b6       	in	r0, 0x3f	; 63
    2b52:	f8 94       	cli
    2b54:	de bf       	out	0x3e, r29	; 62
    2b56:	0f be       	out	0x3f, r0	; 63
    2b58:	cd bf       	out	0x3d, r28	; 61
    2b5a:	df 91       	pop	r29
    2b5c:	cf 91       	pop	r28
    2b5e:	1f 91       	pop	r17
    2b60:	08 95       	ret

00002b62 <f_open>:
    2b62:	3f 92       	push	r3
    2b64:	4f 92       	push	r4
    2b66:	5f 92       	push	r5
    2b68:	6f 92       	push	r6
    2b6a:	7f 92       	push	r7
    2b6c:	8f 92       	push	r8
    2b6e:	9f 92       	push	r9
    2b70:	af 92       	push	r10
    2b72:	bf 92       	push	r11
    2b74:	cf 92       	push	r12
    2b76:	df 92       	push	r13
    2b78:	ef 92       	push	r14
    2b7a:	ff 92       	push	r15
    2b7c:	0f 93       	push	r16
    2b7e:	1f 93       	push	r17
    2b80:	cf 93       	push	r28
    2b82:	df 93       	push	r29
    2b84:	cd b7       	in	r28, 0x3d	; 61
    2b86:	de b7       	in	r29, 0x3e	; 62
    2b88:	a6 97       	sbiw	r28, 0x26	; 38
    2b8a:	0f b6       	in	r0, 0x3f	; 63
    2b8c:	f8 94       	cli
    2b8e:	de bf       	out	0x3e, r29	; 62
    2b90:	0f be       	out	0x3f, r0	; 63
    2b92:	cd bf       	out	0x3d, r28	; 61
    2b94:	7e a3       	std	Y+38, r23	; 0x26
    2b96:	6d a3       	std	Y+37, r22	; 0x25
    2b98:	00 97       	sbiw	r24, 0x00	; 0
    2b9a:	09 f4       	brne	.+2      	; 0x2b9e <f_open+0x3c>
    2b9c:	cf c0       	rjmp	.+414    	; 0x2d3c <f_open+0x1da>
    2b9e:	d4 2e       	mov	r13, r20
    2ba0:	8c 01       	movw	r16, r24
    2ba2:	fc 01       	movw	r30, r24
    2ba4:	11 82       	std	Z+1, r1	; 0x01
    2ba6:	10 82       	st	Z, r1
    2ba8:	4e 71       	andi	r20, 0x1E	; 30
    2baa:	be 01       	movw	r22, r28
    2bac:	6b 5d       	subi	r22, 0xDB	; 219
    2bae:	7f 4f       	sbci	r23, 0xFF	; 255
    2bb0:	ce 01       	movw	r24, r28
    2bb2:	01 96       	adiw	r24, 0x01	; 1
    2bb4:	0e 94 ba 08 	call	0x1174	; 0x1174 <find_volume>
    2bb8:	81 11       	cpse	r24, r1
    2bba:	ea c0       	rjmp	.+468    	; 0x2d90 <f_open+0x22e>
    2bbc:	fd 2d       	mov	r31, r13
    2bbe:	ff 71       	andi	r31, 0x1F	; 31
    2bc0:	3f 2e       	mov	r3, r31
    2bc2:	ce 01       	movw	r24, r28
    2bc4:	49 96       	adiw	r24, 0x19	; 25
    2bc6:	9e 8b       	std	Y+22, r25	; 0x16
    2bc8:	8d 8b       	std	Y+21, r24	; 0x15
    2bca:	6d a1       	ldd	r22, Y+37	; 0x25
    2bcc:	7e a1       	ldd	r23, Y+38	; 0x26
    2bce:	48 97       	sbiw	r24, 0x18	; 24
    2bd0:	77 dc       	rcall	.-1810   	; 0x24c0 <follow_path>
    2bd2:	eb 88       	ldd	r14, Y+19	; 0x13
    2bd4:	fc 88       	ldd	r15, Y+20	; 0x14
    2bd6:	81 11       	cpse	r24, r1
    2bd8:	b3 c0       	rjmp	.+358    	; 0x2d40 <f_open+0x1de>
    2bda:	e1 14       	cp	r14, r1
    2bdc:	f1 04       	cpc	r15, r1
    2bde:	09 f0       	breq	.+2      	; 0x2be2 <f_open+0x80>
    2be0:	b9 c0       	rjmp	.+370    	; 0x2d54 <f_open+0x1f2>
    2be2:	b3 c0       	rjmp	.+358    	; 0x2d4a <f_open+0x1e8>
    2be4:	84 30       	cpi	r24, 0x04	; 4
    2be6:	09 f0       	breq	.+2      	; 0x2bea <f_open+0x88>
    2be8:	c5 c0       	rjmp	.+394    	; 0x2d74 <f_open+0x212>
    2bea:	ce 01       	movw	r24, r28
    2bec:	01 96       	adiw	r24, 0x01	; 1
    2bee:	67 de       	rcall	.-818    	; 0x28be <dir_register>
    2bf0:	23 2d       	mov	r18, r3
    2bf2:	28 60       	ori	r18, 0x08	; 8
    2bf4:	32 2e       	mov	r3, r18
    2bf6:	eb 88       	ldd	r14, Y+19	; 0x13
    2bf8:	fc 88       	ldd	r15, Y+20	; 0x14
    2bfa:	88 23       	and	r24, r24
    2bfc:	41 f0       	breq	.+16     	; 0x2c0e <f_open+0xac>
    2bfe:	b2 c0       	rjmp	.+356    	; 0x2d64 <f_open+0x202>
    2c00:	f7 01       	movw	r30, r14
    2c02:	83 85       	ldd	r24, Z+11	; 0x0b
    2c04:	81 71       	andi	r24, 0x11	; 17
    2c06:	09 f0       	breq	.+2      	; 0x2c0a <f_open+0xa8>
    2c08:	c0 c0       	rjmp	.+384    	; 0x2d8a <f_open+0x228>
    2c0a:	d2 fc       	sbrc	r13, 2
    2c0c:	c0 c0       	rjmp	.+384    	; 0x2d8e <f_open+0x22c>
    2c0e:	33 fe       	sbrs	r3, 3
    2c10:	ad c0       	rjmp	.+346    	; 0x2d6c <f_open+0x20a>
    2c12:	f7 01       	movw	r30, r14
    2c14:	16 86       	std	Z+14, r1	; 0x0e
    2c16:	17 86       	std	Z+15, r1	; 0x0f
    2c18:	91 e2       	ldi	r25, 0x21	; 33
    2c1a:	90 8b       	std	Z+16, r25	; 0x10
    2c1c:	86 e4       	ldi	r24, 0x46	; 70
    2c1e:	81 8b       	std	Z+17, r24	; 0x11
    2c20:	16 8a       	std	Z+22, r1	; 0x16
    2c22:	17 8a       	std	Z+23, r1	; 0x17
    2c24:	90 8f       	std	Z+24, r25	; 0x18
    2c26:	81 8f       	std	Z+25, r24	; 0x19
    2c28:	13 86       	std	Z+11, r1	; 0x0b
    2c2a:	14 8e       	std	Z+28, r1	; 0x1c
    2c2c:	15 8e       	std	Z+29, r1	; 0x1d
    2c2e:	16 8e       	std	Z+30, r1	; 0x1e
    2c30:	17 8e       	std	Z+31, r1	; 0x1f
    2c32:	c9 80       	ldd	r12, Y+1	; 0x01
    2c34:	da 80       	ldd	r13, Y+2	; 0x02
    2c36:	b7 01       	movw	r22, r14
    2c38:	c6 01       	movw	r24, r12
    2c3a:	0e 94 30 07 	call	0xe60	; 0xe60 <ld_clust>
    2c3e:	2b 01       	movw	r4, r22
    2c40:	3c 01       	movw	r6, r24
    2c42:	f7 01       	movw	r30, r14
    2c44:	12 8e       	std	Z+26, r1	; 0x1a
    2c46:	13 8e       	std	Z+27, r1	; 0x1b
    2c48:	14 8a       	std	Z+20, r1	; 0x14
    2c4a:	15 8a       	std	Z+21, r1	; 0x15
    2c4c:	81 e0       	ldi	r24, 0x01	; 1
    2c4e:	f6 01       	movw	r30, r12
    2c50:	84 83       	std	Z+4, r24	; 0x04
    2c52:	41 14       	cp	r4, r1
    2c54:	51 04       	cpc	r5, r1
    2c56:	61 04       	cpc	r6, r1
    2c58:	71 04       	cpc	r7, r1
    2c5a:	09 f4       	brne	.+2      	; 0x2c5e <f_open+0xfc>
    2c5c:	87 c0       	rjmp	.+270    	; 0x2d6c <f_open+0x20a>
    2c5e:	86 a4       	ldd	r8, Z+46	; 0x2e
    2c60:	97 a4       	ldd	r9, Z+47	; 0x2f
    2c62:	a0 a8       	ldd	r10, Z+48	; 0x30
    2c64:	b1 a8       	ldd	r11, Z+49	; 0x31
    2c66:	b3 01       	movw	r22, r6
    2c68:	a2 01       	movw	r20, r4
    2c6a:	c6 01       	movw	r24, r12
    2c6c:	b0 de       	rcall	.-672    	; 0x29ce <remove_chain>
    2c6e:	81 11       	cpse	r24, r1
    2c70:	79 c0       	rjmp	.+242    	; 0x2d64 <f_open+0x202>
    2c72:	89 81       	ldd	r24, Y+1	; 0x01
    2c74:	9a 81       	ldd	r25, Y+2	; 0x02
    2c76:	f1 e0       	ldi	r31, 0x01	; 1
    2c78:	4f 1a       	sub	r4, r31
    2c7a:	51 08       	sbc	r5, r1
    2c7c:	61 08       	sbc	r6, r1
    2c7e:	71 08       	sbc	r7, r1
    2c80:	fc 01       	movw	r30, r24
    2c82:	42 86       	std	Z+10, r4	; 0x0a
    2c84:	53 86       	std	Z+11, r5	; 0x0b
    2c86:	64 86       	std	Z+12, r6	; 0x0c
    2c88:	75 86       	std	Z+13, r7	; 0x0d
    2c8a:	b5 01       	movw	r22, r10
    2c8c:	a4 01       	movw	r20, r8
    2c8e:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <move_window>
    2c92:	88 23       	and	r24, r24
    2c94:	31 f0       	breq	.+12     	; 0x2ca2 <f_open+0x140>
    2c96:	7c c0       	rjmp	.+248    	; 0x2d90 <f_open+0x22e>
    2c98:	d1 fe       	sbrs	r13, 1
    2c9a:	68 c0       	rjmp	.+208    	; 0x2d6c <f_open+0x20a>
    2c9c:	80 fd       	sbrc	r24, 0
    2c9e:	5f c0       	rjmp	.+190    	; 0x2d5e <f_open+0x1fc>
    2ca0:	65 c0       	rjmp	.+202    	; 0x2d6c <f_open+0x20a>
    2ca2:	f3 2d       	mov	r31, r3
    2ca4:	f0 62       	ori	r31, 0x20	; 32
    2ca6:	3f 2e       	mov	r3, r31
    2ca8:	e9 81       	ldd	r30, Y+1	; 0x01
    2caa:	fa 81       	ldd	r31, Y+2	; 0x02
    2cac:	86 a5       	ldd	r24, Z+46	; 0x2e
    2cae:	97 a5       	ldd	r25, Z+47	; 0x2f
    2cb0:	a0 a9       	ldd	r26, Z+48	; 0x30
    2cb2:	b1 a9       	ldd	r27, Z+49	; 0x31
    2cb4:	f8 01       	movw	r30, r16
    2cb6:	82 8f       	std	Z+26, r24	; 0x1a
    2cb8:	93 8f       	std	Z+27, r25	; 0x1b
    2cba:	a4 8f       	std	Z+28, r26	; 0x1c
    2cbc:	b5 8f       	std	Z+29, r27	; 0x1d
    2cbe:	f7 8e       	std	Z+31, r15	; 0x1f
    2cc0:	e6 8e       	std	Z+30, r14	; 0x1e
    2cc2:	f8 01       	movw	r30, r16
    2cc4:	34 82       	std	Z+4, r3	; 0x04
    2cc6:	15 82       	std	Z+5, r1	; 0x05
    2cc8:	c9 80       	ldd	r12, Y+1	; 0x01
    2cca:	da 80       	ldd	r13, Y+2	; 0x02
    2ccc:	b7 01       	movw	r22, r14
    2cce:	c6 01       	movw	r24, r12
    2cd0:	0e 94 30 07 	call	0xe60	; 0xe60 <ld_clust>
    2cd4:	f8 01       	movw	r30, r16
    2cd6:	66 87       	std	Z+14, r22	; 0x0e
    2cd8:	77 87       	std	Z+15, r23	; 0x0f
    2cda:	80 8b       	std	Z+16, r24	; 0x10
    2cdc:	91 8b       	std	Z+17, r25	; 0x11
    2cde:	f7 01       	movw	r30, r14
    2ce0:	27 8d       	ldd	r18, Z+31	; 0x1f
    2ce2:	86 8d       	ldd	r24, Z+30	; 0x1e
    2ce4:	90 e0       	ldi	r25, 0x00	; 0
    2ce6:	a0 e0       	ldi	r26, 0x00	; 0
    2ce8:	b0 e0       	ldi	r27, 0x00	; 0
    2cea:	dc 01       	movw	r26, r24
    2cec:	99 27       	eor	r25, r25
    2cee:	88 27       	eor	r24, r24
    2cf0:	b2 2b       	or	r27, r18
    2cf2:	24 8d       	ldd	r18, Z+28	; 0x1c
    2cf4:	82 2b       	or	r24, r18
    2cf6:	45 8d       	ldd	r20, Z+29	; 0x1d
    2cf8:	50 e0       	ldi	r21, 0x00	; 0
    2cfa:	54 2f       	mov	r21, r20
    2cfc:	44 27       	eor	r20, r20
    2cfe:	60 e0       	ldi	r22, 0x00	; 0
    2d00:	70 e0       	ldi	r23, 0x00	; 0
    2d02:	84 2b       	or	r24, r20
    2d04:	95 2b       	or	r25, r21
    2d06:	a6 2b       	or	r26, r22
    2d08:	b7 2b       	or	r27, r23
    2d0a:	f8 01       	movw	r30, r16
    2d0c:	82 87       	std	Z+10, r24	; 0x0a
    2d0e:	93 87       	std	Z+11, r25	; 0x0b
    2d10:	a4 87       	std	Z+12, r26	; 0x0c
    2d12:	b5 87       	std	Z+13, r27	; 0x0d
    2d14:	16 82       	std	Z+6, r1	; 0x06
    2d16:	17 82       	std	Z+7, r1	; 0x07
    2d18:	10 86       	std	Z+8, r1	; 0x08
    2d1a:	11 86       	std	Z+9, r1	; 0x09
    2d1c:	16 8a       	std	Z+22, r1	; 0x16
    2d1e:	17 8a       	std	Z+23, r1	; 0x17
    2d20:	10 8e       	std	Z+24, r1	; 0x18
    2d22:	11 8e       	std	Z+25, r1	; 0x19
    2d24:	11 a2       	std	Z+33, r1	; 0x21
    2d26:	10 a2       	std	Z+32, r1	; 0x20
    2d28:	d1 82       	std	Z+1, r13	; 0x01
    2d2a:	c0 82       	st	Z, r12
    2d2c:	f6 01       	movw	r30, r12
    2d2e:	86 81       	ldd	r24, Z+6	; 0x06
    2d30:	97 81       	ldd	r25, Z+7	; 0x07
    2d32:	f8 01       	movw	r30, r16
    2d34:	93 83       	std	Z+3, r25	; 0x03
    2d36:	82 83       	std	Z+2, r24	; 0x02
    2d38:	80 e0       	ldi	r24, 0x00	; 0
    2d3a:	2a c0       	rjmp	.+84     	; 0x2d90 <f_open+0x22e>
    2d3c:	89 e0       	ldi	r24, 0x09	; 9
    2d3e:	28 c0       	rjmp	.+80     	; 0x2d90 <f_open+0x22e>
    2d40:	4d 2d       	mov	r20, r13
    2d42:	4c 71       	andi	r20, 0x1C	; 28
    2d44:	09 f0       	breq	.+2      	; 0x2d48 <f_open+0x1e6>
    2d46:	4e cf       	rjmp	.-356    	; 0x2be4 <f_open+0x82>
    2d48:	0d c0       	rjmp	.+26     	; 0x2d64 <f_open+0x202>
    2d4a:	4d 2d       	mov	r20, r13
    2d4c:	4c 71       	andi	r20, 0x1C	; 28
    2d4e:	89 f4       	brne	.+34     	; 0x2d72 <f_open+0x210>
    2d50:	86 e0       	ldi	r24, 0x06	; 6
    2d52:	08 c0       	rjmp	.+16     	; 0x2d64 <f_open+0x202>
    2d54:	8d 2d       	mov	r24, r13
    2d56:	8c 71       	andi	r24, 0x1C	; 28
    2d58:	09 f0       	breq	.+2      	; 0x2d5c <f_open+0x1fa>
    2d5a:	52 cf       	rjmp	.-348    	; 0x2c00 <f_open+0x9e>
    2d5c:	11 c0       	rjmp	.+34     	; 0x2d80 <f_open+0x21e>
    2d5e:	87 e0       	ldi	r24, 0x07	; 7
    2d60:	01 c0       	rjmp	.+2      	; 0x2d64 <f_open+0x202>
    2d62:	84 e0       	ldi	r24, 0x04	; 4
    2d64:	88 23       	and	r24, r24
    2d66:	09 f4       	brne	.+2      	; 0x2d6a <f_open+0x208>
    2d68:	ac cf       	rjmp	.-168    	; 0x2cc2 <f_open+0x160>
    2d6a:	12 c0       	rjmp	.+36     	; 0x2d90 <f_open+0x22e>
    2d6c:	33 fc       	sbrc	r3, 3
    2d6e:	99 cf       	rjmp	.-206    	; 0x2ca2 <f_open+0x140>
    2d70:	9b cf       	rjmp	.-202    	; 0x2ca8 <f_open+0x146>
    2d72:	86 e0       	ldi	r24, 0x06	; 6
    2d74:	f3 2d       	mov	r31, r3
    2d76:	f8 60       	ori	r31, 0x08	; 8
    2d78:	3f 2e       	mov	r3, r31
    2d7a:	eb 88       	ldd	r14, Y+19	; 0x13
    2d7c:	fc 88       	ldd	r15, Y+20	; 0x14
    2d7e:	f2 cf       	rjmp	.-28     	; 0x2d64 <f_open+0x202>
    2d80:	f7 01       	movw	r30, r14
    2d82:	83 85       	ldd	r24, Z+11	; 0x0b
    2d84:	84 fd       	sbrc	r24, 4
    2d86:	ed cf       	rjmp	.-38     	; 0x2d62 <f_open+0x200>
    2d88:	87 cf       	rjmp	.-242    	; 0x2c98 <f_open+0x136>
    2d8a:	87 e0       	ldi	r24, 0x07	; 7
    2d8c:	01 c0       	rjmp	.+2      	; 0x2d90 <f_open+0x22e>
    2d8e:	88 e0       	ldi	r24, 0x08	; 8
    2d90:	a6 96       	adiw	r28, 0x26	; 38
    2d92:	0f b6       	in	r0, 0x3f	; 63
    2d94:	f8 94       	cli
    2d96:	de bf       	out	0x3e, r29	; 62
    2d98:	0f be       	out	0x3f, r0	; 63
    2d9a:	cd bf       	out	0x3d, r28	; 61
    2d9c:	df 91       	pop	r29
    2d9e:	cf 91       	pop	r28
    2da0:	1f 91       	pop	r17
    2da2:	0f 91       	pop	r16
    2da4:	ff 90       	pop	r15
    2da6:	ef 90       	pop	r14
    2da8:	df 90       	pop	r13
    2daa:	cf 90       	pop	r12
    2dac:	bf 90       	pop	r11
    2dae:	af 90       	pop	r10
    2db0:	9f 90       	pop	r9
    2db2:	8f 90       	pop	r8
    2db4:	7f 90       	pop	r7
    2db6:	6f 90       	pop	r6
    2db8:	5f 90       	pop	r5
    2dba:	4f 90       	pop	r4
    2dbc:	3f 90       	pop	r3
    2dbe:	08 95       	ret

00002dc0 <f_write>:
    2dc0:	3f 92       	push	r3
    2dc2:	4f 92       	push	r4
    2dc4:	5f 92       	push	r5
    2dc6:	6f 92       	push	r6
    2dc8:	7f 92       	push	r7
    2dca:	8f 92       	push	r8
    2dcc:	9f 92       	push	r9
    2dce:	af 92       	push	r10
    2dd0:	bf 92       	push	r11
    2dd2:	cf 92       	push	r12
    2dd4:	df 92       	push	r13
    2dd6:	ef 92       	push	r14
    2dd8:	ff 92       	push	r15
    2dda:	0f 93       	push	r16
    2ddc:	1f 93       	push	r17
    2dde:	cf 93       	push	r28
    2de0:	df 93       	push	r29
    2de2:	00 d0       	rcall	.+0      	; 0x2de4 <f_write+0x24>
    2de4:	00 d0       	rcall	.+0      	; 0x2de6 <f_write+0x26>
    2de6:	00 d0       	rcall	.+0      	; 0x2de8 <f_write+0x28>
    2de8:	cd b7       	in	r28, 0x3d	; 61
    2dea:	de b7       	in	r29, 0x3e	; 62
    2dec:	9e 83       	std	Y+6, r25	; 0x06
    2dee:	8d 83       	std	Y+5, r24	; 0x05
    2df0:	4b 01       	movw	r8, r22
    2df2:	6a 01       	movw	r12, r20
    2df4:	59 01       	movw	r10, r18
    2df6:	d9 01       	movw	r26, r18
    2df8:	1d 92       	st	X+, r1
    2dfa:	1c 92       	st	X, r1
    2dfc:	0e 94 96 08 	call	0x112c	; 0x112c <validate>
    2e00:	81 11       	cpse	r24, r1
    2e02:	c9 c1       	rjmp	.+914    	; 0x3196 <f_write+0x3d6>
    2e04:	ed 81       	ldd	r30, Y+5	; 0x05
    2e06:	fe 81       	ldd	r31, Y+6	; 0x06
    2e08:	85 81       	ldd	r24, Z+5	; 0x05
    2e0a:	81 11       	cpse	r24, r1
    2e0c:	c4 c1       	rjmp	.+904    	; 0x3196 <f_write+0x3d6>
    2e0e:	84 81       	ldd	r24, Z+4	; 0x04
    2e10:	81 ff       	sbrs	r24, 1
    2e12:	c0 c1       	rjmp	.+896    	; 0x3194 <f_write+0x3d4>
    2e14:	86 81       	ldd	r24, Z+6	; 0x06
    2e16:	97 81       	ldd	r25, Z+7	; 0x07
    2e18:	a0 85       	ldd	r26, Z+8	; 0x08
    2e1a:	b1 85       	ldd	r27, Z+9	; 0x09
    2e1c:	ac 01       	movw	r20, r24
    2e1e:	bd 01       	movw	r22, r26
    2e20:	4c 0d       	add	r20, r12
    2e22:	5d 1d       	adc	r21, r13
    2e24:	61 1d       	adc	r22, r1
    2e26:	71 1d       	adc	r23, r1
    2e28:	48 17       	cp	r20, r24
    2e2a:	59 07       	cpc	r21, r25
    2e2c:	6a 07       	cpc	r22, r26
    2e2e:	7b 07       	cpc	r23, r27
    2e30:	08 f4       	brcc	.+2      	; 0x2e34 <f_write+0x74>
    2e32:	93 c1       	rjmp	.+806    	; 0x315a <f_write+0x39a>
    2e34:	c1 14       	cp	r12, r1
    2e36:	d1 04       	cpc	r13, r1
    2e38:	09 f4       	brne	.+2      	; 0x2e3c <f_write+0x7c>
    2e3a:	8f c1       	rjmp	.+798    	; 0x315a <f_write+0x39a>
    2e3c:	b2 96       	adiw	r30, 0x22	; 34
    2e3e:	fc 83       	std	Y+4, r31	; 0x04
    2e40:	eb 83       	std	Y+3, r30	; 0x03
    2e42:	ad 81       	ldd	r26, Y+5	; 0x05
    2e44:	be 81       	ldd	r27, Y+6	; 0x06
    2e46:	16 96       	adiw	r26, 0x06	; 6
    2e48:	4d 91       	ld	r20, X+
    2e4a:	5d 91       	ld	r21, X+
    2e4c:	6d 91       	ld	r22, X+
    2e4e:	7c 91       	ld	r23, X
    2e50:	19 97       	sbiw	r26, 0x09	; 9
    2e52:	db 01       	movw	r26, r22
    2e54:	ca 01       	movw	r24, r20
    2e56:	93 70       	andi	r25, 0x03	; 3
    2e58:	aa 27       	eor	r26, r26
    2e5a:	bb 27       	eor	r27, r27
    2e5c:	89 2b       	or	r24, r25
    2e5e:	8a 2b       	or	r24, r26
    2e60:	8b 2b       	or	r24, r27
    2e62:	09 f0       	breq	.+2      	; 0x2e66 <f_write+0xa6>
    2e64:	39 c1       	rjmp	.+626    	; 0x30d8 <f_write+0x318>
    2e66:	ad 81       	ldd	r26, Y+5	; 0x05
    2e68:	be 81       	ldd	r27, Y+6	; 0x06
    2e6a:	ed 91       	ld	r30, X+
    2e6c:	fc 91       	ld	r31, X
    2e6e:	22 81       	ldd	r18, Z+2	; 0x02
    2e70:	21 50       	subi	r18, 0x01	; 1
    2e72:	db 01       	movw	r26, r22
    2e74:	ca 01       	movw	r24, r20
    2e76:	07 2e       	mov	r0, r23
    2e78:	7a e0       	ldi	r23, 0x0A	; 10
    2e7a:	b6 95       	lsr	r27
    2e7c:	a7 95       	ror	r26
    2e7e:	97 95       	ror	r25
    2e80:	87 95       	ror	r24
    2e82:	7a 95       	dec	r23
    2e84:	d1 f7       	brne	.-12     	; 0x2e7a <f_write+0xba>
    2e86:	70 2d       	mov	r23, r0
    2e88:	32 2e       	mov	r3, r18
    2e8a:	38 22       	and	r3, r24
    2e8c:	09 f0       	breq	.+2      	; 0x2e90 <f_write+0xd0>
    2e8e:	5c c0       	rjmp	.+184    	; 0x2f48 <f_write+0x188>
    2e90:	41 15       	cp	r20, r1
    2e92:	51 05       	cpc	r21, r1
    2e94:	61 05       	cpc	r22, r1
    2e96:	71 05       	cpc	r23, r1
    2e98:	99 f4       	brne	.+38     	; 0x2ec0 <f_write+0x100>
    2e9a:	ad 81       	ldd	r26, Y+5	; 0x05
    2e9c:	be 81       	ldd	r27, Y+6	; 0x06
    2e9e:	1e 96       	adiw	r26, 0x0e	; 14
    2ea0:	6d 91       	ld	r22, X+
    2ea2:	7d 91       	ld	r23, X+
    2ea4:	8d 91       	ld	r24, X+
    2ea6:	9c 91       	ld	r25, X
    2ea8:	51 97       	sbiw	r26, 0x11	; 17
    2eaa:	61 15       	cp	r22, r1
    2eac:	71 05       	cpc	r23, r1
    2eae:	81 05       	cpc	r24, r1
    2eb0:	91 05       	cpc	r25, r1
    2eb2:	11 f5       	brne	.+68     	; 0x2ef8 <f_write+0x138>
    2eb4:	40 e0       	ldi	r20, 0x00	; 0
    2eb6:	50 e0       	ldi	r21, 0x00	; 0
    2eb8:	ba 01       	movw	r22, r20
    2eba:	cf 01       	movw	r24, r30
    2ebc:	b6 d8       	rcall	.-3732   	; 0x202a <create_chain>
    2ebe:	16 c0       	rjmp	.+44     	; 0x2eec <f_write+0x12c>
    2ec0:	ad 81       	ldd	r26, Y+5	; 0x05
    2ec2:	be 81       	ldd	r27, Y+6	; 0x06
    2ec4:	90 96       	adiw	r26, 0x20	; 32
    2ec6:	8d 91       	ld	r24, X+
    2ec8:	9c 91       	ld	r25, X
    2eca:	91 97       	sbiw	r26, 0x21	; 33
    2ecc:	89 2b       	or	r24, r25
    2ece:	21 f0       	breq	.+8      	; 0x2ed8 <f_write+0x118>
    2ed0:	cd 01       	movw	r24, r26
    2ed2:	0e 94 da 06 	call	0xdb4	; 0xdb4 <clmt_clust>
    2ed6:	0a c0       	rjmp	.+20     	; 0x2eec <f_write+0x12c>
    2ed8:	ad 81       	ldd	r26, Y+5	; 0x05
    2eda:	be 81       	ldd	r27, Y+6	; 0x06
    2edc:	52 96       	adiw	r26, 0x12	; 18
    2ede:	4d 91       	ld	r20, X+
    2ee0:	5d 91       	ld	r21, X+
    2ee2:	6d 91       	ld	r22, X+
    2ee4:	7c 91       	ld	r23, X
    2ee6:	55 97       	sbiw	r26, 0x15	; 21
    2ee8:	cf 01       	movw	r24, r30
    2eea:	9f d8       	rcall	.-3778   	; 0x202a <create_chain>
    2eec:	61 15       	cp	r22, r1
    2eee:	71 05       	cpc	r23, r1
    2ef0:	81 05       	cpc	r24, r1
    2ef2:	91 05       	cpc	r25, r1
    2ef4:	09 f4       	brne	.+2      	; 0x2ef8 <f_write+0x138>
    2ef6:	31 c1       	rjmp	.+610    	; 0x315a <f_write+0x39a>
    2ef8:	61 30       	cpi	r22, 0x01	; 1
    2efa:	71 05       	cpc	r23, r1
    2efc:	81 05       	cpc	r24, r1
    2efe:	91 05       	cpc	r25, r1
    2f00:	29 f4       	brne	.+10     	; 0x2f0c <f_write+0x14c>
    2f02:	82 e0       	ldi	r24, 0x02	; 2
    2f04:	ed 81       	ldd	r30, Y+5	; 0x05
    2f06:	fe 81       	ldd	r31, Y+6	; 0x06
    2f08:	85 83       	std	Z+5, r24	; 0x05
    2f0a:	45 c1       	rjmp	.+650    	; 0x3196 <f_write+0x3d6>
    2f0c:	6f 3f       	cpi	r22, 0xFF	; 255
    2f0e:	ff ef       	ldi	r31, 0xFF	; 255
    2f10:	7f 07       	cpc	r23, r31
    2f12:	8f 07       	cpc	r24, r31
    2f14:	9f 07       	cpc	r25, r31
    2f16:	31 f4       	brne	.+12     	; 0x2f24 <f_write+0x164>
    2f18:	81 e0       	ldi	r24, 0x01	; 1
    2f1a:	ad 81       	ldd	r26, Y+5	; 0x05
    2f1c:	be 81       	ldd	r27, Y+6	; 0x06
    2f1e:	15 96       	adiw	r26, 0x05	; 5
    2f20:	8c 93       	st	X, r24
    2f22:	39 c1       	rjmp	.+626    	; 0x3196 <f_write+0x3d6>
    2f24:	ed 81       	ldd	r30, Y+5	; 0x05
    2f26:	fe 81       	ldd	r31, Y+6	; 0x06
    2f28:	62 8b       	std	Z+18, r22	; 0x12
    2f2a:	73 8b       	std	Z+19, r23	; 0x13
    2f2c:	84 8b       	std	Z+20, r24	; 0x14
    2f2e:	95 8b       	std	Z+21, r25	; 0x15
    2f30:	46 84       	ldd	r4, Z+14	; 0x0e
    2f32:	57 84       	ldd	r5, Z+15	; 0x0f
    2f34:	60 88       	ldd	r6, Z+16	; 0x10
    2f36:	71 88       	ldd	r7, Z+17	; 0x11
    2f38:	45 28       	or	r4, r5
    2f3a:	46 28       	or	r4, r6
    2f3c:	47 28       	or	r4, r7
    2f3e:	21 f4       	brne	.+8      	; 0x2f48 <f_write+0x188>
    2f40:	66 87       	std	Z+14, r22	; 0x0e
    2f42:	77 87       	std	Z+15, r23	; 0x0f
    2f44:	80 8b       	std	Z+16, r24	; 0x10
    2f46:	91 8b       	std	Z+17, r25	; 0x11
    2f48:	ed 81       	ldd	r30, Y+5	; 0x05
    2f4a:	fe 81       	ldd	r31, Y+6	; 0x06
    2f4c:	84 81       	ldd	r24, Z+4	; 0x04
    2f4e:	86 ff       	sbrs	r24, 6
    2f50:	1b c0       	rjmp	.+54     	; 0x2f88 <f_write+0x1c8>
    2f52:	26 89       	ldd	r18, Z+22	; 0x16
    2f54:	37 89       	ldd	r19, Z+23	; 0x17
    2f56:	40 8d       	ldd	r20, Z+24	; 0x18
    2f58:	51 8d       	ldd	r21, Z+25	; 0x19
    2f5a:	01 90       	ld	r0, Z+
    2f5c:	f0 81       	ld	r31, Z
    2f5e:	e0 2d       	mov	r30, r0
    2f60:	01 e0       	ldi	r16, 0x01	; 1
    2f62:	10 e0       	ldi	r17, 0x00	; 0
    2f64:	6b 81       	ldd	r22, Y+3	; 0x03
    2f66:	7c 81       	ldd	r23, Y+4	; 0x04
    2f68:	81 81       	ldd	r24, Z+1	; 0x01
    2f6a:	0e 94 9f 03 	call	0x73e	; 0x73e <disk_write>
    2f6e:	88 23       	and	r24, r24
    2f70:	31 f0       	breq	.+12     	; 0x2f7e <f_write+0x1be>
    2f72:	81 e0       	ldi	r24, 0x01	; 1
    2f74:	ad 81       	ldd	r26, Y+5	; 0x05
    2f76:	be 81       	ldd	r27, Y+6	; 0x06
    2f78:	15 96       	adiw	r26, 0x05	; 5
    2f7a:	8c 93       	st	X, r24
    2f7c:	0c c1       	rjmp	.+536    	; 0x3196 <f_write+0x3d6>
    2f7e:	ed 81       	ldd	r30, Y+5	; 0x05
    2f80:	fe 81       	ldd	r31, Y+6	; 0x06
    2f82:	84 81       	ldd	r24, Z+4	; 0x04
    2f84:	8f 7b       	andi	r24, 0xBF	; 191
    2f86:	84 83       	std	Z+4, r24	; 0x04
    2f88:	ad 81       	ldd	r26, Y+5	; 0x05
    2f8a:	be 81       	ldd	r27, Y+6	; 0x06
    2f8c:	0d 90       	ld	r0, X+
    2f8e:	bc 91       	ld	r27, X
    2f90:	a0 2d       	mov	r26, r0
    2f92:	ba 83       	std	Y+2, r27	; 0x02
    2f94:	a9 83       	std	Y+1, r26	; 0x01
    2f96:	ed 81       	ldd	r30, Y+5	; 0x05
    2f98:	fe 81       	ldd	r31, Y+6	; 0x06
    2f9a:	42 89       	ldd	r20, Z+18	; 0x12
    2f9c:	53 89       	ldd	r21, Z+19	; 0x13
    2f9e:	64 89       	ldd	r22, Z+20	; 0x14
    2fa0:	75 89       	ldd	r23, Z+21	; 0x15
    2fa2:	cd 01       	movw	r24, r26
    2fa4:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <clust2sect>
    2fa8:	61 15       	cp	r22, r1
    2faa:	71 05       	cpc	r23, r1
    2fac:	81 05       	cpc	r24, r1
    2fae:	91 05       	cpc	r25, r1
    2fb0:	31 f4       	brne	.+12     	; 0x2fbe <f_write+0x1fe>
    2fb2:	82 e0       	ldi	r24, 0x02	; 2
    2fb4:	ad 81       	ldd	r26, Y+5	; 0x05
    2fb6:	be 81       	ldd	r27, Y+6	; 0x06
    2fb8:	15 96       	adiw	r26, 0x05	; 5
    2fba:	8c 93       	st	X, r24
    2fbc:	ec c0       	rjmp	.+472    	; 0x3196 <f_write+0x3d6>
    2fbe:	2b 01       	movw	r4, r22
    2fc0:	3c 01       	movw	r6, r24
    2fc2:	43 0c       	add	r4, r3
    2fc4:	51 1c       	adc	r5, r1
    2fc6:	61 1c       	adc	r6, r1
    2fc8:	71 1c       	adc	r7, r1
    2fca:	76 01       	movw	r14, r12
    2fcc:	ef 2c       	mov	r14, r15
    2fce:	ff 24       	eor	r15, r15
    2fd0:	e6 94       	lsr	r14
    2fd2:	e6 94       	lsr	r14
    2fd4:	e1 14       	cp	r14, r1
    2fd6:	f1 04       	cpc	r15, r1
    2fd8:	09 f4       	brne	.+2      	; 0x2fdc <f_write+0x21c>
    2fda:	4b c0       	rjmp	.+150    	; 0x3072 <f_write+0x2b2>
    2fdc:	e9 81       	ldd	r30, Y+1	; 0x01
    2fde:	fa 81       	ldd	r31, Y+2	; 0x02
    2fe0:	42 81       	ldd	r20, Z+2	; 0x02
    2fe2:	24 2f       	mov	r18, r20
    2fe4:	30 e0       	ldi	r19, 0x00	; 0
    2fe6:	c7 01       	movw	r24, r14
    2fe8:	83 0d       	add	r24, r3
    2fea:	91 1d       	adc	r25, r1
    2fec:	28 17       	cp	r18, r24
    2fee:	39 07       	cpc	r19, r25
    2ff0:	18 f4       	brcc	.+6      	; 0x2ff8 <f_write+0x238>
    2ff2:	79 01       	movw	r14, r18
    2ff4:	e3 18       	sub	r14, r3
    2ff6:	f1 08       	sbc	r15, r1
    2ff8:	87 01       	movw	r16, r14
    2ffa:	a3 01       	movw	r20, r6
    2ffc:	92 01       	movw	r18, r4
    2ffe:	b4 01       	movw	r22, r8
    3000:	a9 81       	ldd	r26, Y+1	; 0x01
    3002:	ba 81       	ldd	r27, Y+2	; 0x02
    3004:	11 96       	adiw	r26, 0x01	; 1
    3006:	8c 91       	ld	r24, X
    3008:	0e 94 9f 03 	call	0x73e	; 0x73e <disk_write>
    300c:	88 23       	and	r24, r24
    300e:	29 f0       	breq	.+10     	; 0x301a <f_write+0x25a>
    3010:	81 e0       	ldi	r24, 0x01	; 1
    3012:	ed 81       	ldd	r30, Y+5	; 0x05
    3014:	fe 81       	ldd	r31, Y+6	; 0x06
    3016:	85 83       	std	Z+5, r24	; 0x05
    3018:	be c0       	rjmp	.+380    	; 0x3196 <f_write+0x3d6>
    301a:	ed 81       	ldd	r30, Y+5	; 0x05
    301c:	fe 81       	ldd	r31, Y+6	; 0x06
    301e:	86 89       	ldd	r24, Z+22	; 0x16
    3020:	97 89       	ldd	r25, Z+23	; 0x17
    3022:	a0 8d       	ldd	r26, Z+24	; 0x18
    3024:	b1 8d       	ldd	r27, Z+25	; 0x19
    3026:	84 19       	sub	r24, r4
    3028:	95 09       	sbc	r25, r5
    302a:	a6 09       	sbc	r26, r6
    302c:	b7 09       	sbc	r27, r7
    302e:	a7 01       	movw	r20, r14
    3030:	60 e0       	ldi	r22, 0x00	; 0
    3032:	70 e0       	ldi	r23, 0x00	; 0
    3034:	84 17       	cp	r24, r20
    3036:	95 07       	cpc	r25, r21
    3038:	a6 07       	cpc	r26, r22
    303a:	b7 07       	cpc	r27, r23
    303c:	a8 f4       	brcc	.+42     	; 0x3068 <f_write+0x2a8>
    303e:	98 2f       	mov	r25, r24
    3040:	88 27       	eor	r24, r24
    3042:	99 0f       	add	r25, r25
    3044:	99 0f       	add	r25, r25
    3046:	b4 01       	movw	r22, r8
    3048:	68 0f       	add	r22, r24
    304a:	79 1f       	adc	r23, r25
    304c:	40 e0       	ldi	r20, 0x00	; 0
    304e:	54 e0       	ldi	r21, 0x04	; 4
    3050:	8b 81       	ldd	r24, Y+3	; 0x03
    3052:	9c 81       	ldd	r25, Y+4	; 0x04
    3054:	0e 94 c1 06 	call	0xd82	; 0xd82 <mem_cpy>
    3058:	ad 81       	ldd	r26, Y+5	; 0x05
    305a:	be 81       	ldd	r27, Y+6	; 0x06
    305c:	14 96       	adiw	r26, 0x04	; 4
    305e:	8c 91       	ld	r24, X
    3060:	14 97       	sbiw	r26, 0x04	; 4
    3062:	8f 7b       	andi	r24, 0xBF	; 191
    3064:	14 96       	adiw	r26, 0x04	; 4
    3066:	8c 93       	st	X, r24
    3068:	fe 2c       	mov	r15, r14
    306a:	ee 24       	eor	r14, r14
    306c:	ff 0c       	add	r15, r15
    306e:	ff 0c       	add	r15, r15
    3070:	58 c0       	rjmp	.+176    	; 0x3122 <f_write+0x362>
    3072:	ed 81       	ldd	r30, Y+5	; 0x05
    3074:	fe 81       	ldd	r31, Y+6	; 0x06
    3076:	86 89       	ldd	r24, Z+22	; 0x16
    3078:	97 89       	ldd	r25, Z+23	; 0x17
    307a:	a0 8d       	ldd	r26, Z+24	; 0x18
    307c:	b1 8d       	ldd	r27, Z+25	; 0x19
    307e:	84 15       	cp	r24, r4
    3080:	95 05       	cpc	r25, r5
    3082:	a6 05       	cpc	r26, r6
    3084:	b7 05       	cpc	r27, r7
    3086:	01 f1       	breq	.+64     	; 0x30c8 <f_write+0x308>
    3088:	46 81       	ldd	r20, Z+6	; 0x06
    308a:	57 81       	ldd	r21, Z+7	; 0x07
    308c:	60 85       	ldd	r22, Z+8	; 0x08
    308e:	71 85       	ldd	r23, Z+9	; 0x09
    3090:	82 85       	ldd	r24, Z+10	; 0x0a
    3092:	93 85       	ldd	r25, Z+11	; 0x0b
    3094:	a4 85       	ldd	r26, Z+12	; 0x0c
    3096:	b5 85       	ldd	r27, Z+13	; 0x0d
    3098:	48 17       	cp	r20, r24
    309a:	59 07       	cpc	r21, r25
    309c:	6a 07       	cpc	r22, r26
    309e:	7b 07       	cpc	r23, r27
    30a0:	98 f4       	brcc	.+38     	; 0x30c8 <f_write+0x308>
    30a2:	01 e0       	ldi	r16, 0x01	; 1
    30a4:	10 e0       	ldi	r17, 0x00	; 0
    30a6:	a3 01       	movw	r20, r6
    30a8:	92 01       	movw	r18, r4
    30aa:	6b 81       	ldd	r22, Y+3	; 0x03
    30ac:	7c 81       	ldd	r23, Y+4	; 0x04
    30ae:	a9 81       	ldd	r26, Y+1	; 0x01
    30b0:	ba 81       	ldd	r27, Y+2	; 0x02
    30b2:	11 96       	adiw	r26, 0x01	; 1
    30b4:	8c 91       	ld	r24, X
    30b6:	0e 94 4d 03 	call	0x69a	; 0x69a <disk_read>
    30ba:	88 23       	and	r24, r24
    30bc:	29 f0       	breq	.+10     	; 0x30c8 <f_write+0x308>
    30be:	81 e0       	ldi	r24, 0x01	; 1
    30c0:	ed 81       	ldd	r30, Y+5	; 0x05
    30c2:	fe 81       	ldd	r31, Y+6	; 0x06
    30c4:	85 83       	std	Z+5, r24	; 0x05
    30c6:	67 c0       	rjmp	.+206    	; 0x3196 <f_write+0x3d6>
    30c8:	ad 81       	ldd	r26, Y+5	; 0x05
    30ca:	be 81       	ldd	r27, Y+6	; 0x06
    30cc:	56 96       	adiw	r26, 0x16	; 22
    30ce:	4d 92       	st	X+, r4
    30d0:	5d 92       	st	X+, r5
    30d2:	6d 92       	st	X+, r6
    30d4:	7c 92       	st	X, r7
    30d6:	59 97       	sbiw	r26, 0x19	; 25
    30d8:	ed 81       	ldd	r30, Y+5	; 0x05
    30da:	fe 81       	ldd	r31, Y+6	; 0x06
    30dc:	86 81       	ldd	r24, Z+6	; 0x06
    30de:	97 81       	ldd	r25, Z+7	; 0x07
    30e0:	a0 85       	ldd	r26, Z+8	; 0x08
    30e2:	b1 85       	ldd	r27, Z+9	; 0x09
    30e4:	ac 01       	movw	r20, r24
    30e6:	53 70       	andi	r21, 0x03	; 3
    30e8:	20 e0       	ldi	r18, 0x00	; 0
    30ea:	34 e0       	ldi	r19, 0x04	; 4
    30ec:	24 1b       	sub	r18, r20
    30ee:	35 0b       	sbc	r19, r21
    30f0:	76 01       	movw	r14, r12
    30f2:	2c 15       	cp	r18, r12
    30f4:	3d 05       	cpc	r19, r13
    30f6:	08 f4       	brcc	.+2      	; 0x30fa <f_write+0x33a>
    30f8:	79 01       	movw	r14, r18
    30fa:	93 70       	andi	r25, 0x03	; 3
    30fc:	aa 27       	eor	r26, r26
    30fe:	bb 27       	eor	r27, r27
    3100:	82 96       	adiw	r24, 0x22	; 34
    3102:	a7 01       	movw	r20, r14
    3104:	b4 01       	movw	r22, r8
    3106:	2d 81       	ldd	r18, Y+5	; 0x05
    3108:	3e 81       	ldd	r19, Y+6	; 0x06
    310a:	82 0f       	add	r24, r18
    310c:	93 1f       	adc	r25, r19
    310e:	0e 94 c1 06 	call	0xd82	; 0xd82 <mem_cpy>
    3112:	ad 81       	ldd	r26, Y+5	; 0x05
    3114:	be 81       	ldd	r27, Y+6	; 0x06
    3116:	14 96       	adiw	r26, 0x04	; 4
    3118:	8c 91       	ld	r24, X
    311a:	14 97       	sbiw	r26, 0x04	; 4
    311c:	80 64       	ori	r24, 0x40	; 64
    311e:	14 96       	adiw	r26, 0x04	; 4
    3120:	8c 93       	st	X, r24
    3122:	8e 0c       	add	r8, r14
    3124:	9f 1c       	adc	r9, r15
    3126:	ed 81       	ldd	r30, Y+5	; 0x05
    3128:	fe 81       	ldd	r31, Y+6	; 0x06
    312a:	86 81       	ldd	r24, Z+6	; 0x06
    312c:	97 81       	ldd	r25, Z+7	; 0x07
    312e:	a0 85       	ldd	r26, Z+8	; 0x08
    3130:	b1 85       	ldd	r27, Z+9	; 0x09
    3132:	8e 0d       	add	r24, r14
    3134:	9f 1d       	adc	r25, r15
    3136:	a1 1d       	adc	r26, r1
    3138:	b1 1d       	adc	r27, r1
    313a:	86 83       	std	Z+6, r24	; 0x06
    313c:	97 83       	std	Z+7, r25	; 0x07
    313e:	a0 87       	std	Z+8, r26	; 0x08
    3140:	b1 87       	std	Z+9, r27	; 0x09
    3142:	d5 01       	movw	r26, r10
    3144:	8d 91       	ld	r24, X+
    3146:	9c 91       	ld	r25, X
    3148:	11 97       	sbiw	r26, 0x01	; 1
    314a:	8e 0d       	add	r24, r14
    314c:	9f 1d       	adc	r25, r15
    314e:	8d 93       	st	X+, r24
    3150:	9c 93       	st	X, r25
    3152:	ce 18       	sub	r12, r14
    3154:	df 08       	sbc	r13, r15
    3156:	09 f0       	breq	.+2      	; 0x315a <f_write+0x39a>
    3158:	74 ce       	rjmp	.-792    	; 0x2e42 <f_write+0x82>
    315a:	ed 81       	ldd	r30, Y+5	; 0x05
    315c:	fe 81       	ldd	r31, Y+6	; 0x06
    315e:	86 81       	ldd	r24, Z+6	; 0x06
    3160:	97 81       	ldd	r25, Z+7	; 0x07
    3162:	a0 85       	ldd	r26, Z+8	; 0x08
    3164:	b1 85       	ldd	r27, Z+9	; 0x09
    3166:	42 85       	ldd	r20, Z+10	; 0x0a
    3168:	53 85       	ldd	r21, Z+11	; 0x0b
    316a:	64 85       	ldd	r22, Z+12	; 0x0c
    316c:	75 85       	ldd	r23, Z+13	; 0x0d
    316e:	48 17       	cp	r20, r24
    3170:	59 07       	cpc	r21, r25
    3172:	6a 07       	cpc	r22, r26
    3174:	7b 07       	cpc	r23, r27
    3176:	20 f4       	brcc	.+8      	; 0x3180 <f_write+0x3c0>
    3178:	82 87       	std	Z+10, r24	; 0x0a
    317a:	93 87       	std	Z+11, r25	; 0x0b
    317c:	a4 87       	std	Z+12, r26	; 0x0c
    317e:	b5 87       	std	Z+13, r27	; 0x0d
    3180:	ad 81       	ldd	r26, Y+5	; 0x05
    3182:	be 81       	ldd	r27, Y+6	; 0x06
    3184:	14 96       	adiw	r26, 0x04	; 4
    3186:	8c 91       	ld	r24, X
    3188:	14 97       	sbiw	r26, 0x04	; 4
    318a:	80 62       	ori	r24, 0x20	; 32
    318c:	14 96       	adiw	r26, 0x04	; 4
    318e:	8c 93       	st	X, r24
    3190:	80 e0       	ldi	r24, 0x00	; 0
    3192:	01 c0       	rjmp	.+2      	; 0x3196 <f_write+0x3d6>
    3194:	87 e0       	ldi	r24, 0x07	; 7
    3196:	26 96       	adiw	r28, 0x06	; 6
    3198:	0f b6       	in	r0, 0x3f	; 63
    319a:	f8 94       	cli
    319c:	de bf       	out	0x3e, r29	; 62
    319e:	0f be       	out	0x3f, r0	; 63
    31a0:	cd bf       	out	0x3d, r28	; 61
    31a2:	df 91       	pop	r29
    31a4:	cf 91       	pop	r28
    31a6:	1f 91       	pop	r17
    31a8:	0f 91       	pop	r16
    31aa:	ff 90       	pop	r15
    31ac:	ef 90       	pop	r14
    31ae:	df 90       	pop	r13
    31b0:	cf 90       	pop	r12
    31b2:	bf 90       	pop	r11
    31b4:	af 90       	pop	r10
    31b6:	9f 90       	pop	r9
    31b8:	8f 90       	pop	r8
    31ba:	7f 90       	pop	r7
    31bc:	6f 90       	pop	r6
    31be:	5f 90       	pop	r5
    31c0:	4f 90       	pop	r4
    31c2:	3f 90       	pop	r3
    31c4:	08 95       	ret

000031c6 <f_sync>:
    31c6:	0f 93       	push	r16
    31c8:	1f 93       	push	r17
    31ca:	cf 93       	push	r28
    31cc:	df 93       	push	r29
    31ce:	ec 01       	movw	r28, r24
    31d0:	0e 94 96 08 	call	0x112c	; 0x112c <validate>
    31d4:	81 11       	cpse	r24, r1
    31d6:	51 c0       	rjmp	.+162    	; 0x327a <f_sync+0xb4>
    31d8:	8c 81       	ldd	r24, Y+4	; 0x04
    31da:	85 ff       	sbrs	r24, 5
    31dc:	4b c0       	rjmp	.+150    	; 0x3274 <f_sync+0xae>
    31de:	86 ff       	sbrs	r24, 6
    31e0:	13 c0       	rjmp	.+38     	; 0x3208 <f_sync+0x42>
    31e2:	2e 89       	ldd	r18, Y+22	; 0x16
    31e4:	3f 89       	ldd	r19, Y+23	; 0x17
    31e6:	48 8d       	ldd	r20, Y+24	; 0x18
    31e8:	59 8d       	ldd	r21, Y+25	; 0x19
    31ea:	e8 81       	ld	r30, Y
    31ec:	f9 81       	ldd	r31, Y+1	; 0x01
    31ee:	01 e0       	ldi	r16, 0x01	; 1
    31f0:	10 e0       	ldi	r17, 0x00	; 0
    31f2:	be 01       	movw	r22, r28
    31f4:	6e 5d       	subi	r22, 0xDE	; 222
    31f6:	7f 4f       	sbci	r23, 0xFF	; 255
    31f8:	81 81       	ldd	r24, Z+1	; 0x01
    31fa:	0e 94 9f 03 	call	0x73e	; 0x73e <disk_write>
    31fe:	81 11       	cpse	r24, r1
    3200:	3b c0       	rjmp	.+118    	; 0x3278 <f_sync+0xb2>
    3202:	8c 81       	ldd	r24, Y+4	; 0x04
    3204:	8f 7b       	andi	r24, 0xBF	; 191
    3206:	8c 83       	std	Y+4, r24	; 0x04
    3208:	4a 8d       	ldd	r20, Y+26	; 0x1a
    320a:	5b 8d       	ldd	r21, Y+27	; 0x1b
    320c:	6c 8d       	ldd	r22, Y+28	; 0x1c
    320e:	7d 8d       	ldd	r23, Y+29	; 0x1d
    3210:	88 81       	ld	r24, Y
    3212:	99 81       	ldd	r25, Y+1	; 0x01
    3214:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <move_window>
    3218:	81 11       	cpse	r24, r1
    321a:	2f c0       	rjmp	.+94     	; 0x327a <f_sync+0xb4>
    321c:	ee 8d       	ldd	r30, Y+30	; 0x1e
    321e:	ff 8d       	ldd	r31, Y+31	; 0x1f
    3220:	83 85       	ldd	r24, Z+11	; 0x0b
    3222:	80 62       	ori	r24, 0x20	; 32
    3224:	83 87       	std	Z+11, r24	; 0x0b
    3226:	8a 85       	ldd	r24, Y+10	; 0x0a
    3228:	84 8f       	std	Z+28, r24	; 0x1c
    322a:	8b 85       	ldd	r24, Y+11	; 0x0b
    322c:	85 8f       	std	Z+29, r24	; 0x1d
    322e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3230:	86 8f       	std	Z+30, r24	; 0x1e
    3232:	8d 85       	ldd	r24, Y+13	; 0x0d
    3234:	87 8f       	std	Z+31, r24	; 0x1f
    3236:	8e 85       	ldd	r24, Y+14	; 0x0e
    3238:	9f 85       	ldd	r25, Y+15	; 0x0f
    323a:	a8 89       	ldd	r26, Y+16	; 0x10
    323c:	b9 89       	ldd	r27, Y+17	; 0x11
    323e:	82 8f       	std	Z+26, r24	; 0x1a
    3240:	93 8f       	std	Z+27, r25	; 0x1b
    3242:	cd 01       	movw	r24, r26
    3244:	aa 27       	eor	r26, r26
    3246:	bb 27       	eor	r27, r27
    3248:	84 8b       	std	Z+20, r24	; 0x14
    324a:	95 8b       	std	Z+21, r25	; 0x15
    324c:	16 8a       	std	Z+22, r1	; 0x16
    324e:	17 8a       	std	Z+23, r1	; 0x17
    3250:	81 e2       	ldi	r24, 0x21	; 33
    3252:	80 8f       	std	Z+24, r24	; 0x18
    3254:	86 e4       	ldi	r24, 0x46	; 70
    3256:	81 8f       	std	Z+25, r24	; 0x19
    3258:	12 8a       	std	Z+18, r1	; 0x12
    325a:	13 8a       	std	Z+19, r1	; 0x13
    325c:	8c 81       	ldd	r24, Y+4	; 0x04
    325e:	8f 7d       	andi	r24, 0xDF	; 223
    3260:	8c 83       	std	Y+4, r24	; 0x04
    3262:	e8 81       	ld	r30, Y
    3264:	f9 81       	ldd	r31, Y+1	; 0x01
    3266:	81 e0       	ldi	r24, 0x01	; 1
    3268:	84 83       	std	Z+4, r24	; 0x04
    326a:	88 81       	ld	r24, Y
    326c:	99 81       	ldd	r25, Y+1	; 0x01
    326e:	0e 94 89 0c 	call	0x1912	; 0x1912 <sync_fs>
    3272:	03 c0       	rjmp	.+6      	; 0x327a <f_sync+0xb4>
    3274:	80 e0       	ldi	r24, 0x00	; 0
    3276:	01 c0       	rjmp	.+2      	; 0x327a <f_sync+0xb4>
    3278:	81 e0       	ldi	r24, 0x01	; 1
    327a:	df 91       	pop	r29
    327c:	cf 91       	pop	r28
    327e:	1f 91       	pop	r17
    3280:	0f 91       	pop	r16
    3282:	08 95       	ret

00003284 <f_close>:
    3284:	cf 93       	push	r28
    3286:	df 93       	push	r29
    3288:	ec 01       	movw	r28, r24
    328a:	9d df       	rcall	.-198    	; 0x31c6 <f_sync>
    328c:	81 11       	cpse	r24, r1
    328e:	07 c0       	rjmp	.+14     	; 0x329e <f_close+0x1a>
    3290:	ce 01       	movw	r24, r28
    3292:	0e 94 96 08 	call	0x112c	; 0x112c <validate>
    3296:	81 11       	cpse	r24, r1
    3298:	02 c0       	rjmp	.+4      	; 0x329e <f_close+0x1a>
    329a:	19 82       	std	Y+1, r1	; 0x01
    329c:	18 82       	st	Y, r1
    329e:	df 91       	pop	r29
    32a0:	cf 91       	pop	r28
    32a2:	08 95       	ret

000032a4 <f_getlabel>:
FRESULT f_getlabel (
	const TCHAR* path,	/* Path name of the logical drive number */
	TCHAR* label,		/* Pointer to a buffer to return the volume label */
	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
)
{
    32a4:	cf 92       	push	r12
    32a6:	df 92       	push	r13
    32a8:	ef 92       	push	r14
    32aa:	ff 92       	push	r15
    32ac:	1f 93       	push	r17
    32ae:	cf 93       	push	r28
    32b0:	df 93       	push	r29
    32b2:	cd b7       	in	r28, 0x3d	; 61
    32b4:	de b7       	in	r29, 0x3e	; 62
    32b6:	6a 97       	sbiw	r28, 0x1a	; 26
    32b8:	0f b6       	in	r0, 0x3f	; 63
    32ba:	f8 94       	cli
    32bc:	de bf       	out	0x3e, r29	; 62
    32be:	0f be       	out	0x3f, r0	; 63
    32c0:	cd bf       	out	0x3d, r28	; 61
    32c2:	9a 8f       	std	Y+26, r25	; 0x1a
    32c4:	89 8f       	std	Y+25, r24	; 0x19
    32c6:	6b 01       	movw	r12, r22
    32c8:	7a 01       	movw	r14, r20
	WCHAR w;
#endif


	/* Get logical drive number */
	res = find_volume(&dj.fs, &path, 0);
    32ca:	40 e0       	ldi	r20, 0x00	; 0
    32cc:	be 01       	movw	r22, r28
    32ce:	67 5e       	subi	r22, 0xE7	; 231
    32d0:	7f 4f       	sbci	r23, 0xFF	; 255
    32d2:	ce 01       	movw	r24, r28
    32d4:	01 96       	adiw	r24, 0x01	; 1
    32d6:	0e 94 ba 08 	call	0x1174	; 0x1174 <find_volume>
    32da:	18 2f       	mov	r17, r24

	/* Get volume label */
	if (res == FR_OK && label) {
    32dc:	81 11       	cpse	r24, r1
    32de:	66 c0       	rjmp	.+204    	; 0x33ac <f_getlabel+0x108>
    32e0:	c1 14       	cp	r12, r1
    32e2:	d1 04       	cpc	r13, r1
    32e4:	41 f1       	breq	.+80     	; 0x3336 <f_getlabel+0x92>
		dj.sclust = 0;					/* Open root directory */
    32e6:	1f 82       	std	Y+7, r1	; 0x07
    32e8:	18 86       	std	Y+8, r1	; 0x08
    32ea:	19 86       	std	Y+9, r1	; 0x09
    32ec:	1a 86       	std	Y+10, r1	; 0x0a
		res = dir_sdi(&dj, 0);
    32ee:	60 e0       	ldi	r22, 0x00	; 0
    32f0:	70 e0       	ldi	r23, 0x00	; 0
    32f2:	ce 01       	movw	r24, r28
    32f4:	01 96       	adiw	r24, 0x01	; 1
    32f6:	0e 94 2d 0e 	call	0x1c5a	; 0x1c5a <dir_sdi>
		if (res == FR_OK) {
    32fa:	81 11       	cpse	r24, r1
    32fc:	56 c0       	rjmp	.+172    	; 0x33aa <f_getlabel+0x106>
			res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
    32fe:	61 e0       	ldi	r22, 0x01	; 1
    3300:	70 e0       	ldi	r23, 0x00	; 0
    3302:	ce 01       	movw	r24, r28
    3304:	01 96       	adiw	r24, 0x01	; 1
    3306:	13 db       	rcall	.-2522   	; 0x292e <dir_read>
			if (res == FR_OK) {			/* A volume label is exist */
    3308:	81 11       	cpse	r24, r1
    330a:	4b c0       	rjmp	.+150    	; 0x33a2 <f_getlabel+0xfe>
					if (IsDBCS1(w) && i < 11 && IsDBCS2(dj.dir[i]))
						w = w << 8 | dj.dir[i++];
					label[j++] = ff_convert(w, 1);	/* OEM -> Unicode */
				} while (j < 11);
#else
				mem_cpy(label, dj.dir, 11);
    330c:	6b 89       	ldd	r22, Y+19	; 0x13
    330e:	7c 89       	ldd	r23, Y+20	; 0x14
    3310:	4b e0       	ldi	r20, 0x0B	; 11
    3312:	50 e0       	ldi	r21, 0x00	; 0
    3314:	c6 01       	movw	r24, r12
    3316:	0e 94 c1 06 	call	0xd82	; 0xd82 <mem_cpy>
#endif
				j = 11;
				do {
					label[j] = 0;
    331a:	f6 01       	movw	r30, r12
    331c:	13 86       	std	Z+11, r1	; 0x0b
    331e:	3b 96       	adiw	r30, 0x0b	; 11
    3320:	04 c0       	rjmp	.+8      	; 0x332a <f_getlabel+0x86>
    3322:	10 82       	st	Z, r1
					if (!j) break;
    3324:	ec 15       	cp	r30, r12
    3326:	fd 05       	cpc	r31, r13
    3328:	31 f0       	breq	.+12     	; 0x3336 <f_getlabel+0x92>
				} while (label[--j] == ' ');
    332a:	82 91       	ld	r24, -Z
    332c:	80 32       	cpi	r24, 0x20	; 32
    332e:	c9 f3       	breq	.-14     	; 0x3322 <f_getlabel+0x7e>
    3330:	02 c0       	rjmp	.+4      	; 0x3336 <f_getlabel+0x92>
			}
			if (res == FR_NO_FILE) {	/* No label, return nul string */
				label[0] = 0;
    3332:	f6 01       	movw	r30, r12
    3334:	10 82       	st	Z, r1
			}
		}
	}

	/* Get volume serial number */
	if (res == FR_OK && vsn) {
    3336:	e1 14       	cp	r14, r1
    3338:	f1 04       	cpc	r15, r1
    333a:	c1 f1       	breq	.+112    	; 0x33ac <f_getlabel+0x108>
		res = move_window(dj.fs, dj.fs->volbase);
    333c:	89 81       	ldd	r24, Y+1	; 0x01
    333e:	9a 81       	ldd	r25, Y+2	; 0x02
    3340:	fc 01       	movw	r30, r24
    3342:	46 8d       	ldd	r20, Z+30	; 0x1e
    3344:	57 8d       	ldd	r21, Z+31	; 0x1f
    3346:	60 a1       	ldd	r22, Z+32	; 0x20
    3348:	71 a1       	ldd	r23, Z+33	; 0x21
    334a:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <move_window>
    334e:	18 2f       	mov	r17, r24
		if (res == FR_OK) {
    3350:	81 11       	cpse	r24, r1
    3352:	2c c0       	rjmp	.+88     	; 0x33ac <f_getlabel+0x108>
			i = dj.fs->fs_type == FS_FAT32 ? BS_VolID32 : BS_VolID;
    3354:	e9 81       	ldd	r30, Y+1	; 0x01
    3356:	fa 81       	ldd	r31, Y+2	; 0x02
    3358:	80 81       	ld	r24, Z
    335a:	83 30       	cpi	r24, 0x03	; 3
    335c:	19 f0       	breq	.+6      	; 0x3364 <f_getlabel+0xc0>
    335e:	87 e2       	ldi	r24, 0x27	; 39
    3360:	90 e0       	ldi	r25, 0x00	; 0
    3362:	02 c0       	rjmp	.+4      	; 0x3368 <f_getlabel+0xc4>
    3364:	83 e4       	ldi	r24, 0x43	; 67
    3366:	90 e0       	ldi	r25, 0x00	; 0
			*vsn = LD_DWORD(&dj.fs->win[i]);
    3368:	e8 0f       	add	r30, r24
    336a:	f9 1f       	adc	r31, r25
    336c:	25 a9       	ldd	r18, Z+53	; 0x35
    336e:	84 a9       	ldd	r24, Z+52	; 0x34
    3370:	90 e0       	ldi	r25, 0x00	; 0
    3372:	a0 e0       	ldi	r26, 0x00	; 0
    3374:	b0 e0       	ldi	r27, 0x00	; 0
    3376:	dc 01       	movw	r26, r24
    3378:	99 27       	eor	r25, r25
    337a:	88 27       	eor	r24, r24
    337c:	b2 2b       	or	r27, r18
    337e:	22 a9       	ldd	r18, Z+50	; 0x32
    3380:	82 2b       	or	r24, r18
    3382:	43 a9       	ldd	r20, Z+51	; 0x33
    3384:	50 e0       	ldi	r21, 0x00	; 0
    3386:	54 2f       	mov	r21, r20
    3388:	44 27       	eor	r20, r20
    338a:	60 e0       	ldi	r22, 0x00	; 0
    338c:	70 e0       	ldi	r23, 0x00	; 0
    338e:	84 2b       	or	r24, r20
    3390:	95 2b       	or	r25, r21
    3392:	a6 2b       	or	r26, r22
    3394:	b7 2b       	or	r27, r23
    3396:	f7 01       	movw	r30, r14
    3398:	80 83       	st	Z, r24
    339a:	91 83       	std	Z+1, r25	; 0x01
    339c:	a2 83       	std	Z+2, r26	; 0x02
    339e:	b3 83       	std	Z+3, r27	; 0x03
    33a0:	05 c0       	rjmp	.+10     	; 0x33ac <f_getlabel+0x108>
				do {
					label[j] = 0;
					if (!j) break;
				} while (label[--j] == ' ');
			}
			if (res == FR_NO_FILE) {	/* No label, return nul string */
    33a2:	84 30       	cpi	r24, 0x04	; 4
    33a4:	31 f2       	breq	.-116    	; 0x3332 <f_getlabel+0x8e>
	/* Get volume label */
	if (res == FR_OK && label) {
		dj.sclust = 0;					/* Open root directory */
		res = dir_sdi(&dj, 0);
		if (res == FR_OK) {
			res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
    33a6:	18 2f       	mov	r17, r24
    33a8:	01 c0       	rjmp	.+2      	; 0x33ac <f_getlabel+0x108>
	res = find_volume(&dj.fs, &path, 0);

	/* Get volume label */
	if (res == FR_OK && label) {
		dj.sclust = 0;					/* Open root directory */
		res = dir_sdi(&dj, 0);
    33aa:	18 2f       	mov	r17, r24
			*vsn = LD_DWORD(&dj.fs->win[i]);
		}
	}

	LEAVE_FF(dj.fs, res);
}
    33ac:	81 2f       	mov	r24, r17
    33ae:	6a 96       	adiw	r28, 0x1a	; 26
    33b0:	0f b6       	in	r0, 0x3f	; 63
    33b2:	f8 94       	cli
    33b4:	de bf       	out	0x3e, r29	; 62
    33b6:	0f be       	out	0x3f, r0	; 63
    33b8:	cd bf       	out	0x3d, r28	; 61
    33ba:	df 91       	pop	r29
    33bc:	cf 91       	pop	r28
    33be:	1f 91       	pop	r17
    33c0:	ff 90       	pop	r15
    33c2:	ef 90       	pop	r14
    33c4:	df 90       	pop	r13
    33c6:	cf 90       	pop	r12
    33c8:	08 95       	ret

000033ca <_ZN3I2CC1Ev>:
void I2C::twi_ack(){
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
}
void I2C::twi_nack(){
	TWCR = (1<<TWINT) | (1<<TWEN);
	TWCR &= ~(1<<TWEA);
    33ca:	82 e0       	ldi	r24, 0x02	; 2
    33cc:	80 93 b8 00 	sts	0x00B8, r24
    33d0:	08 95       	ret

000033d2 <_ZN3I2CD1Ev>:
    33d2:	08 95       	ret

000033d4 <_ZN3I2C9twi_startEv>:
    33d4:	84 ea       	ldi	r24, 0xA4	; 164
    33d6:	80 93 bc 00 	sts	0x00BC, r24
    33da:	08 95       	ret

000033dc <_ZN3I2C8twi_stopEv>:
    33dc:	84 e9       	ldi	r24, 0x94	; 148
    33de:	80 93 bc 00 	sts	0x00BC, r24
    33e2:	08 95       	ret

000033e4 <_ZN3I2C9twi_writeEh>:
}

void I2C::twi_write(uint8_t data){
	while(!(TWCR & (1<<TWINT)));
    33e4:	ec eb       	ldi	r30, 0xBC	; 188
    33e6:	f0 e0       	ldi	r31, 0x00	; 0
    33e8:	80 81       	ld	r24, Z
    33ea:	88 23       	and	r24, r24
    33ec:	ec f7       	brge	.-6      	; 0x33e8 <_ZN3I2C9twi_writeEh+0x4>
	TWDR = data;
    33ee:	60 93 bb 00 	sts	0x00BB, r22
	TWCR = (1<<TWINT) | (1<<TWEN);
    33f2:	84 e8       	ldi	r24, 0x84	; 132
    33f4:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    33f8:	ec eb       	ldi	r30, 0xBC	; 188
    33fa:	f0 e0       	ldi	r31, 0x00	; 0
    33fc:	80 81       	ld	r24, Z
    33fe:	88 23       	and	r24, r24
    3400:	ec f7       	brge	.-6      	; 0x33fc <_ZN3I2C9twi_writeEh+0x18>
}
    3402:	08 95       	ret

00003404 <__vector_16>:

#include "Display.h"
Display oled;

volatile uint8_t Timerstat;
ISR(TIMER0_COMPA_vect){
    3404:	1f 92       	push	r1
    3406:	0f 92       	push	r0
    3408:	0f b6       	in	r0, 0x3f	; 63
    340a:	0f 92       	push	r0
    340c:	11 24       	eor	r1, r1
    340e:	0b b6       	in	r0, 0x3b	; 59
    3410:	0f 92       	push	r0
    3412:	2f 93       	push	r18
    3414:	3f 93       	push	r19
    3416:	4f 93       	push	r20
    3418:	5f 93       	push	r21
    341a:	6f 93       	push	r22
    341c:	7f 93       	push	r23
    341e:	8f 93       	push	r24
    3420:	9f 93       	push	r25
    3422:	af 93       	push	r26
    3424:	bf 93       	push	r27
    3426:	ef 93       	push	r30
    3428:	ff 93       	push	r31
	Timerstat++;
    342a:	80 91 ef 01 	lds	r24, 0x01EF
    342e:	8f 5f       	subi	r24, 0xFF	; 255
    3430:	80 93 ef 01 	sts	0x01EF, r24
	disk_timerproc();	//Timer der SD Karte
    3434:	0e 94 a9 05 	call	0xb52	; 0xb52 <disk_timerproc>
}
    3438:	ff 91       	pop	r31
    343a:	ef 91       	pop	r30
    343c:	bf 91       	pop	r27
    343e:	af 91       	pop	r26
    3440:	9f 91       	pop	r25
    3442:	8f 91       	pop	r24
    3444:	7f 91       	pop	r23
    3446:	6f 91       	pop	r22
    3448:	5f 91       	pop	r21
    344a:	4f 91       	pop	r20
    344c:	3f 91       	pop	r19
    344e:	2f 91       	pop	r18
    3450:	0f 90       	pop	r0
    3452:	0b be       	out	0x3b, r0	; 59
    3454:	0f 90       	pop	r0
    3456:	0f be       	out	0x3f, r0	; 63
    3458:	0f 90       	pop	r0
    345a:	1f 90       	pop	r1
    345c:	18 95       	reti

0000345e <main>:


int main(void)
{
    345e:	cf 93       	push	r28
    3460:	df 93       	push	r29
    3462:	cd b7       	in	r28, 0x3d	; 61
    3464:	de b7       	in	r29, 0x3e	; 62
    3466:	c6 57       	subi	r28, 0x76	; 118
    3468:	d8 40       	sbci	r29, 0x08	; 8
    346a:	0f b6       	in	r0, 0x3f	; 63
    346c:	f8 94       	cli
    346e:	de bf       	out	0x3e, r29	; 62
    3470:	0f be       	out	0x3f, r0	; 63
    3472:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	uint8_t buffersize;
	Timerstat = 0;
    3474:	10 92 ef 01 	sts	0x01EF, r1
	int status;
	//init Timer
	TCCR0A	 = (1<<WGM01);		//Timer im ctc Mide
    3478:	82 e0       	ldi	r24, 0x02	; 2
    347a:	84 bd       	out	0x24, r24	; 36
	OCR0A	 = 38;		//ctc counter ende
    347c:	86 e2       	ldi	r24, 0x26	; 38
    347e:	87 bd       	out	0x27, r24	; 39
	TIMSK0	|= (1<<OCIE0A);
    3480:	ee e6       	ldi	r30, 0x6E	; 110
    3482:	f0 e0       	ldi	r31, 0x00	; 0
    3484:	80 81       	ld	r24, Z
    3486:	82 60       	ori	r24, 0x02	; 2
    3488:	80 83       	st	Z, r24
	TCCR0B	|= (1<<CS02) | (1<<CS00);	//presc=1024
    348a:	85 b5       	in	r24, 0x25	; 37
    348c:	85 60       	ori	r24, 0x05	; 5
    348e:	85 bd       	out	0x25, r24	; 37
	sei();
    3490:	78 94       	sei
	oled.clearFrame();
    3492:	80 ef       	ldi	r24, 0xF0	; 240
    3494:	91 e0       	ldi	r25, 0x01	; 1
    3496:	0e 94 c0 05 	call	0xb80	; 0xb80 <_ZN7Display10clearFrameEv>
	oled.sendFrame();
    349a:	80 ef       	ldi	r24, 0xF0	; 240
    349c:	91 e0       	ldi	r25, 0x01	; 1
    349e:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN7Display9sendFrameEv>
    34a2:	14 e1       	ldi	r17, 0x14	; 20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    34a4:	2f ef       	ldi	r18, 0xFF	; 255
    34a6:	30 e7       	ldi	r19, 0x70	; 112
    34a8:	82 e0       	ldi	r24, 0x02	; 2
    34aa:	21 50       	subi	r18, 0x01	; 1
    34ac:	30 40       	sbci	r19, 0x00	; 0
    34ae:	80 40       	sbci	r24, 0x00	; 0
    34b0:	e1 f7       	brne	.-8      	; 0x34aa <main+0x4c>
    34b2:	00 c0       	rjmp	.+0      	; 0x34b4 <main+0x56>
    34b4:	00 00       	nop
    34b6:	11 50       	subi	r17, 0x01	; 1
	
	for (uint8_t i = 0; i<20; i++)
    34b8:	a9 f7       	brne	.-22     	; 0x34a4 <main+0x46>
	{
		_delay_ms(100);
	}

	oled.draw_ASCI('1',1*charsize,0*charhighte);
    34ba:	20 e0       	ldi	r18, 0x00	; 0
    34bc:	46 e0       	ldi	r20, 0x06	; 6
    34be:	61 e3       	ldi	r22, 0x31	; 49
    34c0:	80 ef       	ldi	r24, 0xF0	; 240
    34c2:	91 e0       	ldi	r25, 0x01	; 1
    34c4:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    34c8:	80 ef       	ldi	r24, 0xF0	; 240
    34ca:	91 e0       	ldi	r25, 0x01	; 1
    34cc:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN7Display9sendFrameEv>
	
	FATFS FATFS_Obj;
	oled.draw_ASCI('2',2*charsize,0*charhighte);
    34d0:	20 e0       	ldi	r18, 0x00	; 0
    34d2:	4c e0       	ldi	r20, 0x0C	; 12
    34d4:	62 e3       	ldi	r22, 0x32	; 50
    34d6:	80 ef       	ldi	r24, 0xF0	; 240
    34d8:	91 e0       	ldi	r25, 0x01	; 1
    34da:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    34de:	80 ef       	ldi	r24, 0xF0	; 240
    34e0:	91 e0       	ldi	r25, 0x01	; 1
    34e2:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN7Display9sendFrameEv>
	
	status = disk_initialize(0);
    34e6:	80 e0       	ldi	r24, 0x00	; 0
    34e8:	0e 94 86 02 	call	0x50c	; 0x50c <disk_initialize>
	buffersize=sprintf(buffer,"%i",status);
    34ec:	1f 92       	push	r1
    34ee:	8f 93       	push	r24
    34f0:	85 ee       	ldi	r24, 0xE5	; 229
    34f2:	91 e0       	ldi	r25, 0x01	; 1
    34f4:	9f 93       	push	r25
    34f6:	8f 93       	push	r24
    34f8:	ce 01       	movw	r24, r28
    34fa:	8b 5a       	subi	r24, 0xAB	; 171
    34fc:	97 4f       	sbci	r25, 0xF7	; 247
    34fe:	9f 93       	push	r25
    3500:	8f 93       	push	r24
    3502:	06 d2       	rcall	.+1036   	; 0x3910 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize+70,1*charhighte);}
    3504:	0f 90       	pop	r0
    3506:	0f 90       	pop	r0
    3508:	0f 90       	pop	r0
    350a:	0f 90       	pop	r0
    350c:	0f 90       	pop	r0
    350e:	0f 90       	pop	r0
    3510:	88 23       	and	r24, r24
    3512:	e1 f0       	breq	.+56     	; 0x354c <main+0xee>
    3514:	6e 01       	movw	r12, r28
    3516:	9b ea       	ldi	r25, 0xAB	; 171
    3518:	c9 1a       	sub	r12, r25
    351a:	97 ef       	ldi	r25, 0xF7	; 247
    351c:	d9 0a       	sbc	r13, r25
    351e:	ee 24       	eor	r14, r14
    3520:	ea 94       	dec	r14
    3522:	e8 0e       	add	r14, r24
    3524:	f1 2c       	mov	r15, r1
    3526:	ef ef       	ldi	r30, 0xFF	; 255
    3528:	ee 1a       	sub	r14, r30
    352a:	fe 0a       	sbc	r15, r30
    352c:	ec 0c       	add	r14, r12
    352e:	fd 1c       	adc	r15, r13
    3530:	06 e4       	ldi	r16, 0x46	; 70
    3532:	f6 01       	movw	r30, r12
    3534:	61 91       	ld	r22, Z+
    3536:	6f 01       	movw	r12, r30
    3538:	28 e0       	ldi	r18, 0x08	; 8
    353a:	40 2f       	mov	r20, r16
    353c:	80 ef       	ldi	r24, 0xF0	; 240
    353e:	91 e0       	ldi	r25, 0x01	; 1
    3540:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
    3544:	0a 5f       	subi	r16, 0xFA	; 250
    3546:	ce 14       	cp	r12, r14
    3548:	df 04       	cpc	r13, r15
    354a:	99 f7       	brne	.-26     	; 0x3532 <main+0xd4>
	oled.draw_ASCI('3',3*charsize,0*charhighte);
    354c:	20 e0       	ldi	r18, 0x00	; 0
    354e:	42 e1       	ldi	r20, 0x12	; 18
    3550:	63 e3       	ldi	r22, 0x33	; 51
    3552:	80 ef       	ldi	r24, 0xF0	; 240
    3554:	91 e0       	ldi	r25, 0x01	; 1
    3556:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    355a:	80 ef       	ldi	r24, 0xF0	; 240
    355c:	91 e0       	ldi	r25, 0x01	; 1
    355e:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN7Display9sendFrameEv>
	oled.draw_ASCI('0',0*charsize,0*charhighte);
	buffersize=sprintf(buffer,"%i",status);
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,5*charhighte);}
	oled.sendFrame();
	*/
	status = f_mount(&FATFS_Obj,"",0) != 0;
    3562:	40 e0       	ldi	r20, 0x00	; 0
    3564:	63 e5       	ldi	r22, 0x53	; 83
    3566:	71 e0       	ldi	r23, 0x01	; 1
    3568:	ce 01       	movw	r24, r28
    356a:	01 96       	adiw	r24, 0x01	; 1
    356c:	a7 da       	rcall	.-2738   	; 0x2abc <f_mount>
    356e:	91 e0       	ldi	r25, 0x01	; 1
    3570:	20 e0       	ldi	r18, 0x00	; 0
    3572:	81 11       	cpse	r24, r1
    3574:	01 c0       	rjmp	.+2      	; 0x3578 <main+0x11a>
    3576:	90 e0       	ldi	r25, 0x00	; 0
	buffersize=sprintf(buffer,"%i",status);
    3578:	2f 93       	push	r18
    357a:	9f 93       	push	r25
    357c:	85 ee       	ldi	r24, 0xE5	; 229
    357e:	91 e0       	ldi	r25, 0x01	; 1
    3580:	9f 93       	push	r25
    3582:	8f 93       	push	r24
    3584:	ce 01       	movw	r24, r28
    3586:	8b 5a       	subi	r24, 0xAB	; 171
    3588:	97 4f       	sbci	r25, 0xF7	; 247
    358a:	9f 93       	push	r25
    358c:	8f 93       	push	r24
    358e:	c0 d1       	rcall	.+896    	; 0x3910 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize+70,2*charhighte);}
    3590:	0f 90       	pop	r0
    3592:	0f 90       	pop	r0
    3594:	0f 90       	pop	r0
    3596:	0f 90       	pop	r0
    3598:	0f 90       	pop	r0
    359a:	0f 90       	pop	r0
    359c:	88 23       	and	r24, r24
    359e:	e1 f0       	breq	.+56     	; 0x35d8 <main+0x17a>
    35a0:	6e 01       	movw	r12, r28
    35a2:	fb ea       	ldi	r31, 0xAB	; 171
    35a4:	cf 1a       	sub	r12, r31
    35a6:	f7 ef       	ldi	r31, 0xF7	; 247
    35a8:	df 0a       	sbc	r13, r31
    35aa:	ee 24       	eor	r14, r14
    35ac:	ea 94       	dec	r14
    35ae:	e8 0e       	add	r14, r24
    35b0:	f1 2c       	mov	r15, r1
    35b2:	2f ef       	ldi	r18, 0xFF	; 255
    35b4:	e2 1a       	sub	r14, r18
    35b6:	f2 0a       	sbc	r15, r18
    35b8:	ec 0c       	add	r14, r12
    35ba:	fd 1c       	adc	r15, r13
    35bc:	06 e4       	ldi	r16, 0x46	; 70
    35be:	f6 01       	movw	r30, r12
    35c0:	61 91       	ld	r22, Z+
    35c2:	6f 01       	movw	r12, r30
    35c4:	20 e1       	ldi	r18, 0x10	; 16
    35c6:	40 2f       	mov	r20, r16
    35c8:	80 ef       	ldi	r24, 0xF0	; 240
    35ca:	91 e0       	ldi	r25, 0x01	; 1
    35cc:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
    35d0:	0a 5f       	subi	r16, 0xFA	; 250
    35d2:	ce 14       	cp	r12, r14
    35d4:	df 04       	cpc	r13, r15
    35d6:	99 f7       	brne	.-26     	; 0x35be <main+0x160>
	oled.draw_ASCI('4',4*charsize,0*charhighte);
    35d8:	20 e0       	ldi	r18, 0x00	; 0
    35da:	48 e1       	ldi	r20, 0x18	; 24
    35dc:	64 e3       	ldi	r22, 0x34	; 52
    35de:	80 ef       	ldi	r24, 0xF0	; 240
    35e0:	91 e0       	ldi	r25, 0x01	; 1
    35e2:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    35e6:	80 ef       	ldi	r24, 0xF0	; 240
    35e8:	91 e0       	ldi	r25, 0x01	; 1
    35ea:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN7Display9sendFrameEv>
	
	/* Get volume label of the default drive */
	char str[12];
	status = f_getlabel("", str, 0);
    35ee:	40 e0       	ldi	r20, 0x00	; 0
    35f0:	50 e0       	ldi	r21, 0x00	; 0
    35f2:	be 01       	movw	r22, r28
    35f4:	67 59       	subi	r22, 0x97	; 151
    35f6:	77 4f       	sbci	r23, 0xF7	; 247
    35f8:	83 e5       	ldi	r24, 0x53	; 83
    35fa:	91 e0       	ldi	r25, 0x01	; 1
    35fc:	53 de       	rcall	.-858    	; 0x32a4 <f_getlabel>
    35fe:	d8 2e       	mov	r13, r24
    3600:	9e 01       	movw	r18, r28
    3602:	27 59       	subi	r18, 0x97	; 151
    3604:	37 4f       	sbci	r19, 0xF7	; 247
    3606:	79 01       	movw	r14, r18
    3608:	02 e3       	ldi	r16, 0x32	; 50
	for(uint8_t i=0;i<12;i++){oled.draw_ASCI(str[i],i*charsize+50,4*charhighte);}
    360a:	f7 01       	movw	r30, r14
    360c:	61 91       	ld	r22, Z+
    360e:	7f 01       	movw	r14, r30
    3610:	20 e2       	ldi	r18, 0x20	; 32
    3612:	40 2f       	mov	r20, r16
    3614:	80 ef       	ldi	r24, 0xF0	; 240
    3616:	91 e0       	ldi	r25, 0x01	; 1
    3618:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
    361c:	0a 5f       	subi	r16, 0xFA	; 250
    361e:	0a 37       	cpi	r16, 0x7A	; 122
    3620:	a1 f7       	brne	.-24     	; 0x360a <main+0x1ac>
	buffersize=sprintf(buffer,"%i",status);
    3622:	1f 92       	push	r1
    3624:	df 92       	push	r13
    3626:	85 ee       	ldi	r24, 0xE5	; 229
    3628:	91 e0       	ldi	r25, 0x01	; 1
    362a:	9f 93       	push	r25
    362c:	8f 93       	push	r24
    362e:	ce 01       	movw	r24, r28
    3630:	8b 5a       	subi	r24, 0xAB	; 171
    3632:	97 4f       	sbci	r25, 0xF7	; 247
    3634:	9f 93       	push	r25
    3636:	8f 93       	push	r24
    3638:	6b d1       	rcall	.+726    	; 0x3910 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize+70,5*charhighte);}
    363a:	0f 90       	pop	r0
    363c:	0f 90       	pop	r0
    363e:	0f 90       	pop	r0
    3640:	0f 90       	pop	r0
    3642:	0f 90       	pop	r0
    3644:	0f 90       	pop	r0
    3646:	88 23       	and	r24, r24
    3648:	e1 f0       	breq	.+56     	; 0x3682 <main+0x224>
    364a:	6e 01       	movw	r12, r28
    364c:	fb ea       	ldi	r31, 0xAB	; 171
    364e:	cf 1a       	sub	r12, r31
    3650:	f7 ef       	ldi	r31, 0xF7	; 247
    3652:	df 0a       	sbc	r13, r31
    3654:	ee 24       	eor	r14, r14
    3656:	ea 94       	dec	r14
    3658:	e8 0e       	add	r14, r24
    365a:	f1 2c       	mov	r15, r1
    365c:	2f ef       	ldi	r18, 0xFF	; 255
    365e:	e2 1a       	sub	r14, r18
    3660:	f2 0a       	sbc	r15, r18
    3662:	ec 0c       	add	r14, r12
    3664:	fd 1c       	adc	r15, r13
    3666:	06 e4       	ldi	r16, 0x46	; 70
    3668:	f6 01       	movw	r30, r12
    366a:	61 91       	ld	r22, Z+
    366c:	6f 01       	movw	r12, r30
    366e:	28 e2       	ldi	r18, 0x28	; 40
    3670:	40 2f       	mov	r20, r16
    3672:	80 ef       	ldi	r24, 0xF0	; 240
    3674:	91 e0       	ldi	r25, 0x01	; 1
    3676:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
    367a:	0a 5f       	subi	r16, 0xFA	; 250
    367c:	ce 14       	cp	r12, r14
    367e:	df 04       	cpc	r13, r15
    3680:	99 f7       	brne	.-26     	; 0x3668 <main+0x20a>
	
	
	FIL fil_obj;
	oled.draw_ASCI('5',5*charsize,0*charhighte);
    3682:	20 e0       	ldi	r18, 0x00	; 0
    3684:	4e e1       	ldi	r20, 0x1E	; 30
    3686:	65 e3       	ldi	r22, 0x35	; 53
    3688:	80 ef       	ldi	r24, 0xF0	; 240
    368a:	91 e0       	ldi	r25, 0x01	; 1
    368c:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    3690:	80 ef       	ldi	r24, 0xF0	; 240
    3692:	91 e0       	ldi	r25, 0x01	; 1
    3694:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN7Display9sendFrameEv>
	
	status = f_open(&fil_obj, "FOO.TXT", FA_CREATE_NEW | FA_WRITE);
    3698:	46 e0       	ldi	r20, 0x06	; 6
    369a:	64 ed       	ldi	r22, 0xD4	; 212
    369c:	71 e0       	ldi	r23, 0x01	; 1
    369e:	ce 01       	movw	r24, r28
    36a0:	8d 5c       	subi	r24, 0xCD	; 205
    36a2:	9b 4f       	sbci	r25, 0xFB	; 251
    36a4:	5e da       	rcall	.-2884   	; 0x2b62 <f_open>
	buffersize=sprintf(buffer,"%i",status);
    36a6:	1f 92       	push	r1
    36a8:	8f 93       	push	r24
    36aa:	85 ee       	ldi	r24, 0xE5	; 229
    36ac:	91 e0       	ldi	r25, 0x01	; 1
    36ae:	9f 93       	push	r25
    36b0:	8f 93       	push	r24
    36b2:	ce 01       	movw	r24, r28
    36b4:	8b 5a       	subi	r24, 0xAB	; 171
    36b6:	97 4f       	sbci	r25, 0xF7	; 247
    36b8:	9f 93       	push	r25
    36ba:	8f 93       	push	r24
    36bc:	29 d1       	rcall	.+594    	; 0x3910 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,1*charhighte);}
    36be:	0f 90       	pop	r0
    36c0:	0f 90       	pop	r0
    36c2:	0f 90       	pop	r0
    36c4:	0f 90       	pop	r0
    36c6:	0f 90       	pop	r0
    36c8:	0f 90       	pop	r0
    36ca:	88 23       	and	r24, r24
    36cc:	e1 f0       	breq	.+56     	; 0x3706 <main+0x2a8>
    36ce:	6e 01       	movw	r12, r28
    36d0:	fb ea       	ldi	r31, 0xAB	; 171
    36d2:	cf 1a       	sub	r12, r31
    36d4:	f7 ef       	ldi	r31, 0xF7	; 247
    36d6:	df 0a       	sbc	r13, r31
    36d8:	ee 24       	eor	r14, r14
    36da:	ea 94       	dec	r14
    36dc:	e8 0e       	add	r14, r24
    36de:	f1 2c       	mov	r15, r1
    36e0:	2f ef       	ldi	r18, 0xFF	; 255
    36e2:	e2 1a       	sub	r14, r18
    36e4:	f2 0a       	sbc	r15, r18
    36e6:	ec 0c       	add	r14, r12
    36e8:	fd 1c       	adc	r15, r13
    36ea:	01 2f       	mov	r16, r17
    36ec:	f6 01       	movw	r30, r12
    36ee:	61 91       	ld	r22, Z+
    36f0:	6f 01       	movw	r12, r30
    36f2:	28 e0       	ldi	r18, 0x08	; 8
    36f4:	40 2f       	mov	r20, r16
    36f6:	80 ef       	ldi	r24, 0xF0	; 240
    36f8:	91 e0       	ldi	r25, 0x01	; 1
    36fa:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
    36fe:	0a 5f       	subi	r16, 0xFA	; 250
    3700:	ce 14       	cp	r12, r14
    3702:	df 04       	cpc	r13, r15
    3704:	99 f7       	brne	.-26     	; 0x36ec <main+0x28e>
	oled.draw_ASCI('6',6*charsize,0*charhighte);
    3706:	20 e0       	ldi	r18, 0x00	; 0
    3708:	44 e2       	ldi	r20, 0x24	; 36
    370a:	66 e3       	ldi	r22, 0x36	; 54
    370c:	80 ef       	ldi	r24, 0xF0	; 240
    370e:	91 e0       	ldi	r25, 0x01	; 1
    3710:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    3714:	80 ef       	ldi	r24, 0xF0	; 240
    3716:	91 e0       	ldi	r25, 0x01	; 1
    3718:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN7Display9sendFrameEv>
	
	//status = f_printf(&fil_obj, "test text %u", 1);
	UINT number = 0;
    371c:	cb 58       	subi	r28, 0x8B	; 139
    371e:	d7 4f       	sbci	r29, 0xF7	; 247
    3720:	19 82       	std	Y+1, r1	; 0x01
    3722:	18 82       	st	Y, r1
    3724:	c5 57       	subi	r28, 0x75	; 117
    3726:	d8 40       	sbci	r29, 0x08	; 8
	status = f_write(&fil_obj,"Hallo",5,&number);
    3728:	9e 01       	movw	r18, r28
    372a:	2b 58       	subi	r18, 0x8B	; 139
    372c:	37 4f       	sbci	r19, 0xF7	; 247
    372e:	45 e0       	ldi	r20, 0x05	; 5
    3730:	50 e0       	ldi	r21, 0x00	; 0
    3732:	6c ed       	ldi	r22, 0xDC	; 220
    3734:	71 e0       	ldi	r23, 0x01	; 1
    3736:	ce 01       	movw	r24, r28
    3738:	8d 5c       	subi	r24, 0xCD	; 205
    373a:	9b 4f       	sbci	r25, 0xFB	; 251
    373c:	41 db       	rcall	.-2430   	; 0x2dc0 <f_write>
    373e:	08 2f       	mov	r16, r24
	oled.draw_ASCI('7',7*charsize,0*charhighte);
    3740:	20 e0       	ldi	r18, 0x00	; 0
    3742:	4a e2       	ldi	r20, 0x2A	; 42
    3744:	67 e3       	ldi	r22, 0x37	; 55
    3746:	80 ef       	ldi	r24, 0xF0	; 240
    3748:	91 e0       	ldi	r25, 0x01	; 1
    374a:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
	buffersize=sprintf(buffer,"%i:%i",status,number);
    374e:	ca 58       	subi	r28, 0x8A	; 138
    3750:	d7 4f       	sbci	r29, 0xF7	; 247
    3752:	88 81       	ld	r24, Y
    3754:	c6 57       	subi	r28, 0x76	; 118
    3756:	d8 40       	sbci	r29, 0x08	; 8
    3758:	8f 93       	push	r24
    375a:	cb 58       	subi	r28, 0x8B	; 139
    375c:	d7 4f       	sbci	r29, 0xF7	; 247
    375e:	88 81       	ld	r24, Y
    3760:	c5 57       	subi	r28, 0x75	; 117
    3762:	d8 40       	sbci	r29, 0x08	; 8
    3764:	8f 93       	push	r24
    3766:	1f 92       	push	r1
    3768:	0f 93       	push	r16
    376a:	82 ee       	ldi	r24, 0xE2	; 226
    376c:	91 e0       	ldi	r25, 0x01	; 1
    376e:	9f 93       	push	r25
    3770:	8f 93       	push	r24
    3772:	ce 01       	movw	r24, r28
    3774:	8b 5a       	subi	r24, 0xAB	; 171
    3776:	97 4f       	sbci	r25, 0xF7	; 247
    3778:	9f 93       	push	r25
    377a:	8f 93       	push	r24
    377c:	c9 d0       	rcall	.+402    	; 0x3910 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,2*charhighte);}
    377e:	0f b6       	in	r0, 0x3f	; 63
    3780:	f8 94       	cli
    3782:	de bf       	out	0x3e, r29	; 62
    3784:	0f be       	out	0x3f, r0	; 63
    3786:	cd bf       	out	0x3d, r28	; 61
    3788:	88 23       	and	r24, r24
    378a:	e1 f0       	breq	.+56     	; 0x37c4 <main+0x366>
    378c:	6e 01       	movw	r12, r28
    378e:	3b ea       	ldi	r19, 0xAB	; 171
    3790:	c3 1a       	sub	r12, r19
    3792:	37 ef       	ldi	r19, 0xF7	; 247
    3794:	d3 0a       	sbc	r13, r19
    3796:	ee 24       	eor	r14, r14
    3798:	ea 94       	dec	r14
    379a:	e8 0e       	add	r14, r24
    379c:	f1 2c       	mov	r15, r1
    379e:	8f ef       	ldi	r24, 0xFF	; 255
    37a0:	e8 1a       	sub	r14, r24
    37a2:	f8 0a       	sbc	r15, r24
    37a4:	ec 0c       	add	r14, r12
    37a6:	fd 1c       	adc	r15, r13
    37a8:	01 2f       	mov	r16, r17
    37aa:	f6 01       	movw	r30, r12
    37ac:	61 91       	ld	r22, Z+
    37ae:	6f 01       	movw	r12, r30
    37b0:	20 e1       	ldi	r18, 0x10	; 16
    37b2:	40 2f       	mov	r20, r16
    37b4:	80 ef       	ldi	r24, 0xF0	; 240
    37b6:	91 e0       	ldi	r25, 0x01	; 1
    37b8:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
    37bc:	0a 5f       	subi	r16, 0xFA	; 250
    37be:	ce 14       	cp	r12, r14
    37c0:	df 04       	cpc	r13, r15
    37c2:	99 f7       	brne	.-26     	; 0x37aa <main+0x34c>
	oled.sendFrame();
    37c4:	80 ef       	ldi	r24, 0xF0	; 240
    37c6:	91 e0       	ldi	r25, 0x01	; 1
    37c8:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN7Display9sendFrameEv>
	
	status = f_close(&fil_obj);
    37cc:	ce 01       	movw	r24, r28
    37ce:	8d 5c       	subi	r24, 0xCD	; 205
    37d0:	9b 4f       	sbci	r25, 0xFB	; 251
    37d2:	58 dd       	rcall	.-1360   	; 0x3284 <f_close>
    37d4:	08 2f       	mov	r16, r24
	oled.draw_ASCI('8',8*charsize,0*charhighte);
    37d6:	20 e0       	ldi	r18, 0x00	; 0
    37d8:	40 e3       	ldi	r20, 0x30	; 48
    37da:	68 e3       	ldi	r22, 0x38	; 56
    37dc:	80 ef       	ldi	r24, 0xF0	; 240
    37de:	91 e0       	ldi	r25, 0x01	; 1
    37e0:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
	buffersize=sprintf(buffer,"%i:%i",status,Timerstat);
    37e4:	80 91 ef 01 	lds	r24, 0x01EF
    37e8:	1f 92       	push	r1
    37ea:	8f 93       	push	r24
    37ec:	1f 92       	push	r1
    37ee:	0f 93       	push	r16
    37f0:	82 ee       	ldi	r24, 0xE2	; 226
    37f2:	91 e0       	ldi	r25, 0x01	; 1
    37f4:	9f 93       	push	r25
    37f6:	8f 93       	push	r24
    37f8:	ce 01       	movw	r24, r28
    37fa:	8b 5a       	subi	r24, 0xAB	; 171
    37fc:	97 4f       	sbci	r25, 0xF7	; 247
    37fe:	9f 93       	push	r25
    3800:	8f 93       	push	r24
    3802:	86 d0       	rcall	.+268    	; 0x3910 <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
    3804:	0f b6       	in	r0, 0x3f	; 63
    3806:	f8 94       	cli
    3808:	de bf       	out	0x3e, r29	; 62
    380a:	0f be       	out	0x3f, r0	; 63
    380c:	cd bf       	out	0x3d, r28	; 61
    380e:	88 23       	and	r24, r24
    3810:	d9 f0       	breq	.+54     	; 0x3848 <main+0x3ea>
    3812:	6e 01       	movw	r12, r28
    3814:	3b ea       	ldi	r19, 0xAB	; 171
    3816:	c3 1a       	sub	r12, r19
    3818:	37 ef       	ldi	r19, 0xF7	; 247
    381a:	d3 0a       	sbc	r13, r19
    381c:	ee 24       	eor	r14, r14
    381e:	ea 94       	dec	r14
    3820:	e8 0e       	add	r14, r24
    3822:	f1 2c       	mov	r15, r1
    3824:	8f ef       	ldi	r24, 0xFF	; 255
    3826:	e8 1a       	sub	r14, r24
    3828:	f8 0a       	sbc	r15, r24
    382a:	ec 0c       	add	r14, r12
    382c:	fd 1c       	adc	r15, r13
    382e:	f6 01       	movw	r30, r12
    3830:	61 91       	ld	r22, Z+
    3832:	6f 01       	movw	r12, r30
    3834:	28 e1       	ldi	r18, 0x18	; 24
    3836:	41 2f       	mov	r20, r17
    3838:	80 ef       	ldi	r24, 0xF0	; 240
    383a:	91 e0       	ldi	r25, 0x01	; 1
    383c:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
    3840:	1a 5f       	subi	r17, 0xFA	; 250
    3842:	ce 14       	cp	r12, r14
    3844:	df 04       	cpc	r13, r15
    3846:	99 f7       	brne	.-26     	; 0x382e <main+0x3d0>
	oled.sendFrame();
    3848:	80 ef       	ldi	r24, 0xF0	; 240
    384a:	91 e0       	ldi	r25, 0x01	; 1
    384c:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN7Display9sendFrameEv>
    
	f_mount(0,"",0);
    3850:	40 e0       	ldi	r20, 0x00	; 0
    3852:	63 e5       	ldi	r22, 0x53	; 83
    3854:	71 e0       	ldi	r23, 0x01	; 1
    3856:	80 e0       	ldi	r24, 0x00	; 0
    3858:	90 e0       	ldi	r25, 0x00	; 0
    385a:	30 d9       	rcall	.-3488   	; 0x2abc <f_mount>
	oled.draw_ASCI('9',9*charsize,0*charhighte);
    385c:	20 e0       	ldi	r18, 0x00	; 0
    385e:	46 e3       	ldi	r20, 0x36	; 54
    3860:	69 e3       	ldi	r22, 0x39	; 57
    3862:	80 ef       	ldi	r24, 0xF0	; 240
    3864:	91 e0       	ldi	r25, 0x01	; 1
    3866:	0e 94 77 06 	call	0xcee	; 0xcee <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    386a:	80 ef       	ldi	r24, 0xF0	; 240
    386c:	91 e0       	ldi	r25, 0x01	; 1
    386e:	0e 94 40 06 	call	0xc80	; 0xc80 <_ZN7Display9sendFrameEv>
	
	
    while (1) 
    {
    }
    3872:	ff cf       	rjmp	.-2      	; 0x3872 <main+0x414>

00003874 <_GLOBAL__sub_I_oled>:
	#include "diskio.h"	
	#include "ff.h"
};

#include "Display.h"
Display oled;
    3874:	80 ef       	ldi	r24, 0xF0	; 240
    3876:	91 e0       	ldi	r25, 0x01	; 1
    3878:	0c 94 33 06 	jmp	0xc66	; 0xc66 <_ZN7DisplayC1Ev>
    387c:	08 95       	ret

0000387e <_GLOBAL__sub_D_oled>:
    387e:	80 ef       	ldi	r24, 0xF0	; 240
    3880:	91 e0       	ldi	r25, 0x01	; 1
    3882:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <_ZN7DisplayD1Ev>
    3886:	08 95       	ret

00003888 <__udivmodsi4>:
    3888:	a1 e2       	ldi	r26, 0x21	; 33
    388a:	1a 2e       	mov	r1, r26
    388c:	aa 1b       	sub	r26, r26
    388e:	bb 1b       	sub	r27, r27
    3890:	fd 01       	movw	r30, r26
    3892:	0d c0       	rjmp	.+26     	; 0x38ae <__udivmodsi4_ep>

00003894 <__udivmodsi4_loop>:
    3894:	aa 1f       	adc	r26, r26
    3896:	bb 1f       	adc	r27, r27
    3898:	ee 1f       	adc	r30, r30
    389a:	ff 1f       	adc	r31, r31
    389c:	a2 17       	cp	r26, r18
    389e:	b3 07       	cpc	r27, r19
    38a0:	e4 07       	cpc	r30, r20
    38a2:	f5 07       	cpc	r31, r21
    38a4:	20 f0       	brcs	.+8      	; 0x38ae <__udivmodsi4_ep>
    38a6:	a2 1b       	sub	r26, r18
    38a8:	b3 0b       	sbc	r27, r19
    38aa:	e4 0b       	sbc	r30, r20
    38ac:	f5 0b       	sbc	r31, r21

000038ae <__udivmodsi4_ep>:
    38ae:	66 1f       	adc	r22, r22
    38b0:	77 1f       	adc	r23, r23
    38b2:	88 1f       	adc	r24, r24
    38b4:	99 1f       	adc	r25, r25
    38b6:	1a 94       	dec	r1
    38b8:	69 f7       	brne	.-38     	; 0x3894 <__udivmodsi4_loop>
    38ba:	60 95       	com	r22
    38bc:	70 95       	com	r23
    38be:	80 95       	com	r24
    38c0:	90 95       	com	r25
    38c2:	9b 01       	movw	r18, r22
    38c4:	ac 01       	movw	r20, r24
    38c6:	bd 01       	movw	r22, r26
    38c8:	cf 01       	movw	r24, r30
    38ca:	08 95       	ret

000038cc <__tablejump2__>:
    38cc:	ee 0f       	add	r30, r30
    38ce:	ff 1f       	adc	r31, r31
    38d0:	00 24       	eor	r0, r0
    38d2:	00 1c       	adc	r0, r0
    38d4:	0b be       	out	0x3b, r0	; 59
    38d6:	07 90       	elpm	r0, Z+
    38d8:	f6 91       	elpm	r31, Z
    38da:	e0 2d       	mov	r30, r0
    38dc:	09 94       	ijmp

000038de <__muluhisi3>:
    38de:	09 d0       	rcall	.+18     	; 0x38f2 <__umulhisi3>
    38e0:	a5 9f       	mul	r26, r21
    38e2:	90 0d       	add	r25, r0
    38e4:	b4 9f       	mul	r27, r20
    38e6:	90 0d       	add	r25, r0
    38e8:	a4 9f       	mul	r26, r20
    38ea:	80 0d       	add	r24, r0
    38ec:	91 1d       	adc	r25, r1
    38ee:	11 24       	eor	r1, r1
    38f0:	08 95       	ret

000038f2 <__umulhisi3>:
    38f2:	a2 9f       	mul	r26, r18
    38f4:	b0 01       	movw	r22, r0
    38f6:	b3 9f       	mul	r27, r19
    38f8:	c0 01       	movw	r24, r0
    38fa:	a3 9f       	mul	r26, r19
    38fc:	70 0d       	add	r23, r0
    38fe:	81 1d       	adc	r24, r1
    3900:	11 24       	eor	r1, r1
    3902:	91 1d       	adc	r25, r1
    3904:	b2 9f       	mul	r27, r18
    3906:	70 0d       	add	r23, r0
    3908:	81 1d       	adc	r24, r1
    390a:	11 24       	eor	r1, r1
    390c:	91 1d       	adc	r25, r1
    390e:	08 95       	ret

00003910 <sprintf>:
    3910:	0f 93       	push	r16
    3912:	1f 93       	push	r17
    3914:	cf 93       	push	r28
    3916:	df 93       	push	r29
    3918:	cd b7       	in	r28, 0x3d	; 61
    391a:	de b7       	in	r29, 0x3e	; 62
    391c:	2e 97       	sbiw	r28, 0x0e	; 14
    391e:	0f b6       	in	r0, 0x3f	; 63
    3920:	f8 94       	cli
    3922:	de bf       	out	0x3e, r29	; 62
    3924:	0f be       	out	0x3f, r0	; 63
    3926:	cd bf       	out	0x3d, r28	; 61
    3928:	0d 89       	ldd	r16, Y+21	; 0x15
    392a:	1e 89       	ldd	r17, Y+22	; 0x16
    392c:	86 e0       	ldi	r24, 0x06	; 6
    392e:	8c 83       	std	Y+4, r24	; 0x04
    3930:	1a 83       	std	Y+2, r17	; 0x02
    3932:	09 83       	std	Y+1, r16	; 0x01
    3934:	8f ef       	ldi	r24, 0xFF	; 255
    3936:	9f e7       	ldi	r25, 0x7F	; 127
    3938:	9e 83       	std	Y+6, r25	; 0x06
    393a:	8d 83       	std	Y+5, r24	; 0x05
    393c:	ae 01       	movw	r20, r28
    393e:	47 5e       	subi	r20, 0xE7	; 231
    3940:	5f 4f       	sbci	r21, 0xFF	; 255
    3942:	6f 89       	ldd	r22, Y+23	; 0x17
    3944:	78 8d       	ldd	r23, Y+24	; 0x18
    3946:	ce 01       	movw	r24, r28
    3948:	01 96       	adiw	r24, 0x01	; 1
    394a:	11 d0       	rcall	.+34     	; 0x396e <vfprintf>
    394c:	2f 81       	ldd	r18, Y+7	; 0x07
    394e:	38 85       	ldd	r19, Y+8	; 0x08
    3950:	f8 01       	movw	r30, r16
    3952:	e2 0f       	add	r30, r18
    3954:	f3 1f       	adc	r31, r19
    3956:	10 82       	st	Z, r1
    3958:	2e 96       	adiw	r28, 0x0e	; 14
    395a:	0f b6       	in	r0, 0x3f	; 63
    395c:	f8 94       	cli
    395e:	de bf       	out	0x3e, r29	; 62
    3960:	0f be       	out	0x3f, r0	; 63
    3962:	cd bf       	out	0x3d, r28	; 61
    3964:	df 91       	pop	r29
    3966:	cf 91       	pop	r28
    3968:	1f 91       	pop	r17
    396a:	0f 91       	pop	r16
    396c:	08 95       	ret

0000396e <vfprintf>:
    396e:	2f 92       	push	r2
    3970:	3f 92       	push	r3
    3972:	4f 92       	push	r4
    3974:	5f 92       	push	r5
    3976:	6f 92       	push	r6
    3978:	7f 92       	push	r7
    397a:	8f 92       	push	r8
    397c:	9f 92       	push	r9
    397e:	af 92       	push	r10
    3980:	bf 92       	push	r11
    3982:	cf 92       	push	r12
    3984:	df 92       	push	r13
    3986:	ef 92       	push	r14
    3988:	ff 92       	push	r15
    398a:	0f 93       	push	r16
    398c:	1f 93       	push	r17
    398e:	cf 93       	push	r28
    3990:	df 93       	push	r29
    3992:	cd b7       	in	r28, 0x3d	; 61
    3994:	de b7       	in	r29, 0x3e	; 62
    3996:	2c 97       	sbiw	r28, 0x0c	; 12
    3998:	0f b6       	in	r0, 0x3f	; 63
    399a:	f8 94       	cli
    399c:	de bf       	out	0x3e, r29	; 62
    399e:	0f be       	out	0x3f, r0	; 63
    39a0:	cd bf       	out	0x3d, r28	; 61
    39a2:	7c 01       	movw	r14, r24
    39a4:	6b 01       	movw	r12, r22
    39a6:	8a 01       	movw	r16, r20
    39a8:	fc 01       	movw	r30, r24
    39aa:	17 82       	std	Z+7, r1	; 0x07
    39ac:	16 82       	std	Z+6, r1	; 0x06
    39ae:	83 81       	ldd	r24, Z+3	; 0x03
    39b0:	81 ff       	sbrs	r24, 1
    39b2:	b0 c1       	rjmp	.+864    	; 0x3d14 <vfprintf+0x3a6>
    39b4:	ce 01       	movw	r24, r28
    39b6:	01 96       	adiw	r24, 0x01	; 1
    39b8:	4c 01       	movw	r8, r24
    39ba:	f7 01       	movw	r30, r14
    39bc:	93 81       	ldd	r25, Z+3	; 0x03
    39be:	f6 01       	movw	r30, r12
    39c0:	93 fd       	sbrc	r25, 3
    39c2:	85 91       	lpm	r24, Z+
    39c4:	93 ff       	sbrs	r25, 3
    39c6:	81 91       	ld	r24, Z+
    39c8:	6f 01       	movw	r12, r30
    39ca:	88 23       	and	r24, r24
    39cc:	09 f4       	brne	.+2      	; 0x39d0 <vfprintf+0x62>
    39ce:	9e c1       	rjmp	.+828    	; 0x3d0c <vfprintf+0x39e>
    39d0:	85 32       	cpi	r24, 0x25	; 37
    39d2:	39 f4       	brne	.+14     	; 0x39e2 <vfprintf+0x74>
    39d4:	93 fd       	sbrc	r25, 3
    39d6:	85 91       	lpm	r24, Z+
    39d8:	93 ff       	sbrs	r25, 3
    39da:	81 91       	ld	r24, Z+
    39dc:	6f 01       	movw	r12, r30
    39de:	85 32       	cpi	r24, 0x25	; 37
    39e0:	21 f4       	brne	.+8      	; 0x39ea <vfprintf+0x7c>
    39e2:	b7 01       	movw	r22, r14
    39e4:	90 e0       	ldi	r25, 0x00	; 0
    39e6:	c7 d1       	rcall	.+910    	; 0x3d76 <fputc>
    39e8:	e8 cf       	rjmp	.-48     	; 0x39ba <vfprintf+0x4c>
    39ea:	51 2c       	mov	r5, r1
    39ec:	31 2c       	mov	r3, r1
    39ee:	20 e0       	ldi	r18, 0x00	; 0
    39f0:	20 32       	cpi	r18, 0x20	; 32
    39f2:	a0 f4       	brcc	.+40     	; 0x3a1c <vfprintf+0xae>
    39f4:	8b 32       	cpi	r24, 0x2B	; 43
    39f6:	69 f0       	breq	.+26     	; 0x3a12 <vfprintf+0xa4>
    39f8:	30 f4       	brcc	.+12     	; 0x3a06 <vfprintf+0x98>
    39fa:	80 32       	cpi	r24, 0x20	; 32
    39fc:	59 f0       	breq	.+22     	; 0x3a14 <vfprintf+0xa6>
    39fe:	83 32       	cpi	r24, 0x23	; 35
    3a00:	69 f4       	brne	.+26     	; 0x3a1c <vfprintf+0xae>
    3a02:	20 61       	ori	r18, 0x10	; 16
    3a04:	2c c0       	rjmp	.+88     	; 0x3a5e <vfprintf+0xf0>
    3a06:	8d 32       	cpi	r24, 0x2D	; 45
    3a08:	39 f0       	breq	.+14     	; 0x3a18 <vfprintf+0xaa>
    3a0a:	80 33       	cpi	r24, 0x30	; 48
    3a0c:	39 f4       	brne	.+14     	; 0x3a1c <vfprintf+0xae>
    3a0e:	21 60       	ori	r18, 0x01	; 1
    3a10:	26 c0       	rjmp	.+76     	; 0x3a5e <vfprintf+0xf0>
    3a12:	22 60       	ori	r18, 0x02	; 2
    3a14:	24 60       	ori	r18, 0x04	; 4
    3a16:	23 c0       	rjmp	.+70     	; 0x3a5e <vfprintf+0xf0>
    3a18:	28 60       	ori	r18, 0x08	; 8
    3a1a:	21 c0       	rjmp	.+66     	; 0x3a5e <vfprintf+0xf0>
    3a1c:	27 fd       	sbrc	r18, 7
    3a1e:	27 c0       	rjmp	.+78     	; 0x3a6e <vfprintf+0x100>
    3a20:	30 ed       	ldi	r19, 0xD0	; 208
    3a22:	38 0f       	add	r19, r24
    3a24:	3a 30       	cpi	r19, 0x0A	; 10
    3a26:	78 f4       	brcc	.+30     	; 0x3a46 <vfprintf+0xd8>
    3a28:	26 ff       	sbrs	r18, 6
    3a2a:	06 c0       	rjmp	.+12     	; 0x3a38 <vfprintf+0xca>
    3a2c:	fa e0       	ldi	r31, 0x0A	; 10
    3a2e:	5f 9e       	mul	r5, r31
    3a30:	30 0d       	add	r19, r0
    3a32:	11 24       	eor	r1, r1
    3a34:	53 2e       	mov	r5, r19
    3a36:	13 c0       	rjmp	.+38     	; 0x3a5e <vfprintf+0xf0>
    3a38:	8a e0       	ldi	r24, 0x0A	; 10
    3a3a:	38 9e       	mul	r3, r24
    3a3c:	30 0d       	add	r19, r0
    3a3e:	11 24       	eor	r1, r1
    3a40:	33 2e       	mov	r3, r19
    3a42:	20 62       	ori	r18, 0x20	; 32
    3a44:	0c c0       	rjmp	.+24     	; 0x3a5e <vfprintf+0xf0>
    3a46:	8e 32       	cpi	r24, 0x2E	; 46
    3a48:	21 f4       	brne	.+8      	; 0x3a52 <vfprintf+0xe4>
    3a4a:	26 fd       	sbrc	r18, 6
    3a4c:	5f c1       	rjmp	.+702    	; 0x3d0c <vfprintf+0x39e>
    3a4e:	20 64       	ori	r18, 0x40	; 64
    3a50:	06 c0       	rjmp	.+12     	; 0x3a5e <vfprintf+0xf0>
    3a52:	8c 36       	cpi	r24, 0x6C	; 108
    3a54:	11 f4       	brne	.+4      	; 0x3a5a <vfprintf+0xec>
    3a56:	20 68       	ori	r18, 0x80	; 128
    3a58:	02 c0       	rjmp	.+4      	; 0x3a5e <vfprintf+0xf0>
    3a5a:	88 36       	cpi	r24, 0x68	; 104
    3a5c:	41 f4       	brne	.+16     	; 0x3a6e <vfprintf+0x100>
    3a5e:	f6 01       	movw	r30, r12
    3a60:	93 fd       	sbrc	r25, 3
    3a62:	85 91       	lpm	r24, Z+
    3a64:	93 ff       	sbrs	r25, 3
    3a66:	81 91       	ld	r24, Z+
    3a68:	6f 01       	movw	r12, r30
    3a6a:	81 11       	cpse	r24, r1
    3a6c:	c1 cf       	rjmp	.-126    	; 0x39f0 <vfprintf+0x82>
    3a6e:	98 2f       	mov	r25, r24
    3a70:	9f 7d       	andi	r25, 0xDF	; 223
    3a72:	95 54       	subi	r25, 0x45	; 69
    3a74:	93 30       	cpi	r25, 0x03	; 3
    3a76:	28 f4       	brcc	.+10     	; 0x3a82 <vfprintf+0x114>
    3a78:	0c 5f       	subi	r16, 0xFC	; 252
    3a7a:	1f 4f       	sbci	r17, 0xFF	; 255
    3a7c:	ff e3       	ldi	r31, 0x3F	; 63
    3a7e:	f9 83       	std	Y+1, r31	; 0x01
    3a80:	0d c0       	rjmp	.+26     	; 0x3a9c <vfprintf+0x12e>
    3a82:	83 36       	cpi	r24, 0x63	; 99
    3a84:	31 f0       	breq	.+12     	; 0x3a92 <vfprintf+0x124>
    3a86:	83 37       	cpi	r24, 0x73	; 115
    3a88:	71 f0       	breq	.+28     	; 0x3aa6 <vfprintf+0x138>
    3a8a:	83 35       	cpi	r24, 0x53	; 83
    3a8c:	09 f0       	breq	.+2      	; 0x3a90 <vfprintf+0x122>
    3a8e:	57 c0       	rjmp	.+174    	; 0x3b3e <vfprintf+0x1d0>
    3a90:	21 c0       	rjmp	.+66     	; 0x3ad4 <vfprintf+0x166>
    3a92:	f8 01       	movw	r30, r16
    3a94:	80 81       	ld	r24, Z
    3a96:	89 83       	std	Y+1, r24	; 0x01
    3a98:	0e 5f       	subi	r16, 0xFE	; 254
    3a9a:	1f 4f       	sbci	r17, 0xFF	; 255
    3a9c:	44 24       	eor	r4, r4
    3a9e:	43 94       	inc	r4
    3aa0:	51 2c       	mov	r5, r1
    3aa2:	54 01       	movw	r10, r8
    3aa4:	14 c0       	rjmp	.+40     	; 0x3ace <vfprintf+0x160>
    3aa6:	38 01       	movw	r6, r16
    3aa8:	f2 e0       	ldi	r31, 0x02	; 2
    3aaa:	6f 0e       	add	r6, r31
    3aac:	71 1c       	adc	r7, r1
    3aae:	f8 01       	movw	r30, r16
    3ab0:	a0 80       	ld	r10, Z
    3ab2:	b1 80       	ldd	r11, Z+1	; 0x01
    3ab4:	26 ff       	sbrs	r18, 6
    3ab6:	03 c0       	rjmp	.+6      	; 0x3abe <vfprintf+0x150>
    3ab8:	65 2d       	mov	r22, r5
    3aba:	70 e0       	ldi	r23, 0x00	; 0
    3abc:	02 c0       	rjmp	.+4      	; 0x3ac2 <vfprintf+0x154>
    3abe:	6f ef       	ldi	r22, 0xFF	; 255
    3ac0:	7f ef       	ldi	r23, 0xFF	; 255
    3ac2:	c5 01       	movw	r24, r10
    3ac4:	2c 87       	std	Y+12, r18	; 0x0c
    3ac6:	4c d1       	rcall	.+664    	; 0x3d60 <strnlen>
    3ac8:	2c 01       	movw	r4, r24
    3aca:	83 01       	movw	r16, r6
    3acc:	2c 85       	ldd	r18, Y+12	; 0x0c
    3ace:	2f 77       	andi	r18, 0x7F	; 127
    3ad0:	22 2e       	mov	r2, r18
    3ad2:	16 c0       	rjmp	.+44     	; 0x3b00 <vfprintf+0x192>
    3ad4:	38 01       	movw	r6, r16
    3ad6:	f2 e0       	ldi	r31, 0x02	; 2
    3ad8:	6f 0e       	add	r6, r31
    3ada:	71 1c       	adc	r7, r1
    3adc:	f8 01       	movw	r30, r16
    3ade:	a0 80       	ld	r10, Z
    3ae0:	b1 80       	ldd	r11, Z+1	; 0x01
    3ae2:	26 ff       	sbrs	r18, 6
    3ae4:	03 c0       	rjmp	.+6      	; 0x3aec <vfprintf+0x17e>
    3ae6:	65 2d       	mov	r22, r5
    3ae8:	70 e0       	ldi	r23, 0x00	; 0
    3aea:	02 c0       	rjmp	.+4      	; 0x3af0 <vfprintf+0x182>
    3aec:	6f ef       	ldi	r22, 0xFF	; 255
    3aee:	7f ef       	ldi	r23, 0xFF	; 255
    3af0:	c5 01       	movw	r24, r10
    3af2:	2c 87       	std	Y+12, r18	; 0x0c
    3af4:	2a d1       	rcall	.+596    	; 0x3d4a <strnlen_P>
    3af6:	2c 01       	movw	r4, r24
    3af8:	2c 85       	ldd	r18, Y+12	; 0x0c
    3afa:	20 68       	ori	r18, 0x80	; 128
    3afc:	22 2e       	mov	r2, r18
    3afe:	83 01       	movw	r16, r6
    3b00:	23 fc       	sbrc	r2, 3
    3b02:	19 c0       	rjmp	.+50     	; 0x3b36 <vfprintf+0x1c8>
    3b04:	83 2d       	mov	r24, r3
    3b06:	90 e0       	ldi	r25, 0x00	; 0
    3b08:	48 16       	cp	r4, r24
    3b0a:	59 06       	cpc	r5, r25
    3b0c:	a0 f4       	brcc	.+40     	; 0x3b36 <vfprintf+0x1c8>
    3b0e:	b7 01       	movw	r22, r14
    3b10:	80 e2       	ldi	r24, 0x20	; 32
    3b12:	90 e0       	ldi	r25, 0x00	; 0
    3b14:	30 d1       	rcall	.+608    	; 0x3d76 <fputc>
    3b16:	3a 94       	dec	r3
    3b18:	f5 cf       	rjmp	.-22     	; 0x3b04 <vfprintf+0x196>
    3b1a:	f5 01       	movw	r30, r10
    3b1c:	27 fc       	sbrc	r2, 7
    3b1e:	85 91       	lpm	r24, Z+
    3b20:	27 fe       	sbrs	r2, 7
    3b22:	81 91       	ld	r24, Z+
    3b24:	5f 01       	movw	r10, r30
    3b26:	b7 01       	movw	r22, r14
    3b28:	90 e0       	ldi	r25, 0x00	; 0
    3b2a:	25 d1       	rcall	.+586    	; 0x3d76 <fputc>
    3b2c:	31 10       	cpse	r3, r1
    3b2e:	3a 94       	dec	r3
    3b30:	f1 e0       	ldi	r31, 0x01	; 1
    3b32:	4f 1a       	sub	r4, r31
    3b34:	51 08       	sbc	r5, r1
    3b36:	41 14       	cp	r4, r1
    3b38:	51 04       	cpc	r5, r1
    3b3a:	79 f7       	brne	.-34     	; 0x3b1a <vfprintf+0x1ac>
    3b3c:	de c0       	rjmp	.+444    	; 0x3cfa <vfprintf+0x38c>
    3b3e:	84 36       	cpi	r24, 0x64	; 100
    3b40:	11 f0       	breq	.+4      	; 0x3b46 <vfprintf+0x1d8>
    3b42:	89 36       	cpi	r24, 0x69	; 105
    3b44:	31 f5       	brne	.+76     	; 0x3b92 <vfprintf+0x224>
    3b46:	f8 01       	movw	r30, r16
    3b48:	27 ff       	sbrs	r18, 7
    3b4a:	07 c0       	rjmp	.+14     	; 0x3b5a <vfprintf+0x1ec>
    3b4c:	60 81       	ld	r22, Z
    3b4e:	71 81       	ldd	r23, Z+1	; 0x01
    3b50:	82 81       	ldd	r24, Z+2	; 0x02
    3b52:	93 81       	ldd	r25, Z+3	; 0x03
    3b54:	0c 5f       	subi	r16, 0xFC	; 252
    3b56:	1f 4f       	sbci	r17, 0xFF	; 255
    3b58:	08 c0       	rjmp	.+16     	; 0x3b6a <vfprintf+0x1fc>
    3b5a:	60 81       	ld	r22, Z
    3b5c:	71 81       	ldd	r23, Z+1	; 0x01
    3b5e:	07 2e       	mov	r0, r23
    3b60:	00 0c       	add	r0, r0
    3b62:	88 0b       	sbc	r24, r24
    3b64:	99 0b       	sbc	r25, r25
    3b66:	0e 5f       	subi	r16, 0xFE	; 254
    3b68:	1f 4f       	sbci	r17, 0xFF	; 255
    3b6a:	2f 76       	andi	r18, 0x6F	; 111
    3b6c:	72 2e       	mov	r7, r18
    3b6e:	97 ff       	sbrs	r25, 7
    3b70:	09 c0       	rjmp	.+18     	; 0x3b84 <vfprintf+0x216>
    3b72:	90 95       	com	r25
    3b74:	80 95       	com	r24
    3b76:	70 95       	com	r23
    3b78:	61 95       	neg	r22
    3b7a:	7f 4f       	sbci	r23, 0xFF	; 255
    3b7c:	8f 4f       	sbci	r24, 0xFF	; 255
    3b7e:	9f 4f       	sbci	r25, 0xFF	; 255
    3b80:	20 68       	ori	r18, 0x80	; 128
    3b82:	72 2e       	mov	r7, r18
    3b84:	2a e0       	ldi	r18, 0x0A	; 10
    3b86:	30 e0       	ldi	r19, 0x00	; 0
    3b88:	a4 01       	movw	r20, r8
    3b8a:	2d d1       	rcall	.+602    	; 0x3de6 <__ultoa_invert>
    3b8c:	a8 2e       	mov	r10, r24
    3b8e:	a8 18       	sub	r10, r8
    3b90:	43 c0       	rjmp	.+134    	; 0x3c18 <vfprintf+0x2aa>
    3b92:	85 37       	cpi	r24, 0x75	; 117
    3b94:	29 f4       	brne	.+10     	; 0x3ba0 <vfprintf+0x232>
    3b96:	2f 7e       	andi	r18, 0xEF	; 239
    3b98:	b2 2e       	mov	r11, r18
    3b9a:	2a e0       	ldi	r18, 0x0A	; 10
    3b9c:	30 e0       	ldi	r19, 0x00	; 0
    3b9e:	25 c0       	rjmp	.+74     	; 0x3bea <vfprintf+0x27c>
    3ba0:	f2 2f       	mov	r31, r18
    3ba2:	f9 7f       	andi	r31, 0xF9	; 249
    3ba4:	bf 2e       	mov	r11, r31
    3ba6:	8f 36       	cpi	r24, 0x6F	; 111
    3ba8:	c1 f0       	breq	.+48     	; 0x3bda <vfprintf+0x26c>
    3baa:	18 f4       	brcc	.+6      	; 0x3bb2 <vfprintf+0x244>
    3bac:	88 35       	cpi	r24, 0x58	; 88
    3bae:	79 f0       	breq	.+30     	; 0x3bce <vfprintf+0x260>
    3bb0:	ad c0       	rjmp	.+346    	; 0x3d0c <vfprintf+0x39e>
    3bb2:	80 37       	cpi	r24, 0x70	; 112
    3bb4:	19 f0       	breq	.+6      	; 0x3bbc <vfprintf+0x24e>
    3bb6:	88 37       	cpi	r24, 0x78	; 120
    3bb8:	21 f0       	breq	.+8      	; 0x3bc2 <vfprintf+0x254>
    3bba:	a8 c0       	rjmp	.+336    	; 0x3d0c <vfprintf+0x39e>
    3bbc:	2f 2f       	mov	r18, r31
    3bbe:	20 61       	ori	r18, 0x10	; 16
    3bc0:	b2 2e       	mov	r11, r18
    3bc2:	b4 fe       	sbrs	r11, 4
    3bc4:	0d c0       	rjmp	.+26     	; 0x3be0 <vfprintf+0x272>
    3bc6:	8b 2d       	mov	r24, r11
    3bc8:	84 60       	ori	r24, 0x04	; 4
    3bca:	b8 2e       	mov	r11, r24
    3bcc:	09 c0       	rjmp	.+18     	; 0x3be0 <vfprintf+0x272>
    3bce:	24 ff       	sbrs	r18, 4
    3bd0:	0a c0       	rjmp	.+20     	; 0x3be6 <vfprintf+0x278>
    3bd2:	9f 2f       	mov	r25, r31
    3bd4:	96 60       	ori	r25, 0x06	; 6
    3bd6:	b9 2e       	mov	r11, r25
    3bd8:	06 c0       	rjmp	.+12     	; 0x3be6 <vfprintf+0x278>
    3bda:	28 e0       	ldi	r18, 0x08	; 8
    3bdc:	30 e0       	ldi	r19, 0x00	; 0
    3bde:	05 c0       	rjmp	.+10     	; 0x3bea <vfprintf+0x27c>
    3be0:	20 e1       	ldi	r18, 0x10	; 16
    3be2:	30 e0       	ldi	r19, 0x00	; 0
    3be4:	02 c0       	rjmp	.+4      	; 0x3bea <vfprintf+0x27c>
    3be6:	20 e1       	ldi	r18, 0x10	; 16
    3be8:	32 e0       	ldi	r19, 0x02	; 2
    3bea:	f8 01       	movw	r30, r16
    3bec:	b7 fe       	sbrs	r11, 7
    3bee:	07 c0       	rjmp	.+14     	; 0x3bfe <vfprintf+0x290>
    3bf0:	60 81       	ld	r22, Z
    3bf2:	71 81       	ldd	r23, Z+1	; 0x01
    3bf4:	82 81       	ldd	r24, Z+2	; 0x02
    3bf6:	93 81       	ldd	r25, Z+3	; 0x03
    3bf8:	0c 5f       	subi	r16, 0xFC	; 252
    3bfa:	1f 4f       	sbci	r17, 0xFF	; 255
    3bfc:	06 c0       	rjmp	.+12     	; 0x3c0a <vfprintf+0x29c>
    3bfe:	60 81       	ld	r22, Z
    3c00:	71 81       	ldd	r23, Z+1	; 0x01
    3c02:	80 e0       	ldi	r24, 0x00	; 0
    3c04:	90 e0       	ldi	r25, 0x00	; 0
    3c06:	0e 5f       	subi	r16, 0xFE	; 254
    3c08:	1f 4f       	sbci	r17, 0xFF	; 255
    3c0a:	a4 01       	movw	r20, r8
    3c0c:	ec d0       	rcall	.+472    	; 0x3de6 <__ultoa_invert>
    3c0e:	a8 2e       	mov	r10, r24
    3c10:	a8 18       	sub	r10, r8
    3c12:	fb 2d       	mov	r31, r11
    3c14:	ff 77       	andi	r31, 0x7F	; 127
    3c16:	7f 2e       	mov	r7, r31
    3c18:	76 fe       	sbrs	r7, 6
    3c1a:	0b c0       	rjmp	.+22     	; 0x3c32 <vfprintf+0x2c4>
    3c1c:	37 2d       	mov	r19, r7
    3c1e:	3e 7f       	andi	r19, 0xFE	; 254
    3c20:	a5 14       	cp	r10, r5
    3c22:	50 f4       	brcc	.+20     	; 0x3c38 <vfprintf+0x2ca>
    3c24:	74 fe       	sbrs	r7, 4
    3c26:	0a c0       	rjmp	.+20     	; 0x3c3c <vfprintf+0x2ce>
    3c28:	72 fc       	sbrc	r7, 2
    3c2a:	08 c0       	rjmp	.+16     	; 0x3c3c <vfprintf+0x2ce>
    3c2c:	37 2d       	mov	r19, r7
    3c2e:	3e 7e       	andi	r19, 0xEE	; 238
    3c30:	05 c0       	rjmp	.+10     	; 0x3c3c <vfprintf+0x2ce>
    3c32:	ba 2c       	mov	r11, r10
    3c34:	37 2d       	mov	r19, r7
    3c36:	03 c0       	rjmp	.+6      	; 0x3c3e <vfprintf+0x2d0>
    3c38:	ba 2c       	mov	r11, r10
    3c3a:	01 c0       	rjmp	.+2      	; 0x3c3e <vfprintf+0x2d0>
    3c3c:	b5 2c       	mov	r11, r5
    3c3e:	34 ff       	sbrs	r19, 4
    3c40:	0d c0       	rjmp	.+26     	; 0x3c5c <vfprintf+0x2ee>
    3c42:	fe 01       	movw	r30, r28
    3c44:	ea 0d       	add	r30, r10
    3c46:	f1 1d       	adc	r31, r1
    3c48:	80 81       	ld	r24, Z
    3c4a:	80 33       	cpi	r24, 0x30	; 48
    3c4c:	11 f4       	brne	.+4      	; 0x3c52 <vfprintf+0x2e4>
    3c4e:	39 7e       	andi	r19, 0xE9	; 233
    3c50:	09 c0       	rjmp	.+18     	; 0x3c64 <vfprintf+0x2f6>
    3c52:	32 ff       	sbrs	r19, 2
    3c54:	06 c0       	rjmp	.+12     	; 0x3c62 <vfprintf+0x2f4>
    3c56:	b3 94       	inc	r11
    3c58:	b3 94       	inc	r11
    3c5a:	04 c0       	rjmp	.+8      	; 0x3c64 <vfprintf+0x2f6>
    3c5c:	83 2f       	mov	r24, r19
    3c5e:	86 78       	andi	r24, 0x86	; 134
    3c60:	09 f0       	breq	.+2      	; 0x3c64 <vfprintf+0x2f6>
    3c62:	b3 94       	inc	r11
    3c64:	33 fd       	sbrc	r19, 3
    3c66:	12 c0       	rjmp	.+36     	; 0x3c8c <vfprintf+0x31e>
    3c68:	30 ff       	sbrs	r19, 0
    3c6a:	06 c0       	rjmp	.+12     	; 0x3c78 <vfprintf+0x30a>
    3c6c:	5a 2c       	mov	r5, r10
    3c6e:	b3 14       	cp	r11, r3
    3c70:	18 f4       	brcc	.+6      	; 0x3c78 <vfprintf+0x30a>
    3c72:	53 0c       	add	r5, r3
    3c74:	5b 18       	sub	r5, r11
    3c76:	b3 2c       	mov	r11, r3
    3c78:	b3 14       	cp	r11, r3
    3c7a:	60 f4       	brcc	.+24     	; 0x3c94 <vfprintf+0x326>
    3c7c:	b7 01       	movw	r22, r14
    3c7e:	80 e2       	ldi	r24, 0x20	; 32
    3c80:	90 e0       	ldi	r25, 0x00	; 0
    3c82:	3c 87       	std	Y+12, r19	; 0x0c
    3c84:	78 d0       	rcall	.+240    	; 0x3d76 <fputc>
    3c86:	b3 94       	inc	r11
    3c88:	3c 85       	ldd	r19, Y+12	; 0x0c
    3c8a:	f6 cf       	rjmp	.-20     	; 0x3c78 <vfprintf+0x30a>
    3c8c:	b3 14       	cp	r11, r3
    3c8e:	10 f4       	brcc	.+4      	; 0x3c94 <vfprintf+0x326>
    3c90:	3b 18       	sub	r3, r11
    3c92:	01 c0       	rjmp	.+2      	; 0x3c96 <vfprintf+0x328>
    3c94:	31 2c       	mov	r3, r1
    3c96:	34 ff       	sbrs	r19, 4
    3c98:	11 c0       	rjmp	.+34     	; 0x3cbc <vfprintf+0x34e>
    3c9a:	b7 01       	movw	r22, r14
    3c9c:	80 e3       	ldi	r24, 0x30	; 48
    3c9e:	90 e0       	ldi	r25, 0x00	; 0
    3ca0:	3c 87       	std	Y+12, r19	; 0x0c
    3ca2:	69 d0       	rcall	.+210    	; 0x3d76 <fputc>
    3ca4:	3c 85       	ldd	r19, Y+12	; 0x0c
    3ca6:	32 ff       	sbrs	r19, 2
    3ca8:	16 c0       	rjmp	.+44     	; 0x3cd6 <vfprintf+0x368>
    3caa:	31 fd       	sbrc	r19, 1
    3cac:	03 c0       	rjmp	.+6      	; 0x3cb4 <vfprintf+0x346>
    3cae:	88 e7       	ldi	r24, 0x78	; 120
    3cb0:	90 e0       	ldi	r25, 0x00	; 0
    3cb2:	02 c0       	rjmp	.+4      	; 0x3cb8 <vfprintf+0x34a>
    3cb4:	88 e5       	ldi	r24, 0x58	; 88
    3cb6:	90 e0       	ldi	r25, 0x00	; 0
    3cb8:	b7 01       	movw	r22, r14
    3cba:	0c c0       	rjmp	.+24     	; 0x3cd4 <vfprintf+0x366>
    3cbc:	83 2f       	mov	r24, r19
    3cbe:	86 78       	andi	r24, 0x86	; 134
    3cc0:	51 f0       	breq	.+20     	; 0x3cd6 <vfprintf+0x368>
    3cc2:	31 ff       	sbrs	r19, 1
    3cc4:	02 c0       	rjmp	.+4      	; 0x3cca <vfprintf+0x35c>
    3cc6:	8b e2       	ldi	r24, 0x2B	; 43
    3cc8:	01 c0       	rjmp	.+2      	; 0x3ccc <vfprintf+0x35e>
    3cca:	80 e2       	ldi	r24, 0x20	; 32
    3ccc:	37 fd       	sbrc	r19, 7
    3cce:	8d e2       	ldi	r24, 0x2D	; 45
    3cd0:	b7 01       	movw	r22, r14
    3cd2:	90 e0       	ldi	r25, 0x00	; 0
    3cd4:	50 d0       	rcall	.+160    	; 0x3d76 <fputc>
    3cd6:	a5 14       	cp	r10, r5
    3cd8:	30 f4       	brcc	.+12     	; 0x3ce6 <vfprintf+0x378>
    3cda:	b7 01       	movw	r22, r14
    3cdc:	80 e3       	ldi	r24, 0x30	; 48
    3cde:	90 e0       	ldi	r25, 0x00	; 0
    3ce0:	4a d0       	rcall	.+148    	; 0x3d76 <fputc>
    3ce2:	5a 94       	dec	r5
    3ce4:	f8 cf       	rjmp	.-16     	; 0x3cd6 <vfprintf+0x368>
    3ce6:	aa 94       	dec	r10
    3ce8:	f4 01       	movw	r30, r8
    3cea:	ea 0d       	add	r30, r10
    3cec:	f1 1d       	adc	r31, r1
    3cee:	80 81       	ld	r24, Z
    3cf0:	b7 01       	movw	r22, r14
    3cf2:	90 e0       	ldi	r25, 0x00	; 0
    3cf4:	40 d0       	rcall	.+128    	; 0x3d76 <fputc>
    3cf6:	a1 10       	cpse	r10, r1
    3cf8:	f6 cf       	rjmp	.-20     	; 0x3ce6 <vfprintf+0x378>
    3cfa:	33 20       	and	r3, r3
    3cfc:	09 f4       	brne	.+2      	; 0x3d00 <vfprintf+0x392>
    3cfe:	5d ce       	rjmp	.-838    	; 0x39ba <vfprintf+0x4c>
    3d00:	b7 01       	movw	r22, r14
    3d02:	80 e2       	ldi	r24, 0x20	; 32
    3d04:	90 e0       	ldi	r25, 0x00	; 0
    3d06:	37 d0       	rcall	.+110    	; 0x3d76 <fputc>
    3d08:	3a 94       	dec	r3
    3d0a:	f7 cf       	rjmp	.-18     	; 0x3cfa <vfprintf+0x38c>
    3d0c:	f7 01       	movw	r30, r14
    3d0e:	86 81       	ldd	r24, Z+6	; 0x06
    3d10:	97 81       	ldd	r25, Z+7	; 0x07
    3d12:	02 c0       	rjmp	.+4      	; 0x3d18 <vfprintf+0x3aa>
    3d14:	8f ef       	ldi	r24, 0xFF	; 255
    3d16:	9f ef       	ldi	r25, 0xFF	; 255
    3d18:	2c 96       	adiw	r28, 0x0c	; 12
    3d1a:	0f b6       	in	r0, 0x3f	; 63
    3d1c:	f8 94       	cli
    3d1e:	de bf       	out	0x3e, r29	; 62
    3d20:	0f be       	out	0x3f, r0	; 63
    3d22:	cd bf       	out	0x3d, r28	; 61
    3d24:	df 91       	pop	r29
    3d26:	cf 91       	pop	r28
    3d28:	1f 91       	pop	r17
    3d2a:	0f 91       	pop	r16
    3d2c:	ff 90       	pop	r15
    3d2e:	ef 90       	pop	r14
    3d30:	df 90       	pop	r13
    3d32:	cf 90       	pop	r12
    3d34:	bf 90       	pop	r11
    3d36:	af 90       	pop	r10
    3d38:	9f 90       	pop	r9
    3d3a:	8f 90       	pop	r8
    3d3c:	7f 90       	pop	r7
    3d3e:	6f 90       	pop	r6
    3d40:	5f 90       	pop	r5
    3d42:	4f 90       	pop	r4
    3d44:	3f 90       	pop	r3
    3d46:	2f 90       	pop	r2
    3d48:	08 95       	ret

00003d4a <strnlen_P>:
    3d4a:	fc 01       	movw	r30, r24
    3d4c:	05 90       	lpm	r0, Z+
    3d4e:	61 50       	subi	r22, 0x01	; 1
    3d50:	70 40       	sbci	r23, 0x00	; 0
    3d52:	01 10       	cpse	r0, r1
    3d54:	d8 f7       	brcc	.-10     	; 0x3d4c <strnlen_P+0x2>
    3d56:	80 95       	com	r24
    3d58:	90 95       	com	r25
    3d5a:	8e 0f       	add	r24, r30
    3d5c:	9f 1f       	adc	r25, r31
    3d5e:	08 95       	ret

00003d60 <strnlen>:
    3d60:	fc 01       	movw	r30, r24
    3d62:	61 50       	subi	r22, 0x01	; 1
    3d64:	70 40       	sbci	r23, 0x00	; 0
    3d66:	01 90       	ld	r0, Z+
    3d68:	01 10       	cpse	r0, r1
    3d6a:	d8 f7       	brcc	.-10     	; 0x3d62 <strnlen+0x2>
    3d6c:	80 95       	com	r24
    3d6e:	90 95       	com	r25
    3d70:	8e 0f       	add	r24, r30
    3d72:	9f 1f       	adc	r25, r31
    3d74:	08 95       	ret

00003d76 <fputc>:
    3d76:	0f 93       	push	r16
    3d78:	1f 93       	push	r17
    3d7a:	cf 93       	push	r28
    3d7c:	df 93       	push	r29
    3d7e:	fb 01       	movw	r30, r22
    3d80:	23 81       	ldd	r18, Z+3	; 0x03
    3d82:	21 fd       	sbrc	r18, 1
    3d84:	03 c0       	rjmp	.+6      	; 0x3d8c <fputc+0x16>
    3d86:	8f ef       	ldi	r24, 0xFF	; 255
    3d88:	9f ef       	ldi	r25, 0xFF	; 255
    3d8a:	28 c0       	rjmp	.+80     	; 0x3ddc <fputc+0x66>
    3d8c:	22 ff       	sbrs	r18, 2
    3d8e:	16 c0       	rjmp	.+44     	; 0x3dbc <fputc+0x46>
    3d90:	46 81       	ldd	r20, Z+6	; 0x06
    3d92:	57 81       	ldd	r21, Z+7	; 0x07
    3d94:	24 81       	ldd	r18, Z+4	; 0x04
    3d96:	35 81       	ldd	r19, Z+5	; 0x05
    3d98:	42 17       	cp	r20, r18
    3d9a:	53 07       	cpc	r21, r19
    3d9c:	44 f4       	brge	.+16     	; 0x3dae <fputc+0x38>
    3d9e:	a0 81       	ld	r26, Z
    3da0:	b1 81       	ldd	r27, Z+1	; 0x01
    3da2:	9d 01       	movw	r18, r26
    3da4:	2f 5f       	subi	r18, 0xFF	; 255
    3da6:	3f 4f       	sbci	r19, 0xFF	; 255
    3da8:	31 83       	std	Z+1, r19	; 0x01
    3daa:	20 83       	st	Z, r18
    3dac:	8c 93       	st	X, r24
    3dae:	26 81       	ldd	r18, Z+6	; 0x06
    3db0:	37 81       	ldd	r19, Z+7	; 0x07
    3db2:	2f 5f       	subi	r18, 0xFF	; 255
    3db4:	3f 4f       	sbci	r19, 0xFF	; 255
    3db6:	37 83       	std	Z+7, r19	; 0x07
    3db8:	26 83       	std	Z+6, r18	; 0x06
    3dba:	10 c0       	rjmp	.+32     	; 0x3ddc <fputc+0x66>
    3dbc:	eb 01       	movw	r28, r22
    3dbe:	09 2f       	mov	r16, r25
    3dc0:	18 2f       	mov	r17, r24
    3dc2:	00 84       	ldd	r0, Z+8	; 0x08
    3dc4:	f1 85       	ldd	r31, Z+9	; 0x09
    3dc6:	e0 2d       	mov	r30, r0
    3dc8:	09 95       	icall
    3dca:	89 2b       	or	r24, r25
    3dcc:	e1 f6       	brne	.-72     	; 0x3d86 <fputc+0x10>
    3dce:	8e 81       	ldd	r24, Y+6	; 0x06
    3dd0:	9f 81       	ldd	r25, Y+7	; 0x07
    3dd2:	01 96       	adiw	r24, 0x01	; 1
    3dd4:	9f 83       	std	Y+7, r25	; 0x07
    3dd6:	8e 83       	std	Y+6, r24	; 0x06
    3dd8:	81 2f       	mov	r24, r17
    3dda:	90 2f       	mov	r25, r16
    3ddc:	df 91       	pop	r29
    3dde:	cf 91       	pop	r28
    3de0:	1f 91       	pop	r17
    3de2:	0f 91       	pop	r16
    3de4:	08 95       	ret

00003de6 <__ultoa_invert>:
    3de6:	fa 01       	movw	r30, r20
    3de8:	aa 27       	eor	r26, r26
    3dea:	28 30       	cpi	r18, 0x08	; 8
    3dec:	51 f1       	breq	.+84     	; 0x3e42 <__ultoa_invert+0x5c>
    3dee:	20 31       	cpi	r18, 0x10	; 16
    3df0:	81 f1       	breq	.+96     	; 0x3e52 <__ultoa_invert+0x6c>
    3df2:	e8 94       	clt
    3df4:	6f 93       	push	r22
    3df6:	6e 7f       	andi	r22, 0xFE	; 254
    3df8:	6e 5f       	subi	r22, 0xFE	; 254
    3dfa:	7f 4f       	sbci	r23, 0xFF	; 255
    3dfc:	8f 4f       	sbci	r24, 0xFF	; 255
    3dfe:	9f 4f       	sbci	r25, 0xFF	; 255
    3e00:	af 4f       	sbci	r26, 0xFF	; 255
    3e02:	b1 e0       	ldi	r27, 0x01	; 1
    3e04:	3e d0       	rcall	.+124    	; 0x3e82 <__ultoa_invert+0x9c>
    3e06:	b4 e0       	ldi	r27, 0x04	; 4
    3e08:	3c d0       	rcall	.+120    	; 0x3e82 <__ultoa_invert+0x9c>
    3e0a:	67 0f       	add	r22, r23
    3e0c:	78 1f       	adc	r23, r24
    3e0e:	89 1f       	adc	r24, r25
    3e10:	9a 1f       	adc	r25, r26
    3e12:	a1 1d       	adc	r26, r1
    3e14:	68 0f       	add	r22, r24
    3e16:	79 1f       	adc	r23, r25
    3e18:	8a 1f       	adc	r24, r26
    3e1a:	91 1d       	adc	r25, r1
    3e1c:	a1 1d       	adc	r26, r1
    3e1e:	6a 0f       	add	r22, r26
    3e20:	71 1d       	adc	r23, r1
    3e22:	81 1d       	adc	r24, r1
    3e24:	91 1d       	adc	r25, r1
    3e26:	a1 1d       	adc	r26, r1
    3e28:	20 d0       	rcall	.+64     	; 0x3e6a <__ultoa_invert+0x84>
    3e2a:	09 f4       	brne	.+2      	; 0x3e2e <__ultoa_invert+0x48>
    3e2c:	68 94       	set
    3e2e:	3f 91       	pop	r19
    3e30:	2a e0       	ldi	r18, 0x0A	; 10
    3e32:	26 9f       	mul	r18, r22
    3e34:	11 24       	eor	r1, r1
    3e36:	30 19       	sub	r19, r0
    3e38:	30 5d       	subi	r19, 0xD0	; 208
    3e3a:	31 93       	st	Z+, r19
    3e3c:	de f6       	brtc	.-74     	; 0x3df4 <__ultoa_invert+0xe>
    3e3e:	cf 01       	movw	r24, r30
    3e40:	08 95       	ret
    3e42:	46 2f       	mov	r20, r22
    3e44:	47 70       	andi	r20, 0x07	; 7
    3e46:	40 5d       	subi	r20, 0xD0	; 208
    3e48:	41 93       	st	Z+, r20
    3e4a:	b3 e0       	ldi	r27, 0x03	; 3
    3e4c:	0f d0       	rcall	.+30     	; 0x3e6c <__ultoa_invert+0x86>
    3e4e:	c9 f7       	brne	.-14     	; 0x3e42 <__ultoa_invert+0x5c>
    3e50:	f6 cf       	rjmp	.-20     	; 0x3e3e <__ultoa_invert+0x58>
    3e52:	46 2f       	mov	r20, r22
    3e54:	4f 70       	andi	r20, 0x0F	; 15
    3e56:	40 5d       	subi	r20, 0xD0	; 208
    3e58:	4a 33       	cpi	r20, 0x3A	; 58
    3e5a:	18 f0       	brcs	.+6      	; 0x3e62 <__ultoa_invert+0x7c>
    3e5c:	49 5d       	subi	r20, 0xD9	; 217
    3e5e:	31 fd       	sbrc	r19, 1
    3e60:	40 52       	subi	r20, 0x20	; 32
    3e62:	41 93       	st	Z+, r20
    3e64:	02 d0       	rcall	.+4      	; 0x3e6a <__ultoa_invert+0x84>
    3e66:	a9 f7       	brne	.-22     	; 0x3e52 <__ultoa_invert+0x6c>
    3e68:	ea cf       	rjmp	.-44     	; 0x3e3e <__ultoa_invert+0x58>
    3e6a:	b4 e0       	ldi	r27, 0x04	; 4
    3e6c:	a6 95       	lsr	r26
    3e6e:	97 95       	ror	r25
    3e70:	87 95       	ror	r24
    3e72:	77 95       	ror	r23
    3e74:	67 95       	ror	r22
    3e76:	ba 95       	dec	r27
    3e78:	c9 f7       	brne	.-14     	; 0x3e6c <__ultoa_invert+0x86>
    3e7a:	00 97       	sbiw	r24, 0x00	; 0
    3e7c:	61 05       	cpc	r22, r1
    3e7e:	71 05       	cpc	r23, r1
    3e80:	08 95       	ret
    3e82:	9b 01       	movw	r18, r22
    3e84:	ac 01       	movw	r20, r24
    3e86:	0a 2e       	mov	r0, r26
    3e88:	06 94       	lsr	r0
    3e8a:	57 95       	ror	r21
    3e8c:	47 95       	ror	r20
    3e8e:	37 95       	ror	r19
    3e90:	27 95       	ror	r18
    3e92:	ba 95       	dec	r27
    3e94:	c9 f7       	brne	.-14     	; 0x3e88 <__ultoa_invert+0xa2>
    3e96:	62 0f       	add	r22, r18
    3e98:	73 1f       	adc	r23, r19
    3e9a:	84 1f       	adc	r24, r20
    3e9c:	95 1f       	adc	r25, r21
    3e9e:	a0 1d       	adc	r26, r0
    3ea0:	08 95       	ret

00003ea2 <__do_global_dtors>:
    3ea2:	11 e0       	ldi	r17, 0x01	; 1
    3ea4:	c9 e6       	ldi	r28, 0x69	; 105
    3ea6:	d1 e0       	ldi	r29, 0x01	; 1
    3ea8:	03 c0       	rjmp	.+6      	; 0x3eb0 <__do_global_dtors+0xe>
    3eaa:	fe 01       	movw	r30, r28
    3eac:	0f dd       	rcall	.-1506   	; 0x38cc <__tablejump2__>
    3eae:	21 96       	adiw	r28, 0x01	; 1
    3eb0:	ca 36       	cpi	r28, 0x6A	; 106
    3eb2:	d1 07       	cpc	r29, r17
    3eb4:	d1 f7       	brne	.-12     	; 0x3eaa <__do_global_dtors+0x8>
    3eb6:	f8 94       	cli

00003eb8 <__stop_program>:
    3eb8:	ff cf       	rjmp	.-2      	; 0x3eb8 <__stop_program>
