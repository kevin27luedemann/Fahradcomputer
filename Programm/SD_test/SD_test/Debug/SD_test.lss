
SD_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00002df2  00002e86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002df2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00001035  00800118  00800118  00002e9e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002e9e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002efc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  00002f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003f25  00000000  00000000  0000312c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000689  00000000  00000000  00007051  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000025c3  00000000  00000000  000076da  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b60  00000000  00000000  00009ca0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000080a  00000000  00000000  0000a800  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000061fd  00000000  00000000  0000b00a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000228  00000000  00000000  00011207  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	7c c0       	rjmp	.+248    	; 0xfa <__ctors_end>
       2:	00 00       	nop
       4:	99 c0       	rjmp	.+306    	; 0x138 <__bad_interrupt>
       6:	00 00       	nop
       8:	97 c0       	rjmp	.+302    	; 0x138 <__bad_interrupt>
       a:	00 00       	nop
       c:	95 c0       	rjmp	.+298    	; 0x138 <__bad_interrupt>
       e:	00 00       	nop
      10:	93 c0       	rjmp	.+294    	; 0x138 <__bad_interrupt>
      12:	00 00       	nop
      14:	91 c0       	rjmp	.+290    	; 0x138 <__bad_interrupt>
      16:	00 00       	nop
      18:	8f c0       	rjmp	.+286    	; 0x138 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	8d c0       	rjmp	.+282    	; 0x138 <__bad_interrupt>
      1e:	00 00       	nop
      20:	8b c0       	rjmp	.+278    	; 0x138 <__bad_interrupt>
      22:	00 00       	nop
      24:	89 c0       	rjmp	.+274    	; 0x138 <__bad_interrupt>
      26:	00 00       	nop
      28:	87 c0       	rjmp	.+270    	; 0x138 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	85 c0       	rjmp	.+266    	; 0x138 <__bad_interrupt>
      2e:	00 00       	nop
      30:	83 c0       	rjmp	.+262    	; 0x138 <__bad_interrupt>
      32:	00 00       	nop
      34:	81 c0       	rjmp	.+258    	; 0x138 <__bad_interrupt>
      36:	00 00       	nop
      38:	7f c0       	rjmp	.+254    	; 0x138 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	7d c0       	rjmp	.+250    	; 0x138 <__bad_interrupt>
      3e:	00 00       	nop
      40:	7b c0       	rjmp	.+246    	; 0x138 <__bad_interrupt>
      42:	00 00       	nop
      44:	79 c0       	rjmp	.+242    	; 0x138 <__bad_interrupt>
      46:	00 00       	nop
      48:	77 c0       	rjmp	.+238    	; 0x138 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	75 c0       	rjmp	.+234    	; 0x138 <__bad_interrupt>
      4e:	00 00       	nop
      50:	73 c0       	rjmp	.+230    	; 0x138 <__bad_interrupt>
      52:	00 00       	nop
      54:	71 c0       	rjmp	.+226    	; 0x138 <__bad_interrupt>
      56:	00 00       	nop
      58:	6f c0       	rjmp	.+222    	; 0x138 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	6d c0       	rjmp	.+218    	; 0x138 <__bad_interrupt>
      5e:	00 00       	nop
      60:	6b c0       	rjmp	.+214    	; 0x138 <__bad_interrupt>
      62:	00 00       	nop
      64:	69 c0       	rjmp	.+210    	; 0x138 <__bad_interrupt>
      66:	00 00       	nop
      68:	67 c0       	rjmp	.+206    	; 0x138 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	65 c0       	rjmp	.+202    	; 0x138 <__bad_interrupt>
      6e:	00 00       	nop
      70:	63 c0       	rjmp	.+198    	; 0x138 <__bad_interrupt>
      72:	00 00       	nop
      74:	61 c0       	rjmp	.+194    	; 0x138 <__bad_interrupt>
      76:	00 00       	nop
      78:	5f c0       	rjmp	.+190    	; 0x138 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	5d c0       	rjmp	.+186    	; 0x138 <__bad_interrupt>
      7e:	00 00       	nop
      80:	5b c0       	rjmp	.+182    	; 0x138 <__bad_interrupt>
      82:	00 00       	nop
      84:	59 c0       	rjmp	.+178    	; 0x138 <__bad_interrupt>
      86:	00 00       	nop
      88:	57 c0       	rjmp	.+174    	; 0x138 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	39 03       	fmul	r19, r17
      8e:	40 03       	mulsu	r20, r16
      90:	8d 04       	cpc	r8, r13
      92:	b0 03       	fmuls	r19, r16
      94:	8d 04       	cpc	r8, r13
      96:	8d 04       	cpc	r8, r13
      98:	8d 04       	cpc	r8, r13
      9a:	85 04       	cpc	r8, r5
      9c:	8d 04       	cpc	r8, r13
      9e:	8d 04       	cpc	r8, r13
      a0:	8d 04       	cpc	r8, r13
      a2:	8d 04       	cpc	r8, r13
      a4:	8d 04       	cpc	r8, r13
      a6:	8d 04       	cpc	r8, r13
      a8:	8d 04       	cpc	r8, r13
      aa:	8d 04       	cpc	r8, r13
      ac:	8d 04       	cpc	r8, r13
      ae:	8d 04       	cpc	r8, r13
      b0:	8d 04       	cpc	r8, r13
      b2:	8d 04       	cpc	r8, r13
      b4:	8d 04       	cpc	r8, r13
      b6:	8d 04       	cpc	r8, r13
      b8:	8d 04       	cpc	r8, r13
      ba:	8d 04       	cpc	r8, r13
      bc:	8d 04       	cpc	r8, r13
      be:	8d 04       	cpc	r8, r13
      c0:	8d 04       	cpc	r8, r13
      c2:	8d 04       	cpc	r8, r13
      c4:	8d 04       	cpc	r8, r13
      c6:	8d 04       	cpc	r8, r13
      c8:	8d 04       	cpc	r8, r13
      ca:	8d 04       	cpc	r8, r13
      cc:	8d 04       	cpc	r8, r13
      ce:	8d 04       	cpc	r8, r13
      d0:	8d 04       	cpc	r8, r13
      d2:	8d 04       	cpc	r8, r13
      d4:	8d 04       	cpc	r8, r13
      d6:	8d 04       	cpc	r8, r13
      d8:	8d 04       	cpc	r8, r13
      da:	8d 04       	cpc	r8, r13
      dc:	8d 04       	cpc	r8, r13
      de:	8d 04       	cpc	r8, r13
      e0:	8d 04       	cpc	r8, r13
      e2:	8d 04       	cpc	r8, r13
      e4:	8d 04       	cpc	r8, r13
      e6:	8d 04       	cpc	r8, r13
      e8:	8d 04       	cpc	r8, r13
      ea:	8d 04       	cpc	r8, r13
      ec:	8d 04       	cpc	r8, r13
      ee:	8d 04       	cpc	r8, r13
      f0:	36 04       	cpc	r3, r6
      f2:	3c 04       	cpc	r3, r12
      f4:	4d 04       	cpc	r4, r13
      f6:	5e 04       	cpc	r5, r14
      f8:	73 04       	cpc	r7, r3

000000fa <__ctors_end>:
      fa:	11 24       	eor	r1, r1
      fc:	1f be       	out	0x3f, r1	; 63
      fe:	cf ef       	ldi	r28, 0xFF	; 255
     100:	d0 e4       	ldi	r29, 0x40	; 64
     102:	de bf       	out	0x3e, r29	; 62
     104:	cd bf       	out	0x3d, r28	; 61

00000106 <__do_copy_data>:
     106:	11 e0       	ldi	r17, 0x01	; 1
     108:	a0 e0       	ldi	r26, 0x00	; 0
     10a:	b1 e0       	ldi	r27, 0x01	; 1
     10c:	e2 ef       	ldi	r30, 0xF2	; 242
     10e:	fd e2       	ldi	r31, 0x2D	; 45
     110:	00 e0       	ldi	r16, 0x00	; 0
     112:	0b bf       	out	0x3b, r16	; 59
     114:	02 c0       	rjmp	.+4      	; 0x11a <__do_copy_data+0x14>
     116:	07 90       	elpm	r0, Z+
     118:	0d 92       	st	X+, r0
     11a:	a8 31       	cpi	r26, 0x18	; 24
     11c:	b1 07       	cpc	r27, r17
     11e:	d9 f7       	brne	.-10     	; 0x116 <__do_copy_data+0x10>

00000120 <__do_clear_bss>:
     120:	21 e1       	ldi	r18, 0x11	; 17
     122:	a8 e1       	ldi	r26, 0x18	; 24
     124:	b1 e0       	ldi	r27, 0x01	; 1
     126:	01 c0       	rjmp	.+2      	; 0x12a <.do_clear_bss_start>

00000128 <.do_clear_bss_loop>:
     128:	1d 92       	st	X+, r1

0000012a <.do_clear_bss_start>:
     12a:	ad 34       	cpi	r26, 0x4D	; 77
     12c:	b2 07       	cpc	r27, r18
     12e:	e1 f7       	brne	.-8      	; 0x128 <.do_clear_bss_loop>
     130:	0e 94 fc 13 	call	0x27f8	; 0x27f8 <main>
     134:	0c 94 f7 16 	jmp	0x2dee	; 0x2dee <_exit>

00000138 <__bad_interrupt>:
     138:	63 cf       	rjmp	.-314    	; 0x0 <__vectors>

0000013a <power_off>:
}

static
void power_off (void)
{
	SPCR = 0;				/* Disable SPI function */
     13a:	1c bc       	out	0x2c, r1	; 44

	DDRB  &= ~((1<<PINB7) | (1<<PINB6) | (1<<PINB5) | (1<<PINB4));	/* Set SCK/MOSI/CS as hi-z, INS#/WP as pull-up */
     13c:	84 b1       	in	r24, 0x04	; 4
     13e:	8f 70       	andi	r24, 0x0F	; 15
     140:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~((1<<PINB7) | (1<<PINB6) | (1<<PINB5) | (1<<PINB4));
     142:	85 b1       	in	r24, 0x05	; 5
     144:	8f 70       	andi	r24, 0x0F	; 15
     146:	85 b9       	out	0x05, r24	; 5
     148:	08 95       	ret

0000014a <xchg_spi>:
static
BYTE xchg_spi (		/* Returns received data */
	BYTE dat		/* Data to be sent */
)
{
	SPDR = dat;
     14a:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR, SPIF);
     14c:	0d b4       	in	r0, 0x2d	; 45
     14e:	07 fe       	sbrs	r0, 7
     150:	fd cf       	rjmp	.-6      	; 0x14c <xchg_spi+0x2>
	return SPDR;
     152:	8e b5       	in	r24, 0x2e	; 46
}
     154:	08 95       	ret

00000156 <deselect>:
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();		/* Set CS# high */
     156:	2e 9a       	sbi	0x05, 6	; 5
	xchg_spi(0xFF);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
     158:	8f ef       	ldi	r24, 0xFF	; 255
     15a:	f7 cf       	rjmp	.-18     	; 0x14a <xchg_spi>
     15c:	08 95       	ret

0000015e <select>:
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();		/* Set CS# low */
     15e:	2e 98       	cbi	0x05, 6	; 5
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
     160:	8f ef       	ldi	r24, 0xFF	; 255
     162:	f3 df       	rcall	.-26     	; 0x14a <xchg_spi>
)
{
	BYTE d;


	Timer2 = wt / 10;
     164:	82 e3       	ldi	r24, 0x32	; 50
     166:	80 93 19 01 	sts	0x0119, r24
	do
		d = xchg_spi(0xFF);
     16a:	8f ef       	ldi	r24, 0xFF	; 255
     16c:	ee df       	rcall	.-36     	; 0x14a <xchg_spi>
	while (d != 0xFF && Timer2);
     16e:	8f 3f       	cpi	r24, 0xFF	; 255
     170:	41 f0       	breq	.+16     	; 0x182 <select+0x24>
     172:	80 91 19 01 	lds	r24, 0x0119
     176:	81 11       	cpse	r24, r1
     178:	f8 cf       	rjmp	.-16     	; 0x16a <select+0xc>
{
	CS_LOW();		/* Set CS# low */
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
	if (wait_ready(500)) return 1;	/* Wait for card ready */

	deselect();
     17a:	ed df       	rcall	.-38     	; 0x156 <deselect>
	return 0;	/* Timeout */
     17c:	80 e0       	ldi	r24, 0x00	; 0
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	08 95       	ret
static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();		/* Set CS# low */
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
	if (wait_ready(500)) return 1;	/* Wait for card ready */
     182:	81 e0       	ldi	r24, 0x01	; 1
     184:	90 e0       	ldi	r25, 0x00	; 0

	deselect();
	return 0;	/* Timeout */
}
     186:	08 95       	ret

00000188 <rcvr_datablock>:
static
int rcvr_datablock (
	BYTE *buff,			/* Data buffer to store received data */
	UINT btr			/* Byte count (must be multiple of 4) */
)
{
     188:	0f 93       	push	r16
     18a:	1f 93       	push	r17
     18c:	cf 93       	push	r28
     18e:	df 93       	push	r29
     190:	ec 01       	movw	r28, r24
     192:	8b 01       	movw	r16, r22
	BYTE token;


	Timer1 = 20;
     194:	84 e1       	ldi	r24, 0x14	; 20
     196:	80 93 1a 01 	sts	0x011A, r24
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
     19a:	8f ef       	ldi	r24, 0xFF	; 255
     19c:	d6 df       	rcall	.-84     	; 0x14a <xchg_spi>
	} while ((token == 0xFF) && Timer1);
     19e:	8f 3f       	cpi	r24, 0xFF	; 255
     1a0:	39 f4       	brne	.+14     	; 0x1b0 <rcvr_datablock+0x28>
     1a2:	90 91 1a 01 	lds	r25, 0x011A
     1a6:	91 11       	cpse	r25, r1
     1a8:	f8 cf       	rjmp	.-16     	; 0x19a <rcvr_datablock+0x12>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
     1aa:	80 e0       	ldi	r24, 0x00	; 0
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	1e c0       	rjmp	.+60     	; 0x1ec <rcvr_datablock+0x64>
     1b0:	8e 3f       	cpi	r24, 0xFE	; 254
     1b2:	d1 f4       	brne	.+52     	; 0x1e8 <rcvr_datablock+0x60>
	BYTE *p,	/* Data buffer */
	UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		SPDR = 0xFF; loop_until_bit_is_set(SPSR,SPIF); *p++ = SPDR;
     1b4:	8f ef       	ldi	r24, 0xFF	; 255
     1b6:	8e bd       	out	0x2e, r24	; 46
     1b8:	0d b4       	in	r0, 0x2d	; 45
     1ba:	07 fe       	sbrs	r0, 7
     1bc:	fd cf       	rjmp	.-6      	; 0x1b8 <rcvr_datablock+0x30>
     1be:	9e b5       	in	r25, 0x2e	; 46
     1c0:	98 83       	st	Y, r25
		SPDR = 0xFF; loop_until_bit_is_set(SPSR,SPIF); *p++ = SPDR;
     1c2:	8e bd       	out	0x2e, r24	; 46
     1c4:	0d b4       	in	r0, 0x2d	; 45
     1c6:	07 fe       	sbrs	r0, 7
     1c8:	fd cf       	rjmp	.-6      	; 0x1c4 <rcvr_datablock+0x3c>
     1ca:	22 96       	adiw	r28, 0x02	; 2
     1cc:	9e b5       	in	r25, 0x2e	; 46
     1ce:	fe 01       	movw	r30, r28
     1d0:	31 97       	sbiw	r30, 0x01	; 1
     1d2:	90 83       	st	Z, r25
	} while (cnt -= 2);
     1d4:	02 50       	subi	r16, 0x02	; 2
     1d6:	11 09       	sbc	r17, r1
     1d8:	71 f7       	brne	.-36     	; 0x1b6 <rcvr_datablock+0x2e>
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */

	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
     1da:	8f ef       	ldi	r24, 0xFF	; 255
     1dc:	b6 df       	rcall	.-148    	; 0x14a <xchg_spi>
	xchg_spi(0xFF);
     1de:	8f ef       	ldi	r24, 0xFF	; 255
     1e0:	b4 df       	rcall	.-152    	; 0x14a <xchg_spi>

	return 1;						/* Return with success */
     1e2:	81 e0       	ldi	r24, 0x01	; 1
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	02 c0       	rjmp	.+4      	; 0x1ec <rcvr_datablock+0x64>

	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
     1e8:	80 e0       	ldi	r24, 0x00	; 0
     1ea:	90 e0       	ldi	r25, 0x00	; 0
	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
	xchg_spi(0xFF);

	return 1;						/* Return with success */
}
     1ec:	df 91       	pop	r29
     1ee:	cf 91       	pop	r28
     1f0:	1f 91       	pop	r17
     1f2:	0f 91       	pop	r16
     1f4:	08 95       	ret

000001f6 <send_cmd>:
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
     1f6:	ff 92       	push	r15
     1f8:	0f 93       	push	r16
     1fa:	1f 93       	push	r17
     1fc:	cf 93       	push	r28
     1fe:	df 93       	push	r29
     200:	c8 2f       	mov	r28, r24
     202:	d4 2f       	mov	r29, r20
     204:	15 2f       	mov	r17, r21
     206:	06 2f       	mov	r16, r22
     208:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
     20a:	88 23       	and	r24, r24
     20c:	4c f4       	brge	.+18     	; 0x220 <send_cmd+0x2a>
		cmd &= 0x7F;
		res = send_cmd(CMD55, 0);
     20e:	40 e0       	ldi	r20, 0x00	; 0
     210:	50 e0       	ldi	r21, 0x00	; 0
     212:	ba 01       	movw	r22, r20
     214:	87 e3       	ldi	r24, 0x37	; 55
     216:	ef df       	rcall	.-34     	; 0x1f6 <send_cmd>
		if (res > 1) return res;
     218:	82 30       	cpi	r24, 0x02	; 2
     21a:	08 f0       	brcs	.+2      	; 0x21e <send_cmd+0x28>
     21c:	3c c0       	rjmp	.+120    	; 0x296 <send_cmd+0xa0>
{
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
		cmd &= 0x7F;
     21e:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
		if (res > 1) return res;
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
     220:	cc 30       	cpi	r28, 0x0C	; 12
     222:	f1 f0       	breq	.+60     	; 0x260 <send_cmd+0x6a>
		deselect();
     224:	98 df       	rcall	.-208    	; 0x156 <deselect>
		if (!select()) return 0xFF;
     226:	9b df       	rcall	.-202    	; 0x15e <select>
     228:	89 2b       	or	r24, r25
     22a:	c1 f0       	breq	.+48     	; 0x25c <send_cmd+0x66>
	}

	/* Send command packet */
	xchg_spi(0x40 | cmd);				/* Start + Command index */
     22c:	8c 2f       	mov	r24, r28
     22e:	80 64       	ori	r24, 0x40	; 64
     230:	8c df       	rcall	.-232    	; 0x14a <xchg_spi>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
     232:	8f 2d       	mov	r24, r15
     234:	8a df       	rcall	.-236    	; 0x14a <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
     236:	80 2f       	mov	r24, r16
     238:	88 df       	rcall	.-240    	; 0x14a <xchg_spi>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
     23a:	81 2f       	mov	r24, r17
     23c:	86 df       	rcall	.-244    	; 0x14a <xchg_spi>
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
     23e:	8d 2f       	mov	r24, r29
     240:	84 df       	rcall	.-248    	; 0x14a <xchg_spi>
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
     242:	cc 23       	and	r28, r28
     244:	29 f1       	breq	.+74     	; 0x290 <send_cmd+0x9a>
     246:	21 c0       	rjmp	.+66     	; 0x28a <send_cmd+0x94>
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
     248:	8f ef       	ldi	r24, 0xFF	; 255
     24a:	7f df       	rcall	.-258    	; 0x14a <xchg_spi>
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
     24c:	ca e0       	ldi	r28, 0x0A	; 10

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		res = xchg_spi(0xFF);
     24e:	8f ef       	ldi	r24, 0xFF	; 255
     250:	7c df       	rcall	.-264    	; 0x14a <xchg_spi>
	while ((res & 0x80) && --n);
     252:	88 23       	and	r24, r24
     254:	04 f5       	brge	.+64     	; 0x296 <send_cmd+0xa0>
     256:	c1 50       	subi	r28, 0x01	; 1
     258:	d1 f7       	brne	.-12     	; 0x24e <send_cmd+0x58>
     25a:	1d c0       	rjmp	.+58     	; 0x296 <send_cmd+0xa0>
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
		deselect();
		if (!select()) return 0xFF;
     25c:	8f ef       	ldi	r24, 0xFF	; 255
     25e:	1b c0       	rjmp	.+54     	; 0x296 <send_cmd+0xa0>
	}

	/* Send command packet */
	xchg_spi(0x40 | cmd);				/* Start + Command index */
     260:	8c e4       	ldi	r24, 0x4C	; 76
     262:	73 df       	rcall	.-282    	; 0x14a <xchg_spi>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
     264:	8f 2d       	mov	r24, r15
     266:	71 df       	rcall	.-286    	; 0x14a <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
     268:	80 2f       	mov	r24, r16
     26a:	6f df       	rcall	.-290    	; 0x14a <xchg_spi>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
     26c:	81 2f       	mov	r24, r17
     26e:	6d df       	rcall	.-294    	; 0x14a <xchg_spi>
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
     270:	8d 2f       	mov	r24, r29
     272:	6b df       	rcall	.-298    	; 0x14a <xchg_spi>
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);
     274:	81 e0       	ldi	r24, 0x01	; 1
     276:	69 df       	rcall	.-302    	; 0x14a <xchg_spi>

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
     278:	cc 30       	cpi	r28, 0x0C	; 12
     27a:	31 f3       	breq	.-52     	; 0x248 <send_cmd+0x52>
     27c:	e7 cf       	rjmp	.-50     	; 0x24c <send_cmd+0x56>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);
     27e:	87 e8       	ldi	r24, 0x87	; 135
     280:	64 df       	rcall	.-312    	; 0x14a <xchg_spi>
     282:	e4 cf       	rjmp	.-56     	; 0x24c <send_cmd+0x56>
     284:	81 e0       	ldi	r24, 0x01	; 1
     286:	61 df       	rcall	.-318    	; 0x14a <xchg_spi>
     288:	e1 cf       	rjmp	.-62     	; 0x24c <send_cmd+0x56>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
     28a:	c8 30       	cpi	r28, 0x08	; 8
     28c:	c1 f3       	breq	.-16     	; 0x27e <send_cmd+0x88>
     28e:	fa cf       	rjmp	.-12     	; 0x284 <send_cmd+0x8e>
	xchg_spi(n);
     290:	85 e9       	ldi	r24, 0x95	; 149
     292:	5b df       	rcall	.-330    	; 0x14a <xchg_spi>
     294:	db cf       	rjmp	.-74     	; 0x24c <send_cmd+0x56>
	do
		res = xchg_spi(0xFF);
	while ((res & 0x80) && --n);

	return res;			/* Return with the response value */
}
     296:	df 91       	pop	r29
     298:	cf 91       	pop	r28
     29a:	1f 91       	pop	r17
     29c:	0f 91       	pop	r16
     29e:	ff 90       	pop	r15
     2a0:	08 95       	ret

000002a2 <xmit_datablock>:
static
int xmit_datablock (
	const BYTE *buff,	/* 512 byte data block to be transmitted */
	BYTE token			/* Data/Stop token */
)
{
     2a2:	1f 93       	push	r17
     2a4:	cf 93       	push	r28
     2a6:	df 93       	push	r29
     2a8:	ec 01       	movw	r28, r24
     2aa:	16 2f       	mov	r17, r22
)
{
	BYTE d;


	Timer2 = wt / 10;
     2ac:	92 e3       	ldi	r25, 0x32	; 50
     2ae:	90 93 19 01 	sts	0x0119, r25
	do
		d = xchg_spi(0xFF);
     2b2:	8f ef       	ldi	r24, 0xFF	; 255
     2b4:	4a df       	rcall	.-364    	; 0x14a <xchg_spi>
	while (d != 0xFF && Timer2);
     2b6:	8f 3f       	cpi	r24, 0xFF	; 255
     2b8:	31 f0       	breq	.+12     	; 0x2c6 <xmit_datablock+0x24>
     2ba:	90 91 19 01 	lds	r25, 0x0119
     2be:	91 11       	cpse	r25, r1
     2c0:	f8 cf       	rjmp	.-16     	; 0x2b2 <xmit_datablock+0x10>
)
{
	BYTE resp;


	if (!wait_ready(500)) return 0;
     2c2:	80 e0       	ldi	r24, 0x00	; 0
     2c4:	26 c0       	rjmp	.+76     	; 0x312 <xmit_datablock+0x70>

	xchg_spi(token);					/* Xmit data token */
     2c6:	81 2f       	mov	r24, r17
     2c8:	40 df       	rcall	.-384    	; 0x14a <xchg_spi>
	if (token != 0xFD) {	/* Is data token */
     2ca:	1d 3f       	cpi	r17, 0xFD	; 253
     2cc:	01 f1       	breq	.+64     	; 0x30e <xmit_datablock+0x6c>
     2ce:	9e 01       	movw	r18, r28
     2d0:	3e 5f       	subi	r19, 0xFE	; 254
	const BYTE *p,	/* Data block to be sent */
	UINT cnt		/* Size of data block (must be multiple of 2) */
)
{
	do {
		SPDR = *p++; loop_until_bit_is_set(SPSR,SPIF);
     2d2:	88 81       	ld	r24, Y
     2d4:	8e bd       	out	0x2e, r24	; 46
     2d6:	0d b4       	in	r0, 0x2d	; 45
     2d8:	07 fe       	sbrs	r0, 7
     2da:	fd cf       	rjmp	.-6      	; 0x2d6 <xmit_datablock+0x34>
     2dc:	22 96       	adiw	r28, 0x02	; 2
     2de:	fe 01       	movw	r30, r28
     2e0:	31 97       	sbiw	r30, 0x01	; 1
		SPDR = *p++; loop_until_bit_is_set(SPSR,SPIF);
     2e2:	80 81       	ld	r24, Z
     2e4:	8e bd       	out	0x2e, r24	; 46
     2e6:	0d b4       	in	r0, 0x2d	; 45
     2e8:	07 fe       	sbrs	r0, 7
     2ea:	fd cf       	rjmp	.-6      	; 0x2e6 <xmit_datablock+0x44>
	} while (cnt -= 2);
     2ec:	c2 17       	cp	r28, r18
     2ee:	d3 07       	cpc	r29, r19
     2f0:	81 f7       	brne	.-32     	; 0x2d2 <xmit_datablock+0x30>
	if (!wait_ready(500)) return 0;

	xchg_spi(token);					/* Xmit data token */
	if (token != 0xFD) {	/* Is data token */
		xmit_spi_multi(buff, 512);		/* Xmit the data block to the MMC */
		xchg_spi(0xFF);					/* CRC (Dummy) */
     2f2:	8f ef       	ldi	r24, 0xFF	; 255
     2f4:	2a df       	rcall	.-428    	; 0x14a <xchg_spi>
		xchg_spi(0xFF);
     2f6:	8f ef       	ldi	r24, 0xFF	; 255
     2f8:	28 df       	rcall	.-432    	; 0x14a <xchg_spi>
		resp = xchg_spi(0xFF);			/* Reveive data response */
     2fa:	8f ef       	ldi	r24, 0xFF	; 255
     2fc:	26 df       	rcall	.-436    	; 0x14a <xchg_spi>
		if ((resp & 0x1F) != 0x05)		/* If not accepted, return with error */
     2fe:	28 2f       	mov	r18, r24
     300:	2f 71       	andi	r18, 0x1F	; 31
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	25 30       	cpi	r18, 0x05	; 5
     308:	21 f0       	breq	.+8      	; 0x312 <xmit_datablock+0x70>
     30a:	80 e0       	ldi	r24, 0x00	; 0
     30c:	02 c0       	rjmp	.+4      	; 0x312 <xmit_datablock+0x70>
			return 0;
	}

	return 1;
     30e:	81 e0       	ldi	r24, 0x01	; 1
     310:	90 e0       	ldi	r25, 0x00	; 0
}
     312:	df 91       	pop	r29
     314:	cf 91       	pop	r28
     316:	1f 91       	pop	r17
     318:	08 95       	ret

0000031a <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
     31a:	cf 92       	push	r12
     31c:	df 92       	push	r13
     31e:	ef 92       	push	r14
     320:	ff 92       	push	r15
     322:	0f 93       	push	r16
     324:	1f 93       	push	r17
     326:	cf 93       	push	r28
     328:	df 93       	push	r29
     32a:	00 d0       	rcall	.+0      	; 0x32c <disk_initialize+0x12>
     32c:	00 d0       	rcall	.+0      	; 0x32e <disk_initialize+0x14>
     32e:	cd b7       	in	r28, 0x3d	; 61
     330:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
     332:	81 11       	cpse	r24, r1
     334:	9f c0       	rjmp	.+318    	; 0x474 <disk_initialize+0x15a>
	power_off();						/* Turn off the socket power to reset the card */
     336:	01 df       	rcall	.-510    	; 0x13a <power_off>
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
     338:	80 91 00 01 	lds	r24, 0x0100
     33c:	81 ff       	sbrs	r24, 1
     33e:	03 c0       	rjmp	.+6      	; 0x346 <disk_initialize+0x2c>
     340:	80 91 00 01 	lds	r24, 0x0100
     344:	a2 c0       	rjmp	.+324    	; 0x48a <disk_initialize+0x170>
/* is nothing to do in these functions and chk_power always returns 1.   */

static
void power_on (void)
{
	PORTB |= (1<<PINB7) | (1<<PINB6) | (1<<PINB5) | (1<<PINB4);	/* Configure SCK/MOSI/CS as output */
     346:	85 b1       	in	r24, 0x05	; 5
     348:	80 6f       	ori	r24, 0xF0	; 240
     34a:	85 b9       	out	0x05, r24	; 5
	DDRB  |= (1<<PINB7) | (1<<PINB6) | (1<<PINB5) | (1<<PINB4);
     34c:	84 b1       	in	r24, 0x04	; 4
     34e:	80 6f       	ori	r24, 0xF0	; 240
     350:	84 b9       	out	0x04, r24	; 4

	SPCR = 0x52;			/* Enable SPI function in mode 0 */
     352:	82 e5       	ldi	r24, 0x52	; 82
     354:	8c bd       	out	0x2c, r24	; 44
	SPSR = 0x01;			/* SPI 2x mode */
     356:	91 e0       	ldi	r25, 0x01	; 1
     358:	9d bd       	out	0x2d, r25	; 45

	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
	power_off();						/* Turn off the socket power to reset the card */
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
	power_on();							/* Turn on the socket power */
	FCLK_SLOW();
     35a:	8c bd       	out	0x2c, r24	; 44
     35c:	1a e0       	ldi	r17, 0x0A	; 10
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */
     35e:	8f ef       	ldi	r24, 0xFF	; 255
     360:	f4 de       	rcall	.-536    	; 0x14a <xchg_spi>
     362:	11 50       	subi	r17, 0x01	; 1
     364:	e1 f7       	brne	.-8      	; 0x35e <disk_initialize+0x44>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
     366:	40 e0       	ldi	r20, 0x00	; 0
     368:	50 e0       	ldi	r21, 0x00	; 0
     36a:	ba 01       	movw	r22, r20
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	43 df       	rcall	.-378    	; 0x1f6 <send_cmd>
     370:	81 30       	cpi	r24, 0x01	; 1
     372:	09 f0       	breq	.+2      	; 0x376 <disk_initialize+0x5c>
     374:	86 c0       	rjmp	.+268    	; 0x482 <disk_initialize+0x168>
		Timer1 = 100;						/* Initialization timeout of 1000 msec */
     376:	84 e6       	ldi	r24, 0x64	; 100
     378:	80 93 1a 01 	sts	0x011A, r24
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
     37c:	4a ea       	ldi	r20, 0xAA	; 170
     37e:	51 e0       	ldi	r21, 0x01	; 1
     380:	60 e0       	ldi	r22, 0x00	; 0
     382:	70 e0       	ldi	r23, 0x00	; 0
     384:	88 e0       	ldi	r24, 0x08	; 8
     386:	37 df       	rcall	.-402    	; 0x1f6 <send_cmd>
     388:	81 30       	cpi	r24, 0x01	; 1
     38a:	09 f0       	breq	.+2      	; 0x38e <disk_initialize+0x74>
     38c:	3f c0       	rjmp	.+126    	; 0x40c <disk_initialize+0xf2>
     38e:	ce 01       	movw	r24, r28
     390:	01 96       	adiw	r24, 0x01	; 1
     392:	6c 01       	movw	r12, r24
     394:	7e 01       	movw	r14, r28
     396:	95 e0       	ldi	r25, 0x05	; 5
     398:	e9 0e       	add	r14, r25
     39a:	f1 1c       	adc	r15, r1
     39c:	86 01       	movw	r16, r12
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
     39e:	8f ef       	ldi	r24, 0xFF	; 255
     3a0:	d4 de       	rcall	.-600    	; 0x14a <xchg_spi>
     3a2:	f8 01       	movw	r30, r16
     3a4:	81 93       	st	Z+, r24
     3a6:	8f 01       	movw	r16, r30
     3a8:	ee 15       	cp	r30, r14
     3aa:	ff 05       	cpc	r31, r15
     3ac:	c1 f7       	brne	.-16     	; 0x39e <disk_initialize+0x84>
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
     3ae:	8b 81       	ldd	r24, Y+3	; 0x03
     3b0:	81 30       	cpi	r24, 0x01	; 1
     3b2:	09 f0       	breq	.+2      	; 0x3b6 <disk_initialize+0x9c>
     3b4:	66 c0       	rjmp	.+204    	; 0x482 <disk_initialize+0x168>
     3b6:	8c 81       	ldd	r24, Y+4	; 0x04
     3b8:	8a 3a       	cpi	r24, 0xAA	; 170
     3ba:	09 f0       	breq	.+2      	; 0x3be <disk_initialize+0xa4>
     3bc:	62 c0       	rjmp	.+196    	; 0x482 <disk_initialize+0x168>
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
     3be:	80 91 1a 01 	lds	r24, 0x011A
     3c2:	88 23       	and	r24, r24
     3c4:	41 f0       	breq	.+16     	; 0x3d6 <disk_initialize+0xbc>
     3c6:	40 e0       	ldi	r20, 0x00	; 0
     3c8:	50 e0       	ldi	r21, 0x00	; 0
     3ca:	60 e0       	ldi	r22, 0x00	; 0
     3cc:	70 e4       	ldi	r23, 0x40	; 64
     3ce:	89 ea       	ldi	r24, 0xA9	; 169
     3d0:	12 df       	rcall	.-476    	; 0x1f6 <send_cmd>
     3d2:	81 11       	cpse	r24, r1
     3d4:	f4 cf       	rjmp	.-24     	; 0x3be <disk_initialize+0xa4>
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
     3d6:	80 91 1a 01 	lds	r24, 0x011A
     3da:	88 23       	and	r24, r24
     3dc:	09 f4       	brne	.+2      	; 0x3e0 <disk_initialize+0xc6>
     3de:	51 c0       	rjmp	.+162    	; 0x482 <disk_initialize+0x168>
     3e0:	40 e0       	ldi	r20, 0x00	; 0
     3e2:	50 e0       	ldi	r21, 0x00	; 0
     3e4:	ba 01       	movw	r22, r20
     3e6:	8a e3       	ldi	r24, 0x3A	; 58
     3e8:	06 df       	rcall	.-500    	; 0x1f6 <send_cmd>
     3ea:	81 11       	cpse	r24, r1
     3ec:	4a c0       	rjmp	.+148    	; 0x482 <disk_initialize+0x168>
     3ee:	76 01       	movw	r14, r12
     3f0:	14 e0       	ldi	r17, 0x04	; 4
     3f2:	1c 0d       	add	r17, r12
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
     3f4:	8f ef       	ldi	r24, 0xFF	; 255
     3f6:	a9 de       	rcall	.-686    	; 0x14a <xchg_spi>
     3f8:	f7 01       	movw	r30, r14
     3fa:	81 93       	st	Z+, r24
     3fc:	7f 01       	movw	r14, r30
     3fe:	1e 13       	cpse	r17, r30
     400:	f9 cf       	rjmp	.-14     	; 0x3f4 <disk_initialize+0xda>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
     402:	89 81       	ldd	r24, Y+1	; 0x01
     404:	86 fd       	sbrc	r24, 6
     406:	38 c0       	rjmp	.+112    	; 0x478 <disk_initialize+0x15e>
     408:	84 e0       	ldi	r24, 0x04	; 4
     40a:	37 c0       	rjmp	.+110    	; 0x47a <disk_initialize+0x160>
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
     40c:	40 e0       	ldi	r20, 0x00	; 0
     40e:	50 e0       	ldi	r21, 0x00	; 0
     410:	ba 01       	movw	r22, r20
     412:	89 ea       	ldi	r24, 0xA9	; 169
     414:	f0 de       	rcall	.-544    	; 0x1f6 <send_cmd>
     416:	82 30       	cpi	r24, 0x02	; 2
     418:	18 f0       	brcs	.+6      	; 0x420 <disk_initialize+0x106>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
     41a:	01 e0       	ldi	r16, 0x01	; 1
     41c:	11 e0       	ldi	r17, 0x01	; 1
     41e:	02 c0       	rjmp	.+4      	; 0x424 <disk_initialize+0x10a>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
     420:	02 e0       	ldi	r16, 0x02	; 2
     422:	19 ea       	ldi	r17, 0xA9	; 169
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
			}
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
     424:	90 91 1a 01 	lds	r25, 0x011A
     428:	99 23       	and	r25, r25
     42a:	39 f0       	breq	.+14     	; 0x43a <disk_initialize+0x120>
     42c:	40 e0       	ldi	r20, 0x00	; 0
     42e:	50 e0       	ldi	r21, 0x00	; 0
     430:	ba 01       	movw	r22, r20
     432:	81 2f       	mov	r24, r17
     434:	e0 de       	rcall	.-576    	; 0x1f6 <send_cmd>
     436:	81 11       	cpse	r24, r1
     438:	f5 cf       	rjmp	.-22     	; 0x424 <disk_initialize+0x10a>
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
     43a:	80 91 1a 01 	lds	r24, 0x011A
     43e:	88 23       	and	r24, r24
     440:	01 f1       	breq	.+64     	; 0x482 <disk_initialize+0x168>
     442:	40 e0       	ldi	r20, 0x00	; 0
     444:	52 e0       	ldi	r21, 0x02	; 2
     446:	60 e0       	ldi	r22, 0x00	; 0
     448:	70 e0       	ldi	r23, 0x00	; 0
     44a:	80 e1       	ldi	r24, 0x10	; 16
     44c:	d4 de       	rcall	.-600    	; 0x1f6 <send_cmd>
     44e:	81 11       	cpse	r24, r1
     450:	18 c0       	rjmp	.+48     	; 0x482 <disk_initialize+0x168>
				ty = 0;
		}
	}
	CardType = ty;
     452:	00 93 18 01 	sts	0x0118, r16
	deselect();
     456:	7f de       	rcall	.-770    	; 0x156 <deselect>

	if (ty) {			/* Initialization succeded */
     458:	00 23       	and	r16, r16
     45a:	41 f0       	breq	.+16     	; 0x46c <disk_initialize+0x152>
		Stat &= ~STA_NOINIT;		/* Clear STA_NOINIT */
     45c:	80 91 00 01 	lds	r24, 0x0100
     460:	8e 7f       	andi	r24, 0xFE	; 254
     462:	80 93 00 01 	sts	0x0100, r24
		FCLK_FAST();
     466:	80 e5       	ldi	r24, 0x50	; 80
     468:	8c bd       	out	0x2c, r24	; 44
     46a:	01 c0       	rjmp	.+2      	; 0x46e <disk_initialize+0x154>
	} else {			/* Initialization failed */
		power_off();
     46c:	66 de       	rcall	.-820    	; 0x13a <power_off>
	}

	return Stat;
     46e:	80 91 00 01 	lds	r24, 0x0100
     472:	0b c0       	rjmp	.+22     	; 0x48a <disk_initialize+0x170>
)
{
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	09 c0       	rjmp	.+18     	; 0x48a <disk_initialize+0x170>
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
     478:	8c e0       	ldi	r24, 0x0C	; 12
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
     47a:	80 93 18 01 	sts	0x0118, r24
	deselect();
     47e:	6b de       	rcall	.-810    	; 0x156 <deselect>
     480:	ed cf       	rjmp	.-38     	; 0x45c <disk_initialize+0x142>
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
     482:	10 92 18 01 	sts	0x0118, r1
	deselect();
     486:	67 de       	rcall	.-818    	; 0x156 <deselect>
     488:	f1 cf       	rjmp	.-30     	; 0x46c <disk_initialize+0x152>
	} else {			/* Initialization failed */
		power_off();
	}

	return Stat;
}
     48a:	0f 90       	pop	r0
     48c:	0f 90       	pop	r0
     48e:	0f 90       	pop	r0
     490:	0f 90       	pop	r0
     492:	df 91       	pop	r29
     494:	cf 91       	pop	r28
     496:	1f 91       	pop	r17
     498:	0f 91       	pop	r16
     49a:	ff 90       	pop	r15
     49c:	ef 90       	pop	r14
     49e:	df 90       	pop	r13
     4a0:	cf 90       	pop	r12
     4a2:	08 95       	ret

000004a4 <disk_status>:

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
     4a4:	81 11       	cpse	r24, r1
     4a6:	03 c0       	rjmp	.+6      	; 0x4ae <disk_status+0xa>
	return Stat;
     4a8:	80 91 00 01 	lds	r24, 0x0100
     4ac:	08 95       	ret

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
     4ae:	81 e0       	ldi	r24, 0x01	; 1
	return Stat;
}
     4b0:	08 95       	ret

000004b2 <disk_read>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
     4b2:	ff 92       	push	r15
     4b4:	0f 93       	push	r16
     4b6:	1f 93       	push	r17
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	eb 01       	movw	r28, r22
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
     4be:	81 11       	cpse	r24, r1
     4c0:	3f c0       	rjmp	.+126    	; 0x540 <disk_read+0x8e>
     4c2:	01 15       	cp	r16, r1
     4c4:	11 05       	cpc	r17, r1
     4c6:	09 f4       	brne	.+2      	; 0x4ca <disk_read+0x18>
     4c8:	3d c0       	rjmp	.+122    	; 0x544 <disk_read+0x92>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     4ca:	80 91 00 01 	lds	r24, 0x0100
     4ce:	80 fd       	sbrc	r24, 0
     4d0:	3b c0       	rjmp	.+118    	; 0x548 <disk_read+0x96>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
     4d2:	80 91 18 01 	lds	r24, 0x0118
     4d6:	83 fd       	sbrc	r24, 3
     4d8:	09 c0       	rjmp	.+18     	; 0x4ec <disk_read+0x3a>
     4da:	01 2e       	mov	r0, r17
     4dc:	19 e0       	ldi	r17, 0x09	; 9
     4de:	22 0f       	add	r18, r18
     4e0:	33 1f       	adc	r19, r19
     4e2:	44 1f       	adc	r20, r20
     4e4:	55 1f       	adc	r21, r21
     4e6:	1a 95       	dec	r17
     4e8:	d1 f7       	brne	.-12     	; 0x4de <disk_read+0x2c>
     4ea:	10 2d       	mov	r17, r0

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
     4ec:	02 30       	cpi	r16, 0x02	; 2
     4ee:	11 05       	cpc	r17, r1
     4f0:	28 f4       	brcc	.+10     	; 0x4fc <disk_read+0x4a>
     4f2:	0f 2e       	mov	r0, r31
     4f4:	f1 e1       	ldi	r31, 0x11	; 17
     4f6:	ff 2e       	mov	r15, r31
     4f8:	f0 2d       	mov	r31, r0
     4fa:	04 c0       	rjmp	.+8      	; 0x504 <disk_read+0x52>
     4fc:	0f 2e       	mov	r0, r31
     4fe:	f2 e1       	ldi	r31, 0x12	; 18
     500:	ff 2e       	mov	r15, r31
     502:	f0 2d       	mov	r31, r0
	if (send_cmd(cmd, sector) == 0) {
     504:	ba 01       	movw	r22, r20
     506:	a9 01       	movw	r20, r18
     508:	8f 2d       	mov	r24, r15
     50a:	75 de       	rcall	.-790    	; 0x1f6 <send_cmd>
     50c:	81 11       	cpse	r24, r1
     50e:	12 c0       	rjmp	.+36     	; 0x534 <disk_read+0x82>
		do {
			if (!rcvr_datablock(buff, 512)) break;
     510:	60 e0       	ldi	r22, 0x00	; 0
     512:	72 e0       	ldi	r23, 0x02	; 2
     514:	ce 01       	movw	r24, r28
     516:	38 de       	rcall	.-912    	; 0x188 <rcvr_datablock>
     518:	89 2b       	or	r24, r25
     51a:	21 f0       	breq	.+8      	; 0x524 <disk_read+0x72>
			buff += 512;
     51c:	de 5f       	subi	r29, 0xFE	; 254
		} while (--count);
     51e:	01 50       	subi	r16, 0x01	; 1
     520:	11 09       	sbc	r17, r1
     522:	b1 f7       	brne	.-20     	; 0x510 <disk_read+0x5e>
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
     524:	82 e1       	ldi	r24, 0x12	; 18
     526:	f8 12       	cpse	r15, r24
     528:	05 c0       	rjmp	.+10     	; 0x534 <disk_read+0x82>
     52a:	40 e0       	ldi	r20, 0x00	; 0
     52c:	50 e0       	ldi	r21, 0x00	; 0
     52e:	ba 01       	movw	r22, r20
     530:	8c e0       	ldi	r24, 0x0C	; 12
     532:	61 de       	rcall	.-830    	; 0x1f6 <send_cmd>
	}
	deselect();
     534:	10 de       	rcall	.-992    	; 0x156 <deselect>

	return count ? RES_ERROR : RES_OK;
     536:	81 e0       	ldi	r24, 0x01	; 1
     538:	01 2b       	or	r16, r17
     53a:	39 f4       	brne	.+14     	; 0x54a <disk_read+0x98>
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	05 c0       	rjmp	.+10     	; 0x54a <disk_read+0x98>
)
{
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
     540:	84 e0       	ldi	r24, 0x04	; 4
     542:	03 c0       	rjmp	.+6      	; 0x54a <disk_read+0x98>
     544:	84 e0       	ldi	r24, 0x04	; 4
     546:	01 c0       	rjmp	.+2      	; 0x54a <disk_read+0x98>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     548:	83 e0       	ldi	r24, 0x03	; 3
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
     54a:	df 91       	pop	r29
     54c:	cf 91       	pop	r28
     54e:	1f 91       	pop	r17
     550:	0f 91       	pop	r16
     552:	ff 90       	pop	r15
     554:	08 95       	ret

00000556 <disk_write>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
     556:	cf 92       	push	r12
     558:	df 92       	push	r13
     55a:	ef 92       	push	r14
     55c:	ff 92       	push	r15
     55e:	0f 93       	push	r16
     560:	1f 93       	push	r17
     562:	cf 93       	push	r28
     564:	df 93       	push	r29
     566:	eb 01       	movw	r28, r22
     568:	69 01       	movw	r12, r18
     56a:	7a 01       	movw	r14, r20
	if (pdrv || !count) return RES_PARERR;
     56c:	81 11       	cpse	r24, r1
     56e:	51 c0       	rjmp	.+162    	; 0x612 <disk_write+0xbc>
     570:	01 15       	cp	r16, r1
     572:	11 05       	cpc	r17, r1
     574:	09 f4       	brne	.+2      	; 0x578 <disk_write+0x22>
     576:	4f c0       	rjmp	.+158    	; 0x616 <disk_write+0xc0>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     578:	80 91 00 01 	lds	r24, 0x0100
     57c:	80 fd       	sbrc	r24, 0
     57e:	4d c0       	rjmp	.+154    	; 0x61a <disk_write+0xc4>
	if (Stat & STA_PROTECT) return RES_WRPRT;
     580:	80 91 00 01 	lds	r24, 0x0100
     584:	82 fd       	sbrc	r24, 2
     586:	4b c0       	rjmp	.+150    	; 0x61e <disk_write+0xc8>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
     588:	80 91 18 01 	lds	r24, 0x0118
     58c:	83 fd       	sbrc	r24, 3
     58e:	09 c0       	rjmp	.+18     	; 0x5a2 <disk_write+0x4c>
     590:	0b 2e       	mov	r0, r27
     592:	b9 e0       	ldi	r27, 0x09	; 9
     594:	cc 0c       	add	r12, r12
     596:	dd 1c       	adc	r13, r13
     598:	ee 1c       	adc	r14, r14
     59a:	ff 1c       	adc	r15, r15
     59c:	ba 95       	dec	r27
     59e:	d1 f7       	brne	.-12     	; 0x594 <disk_write+0x3e>
     5a0:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block write */
     5a2:	01 30       	cpi	r16, 0x01	; 1
     5a4:	11 05       	cpc	r17, r1
     5a6:	89 f4       	brne	.+34     	; 0x5ca <disk_write+0x74>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
     5a8:	b7 01       	movw	r22, r14
     5aa:	a6 01       	movw	r20, r12
     5ac:	88 e1       	ldi	r24, 0x18	; 24
     5ae:	23 de       	rcall	.-954    	; 0x1f6 <send_cmd>
     5b0:	81 11       	cpse	r24, r1
     5b2:	29 c0       	rjmp	.+82     	; 0x606 <disk_write+0xb0>
			&& xmit_datablock(buff, 0xFE))
     5b4:	6e ef       	ldi	r22, 0xFE	; 254
     5b6:	ce 01       	movw	r24, r28
     5b8:	74 de       	rcall	.-792    	; 0x2a2 <xmit_datablock>
     5ba:	31 e0       	ldi	r19, 0x01	; 1
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	89 2b       	or	r24, r25
     5c0:	09 f0       	breq	.+2      	; 0x5c4 <disk_write+0x6e>
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	03 2f       	mov	r16, r19
     5c6:	12 2f       	mov	r17, r18
     5c8:	1e c0       	rjmp	.+60     	; 0x606 <disk_write+0xb0>
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
     5ca:	86 70       	andi	r24, 0x06	; 6
     5cc:	29 f0       	breq	.+10     	; 0x5d8 <disk_write+0x82>
     5ce:	a8 01       	movw	r20, r16
     5d0:	60 e0       	ldi	r22, 0x00	; 0
     5d2:	70 e0       	ldi	r23, 0x00	; 0
     5d4:	87 e9       	ldi	r24, 0x97	; 151
     5d6:	0f de       	rcall	.-994    	; 0x1f6 <send_cmd>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
     5d8:	b7 01       	movw	r22, r14
     5da:	a6 01       	movw	r20, r12
     5dc:	89 e1       	ldi	r24, 0x19	; 25
     5de:	0b de       	rcall	.-1002   	; 0x1f6 <send_cmd>
     5e0:	81 11       	cpse	r24, r1
     5e2:	11 c0       	rjmp	.+34     	; 0x606 <disk_write+0xb0>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
     5e4:	6c ef       	ldi	r22, 0xFC	; 252
     5e6:	ce 01       	movw	r24, r28
     5e8:	5c de       	rcall	.-840    	; 0x2a2 <xmit_datablock>
     5ea:	89 2b       	or	r24, r25
     5ec:	21 f0       	breq	.+8      	; 0x5f6 <disk_write+0xa0>
				buff += 512;
     5ee:	de 5f       	subi	r29, 0xFE	; 254
			} while (--count);
     5f0:	01 50       	subi	r16, 0x01	; 1
     5f2:	11 09       	sbc	r17, r1
     5f4:	b9 f7       	brne	.-18     	; 0x5e4 <disk_write+0x8e>
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
     5f6:	6d ef       	ldi	r22, 0xFD	; 253
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	52 de       	rcall	.-860    	; 0x2a2 <xmit_datablock>
     5fe:	89 2b       	or	r24, r25
     600:	11 f4       	brne	.+4      	; 0x606 <disk_write+0xb0>
				count = 1;
     602:	01 e0       	ldi	r16, 0x01	; 1
     604:	10 e0       	ldi	r17, 0x00	; 0
		}
	}
	deselect();
     606:	a7 dd       	rcall	.-1202   	; 0x156 <deselect>

	return count ? RES_ERROR : RES_OK;
     608:	81 e0       	ldi	r24, 0x01	; 1
     60a:	01 2b       	or	r16, r17
     60c:	49 f4       	brne	.+18     	; 0x620 <disk_write+0xca>
     60e:	80 e0       	ldi	r24, 0x00	; 0
     610:	07 c0       	rjmp	.+14     	; 0x620 <disk_write+0xca>
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
	if (pdrv || !count) return RES_PARERR;
     612:	84 e0       	ldi	r24, 0x04	; 4
     614:	05 c0       	rjmp	.+10     	; 0x620 <disk_write+0xca>
     616:	84 e0       	ldi	r24, 0x04	; 4
     618:	03 c0       	rjmp	.+6      	; 0x620 <disk_write+0xca>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     61a:	83 e0       	ldi	r24, 0x03	; 3
     61c:	01 c0       	rjmp	.+2      	; 0x620 <disk_write+0xca>
	if (Stat & STA_PROTECT) return RES_WRPRT;
     61e:	82 e0       	ldi	r24, 0x02	; 2
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
     620:	df 91       	pop	r29
     622:	cf 91       	pop	r28
     624:	1f 91       	pop	r17
     626:	0f 91       	pop	r16
     628:	ff 90       	pop	r15
     62a:	ef 90       	pop	r14
     62c:	df 90       	pop	r13
     62e:	cf 90       	pop	r12
     630:	08 95       	ret

00000632 <disk_ioctl>:
DRESULT disk_ioctl (
	BYTE pdrv,		/* Physical drive nmuber (0) */
	BYTE cmd,		/* Control code */
	BYTE *buff		/* Buffer to send/receive control data */
)
{
     632:	ef 92       	push	r14
     634:	ff 92       	push	r15
     636:	0f 93       	push	r16
     638:	1f 93       	push	r17
     63a:	cf 93       	push	r28
     63c:	df 93       	push	r29
     63e:	cd b7       	in	r28, 0x3d	; 61
     640:	de b7       	in	r29, 0x3e	; 62
     642:	60 97       	sbiw	r28, 0x10	; 16
     644:	0f b6       	in	r0, 0x3f	; 63
     646:	f8 94       	cli
     648:	de bf       	out	0x3e, r29	; 62
     64a:	0f be       	out	0x3f, r0	; 63
     64c:	cd bf       	out	0x3d, r28	; 61
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
     64e:	81 11       	cpse	r24, r1
     650:	7c c1       	rjmp	.+760    	; 0x94a <disk_ioctl+0x318>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
     652:	80 91 00 01 	lds	r24, 0x0100
     656:	80 fd       	sbrc	r24, 0
     658:	7a c1       	rjmp	.+756    	; 0x94e <disk_ioctl+0x31c>
     65a:	7a 01       	movw	r14, r20

	switch (cmd) {
     65c:	06 2f       	mov	r16, r22
     65e:	10 e0       	ldi	r17, 0x00	; 0
     660:	07 33       	cpi	r16, 0x37	; 55
     662:	11 05       	cpc	r17, r1
     664:	08 f0       	brcs	.+2      	; 0x668 <disk_ioctl+0x36>
     666:	59 c1       	rjmp	.+690    	; 0x91a <disk_ioctl+0x2e8>
     668:	f8 01       	movw	r30, r16
     66a:	ea 5b       	subi	r30, 0xBA	; 186
     66c:	ff 4f       	sbci	r31, 0xFF	; 255
     66e:	0c 94 3b 14 	jmp	0x2876	; 0x2876 <__tablejump2__>
	case CTRL_SYNC :		/* Make sure that no pending write process. Do not remove this or written sector might not left updated. */
		if (select()) res = RES_OK;
     672:	75 dd       	rcall	.-1302   	; 0x15e <select>
     674:	11 e0       	ldi	r17, 0x01	; 1
     676:	89 2b       	or	r24, r25
     678:	09 f4       	brne	.+2      	; 0x67c <disk_ioctl+0x4a>
     67a:	64 c1       	rjmp	.+712    	; 0x944 <disk_ioctl+0x312>
     67c:	10 e0       	ldi	r17, 0x00	; 0
     67e:	62 c1       	rjmp	.+708    	; 0x944 <disk_ioctl+0x312>
		break;

	case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
     680:	40 e0       	ldi	r20, 0x00	; 0
     682:	50 e0       	ldi	r21, 0x00	; 0
     684:	ba 01       	movw	r22, r20
     686:	89 e0       	ldi	r24, 0x09	; 9
     688:	b6 dd       	rcall	.-1172   	; 0x1f6 <send_cmd>
     68a:	81 11       	cpse	r24, r1
     68c:	48 c1       	rjmp	.+656    	; 0x91e <disk_ioctl+0x2ec>
     68e:	60 e1       	ldi	r22, 0x10	; 16
     690:	70 e0       	ldi	r23, 0x00	; 0
     692:	ce 01       	movw	r24, r28
     694:	01 96       	adiw	r24, 0x01	; 1
     696:	78 dd       	rcall	.-1296   	; 0x188 <rcvr_datablock>
     698:	89 2b       	or	r24, r25
     69a:	09 f4       	brne	.+2      	; 0x69e <disk_ioctl+0x6c>
     69c:	42 c1       	rjmp	.+644    	; 0x922 <disk_ioctl+0x2f0>
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
     69e:	89 81       	ldd	r24, Y+1	; 0x01
     6a0:	82 95       	swap	r24
     6a2:	86 95       	lsr	r24
     6a4:	86 95       	lsr	r24
     6a6:	83 70       	andi	r24, 0x03	; 3
     6a8:	81 30       	cpi	r24, 0x01	; 1
     6aa:	31 f5       	brne	.+76     	; 0x6f8 <disk_ioctl+0xc6>
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
     6ac:	88 85       	ldd	r24, Y+8	; 0x08
     6ae:	8f 73       	andi	r24, 0x3F	; 63
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	a0 e0       	ldi	r26, 0x00	; 0
     6b4:	b0 e0       	ldi	r27, 0x00	; 0
     6b6:	dc 01       	movw	r26, r24
     6b8:	99 27       	eor	r25, r25
     6ba:	88 27       	eor	r24, r24
     6bc:	01 96       	adiw	r24, 0x01	; 1
     6be:	a1 1d       	adc	r26, r1
     6c0:	b1 1d       	adc	r27, r1
     6c2:	29 85       	ldd	r18, Y+9	; 0x09
     6c4:	30 e0       	ldi	r19, 0x00	; 0
     6c6:	32 2f       	mov	r19, r18
     6c8:	22 27       	eor	r18, r18
     6ca:	4a 85       	ldd	r20, Y+10	; 0x0a
     6cc:	24 0f       	add	r18, r20
     6ce:	31 1d       	adc	r19, r1
     6d0:	82 0f       	add	r24, r18
     6d2:	93 1f       	adc	r25, r19
     6d4:	a1 1d       	adc	r26, r1
     6d6:	b1 1d       	adc	r27, r1
				*(DWORD*)buff = csize << 10;
     6d8:	07 2e       	mov	r0, r23
     6da:	7a e0       	ldi	r23, 0x0A	; 10
     6dc:	88 0f       	add	r24, r24
     6de:	99 1f       	adc	r25, r25
     6e0:	aa 1f       	adc	r26, r26
     6e2:	bb 1f       	adc	r27, r27
     6e4:	7a 95       	dec	r23
     6e6:	d1 f7       	brne	.-12     	; 0x6dc <disk_ioctl+0xaa>
     6e8:	70 2d       	mov	r23, r0
     6ea:	f7 01       	movw	r30, r14
     6ec:	80 83       	st	Z, r24
     6ee:	91 83       	std	Z+1, r25	; 0x01
     6f0:	a2 83       	std	Z+2, r26	; 0x02
     6f2:	b3 83       	std	Z+3, r27	; 0x03
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
			}
			res = RES_OK;
     6f4:	10 e0       	ldi	r17, 0x00	; 0
     6f6:	26 c1       	rjmp	.+588    	; 0x944 <disk_ioctl+0x312>
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
     6f8:	89 85       	ldd	r24, Y+9	; 0x09
     6fa:	82 95       	swap	r24
     6fc:	86 95       	lsr	r24
     6fe:	86 95       	lsr	r24
     700:	83 70       	andi	r24, 0x03	; 3
     702:	28 85       	ldd	r18, Y+8	; 0x08
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	f4 e0       	ldi	r31, 0x04	; 4
     708:	2f 9f       	mul	r18, r31
     70a:	80 0d       	add	r24, r0
     70c:	91 1d       	adc	r25, r1
     70e:	11 24       	eor	r1, r1
     710:	9c 01       	movw	r18, r24
     712:	2f 5f       	subi	r18, 0xFF	; 255
     714:	3f 4f       	sbci	r19, 0xFF	; 255
     716:	8f 81       	ldd	r24, Y+7	; 0x07
     718:	83 70       	andi	r24, 0x03	; 3
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	98 2f       	mov	r25, r24
     71e:	88 27       	eor	r24, r24
     720:	99 0f       	add	r25, r25
     722:	99 0f       	add	r25, r25
     724:	82 0f       	add	r24, r18
     726:	93 1f       	adc	r25, r19
     728:	a0 e0       	ldi	r26, 0x00	; 0
     72a:	b0 e0       	ldi	r27, 0x00	; 0
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
     72c:	3e 81       	ldd	r19, Y+6	; 0x06
     72e:	3f 70       	andi	r19, 0x0F	; 15
     730:	2b 85       	ldd	r18, Y+11	; 0x0b
     732:	22 1f       	adc	r18, r18
     734:	22 27       	eor	r18, r18
     736:	22 1f       	adc	r18, r18
     738:	32 0f       	add	r19, r18
     73a:	2a 85       	ldd	r18, Y+10	; 0x0a
     73c:	23 70       	andi	r18, 0x03	; 3
     73e:	22 0f       	add	r18, r18
     740:	23 0f       	add	r18, r19
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
     742:	27 50       	subi	r18, 0x07	; 7
     744:	04 c0       	rjmp	.+8      	; 0x74e <disk_ioctl+0x11c>
     746:	88 0f       	add	r24, r24
     748:	99 1f       	adc	r25, r25
     74a:	aa 1f       	adc	r26, r26
     74c:	bb 1f       	adc	r27, r27
     74e:	2a 95       	dec	r18
     750:	d2 f7       	brpl	.-12     	; 0x746 <disk_ioctl+0x114>
     752:	f7 01       	movw	r30, r14
     754:	80 83       	st	Z, r24
     756:	91 83       	std	Z+1, r25	; 0x01
     758:	a2 83       	std	Z+2, r26	; 0x02
     75a:	b3 83       	std	Z+3, r27	; 0x03
			}
			res = RES_OK;
     75c:	10 e0       	ldi	r17, 0x00	; 0
     75e:	f2 c0       	rjmp	.+484    	; 0x944 <disk_ioctl+0x312>
		}
		break;

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
     760:	10 91 18 01 	lds	r17, 0x0118
     764:	12 ff       	sbrs	r17, 2
     766:	2a c0       	rjmp	.+84     	; 0x7bc <disk_ioctl+0x18a>
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
     768:	40 e0       	ldi	r20, 0x00	; 0
     76a:	50 e0       	ldi	r21, 0x00	; 0
     76c:	ba 01       	movw	r22, r20
     76e:	8d e8       	ldi	r24, 0x8D	; 141
     770:	42 dd       	rcall	.-1404   	; 0x1f6 <send_cmd>
     772:	81 11       	cpse	r24, r1
     774:	d8 c0       	rjmp	.+432    	; 0x926 <disk_ioctl+0x2f4>
				xchg_spi(0xFF);
     776:	8f ef       	ldi	r24, 0xFF	; 255
     778:	e8 dc       	rcall	.-1584   	; 0x14a <xchg_spi>
				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
     77a:	60 e1       	ldi	r22, 0x10	; 16
     77c:	70 e0       	ldi	r23, 0x00	; 0
     77e:	ce 01       	movw	r24, r28
     780:	01 96       	adiw	r24, 0x01	; 1
     782:	02 dd       	rcall	.-1532   	; 0x188 <rcvr_datablock>
     784:	89 2b       	or	r24, r25
     786:	09 f4       	brne	.+2      	; 0x78a <disk_ioctl+0x158>
     788:	d0 c0       	rjmp	.+416    	; 0x92a <disk_ioctl+0x2f8>
     78a:	10 e3       	ldi	r17, 0x30	; 48
					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
     78c:	8f ef       	ldi	r24, 0xFF	; 255
     78e:	dd dc       	rcall	.-1606   	; 0x14a <xchg_spi>
     790:	11 50       	subi	r17, 0x01	; 1
     792:	e1 f7       	brne	.-8      	; 0x78c <disk_ioctl+0x15a>
					*(DWORD*)buff = 16UL << (csd[10] >> 4);
     794:	2b 85       	ldd	r18, Y+11	; 0x0b
     796:	22 95       	swap	r18
     798:	2f 70       	andi	r18, 0x0F	; 15
     79a:	80 e1       	ldi	r24, 0x10	; 16
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	a0 e0       	ldi	r26, 0x00	; 0
     7a0:	b0 e0       	ldi	r27, 0x00	; 0
     7a2:	04 c0       	rjmp	.+8      	; 0x7ac <disk_ioctl+0x17a>
     7a4:	88 0f       	add	r24, r24
     7a6:	99 1f       	adc	r25, r25
     7a8:	aa 1f       	adc	r26, r26
     7aa:	bb 1f       	adc	r27, r27
     7ac:	2a 95       	dec	r18
     7ae:	d2 f7       	brpl	.-12     	; 0x7a4 <disk_ioctl+0x172>
     7b0:	f7 01       	movw	r30, r14
     7b2:	80 83       	st	Z, r24
     7b4:	91 83       	std	Z+1, r25	; 0x01
     7b6:	a2 83       	std	Z+2, r26	; 0x02
     7b8:	b3 83       	std	Z+3, r27	; 0x03
     7ba:	c4 c0       	rjmp	.+392    	; 0x944 <disk_ioctl+0x312>
					res = RES_OK;
				}
			}
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
     7bc:	40 e0       	ldi	r20, 0x00	; 0
     7be:	50 e0       	ldi	r21, 0x00	; 0
     7c0:	ba 01       	movw	r22, r20
     7c2:	89 e0       	ldi	r24, 0x09	; 9
     7c4:	18 dd       	rcall	.-1488   	; 0x1f6 <send_cmd>
     7c6:	81 11       	cpse	r24, r1
     7c8:	b2 c0       	rjmp	.+356    	; 0x92e <disk_ioctl+0x2fc>
     7ca:	60 e1       	ldi	r22, 0x10	; 16
     7cc:	70 e0       	ldi	r23, 0x00	; 0
     7ce:	ce 01       	movw	r24, r28
     7d0:	01 96       	adiw	r24, 0x01	; 1
     7d2:	da dc       	rcall	.-1612   	; 0x188 <rcvr_datablock>
     7d4:	89 2b       	or	r24, r25
     7d6:	09 f4       	brne	.+2      	; 0x7da <disk_ioctl+0x1a8>
     7d8:	ac c0       	rjmp	.+344    	; 0x932 <disk_ioctl+0x300>
				if (CardType & CT_SD1) {	/* SDv1 */
     7da:	11 ff       	sbrs	r17, 1
     7dc:	20 c0       	rjmp	.+64     	; 0x81e <disk_ioctl+0x1ec>
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
     7de:	8c 85       	ldd	r24, Y+12	; 0x0c
     7e0:	88 1f       	adc	r24, r24
     7e2:	88 27       	eor	r24, r24
     7e4:	88 1f       	adc	r24, r24
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	01 96       	adiw	r24, 0x01	; 1
     7ea:	2b 85       	ldd	r18, Y+11	; 0x0b
     7ec:	2f 73       	andi	r18, 0x3F	; 63
     7ee:	82 0f       	add	r24, r18
     7f0:	91 1d       	adc	r25, r1
     7f2:	82 0f       	add	r24, r18
     7f4:	91 1d       	adc	r25, r1
     7f6:	2e 85       	ldd	r18, Y+14	; 0x0e
     7f8:	22 95       	swap	r18
     7fa:	26 95       	lsr	r18
     7fc:	26 95       	lsr	r18
     7fe:	23 70       	andi	r18, 0x03	; 3
     800:	21 50       	subi	r18, 0x01	; 1
     802:	02 c0       	rjmp	.+4      	; 0x808 <disk_ioctl+0x1d6>
     804:	88 0f       	add	r24, r24
     806:	99 1f       	adc	r25, r25
     808:	2a 95       	dec	r18
     80a:	e2 f7       	brpl	.-8      	; 0x804 <disk_ioctl+0x1d2>
     80c:	a0 e0       	ldi	r26, 0x00	; 0
     80e:	b0 e0       	ldi	r27, 0x00	; 0
     810:	f7 01       	movw	r30, r14
     812:	80 83       	st	Z, r24
     814:	91 83       	std	Z+1, r25	; 0x01
     816:	a2 83       	std	Z+2, r26	; 0x02
     818:	b3 83       	std	Z+3, r27	; 0x03
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
				}
				res = RES_OK;
     81a:	10 e0       	ldi	r17, 0x00	; 0
     81c:	93 c0       	rjmp	.+294    	; 0x944 <disk_ioctl+0x312>
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
				if (CardType & CT_SD1) {	/* SDv1 */
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
     81e:	8c 85       	ldd	r24, Y+12	; 0x0c
     820:	28 2f       	mov	r18, r24
     822:	23 70       	andi	r18, 0x03	; 3
     824:	82 95       	swap	r24
     826:	86 95       	lsr	r24
     828:	87 70       	andi	r24, 0x07	; 7
     82a:	90 e0       	ldi	r25, 0x00	; 0
     82c:	f8 e0       	ldi	r31, 0x08	; 8
     82e:	2f 9f       	mul	r18, r31
     830:	80 0d       	add	r24, r0
     832:	91 1d       	adc	r25, r1
     834:	11 24       	eor	r1, r1
     836:	01 96       	adiw	r24, 0x01	; 1
     838:	2b 85       	ldd	r18, Y+11	; 0x0b
     83a:	2c 77       	andi	r18, 0x7C	; 124
     83c:	30 e0       	ldi	r19, 0x00	; 0
     83e:	35 95       	asr	r19
     840:	27 95       	ror	r18
     842:	35 95       	asr	r19
     844:	27 95       	ror	r18
     846:	2f 5f       	subi	r18, 0xFF	; 255
     848:	3f 4f       	sbci	r19, 0xFF	; 255
     84a:	82 9f       	mul	r24, r18
     84c:	a0 01       	movw	r20, r0
     84e:	83 9f       	mul	r24, r19
     850:	50 0d       	add	r21, r0
     852:	92 9f       	mul	r25, r18
     854:	50 0d       	add	r21, r0
     856:	11 24       	eor	r1, r1
     858:	ca 01       	movw	r24, r20
     85a:	a0 e0       	ldi	r26, 0x00	; 0
     85c:	b0 e0       	ldi	r27, 0x00	; 0
     85e:	f7 01       	movw	r30, r14
     860:	80 83       	st	Z, r24
     862:	91 83       	std	Z+1, r25	; 0x01
     864:	a2 83       	std	Z+2, r26	; 0x02
     866:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
     868:	10 e0       	ldi	r17, 0x00	; 0
     86a:	6c c0       	rjmp	.+216    	; 0x944 <disk_ioctl+0x312>
		break;

	/* Following commands are never used by FatFs module */

	case MMC_GET_TYPE :		/* Get card type flags (1 byte) */
		*ptr = CardType;
     86c:	80 91 18 01 	lds	r24, 0x0118
     870:	fa 01       	movw	r30, r20
     872:	80 83       	st	Z, r24
		res = RES_OK;
     874:	10 e0       	ldi	r17, 0x00	; 0
		break;
     876:	66 c0       	rjmp	.+204    	; 0x944 <disk_ioctl+0x312>

	case MMC_GET_CSD :		/* Receive CSD as a data block (16 bytes) */
		if (send_cmd(CMD9, 0) == 0		/* READ_CSD */
     878:	40 e0       	ldi	r20, 0x00	; 0
     87a:	50 e0       	ldi	r21, 0x00	; 0
     87c:	ba 01       	movw	r22, r20
     87e:	89 e0       	ldi	r24, 0x09	; 9
     880:	ba dc       	rcall	.-1676   	; 0x1f6 <send_cmd>
     882:	81 11       	cpse	r24, r1
     884:	58 c0       	rjmp	.+176    	; 0x936 <disk_ioctl+0x304>
			&& rcvr_datablock(ptr, 16))
     886:	60 e1       	ldi	r22, 0x10	; 16
     888:	70 e0       	ldi	r23, 0x00	; 0
     88a:	c7 01       	movw	r24, r14
     88c:	7d dc       	rcall	.-1798   	; 0x188 <rcvr_datablock>
     88e:	11 e0       	ldi	r17, 0x01	; 1
     890:	89 2b       	or	r24, r25
     892:	09 f4       	brne	.+2      	; 0x896 <disk_ioctl+0x264>
     894:	57 c0       	rjmp	.+174    	; 0x944 <disk_ioctl+0x312>
     896:	10 e0       	ldi	r17, 0x00	; 0
     898:	55 c0       	rjmp	.+170    	; 0x944 <disk_ioctl+0x312>
			res = RES_OK;
		break;

	case MMC_GET_CID :		/* Receive CID as a data block (16 bytes) */
		if (send_cmd(CMD10, 0) == 0		/* READ_CID */
     89a:	40 e0       	ldi	r20, 0x00	; 0
     89c:	50 e0       	ldi	r21, 0x00	; 0
     89e:	ba 01       	movw	r22, r20
     8a0:	8a e0       	ldi	r24, 0x0A	; 10
     8a2:	a9 dc       	rcall	.-1710   	; 0x1f6 <send_cmd>
     8a4:	81 11       	cpse	r24, r1
     8a6:	49 c0       	rjmp	.+146    	; 0x93a <disk_ioctl+0x308>
			&& rcvr_datablock(ptr, 16))
     8a8:	60 e1       	ldi	r22, 0x10	; 16
     8aa:	70 e0       	ldi	r23, 0x00	; 0
     8ac:	c7 01       	movw	r24, r14
     8ae:	6c dc       	rcall	.-1832   	; 0x188 <rcvr_datablock>
     8b0:	11 e0       	ldi	r17, 0x01	; 1
     8b2:	89 2b       	or	r24, r25
     8b4:	09 f4       	brne	.+2      	; 0x8b8 <disk_ioctl+0x286>
     8b6:	46 c0       	rjmp	.+140    	; 0x944 <disk_ioctl+0x312>
     8b8:	10 e0       	ldi	r17, 0x00	; 0
     8ba:	44 c0       	rjmp	.+136    	; 0x944 <disk_ioctl+0x312>
			res = RES_OK;
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
     8bc:	40 e0       	ldi	r20, 0x00	; 0
     8be:	50 e0       	ldi	r21, 0x00	; 0
     8c0:	ba 01       	movw	r22, r20
     8c2:	8a e3       	ldi	r24, 0x3A	; 58
     8c4:	98 dc       	rcall	.-1744   	; 0x1f6 <send_cmd>
     8c6:	81 11       	cpse	r24, r1
     8c8:	3a c0       	rjmp	.+116    	; 0x93e <disk_ioctl+0x30c>
     8ca:	87 01       	movw	r16, r14
     8cc:	f4 e0       	ldi	r31, 0x04	; 4
     8ce:	ef 0e       	add	r14, r31
     8d0:	f1 1c       	adc	r15, r1
			for (n = 4; n; n--) *ptr++ = xchg_spi(0xFF);
     8d2:	8f ef       	ldi	r24, 0xFF	; 255
     8d4:	3a dc       	rcall	.-1932   	; 0x14a <xchg_spi>
     8d6:	f8 01       	movw	r30, r16
     8d8:	81 93       	st	Z+, r24
     8da:	8f 01       	movw	r16, r30
     8dc:	ee 15       	cp	r30, r14
     8de:	ff 05       	cpc	r31, r15
     8e0:	c1 f7       	brne	.-16     	; 0x8d2 <disk_ioctl+0x2a0>
			res = RES_OK;
     8e2:	10 e0       	ldi	r17, 0x00	; 0
     8e4:	2f c0       	rjmp	.+94     	; 0x944 <disk_ioctl+0x312>
		}
		break;

	case MMC_GET_SDSTAT :	/* Receive SD statsu as a data block (64 bytes) */
		if (send_cmd(ACMD13, 0) == 0) {	/* SD_STATUS */
     8e6:	40 e0       	ldi	r20, 0x00	; 0
     8e8:	50 e0       	ldi	r21, 0x00	; 0
     8ea:	ba 01       	movw	r22, r20
     8ec:	8d e8       	ldi	r24, 0x8D	; 141
     8ee:	83 dc       	rcall	.-1786   	; 0x1f6 <send_cmd>
     8f0:	81 11       	cpse	r24, r1
     8f2:	27 c0       	rjmp	.+78     	; 0x942 <disk_ioctl+0x310>
			xchg_spi(0xFF);
     8f4:	8f ef       	ldi	r24, 0xFF	; 255
     8f6:	29 dc       	rcall	.-1966   	; 0x14a <xchg_spi>
			if (rcvr_datablock(ptr, 64))
     8f8:	60 e4       	ldi	r22, 0x40	; 64
     8fa:	70 e0       	ldi	r23, 0x00	; 0
     8fc:	c7 01       	movw	r24, r14
     8fe:	44 dc       	rcall	.-1912   	; 0x188 <rcvr_datablock>
     900:	11 e0       	ldi	r17, 0x01	; 1
     902:	89 2b       	or	r24, r25
     904:	f9 f0       	breq	.+62     	; 0x944 <disk_ioctl+0x312>
     906:	10 e0       	ldi	r17, 0x00	; 0
     908:	1d c0       	rjmp	.+58     	; 0x944 <disk_ioctl+0x312>
				res = RES_OK;
		}
		break;

	case CTRL_POWER_OFF :	/* Power off */
		power_off();
     90a:	17 dc       	rcall	.-2002   	; 0x13a <power_off>
		Stat |= STA_NOINIT;
     90c:	80 91 00 01 	lds	r24, 0x0100
     910:	81 60       	ori	r24, 0x01	; 1
     912:	80 93 00 01 	sts	0x0100, r24
		res = RES_OK;
     916:	10 e0       	ldi	r17, 0x00	; 0
		break;
     918:	15 c0       	rjmp	.+42     	; 0x944 <disk_ioctl+0x312>

	default:
		res = RES_PARERR;
     91a:	14 e0       	ldi	r17, 0x04	; 4
     91c:	13 c0       	rjmp	.+38     	; 0x944 <disk_ioctl+0x312>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
     91e:	11 e0       	ldi	r17, 0x01	; 1
     920:	11 c0       	rjmp	.+34     	; 0x944 <disk_ioctl+0x312>
     922:	11 e0       	ldi	r17, 0x01	; 1
     924:	0f c0       	rjmp	.+30     	; 0x944 <disk_ioctl+0x312>
     926:	11 e0       	ldi	r17, 0x01	; 1
     928:	0d c0       	rjmp	.+26     	; 0x944 <disk_ioctl+0x312>
     92a:	11 e0       	ldi	r17, 0x01	; 1
     92c:	0b c0       	rjmp	.+22     	; 0x944 <disk_ioctl+0x312>
     92e:	11 e0       	ldi	r17, 0x01	; 1
     930:	09 c0       	rjmp	.+18     	; 0x944 <disk_ioctl+0x312>
     932:	11 e0       	ldi	r17, 0x01	; 1
     934:	07 c0       	rjmp	.+14     	; 0x944 <disk_ioctl+0x312>
     936:	11 e0       	ldi	r17, 0x01	; 1
     938:	05 c0       	rjmp	.+10     	; 0x944 <disk_ioctl+0x312>
     93a:	11 e0       	ldi	r17, 0x01	; 1
     93c:	03 c0       	rjmp	.+6      	; 0x944 <disk_ioctl+0x312>
     93e:	11 e0       	ldi	r17, 0x01	; 1
     940:	01 c0       	rjmp	.+2      	; 0x944 <disk_ioctl+0x312>
     942:	11 e0       	ldi	r17, 0x01	; 1

	default:
		res = RES_PARERR;
	}

	deselect();
     944:	08 dc       	rcall	.-2032   	; 0x156 <deselect>

	return res;
     946:	81 2f       	mov	r24, r17
     948:	03 c0       	rjmp	.+6      	; 0x950 <disk_ioctl+0x31e>
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
     94a:	84 e0       	ldi	r24, 0x04	; 4
     94c:	01 c0       	rjmp	.+2      	; 0x950 <disk_ioctl+0x31e>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
     94e:	83 e0       	ldi	r24, 0x03	; 3
	}

	deselect();

	return res;
}
     950:	60 96       	adiw	r28, 0x10	; 16
     952:	0f b6       	in	r0, 0x3f	; 63
     954:	f8 94       	cli
     956:	de bf       	out	0x3e, r29	; 62
     958:	0f be       	out	0x3f, r0	; 63
     95a:	cd bf       	out	0x3d, r28	; 61
     95c:	df 91       	pop	r29
     95e:	cf 91       	pop	r28
     960:	1f 91       	pop	r17
     962:	0f 91       	pop	r16
     964:	ff 90       	pop	r15
     966:	ef 90       	pop	r14
     968:	08 95       	ret

0000096a <mem_cpy>:

	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
	fp->flag |= FA__WRITTEN;						/* Set file change flag */

	LEAVE_FF(fp->fs, FR_OK);
}
     96a:	41 15       	cp	r20, r1
     96c:	51 05       	cpc	r21, r1
     96e:	51 f0       	breq	.+20     	; 0x984 <mem_cpy+0x1a>
     970:	a6 2f       	mov	r26, r22
     972:	b7 2f       	mov	r27, r23
     974:	fc 01       	movw	r30, r24
     976:	48 0f       	add	r20, r24
     978:	59 1f       	adc	r21, r25
     97a:	9d 91       	ld	r25, X+
     97c:	91 93       	st	Z+, r25
     97e:	e4 17       	cp	r30, r20
     980:	f5 07       	cpc	r31, r21
     982:	d9 f7       	brne	.-10     	; 0x97a <mem_cpy+0x10>
     984:	08 95       	ret

00000986 <ld_clust>:
     986:	0f 93       	push	r16
     988:	1f 93       	push	r17
     98a:	dc 01       	movw	r26, r24
     98c:	fb 01       	movw	r30, r22
     98e:	93 8d       	ldd	r25, Z+27	; 0x1b
     990:	69 2f       	mov	r22, r25
     992:	70 e0       	ldi	r23, 0x00	; 0
     994:	76 2f       	mov	r23, r22
     996:	66 27       	eor	r22, r22
     998:	82 8d       	ldd	r24, Z+26	; 0x1a
     99a:	68 2b       	or	r22, r24
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	2c 91       	ld	r18, X
     9a2:	23 30       	cpi	r18, 0x03	; 3
     9a4:	79 f4       	brne	.+30     	; 0x9c4 <ld_clust+0x3e>
     9a6:	05 89       	ldd	r16, Z+21	; 0x15
     9a8:	10 e0       	ldi	r17, 0x00	; 0
     9aa:	10 2f       	mov	r17, r16
     9ac:	00 27       	eor	r16, r16
     9ae:	24 89       	ldd	r18, Z+20	; 0x14
     9b0:	02 2b       	or	r16, r18
     9b2:	20 e0       	ldi	r18, 0x00	; 0
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	98 01       	movw	r18, r16
     9b8:	11 27       	eor	r17, r17
     9ba:	00 27       	eor	r16, r16
     9bc:	60 2b       	or	r22, r16
     9be:	71 2b       	or	r23, r17
     9c0:	82 2b       	or	r24, r18
     9c2:	93 2b       	or	r25, r19
     9c4:	1f 91       	pop	r17
     9c6:	0f 91       	pop	r16
     9c8:	08 95       	ret

000009ca <get_ldnumber>:
     9ca:	cf 93       	push	r28
     9cc:	df 93       	push	r29
     9ce:	ec 01       	movw	r28, r24
     9d0:	a8 81       	ld	r26, Y
     9d2:	b9 81       	ldd	r27, Y+1	; 0x01
     9d4:	10 97       	sbiw	r26, 0x00	; 0
     9d6:	f9 f0       	breq	.+62     	; 0xa16 <get_ldnumber+0x4c>
     9d8:	4c 91       	ld	r20, X
     9da:	41 32       	cpi	r20, 0x21	; 33
     9dc:	58 f0       	brcs	.+22     	; 0x9f4 <get_ldnumber+0x2a>
     9de:	4a 33       	cpi	r20, 0x3A	; 58
     9e0:	31 f1       	breq	.+76     	; 0xa2e <get_ldnumber+0x64>
     9e2:	fd 01       	movw	r30, r26
     9e4:	31 96       	adiw	r30, 0x01	; 1
     9e6:	9f 01       	movw	r18, r30
     9e8:	91 91       	ld	r25, Z+
     9ea:	91 32       	cpi	r25, 0x21	; 33
     9ec:	28 f0       	brcs	.+10     	; 0x9f8 <get_ldnumber+0x2e>
     9ee:	9a 33       	cpi	r25, 0x3A	; 58
     9f0:	d1 f7       	brne	.-12     	; 0x9e6 <get_ldnumber+0x1c>
     9f2:	04 c0       	rjmp	.+8      	; 0x9fc <get_ldnumber+0x32>
     9f4:	94 2f       	mov	r25, r20
     9f6:	9d 01       	movw	r18, r26
     9f8:	9a 33       	cpi	r25, 0x3A	; 58
     9fa:	81 f4       	brne	.+32     	; 0xa1c <get_ldnumber+0x52>
     9fc:	cd 01       	movw	r24, r26
     9fe:	01 96       	adiw	r24, 0x01	; 1
     a00:	28 17       	cp	r18, r24
     a02:	39 07       	cpc	r19, r25
     a04:	71 f4       	brne	.+28     	; 0xa22 <get_ldnumber+0x58>
     a06:	40 33       	cpi	r20, 0x30	; 48
     a08:	79 f4       	brne	.+30     	; 0xa28 <get_ldnumber+0x5e>
     a0a:	12 96       	adiw	r26, 0x02	; 2
     a0c:	b9 83       	std	Y+1, r27	; 0x01
     a0e:	a8 83       	st	Y, r26
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	0e c0       	rjmp	.+28     	; 0xa32 <get_ldnumber+0x68>
     a16:	8f ef       	ldi	r24, 0xFF	; 255
     a18:	9f ef       	ldi	r25, 0xFF	; 255
     a1a:	0b c0       	rjmp	.+22     	; 0xa32 <get_ldnumber+0x68>
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	08 c0       	rjmp	.+16     	; 0xa32 <get_ldnumber+0x68>
     a22:	8f ef       	ldi	r24, 0xFF	; 255
     a24:	9f ef       	ldi	r25, 0xFF	; 255
     a26:	05 c0       	rjmp	.+10     	; 0xa32 <get_ldnumber+0x68>
     a28:	8f ef       	ldi	r24, 0xFF	; 255
     a2a:	9f ef       	ldi	r25, 0xFF	; 255
     a2c:	02 c0       	rjmp	.+4      	; 0xa32 <get_ldnumber+0x68>
     a2e:	9d 01       	movw	r18, r26
     a30:	e5 cf       	rjmp	.-54     	; 0x9fc <get_ldnumber+0x32>
     a32:	df 91       	pop	r29
     a34:	cf 91       	pop	r28
     a36:	08 95       	ret

00000a38 <sync_window>:
     a38:	8f 92       	push	r8
     a3a:	9f 92       	push	r9
     a3c:	af 92       	push	r10
     a3e:	bf 92       	push	r11
     a40:	cf 92       	push	r12
     a42:	df 92       	push	r13
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	cf 93       	push	r28
     a4e:	df 93       	push	r29
     a50:	fc 01       	movw	r30, r24
     a52:	24 81       	ldd	r18, Z+4	; 0x04
     a54:	22 23       	and	r18, r18
     a56:	09 f4       	brne	.+2      	; 0xa5a <sync_window+0x22>
     a58:	44 c0       	rjmp	.+136    	; 0xae2 <sync_window+0xaa>
     a5a:	ec 01       	movw	r28, r24
     a5c:	c2 a4       	ldd	r12, Z+42	; 0x2a
     a5e:	d3 a4       	ldd	r13, Z+43	; 0x2b
     a60:	e4 a4       	ldd	r14, Z+44	; 0x2c
     a62:	f5 a4       	ldd	r15, Z+45	; 0x2d
     a64:	5c 01       	movw	r10, r24
     a66:	fe e2       	ldi	r31, 0x2E	; 46
     a68:	af 0e       	add	r10, r31
     a6a:	b1 1c       	adc	r11, r1
     a6c:	01 e0       	ldi	r16, 0x01	; 1
     a6e:	10 e0       	ldi	r17, 0x00	; 0
     a70:	a7 01       	movw	r20, r14
     a72:	96 01       	movw	r18, r12
     a74:	b5 01       	movw	r22, r10
     a76:	89 81       	ldd	r24, Y+1	; 0x01
     a78:	6e dd       	rcall	.-1316   	; 0x556 <disk_write>
     a7a:	81 11       	cpse	r24, r1
     a7c:	34 c0       	rjmp	.+104    	; 0xae6 <sync_window+0xae>
     a7e:	1c 82       	std	Y+4, r1	; 0x04
     a80:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a82:	9f 8d       	ldd	r25, Y+31	; 0x1f
     a84:	a8 a1       	ldd	r26, Y+32	; 0x20
     a86:	b9 a1       	ldd	r27, Y+33	; 0x21
     a88:	b7 01       	movw	r22, r14
     a8a:	a6 01       	movw	r20, r12
     a8c:	48 1b       	sub	r20, r24
     a8e:	59 0b       	sbc	r21, r25
     a90:	6a 0b       	sbc	r22, r26
     a92:	7b 0b       	sbc	r23, r27
     a94:	8e 89       	ldd	r24, Y+22	; 0x16
     a96:	9f 89       	ldd	r25, Y+23	; 0x17
     a98:	a8 8d       	ldd	r26, Y+24	; 0x18
     a9a:	b9 8d       	ldd	r27, Y+25	; 0x19
     a9c:	48 17       	cp	r20, r24
     a9e:	59 07       	cpc	r21, r25
     aa0:	6a 07       	cpc	r22, r26
     aa2:	7b 07       	cpc	r23, r27
     aa4:	10 f5       	brcc	.+68     	; 0xaea <sync_window+0xb2>
     aa6:	8b 80       	ldd	r8, Y+3	; 0x03
     aa8:	91 2c       	mov	r9, r1
     aaa:	82 e0       	ldi	r24, 0x02	; 2
     aac:	88 16       	cp	r8, r24
     aae:	91 04       	cpc	r9, r1
     ab0:	f0 f0       	brcs	.+60     	; 0xaee <sync_window+0xb6>
     ab2:	8e 89       	ldd	r24, Y+22	; 0x16
     ab4:	9f 89       	ldd	r25, Y+23	; 0x17
     ab6:	a8 8d       	ldd	r26, Y+24	; 0x18
     ab8:	b9 8d       	ldd	r27, Y+25	; 0x19
     aba:	c8 0e       	add	r12, r24
     abc:	d9 1e       	adc	r13, r25
     abe:	ea 1e       	adc	r14, r26
     ac0:	fb 1e       	adc	r15, r27
     ac2:	01 e0       	ldi	r16, 0x01	; 1
     ac4:	10 e0       	ldi	r17, 0x00	; 0
     ac6:	a7 01       	movw	r20, r14
     ac8:	96 01       	movw	r18, r12
     aca:	b5 01       	movw	r22, r10
     acc:	89 81       	ldd	r24, Y+1	; 0x01
     ace:	43 dd       	rcall	.-1402   	; 0x556 <disk_write>
     ad0:	e1 e0       	ldi	r30, 0x01	; 1
     ad2:	8e 1a       	sub	r8, r30
     ad4:	91 08       	sbc	r9, r1
     ad6:	f1 e0       	ldi	r31, 0x01	; 1
     ad8:	8f 16       	cp	r8, r31
     ada:	91 04       	cpc	r9, r1
     adc:	51 f7       	brne	.-44     	; 0xab2 <sync_window+0x7a>
     ade:	80 e0       	ldi	r24, 0x00	; 0
     ae0:	07 c0       	rjmp	.+14     	; 0xaf0 <sync_window+0xb8>
     ae2:	80 e0       	ldi	r24, 0x00	; 0
     ae4:	05 c0       	rjmp	.+10     	; 0xaf0 <sync_window+0xb8>
     ae6:	81 e0       	ldi	r24, 0x01	; 1
     ae8:	03 c0       	rjmp	.+6      	; 0xaf0 <sync_window+0xb8>
     aea:	80 e0       	ldi	r24, 0x00	; 0
     aec:	01 c0       	rjmp	.+2      	; 0xaf0 <sync_window+0xb8>
     aee:	80 e0       	ldi	r24, 0x00	; 0
     af0:	df 91       	pop	r29
     af2:	cf 91       	pop	r28
     af4:	1f 91       	pop	r17
     af6:	0f 91       	pop	r16
     af8:	ff 90       	pop	r15
     afa:	ef 90       	pop	r14
     afc:	df 90       	pop	r13
     afe:	cf 90       	pop	r12
     b00:	bf 90       	pop	r11
     b02:	af 90       	pop	r10
     b04:	9f 90       	pop	r9
     b06:	8f 90       	pop	r8
     b08:	08 95       	ret

00000b0a <move_window>:
     b0a:	8f 92       	push	r8
     b0c:	9f 92       	push	r9
     b0e:	af 92       	push	r10
     b10:	bf 92       	push	r11
     b12:	ff 92       	push	r15
     b14:	0f 93       	push	r16
     b16:	1f 93       	push	r17
     b18:	cf 93       	push	r28
     b1a:	df 93       	push	r29
     b1c:	ec 01       	movw	r28, r24
     b1e:	4a 01       	movw	r8, r20
     b20:	5b 01       	movw	r10, r22
     b22:	8a a5       	ldd	r24, Y+42	; 0x2a
     b24:	9b a5       	ldd	r25, Y+43	; 0x2b
     b26:	ac a5       	ldd	r26, Y+44	; 0x2c
     b28:	bd a5       	ldd	r27, Y+45	; 0x2d
     b2a:	84 17       	cp	r24, r20
     b2c:	95 07       	cpc	r25, r21
     b2e:	a6 07       	cpc	r26, r22
     b30:	b7 07       	cpc	r27, r23
     b32:	d9 f0       	breq	.+54     	; 0xb6a <move_window+0x60>
     b34:	ce 01       	movw	r24, r28
     b36:	80 df       	rcall	.-256    	; 0xa38 <sync_window>
     b38:	f8 2e       	mov	r15, r24
     b3a:	81 11       	cpse	r24, r1
     b3c:	17 c0       	rjmp	.+46     	; 0xb6c <move_window+0x62>
     b3e:	01 e0       	ldi	r16, 0x01	; 1
     b40:	10 e0       	ldi	r17, 0x00	; 0
     b42:	a5 01       	movw	r20, r10
     b44:	94 01       	movw	r18, r8
     b46:	be 01       	movw	r22, r28
     b48:	62 5d       	subi	r22, 0xD2	; 210
     b4a:	7f 4f       	sbci	r23, 0xFF	; 255
     b4c:	89 81       	ldd	r24, Y+1	; 0x01
     b4e:	b1 dc       	rcall	.-1694   	; 0x4b2 <disk_read>
     b50:	88 23       	and	r24, r24
     b52:	31 f0       	breq	.+12     	; 0xb60 <move_window+0x56>
     b54:	ff 24       	eor	r15, r15
     b56:	f3 94       	inc	r15
     b58:	88 24       	eor	r8, r8
     b5a:	8a 94       	dec	r8
     b5c:	98 2c       	mov	r9, r8
     b5e:	54 01       	movw	r10, r8
     b60:	8a a6       	std	Y+42, r8	; 0x2a
     b62:	9b a6       	std	Y+43, r9	; 0x2b
     b64:	ac a6       	std	Y+44, r10	; 0x2c
     b66:	bd a6       	std	Y+45, r11	; 0x2d
     b68:	01 c0       	rjmp	.+2      	; 0xb6c <move_window+0x62>
     b6a:	f1 2c       	mov	r15, r1
     b6c:	8f 2d       	mov	r24, r15
     b6e:	df 91       	pop	r29
     b70:	cf 91       	pop	r28
     b72:	1f 91       	pop	r17
     b74:	0f 91       	pop	r16
     b76:	ff 90       	pop	r15
     b78:	bf 90       	pop	r11
     b7a:	af 90       	pop	r10
     b7c:	9f 90       	pop	r9
     b7e:	8f 90       	pop	r8
     b80:	08 95       	ret

00000b82 <check_fs>:
     b82:	cf 93       	push	r28
     b84:	df 93       	push	r29
     b86:	ec 01       	movw	r28, r24
     b88:	1c 82       	std	Y+4, r1	; 0x04
     b8a:	8f ef       	ldi	r24, 0xFF	; 255
     b8c:	9f ef       	ldi	r25, 0xFF	; 255
     b8e:	dc 01       	movw	r26, r24
     b90:	8a a7       	std	Y+42, r24	; 0x2a
     b92:	9b a7       	std	Y+43, r25	; 0x2b
     b94:	ac a7       	std	Y+44, r26	; 0x2c
     b96:	bd a7       	std	Y+45, r27	; 0x2d
     b98:	ce 01       	movw	r24, r28
     b9a:	b7 df       	rcall	.-146    	; 0xb0a <move_window>
     b9c:	81 11       	cpse	r24, r1
     b9e:	51 c0       	rjmp	.+162    	; 0xc42 <check_fs+0xc0>
     ba0:	fe 01       	movw	r30, r28
     ba2:	e3 5d       	subi	r30, 0xD3	; 211
     ba4:	fd 4f       	sbci	r31, 0xFD	; 253
     ba6:	80 81       	ld	r24, Z
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	98 2f       	mov	r25, r24
     bac:	88 27       	eor	r24, r24
     bae:	31 97       	sbiw	r30, 0x01	; 1
     bb0:	20 81       	ld	r18, Z
     bb2:	82 2b       	or	r24, r18
     bb4:	85 35       	cpi	r24, 0x55	; 85
     bb6:	9a 4a       	sbci	r25, 0xAA	; 170
     bb8:	09 f0       	breq	.+2      	; 0xbbc <check_fs+0x3a>
     bba:	45 c0       	rjmp	.+138    	; 0xc46 <check_fs+0xc4>
     bbc:	e5 5c       	subi	r30, 0xC5	; 197
     bbe:	f1 40       	sbci	r31, 0x01	; 1
     bc0:	20 81       	ld	r18, Z
     bc2:	31 97       	sbiw	r30, 0x01	; 1
     bc4:	80 81       	ld	r24, Z
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	a0 e0       	ldi	r26, 0x00	; 0
     bca:	b0 e0       	ldi	r27, 0x00	; 0
     bcc:	dc 01       	movw	r26, r24
     bce:	99 27       	eor	r25, r25
     bd0:	88 27       	eor	r24, r24
     bd2:	b2 2b       	or	r27, r18
     bd4:	32 97       	sbiw	r30, 0x02	; 2
     bd6:	20 81       	ld	r18, Z
     bd8:	82 2b       	or	r24, r18
     bda:	31 96       	adiw	r30, 0x01	; 1
     bdc:	40 81       	ld	r20, Z
     bde:	50 e0       	ldi	r21, 0x00	; 0
     be0:	54 2f       	mov	r21, r20
     be2:	44 27       	eor	r20, r20
     be4:	60 e0       	ldi	r22, 0x00	; 0
     be6:	70 e0       	ldi	r23, 0x00	; 0
     be8:	84 2b       	or	r24, r20
     bea:	95 2b       	or	r25, r21
     bec:	a6 2b       	or	r26, r22
     bee:	b7 2b       	or	r27, r23
     bf0:	bb 27       	eor	r27, r27
     bf2:	86 34       	cpi	r24, 0x46	; 70
     bf4:	91 44       	sbci	r25, 0x41	; 65
     bf6:	a4 45       	sbci	r26, 0x54	; 84
     bf8:	b1 05       	cpc	r27, r1
     bfa:	39 f1       	breq	.+78     	; 0xc4a <check_fs+0xc8>
     bfc:	7e 96       	adiw	r30, 0x1e	; 30
     bfe:	80 81       	ld	r24, Z
     c00:	31 97       	sbiw	r30, 0x01	; 1
     c02:	40 81       	ld	r20, Z
     c04:	50 e0       	ldi	r21, 0x00	; 0
     c06:	60 e0       	ldi	r22, 0x00	; 0
     c08:	70 e0       	ldi	r23, 0x00	; 0
     c0a:	ba 01       	movw	r22, r20
     c0c:	55 27       	eor	r21, r21
     c0e:	44 27       	eor	r20, r20
     c10:	78 2b       	or	r23, r24
     c12:	32 97       	sbiw	r30, 0x02	; 2
     c14:	80 81       	ld	r24, Z
     c16:	48 2b       	or	r20, r24
     c18:	cf 57       	subi	r28, 0x7F	; 127
     c1a:	df 4f       	sbci	r29, 0xFF	; 255
     c1c:	88 81       	ld	r24, Y
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	98 2f       	mov	r25, r24
     c22:	88 27       	eor	r24, r24
     c24:	a0 e0       	ldi	r26, 0x00	; 0
     c26:	b0 e0       	ldi	r27, 0x00	; 0
     c28:	48 2b       	or	r20, r24
     c2a:	59 2b       	or	r21, r25
     c2c:	6a 2b       	or	r22, r26
     c2e:	7b 2b       	or	r23, r27
     c30:	77 27       	eor	r23, r23
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	46 34       	cpi	r20, 0x46	; 70
     c36:	51 44       	sbci	r21, 0x41	; 65
     c38:	64 45       	sbci	r22, 0x54	; 84
     c3a:	71 05       	cpc	r23, r1
     c3c:	39 f4       	brne	.+14     	; 0xc4c <check_fs+0xca>
     c3e:	80 e0       	ldi	r24, 0x00	; 0
     c40:	05 c0       	rjmp	.+10     	; 0xc4c <check_fs+0xca>
     c42:	83 e0       	ldi	r24, 0x03	; 3
     c44:	03 c0       	rjmp	.+6      	; 0xc4c <check_fs+0xca>
     c46:	82 e0       	ldi	r24, 0x02	; 2
     c48:	01 c0       	rjmp	.+2      	; 0xc4c <check_fs+0xca>
     c4a:	80 e0       	ldi	r24, 0x00	; 0
     c4c:	df 91       	pop	r29
     c4e:	cf 91       	pop	r28
     c50:	08 95       	ret

00000c52 <validate>:
     c52:	00 97       	sbiw	r24, 0x00	; 0
     c54:	c1 f0       	breq	.+48     	; 0xc86 <validate+0x34>
     c56:	dc 01       	movw	r26, r24
     c58:	ed 91       	ld	r30, X+
     c5a:	fc 91       	ld	r31, X
     c5c:	11 97       	sbiw	r26, 0x01	; 1
     c5e:	30 97       	sbiw	r30, 0x00	; 0
     c60:	a1 f0       	breq	.+40     	; 0xc8a <validate+0x38>
     c62:	20 81       	ld	r18, Z
     c64:	22 23       	and	r18, r18
     c66:	99 f0       	breq	.+38     	; 0xc8e <validate+0x3c>
     c68:	26 81       	ldd	r18, Z+6	; 0x06
     c6a:	37 81       	ldd	r19, Z+7	; 0x07
     c6c:	12 96       	adiw	r26, 0x02	; 2
     c6e:	8d 91       	ld	r24, X+
     c70:	9c 91       	ld	r25, X
     c72:	13 97       	sbiw	r26, 0x03	; 3
     c74:	28 17       	cp	r18, r24
     c76:	39 07       	cpc	r19, r25
     c78:	61 f4       	brne	.+24     	; 0xc92 <validate+0x40>
     c7a:	81 81       	ldd	r24, Z+1	; 0x01
     c7c:	13 dc       	rcall	.-2010   	; 0x4a4 <disk_status>
     c7e:	80 ff       	sbrs	r24, 0
     c80:	0a c0       	rjmp	.+20     	; 0xc96 <validate+0x44>
     c82:	89 e0       	ldi	r24, 0x09	; 9
     c84:	08 95       	ret
     c86:	89 e0       	ldi	r24, 0x09	; 9
     c88:	08 95       	ret
     c8a:	89 e0       	ldi	r24, 0x09	; 9
     c8c:	08 95       	ret
     c8e:	89 e0       	ldi	r24, 0x09	; 9
     c90:	08 95       	ret
     c92:	89 e0       	ldi	r24, 0x09	; 9
     c94:	08 95       	ret
     c96:	80 e0       	ldi	r24, 0x00	; 0
     c98:	08 95       	ret

00000c9a <find_volume>:
     c9a:	2f 92       	push	r2
     c9c:	3f 92       	push	r3
     c9e:	4f 92       	push	r4
     ca0:	5f 92       	push	r5
     ca2:	6f 92       	push	r6
     ca4:	7f 92       	push	r7
     ca6:	8f 92       	push	r8
     ca8:	9f 92       	push	r9
     caa:	af 92       	push	r10
     cac:	bf 92       	push	r11
     cae:	cf 92       	push	r12
     cb0:	df 92       	push	r13
     cb2:	ef 92       	push	r14
     cb4:	ff 92       	push	r15
     cb6:	0f 93       	push	r16
     cb8:	1f 93       	push	r17
     cba:	cf 93       	push	r28
     cbc:	df 93       	push	r29
     cbe:	cd b7       	in	r28, 0x3d	; 61
     cc0:	de b7       	in	r29, 0x3e	; 62
     cc2:	6d 97       	sbiw	r28, 0x1d	; 29
     cc4:	0f b6       	in	r0, 0x3f	; 63
     cc6:	f8 94       	cli
     cc8:	de bf       	out	0x3e, r29	; 62
     cca:	0f be       	out	0x3f, r0	; 63
     ccc:	cd bf       	out	0x3d, r28	; 61
     cce:	6c 01       	movw	r12, r24
     cd0:	cb 01       	movw	r24, r22
     cd2:	b4 2e       	mov	r11, r20
     cd4:	d6 01       	movw	r26, r12
     cd6:	1d 92       	st	X+, r1
     cd8:	1c 92       	st	X, r1
     cda:	77 de       	rcall	.-786    	; 0x9ca <get_ldnumber>
     cdc:	7c 01       	movw	r14, r24
     cde:	99 23       	and	r25, r25
     ce0:	0c f4       	brge	.+2      	; 0xce4 <find_volume+0x4a>
     ce2:	d4 c2       	rjmp	.+1448   	; 0x128c <find_volume+0x5f2>
     ce4:	fc 01       	movw	r30, r24
     ce6:	ee 0f       	add	r30, r30
     ce8:	ff 1f       	adc	r31, r31
     cea:	e3 5e       	subi	r30, 0xE3	; 227
     cec:	fe 4f       	sbci	r31, 0xFE	; 254
     cee:	00 81       	ld	r16, Z
     cf0:	11 81       	ldd	r17, Z+1	; 0x01
     cf2:	01 15       	cp	r16, r1
     cf4:	11 05       	cpc	r17, r1
     cf6:	09 f4       	brne	.+2      	; 0xcfa <find_volume+0x60>
     cf8:	cb c2       	rjmp	.+1430   	; 0x1290 <find_volume+0x5f6>
     cfa:	f6 01       	movw	r30, r12
     cfc:	11 83       	std	Z+1, r17	; 0x01
     cfe:	00 83       	st	Z, r16
     d00:	d8 01       	movw	r26, r16
     d02:	8c 91       	ld	r24, X
     d04:	88 23       	and	r24, r24
     d06:	61 f0       	breq	.+24     	; 0xd20 <find_volume+0x86>
     d08:	11 96       	adiw	r26, 0x01	; 1
     d0a:	8c 91       	ld	r24, X
     d0c:	cb db       	rcall	.-2154   	; 0x4a4 <disk_status>
     d0e:	80 fd       	sbrc	r24, 0
     d10:	07 c0       	rjmp	.+14     	; 0xd20 <find_volume+0x86>
     d12:	bb 20       	and	r11, r11
     d14:	09 f4       	brne	.+2      	; 0xd18 <find_volume+0x7e>
     d16:	be c2       	rjmp	.+1404   	; 0x1294 <find_volume+0x5fa>
     d18:	82 ff       	sbrs	r24, 2
     d1a:	be c2       	rjmp	.+1404   	; 0x1298 <find_volume+0x5fe>
     d1c:	8a e0       	ldi	r24, 0x0A	; 10
     d1e:	63 c3       	rjmp	.+1734   	; 0x13e6 <find_volume+0x74c>
     d20:	f8 01       	movw	r30, r16
     d22:	10 82       	st	Z, r1
     d24:	e1 82       	std	Z+1, r14	; 0x01
     d26:	8e 2d       	mov	r24, r14
     d28:	f8 da       	rcall	.-2576   	; 0x31a <disk_initialize>
     d2a:	80 fd       	sbrc	r24, 0
     d2c:	b7 c2       	rjmp	.+1390   	; 0x129c <find_volume+0x602>
     d2e:	bb 20       	and	r11, r11
     d30:	09 f4       	brne	.+2      	; 0xd34 <find_volume+0x9a>
     d32:	d4 c2       	rjmp	.+1448   	; 0x12dc <find_volume+0x642>
     d34:	82 fd       	sbrc	r24, 2
     d36:	b4 c2       	rjmp	.+1384   	; 0x12a0 <find_volume+0x606>
     d38:	d1 c2       	rjmp	.+1442   	; 0x12dc <find_volume+0x642>
     d3a:	df 01       	movw	r26, r30
     d3c:	17 97       	sbiw	r26, 0x07	; 7
     d3e:	8c 91       	ld	r24, X
     d40:	88 23       	and	r24, r24
     d42:	b9 f0       	breq	.+46     	; 0xd72 <find_volume+0xd8>
     d44:	14 96       	adiw	r26, 0x04	; 4
     d46:	cc 90       	ld	r12, X
     d48:	80 81       	ld	r24, Z
     d4a:	d1 2c       	mov	r13, r1
     d4c:	e1 2c       	mov	r14, r1
     d4e:	f1 2c       	mov	r15, r1
     d50:	f8 2a       	or	r15, r24
     d52:	12 96       	adiw	r26, 0x02	; 2
     d54:	8c 91       	ld	r24, X
     d56:	e8 2a       	or	r14, r24
     d58:	11 97       	sbiw	r26, 0x01	; 1
     d5a:	ac 91       	ld	r26, X
     d5c:	b0 e0       	ldi	r27, 0x00	; 0
     d5e:	ba 2f       	mov	r27, r26
     d60:	aa 27       	eor	r26, r26
     d62:	cd 01       	movw	r24, r26
     d64:	a0 e0       	ldi	r26, 0x00	; 0
     d66:	b0 e0       	ldi	r27, 0x00	; 0
     d68:	c8 2a       	or	r12, r24
     d6a:	d9 2a       	or	r13, r25
     d6c:	ea 2a       	or	r14, r26
     d6e:	fb 2a       	or	r15, r27
     d70:	04 c0       	rjmp	.+8      	; 0xd7a <find_volume+0xe0>
     d72:	c8 2c       	mov	r12, r8
     d74:	d9 2c       	mov	r13, r9
     d76:	e7 2e       	mov	r14, r23
     d78:	f6 2e       	mov	r15, r22
     d7a:	d9 01       	movw	r26, r18
     d7c:	cd 92       	st	X+, r12
     d7e:	dd 92       	st	X+, r13
     d80:	ed 92       	st	X+, r14
     d82:	fd 92       	st	X+, r15
     d84:	9d 01       	movw	r18, r26
     d86:	70 96       	adiw	r30, 0x10	; 16
     d88:	e4 17       	cp	r30, r20
     d8a:	f5 07       	cpc	r31, r21
     d8c:	b1 f6       	brne	.-84     	; 0xd3a <find_volume+0xa0>
     d8e:	4e 01       	movw	r8, r28
     d90:	b1 e1       	ldi	r27, 0x11	; 17
     d92:	8b 0e       	add	r8, r27
     d94:	91 1c       	adc	r9, r1
     d96:	68 94       	set
     d98:	77 24       	eor	r7, r7
     d9a:	71 f8       	bld	r7, 1
     d9c:	f5 01       	movw	r30, r10
     d9e:	c1 90       	ld	r12, Z+
     da0:	d1 90       	ld	r13, Z+
     da2:	e1 90       	ld	r14, Z+
     da4:	f1 90       	ld	r15, Z+
     da6:	5f 01       	movw	r10, r30
     da8:	c1 14       	cp	r12, r1
     daa:	d1 04       	cpc	r13, r1
     dac:	e1 04       	cpc	r14, r1
     dae:	f1 04       	cpc	r15, r1
     db0:	39 f0       	breq	.+14     	; 0xdc0 <find_volume+0x126>
     db2:	b7 01       	movw	r22, r14
     db4:	a6 01       	movw	r20, r12
     db6:	c8 01       	movw	r24, r16
     db8:	e4 de       	rcall	.-568    	; 0xb82 <check_fs>
     dba:	81 11       	cpse	r24, r1
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <find_volume+0x128>
     dbe:	0d c0       	rjmp	.+26     	; 0xdda <find_volume+0x140>
     dc0:	87 2d       	mov	r24, r7
     dc2:	a8 14       	cp	r10, r8
     dc4:	b9 04       	cpc	r11, r9
     dc6:	51 f7       	brne	.-44     	; 0xd9c <find_volume+0x102>
     dc8:	03 c0       	rjmp	.+6      	; 0xdd0 <find_volume+0x136>
     dca:	c1 2c       	mov	r12, r1
     dcc:	d1 2c       	mov	r13, r1
     dce:	76 01       	movw	r14, r12
     dd0:	83 30       	cpi	r24, 0x03	; 3
     dd2:	09 f4       	brne	.+2      	; 0xdd6 <find_volume+0x13c>
     dd4:	67 c2       	rjmp	.+1230   	; 0x12a4 <find_volume+0x60a>
     dd6:	81 11       	cpse	r24, r1
     dd8:	67 c2       	rjmp	.+1230   	; 0x12a8 <find_volume+0x60e>
     dda:	d8 01       	movw	r26, r16
     ddc:	da 96       	adiw	r26, 0x3a	; 58
     dde:	8c 91       	ld	r24, X
     de0:	da 97       	sbiw	r26, 0x3a	; 58
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	98 2f       	mov	r25, r24
     de6:	88 27       	eor	r24, r24
     de8:	d9 96       	adiw	r26, 0x39	; 57
     dea:	2c 91       	ld	r18, X
     dec:	82 2b       	or	r24, r18
     dee:	81 15       	cp	r24, r1
     df0:	90 41       	sbci	r25, 0x10	; 16
     df2:	09 f0       	breq	.+2      	; 0xdf6 <find_volume+0x15c>
     df4:	5b c2       	rjmp	.+1206   	; 0x12ac <find_volume+0x612>
     df6:	f8 01       	movw	r30, r16
     df8:	eb 5b       	subi	r30, 0xBB	; 187
     dfa:	ff 4f       	sbci	r31, 0xFF	; 255
     dfc:	80 80       	ld	r8, Z
     dfe:	91 2c       	mov	r9, r1
     e00:	98 2c       	mov	r9, r8
     e02:	88 24       	eor	r8, r8
     e04:	31 97       	sbiw	r30, 0x01	; 1
     e06:	80 81       	ld	r24, Z
     e08:	88 2a       	or	r8, r24
     e0a:	a1 2c       	mov	r10, r1
     e0c:	b1 2c       	mov	r11, r1
     e0e:	81 14       	cp	r8, r1
     e10:	91 04       	cpc	r9, r1
     e12:	a1 04       	cpc	r10, r1
     e14:	b1 04       	cpc	r11, r1
     e16:	e9 f4       	brne	.+58     	; 0xe52 <find_volume+0x1b8>
     e18:	71 96       	adiw	r30, 0x11	; 17
     e1a:	80 81       	ld	r24, Z
     e1c:	31 97       	sbiw	r30, 0x01	; 1
     e1e:	80 80       	ld	r8, Z
     e20:	91 2c       	mov	r9, r1
     e22:	a1 2c       	mov	r10, r1
     e24:	b1 2c       	mov	r11, r1
     e26:	54 01       	movw	r10, r8
     e28:	99 24       	eor	r9, r9
     e2a:	88 24       	eor	r8, r8
     e2c:	b8 2a       	or	r11, r24
     e2e:	32 97       	sbiw	r30, 0x02	; 2
     e30:	80 81       	ld	r24, Z
     e32:	a5 01       	movw	r20, r10
     e34:	94 01       	movw	r18, r8
     e36:	28 2b       	or	r18, r24
     e38:	da 01       	movw	r26, r20
     e3a:	c9 01       	movw	r24, r18
     e3c:	31 96       	adiw	r30, 0x01	; 1
     e3e:	80 80       	ld	r8, Z
     e40:	91 2c       	mov	r9, r1
     e42:	98 2c       	mov	r9, r8
     e44:	88 24       	eor	r8, r8
     e46:	a1 2c       	mov	r10, r1
     e48:	b1 2c       	mov	r11, r1
     e4a:	88 2a       	or	r8, r24
     e4c:	99 2a       	or	r9, r25
     e4e:	aa 2a       	or	r10, r26
     e50:	bb 2a       	or	r11, r27
     e52:	d8 01       	movw	r26, r16
     e54:	56 96       	adiw	r26, 0x16	; 22
     e56:	8d 92       	st	X+, r8
     e58:	9d 92       	st	X+, r9
     e5a:	ad 92       	st	X+, r10
     e5c:	bc 92       	st	X, r11
     e5e:	59 97       	sbiw	r26, 0x19	; 25
     e60:	de 96       	adiw	r26, 0x3e	; 62
     e62:	ac 91       	ld	r26, X
     e64:	f8 01       	movw	r30, r16
     e66:	a3 83       	std	Z+3, r26	; 0x03
     e68:	8f ef       	ldi	r24, 0xFF	; 255
     e6a:	8a 0f       	add	r24, r26
     e6c:	82 30       	cpi	r24, 0x02	; 2
     e6e:	08 f0       	brcs	.+2      	; 0xe72 <find_volume+0x1d8>
     e70:	1f c2       	rjmp	.+1086   	; 0x12b0 <find_volume+0x616>
     e72:	f3 ad       	ldd	r31, Z+59	; 0x3b
     e74:	f9 8b       	std	Y+17, r31	; 0x11
     e76:	2f 2f       	mov	r18, r31
     e78:	f8 01       	movw	r30, r16
     e7a:	22 83       	std	Z+2, r18	; 0x02
     e7c:	22 23       	and	r18, r18
     e7e:	09 f4       	brne	.+2      	; 0xe82 <find_volume+0x1e8>
     e80:	19 c2       	rjmp	.+1074   	; 0x12b4 <find_volume+0x61a>
     e82:	82 2f       	mov	r24, r18
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	9c 01       	movw	r18, r24
     e88:	21 50       	subi	r18, 0x01	; 1
     e8a:	31 09       	sbc	r19, r1
     e8c:	82 23       	and	r24, r18
     e8e:	93 23       	and	r25, r19
     e90:	89 2b       	or	r24, r25
     e92:	09 f0       	breq	.+2      	; 0xe96 <find_volume+0x1fc>
     e94:	11 c2       	rjmp	.+1058   	; 0x12b8 <find_volume+0x61e>
     e96:	e0 5c       	subi	r30, 0xC0	; 192
     e98:	ff 4f       	sbci	r31, 0xFF	; 255
     e9a:	80 81       	ld	r24, Z
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	98 2f       	mov	r25, r24
     ea0:	88 27       	eor	r24, r24
     ea2:	f8 01       	movw	r30, r16
     ea4:	27 ad       	ldd	r18, Z+63	; 0x3f
     ea6:	1c 01       	movw	r2, r24
     ea8:	22 2a       	or	r2, r18
     eaa:	31 86       	std	Z+9, r3	; 0x09
     eac:	20 86       	std	Z+8, r2	; 0x08
     eae:	c1 01       	movw	r24, r2
     eb0:	8f 77       	andi	r24, 0x7F	; 127
     eb2:	99 27       	eor	r25, r25
     eb4:	89 2b       	or	r24, r25
     eb6:	09 f0       	breq	.+2      	; 0xeba <find_volume+0x220>
     eb8:	01 c2       	rjmp	.+1026   	; 0x12bc <find_volume+0x622>
     eba:	ee 5b       	subi	r30, 0xBE	; 190
     ebc:	ff 4f       	sbci	r31, 0xFF	; 255
     ebe:	40 80       	ld	r4, Z
     ec0:	51 2c       	mov	r5, r1
     ec2:	54 2c       	mov	r5, r4
     ec4:	44 24       	eor	r4, r4
     ec6:	31 97       	sbiw	r30, 0x01	; 1
     ec8:	80 81       	ld	r24, Z
     eca:	48 2a       	or	r4, r24
     ecc:	61 2c       	mov	r6, r1
     ece:	71 2c       	mov	r7, r1
     ed0:	41 14       	cp	r4, r1
     ed2:	51 04       	cpc	r5, r1
     ed4:	61 04       	cpc	r6, r1
     ed6:	71 04       	cpc	r7, r1
     ed8:	d1 f4       	brne	.+52     	; 0xf0e <find_volume+0x274>
     eda:	70 96       	adiw	r30, 0x10	; 16
     edc:	80 81       	ld	r24, Z
     ede:	31 97       	sbiw	r30, 0x01	; 1
     ee0:	40 80       	ld	r4, Z
     ee2:	51 2c       	mov	r5, r1
     ee4:	61 2c       	mov	r6, r1
     ee6:	71 2c       	mov	r7, r1
     ee8:	32 01       	movw	r6, r4
     eea:	55 24       	eor	r5, r5
     eec:	44 24       	eor	r4, r4
     eee:	78 2a       	or	r7, r24
     ef0:	32 97       	sbiw	r30, 0x02	; 2
     ef2:	80 81       	ld	r24, Z
     ef4:	48 2a       	or	r4, r24
     ef6:	31 96       	adiw	r30, 0x01	; 1
     ef8:	80 81       	ld	r24, Z
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	98 2f       	mov	r25, r24
     efe:	88 27       	eor	r24, r24
     f00:	ac 01       	movw	r20, r24
     f02:	60 e0       	ldi	r22, 0x00	; 0
     f04:	70 e0       	ldi	r23, 0x00	; 0
     f06:	44 2a       	or	r4, r20
     f08:	55 2a       	or	r5, r21
     f0a:	66 2a       	or	r6, r22
     f0c:	77 2a       	or	r7, r23
     f0e:	f8 01       	movw	r30, r16
     f10:	85 ad       	ldd	r24, Z+61	; 0x3d
     f12:	e8 2f       	mov	r30, r24
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	3e 2f       	mov	r19, r30
     f18:	22 27       	eor	r18, r18
     f1a:	f8 01       	movw	r30, r16
     f1c:	84 ad       	ldd	r24, Z+60	; 0x3c
     f1e:	f9 01       	movw	r30, r18
     f20:	e8 2b       	or	r30, r24
     f22:	30 97       	sbiw	r30, 0x00	; 0
     f24:	09 f4       	brne	.+2      	; 0xf28 <find_volume+0x28e>
     f26:	cc c1       	rjmp	.+920    	; 0x12c0 <find_volume+0x626>
     f28:	b0 e0       	ldi	r27, 0x00	; 0
     f2a:	a5 01       	movw	r20, r10
     f2c:	94 01       	movw	r18, r8
     f2e:	0e 94 44 14 	call	0x2888	; 0x2888 <__muluhisi3>
     f32:	6a 8f       	std	Y+26, r22	; 0x1a
     f34:	7b 8f       	std	Y+27, r23	; 0x1b
     f36:	8c 8f       	std	Y+28, r24	; 0x1c
     f38:	9d 8f       	std	Y+29, r25	; 0x1d
     f3a:	9f 01       	movw	r18, r30
     f3c:	40 e0       	ldi	r20, 0x00	; 0
     f3e:	50 e0       	ldi	r21, 0x00	; 0
     f40:	2e 8b       	std	Y+22, r18	; 0x16
     f42:	3f 8b       	std	Y+23, r19	; 0x17
     f44:	48 8f       	std	Y+24, r20	; 0x18
     f46:	59 8f       	std	Y+25, r21	; 0x19
     f48:	c1 01       	movw	r24, r2
     f4a:	88 0f       	add	r24, r24
     f4c:	89 2f       	mov	r24, r25
     f4e:	88 1f       	adc	r24, r24
     f50:	99 0b       	sbc	r25, r25
     f52:	91 95       	neg	r25
     f54:	28 0f       	add	r18, r24
     f56:	39 1f       	adc	r19, r25
     f58:	41 1d       	adc	r20, r1
     f5a:	51 1d       	adc	r21, r1
     f5c:	da 01       	movw	r26, r20
     f5e:	c9 01       	movw	r24, r18
     f60:	2a 8d       	ldd	r18, Y+26	; 0x1a
     f62:	3b 8d       	ldd	r19, Y+27	; 0x1b
     f64:	4c 8d       	ldd	r20, Y+28	; 0x1c
     f66:	5d 8d       	ldd	r21, Y+29	; 0x1d
     f68:	28 0f       	add	r18, r24
     f6a:	39 1f       	adc	r19, r25
     f6c:	4a 1f       	adc	r20, r26
     f6e:	5b 1f       	adc	r21, r27
     f70:	2a 8b       	std	Y+18, r18	; 0x12
     f72:	3b 8b       	std	Y+19, r19	; 0x13
     f74:	4c 8b       	std	Y+20, r20	; 0x14
     f76:	5d 8b       	std	Y+21, r21	; 0x15
     f78:	42 16       	cp	r4, r18
     f7a:	53 06       	cpc	r5, r19
     f7c:	64 06       	cpc	r6, r20
     f7e:	75 06       	cpc	r7, r21
     f80:	08 f4       	brcc	.+2      	; 0xf84 <find_volume+0x2ea>
     f82:	a0 c1       	rjmp	.+832    	; 0x12c4 <find_volume+0x62a>
     f84:	c3 01       	movw	r24, r6
     f86:	b2 01       	movw	r22, r4
     f88:	62 1b       	sub	r22, r18
     f8a:	73 0b       	sbc	r23, r19
     f8c:	84 0b       	sbc	r24, r20
     f8e:	95 0b       	sbc	r25, r21
     f90:	e9 89       	ldd	r30, Y+17	; 0x11
     f92:	2e 2f       	mov	r18, r30
     f94:	30 e0       	ldi	r19, 0x00	; 0
     f96:	40 e0       	ldi	r20, 0x00	; 0
     f98:	50 e0       	ldi	r21, 0x00	; 0
     f9a:	0e 94 19 14 	call	0x2832	; 0x2832 <__udivmodsi4>
     f9e:	da 01       	movw	r26, r20
     fa0:	c9 01       	movw	r24, r18
     fa2:	21 15       	cp	r18, r1
     fa4:	31 05       	cpc	r19, r1
     fa6:	41 05       	cpc	r20, r1
     fa8:	51 05       	cpc	r21, r1
     faa:	09 f4       	brne	.+2      	; 0xfae <find_volume+0x314>
     fac:	8d c1       	rjmp	.+794    	; 0x12c8 <find_volume+0x62e>
     fae:	26 3f       	cpi	r18, 0xF6	; 246
     fb0:	ff e0       	ldi	r31, 0x0F	; 15
     fb2:	3f 07       	cpc	r19, r31
     fb4:	41 05       	cpc	r20, r1
     fb6:	51 05       	cpc	r21, r1
     fb8:	18 f0       	brcs	.+6      	; 0xfc0 <find_volume+0x326>
     fba:	e2 e0       	ldi	r30, 0x02	; 2
     fbc:	e9 8b       	std	Y+17, r30	; 0x11
     fbe:	02 c0       	rjmp	.+4      	; 0xfc4 <find_volume+0x32a>
     fc0:	f1 e0       	ldi	r31, 0x01	; 1
     fc2:	f9 8b       	std	Y+17, r31	; 0x11
     fc4:	86 3f       	cpi	r24, 0xF6	; 246
     fc6:	9f 4f       	sbci	r25, 0xFF	; 255
     fc8:	a1 05       	cpc	r26, r1
     fca:	b1 05       	cpc	r27, r1
     fcc:	08 f0       	brcs	.+2      	; 0xfd0 <find_volume+0x336>
     fce:	9d c1       	rjmp	.+826    	; 0x130a <find_volume+0x670>
     fd0:	29 01       	movw	r4, r18
     fd2:	3a 01       	movw	r6, r20
     fd4:	82 e0       	ldi	r24, 0x02	; 2
     fd6:	48 0e       	add	r4, r24
     fd8:	51 1c       	adc	r5, r1
     fda:	61 1c       	adc	r6, r1
     fdc:	71 1c       	adc	r7, r1
     fde:	d8 01       	movw	r26, r16
     fe0:	52 96       	adiw	r26, 0x12	; 18
     fe2:	4d 92       	st	X+, r4
     fe4:	5d 92       	st	X+, r5
     fe6:	6d 92       	st	X+, r6
     fe8:	7c 92       	st	X, r7
     fea:	55 97       	sbiw	r26, 0x15	; 21
     fec:	f8 01       	movw	r30, r16
     fee:	c2 8e       	std	Z+26, r12	; 0x1a
     ff0:	d3 8e       	std	Z+27, r13	; 0x1b
     ff2:	e4 8e       	std	Z+28, r14	; 0x1c
     ff4:	f5 8e       	std	Z+29, r15	; 0x1d
     ff6:	8e 89       	ldd	r24, Y+22	; 0x16
     ff8:	9f 89       	ldd	r25, Y+23	; 0x17
     ffa:	a8 8d       	ldd	r26, Y+24	; 0x18
     ffc:	b9 8d       	ldd	r27, Y+25	; 0x19
     ffe:	8c 0d       	add	r24, r12
    1000:	9d 1d       	adc	r25, r13
    1002:	ae 1d       	adc	r26, r14
    1004:	bf 1d       	adc	r27, r15
    1006:	86 8f       	std	Z+30, r24	; 0x1e
    1008:	97 8f       	std	Z+31, r25	; 0x1f
    100a:	a0 a3       	std	Z+32, r26	; 0x20
    100c:	b1 a3       	std	Z+33, r27	; 0x21
    100e:	4a 89       	ldd	r20, Y+18	; 0x12
    1010:	5b 89       	ldd	r21, Y+19	; 0x13
    1012:	6c 89       	ldd	r22, Y+20	; 0x14
    1014:	7d 89       	ldd	r23, Y+21	; 0x15
    1016:	4c 0d       	add	r20, r12
    1018:	5d 1d       	adc	r21, r13
    101a:	6e 1d       	adc	r22, r14
    101c:	7f 1d       	adc	r23, r15
    101e:	46 a3       	std	Z+38, r20	; 0x26
    1020:	57 a3       	std	Z+39, r21	; 0x27
    1022:	60 a7       	std	Z+40, r22	; 0x28
    1024:	71 a7       	std	Z+41, r23	; 0x29
    1026:	f9 89       	ldd	r31, Y+17	; 0x11
    1028:	f3 30       	cpi	r31, 0x03	; 3
    102a:	09 f0       	breq	.+2      	; 0x102e <find_volume+0x394>
    102c:	44 c0       	rjmp	.+136    	; 0x10b6 <find_volume+0x41c>
    102e:	23 28       	or	r2, r3
    1030:	09 f0       	breq	.+2      	; 0x1034 <find_volume+0x39a>
    1032:	4c c1       	rjmp	.+664    	; 0x12cc <find_volume+0x632>
    1034:	f8 01       	movw	r30, r16
    1036:	e3 5a       	subi	r30, 0xA3	; 163
    1038:	ff 4f       	sbci	r31, 0xFF	; 255
    103a:	20 81       	ld	r18, Z
    103c:	31 97       	sbiw	r30, 0x01	; 1
    103e:	80 81       	ld	r24, Z
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	a0 e0       	ldi	r26, 0x00	; 0
    1044:	b0 e0       	ldi	r27, 0x00	; 0
    1046:	dc 01       	movw	r26, r24
    1048:	99 27       	eor	r25, r25
    104a:	88 27       	eor	r24, r24
    104c:	b2 2b       	or	r27, r18
    104e:	32 97       	sbiw	r30, 0x02	; 2
    1050:	20 81       	ld	r18, Z
    1052:	ac 01       	movw	r20, r24
    1054:	bd 01       	movw	r22, r26
    1056:	42 2b       	or	r20, r18
    1058:	31 96       	adiw	r30, 0x01	; 1
    105a:	80 81       	ld	r24, Z
    105c:	28 2f       	mov	r18, r24
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	92 2f       	mov	r25, r18
    1062:	88 27       	eor	r24, r24
    1064:	a0 e0       	ldi	r26, 0x00	; 0
    1066:	b0 e0       	ldi	r27, 0x00	; 0
    1068:	84 2b       	or	r24, r20
    106a:	95 2b       	or	r25, r21
    106c:	a6 2b       	or	r26, r22
    106e:	b7 2b       	or	r27, r23
    1070:	f8 01       	movw	r30, r16
    1072:	82 a3       	std	Z+34, r24	; 0x22
    1074:	93 a3       	std	Z+35, r25	; 0x23
    1076:	a4 a3       	std	Z+36, r26	; 0x24
    1078:	b5 a3       	std	Z+37, r27	; 0x25
    107a:	44 0c       	add	r4, r4
    107c:	55 1c       	adc	r5, r5
    107e:	66 1c       	adc	r6, r6
    1080:	77 1c       	adc	r7, r7
    1082:	44 0c       	add	r4, r4
    1084:	55 1c       	adc	r5, r5
    1086:	66 1c       	adc	r6, r6
    1088:	77 1c       	adc	r7, r7
    108a:	ff ef       	ldi	r31, 0xFF	; 255
    108c:	4f 0e       	add	r4, r31
    108e:	ff e0       	ldi	r31, 0x0F	; 15
    1090:	5f 1e       	adc	r5, r31
    1092:	61 1c       	adc	r6, r1
    1094:	71 1c       	adc	r7, r1
    1096:	03 2e       	mov	r0, r19
    1098:	3c e0       	ldi	r19, 0x0C	; 12
    109a:	76 94       	lsr	r7
    109c:	67 94       	ror	r6
    109e:	57 94       	ror	r5
    10a0:	47 94       	ror	r4
    10a2:	3a 95       	dec	r19
    10a4:	d1 f7       	brne	.-12     	; 0x109a <find_volume+0x400>
    10a6:	30 2d       	mov	r19, r0
    10a8:	84 14       	cp	r8, r4
    10aa:	95 04       	cpc	r9, r5
    10ac:	a6 04       	cpc	r10, r6
    10ae:	b7 04       	cpc	r11, r7
    10b0:	08 f4       	brcc	.+2      	; 0x10b4 <find_volume+0x41a>
    10b2:	0e c1       	rjmp	.+540    	; 0x12d0 <find_volume+0x636>
    10b4:	56 c1       	rjmp	.+684    	; 0x1362 <find_volume+0x6c8>
    10b6:	23 28       	or	r2, r3
    10b8:	09 f4       	brne	.+2      	; 0x10bc <find_volume+0x422>
    10ba:	0c c1       	rjmp	.+536    	; 0x12d4 <find_volume+0x63a>
    10bc:	2a 8d       	ldd	r18, Y+26	; 0x1a
    10be:	3b 8d       	ldd	r19, Y+27	; 0x1b
    10c0:	4c 8d       	ldd	r20, Y+28	; 0x1c
    10c2:	5d 8d       	ldd	r21, Y+29	; 0x1d
    10c4:	82 0f       	add	r24, r18
    10c6:	93 1f       	adc	r25, r19
    10c8:	a4 1f       	adc	r26, r20
    10ca:	b5 1f       	adc	r27, r21
    10cc:	f8 01       	movw	r30, r16
    10ce:	82 a3       	std	Z+34, r24	; 0x22
    10d0:	93 a3       	std	Z+35, r25	; 0x23
    10d2:	a4 a3       	std	Z+36, r26	; 0x24
    10d4:	b5 a3       	std	Z+37, r27	; 0x25
    10d6:	f9 89       	ldd	r31, Y+17	; 0x11
    10d8:	f2 30       	cpi	r31, 0x02	; 2
    10da:	29 f4       	brne	.+10     	; 0x10e6 <find_volume+0x44c>
    10dc:	44 0c       	add	r4, r4
    10de:	55 1c       	adc	r5, r5
    10e0:	66 1c       	adc	r6, r6
    10e2:	77 1c       	adc	r7, r7
    10e4:	6a c1       	rjmp	.+724    	; 0x13ba <find_volume+0x720>
    10e6:	a3 e0       	ldi	r26, 0x03	; 3
    10e8:	b0 e0       	ldi	r27, 0x00	; 0
    10ea:	a3 01       	movw	r20, r6
    10ec:	92 01       	movw	r18, r4
    10ee:	0e 94 44 14 	call	0x2888	; 0x2888 <__muluhisi3>
    10f2:	dc 01       	movw	r26, r24
    10f4:	cb 01       	movw	r24, r22
    10f6:	b6 95       	lsr	r27
    10f8:	a7 95       	ror	r26
    10fa:	97 95       	ror	r25
    10fc:	87 95       	ror	r24
    10fe:	21 e0       	ldi	r18, 0x01	; 1
    1100:	42 22       	and	r4, r18
    1102:	55 24       	eor	r5, r5
    1104:	66 24       	eor	r6, r6
    1106:	77 24       	eor	r7, r7
    1108:	48 0e       	add	r4, r24
    110a:	59 1e       	adc	r5, r25
    110c:	6a 1e       	adc	r6, r26
    110e:	7b 1e       	adc	r7, r27
    1110:	54 c1       	rjmp	.+680    	; 0x13ba <find_volume+0x720>
    1112:	b7 01       	movw	r22, r14
    1114:	a6 01       	movw	r20, r12
    1116:	4f 5f       	subi	r20, 0xFF	; 255
    1118:	5f 4f       	sbci	r21, 0xFF	; 255
    111a:	6f 4f       	sbci	r22, 0xFF	; 255
    111c:	7f 4f       	sbci	r23, 0xFF	; 255
    111e:	c8 01       	movw	r24, r16
    1120:	f4 dc       	rcall	.-1560   	; 0xb0a <move_window>
    1122:	81 11       	cpse	r24, r1
    1124:	96 c0       	rjmp	.+300    	; 0x1252 <find_volume+0x5b8>
    1126:	d8 01       	movw	r26, r16
    1128:	15 96       	adiw	r26, 0x05	; 5
    112a:	1c 92       	st	X, r1
    112c:	f8 01       	movw	r30, r16
    112e:	e3 5d       	subi	r30, 0xD3	; 211
    1130:	fd 4f       	sbci	r31, 0xFD	; 253
    1132:	80 81       	ld	r24, Z
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	98 2f       	mov	r25, r24
    1138:	88 27       	eor	r24, r24
    113a:	31 97       	sbiw	r30, 0x01	; 1
    113c:	20 81       	ld	r18, Z
    113e:	82 2b       	or	r24, r18
    1140:	85 35       	cpi	r24, 0x55	; 85
    1142:	9a 4a       	sbci	r25, 0xAA	; 170
    1144:	09 f0       	breq	.+2      	; 0x1148 <find_volume+0x4ae>
    1146:	88 c0       	rjmp	.+272    	; 0x1258 <find_volume+0x5be>
    1148:	f8 01       	movw	r30, r16
    114a:	21 a9       	ldd	r18, Z+49	; 0x31
    114c:	80 a9       	ldd	r24, Z+48	; 0x30
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	a0 e0       	ldi	r26, 0x00	; 0
    1152:	b0 e0       	ldi	r27, 0x00	; 0
    1154:	dc 01       	movw	r26, r24
    1156:	99 27       	eor	r25, r25
    1158:	88 27       	eor	r24, r24
    115a:	b2 2b       	or	r27, r18
    115c:	26 a5       	ldd	r18, Z+46	; 0x2e
    115e:	ac 01       	movw	r20, r24
    1160:	bd 01       	movw	r22, r26
    1162:	42 2b       	or	r20, r18
    1164:	27 a5       	ldd	r18, Z+47	; 0x2f
    1166:	30 e0       	ldi	r19, 0x00	; 0
    1168:	92 2f       	mov	r25, r18
    116a:	88 27       	eor	r24, r24
    116c:	a0 e0       	ldi	r26, 0x00	; 0
    116e:	b0 e0       	ldi	r27, 0x00	; 0
    1170:	84 2b       	or	r24, r20
    1172:	95 2b       	or	r25, r21
    1174:	a6 2b       	or	r26, r22
    1176:	b7 2b       	or	r27, r23
    1178:	82 35       	cpi	r24, 0x52	; 82
    117a:	92 45       	sbci	r25, 0x52	; 82
    117c:	a1 46       	sbci	r26, 0x61	; 97
    117e:	b1 44       	sbci	r27, 0x41	; 65
    1180:	09 f0       	breq	.+2      	; 0x1184 <find_volume+0x4ea>
    1182:	6d c0       	rjmp	.+218    	; 0x125e <find_volume+0x5c4>
    1184:	f8 01       	movw	r30, r16
    1186:	eb 5e       	subi	r30, 0xEB	; 235
    1188:	fd 4f       	sbci	r31, 0xFD	; 253
    118a:	20 81       	ld	r18, Z
    118c:	31 97       	sbiw	r30, 0x01	; 1
    118e:	80 81       	ld	r24, Z
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	a0 e0       	ldi	r26, 0x00	; 0
    1194:	b0 e0       	ldi	r27, 0x00	; 0
    1196:	dc 01       	movw	r26, r24
    1198:	99 27       	eor	r25, r25
    119a:	88 27       	eor	r24, r24
    119c:	b2 2b       	or	r27, r18
    119e:	32 97       	sbiw	r30, 0x02	; 2
    11a0:	20 81       	ld	r18, Z
    11a2:	ac 01       	movw	r20, r24
    11a4:	bd 01       	movw	r22, r26
    11a6:	42 2b       	or	r20, r18
    11a8:	31 96       	adiw	r30, 0x01	; 1
    11aa:	20 81       	ld	r18, Z
    11ac:	30 e0       	ldi	r19, 0x00	; 0
    11ae:	92 2f       	mov	r25, r18
    11b0:	88 27       	eor	r24, r24
    11b2:	a0 e0       	ldi	r26, 0x00	; 0
    11b4:	b0 e0       	ldi	r27, 0x00	; 0
    11b6:	84 2b       	or	r24, r20
    11b8:	95 2b       	or	r25, r21
    11ba:	a6 2b       	or	r26, r22
    11bc:	b7 2b       	or	r27, r23
    11be:	82 37       	cpi	r24, 0x72	; 114
    11c0:	92 47       	sbci	r25, 0x72	; 114
    11c2:	a1 44       	sbci	r26, 0x41	; 65
    11c4:	b1 46       	sbci	r27, 0x61	; 97
    11c6:	09 f0       	breq	.+2      	; 0x11ca <find_volume+0x530>
    11c8:	4d c0       	rjmp	.+154    	; 0x1264 <find_volume+0x5ca>
    11ca:	36 96       	adiw	r30, 0x06	; 6
    11cc:	20 81       	ld	r18, Z
    11ce:	31 97       	sbiw	r30, 0x01	; 1
    11d0:	80 81       	ld	r24, Z
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	a0 e0       	ldi	r26, 0x00	; 0
    11d6:	b0 e0       	ldi	r27, 0x00	; 0
    11d8:	dc 01       	movw	r26, r24
    11da:	99 27       	eor	r25, r25
    11dc:	88 27       	eor	r24, r24
    11de:	b2 2b       	or	r27, r18
    11e0:	32 97       	sbiw	r30, 0x02	; 2
    11e2:	20 81       	ld	r18, Z
    11e4:	ac 01       	movw	r20, r24
    11e6:	bd 01       	movw	r22, r26
    11e8:	42 2b       	or	r20, r18
    11ea:	31 96       	adiw	r30, 0x01	; 1
    11ec:	20 81       	ld	r18, Z
    11ee:	30 e0       	ldi	r19, 0x00	; 0
    11f0:	92 2f       	mov	r25, r18
    11f2:	88 27       	eor	r24, r24
    11f4:	a0 e0       	ldi	r26, 0x00	; 0
    11f6:	b0 e0       	ldi	r27, 0x00	; 0
    11f8:	84 2b       	or	r24, r20
    11fa:	95 2b       	or	r25, r21
    11fc:	a6 2b       	or	r26, r22
    11fe:	b7 2b       	or	r27, r23
    1200:	f8 01       	movw	r30, r16
    1202:	86 87       	std	Z+14, r24	; 0x0e
    1204:	97 87       	std	Z+15, r25	; 0x0f
    1206:	a0 8b       	std	Z+16, r26	; 0x10
    1208:	b1 8b       	std	Z+17, r27	; 0x11
    120a:	e3 5e       	subi	r30, 0xE3	; 227
    120c:	fd 4f       	sbci	r31, 0xFD	; 253
    120e:	20 81       	ld	r18, Z
    1210:	31 97       	sbiw	r30, 0x01	; 1
    1212:	80 81       	ld	r24, Z
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	a0 e0       	ldi	r26, 0x00	; 0
    1218:	b0 e0       	ldi	r27, 0x00	; 0
    121a:	dc 01       	movw	r26, r24
    121c:	99 27       	eor	r25, r25
    121e:	88 27       	eor	r24, r24
    1220:	b2 2b       	or	r27, r18
    1222:	32 97       	sbiw	r30, 0x02	; 2
    1224:	20 81       	ld	r18, Z
    1226:	ac 01       	movw	r20, r24
    1228:	bd 01       	movw	r22, r26
    122a:	42 2b       	or	r20, r18
    122c:	31 96       	adiw	r30, 0x01	; 1
    122e:	20 81       	ld	r18, Z
    1230:	30 e0       	ldi	r19, 0x00	; 0
    1232:	92 2f       	mov	r25, r18
    1234:	88 27       	eor	r24, r24
    1236:	a0 e0       	ldi	r26, 0x00	; 0
    1238:	b0 e0       	ldi	r27, 0x00	; 0
    123a:	84 2b       	or	r24, r20
    123c:	95 2b       	or	r25, r21
    123e:	a6 2b       	or	r26, r22
    1240:	b7 2b       	or	r27, r23
    1242:	f8 01       	movw	r30, r16
    1244:	82 87       	std	Z+10, r24	; 0x0a
    1246:	93 87       	std	Z+11, r25	; 0x0b
    1248:	a4 87       	std	Z+12, r26	; 0x0c
    124a:	b5 87       	std	Z+13, r27	; 0x0d
    124c:	f3 e0       	ldi	r31, 0x03	; 3
    124e:	f9 8b       	std	Y+17, r31	; 0x11
    1250:	0b c0       	rjmp	.+22     	; 0x1268 <find_volume+0x5ce>
    1252:	e3 e0       	ldi	r30, 0x03	; 3
    1254:	e9 8b       	std	Y+17, r30	; 0x11
    1256:	08 c0       	rjmp	.+16     	; 0x1268 <find_volume+0x5ce>
    1258:	f3 e0       	ldi	r31, 0x03	; 3
    125a:	f9 8b       	std	Y+17, r31	; 0x11
    125c:	05 c0       	rjmp	.+10     	; 0x1268 <find_volume+0x5ce>
    125e:	e3 e0       	ldi	r30, 0x03	; 3
    1260:	e9 8b       	std	Y+17, r30	; 0x11
    1262:	02 c0       	rjmp	.+4      	; 0x1268 <find_volume+0x5ce>
    1264:	f3 e0       	ldi	r31, 0x03	; 3
    1266:	f9 8b       	std	Y+17, r31	; 0x11
    1268:	e9 89       	ldd	r30, Y+17	; 0x11
    126a:	d8 01       	movw	r26, r16
    126c:	ec 93       	st	X, r30
    126e:	80 91 1b 01 	lds	r24, 0x011B
    1272:	90 91 1c 01 	lds	r25, 0x011C
    1276:	01 96       	adiw	r24, 0x01	; 1
    1278:	90 93 1c 01 	sts	0x011C, r25
    127c:	80 93 1b 01 	sts	0x011B, r24
    1280:	17 96       	adiw	r26, 0x07	; 7
    1282:	9c 93       	st	X, r25
    1284:	8e 93       	st	-X, r24
    1286:	16 97       	sbiw	r26, 0x06	; 6
    1288:	80 e0       	ldi	r24, 0x00	; 0
    128a:	ad c0       	rjmp	.+346    	; 0x13e6 <find_volume+0x74c>
    128c:	8b e0       	ldi	r24, 0x0B	; 11
    128e:	ab c0       	rjmp	.+342    	; 0x13e6 <find_volume+0x74c>
    1290:	8c e0       	ldi	r24, 0x0C	; 12
    1292:	a9 c0       	rjmp	.+338    	; 0x13e6 <find_volume+0x74c>
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	a7 c0       	rjmp	.+334    	; 0x13e6 <find_volume+0x74c>
    1298:	80 e0       	ldi	r24, 0x00	; 0
    129a:	a5 c0       	rjmp	.+330    	; 0x13e6 <find_volume+0x74c>
    129c:	83 e0       	ldi	r24, 0x03	; 3
    129e:	a3 c0       	rjmp	.+326    	; 0x13e6 <find_volume+0x74c>
    12a0:	8a e0       	ldi	r24, 0x0A	; 10
    12a2:	a1 c0       	rjmp	.+322    	; 0x13e6 <find_volume+0x74c>
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	9f c0       	rjmp	.+318    	; 0x13e6 <find_volume+0x74c>
    12a8:	8d e0       	ldi	r24, 0x0D	; 13
    12aa:	9d c0       	rjmp	.+314    	; 0x13e6 <find_volume+0x74c>
    12ac:	8d e0       	ldi	r24, 0x0D	; 13
    12ae:	9b c0       	rjmp	.+310    	; 0x13e6 <find_volume+0x74c>
    12b0:	8d e0       	ldi	r24, 0x0D	; 13
    12b2:	99 c0       	rjmp	.+306    	; 0x13e6 <find_volume+0x74c>
    12b4:	8d e0       	ldi	r24, 0x0D	; 13
    12b6:	97 c0       	rjmp	.+302    	; 0x13e6 <find_volume+0x74c>
    12b8:	8d e0       	ldi	r24, 0x0D	; 13
    12ba:	95 c0       	rjmp	.+298    	; 0x13e6 <find_volume+0x74c>
    12bc:	8d e0       	ldi	r24, 0x0D	; 13
    12be:	93 c0       	rjmp	.+294    	; 0x13e6 <find_volume+0x74c>
    12c0:	8d e0       	ldi	r24, 0x0D	; 13
    12c2:	91 c0       	rjmp	.+290    	; 0x13e6 <find_volume+0x74c>
    12c4:	8d e0       	ldi	r24, 0x0D	; 13
    12c6:	8f c0       	rjmp	.+286    	; 0x13e6 <find_volume+0x74c>
    12c8:	8d e0       	ldi	r24, 0x0D	; 13
    12ca:	8d c0       	rjmp	.+282    	; 0x13e6 <find_volume+0x74c>
    12cc:	8d e0       	ldi	r24, 0x0D	; 13
    12ce:	8b c0       	rjmp	.+278    	; 0x13e6 <find_volume+0x74c>
    12d0:	8d e0       	ldi	r24, 0x0D	; 13
    12d2:	89 c0       	rjmp	.+274    	; 0x13e6 <find_volume+0x74c>
    12d4:	8d e0       	ldi	r24, 0x0D	; 13
    12d6:	87 c0       	rjmp	.+270    	; 0x13e6 <find_volume+0x74c>
    12d8:	8d e0       	ldi	r24, 0x0D	; 13
    12da:	85 c0       	rjmp	.+266    	; 0x13e6 <find_volume+0x74c>
    12dc:	40 e0       	ldi	r20, 0x00	; 0
    12de:	50 e0       	ldi	r21, 0x00	; 0
    12e0:	ba 01       	movw	r22, r20
    12e2:	c8 01       	movw	r24, r16
    12e4:	4e dc       	rcall	.-1892   	; 0xb82 <check_fs>
    12e6:	81 30       	cpi	r24, 0x01	; 1
    12e8:	09 f0       	breq	.+2      	; 0x12ec <find_volume+0x652>
    12ea:	6f cd       	rjmp	.-1314   	; 0xdca <find_volume+0x130>
    12ec:	9e 01       	movw	r18, r28
    12ee:	2f 5f       	subi	r18, 0xFF	; 255
    12f0:	3f 4f       	sbci	r19, 0xFF	; 255
    12f2:	59 01       	movw	r10, r18
    12f4:	f8 01       	movw	r30, r16
    12f6:	e9 50       	subi	r30, 0x09	; 9
    12f8:	fe 4f       	sbci	r31, 0xFE	; 254
    12fa:	a8 01       	movw	r20, r16
    12fc:	49 5c       	subi	r20, 0xC9	; 201
    12fe:	5d 4f       	sbci	r21, 0xFD	; 253
    1300:	81 2c       	mov	r8, r1
    1302:	91 2c       	mov	r9, r1
    1304:	70 e0       	ldi	r23, 0x00	; 0
    1306:	60 e0       	ldi	r22, 0x00	; 0
    1308:	18 cd       	rjmp	.-1488   	; 0xd3a <find_volume+0xa0>
    130a:	29 01       	movw	r4, r18
    130c:	3a 01       	movw	r6, r20
    130e:	62 e0       	ldi	r22, 0x02	; 2
    1310:	46 0e       	add	r4, r22
    1312:	51 1c       	adc	r5, r1
    1314:	61 1c       	adc	r6, r1
    1316:	71 1c       	adc	r7, r1
    1318:	d8 01       	movw	r26, r16
    131a:	52 96       	adiw	r26, 0x12	; 18
    131c:	4d 92       	st	X+, r4
    131e:	5d 92       	st	X+, r5
    1320:	6d 92       	st	X+, r6
    1322:	7c 92       	st	X, r7
    1324:	55 97       	sbiw	r26, 0x15	; 21
    1326:	f8 01       	movw	r30, r16
    1328:	c2 8e       	std	Z+26, r12	; 0x1a
    132a:	d3 8e       	std	Z+27, r13	; 0x1b
    132c:	e4 8e       	std	Z+28, r14	; 0x1c
    132e:	f5 8e       	std	Z+29, r15	; 0x1d
    1330:	8e 89       	ldd	r24, Y+22	; 0x16
    1332:	9f 89       	ldd	r25, Y+23	; 0x17
    1334:	a8 8d       	ldd	r26, Y+24	; 0x18
    1336:	b9 8d       	ldd	r27, Y+25	; 0x19
    1338:	8c 0d       	add	r24, r12
    133a:	9d 1d       	adc	r25, r13
    133c:	ae 1d       	adc	r26, r14
    133e:	bf 1d       	adc	r27, r15
    1340:	86 8f       	std	Z+30, r24	; 0x1e
    1342:	97 8f       	std	Z+31, r25	; 0x1f
    1344:	a0 a3       	std	Z+32, r26	; 0x20
    1346:	b1 a3       	std	Z+33, r27	; 0x21
    1348:	8a 89       	ldd	r24, Y+18	; 0x12
    134a:	9b 89       	ldd	r25, Y+19	; 0x13
    134c:	ac 89       	ldd	r26, Y+20	; 0x14
    134e:	bd 89       	ldd	r27, Y+21	; 0x15
    1350:	8c 0d       	add	r24, r12
    1352:	9d 1d       	adc	r25, r13
    1354:	ae 1d       	adc	r26, r14
    1356:	bf 1d       	adc	r27, r15
    1358:	86 a3       	std	Z+38, r24	; 0x26
    135a:	97 a3       	std	Z+39, r25	; 0x27
    135c:	a0 a7       	std	Z+40, r26	; 0x28
    135e:	b1 a7       	std	Z+41, r27	; 0x29
    1360:	66 ce       	rjmp	.-820    	; 0x102e <find_volume+0x394>
    1362:	8f ef       	ldi	r24, 0xFF	; 255
    1364:	9f ef       	ldi	r25, 0xFF	; 255
    1366:	dc 01       	movw	r26, r24
    1368:	f8 01       	movw	r30, r16
    136a:	86 87       	std	Z+14, r24	; 0x0e
    136c:	97 87       	std	Z+15, r25	; 0x0f
    136e:	a0 8b       	std	Z+16, r26	; 0x10
    1370:	b1 8b       	std	Z+17, r27	; 0x11
    1372:	82 87       	std	Z+10, r24	; 0x0a
    1374:	93 87       	std	Z+11, r25	; 0x0b
    1376:	a4 87       	std	Z+12, r26	; 0x0c
    1378:	b5 87       	std	Z+13, r27	; 0x0d
    137a:	80 e8       	ldi	r24, 0x80	; 128
    137c:	85 83       	std	Z+5, r24	; 0x05
    137e:	e1 5a       	subi	r30, 0xA1	; 161
    1380:	ff 4f       	sbci	r31, 0xFF	; 255
    1382:	80 81       	ld	r24, Z
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	98 2f       	mov	r25, r24
    1388:	88 27       	eor	r24, r24
    138a:	31 97       	sbiw	r30, 0x01	; 1
    138c:	20 81       	ld	r18, Z
    138e:	82 2b       	or	r24, r18
    1390:	01 97       	sbiw	r24, 0x01	; 1
    1392:	09 f4       	brne	.+2      	; 0x1396 <find_volume+0x6fc>
    1394:	be ce       	rjmp	.-644    	; 0x1112 <find_volume+0x478>
    1396:	f3 e0       	ldi	r31, 0x03	; 3
    1398:	f9 8b       	std	Y+17, r31	; 0x11
    139a:	66 cf       	rjmp	.-308    	; 0x1268 <find_volume+0x5ce>
    139c:	8f ef       	ldi	r24, 0xFF	; 255
    139e:	9f ef       	ldi	r25, 0xFF	; 255
    13a0:	dc 01       	movw	r26, r24
    13a2:	f8 01       	movw	r30, r16
    13a4:	86 87       	std	Z+14, r24	; 0x0e
    13a6:	97 87       	std	Z+15, r25	; 0x0f
    13a8:	a0 8b       	std	Z+16, r26	; 0x10
    13aa:	b1 8b       	std	Z+17, r27	; 0x11
    13ac:	82 87       	std	Z+10, r24	; 0x0a
    13ae:	93 87       	std	Z+11, r25	; 0x0b
    13b0:	a4 87       	std	Z+12, r26	; 0x0c
    13b2:	b5 87       	std	Z+13, r27	; 0x0d
    13b4:	80 e8       	ldi	r24, 0x80	; 128
    13b6:	85 83       	std	Z+5, r24	; 0x05
    13b8:	57 cf       	rjmp	.-338    	; 0x1268 <find_volume+0x5ce>
    13ba:	ff ef       	ldi	r31, 0xFF	; 255
    13bc:	4f 0e       	add	r4, r31
    13be:	ff e0       	ldi	r31, 0x0F	; 15
    13c0:	5f 1e       	adc	r5, r31
    13c2:	61 1c       	adc	r6, r1
    13c4:	71 1c       	adc	r7, r1
    13c6:	03 2e       	mov	r0, r19
    13c8:	3c e0       	ldi	r19, 0x0C	; 12
    13ca:	76 94       	lsr	r7
    13cc:	67 94       	ror	r6
    13ce:	57 94       	ror	r5
    13d0:	47 94       	ror	r4
    13d2:	3a 95       	dec	r19
    13d4:	d1 f7       	brne	.-12     	; 0x13ca <find_volume+0x730>
    13d6:	30 2d       	mov	r19, r0
    13d8:	84 14       	cp	r8, r4
    13da:	95 04       	cpc	r9, r5
    13dc:	a6 04       	cpc	r10, r6
    13de:	b7 04       	cpc	r11, r7
    13e0:	08 f4       	brcc	.+2      	; 0x13e4 <find_volume+0x74a>
    13e2:	7a cf       	rjmp	.-268    	; 0x12d8 <find_volume+0x63e>
    13e4:	db cf       	rjmp	.-74     	; 0x139c <find_volume+0x702>
    13e6:	6d 96       	adiw	r28, 0x1d	; 29
    13e8:	0f b6       	in	r0, 0x3f	; 63
    13ea:	f8 94       	cli
    13ec:	de bf       	out	0x3e, r29	; 62
    13ee:	0f be       	out	0x3f, r0	; 63
    13f0:	cd bf       	out	0x3d, r28	; 61
    13f2:	df 91       	pop	r29
    13f4:	cf 91       	pop	r28
    13f6:	1f 91       	pop	r17
    13f8:	0f 91       	pop	r16
    13fa:	ff 90       	pop	r15
    13fc:	ef 90       	pop	r14
    13fe:	df 90       	pop	r13
    1400:	cf 90       	pop	r12
    1402:	bf 90       	pop	r11
    1404:	af 90       	pop	r10
    1406:	9f 90       	pop	r9
    1408:	8f 90       	pop	r8
    140a:	7f 90       	pop	r7
    140c:	6f 90       	pop	r6
    140e:	5f 90       	pop	r5
    1410:	4f 90       	pop	r4
    1412:	3f 90       	pop	r3
    1414:	2f 90       	pop	r2
    1416:	08 95       	ret

00001418 <sync_fs>:
    1418:	0f 93       	push	r16
    141a:	1f 93       	push	r17
    141c:	cf 93       	push	r28
    141e:	df 93       	push	r29
    1420:	ec 01       	movw	r28, r24
    1422:	0a db       	rcall	.-2540   	; 0xa38 <sync_window>
    1424:	98 2f       	mov	r25, r24
    1426:	81 11       	cpse	r24, r1
    1428:	5f c0       	rjmp	.+190    	; 0x14e8 <sync_fs+0xd0>
    142a:	88 81       	ld	r24, Y
    142c:	83 30       	cpi	r24, 0x03	; 3
    142e:	09 f0       	breq	.+2      	; 0x1432 <sync_fs+0x1a>
    1430:	52 c0       	rjmp	.+164    	; 0x14d6 <sync_fs+0xbe>
    1432:	8d 81       	ldd	r24, Y+5	; 0x05
    1434:	81 30       	cpi	r24, 0x01	; 1
    1436:	09 f0       	breq	.+2      	; 0x143a <sync_fs+0x22>
    1438:	4e c0       	rjmp	.+156    	; 0x14d6 <sync_fs+0xbe>
    143a:	be 01       	movw	r22, r28
    143c:	62 5d       	subi	r22, 0xD2	; 210
    143e:	7f 4f       	sbci	r23, 0xFF	; 255
    1440:	fb 01       	movw	r30, r22
    1442:	ce 01       	movw	r24, r28
    1444:	82 5d       	subi	r24, 0xD2	; 210
    1446:	9f 4e       	sbci	r25, 0xEF	; 239
    1448:	11 92       	st	Z+, r1
    144a:	e8 17       	cp	r30, r24
    144c:	f9 07       	cpc	r31, r25
    144e:	e1 f7       	brne	.-8      	; 0x1448 <sync_fs+0x30>
    1450:	85 e5       	ldi	r24, 0x55	; 85
    1452:	fe 01       	movw	r30, r28
    1454:	e4 5d       	subi	r30, 0xD4	; 212
    1456:	fd 4f       	sbci	r31, 0xFD	; 253
    1458:	80 83       	st	Z, r24
    145a:	8a ea       	ldi	r24, 0xAA	; 170
    145c:	31 96       	adiw	r30, 0x01	; 1
    145e:	80 83       	st	Z, r24
    1460:	82 e5       	ldi	r24, 0x52	; 82
    1462:	8e a7       	std	Y+46, r24	; 0x2e
    1464:	8f a7       	std	Y+47, r24	; 0x2f
    1466:	81 e6       	ldi	r24, 0x61	; 97
    1468:	88 ab       	std	Y+48, r24	; 0x30
    146a:	91 e4       	ldi	r25, 0x41	; 65
    146c:	99 ab       	std	Y+49, r25	; 0x31
    146e:	22 e7       	ldi	r18, 0x72	; 114
    1470:	7b 97       	sbiw	r30, 0x1b	; 27
    1472:	20 83       	st	Z, r18
    1474:	31 96       	adiw	r30, 0x01	; 1
    1476:	20 83       	st	Z, r18
    1478:	31 96       	adiw	r30, 0x01	; 1
    147a:	90 83       	st	Z, r25
    147c:	31 96       	adiw	r30, 0x01	; 1
    147e:	80 83       	st	Z, r24
    1480:	3e 85       	ldd	r19, Y+14	; 0x0e
    1482:	2f 85       	ldd	r18, Y+15	; 0x0f
    1484:	98 89       	ldd	r25, Y+16	; 0x10
    1486:	89 89       	ldd	r24, Y+17	; 0x11
    1488:	31 96       	adiw	r30, 0x01	; 1
    148a:	30 83       	st	Z, r19
    148c:	31 96       	adiw	r30, 0x01	; 1
    148e:	20 83       	st	Z, r18
    1490:	31 96       	adiw	r30, 0x01	; 1
    1492:	90 83       	st	Z, r25
    1494:	31 96       	adiw	r30, 0x01	; 1
    1496:	80 83       	st	Z, r24
    1498:	3a 85       	ldd	r19, Y+10	; 0x0a
    149a:	2b 85       	ldd	r18, Y+11	; 0x0b
    149c:	9c 85       	ldd	r25, Y+12	; 0x0c
    149e:	8d 85       	ldd	r24, Y+13	; 0x0d
    14a0:	31 96       	adiw	r30, 0x01	; 1
    14a2:	30 83       	st	Z, r19
    14a4:	31 96       	adiw	r30, 0x01	; 1
    14a6:	20 83       	st	Z, r18
    14a8:	31 96       	adiw	r30, 0x01	; 1
    14aa:	90 83       	st	Z, r25
    14ac:	31 96       	adiw	r30, 0x01	; 1
    14ae:	80 83       	st	Z, r24
    14b0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    14b2:	9b 8d       	ldd	r25, Y+27	; 0x1b
    14b4:	ac 8d       	ldd	r26, Y+28	; 0x1c
    14b6:	bd 8d       	ldd	r27, Y+29	; 0x1d
    14b8:	9c 01       	movw	r18, r24
    14ba:	ad 01       	movw	r20, r26
    14bc:	2f 5f       	subi	r18, 0xFF	; 255
    14be:	3f 4f       	sbci	r19, 0xFF	; 255
    14c0:	4f 4f       	sbci	r20, 0xFF	; 255
    14c2:	5f 4f       	sbci	r21, 0xFF	; 255
    14c4:	2a a7       	std	Y+42, r18	; 0x2a
    14c6:	3b a7       	std	Y+43, r19	; 0x2b
    14c8:	4c a7       	std	Y+44, r20	; 0x2c
    14ca:	5d a7       	std	Y+45, r21	; 0x2d
    14cc:	01 e0       	ldi	r16, 0x01	; 1
    14ce:	10 e0       	ldi	r17, 0x00	; 0
    14d0:	89 81       	ldd	r24, Y+1	; 0x01
    14d2:	41 d8       	rcall	.-3966   	; 0x556 <disk_write>
    14d4:	1d 82       	std	Y+5, r1	; 0x05
    14d6:	40 e0       	ldi	r20, 0x00	; 0
    14d8:	50 e0       	ldi	r21, 0x00	; 0
    14da:	60 e0       	ldi	r22, 0x00	; 0
    14dc:	89 81       	ldd	r24, Y+1	; 0x01
    14de:	a9 d8       	rcall	.-3758   	; 0x632 <disk_ioctl>
    14e0:	91 e0       	ldi	r25, 0x01	; 1
    14e2:	81 11       	cpse	r24, r1
    14e4:	01 c0       	rjmp	.+2      	; 0x14e8 <sync_fs+0xd0>
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	89 2f       	mov	r24, r25
    14ea:	df 91       	pop	r29
    14ec:	cf 91       	pop	r28
    14ee:	1f 91       	pop	r17
    14f0:	0f 91       	pop	r16
    14f2:	08 95       	ret

000014f4 <clust2sect>:
    14f4:	cf 92       	push	r12
    14f6:	df 92       	push	r13
    14f8:	ef 92       	push	r14
    14fa:	ff 92       	push	r15
    14fc:	fc 01       	movw	r30, r24
    14fe:	9a 01       	movw	r18, r20
    1500:	ab 01       	movw	r20, r22
    1502:	22 50       	subi	r18, 0x02	; 2
    1504:	31 09       	sbc	r19, r1
    1506:	41 09       	sbc	r20, r1
    1508:	51 09       	sbc	r21, r1
    150a:	c2 88       	ldd	r12, Z+18	; 0x12
    150c:	d3 88       	ldd	r13, Z+19	; 0x13
    150e:	e4 88       	ldd	r14, Z+20	; 0x14
    1510:	f5 88       	ldd	r15, Z+21	; 0x15
    1512:	82 e0       	ldi	r24, 0x02	; 2
    1514:	c8 1a       	sub	r12, r24
    1516:	d1 08       	sbc	r13, r1
    1518:	e1 08       	sbc	r14, r1
    151a:	f1 08       	sbc	r15, r1
    151c:	2c 15       	cp	r18, r12
    151e:	3d 05       	cpc	r19, r13
    1520:	4e 05       	cpc	r20, r14
    1522:	5f 05       	cpc	r21, r15
    1524:	68 f4       	brcc	.+26     	; 0x1540 <clust2sect+0x4c>
    1526:	a2 81       	ldd	r26, Z+2	; 0x02
    1528:	b0 e0       	ldi	r27, 0x00	; 0
    152a:	0e 94 44 14 	call	0x2888	; 0x2888 <__muluhisi3>
    152e:	c6 a0       	ldd	r12, Z+38	; 0x26
    1530:	d7 a0       	ldd	r13, Z+39	; 0x27
    1532:	e0 a4       	ldd	r14, Z+40	; 0x28
    1534:	f1 a4       	ldd	r15, Z+41	; 0x29
    1536:	6c 0d       	add	r22, r12
    1538:	7d 1d       	adc	r23, r13
    153a:	8e 1d       	adc	r24, r14
    153c:	9f 1d       	adc	r25, r15
    153e:	03 c0       	rjmp	.+6      	; 0x1546 <clust2sect+0x52>
    1540:	60 e0       	ldi	r22, 0x00	; 0
    1542:	70 e0       	ldi	r23, 0x00	; 0
    1544:	cb 01       	movw	r24, r22
    1546:	ff 90       	pop	r15
    1548:	ef 90       	pop	r14
    154a:	df 90       	pop	r13
    154c:	cf 90       	pop	r12
    154e:	08 95       	ret

00001550 <get_fat>:
    1550:	af 92       	push	r10
    1552:	bf 92       	push	r11
    1554:	cf 92       	push	r12
    1556:	df 92       	push	r13
    1558:	ef 92       	push	r14
    155a:	ff 92       	push	r15
    155c:	0f 93       	push	r16
    155e:	1f 93       	push	r17
    1560:	cf 93       	push	r28
    1562:	df 93       	push	r29
    1564:	ec 01       	movw	r28, r24
    1566:	6a 01       	movw	r12, r20
    1568:	7b 01       	movw	r14, r22
    156a:	42 30       	cpi	r20, 0x02	; 2
    156c:	51 05       	cpc	r21, r1
    156e:	61 05       	cpc	r22, r1
    1570:	71 05       	cpc	r23, r1
    1572:	08 f4       	brcc	.+2      	; 0x1576 <get_fat+0x26>
    1574:	cb c0       	rjmp	.+406    	; 0x170c <get_fat+0x1bc>
    1576:	8a 89       	ldd	r24, Y+18	; 0x12
    1578:	9b 89       	ldd	r25, Y+19	; 0x13
    157a:	ac 89       	ldd	r26, Y+20	; 0x14
    157c:	bd 89       	ldd	r27, Y+21	; 0x15
    157e:	48 17       	cp	r20, r24
    1580:	59 07       	cpc	r21, r25
    1582:	6a 07       	cpc	r22, r26
    1584:	7b 07       	cpc	r23, r27
    1586:	08 f0       	brcs	.+2      	; 0x158a <get_fat+0x3a>
    1588:	c6 c0       	rjmp	.+396    	; 0x1716 <get_fat+0x1c6>
    158a:	88 81       	ld	r24, Y
    158c:	82 30       	cpi	r24, 0x02	; 2
    158e:	09 f4       	brne	.+2      	; 0x1592 <get_fat+0x42>
    1590:	4d c0       	rjmp	.+154    	; 0x162c <get_fat+0xdc>
    1592:	83 30       	cpi	r24, 0x03	; 3
    1594:	09 f4       	brne	.+2      	; 0x1598 <get_fat+0x48>
    1596:	73 c0       	rjmp	.+230    	; 0x167e <get_fat+0x12e>
    1598:	81 30       	cpi	r24, 0x01	; 1
    159a:	09 f0       	breq	.+2      	; 0x159e <get_fat+0x4e>
    159c:	c1 c0       	rjmp	.+386    	; 0x1720 <get_fat+0x1d0>
    159e:	8a 01       	movw	r16, r20
    15a0:	16 95       	lsr	r17
    15a2:	07 95       	ror	r16
    15a4:	04 0f       	add	r16, r20
    15a6:	15 1f       	adc	r17, r21
    15a8:	c8 01       	movw	r24, r16
    15aa:	89 2f       	mov	r24, r25
    15ac:	99 27       	eor	r25, r25
    15ae:	82 95       	swap	r24
    15b0:	8f 70       	andi	r24, 0x0F	; 15
    15b2:	4e 8d       	ldd	r20, Y+30	; 0x1e
    15b4:	5f 8d       	ldd	r21, Y+31	; 0x1f
    15b6:	68 a1       	ldd	r22, Y+32	; 0x20
    15b8:	79 a1       	ldd	r23, Y+33	; 0x21
    15ba:	48 0f       	add	r20, r24
    15bc:	59 1f       	adc	r21, r25
    15be:	61 1d       	adc	r22, r1
    15c0:	71 1d       	adc	r23, r1
    15c2:	ce 01       	movw	r24, r28
    15c4:	a2 da       	rcall	.-2748   	; 0xb0a <move_window>
    15c6:	81 11       	cpse	r24, r1
    15c8:	b0 c0       	rjmp	.+352    	; 0x172a <get_fat+0x1da>
    15ca:	58 01       	movw	r10, r16
    15cc:	8f ef       	ldi	r24, 0xFF	; 255
    15ce:	a8 1a       	sub	r10, r24
    15d0:	b8 0a       	sbc	r11, r24
    15d2:	1f 70       	andi	r17, 0x0F	; 15
    15d4:	fe 01       	movw	r30, r28
    15d6:	e0 0f       	add	r30, r16
    15d8:	f1 1f       	adc	r31, r17
    15da:	16 a5       	ldd	r17, Z+46	; 0x2e
    15dc:	c5 01       	movw	r24, r10
    15de:	89 2f       	mov	r24, r25
    15e0:	99 27       	eor	r25, r25
    15e2:	82 95       	swap	r24
    15e4:	8f 70       	andi	r24, 0x0F	; 15
    15e6:	4e 8d       	ldd	r20, Y+30	; 0x1e
    15e8:	5f 8d       	ldd	r21, Y+31	; 0x1f
    15ea:	68 a1       	ldd	r22, Y+32	; 0x20
    15ec:	79 a1       	ldd	r23, Y+33	; 0x21
    15ee:	48 0f       	add	r20, r24
    15f0:	59 1f       	adc	r21, r25
    15f2:	61 1d       	adc	r22, r1
    15f4:	71 1d       	adc	r23, r1
    15f6:	ce 01       	movw	r24, r28
    15f8:	88 da       	rcall	.-2800   	; 0xb0a <move_window>
    15fa:	81 11       	cpse	r24, r1
    15fc:	9a c0       	rjmp	.+308    	; 0x1732 <get_fat+0x1e2>
    15fe:	8f e0       	ldi	r24, 0x0F	; 15
    1600:	b8 22       	and	r11, r24
    1602:	ca 0d       	add	r28, r10
    1604:	db 1d       	adc	r29, r11
    1606:	8e a5       	ldd	r24, Y+46	; 0x2e
    1608:	61 2f       	mov	r22, r17
    160a:	70 e0       	ldi	r23, 0x00	; 0
    160c:	78 2b       	or	r23, r24
    160e:	c0 fe       	sbrs	r12, 0
    1610:	09 c0       	rjmp	.+18     	; 0x1624 <get_fat+0xd4>
    1612:	72 95       	swap	r23
    1614:	62 95       	swap	r22
    1616:	6f 70       	andi	r22, 0x0F	; 15
    1618:	67 27       	eor	r22, r23
    161a:	7f 70       	andi	r23, 0x0F	; 15
    161c:	67 27       	eor	r22, r23
    161e:	80 e0       	ldi	r24, 0x00	; 0
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	92 c0       	rjmp	.+292    	; 0x1748 <get_fat+0x1f8>
    1624:	7f 70       	andi	r23, 0x0F	; 15
    1626:	80 e0       	ldi	r24, 0x00	; 0
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	8e c0       	rjmp	.+284    	; 0x1748 <get_fat+0x1f8>
    162c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    162e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1630:	a8 a1       	ldd	r26, Y+32	; 0x20
    1632:	b9 a1       	ldd	r27, Y+33	; 0x21
    1634:	03 2e       	mov	r0, r19
    1636:	3b e0       	ldi	r19, 0x0B	; 11
    1638:	76 95       	lsr	r23
    163a:	67 95       	ror	r22
    163c:	57 95       	ror	r21
    163e:	47 95       	ror	r20
    1640:	3a 95       	dec	r19
    1642:	d1 f7       	brne	.-12     	; 0x1638 <get_fat+0xe8>
    1644:	30 2d       	mov	r19, r0
    1646:	48 0f       	add	r20, r24
    1648:	59 1f       	adc	r21, r25
    164a:	6a 1f       	adc	r22, r26
    164c:	7b 1f       	adc	r23, r27
    164e:	ce 01       	movw	r24, r28
    1650:	5c da       	rcall	.-2888   	; 0xb0a <move_window>
    1652:	81 11       	cpse	r24, r1
    1654:	72 c0       	rjmp	.+228    	; 0x173a <get_fat+0x1ea>
    1656:	cc 0c       	add	r12, r12
    1658:	dd 1c       	adc	r13, r13
    165a:	ee 1c       	adc	r14, r14
    165c:	ff 1c       	adc	r15, r15
    165e:	e8 94       	clt
    1660:	c0 f8       	bld	r12, 0
    1662:	8f e0       	ldi	r24, 0x0F	; 15
    1664:	d8 22       	and	r13, r24
    1666:	ee 24       	eor	r14, r14
    1668:	ff 24       	eor	r15, r15
    166a:	fe 01       	movw	r30, r28
    166c:	ec 0d       	add	r30, r12
    166e:	fd 1d       	adc	r31, r13
    1670:	66 a5       	ldd	r22, Z+46	; 0x2e
    1672:	87 a5       	ldd	r24, Z+47	; 0x2f
    1674:	70 e0       	ldi	r23, 0x00	; 0
    1676:	78 2b       	or	r23, r24
    1678:	80 e0       	ldi	r24, 0x00	; 0
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	65 c0       	rjmp	.+202    	; 0x1748 <get_fat+0x1f8>
    167e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1680:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1682:	a8 a1       	ldd	r26, Y+32	; 0x20
    1684:	b9 a1       	ldd	r27, Y+33	; 0x21
    1686:	03 2e       	mov	r0, r19
    1688:	3a e0       	ldi	r19, 0x0A	; 10
    168a:	76 95       	lsr	r23
    168c:	67 95       	ror	r22
    168e:	57 95       	ror	r21
    1690:	47 95       	ror	r20
    1692:	3a 95       	dec	r19
    1694:	d1 f7       	brne	.-12     	; 0x168a <get_fat+0x13a>
    1696:	30 2d       	mov	r19, r0
    1698:	48 0f       	add	r20, r24
    169a:	59 1f       	adc	r21, r25
    169c:	6a 1f       	adc	r22, r26
    169e:	7b 1f       	adc	r23, r27
    16a0:	ce 01       	movw	r24, r28
    16a2:	33 da       	rcall	.-2970   	; 0xb0a <move_window>
    16a4:	81 11       	cpse	r24, r1
    16a6:	4d c0       	rjmp	.+154    	; 0x1742 <get_fat+0x1f2>
    16a8:	cc 0c       	add	r12, r12
    16aa:	dd 1c       	adc	r13, r13
    16ac:	ee 1c       	adc	r14, r14
    16ae:	ff 1c       	adc	r15, r15
    16b0:	cc 0c       	add	r12, r12
    16b2:	dd 1c       	adc	r13, r13
    16b4:	ee 1c       	adc	r14, r14
    16b6:	ff 1c       	adc	r15, r15
    16b8:	8c ef       	ldi	r24, 0xFC	; 252
    16ba:	c8 22       	and	r12, r24
    16bc:	8f e0       	ldi	r24, 0x0F	; 15
    16be:	d8 22       	and	r13, r24
    16c0:	ee 24       	eor	r14, r14
    16c2:	ff 24       	eor	r15, r15
    16c4:	f6 01       	movw	r30, r12
    16c6:	be 96       	adiw	r30, 0x2e	; 46
    16c8:	ec 0f       	add	r30, r28
    16ca:	fd 1f       	adc	r31, r29
    16cc:	22 81       	ldd	r18, Z+2	; 0x02
    16ce:	63 81       	ldd	r22, Z+3	; 0x03
    16d0:	86 2f       	mov	r24, r22
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	a0 e0       	ldi	r26, 0x00	; 0
    16d6:	b0 e0       	ldi	r27, 0x00	; 0
    16d8:	b8 2f       	mov	r27, r24
    16da:	aa 27       	eor	r26, r26
    16dc:	99 27       	eor	r25, r25
    16de:	88 27       	eor	r24, r24
    16e0:	ac 01       	movw	r20, r24
    16e2:	bd 01       	movw	r22, r26
    16e4:	62 2b       	or	r22, r18
    16e6:	81 81       	ldd	r24, Z+1	; 0x01
    16e8:	90 e0       	ldi	r25, 0x00	; 0
    16ea:	98 2f       	mov	r25, r24
    16ec:	88 27       	eor	r24, r24
    16ee:	a0 e0       	ldi	r26, 0x00	; 0
    16f0:	b0 e0       	ldi	r27, 0x00	; 0
    16f2:	84 2b       	or	r24, r20
    16f4:	95 2b       	or	r25, r21
    16f6:	a6 2b       	or	r26, r22
    16f8:	b7 2b       	or	r27, r23
    16fa:	fe 01       	movw	r30, r28
    16fc:	ec 0d       	add	r30, r12
    16fe:	fd 1d       	adc	r31, r13
    1700:	26 a5       	ldd	r18, Z+46	; 0x2e
    1702:	82 2b       	or	r24, r18
    1704:	bc 01       	movw	r22, r24
    1706:	cd 01       	movw	r24, r26
    1708:	9f 70       	andi	r25, 0x0F	; 15
    170a:	1e c0       	rjmp	.+60     	; 0x1748 <get_fat+0x1f8>
    170c:	61 e0       	ldi	r22, 0x01	; 1
    170e:	70 e0       	ldi	r23, 0x00	; 0
    1710:	80 e0       	ldi	r24, 0x00	; 0
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	19 c0       	rjmp	.+50     	; 0x1748 <get_fat+0x1f8>
    1716:	61 e0       	ldi	r22, 0x01	; 1
    1718:	70 e0       	ldi	r23, 0x00	; 0
    171a:	80 e0       	ldi	r24, 0x00	; 0
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	14 c0       	rjmp	.+40     	; 0x1748 <get_fat+0x1f8>
    1720:	61 e0       	ldi	r22, 0x01	; 1
    1722:	70 e0       	ldi	r23, 0x00	; 0
    1724:	80 e0       	ldi	r24, 0x00	; 0
    1726:	90 e0       	ldi	r25, 0x00	; 0
    1728:	0f c0       	rjmp	.+30     	; 0x1748 <get_fat+0x1f8>
    172a:	6f ef       	ldi	r22, 0xFF	; 255
    172c:	7f ef       	ldi	r23, 0xFF	; 255
    172e:	cb 01       	movw	r24, r22
    1730:	0b c0       	rjmp	.+22     	; 0x1748 <get_fat+0x1f8>
    1732:	6f ef       	ldi	r22, 0xFF	; 255
    1734:	7f ef       	ldi	r23, 0xFF	; 255
    1736:	cb 01       	movw	r24, r22
    1738:	07 c0       	rjmp	.+14     	; 0x1748 <get_fat+0x1f8>
    173a:	6f ef       	ldi	r22, 0xFF	; 255
    173c:	7f ef       	ldi	r23, 0xFF	; 255
    173e:	cb 01       	movw	r24, r22
    1740:	03 c0       	rjmp	.+6      	; 0x1748 <get_fat+0x1f8>
    1742:	6f ef       	ldi	r22, 0xFF	; 255
    1744:	7f ef       	ldi	r23, 0xFF	; 255
    1746:	cb 01       	movw	r24, r22
    1748:	df 91       	pop	r29
    174a:	cf 91       	pop	r28
    174c:	1f 91       	pop	r17
    174e:	0f 91       	pop	r16
    1750:	ff 90       	pop	r15
    1752:	ef 90       	pop	r14
    1754:	df 90       	pop	r13
    1756:	cf 90       	pop	r12
    1758:	bf 90       	pop	r11
    175a:	af 90       	pop	r10
    175c:	08 95       	ret

0000175e <dir_sdi>:
    175e:	af 92       	push	r10
    1760:	bf 92       	push	r11
    1762:	cf 92       	push	r12
    1764:	df 92       	push	r13
    1766:	ef 92       	push	r14
    1768:	ff 92       	push	r15
    176a:	0f 93       	push	r16
    176c:	1f 93       	push	r17
    176e:	cf 93       	push	r28
    1770:	df 93       	push	r29
    1772:	ec 01       	movw	r28, r24
    1774:	8b 01       	movw	r16, r22
    1776:	7d 83       	std	Y+5, r23	; 0x05
    1778:	6c 83       	std	Y+4, r22	; 0x04
    177a:	ce 80       	ldd	r12, Y+6	; 0x06
    177c:	df 80       	ldd	r13, Y+7	; 0x07
    177e:	e8 84       	ldd	r14, Y+8	; 0x08
    1780:	f9 84       	ldd	r15, Y+9	; 0x09
    1782:	81 e0       	ldi	r24, 0x01	; 1
    1784:	c8 16       	cp	r12, r24
    1786:	d1 04       	cpc	r13, r1
    1788:	e1 04       	cpc	r14, r1
    178a:	f1 04       	cpc	r15, r1
    178c:	09 f4       	brne	.+2      	; 0x1790 <dir_sdi+0x32>
    178e:	89 c0       	rjmp	.+274    	; 0x18a2 <dir_sdi+0x144>
    1790:	e8 81       	ld	r30, Y
    1792:	f9 81       	ldd	r31, Y+1	; 0x01
    1794:	82 89       	ldd	r24, Z+18	; 0x12
    1796:	93 89       	ldd	r25, Z+19	; 0x13
    1798:	a4 89       	ldd	r26, Z+20	; 0x14
    179a:	b5 89       	ldd	r27, Z+21	; 0x15
    179c:	c8 16       	cp	r12, r24
    179e:	d9 06       	cpc	r13, r25
    17a0:	ea 06       	cpc	r14, r26
    17a2:	fb 06       	cpc	r15, r27
    17a4:	08 f0       	brcs	.+2      	; 0x17a8 <dir_sdi+0x4a>
    17a6:	7f c0       	rjmp	.+254    	; 0x18a6 <dir_sdi+0x148>
    17a8:	c1 14       	cp	r12, r1
    17aa:	d1 04       	cpc	r13, r1
    17ac:	e1 04       	cpc	r14, r1
    17ae:	f1 04       	cpc	r15, r1
    17b0:	c1 f4       	brne	.+48     	; 0x17e2 <dir_sdi+0x84>
    17b2:	80 81       	ld	r24, Z
    17b4:	83 30       	cpi	r24, 0x03	; 3
    17b6:	41 f4       	brne	.+16     	; 0x17c8 <dir_sdi+0x6a>
    17b8:	82 a1       	ldd	r24, Z+34	; 0x22
    17ba:	93 a1       	ldd	r25, Z+35	; 0x23
    17bc:	a4 a1       	ldd	r26, Z+36	; 0x24
    17be:	b5 a1       	ldd	r27, Z+37	; 0x25
    17c0:	00 97       	sbiw	r24, 0x00	; 0
    17c2:	a1 05       	cpc	r26, r1
    17c4:	b1 05       	cpc	r27, r1
    17c6:	59 f4       	brne	.+22     	; 0x17de <dir_sdi+0x80>
    17c8:	80 85       	ldd	r24, Z+8	; 0x08
    17ca:	91 85       	ldd	r25, Z+9	; 0x09
    17cc:	08 17       	cp	r16, r24
    17ce:	19 07       	cpc	r17, r25
    17d0:	08 f0       	brcs	.+2      	; 0x17d4 <dir_sdi+0x76>
    17d2:	6b c0       	rjmp	.+214    	; 0x18aa <dir_sdi+0x14c>
    17d4:	62 a1       	ldd	r22, Z+34	; 0x22
    17d6:	73 a1       	ldd	r23, Z+35	; 0x23
    17d8:	84 a1       	ldd	r24, Z+36	; 0x24
    17da:	95 a1       	ldd	r25, Z+37	; 0x25
    17dc:	35 c0       	rjmp	.+106    	; 0x1848 <dir_sdi+0xea>
    17de:	6c 01       	movw	r12, r24
    17e0:	7d 01       	movw	r14, r26
    17e2:	a2 80       	ldd	r10, Z+2	; 0x02
    17e4:	80 e8       	ldi	r24, 0x80	; 128
    17e6:	a8 9e       	mul	r10, r24
    17e8:	50 01       	movw	r10, r0
    17ea:	11 24       	eor	r1, r1
    17ec:	0a 15       	cp	r16, r10
    17ee:	1b 05       	cpc	r17, r11
    17f0:	30 f1       	brcs	.+76     	; 0x183e <dir_sdi+0xe0>
    17f2:	b7 01       	movw	r22, r14
    17f4:	a6 01       	movw	r20, r12
    17f6:	88 81       	ld	r24, Y
    17f8:	99 81       	ldd	r25, Y+1	; 0x01
    17fa:	aa de       	rcall	.-684    	; 0x1550 <get_fat>
    17fc:	6b 01       	movw	r12, r22
    17fe:	7c 01       	movw	r14, r24
    1800:	8f ef       	ldi	r24, 0xFF	; 255
    1802:	c8 16       	cp	r12, r24
    1804:	d8 06       	cpc	r13, r24
    1806:	e8 06       	cpc	r14, r24
    1808:	f8 06       	cpc	r15, r24
    180a:	09 f4       	brne	.+2      	; 0x180e <dir_sdi+0xb0>
    180c:	50 c0       	rjmp	.+160    	; 0x18ae <dir_sdi+0x150>
    180e:	82 e0       	ldi	r24, 0x02	; 2
    1810:	c8 16       	cp	r12, r24
    1812:	d1 04       	cpc	r13, r1
    1814:	e1 04       	cpc	r14, r1
    1816:	f1 04       	cpc	r15, r1
    1818:	08 f4       	brcc	.+2      	; 0x181c <dir_sdi+0xbe>
    181a:	4b c0       	rjmp	.+150    	; 0x18b2 <dir_sdi+0x154>
    181c:	e8 81       	ld	r30, Y
    181e:	f9 81       	ldd	r31, Y+1	; 0x01
    1820:	82 89       	ldd	r24, Z+18	; 0x12
    1822:	93 89       	ldd	r25, Z+19	; 0x13
    1824:	a4 89       	ldd	r26, Z+20	; 0x14
    1826:	b5 89       	ldd	r27, Z+21	; 0x15
    1828:	c8 16       	cp	r12, r24
    182a:	d9 06       	cpc	r13, r25
    182c:	ea 06       	cpc	r14, r26
    182e:	fb 06       	cpc	r15, r27
    1830:	08 f0       	brcs	.+2      	; 0x1834 <dir_sdi+0xd6>
    1832:	41 c0       	rjmp	.+130    	; 0x18b6 <dir_sdi+0x158>
    1834:	0a 19       	sub	r16, r10
    1836:	1b 09       	sbc	r17, r11
    1838:	0a 15       	cp	r16, r10
    183a:	1b 05       	cpc	r17, r11
    183c:	d0 f6       	brcc	.-76     	; 0x17f2 <dir_sdi+0x94>
    183e:	b7 01       	movw	r22, r14
    1840:	a6 01       	movw	r20, r12
    1842:	88 81       	ld	r24, Y
    1844:	99 81       	ldd	r25, Y+1	; 0x01
    1846:	56 de       	rcall	.-852    	; 0x14f4 <clust2sect>
    1848:	ca 86       	std	Y+10, r12	; 0x0a
    184a:	db 86       	std	Y+11, r13	; 0x0b
    184c:	ec 86       	std	Y+12, r14	; 0x0c
    184e:	fd 86       	std	Y+13, r15	; 0x0d
    1850:	61 15       	cp	r22, r1
    1852:	71 05       	cpc	r23, r1
    1854:	81 05       	cpc	r24, r1
    1856:	91 05       	cpc	r25, r1
    1858:	81 f1       	breq	.+96     	; 0x18ba <dir_sdi+0x15c>
    185a:	98 01       	movw	r18, r16
    185c:	22 0f       	add	r18, r18
    185e:	23 2f       	mov	r18, r19
    1860:	22 1f       	adc	r18, r18
    1862:	33 0b       	sbc	r19, r19
    1864:	31 95       	neg	r19
    1866:	dc 01       	movw	r26, r24
    1868:	cb 01       	movw	r24, r22
    186a:	82 0f       	add	r24, r18
    186c:	93 1f       	adc	r25, r19
    186e:	a1 1d       	adc	r26, r1
    1870:	b1 1d       	adc	r27, r1
    1872:	8e 87       	std	Y+14, r24	; 0x0e
    1874:	9f 87       	std	Y+15, r25	; 0x0f
    1876:	a8 8b       	std	Y+16, r26	; 0x10
    1878:	b9 8b       	std	Y+17, r27	; 0x11
    187a:	0f 77       	andi	r16, 0x7F	; 127
    187c:	11 27       	eor	r17, r17
    187e:	00 0f       	add	r16, r16
    1880:	11 1f       	adc	r17, r17
    1882:	02 95       	swap	r16
    1884:	12 95       	swap	r17
    1886:	10 7f       	andi	r17, 0xF0	; 240
    1888:	10 27       	eor	r17, r16
    188a:	00 7f       	andi	r16, 0xF0	; 240
    188c:	10 27       	eor	r17, r16
    188e:	02 5d       	subi	r16, 0xD2	; 210
    1890:	1f 4f       	sbci	r17, 0xFF	; 255
    1892:	88 81       	ld	r24, Y
    1894:	99 81       	ldd	r25, Y+1	; 0x01
    1896:	80 0f       	add	r24, r16
    1898:	91 1f       	adc	r25, r17
    189a:	9b 8b       	std	Y+19, r25	; 0x13
    189c:	8a 8b       	std	Y+18, r24	; 0x12
    189e:	80 e0       	ldi	r24, 0x00	; 0
    18a0:	0d c0       	rjmp	.+26     	; 0x18bc <dir_sdi+0x15e>
    18a2:	82 e0       	ldi	r24, 0x02	; 2
    18a4:	0b c0       	rjmp	.+22     	; 0x18bc <dir_sdi+0x15e>
    18a6:	82 e0       	ldi	r24, 0x02	; 2
    18a8:	09 c0       	rjmp	.+18     	; 0x18bc <dir_sdi+0x15e>
    18aa:	82 e0       	ldi	r24, 0x02	; 2
    18ac:	07 c0       	rjmp	.+14     	; 0x18bc <dir_sdi+0x15e>
    18ae:	81 e0       	ldi	r24, 0x01	; 1
    18b0:	05 c0       	rjmp	.+10     	; 0x18bc <dir_sdi+0x15e>
    18b2:	82 e0       	ldi	r24, 0x02	; 2
    18b4:	03 c0       	rjmp	.+6      	; 0x18bc <dir_sdi+0x15e>
    18b6:	82 e0       	ldi	r24, 0x02	; 2
    18b8:	01 c0       	rjmp	.+2      	; 0x18bc <dir_sdi+0x15e>
    18ba:	82 e0       	ldi	r24, 0x02	; 2
    18bc:	df 91       	pop	r29
    18be:	cf 91       	pop	r28
    18c0:	1f 91       	pop	r17
    18c2:	0f 91       	pop	r16
    18c4:	ff 90       	pop	r15
    18c6:	ef 90       	pop	r14
    18c8:	df 90       	pop	r13
    18ca:	cf 90       	pop	r12
    18cc:	bf 90       	pop	r11
    18ce:	af 90       	pop	r10
    18d0:	08 95       	ret

000018d2 <put_fat>:
    18d2:	4f 92       	push	r4
    18d4:	5f 92       	push	r5
    18d6:	6f 92       	push	r6
    18d8:	7f 92       	push	r7
    18da:	8f 92       	push	r8
    18dc:	9f 92       	push	r9
    18de:	af 92       	push	r10
    18e0:	bf 92       	push	r11
    18e2:	cf 92       	push	r12
    18e4:	df 92       	push	r13
    18e6:	ef 92       	push	r14
    18e8:	ff 92       	push	r15
    18ea:	0f 93       	push	r16
    18ec:	1f 93       	push	r17
    18ee:	cf 93       	push	r28
    18f0:	df 93       	push	r29
    18f2:	ec 01       	movw	r28, r24
    18f4:	6a 01       	movw	r12, r20
    18f6:	7b 01       	movw	r14, r22
    18f8:	28 01       	movw	r4, r16
    18fa:	39 01       	movw	r6, r18
    18fc:	42 30       	cpi	r20, 0x02	; 2
    18fe:	51 05       	cpc	r21, r1
    1900:	61 05       	cpc	r22, r1
    1902:	71 05       	cpc	r23, r1
    1904:	08 f4       	brcc	.+2      	; 0x1908 <put_fat+0x36>
    1906:	e1 c0       	rjmp	.+450    	; 0x1aca <put_fat+0x1f8>
    1908:	8a 89       	ldd	r24, Y+18	; 0x12
    190a:	9b 89       	ldd	r25, Y+19	; 0x13
    190c:	ac 89       	ldd	r26, Y+20	; 0x14
    190e:	bd 89       	ldd	r27, Y+21	; 0x15
    1910:	48 17       	cp	r20, r24
    1912:	59 07       	cpc	r21, r25
    1914:	6a 07       	cpc	r22, r26
    1916:	7b 07       	cpc	r23, r27
    1918:	08 f0       	brcs	.+2      	; 0x191c <put_fat+0x4a>
    191a:	d9 c0       	rjmp	.+434    	; 0x1ace <put_fat+0x1fc>
    191c:	88 81       	ld	r24, Y
    191e:	82 30       	cpi	r24, 0x02	; 2
    1920:	09 f4       	brne	.+2      	; 0x1924 <put_fat+0x52>
    1922:	65 c0       	rjmp	.+202    	; 0x19ee <put_fat+0x11c>
    1924:	83 30       	cpi	r24, 0x03	; 3
    1926:	09 f4       	brne	.+2      	; 0x192a <put_fat+0x58>
    1928:	8d c0       	rjmp	.+282    	; 0x1a44 <put_fat+0x172>
    192a:	81 30       	cpi	r24, 0x01	; 1
    192c:	09 f0       	breq	.+2      	; 0x1930 <put_fat+0x5e>
    192e:	d1 c0       	rjmp	.+418    	; 0x1ad2 <put_fat+0x200>
    1930:	5a 01       	movw	r10, r20
    1932:	b6 94       	lsr	r11
    1934:	a7 94       	ror	r10
    1936:	a4 0e       	add	r10, r20
    1938:	b5 1e       	adc	r11, r21
    193a:	c5 01       	movw	r24, r10
    193c:	89 2f       	mov	r24, r25
    193e:	99 27       	eor	r25, r25
    1940:	82 95       	swap	r24
    1942:	8f 70       	andi	r24, 0x0F	; 15
    1944:	4e 8d       	ldd	r20, Y+30	; 0x1e
    1946:	5f 8d       	ldd	r21, Y+31	; 0x1f
    1948:	68 a1       	ldd	r22, Y+32	; 0x20
    194a:	79 a1       	ldd	r23, Y+33	; 0x21
    194c:	48 0f       	add	r20, r24
    194e:	59 1f       	adc	r21, r25
    1950:	61 1d       	adc	r22, r1
    1952:	71 1d       	adc	r23, r1
    1954:	ce 01       	movw	r24, r28
    1956:	d9 d8       	rcall	.-3662   	; 0xb0a <move_window>
    1958:	18 2f       	mov	r17, r24
    195a:	81 11       	cpse	r24, r1
    195c:	d8 c0       	rjmp	.+432    	; 0x1b0e <put_fat+0x23c>
    195e:	45 01       	movw	r8, r10
    1960:	8f ef       	ldi	r24, 0xFF	; 255
    1962:	88 1a       	sub	r8, r24
    1964:	98 0a       	sbc	r9, r24
    1966:	af e0       	ldi	r26, 0x0F	; 15
    1968:	ba 22       	and	r11, r26
    196a:	c0 fe       	sbrs	r12, 0
    196c:	21 c0       	rjmp	.+66     	; 0x19b0 <put_fat+0xde>
    196e:	fe 01       	movw	r30, r28
    1970:	ea 0d       	add	r30, r10
    1972:	fb 1d       	adc	r31, r11
    1974:	86 a5       	ldd	r24, Z+46	; 0x2e
    1976:	28 2f       	mov	r18, r24
    1978:	2f 70       	andi	r18, 0x0F	; 15
    197a:	b0 e1       	ldi	r27, 0x10	; 16
    197c:	4b 9e       	mul	r4, r27
    197e:	c0 01       	movw	r24, r0
    1980:	11 24       	eor	r1, r1
    1982:	82 2b       	or	r24, r18
    1984:	86 a7       	std	Z+46, r24	; 0x2e
    1986:	81 e0       	ldi	r24, 0x01	; 1
    1988:	8c 83       	std	Y+4, r24	; 0x04
    198a:	4e 8d       	ldd	r20, Y+30	; 0x1e
    198c:	5f 8d       	ldd	r21, Y+31	; 0x1f
    198e:	68 a1       	ldd	r22, Y+32	; 0x20
    1990:	79 a1       	ldd	r23, Y+33	; 0x21
    1992:	c4 01       	movw	r24, r8
    1994:	89 2f       	mov	r24, r25
    1996:	99 27       	eor	r25, r25
    1998:	82 95       	swap	r24
    199a:	8f 70       	andi	r24, 0x0F	; 15
    199c:	48 0f       	add	r20, r24
    199e:	59 1f       	adc	r21, r25
    19a0:	61 1d       	adc	r22, r1
    19a2:	71 1d       	adc	r23, r1
    19a4:	ce 01       	movw	r24, r28
    19a6:	b1 d8       	rcall	.-3742   	; 0xb0a <move_window>
    19a8:	88 23       	and	r24, r24
    19aa:	09 f4       	brne	.+2      	; 0x19ae <put_fat+0xdc>
    19ac:	98 c0       	rjmp	.+304    	; 0x1ade <put_fat+0x20c>
    19ae:	93 c0       	rjmp	.+294    	; 0x1ad6 <put_fat+0x204>
    19b0:	fe 01       	movw	r30, r28
    19b2:	ea 0d       	add	r30, r10
    19b4:	fb 1d       	adc	r31, r11
    19b6:	46 a6       	std	Z+46, r4	; 0x2e
    19b8:	81 e0       	ldi	r24, 0x01	; 1
    19ba:	8c 83       	std	Y+4, r24	; 0x04
    19bc:	4e 8d       	ldd	r20, Y+30	; 0x1e
    19be:	5f 8d       	ldd	r21, Y+31	; 0x1f
    19c0:	68 a1       	ldd	r22, Y+32	; 0x20
    19c2:	79 a1       	ldd	r23, Y+33	; 0x21
    19c4:	c4 01       	movw	r24, r8
    19c6:	89 2f       	mov	r24, r25
    19c8:	99 27       	eor	r25, r25
    19ca:	82 95       	swap	r24
    19cc:	8f 70       	andi	r24, 0x0F	; 15
    19ce:	48 0f       	add	r20, r24
    19d0:	59 1f       	adc	r21, r25
    19d2:	61 1d       	adc	r22, r1
    19d4:	71 1d       	adc	r23, r1
    19d6:	ce 01       	movw	r24, r28
    19d8:	98 d8       	rcall	.-3792   	; 0xb0a <move_window>
    19da:	88 23       	and	r24, r24
    19dc:	09 f4       	brne	.+2      	; 0x19e0 <put_fat+0x10e>
    19de:	8a c0       	rjmp	.+276    	; 0x1af4 <put_fat+0x222>
    19e0:	7c c0       	rjmp	.+248    	; 0x1ada <put_fat+0x208>
    19e2:	ec 0f       	add	r30, r28
    19e4:	fd 1f       	adc	r31, r29
    19e6:	46 a6       	std	Z+46, r4	; 0x2e
    19e8:	81 e0       	ldi	r24, 0x01	; 1
    19ea:	8c 83       	std	Y+4, r24	; 0x04
    19ec:	90 c0       	rjmp	.+288    	; 0x1b0e <put_fat+0x23c>
    19ee:	8e 8d       	ldd	r24, Y+30	; 0x1e
    19f0:	9f 8d       	ldd	r25, Y+31	; 0x1f
    19f2:	a8 a1       	ldd	r26, Y+32	; 0x20
    19f4:	b9 a1       	ldd	r27, Y+33	; 0x21
    19f6:	03 2e       	mov	r0, r19
    19f8:	3b e0       	ldi	r19, 0x0B	; 11
    19fa:	76 95       	lsr	r23
    19fc:	67 95       	ror	r22
    19fe:	57 95       	ror	r21
    1a00:	47 95       	ror	r20
    1a02:	3a 95       	dec	r19
    1a04:	d1 f7       	brne	.-12     	; 0x19fa <put_fat+0x128>
    1a06:	30 2d       	mov	r19, r0
    1a08:	48 0f       	add	r20, r24
    1a0a:	59 1f       	adc	r21, r25
    1a0c:	6a 1f       	adc	r22, r26
    1a0e:	7b 1f       	adc	r23, r27
    1a10:	ce 01       	movw	r24, r28
    1a12:	7b d8       	rcall	.-3850   	; 0xb0a <move_window>
    1a14:	18 2f       	mov	r17, r24
    1a16:	81 11       	cpse	r24, r1
    1a18:	7a c0       	rjmp	.+244    	; 0x1b0e <put_fat+0x23c>
    1a1a:	cc 0c       	add	r12, r12
    1a1c:	dd 1c       	adc	r13, r13
    1a1e:	ee 1c       	adc	r14, r14
    1a20:	ff 1c       	adc	r15, r15
    1a22:	e8 94       	clt
    1a24:	c0 f8       	bld	r12, 0
    1a26:	3f e0       	ldi	r19, 0x0F	; 15
    1a28:	d3 22       	and	r13, r19
    1a2a:	ee 24       	eor	r14, r14
    1a2c:	ff 24       	eor	r15, r15
    1a2e:	fe 01       	movw	r30, r28
    1a30:	ec 0d       	add	r30, r12
    1a32:	fd 1d       	adc	r31, r13
    1a34:	46 a6       	std	Z+46, r4	; 0x2e
    1a36:	fe 01       	movw	r30, r28
    1a38:	ec 0d       	add	r30, r12
    1a3a:	fd 1d       	adc	r31, r13
    1a3c:	57 a6       	std	Z+47, r5	; 0x2f
    1a3e:	81 e0       	ldi	r24, 0x01	; 1
    1a40:	8c 83       	std	Y+4, r24	; 0x04
    1a42:	65 c0       	rjmp	.+202    	; 0x1b0e <put_fat+0x23c>
    1a44:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1a46:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1a48:	a8 a1       	ldd	r26, Y+32	; 0x20
    1a4a:	b9 a1       	ldd	r27, Y+33	; 0x21
    1a4c:	03 2e       	mov	r0, r19
    1a4e:	3a e0       	ldi	r19, 0x0A	; 10
    1a50:	76 95       	lsr	r23
    1a52:	67 95       	ror	r22
    1a54:	57 95       	ror	r21
    1a56:	47 95       	ror	r20
    1a58:	3a 95       	dec	r19
    1a5a:	d1 f7       	brne	.-12     	; 0x1a50 <put_fat+0x17e>
    1a5c:	30 2d       	mov	r19, r0
    1a5e:	48 0f       	add	r20, r24
    1a60:	59 1f       	adc	r21, r25
    1a62:	6a 1f       	adc	r22, r26
    1a64:	7b 1f       	adc	r23, r27
    1a66:	ce 01       	movw	r24, r28
    1a68:	50 d8       	rcall	.-3936   	; 0xb0a <move_window>
    1a6a:	18 2f       	mov	r17, r24
    1a6c:	81 11       	cpse	r24, r1
    1a6e:	4f c0       	rjmp	.+158    	; 0x1b0e <put_fat+0x23c>
    1a70:	cc 0c       	add	r12, r12
    1a72:	dd 1c       	adc	r13, r13
    1a74:	ee 1c       	adc	r14, r14
    1a76:	ff 1c       	adc	r15, r15
    1a78:	cc 0c       	add	r12, r12
    1a7a:	dd 1c       	adc	r13, r13
    1a7c:	ee 1c       	adc	r14, r14
    1a7e:	ff 1c       	adc	r15, r15
    1a80:	8c ef       	ldi	r24, 0xFC	; 252
    1a82:	c8 22       	and	r12, r24
    1a84:	8f e0       	ldi	r24, 0x0F	; 15
    1a86:	d8 22       	and	r13, r24
    1a88:	ee 24       	eor	r14, r14
    1a8a:	ff 24       	eor	r15, r15
    1a8c:	f6 01       	movw	r30, r12
    1a8e:	be 96       	adiw	r30, 0x2e	; 46
    1a90:	ec 0f       	add	r30, r28
    1a92:	fd 1f       	adc	r31, r29
    1a94:	83 81       	ldd	r24, Z+3	; 0x03
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	a0 e0       	ldi	r26, 0x00	; 0
    1a9a:	b0 e0       	ldi	r27, 0x00	; 0
    1a9c:	b8 2f       	mov	r27, r24
    1a9e:	aa 27       	eor	r26, r26
    1aa0:	99 27       	eor	r25, r25
    1aa2:	88 27       	eor	r24, r24
    1aa4:	cc 0e       	add	r12, r28
    1aa6:	dd 1e       	adc	r13, r29
    1aa8:	88 27       	eor	r24, r24
    1aaa:	99 27       	eor	r25, r25
    1aac:	aa 27       	eor	r26, r26
    1aae:	b0 7f       	andi	r27, 0xF0	; 240
    1ab0:	48 2a       	or	r4, r24
    1ab2:	59 2a       	or	r5, r25
    1ab4:	6a 2a       	or	r6, r26
    1ab6:	7b 2a       	or	r7, r27
    1ab8:	d6 01       	movw	r26, r12
    1aba:	9e 96       	adiw	r26, 0x2e	; 46
    1abc:	4c 92       	st	X, r4
    1abe:	51 82       	std	Z+1, r5	; 0x01
    1ac0:	62 82       	std	Z+2, r6	; 0x02
    1ac2:	73 82       	std	Z+3, r7	; 0x03
    1ac4:	81 e0       	ldi	r24, 0x01	; 1
    1ac6:	8c 83       	std	Y+4, r24	; 0x04
    1ac8:	22 c0       	rjmp	.+68     	; 0x1b0e <put_fat+0x23c>
    1aca:	12 e0       	ldi	r17, 0x02	; 2
    1acc:	20 c0       	rjmp	.+64     	; 0x1b0e <put_fat+0x23c>
    1ace:	12 e0       	ldi	r17, 0x02	; 2
    1ad0:	1e c0       	rjmp	.+60     	; 0x1b0e <put_fat+0x23c>
    1ad2:	12 e0       	ldi	r17, 0x02	; 2
    1ad4:	1c c0       	rjmp	.+56     	; 0x1b0e <put_fat+0x23c>
    1ad6:	18 2f       	mov	r17, r24
    1ad8:	1a c0       	rjmp	.+52     	; 0x1b0e <put_fat+0x23c>
    1ada:	18 2f       	mov	r17, r24
    1adc:	18 c0       	rjmp	.+48     	; 0x1b0e <put_fat+0x23c>
    1ade:	f4 01       	movw	r30, r8
    1ae0:	ff 70       	andi	r31, 0x0F	; 15
    1ae2:	68 94       	set
    1ae4:	13 f8       	bld	r1, 3
    1ae6:	76 94       	lsr	r7
    1ae8:	67 94       	ror	r6
    1aea:	57 94       	ror	r5
    1aec:	47 94       	ror	r4
    1aee:	16 94       	lsr	r1
    1af0:	d1 f7       	brne	.-12     	; 0x1ae6 <put_fat+0x214>
    1af2:	77 cf       	rjmp	.-274    	; 0x19e2 <put_fat+0x110>
    1af4:	f4 01       	movw	r30, r8
    1af6:	ff 70       	andi	r31, 0x0F	; 15
    1af8:	de 01       	movw	r26, r28
    1afa:	ae 0f       	add	r26, r30
    1afc:	bf 1f       	adc	r27, r31
    1afe:	9e 96       	adiw	r26, 0x2e	; 46
    1b00:	9c 91       	ld	r25, X
    1b02:	90 7f       	andi	r25, 0xF0	; 240
    1b04:	85 2d       	mov	r24, r5
    1b06:	8f 70       	andi	r24, 0x0F	; 15
    1b08:	49 2e       	mov	r4, r25
    1b0a:	48 2a       	or	r4, r24
    1b0c:	6a cf       	rjmp	.-300    	; 0x19e2 <put_fat+0x110>
    1b0e:	81 2f       	mov	r24, r17
    1b10:	df 91       	pop	r29
    1b12:	cf 91       	pop	r28
    1b14:	1f 91       	pop	r17
    1b16:	0f 91       	pop	r16
    1b18:	ff 90       	pop	r15
    1b1a:	ef 90       	pop	r14
    1b1c:	df 90       	pop	r13
    1b1e:	cf 90       	pop	r12
    1b20:	bf 90       	pop	r11
    1b22:	af 90       	pop	r10
    1b24:	9f 90       	pop	r9
    1b26:	8f 90       	pop	r8
    1b28:	7f 90       	pop	r7
    1b2a:	6f 90       	pop	r6
    1b2c:	5f 90       	pop	r5
    1b2e:	4f 90       	pop	r4
    1b30:	08 95       	ret

00001b32 <create_chain>:
    1b32:	2f 92       	push	r2
    1b34:	3f 92       	push	r3
    1b36:	4f 92       	push	r4
    1b38:	5f 92       	push	r5
    1b3a:	6f 92       	push	r6
    1b3c:	7f 92       	push	r7
    1b3e:	8f 92       	push	r8
    1b40:	9f 92       	push	r9
    1b42:	af 92       	push	r10
    1b44:	bf 92       	push	r11
    1b46:	cf 92       	push	r12
    1b48:	df 92       	push	r13
    1b4a:	ef 92       	push	r14
    1b4c:	ff 92       	push	r15
    1b4e:	0f 93       	push	r16
    1b50:	1f 93       	push	r17
    1b52:	cf 93       	push	r28
    1b54:	df 93       	push	r29
    1b56:	ec 01       	movw	r28, r24
    1b58:	2a 01       	movw	r4, r20
    1b5a:	3b 01       	movw	r6, r22
    1b5c:	41 15       	cp	r20, r1
    1b5e:	51 05       	cpc	r21, r1
    1b60:	61 05       	cpc	r22, r1
    1b62:	71 05       	cpc	r23, r1
    1b64:	b9 f4       	brne	.+46     	; 0x1b94 <create_chain+0x62>
    1b66:	8a 84       	ldd	r8, Y+10	; 0x0a
    1b68:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b6a:	ac 84       	ldd	r10, Y+12	; 0x0c
    1b6c:	bd 84       	ldd	r11, Y+13	; 0x0d
    1b6e:	81 14       	cp	r8, r1
    1b70:	91 04       	cpc	r9, r1
    1b72:	a1 04       	cpc	r10, r1
    1b74:	b1 04       	cpc	r11, r1
    1b76:	59 f1       	breq	.+86     	; 0x1bce <create_chain+0x9c>
    1b78:	8a 89       	ldd	r24, Y+18	; 0x12
    1b7a:	9b 89       	ldd	r25, Y+19	; 0x13
    1b7c:	ac 89       	ldd	r26, Y+20	; 0x14
    1b7e:	bd 89       	ldd	r27, Y+21	; 0x15
    1b80:	88 16       	cp	r8, r24
    1b82:	99 06       	cpc	r9, r25
    1b84:	aa 06       	cpc	r10, r26
    1b86:	bb 06       	cpc	r11, r27
    1b88:	30 f1       	brcs	.+76     	; 0x1bd6 <create_chain+0xa4>
    1b8a:	81 2c       	mov	r8, r1
    1b8c:	91 2c       	mov	r9, r1
    1b8e:	54 01       	movw	r10, r8
    1b90:	83 94       	inc	r8
    1b92:	21 c0       	rjmp	.+66     	; 0x1bd6 <create_chain+0xa4>
    1b94:	dd dc       	rcall	.-1606   	; 0x1550 <get_fat>
    1b96:	6b 01       	movw	r12, r22
    1b98:	7c 01       	movw	r14, r24
    1b9a:	62 30       	cpi	r22, 0x02	; 2
    1b9c:	71 05       	cpc	r23, r1
    1b9e:	81 05       	cpc	r24, r1
    1ba0:	91 05       	cpc	r25, r1
    1ba2:	08 f4       	brcc	.+2      	; 0x1ba6 <create_chain+0x74>
    1ba4:	96 c0       	rjmp	.+300    	; 0x1cd2 <create_chain+0x1a0>
    1ba6:	8f ef       	ldi	r24, 0xFF	; 255
    1ba8:	c8 16       	cp	r12, r24
    1baa:	d8 06       	cpc	r13, r24
    1bac:	e8 06       	cpc	r14, r24
    1bae:	f8 06       	cpc	r15, r24
    1bb0:	09 f4       	brne	.+2      	; 0x1bb4 <create_chain+0x82>
    1bb2:	94 c0       	rjmp	.+296    	; 0x1cdc <create_chain+0x1aa>
    1bb4:	8a 89       	ldd	r24, Y+18	; 0x12
    1bb6:	9b 89       	ldd	r25, Y+19	; 0x13
    1bb8:	ac 89       	ldd	r26, Y+20	; 0x14
    1bba:	bd 89       	ldd	r27, Y+21	; 0x15
    1bbc:	c8 16       	cp	r12, r24
    1bbe:	d9 06       	cpc	r13, r25
    1bc0:	ea 06       	cpc	r14, r26
    1bc2:	fb 06       	cpc	r15, r27
    1bc4:	08 f4       	brcc	.+2      	; 0x1bc8 <create_chain+0x96>
    1bc6:	8f c0       	rjmp	.+286    	; 0x1ce6 <create_chain+0x1b4>
    1bc8:	53 01       	movw	r10, r6
    1bca:	42 01       	movw	r8, r4
    1bcc:	04 c0       	rjmp	.+8      	; 0x1bd6 <create_chain+0xa4>
    1bce:	81 2c       	mov	r8, r1
    1bd0:	91 2c       	mov	r9, r1
    1bd2:	54 01       	movw	r10, r8
    1bd4:	83 94       	inc	r8
    1bd6:	75 01       	movw	r14, r10
    1bd8:	64 01       	movw	r12, r8
    1bda:	68 94       	set
    1bdc:	22 24       	eor	r2, r2
    1bde:	21 f8       	bld	r2, 1
    1be0:	31 2c       	mov	r3, r1
    1be2:	00 e0       	ldi	r16, 0x00	; 0
    1be4:	10 e0       	ldi	r17, 0x00	; 0
    1be6:	2f ef       	ldi	r18, 0xFF	; 255
    1be8:	c2 1a       	sub	r12, r18
    1bea:	d2 0a       	sbc	r13, r18
    1bec:	e2 0a       	sbc	r14, r18
    1bee:	f2 0a       	sbc	r15, r18
    1bf0:	8a 89       	ldd	r24, Y+18	; 0x12
    1bf2:	9b 89       	ldd	r25, Y+19	; 0x13
    1bf4:	ac 89       	ldd	r26, Y+20	; 0x14
    1bf6:	bd 89       	ldd	r27, Y+21	; 0x15
    1bf8:	c8 16       	cp	r12, r24
    1bfa:	d9 06       	cpc	r13, r25
    1bfc:	ea 06       	cpc	r14, r26
    1bfe:	fb 06       	cpc	r15, r27
    1c00:	58 f0       	brcs	.+22     	; 0x1c18 <create_chain+0xe6>
    1c02:	82 e0       	ldi	r24, 0x02	; 2
    1c04:	88 16       	cp	r8, r24
    1c06:	91 04       	cpc	r9, r1
    1c08:	a1 04       	cpc	r10, r1
    1c0a:	b1 04       	cpc	r11, r1
    1c0c:	08 f4       	brcc	.+2      	; 0x1c10 <create_chain+0xde>
    1c0e:	70 c0       	rjmp	.+224    	; 0x1cf0 <create_chain+0x1be>
    1c10:	c2 2c       	mov	r12, r2
    1c12:	d3 2c       	mov	r13, r3
    1c14:	e0 2e       	mov	r14, r16
    1c16:	f1 2e       	mov	r15, r17
    1c18:	b7 01       	movw	r22, r14
    1c1a:	a6 01       	movw	r20, r12
    1c1c:	ce 01       	movw	r24, r28
    1c1e:	98 dc       	rcall	.-1744   	; 0x1550 <get_fat>
    1c20:	61 15       	cp	r22, r1
    1c22:	71 05       	cpc	r23, r1
    1c24:	81 05       	cpc	r24, r1
    1c26:	91 05       	cpc	r25, r1
    1c28:	99 f0       	breq	.+38     	; 0x1c50 <create_chain+0x11e>
    1c2a:	6f 3f       	cpi	r22, 0xFF	; 255
    1c2c:	2f ef       	ldi	r18, 0xFF	; 255
    1c2e:	72 07       	cpc	r23, r18
    1c30:	82 07       	cpc	r24, r18
    1c32:	92 07       	cpc	r25, r18
    1c34:	09 f4       	brne	.+2      	; 0x1c38 <create_chain+0x106>
    1c36:	61 c0       	rjmp	.+194    	; 0x1cfa <create_chain+0x1c8>
    1c38:	61 30       	cpi	r22, 0x01	; 1
    1c3a:	71 05       	cpc	r23, r1
    1c3c:	81 05       	cpc	r24, r1
    1c3e:	91 05       	cpc	r25, r1
    1c40:	09 f4       	brne	.+2      	; 0x1c44 <create_chain+0x112>
    1c42:	60 c0       	rjmp	.+192    	; 0x1d04 <create_chain+0x1d2>
    1c44:	c8 14       	cp	r12, r8
    1c46:	d9 04       	cpc	r13, r9
    1c48:	ea 04       	cpc	r14, r10
    1c4a:	fb 04       	cpc	r15, r11
    1c4c:	61 f6       	brne	.-104    	; 0x1be6 <create_chain+0xb4>
    1c4e:	5f c0       	rjmp	.+190    	; 0x1d0e <create_chain+0x1dc>
    1c50:	8c 2c       	mov	r8, r12
    1c52:	9d 2c       	mov	r9, r13
    1c54:	ae 2c       	mov	r10, r14
    1c56:	bf 2c       	mov	r11, r15
    1c58:	0f ef       	ldi	r16, 0xFF	; 255
    1c5a:	1f ef       	ldi	r17, 0xFF	; 255
    1c5c:	2f ef       	ldi	r18, 0xFF	; 255
    1c5e:	3f e0       	ldi	r19, 0x0F	; 15
    1c60:	b7 01       	movw	r22, r14
    1c62:	a6 01       	movw	r20, r12
    1c64:	ce 01       	movw	r24, r28
    1c66:	35 de       	rcall	.-918    	; 0x18d2 <put_fat>
    1c68:	81 11       	cpse	r24, r1
    1c6a:	2c c0       	rjmp	.+88     	; 0x1cc4 <create_chain+0x192>
    1c6c:	41 14       	cp	r4, r1
    1c6e:	51 04       	cpc	r5, r1
    1c70:	61 04       	cpc	r6, r1
    1c72:	71 04       	cpc	r7, r1
    1c74:	51 f0       	breq	.+20     	; 0x1c8a <create_chain+0x158>
    1c76:	0c 2d       	mov	r16, r12
    1c78:	1d 2d       	mov	r17, r13
    1c7a:	2e 2d       	mov	r18, r14
    1c7c:	3f 2d       	mov	r19, r15
    1c7e:	b3 01       	movw	r22, r6
    1c80:	a2 01       	movw	r20, r4
    1c82:	ce 01       	movw	r24, r28
    1c84:	26 de       	rcall	.-948    	; 0x18d2 <put_fat>
    1c86:	81 11       	cpse	r24, r1
    1c88:	1d c0       	rjmp	.+58     	; 0x1cc4 <create_chain+0x192>
    1c8a:	8a 86       	std	Y+10, r8	; 0x0a
    1c8c:	9b 86       	std	Y+11, r9	; 0x0b
    1c8e:	ac 86       	std	Y+12, r10	; 0x0c
    1c90:	bd 86       	std	Y+13, r11	; 0x0d
    1c92:	8e 85       	ldd	r24, Y+14	; 0x0e
    1c94:	9f 85       	ldd	r25, Y+15	; 0x0f
    1c96:	a8 89       	ldd	r26, Y+16	; 0x10
    1c98:	b9 89       	ldd	r27, Y+17	; 0x11
    1c9a:	8f 3f       	cpi	r24, 0xFF	; 255
    1c9c:	2f ef       	ldi	r18, 0xFF	; 255
    1c9e:	92 07       	cpc	r25, r18
    1ca0:	a2 07       	cpc	r26, r18
    1ca2:	b2 07       	cpc	r27, r18
    1ca4:	c9 f1       	breq	.+114    	; 0x1d18 <create_chain+0x1e6>
    1ca6:	01 97       	sbiw	r24, 0x01	; 1
    1ca8:	a1 09       	sbc	r26, r1
    1caa:	b1 09       	sbc	r27, r1
    1cac:	8e 87       	std	Y+14, r24	; 0x0e
    1cae:	9f 87       	std	Y+15, r25	; 0x0f
    1cb0:	a8 8b       	std	Y+16, r26	; 0x10
    1cb2:	b9 8b       	std	Y+17, r27	; 0x11
    1cb4:	8d 81       	ldd	r24, Y+5	; 0x05
    1cb6:	81 60       	ori	r24, 0x01	; 1
    1cb8:	8d 83       	std	Y+5, r24	; 0x05
    1cba:	6c 2d       	mov	r22, r12
    1cbc:	7d 2d       	mov	r23, r13
    1cbe:	8e 2d       	mov	r24, r14
    1cc0:	9f 2d       	mov	r25, r15
    1cc2:	33 c0       	rjmp	.+102    	; 0x1d2a <create_chain+0x1f8>
    1cc4:	81 30       	cpi	r24, 0x01	; 1
    1cc6:	69 f1       	breq	.+90     	; 0x1d22 <create_chain+0x1f0>
    1cc8:	61 e0       	ldi	r22, 0x01	; 1
    1cca:	70 e0       	ldi	r23, 0x00	; 0
    1ccc:	80 e0       	ldi	r24, 0x00	; 0
    1cce:	90 e0       	ldi	r25, 0x00	; 0
    1cd0:	2c c0       	rjmp	.+88     	; 0x1d2a <create_chain+0x1f8>
    1cd2:	61 e0       	ldi	r22, 0x01	; 1
    1cd4:	70 e0       	ldi	r23, 0x00	; 0
    1cd6:	80 e0       	ldi	r24, 0x00	; 0
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	27 c0       	rjmp	.+78     	; 0x1d2a <create_chain+0x1f8>
    1cdc:	6f ef       	ldi	r22, 0xFF	; 255
    1cde:	7f ef       	ldi	r23, 0xFF	; 255
    1ce0:	8f ef       	ldi	r24, 0xFF	; 255
    1ce2:	9f ef       	ldi	r25, 0xFF	; 255
    1ce4:	22 c0       	rjmp	.+68     	; 0x1d2a <create_chain+0x1f8>
    1ce6:	6c 2d       	mov	r22, r12
    1ce8:	7d 2d       	mov	r23, r13
    1cea:	8e 2d       	mov	r24, r14
    1cec:	9f 2d       	mov	r25, r15
    1cee:	1d c0       	rjmp	.+58     	; 0x1d2a <create_chain+0x1f8>
    1cf0:	60 e0       	ldi	r22, 0x00	; 0
    1cf2:	70 e0       	ldi	r23, 0x00	; 0
    1cf4:	80 e0       	ldi	r24, 0x00	; 0
    1cf6:	90 e0       	ldi	r25, 0x00	; 0
    1cf8:	18 c0       	rjmp	.+48     	; 0x1d2a <create_chain+0x1f8>
    1cfa:	6f ef       	ldi	r22, 0xFF	; 255
    1cfc:	7f ef       	ldi	r23, 0xFF	; 255
    1cfe:	8f ef       	ldi	r24, 0xFF	; 255
    1d00:	9f ef       	ldi	r25, 0xFF	; 255
    1d02:	13 c0       	rjmp	.+38     	; 0x1d2a <create_chain+0x1f8>
    1d04:	61 e0       	ldi	r22, 0x01	; 1
    1d06:	70 e0       	ldi	r23, 0x00	; 0
    1d08:	80 e0       	ldi	r24, 0x00	; 0
    1d0a:	90 e0       	ldi	r25, 0x00	; 0
    1d0c:	0e c0       	rjmp	.+28     	; 0x1d2a <create_chain+0x1f8>
    1d0e:	60 e0       	ldi	r22, 0x00	; 0
    1d10:	70 e0       	ldi	r23, 0x00	; 0
    1d12:	80 e0       	ldi	r24, 0x00	; 0
    1d14:	90 e0       	ldi	r25, 0x00	; 0
    1d16:	09 c0       	rjmp	.+18     	; 0x1d2a <create_chain+0x1f8>
    1d18:	6c 2d       	mov	r22, r12
    1d1a:	7d 2d       	mov	r23, r13
    1d1c:	8e 2d       	mov	r24, r14
    1d1e:	9f 2d       	mov	r25, r15
    1d20:	04 c0       	rjmp	.+8      	; 0x1d2a <create_chain+0x1f8>
    1d22:	6f ef       	ldi	r22, 0xFF	; 255
    1d24:	7f ef       	ldi	r23, 0xFF	; 255
    1d26:	8f ef       	ldi	r24, 0xFF	; 255
    1d28:	9f ef       	ldi	r25, 0xFF	; 255
    1d2a:	df 91       	pop	r29
    1d2c:	cf 91       	pop	r28
    1d2e:	1f 91       	pop	r17
    1d30:	0f 91       	pop	r16
    1d32:	ff 90       	pop	r15
    1d34:	ef 90       	pop	r14
    1d36:	df 90       	pop	r13
    1d38:	cf 90       	pop	r12
    1d3a:	bf 90       	pop	r11
    1d3c:	af 90       	pop	r10
    1d3e:	9f 90       	pop	r9
    1d40:	8f 90       	pop	r8
    1d42:	7f 90       	pop	r7
    1d44:	6f 90       	pop	r6
    1d46:	5f 90       	pop	r5
    1d48:	4f 90       	pop	r4
    1d4a:	3f 90       	pop	r3
    1d4c:	2f 90       	pop	r2
    1d4e:	08 95       	ret

00001d50 <dir_next>:
    1d50:	7f 92       	push	r7
    1d52:	8f 92       	push	r8
    1d54:	9f 92       	push	r9
    1d56:	af 92       	push	r10
    1d58:	bf 92       	push	r11
    1d5a:	cf 92       	push	r12
    1d5c:	df 92       	push	r13
    1d5e:	ef 92       	push	r14
    1d60:	ff 92       	push	r15
    1d62:	0f 93       	push	r16
    1d64:	1f 93       	push	r17
    1d66:	cf 93       	push	r28
    1d68:	df 93       	push	r29
    1d6a:	dc 01       	movw	r26, r24
    1d6c:	14 96       	adiw	r26, 0x04	; 4
    1d6e:	cd 91       	ld	r28, X+
    1d70:	dc 91       	ld	r29, X
    1d72:	15 97       	sbiw	r26, 0x05	; 5
    1d74:	21 96       	adiw	r28, 0x01	; 1
    1d76:	09 f4       	brne	.+2      	; 0x1d7a <dir_next+0x2a>
    1d78:	ff c0       	rjmp	.+510    	; 0x1f78 <dir_next+0x228>
    1d7a:	1e 96       	adiw	r26, 0x0e	; 14
    1d7c:	8d 90       	ld	r8, X+
    1d7e:	9d 90       	ld	r9, X+
    1d80:	ad 90       	ld	r10, X+
    1d82:	bc 90       	ld	r11, X
    1d84:	51 97       	sbiw	r26, 0x11	; 17
    1d86:	81 14       	cp	r8, r1
    1d88:	91 04       	cpc	r9, r1
    1d8a:	a1 04       	cpc	r10, r1
    1d8c:	b1 04       	cpc	r11, r1
    1d8e:	09 f4       	brne	.+2      	; 0x1d92 <dir_next+0x42>
    1d90:	f5 c0       	rjmp	.+490    	; 0x1f7c <dir_next+0x22c>
    1d92:	7b 01       	movw	r14, r22
    1d94:	8c 01       	movw	r16, r24
    1d96:	6e 01       	movw	r12, r28
    1d98:	e8 94       	clt
    1d9a:	c7 f8       	bld	r12, 7
    1d9c:	dd 24       	eor	r13, r13
    1d9e:	c1 14       	cp	r12, r1
    1da0:	d1 04       	cpc	r13, r1
    1da2:	09 f0       	breq	.+2      	; 0x1da6 <dir_next+0x56>
    1da4:	cd c0       	rjmp	.+410    	; 0x1f40 <dir_next+0x1f0>
    1da6:	bf ef       	ldi	r27, 0xFF	; 255
    1da8:	8b 1a       	sub	r8, r27
    1daa:	9b 0a       	sbc	r9, r27
    1dac:	ab 0a       	sbc	r10, r27
    1dae:	bb 0a       	sbc	r11, r27
    1db0:	fc 01       	movw	r30, r24
    1db2:	86 86       	std	Z+14, r8	; 0x0e
    1db4:	97 86       	std	Z+15, r9	; 0x0f
    1db6:	a0 8a       	std	Z+16, r10	; 0x10
    1db8:	b1 8a       	std	Z+17, r11	; 0x11
    1dba:	42 85       	ldd	r20, Z+10	; 0x0a
    1dbc:	53 85       	ldd	r21, Z+11	; 0x0b
    1dbe:	64 85       	ldd	r22, Z+12	; 0x0c
    1dc0:	75 85       	ldd	r23, Z+13	; 0x0d
    1dc2:	41 15       	cp	r20, r1
    1dc4:	51 05       	cpc	r21, r1
    1dc6:	61 05       	cpc	r22, r1
    1dc8:	71 05       	cpc	r23, r1
    1dca:	51 f4       	brne	.+20     	; 0x1de0 <dir_next+0x90>
    1dcc:	01 90       	ld	r0, Z+
    1dce:	f0 81       	ld	r31, Z
    1dd0:	e0 2d       	mov	r30, r0
    1dd2:	80 85       	ldd	r24, Z+8	; 0x08
    1dd4:	91 85       	ldd	r25, Z+9	; 0x09
    1dd6:	c8 17       	cp	r28, r24
    1dd8:	d9 07       	cpc	r29, r25
    1dda:	08 f0       	brcs	.+2      	; 0x1dde <dir_next+0x8e>
    1ddc:	d1 c0       	rjmp	.+418    	; 0x1f80 <dir_next+0x230>
    1dde:	b0 c0       	rjmp	.+352    	; 0x1f40 <dir_next+0x1f0>
    1de0:	01 90       	ld	r0, Z+
    1de2:	f0 81       	ld	r31, Z
    1de4:	e0 2d       	mov	r30, r0
    1de6:	22 81       	ldd	r18, Z+2	; 0x02
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	21 50       	subi	r18, 0x01	; 1
    1dec:	31 09       	sbc	r19, r1
    1dee:	ce 01       	movw	r24, r28
    1df0:	88 0f       	add	r24, r24
    1df2:	89 2f       	mov	r24, r25
    1df4:	88 1f       	adc	r24, r24
    1df6:	99 0b       	sbc	r25, r25
    1df8:	91 95       	neg	r25
    1dfa:	28 23       	and	r18, r24
    1dfc:	39 23       	and	r19, r25
    1dfe:	23 2b       	or	r18, r19
    1e00:	09 f0       	breq	.+2      	; 0x1e04 <dir_next+0xb4>
    1e02:	9e c0       	rjmp	.+316    	; 0x1f40 <dir_next+0x1f0>
    1e04:	cf 01       	movw	r24, r30
    1e06:	a4 db       	rcall	.-2232   	; 0x1550 <get_fat>
    1e08:	4b 01       	movw	r8, r22
    1e0a:	5c 01       	movw	r10, r24
    1e0c:	62 30       	cpi	r22, 0x02	; 2
    1e0e:	71 05       	cpc	r23, r1
    1e10:	81 05       	cpc	r24, r1
    1e12:	91 05       	cpc	r25, r1
    1e14:	08 f4       	brcc	.+2      	; 0x1e18 <dir_next+0xc8>
    1e16:	b6 c0       	rjmp	.+364    	; 0x1f84 <dir_next+0x234>
    1e18:	6f 3f       	cpi	r22, 0xFF	; 255
    1e1a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e1c:	8f 4f       	sbci	r24, 0xFF	; 255
    1e1e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e20:	09 f4       	brne	.+2      	; 0x1e24 <dir_next+0xd4>
    1e22:	b2 c0       	rjmp	.+356    	; 0x1f88 <dir_next+0x238>
    1e24:	d8 01       	movw	r26, r16
    1e26:	ed 91       	ld	r30, X+
    1e28:	fc 91       	ld	r31, X
    1e2a:	82 89       	ldd	r24, Z+18	; 0x12
    1e2c:	93 89       	ldd	r25, Z+19	; 0x13
    1e2e:	a4 89       	ldd	r26, Z+20	; 0x14
    1e30:	b5 89       	ldd	r27, Z+21	; 0x15
    1e32:	88 16       	cp	r8, r24
    1e34:	99 06       	cpc	r9, r25
    1e36:	aa 06       	cpc	r10, r26
    1e38:	bb 06       	cpc	r11, r27
    1e3a:	08 f4       	brcc	.+2      	; 0x1e3e <dir_next+0xee>
    1e3c:	70 c0       	rjmp	.+224    	; 0x1f1e <dir_next+0x1ce>
    1e3e:	ef 28       	or	r14, r15
    1e40:	09 f4       	brne	.+2      	; 0x1e44 <dir_next+0xf4>
    1e42:	a4 c0       	rjmp	.+328    	; 0x1f8c <dir_next+0x23c>
    1e44:	d8 01       	movw	r26, r16
    1e46:	1a 96       	adiw	r26, 0x0a	; 10
    1e48:	4d 91       	ld	r20, X+
    1e4a:	5d 91       	ld	r21, X+
    1e4c:	6d 91       	ld	r22, X+
    1e4e:	7c 91       	ld	r23, X
    1e50:	1d 97       	sbiw	r26, 0x0d	; 13
    1e52:	cf 01       	movw	r24, r30
    1e54:	6e de       	rcall	.-804    	; 0x1b32 <create_chain>
    1e56:	4b 01       	movw	r8, r22
    1e58:	5c 01       	movw	r10, r24
    1e5a:	61 15       	cp	r22, r1
    1e5c:	71 05       	cpc	r23, r1
    1e5e:	81 05       	cpc	r24, r1
    1e60:	91 05       	cpc	r25, r1
    1e62:	09 f4       	brne	.+2      	; 0x1e66 <dir_next+0x116>
    1e64:	95 c0       	rjmp	.+298    	; 0x1f90 <dir_next+0x240>
    1e66:	61 30       	cpi	r22, 0x01	; 1
    1e68:	71 05       	cpc	r23, r1
    1e6a:	81 05       	cpc	r24, r1
    1e6c:	91 05       	cpc	r25, r1
    1e6e:	09 f4       	brne	.+2      	; 0x1e72 <dir_next+0x122>
    1e70:	91 c0       	rjmp	.+290    	; 0x1f94 <dir_next+0x244>
    1e72:	6f 3f       	cpi	r22, 0xFF	; 255
    1e74:	7f 4f       	sbci	r23, 0xFF	; 255
    1e76:	8f 4f       	sbci	r24, 0xFF	; 255
    1e78:	9f 4f       	sbci	r25, 0xFF	; 255
    1e7a:	09 f4       	brne	.+2      	; 0x1e7e <dir_next+0x12e>
    1e7c:	8d c0       	rjmp	.+282    	; 0x1f98 <dir_next+0x248>
    1e7e:	d8 01       	movw	r26, r16
    1e80:	8d 91       	ld	r24, X+
    1e82:	9c 91       	ld	r25, X
    1e84:	0e 94 1c 05 	call	0xa38	; 0xa38 <sync_window>
    1e88:	81 11       	cpse	r24, r1
    1e8a:	88 c0       	rjmp	.+272    	; 0x1f9c <dir_next+0x24c>
    1e8c:	f8 01       	movw	r30, r16
    1e8e:	80 81       	ld	r24, Z
    1e90:	91 81       	ldd	r25, Z+1	; 0x01
    1e92:	fc 01       	movw	r30, r24
    1e94:	be 96       	adiw	r30, 0x2e	; 46
    1e96:	82 5d       	subi	r24, 0xD2	; 210
    1e98:	9f 4e       	sbci	r25, 0xEF	; 239
    1e9a:	11 92       	st	Z+, r1
    1e9c:	e8 17       	cp	r30, r24
    1e9e:	f9 07       	cpc	r31, r25
    1ea0:	e1 f7       	brne	.-8      	; 0x1e9a <dir_next+0x14a>
    1ea2:	d8 01       	movw	r26, r16
    1ea4:	ed 90       	ld	r14, X+
    1ea6:	fc 90       	ld	r15, X
    1ea8:	b5 01       	movw	r22, r10
    1eaa:	a4 01       	movw	r20, r8
    1eac:	c7 01       	movw	r24, r14
    1eae:	22 db       	rcall	.-2492   	; 0x14f4 <clust2sect>
    1eb0:	f7 01       	movw	r30, r14
    1eb2:	62 a7       	std	Z+42, r22	; 0x2a
    1eb4:	73 a7       	std	Z+43, r23	; 0x2b
    1eb6:	84 a7       	std	Z+44, r24	; 0x2c
    1eb8:	95 a7       	std	Z+45, r25	; 0x2d
    1eba:	e1 2c       	mov	r14, r1
    1ebc:	f1 2c       	mov	r15, r1
    1ebe:	77 24       	eor	r7, r7
    1ec0:	73 94       	inc	r7
    1ec2:	19 c0       	rjmp	.+50     	; 0x1ef6 <dir_next+0x1a6>
    1ec4:	74 82       	std	Z+4, r7	; 0x04
    1ec6:	d8 01       	movw	r26, r16
    1ec8:	8d 91       	ld	r24, X+
    1eca:	9c 91       	ld	r25, X
    1ecc:	0e 94 1c 05 	call	0xa38	; 0xa38 <sync_window>
    1ed0:	81 11       	cpse	r24, r1
    1ed2:	66 c0       	rjmp	.+204    	; 0x1fa0 <dir_next+0x250>
    1ed4:	d8 01       	movw	r26, r16
    1ed6:	ed 91       	ld	r30, X+
    1ed8:	fc 91       	ld	r31, X
    1eda:	82 a5       	ldd	r24, Z+42	; 0x2a
    1edc:	93 a5       	ldd	r25, Z+43	; 0x2b
    1ede:	a4 a5       	ldd	r26, Z+44	; 0x2c
    1ee0:	b5 a5       	ldd	r27, Z+45	; 0x2d
    1ee2:	01 96       	adiw	r24, 0x01	; 1
    1ee4:	a1 1d       	adc	r26, r1
    1ee6:	b1 1d       	adc	r27, r1
    1ee8:	82 a7       	std	Z+42, r24	; 0x2a
    1eea:	93 a7       	std	Z+43, r25	; 0x2b
    1eec:	a4 a7       	std	Z+44, r26	; 0x2c
    1eee:	b5 a7       	std	Z+45, r27	; 0x2d
    1ef0:	bf ef       	ldi	r27, 0xFF	; 255
    1ef2:	eb 1a       	sub	r14, r27
    1ef4:	fb 0a       	sbc	r15, r27
    1ef6:	d8 01       	movw	r26, r16
    1ef8:	ed 91       	ld	r30, X+
    1efa:	fc 91       	ld	r31, X
    1efc:	82 81       	ldd	r24, Z+2	; 0x02
    1efe:	90 e0       	ldi	r25, 0x00	; 0
    1f00:	e8 16       	cp	r14, r24
    1f02:	f9 06       	cpc	r15, r25
    1f04:	f8 f2       	brcs	.-66     	; 0x1ec4 <dir_next+0x174>
    1f06:	82 a5       	ldd	r24, Z+42	; 0x2a
    1f08:	93 a5       	ldd	r25, Z+43	; 0x2b
    1f0a:	a4 a5       	ldd	r26, Z+44	; 0x2c
    1f0c:	b5 a5       	ldd	r27, Z+45	; 0x2d
    1f0e:	8e 19       	sub	r24, r14
    1f10:	9f 09       	sbc	r25, r15
    1f12:	a1 09       	sbc	r26, r1
    1f14:	b1 09       	sbc	r27, r1
    1f16:	82 a7       	std	Z+42, r24	; 0x2a
    1f18:	93 a7       	std	Z+43, r25	; 0x2b
    1f1a:	a4 a7       	std	Z+44, r26	; 0x2c
    1f1c:	b5 a7       	std	Z+45, r27	; 0x2d
    1f1e:	f8 01       	movw	r30, r16
    1f20:	82 86       	std	Z+10, r8	; 0x0a
    1f22:	93 86       	std	Z+11, r9	; 0x0b
    1f24:	a4 86       	std	Z+12, r10	; 0x0c
    1f26:	b5 86       	std	Z+13, r11	; 0x0d
    1f28:	b5 01       	movw	r22, r10
    1f2a:	a4 01       	movw	r20, r8
    1f2c:	80 81       	ld	r24, Z
    1f2e:	91 81       	ldd	r25, Z+1	; 0x01
    1f30:	e1 da       	rcall	.-2622   	; 0x14f4 <clust2sect>
    1f32:	d8 01       	movw	r26, r16
    1f34:	1e 96       	adiw	r26, 0x0e	; 14
    1f36:	6d 93       	st	X+, r22
    1f38:	7d 93       	st	X+, r23
    1f3a:	8d 93       	st	X+, r24
    1f3c:	9c 93       	st	X, r25
    1f3e:	51 97       	sbiw	r26, 0x11	; 17
    1f40:	f8 01       	movw	r30, r16
    1f42:	d5 83       	std	Z+5, r29	; 0x05
    1f44:	c4 83       	std	Z+4, r28	; 0x04
    1f46:	cc 0c       	add	r12, r12
    1f48:	dd 1c       	adc	r13, r13
    1f4a:	cc 0c       	add	r12, r12
    1f4c:	dd 1c       	adc	r13, r13
    1f4e:	cc 0c       	add	r12, r12
    1f50:	dd 1c       	adc	r13, r13
    1f52:	cc 0c       	add	r12, r12
    1f54:	dd 1c       	adc	r13, r13
    1f56:	cc 0c       	add	r12, r12
    1f58:	dd 1c       	adc	r13, r13
    1f5a:	fe e2       	ldi	r31, 0x2E	; 46
    1f5c:	cf 0e       	add	r12, r31
    1f5e:	d1 1c       	adc	r13, r1
    1f60:	d8 01       	movw	r26, r16
    1f62:	8d 91       	ld	r24, X+
    1f64:	9c 91       	ld	r25, X
    1f66:	11 97       	sbiw	r26, 0x01	; 1
    1f68:	c8 0e       	add	r12, r24
    1f6a:	d9 1e       	adc	r13, r25
    1f6c:	53 96       	adiw	r26, 0x13	; 19
    1f6e:	dc 92       	st	X, r13
    1f70:	ce 92       	st	-X, r12
    1f72:	52 97       	sbiw	r26, 0x12	; 18
    1f74:	80 e0       	ldi	r24, 0x00	; 0
    1f76:	15 c0       	rjmp	.+42     	; 0x1fa2 <dir_next+0x252>
    1f78:	84 e0       	ldi	r24, 0x04	; 4
    1f7a:	13 c0       	rjmp	.+38     	; 0x1fa2 <dir_next+0x252>
    1f7c:	84 e0       	ldi	r24, 0x04	; 4
    1f7e:	11 c0       	rjmp	.+34     	; 0x1fa2 <dir_next+0x252>
    1f80:	84 e0       	ldi	r24, 0x04	; 4
    1f82:	0f c0       	rjmp	.+30     	; 0x1fa2 <dir_next+0x252>
    1f84:	82 e0       	ldi	r24, 0x02	; 2
    1f86:	0d c0       	rjmp	.+26     	; 0x1fa2 <dir_next+0x252>
    1f88:	81 e0       	ldi	r24, 0x01	; 1
    1f8a:	0b c0       	rjmp	.+22     	; 0x1fa2 <dir_next+0x252>
    1f8c:	84 e0       	ldi	r24, 0x04	; 4
    1f8e:	09 c0       	rjmp	.+18     	; 0x1fa2 <dir_next+0x252>
    1f90:	87 e0       	ldi	r24, 0x07	; 7
    1f92:	07 c0       	rjmp	.+14     	; 0x1fa2 <dir_next+0x252>
    1f94:	82 e0       	ldi	r24, 0x02	; 2
    1f96:	05 c0       	rjmp	.+10     	; 0x1fa2 <dir_next+0x252>
    1f98:	81 e0       	ldi	r24, 0x01	; 1
    1f9a:	03 c0       	rjmp	.+6      	; 0x1fa2 <dir_next+0x252>
    1f9c:	81 e0       	ldi	r24, 0x01	; 1
    1f9e:	01 c0       	rjmp	.+2      	; 0x1fa2 <dir_next+0x252>
    1fa0:	81 e0       	ldi	r24, 0x01	; 1
    1fa2:	df 91       	pop	r29
    1fa4:	cf 91       	pop	r28
    1fa6:	1f 91       	pop	r17
    1fa8:	0f 91       	pop	r16
    1faa:	ff 90       	pop	r15
    1fac:	ef 90       	pop	r14
    1fae:	df 90       	pop	r13
    1fb0:	cf 90       	pop	r12
    1fb2:	bf 90       	pop	r11
    1fb4:	af 90       	pop	r10
    1fb6:	9f 90       	pop	r9
    1fb8:	8f 90       	pop	r8
    1fba:	7f 90       	pop	r7
    1fbc:	08 95       	ret

00001fbe <follow_path>:
    1fbe:	2f 92       	push	r2
    1fc0:	3f 92       	push	r3
    1fc2:	4f 92       	push	r4
    1fc4:	5f 92       	push	r5
    1fc6:	6f 92       	push	r6
    1fc8:	7f 92       	push	r7
    1fca:	8f 92       	push	r8
    1fcc:	9f 92       	push	r9
    1fce:	af 92       	push	r10
    1fd0:	bf 92       	push	r11
    1fd2:	cf 92       	push	r12
    1fd4:	df 92       	push	r13
    1fd6:	ef 92       	push	r14
    1fd8:	ff 92       	push	r15
    1fda:	0f 93       	push	r16
    1fdc:	1f 93       	push	r17
    1fde:	cf 93       	push	r28
    1fe0:	df 93       	push	r29
    1fe2:	cd b7       	in	r28, 0x3d	; 61
    1fe4:	de b7       	in	r29, 0x3e	; 62
    1fe6:	27 97       	sbiw	r28, 0x07	; 7
    1fe8:	0f b6       	in	r0, 0x3f	; 63
    1fea:	f8 94       	cli
    1fec:	de bf       	out	0x3e, r29	; 62
    1fee:	0f be       	out	0x3f, r0	; 63
    1ff0:	cd bf       	out	0x3d, r28	; 61
    1ff2:	8c 01       	movw	r16, r24
    1ff4:	7b 01       	movw	r14, r22
    1ff6:	db 01       	movw	r26, r22
    1ff8:	8c 91       	ld	r24, X
    1ffa:	8f 32       	cpi	r24, 0x2F	; 47
    1ffc:	11 f0       	breq	.+4      	; 0x2002 <follow_path+0x44>
    1ffe:	8c 35       	cpi	r24, 0x5C	; 92
    2000:	19 f4       	brne	.+6      	; 0x2008 <follow_path+0x4a>
    2002:	bf ef       	ldi	r27, 0xFF	; 255
    2004:	eb 1a       	sub	r14, r27
    2006:	fb 0a       	sbc	r15, r27
    2008:	f8 01       	movw	r30, r16
    200a:	16 82       	std	Z+6, r1	; 0x06
    200c:	17 82       	std	Z+7, r1	; 0x07
    200e:	10 86       	std	Z+8, r1	; 0x08
    2010:	11 86       	std	Z+9, r1	; 0x09
    2012:	d7 01       	movw	r26, r14
    2014:	8c 91       	ld	r24, X
    2016:	80 32       	cpi	r24, 0x20	; 32
    2018:	40 f4       	brcc	.+16     	; 0x202a <follow_path+0x6c>
    201a:	60 e0       	ldi	r22, 0x00	; 0
    201c:	70 e0       	ldi	r23, 0x00	; 0
    201e:	c8 01       	movw	r24, r16
    2020:	9e db       	rcall	.-2244   	; 0x175e <dir_sdi>
    2022:	f8 01       	movw	r30, r16
    2024:	13 8a       	std	Z+19, r1	; 0x13
    2026:	12 8a       	std	Z+18, r1	; 0x12
    2028:	2d c1       	rjmp	.+602    	; 0x2284 <follow_path+0x2c6>
    202a:	68 94       	set
    202c:	bb 24       	eor	r11, r11
    202e:	b5 f8       	bld	r11, 5
    2030:	a1 2c       	mov	r10, r1
    2032:	91 2c       	mov	r9, r1
    2034:	68 94       	set
    2036:	88 24       	eor	r8, r8
    2038:	83 f8       	bld	r8, 3
    203a:	51 2c       	mov	r5, r1
    203c:	71 2c       	mov	r7, r1
    203e:	8c 82       	std	Y+4, r8	; 0x04
    2040:	5d 82       	std	Y+5, r5	; 0x05
    2042:	0f 2e       	mov	r0, r31
    2044:	f2 e0       	ldi	r31, 0x02	; 2
    2046:	2f 2e       	mov	r2, r31
    2048:	f1 e0       	ldi	r31, 0x01	; 1
    204a:	3f 2e       	mov	r3, r31
    204c:	f0 2d       	mov	r31, r0
    204e:	1f 83       	std	Y+7, r17	; 0x07
    2050:	0e 83       	std	Y+6, r16	; 0x06
    2052:	5b 82       	std	Y+3, r5	; 0x03
    2054:	f7 01       	movw	r30, r14
    2056:	2e 81       	ldd	r18, Y+6	; 0x06
    2058:	3f 81       	ldd	r19, Y+7	; 0x07
    205a:	af 01       	movw	r20, r30
    205c:	81 91       	ld	r24, Z+
    205e:	8f 32       	cpi	r24, 0x2F	; 47
    2060:	e1 f3       	breq	.-8      	; 0x205a <follow_path+0x9c>
    2062:	8c 35       	cpi	r24, 0x5C	; 92
    2064:	d1 f3       	breq	.-12     	; 0x205a <follow_path+0x9c>
    2066:	3f 83       	std	Y+7, r19	; 0x07
    2068:	2e 83       	std	Y+6, r18	; 0x06
    206a:	d9 01       	movw	r26, r18
    206c:	54 96       	adiw	r26, 0x14	; 20
    206e:	0d 90       	ld	r0, X+
    2070:	bc 91       	ld	r27, X
    2072:	a0 2d       	mov	r26, r0
    2074:	ba 83       	std	Y+2, r27	; 0x02
    2076:	a9 83       	std	Y+1, r26	; 0x01
    2078:	fd 01       	movw	r30, r26
    207a:	cd 01       	movw	r24, r26
    207c:	0b 96       	adiw	r24, 0x0b	; 11
    207e:	b1 92       	st	Z+, r11
    2080:	e8 17       	cp	r30, r24
    2082:	f9 07       	cpc	r31, r25
    2084:	e1 f7       	brne	.-8      	; 0x207e <follow_path+0xc0>
    2086:	3f 83       	std	Y+7, r19	; 0x07
    2088:	2e 83       	std	Y+6, r18	; 0x06
    208a:	da 01       	movw	r26, r20
    208c:	ca 2c       	mov	r12, r10
    208e:	d9 2c       	mov	r13, r9
    2090:	2a 2d       	mov	r18, r10
    2092:	39 2d       	mov	r19, r9
    2094:	48 2c       	mov	r4, r8
    2096:	5b 80       	ldd	r5, Y+3	; 0x03
    2098:	07 2d       	mov	r16, r7
    209a:	ba 01       	movw	r22, r20
    209c:	ee 80       	ldd	r14, Y+6	; 0x06
    209e:	ff 80       	ldd	r15, Y+7	; 0x07
    20a0:	2f 5f       	subi	r18, 0xFF	; 255
    20a2:	3f 4f       	sbci	r19, 0xFF	; 255
    20a4:	1d 91       	ld	r17, X+
    20a6:	11 32       	cpi	r17, 0x21	; 33
    20a8:	08 f4       	brcc	.+2      	; 0x20ac <follow_path+0xee>
    20aa:	cb c0       	rjmp	.+406    	; 0x2242 <follow_path+0x284>
    20ac:	1f 32       	cpi	r17, 0x2F	; 47
    20ae:	09 f4       	brne	.+2      	; 0x20b2 <follow_path+0xf4>
    20b0:	d0 c0       	rjmp	.+416    	; 0x2252 <follow_path+0x294>
    20b2:	1c 35       	cpi	r17, 0x5C	; 92
    20b4:	09 f4       	brne	.+2      	; 0x20b8 <follow_path+0xfa>
    20b6:	cd c0       	rjmp	.+410    	; 0x2252 <follow_path+0x294>
    20b8:	1e 32       	cpi	r17, 0x2E	; 46
    20ba:	09 f4       	brne	.+2      	; 0x20be <follow_path+0x100>
    20bc:	b6 c0       	rjmp	.+364    	; 0x222a <follow_path+0x26c>
    20be:	c4 14       	cp	r12, r4
    20c0:	d5 04       	cpc	r13, r5
    20c2:	08 f0       	brcs	.+2      	; 0x20c6 <follow_path+0x108>
    20c4:	a4 c0       	rjmp	.+328    	; 0x220e <follow_path+0x250>
    20c6:	0a c0       	rjmp	.+20     	; 0x20dc <follow_path+0x11e>
    20c8:	00 0f       	add	r16, r16
    20ca:	00 0f       	add	r16, r16
    20cc:	cc 80       	ldd	r12, Y+4	; 0x04
    20ce:	dd 80       	ldd	r13, Y+5	; 0x05
    20d0:	0f 2e       	mov	r0, r31
    20d2:	fb e0       	ldi	r31, 0x0B	; 11
    20d4:	4f 2e       	mov	r4, r31
    20d6:	f0 2d       	mov	r31, r0
    20d8:	51 2c       	mov	r5, r1
    20da:	e2 cf       	rjmp	.-60     	; 0x20a0 <follow_path+0xe2>
    20dc:	11 23       	and	r17, r17
    20de:	0c f4       	brge	.+2      	; 0x20e2 <follow_path+0x124>
    20e0:	98 c0       	rjmp	.+304    	; 0x2212 <follow_path+0x254>
    20e2:	41 2f       	mov	r20, r17
    20e4:	50 e0       	ldi	r21, 0x00	; 0
    20e6:	42 32       	cpi	r20, 0x22	; 34
    20e8:	51 05       	cpc	r21, r1
    20ea:	09 f4       	brne	.+2      	; 0x20ee <follow_path+0x130>
    20ec:	94 c0       	rjmp	.+296    	; 0x2216 <follow_path+0x258>
    20ee:	f1 01       	movw	r30, r2
    20f0:	81 91       	ld	r24, Z+
    20f2:	88 23       	and	r24, r24
    20f4:	09 f4       	brne	.+2      	; 0x20f8 <follow_path+0x13a>
    20f6:	9f c0       	rjmp	.+318    	; 0x2236 <follow_path+0x278>
    20f8:	90 e0       	ldi	r25, 0x00	; 0
    20fa:	48 17       	cp	r20, r24
    20fc:	59 07       	cpc	r21, r25
    20fe:	c1 f7       	brne	.-16     	; 0x20f0 <follow_path+0x132>
    2100:	86 e0       	ldi	r24, 0x06	; 6
    2102:	c0 c0       	rjmp	.+384    	; 0x2284 <follow_path+0x2c6>
    2104:	02 60       	ori	r16, 0x02	; 2
    2106:	06 c0       	rjmp	.+12     	; 0x2114 <follow_path+0x156>
    2108:	8f e9       	ldi	r24, 0x9F	; 159
    210a:	81 0f       	add	r24, r17
    210c:	8a 31       	cpi	r24, 0x1A	; 26
    210e:	10 f4       	brcc	.+4      	; 0x2114 <follow_path+0x156>
    2110:	01 60       	ori	r16, 0x01	; 1
    2112:	10 52       	subi	r17, 0x20	; 32
    2114:	89 81       	ldd	r24, Y+1	; 0x01
    2116:	9a 81       	ldd	r25, Y+2	; 0x02
    2118:	8c 0d       	add	r24, r12
    211a:	9d 1d       	adc	r25, r13
    211c:	fc 01       	movw	r30, r24
    211e:	10 83       	st	Z, r17
    2120:	c6 01       	movw	r24, r12
    2122:	01 96       	adiw	r24, 0x01	; 1
    2124:	6c 01       	movw	r12, r24
    2126:	bc cf       	rjmp	.-136    	; 0x20a0 <follow_path+0xe2>
    2128:	cd 28       	or	r12, r13
    212a:	09 f4       	brne	.+2      	; 0x212e <follow_path+0x170>
    212c:	76 c0       	rjmp	.+236    	; 0x221a <follow_path+0x25c>
    212e:	a9 81       	ldd	r26, Y+1	; 0x01
    2130:	ba 81       	ldd	r27, Y+2	; 0x02
    2132:	9c 91       	ld	r25, X
    2134:	95 3e       	cpi	r25, 0xE5	; 229
    2136:	11 f4       	brne	.+4      	; 0x213c <follow_path+0x17e>
    2138:	e5 e0       	ldi	r30, 0x05	; 5
    213a:	ec 93       	st	X, r30
    213c:	f8 e0       	ldi	r31, 0x08	; 8
    213e:	4f 16       	cp	r4, r31
    2140:	51 04       	cpc	r5, r1
    2142:	11 f4       	brne	.+4      	; 0x2148 <follow_path+0x18a>
    2144:	66 0c       	add	r6, r6
    2146:	66 0c       	add	r6, r6
    2148:	96 2d       	mov	r25, r6
    214a:	93 70       	andi	r25, 0x03	; 3
    214c:	91 30       	cpi	r25, 0x01	; 1
    214e:	09 f4       	brne	.+2      	; 0x2152 <follow_path+0x194>
    2150:	80 61       	ori	r24, 0x10	; 16
    2152:	96 2d       	mov	r25, r6
    2154:	9c 70       	andi	r25, 0x0C	; 12
    2156:	94 30       	cpi	r25, 0x04	; 4
    2158:	09 f4       	brne	.+2      	; 0x215c <follow_path+0x19e>
    215a:	88 60       	ori	r24, 0x08	; 8
    215c:	a9 81       	ldd	r26, Y+1	; 0x01
    215e:	ba 81       	ldd	r27, Y+2	; 0x02
    2160:	1b 96       	adiw	r26, 0x0b	; 11
    2162:	8c 93       	st	X, r24
    2164:	6a 2d       	mov	r22, r10
    2166:	79 2d       	mov	r23, r9
    2168:	8e 81       	ldd	r24, Y+6	; 0x06
    216a:	9f 81       	ldd	r25, Y+7	; 0x07
    216c:	f8 da       	rcall	.-2576   	; 0x175e <dir_sdi>
    216e:	81 11       	cpse	r24, r1
    2170:	78 c0       	rjmp	.+240    	; 0x2262 <follow_path+0x2a4>
    2172:	0e 81       	ldd	r16, Y+6	; 0x06
    2174:	1f 81       	ldd	r17, Y+7	; 0x07
    2176:	f8 01       	movw	r30, r16
    2178:	46 85       	ldd	r20, Z+14	; 0x0e
    217a:	57 85       	ldd	r21, Z+15	; 0x0f
    217c:	60 89       	ldd	r22, Z+16	; 0x10
    217e:	71 89       	ldd	r23, Z+17	; 0x11
    2180:	80 81       	ld	r24, Z
    2182:	91 81       	ldd	r25, Z+1	; 0x01
    2184:	0e 94 85 05 	call	0xb0a	; 0xb0a <move_window>
    2188:	81 11       	cpse	r24, r1
    218a:	6d c0       	rjmp	.+218    	; 0x2266 <follow_path+0x2a8>
    218c:	d8 01       	movw	r26, r16
    218e:	52 96       	adiw	r26, 0x12	; 18
    2190:	6d 91       	ld	r22, X+
    2192:	7c 91       	ld	r23, X
    2194:	53 97       	sbiw	r26, 0x13	; 19
    2196:	fb 01       	movw	r30, r22
    2198:	90 81       	ld	r25, Z
    219a:	99 23       	and	r25, r25
    219c:	e9 f0       	breq	.+58     	; 0x21d8 <follow_path+0x21a>
    219e:	93 85       	ldd	r25, Z+11	; 0x0b
    21a0:	93 fd       	sbrc	r25, 3
    21a2:	13 c0       	rjmp	.+38     	; 0x21ca <follow_path+0x20c>
    21a4:	54 96       	adiw	r26, 0x14	; 20
    21a6:	4d 91       	ld	r20, X+
    21a8:	5c 91       	ld	r21, X
    21aa:	55 97       	sbiw	r26, 0x15	; 21
    21ac:	da 01       	movw	r26, r20
    21ae:	9b 01       	movw	r18, r22
    21b0:	25 5f       	subi	r18, 0xF5	; 245
    21b2:	3f 4f       	sbci	r19, 0xFF	; 255
    21b4:	68 01       	movw	r12, r16
    21b6:	04 c0       	rjmp	.+8      	; 0x21c0 <follow_path+0x202>
    21b8:	e2 17       	cp	r30, r18
    21ba:	f3 07       	cpc	r31, r19
    21bc:	09 f4       	brne	.+2      	; 0x21c0 <follow_path+0x202>
    21be:	5c c0       	rjmp	.+184    	; 0x2278 <follow_path+0x2ba>
    21c0:	11 91       	ld	r17, Z+
    21c2:	9d 91       	ld	r25, X+
    21c4:	19 17       	cp	r17, r25
    21c6:	c1 f3       	breq	.-16     	; 0x21b8 <follow_path+0x1fa>
    21c8:	86 01       	movw	r16, r12
    21ca:	6a 2d       	mov	r22, r10
    21cc:	79 2d       	mov	r23, r9
    21ce:	c8 01       	movw	r24, r16
    21d0:	bf dd       	rcall	.-1154   	; 0x1d50 <dir_next>
    21d2:	88 23       	and	r24, r24
    21d4:	81 f2       	breq	.-96     	; 0x2176 <follow_path+0x1b8>
    21d6:	47 c0       	rjmp	.+142    	; 0x2266 <follow_path+0x2a8>
    21d8:	d8 01       	movw	r26, r16
    21da:	54 96       	adiw	r26, 0x14	; 20
    21dc:	ed 91       	ld	r30, X+
    21de:	fc 91       	ld	r31, X
    21e0:	55 97       	sbiw	r26, 0x15	; 21
    21e2:	93 85       	ldd	r25, Z+11	; 0x0b
    21e4:	92 fd       	sbrc	r25, 2
    21e6:	1b c0       	rjmp	.+54     	; 0x221e <follow_path+0x260>
    21e8:	85 e0       	ldi	r24, 0x05	; 5
    21ea:	4c c0       	rjmp	.+152    	; 0x2284 <follow_path+0x2c6>
    21ec:	fb 01       	movw	r30, r22
    21ee:	83 85       	ldd	r24, Z+11	; 0x0b
    21f0:	84 ff       	sbrs	r24, 4
    21f2:	17 c0       	rjmp	.+46     	; 0x2222 <follow_path+0x264>
    21f4:	ae 81       	ldd	r26, Y+6	; 0x06
    21f6:	bf 81       	ldd	r27, Y+7	; 0x07
    21f8:	8d 91       	ld	r24, X+
    21fa:	9c 91       	ld	r25, X
    21fc:	0e 94 c3 04 	call	0x986	; 0x986 <ld_clust>
    2200:	ee 81       	ldd	r30, Y+6	; 0x06
    2202:	ff 81       	ldd	r31, Y+7	; 0x07
    2204:	66 83       	std	Z+6, r22	; 0x06
    2206:	77 83       	std	Z+7, r23	; 0x07
    2208:	80 87       	std	Z+8, r24	; 0x08
    220a:	91 87       	std	Z+9, r25	; 0x09
    220c:	23 cf       	rjmp	.-442    	; 0x2054 <follow_path+0x96>
    220e:	86 e0       	ldi	r24, 0x06	; 6
    2210:	39 c0       	rjmp	.+114    	; 0x2284 <follow_path+0x2c6>
    2212:	86 e0       	ldi	r24, 0x06	; 6
    2214:	37 c0       	rjmp	.+110    	; 0x2284 <follow_path+0x2c6>
    2216:	86 e0       	ldi	r24, 0x06	; 6
    2218:	35 c0       	rjmp	.+106    	; 0x2284 <follow_path+0x2c6>
    221a:	86 e0       	ldi	r24, 0x06	; 6
    221c:	33 c0       	rjmp	.+102    	; 0x2284 <follow_path+0x2c6>
    221e:	84 e0       	ldi	r24, 0x04	; 4
    2220:	31 c0       	rjmp	.+98     	; 0x2284 <follow_path+0x2c6>
    2222:	85 e0       	ldi	r24, 0x05	; 5
    2224:	2f c0       	rjmp	.+94     	; 0x2284 <follow_path+0x2c6>
    2226:	86 e0       	ldi	r24, 0x06	; 6
    2228:	2d c0       	rjmp	.+90     	; 0x2284 <follow_path+0x2c6>
    222a:	f8 e0       	ldi	r31, 0x08	; 8
    222c:	4f 16       	cp	r4, r31
    222e:	51 04       	cpc	r5, r1
    2230:	09 f4       	brne	.+2      	; 0x2234 <follow_path+0x276>
    2232:	4a cf       	rjmp	.-364    	; 0x20c8 <follow_path+0x10a>
    2234:	f8 cf       	rjmp	.-16     	; 0x2226 <follow_path+0x268>
    2236:	8f eb       	ldi	r24, 0xBF	; 191
    2238:	81 0f       	add	r24, r17
    223a:	8a 31       	cpi	r24, 0x1A	; 26
    223c:	08 f4       	brcc	.+2      	; 0x2240 <follow_path+0x282>
    223e:	62 cf       	rjmp	.-316    	; 0x2104 <follow_path+0x146>
    2240:	63 cf       	rjmp	.-314    	; 0x2108 <follow_path+0x14a>
    2242:	60 2e       	mov	r6, r16
    2244:	ff 82       	std	Y+7, r15	; 0x07
    2246:	ee 82       	std	Y+6, r14	; 0x06
    2248:	7b 01       	movw	r14, r22
    224a:	e2 0e       	add	r14, r18
    224c:	f3 1e       	adc	r15, r19
    224e:	84 e0       	ldi	r24, 0x04	; 4
    2250:	6b cf       	rjmp	.-298    	; 0x2128 <follow_path+0x16a>
    2252:	60 2e       	mov	r6, r16
    2254:	ff 82       	std	Y+7, r15	; 0x07
    2256:	ee 82       	std	Y+6, r14	; 0x06
    2258:	7b 01       	movw	r14, r22
    225a:	e2 0e       	add	r14, r18
    225c:	f3 1e       	adc	r15, r19
    225e:	87 2d       	mov	r24, r7
    2260:	63 cf       	rjmp	.-314    	; 0x2128 <follow_path+0x16a>
    2262:	0e 81       	ldd	r16, Y+6	; 0x06
    2264:	1f 81       	ldd	r17, Y+7	; 0x07
    2266:	d8 01       	movw	r26, r16
    2268:	54 96       	adiw	r26, 0x14	; 20
    226a:	ed 91       	ld	r30, X+
    226c:	fc 91       	ld	r31, X
    226e:	55 97       	sbiw	r26, 0x15	; 21
    2270:	93 85       	ldd	r25, Z+11	; 0x0b
    2272:	84 30       	cpi	r24, 0x04	; 4
    2274:	39 f4       	brne	.+14     	; 0x2284 <follow_path+0x2c6>
    2276:	b6 cf       	rjmp	.-148    	; 0x21e4 <follow_path+0x226>
    2278:	df 82       	std	Y+7, r13	; 0x07
    227a:	ce 82       	std	Y+6, r12	; 0x06
    227c:	fa 01       	movw	r30, r20
    227e:	93 85       	ldd	r25, Z+11	; 0x0b
    2280:	92 ff       	sbrs	r25, 2
    2282:	b4 cf       	rjmp	.-152    	; 0x21ec <follow_path+0x22e>
    2284:	27 96       	adiw	r28, 0x07	; 7
    2286:	0f b6       	in	r0, 0x3f	; 63
    2288:	f8 94       	cli
    228a:	de bf       	out	0x3e, r29	; 62
    228c:	0f be       	out	0x3f, r0	; 63
    228e:	cd bf       	out	0x3d, r28	; 61
    2290:	df 91       	pop	r29
    2292:	cf 91       	pop	r28
    2294:	1f 91       	pop	r17
    2296:	0f 91       	pop	r16
    2298:	ff 90       	pop	r15
    229a:	ef 90       	pop	r14
    229c:	df 90       	pop	r13
    229e:	cf 90       	pop	r12
    22a0:	bf 90       	pop	r11
    22a2:	af 90       	pop	r10
    22a4:	9f 90       	pop	r9
    22a6:	8f 90       	pop	r8
    22a8:	7f 90       	pop	r7
    22aa:	6f 90       	pop	r6
    22ac:	5f 90       	pop	r5
    22ae:	4f 90       	pop	r4
    22b0:	3f 90       	pop	r3
    22b2:	2f 90       	pop	r2
    22b4:	08 95       	ret

000022b6 <dir_register>:
    22b6:	0f 93       	push	r16
    22b8:	1f 93       	push	r17
    22ba:	cf 93       	push	r28
    22bc:	8c 01       	movw	r16, r24
    22be:	60 e0       	ldi	r22, 0x00	; 0
    22c0:	70 e0       	ldi	r23, 0x00	; 0
    22c2:	4d da       	rcall	.-2918   	; 0x175e <dir_sdi>
    22c4:	c8 2f       	mov	r28, r24
    22c6:	81 11       	cpse	r24, r1
    22c8:	46 c0       	rjmp	.+140    	; 0x2356 <dir_register+0xa0>
    22ca:	d8 01       	movw	r26, r16
    22cc:	1e 96       	adiw	r26, 0x0e	; 14
    22ce:	4d 91       	ld	r20, X+
    22d0:	5d 91       	ld	r21, X+
    22d2:	6d 91       	ld	r22, X+
    22d4:	7c 91       	ld	r23, X
    22d6:	51 97       	sbiw	r26, 0x11	; 17
    22d8:	8d 91       	ld	r24, X+
    22da:	9c 91       	ld	r25, X
    22dc:	0e 94 85 05 	call	0xb0a	; 0xb0a <move_window>
    22e0:	c8 2f       	mov	r28, r24
    22e2:	81 11       	cpse	r24, r1
    22e4:	38 c0       	rjmp	.+112    	; 0x2356 <dir_register+0xa0>
    22e6:	d8 01       	movw	r26, r16
    22e8:	52 96       	adiw	r26, 0x12	; 18
    22ea:	ed 91       	ld	r30, X+
    22ec:	fc 91       	ld	r31, X
    22ee:	53 97       	sbiw	r26, 0x13	; 19
    22f0:	80 81       	ld	r24, Z
    22f2:	85 3e       	cpi	r24, 0xE5	; 229
    22f4:	51 f0       	breq	.+20     	; 0x230a <dir_register+0x54>
    22f6:	88 23       	and	r24, r24
    22f8:	41 f0       	breq	.+16     	; 0x230a <dir_register+0x54>
    22fa:	61 e0       	ldi	r22, 0x01	; 1
    22fc:	70 e0       	ldi	r23, 0x00	; 0
    22fe:	c8 01       	movw	r24, r16
    2300:	27 dd       	rcall	.-1458   	; 0x1d50 <dir_next>
    2302:	c8 2f       	mov	r28, r24
    2304:	88 23       	and	r24, r24
    2306:	09 f3       	breq	.-62     	; 0x22ca <dir_register+0x14>
    2308:	26 c0       	rjmp	.+76     	; 0x2356 <dir_register+0xa0>
    230a:	f8 01       	movw	r30, r16
    230c:	46 85       	ldd	r20, Z+14	; 0x0e
    230e:	57 85       	ldd	r21, Z+15	; 0x0f
    2310:	60 89       	ldd	r22, Z+16	; 0x10
    2312:	71 89       	ldd	r23, Z+17	; 0x11
    2314:	80 81       	ld	r24, Z
    2316:	91 81       	ldd	r25, Z+1	; 0x01
    2318:	0e 94 85 05 	call	0xb0a	; 0xb0a <move_window>
    231c:	c8 2f       	mov	r28, r24
    231e:	81 11       	cpse	r24, r1
    2320:	1d c0       	rjmp	.+58     	; 0x235c <dir_register+0xa6>
    2322:	d8 01       	movw	r26, r16
    2324:	52 96       	adiw	r26, 0x12	; 18
    2326:	ed 91       	ld	r30, X+
    2328:	fc 91       	ld	r31, X
    232a:	53 97       	sbiw	r26, 0x13	; 19
    232c:	cf 01       	movw	r24, r30
    232e:	80 96       	adiw	r24, 0x20	; 32
    2330:	11 92       	st	Z+, r1
    2332:	e8 17       	cp	r30, r24
    2334:	f9 07       	cpc	r31, r25
    2336:	e1 f7       	brne	.-8      	; 0x2330 <dir_register+0x7a>
    2338:	f8 01       	movw	r30, r16
    233a:	64 89       	ldd	r22, Z+20	; 0x14
    233c:	75 89       	ldd	r23, Z+21	; 0x15
    233e:	4b e0       	ldi	r20, 0x0B	; 11
    2340:	50 e0       	ldi	r21, 0x00	; 0
    2342:	82 89       	ldd	r24, Z+18	; 0x12
    2344:	93 89       	ldd	r25, Z+19	; 0x13
    2346:	0e 94 b5 04 	call	0x96a	; 0x96a <mem_cpy>
    234a:	d8 01       	movw	r26, r16
    234c:	ed 91       	ld	r30, X+
    234e:	fc 91       	ld	r31, X
    2350:	81 e0       	ldi	r24, 0x01	; 1
    2352:	84 83       	std	Z+4, r24	; 0x04
    2354:	03 c0       	rjmp	.+6      	; 0x235c <dir_register+0xa6>
    2356:	c4 30       	cpi	r28, 0x04	; 4
    2358:	09 f4       	brne	.+2      	; 0x235c <dir_register+0xa6>
    235a:	c7 e0       	ldi	r28, 0x07	; 7
    235c:	8c 2f       	mov	r24, r28
    235e:	cf 91       	pop	r28
    2360:	1f 91       	pop	r17
    2362:	0f 91       	pop	r16
    2364:	08 95       	ret

00002366 <remove_chain>:
    2366:	8f 92       	push	r8
    2368:	9f 92       	push	r9
    236a:	af 92       	push	r10
    236c:	bf 92       	push	r11
    236e:	cf 92       	push	r12
    2370:	df 92       	push	r13
    2372:	ef 92       	push	r14
    2374:	ff 92       	push	r15
    2376:	0f 93       	push	r16
    2378:	1f 93       	push	r17
    237a:	cf 93       	push	r28
    237c:	df 93       	push	r29
    237e:	ec 01       	movw	r28, r24
    2380:	6a 01       	movw	r12, r20
    2382:	7b 01       	movw	r14, r22
    2384:	42 30       	cpi	r20, 0x02	; 2
    2386:	51 05       	cpc	r21, r1
    2388:	61 05       	cpc	r22, r1
    238a:	71 05       	cpc	r23, r1
    238c:	08 f4       	brcc	.+2      	; 0x2390 <remove_chain+0x2a>
    238e:	4c c0       	rjmp	.+152    	; 0x2428 <remove_chain+0xc2>
    2390:	8a 89       	ldd	r24, Y+18	; 0x12
    2392:	9b 89       	ldd	r25, Y+19	; 0x13
    2394:	ac 89       	ldd	r26, Y+20	; 0x14
    2396:	bd 89       	ldd	r27, Y+21	; 0x15
    2398:	48 17       	cp	r20, r24
    239a:	59 07       	cpc	r21, r25
    239c:	6a 07       	cpc	r22, r26
    239e:	7b 07       	cpc	r23, r27
    23a0:	08 f0       	brcs	.+2      	; 0x23a4 <remove_chain+0x3e>
    23a2:	44 c0       	rjmp	.+136    	; 0x242c <remove_chain+0xc6>
    23a4:	35 c0       	rjmp	.+106    	; 0x2410 <remove_chain+0xaa>
    23a6:	b7 01       	movw	r22, r14
    23a8:	a6 01       	movw	r20, r12
    23aa:	ce 01       	movw	r24, r28
    23ac:	d1 d8       	rcall	.-3678   	; 0x1550 <get_fat>
    23ae:	4b 01       	movw	r8, r22
    23b0:	5c 01       	movw	r10, r24
    23b2:	67 2b       	or	r22, r23
    23b4:	68 2b       	or	r22, r24
    23b6:	69 2b       	or	r22, r25
    23b8:	d9 f1       	breq	.+118    	; 0x2430 <remove_chain+0xca>
    23ba:	81 e0       	ldi	r24, 0x01	; 1
    23bc:	88 16       	cp	r8, r24
    23be:	91 04       	cpc	r9, r1
    23c0:	a1 04       	cpc	r10, r1
    23c2:	b1 04       	cpc	r11, r1
    23c4:	b9 f1       	breq	.+110    	; 0x2434 <remove_chain+0xce>
    23c6:	2f ef       	ldi	r18, 0xFF	; 255
    23c8:	82 16       	cp	r8, r18
    23ca:	92 06       	cpc	r9, r18
    23cc:	a2 06       	cpc	r10, r18
    23ce:	b2 06       	cpc	r11, r18
    23d0:	99 f1       	breq	.+102    	; 0x2438 <remove_chain+0xd2>
    23d2:	00 e0       	ldi	r16, 0x00	; 0
    23d4:	10 e0       	ldi	r17, 0x00	; 0
    23d6:	98 01       	movw	r18, r16
    23d8:	b7 01       	movw	r22, r14
    23da:	a6 01       	movw	r20, r12
    23dc:	ce 01       	movw	r24, r28
    23de:	79 da       	rcall	.-2830   	; 0x18d2 <put_fat>
    23e0:	81 11       	cpse	r24, r1
    23e2:	2b c0       	rjmp	.+86     	; 0x243a <remove_chain+0xd4>
    23e4:	8e 85       	ldd	r24, Y+14	; 0x0e
    23e6:	9f 85       	ldd	r25, Y+15	; 0x0f
    23e8:	a8 89       	ldd	r26, Y+16	; 0x10
    23ea:	b9 89       	ldd	r27, Y+17	; 0x11
    23ec:	8f 3f       	cpi	r24, 0xFF	; 255
    23ee:	2f ef       	ldi	r18, 0xFF	; 255
    23f0:	92 07       	cpc	r25, r18
    23f2:	a2 07       	cpc	r26, r18
    23f4:	b2 07       	cpc	r27, r18
    23f6:	51 f0       	breq	.+20     	; 0x240c <remove_chain+0xa6>
    23f8:	01 96       	adiw	r24, 0x01	; 1
    23fa:	a1 1d       	adc	r26, r1
    23fc:	b1 1d       	adc	r27, r1
    23fe:	8e 87       	std	Y+14, r24	; 0x0e
    2400:	9f 87       	std	Y+15, r25	; 0x0f
    2402:	a8 8b       	std	Y+16, r26	; 0x10
    2404:	b9 8b       	std	Y+17, r27	; 0x11
    2406:	8d 81       	ldd	r24, Y+5	; 0x05
    2408:	81 60       	ori	r24, 0x01	; 1
    240a:	8d 83       	std	Y+5, r24	; 0x05
    240c:	75 01       	movw	r14, r10
    240e:	64 01       	movw	r12, r8
    2410:	8a 89       	ldd	r24, Y+18	; 0x12
    2412:	9b 89       	ldd	r25, Y+19	; 0x13
    2414:	ac 89       	ldd	r26, Y+20	; 0x14
    2416:	bd 89       	ldd	r27, Y+21	; 0x15
    2418:	c8 16       	cp	r12, r24
    241a:	d9 06       	cpc	r13, r25
    241c:	ea 06       	cpc	r14, r26
    241e:	fb 06       	cpc	r15, r27
    2420:	08 f4       	brcc	.+2      	; 0x2424 <remove_chain+0xbe>
    2422:	c1 cf       	rjmp	.-126    	; 0x23a6 <remove_chain+0x40>
    2424:	80 e0       	ldi	r24, 0x00	; 0
    2426:	09 c0       	rjmp	.+18     	; 0x243a <remove_chain+0xd4>
    2428:	82 e0       	ldi	r24, 0x02	; 2
    242a:	07 c0       	rjmp	.+14     	; 0x243a <remove_chain+0xd4>
    242c:	82 e0       	ldi	r24, 0x02	; 2
    242e:	05 c0       	rjmp	.+10     	; 0x243a <remove_chain+0xd4>
    2430:	80 e0       	ldi	r24, 0x00	; 0
    2432:	03 c0       	rjmp	.+6      	; 0x243a <remove_chain+0xd4>
    2434:	82 e0       	ldi	r24, 0x02	; 2
    2436:	01 c0       	rjmp	.+2      	; 0x243a <remove_chain+0xd4>
    2438:	81 e0       	ldi	r24, 0x01	; 1
    243a:	df 91       	pop	r29
    243c:	cf 91       	pop	r28
    243e:	1f 91       	pop	r17
    2440:	0f 91       	pop	r16
    2442:	ff 90       	pop	r15
    2444:	ef 90       	pop	r14
    2446:	df 90       	pop	r13
    2448:	cf 90       	pop	r12
    244a:	bf 90       	pop	r11
    244c:	af 90       	pop	r10
    244e:	9f 90       	pop	r9
    2450:	8f 90       	pop	r8
    2452:	08 95       	ret

00002454 <f_mount>:
    2454:	1f 93       	push	r17
    2456:	cf 93       	push	r28
    2458:	df 93       	push	r29
    245a:	00 d0       	rcall	.+0      	; 0x245c <f_mount+0x8>
    245c:	00 d0       	rcall	.+0      	; 0x245e <f_mount+0xa>
    245e:	00 d0       	rcall	.+0      	; 0x2460 <f_mount+0xc>
    2460:	cd b7       	in	r28, 0x3d	; 61
    2462:	de b7       	in	r29, 0x3e	; 62
    2464:	9c 83       	std	Y+4, r25	; 0x04
    2466:	8b 83       	std	Y+3, r24	; 0x03
    2468:	7e 83       	std	Y+6, r23	; 0x06
    246a:	6d 83       	std	Y+5, r22	; 0x05
    246c:	14 2f       	mov	r17, r20
    246e:	7a 83       	std	Y+2, r23	; 0x02
    2470:	69 83       	std	Y+1, r22	; 0x01
    2472:	ce 01       	movw	r24, r28
    2474:	01 96       	adiw	r24, 0x01	; 1
    2476:	0e 94 e5 04 	call	0x9ca	; 0x9ca <get_ldnumber>
    247a:	99 23       	and	r25, r25
    247c:	34 f1       	brlt	.+76     	; 0x24ca <f_mount+0x76>
    247e:	fc 01       	movw	r30, r24
    2480:	ee 0f       	add	r30, r30
    2482:	ff 1f       	adc	r31, r31
    2484:	e3 5e       	subi	r30, 0xE3	; 227
    2486:	fe 4f       	sbci	r31, 0xFE	; 254
    2488:	01 90       	ld	r0, Z+
    248a:	f0 81       	ld	r31, Z
    248c:	e0 2d       	mov	r30, r0
    248e:	30 97       	sbiw	r30, 0x00	; 0
    2490:	09 f0       	breq	.+2      	; 0x2494 <f_mount+0x40>
    2492:	10 82       	st	Z, r1
    2494:	eb 81       	ldd	r30, Y+3	; 0x03
    2496:	fc 81       	ldd	r31, Y+4	; 0x04
    2498:	30 97       	sbiw	r30, 0x00	; 0
    249a:	e9 f0       	breq	.+58     	; 0x24d6 <f_mount+0x82>
    249c:	10 82       	st	Z, r1
    249e:	2b 81       	ldd	r18, Y+3	; 0x03
    24a0:	3c 81       	ldd	r19, Y+4	; 0x04
    24a2:	88 0f       	add	r24, r24
    24a4:	99 1f       	adc	r25, r25
    24a6:	fc 01       	movw	r30, r24
    24a8:	e3 5e       	subi	r30, 0xE3	; 227
    24aa:	fe 4f       	sbci	r31, 0xFE	; 254
    24ac:	31 83       	std	Z+1, r19	; 0x01
    24ae:	20 83       	st	Z, r18
    24b0:	23 2b       	or	r18, r19
    24b2:	69 f0       	breq	.+26     	; 0x24ce <f_mount+0x7a>
    24b4:	11 30       	cpi	r17, 0x01	; 1
    24b6:	69 f4       	brne	.+26     	; 0x24d2 <f_mount+0x7e>
    24b8:	40 e0       	ldi	r20, 0x00	; 0
    24ba:	be 01       	movw	r22, r28
    24bc:	6b 5f       	subi	r22, 0xFB	; 251
    24be:	7f 4f       	sbci	r23, 0xFF	; 255
    24c0:	ce 01       	movw	r24, r28
    24c2:	03 96       	adiw	r24, 0x03	; 3
    24c4:	0e 94 4d 06 	call	0xc9a	; 0xc9a <find_volume>
    24c8:	0e c0       	rjmp	.+28     	; 0x24e6 <f_mount+0x92>
    24ca:	8b e0       	ldi	r24, 0x0B	; 11
    24cc:	0c c0       	rjmp	.+24     	; 0x24e6 <f_mount+0x92>
    24ce:	80 e0       	ldi	r24, 0x00	; 0
    24d0:	0a c0       	rjmp	.+20     	; 0x24e6 <f_mount+0x92>
    24d2:	80 e0       	ldi	r24, 0x00	; 0
    24d4:	08 c0       	rjmp	.+16     	; 0x24e6 <f_mount+0x92>
    24d6:	88 0f       	add	r24, r24
    24d8:	99 1f       	adc	r25, r25
    24da:	fc 01       	movw	r30, r24
    24dc:	e3 5e       	subi	r30, 0xE3	; 227
    24de:	fe 4f       	sbci	r31, 0xFE	; 254
    24e0:	11 82       	std	Z+1, r1	; 0x01
    24e2:	10 82       	st	Z, r1
    24e4:	80 e0       	ldi	r24, 0x00	; 0
    24e6:	26 96       	adiw	r28, 0x06	; 6
    24e8:	0f b6       	in	r0, 0x3f	; 63
    24ea:	f8 94       	cli
    24ec:	de bf       	out	0x3e, r29	; 62
    24ee:	0f be       	out	0x3f, r0	; 63
    24f0:	cd bf       	out	0x3d, r28	; 61
    24f2:	df 91       	pop	r29
    24f4:	cf 91       	pop	r28
    24f6:	1f 91       	pop	r17
    24f8:	08 95       	ret

000024fa <f_open>:
    24fa:	3f 92       	push	r3
    24fc:	4f 92       	push	r4
    24fe:	5f 92       	push	r5
    2500:	6f 92       	push	r6
    2502:	7f 92       	push	r7
    2504:	8f 92       	push	r8
    2506:	9f 92       	push	r9
    2508:	af 92       	push	r10
    250a:	bf 92       	push	r11
    250c:	cf 92       	push	r12
    250e:	df 92       	push	r13
    2510:	ef 92       	push	r14
    2512:	ff 92       	push	r15
    2514:	0f 93       	push	r16
    2516:	1f 93       	push	r17
    2518:	cf 93       	push	r28
    251a:	df 93       	push	r29
    251c:	cd b7       	in	r28, 0x3d	; 61
    251e:	de b7       	in	r29, 0x3e	; 62
    2520:	a4 97       	sbiw	r28, 0x24	; 36
    2522:	0f b6       	in	r0, 0x3f	; 63
    2524:	f8 94       	cli
    2526:	de bf       	out	0x3e, r29	; 62
    2528:	0f be       	out	0x3f, r0	; 63
    252a:	cd bf       	out	0x3d, r28	; 61
    252c:	7c a3       	std	Y+36, r23	; 0x24
    252e:	6b a3       	std	Y+35, r22	; 0x23
    2530:	00 97       	sbiw	r24, 0x00	; 0
    2532:	09 f4       	brne	.+2      	; 0x2536 <f_open+0x3c>
    2534:	cd c0       	rjmp	.+410    	; 0x26d0 <f_open+0x1d6>
    2536:	d4 2e       	mov	r13, r20
    2538:	8c 01       	movw	r16, r24
    253a:	fc 01       	movw	r30, r24
    253c:	11 82       	std	Z+1, r1	; 0x01
    253e:	10 82       	st	Z, r1
    2540:	4e 71       	andi	r20, 0x1E	; 30
    2542:	be 01       	movw	r22, r28
    2544:	6d 5d       	subi	r22, 0xDD	; 221
    2546:	7f 4f       	sbci	r23, 0xFF	; 255
    2548:	ce 01       	movw	r24, r28
    254a:	01 96       	adiw	r24, 0x01	; 1
    254c:	0e 94 4d 06 	call	0xc9a	; 0xc9a <find_volume>
    2550:	81 11       	cpse	r24, r1
    2552:	e8 c0       	rjmp	.+464    	; 0x2724 <f_open+0x22a>
    2554:	fd 2d       	mov	r31, r13
    2556:	ff 71       	andi	r31, 0x1F	; 31
    2558:	3f 2e       	mov	r3, r31
    255a:	ce 01       	movw	r24, r28
    255c:	47 96       	adiw	r24, 0x17	; 23
    255e:	9e 8b       	std	Y+22, r25	; 0x16
    2560:	8d 8b       	std	Y+21, r24	; 0x15
    2562:	6b a1       	ldd	r22, Y+35	; 0x23
    2564:	7c a1       	ldd	r23, Y+36	; 0x24
    2566:	46 97       	sbiw	r24, 0x16	; 22
    2568:	2a dd       	rcall	.-1452   	; 0x1fbe <follow_path>
    256a:	eb 88       	ldd	r14, Y+19	; 0x13
    256c:	fc 88       	ldd	r15, Y+20	; 0x14
    256e:	81 11       	cpse	r24, r1
    2570:	b1 c0       	rjmp	.+354    	; 0x26d4 <f_open+0x1da>
    2572:	e1 14       	cp	r14, r1
    2574:	f1 04       	cpc	r15, r1
    2576:	09 f0       	breq	.+2      	; 0x257a <f_open+0x80>
    2578:	b7 c0       	rjmp	.+366    	; 0x26e8 <f_open+0x1ee>
    257a:	b1 c0       	rjmp	.+354    	; 0x26de <f_open+0x1e4>
    257c:	84 30       	cpi	r24, 0x04	; 4
    257e:	09 f0       	breq	.+2      	; 0x2582 <f_open+0x88>
    2580:	c3 c0       	rjmp	.+390    	; 0x2708 <f_open+0x20e>
    2582:	ce 01       	movw	r24, r28
    2584:	01 96       	adiw	r24, 0x01	; 1
    2586:	97 de       	rcall	.-722    	; 0x22b6 <dir_register>
    2588:	23 2d       	mov	r18, r3
    258a:	28 60       	ori	r18, 0x08	; 8
    258c:	32 2e       	mov	r3, r18
    258e:	eb 88       	ldd	r14, Y+19	; 0x13
    2590:	fc 88       	ldd	r15, Y+20	; 0x14
    2592:	88 23       	and	r24, r24
    2594:	41 f0       	breq	.+16     	; 0x25a6 <f_open+0xac>
    2596:	b0 c0       	rjmp	.+352    	; 0x26f8 <f_open+0x1fe>
    2598:	f7 01       	movw	r30, r14
    259a:	83 85       	ldd	r24, Z+11	; 0x0b
    259c:	81 71       	andi	r24, 0x11	; 17
    259e:	09 f0       	breq	.+2      	; 0x25a2 <f_open+0xa8>
    25a0:	be c0       	rjmp	.+380    	; 0x271e <f_open+0x224>
    25a2:	d2 fc       	sbrc	r13, 2
    25a4:	be c0       	rjmp	.+380    	; 0x2722 <f_open+0x228>
    25a6:	33 fe       	sbrs	r3, 3
    25a8:	ab c0       	rjmp	.+342    	; 0x2700 <f_open+0x206>
    25aa:	f7 01       	movw	r30, r14
    25ac:	16 86       	std	Z+14, r1	; 0x0e
    25ae:	17 86       	std	Z+15, r1	; 0x0f
    25b0:	91 e2       	ldi	r25, 0x21	; 33
    25b2:	90 8b       	std	Z+16, r25	; 0x10
    25b4:	86 e4       	ldi	r24, 0x46	; 70
    25b6:	81 8b       	std	Z+17, r24	; 0x11
    25b8:	16 8a       	std	Z+22, r1	; 0x16
    25ba:	17 8a       	std	Z+23, r1	; 0x17
    25bc:	90 8f       	std	Z+24, r25	; 0x18
    25be:	81 8f       	std	Z+25, r24	; 0x19
    25c0:	13 86       	std	Z+11, r1	; 0x0b
    25c2:	14 8e       	std	Z+28, r1	; 0x1c
    25c4:	15 8e       	std	Z+29, r1	; 0x1d
    25c6:	16 8e       	std	Z+30, r1	; 0x1e
    25c8:	17 8e       	std	Z+31, r1	; 0x1f
    25ca:	c9 80       	ldd	r12, Y+1	; 0x01
    25cc:	da 80       	ldd	r13, Y+2	; 0x02
    25ce:	b7 01       	movw	r22, r14
    25d0:	c6 01       	movw	r24, r12
    25d2:	0e 94 c3 04 	call	0x986	; 0x986 <ld_clust>
    25d6:	2b 01       	movw	r4, r22
    25d8:	3c 01       	movw	r6, r24
    25da:	f7 01       	movw	r30, r14
    25dc:	12 8e       	std	Z+26, r1	; 0x1a
    25de:	13 8e       	std	Z+27, r1	; 0x1b
    25e0:	14 8a       	std	Z+20, r1	; 0x14
    25e2:	15 8a       	std	Z+21, r1	; 0x15
    25e4:	81 e0       	ldi	r24, 0x01	; 1
    25e6:	f6 01       	movw	r30, r12
    25e8:	84 83       	std	Z+4, r24	; 0x04
    25ea:	41 14       	cp	r4, r1
    25ec:	51 04       	cpc	r5, r1
    25ee:	61 04       	cpc	r6, r1
    25f0:	71 04       	cpc	r7, r1
    25f2:	09 f4       	brne	.+2      	; 0x25f6 <f_open+0xfc>
    25f4:	85 c0       	rjmp	.+266    	; 0x2700 <f_open+0x206>
    25f6:	82 a4       	ldd	r8, Z+42	; 0x2a
    25f8:	93 a4       	ldd	r9, Z+43	; 0x2b
    25fa:	a4 a4       	ldd	r10, Z+44	; 0x2c
    25fc:	b5 a4       	ldd	r11, Z+45	; 0x2d
    25fe:	b3 01       	movw	r22, r6
    2600:	a2 01       	movw	r20, r4
    2602:	c6 01       	movw	r24, r12
    2604:	b0 de       	rcall	.-672    	; 0x2366 <remove_chain>
    2606:	81 11       	cpse	r24, r1
    2608:	77 c0       	rjmp	.+238    	; 0x26f8 <f_open+0x1fe>
    260a:	89 81       	ldd	r24, Y+1	; 0x01
    260c:	9a 81       	ldd	r25, Y+2	; 0x02
    260e:	f1 e0       	ldi	r31, 0x01	; 1
    2610:	4f 1a       	sub	r4, r31
    2612:	51 08       	sbc	r5, r1
    2614:	61 08       	sbc	r6, r1
    2616:	71 08       	sbc	r7, r1
    2618:	fc 01       	movw	r30, r24
    261a:	42 86       	std	Z+10, r4	; 0x0a
    261c:	53 86       	std	Z+11, r5	; 0x0b
    261e:	64 86       	std	Z+12, r6	; 0x0c
    2620:	75 86       	std	Z+13, r7	; 0x0d
    2622:	b5 01       	movw	r22, r10
    2624:	a4 01       	movw	r20, r8
    2626:	0e 94 85 05 	call	0xb0a	; 0xb0a <move_window>
    262a:	88 23       	and	r24, r24
    262c:	31 f0       	breq	.+12     	; 0x263a <f_open+0x140>
    262e:	7a c0       	rjmp	.+244    	; 0x2724 <f_open+0x22a>
    2630:	d1 fe       	sbrs	r13, 1
    2632:	66 c0       	rjmp	.+204    	; 0x2700 <f_open+0x206>
    2634:	80 fd       	sbrc	r24, 0
    2636:	5d c0       	rjmp	.+186    	; 0x26f2 <f_open+0x1f8>
    2638:	63 c0       	rjmp	.+198    	; 0x2700 <f_open+0x206>
    263a:	f3 2d       	mov	r31, r3
    263c:	f0 62       	ori	r31, 0x20	; 32
    263e:	3f 2e       	mov	r3, r31
    2640:	e9 81       	ldd	r30, Y+1	; 0x01
    2642:	fa 81       	ldd	r31, Y+2	; 0x02
    2644:	82 a5       	ldd	r24, Z+42	; 0x2a
    2646:	93 a5       	ldd	r25, Z+43	; 0x2b
    2648:	a4 a5       	ldd	r26, Z+44	; 0x2c
    264a:	b5 a5       	ldd	r27, Z+45	; 0x2d
    264c:	f8 01       	movw	r30, r16
    264e:	82 8f       	std	Z+26, r24	; 0x1a
    2650:	93 8f       	std	Z+27, r25	; 0x1b
    2652:	a4 8f       	std	Z+28, r26	; 0x1c
    2654:	b5 8f       	std	Z+29, r27	; 0x1d
    2656:	f7 8e       	std	Z+31, r15	; 0x1f
    2658:	e6 8e       	std	Z+30, r14	; 0x1e
    265a:	f8 01       	movw	r30, r16
    265c:	34 82       	std	Z+4, r3	; 0x04
    265e:	15 82       	std	Z+5, r1	; 0x05
    2660:	c9 80       	ldd	r12, Y+1	; 0x01
    2662:	da 80       	ldd	r13, Y+2	; 0x02
    2664:	b7 01       	movw	r22, r14
    2666:	c6 01       	movw	r24, r12
    2668:	0e 94 c3 04 	call	0x986	; 0x986 <ld_clust>
    266c:	f8 01       	movw	r30, r16
    266e:	66 87       	std	Z+14, r22	; 0x0e
    2670:	77 87       	std	Z+15, r23	; 0x0f
    2672:	80 8b       	std	Z+16, r24	; 0x10
    2674:	91 8b       	std	Z+17, r25	; 0x11
    2676:	f7 01       	movw	r30, r14
    2678:	27 8d       	ldd	r18, Z+31	; 0x1f
    267a:	86 8d       	ldd	r24, Z+30	; 0x1e
    267c:	90 e0       	ldi	r25, 0x00	; 0
    267e:	a0 e0       	ldi	r26, 0x00	; 0
    2680:	b0 e0       	ldi	r27, 0x00	; 0
    2682:	dc 01       	movw	r26, r24
    2684:	99 27       	eor	r25, r25
    2686:	88 27       	eor	r24, r24
    2688:	b2 2b       	or	r27, r18
    268a:	24 8d       	ldd	r18, Z+28	; 0x1c
    268c:	82 2b       	or	r24, r18
    268e:	45 8d       	ldd	r20, Z+29	; 0x1d
    2690:	50 e0       	ldi	r21, 0x00	; 0
    2692:	54 2f       	mov	r21, r20
    2694:	44 27       	eor	r20, r20
    2696:	60 e0       	ldi	r22, 0x00	; 0
    2698:	70 e0       	ldi	r23, 0x00	; 0
    269a:	84 2b       	or	r24, r20
    269c:	95 2b       	or	r25, r21
    269e:	a6 2b       	or	r26, r22
    26a0:	b7 2b       	or	r27, r23
    26a2:	f8 01       	movw	r30, r16
    26a4:	82 87       	std	Z+10, r24	; 0x0a
    26a6:	93 87       	std	Z+11, r25	; 0x0b
    26a8:	a4 87       	std	Z+12, r26	; 0x0c
    26aa:	b5 87       	std	Z+13, r27	; 0x0d
    26ac:	16 82       	std	Z+6, r1	; 0x06
    26ae:	17 82       	std	Z+7, r1	; 0x07
    26b0:	10 86       	std	Z+8, r1	; 0x08
    26b2:	11 86       	std	Z+9, r1	; 0x09
    26b4:	16 8a       	std	Z+22, r1	; 0x16
    26b6:	17 8a       	std	Z+23, r1	; 0x17
    26b8:	10 8e       	std	Z+24, r1	; 0x18
    26ba:	11 8e       	std	Z+25, r1	; 0x19
    26bc:	d1 82       	std	Z+1, r13	; 0x01
    26be:	c0 82       	st	Z, r12
    26c0:	f6 01       	movw	r30, r12
    26c2:	86 81       	ldd	r24, Z+6	; 0x06
    26c4:	97 81       	ldd	r25, Z+7	; 0x07
    26c6:	f8 01       	movw	r30, r16
    26c8:	93 83       	std	Z+3, r25	; 0x03
    26ca:	82 83       	std	Z+2, r24	; 0x02
    26cc:	80 e0       	ldi	r24, 0x00	; 0
    26ce:	2a c0       	rjmp	.+84     	; 0x2724 <f_open+0x22a>
    26d0:	89 e0       	ldi	r24, 0x09	; 9
    26d2:	28 c0       	rjmp	.+80     	; 0x2724 <f_open+0x22a>
    26d4:	4d 2d       	mov	r20, r13
    26d6:	4c 71       	andi	r20, 0x1C	; 28
    26d8:	09 f0       	breq	.+2      	; 0x26dc <f_open+0x1e2>
    26da:	50 cf       	rjmp	.-352    	; 0x257c <f_open+0x82>
    26dc:	0d c0       	rjmp	.+26     	; 0x26f8 <f_open+0x1fe>
    26de:	4d 2d       	mov	r20, r13
    26e0:	4c 71       	andi	r20, 0x1C	; 28
    26e2:	89 f4       	brne	.+34     	; 0x2706 <f_open+0x20c>
    26e4:	86 e0       	ldi	r24, 0x06	; 6
    26e6:	08 c0       	rjmp	.+16     	; 0x26f8 <f_open+0x1fe>
    26e8:	8d 2d       	mov	r24, r13
    26ea:	8c 71       	andi	r24, 0x1C	; 28
    26ec:	09 f0       	breq	.+2      	; 0x26f0 <f_open+0x1f6>
    26ee:	54 cf       	rjmp	.-344    	; 0x2598 <f_open+0x9e>
    26f0:	11 c0       	rjmp	.+34     	; 0x2714 <f_open+0x21a>
    26f2:	87 e0       	ldi	r24, 0x07	; 7
    26f4:	01 c0       	rjmp	.+2      	; 0x26f8 <f_open+0x1fe>
    26f6:	84 e0       	ldi	r24, 0x04	; 4
    26f8:	88 23       	and	r24, r24
    26fa:	09 f4       	brne	.+2      	; 0x26fe <f_open+0x204>
    26fc:	ae cf       	rjmp	.-164    	; 0x265a <f_open+0x160>
    26fe:	12 c0       	rjmp	.+36     	; 0x2724 <f_open+0x22a>
    2700:	33 fc       	sbrc	r3, 3
    2702:	9b cf       	rjmp	.-202    	; 0x263a <f_open+0x140>
    2704:	9d cf       	rjmp	.-198    	; 0x2640 <f_open+0x146>
    2706:	86 e0       	ldi	r24, 0x06	; 6
    2708:	f3 2d       	mov	r31, r3
    270a:	f8 60       	ori	r31, 0x08	; 8
    270c:	3f 2e       	mov	r3, r31
    270e:	eb 88       	ldd	r14, Y+19	; 0x13
    2710:	fc 88       	ldd	r15, Y+20	; 0x14
    2712:	f2 cf       	rjmp	.-28     	; 0x26f8 <f_open+0x1fe>
    2714:	f7 01       	movw	r30, r14
    2716:	83 85       	ldd	r24, Z+11	; 0x0b
    2718:	84 fd       	sbrc	r24, 4
    271a:	ed cf       	rjmp	.-38     	; 0x26f6 <f_open+0x1fc>
    271c:	89 cf       	rjmp	.-238    	; 0x2630 <f_open+0x136>
    271e:	87 e0       	ldi	r24, 0x07	; 7
    2720:	01 c0       	rjmp	.+2      	; 0x2724 <f_open+0x22a>
    2722:	88 e0       	ldi	r24, 0x08	; 8
    2724:	a4 96       	adiw	r28, 0x24	; 36
    2726:	0f b6       	in	r0, 0x3f	; 63
    2728:	f8 94       	cli
    272a:	de bf       	out	0x3e, r29	; 62
    272c:	0f be       	out	0x3f, r0	; 63
    272e:	cd bf       	out	0x3d, r28	; 61
    2730:	df 91       	pop	r29
    2732:	cf 91       	pop	r28
    2734:	1f 91       	pop	r17
    2736:	0f 91       	pop	r16
    2738:	ff 90       	pop	r15
    273a:	ef 90       	pop	r14
    273c:	df 90       	pop	r13
    273e:	cf 90       	pop	r12
    2740:	bf 90       	pop	r11
    2742:	af 90       	pop	r10
    2744:	9f 90       	pop	r9
    2746:	8f 90       	pop	r8
    2748:	7f 90       	pop	r7
    274a:	6f 90       	pop	r6
    274c:	5f 90       	pop	r5
    274e:	4f 90       	pop	r4
    2750:	3f 90       	pop	r3
    2752:	08 95       	ret

00002754 <f_sync>:
/*-----------------------------------------------------------------------*/

FRESULT f_sync (
	FIL* fp		/* Pointer to the file object */
)
{
    2754:	cf 93       	push	r28
    2756:	df 93       	push	r29
    2758:	ec 01       	movw	r28, r24
	FRESULT res;
	DWORD tm;
	BYTE *dir;


	res = validate(fp);					/* Check validity of the object */
    275a:	0e 94 29 06 	call	0xc52	; 0xc52 <validate>
	if (res == FR_OK) {
    275e:	81 11       	cpse	r24, r1
    2760:	38 c0       	rjmp	.+112    	; 0x27d2 <f_sync+0x7e>
		if (fp->flag & FA__WRITTEN) {	/* Is there any change to the file? */
    2762:	9c 81       	ldd	r25, Y+4	; 0x04
    2764:	95 ff       	sbrs	r25, 5
    2766:	35 c0       	rjmp	.+106    	; 0x27d2 <f_sync+0x7e>
					LEAVE_FF(fp->fs, FR_DISK_ERR);
				fp->flag &= ~FA__DIRTY;
			}
#endif
			/* Update the directory entry */
			res = move_window(fp->fs, fp->dir_sect);
    2768:	4a 8d       	ldd	r20, Y+26	; 0x1a
    276a:	5b 8d       	ldd	r21, Y+27	; 0x1b
    276c:	6c 8d       	ldd	r22, Y+28	; 0x1c
    276e:	7d 8d       	ldd	r23, Y+29	; 0x1d
    2770:	88 81       	ld	r24, Y
    2772:	99 81       	ldd	r25, Y+1	; 0x01
    2774:	0e 94 85 05 	call	0xb0a	; 0xb0a <move_window>
			if (res == FR_OK) {
    2778:	81 11       	cpse	r24, r1
    277a:	2b c0       	rjmp	.+86     	; 0x27d2 <f_sync+0x7e>
				dir = fp->dir_ptr;
    277c:	ee 8d       	ldd	r30, Y+30	; 0x1e
    277e:	ff 8d       	ldd	r31, Y+31	; 0x1f
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
    2780:	83 85       	ldd	r24, Z+11	; 0x0b
    2782:	80 62       	ori	r24, 0x20	; 32
    2784:	83 87       	std	Z+11, r24	; 0x0b
				ST_DWORD(dir + DIR_FileSize, fp->fsize);	/* Update file size */
    2786:	8a 85       	ldd	r24, Y+10	; 0x0a
    2788:	84 8f       	std	Z+28, r24	; 0x1c
    278a:	8b 85       	ldd	r24, Y+11	; 0x0b
    278c:	85 8f       	std	Z+29, r24	; 0x1d
    278e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2790:	86 8f       	std	Z+30, r24	; 0x1e
    2792:	8d 85       	ldd	r24, Y+13	; 0x0d
    2794:	87 8f       	std	Z+31, r24	; 0x1f
				st_clust(dir, fp->sclust);					/* Update start cluster */
    2796:	8e 85       	ldd	r24, Y+14	; 0x0e
    2798:	9f 85       	ldd	r25, Y+15	; 0x0f
    279a:	a8 89       	ldd	r26, Y+16	; 0x10
    279c:	b9 89       	ldd	r27, Y+17	; 0x11
void st_clust (
	BYTE* dir,	/* Pointer to the SFN entry */
	DWORD cl	/* Value to be set */
)
{
	ST_WORD(dir + DIR_FstClusLO, cl);
    279e:	82 8f       	std	Z+26, r24	; 0x1a
    27a0:	93 8f       	std	Z+27, r25	; 0x1b
	ST_WORD(dir + DIR_FstClusHI, cl >> 16);
    27a2:	cd 01       	movw	r24, r26
    27a4:	aa 27       	eor	r26, r26
    27a6:	bb 27       	eor	r27, r27
    27a8:	84 8b       	std	Z+20, r24	; 0x14
    27aa:	95 8b       	std	Z+21, r25	; 0x15
				dir = fp->dir_ptr;
				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
				ST_DWORD(dir + DIR_FileSize, fp->fsize);	/* Update file size */
				st_clust(dir, fp->sclust);					/* Update start cluster */
				tm = GET_FATTIME();							/* Update modified time */
				ST_DWORD(dir + DIR_WrtTime, tm);
    27ac:	16 8a       	std	Z+22, r1	; 0x16
    27ae:	17 8a       	std	Z+23, r1	; 0x17
    27b0:	81 e2       	ldi	r24, 0x21	; 33
    27b2:	80 8f       	std	Z+24, r24	; 0x18
    27b4:	86 e4       	ldi	r24, 0x46	; 70
    27b6:	81 8f       	std	Z+25, r24	; 0x19
				ST_WORD(dir + DIR_LstAccDate, 0);
    27b8:	12 8a       	std	Z+18, r1	; 0x12
    27ba:	13 8a       	std	Z+19, r1	; 0x13
				fp->flag &= ~FA__WRITTEN;
    27bc:	8c 81       	ldd	r24, Y+4	; 0x04
    27be:	8f 7d       	andi	r24, 0xDF	; 223
    27c0:	8c 83       	std	Y+4, r24	; 0x04
				fp->fs->wflag = 1;
    27c2:	e8 81       	ld	r30, Y
    27c4:	f9 81       	ldd	r31, Y+1	; 0x01
    27c6:	81 e0       	ldi	r24, 0x01	; 1
    27c8:	84 83       	std	Z+4, r24	; 0x04
				res = sync_fs(fp->fs);
    27ca:	88 81       	ld	r24, Y
    27cc:	99 81       	ldd	r25, Y+1	; 0x01
    27ce:	0e 94 0c 0a 	call	0x1418	; 0x1418 <sync_fs>
			}
		}
	}

	LEAVE_FF(fp->fs, res);
}
    27d2:	df 91       	pop	r29
    27d4:	cf 91       	pop	r28
    27d6:	08 95       	ret

000027d8 <f_close>:
/*-----------------------------------------------------------------------*/

FRESULT f_close (
	FIL *fp		/* Pointer to the file object to be closed */
)
{
    27d8:	cf 93       	push	r28
    27da:	df 93       	push	r29
    27dc:	ec 01       	movw	r28, r24
	FRESULT res;


#if !_FS_READONLY
	res = f_sync(fp);					/* Flush cached data */
    27de:	ba df       	rcall	.-140    	; 0x2754 <f_sync>
	if (res == FR_OK)
    27e0:	81 11       	cpse	r24, r1
    27e2:	07 c0       	rjmp	.+14     	; 0x27f2 <f_close+0x1a>
#endif
	{
		res = validate(fp);				/* Lock volume */
    27e4:	ce 01       	movw	r24, r28
    27e6:	0e 94 29 06 	call	0xc52	; 0xc52 <validate>
		if (res == FR_OK) {
    27ea:	81 11       	cpse	r24, r1
    27ec:	02 c0       	rjmp	.+4      	; 0x27f2 <f_close+0x1a>
#endif
#if _FS_LOCK
			res = dec_lock(fp->lockid);	/* Decrement file open counter */
			if (res == FR_OK)
#endif
				fp->fs = 0;				/* Invalidate file object */
    27ee:	19 82       	std	Y+1, r1	; 0x01
    27f0:	18 82       	st	Y, r1
			unlock_fs(fs, FR_OK);		/* Unlock volume */
#endif
		}
	}
	return res;
}
    27f2:	df 91       	pop	r29
    27f4:	cf 91       	pop	r28
    27f6:	08 95       	ret

000027f8 <main>:
#include "ff.h"	
};


int main(void)
{
    27f8:	cf 93       	push	r28
    27fa:	df 93       	push	r29
    27fc:	cd b7       	in	r28, 0x3d	; 61
    27fe:	de b7       	in	r29, 0x3e	; 62
    2800:	a0 97       	sbiw	r28, 0x20	; 32
    2802:	0f b6       	in	r0, 0x3f	; 63
    2804:	f8 94       	cli
    2806:	de bf       	out	0x3e, r29	; 62
    2808:	0f be       	out	0x3f, r0	; 63
    280a:	cd bf       	out	0x3d, r28	; 61
	static FATFS FATFS_Obj;
	
	disk_initialize(0);
    280c:	80 e0       	ldi	r24, 0x00	; 0
    280e:	0e 94 8d 01 	call	0x31a	; 0x31a <disk_initialize>
	f_mount(&FATFS_Obj,"",0);
    2812:	40 e0       	ldi	r20, 0x00	; 0
    2814:	67 e1       	ldi	r22, 0x17	; 23
    2816:	71 e0       	ldi	r23, 0x01	; 1
    2818:	8f e1       	ldi	r24, 0x1F	; 31
    281a:	91 e0       	ldi	r25, 0x01	; 1
    281c:	1b de       	rcall	.-970    	; 0x2454 <f_mount>
	
	FIL fil_obj;
	
	f_open(&fil_obj, "foo.txt", FA_WRITE);
    281e:	42 e0       	ldi	r20, 0x02	; 2
    2820:	60 e1       	ldi	r22, 0x10	; 16
    2822:	71 e0       	ldi	r23, 0x01	; 1
    2824:	ce 01       	movw	r24, r28
    2826:	01 96       	adiw	r24, 0x01	; 1
    2828:	68 de       	rcall	.-816    	; 0x24fa <f_open>
	
	//f_printf(&fil_obj, "bar %d", variableName);
	
	f_close(&fil_obj);
    282a:	ce 01       	movw	r24, r28
    282c:	01 96       	adiw	r24, 0x01	; 1
    282e:	d4 df       	rcall	.-88     	; 0x27d8 <f_close>
	
    while (1) 
    {
    }
    2830:	ff cf       	rjmp	.-2      	; 0x2830 <main+0x38>

00002832 <__udivmodsi4>:
    2832:	a1 e2       	ldi	r26, 0x21	; 33
    2834:	1a 2e       	mov	r1, r26
    2836:	aa 1b       	sub	r26, r26
    2838:	bb 1b       	sub	r27, r27
    283a:	fd 01       	movw	r30, r26
    283c:	0d c0       	rjmp	.+26     	; 0x2858 <__udivmodsi4_ep>

0000283e <__udivmodsi4_loop>:
    283e:	aa 1f       	adc	r26, r26
    2840:	bb 1f       	adc	r27, r27
    2842:	ee 1f       	adc	r30, r30
    2844:	ff 1f       	adc	r31, r31
    2846:	a2 17       	cp	r26, r18
    2848:	b3 07       	cpc	r27, r19
    284a:	e4 07       	cpc	r30, r20
    284c:	f5 07       	cpc	r31, r21
    284e:	20 f0       	brcs	.+8      	; 0x2858 <__udivmodsi4_ep>
    2850:	a2 1b       	sub	r26, r18
    2852:	b3 0b       	sbc	r27, r19
    2854:	e4 0b       	sbc	r30, r20
    2856:	f5 0b       	sbc	r31, r21

00002858 <__udivmodsi4_ep>:
    2858:	66 1f       	adc	r22, r22
    285a:	77 1f       	adc	r23, r23
    285c:	88 1f       	adc	r24, r24
    285e:	99 1f       	adc	r25, r25
    2860:	1a 94       	dec	r1
    2862:	69 f7       	brne	.-38     	; 0x283e <__udivmodsi4_loop>
    2864:	60 95       	com	r22
    2866:	70 95       	com	r23
    2868:	80 95       	com	r24
    286a:	90 95       	com	r25
    286c:	9b 01       	movw	r18, r22
    286e:	ac 01       	movw	r20, r24
    2870:	bd 01       	movw	r22, r26
    2872:	cf 01       	movw	r24, r30
    2874:	08 95       	ret

00002876 <__tablejump2__>:
    2876:	ee 0f       	add	r30, r30
    2878:	ff 1f       	adc	r31, r31
    287a:	00 24       	eor	r0, r0
    287c:	00 1c       	adc	r0, r0
    287e:	0b be       	out	0x3b, r0	; 59
    2880:	07 90       	elpm	r0, Z+
    2882:	f6 91       	elpm	r31, Z
    2884:	e0 2d       	mov	r30, r0
    2886:	09 94       	ijmp

00002888 <__muluhisi3>:
    2888:	09 d0       	rcall	.+18     	; 0x289c <__umulhisi3>
    288a:	a5 9f       	mul	r26, r21
    288c:	90 0d       	add	r25, r0
    288e:	b4 9f       	mul	r27, r20
    2890:	90 0d       	add	r25, r0
    2892:	a4 9f       	mul	r26, r20
    2894:	80 0d       	add	r24, r0
    2896:	91 1d       	adc	r25, r1
    2898:	11 24       	eor	r1, r1
    289a:	08 95       	ret

0000289c <__umulhisi3>:
    289c:	a2 9f       	mul	r26, r18
    289e:	b0 01       	movw	r22, r0
    28a0:	b3 9f       	mul	r27, r19
    28a2:	c0 01       	movw	r24, r0
    28a4:	a3 9f       	mul	r26, r19
    28a6:	70 0d       	add	r23, r0
    28a8:	81 1d       	adc	r24, r1
    28aa:	11 24       	eor	r1, r1
    28ac:	91 1d       	adc	r25, r1
    28ae:	b2 9f       	mul	r27, r18
    28b0:	70 0d       	add	r23, r0
    28b2:	81 1d       	adc	r24, r1
    28b4:	11 24       	eor	r1, r1
    28b6:	91 1d       	adc	r25, r1
    28b8:	08 95       	ret

000028ba <vfprintf>:
    28ba:	2f 92       	push	r2
    28bc:	3f 92       	push	r3
    28be:	4f 92       	push	r4
    28c0:	5f 92       	push	r5
    28c2:	6f 92       	push	r6
    28c4:	7f 92       	push	r7
    28c6:	8f 92       	push	r8
    28c8:	9f 92       	push	r9
    28ca:	af 92       	push	r10
    28cc:	bf 92       	push	r11
    28ce:	cf 92       	push	r12
    28d0:	df 92       	push	r13
    28d2:	ef 92       	push	r14
    28d4:	ff 92       	push	r15
    28d6:	0f 93       	push	r16
    28d8:	1f 93       	push	r17
    28da:	cf 93       	push	r28
    28dc:	df 93       	push	r29
    28de:	cd b7       	in	r28, 0x3d	; 61
    28e0:	de b7       	in	r29, 0x3e	; 62
    28e2:	2c 97       	sbiw	r28, 0x0c	; 12
    28e4:	0f b6       	in	r0, 0x3f	; 63
    28e6:	f8 94       	cli
    28e8:	de bf       	out	0x3e, r29	; 62
    28ea:	0f be       	out	0x3f, r0	; 63
    28ec:	cd bf       	out	0x3d, r28	; 61
    28ee:	7c 01       	movw	r14, r24
    28f0:	6b 01       	movw	r12, r22
    28f2:	8a 01       	movw	r16, r20
    28f4:	fc 01       	movw	r30, r24
    28f6:	17 82       	std	Z+7, r1	; 0x07
    28f8:	16 82       	std	Z+6, r1	; 0x06
    28fa:	83 81       	ldd	r24, Z+3	; 0x03
    28fc:	81 ff       	sbrs	r24, 1
    28fe:	b0 c1       	rjmp	.+864    	; 0x2c60 <vfprintf+0x3a6>
    2900:	ce 01       	movw	r24, r28
    2902:	01 96       	adiw	r24, 0x01	; 1
    2904:	4c 01       	movw	r8, r24
    2906:	f7 01       	movw	r30, r14
    2908:	93 81       	ldd	r25, Z+3	; 0x03
    290a:	f6 01       	movw	r30, r12
    290c:	93 fd       	sbrc	r25, 3
    290e:	85 91       	lpm	r24, Z+
    2910:	93 ff       	sbrs	r25, 3
    2912:	81 91       	ld	r24, Z+
    2914:	6f 01       	movw	r12, r30
    2916:	88 23       	and	r24, r24
    2918:	09 f4       	brne	.+2      	; 0x291c <vfprintf+0x62>
    291a:	9e c1       	rjmp	.+828    	; 0x2c58 <vfprintf+0x39e>
    291c:	85 32       	cpi	r24, 0x25	; 37
    291e:	39 f4       	brne	.+14     	; 0x292e <vfprintf+0x74>
    2920:	93 fd       	sbrc	r25, 3
    2922:	85 91       	lpm	r24, Z+
    2924:	93 ff       	sbrs	r25, 3
    2926:	81 91       	ld	r24, Z+
    2928:	6f 01       	movw	r12, r30
    292a:	85 32       	cpi	r24, 0x25	; 37
    292c:	21 f4       	brne	.+8      	; 0x2936 <vfprintf+0x7c>
    292e:	b7 01       	movw	r22, r14
    2930:	90 e0       	ldi	r25, 0x00	; 0
    2932:	c7 d1       	rcall	.+910    	; 0x2cc2 <fputc>
    2934:	e8 cf       	rjmp	.-48     	; 0x2906 <vfprintf+0x4c>
    2936:	51 2c       	mov	r5, r1
    2938:	31 2c       	mov	r3, r1
    293a:	20 e0       	ldi	r18, 0x00	; 0
    293c:	20 32       	cpi	r18, 0x20	; 32
    293e:	a0 f4       	brcc	.+40     	; 0x2968 <vfprintf+0xae>
    2940:	8b 32       	cpi	r24, 0x2B	; 43
    2942:	69 f0       	breq	.+26     	; 0x295e <vfprintf+0xa4>
    2944:	30 f4       	brcc	.+12     	; 0x2952 <vfprintf+0x98>
    2946:	80 32       	cpi	r24, 0x20	; 32
    2948:	59 f0       	breq	.+22     	; 0x2960 <vfprintf+0xa6>
    294a:	83 32       	cpi	r24, 0x23	; 35
    294c:	69 f4       	brne	.+26     	; 0x2968 <vfprintf+0xae>
    294e:	20 61       	ori	r18, 0x10	; 16
    2950:	2c c0       	rjmp	.+88     	; 0x29aa <vfprintf+0xf0>
    2952:	8d 32       	cpi	r24, 0x2D	; 45
    2954:	39 f0       	breq	.+14     	; 0x2964 <vfprintf+0xaa>
    2956:	80 33       	cpi	r24, 0x30	; 48
    2958:	39 f4       	brne	.+14     	; 0x2968 <vfprintf+0xae>
    295a:	21 60       	ori	r18, 0x01	; 1
    295c:	26 c0       	rjmp	.+76     	; 0x29aa <vfprintf+0xf0>
    295e:	22 60       	ori	r18, 0x02	; 2
    2960:	24 60       	ori	r18, 0x04	; 4
    2962:	23 c0       	rjmp	.+70     	; 0x29aa <vfprintf+0xf0>
    2964:	28 60       	ori	r18, 0x08	; 8
    2966:	21 c0       	rjmp	.+66     	; 0x29aa <vfprintf+0xf0>
    2968:	27 fd       	sbrc	r18, 7
    296a:	27 c0       	rjmp	.+78     	; 0x29ba <vfprintf+0x100>
    296c:	30 ed       	ldi	r19, 0xD0	; 208
    296e:	38 0f       	add	r19, r24
    2970:	3a 30       	cpi	r19, 0x0A	; 10
    2972:	78 f4       	brcc	.+30     	; 0x2992 <vfprintf+0xd8>
    2974:	26 ff       	sbrs	r18, 6
    2976:	06 c0       	rjmp	.+12     	; 0x2984 <vfprintf+0xca>
    2978:	fa e0       	ldi	r31, 0x0A	; 10
    297a:	5f 9e       	mul	r5, r31
    297c:	30 0d       	add	r19, r0
    297e:	11 24       	eor	r1, r1
    2980:	53 2e       	mov	r5, r19
    2982:	13 c0       	rjmp	.+38     	; 0x29aa <vfprintf+0xf0>
    2984:	8a e0       	ldi	r24, 0x0A	; 10
    2986:	38 9e       	mul	r3, r24
    2988:	30 0d       	add	r19, r0
    298a:	11 24       	eor	r1, r1
    298c:	33 2e       	mov	r3, r19
    298e:	20 62       	ori	r18, 0x20	; 32
    2990:	0c c0       	rjmp	.+24     	; 0x29aa <vfprintf+0xf0>
    2992:	8e 32       	cpi	r24, 0x2E	; 46
    2994:	21 f4       	brne	.+8      	; 0x299e <vfprintf+0xe4>
    2996:	26 fd       	sbrc	r18, 6
    2998:	5f c1       	rjmp	.+702    	; 0x2c58 <vfprintf+0x39e>
    299a:	20 64       	ori	r18, 0x40	; 64
    299c:	06 c0       	rjmp	.+12     	; 0x29aa <vfprintf+0xf0>
    299e:	8c 36       	cpi	r24, 0x6C	; 108
    29a0:	11 f4       	brne	.+4      	; 0x29a6 <vfprintf+0xec>
    29a2:	20 68       	ori	r18, 0x80	; 128
    29a4:	02 c0       	rjmp	.+4      	; 0x29aa <vfprintf+0xf0>
    29a6:	88 36       	cpi	r24, 0x68	; 104
    29a8:	41 f4       	brne	.+16     	; 0x29ba <vfprintf+0x100>
    29aa:	f6 01       	movw	r30, r12
    29ac:	93 fd       	sbrc	r25, 3
    29ae:	85 91       	lpm	r24, Z+
    29b0:	93 ff       	sbrs	r25, 3
    29b2:	81 91       	ld	r24, Z+
    29b4:	6f 01       	movw	r12, r30
    29b6:	81 11       	cpse	r24, r1
    29b8:	c1 cf       	rjmp	.-126    	; 0x293c <vfprintf+0x82>
    29ba:	98 2f       	mov	r25, r24
    29bc:	9f 7d       	andi	r25, 0xDF	; 223
    29be:	95 54       	subi	r25, 0x45	; 69
    29c0:	93 30       	cpi	r25, 0x03	; 3
    29c2:	28 f4       	brcc	.+10     	; 0x29ce <vfprintf+0x114>
    29c4:	0c 5f       	subi	r16, 0xFC	; 252
    29c6:	1f 4f       	sbci	r17, 0xFF	; 255
    29c8:	ff e3       	ldi	r31, 0x3F	; 63
    29ca:	f9 83       	std	Y+1, r31	; 0x01
    29cc:	0d c0       	rjmp	.+26     	; 0x29e8 <vfprintf+0x12e>
    29ce:	83 36       	cpi	r24, 0x63	; 99
    29d0:	31 f0       	breq	.+12     	; 0x29de <vfprintf+0x124>
    29d2:	83 37       	cpi	r24, 0x73	; 115
    29d4:	71 f0       	breq	.+28     	; 0x29f2 <vfprintf+0x138>
    29d6:	83 35       	cpi	r24, 0x53	; 83
    29d8:	09 f0       	breq	.+2      	; 0x29dc <vfprintf+0x122>
    29da:	57 c0       	rjmp	.+174    	; 0x2a8a <vfprintf+0x1d0>
    29dc:	21 c0       	rjmp	.+66     	; 0x2a20 <vfprintf+0x166>
    29de:	f8 01       	movw	r30, r16
    29e0:	80 81       	ld	r24, Z
    29e2:	89 83       	std	Y+1, r24	; 0x01
    29e4:	0e 5f       	subi	r16, 0xFE	; 254
    29e6:	1f 4f       	sbci	r17, 0xFF	; 255
    29e8:	44 24       	eor	r4, r4
    29ea:	43 94       	inc	r4
    29ec:	51 2c       	mov	r5, r1
    29ee:	54 01       	movw	r10, r8
    29f0:	14 c0       	rjmp	.+40     	; 0x2a1a <vfprintf+0x160>
    29f2:	38 01       	movw	r6, r16
    29f4:	f2 e0       	ldi	r31, 0x02	; 2
    29f6:	6f 0e       	add	r6, r31
    29f8:	71 1c       	adc	r7, r1
    29fa:	f8 01       	movw	r30, r16
    29fc:	a0 80       	ld	r10, Z
    29fe:	b1 80       	ldd	r11, Z+1	; 0x01
    2a00:	26 ff       	sbrs	r18, 6
    2a02:	03 c0       	rjmp	.+6      	; 0x2a0a <vfprintf+0x150>
    2a04:	65 2d       	mov	r22, r5
    2a06:	70 e0       	ldi	r23, 0x00	; 0
    2a08:	02 c0       	rjmp	.+4      	; 0x2a0e <vfprintf+0x154>
    2a0a:	6f ef       	ldi	r22, 0xFF	; 255
    2a0c:	7f ef       	ldi	r23, 0xFF	; 255
    2a0e:	c5 01       	movw	r24, r10
    2a10:	2c 87       	std	Y+12, r18	; 0x0c
    2a12:	4c d1       	rcall	.+664    	; 0x2cac <strnlen>
    2a14:	2c 01       	movw	r4, r24
    2a16:	83 01       	movw	r16, r6
    2a18:	2c 85       	ldd	r18, Y+12	; 0x0c
    2a1a:	2f 77       	andi	r18, 0x7F	; 127
    2a1c:	22 2e       	mov	r2, r18
    2a1e:	16 c0       	rjmp	.+44     	; 0x2a4c <vfprintf+0x192>
    2a20:	38 01       	movw	r6, r16
    2a22:	f2 e0       	ldi	r31, 0x02	; 2
    2a24:	6f 0e       	add	r6, r31
    2a26:	71 1c       	adc	r7, r1
    2a28:	f8 01       	movw	r30, r16
    2a2a:	a0 80       	ld	r10, Z
    2a2c:	b1 80       	ldd	r11, Z+1	; 0x01
    2a2e:	26 ff       	sbrs	r18, 6
    2a30:	03 c0       	rjmp	.+6      	; 0x2a38 <vfprintf+0x17e>
    2a32:	65 2d       	mov	r22, r5
    2a34:	70 e0       	ldi	r23, 0x00	; 0
    2a36:	02 c0       	rjmp	.+4      	; 0x2a3c <vfprintf+0x182>
    2a38:	6f ef       	ldi	r22, 0xFF	; 255
    2a3a:	7f ef       	ldi	r23, 0xFF	; 255
    2a3c:	c5 01       	movw	r24, r10
    2a3e:	2c 87       	std	Y+12, r18	; 0x0c
    2a40:	2a d1       	rcall	.+596    	; 0x2c96 <strnlen_P>
    2a42:	2c 01       	movw	r4, r24
    2a44:	2c 85       	ldd	r18, Y+12	; 0x0c
    2a46:	20 68       	ori	r18, 0x80	; 128
    2a48:	22 2e       	mov	r2, r18
    2a4a:	83 01       	movw	r16, r6
    2a4c:	23 fc       	sbrc	r2, 3
    2a4e:	19 c0       	rjmp	.+50     	; 0x2a82 <vfprintf+0x1c8>
    2a50:	83 2d       	mov	r24, r3
    2a52:	90 e0       	ldi	r25, 0x00	; 0
    2a54:	48 16       	cp	r4, r24
    2a56:	59 06       	cpc	r5, r25
    2a58:	a0 f4       	brcc	.+40     	; 0x2a82 <vfprintf+0x1c8>
    2a5a:	b7 01       	movw	r22, r14
    2a5c:	80 e2       	ldi	r24, 0x20	; 32
    2a5e:	90 e0       	ldi	r25, 0x00	; 0
    2a60:	30 d1       	rcall	.+608    	; 0x2cc2 <fputc>
    2a62:	3a 94       	dec	r3
    2a64:	f5 cf       	rjmp	.-22     	; 0x2a50 <vfprintf+0x196>
    2a66:	f5 01       	movw	r30, r10
    2a68:	27 fc       	sbrc	r2, 7
    2a6a:	85 91       	lpm	r24, Z+
    2a6c:	27 fe       	sbrs	r2, 7
    2a6e:	81 91       	ld	r24, Z+
    2a70:	5f 01       	movw	r10, r30
    2a72:	b7 01       	movw	r22, r14
    2a74:	90 e0       	ldi	r25, 0x00	; 0
    2a76:	25 d1       	rcall	.+586    	; 0x2cc2 <fputc>
    2a78:	31 10       	cpse	r3, r1
    2a7a:	3a 94       	dec	r3
    2a7c:	f1 e0       	ldi	r31, 0x01	; 1
    2a7e:	4f 1a       	sub	r4, r31
    2a80:	51 08       	sbc	r5, r1
    2a82:	41 14       	cp	r4, r1
    2a84:	51 04       	cpc	r5, r1
    2a86:	79 f7       	brne	.-34     	; 0x2a66 <vfprintf+0x1ac>
    2a88:	de c0       	rjmp	.+444    	; 0x2c46 <vfprintf+0x38c>
    2a8a:	84 36       	cpi	r24, 0x64	; 100
    2a8c:	11 f0       	breq	.+4      	; 0x2a92 <vfprintf+0x1d8>
    2a8e:	89 36       	cpi	r24, 0x69	; 105
    2a90:	31 f5       	brne	.+76     	; 0x2ade <vfprintf+0x224>
    2a92:	f8 01       	movw	r30, r16
    2a94:	27 ff       	sbrs	r18, 7
    2a96:	07 c0       	rjmp	.+14     	; 0x2aa6 <vfprintf+0x1ec>
    2a98:	60 81       	ld	r22, Z
    2a9a:	71 81       	ldd	r23, Z+1	; 0x01
    2a9c:	82 81       	ldd	r24, Z+2	; 0x02
    2a9e:	93 81       	ldd	r25, Z+3	; 0x03
    2aa0:	0c 5f       	subi	r16, 0xFC	; 252
    2aa2:	1f 4f       	sbci	r17, 0xFF	; 255
    2aa4:	08 c0       	rjmp	.+16     	; 0x2ab6 <vfprintf+0x1fc>
    2aa6:	60 81       	ld	r22, Z
    2aa8:	71 81       	ldd	r23, Z+1	; 0x01
    2aaa:	07 2e       	mov	r0, r23
    2aac:	00 0c       	add	r0, r0
    2aae:	88 0b       	sbc	r24, r24
    2ab0:	99 0b       	sbc	r25, r25
    2ab2:	0e 5f       	subi	r16, 0xFE	; 254
    2ab4:	1f 4f       	sbci	r17, 0xFF	; 255
    2ab6:	2f 76       	andi	r18, 0x6F	; 111
    2ab8:	72 2e       	mov	r7, r18
    2aba:	97 ff       	sbrs	r25, 7
    2abc:	09 c0       	rjmp	.+18     	; 0x2ad0 <vfprintf+0x216>
    2abe:	90 95       	com	r25
    2ac0:	80 95       	com	r24
    2ac2:	70 95       	com	r23
    2ac4:	61 95       	neg	r22
    2ac6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ac8:	8f 4f       	sbci	r24, 0xFF	; 255
    2aca:	9f 4f       	sbci	r25, 0xFF	; 255
    2acc:	20 68       	ori	r18, 0x80	; 128
    2ace:	72 2e       	mov	r7, r18
    2ad0:	2a e0       	ldi	r18, 0x0A	; 10
    2ad2:	30 e0       	ldi	r19, 0x00	; 0
    2ad4:	a4 01       	movw	r20, r8
    2ad6:	2d d1       	rcall	.+602    	; 0x2d32 <__ultoa_invert>
    2ad8:	a8 2e       	mov	r10, r24
    2ada:	a8 18       	sub	r10, r8
    2adc:	43 c0       	rjmp	.+134    	; 0x2b64 <vfprintf+0x2aa>
    2ade:	85 37       	cpi	r24, 0x75	; 117
    2ae0:	29 f4       	brne	.+10     	; 0x2aec <vfprintf+0x232>
    2ae2:	2f 7e       	andi	r18, 0xEF	; 239
    2ae4:	b2 2e       	mov	r11, r18
    2ae6:	2a e0       	ldi	r18, 0x0A	; 10
    2ae8:	30 e0       	ldi	r19, 0x00	; 0
    2aea:	25 c0       	rjmp	.+74     	; 0x2b36 <vfprintf+0x27c>
    2aec:	f2 2f       	mov	r31, r18
    2aee:	f9 7f       	andi	r31, 0xF9	; 249
    2af0:	bf 2e       	mov	r11, r31
    2af2:	8f 36       	cpi	r24, 0x6F	; 111
    2af4:	c1 f0       	breq	.+48     	; 0x2b26 <vfprintf+0x26c>
    2af6:	18 f4       	brcc	.+6      	; 0x2afe <vfprintf+0x244>
    2af8:	88 35       	cpi	r24, 0x58	; 88
    2afa:	79 f0       	breq	.+30     	; 0x2b1a <vfprintf+0x260>
    2afc:	ad c0       	rjmp	.+346    	; 0x2c58 <vfprintf+0x39e>
    2afe:	80 37       	cpi	r24, 0x70	; 112
    2b00:	19 f0       	breq	.+6      	; 0x2b08 <vfprintf+0x24e>
    2b02:	88 37       	cpi	r24, 0x78	; 120
    2b04:	21 f0       	breq	.+8      	; 0x2b0e <vfprintf+0x254>
    2b06:	a8 c0       	rjmp	.+336    	; 0x2c58 <vfprintf+0x39e>
    2b08:	2f 2f       	mov	r18, r31
    2b0a:	20 61       	ori	r18, 0x10	; 16
    2b0c:	b2 2e       	mov	r11, r18
    2b0e:	b4 fe       	sbrs	r11, 4
    2b10:	0d c0       	rjmp	.+26     	; 0x2b2c <vfprintf+0x272>
    2b12:	8b 2d       	mov	r24, r11
    2b14:	84 60       	ori	r24, 0x04	; 4
    2b16:	b8 2e       	mov	r11, r24
    2b18:	09 c0       	rjmp	.+18     	; 0x2b2c <vfprintf+0x272>
    2b1a:	24 ff       	sbrs	r18, 4
    2b1c:	0a c0       	rjmp	.+20     	; 0x2b32 <vfprintf+0x278>
    2b1e:	9f 2f       	mov	r25, r31
    2b20:	96 60       	ori	r25, 0x06	; 6
    2b22:	b9 2e       	mov	r11, r25
    2b24:	06 c0       	rjmp	.+12     	; 0x2b32 <vfprintf+0x278>
    2b26:	28 e0       	ldi	r18, 0x08	; 8
    2b28:	30 e0       	ldi	r19, 0x00	; 0
    2b2a:	05 c0       	rjmp	.+10     	; 0x2b36 <vfprintf+0x27c>
    2b2c:	20 e1       	ldi	r18, 0x10	; 16
    2b2e:	30 e0       	ldi	r19, 0x00	; 0
    2b30:	02 c0       	rjmp	.+4      	; 0x2b36 <vfprintf+0x27c>
    2b32:	20 e1       	ldi	r18, 0x10	; 16
    2b34:	32 e0       	ldi	r19, 0x02	; 2
    2b36:	f8 01       	movw	r30, r16
    2b38:	b7 fe       	sbrs	r11, 7
    2b3a:	07 c0       	rjmp	.+14     	; 0x2b4a <vfprintf+0x290>
    2b3c:	60 81       	ld	r22, Z
    2b3e:	71 81       	ldd	r23, Z+1	; 0x01
    2b40:	82 81       	ldd	r24, Z+2	; 0x02
    2b42:	93 81       	ldd	r25, Z+3	; 0x03
    2b44:	0c 5f       	subi	r16, 0xFC	; 252
    2b46:	1f 4f       	sbci	r17, 0xFF	; 255
    2b48:	06 c0       	rjmp	.+12     	; 0x2b56 <vfprintf+0x29c>
    2b4a:	60 81       	ld	r22, Z
    2b4c:	71 81       	ldd	r23, Z+1	; 0x01
    2b4e:	80 e0       	ldi	r24, 0x00	; 0
    2b50:	90 e0       	ldi	r25, 0x00	; 0
    2b52:	0e 5f       	subi	r16, 0xFE	; 254
    2b54:	1f 4f       	sbci	r17, 0xFF	; 255
    2b56:	a4 01       	movw	r20, r8
    2b58:	ec d0       	rcall	.+472    	; 0x2d32 <__ultoa_invert>
    2b5a:	a8 2e       	mov	r10, r24
    2b5c:	a8 18       	sub	r10, r8
    2b5e:	fb 2d       	mov	r31, r11
    2b60:	ff 77       	andi	r31, 0x7F	; 127
    2b62:	7f 2e       	mov	r7, r31
    2b64:	76 fe       	sbrs	r7, 6
    2b66:	0b c0       	rjmp	.+22     	; 0x2b7e <vfprintf+0x2c4>
    2b68:	37 2d       	mov	r19, r7
    2b6a:	3e 7f       	andi	r19, 0xFE	; 254
    2b6c:	a5 14       	cp	r10, r5
    2b6e:	50 f4       	brcc	.+20     	; 0x2b84 <vfprintf+0x2ca>
    2b70:	74 fe       	sbrs	r7, 4
    2b72:	0a c0       	rjmp	.+20     	; 0x2b88 <vfprintf+0x2ce>
    2b74:	72 fc       	sbrc	r7, 2
    2b76:	08 c0       	rjmp	.+16     	; 0x2b88 <vfprintf+0x2ce>
    2b78:	37 2d       	mov	r19, r7
    2b7a:	3e 7e       	andi	r19, 0xEE	; 238
    2b7c:	05 c0       	rjmp	.+10     	; 0x2b88 <vfprintf+0x2ce>
    2b7e:	ba 2c       	mov	r11, r10
    2b80:	37 2d       	mov	r19, r7
    2b82:	03 c0       	rjmp	.+6      	; 0x2b8a <vfprintf+0x2d0>
    2b84:	ba 2c       	mov	r11, r10
    2b86:	01 c0       	rjmp	.+2      	; 0x2b8a <vfprintf+0x2d0>
    2b88:	b5 2c       	mov	r11, r5
    2b8a:	34 ff       	sbrs	r19, 4
    2b8c:	0d c0       	rjmp	.+26     	; 0x2ba8 <vfprintf+0x2ee>
    2b8e:	fe 01       	movw	r30, r28
    2b90:	ea 0d       	add	r30, r10
    2b92:	f1 1d       	adc	r31, r1
    2b94:	80 81       	ld	r24, Z
    2b96:	80 33       	cpi	r24, 0x30	; 48
    2b98:	11 f4       	brne	.+4      	; 0x2b9e <vfprintf+0x2e4>
    2b9a:	39 7e       	andi	r19, 0xE9	; 233
    2b9c:	09 c0       	rjmp	.+18     	; 0x2bb0 <vfprintf+0x2f6>
    2b9e:	32 ff       	sbrs	r19, 2
    2ba0:	06 c0       	rjmp	.+12     	; 0x2bae <vfprintf+0x2f4>
    2ba2:	b3 94       	inc	r11
    2ba4:	b3 94       	inc	r11
    2ba6:	04 c0       	rjmp	.+8      	; 0x2bb0 <vfprintf+0x2f6>
    2ba8:	83 2f       	mov	r24, r19
    2baa:	86 78       	andi	r24, 0x86	; 134
    2bac:	09 f0       	breq	.+2      	; 0x2bb0 <vfprintf+0x2f6>
    2bae:	b3 94       	inc	r11
    2bb0:	33 fd       	sbrc	r19, 3
    2bb2:	12 c0       	rjmp	.+36     	; 0x2bd8 <vfprintf+0x31e>
    2bb4:	30 ff       	sbrs	r19, 0
    2bb6:	06 c0       	rjmp	.+12     	; 0x2bc4 <vfprintf+0x30a>
    2bb8:	5a 2c       	mov	r5, r10
    2bba:	b3 14       	cp	r11, r3
    2bbc:	18 f4       	brcc	.+6      	; 0x2bc4 <vfprintf+0x30a>
    2bbe:	53 0c       	add	r5, r3
    2bc0:	5b 18       	sub	r5, r11
    2bc2:	b3 2c       	mov	r11, r3
    2bc4:	b3 14       	cp	r11, r3
    2bc6:	60 f4       	brcc	.+24     	; 0x2be0 <vfprintf+0x326>
    2bc8:	b7 01       	movw	r22, r14
    2bca:	80 e2       	ldi	r24, 0x20	; 32
    2bcc:	90 e0       	ldi	r25, 0x00	; 0
    2bce:	3c 87       	std	Y+12, r19	; 0x0c
    2bd0:	78 d0       	rcall	.+240    	; 0x2cc2 <fputc>
    2bd2:	b3 94       	inc	r11
    2bd4:	3c 85       	ldd	r19, Y+12	; 0x0c
    2bd6:	f6 cf       	rjmp	.-20     	; 0x2bc4 <vfprintf+0x30a>
    2bd8:	b3 14       	cp	r11, r3
    2bda:	10 f4       	brcc	.+4      	; 0x2be0 <vfprintf+0x326>
    2bdc:	3b 18       	sub	r3, r11
    2bde:	01 c0       	rjmp	.+2      	; 0x2be2 <vfprintf+0x328>
    2be0:	31 2c       	mov	r3, r1
    2be2:	34 ff       	sbrs	r19, 4
    2be4:	11 c0       	rjmp	.+34     	; 0x2c08 <vfprintf+0x34e>
    2be6:	b7 01       	movw	r22, r14
    2be8:	80 e3       	ldi	r24, 0x30	; 48
    2bea:	90 e0       	ldi	r25, 0x00	; 0
    2bec:	3c 87       	std	Y+12, r19	; 0x0c
    2bee:	69 d0       	rcall	.+210    	; 0x2cc2 <fputc>
    2bf0:	3c 85       	ldd	r19, Y+12	; 0x0c
    2bf2:	32 ff       	sbrs	r19, 2
    2bf4:	16 c0       	rjmp	.+44     	; 0x2c22 <vfprintf+0x368>
    2bf6:	31 fd       	sbrc	r19, 1
    2bf8:	03 c0       	rjmp	.+6      	; 0x2c00 <vfprintf+0x346>
    2bfa:	88 e7       	ldi	r24, 0x78	; 120
    2bfc:	90 e0       	ldi	r25, 0x00	; 0
    2bfe:	02 c0       	rjmp	.+4      	; 0x2c04 <vfprintf+0x34a>
    2c00:	88 e5       	ldi	r24, 0x58	; 88
    2c02:	90 e0       	ldi	r25, 0x00	; 0
    2c04:	b7 01       	movw	r22, r14
    2c06:	0c c0       	rjmp	.+24     	; 0x2c20 <vfprintf+0x366>
    2c08:	83 2f       	mov	r24, r19
    2c0a:	86 78       	andi	r24, 0x86	; 134
    2c0c:	51 f0       	breq	.+20     	; 0x2c22 <vfprintf+0x368>
    2c0e:	31 ff       	sbrs	r19, 1
    2c10:	02 c0       	rjmp	.+4      	; 0x2c16 <vfprintf+0x35c>
    2c12:	8b e2       	ldi	r24, 0x2B	; 43
    2c14:	01 c0       	rjmp	.+2      	; 0x2c18 <vfprintf+0x35e>
    2c16:	80 e2       	ldi	r24, 0x20	; 32
    2c18:	37 fd       	sbrc	r19, 7
    2c1a:	8d e2       	ldi	r24, 0x2D	; 45
    2c1c:	b7 01       	movw	r22, r14
    2c1e:	90 e0       	ldi	r25, 0x00	; 0
    2c20:	50 d0       	rcall	.+160    	; 0x2cc2 <fputc>
    2c22:	a5 14       	cp	r10, r5
    2c24:	30 f4       	brcc	.+12     	; 0x2c32 <vfprintf+0x378>
    2c26:	b7 01       	movw	r22, r14
    2c28:	80 e3       	ldi	r24, 0x30	; 48
    2c2a:	90 e0       	ldi	r25, 0x00	; 0
    2c2c:	4a d0       	rcall	.+148    	; 0x2cc2 <fputc>
    2c2e:	5a 94       	dec	r5
    2c30:	f8 cf       	rjmp	.-16     	; 0x2c22 <vfprintf+0x368>
    2c32:	aa 94       	dec	r10
    2c34:	f4 01       	movw	r30, r8
    2c36:	ea 0d       	add	r30, r10
    2c38:	f1 1d       	adc	r31, r1
    2c3a:	80 81       	ld	r24, Z
    2c3c:	b7 01       	movw	r22, r14
    2c3e:	90 e0       	ldi	r25, 0x00	; 0
    2c40:	40 d0       	rcall	.+128    	; 0x2cc2 <fputc>
    2c42:	a1 10       	cpse	r10, r1
    2c44:	f6 cf       	rjmp	.-20     	; 0x2c32 <vfprintf+0x378>
    2c46:	33 20       	and	r3, r3
    2c48:	09 f4       	brne	.+2      	; 0x2c4c <vfprintf+0x392>
    2c4a:	5d ce       	rjmp	.-838    	; 0x2906 <vfprintf+0x4c>
    2c4c:	b7 01       	movw	r22, r14
    2c4e:	80 e2       	ldi	r24, 0x20	; 32
    2c50:	90 e0       	ldi	r25, 0x00	; 0
    2c52:	37 d0       	rcall	.+110    	; 0x2cc2 <fputc>
    2c54:	3a 94       	dec	r3
    2c56:	f7 cf       	rjmp	.-18     	; 0x2c46 <vfprintf+0x38c>
    2c58:	f7 01       	movw	r30, r14
    2c5a:	86 81       	ldd	r24, Z+6	; 0x06
    2c5c:	97 81       	ldd	r25, Z+7	; 0x07
    2c5e:	02 c0       	rjmp	.+4      	; 0x2c64 <vfprintf+0x3aa>
    2c60:	8f ef       	ldi	r24, 0xFF	; 255
    2c62:	9f ef       	ldi	r25, 0xFF	; 255
    2c64:	2c 96       	adiw	r28, 0x0c	; 12
    2c66:	0f b6       	in	r0, 0x3f	; 63
    2c68:	f8 94       	cli
    2c6a:	de bf       	out	0x3e, r29	; 62
    2c6c:	0f be       	out	0x3f, r0	; 63
    2c6e:	cd bf       	out	0x3d, r28	; 61
    2c70:	df 91       	pop	r29
    2c72:	cf 91       	pop	r28
    2c74:	1f 91       	pop	r17
    2c76:	0f 91       	pop	r16
    2c78:	ff 90       	pop	r15
    2c7a:	ef 90       	pop	r14
    2c7c:	df 90       	pop	r13
    2c7e:	cf 90       	pop	r12
    2c80:	bf 90       	pop	r11
    2c82:	af 90       	pop	r10
    2c84:	9f 90       	pop	r9
    2c86:	8f 90       	pop	r8
    2c88:	7f 90       	pop	r7
    2c8a:	6f 90       	pop	r6
    2c8c:	5f 90       	pop	r5
    2c8e:	4f 90       	pop	r4
    2c90:	3f 90       	pop	r3
    2c92:	2f 90       	pop	r2
    2c94:	08 95       	ret

00002c96 <strnlen_P>:
    2c96:	fc 01       	movw	r30, r24
    2c98:	05 90       	lpm	r0, Z+
    2c9a:	61 50       	subi	r22, 0x01	; 1
    2c9c:	70 40       	sbci	r23, 0x00	; 0
    2c9e:	01 10       	cpse	r0, r1
    2ca0:	d8 f7       	brcc	.-10     	; 0x2c98 <strnlen_P+0x2>
    2ca2:	80 95       	com	r24
    2ca4:	90 95       	com	r25
    2ca6:	8e 0f       	add	r24, r30
    2ca8:	9f 1f       	adc	r25, r31
    2caa:	08 95       	ret

00002cac <strnlen>:
    2cac:	fc 01       	movw	r30, r24
    2cae:	61 50       	subi	r22, 0x01	; 1
    2cb0:	70 40       	sbci	r23, 0x00	; 0
    2cb2:	01 90       	ld	r0, Z+
    2cb4:	01 10       	cpse	r0, r1
    2cb6:	d8 f7       	brcc	.-10     	; 0x2cae <strnlen+0x2>
    2cb8:	80 95       	com	r24
    2cba:	90 95       	com	r25
    2cbc:	8e 0f       	add	r24, r30
    2cbe:	9f 1f       	adc	r25, r31
    2cc0:	08 95       	ret

00002cc2 <fputc>:
    2cc2:	0f 93       	push	r16
    2cc4:	1f 93       	push	r17
    2cc6:	cf 93       	push	r28
    2cc8:	df 93       	push	r29
    2cca:	fb 01       	movw	r30, r22
    2ccc:	23 81       	ldd	r18, Z+3	; 0x03
    2cce:	21 fd       	sbrc	r18, 1
    2cd0:	03 c0       	rjmp	.+6      	; 0x2cd8 <fputc+0x16>
    2cd2:	8f ef       	ldi	r24, 0xFF	; 255
    2cd4:	9f ef       	ldi	r25, 0xFF	; 255
    2cd6:	28 c0       	rjmp	.+80     	; 0x2d28 <fputc+0x66>
    2cd8:	22 ff       	sbrs	r18, 2
    2cda:	16 c0       	rjmp	.+44     	; 0x2d08 <fputc+0x46>
    2cdc:	46 81       	ldd	r20, Z+6	; 0x06
    2cde:	57 81       	ldd	r21, Z+7	; 0x07
    2ce0:	24 81       	ldd	r18, Z+4	; 0x04
    2ce2:	35 81       	ldd	r19, Z+5	; 0x05
    2ce4:	42 17       	cp	r20, r18
    2ce6:	53 07       	cpc	r21, r19
    2ce8:	44 f4       	brge	.+16     	; 0x2cfa <fputc+0x38>
    2cea:	a0 81       	ld	r26, Z
    2cec:	b1 81       	ldd	r27, Z+1	; 0x01
    2cee:	9d 01       	movw	r18, r26
    2cf0:	2f 5f       	subi	r18, 0xFF	; 255
    2cf2:	3f 4f       	sbci	r19, 0xFF	; 255
    2cf4:	31 83       	std	Z+1, r19	; 0x01
    2cf6:	20 83       	st	Z, r18
    2cf8:	8c 93       	st	X, r24
    2cfa:	26 81       	ldd	r18, Z+6	; 0x06
    2cfc:	37 81       	ldd	r19, Z+7	; 0x07
    2cfe:	2f 5f       	subi	r18, 0xFF	; 255
    2d00:	3f 4f       	sbci	r19, 0xFF	; 255
    2d02:	37 83       	std	Z+7, r19	; 0x07
    2d04:	26 83       	std	Z+6, r18	; 0x06
    2d06:	10 c0       	rjmp	.+32     	; 0x2d28 <fputc+0x66>
    2d08:	eb 01       	movw	r28, r22
    2d0a:	09 2f       	mov	r16, r25
    2d0c:	18 2f       	mov	r17, r24
    2d0e:	00 84       	ldd	r0, Z+8	; 0x08
    2d10:	f1 85       	ldd	r31, Z+9	; 0x09
    2d12:	e0 2d       	mov	r30, r0
    2d14:	09 95       	icall
    2d16:	89 2b       	or	r24, r25
    2d18:	e1 f6       	brne	.-72     	; 0x2cd2 <fputc+0x10>
    2d1a:	8e 81       	ldd	r24, Y+6	; 0x06
    2d1c:	9f 81       	ldd	r25, Y+7	; 0x07
    2d1e:	01 96       	adiw	r24, 0x01	; 1
    2d20:	9f 83       	std	Y+7, r25	; 0x07
    2d22:	8e 83       	std	Y+6, r24	; 0x06
    2d24:	81 2f       	mov	r24, r17
    2d26:	90 2f       	mov	r25, r16
    2d28:	df 91       	pop	r29
    2d2a:	cf 91       	pop	r28
    2d2c:	1f 91       	pop	r17
    2d2e:	0f 91       	pop	r16
    2d30:	08 95       	ret

00002d32 <__ultoa_invert>:
    2d32:	fa 01       	movw	r30, r20
    2d34:	aa 27       	eor	r26, r26
    2d36:	28 30       	cpi	r18, 0x08	; 8
    2d38:	51 f1       	breq	.+84     	; 0x2d8e <__ultoa_invert+0x5c>
    2d3a:	20 31       	cpi	r18, 0x10	; 16
    2d3c:	81 f1       	breq	.+96     	; 0x2d9e <__ultoa_invert+0x6c>
    2d3e:	e8 94       	clt
    2d40:	6f 93       	push	r22
    2d42:	6e 7f       	andi	r22, 0xFE	; 254
    2d44:	6e 5f       	subi	r22, 0xFE	; 254
    2d46:	7f 4f       	sbci	r23, 0xFF	; 255
    2d48:	8f 4f       	sbci	r24, 0xFF	; 255
    2d4a:	9f 4f       	sbci	r25, 0xFF	; 255
    2d4c:	af 4f       	sbci	r26, 0xFF	; 255
    2d4e:	b1 e0       	ldi	r27, 0x01	; 1
    2d50:	3e d0       	rcall	.+124    	; 0x2dce <__ultoa_invert+0x9c>
    2d52:	b4 e0       	ldi	r27, 0x04	; 4
    2d54:	3c d0       	rcall	.+120    	; 0x2dce <__ultoa_invert+0x9c>
    2d56:	67 0f       	add	r22, r23
    2d58:	78 1f       	adc	r23, r24
    2d5a:	89 1f       	adc	r24, r25
    2d5c:	9a 1f       	adc	r25, r26
    2d5e:	a1 1d       	adc	r26, r1
    2d60:	68 0f       	add	r22, r24
    2d62:	79 1f       	adc	r23, r25
    2d64:	8a 1f       	adc	r24, r26
    2d66:	91 1d       	adc	r25, r1
    2d68:	a1 1d       	adc	r26, r1
    2d6a:	6a 0f       	add	r22, r26
    2d6c:	71 1d       	adc	r23, r1
    2d6e:	81 1d       	adc	r24, r1
    2d70:	91 1d       	adc	r25, r1
    2d72:	a1 1d       	adc	r26, r1
    2d74:	20 d0       	rcall	.+64     	; 0x2db6 <__ultoa_invert+0x84>
    2d76:	09 f4       	brne	.+2      	; 0x2d7a <__ultoa_invert+0x48>
    2d78:	68 94       	set
    2d7a:	3f 91       	pop	r19
    2d7c:	2a e0       	ldi	r18, 0x0A	; 10
    2d7e:	26 9f       	mul	r18, r22
    2d80:	11 24       	eor	r1, r1
    2d82:	30 19       	sub	r19, r0
    2d84:	30 5d       	subi	r19, 0xD0	; 208
    2d86:	31 93       	st	Z+, r19
    2d88:	de f6       	brtc	.-74     	; 0x2d40 <__ultoa_invert+0xe>
    2d8a:	cf 01       	movw	r24, r30
    2d8c:	08 95       	ret
    2d8e:	46 2f       	mov	r20, r22
    2d90:	47 70       	andi	r20, 0x07	; 7
    2d92:	40 5d       	subi	r20, 0xD0	; 208
    2d94:	41 93       	st	Z+, r20
    2d96:	b3 e0       	ldi	r27, 0x03	; 3
    2d98:	0f d0       	rcall	.+30     	; 0x2db8 <__ultoa_invert+0x86>
    2d9a:	c9 f7       	brne	.-14     	; 0x2d8e <__ultoa_invert+0x5c>
    2d9c:	f6 cf       	rjmp	.-20     	; 0x2d8a <__ultoa_invert+0x58>
    2d9e:	46 2f       	mov	r20, r22
    2da0:	4f 70       	andi	r20, 0x0F	; 15
    2da2:	40 5d       	subi	r20, 0xD0	; 208
    2da4:	4a 33       	cpi	r20, 0x3A	; 58
    2da6:	18 f0       	brcs	.+6      	; 0x2dae <__ultoa_invert+0x7c>
    2da8:	49 5d       	subi	r20, 0xD9	; 217
    2daa:	31 fd       	sbrc	r19, 1
    2dac:	40 52       	subi	r20, 0x20	; 32
    2dae:	41 93       	st	Z+, r20
    2db0:	02 d0       	rcall	.+4      	; 0x2db6 <__ultoa_invert+0x84>
    2db2:	a9 f7       	brne	.-22     	; 0x2d9e <__ultoa_invert+0x6c>
    2db4:	ea cf       	rjmp	.-44     	; 0x2d8a <__ultoa_invert+0x58>
    2db6:	b4 e0       	ldi	r27, 0x04	; 4
    2db8:	a6 95       	lsr	r26
    2dba:	97 95       	ror	r25
    2dbc:	87 95       	ror	r24
    2dbe:	77 95       	ror	r23
    2dc0:	67 95       	ror	r22
    2dc2:	ba 95       	dec	r27
    2dc4:	c9 f7       	brne	.-14     	; 0x2db8 <__ultoa_invert+0x86>
    2dc6:	00 97       	sbiw	r24, 0x00	; 0
    2dc8:	61 05       	cpc	r22, r1
    2dca:	71 05       	cpc	r23, r1
    2dcc:	08 95       	ret
    2dce:	9b 01       	movw	r18, r22
    2dd0:	ac 01       	movw	r20, r24
    2dd2:	0a 2e       	mov	r0, r26
    2dd4:	06 94       	lsr	r0
    2dd6:	57 95       	ror	r21
    2dd8:	47 95       	ror	r20
    2dda:	37 95       	ror	r19
    2ddc:	27 95       	ror	r18
    2dde:	ba 95       	dec	r27
    2de0:	c9 f7       	brne	.-14     	; 0x2dd4 <__ultoa_invert+0xa2>
    2de2:	62 0f       	add	r22, r18
    2de4:	73 1f       	adc	r23, r19
    2de6:	84 1f       	adc	r24, r20
    2de8:	95 1f       	adc	r25, r21
    2dea:	a0 1d       	adc	r26, r0
    2dec:	08 95       	ret

00002dee <_exit>:
    2dee:	f8 94       	cli

00002df0 <__stop_program>:
    2df0:	ff cf       	rjmp	.-2      	; 0x2df0 <__stop_program>
