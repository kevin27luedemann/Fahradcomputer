
SD_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ac  00800100  00003f44  00003fd8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003f44  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000409  008001ac  008001ac  00004084  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00004084  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000040e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a8  00000000  00000000  00004120  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006f0c  00000000  00000000  000043c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dad  00000000  00000000  0000b2d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002df8  00000000  00000000  0000c081  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000d58  00000000  00000000  0000ee7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000d72  00000000  00000000  0000fbd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00007d22  00000000  00000000  00010946  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003b0  00000000  00000000  00018668  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	80 c1       	rjmp	.+768    	; 0x302 <__dtors_end>
       2:	00 00       	nop
       4:	a8 c1       	rjmp	.+848    	; 0x356 <__bad_interrupt>
       6:	00 00       	nop
       8:	a6 c1       	rjmp	.+844    	; 0x356 <__bad_interrupt>
       a:	00 00       	nop
       c:	a4 c1       	rjmp	.+840    	; 0x356 <__bad_interrupt>
       e:	00 00       	nop
      10:	a2 c1       	rjmp	.+836    	; 0x356 <__bad_interrupt>
      12:	00 00       	nop
      14:	a0 c1       	rjmp	.+832    	; 0x356 <__bad_interrupt>
      16:	00 00       	nop
      18:	9e c1       	rjmp	.+828    	; 0x356 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	9c c1       	rjmp	.+824    	; 0x356 <__bad_interrupt>
      1e:	00 00       	nop
      20:	9a c1       	rjmp	.+820    	; 0x356 <__bad_interrupt>
      22:	00 00       	nop
      24:	98 c1       	rjmp	.+816    	; 0x356 <__bad_interrupt>
      26:	00 00       	nop
      28:	96 c1       	rjmp	.+812    	; 0x356 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	94 c1       	rjmp	.+808    	; 0x356 <__bad_interrupt>
      2e:	00 00       	nop
      30:	92 c1       	rjmp	.+804    	; 0x356 <__bad_interrupt>
      32:	00 00       	nop
      34:	90 c1       	rjmp	.+800    	; 0x356 <__bad_interrupt>
      36:	00 00       	nop
      38:	8e c1       	rjmp	.+796    	; 0x356 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8c c1       	rjmp	.+792    	; 0x356 <__bad_interrupt>
      3e:	00 00       	nop
      40:	0c 94 9d 1a 	jmp	0x353a	; 0x353a <__vector_16>
      44:	88 c1       	rjmp	.+784    	; 0x356 <__bad_interrupt>
      46:	00 00       	nop
      48:	86 c1       	rjmp	.+780    	; 0x356 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	84 c1       	rjmp	.+776    	; 0x356 <__bad_interrupt>
      4e:	00 00       	nop
      50:	82 c1       	rjmp	.+772    	; 0x356 <__bad_interrupt>
      52:	00 00       	nop
      54:	80 c1       	rjmp	.+768    	; 0x356 <__bad_interrupt>
      56:	00 00       	nop
      58:	7e c1       	rjmp	.+764    	; 0x356 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7c c1       	rjmp	.+760    	; 0x356 <__bad_interrupt>
      5e:	00 00       	nop
      60:	7a c1       	rjmp	.+756    	; 0x356 <__bad_interrupt>
      62:	00 00       	nop
      64:	78 c1       	rjmp	.+752    	; 0x356 <__bad_interrupt>
      66:	00 00       	nop
      68:	76 c1       	rjmp	.+748    	; 0x356 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	74 c1       	rjmp	.+744    	; 0x356 <__bad_interrupt>
      6e:	00 00       	nop
      70:	72 c1       	rjmp	.+740    	; 0x356 <__bad_interrupt>
      72:	00 00       	nop
      74:	70 c1       	rjmp	.+736    	; 0x356 <__bad_interrupt>
      76:	00 00       	nop
      78:	6e c1       	rjmp	.+732    	; 0x356 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6c c1       	rjmp	.+728    	; 0x356 <__bad_interrupt>
      7e:	00 00       	nop
      80:	6a c1       	rjmp	.+724    	; 0x356 <__bad_interrupt>
      82:	00 00       	nop
      84:	68 c1       	rjmp	.+720    	; 0x356 <__bad_interrupt>
      86:	00 00       	nop
      88:	66 c1       	rjmp	.+716    	; 0x356 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	46 04       	cpc	r4, r6
      8e:	4d 04       	cpc	r4, r13
      90:	9a 05       	cpc	r25, r10
      92:	bd 04       	cpc	r11, r13
      94:	9a 05       	cpc	r25, r10
      96:	9a 05       	cpc	r25, r10
      98:	9a 05       	cpc	r25, r10
      9a:	92 05       	cpc	r25, r2
      9c:	9a 05       	cpc	r25, r10
      9e:	9a 05       	cpc	r25, r10
      a0:	9a 05       	cpc	r25, r10
      a2:	9a 05       	cpc	r25, r10
      a4:	9a 05       	cpc	r25, r10
      a6:	9a 05       	cpc	r25, r10
      a8:	9a 05       	cpc	r25, r10
      aa:	9a 05       	cpc	r25, r10
      ac:	9a 05       	cpc	r25, r10
      ae:	9a 05       	cpc	r25, r10
      b0:	9a 05       	cpc	r25, r10
      b2:	9a 05       	cpc	r25, r10
      b4:	9a 05       	cpc	r25, r10
      b6:	9a 05       	cpc	r25, r10
      b8:	9a 05       	cpc	r25, r10
      ba:	9a 05       	cpc	r25, r10
      bc:	9a 05       	cpc	r25, r10
      be:	9a 05       	cpc	r25, r10
      c0:	9a 05       	cpc	r25, r10
      c2:	9a 05       	cpc	r25, r10
      c4:	9a 05       	cpc	r25, r10
      c6:	9a 05       	cpc	r25, r10
      c8:	9a 05       	cpc	r25, r10
      ca:	9a 05       	cpc	r25, r10
      cc:	9a 05       	cpc	r25, r10
      ce:	9a 05       	cpc	r25, r10
      d0:	9a 05       	cpc	r25, r10
      d2:	9a 05       	cpc	r25, r10
      d4:	9a 05       	cpc	r25, r10
      d6:	9a 05       	cpc	r25, r10
      d8:	9a 05       	cpc	r25, r10
      da:	9a 05       	cpc	r25, r10
      dc:	9a 05       	cpc	r25, r10
      de:	9a 05       	cpc	r25, r10
      e0:	9a 05       	cpc	r25, r10
      e2:	9a 05       	cpc	r25, r10
      e4:	9a 05       	cpc	r25, r10
      e6:	9a 05       	cpc	r25, r10
      e8:	9a 05       	cpc	r25, r10
      ea:	9a 05       	cpc	r25, r10
      ec:	9a 05       	cpc	r25, r10
      ee:	9a 05       	cpc	r25, r10
      f0:	43 05       	cpc	r20, r3
      f2:	49 05       	cpc	r20, r9
      f4:	5a 05       	cpc	r21, r10
      f6:	6b 05       	cpc	r22, r11
      f8:	80 05       	cpc	r24, r0
      fa:	54 1a       	sub	r5, r20
      fc:	28 19       	sub	r18, r8
      fe:	37 19       	sub	r19, r7
     100:	32 19       	sub	r19, r2
     102:	32 19       	sub	r19, r2
     104:	32 19       	sub	r19, r2
     106:	32 19       	sub	r19, r2
     108:	32 19       	sub	r19, r2
     10a:	32 19       	sub	r19, r2
     10c:	32 19       	sub	r19, r2
     10e:	32 19       	sub	r19, r2
     110:	32 19       	sub	r19, r2
     112:	32 19       	sub	r19, r2
     114:	62 1a       	sub	r6, r18
     116:	32 19       	sub	r19, r2
     118:	32 19       	sub	r19, r2
     11a:	32 19       	sub	r19, r2
     11c:	de 18       	sub	r13, r14
     11e:	32 19       	sub	r19, r2
     120:	37 19       	sub	r19, r7
     122:	32 19       	sub	r19, r2
     124:	32 19       	sub	r19, r2
     126:	25 1a       	sub	r2, r21

00000128 <__trampolines_end>:
     128:	00 00       	nop
     12a:	5f 00       	.word	0x005f	; ????
     12c:	00 00       	nop
     12e:	07 00       	.word	0x0007	; ????
     130:	07 00       	.word	0x0007	; ????
     132:	14 7f       	andi	r17, 0xF4	; 244
     134:	14 7f       	andi	r17, 0xF4	; 244
     136:	14 24       	eor	r1, r4
     138:	2a 7f       	andi	r18, 0xFA	; 250
     13a:	2a 12       	cpse	r2, r26
     13c:	23 13       	cpse	r18, r19
     13e:	08 64       	ori	r16, 0x48	; 72
     140:	62 36       	cpi	r22, 0x62	; 98
     142:	49 55       	subi	r20, 0x59	; 89
     144:	22 50       	subi	r18, 0x02	; 2
     146:	00 05       	cpc	r16, r0
     148:	03 00       	.word	0x0003	; ????
     14a:	00 00       	nop
     14c:	1c 22       	and	r1, r28
     14e:	41 00       	.word	0x0041	; ????
     150:	00 41       	sbci	r16, 0x10	; 16
     152:	22 1c       	adc	r2, r2
     154:	00 14       	cp	r0, r0
     156:	08 3e       	cpi	r16, 0xE8	; 232
     158:	08 14       	cp	r0, r8
     15a:	08 08       	sbc	r0, r8
     15c:	3e 08       	sbc	r3, r14
     15e:	08 00       	.word	0x0008	; ????
     160:	50 30       	cpi	r21, 0x00	; 0
     162:	00 00       	nop
     164:	08 08       	sbc	r0, r8
     166:	08 08       	sbc	r0, r8
     168:	08 00       	.word	0x0008	; ????
     16a:	60 60       	ori	r22, 0x00	; 0
     16c:	00 00       	nop
     16e:	20 10       	cpse	r2, r0
     170:	08 04       	cpc	r0, r8
     172:	02 3e       	cpi	r16, 0xE2	; 226
     174:	51 49       	sbci	r21, 0x91	; 145
     176:	45 3e       	cpi	r20, 0xE5	; 229
     178:	00 42       	sbci	r16, 0x20	; 32
     17a:	7f 40       	sbci	r23, 0x0F	; 15
     17c:	00 42       	sbci	r16, 0x20	; 32
     17e:	61 51       	subi	r22, 0x11	; 17
     180:	49 46       	sbci	r20, 0x69	; 105
     182:	21 41       	sbci	r18, 0x11	; 17
     184:	45 4b       	sbci	r20, 0xB5	; 181
     186:	31 18       	sub	r3, r1
     188:	14 12       	cpse	r1, r20
     18a:	7f 10       	cpse	r7, r15
     18c:	27 45       	sbci	r18, 0x57	; 87
     18e:	45 45       	sbci	r20, 0x55	; 85
     190:	39 3c       	cpi	r19, 0xC9	; 201
     192:	4a 49       	sbci	r20, 0x9A	; 154
     194:	49 30       	cpi	r20, 0x09	; 9
     196:	01 71       	andi	r16, 0x11	; 17
     198:	09 05       	cpc	r16, r9
     19a:	03 36       	cpi	r16, 0x63	; 99
     19c:	49 49       	sbci	r20, 0x99	; 153
     19e:	49 36       	cpi	r20, 0x69	; 105
     1a0:	06 49       	sbci	r16, 0x96	; 150
     1a2:	49 29       	or	r20, r9
     1a4:	1e 00       	.word	0x001e	; ????
     1a6:	36 36       	cpi	r19, 0x66	; 102
     1a8:	00 00       	nop
     1aa:	00 56       	subi	r16, 0x60	; 96
     1ac:	36 00       	.word	0x0036	; ????
     1ae:	00 08       	sbc	r0, r0
     1b0:	14 22       	and	r1, r20
     1b2:	41 00       	.word	0x0041	; ????
     1b4:	14 14       	cp	r1, r4
     1b6:	14 14       	cp	r1, r4
     1b8:	14 00       	.word	0x0014	; ????
     1ba:	41 22       	and	r4, r17
     1bc:	14 08       	sbc	r1, r4
     1be:	02 01       	movw	r0, r4
     1c0:	51 09       	sbc	r21, r1
     1c2:	06 32       	cpi	r16, 0x26	; 38
     1c4:	49 79       	andi	r20, 0x99	; 153
     1c6:	41 3e       	cpi	r20, 0xE1	; 225
     1c8:	7e 11       	cpse	r23, r14
     1ca:	11 11       	cpse	r17, r1
     1cc:	7e 7f       	andi	r23, 0xFE	; 254
     1ce:	49 49       	sbci	r20, 0x99	; 153
     1d0:	49 36       	cpi	r20, 0x69	; 105
     1d2:	3e 41       	sbci	r19, 0x1E	; 30
     1d4:	41 41       	sbci	r20, 0x11	; 17
     1d6:	22 7f       	andi	r18, 0xF2	; 242
     1d8:	41 41       	sbci	r20, 0x11	; 17
     1da:	22 1c       	adc	r2, r2
     1dc:	7f 49       	sbci	r23, 0x9F	; 159
     1de:	49 49       	sbci	r20, 0x99	; 153
     1e0:	41 7f       	andi	r20, 0xF1	; 241
     1e2:	09 09       	sbc	r16, r9
     1e4:	09 01       	movw	r0, r18
     1e6:	3e 41       	sbci	r19, 0x1E	; 30
     1e8:	49 49       	sbci	r20, 0x99	; 153
     1ea:	7a 7f       	andi	r23, 0xFA	; 250
     1ec:	08 08       	sbc	r0, r8
     1ee:	08 7f       	andi	r16, 0xF8	; 248
     1f0:	00 41       	sbci	r16, 0x10	; 16
     1f2:	7f 41       	sbci	r23, 0x1F	; 31
     1f4:	00 20       	and	r0, r0
     1f6:	40 41       	sbci	r20, 0x10	; 16
     1f8:	3f 01       	movw	r6, r30
     1fa:	7f 08       	sbc	r7, r15
     1fc:	14 22       	and	r1, r20
     1fe:	41 7f       	andi	r20, 0xF1	; 241
     200:	40 40       	sbci	r20, 0x00	; 0
     202:	40 40       	sbci	r20, 0x00	; 0
     204:	7f 02       	muls	r23, r31
     206:	0c 02       	muls	r16, r28
     208:	7f 7f       	andi	r23, 0xFF	; 255
     20a:	04 08       	sbc	r0, r4
     20c:	10 7f       	andi	r17, 0xF0	; 240
     20e:	3e 41       	sbci	r19, 0x1E	; 30
     210:	41 41       	sbci	r20, 0x11	; 17
     212:	3e 7f       	andi	r19, 0xFE	; 254
     214:	09 09       	sbc	r16, r9
     216:	09 06       	cpc	r0, r25
     218:	3e 41       	sbci	r19, 0x1E	; 30
     21a:	51 21       	and	r21, r1
     21c:	5e 7f       	andi	r21, 0xFE	; 254
     21e:	09 19       	sub	r16, r9
     220:	29 46       	sbci	r18, 0x69	; 105
     222:	46 49       	sbci	r20, 0x96	; 150
     224:	49 49       	sbci	r20, 0x99	; 153
     226:	31 01       	movw	r6, r2
     228:	01 7f       	andi	r16, 0xF1	; 241
     22a:	01 01       	movw	r0, r2
     22c:	3f 40       	sbci	r19, 0x0F	; 15
     22e:	40 40       	sbci	r20, 0x00	; 0
     230:	3f 1f       	adc	r19, r31
     232:	20 40       	sbci	r18, 0x00	; 0
     234:	20 1f       	adc	r18, r16
     236:	3f 40       	sbci	r19, 0x0F	; 15
     238:	38 40       	sbci	r19, 0x08	; 8
     23a:	3f 63       	ori	r19, 0x3F	; 63
     23c:	14 08       	sbc	r1, r4
     23e:	14 63       	ori	r17, 0x34	; 52
     240:	07 08       	sbc	r0, r7
     242:	70 08       	sbc	r7, r0
     244:	07 61       	ori	r16, 0x17	; 23
     246:	51 49       	sbci	r21, 0x91	; 145
     248:	45 43       	sbci	r20, 0x35	; 53
     24a:	00 7f       	andi	r16, 0xF0	; 240
     24c:	41 41       	sbci	r20, 0x11	; 17
     24e:	00 02       	muls	r16, r16
     250:	04 08       	sbc	r0, r4
     252:	10 20       	and	r1, r0
     254:	00 41       	sbci	r16, 0x10	; 16
     256:	41 7f       	andi	r20, 0xF1	; 241
     258:	00 04       	cpc	r0, r0
     25a:	02 01       	movw	r0, r4
     25c:	02 04       	cpc	r0, r2
     25e:	40 40       	sbci	r20, 0x00	; 0
     260:	40 40       	sbci	r20, 0x00	; 0
     262:	40 00       	.word	0x0040	; ????
     264:	01 02       	muls	r16, r17
     266:	04 00       	.word	0x0004	; ????
     268:	20 54       	subi	r18, 0x40	; 64
     26a:	54 54       	subi	r21, 0x44	; 68
     26c:	78 7f       	andi	r23, 0xF8	; 248
     26e:	48 44       	sbci	r20, 0x48	; 72
     270:	44 38       	cpi	r20, 0x84	; 132
     272:	38 44       	sbci	r19, 0x48	; 72
     274:	44 44       	sbci	r20, 0x44	; 68
     276:	20 38       	cpi	r18, 0x80	; 128
     278:	44 44       	sbci	r20, 0x44	; 68
     27a:	48 7f       	andi	r20, 0xF8	; 248
     27c:	38 54       	subi	r19, 0x48	; 72
     27e:	54 54       	subi	r21, 0x44	; 68
     280:	18 08       	sbc	r1, r8
     282:	7e 09       	sbc	r23, r14
     284:	01 02       	muls	r16, r17
     286:	0c 52       	subi	r16, 0x2C	; 44
     288:	52 52       	subi	r21, 0x22	; 34
     28a:	3e 7f       	andi	r19, 0xFE	; 254
     28c:	08 04       	cpc	r0, r8
     28e:	04 78       	andi	r16, 0x84	; 132
     290:	00 44       	sbci	r16, 0x40	; 64
     292:	7d 40       	sbci	r23, 0x0D	; 13
     294:	00 20       	and	r0, r0
     296:	40 44       	sbci	r20, 0x40	; 64
     298:	3d 00       	.word	0x003d	; ????
     29a:	7f 10       	cpse	r7, r15
     29c:	28 44       	sbci	r18, 0x48	; 72
     29e:	00 00       	nop
     2a0:	41 7f       	andi	r20, 0xF1	; 241
     2a2:	40 00       	.word	0x0040	; ????
     2a4:	7c 04       	cpc	r7, r12
     2a6:	18 04       	cpc	r1, r8
     2a8:	78 7c       	andi	r23, 0xC8	; 200
     2aa:	08 04       	cpc	r0, r8
     2ac:	04 78       	andi	r16, 0x84	; 132
     2ae:	38 44       	sbci	r19, 0x48	; 72
     2b0:	44 44       	sbci	r20, 0x44	; 68
     2b2:	38 7c       	andi	r19, 0xC8	; 200
     2b4:	14 14       	cp	r1, r4
     2b6:	14 08       	sbc	r1, r4
     2b8:	08 14       	cp	r0, r8
     2ba:	14 18       	sub	r1, r4
     2bc:	7c 7c       	andi	r23, 0xCC	; 204
     2be:	08 04       	cpc	r0, r8
     2c0:	04 08       	sbc	r0, r4
     2c2:	48 54       	subi	r20, 0x48	; 72
     2c4:	54 54       	subi	r21, 0x44	; 68
     2c6:	20 04       	cpc	r2, r0
     2c8:	3f 44       	sbci	r19, 0x4F	; 79
     2ca:	40 20       	and	r4, r0
     2cc:	3c 40       	sbci	r19, 0x0C	; 12
     2ce:	40 20       	and	r4, r0
     2d0:	7c 1c       	adc	r7, r12
     2d2:	20 40       	sbci	r18, 0x00	; 0
     2d4:	20 1c       	adc	r2, r0
     2d6:	3c 40       	sbci	r19, 0x0C	; 12
     2d8:	30 40       	sbci	r19, 0x00	; 0
     2da:	3c 44       	sbci	r19, 0x4C	; 76
     2dc:	28 10       	cpse	r2, r8
     2de:	28 44       	sbci	r18, 0x48	; 72
     2e0:	0c 50       	subi	r16, 0x0C	; 12
     2e2:	50 50       	subi	r21, 0x00	; 0
     2e4:	3c 44       	sbci	r19, 0x4C	; 76
     2e6:	64 54       	subi	r22, 0x44	; 68
     2e8:	4c 44       	sbci	r20, 0x4C	; 76
     2ea:	00 08       	sbc	r0, r0
     2ec:	36 41       	sbci	r19, 0x16	; 22
     2ee:	00 00       	nop
     2f0:	00 7f       	andi	r16, 0xF0	; 240
     2f2:	00 00       	nop
     2f4:	00 41       	sbci	r16, 0x10	; 16
     2f6:	36 08       	sbc	r3, r6
     2f8:	00 10       	cpse	r0, r0
     2fa:	08 08       	sbc	r0, r8
     2fc:	10 08       	sbc	r1, r0

000002fe <__ctors_start>:
     2fe:	7f 1c       	adc	r7, r15

00000300 <__ctors_end>:
     300:	84 1c       	adc	r8, r4

00000302 <__dtors_end>:
     302:	11 24       	eor	r1, r1
     304:	1f be       	out	0x3f, r1	; 63
     306:	cf ef       	ldi	r28, 0xFF	; 255
     308:	d0 e4       	ldi	r29, 0x40	; 64
     30a:	de bf       	out	0x3e, r29	; 62
     30c:	cd bf       	out	0x3d, r28	; 61

0000030e <__do_copy_data>:
     30e:	11 e0       	ldi	r17, 0x01	; 1
     310:	a0 e0       	ldi	r26, 0x00	; 0
     312:	b1 e0       	ldi	r27, 0x01	; 1
     314:	e4 e4       	ldi	r30, 0x44	; 68
     316:	ff e3       	ldi	r31, 0x3F	; 63
     318:	00 e0       	ldi	r16, 0x00	; 0
     31a:	0b bf       	out	0x3b, r16	; 59
     31c:	02 c0       	rjmp	.+4      	; 0x322 <__do_copy_data+0x14>
     31e:	07 90       	elpm	r0, Z+
     320:	0d 92       	st	X+, r0
     322:	ac 3a       	cpi	r26, 0xAC	; 172
     324:	b1 07       	cpc	r27, r17
     326:	d9 f7       	brne	.-10     	; 0x31e <__do_copy_data+0x10>

00000328 <__do_clear_bss>:
     328:	25 e0       	ldi	r18, 0x05	; 5
     32a:	ac ea       	ldi	r26, 0xAC	; 172
     32c:	b1 e0       	ldi	r27, 0x01	; 1
     32e:	01 c0       	rjmp	.+2      	; 0x332 <.do_clear_bss_start>

00000330 <.do_clear_bss_loop>:
     330:	1d 92       	st	X+, r1

00000332 <.do_clear_bss_start>:
     332:	a5 3b       	cpi	r26, 0xB5	; 181
     334:	b2 07       	cpc	r27, r18
     336:	e1 f7       	brne	.-8      	; 0x330 <.do_clear_bss_loop>

00000338 <__do_global_ctors>:
     338:	11 e0       	ldi	r17, 0x01	; 1
     33a:	c0 e8       	ldi	r28, 0x80	; 128
     33c:	d1 e0       	ldi	r29, 0x01	; 1
     33e:	04 c0       	rjmp	.+8      	; 0x348 <__do_global_ctors+0x10>
     340:	21 97       	sbiw	r28, 0x01	; 1
     342:	fe 01       	movw	r30, r28
     344:	0e 94 ab 1c 	call	0x3956	; 0x3956 <__tablejump2__>
     348:	cf 37       	cpi	r28, 0x7F	; 127
     34a:	d1 07       	cpc	r29, r17
     34c:	c9 f7       	brne	.-14     	; 0x340 <__do_global_ctors+0x8>
     34e:	0e 94 ca 1a 	call	0x3594	; 0x3594 <main>
     352:	0c 94 96 1f 	jmp	0x3f2c	; 0x3f2c <__do_global_dtors>

00000356 <__bad_interrupt>:
     356:	54 ce       	rjmp	.-856    	; 0x0 <__vectors>

00000358 <power_off>:
}

static
void power_off (void)
{
	SPCR = 0;				/* Disable SPI function */
     358:	1c bc       	out	0x2c, r1	; 44

	DDRB  &= ~((1<<PORTB7) | (1<<PORTB5));// | (1<<PORTB4));	/* Set SCK/MOSI/CS as hi-z, INS#/WP as pull-up */
     35a:	84 b1       	in	r24, 0x04	; 4
     35c:	8f 75       	andi	r24, 0x5F	; 95
     35e:	84 b9       	out	0x04, r24	; 4
	CS_HIGH();
     360:	2c 9a       	sbi	0x05, 4	; 5
     362:	08 95       	ret

00000364 <xchg_spi>:
static
BYTE xchg_spi (		/* Returns received data */
BYTE dat		/* Data to be sent */
)
{
	SPDR = dat;
     364:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR, SPIF);
     366:	0d b4       	in	r0, 0x2d	; 45
     368:	07 fe       	sbrs	r0, 7
     36a:	fd cf       	rjmp	.-6      	; 0x366 <xchg_spi+0x2>
	return SPDR;
     36c:	8e b5       	in	r24, 0x2e	; 46
}
     36e:	08 95       	ret

00000370 <deselect>:
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();		/* Set CS# high */
     370:	2c 9a       	sbi	0x05, 4	; 5
	xchg_spi(0xFF);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
     372:	8f ef       	ldi	r24, 0xFF	; 255
     374:	f7 cf       	rjmp	.-18     	; 0x364 <xchg_spi>
     376:	08 95       	ret

00000378 <select>:
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();		/* Set CS# low */
     378:	2c 98       	cbi	0x05, 4	; 5
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
     37a:	8f ef       	ldi	r24, 0xFF	; 255
     37c:	f3 df       	rcall	.-26     	; 0x364 <xchg_spi>
)
{
	BYTE d;


	Timer2 = wt / 10;
     37e:	82 e3       	ldi	r24, 0x32	; 50
     380:	80 93 ad 01 	sts	0x01AD, r24
	do{
		d = xchg_spi(0xFF);
     384:	8f ef       	ldi	r24, 0xFF	; 255
     386:	ee df       	rcall	.-36     	; 0x364 <xchg_spi>
	}while (d != 0xFF && Timer2);
     388:	8f 3f       	cpi	r24, 0xFF	; 255
     38a:	41 f0       	breq	.+16     	; 0x39c <select+0x24>
     38c:	80 91 ad 01 	lds	r24, 0x01AD
     390:	81 11       	cpse	r24, r1
     392:	f8 cf       	rjmp	.-16     	; 0x384 <select+0xc>
{
	CS_LOW();		/* Set CS# low */
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
	if (wait_ready(500)) return 1;	/* Wait for card ready */

	deselect();
     394:	ed df       	rcall	.-38     	; 0x370 <deselect>
	return 0;	/* Timeout */
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	08 95       	ret
static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();		/* Set CS# low */
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
	if (wait_ready(500)) return 1;	/* Wait for card ready */
     39c:	81 e0       	ldi	r24, 0x01	; 1
     39e:	90 e0       	ldi	r25, 0x00	; 0

	deselect();
	return 0;	/* Timeout */
}
     3a0:	08 95       	ret

000003a2 <rcvr_datablock>:
static
int rcvr_datablock (
BYTE *buff,			/* Data buffer to store received data */
UINT btr			/* Byte count (must be multiple of 4) */
)
{
     3a2:	0f 93       	push	r16
     3a4:	1f 93       	push	r17
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	ec 01       	movw	r28, r24
     3ac:	8b 01       	movw	r16, r22
	BYTE token;


	Timer1 = 20;
     3ae:	84 e1       	ldi	r24, 0x14	; 20
     3b0:	80 93 ae 01 	sts	0x01AE, r24
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
     3b4:	8f ef       	ldi	r24, 0xFF	; 255
     3b6:	d6 df       	rcall	.-84     	; 0x364 <xchg_spi>
	} while ((token == 0xFF) && Timer1);
     3b8:	8f 3f       	cpi	r24, 0xFF	; 255
     3ba:	39 f4       	brne	.+14     	; 0x3ca <rcvr_datablock+0x28>
     3bc:	90 91 ae 01 	lds	r25, 0x01AE
     3c0:	91 11       	cpse	r25, r1
     3c2:	f8 cf       	rjmp	.-16     	; 0x3b4 <rcvr_datablock+0x12>
	if (token != 0xFE) return 0;	/* If not valid data token, return with error */
     3c4:	80 e0       	ldi	r24, 0x00	; 0
     3c6:	90 e0       	ldi	r25, 0x00	; 0
     3c8:	20 c0       	rjmp	.+64     	; 0x40a <rcvr_datablock+0x68>
     3ca:	8e 3f       	cpi	r24, 0xFE	; 254
     3cc:	e1 f4       	brne	.+56     	; 0x406 <rcvr_datablock+0x64>
void rcvr_spi_multi (
BYTE *p,	/* Data buffer */
UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	cli();
     3ce:	f8 94       	cli
	do {
		SPDR = 0xFF; loop_until_bit_is_set(SPSR,SPIF); *p++ = SPDR;
     3d0:	8f ef       	ldi	r24, 0xFF	; 255
     3d2:	8e bd       	out	0x2e, r24	; 46
     3d4:	0d b4       	in	r0, 0x2d	; 45
     3d6:	07 fe       	sbrs	r0, 7
     3d8:	fd cf       	rjmp	.-6      	; 0x3d4 <rcvr_datablock+0x32>
     3da:	9e b5       	in	r25, 0x2e	; 46
     3dc:	98 83       	st	Y, r25
		SPDR = 0xFF; loop_until_bit_is_set(SPSR,SPIF); *p++ = SPDR;
     3de:	8e bd       	out	0x2e, r24	; 46
     3e0:	0d b4       	in	r0, 0x2d	; 45
     3e2:	07 fe       	sbrs	r0, 7
     3e4:	fd cf       	rjmp	.-6      	; 0x3e0 <rcvr_datablock+0x3e>
     3e6:	22 96       	adiw	r28, 0x02	; 2
     3e8:	9e b5       	in	r25, 0x2e	; 46
     3ea:	fe 01       	movw	r30, r28
     3ec:	31 97       	sbiw	r30, 0x01	; 1
     3ee:	90 83       	st	Z, r25
	} while (cnt -= 2);
     3f0:	02 50       	subi	r16, 0x02	; 2
     3f2:	11 09       	sbc	r17, r1
     3f4:	71 f7       	brne	.-36     	; 0x3d2 <rcvr_datablock+0x30>
	sei();
     3f6:	78 94       	sei
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
	if (token != 0xFE) return 0;	/* If not valid data token, return with error */

	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
     3f8:	8f ef       	ldi	r24, 0xFF	; 255
     3fa:	b4 df       	rcall	.-152    	; 0x364 <xchg_spi>
	xchg_spi(0xFF);
     3fc:	8f ef       	ldi	r24, 0xFF	; 255
     3fe:	b2 df       	rcall	.-156    	; 0x364 <xchg_spi>

	return 1;						/* Return with success */
     400:	81 e0       	ldi	r24, 0x01	; 1
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	02 c0       	rjmp	.+4      	; 0x40a <rcvr_datablock+0x68>

	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
	if (token != 0xFE) return 0;	/* If not valid data token, return with error */
     406:	80 e0       	ldi	r24, 0x00	; 0
     408:	90 e0       	ldi	r25, 0x00	; 0
	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
	xchg_spi(0xFF);

	return 1;						/* Return with success */
}
     40a:	df 91       	pop	r29
     40c:	cf 91       	pop	r28
     40e:	1f 91       	pop	r17
     410:	0f 91       	pop	r16
     412:	08 95       	ret

00000414 <send_cmd>:
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
     414:	ff 92       	push	r15
     416:	0f 93       	push	r16
     418:	1f 93       	push	r17
     41a:	cf 93       	push	r28
     41c:	df 93       	push	r29
     41e:	c8 2f       	mov	r28, r24
     420:	d4 2f       	mov	r29, r20
     422:	15 2f       	mov	r17, r21
     424:	06 2f       	mov	r16, r22
     426:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
     428:	88 23       	and	r24, r24
     42a:	4c f4       	brge	.+18     	; 0x43e <send_cmd+0x2a>
		cmd &= 0x7F;
		res = send_cmd(CMD55, 0);
     42c:	40 e0       	ldi	r20, 0x00	; 0
     42e:	50 e0       	ldi	r21, 0x00	; 0
     430:	ba 01       	movw	r22, r20
     432:	87 e3       	ldi	r24, 0x37	; 55
     434:	ef df       	rcall	.-34     	; 0x414 <send_cmd>
		if (res > 1) return res;
     436:	82 30       	cpi	r24, 0x02	; 2
     438:	08 f0       	brcs	.+2      	; 0x43c <send_cmd+0x28>
     43a:	3c c0       	rjmp	.+120    	; 0x4b4 <send_cmd+0xa0>
{
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
		cmd &= 0x7F;
     43c:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
		if (res > 1) return res;
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
     43e:	cc 30       	cpi	r28, 0x0C	; 12
     440:	f1 f0       	breq	.+60     	; 0x47e <send_cmd+0x6a>
		deselect();
     442:	96 df       	rcall	.-212    	; 0x370 <deselect>
		if (!select()) return 0xFF;
     444:	99 df       	rcall	.-206    	; 0x378 <select>
     446:	89 2b       	or	r24, r25
     448:	c1 f0       	breq	.+48     	; 0x47a <send_cmd+0x66>
	}

	/* Send command packet */
	xchg_spi(0x40 | cmd);				/* Start + Command index */
     44a:	8c 2f       	mov	r24, r28
     44c:	80 64       	ori	r24, 0x40	; 64
     44e:	8a df       	rcall	.-236    	; 0x364 <xchg_spi>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
     450:	8f 2d       	mov	r24, r15
     452:	88 df       	rcall	.-240    	; 0x364 <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
     454:	80 2f       	mov	r24, r16
     456:	86 df       	rcall	.-244    	; 0x364 <xchg_spi>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
     458:	81 2f       	mov	r24, r17
     45a:	84 df       	rcall	.-248    	; 0x364 <xchg_spi>
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
     45c:	8d 2f       	mov	r24, r29
     45e:	82 df       	rcall	.-252    	; 0x364 <xchg_spi>
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
     460:	cc 23       	and	r28, r28
     462:	29 f1       	breq	.+74     	; 0x4ae <send_cmd+0x9a>
     464:	21 c0       	rjmp	.+66     	; 0x4a8 <send_cmd+0x94>
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
     466:	8f ef       	ldi	r24, 0xFF	; 255
     468:	7d df       	rcall	.-262    	; 0x364 <xchg_spi>
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
     46a:	ca e0       	ldi	r28, 0x0A	; 10

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		res = xchg_spi(0xFF);
     46c:	8f ef       	ldi	r24, 0xFF	; 255
     46e:	7a df       	rcall	.-268    	; 0x364 <xchg_spi>
	while ((res & 0x80) && --n);
     470:	88 23       	and	r24, r24
     472:	04 f5       	brge	.+64     	; 0x4b4 <send_cmd+0xa0>
     474:	c1 50       	subi	r28, 0x01	; 1
     476:	d1 f7       	brne	.-12     	; 0x46c <send_cmd+0x58>
     478:	1d c0       	rjmp	.+58     	; 0x4b4 <send_cmd+0xa0>
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
		deselect();
		if (!select()) return 0xFF;
     47a:	8f ef       	ldi	r24, 0xFF	; 255
     47c:	1b c0       	rjmp	.+54     	; 0x4b4 <send_cmd+0xa0>
	}

	/* Send command packet */
	xchg_spi(0x40 | cmd);				/* Start + Command index */
     47e:	8c e4       	ldi	r24, 0x4C	; 76
     480:	71 df       	rcall	.-286    	; 0x364 <xchg_spi>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
     482:	8f 2d       	mov	r24, r15
     484:	6f df       	rcall	.-290    	; 0x364 <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
     486:	80 2f       	mov	r24, r16
     488:	6d df       	rcall	.-294    	; 0x364 <xchg_spi>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
     48a:	81 2f       	mov	r24, r17
     48c:	6b df       	rcall	.-298    	; 0x364 <xchg_spi>
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
     48e:	8d 2f       	mov	r24, r29
     490:	69 df       	rcall	.-302    	; 0x364 <xchg_spi>
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);
     492:	81 e0       	ldi	r24, 0x01	; 1
     494:	67 df       	rcall	.-306    	; 0x364 <xchg_spi>

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
     496:	cc 30       	cpi	r28, 0x0C	; 12
     498:	31 f3       	breq	.-52     	; 0x466 <send_cmd+0x52>
     49a:	e7 cf       	rjmp	.-50     	; 0x46a <send_cmd+0x56>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);
     49c:	87 e8       	ldi	r24, 0x87	; 135
     49e:	62 df       	rcall	.-316    	; 0x364 <xchg_spi>
     4a0:	e4 cf       	rjmp	.-56     	; 0x46a <send_cmd+0x56>
     4a2:	81 e0       	ldi	r24, 0x01	; 1
     4a4:	5f df       	rcall	.-322    	; 0x364 <xchg_spi>
     4a6:	e1 cf       	rjmp	.-62     	; 0x46a <send_cmd+0x56>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
     4a8:	c8 30       	cpi	r28, 0x08	; 8
     4aa:	c1 f3       	breq	.-16     	; 0x49c <send_cmd+0x88>
     4ac:	fa cf       	rjmp	.-12     	; 0x4a2 <send_cmd+0x8e>
	xchg_spi(n);
     4ae:	85 e9       	ldi	r24, 0x95	; 149
     4b0:	59 df       	rcall	.-334    	; 0x364 <xchg_spi>
     4b2:	db cf       	rjmp	.-74     	; 0x46a <send_cmd+0x56>
	do
		res = xchg_spi(0xFF);
	while ((res & 0x80) && --n);

	return res;			/* Return with the response value */
}
     4b4:	df 91       	pop	r29
     4b6:	cf 91       	pop	r28
     4b8:	1f 91       	pop	r17
     4ba:	0f 91       	pop	r16
     4bc:	ff 90       	pop	r15
     4be:	08 95       	ret

000004c0 <xmit_datablock>:
static
int xmit_datablock (
const BYTE *buff,	/* 512 byte data block to be transmitted */
BYTE token			/* Data/Stop token */
)
{
     4c0:	1f 93       	push	r17
     4c2:	cf 93       	push	r28
     4c4:	df 93       	push	r29
     4c6:	ec 01       	movw	r28, r24
     4c8:	16 2f       	mov	r17, r22
)
{
	BYTE d;


	Timer2 = wt / 10;
     4ca:	92 e3       	ldi	r25, 0x32	; 50
     4cc:	90 93 ad 01 	sts	0x01AD, r25
	do{
		d = xchg_spi(0xFF);
     4d0:	8f ef       	ldi	r24, 0xFF	; 255
     4d2:	48 df       	rcall	.-368    	; 0x364 <xchg_spi>
	}while (d != 0xFF && Timer2);
     4d4:	8f 3f       	cpi	r24, 0xFF	; 255
     4d6:	31 f0       	breq	.+12     	; 0x4e4 <xmit_datablock+0x24>
     4d8:	90 91 ad 01 	lds	r25, 0x01AD
     4dc:	91 11       	cpse	r25, r1
     4de:	f8 cf       	rjmp	.-16     	; 0x4d0 <xmit_datablock+0x10>
)
{
	BYTE resp;


	if (!wait_ready(500)) return 0;
     4e0:	80 e0       	ldi	r24, 0x00	; 0
     4e2:	28 c0       	rjmp	.+80     	; 0x534 <xmit_datablock+0x74>

	xchg_spi(token);					/* Xmit data token */
     4e4:	81 2f       	mov	r24, r17
     4e6:	3e df       	rcall	.-388    	; 0x364 <xchg_spi>
	if (token != 0xFD) {	/* Is data token */
     4e8:	1d 3f       	cpi	r17, 0xFD	; 253
     4ea:	11 f1       	breq	.+68     	; 0x530 <xmit_datablock+0x70>
void xmit_spi_multi (
const BYTE *p,	/* Data block to be sent */
UINT cnt		/* Size of data block (must be multiple of 2) */
)
{
	cli();
     4ec:	f8 94       	cli
     4ee:	9e 01       	movw	r18, r28
     4f0:	3e 5f       	subi	r19, 0xFE	; 254
	do {
		SPDR = *p++; loop_until_bit_is_set(SPSR,SPIF);
     4f2:	88 81       	ld	r24, Y
     4f4:	8e bd       	out	0x2e, r24	; 46
     4f6:	0d b4       	in	r0, 0x2d	; 45
     4f8:	07 fe       	sbrs	r0, 7
     4fa:	fd cf       	rjmp	.-6      	; 0x4f6 <xmit_datablock+0x36>
     4fc:	22 96       	adiw	r28, 0x02	; 2
     4fe:	fe 01       	movw	r30, r28
     500:	31 97       	sbiw	r30, 0x01	; 1
		SPDR = *p++; loop_until_bit_is_set(SPSR,SPIF);
     502:	80 81       	ld	r24, Z
     504:	8e bd       	out	0x2e, r24	; 46
     506:	0d b4       	in	r0, 0x2d	; 45
     508:	07 fe       	sbrs	r0, 7
     50a:	fd cf       	rjmp	.-6      	; 0x506 <xmit_datablock+0x46>
	} while (cnt -= 2);
     50c:	2c 17       	cp	r18, r28
     50e:	3d 07       	cpc	r19, r29
     510:	81 f7       	brne	.-32     	; 0x4f2 <xmit_datablock+0x32>
	sei();
     512:	78 94       	sei
	if (!wait_ready(500)) return 0;

	xchg_spi(token);					/* Xmit data token */
	if (token != 0xFD) {	/* Is data token */
		xmit_spi_multi(buff, CLUSTERSIZE);		/* Xmit the data block to the MMC */
		xchg_spi(0xFF);					/* CRC (Dummy) */
     514:	8f ef       	ldi	r24, 0xFF	; 255
     516:	26 df       	rcall	.-436    	; 0x364 <xchg_spi>
		xchg_spi(0xFF);
     518:	8f ef       	ldi	r24, 0xFF	; 255
     51a:	24 df       	rcall	.-440    	; 0x364 <xchg_spi>
		resp = xchg_spi(0xFF);			/* Reveive data response */
     51c:	8f ef       	ldi	r24, 0xFF	; 255
     51e:	22 df       	rcall	.-444    	; 0x364 <xchg_spi>
		if ((resp & 0x1F) != 0x05)		/* If not accepted, return with error */
     520:	28 2f       	mov	r18, r24
     522:	2f 71       	andi	r18, 0x1F	; 31
     524:	81 e0       	ldi	r24, 0x01	; 1
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	25 30       	cpi	r18, 0x05	; 5
     52a:	21 f0       	breq	.+8      	; 0x534 <xmit_datablock+0x74>
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	02 c0       	rjmp	.+4      	; 0x534 <xmit_datablock+0x74>
		return 0;
	}

	return 1;
     530:	81 e0       	ldi	r24, 0x01	; 1
     532:	90 e0       	ldi	r25, 0x00	; 0
}
     534:	df 91       	pop	r29
     536:	cf 91       	pop	r28
     538:	1f 91       	pop	r17
     53a:	08 95       	ret

0000053c <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE pdrv		/* Physical drive number (0) */
)
{
     53c:	cf 92       	push	r12
     53e:	df 92       	push	r13
     540:	ef 92       	push	r14
     542:	ff 92       	push	r15
     544:	0f 93       	push	r16
     546:	1f 93       	push	r17
     548:	cf 93       	push	r28
     54a:	df 93       	push	r29
     54c:	00 d0       	rcall	.+0      	; 0x54e <disk_initialize+0x12>
     54e:	00 d0       	rcall	.+0      	; 0x550 <disk_initialize+0x14>
     550:	cd b7       	in	r28, 0x3d	; 61
     552:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
     554:	81 11       	cpse	r24, r1
     556:	9b c0       	rjmp	.+310    	; 0x68e <disk_initialize+0x152>
	power_off();						/* Turn off the socket power to reset the card */
     558:	ff de       	rcall	.-514    	; 0x358 <power_off>
	if (Stat & (1<<STA_NODISK)) return Stat;	/* No card in the socket */
     55a:	80 91 00 01 	lds	r24, 0x0100
     55e:	82 ff       	sbrs	r24, 2
     560:	03 c0       	rjmp	.+6      	; 0x568 <disk_initialize+0x2c>
     562:	80 91 00 01 	lds	r24, 0x0100
     566:	9e c0       	rjmp	.+316    	; 0x6a4 <disk_initialize+0x168>

static
void power_on (void)
{
	//PORTB |= (1<<PORTB7) | (1<<PORTB5) | (1<<PORTB4);	/* Configure SCK/MOSI/CS as output */
	DDRB |= (1<<PORTB7) | (1<<PORTB5) | (1<<PORTB4);
     568:	84 b1       	in	r24, 0x04	; 4
     56a:	80 6b       	ori	r24, 0xB0	; 176
     56c:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1<<PORTB6);
     56e:	26 98       	cbi	0x04, 6	; 4
	CS_HIGH();
     570:	2c 9a       	sbi	0x05, 4	; 5

	SPSR = 0x01;			/* SPI 2x mode */
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	8d bd       	out	0x2d, r24	; 45
	SPCR = 0x52;			/* Enable SPI function in mode 0 */
     576:	82 e5       	ldi	r24, 0x52	; 82
     578:	8c bd       	out	0x2c, r24	; 44
     57a:	1a e0       	ldi	r17, 0x0A	; 10
	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
	power_off();						/* Turn off the socket power to reset the card */
	if (Stat & (1<<STA_NODISK)) return Stat;	/* No card in the socket */
	power_on();							/* Turn on the socket power */
//	FCLK_SLOW();
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */
     57c:	8f ef       	ldi	r24, 0xFF	; 255
     57e:	f2 de       	rcall	.-540    	; 0x364 <xchg_spi>
     580:	11 50       	subi	r17, 0x01	; 1
     582:	e1 f7       	brne	.-8      	; 0x57c <disk_initialize+0x40>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
     584:	40 e0       	ldi	r20, 0x00	; 0
     586:	50 e0       	ldi	r21, 0x00	; 0
     588:	ba 01       	movw	r22, r20
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	43 df       	rcall	.-378    	; 0x414 <send_cmd>
     58e:	81 30       	cpi	r24, 0x01	; 1
     590:	09 f0       	breq	.+2      	; 0x594 <disk_initialize+0x58>
     592:	84 c0       	rjmp	.+264    	; 0x69c <disk_initialize+0x160>
		Timer1 = 100;						/* Initialization timeout of 1000 msec */
     594:	84 e6       	ldi	r24, 0x64	; 100
     596:	80 93 ae 01 	sts	0x01AE, r24
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
     59a:	4a ea       	ldi	r20, 0xAA	; 170
     59c:	51 e0       	ldi	r21, 0x01	; 1
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	70 e0       	ldi	r23, 0x00	; 0
     5a2:	88 e0       	ldi	r24, 0x08	; 8
     5a4:	37 df       	rcall	.-402    	; 0x414 <send_cmd>
     5a6:	81 30       	cpi	r24, 0x01	; 1
     5a8:	09 f0       	breq	.+2      	; 0x5ac <disk_initialize+0x70>
     5aa:	3f c0       	rjmp	.+126    	; 0x62a <disk_initialize+0xee>
     5ac:	ce 01       	movw	r24, r28
     5ae:	01 96       	adiw	r24, 0x01	; 1
     5b0:	6c 01       	movw	r12, r24
     5b2:	7e 01       	movw	r14, r28
     5b4:	95 e0       	ldi	r25, 0x05	; 5
     5b6:	e9 0e       	add	r14, r25
     5b8:	f1 1c       	adc	r15, r1
     5ba:	86 01       	movw	r16, r12
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
     5bc:	8f ef       	ldi	r24, 0xFF	; 255
     5be:	d2 de       	rcall	.-604    	; 0x364 <xchg_spi>
     5c0:	f8 01       	movw	r30, r16
     5c2:	81 93       	st	Z+, r24
     5c4:	8f 01       	movw	r16, r30
     5c6:	ee 15       	cp	r30, r14
     5c8:	ff 05       	cpc	r31, r15
     5ca:	c1 f7       	brne	.-16     	; 0x5bc <disk_initialize+0x80>
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
     5cc:	8b 81       	ldd	r24, Y+3	; 0x03
     5ce:	81 30       	cpi	r24, 0x01	; 1
     5d0:	09 f0       	breq	.+2      	; 0x5d4 <disk_initialize+0x98>
     5d2:	64 c0       	rjmp	.+200    	; 0x69c <disk_initialize+0x160>
     5d4:	8c 81       	ldd	r24, Y+4	; 0x04
     5d6:	8a 3a       	cpi	r24, 0xAA	; 170
     5d8:	09 f0       	breq	.+2      	; 0x5dc <disk_initialize+0xa0>
     5da:	60 c0       	rjmp	.+192    	; 0x69c <disk_initialize+0x160>
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
     5dc:	80 91 ae 01 	lds	r24, 0x01AE
     5e0:	88 23       	and	r24, r24
     5e2:	41 f0       	breq	.+16     	; 0x5f4 <disk_initialize+0xb8>
     5e4:	40 e0       	ldi	r20, 0x00	; 0
     5e6:	50 e0       	ldi	r21, 0x00	; 0
     5e8:	60 e0       	ldi	r22, 0x00	; 0
     5ea:	70 e4       	ldi	r23, 0x40	; 64
     5ec:	89 ea       	ldi	r24, 0xA9	; 169
     5ee:	12 df       	rcall	.-476    	; 0x414 <send_cmd>
     5f0:	81 11       	cpse	r24, r1
     5f2:	f4 cf       	rjmp	.-24     	; 0x5dc <disk_initialize+0xa0>
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
     5f4:	80 91 ae 01 	lds	r24, 0x01AE
     5f8:	88 23       	and	r24, r24
     5fa:	09 f4       	brne	.+2      	; 0x5fe <disk_initialize+0xc2>
     5fc:	4f c0       	rjmp	.+158    	; 0x69c <disk_initialize+0x160>
     5fe:	40 e0       	ldi	r20, 0x00	; 0
     600:	50 e0       	ldi	r21, 0x00	; 0
     602:	ba 01       	movw	r22, r20
     604:	8a e3       	ldi	r24, 0x3A	; 58
     606:	06 df       	rcall	.-500    	; 0x414 <send_cmd>
     608:	81 11       	cpse	r24, r1
     60a:	48 c0       	rjmp	.+144    	; 0x69c <disk_initialize+0x160>
     60c:	76 01       	movw	r14, r12
     60e:	14 e0       	ldi	r17, 0x04	; 4
     610:	1c 0d       	add	r17, r12
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
     612:	8f ef       	ldi	r24, 0xFF	; 255
     614:	a7 de       	rcall	.-690    	; 0x364 <xchg_spi>
     616:	f7 01       	movw	r30, r14
     618:	81 93       	st	Z+, r24
     61a:	7f 01       	movw	r14, r30
     61c:	1e 13       	cpse	r17, r30
     61e:	f9 cf       	rjmp	.-14     	; 0x612 <disk_initialize+0xd6>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
     620:	89 81       	ldd	r24, Y+1	; 0x01
     622:	86 fd       	sbrc	r24, 6
     624:	36 c0       	rjmp	.+108    	; 0x692 <disk_initialize+0x156>
     626:	84 e0       	ldi	r24, 0x04	; 4
     628:	35 c0       	rjmp	.+106    	; 0x694 <disk_initialize+0x158>
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
     62a:	40 e0       	ldi	r20, 0x00	; 0
     62c:	50 e0       	ldi	r21, 0x00	; 0
     62e:	ba 01       	movw	r22, r20
     630:	89 ea       	ldi	r24, 0xA9	; 169
     632:	f0 de       	rcall	.-544    	; 0x414 <send_cmd>
     634:	82 30       	cpi	r24, 0x02	; 2
     636:	18 f0       	brcs	.+6      	; 0x63e <disk_initialize+0x102>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
     638:	01 e0       	ldi	r16, 0x01	; 1
     63a:	11 e0       	ldi	r17, 0x01	; 1
     63c:	02 c0       	rjmp	.+4      	; 0x642 <disk_initialize+0x106>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
     63e:	02 e0       	ldi	r16, 0x02	; 2
     640:	19 ea       	ldi	r17, 0xA9	; 169
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
			}
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
     642:	90 91 ae 01 	lds	r25, 0x01AE
     646:	99 23       	and	r25, r25
     648:	39 f0       	breq	.+14     	; 0x658 <disk_initialize+0x11c>
     64a:	40 e0       	ldi	r20, 0x00	; 0
     64c:	50 e0       	ldi	r21, 0x00	; 0
     64e:	ba 01       	movw	r22, r20
     650:	81 2f       	mov	r24, r17
     652:	e0 de       	rcall	.-576    	; 0x414 <send_cmd>
     654:	81 11       	cpse	r24, r1
     656:	f5 cf       	rjmp	.-22     	; 0x642 <disk_initialize+0x106>
			if (!Timer1 || send_cmd(CMD16, CLUSTERSIZE) != 0)	/* Set R/W block length to 512 */
     658:	80 91 ae 01 	lds	r24, 0x01AE
     65c:	88 23       	and	r24, r24
     65e:	f1 f0       	breq	.+60     	; 0x69c <disk_initialize+0x160>
     660:	40 e0       	ldi	r20, 0x00	; 0
     662:	52 e0       	ldi	r21, 0x02	; 2
     664:	60 e0       	ldi	r22, 0x00	; 0
     666:	70 e0       	ldi	r23, 0x00	; 0
     668:	80 e1       	ldi	r24, 0x10	; 16
     66a:	d4 de       	rcall	.-600    	; 0x414 <send_cmd>
     66c:	81 11       	cpse	r24, r1
     66e:	16 c0       	rjmp	.+44     	; 0x69c <disk_initialize+0x160>
				ty = 0;
		}
	}
	CardType = ty;
     670:	00 93 ac 01 	sts	0x01AC, r16
	deselect();
     674:	7d de       	rcall	.-774    	; 0x370 <deselect>

	if (ty) {			/* Initialization succeded */
     676:	00 23       	and	r16, r16
     678:	31 f0       	breq	.+12     	; 0x686 <disk_initialize+0x14a>
		Stat &= ~STA_NOINIT;		/* Clear STA_NOINIT */
     67a:	80 91 00 01 	lds	r24, 0x0100
     67e:	8e 7f       	andi	r24, 0xFE	; 254
     680:	80 93 00 01 	sts	0x0100, r24
     684:	01 c0       	rjmp	.+2      	; 0x688 <disk_initialize+0x14c>
//		FCLK_FAST();
	} else {			/* Initialization failed */
		power_off();
     686:	68 de       	rcall	.-816    	; 0x358 <power_off>
	}

	return Stat;
     688:	80 91 00 01 	lds	r24, 0x0100
     68c:	0b c0       	rjmp	.+22     	; 0x6a4 <disk_initialize+0x168>
)
{
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
     68e:	81 e0       	ldi	r24, 0x01	; 1
     690:	09 c0       	rjmp	.+18     	; 0x6a4 <disk_initialize+0x168>
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
     692:	8c e0       	ldi	r24, 0x0C	; 12
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, CLUSTERSIZE) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
     694:	80 93 ac 01 	sts	0x01AC, r24
	deselect();
     698:	6b de       	rcall	.-810    	; 0x370 <deselect>
     69a:	ef cf       	rjmp	.-34     	; 0x67a <disk_initialize+0x13e>
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, CLUSTERSIZE) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
     69c:	10 92 ac 01 	sts	0x01AC, r1
	deselect();
     6a0:	67 de       	rcall	.-818    	; 0x370 <deselect>
     6a2:	f1 cf       	rjmp	.-30     	; 0x686 <disk_initialize+0x14a>
	} else {			/* Initialization failed */
		power_off();
	}

	return Stat;
}
     6a4:	0f 90       	pop	r0
     6a6:	0f 90       	pop	r0
     6a8:	0f 90       	pop	r0
     6aa:	0f 90       	pop	r0
     6ac:	df 91       	pop	r29
     6ae:	cf 91       	pop	r28
     6b0:	1f 91       	pop	r17
     6b2:	0f 91       	pop	r16
     6b4:	ff 90       	pop	r15
     6b6:	ef 90       	pop	r14
     6b8:	df 90       	pop	r13
     6ba:	cf 90       	pop	r12
     6bc:	08 95       	ret

000006be <disk_status>:

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
     6be:	81 11       	cpse	r24, r1
     6c0:	03 c0       	rjmp	.+6      	; 0x6c8 <disk_status+0xa>
	return Stat;
     6c2:	80 91 00 01 	lds	r24, 0x0100
     6c6:	08 95       	ret

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
     6c8:	81 e0       	ldi	r24, 0x01	; 1
	return Stat;
}
     6ca:	08 95       	ret

000006cc <disk_read>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
     6cc:	ff 92       	push	r15
     6ce:	0f 93       	push	r16
     6d0:	1f 93       	push	r17
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	eb 01       	movw	r28, r22
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
     6d8:	81 11       	cpse	r24, r1
     6da:	3f c0       	rjmp	.+126    	; 0x75a <disk_read+0x8e>
     6dc:	01 15       	cp	r16, r1
     6de:	11 05       	cpc	r17, r1
     6e0:	09 f4       	brne	.+2      	; 0x6e4 <disk_read+0x18>
     6e2:	3d c0       	rjmp	.+122    	; 0x75e <disk_read+0x92>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     6e4:	80 91 00 01 	lds	r24, 0x0100
     6e8:	80 fd       	sbrc	r24, 0
     6ea:	3b c0       	rjmp	.+118    	; 0x762 <disk_read+0x96>

	if (!(CardType & CT_BLOCK)) sector *= CLUSTERSIZE;	/* Convert to byte address if needed */
     6ec:	80 91 ac 01 	lds	r24, 0x01AC
     6f0:	83 fd       	sbrc	r24, 3
     6f2:	09 c0       	rjmp	.+18     	; 0x706 <disk_read+0x3a>
     6f4:	01 2e       	mov	r0, r17
     6f6:	19 e0       	ldi	r17, 0x09	; 9
     6f8:	22 0f       	add	r18, r18
     6fa:	33 1f       	adc	r19, r19
     6fc:	44 1f       	adc	r20, r20
     6fe:	55 1f       	adc	r21, r21
     700:	1a 95       	dec	r17
     702:	d1 f7       	brne	.-12     	; 0x6f8 <disk_read+0x2c>
     704:	10 2d       	mov	r17, r0

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
     706:	02 30       	cpi	r16, 0x02	; 2
     708:	11 05       	cpc	r17, r1
     70a:	28 f4       	brcc	.+10     	; 0x716 <disk_read+0x4a>
     70c:	0f 2e       	mov	r0, r31
     70e:	f1 e1       	ldi	r31, 0x11	; 17
     710:	ff 2e       	mov	r15, r31
     712:	f0 2d       	mov	r31, r0
     714:	04 c0       	rjmp	.+8      	; 0x71e <disk_read+0x52>
     716:	0f 2e       	mov	r0, r31
     718:	f2 e1       	ldi	r31, 0x12	; 18
     71a:	ff 2e       	mov	r15, r31
     71c:	f0 2d       	mov	r31, r0
	if (send_cmd(cmd, sector) == 0) {
     71e:	ba 01       	movw	r22, r20
     720:	a9 01       	movw	r20, r18
     722:	8f 2d       	mov	r24, r15
     724:	77 de       	rcall	.-786    	; 0x414 <send_cmd>
     726:	81 11       	cpse	r24, r1
     728:	12 c0       	rjmp	.+36     	; 0x74e <disk_read+0x82>
		do {
			if (!rcvr_datablock(buff, CLUSTERSIZE)) break;
     72a:	60 e0       	ldi	r22, 0x00	; 0
     72c:	72 e0       	ldi	r23, 0x02	; 2
     72e:	ce 01       	movw	r24, r28
     730:	38 de       	rcall	.-912    	; 0x3a2 <rcvr_datablock>
     732:	89 2b       	or	r24, r25
     734:	21 f0       	breq	.+8      	; 0x73e <disk_read+0x72>
			buff += CLUSTERSIZE;
     736:	de 5f       	subi	r29, 0xFE	; 254
		} while (--count);
     738:	01 50       	subi	r16, 0x01	; 1
     73a:	11 09       	sbc	r17, r1
     73c:	b1 f7       	brne	.-20     	; 0x72a <disk_read+0x5e>
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
     73e:	82 e1       	ldi	r24, 0x12	; 18
     740:	f8 12       	cpse	r15, r24
     742:	05 c0       	rjmp	.+10     	; 0x74e <disk_read+0x82>
     744:	40 e0       	ldi	r20, 0x00	; 0
     746:	50 e0       	ldi	r21, 0x00	; 0
     748:	ba 01       	movw	r22, r20
     74a:	8c e0       	ldi	r24, 0x0C	; 12
     74c:	63 de       	rcall	.-826    	; 0x414 <send_cmd>
	}
	deselect();
     74e:	10 de       	rcall	.-992    	; 0x370 <deselect>

	return count ? RES_ERROR : RES_OK;
     750:	81 e0       	ldi	r24, 0x01	; 1
     752:	01 2b       	or	r16, r17
     754:	39 f4       	brne	.+14     	; 0x764 <disk_read+0x98>
     756:	80 e0       	ldi	r24, 0x00	; 0
     758:	05 c0       	rjmp	.+10     	; 0x764 <disk_read+0x98>
)
{
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
     75a:	84 e0       	ldi	r24, 0x04	; 4
     75c:	03 c0       	rjmp	.+6      	; 0x764 <disk_read+0x98>
     75e:	84 e0       	ldi	r24, 0x04	; 4
     760:	01 c0       	rjmp	.+2      	; 0x764 <disk_read+0x98>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     762:	83 e0       	ldi	r24, 0x03	; 3
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
     764:	df 91       	pop	r29
     766:	cf 91       	pop	r28
     768:	1f 91       	pop	r17
     76a:	0f 91       	pop	r16
     76c:	ff 90       	pop	r15
     76e:	08 95       	ret

00000770 <disk_write>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
     770:	cf 92       	push	r12
     772:	df 92       	push	r13
     774:	ef 92       	push	r14
     776:	ff 92       	push	r15
     778:	0f 93       	push	r16
     77a:	1f 93       	push	r17
     77c:	cf 93       	push	r28
     77e:	df 93       	push	r29
     780:	eb 01       	movw	r28, r22
     782:	69 01       	movw	r12, r18
     784:	7a 01       	movw	r14, r20
	if (pdrv || !count) return RES_PARERR;
     786:	81 11       	cpse	r24, r1
     788:	51 c0       	rjmp	.+162    	; 0x82c <disk_write+0xbc>
     78a:	01 15       	cp	r16, r1
     78c:	11 05       	cpc	r17, r1
     78e:	09 f4       	brne	.+2      	; 0x792 <disk_write+0x22>
     790:	4f c0       	rjmp	.+158    	; 0x830 <disk_write+0xc0>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     792:	80 91 00 01 	lds	r24, 0x0100
     796:	80 fd       	sbrc	r24, 0
     798:	4d c0       	rjmp	.+154    	; 0x834 <disk_write+0xc4>
	if (Stat & STA_PROTECT) return RES_WRPRT;
     79a:	80 91 00 01 	lds	r24, 0x0100
     79e:	82 fd       	sbrc	r24, 2
     7a0:	4b c0       	rjmp	.+150    	; 0x838 <disk_write+0xc8>

	if (!(CardType & CT_BLOCK)) sector *= CLUSTERSIZE;	/* Convert to byte address if needed */
     7a2:	80 91 ac 01 	lds	r24, 0x01AC
     7a6:	83 fd       	sbrc	r24, 3
     7a8:	09 c0       	rjmp	.+18     	; 0x7bc <disk_write+0x4c>
     7aa:	0b 2e       	mov	r0, r27
     7ac:	b9 e0       	ldi	r27, 0x09	; 9
     7ae:	cc 0c       	add	r12, r12
     7b0:	dd 1c       	adc	r13, r13
     7b2:	ee 1c       	adc	r14, r14
     7b4:	ff 1c       	adc	r15, r15
     7b6:	ba 95       	dec	r27
     7b8:	d1 f7       	brne	.-12     	; 0x7ae <disk_write+0x3e>
     7ba:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block write */
     7bc:	01 30       	cpi	r16, 0x01	; 1
     7be:	11 05       	cpc	r17, r1
     7c0:	89 f4       	brne	.+34     	; 0x7e4 <disk_write+0x74>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
     7c2:	b7 01       	movw	r22, r14
     7c4:	a6 01       	movw	r20, r12
     7c6:	88 e1       	ldi	r24, 0x18	; 24
     7c8:	25 de       	rcall	.-950    	; 0x414 <send_cmd>
     7ca:	81 11       	cpse	r24, r1
     7cc:	29 c0       	rjmp	.+82     	; 0x820 <disk_write+0xb0>
			&& xmit_datablock(buff, 0xFE))
     7ce:	6e ef       	ldi	r22, 0xFE	; 254
     7d0:	ce 01       	movw	r24, r28
     7d2:	76 de       	rcall	.-788    	; 0x4c0 <xmit_datablock>
     7d4:	31 e0       	ldi	r19, 0x01	; 1
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	89 2b       	or	r24, r25
     7da:	09 f0       	breq	.+2      	; 0x7de <disk_write+0x6e>
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	03 2f       	mov	r16, r19
     7e0:	12 2f       	mov	r17, r18
     7e2:	1e c0       	rjmp	.+60     	; 0x820 <disk_write+0xb0>
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
     7e4:	86 70       	andi	r24, 0x06	; 6
     7e6:	29 f0       	breq	.+10     	; 0x7f2 <disk_write+0x82>
     7e8:	a8 01       	movw	r20, r16
     7ea:	60 e0       	ldi	r22, 0x00	; 0
     7ec:	70 e0       	ldi	r23, 0x00	; 0
     7ee:	87 e9       	ldi	r24, 0x97	; 151
     7f0:	11 de       	rcall	.-990    	; 0x414 <send_cmd>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
     7f2:	b7 01       	movw	r22, r14
     7f4:	a6 01       	movw	r20, r12
     7f6:	89 e1       	ldi	r24, 0x19	; 25
     7f8:	0d de       	rcall	.-998    	; 0x414 <send_cmd>
     7fa:	81 11       	cpse	r24, r1
     7fc:	11 c0       	rjmp	.+34     	; 0x820 <disk_write+0xb0>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
     7fe:	6c ef       	ldi	r22, 0xFC	; 252
     800:	ce 01       	movw	r24, r28
     802:	5e de       	rcall	.-836    	; 0x4c0 <xmit_datablock>
     804:	89 2b       	or	r24, r25
     806:	21 f0       	breq	.+8      	; 0x810 <disk_write+0xa0>
				buff += CLUSTERSIZE;
     808:	de 5f       	subi	r29, 0xFE	; 254
			} while (--count);
     80a:	01 50       	subi	r16, 0x01	; 1
     80c:	11 09       	sbc	r17, r1
     80e:	b9 f7       	brne	.-18     	; 0x7fe <disk_write+0x8e>
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
     810:	6d ef       	ldi	r22, 0xFD	; 253
     812:	80 e0       	ldi	r24, 0x00	; 0
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	54 de       	rcall	.-856    	; 0x4c0 <xmit_datablock>
     818:	89 2b       	or	r24, r25
     81a:	11 f4       	brne	.+4      	; 0x820 <disk_write+0xb0>
				count = 1;
     81c:	01 e0       	ldi	r16, 0x01	; 1
     81e:	10 e0       	ldi	r17, 0x00	; 0
		}
	}
	deselect();
     820:	a7 dd       	rcall	.-1202   	; 0x370 <deselect>

	return count ? RES_ERROR : RES_OK;
     822:	81 e0       	ldi	r24, 0x01	; 1
     824:	01 2b       	or	r16, r17
     826:	49 f4       	brne	.+18     	; 0x83a <disk_write+0xca>
     828:	80 e0       	ldi	r24, 0x00	; 0
     82a:	07 c0       	rjmp	.+14     	; 0x83a <disk_write+0xca>
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
	if (pdrv || !count) return RES_PARERR;
     82c:	84 e0       	ldi	r24, 0x04	; 4
     82e:	05 c0       	rjmp	.+10     	; 0x83a <disk_write+0xca>
     830:	84 e0       	ldi	r24, 0x04	; 4
     832:	03 c0       	rjmp	.+6      	; 0x83a <disk_write+0xca>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     834:	83 e0       	ldi	r24, 0x03	; 3
     836:	01 c0       	rjmp	.+2      	; 0x83a <disk_write+0xca>
	if (Stat & STA_PROTECT) return RES_WRPRT;
     838:	82 e0       	ldi	r24, 0x02	; 2
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
     83a:	df 91       	pop	r29
     83c:	cf 91       	pop	r28
     83e:	1f 91       	pop	r17
     840:	0f 91       	pop	r16
     842:	ff 90       	pop	r15
     844:	ef 90       	pop	r14
     846:	df 90       	pop	r13
     848:	cf 90       	pop	r12
     84a:	08 95       	ret

0000084c <disk_ioctl>:
DRESULT disk_ioctl (
	BYTE pdrv,		/* Physical drive nmuber (0) */
	BYTE cmd,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
     84c:	ef 92       	push	r14
     84e:	ff 92       	push	r15
     850:	0f 93       	push	r16
     852:	1f 93       	push	r17
     854:	cf 93       	push	r28
     856:	df 93       	push	r29
     858:	cd b7       	in	r28, 0x3d	; 61
     85a:	de b7       	in	r29, 0x3e	; 62
     85c:	60 97       	sbiw	r28, 0x10	; 16
     85e:	0f b6       	in	r0, 0x3f	; 63
     860:	f8 94       	cli
     862:	de bf       	out	0x3e, r29	; 62
     864:	0f be       	out	0x3f, r0	; 63
     866:	cd bf       	out	0x3d, r28	; 61
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
     868:	81 11       	cpse	r24, r1
     86a:	7c c1       	rjmp	.+760    	; 0xb64 <disk_ioctl+0x318>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
     86c:	80 91 00 01 	lds	r24, 0x0100
     870:	80 fd       	sbrc	r24, 0
     872:	7a c1       	rjmp	.+756    	; 0xb68 <disk_ioctl+0x31c>
     874:	7a 01       	movw	r14, r20

	switch (cmd) {
     876:	06 2f       	mov	r16, r22
     878:	10 e0       	ldi	r17, 0x00	; 0
     87a:	07 33       	cpi	r16, 0x37	; 55
     87c:	11 05       	cpc	r17, r1
     87e:	08 f0       	brcs	.+2      	; 0x882 <disk_ioctl+0x36>
     880:	59 c1       	rjmp	.+690    	; 0xb34 <disk_ioctl+0x2e8>
     882:	f8 01       	movw	r30, r16
     884:	ea 5b       	subi	r30, 0xBA	; 186
     886:	ff 4f       	sbci	r31, 0xFF	; 255
     888:	0c 94 ab 1c 	jmp	0x3956	; 0x3956 <__tablejump2__>
	case CTRL_SYNC :		/* Make sure that no pending write process. Do not remove this or written sector might not left updated. */
		if (select()) res = RES_OK;
     88c:	75 dd       	rcall	.-1302   	; 0x378 <select>
     88e:	11 e0       	ldi	r17, 0x01	; 1
     890:	89 2b       	or	r24, r25
     892:	09 f4       	brne	.+2      	; 0x896 <disk_ioctl+0x4a>
     894:	64 c1       	rjmp	.+712    	; 0xb5e <disk_ioctl+0x312>
     896:	10 e0       	ldi	r17, 0x00	; 0
     898:	62 c1       	rjmp	.+708    	; 0xb5e <disk_ioctl+0x312>
		break;

	case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
     89a:	40 e0       	ldi	r20, 0x00	; 0
     89c:	50 e0       	ldi	r21, 0x00	; 0
     89e:	ba 01       	movw	r22, r20
     8a0:	89 e0       	ldi	r24, 0x09	; 9
     8a2:	b8 dd       	rcall	.-1168   	; 0x414 <send_cmd>
     8a4:	81 11       	cpse	r24, r1
     8a6:	48 c1       	rjmp	.+656    	; 0xb38 <disk_ioctl+0x2ec>
     8a8:	60 e1       	ldi	r22, 0x10	; 16
     8aa:	70 e0       	ldi	r23, 0x00	; 0
     8ac:	ce 01       	movw	r24, r28
     8ae:	01 96       	adiw	r24, 0x01	; 1
     8b0:	78 dd       	rcall	.-1296   	; 0x3a2 <rcvr_datablock>
     8b2:	89 2b       	or	r24, r25
     8b4:	09 f4       	brne	.+2      	; 0x8b8 <disk_ioctl+0x6c>
     8b6:	42 c1       	rjmp	.+644    	; 0xb3c <disk_ioctl+0x2f0>
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
     8b8:	89 81       	ldd	r24, Y+1	; 0x01
     8ba:	82 95       	swap	r24
     8bc:	86 95       	lsr	r24
     8be:	86 95       	lsr	r24
     8c0:	83 70       	andi	r24, 0x03	; 3
     8c2:	81 30       	cpi	r24, 0x01	; 1
     8c4:	31 f5       	brne	.+76     	; 0x912 <disk_ioctl+0xc6>
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
     8c6:	88 85       	ldd	r24, Y+8	; 0x08
     8c8:	8f 73       	andi	r24, 0x3F	; 63
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	a0 e0       	ldi	r26, 0x00	; 0
     8ce:	b0 e0       	ldi	r27, 0x00	; 0
     8d0:	dc 01       	movw	r26, r24
     8d2:	99 27       	eor	r25, r25
     8d4:	88 27       	eor	r24, r24
     8d6:	01 96       	adiw	r24, 0x01	; 1
     8d8:	a1 1d       	adc	r26, r1
     8da:	b1 1d       	adc	r27, r1
     8dc:	29 85       	ldd	r18, Y+9	; 0x09
     8de:	30 e0       	ldi	r19, 0x00	; 0
     8e0:	32 2f       	mov	r19, r18
     8e2:	22 27       	eor	r18, r18
     8e4:	4a 85       	ldd	r20, Y+10	; 0x0a
     8e6:	24 0f       	add	r18, r20
     8e8:	31 1d       	adc	r19, r1
     8ea:	82 0f       	add	r24, r18
     8ec:	93 1f       	adc	r25, r19
     8ee:	a1 1d       	adc	r26, r1
     8f0:	b1 1d       	adc	r27, r1
				*(DWORD*)buff = csize << 10;
     8f2:	07 2e       	mov	r0, r23
     8f4:	7a e0       	ldi	r23, 0x0A	; 10
     8f6:	88 0f       	add	r24, r24
     8f8:	99 1f       	adc	r25, r25
     8fa:	aa 1f       	adc	r26, r26
     8fc:	bb 1f       	adc	r27, r27
     8fe:	7a 95       	dec	r23
     900:	d1 f7       	brne	.-12     	; 0x8f6 <disk_ioctl+0xaa>
     902:	70 2d       	mov	r23, r0
     904:	f7 01       	movw	r30, r14
     906:	80 83       	st	Z, r24
     908:	91 83       	std	Z+1, r25	; 0x01
     90a:	a2 83       	std	Z+2, r26	; 0x02
     90c:	b3 83       	std	Z+3, r27	; 0x03
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
			}
			res = RES_OK;
     90e:	10 e0       	ldi	r17, 0x00	; 0
     910:	26 c1       	rjmp	.+588    	; 0xb5e <disk_ioctl+0x312>
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
     912:	89 85       	ldd	r24, Y+9	; 0x09
     914:	82 95       	swap	r24
     916:	86 95       	lsr	r24
     918:	86 95       	lsr	r24
     91a:	83 70       	andi	r24, 0x03	; 3
     91c:	28 85       	ldd	r18, Y+8	; 0x08
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	f4 e0       	ldi	r31, 0x04	; 4
     922:	2f 9f       	mul	r18, r31
     924:	80 0d       	add	r24, r0
     926:	91 1d       	adc	r25, r1
     928:	11 24       	eor	r1, r1
     92a:	9c 01       	movw	r18, r24
     92c:	2f 5f       	subi	r18, 0xFF	; 255
     92e:	3f 4f       	sbci	r19, 0xFF	; 255
     930:	8f 81       	ldd	r24, Y+7	; 0x07
     932:	83 70       	andi	r24, 0x03	; 3
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	98 2f       	mov	r25, r24
     938:	88 27       	eor	r24, r24
     93a:	99 0f       	add	r25, r25
     93c:	99 0f       	add	r25, r25
     93e:	82 0f       	add	r24, r18
     940:	93 1f       	adc	r25, r19
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
     946:	3e 81       	ldd	r19, Y+6	; 0x06
     948:	3f 70       	andi	r19, 0x0F	; 15
     94a:	2b 85       	ldd	r18, Y+11	; 0x0b
     94c:	22 1f       	adc	r18, r18
     94e:	22 27       	eor	r18, r18
     950:	22 1f       	adc	r18, r18
     952:	32 0f       	add	r19, r18
     954:	2a 85       	ldd	r18, Y+10	; 0x0a
     956:	23 70       	andi	r18, 0x03	; 3
     958:	22 0f       	add	r18, r18
     95a:	23 0f       	add	r18, r19
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
     95c:	27 50       	subi	r18, 0x07	; 7
     95e:	04 c0       	rjmp	.+8      	; 0x968 <disk_ioctl+0x11c>
     960:	88 0f       	add	r24, r24
     962:	99 1f       	adc	r25, r25
     964:	aa 1f       	adc	r26, r26
     966:	bb 1f       	adc	r27, r27
     968:	2a 95       	dec	r18
     96a:	d2 f7       	brpl	.-12     	; 0x960 <disk_ioctl+0x114>
     96c:	f7 01       	movw	r30, r14
     96e:	80 83       	st	Z, r24
     970:	91 83       	std	Z+1, r25	; 0x01
     972:	a2 83       	std	Z+2, r26	; 0x02
     974:	b3 83       	std	Z+3, r27	; 0x03
			}
			res = RES_OK;
     976:	10 e0       	ldi	r17, 0x00	; 0
     978:	f2 c0       	rjmp	.+484    	; 0xb5e <disk_ioctl+0x312>
		}
		break;

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
     97a:	10 91 ac 01 	lds	r17, 0x01AC
     97e:	12 ff       	sbrs	r17, 2
     980:	2a c0       	rjmp	.+84     	; 0x9d6 <disk_ioctl+0x18a>
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
     982:	40 e0       	ldi	r20, 0x00	; 0
     984:	50 e0       	ldi	r21, 0x00	; 0
     986:	ba 01       	movw	r22, r20
     988:	8d e8       	ldi	r24, 0x8D	; 141
     98a:	44 dd       	rcall	.-1400   	; 0x414 <send_cmd>
     98c:	81 11       	cpse	r24, r1
     98e:	d8 c0       	rjmp	.+432    	; 0xb40 <disk_ioctl+0x2f4>
				xchg_spi(0xFF);
     990:	8f ef       	ldi	r24, 0xFF	; 255
     992:	e8 dc       	rcall	.-1584   	; 0x364 <xchg_spi>
				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
     994:	60 e1       	ldi	r22, 0x10	; 16
     996:	70 e0       	ldi	r23, 0x00	; 0
     998:	ce 01       	movw	r24, r28
     99a:	01 96       	adiw	r24, 0x01	; 1
     99c:	02 dd       	rcall	.-1532   	; 0x3a2 <rcvr_datablock>
     99e:	89 2b       	or	r24, r25
     9a0:	09 f4       	brne	.+2      	; 0x9a4 <disk_ioctl+0x158>
     9a2:	d0 c0       	rjmp	.+416    	; 0xb44 <disk_ioctl+0x2f8>
     9a4:	10 e3       	ldi	r17, 0x30	; 48
					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
     9a6:	8f ef       	ldi	r24, 0xFF	; 255
     9a8:	dd dc       	rcall	.-1606   	; 0x364 <xchg_spi>
     9aa:	11 50       	subi	r17, 0x01	; 1
     9ac:	e1 f7       	brne	.-8      	; 0x9a6 <disk_ioctl+0x15a>
					*(DWORD*)buff = 16UL << (csd[10] >> 4);
     9ae:	2b 85       	ldd	r18, Y+11	; 0x0b
     9b0:	22 95       	swap	r18
     9b2:	2f 70       	andi	r18, 0x0F	; 15
     9b4:	80 e1       	ldi	r24, 0x10	; 16
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	a0 e0       	ldi	r26, 0x00	; 0
     9ba:	b0 e0       	ldi	r27, 0x00	; 0
     9bc:	04 c0       	rjmp	.+8      	; 0x9c6 <disk_ioctl+0x17a>
     9be:	88 0f       	add	r24, r24
     9c0:	99 1f       	adc	r25, r25
     9c2:	aa 1f       	adc	r26, r26
     9c4:	bb 1f       	adc	r27, r27
     9c6:	2a 95       	dec	r18
     9c8:	d2 f7       	brpl	.-12     	; 0x9be <disk_ioctl+0x172>
     9ca:	f7 01       	movw	r30, r14
     9cc:	80 83       	st	Z, r24
     9ce:	91 83       	std	Z+1, r25	; 0x01
     9d0:	a2 83       	std	Z+2, r26	; 0x02
     9d2:	b3 83       	std	Z+3, r27	; 0x03
     9d4:	c4 c0       	rjmp	.+392    	; 0xb5e <disk_ioctl+0x312>
					res = RES_OK;
				}
			}
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
     9d6:	40 e0       	ldi	r20, 0x00	; 0
     9d8:	50 e0       	ldi	r21, 0x00	; 0
     9da:	ba 01       	movw	r22, r20
     9dc:	89 e0       	ldi	r24, 0x09	; 9
     9de:	1a dd       	rcall	.-1484   	; 0x414 <send_cmd>
     9e0:	81 11       	cpse	r24, r1
     9e2:	b2 c0       	rjmp	.+356    	; 0xb48 <disk_ioctl+0x2fc>
     9e4:	60 e1       	ldi	r22, 0x10	; 16
     9e6:	70 e0       	ldi	r23, 0x00	; 0
     9e8:	ce 01       	movw	r24, r28
     9ea:	01 96       	adiw	r24, 0x01	; 1
     9ec:	da dc       	rcall	.-1612   	; 0x3a2 <rcvr_datablock>
     9ee:	89 2b       	or	r24, r25
     9f0:	09 f4       	brne	.+2      	; 0x9f4 <disk_ioctl+0x1a8>
     9f2:	ac c0       	rjmp	.+344    	; 0xb4c <disk_ioctl+0x300>
				if (CardType & CT_SD1) {	/* SDv1 */
     9f4:	11 ff       	sbrs	r17, 1
     9f6:	20 c0       	rjmp	.+64     	; 0xa38 <disk_ioctl+0x1ec>
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
     9f8:	8c 85       	ldd	r24, Y+12	; 0x0c
     9fa:	88 1f       	adc	r24, r24
     9fc:	88 27       	eor	r24, r24
     9fe:	88 1f       	adc	r24, r24
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	01 96       	adiw	r24, 0x01	; 1
     a04:	2b 85       	ldd	r18, Y+11	; 0x0b
     a06:	2f 73       	andi	r18, 0x3F	; 63
     a08:	82 0f       	add	r24, r18
     a0a:	91 1d       	adc	r25, r1
     a0c:	82 0f       	add	r24, r18
     a0e:	91 1d       	adc	r25, r1
     a10:	2e 85       	ldd	r18, Y+14	; 0x0e
     a12:	22 95       	swap	r18
     a14:	26 95       	lsr	r18
     a16:	26 95       	lsr	r18
     a18:	23 70       	andi	r18, 0x03	; 3
     a1a:	21 50       	subi	r18, 0x01	; 1
     a1c:	02 c0       	rjmp	.+4      	; 0xa22 <disk_ioctl+0x1d6>
     a1e:	88 0f       	add	r24, r24
     a20:	99 1f       	adc	r25, r25
     a22:	2a 95       	dec	r18
     a24:	e2 f7       	brpl	.-8      	; 0xa1e <disk_ioctl+0x1d2>
     a26:	a0 e0       	ldi	r26, 0x00	; 0
     a28:	b0 e0       	ldi	r27, 0x00	; 0
     a2a:	f7 01       	movw	r30, r14
     a2c:	80 83       	st	Z, r24
     a2e:	91 83       	std	Z+1, r25	; 0x01
     a30:	a2 83       	std	Z+2, r26	; 0x02
     a32:	b3 83       	std	Z+3, r27	; 0x03
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
				}
				res = RES_OK;
     a34:	10 e0       	ldi	r17, 0x00	; 0
     a36:	93 c0       	rjmp	.+294    	; 0xb5e <disk_ioctl+0x312>
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
				if (CardType & CT_SD1) {	/* SDv1 */
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
     a38:	8c 85       	ldd	r24, Y+12	; 0x0c
     a3a:	28 2f       	mov	r18, r24
     a3c:	23 70       	andi	r18, 0x03	; 3
     a3e:	82 95       	swap	r24
     a40:	86 95       	lsr	r24
     a42:	87 70       	andi	r24, 0x07	; 7
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	f8 e0       	ldi	r31, 0x08	; 8
     a48:	2f 9f       	mul	r18, r31
     a4a:	80 0d       	add	r24, r0
     a4c:	91 1d       	adc	r25, r1
     a4e:	11 24       	eor	r1, r1
     a50:	01 96       	adiw	r24, 0x01	; 1
     a52:	2b 85       	ldd	r18, Y+11	; 0x0b
     a54:	2c 77       	andi	r18, 0x7C	; 124
     a56:	30 e0       	ldi	r19, 0x00	; 0
     a58:	35 95       	asr	r19
     a5a:	27 95       	ror	r18
     a5c:	35 95       	asr	r19
     a5e:	27 95       	ror	r18
     a60:	2f 5f       	subi	r18, 0xFF	; 255
     a62:	3f 4f       	sbci	r19, 0xFF	; 255
     a64:	82 9f       	mul	r24, r18
     a66:	a0 01       	movw	r20, r0
     a68:	83 9f       	mul	r24, r19
     a6a:	50 0d       	add	r21, r0
     a6c:	92 9f       	mul	r25, r18
     a6e:	50 0d       	add	r21, r0
     a70:	11 24       	eor	r1, r1
     a72:	ca 01       	movw	r24, r20
     a74:	a0 e0       	ldi	r26, 0x00	; 0
     a76:	b0 e0       	ldi	r27, 0x00	; 0
     a78:	f7 01       	movw	r30, r14
     a7a:	80 83       	st	Z, r24
     a7c:	91 83       	std	Z+1, r25	; 0x01
     a7e:	a2 83       	std	Z+2, r26	; 0x02
     a80:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
     a82:	10 e0       	ldi	r17, 0x00	; 0
     a84:	6c c0       	rjmp	.+216    	; 0xb5e <disk_ioctl+0x312>
		break;

	/* Following commands are never used by FatFs module */

	case MMC_GET_TYPE :		/* Get card type flags (1 byte) */
		*ptr = CardType;
     a86:	80 91 ac 01 	lds	r24, 0x01AC
     a8a:	fa 01       	movw	r30, r20
     a8c:	80 83       	st	Z, r24
		res = RES_OK;
     a8e:	10 e0       	ldi	r17, 0x00	; 0
		break;
     a90:	66 c0       	rjmp	.+204    	; 0xb5e <disk_ioctl+0x312>

	case MMC_GET_CSD :		/* Receive CSD as a data block (16 bytes) */
		if (send_cmd(CMD9, 0) == 0		/* READ_CSD */
     a92:	40 e0       	ldi	r20, 0x00	; 0
     a94:	50 e0       	ldi	r21, 0x00	; 0
     a96:	ba 01       	movw	r22, r20
     a98:	89 e0       	ldi	r24, 0x09	; 9
     a9a:	bc dc       	rcall	.-1672   	; 0x414 <send_cmd>
     a9c:	81 11       	cpse	r24, r1
     a9e:	58 c0       	rjmp	.+176    	; 0xb50 <disk_ioctl+0x304>
			&& rcvr_datablock(ptr, 16))
     aa0:	60 e1       	ldi	r22, 0x10	; 16
     aa2:	70 e0       	ldi	r23, 0x00	; 0
     aa4:	c7 01       	movw	r24, r14
     aa6:	7d dc       	rcall	.-1798   	; 0x3a2 <rcvr_datablock>
     aa8:	11 e0       	ldi	r17, 0x01	; 1
     aaa:	89 2b       	or	r24, r25
     aac:	09 f4       	brne	.+2      	; 0xab0 <disk_ioctl+0x264>
     aae:	57 c0       	rjmp	.+174    	; 0xb5e <disk_ioctl+0x312>
     ab0:	10 e0       	ldi	r17, 0x00	; 0
     ab2:	55 c0       	rjmp	.+170    	; 0xb5e <disk_ioctl+0x312>
			res = RES_OK;
		break;

	case MMC_GET_CID :		/* Receive CID as a data block (16 bytes) */
		if (send_cmd(CMD10, 0) == 0		/* READ_CID */
     ab4:	40 e0       	ldi	r20, 0x00	; 0
     ab6:	50 e0       	ldi	r21, 0x00	; 0
     ab8:	ba 01       	movw	r22, r20
     aba:	8a e0       	ldi	r24, 0x0A	; 10
     abc:	ab dc       	rcall	.-1706   	; 0x414 <send_cmd>
     abe:	81 11       	cpse	r24, r1
     ac0:	49 c0       	rjmp	.+146    	; 0xb54 <disk_ioctl+0x308>
			&& rcvr_datablock(ptr, 16))
     ac2:	60 e1       	ldi	r22, 0x10	; 16
     ac4:	70 e0       	ldi	r23, 0x00	; 0
     ac6:	c7 01       	movw	r24, r14
     ac8:	6c dc       	rcall	.-1832   	; 0x3a2 <rcvr_datablock>
     aca:	11 e0       	ldi	r17, 0x01	; 1
     acc:	89 2b       	or	r24, r25
     ace:	09 f4       	brne	.+2      	; 0xad2 <disk_ioctl+0x286>
     ad0:	46 c0       	rjmp	.+140    	; 0xb5e <disk_ioctl+0x312>
     ad2:	10 e0       	ldi	r17, 0x00	; 0
     ad4:	44 c0       	rjmp	.+136    	; 0xb5e <disk_ioctl+0x312>
			res = RES_OK;
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
     ad6:	40 e0       	ldi	r20, 0x00	; 0
     ad8:	50 e0       	ldi	r21, 0x00	; 0
     ada:	ba 01       	movw	r22, r20
     adc:	8a e3       	ldi	r24, 0x3A	; 58
     ade:	9a dc       	rcall	.-1740   	; 0x414 <send_cmd>
     ae0:	81 11       	cpse	r24, r1
     ae2:	3a c0       	rjmp	.+116    	; 0xb58 <disk_ioctl+0x30c>
     ae4:	87 01       	movw	r16, r14
     ae6:	f4 e0       	ldi	r31, 0x04	; 4
     ae8:	ef 0e       	add	r14, r31
     aea:	f1 1c       	adc	r15, r1
			for (n = 4; n; n--) *ptr++ = xchg_spi(0xFF);
     aec:	8f ef       	ldi	r24, 0xFF	; 255
     aee:	3a dc       	rcall	.-1932   	; 0x364 <xchg_spi>
     af0:	f8 01       	movw	r30, r16
     af2:	81 93       	st	Z+, r24
     af4:	8f 01       	movw	r16, r30
     af6:	ee 15       	cp	r30, r14
     af8:	ff 05       	cpc	r31, r15
     afa:	c1 f7       	brne	.-16     	; 0xaec <disk_ioctl+0x2a0>
			res = RES_OK;
     afc:	10 e0       	ldi	r17, 0x00	; 0
     afe:	2f c0       	rjmp	.+94     	; 0xb5e <disk_ioctl+0x312>
		}
		break;

	case MMC_GET_SDSTAT :	/* Receive SD statsu as a data block (64 bytes) */
		if (send_cmd(ACMD13, 0) == 0) {	/* SD_STATUS */
     b00:	40 e0       	ldi	r20, 0x00	; 0
     b02:	50 e0       	ldi	r21, 0x00	; 0
     b04:	ba 01       	movw	r22, r20
     b06:	8d e8       	ldi	r24, 0x8D	; 141
     b08:	85 dc       	rcall	.-1782   	; 0x414 <send_cmd>
     b0a:	81 11       	cpse	r24, r1
     b0c:	27 c0       	rjmp	.+78     	; 0xb5c <disk_ioctl+0x310>
			xchg_spi(0xFF);
     b0e:	8f ef       	ldi	r24, 0xFF	; 255
     b10:	29 dc       	rcall	.-1966   	; 0x364 <xchg_spi>
			if (rcvr_datablock(ptr, 64))
     b12:	60 e4       	ldi	r22, 0x40	; 64
     b14:	70 e0       	ldi	r23, 0x00	; 0
     b16:	c7 01       	movw	r24, r14
     b18:	44 dc       	rcall	.-1912   	; 0x3a2 <rcvr_datablock>
     b1a:	11 e0       	ldi	r17, 0x01	; 1
     b1c:	89 2b       	or	r24, r25
     b1e:	f9 f0       	breq	.+62     	; 0xb5e <disk_ioctl+0x312>
     b20:	10 e0       	ldi	r17, 0x00	; 0
     b22:	1d c0       	rjmp	.+58     	; 0xb5e <disk_ioctl+0x312>
				res = RES_OK;
		}
		break;

	case CTRL_POWER_OFF :	/* Power off */
		power_off();
     b24:	19 dc       	rcall	.-1998   	; 0x358 <power_off>
		Stat |= STA_NOINIT;
     b26:	80 91 00 01 	lds	r24, 0x0100
     b2a:	81 60       	ori	r24, 0x01	; 1
     b2c:	80 93 00 01 	sts	0x0100, r24
		res = RES_OK;
     b30:	10 e0       	ldi	r17, 0x00	; 0
		break;
     b32:	15 c0       	rjmp	.+42     	; 0xb5e <disk_ioctl+0x312>

	default:
		res = RES_PARERR;
     b34:	14 e0       	ldi	r17, 0x04	; 4
     b36:	13 c0       	rjmp	.+38     	; 0xb5e <disk_ioctl+0x312>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
     b38:	11 e0       	ldi	r17, 0x01	; 1
     b3a:	11 c0       	rjmp	.+34     	; 0xb5e <disk_ioctl+0x312>
     b3c:	11 e0       	ldi	r17, 0x01	; 1
     b3e:	0f c0       	rjmp	.+30     	; 0xb5e <disk_ioctl+0x312>
     b40:	11 e0       	ldi	r17, 0x01	; 1
     b42:	0d c0       	rjmp	.+26     	; 0xb5e <disk_ioctl+0x312>
     b44:	11 e0       	ldi	r17, 0x01	; 1
     b46:	0b c0       	rjmp	.+22     	; 0xb5e <disk_ioctl+0x312>
     b48:	11 e0       	ldi	r17, 0x01	; 1
     b4a:	09 c0       	rjmp	.+18     	; 0xb5e <disk_ioctl+0x312>
     b4c:	11 e0       	ldi	r17, 0x01	; 1
     b4e:	07 c0       	rjmp	.+14     	; 0xb5e <disk_ioctl+0x312>
     b50:	11 e0       	ldi	r17, 0x01	; 1
     b52:	05 c0       	rjmp	.+10     	; 0xb5e <disk_ioctl+0x312>
     b54:	11 e0       	ldi	r17, 0x01	; 1
     b56:	03 c0       	rjmp	.+6      	; 0xb5e <disk_ioctl+0x312>
     b58:	11 e0       	ldi	r17, 0x01	; 1
     b5a:	01 c0       	rjmp	.+2      	; 0xb5e <disk_ioctl+0x312>
     b5c:	11 e0       	ldi	r17, 0x01	; 1

	default:
		res = RES_PARERR;
	}

	deselect();
     b5e:	08 dc       	rcall	.-2032   	; 0x370 <deselect>

	return res;
     b60:	81 2f       	mov	r24, r17
     b62:	03 c0       	rjmp	.+6      	; 0xb6a <disk_ioctl+0x31e>
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
     b64:	84 e0       	ldi	r24, 0x04	; 4
     b66:	01 c0       	rjmp	.+2      	; 0xb6a <disk_ioctl+0x31e>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
     b68:	83 e0       	ldi	r24, 0x03	; 3
	}

	deselect();

	return res;
}
     b6a:	60 96       	adiw	r28, 0x10	; 16
     b6c:	0f b6       	in	r0, 0x3f	; 63
     b6e:	f8 94       	cli
     b70:	de bf       	out	0x3e, r29	; 62
     b72:	0f be       	out	0x3f, r0	; 63
     b74:	cd bf       	out	0x3d, r28	; 61
     b76:	df 91       	pop	r29
     b78:	cf 91       	pop	r28
     b7a:	1f 91       	pop	r17
     b7c:	0f 91       	pop	r16
     b7e:	ff 90       	pop	r15
     b80:	ef 90       	pop	r14
     b82:	08 95       	ret

00000b84 <disk_timerproc>:
void disk_timerproc (void)
{
	BYTE n, s;


	n = Timer1;				/* 100Hz decrement timer */
     b84:	80 91 ae 01 	lds	r24, 0x01AE
	if (n) Timer1 = --n;
     b88:	88 23       	and	r24, r24
     b8a:	19 f0       	breq	.+6      	; 0xb92 <disk_timerproc+0xe>
     b8c:	81 50       	subi	r24, 0x01	; 1
     b8e:	80 93 ae 01 	sts	0x01AE, r24
	n = Timer2;
     b92:	80 91 ad 01 	lds	r24, 0x01AD
	if (n) Timer2 = --n;
     b96:	88 23       	and	r24, r24
     b98:	19 f0       	breq	.+6      	; 0xba0 <disk_timerproc+0x1c>
     b9a:	81 50       	subi	r24, 0x01	; 1
     b9c:	80 93 ad 01 	sts	0x01AD, r24
	
	s = Stat;
     ba0:	80 91 00 01 	lds	r24, 0x0100
//	if (MMC_CD)				/* Card inserted */
//		s &= ~STA_NODISK;
//	else					/* Socket empty */
//		s |= (STA_NODISK | STA_NOINIT);

	Stat = s;				/* Update MMC status */
     ba4:	80 93 00 01 	sts	0x0100, r24
     ba8:	08 95       	ret

00000baa <_ZN7DisplayD1Ev>:
	uint8_t sx = basecenter_x-middlelength*cos(rotationangle-M_PI_2);
	uint8_t sy = basecenter_y+middlelength*sin(rotationangle-M_PI_2);
	draw_line(sx,sy,lengtharm,baseangle+rotationangle);
	//draw right arm
	draw_line(sx,sy,lengtharm,-baseangle+rotationangle-M_PI);
}
     baa:	9c 5f       	subi	r25, 0xFC	; 252
     bac:	0c 94 84 1a 	jmp	0x3508	; 0x3508 <_ZN3I2CD1Ev>
     bb0:	08 95       	ret

00000bb2 <_ZN7Display10clearFrameEv>:
     bb2:	fc 01       	movw	r30, r24
     bb4:	9c 5f       	subi	r25, 0xFC	; 252
     bb6:	11 92       	st	Z+, r1
     bb8:	e8 17       	cp	r30, r24
     bba:	f9 07       	cpc	r31, r25
     bbc:	e1 f7       	brne	.-8      	; 0xbb6 <_ZN7Display10clearFrameEv+0x4>
     bbe:	08 95       	ret

00000bc0 <_ZN7Display15ssd1306_commandEh>:
     bc0:	1f 93       	push	r17
     bc2:	cf 93       	push	r28
     bc4:	df 93       	push	r29
     bc6:	16 2f       	mov	r17, r22
     bc8:	ec 01       	movw	r28, r24
     bca:	dc 5f       	subi	r29, 0xFC	; 252
     bcc:	ce 01       	movw	r24, r28
     bce:	0e 94 85 1a 	call	0x350a	; 0x350a <_ZN3I2C9twi_startEv>
     bd2:	68 e7       	ldi	r22, 0x78	; 120
     bd4:	ce 01       	movw	r24, r28
     bd6:	0e 94 8d 1a 	call	0x351a	; 0x351a <_ZN3I2C9twi_writeEh>
     bda:	60 e0       	ldi	r22, 0x00	; 0
     bdc:	ce 01       	movw	r24, r28
     bde:	0e 94 8d 1a 	call	0x351a	; 0x351a <_ZN3I2C9twi_writeEh>
     be2:	61 2f       	mov	r22, r17
     be4:	ce 01       	movw	r24, r28
     be6:	0e 94 8d 1a 	call	0x351a	; 0x351a <_ZN3I2C9twi_writeEh>
     bea:	ce 01       	movw	r24, r28
     bec:	0e 94 89 1a 	call	0x3512	; 0x3512 <_ZN3I2C8twi_stopEv>
     bf0:	df 91       	pop	r29
     bf2:	cf 91       	pop	r28
     bf4:	1f 91       	pop	r17
     bf6:	08 95       	ret

00000bf8 <_ZN7Display17InitializeDisplayEv>:
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	ec 01       	movw	r28, r24
     bfe:	6e ea       	ldi	r22, 0xAE	; 174
     c00:	df df       	rcall	.-66     	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c02:	65 ed       	ldi	r22, 0xD5	; 213
     c04:	ce 01       	movw	r24, r28
     c06:	dc df       	rcall	.-72     	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c08:	60 e8       	ldi	r22, 0x80	; 128
     c0a:	ce 01       	movw	r24, r28
     c0c:	d9 df       	rcall	.-78     	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c0e:	68 ea       	ldi	r22, 0xA8	; 168
     c10:	ce 01       	movw	r24, r28
     c12:	d6 df       	rcall	.-84     	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c14:	6f e3       	ldi	r22, 0x3F	; 63
     c16:	ce 01       	movw	r24, r28
     c18:	d3 df       	rcall	.-90     	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c1a:	63 ed       	ldi	r22, 0xD3	; 211
     c1c:	ce 01       	movw	r24, r28
     c1e:	d0 df       	rcall	.-96     	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c20:	60 e0       	ldi	r22, 0x00	; 0
     c22:	ce 01       	movw	r24, r28
     c24:	cd df       	rcall	.-102    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c26:	60 e4       	ldi	r22, 0x40	; 64
     c28:	ce 01       	movw	r24, r28
     c2a:	ca df       	rcall	.-108    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c2c:	6d e8       	ldi	r22, 0x8D	; 141
     c2e:	ce 01       	movw	r24, r28
     c30:	c7 df       	rcall	.-114    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c32:	64 e1       	ldi	r22, 0x14	; 20
     c34:	ce 01       	movw	r24, r28
     c36:	c4 df       	rcall	.-120    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c38:	60 e2       	ldi	r22, 0x20	; 32
     c3a:	ce 01       	movw	r24, r28
     c3c:	c1 df       	rcall	.-126    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c3e:	60 e0       	ldi	r22, 0x00	; 0
     c40:	ce 01       	movw	r24, r28
     c42:	be df       	rcall	.-132    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c44:	61 ea       	ldi	r22, 0xA1	; 161
     c46:	ce 01       	movw	r24, r28
     c48:	bb df       	rcall	.-138    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c4a:	68 ec       	ldi	r22, 0xC8	; 200
     c4c:	ce 01       	movw	r24, r28
     c4e:	b8 df       	rcall	.-144    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c50:	6a ed       	ldi	r22, 0xDA	; 218
     c52:	ce 01       	movw	r24, r28
     c54:	b5 df       	rcall	.-150    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c56:	62 e1       	ldi	r22, 0x12	; 18
     c58:	ce 01       	movw	r24, r28
     c5a:	b2 df       	rcall	.-156    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c5c:	61 e8       	ldi	r22, 0x81	; 129
     c5e:	ce 01       	movw	r24, r28
     c60:	af df       	rcall	.-162    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c62:	6f ec       	ldi	r22, 0xCF	; 207
     c64:	ce 01       	movw	r24, r28
     c66:	ac df       	rcall	.-168    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c68:	69 ed       	ldi	r22, 0xD9	; 217
     c6a:	ce 01       	movw	r24, r28
     c6c:	a9 df       	rcall	.-174    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c6e:	61 ef       	ldi	r22, 0xF1	; 241
     c70:	ce 01       	movw	r24, r28
     c72:	a6 df       	rcall	.-180    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c74:	6b ed       	ldi	r22, 0xDB	; 219
     c76:	ce 01       	movw	r24, r28
     c78:	a3 df       	rcall	.-186    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c7a:	60 e4       	ldi	r22, 0x40	; 64
     c7c:	ce 01       	movw	r24, r28
     c7e:	a0 df       	rcall	.-192    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c80:	64 ea       	ldi	r22, 0xA4	; 164
     c82:	ce 01       	movw	r24, r28
     c84:	9d df       	rcall	.-198    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c86:	66 ea       	ldi	r22, 0xA6	; 166
     c88:	ce 01       	movw	r24, r28
     c8a:	9a df       	rcall	.-204    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c8c:	6f ea       	ldi	r22, 0xAF	; 175
     c8e:	ce 01       	movw	r24, r28
     c90:	97 df       	rcall	.-210    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     c92:	df 91       	pop	r29
     c94:	cf 91       	pop	r28
     c96:	08 95       	ret

00000c98 <_ZN7DisplayC1Ev>:
     c98:	cf 93       	push	r28
     c9a:	df 93       	push	r29
     c9c:	ec 01       	movw	r28, r24
     c9e:	9c 5f       	subi	r25, 0xFC	; 252
     ca0:	0e 94 80 1a 	call	0x3500	; 0x3500 <_ZN3I2CC1Ev>
     ca4:	ce 01       	movw	r24, r28
     ca6:	a8 df       	rcall	.-176    	; 0xbf8 <_ZN7Display17InitializeDisplayEv>
     ca8:	ce 01       	movw	r24, r28
     caa:	83 df       	rcall	.-250    	; 0xbb2 <_ZN7Display10clearFrameEv>
     cac:	df 91       	pop	r29
     cae:	cf 91       	pop	r28
     cb0:	08 95       	ret

00000cb2 <_ZN7Display9sendFrameEv>:
     cb2:	ef 92       	push	r14
     cb4:	ff 92       	push	r15
     cb6:	0f 93       	push	r16
     cb8:	1f 93       	push	r17
     cba:	cf 93       	push	r28
     cbc:	df 93       	push	r29
     cbe:	ec 01       	movw	r28, r24
     cc0:	61 e2       	ldi	r22, 0x21	; 33
     cc2:	7e df       	rcall	.-260    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     cc4:	60 e0       	ldi	r22, 0x00	; 0
     cc6:	ce 01       	movw	r24, r28
     cc8:	7b df       	rcall	.-266    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     cca:	6f e7       	ldi	r22, 0x7F	; 127
     ccc:	ce 01       	movw	r24, r28
     cce:	78 df       	rcall	.-272    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     cd0:	62 e2       	ldi	r22, 0x22	; 34
     cd2:	ce 01       	movw	r24, r28
     cd4:	75 df       	rcall	.-278    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     cd6:	60 e0       	ldi	r22, 0x00	; 0
     cd8:	ce 01       	movw	r24, r28
     cda:	72 df       	rcall	.-284    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     cdc:	67 e0       	ldi	r22, 0x07	; 7
     cde:	ce 01       	movw	r24, r28
     ce0:	6f df       	rcall	.-290    	; 0xbc0 <_ZN7Display15ssd1306_commandEh>
     ce2:	8e 01       	movw	r16, r28
     ce4:	1c 5f       	subi	r17, 0xFC	; 252
     ce6:	c8 01       	movw	r24, r16
     ce8:	0e 94 85 1a 	call	0x350a	; 0x350a <_ZN3I2C9twi_startEv>
     cec:	68 e7       	ldi	r22, 0x78	; 120
     cee:	c8 01       	movw	r24, r16
     cf0:	0e 94 8d 1a 	call	0x351a	; 0x351a <_ZN3I2C9twi_writeEh>
     cf4:	60 e4       	ldi	r22, 0x40	; 64
     cf6:	c8 01       	movw	r24, r16
     cf8:	0e 94 8d 1a 	call	0x351a	; 0x351a <_ZN3I2C9twi_writeEh>
     cfc:	78 01       	movw	r14, r16
     cfe:	69 91       	ld	r22, Y+
     d00:	c8 01       	movw	r24, r16
     d02:	0e 94 8d 1a 	call	0x351a	; 0x351a <_ZN3I2C9twi_writeEh>
     d06:	ce 15       	cp	r28, r14
     d08:	df 05       	cpc	r29, r15
     d0a:	c9 f7       	brne	.-14     	; 0xcfe <_ZN7Display9sendFrameEv+0x4c>
     d0c:	c8 01       	movw	r24, r16
     d0e:	0e 94 89 1a 	call	0x3512	; 0x3512 <_ZN3I2C8twi_stopEv>
     d12:	df 91       	pop	r29
     d14:	cf 91       	pop	r28
     d16:	1f 91       	pop	r17
     d18:	0f 91       	pop	r16
     d1a:	ff 90       	pop	r15
     d1c:	ef 90       	pop	r14
     d1e:	08 95       	ret

00000d20 <_ZN7Display9draw_ASCIEhhh>:

void Display::draw_ASCI(uint8_t sym,uint8_t x, uint8_t y){
     d20:	0f 93       	push	r16
     d22:	1f 93       	push	r17
     d24:	cf 93       	push	r28
     d26:	df 93       	push	r29
	if(sym!=' ' && sym>=33){
     d28:	61 32       	cpi	r22, 0x21	; 33
     d2a:	08 f4       	brcc	.+2      	; 0xd2e <_ZN7Display9draw_ASCIEhhh+0xe>
     d2c:	3e c0       	rjmp	.+124    	; 0xdaa <_ZN7Display9draw_ASCIEhhh+0x8a>
		sym-=33;
		uint16_t symbol;
		for(uint8_t i = 0; i < 5; i++){
			symbol = pgm_read_byte(&font5x8[sym][i]);
			symbol = symbol << y%8;
			Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d2e:	a4 2f       	mov	r26, r20
     d30:	b0 e0       	ldi	r27, 0x00	; 0
     d32:	02 2f       	mov	r16, r18
     d34:	06 95       	lsr	r16
     d36:	06 95       	lsr	r16
     d38:	06 95       	lsr	r16
     d3a:	30 e8       	ldi	r19, 0x80	; 128
     d3c:	03 9f       	mul	r16, r19
     d3e:	80 01       	movw	r16, r0
     d40:	11 24       	eor	r1, r1
	draw_line(sx,sy,lengtharm,-baseangle+rotationangle-M_PI);
}

void Display::draw_ASCI(uint8_t sym,uint8_t x, uint8_t y){
	if(sym!=' ' && sym>=33){
		sym-=33;
     d42:	61 52       	subi	r22, 0x21	; 33
     d44:	70 e0       	ldi	r23, 0x00	; 0
     d46:	fb 01       	movw	r30, r22
     d48:	ee 0f       	add	r30, r30
     d4a:	ff 1f       	adc	r31, r31
     d4c:	ee 0f       	add	r30, r30
     d4e:	ff 1f       	adc	r31, r31
     d50:	e6 0f       	add	r30, r22
     d52:	f7 1f       	adc	r31, r23
     d54:	e8 5d       	subi	r30, 0xD8	; 216
     d56:	fe 4f       	sbci	r31, 0xFE	; 254
		uint16_t symbol;
		for(uint8_t i = 0; i < 5; i++){
			symbol = pgm_read_byte(&font5x8[sym][i]);
			symbol = symbol << y%8;
			Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d58:	ad 01       	movw	r20, r26
     d5a:	40 0f       	add	r20, r16
     d5c:	51 1f       	adc	r21, r17
     d5e:	ec 01       	movw	r28, r24
     d60:	c4 0f       	add	r28, r20
     d62:	d5 1f       	adc	r29, r21
			if(((symbol&0xFF00)>>8)==0){
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d64:	00 58       	subi	r16, 0x80	; 128
     d66:	1f 4f       	sbci	r17, 0xFF	; 255
     d68:	a0 0f       	add	r26, r16
     d6a:	b1 1f       	adc	r27, r17
     d6c:	a8 0f       	add	r26, r24
     d6e:	b9 1f       	adc	r27, r25
     d70:	4b 5f       	subi	r20, 0xFB	; 251
     d72:	5f 4f       	sbci	r21, 0xFF	; 255
     d74:	48 0f       	add	r20, r24
     d76:	59 1f       	adc	r21, r25
	if(sym!=' ' && sym>=33){
		sym-=33;
		uint16_t symbol;
		for(uint8_t i = 0; i < 5; i++){
			symbol = pgm_read_byte(&font5x8[sym][i]);
			symbol = symbol << y%8;
     d78:	27 70       	andi	r18, 0x07	; 7
void Display::draw_ASCI(uint8_t sym,uint8_t x, uint8_t y){
	if(sym!=' ' && sym>=33){
		sym-=33;
		uint16_t symbol;
		for(uint8_t i = 0; i < 5; i++){
			symbol = pgm_read_byte(&font5x8[sym][i]);
     d7a:	64 91       	lpm	r22, Z
     d7c:	70 e0       	ldi	r23, 0x00	; 0
			symbol = symbol << y%8;
     d7e:	02 2e       	mov	r0, r18
     d80:	02 c0       	rjmp	.+4      	; 0xd86 <_ZN7Display9draw_ASCIEhhh+0x66>
     d82:	66 0f       	add	r22, r22
     d84:	77 1f       	adc	r23, r23
     d86:	0a 94       	dec	r0
     d88:	e2 f7       	brpl	.-8      	; 0xd82 <_ZN7Display9draw_ASCIEhhh+0x62>
			Displayframe[x+(y/8)*SSD1306_WIDTH+i] |=(uint8_t) (symbol & 0x00FF);
     d8a:	98 81       	ld	r25, Y
     d8c:	96 2b       	or	r25, r22
     d8e:	99 93       	st	Y+, r25
			if(((symbol&0xFF00)>>8)==0){
     d90:	67 2f       	mov	r22, r23
     d92:	77 27       	eor	r23, r23
     d94:	61 15       	cp	r22, r1
     d96:	71 05       	cpc	r23, r1
     d98:	19 f0       	breq	.+6      	; 0xda0 <_ZN7Display9draw_ASCIEhhh+0x80>
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= 0;
			}
			else {
				Displayframe[x+(y/8+1)*SSD1306_WIDTH+i] |= (uint8_t) ((symbol & 0xFF00)>>8);
     d9a:	8c 91       	ld	r24, X
     d9c:	68 2b       	or	r22, r24
     d9e:	6c 93       	st	X, r22
     da0:	31 96       	adiw	r30, 0x01	; 1
     da2:	11 96       	adiw	r26, 0x01	; 1

void Display::draw_ASCI(uint8_t sym,uint8_t x, uint8_t y){
	if(sym!=' ' && sym>=33){
		sym-=33;
		uint16_t symbol;
		for(uint8_t i = 0; i < 5; i++){
     da4:	c4 17       	cp	r28, r20
     da6:	d5 07       	cpc	r29, r21
     da8:	41 f7       	brne	.-48     	; 0xd7a <_ZN7Display9draw_ASCIEhhh+0x5a>
	else{
		for(uint8_t i = 0; i < 7; i++){
			Displayframe[x+(y/8)*SSD1306_WIDTH+i] |= 0;
		}
	}
}
     daa:	df 91       	pop	r29
     dac:	cf 91       	pop	r28
     dae:	1f 91       	pop	r17
     db0:	0f 91       	pop	r16
     db2:	08 95       	ret

00000db4 <mem_cpy>:

	if (   pb.idx >= 0		/* Flush buffered characters to the file */
		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
		&& (UINT)pb.idx == nw) return pb.nchr;
	return EOF;
}
     db4:	41 15       	cp	r20, r1
     db6:	51 05       	cpc	r21, r1
     db8:	51 f0       	breq	.+20     	; 0xdce <mem_cpy+0x1a>
     dba:	a6 2f       	mov	r26, r22
     dbc:	b7 2f       	mov	r27, r23
     dbe:	fc 01       	movw	r30, r24
     dc0:	48 0f       	add	r20, r24
     dc2:	59 1f       	adc	r21, r25
     dc4:	9d 91       	ld	r25, X+
     dc6:	91 93       	st	Z+, r25
     dc8:	e4 17       	cp	r30, r20
     dca:	f5 07       	cpc	r31, r21
     dcc:	d9 f7       	brne	.-10     	; 0xdc4 <mem_cpy+0x10>
     dce:	08 95       	ret

00000dd0 <ld_clust>:
     dd0:	0f 93       	push	r16
     dd2:	1f 93       	push	r17
     dd4:	dc 01       	movw	r26, r24
     dd6:	fb 01       	movw	r30, r22
     dd8:	93 8d       	ldd	r25, Z+27	; 0x1b
     dda:	69 2f       	mov	r22, r25
     ddc:	70 e0       	ldi	r23, 0x00	; 0
     dde:	76 2f       	mov	r23, r22
     de0:	66 27       	eor	r22, r22
     de2:	82 8d       	ldd	r24, Z+26	; 0x1a
     de4:	68 2b       	or	r22, r24
     de6:	80 e0       	ldi	r24, 0x00	; 0
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	2c 91       	ld	r18, X
     dec:	23 30       	cpi	r18, 0x03	; 3
     dee:	79 f4       	brne	.+30     	; 0xe0e <ld_clust+0x3e>
     df0:	05 89       	ldd	r16, Z+21	; 0x15
     df2:	10 e0       	ldi	r17, 0x00	; 0
     df4:	10 2f       	mov	r17, r16
     df6:	00 27       	eor	r16, r16
     df8:	24 89       	ldd	r18, Z+20	; 0x14
     dfa:	02 2b       	or	r16, r18
     dfc:	20 e0       	ldi	r18, 0x00	; 0
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	98 01       	movw	r18, r16
     e02:	11 27       	eor	r17, r17
     e04:	00 27       	eor	r16, r16
     e06:	60 2b       	or	r22, r16
     e08:	71 2b       	or	r23, r17
     e0a:	82 2b       	or	r24, r18
     e0c:	93 2b       	or	r25, r19
     e0e:	1f 91       	pop	r17
     e10:	0f 91       	pop	r16
     e12:	08 95       	ret

00000e14 <get_ldnumber>:
     e14:	cf 93       	push	r28
     e16:	df 93       	push	r29
     e18:	ec 01       	movw	r28, r24
     e1a:	a8 81       	ld	r26, Y
     e1c:	b9 81       	ldd	r27, Y+1	; 0x01
     e1e:	10 97       	sbiw	r26, 0x00	; 0
     e20:	f9 f0       	breq	.+62     	; 0xe60 <get_ldnumber+0x4c>
     e22:	4c 91       	ld	r20, X
     e24:	41 32       	cpi	r20, 0x21	; 33
     e26:	58 f0       	brcs	.+22     	; 0xe3e <get_ldnumber+0x2a>
     e28:	4a 33       	cpi	r20, 0x3A	; 58
     e2a:	31 f1       	breq	.+76     	; 0xe78 <get_ldnumber+0x64>
     e2c:	fd 01       	movw	r30, r26
     e2e:	31 96       	adiw	r30, 0x01	; 1
     e30:	9f 01       	movw	r18, r30
     e32:	91 91       	ld	r25, Z+
     e34:	91 32       	cpi	r25, 0x21	; 33
     e36:	28 f0       	brcs	.+10     	; 0xe42 <get_ldnumber+0x2e>
     e38:	9a 33       	cpi	r25, 0x3A	; 58
     e3a:	d1 f7       	brne	.-12     	; 0xe30 <get_ldnumber+0x1c>
     e3c:	04 c0       	rjmp	.+8      	; 0xe46 <get_ldnumber+0x32>
     e3e:	94 2f       	mov	r25, r20
     e40:	9d 01       	movw	r18, r26
     e42:	9a 33       	cpi	r25, 0x3A	; 58
     e44:	81 f4       	brne	.+32     	; 0xe66 <get_ldnumber+0x52>
     e46:	cd 01       	movw	r24, r26
     e48:	01 96       	adiw	r24, 0x01	; 1
     e4a:	28 17       	cp	r18, r24
     e4c:	39 07       	cpc	r19, r25
     e4e:	71 f4       	brne	.+28     	; 0xe6c <get_ldnumber+0x58>
     e50:	40 33       	cpi	r20, 0x30	; 48
     e52:	79 f4       	brne	.+30     	; 0xe72 <get_ldnumber+0x5e>
     e54:	12 96       	adiw	r26, 0x02	; 2
     e56:	b9 83       	std	Y+1, r27	; 0x01
     e58:	a8 83       	st	Y, r26
     e5a:	80 e0       	ldi	r24, 0x00	; 0
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	0e c0       	rjmp	.+28     	; 0xe7c <get_ldnumber+0x68>
     e60:	8f ef       	ldi	r24, 0xFF	; 255
     e62:	9f ef       	ldi	r25, 0xFF	; 255
     e64:	0b c0       	rjmp	.+22     	; 0xe7c <get_ldnumber+0x68>
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	08 c0       	rjmp	.+16     	; 0xe7c <get_ldnumber+0x68>
     e6c:	8f ef       	ldi	r24, 0xFF	; 255
     e6e:	9f ef       	ldi	r25, 0xFF	; 255
     e70:	05 c0       	rjmp	.+10     	; 0xe7c <get_ldnumber+0x68>
     e72:	8f ef       	ldi	r24, 0xFF	; 255
     e74:	9f ef       	ldi	r25, 0xFF	; 255
     e76:	02 c0       	rjmp	.+4      	; 0xe7c <get_ldnumber+0x68>
     e78:	9d 01       	movw	r18, r26
     e7a:	e5 cf       	rjmp	.-54     	; 0xe46 <get_ldnumber+0x32>
     e7c:	df 91       	pop	r29
     e7e:	cf 91       	pop	r28
     e80:	08 95       	ret

00000e82 <sync_window>:
     e82:	8f 92       	push	r8
     e84:	9f 92       	push	r9
     e86:	af 92       	push	r10
     e88:	bf 92       	push	r11
     e8a:	cf 92       	push	r12
     e8c:	df 92       	push	r13
     e8e:	ef 92       	push	r14
     e90:	ff 92       	push	r15
     e92:	0f 93       	push	r16
     e94:	1f 93       	push	r17
     e96:	cf 93       	push	r28
     e98:	df 93       	push	r29
     e9a:	fc 01       	movw	r30, r24
     e9c:	24 81       	ldd	r18, Z+4	; 0x04
     e9e:	22 23       	and	r18, r18
     ea0:	09 f4       	brne	.+2      	; 0xea4 <sync_window+0x22>
     ea2:	44 c0       	rjmp	.+136    	; 0xf2c <sync_window+0xaa>
     ea4:	ec 01       	movw	r28, r24
     ea6:	c2 a4       	ldd	r12, Z+42	; 0x2a
     ea8:	d3 a4       	ldd	r13, Z+43	; 0x2b
     eaa:	e4 a4       	ldd	r14, Z+44	; 0x2c
     eac:	f5 a4       	ldd	r15, Z+45	; 0x2d
     eae:	5c 01       	movw	r10, r24
     eb0:	fe e2       	ldi	r31, 0x2E	; 46
     eb2:	af 0e       	add	r10, r31
     eb4:	b1 1c       	adc	r11, r1
     eb6:	01 e0       	ldi	r16, 0x01	; 1
     eb8:	10 e0       	ldi	r17, 0x00	; 0
     eba:	a7 01       	movw	r20, r14
     ebc:	96 01       	movw	r18, r12
     ebe:	b5 01       	movw	r22, r10
     ec0:	89 81       	ldd	r24, Y+1	; 0x01
     ec2:	56 dc       	rcall	.-1876   	; 0x770 <disk_write>
     ec4:	81 11       	cpse	r24, r1
     ec6:	34 c0       	rjmp	.+104    	; 0xf30 <sync_window+0xae>
     ec8:	1c 82       	std	Y+4, r1	; 0x04
     eca:	8e 8d       	ldd	r24, Y+30	; 0x1e
     ecc:	9f 8d       	ldd	r25, Y+31	; 0x1f
     ece:	a8 a1       	ldd	r26, Y+32	; 0x20
     ed0:	b9 a1       	ldd	r27, Y+33	; 0x21
     ed2:	b7 01       	movw	r22, r14
     ed4:	a6 01       	movw	r20, r12
     ed6:	48 1b       	sub	r20, r24
     ed8:	59 0b       	sbc	r21, r25
     eda:	6a 0b       	sbc	r22, r26
     edc:	7b 0b       	sbc	r23, r27
     ede:	8e 89       	ldd	r24, Y+22	; 0x16
     ee0:	9f 89       	ldd	r25, Y+23	; 0x17
     ee2:	a8 8d       	ldd	r26, Y+24	; 0x18
     ee4:	b9 8d       	ldd	r27, Y+25	; 0x19
     ee6:	48 17       	cp	r20, r24
     ee8:	59 07       	cpc	r21, r25
     eea:	6a 07       	cpc	r22, r26
     eec:	7b 07       	cpc	r23, r27
     eee:	10 f5       	brcc	.+68     	; 0xf34 <sync_window+0xb2>
     ef0:	8b 80       	ldd	r8, Y+3	; 0x03
     ef2:	91 2c       	mov	r9, r1
     ef4:	82 e0       	ldi	r24, 0x02	; 2
     ef6:	88 16       	cp	r8, r24
     ef8:	91 04       	cpc	r9, r1
     efa:	f0 f0       	brcs	.+60     	; 0xf38 <sync_window+0xb6>
     efc:	8e 89       	ldd	r24, Y+22	; 0x16
     efe:	9f 89       	ldd	r25, Y+23	; 0x17
     f00:	a8 8d       	ldd	r26, Y+24	; 0x18
     f02:	b9 8d       	ldd	r27, Y+25	; 0x19
     f04:	c8 0e       	add	r12, r24
     f06:	d9 1e       	adc	r13, r25
     f08:	ea 1e       	adc	r14, r26
     f0a:	fb 1e       	adc	r15, r27
     f0c:	01 e0       	ldi	r16, 0x01	; 1
     f0e:	10 e0       	ldi	r17, 0x00	; 0
     f10:	a7 01       	movw	r20, r14
     f12:	96 01       	movw	r18, r12
     f14:	b5 01       	movw	r22, r10
     f16:	89 81       	ldd	r24, Y+1	; 0x01
     f18:	2b dc       	rcall	.-1962   	; 0x770 <disk_write>
     f1a:	e1 e0       	ldi	r30, 0x01	; 1
     f1c:	8e 1a       	sub	r8, r30
     f1e:	91 08       	sbc	r9, r1
     f20:	f1 e0       	ldi	r31, 0x01	; 1
     f22:	8f 16       	cp	r8, r31
     f24:	91 04       	cpc	r9, r1
     f26:	51 f7       	brne	.-44     	; 0xefc <sync_window+0x7a>
     f28:	80 e0       	ldi	r24, 0x00	; 0
     f2a:	07 c0       	rjmp	.+14     	; 0xf3a <sync_window+0xb8>
     f2c:	80 e0       	ldi	r24, 0x00	; 0
     f2e:	05 c0       	rjmp	.+10     	; 0xf3a <sync_window+0xb8>
     f30:	81 e0       	ldi	r24, 0x01	; 1
     f32:	03 c0       	rjmp	.+6      	; 0xf3a <sync_window+0xb8>
     f34:	80 e0       	ldi	r24, 0x00	; 0
     f36:	01 c0       	rjmp	.+2      	; 0xf3a <sync_window+0xb8>
     f38:	80 e0       	ldi	r24, 0x00	; 0
     f3a:	df 91       	pop	r29
     f3c:	cf 91       	pop	r28
     f3e:	1f 91       	pop	r17
     f40:	0f 91       	pop	r16
     f42:	ff 90       	pop	r15
     f44:	ef 90       	pop	r14
     f46:	df 90       	pop	r13
     f48:	cf 90       	pop	r12
     f4a:	bf 90       	pop	r11
     f4c:	af 90       	pop	r10
     f4e:	9f 90       	pop	r9
     f50:	8f 90       	pop	r8
     f52:	08 95       	ret

00000f54 <move_window>:
     f54:	8f 92       	push	r8
     f56:	9f 92       	push	r9
     f58:	af 92       	push	r10
     f5a:	bf 92       	push	r11
     f5c:	ff 92       	push	r15
     f5e:	0f 93       	push	r16
     f60:	1f 93       	push	r17
     f62:	cf 93       	push	r28
     f64:	df 93       	push	r29
     f66:	ec 01       	movw	r28, r24
     f68:	4a 01       	movw	r8, r20
     f6a:	5b 01       	movw	r10, r22
     f6c:	8a a5       	ldd	r24, Y+42	; 0x2a
     f6e:	9b a5       	ldd	r25, Y+43	; 0x2b
     f70:	ac a5       	ldd	r26, Y+44	; 0x2c
     f72:	bd a5       	ldd	r27, Y+45	; 0x2d
     f74:	84 17       	cp	r24, r20
     f76:	95 07       	cpc	r25, r21
     f78:	a6 07       	cpc	r26, r22
     f7a:	b7 07       	cpc	r27, r23
     f7c:	d9 f0       	breq	.+54     	; 0xfb4 <move_window+0x60>
     f7e:	ce 01       	movw	r24, r28
     f80:	80 df       	rcall	.-256    	; 0xe82 <sync_window>
     f82:	f8 2e       	mov	r15, r24
     f84:	81 11       	cpse	r24, r1
     f86:	17 c0       	rjmp	.+46     	; 0xfb6 <move_window+0x62>
     f88:	01 e0       	ldi	r16, 0x01	; 1
     f8a:	10 e0       	ldi	r17, 0x00	; 0
     f8c:	a5 01       	movw	r20, r10
     f8e:	94 01       	movw	r18, r8
     f90:	be 01       	movw	r22, r28
     f92:	62 5d       	subi	r22, 0xD2	; 210
     f94:	7f 4f       	sbci	r23, 0xFF	; 255
     f96:	89 81       	ldd	r24, Y+1	; 0x01
     f98:	99 db       	rcall	.-2254   	; 0x6cc <disk_read>
     f9a:	88 23       	and	r24, r24
     f9c:	31 f0       	breq	.+12     	; 0xfaa <move_window+0x56>
     f9e:	ff 24       	eor	r15, r15
     fa0:	f3 94       	inc	r15
     fa2:	88 24       	eor	r8, r8
     fa4:	8a 94       	dec	r8
     fa6:	98 2c       	mov	r9, r8
     fa8:	54 01       	movw	r10, r8
     faa:	8a a6       	std	Y+42, r8	; 0x2a
     fac:	9b a6       	std	Y+43, r9	; 0x2b
     fae:	ac a6       	std	Y+44, r10	; 0x2c
     fb0:	bd a6       	std	Y+45, r11	; 0x2d
     fb2:	01 c0       	rjmp	.+2      	; 0xfb6 <move_window+0x62>
     fb4:	f1 2c       	mov	r15, r1
     fb6:	8f 2d       	mov	r24, r15
     fb8:	df 91       	pop	r29
     fba:	cf 91       	pop	r28
     fbc:	1f 91       	pop	r17
     fbe:	0f 91       	pop	r16
     fc0:	ff 90       	pop	r15
     fc2:	bf 90       	pop	r11
     fc4:	af 90       	pop	r10
     fc6:	9f 90       	pop	r9
     fc8:	8f 90       	pop	r8
     fca:	08 95       	ret

00000fcc <check_fs>:
     fcc:	cf 93       	push	r28
     fce:	df 93       	push	r29
     fd0:	ec 01       	movw	r28, r24
     fd2:	1c 82       	std	Y+4, r1	; 0x04
     fd4:	8f ef       	ldi	r24, 0xFF	; 255
     fd6:	9f ef       	ldi	r25, 0xFF	; 255
     fd8:	dc 01       	movw	r26, r24
     fda:	8a a7       	std	Y+42, r24	; 0x2a
     fdc:	9b a7       	std	Y+43, r25	; 0x2b
     fde:	ac a7       	std	Y+44, r26	; 0x2c
     fe0:	bd a7       	std	Y+45, r27	; 0x2d
     fe2:	ce 01       	movw	r24, r28
     fe4:	b7 df       	rcall	.-146    	; 0xf54 <move_window>
     fe6:	81 11       	cpse	r24, r1
     fe8:	51 c0       	rjmp	.+162    	; 0x108c <check_fs+0xc0>
     fea:	fe 01       	movw	r30, r28
     fec:	e3 5d       	subi	r30, 0xD3	; 211
     fee:	fd 4f       	sbci	r31, 0xFD	; 253
     ff0:	80 81       	ld	r24, Z
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	98 2f       	mov	r25, r24
     ff6:	88 27       	eor	r24, r24
     ff8:	31 97       	sbiw	r30, 0x01	; 1
     ffa:	20 81       	ld	r18, Z
     ffc:	82 2b       	or	r24, r18
     ffe:	85 35       	cpi	r24, 0x55	; 85
    1000:	9a 4a       	sbci	r25, 0xAA	; 170
    1002:	09 f0       	breq	.+2      	; 0x1006 <check_fs+0x3a>
    1004:	45 c0       	rjmp	.+138    	; 0x1090 <check_fs+0xc4>
    1006:	e5 5c       	subi	r30, 0xC5	; 197
    1008:	f1 40       	sbci	r31, 0x01	; 1
    100a:	20 81       	ld	r18, Z
    100c:	31 97       	sbiw	r30, 0x01	; 1
    100e:	80 81       	ld	r24, Z
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	a0 e0       	ldi	r26, 0x00	; 0
    1014:	b0 e0       	ldi	r27, 0x00	; 0
    1016:	dc 01       	movw	r26, r24
    1018:	99 27       	eor	r25, r25
    101a:	88 27       	eor	r24, r24
    101c:	b2 2b       	or	r27, r18
    101e:	32 97       	sbiw	r30, 0x02	; 2
    1020:	20 81       	ld	r18, Z
    1022:	82 2b       	or	r24, r18
    1024:	31 96       	adiw	r30, 0x01	; 1
    1026:	40 81       	ld	r20, Z
    1028:	50 e0       	ldi	r21, 0x00	; 0
    102a:	54 2f       	mov	r21, r20
    102c:	44 27       	eor	r20, r20
    102e:	60 e0       	ldi	r22, 0x00	; 0
    1030:	70 e0       	ldi	r23, 0x00	; 0
    1032:	84 2b       	or	r24, r20
    1034:	95 2b       	or	r25, r21
    1036:	a6 2b       	or	r26, r22
    1038:	b7 2b       	or	r27, r23
    103a:	bb 27       	eor	r27, r27
    103c:	86 34       	cpi	r24, 0x46	; 70
    103e:	91 44       	sbci	r25, 0x41	; 65
    1040:	a4 45       	sbci	r26, 0x54	; 84
    1042:	b1 05       	cpc	r27, r1
    1044:	39 f1       	breq	.+78     	; 0x1094 <check_fs+0xc8>
    1046:	7e 96       	adiw	r30, 0x1e	; 30
    1048:	80 81       	ld	r24, Z
    104a:	31 97       	sbiw	r30, 0x01	; 1
    104c:	40 81       	ld	r20, Z
    104e:	50 e0       	ldi	r21, 0x00	; 0
    1050:	60 e0       	ldi	r22, 0x00	; 0
    1052:	70 e0       	ldi	r23, 0x00	; 0
    1054:	ba 01       	movw	r22, r20
    1056:	55 27       	eor	r21, r21
    1058:	44 27       	eor	r20, r20
    105a:	78 2b       	or	r23, r24
    105c:	32 97       	sbiw	r30, 0x02	; 2
    105e:	80 81       	ld	r24, Z
    1060:	48 2b       	or	r20, r24
    1062:	cf 57       	subi	r28, 0x7F	; 127
    1064:	df 4f       	sbci	r29, 0xFF	; 255
    1066:	88 81       	ld	r24, Y
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	98 2f       	mov	r25, r24
    106c:	88 27       	eor	r24, r24
    106e:	a0 e0       	ldi	r26, 0x00	; 0
    1070:	b0 e0       	ldi	r27, 0x00	; 0
    1072:	48 2b       	or	r20, r24
    1074:	59 2b       	or	r21, r25
    1076:	6a 2b       	or	r22, r26
    1078:	7b 2b       	or	r23, r27
    107a:	77 27       	eor	r23, r23
    107c:	81 e0       	ldi	r24, 0x01	; 1
    107e:	46 34       	cpi	r20, 0x46	; 70
    1080:	51 44       	sbci	r21, 0x41	; 65
    1082:	64 45       	sbci	r22, 0x54	; 84
    1084:	71 05       	cpc	r23, r1
    1086:	39 f4       	brne	.+14     	; 0x1096 <check_fs+0xca>
    1088:	80 e0       	ldi	r24, 0x00	; 0
    108a:	05 c0       	rjmp	.+10     	; 0x1096 <check_fs+0xca>
    108c:	83 e0       	ldi	r24, 0x03	; 3
    108e:	03 c0       	rjmp	.+6      	; 0x1096 <check_fs+0xca>
    1090:	82 e0       	ldi	r24, 0x02	; 2
    1092:	01 c0       	rjmp	.+2      	; 0x1096 <check_fs+0xca>
    1094:	80 e0       	ldi	r24, 0x00	; 0
    1096:	df 91       	pop	r29
    1098:	cf 91       	pop	r28
    109a:	08 95       	ret

0000109c <validate>:
    109c:	00 97       	sbiw	r24, 0x00	; 0
    109e:	c1 f0       	breq	.+48     	; 0x10d0 <validate+0x34>
    10a0:	dc 01       	movw	r26, r24
    10a2:	ed 91       	ld	r30, X+
    10a4:	fc 91       	ld	r31, X
    10a6:	11 97       	sbiw	r26, 0x01	; 1
    10a8:	30 97       	sbiw	r30, 0x00	; 0
    10aa:	a1 f0       	breq	.+40     	; 0x10d4 <validate+0x38>
    10ac:	20 81       	ld	r18, Z
    10ae:	22 23       	and	r18, r18
    10b0:	99 f0       	breq	.+38     	; 0x10d8 <validate+0x3c>
    10b2:	26 81       	ldd	r18, Z+6	; 0x06
    10b4:	37 81       	ldd	r19, Z+7	; 0x07
    10b6:	12 96       	adiw	r26, 0x02	; 2
    10b8:	8d 91       	ld	r24, X+
    10ba:	9c 91       	ld	r25, X
    10bc:	13 97       	sbiw	r26, 0x03	; 3
    10be:	28 17       	cp	r18, r24
    10c0:	39 07       	cpc	r19, r25
    10c2:	61 f4       	brne	.+24     	; 0x10dc <validate+0x40>
    10c4:	81 81       	ldd	r24, Z+1	; 0x01
    10c6:	fb da       	rcall	.-2570   	; 0x6be <disk_status>
    10c8:	80 ff       	sbrs	r24, 0
    10ca:	0a c0       	rjmp	.+20     	; 0x10e0 <validate+0x44>
    10cc:	89 e0       	ldi	r24, 0x09	; 9
    10ce:	08 95       	ret
    10d0:	89 e0       	ldi	r24, 0x09	; 9
    10d2:	08 95       	ret
    10d4:	89 e0       	ldi	r24, 0x09	; 9
    10d6:	08 95       	ret
    10d8:	89 e0       	ldi	r24, 0x09	; 9
    10da:	08 95       	ret
    10dc:	89 e0       	ldi	r24, 0x09	; 9
    10de:	08 95       	ret
    10e0:	80 e0       	ldi	r24, 0x00	; 0
    10e2:	08 95       	ret

000010e4 <find_volume>:
    10e4:	2f 92       	push	r2
    10e6:	3f 92       	push	r3
    10e8:	4f 92       	push	r4
    10ea:	5f 92       	push	r5
    10ec:	6f 92       	push	r6
    10ee:	7f 92       	push	r7
    10f0:	8f 92       	push	r8
    10f2:	9f 92       	push	r9
    10f4:	af 92       	push	r10
    10f6:	bf 92       	push	r11
    10f8:	cf 92       	push	r12
    10fa:	df 92       	push	r13
    10fc:	ef 92       	push	r14
    10fe:	ff 92       	push	r15
    1100:	0f 93       	push	r16
    1102:	1f 93       	push	r17
    1104:	cf 93       	push	r28
    1106:	df 93       	push	r29
    1108:	cd b7       	in	r28, 0x3d	; 61
    110a:	de b7       	in	r29, 0x3e	; 62
    110c:	6d 97       	sbiw	r28, 0x1d	; 29
    110e:	0f b6       	in	r0, 0x3f	; 63
    1110:	f8 94       	cli
    1112:	de bf       	out	0x3e, r29	; 62
    1114:	0f be       	out	0x3f, r0	; 63
    1116:	cd bf       	out	0x3d, r28	; 61
    1118:	6c 01       	movw	r12, r24
    111a:	cb 01       	movw	r24, r22
    111c:	b4 2e       	mov	r11, r20
    111e:	d6 01       	movw	r26, r12
    1120:	1d 92       	st	X+, r1
    1122:	1c 92       	st	X, r1
    1124:	77 de       	rcall	.-786    	; 0xe14 <get_ldnumber>
    1126:	7c 01       	movw	r14, r24
    1128:	99 23       	and	r25, r25
    112a:	0c f4       	brge	.+2      	; 0x112e <find_volume+0x4a>
    112c:	d5 c2       	rjmp	.+1450   	; 0x16d8 <find_volume+0x5f4>
    112e:	fc 01       	movw	r30, r24
    1130:	ee 0f       	add	r30, r30
    1132:	ff 1f       	adc	r31, r31
    1134:	ef 54       	subi	r30, 0x4F	; 79
    1136:	fe 4f       	sbci	r31, 0xFE	; 254
    1138:	00 81       	ld	r16, Z
    113a:	11 81       	ldd	r17, Z+1	; 0x01
    113c:	01 15       	cp	r16, r1
    113e:	11 05       	cpc	r17, r1
    1140:	09 f4       	brne	.+2      	; 0x1144 <find_volume+0x60>
    1142:	cc c2       	rjmp	.+1432   	; 0x16dc <find_volume+0x5f8>
    1144:	f6 01       	movw	r30, r12
    1146:	11 83       	std	Z+1, r17	; 0x01
    1148:	00 83       	st	Z, r16
    114a:	d8 01       	movw	r26, r16
    114c:	8c 91       	ld	r24, X
    114e:	88 23       	and	r24, r24
    1150:	61 f0       	breq	.+24     	; 0x116a <find_volume+0x86>
    1152:	11 96       	adiw	r26, 0x01	; 1
    1154:	8c 91       	ld	r24, X
    1156:	b3 da       	rcall	.-2714   	; 0x6be <disk_status>
    1158:	80 fd       	sbrc	r24, 0
    115a:	07 c0       	rjmp	.+14     	; 0x116a <find_volume+0x86>
    115c:	bb 20       	and	r11, r11
    115e:	09 f4       	brne	.+2      	; 0x1162 <find_volume+0x7e>
    1160:	bf c2       	rjmp	.+1406   	; 0x16e0 <find_volume+0x5fc>
    1162:	82 ff       	sbrs	r24, 2
    1164:	bf c2       	rjmp	.+1406   	; 0x16e4 <find_volume+0x600>
    1166:	8a e0       	ldi	r24, 0x0A	; 10
    1168:	64 c3       	rjmp	.+1736   	; 0x1832 <find_volume+0x74e>
    116a:	f8 01       	movw	r30, r16
    116c:	10 82       	st	Z, r1
    116e:	e1 82       	std	Z+1, r14	; 0x01
    1170:	8e 2d       	mov	r24, r14
    1172:	e4 d9       	rcall	.-3128   	; 0x53c <disk_initialize>
    1174:	80 fd       	sbrc	r24, 0
    1176:	b8 c2       	rjmp	.+1392   	; 0x16e8 <find_volume+0x604>
    1178:	bb 20       	and	r11, r11
    117a:	09 f4       	brne	.+2      	; 0x117e <find_volume+0x9a>
    117c:	d5 c2       	rjmp	.+1450   	; 0x1728 <find_volume+0x644>
    117e:	82 fd       	sbrc	r24, 2
    1180:	b5 c2       	rjmp	.+1386   	; 0x16ec <find_volume+0x608>
    1182:	d2 c2       	rjmp	.+1444   	; 0x1728 <find_volume+0x644>
    1184:	df 01       	movw	r26, r30
    1186:	17 97       	sbiw	r26, 0x07	; 7
    1188:	8c 91       	ld	r24, X
    118a:	88 23       	and	r24, r24
    118c:	b9 f0       	breq	.+46     	; 0x11bc <find_volume+0xd8>
    118e:	14 96       	adiw	r26, 0x04	; 4
    1190:	cc 90       	ld	r12, X
    1192:	80 81       	ld	r24, Z
    1194:	d1 2c       	mov	r13, r1
    1196:	e1 2c       	mov	r14, r1
    1198:	f1 2c       	mov	r15, r1
    119a:	f8 2a       	or	r15, r24
    119c:	12 96       	adiw	r26, 0x02	; 2
    119e:	8c 91       	ld	r24, X
    11a0:	e8 2a       	or	r14, r24
    11a2:	11 97       	sbiw	r26, 0x01	; 1
    11a4:	ac 91       	ld	r26, X
    11a6:	b0 e0       	ldi	r27, 0x00	; 0
    11a8:	ba 2f       	mov	r27, r26
    11aa:	aa 27       	eor	r26, r26
    11ac:	cd 01       	movw	r24, r26
    11ae:	a0 e0       	ldi	r26, 0x00	; 0
    11b0:	b0 e0       	ldi	r27, 0x00	; 0
    11b2:	c8 2a       	or	r12, r24
    11b4:	d9 2a       	or	r13, r25
    11b6:	ea 2a       	or	r14, r26
    11b8:	fb 2a       	or	r15, r27
    11ba:	04 c0       	rjmp	.+8      	; 0x11c4 <find_volume+0xe0>
    11bc:	c8 2c       	mov	r12, r8
    11be:	d9 2c       	mov	r13, r9
    11c0:	e7 2e       	mov	r14, r23
    11c2:	f6 2e       	mov	r15, r22
    11c4:	d9 01       	movw	r26, r18
    11c6:	cd 92       	st	X+, r12
    11c8:	dd 92       	st	X+, r13
    11ca:	ed 92       	st	X+, r14
    11cc:	fd 92       	st	X+, r15
    11ce:	9d 01       	movw	r18, r26
    11d0:	70 96       	adiw	r30, 0x10	; 16
    11d2:	e4 17       	cp	r30, r20
    11d4:	f5 07       	cpc	r31, r21
    11d6:	b1 f6       	brne	.-84     	; 0x1184 <find_volume+0xa0>
    11d8:	4e 01       	movw	r8, r28
    11da:	b1 e1       	ldi	r27, 0x11	; 17
    11dc:	8b 0e       	add	r8, r27
    11de:	91 1c       	adc	r9, r1
    11e0:	68 94       	set
    11e2:	77 24       	eor	r7, r7
    11e4:	71 f8       	bld	r7, 1
    11e6:	f5 01       	movw	r30, r10
    11e8:	c1 90       	ld	r12, Z+
    11ea:	d1 90       	ld	r13, Z+
    11ec:	e1 90       	ld	r14, Z+
    11ee:	f1 90       	ld	r15, Z+
    11f0:	5f 01       	movw	r10, r30
    11f2:	c1 14       	cp	r12, r1
    11f4:	d1 04       	cpc	r13, r1
    11f6:	e1 04       	cpc	r14, r1
    11f8:	f1 04       	cpc	r15, r1
    11fa:	39 f0       	breq	.+14     	; 0x120a <find_volume+0x126>
    11fc:	b7 01       	movw	r22, r14
    11fe:	a6 01       	movw	r20, r12
    1200:	c8 01       	movw	r24, r16
    1202:	e4 de       	rcall	.-568    	; 0xfcc <check_fs>
    1204:	81 11       	cpse	r24, r1
    1206:	02 c0       	rjmp	.+4      	; 0x120c <find_volume+0x128>
    1208:	0d c0       	rjmp	.+26     	; 0x1224 <find_volume+0x140>
    120a:	87 2d       	mov	r24, r7
    120c:	a8 14       	cp	r10, r8
    120e:	b9 04       	cpc	r11, r9
    1210:	51 f7       	brne	.-44     	; 0x11e6 <find_volume+0x102>
    1212:	03 c0       	rjmp	.+6      	; 0x121a <find_volume+0x136>
    1214:	c1 2c       	mov	r12, r1
    1216:	d1 2c       	mov	r13, r1
    1218:	76 01       	movw	r14, r12
    121a:	83 30       	cpi	r24, 0x03	; 3
    121c:	09 f4       	brne	.+2      	; 0x1220 <find_volume+0x13c>
    121e:	68 c2       	rjmp	.+1232   	; 0x16f0 <find_volume+0x60c>
    1220:	81 11       	cpse	r24, r1
    1222:	68 c2       	rjmp	.+1232   	; 0x16f4 <find_volume+0x610>
    1224:	d8 01       	movw	r26, r16
    1226:	da 96       	adiw	r26, 0x3a	; 58
    1228:	8c 91       	ld	r24, X
    122a:	da 97       	sbiw	r26, 0x3a	; 58
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	98 2f       	mov	r25, r24
    1230:	88 27       	eor	r24, r24
    1232:	d9 96       	adiw	r26, 0x39	; 57
    1234:	2c 91       	ld	r18, X
    1236:	82 2b       	or	r24, r18
    1238:	81 15       	cp	r24, r1
    123a:	92 40       	sbci	r25, 0x02	; 2
    123c:	09 f0       	breq	.+2      	; 0x1240 <find_volume+0x15c>
    123e:	5c c2       	rjmp	.+1208   	; 0x16f8 <find_volume+0x614>
    1240:	f8 01       	movw	r30, r16
    1242:	eb 5b       	subi	r30, 0xBB	; 187
    1244:	ff 4f       	sbci	r31, 0xFF	; 255
    1246:	80 80       	ld	r8, Z
    1248:	91 2c       	mov	r9, r1
    124a:	98 2c       	mov	r9, r8
    124c:	88 24       	eor	r8, r8
    124e:	31 97       	sbiw	r30, 0x01	; 1
    1250:	80 81       	ld	r24, Z
    1252:	88 2a       	or	r8, r24
    1254:	a1 2c       	mov	r10, r1
    1256:	b1 2c       	mov	r11, r1
    1258:	81 14       	cp	r8, r1
    125a:	91 04       	cpc	r9, r1
    125c:	a1 04       	cpc	r10, r1
    125e:	b1 04       	cpc	r11, r1
    1260:	e9 f4       	brne	.+58     	; 0x129c <find_volume+0x1b8>
    1262:	71 96       	adiw	r30, 0x11	; 17
    1264:	80 81       	ld	r24, Z
    1266:	31 97       	sbiw	r30, 0x01	; 1
    1268:	80 80       	ld	r8, Z
    126a:	91 2c       	mov	r9, r1
    126c:	a1 2c       	mov	r10, r1
    126e:	b1 2c       	mov	r11, r1
    1270:	54 01       	movw	r10, r8
    1272:	99 24       	eor	r9, r9
    1274:	88 24       	eor	r8, r8
    1276:	b8 2a       	or	r11, r24
    1278:	32 97       	sbiw	r30, 0x02	; 2
    127a:	80 81       	ld	r24, Z
    127c:	a5 01       	movw	r20, r10
    127e:	94 01       	movw	r18, r8
    1280:	28 2b       	or	r18, r24
    1282:	da 01       	movw	r26, r20
    1284:	c9 01       	movw	r24, r18
    1286:	31 96       	adiw	r30, 0x01	; 1
    1288:	80 80       	ld	r8, Z
    128a:	91 2c       	mov	r9, r1
    128c:	98 2c       	mov	r9, r8
    128e:	88 24       	eor	r8, r8
    1290:	a1 2c       	mov	r10, r1
    1292:	b1 2c       	mov	r11, r1
    1294:	88 2a       	or	r8, r24
    1296:	99 2a       	or	r9, r25
    1298:	aa 2a       	or	r10, r26
    129a:	bb 2a       	or	r11, r27
    129c:	d8 01       	movw	r26, r16
    129e:	56 96       	adiw	r26, 0x16	; 22
    12a0:	8d 92       	st	X+, r8
    12a2:	9d 92       	st	X+, r9
    12a4:	ad 92       	st	X+, r10
    12a6:	bc 92       	st	X, r11
    12a8:	59 97       	sbiw	r26, 0x19	; 25
    12aa:	de 96       	adiw	r26, 0x3e	; 62
    12ac:	ac 91       	ld	r26, X
    12ae:	f8 01       	movw	r30, r16
    12b0:	a3 83       	std	Z+3, r26	; 0x03
    12b2:	8f ef       	ldi	r24, 0xFF	; 255
    12b4:	8a 0f       	add	r24, r26
    12b6:	82 30       	cpi	r24, 0x02	; 2
    12b8:	08 f0       	brcs	.+2      	; 0x12bc <find_volume+0x1d8>
    12ba:	20 c2       	rjmp	.+1088   	; 0x16fc <find_volume+0x618>
    12bc:	f3 ad       	ldd	r31, Z+59	; 0x3b
    12be:	f9 8b       	std	Y+17, r31	; 0x11
    12c0:	2f 2f       	mov	r18, r31
    12c2:	f8 01       	movw	r30, r16
    12c4:	22 83       	std	Z+2, r18	; 0x02
    12c6:	22 23       	and	r18, r18
    12c8:	09 f4       	brne	.+2      	; 0x12cc <find_volume+0x1e8>
    12ca:	1a c2       	rjmp	.+1076   	; 0x1700 <find_volume+0x61c>
    12cc:	82 2f       	mov	r24, r18
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	9c 01       	movw	r18, r24
    12d2:	21 50       	subi	r18, 0x01	; 1
    12d4:	31 09       	sbc	r19, r1
    12d6:	82 23       	and	r24, r18
    12d8:	93 23       	and	r25, r19
    12da:	89 2b       	or	r24, r25
    12dc:	09 f0       	breq	.+2      	; 0x12e0 <find_volume+0x1fc>
    12de:	12 c2       	rjmp	.+1060   	; 0x1704 <find_volume+0x620>
    12e0:	e0 5c       	subi	r30, 0xC0	; 192
    12e2:	ff 4f       	sbci	r31, 0xFF	; 255
    12e4:	80 81       	ld	r24, Z
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	98 2f       	mov	r25, r24
    12ea:	88 27       	eor	r24, r24
    12ec:	f8 01       	movw	r30, r16
    12ee:	27 ad       	ldd	r18, Z+63	; 0x3f
    12f0:	1c 01       	movw	r2, r24
    12f2:	22 2a       	or	r2, r18
    12f4:	31 86       	std	Z+9, r3	; 0x09
    12f6:	20 86       	std	Z+8, r2	; 0x08
    12f8:	c1 01       	movw	r24, r2
    12fa:	8f 70       	andi	r24, 0x0F	; 15
    12fc:	99 27       	eor	r25, r25
    12fe:	89 2b       	or	r24, r25
    1300:	09 f0       	breq	.+2      	; 0x1304 <find_volume+0x220>
    1302:	02 c2       	rjmp	.+1028   	; 0x1708 <find_volume+0x624>
    1304:	ee 5b       	subi	r30, 0xBE	; 190
    1306:	ff 4f       	sbci	r31, 0xFF	; 255
    1308:	40 80       	ld	r4, Z
    130a:	51 2c       	mov	r5, r1
    130c:	54 2c       	mov	r5, r4
    130e:	44 24       	eor	r4, r4
    1310:	31 97       	sbiw	r30, 0x01	; 1
    1312:	80 81       	ld	r24, Z
    1314:	48 2a       	or	r4, r24
    1316:	61 2c       	mov	r6, r1
    1318:	71 2c       	mov	r7, r1
    131a:	41 14       	cp	r4, r1
    131c:	51 04       	cpc	r5, r1
    131e:	61 04       	cpc	r6, r1
    1320:	71 04       	cpc	r7, r1
    1322:	d1 f4       	brne	.+52     	; 0x1358 <find_volume+0x274>
    1324:	70 96       	adiw	r30, 0x10	; 16
    1326:	80 81       	ld	r24, Z
    1328:	31 97       	sbiw	r30, 0x01	; 1
    132a:	40 80       	ld	r4, Z
    132c:	51 2c       	mov	r5, r1
    132e:	61 2c       	mov	r6, r1
    1330:	71 2c       	mov	r7, r1
    1332:	32 01       	movw	r6, r4
    1334:	55 24       	eor	r5, r5
    1336:	44 24       	eor	r4, r4
    1338:	78 2a       	or	r7, r24
    133a:	32 97       	sbiw	r30, 0x02	; 2
    133c:	80 81       	ld	r24, Z
    133e:	48 2a       	or	r4, r24
    1340:	31 96       	adiw	r30, 0x01	; 1
    1342:	80 81       	ld	r24, Z
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	98 2f       	mov	r25, r24
    1348:	88 27       	eor	r24, r24
    134a:	ac 01       	movw	r20, r24
    134c:	60 e0       	ldi	r22, 0x00	; 0
    134e:	70 e0       	ldi	r23, 0x00	; 0
    1350:	44 2a       	or	r4, r20
    1352:	55 2a       	or	r5, r21
    1354:	66 2a       	or	r6, r22
    1356:	77 2a       	or	r7, r23
    1358:	f8 01       	movw	r30, r16
    135a:	85 ad       	ldd	r24, Z+61	; 0x3d
    135c:	e8 2f       	mov	r30, r24
    135e:	f0 e0       	ldi	r31, 0x00	; 0
    1360:	3e 2f       	mov	r19, r30
    1362:	22 27       	eor	r18, r18
    1364:	f8 01       	movw	r30, r16
    1366:	84 ad       	ldd	r24, Z+60	; 0x3c
    1368:	f9 01       	movw	r30, r18
    136a:	e8 2b       	or	r30, r24
    136c:	30 97       	sbiw	r30, 0x00	; 0
    136e:	09 f4       	brne	.+2      	; 0x1372 <find_volume+0x28e>
    1370:	cd c1       	rjmp	.+922    	; 0x170c <find_volume+0x628>
    1372:	b0 e0       	ldi	r27, 0x00	; 0
    1374:	a5 01       	movw	r20, r10
    1376:	94 01       	movw	r18, r8
    1378:	0e 94 b4 1c 	call	0x3968	; 0x3968 <__muluhisi3>
    137c:	6a 8f       	std	Y+26, r22	; 0x1a
    137e:	7b 8f       	std	Y+27, r23	; 0x1b
    1380:	8c 8f       	std	Y+28, r24	; 0x1c
    1382:	9d 8f       	std	Y+29, r25	; 0x1d
    1384:	9f 01       	movw	r18, r30
    1386:	40 e0       	ldi	r20, 0x00	; 0
    1388:	50 e0       	ldi	r21, 0x00	; 0
    138a:	2e 8b       	std	Y+22, r18	; 0x16
    138c:	3f 8b       	std	Y+23, r19	; 0x17
    138e:	48 8f       	std	Y+24, r20	; 0x18
    1390:	59 8f       	std	Y+25, r21	; 0x19
    1392:	c1 01       	movw	r24, r2
    1394:	92 95       	swap	r25
    1396:	82 95       	swap	r24
    1398:	8f 70       	andi	r24, 0x0F	; 15
    139a:	89 27       	eor	r24, r25
    139c:	9f 70       	andi	r25, 0x0F	; 15
    139e:	89 27       	eor	r24, r25
    13a0:	28 0f       	add	r18, r24
    13a2:	39 1f       	adc	r19, r25
    13a4:	41 1d       	adc	r20, r1
    13a6:	51 1d       	adc	r21, r1
    13a8:	da 01       	movw	r26, r20
    13aa:	c9 01       	movw	r24, r18
    13ac:	2a 8d       	ldd	r18, Y+26	; 0x1a
    13ae:	3b 8d       	ldd	r19, Y+27	; 0x1b
    13b0:	4c 8d       	ldd	r20, Y+28	; 0x1c
    13b2:	5d 8d       	ldd	r21, Y+29	; 0x1d
    13b4:	28 0f       	add	r18, r24
    13b6:	39 1f       	adc	r19, r25
    13b8:	4a 1f       	adc	r20, r26
    13ba:	5b 1f       	adc	r21, r27
    13bc:	2a 8b       	std	Y+18, r18	; 0x12
    13be:	3b 8b       	std	Y+19, r19	; 0x13
    13c0:	4c 8b       	std	Y+20, r20	; 0x14
    13c2:	5d 8b       	std	Y+21, r21	; 0x15
    13c4:	42 16       	cp	r4, r18
    13c6:	53 06       	cpc	r5, r19
    13c8:	64 06       	cpc	r6, r20
    13ca:	75 06       	cpc	r7, r21
    13cc:	08 f4       	brcc	.+2      	; 0x13d0 <find_volume+0x2ec>
    13ce:	a0 c1       	rjmp	.+832    	; 0x1710 <find_volume+0x62c>
    13d0:	c3 01       	movw	r24, r6
    13d2:	b2 01       	movw	r22, r4
    13d4:	62 1b       	sub	r22, r18
    13d6:	73 0b       	sbc	r23, r19
    13d8:	84 0b       	sbc	r24, r20
    13da:	95 0b       	sbc	r25, r21
    13dc:	e9 89       	ldd	r30, Y+17	; 0x11
    13de:	2e 2f       	mov	r18, r30
    13e0:	30 e0       	ldi	r19, 0x00	; 0
    13e2:	40 e0       	ldi	r20, 0x00	; 0
    13e4:	50 e0       	ldi	r21, 0x00	; 0
    13e6:	0e 94 89 1c 	call	0x3912	; 0x3912 <__udivmodsi4>
    13ea:	da 01       	movw	r26, r20
    13ec:	c9 01       	movw	r24, r18
    13ee:	21 15       	cp	r18, r1
    13f0:	31 05       	cpc	r19, r1
    13f2:	41 05       	cpc	r20, r1
    13f4:	51 05       	cpc	r21, r1
    13f6:	09 f4       	brne	.+2      	; 0x13fa <find_volume+0x316>
    13f8:	8d c1       	rjmp	.+794    	; 0x1714 <find_volume+0x630>
    13fa:	26 3f       	cpi	r18, 0xF6	; 246
    13fc:	ff e0       	ldi	r31, 0x0F	; 15
    13fe:	3f 07       	cpc	r19, r31
    1400:	41 05       	cpc	r20, r1
    1402:	51 05       	cpc	r21, r1
    1404:	18 f0       	brcs	.+6      	; 0x140c <find_volume+0x328>
    1406:	e2 e0       	ldi	r30, 0x02	; 2
    1408:	e9 8b       	std	Y+17, r30	; 0x11
    140a:	02 c0       	rjmp	.+4      	; 0x1410 <find_volume+0x32c>
    140c:	f1 e0       	ldi	r31, 0x01	; 1
    140e:	f9 8b       	std	Y+17, r31	; 0x11
    1410:	86 3f       	cpi	r24, 0xF6	; 246
    1412:	9f 4f       	sbci	r25, 0xFF	; 255
    1414:	a1 05       	cpc	r26, r1
    1416:	b1 05       	cpc	r27, r1
    1418:	08 f0       	brcs	.+2      	; 0x141c <find_volume+0x338>
    141a:	9d c1       	rjmp	.+826    	; 0x1756 <find_volume+0x672>
    141c:	29 01       	movw	r4, r18
    141e:	3a 01       	movw	r6, r20
    1420:	82 e0       	ldi	r24, 0x02	; 2
    1422:	48 0e       	add	r4, r24
    1424:	51 1c       	adc	r5, r1
    1426:	61 1c       	adc	r6, r1
    1428:	71 1c       	adc	r7, r1
    142a:	d8 01       	movw	r26, r16
    142c:	52 96       	adiw	r26, 0x12	; 18
    142e:	4d 92       	st	X+, r4
    1430:	5d 92       	st	X+, r5
    1432:	6d 92       	st	X+, r6
    1434:	7c 92       	st	X, r7
    1436:	55 97       	sbiw	r26, 0x15	; 21
    1438:	f8 01       	movw	r30, r16
    143a:	c2 8e       	std	Z+26, r12	; 0x1a
    143c:	d3 8e       	std	Z+27, r13	; 0x1b
    143e:	e4 8e       	std	Z+28, r14	; 0x1c
    1440:	f5 8e       	std	Z+29, r15	; 0x1d
    1442:	8e 89       	ldd	r24, Y+22	; 0x16
    1444:	9f 89       	ldd	r25, Y+23	; 0x17
    1446:	a8 8d       	ldd	r26, Y+24	; 0x18
    1448:	b9 8d       	ldd	r27, Y+25	; 0x19
    144a:	8c 0d       	add	r24, r12
    144c:	9d 1d       	adc	r25, r13
    144e:	ae 1d       	adc	r26, r14
    1450:	bf 1d       	adc	r27, r15
    1452:	86 8f       	std	Z+30, r24	; 0x1e
    1454:	97 8f       	std	Z+31, r25	; 0x1f
    1456:	a0 a3       	std	Z+32, r26	; 0x20
    1458:	b1 a3       	std	Z+33, r27	; 0x21
    145a:	4a 89       	ldd	r20, Y+18	; 0x12
    145c:	5b 89       	ldd	r21, Y+19	; 0x13
    145e:	6c 89       	ldd	r22, Y+20	; 0x14
    1460:	7d 89       	ldd	r23, Y+21	; 0x15
    1462:	4c 0d       	add	r20, r12
    1464:	5d 1d       	adc	r21, r13
    1466:	6e 1d       	adc	r22, r14
    1468:	7f 1d       	adc	r23, r15
    146a:	46 a3       	std	Z+38, r20	; 0x26
    146c:	57 a3       	std	Z+39, r21	; 0x27
    146e:	60 a7       	std	Z+40, r22	; 0x28
    1470:	71 a7       	std	Z+41, r23	; 0x29
    1472:	f9 89       	ldd	r31, Y+17	; 0x11
    1474:	f3 30       	cpi	r31, 0x03	; 3
    1476:	09 f0       	breq	.+2      	; 0x147a <find_volume+0x396>
    1478:	44 c0       	rjmp	.+136    	; 0x1502 <find_volume+0x41e>
    147a:	23 28       	or	r2, r3
    147c:	09 f0       	breq	.+2      	; 0x1480 <find_volume+0x39c>
    147e:	4c c1       	rjmp	.+664    	; 0x1718 <find_volume+0x634>
    1480:	f8 01       	movw	r30, r16
    1482:	e3 5a       	subi	r30, 0xA3	; 163
    1484:	ff 4f       	sbci	r31, 0xFF	; 255
    1486:	20 81       	ld	r18, Z
    1488:	31 97       	sbiw	r30, 0x01	; 1
    148a:	80 81       	ld	r24, Z
    148c:	90 e0       	ldi	r25, 0x00	; 0
    148e:	a0 e0       	ldi	r26, 0x00	; 0
    1490:	b0 e0       	ldi	r27, 0x00	; 0
    1492:	dc 01       	movw	r26, r24
    1494:	99 27       	eor	r25, r25
    1496:	88 27       	eor	r24, r24
    1498:	b2 2b       	or	r27, r18
    149a:	32 97       	sbiw	r30, 0x02	; 2
    149c:	20 81       	ld	r18, Z
    149e:	ac 01       	movw	r20, r24
    14a0:	bd 01       	movw	r22, r26
    14a2:	42 2b       	or	r20, r18
    14a4:	31 96       	adiw	r30, 0x01	; 1
    14a6:	80 81       	ld	r24, Z
    14a8:	28 2f       	mov	r18, r24
    14aa:	30 e0       	ldi	r19, 0x00	; 0
    14ac:	92 2f       	mov	r25, r18
    14ae:	88 27       	eor	r24, r24
    14b0:	a0 e0       	ldi	r26, 0x00	; 0
    14b2:	b0 e0       	ldi	r27, 0x00	; 0
    14b4:	84 2b       	or	r24, r20
    14b6:	95 2b       	or	r25, r21
    14b8:	a6 2b       	or	r26, r22
    14ba:	b7 2b       	or	r27, r23
    14bc:	f8 01       	movw	r30, r16
    14be:	82 a3       	std	Z+34, r24	; 0x22
    14c0:	93 a3       	std	Z+35, r25	; 0x23
    14c2:	a4 a3       	std	Z+36, r26	; 0x24
    14c4:	b5 a3       	std	Z+37, r27	; 0x25
    14c6:	44 0c       	add	r4, r4
    14c8:	55 1c       	adc	r5, r5
    14ca:	66 1c       	adc	r6, r6
    14cc:	77 1c       	adc	r7, r7
    14ce:	44 0c       	add	r4, r4
    14d0:	55 1c       	adc	r5, r5
    14d2:	66 1c       	adc	r6, r6
    14d4:	77 1c       	adc	r7, r7
    14d6:	ff ef       	ldi	r31, 0xFF	; 255
    14d8:	4f 0e       	add	r4, r31
    14da:	f1 e0       	ldi	r31, 0x01	; 1
    14dc:	5f 1e       	adc	r5, r31
    14de:	61 1c       	adc	r6, r1
    14e0:	71 1c       	adc	r7, r1
    14e2:	03 2e       	mov	r0, r19
    14e4:	39 e0       	ldi	r19, 0x09	; 9
    14e6:	76 94       	lsr	r7
    14e8:	67 94       	ror	r6
    14ea:	57 94       	ror	r5
    14ec:	47 94       	ror	r4
    14ee:	3a 95       	dec	r19
    14f0:	d1 f7       	brne	.-12     	; 0x14e6 <find_volume+0x402>
    14f2:	30 2d       	mov	r19, r0
    14f4:	84 14       	cp	r8, r4
    14f6:	95 04       	cpc	r9, r5
    14f8:	a6 04       	cpc	r10, r6
    14fa:	b7 04       	cpc	r11, r7
    14fc:	08 f4       	brcc	.+2      	; 0x1500 <find_volume+0x41c>
    14fe:	0e c1       	rjmp	.+540    	; 0x171c <find_volume+0x638>
    1500:	56 c1       	rjmp	.+684    	; 0x17ae <find_volume+0x6ca>
    1502:	23 28       	or	r2, r3
    1504:	09 f4       	brne	.+2      	; 0x1508 <find_volume+0x424>
    1506:	0c c1       	rjmp	.+536    	; 0x1720 <find_volume+0x63c>
    1508:	2a 8d       	ldd	r18, Y+26	; 0x1a
    150a:	3b 8d       	ldd	r19, Y+27	; 0x1b
    150c:	4c 8d       	ldd	r20, Y+28	; 0x1c
    150e:	5d 8d       	ldd	r21, Y+29	; 0x1d
    1510:	82 0f       	add	r24, r18
    1512:	93 1f       	adc	r25, r19
    1514:	a4 1f       	adc	r26, r20
    1516:	b5 1f       	adc	r27, r21
    1518:	f8 01       	movw	r30, r16
    151a:	82 a3       	std	Z+34, r24	; 0x22
    151c:	93 a3       	std	Z+35, r25	; 0x23
    151e:	a4 a3       	std	Z+36, r26	; 0x24
    1520:	b5 a3       	std	Z+37, r27	; 0x25
    1522:	f9 89       	ldd	r31, Y+17	; 0x11
    1524:	f2 30       	cpi	r31, 0x02	; 2
    1526:	29 f4       	brne	.+10     	; 0x1532 <find_volume+0x44e>
    1528:	44 0c       	add	r4, r4
    152a:	55 1c       	adc	r5, r5
    152c:	66 1c       	adc	r6, r6
    152e:	77 1c       	adc	r7, r7
    1530:	6a c1       	rjmp	.+724    	; 0x1806 <find_volume+0x722>
    1532:	a3 e0       	ldi	r26, 0x03	; 3
    1534:	b0 e0       	ldi	r27, 0x00	; 0
    1536:	a3 01       	movw	r20, r6
    1538:	92 01       	movw	r18, r4
    153a:	0e 94 b4 1c 	call	0x3968	; 0x3968 <__muluhisi3>
    153e:	dc 01       	movw	r26, r24
    1540:	cb 01       	movw	r24, r22
    1542:	b6 95       	lsr	r27
    1544:	a7 95       	ror	r26
    1546:	97 95       	ror	r25
    1548:	87 95       	ror	r24
    154a:	21 e0       	ldi	r18, 0x01	; 1
    154c:	42 22       	and	r4, r18
    154e:	55 24       	eor	r5, r5
    1550:	66 24       	eor	r6, r6
    1552:	77 24       	eor	r7, r7
    1554:	48 0e       	add	r4, r24
    1556:	59 1e       	adc	r5, r25
    1558:	6a 1e       	adc	r6, r26
    155a:	7b 1e       	adc	r7, r27
    155c:	54 c1       	rjmp	.+680    	; 0x1806 <find_volume+0x722>
    155e:	b7 01       	movw	r22, r14
    1560:	a6 01       	movw	r20, r12
    1562:	4f 5f       	subi	r20, 0xFF	; 255
    1564:	5f 4f       	sbci	r21, 0xFF	; 255
    1566:	6f 4f       	sbci	r22, 0xFF	; 255
    1568:	7f 4f       	sbci	r23, 0xFF	; 255
    156a:	c8 01       	movw	r24, r16
    156c:	f3 dc       	rcall	.-1562   	; 0xf54 <move_window>
    156e:	81 11       	cpse	r24, r1
    1570:	96 c0       	rjmp	.+300    	; 0x169e <find_volume+0x5ba>
    1572:	d8 01       	movw	r26, r16
    1574:	15 96       	adiw	r26, 0x05	; 5
    1576:	1c 92       	st	X, r1
    1578:	f8 01       	movw	r30, r16
    157a:	e3 5d       	subi	r30, 0xD3	; 211
    157c:	fd 4f       	sbci	r31, 0xFD	; 253
    157e:	80 81       	ld	r24, Z
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	98 2f       	mov	r25, r24
    1584:	88 27       	eor	r24, r24
    1586:	31 97       	sbiw	r30, 0x01	; 1
    1588:	20 81       	ld	r18, Z
    158a:	82 2b       	or	r24, r18
    158c:	85 35       	cpi	r24, 0x55	; 85
    158e:	9a 4a       	sbci	r25, 0xAA	; 170
    1590:	09 f0       	breq	.+2      	; 0x1594 <find_volume+0x4b0>
    1592:	88 c0       	rjmp	.+272    	; 0x16a4 <find_volume+0x5c0>
    1594:	f8 01       	movw	r30, r16
    1596:	21 a9       	ldd	r18, Z+49	; 0x31
    1598:	80 a9       	ldd	r24, Z+48	; 0x30
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	a0 e0       	ldi	r26, 0x00	; 0
    159e:	b0 e0       	ldi	r27, 0x00	; 0
    15a0:	dc 01       	movw	r26, r24
    15a2:	99 27       	eor	r25, r25
    15a4:	88 27       	eor	r24, r24
    15a6:	b2 2b       	or	r27, r18
    15a8:	26 a5       	ldd	r18, Z+46	; 0x2e
    15aa:	ac 01       	movw	r20, r24
    15ac:	bd 01       	movw	r22, r26
    15ae:	42 2b       	or	r20, r18
    15b0:	27 a5       	ldd	r18, Z+47	; 0x2f
    15b2:	30 e0       	ldi	r19, 0x00	; 0
    15b4:	92 2f       	mov	r25, r18
    15b6:	88 27       	eor	r24, r24
    15b8:	a0 e0       	ldi	r26, 0x00	; 0
    15ba:	b0 e0       	ldi	r27, 0x00	; 0
    15bc:	84 2b       	or	r24, r20
    15be:	95 2b       	or	r25, r21
    15c0:	a6 2b       	or	r26, r22
    15c2:	b7 2b       	or	r27, r23
    15c4:	82 35       	cpi	r24, 0x52	; 82
    15c6:	92 45       	sbci	r25, 0x52	; 82
    15c8:	a1 46       	sbci	r26, 0x61	; 97
    15ca:	b1 44       	sbci	r27, 0x41	; 65
    15cc:	09 f0       	breq	.+2      	; 0x15d0 <find_volume+0x4ec>
    15ce:	6d c0       	rjmp	.+218    	; 0x16aa <find_volume+0x5c6>
    15d0:	f8 01       	movw	r30, r16
    15d2:	eb 5e       	subi	r30, 0xEB	; 235
    15d4:	fd 4f       	sbci	r31, 0xFD	; 253
    15d6:	20 81       	ld	r18, Z
    15d8:	31 97       	sbiw	r30, 0x01	; 1
    15da:	80 81       	ld	r24, Z
    15dc:	90 e0       	ldi	r25, 0x00	; 0
    15de:	a0 e0       	ldi	r26, 0x00	; 0
    15e0:	b0 e0       	ldi	r27, 0x00	; 0
    15e2:	dc 01       	movw	r26, r24
    15e4:	99 27       	eor	r25, r25
    15e6:	88 27       	eor	r24, r24
    15e8:	b2 2b       	or	r27, r18
    15ea:	32 97       	sbiw	r30, 0x02	; 2
    15ec:	20 81       	ld	r18, Z
    15ee:	ac 01       	movw	r20, r24
    15f0:	bd 01       	movw	r22, r26
    15f2:	42 2b       	or	r20, r18
    15f4:	31 96       	adiw	r30, 0x01	; 1
    15f6:	20 81       	ld	r18, Z
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	92 2f       	mov	r25, r18
    15fc:	88 27       	eor	r24, r24
    15fe:	a0 e0       	ldi	r26, 0x00	; 0
    1600:	b0 e0       	ldi	r27, 0x00	; 0
    1602:	84 2b       	or	r24, r20
    1604:	95 2b       	or	r25, r21
    1606:	a6 2b       	or	r26, r22
    1608:	b7 2b       	or	r27, r23
    160a:	82 37       	cpi	r24, 0x72	; 114
    160c:	92 47       	sbci	r25, 0x72	; 114
    160e:	a1 44       	sbci	r26, 0x41	; 65
    1610:	b1 46       	sbci	r27, 0x61	; 97
    1612:	09 f0       	breq	.+2      	; 0x1616 <find_volume+0x532>
    1614:	4d c0       	rjmp	.+154    	; 0x16b0 <find_volume+0x5cc>
    1616:	36 96       	adiw	r30, 0x06	; 6
    1618:	20 81       	ld	r18, Z
    161a:	31 97       	sbiw	r30, 0x01	; 1
    161c:	80 81       	ld	r24, Z
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	a0 e0       	ldi	r26, 0x00	; 0
    1622:	b0 e0       	ldi	r27, 0x00	; 0
    1624:	dc 01       	movw	r26, r24
    1626:	99 27       	eor	r25, r25
    1628:	88 27       	eor	r24, r24
    162a:	b2 2b       	or	r27, r18
    162c:	32 97       	sbiw	r30, 0x02	; 2
    162e:	20 81       	ld	r18, Z
    1630:	ac 01       	movw	r20, r24
    1632:	bd 01       	movw	r22, r26
    1634:	42 2b       	or	r20, r18
    1636:	31 96       	adiw	r30, 0x01	; 1
    1638:	20 81       	ld	r18, Z
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	92 2f       	mov	r25, r18
    163e:	88 27       	eor	r24, r24
    1640:	a0 e0       	ldi	r26, 0x00	; 0
    1642:	b0 e0       	ldi	r27, 0x00	; 0
    1644:	84 2b       	or	r24, r20
    1646:	95 2b       	or	r25, r21
    1648:	a6 2b       	or	r26, r22
    164a:	b7 2b       	or	r27, r23
    164c:	f8 01       	movw	r30, r16
    164e:	86 87       	std	Z+14, r24	; 0x0e
    1650:	97 87       	std	Z+15, r25	; 0x0f
    1652:	a0 8b       	std	Z+16, r26	; 0x10
    1654:	b1 8b       	std	Z+17, r27	; 0x11
    1656:	e3 5e       	subi	r30, 0xE3	; 227
    1658:	fd 4f       	sbci	r31, 0xFD	; 253
    165a:	20 81       	ld	r18, Z
    165c:	31 97       	sbiw	r30, 0x01	; 1
    165e:	80 81       	ld	r24, Z
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	a0 e0       	ldi	r26, 0x00	; 0
    1664:	b0 e0       	ldi	r27, 0x00	; 0
    1666:	dc 01       	movw	r26, r24
    1668:	99 27       	eor	r25, r25
    166a:	88 27       	eor	r24, r24
    166c:	b2 2b       	or	r27, r18
    166e:	32 97       	sbiw	r30, 0x02	; 2
    1670:	20 81       	ld	r18, Z
    1672:	ac 01       	movw	r20, r24
    1674:	bd 01       	movw	r22, r26
    1676:	42 2b       	or	r20, r18
    1678:	31 96       	adiw	r30, 0x01	; 1
    167a:	20 81       	ld	r18, Z
    167c:	30 e0       	ldi	r19, 0x00	; 0
    167e:	92 2f       	mov	r25, r18
    1680:	88 27       	eor	r24, r24
    1682:	a0 e0       	ldi	r26, 0x00	; 0
    1684:	b0 e0       	ldi	r27, 0x00	; 0
    1686:	84 2b       	or	r24, r20
    1688:	95 2b       	or	r25, r21
    168a:	a6 2b       	or	r26, r22
    168c:	b7 2b       	or	r27, r23
    168e:	f8 01       	movw	r30, r16
    1690:	82 87       	std	Z+10, r24	; 0x0a
    1692:	93 87       	std	Z+11, r25	; 0x0b
    1694:	a4 87       	std	Z+12, r26	; 0x0c
    1696:	b5 87       	std	Z+13, r27	; 0x0d
    1698:	f3 e0       	ldi	r31, 0x03	; 3
    169a:	f9 8b       	std	Y+17, r31	; 0x11
    169c:	0b c0       	rjmp	.+22     	; 0x16b4 <find_volume+0x5d0>
    169e:	e3 e0       	ldi	r30, 0x03	; 3
    16a0:	e9 8b       	std	Y+17, r30	; 0x11
    16a2:	08 c0       	rjmp	.+16     	; 0x16b4 <find_volume+0x5d0>
    16a4:	f3 e0       	ldi	r31, 0x03	; 3
    16a6:	f9 8b       	std	Y+17, r31	; 0x11
    16a8:	05 c0       	rjmp	.+10     	; 0x16b4 <find_volume+0x5d0>
    16aa:	e3 e0       	ldi	r30, 0x03	; 3
    16ac:	e9 8b       	std	Y+17, r30	; 0x11
    16ae:	02 c0       	rjmp	.+4      	; 0x16b4 <find_volume+0x5d0>
    16b0:	f3 e0       	ldi	r31, 0x03	; 3
    16b2:	f9 8b       	std	Y+17, r31	; 0x11
    16b4:	e9 89       	ldd	r30, Y+17	; 0x11
    16b6:	d8 01       	movw	r26, r16
    16b8:	ec 93       	st	X, r30
    16ba:	80 91 af 01 	lds	r24, 0x01AF
    16be:	90 91 b0 01 	lds	r25, 0x01B0
    16c2:	01 96       	adiw	r24, 0x01	; 1
    16c4:	90 93 b0 01 	sts	0x01B0, r25
    16c8:	80 93 af 01 	sts	0x01AF, r24
    16cc:	17 96       	adiw	r26, 0x07	; 7
    16ce:	9c 93       	st	X, r25
    16d0:	8e 93       	st	-X, r24
    16d2:	16 97       	sbiw	r26, 0x06	; 6
    16d4:	80 e0       	ldi	r24, 0x00	; 0
    16d6:	ad c0       	rjmp	.+346    	; 0x1832 <find_volume+0x74e>
    16d8:	8b e0       	ldi	r24, 0x0B	; 11
    16da:	ab c0       	rjmp	.+342    	; 0x1832 <find_volume+0x74e>
    16dc:	8c e0       	ldi	r24, 0x0C	; 12
    16de:	a9 c0       	rjmp	.+338    	; 0x1832 <find_volume+0x74e>
    16e0:	80 e0       	ldi	r24, 0x00	; 0
    16e2:	a7 c0       	rjmp	.+334    	; 0x1832 <find_volume+0x74e>
    16e4:	80 e0       	ldi	r24, 0x00	; 0
    16e6:	a5 c0       	rjmp	.+330    	; 0x1832 <find_volume+0x74e>
    16e8:	83 e0       	ldi	r24, 0x03	; 3
    16ea:	a3 c0       	rjmp	.+326    	; 0x1832 <find_volume+0x74e>
    16ec:	8a e0       	ldi	r24, 0x0A	; 10
    16ee:	a1 c0       	rjmp	.+322    	; 0x1832 <find_volume+0x74e>
    16f0:	81 e0       	ldi	r24, 0x01	; 1
    16f2:	9f c0       	rjmp	.+318    	; 0x1832 <find_volume+0x74e>
    16f4:	8d e0       	ldi	r24, 0x0D	; 13
    16f6:	9d c0       	rjmp	.+314    	; 0x1832 <find_volume+0x74e>
    16f8:	8d e0       	ldi	r24, 0x0D	; 13
    16fa:	9b c0       	rjmp	.+310    	; 0x1832 <find_volume+0x74e>
    16fc:	8d e0       	ldi	r24, 0x0D	; 13
    16fe:	99 c0       	rjmp	.+306    	; 0x1832 <find_volume+0x74e>
    1700:	8d e0       	ldi	r24, 0x0D	; 13
    1702:	97 c0       	rjmp	.+302    	; 0x1832 <find_volume+0x74e>
    1704:	8d e0       	ldi	r24, 0x0D	; 13
    1706:	95 c0       	rjmp	.+298    	; 0x1832 <find_volume+0x74e>
    1708:	8d e0       	ldi	r24, 0x0D	; 13
    170a:	93 c0       	rjmp	.+294    	; 0x1832 <find_volume+0x74e>
    170c:	8d e0       	ldi	r24, 0x0D	; 13
    170e:	91 c0       	rjmp	.+290    	; 0x1832 <find_volume+0x74e>
    1710:	8d e0       	ldi	r24, 0x0D	; 13
    1712:	8f c0       	rjmp	.+286    	; 0x1832 <find_volume+0x74e>
    1714:	8d e0       	ldi	r24, 0x0D	; 13
    1716:	8d c0       	rjmp	.+282    	; 0x1832 <find_volume+0x74e>
    1718:	8d e0       	ldi	r24, 0x0D	; 13
    171a:	8b c0       	rjmp	.+278    	; 0x1832 <find_volume+0x74e>
    171c:	8d e0       	ldi	r24, 0x0D	; 13
    171e:	89 c0       	rjmp	.+274    	; 0x1832 <find_volume+0x74e>
    1720:	8d e0       	ldi	r24, 0x0D	; 13
    1722:	87 c0       	rjmp	.+270    	; 0x1832 <find_volume+0x74e>
    1724:	8d e0       	ldi	r24, 0x0D	; 13
    1726:	85 c0       	rjmp	.+266    	; 0x1832 <find_volume+0x74e>
    1728:	40 e0       	ldi	r20, 0x00	; 0
    172a:	50 e0       	ldi	r21, 0x00	; 0
    172c:	ba 01       	movw	r22, r20
    172e:	c8 01       	movw	r24, r16
    1730:	4d dc       	rcall	.-1894   	; 0xfcc <check_fs>
    1732:	81 30       	cpi	r24, 0x01	; 1
    1734:	09 f0       	breq	.+2      	; 0x1738 <find_volume+0x654>
    1736:	6e cd       	rjmp	.-1316   	; 0x1214 <find_volume+0x130>
    1738:	9e 01       	movw	r18, r28
    173a:	2f 5f       	subi	r18, 0xFF	; 255
    173c:	3f 4f       	sbci	r19, 0xFF	; 255
    173e:	59 01       	movw	r10, r18
    1740:	f8 01       	movw	r30, r16
    1742:	e9 50       	subi	r30, 0x09	; 9
    1744:	fe 4f       	sbci	r31, 0xFE	; 254
    1746:	a8 01       	movw	r20, r16
    1748:	49 5c       	subi	r20, 0xC9	; 201
    174a:	5d 4f       	sbci	r21, 0xFD	; 253
    174c:	81 2c       	mov	r8, r1
    174e:	91 2c       	mov	r9, r1
    1750:	70 e0       	ldi	r23, 0x00	; 0
    1752:	60 e0       	ldi	r22, 0x00	; 0
    1754:	17 cd       	rjmp	.-1490   	; 0x1184 <find_volume+0xa0>
    1756:	29 01       	movw	r4, r18
    1758:	3a 01       	movw	r6, r20
    175a:	62 e0       	ldi	r22, 0x02	; 2
    175c:	46 0e       	add	r4, r22
    175e:	51 1c       	adc	r5, r1
    1760:	61 1c       	adc	r6, r1
    1762:	71 1c       	adc	r7, r1
    1764:	d8 01       	movw	r26, r16
    1766:	52 96       	adiw	r26, 0x12	; 18
    1768:	4d 92       	st	X+, r4
    176a:	5d 92       	st	X+, r5
    176c:	6d 92       	st	X+, r6
    176e:	7c 92       	st	X, r7
    1770:	55 97       	sbiw	r26, 0x15	; 21
    1772:	f8 01       	movw	r30, r16
    1774:	c2 8e       	std	Z+26, r12	; 0x1a
    1776:	d3 8e       	std	Z+27, r13	; 0x1b
    1778:	e4 8e       	std	Z+28, r14	; 0x1c
    177a:	f5 8e       	std	Z+29, r15	; 0x1d
    177c:	8e 89       	ldd	r24, Y+22	; 0x16
    177e:	9f 89       	ldd	r25, Y+23	; 0x17
    1780:	a8 8d       	ldd	r26, Y+24	; 0x18
    1782:	b9 8d       	ldd	r27, Y+25	; 0x19
    1784:	8c 0d       	add	r24, r12
    1786:	9d 1d       	adc	r25, r13
    1788:	ae 1d       	adc	r26, r14
    178a:	bf 1d       	adc	r27, r15
    178c:	86 8f       	std	Z+30, r24	; 0x1e
    178e:	97 8f       	std	Z+31, r25	; 0x1f
    1790:	a0 a3       	std	Z+32, r26	; 0x20
    1792:	b1 a3       	std	Z+33, r27	; 0x21
    1794:	8a 89       	ldd	r24, Y+18	; 0x12
    1796:	9b 89       	ldd	r25, Y+19	; 0x13
    1798:	ac 89       	ldd	r26, Y+20	; 0x14
    179a:	bd 89       	ldd	r27, Y+21	; 0x15
    179c:	8c 0d       	add	r24, r12
    179e:	9d 1d       	adc	r25, r13
    17a0:	ae 1d       	adc	r26, r14
    17a2:	bf 1d       	adc	r27, r15
    17a4:	86 a3       	std	Z+38, r24	; 0x26
    17a6:	97 a3       	std	Z+39, r25	; 0x27
    17a8:	a0 a7       	std	Z+40, r26	; 0x28
    17aa:	b1 a7       	std	Z+41, r27	; 0x29
    17ac:	66 ce       	rjmp	.-820    	; 0x147a <find_volume+0x396>
    17ae:	8f ef       	ldi	r24, 0xFF	; 255
    17b0:	9f ef       	ldi	r25, 0xFF	; 255
    17b2:	dc 01       	movw	r26, r24
    17b4:	f8 01       	movw	r30, r16
    17b6:	86 87       	std	Z+14, r24	; 0x0e
    17b8:	97 87       	std	Z+15, r25	; 0x0f
    17ba:	a0 8b       	std	Z+16, r26	; 0x10
    17bc:	b1 8b       	std	Z+17, r27	; 0x11
    17be:	82 87       	std	Z+10, r24	; 0x0a
    17c0:	93 87       	std	Z+11, r25	; 0x0b
    17c2:	a4 87       	std	Z+12, r26	; 0x0c
    17c4:	b5 87       	std	Z+13, r27	; 0x0d
    17c6:	80 e8       	ldi	r24, 0x80	; 128
    17c8:	85 83       	std	Z+5, r24	; 0x05
    17ca:	e1 5a       	subi	r30, 0xA1	; 161
    17cc:	ff 4f       	sbci	r31, 0xFF	; 255
    17ce:	80 81       	ld	r24, Z
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	98 2f       	mov	r25, r24
    17d4:	88 27       	eor	r24, r24
    17d6:	31 97       	sbiw	r30, 0x01	; 1
    17d8:	20 81       	ld	r18, Z
    17da:	82 2b       	or	r24, r18
    17dc:	01 97       	sbiw	r24, 0x01	; 1
    17de:	09 f4       	brne	.+2      	; 0x17e2 <find_volume+0x6fe>
    17e0:	be ce       	rjmp	.-644    	; 0x155e <find_volume+0x47a>
    17e2:	f3 e0       	ldi	r31, 0x03	; 3
    17e4:	f9 8b       	std	Y+17, r31	; 0x11
    17e6:	66 cf       	rjmp	.-308    	; 0x16b4 <find_volume+0x5d0>
    17e8:	8f ef       	ldi	r24, 0xFF	; 255
    17ea:	9f ef       	ldi	r25, 0xFF	; 255
    17ec:	dc 01       	movw	r26, r24
    17ee:	f8 01       	movw	r30, r16
    17f0:	86 87       	std	Z+14, r24	; 0x0e
    17f2:	97 87       	std	Z+15, r25	; 0x0f
    17f4:	a0 8b       	std	Z+16, r26	; 0x10
    17f6:	b1 8b       	std	Z+17, r27	; 0x11
    17f8:	82 87       	std	Z+10, r24	; 0x0a
    17fa:	93 87       	std	Z+11, r25	; 0x0b
    17fc:	a4 87       	std	Z+12, r26	; 0x0c
    17fe:	b5 87       	std	Z+13, r27	; 0x0d
    1800:	80 e8       	ldi	r24, 0x80	; 128
    1802:	85 83       	std	Z+5, r24	; 0x05
    1804:	57 cf       	rjmp	.-338    	; 0x16b4 <find_volume+0x5d0>
    1806:	ff ef       	ldi	r31, 0xFF	; 255
    1808:	4f 0e       	add	r4, r31
    180a:	f1 e0       	ldi	r31, 0x01	; 1
    180c:	5f 1e       	adc	r5, r31
    180e:	61 1c       	adc	r6, r1
    1810:	71 1c       	adc	r7, r1
    1812:	03 2e       	mov	r0, r19
    1814:	39 e0       	ldi	r19, 0x09	; 9
    1816:	76 94       	lsr	r7
    1818:	67 94       	ror	r6
    181a:	57 94       	ror	r5
    181c:	47 94       	ror	r4
    181e:	3a 95       	dec	r19
    1820:	d1 f7       	brne	.-12     	; 0x1816 <find_volume+0x732>
    1822:	30 2d       	mov	r19, r0
    1824:	84 14       	cp	r8, r4
    1826:	95 04       	cpc	r9, r5
    1828:	a6 04       	cpc	r10, r6
    182a:	b7 04       	cpc	r11, r7
    182c:	08 f4       	brcc	.+2      	; 0x1830 <find_volume+0x74c>
    182e:	7a cf       	rjmp	.-268    	; 0x1724 <find_volume+0x640>
    1830:	db cf       	rjmp	.-74     	; 0x17e8 <find_volume+0x704>
    1832:	6d 96       	adiw	r28, 0x1d	; 29
    1834:	0f b6       	in	r0, 0x3f	; 63
    1836:	f8 94       	cli
    1838:	de bf       	out	0x3e, r29	; 62
    183a:	0f be       	out	0x3f, r0	; 63
    183c:	cd bf       	out	0x3d, r28	; 61
    183e:	df 91       	pop	r29
    1840:	cf 91       	pop	r28
    1842:	1f 91       	pop	r17
    1844:	0f 91       	pop	r16
    1846:	ff 90       	pop	r15
    1848:	ef 90       	pop	r14
    184a:	df 90       	pop	r13
    184c:	cf 90       	pop	r12
    184e:	bf 90       	pop	r11
    1850:	af 90       	pop	r10
    1852:	9f 90       	pop	r9
    1854:	8f 90       	pop	r8
    1856:	7f 90       	pop	r7
    1858:	6f 90       	pop	r6
    185a:	5f 90       	pop	r5
    185c:	4f 90       	pop	r4
    185e:	3f 90       	pop	r3
    1860:	2f 90       	pop	r2
    1862:	08 95       	ret

00001864 <clust2sect>:
    1864:	cf 92       	push	r12
    1866:	df 92       	push	r13
    1868:	ef 92       	push	r14
    186a:	ff 92       	push	r15
    186c:	fc 01       	movw	r30, r24
    186e:	9a 01       	movw	r18, r20
    1870:	ab 01       	movw	r20, r22
    1872:	22 50       	subi	r18, 0x02	; 2
    1874:	31 09       	sbc	r19, r1
    1876:	41 09       	sbc	r20, r1
    1878:	51 09       	sbc	r21, r1
    187a:	c2 88       	ldd	r12, Z+18	; 0x12
    187c:	d3 88       	ldd	r13, Z+19	; 0x13
    187e:	e4 88       	ldd	r14, Z+20	; 0x14
    1880:	f5 88       	ldd	r15, Z+21	; 0x15
    1882:	82 e0       	ldi	r24, 0x02	; 2
    1884:	c8 1a       	sub	r12, r24
    1886:	d1 08       	sbc	r13, r1
    1888:	e1 08       	sbc	r14, r1
    188a:	f1 08       	sbc	r15, r1
    188c:	2c 15       	cp	r18, r12
    188e:	3d 05       	cpc	r19, r13
    1890:	4e 05       	cpc	r20, r14
    1892:	5f 05       	cpc	r21, r15
    1894:	68 f4       	brcc	.+26     	; 0x18b0 <clust2sect+0x4c>
    1896:	a2 81       	ldd	r26, Z+2	; 0x02
    1898:	b0 e0       	ldi	r27, 0x00	; 0
    189a:	0e 94 b4 1c 	call	0x3968	; 0x3968 <__muluhisi3>
    189e:	c6 a0       	ldd	r12, Z+38	; 0x26
    18a0:	d7 a0       	ldd	r13, Z+39	; 0x27
    18a2:	e0 a4       	ldd	r14, Z+40	; 0x28
    18a4:	f1 a4       	ldd	r15, Z+41	; 0x29
    18a6:	6c 0d       	add	r22, r12
    18a8:	7d 1d       	adc	r23, r13
    18aa:	8e 1d       	adc	r24, r14
    18ac:	9f 1d       	adc	r25, r15
    18ae:	03 c0       	rjmp	.+6      	; 0x18b6 <clust2sect+0x52>
    18b0:	60 e0       	ldi	r22, 0x00	; 0
    18b2:	70 e0       	ldi	r23, 0x00	; 0
    18b4:	cb 01       	movw	r24, r22
    18b6:	ff 90       	pop	r15
    18b8:	ef 90       	pop	r14
    18ba:	df 90       	pop	r13
    18bc:	cf 90       	pop	r12
    18be:	08 95       	ret

000018c0 <get_fat>:
    18c0:	af 92       	push	r10
    18c2:	bf 92       	push	r11
    18c4:	cf 92       	push	r12
    18c6:	df 92       	push	r13
    18c8:	ef 92       	push	r14
    18ca:	ff 92       	push	r15
    18cc:	0f 93       	push	r16
    18ce:	1f 93       	push	r17
    18d0:	cf 93       	push	r28
    18d2:	df 93       	push	r29
    18d4:	ec 01       	movw	r28, r24
    18d6:	6a 01       	movw	r12, r20
    18d8:	7b 01       	movw	r14, r22
    18da:	42 30       	cpi	r20, 0x02	; 2
    18dc:	51 05       	cpc	r21, r1
    18de:	61 05       	cpc	r22, r1
    18e0:	71 05       	cpc	r23, r1
    18e2:	08 f4       	brcc	.+2      	; 0x18e6 <get_fat+0x26>
    18e4:	c3 c0       	rjmp	.+390    	; 0x1a6c <get_fat+0x1ac>
    18e6:	8a 89       	ldd	r24, Y+18	; 0x12
    18e8:	9b 89       	ldd	r25, Y+19	; 0x13
    18ea:	ac 89       	ldd	r26, Y+20	; 0x14
    18ec:	bd 89       	ldd	r27, Y+21	; 0x15
    18ee:	48 17       	cp	r20, r24
    18f0:	59 07       	cpc	r21, r25
    18f2:	6a 07       	cpc	r22, r26
    18f4:	7b 07       	cpc	r23, r27
    18f6:	08 f0       	brcs	.+2      	; 0x18fa <get_fat+0x3a>
    18f8:	be c0       	rjmp	.+380    	; 0x1a76 <get_fat+0x1b6>
    18fa:	88 81       	ld	r24, Y
    18fc:	82 30       	cpi	r24, 0x02	; 2
    18fe:	09 f4       	brne	.+2      	; 0x1902 <get_fat+0x42>
    1900:	4b c0       	rjmp	.+150    	; 0x1998 <get_fat+0xd8>
    1902:	83 30       	cpi	r24, 0x03	; 3
    1904:	09 f4       	brne	.+2      	; 0x1908 <get_fat+0x48>
    1906:	6c c0       	rjmp	.+216    	; 0x19e0 <get_fat+0x120>
    1908:	81 30       	cpi	r24, 0x01	; 1
    190a:	09 f0       	breq	.+2      	; 0x190e <get_fat+0x4e>
    190c:	b9 c0       	rjmp	.+370    	; 0x1a80 <get_fat+0x1c0>
    190e:	8a 01       	movw	r16, r20
    1910:	16 95       	lsr	r17
    1912:	07 95       	ror	r16
    1914:	04 0f       	add	r16, r20
    1916:	15 1f       	adc	r17, r21
    1918:	c8 01       	movw	r24, r16
    191a:	89 2f       	mov	r24, r25
    191c:	99 27       	eor	r25, r25
    191e:	86 95       	lsr	r24
    1920:	4e 8d       	ldd	r20, Y+30	; 0x1e
    1922:	5f 8d       	ldd	r21, Y+31	; 0x1f
    1924:	68 a1       	ldd	r22, Y+32	; 0x20
    1926:	79 a1       	ldd	r23, Y+33	; 0x21
    1928:	48 0f       	add	r20, r24
    192a:	59 1f       	adc	r21, r25
    192c:	61 1d       	adc	r22, r1
    192e:	71 1d       	adc	r23, r1
    1930:	ce 01       	movw	r24, r28
    1932:	10 db       	rcall	.-2528   	; 0xf54 <move_window>
    1934:	81 11       	cpse	r24, r1
    1936:	a9 c0       	rjmp	.+338    	; 0x1a8a <get_fat+0x1ca>
    1938:	58 01       	movw	r10, r16
    193a:	8f ef       	ldi	r24, 0xFF	; 255
    193c:	a8 1a       	sub	r10, r24
    193e:	b8 0a       	sbc	r11, r24
    1940:	11 70       	andi	r17, 0x01	; 1
    1942:	fe 01       	movw	r30, r28
    1944:	e0 0f       	add	r30, r16
    1946:	f1 1f       	adc	r31, r17
    1948:	16 a5       	ldd	r17, Z+46	; 0x2e
    194a:	c5 01       	movw	r24, r10
    194c:	89 2f       	mov	r24, r25
    194e:	99 27       	eor	r25, r25
    1950:	86 95       	lsr	r24
    1952:	4e 8d       	ldd	r20, Y+30	; 0x1e
    1954:	5f 8d       	ldd	r21, Y+31	; 0x1f
    1956:	68 a1       	ldd	r22, Y+32	; 0x20
    1958:	79 a1       	ldd	r23, Y+33	; 0x21
    195a:	48 0f       	add	r20, r24
    195c:	59 1f       	adc	r21, r25
    195e:	61 1d       	adc	r22, r1
    1960:	71 1d       	adc	r23, r1
    1962:	ce 01       	movw	r24, r28
    1964:	f7 da       	rcall	.-2578   	; 0xf54 <move_window>
    1966:	81 11       	cpse	r24, r1
    1968:	94 c0       	rjmp	.+296    	; 0x1a92 <get_fat+0x1d2>
    196a:	81 e0       	ldi	r24, 0x01	; 1
    196c:	b8 22       	and	r11, r24
    196e:	ca 0d       	add	r28, r10
    1970:	db 1d       	adc	r29, r11
    1972:	8e a5       	ldd	r24, Y+46	; 0x2e
    1974:	61 2f       	mov	r22, r17
    1976:	70 e0       	ldi	r23, 0x00	; 0
    1978:	78 2b       	or	r23, r24
    197a:	c0 fe       	sbrs	r12, 0
    197c:	09 c0       	rjmp	.+18     	; 0x1990 <get_fat+0xd0>
    197e:	72 95       	swap	r23
    1980:	62 95       	swap	r22
    1982:	6f 70       	andi	r22, 0x0F	; 15
    1984:	67 27       	eor	r22, r23
    1986:	7f 70       	andi	r23, 0x0F	; 15
    1988:	67 27       	eor	r22, r23
    198a:	80 e0       	ldi	r24, 0x00	; 0
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	8c c0       	rjmp	.+280    	; 0x1aa8 <get_fat+0x1e8>
    1990:	7f 70       	andi	r23, 0x0F	; 15
    1992:	80 e0       	ldi	r24, 0x00	; 0
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	88 c0       	rjmp	.+272    	; 0x1aa8 <get_fat+0x1e8>
    1998:	45 2f       	mov	r20, r21
    199a:	56 2f       	mov	r21, r22
    199c:	67 2f       	mov	r22, r23
    199e:	77 27       	eor	r23, r23
    19a0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    19a2:	9f 8d       	ldd	r25, Y+31	; 0x1f
    19a4:	a8 a1       	ldd	r26, Y+32	; 0x20
    19a6:	b9 a1       	ldd	r27, Y+33	; 0x21
    19a8:	48 0f       	add	r20, r24
    19aa:	59 1f       	adc	r21, r25
    19ac:	6a 1f       	adc	r22, r26
    19ae:	7b 1f       	adc	r23, r27
    19b0:	ce 01       	movw	r24, r28
    19b2:	d0 da       	rcall	.-2656   	; 0xf54 <move_window>
    19b4:	81 11       	cpse	r24, r1
    19b6:	71 c0       	rjmp	.+226    	; 0x1a9a <get_fat+0x1da>
    19b8:	cc 0c       	add	r12, r12
    19ba:	dd 1c       	adc	r13, r13
    19bc:	ee 1c       	adc	r14, r14
    19be:	ff 1c       	adc	r15, r15
    19c0:	e8 94       	clt
    19c2:	c0 f8       	bld	r12, 0
    19c4:	81 e0       	ldi	r24, 0x01	; 1
    19c6:	d8 22       	and	r13, r24
    19c8:	ee 24       	eor	r14, r14
    19ca:	ff 24       	eor	r15, r15
    19cc:	fe 01       	movw	r30, r28
    19ce:	ec 0d       	add	r30, r12
    19d0:	fd 1d       	adc	r31, r13
    19d2:	66 a5       	ldd	r22, Z+46	; 0x2e
    19d4:	87 a5       	ldd	r24, Z+47	; 0x2f
    19d6:	70 e0       	ldi	r23, 0x00	; 0
    19d8:	78 2b       	or	r23, r24
    19da:	80 e0       	ldi	r24, 0x00	; 0
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	64 c0       	rjmp	.+200    	; 0x1aa8 <get_fat+0x1e8>
    19e0:	8e 8d       	ldd	r24, Y+30	; 0x1e
    19e2:	9f 8d       	ldd	r25, Y+31	; 0x1f
    19e4:	a8 a1       	ldd	r26, Y+32	; 0x20
    19e6:	b9 a1       	ldd	r27, Y+33	; 0x21
    19e8:	68 94       	set
    19ea:	16 f8       	bld	r1, 6
    19ec:	76 95       	lsr	r23
    19ee:	67 95       	ror	r22
    19f0:	57 95       	ror	r21
    19f2:	47 95       	ror	r20
    19f4:	16 94       	lsr	r1
    19f6:	d1 f7       	brne	.-12     	; 0x19ec <get_fat+0x12c>
    19f8:	48 0f       	add	r20, r24
    19fa:	59 1f       	adc	r21, r25
    19fc:	6a 1f       	adc	r22, r26
    19fe:	7b 1f       	adc	r23, r27
    1a00:	ce 01       	movw	r24, r28
    1a02:	a8 da       	rcall	.-2736   	; 0xf54 <move_window>
    1a04:	81 11       	cpse	r24, r1
    1a06:	4d c0       	rjmp	.+154    	; 0x1aa2 <get_fat+0x1e2>
    1a08:	cc 0c       	add	r12, r12
    1a0a:	dd 1c       	adc	r13, r13
    1a0c:	ee 1c       	adc	r14, r14
    1a0e:	ff 1c       	adc	r15, r15
    1a10:	cc 0c       	add	r12, r12
    1a12:	dd 1c       	adc	r13, r13
    1a14:	ee 1c       	adc	r14, r14
    1a16:	ff 1c       	adc	r15, r15
    1a18:	8c ef       	ldi	r24, 0xFC	; 252
    1a1a:	c8 22       	and	r12, r24
    1a1c:	81 e0       	ldi	r24, 0x01	; 1
    1a1e:	d8 22       	and	r13, r24
    1a20:	ee 24       	eor	r14, r14
    1a22:	ff 24       	eor	r15, r15
    1a24:	f6 01       	movw	r30, r12
    1a26:	be 96       	adiw	r30, 0x2e	; 46
    1a28:	ec 0f       	add	r30, r28
    1a2a:	fd 1f       	adc	r31, r29
    1a2c:	22 81       	ldd	r18, Z+2	; 0x02
    1a2e:	63 81       	ldd	r22, Z+3	; 0x03
    1a30:	86 2f       	mov	r24, r22
    1a32:	90 e0       	ldi	r25, 0x00	; 0
    1a34:	a0 e0       	ldi	r26, 0x00	; 0
    1a36:	b0 e0       	ldi	r27, 0x00	; 0
    1a38:	b8 2f       	mov	r27, r24
    1a3a:	aa 27       	eor	r26, r26
    1a3c:	99 27       	eor	r25, r25
    1a3e:	88 27       	eor	r24, r24
    1a40:	ac 01       	movw	r20, r24
    1a42:	bd 01       	movw	r22, r26
    1a44:	62 2b       	or	r22, r18
    1a46:	81 81       	ldd	r24, Z+1	; 0x01
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	98 2f       	mov	r25, r24
    1a4c:	88 27       	eor	r24, r24
    1a4e:	a0 e0       	ldi	r26, 0x00	; 0
    1a50:	b0 e0       	ldi	r27, 0x00	; 0
    1a52:	84 2b       	or	r24, r20
    1a54:	95 2b       	or	r25, r21
    1a56:	a6 2b       	or	r26, r22
    1a58:	b7 2b       	or	r27, r23
    1a5a:	fe 01       	movw	r30, r28
    1a5c:	ec 0d       	add	r30, r12
    1a5e:	fd 1d       	adc	r31, r13
    1a60:	26 a5       	ldd	r18, Z+46	; 0x2e
    1a62:	82 2b       	or	r24, r18
    1a64:	bc 01       	movw	r22, r24
    1a66:	cd 01       	movw	r24, r26
    1a68:	9f 70       	andi	r25, 0x0F	; 15
    1a6a:	1e c0       	rjmp	.+60     	; 0x1aa8 <get_fat+0x1e8>
    1a6c:	61 e0       	ldi	r22, 0x01	; 1
    1a6e:	70 e0       	ldi	r23, 0x00	; 0
    1a70:	80 e0       	ldi	r24, 0x00	; 0
    1a72:	90 e0       	ldi	r25, 0x00	; 0
    1a74:	19 c0       	rjmp	.+50     	; 0x1aa8 <get_fat+0x1e8>
    1a76:	61 e0       	ldi	r22, 0x01	; 1
    1a78:	70 e0       	ldi	r23, 0x00	; 0
    1a7a:	80 e0       	ldi	r24, 0x00	; 0
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	14 c0       	rjmp	.+40     	; 0x1aa8 <get_fat+0x1e8>
    1a80:	61 e0       	ldi	r22, 0x01	; 1
    1a82:	70 e0       	ldi	r23, 0x00	; 0
    1a84:	80 e0       	ldi	r24, 0x00	; 0
    1a86:	90 e0       	ldi	r25, 0x00	; 0
    1a88:	0f c0       	rjmp	.+30     	; 0x1aa8 <get_fat+0x1e8>
    1a8a:	6f ef       	ldi	r22, 0xFF	; 255
    1a8c:	7f ef       	ldi	r23, 0xFF	; 255
    1a8e:	cb 01       	movw	r24, r22
    1a90:	0b c0       	rjmp	.+22     	; 0x1aa8 <get_fat+0x1e8>
    1a92:	6f ef       	ldi	r22, 0xFF	; 255
    1a94:	7f ef       	ldi	r23, 0xFF	; 255
    1a96:	cb 01       	movw	r24, r22
    1a98:	07 c0       	rjmp	.+14     	; 0x1aa8 <get_fat+0x1e8>
    1a9a:	6f ef       	ldi	r22, 0xFF	; 255
    1a9c:	7f ef       	ldi	r23, 0xFF	; 255
    1a9e:	cb 01       	movw	r24, r22
    1aa0:	03 c0       	rjmp	.+6      	; 0x1aa8 <get_fat+0x1e8>
    1aa2:	6f ef       	ldi	r22, 0xFF	; 255
    1aa4:	7f ef       	ldi	r23, 0xFF	; 255
    1aa6:	cb 01       	movw	r24, r22
    1aa8:	df 91       	pop	r29
    1aaa:	cf 91       	pop	r28
    1aac:	1f 91       	pop	r17
    1aae:	0f 91       	pop	r16
    1ab0:	ff 90       	pop	r15
    1ab2:	ef 90       	pop	r14
    1ab4:	df 90       	pop	r13
    1ab6:	cf 90       	pop	r12
    1ab8:	bf 90       	pop	r11
    1aba:	af 90       	pop	r10
    1abc:	08 95       	ret

00001abe <dir_sdi>:
    1abe:	af 92       	push	r10
    1ac0:	bf 92       	push	r11
    1ac2:	cf 92       	push	r12
    1ac4:	df 92       	push	r13
    1ac6:	ef 92       	push	r14
    1ac8:	ff 92       	push	r15
    1aca:	0f 93       	push	r16
    1acc:	1f 93       	push	r17
    1ace:	cf 93       	push	r28
    1ad0:	df 93       	push	r29
    1ad2:	ec 01       	movw	r28, r24
    1ad4:	8b 01       	movw	r16, r22
    1ad6:	7d 83       	std	Y+5, r23	; 0x05
    1ad8:	6c 83       	std	Y+4, r22	; 0x04
    1ada:	ce 80       	ldd	r12, Y+6	; 0x06
    1adc:	df 80       	ldd	r13, Y+7	; 0x07
    1ade:	e8 84       	ldd	r14, Y+8	; 0x08
    1ae0:	f9 84       	ldd	r15, Y+9	; 0x09
    1ae2:	81 e0       	ldi	r24, 0x01	; 1
    1ae4:	c8 16       	cp	r12, r24
    1ae6:	d1 04       	cpc	r13, r1
    1ae8:	e1 04       	cpc	r14, r1
    1aea:	f1 04       	cpc	r15, r1
    1aec:	09 f4       	brne	.+2      	; 0x1af0 <dir_sdi+0x32>
    1aee:	8a c0       	rjmp	.+276    	; 0x1c04 <dir_sdi+0x146>
    1af0:	e8 81       	ld	r30, Y
    1af2:	f9 81       	ldd	r31, Y+1	; 0x01
    1af4:	82 89       	ldd	r24, Z+18	; 0x12
    1af6:	93 89       	ldd	r25, Z+19	; 0x13
    1af8:	a4 89       	ldd	r26, Z+20	; 0x14
    1afa:	b5 89       	ldd	r27, Z+21	; 0x15
    1afc:	c8 16       	cp	r12, r24
    1afe:	d9 06       	cpc	r13, r25
    1b00:	ea 06       	cpc	r14, r26
    1b02:	fb 06       	cpc	r15, r27
    1b04:	08 f0       	brcs	.+2      	; 0x1b08 <dir_sdi+0x4a>
    1b06:	80 c0       	rjmp	.+256    	; 0x1c08 <dir_sdi+0x14a>
    1b08:	c1 14       	cp	r12, r1
    1b0a:	d1 04       	cpc	r13, r1
    1b0c:	e1 04       	cpc	r14, r1
    1b0e:	f1 04       	cpc	r15, r1
    1b10:	c1 f4       	brne	.+48     	; 0x1b42 <dir_sdi+0x84>
    1b12:	80 81       	ld	r24, Z
    1b14:	83 30       	cpi	r24, 0x03	; 3
    1b16:	41 f4       	brne	.+16     	; 0x1b28 <dir_sdi+0x6a>
    1b18:	82 a1       	ldd	r24, Z+34	; 0x22
    1b1a:	93 a1       	ldd	r25, Z+35	; 0x23
    1b1c:	a4 a1       	ldd	r26, Z+36	; 0x24
    1b1e:	b5 a1       	ldd	r27, Z+37	; 0x25
    1b20:	00 97       	sbiw	r24, 0x00	; 0
    1b22:	a1 05       	cpc	r26, r1
    1b24:	b1 05       	cpc	r27, r1
    1b26:	59 f4       	brne	.+22     	; 0x1b3e <dir_sdi+0x80>
    1b28:	80 85       	ldd	r24, Z+8	; 0x08
    1b2a:	91 85       	ldd	r25, Z+9	; 0x09
    1b2c:	08 17       	cp	r16, r24
    1b2e:	19 07       	cpc	r17, r25
    1b30:	08 f0       	brcs	.+2      	; 0x1b34 <dir_sdi+0x76>
    1b32:	6c c0       	rjmp	.+216    	; 0x1c0c <dir_sdi+0x14e>
    1b34:	62 a1       	ldd	r22, Z+34	; 0x22
    1b36:	73 a1       	ldd	r23, Z+35	; 0x23
    1b38:	84 a1       	ldd	r24, Z+36	; 0x24
    1b3a:	95 a1       	ldd	r25, Z+37	; 0x25
    1b3c:	35 c0       	rjmp	.+106    	; 0x1ba8 <dir_sdi+0xea>
    1b3e:	6c 01       	movw	r12, r24
    1b40:	7d 01       	movw	r14, r26
    1b42:	a2 80       	ldd	r10, Z+2	; 0x02
    1b44:	80 e1       	ldi	r24, 0x10	; 16
    1b46:	a8 9e       	mul	r10, r24
    1b48:	50 01       	movw	r10, r0
    1b4a:	11 24       	eor	r1, r1
    1b4c:	0a 15       	cp	r16, r10
    1b4e:	1b 05       	cpc	r17, r11
    1b50:	30 f1       	brcs	.+76     	; 0x1b9e <dir_sdi+0xe0>
    1b52:	b7 01       	movw	r22, r14
    1b54:	a6 01       	movw	r20, r12
    1b56:	88 81       	ld	r24, Y
    1b58:	99 81       	ldd	r25, Y+1	; 0x01
    1b5a:	b2 de       	rcall	.-668    	; 0x18c0 <get_fat>
    1b5c:	6b 01       	movw	r12, r22
    1b5e:	7c 01       	movw	r14, r24
    1b60:	8f ef       	ldi	r24, 0xFF	; 255
    1b62:	c8 16       	cp	r12, r24
    1b64:	d8 06       	cpc	r13, r24
    1b66:	e8 06       	cpc	r14, r24
    1b68:	f8 06       	cpc	r15, r24
    1b6a:	09 f4       	brne	.+2      	; 0x1b6e <dir_sdi+0xb0>
    1b6c:	51 c0       	rjmp	.+162    	; 0x1c10 <dir_sdi+0x152>
    1b6e:	82 e0       	ldi	r24, 0x02	; 2
    1b70:	c8 16       	cp	r12, r24
    1b72:	d1 04       	cpc	r13, r1
    1b74:	e1 04       	cpc	r14, r1
    1b76:	f1 04       	cpc	r15, r1
    1b78:	08 f4       	brcc	.+2      	; 0x1b7c <dir_sdi+0xbe>
    1b7a:	4c c0       	rjmp	.+152    	; 0x1c14 <dir_sdi+0x156>
    1b7c:	e8 81       	ld	r30, Y
    1b7e:	f9 81       	ldd	r31, Y+1	; 0x01
    1b80:	82 89       	ldd	r24, Z+18	; 0x12
    1b82:	93 89       	ldd	r25, Z+19	; 0x13
    1b84:	a4 89       	ldd	r26, Z+20	; 0x14
    1b86:	b5 89       	ldd	r27, Z+21	; 0x15
    1b88:	c8 16       	cp	r12, r24
    1b8a:	d9 06       	cpc	r13, r25
    1b8c:	ea 06       	cpc	r14, r26
    1b8e:	fb 06       	cpc	r15, r27
    1b90:	08 f0       	brcs	.+2      	; 0x1b94 <dir_sdi+0xd6>
    1b92:	42 c0       	rjmp	.+132    	; 0x1c18 <dir_sdi+0x15a>
    1b94:	0a 19       	sub	r16, r10
    1b96:	1b 09       	sbc	r17, r11
    1b98:	0a 15       	cp	r16, r10
    1b9a:	1b 05       	cpc	r17, r11
    1b9c:	d0 f6       	brcc	.-76     	; 0x1b52 <dir_sdi+0x94>
    1b9e:	b7 01       	movw	r22, r14
    1ba0:	a6 01       	movw	r20, r12
    1ba2:	88 81       	ld	r24, Y
    1ba4:	99 81       	ldd	r25, Y+1	; 0x01
    1ba6:	5e de       	rcall	.-836    	; 0x1864 <clust2sect>
    1ba8:	ca 86       	std	Y+10, r12	; 0x0a
    1baa:	db 86       	std	Y+11, r13	; 0x0b
    1bac:	ec 86       	std	Y+12, r14	; 0x0c
    1bae:	fd 86       	std	Y+13, r15	; 0x0d
    1bb0:	61 15       	cp	r22, r1
    1bb2:	71 05       	cpc	r23, r1
    1bb4:	81 05       	cpc	r24, r1
    1bb6:	91 05       	cpc	r25, r1
    1bb8:	89 f1       	breq	.+98     	; 0x1c1c <dir_sdi+0x15e>
    1bba:	98 01       	movw	r18, r16
    1bbc:	32 95       	swap	r19
    1bbe:	22 95       	swap	r18
    1bc0:	2f 70       	andi	r18, 0x0F	; 15
    1bc2:	23 27       	eor	r18, r19
    1bc4:	3f 70       	andi	r19, 0x0F	; 15
    1bc6:	23 27       	eor	r18, r19
    1bc8:	dc 01       	movw	r26, r24
    1bca:	cb 01       	movw	r24, r22
    1bcc:	82 0f       	add	r24, r18
    1bce:	93 1f       	adc	r25, r19
    1bd0:	a1 1d       	adc	r26, r1
    1bd2:	b1 1d       	adc	r27, r1
    1bd4:	8e 87       	std	Y+14, r24	; 0x0e
    1bd6:	9f 87       	std	Y+15, r25	; 0x0f
    1bd8:	a8 8b       	std	Y+16, r26	; 0x10
    1bda:	b9 8b       	std	Y+17, r27	; 0x11
    1bdc:	0f 70       	andi	r16, 0x0F	; 15
    1bde:	11 27       	eor	r17, r17
    1be0:	00 0f       	add	r16, r16
    1be2:	11 1f       	adc	r17, r17
    1be4:	02 95       	swap	r16
    1be6:	12 95       	swap	r17
    1be8:	10 7f       	andi	r17, 0xF0	; 240
    1bea:	10 27       	eor	r17, r16
    1bec:	00 7f       	andi	r16, 0xF0	; 240
    1bee:	10 27       	eor	r17, r16
    1bf0:	02 5d       	subi	r16, 0xD2	; 210
    1bf2:	1f 4f       	sbci	r17, 0xFF	; 255
    1bf4:	88 81       	ld	r24, Y
    1bf6:	99 81       	ldd	r25, Y+1	; 0x01
    1bf8:	80 0f       	add	r24, r16
    1bfa:	91 1f       	adc	r25, r17
    1bfc:	9b 8b       	std	Y+19, r25	; 0x13
    1bfe:	8a 8b       	std	Y+18, r24	; 0x12
    1c00:	80 e0       	ldi	r24, 0x00	; 0
    1c02:	0d c0       	rjmp	.+26     	; 0x1c1e <dir_sdi+0x160>
    1c04:	82 e0       	ldi	r24, 0x02	; 2
    1c06:	0b c0       	rjmp	.+22     	; 0x1c1e <dir_sdi+0x160>
    1c08:	82 e0       	ldi	r24, 0x02	; 2
    1c0a:	09 c0       	rjmp	.+18     	; 0x1c1e <dir_sdi+0x160>
    1c0c:	82 e0       	ldi	r24, 0x02	; 2
    1c0e:	07 c0       	rjmp	.+14     	; 0x1c1e <dir_sdi+0x160>
    1c10:	81 e0       	ldi	r24, 0x01	; 1
    1c12:	05 c0       	rjmp	.+10     	; 0x1c1e <dir_sdi+0x160>
    1c14:	82 e0       	ldi	r24, 0x02	; 2
    1c16:	03 c0       	rjmp	.+6      	; 0x1c1e <dir_sdi+0x160>
    1c18:	82 e0       	ldi	r24, 0x02	; 2
    1c1a:	01 c0       	rjmp	.+2      	; 0x1c1e <dir_sdi+0x160>
    1c1c:	82 e0       	ldi	r24, 0x02	; 2
    1c1e:	df 91       	pop	r29
    1c20:	cf 91       	pop	r28
    1c22:	1f 91       	pop	r17
    1c24:	0f 91       	pop	r16
    1c26:	ff 90       	pop	r15
    1c28:	ef 90       	pop	r14
    1c2a:	df 90       	pop	r13
    1c2c:	cf 90       	pop	r12
    1c2e:	bf 90       	pop	r11
    1c30:	af 90       	pop	r10
    1c32:	08 95       	ret

00001c34 <put_fat>:
    1c34:	4f 92       	push	r4
    1c36:	5f 92       	push	r5
    1c38:	6f 92       	push	r6
    1c3a:	7f 92       	push	r7
    1c3c:	8f 92       	push	r8
    1c3e:	9f 92       	push	r9
    1c40:	af 92       	push	r10
    1c42:	bf 92       	push	r11
    1c44:	cf 92       	push	r12
    1c46:	df 92       	push	r13
    1c48:	ef 92       	push	r14
    1c4a:	ff 92       	push	r15
    1c4c:	0f 93       	push	r16
    1c4e:	1f 93       	push	r17
    1c50:	cf 93       	push	r28
    1c52:	df 93       	push	r29
    1c54:	ec 01       	movw	r28, r24
    1c56:	6a 01       	movw	r12, r20
    1c58:	7b 01       	movw	r14, r22
    1c5a:	28 01       	movw	r4, r16
    1c5c:	39 01       	movw	r6, r18
    1c5e:	42 30       	cpi	r20, 0x02	; 2
    1c60:	51 05       	cpc	r21, r1
    1c62:	61 05       	cpc	r22, r1
    1c64:	71 05       	cpc	r23, r1
    1c66:	08 f4       	brcc	.+2      	; 0x1c6a <put_fat+0x36>
    1c68:	d8 c0       	rjmp	.+432    	; 0x1e1a <put_fat+0x1e6>
    1c6a:	8a 89       	ldd	r24, Y+18	; 0x12
    1c6c:	9b 89       	ldd	r25, Y+19	; 0x13
    1c6e:	ac 89       	ldd	r26, Y+20	; 0x14
    1c70:	bd 89       	ldd	r27, Y+21	; 0x15
    1c72:	48 17       	cp	r20, r24
    1c74:	59 07       	cpc	r21, r25
    1c76:	6a 07       	cpc	r22, r26
    1c78:	7b 07       	cpc	r23, r27
    1c7a:	08 f0       	brcs	.+2      	; 0x1c7e <put_fat+0x4a>
    1c7c:	d0 c0       	rjmp	.+416    	; 0x1e1e <put_fat+0x1ea>
    1c7e:	88 81       	ld	r24, Y
    1c80:	82 30       	cpi	r24, 0x02	; 2
    1c82:	09 f4       	brne	.+2      	; 0x1c86 <put_fat+0x52>
    1c84:	62 c0       	rjmp	.+196    	; 0x1d4a <put_fat+0x116>
    1c86:	83 30       	cpi	r24, 0x03	; 3
    1c88:	09 f4       	brne	.+2      	; 0x1c8c <put_fat+0x58>
    1c8a:	85 c0       	rjmp	.+266    	; 0x1d96 <put_fat+0x162>
    1c8c:	81 30       	cpi	r24, 0x01	; 1
    1c8e:	09 f0       	breq	.+2      	; 0x1c92 <put_fat+0x5e>
    1c90:	c8 c0       	rjmp	.+400    	; 0x1e22 <put_fat+0x1ee>
    1c92:	5a 01       	movw	r10, r20
    1c94:	b6 94       	lsr	r11
    1c96:	a7 94       	ror	r10
    1c98:	a4 0e       	add	r10, r20
    1c9a:	b5 1e       	adc	r11, r21
    1c9c:	c5 01       	movw	r24, r10
    1c9e:	89 2f       	mov	r24, r25
    1ca0:	99 27       	eor	r25, r25
    1ca2:	86 95       	lsr	r24
    1ca4:	4e 8d       	ldd	r20, Y+30	; 0x1e
    1ca6:	5f 8d       	ldd	r21, Y+31	; 0x1f
    1ca8:	68 a1       	ldd	r22, Y+32	; 0x20
    1caa:	79 a1       	ldd	r23, Y+33	; 0x21
    1cac:	48 0f       	add	r20, r24
    1cae:	59 1f       	adc	r21, r25
    1cb0:	61 1d       	adc	r22, r1
    1cb2:	71 1d       	adc	r23, r1
    1cb4:	ce 01       	movw	r24, r28
    1cb6:	4e d9       	rcall	.-3428   	; 0xf54 <move_window>
    1cb8:	18 2f       	mov	r17, r24
    1cba:	81 11       	cpse	r24, r1
    1cbc:	d0 c0       	rjmp	.+416    	; 0x1e5e <put_fat+0x22a>
    1cbe:	45 01       	movw	r8, r10
    1cc0:	8f ef       	ldi	r24, 0xFF	; 255
    1cc2:	88 1a       	sub	r8, r24
    1cc4:	98 0a       	sbc	r9, r24
    1cc6:	a1 e0       	ldi	r26, 0x01	; 1
    1cc8:	ba 22       	and	r11, r26
    1cca:	c0 fe       	sbrs	r12, 0
    1ccc:	20 c0       	rjmp	.+64     	; 0x1d0e <put_fat+0xda>
    1cce:	fe 01       	movw	r30, r28
    1cd0:	ea 0d       	add	r30, r10
    1cd2:	fb 1d       	adc	r31, r11
    1cd4:	86 a5       	ldd	r24, Z+46	; 0x2e
    1cd6:	28 2f       	mov	r18, r24
    1cd8:	2f 70       	andi	r18, 0x0F	; 15
    1cda:	b0 e1       	ldi	r27, 0x10	; 16
    1cdc:	4b 9e       	mul	r4, r27
    1cde:	c0 01       	movw	r24, r0
    1ce0:	11 24       	eor	r1, r1
    1ce2:	82 2b       	or	r24, r18
    1ce4:	86 a7       	std	Z+46, r24	; 0x2e
    1ce6:	81 e0       	ldi	r24, 0x01	; 1
    1ce8:	8c 83       	std	Y+4, r24	; 0x04
    1cea:	4e 8d       	ldd	r20, Y+30	; 0x1e
    1cec:	5f 8d       	ldd	r21, Y+31	; 0x1f
    1cee:	68 a1       	ldd	r22, Y+32	; 0x20
    1cf0:	79 a1       	ldd	r23, Y+33	; 0x21
    1cf2:	c4 01       	movw	r24, r8
    1cf4:	89 2f       	mov	r24, r25
    1cf6:	99 27       	eor	r25, r25
    1cf8:	86 95       	lsr	r24
    1cfa:	48 0f       	add	r20, r24
    1cfc:	59 1f       	adc	r21, r25
    1cfe:	61 1d       	adc	r22, r1
    1d00:	71 1d       	adc	r23, r1
    1d02:	ce 01       	movw	r24, r28
    1d04:	27 d9       	rcall	.-3506   	; 0xf54 <move_window>
    1d06:	88 23       	and	r24, r24
    1d08:	09 f4       	brne	.+2      	; 0x1d0c <put_fat+0xd8>
    1d0a:	91 c0       	rjmp	.+290    	; 0x1e2e <put_fat+0x1fa>
    1d0c:	8c c0       	rjmp	.+280    	; 0x1e26 <put_fat+0x1f2>
    1d0e:	fe 01       	movw	r30, r28
    1d10:	ea 0d       	add	r30, r10
    1d12:	fb 1d       	adc	r31, r11
    1d14:	46 a6       	std	Z+46, r4	; 0x2e
    1d16:	81 e0       	ldi	r24, 0x01	; 1
    1d18:	8c 83       	std	Y+4, r24	; 0x04
    1d1a:	4e 8d       	ldd	r20, Y+30	; 0x1e
    1d1c:	5f 8d       	ldd	r21, Y+31	; 0x1f
    1d1e:	68 a1       	ldd	r22, Y+32	; 0x20
    1d20:	79 a1       	ldd	r23, Y+33	; 0x21
    1d22:	c4 01       	movw	r24, r8
    1d24:	89 2f       	mov	r24, r25
    1d26:	99 27       	eor	r25, r25
    1d28:	86 95       	lsr	r24
    1d2a:	48 0f       	add	r20, r24
    1d2c:	59 1f       	adc	r21, r25
    1d2e:	61 1d       	adc	r22, r1
    1d30:	71 1d       	adc	r23, r1
    1d32:	ce 01       	movw	r24, r28
    1d34:	0f d9       	rcall	.-3554   	; 0xf54 <move_window>
    1d36:	88 23       	and	r24, r24
    1d38:	09 f4       	brne	.+2      	; 0x1d3c <put_fat+0x108>
    1d3a:	84 c0       	rjmp	.+264    	; 0x1e44 <put_fat+0x210>
    1d3c:	76 c0       	rjmp	.+236    	; 0x1e2a <put_fat+0x1f6>
    1d3e:	ec 0f       	add	r30, r28
    1d40:	fd 1f       	adc	r31, r29
    1d42:	46 a6       	std	Z+46, r4	; 0x2e
    1d44:	81 e0       	ldi	r24, 0x01	; 1
    1d46:	8c 83       	std	Y+4, r24	; 0x04
    1d48:	8a c0       	rjmp	.+276    	; 0x1e5e <put_fat+0x22a>
    1d4a:	45 2f       	mov	r20, r21
    1d4c:	56 2f       	mov	r21, r22
    1d4e:	67 2f       	mov	r22, r23
    1d50:	77 27       	eor	r23, r23
    1d52:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1d54:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1d56:	a8 a1       	ldd	r26, Y+32	; 0x20
    1d58:	b9 a1       	ldd	r27, Y+33	; 0x21
    1d5a:	48 0f       	add	r20, r24
    1d5c:	59 1f       	adc	r21, r25
    1d5e:	6a 1f       	adc	r22, r26
    1d60:	7b 1f       	adc	r23, r27
    1d62:	ce 01       	movw	r24, r28
    1d64:	f7 d8       	rcall	.-3602   	; 0xf54 <move_window>
    1d66:	18 2f       	mov	r17, r24
    1d68:	81 11       	cpse	r24, r1
    1d6a:	79 c0       	rjmp	.+242    	; 0x1e5e <put_fat+0x22a>
    1d6c:	cc 0c       	add	r12, r12
    1d6e:	dd 1c       	adc	r13, r13
    1d70:	ee 1c       	adc	r14, r14
    1d72:	ff 1c       	adc	r15, r15
    1d74:	e8 94       	clt
    1d76:	c0 f8       	bld	r12, 0
    1d78:	31 e0       	ldi	r19, 0x01	; 1
    1d7a:	d3 22       	and	r13, r19
    1d7c:	ee 24       	eor	r14, r14
    1d7e:	ff 24       	eor	r15, r15
    1d80:	fe 01       	movw	r30, r28
    1d82:	ec 0d       	add	r30, r12
    1d84:	fd 1d       	adc	r31, r13
    1d86:	46 a6       	std	Z+46, r4	; 0x2e
    1d88:	fe 01       	movw	r30, r28
    1d8a:	ec 0d       	add	r30, r12
    1d8c:	fd 1d       	adc	r31, r13
    1d8e:	57 a6       	std	Z+47, r5	; 0x2f
    1d90:	81 e0       	ldi	r24, 0x01	; 1
    1d92:	8c 83       	std	Y+4, r24	; 0x04
    1d94:	64 c0       	rjmp	.+200    	; 0x1e5e <put_fat+0x22a>
    1d96:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1d98:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1d9a:	a8 a1       	ldd	r26, Y+32	; 0x20
    1d9c:	b9 a1       	ldd	r27, Y+33	; 0x21
    1d9e:	68 94       	set
    1da0:	16 f8       	bld	r1, 6
    1da2:	76 95       	lsr	r23
    1da4:	67 95       	ror	r22
    1da6:	57 95       	ror	r21
    1da8:	47 95       	ror	r20
    1daa:	16 94       	lsr	r1
    1dac:	d1 f7       	brne	.-12     	; 0x1da2 <put_fat+0x16e>
    1dae:	48 0f       	add	r20, r24
    1db0:	59 1f       	adc	r21, r25
    1db2:	6a 1f       	adc	r22, r26
    1db4:	7b 1f       	adc	r23, r27
    1db6:	ce 01       	movw	r24, r28
    1db8:	cd d8       	rcall	.-3686   	; 0xf54 <move_window>
    1dba:	18 2f       	mov	r17, r24
    1dbc:	81 11       	cpse	r24, r1
    1dbe:	4f c0       	rjmp	.+158    	; 0x1e5e <put_fat+0x22a>
    1dc0:	cc 0c       	add	r12, r12
    1dc2:	dd 1c       	adc	r13, r13
    1dc4:	ee 1c       	adc	r14, r14
    1dc6:	ff 1c       	adc	r15, r15
    1dc8:	cc 0c       	add	r12, r12
    1dca:	dd 1c       	adc	r13, r13
    1dcc:	ee 1c       	adc	r14, r14
    1dce:	ff 1c       	adc	r15, r15
    1dd0:	8c ef       	ldi	r24, 0xFC	; 252
    1dd2:	c8 22       	and	r12, r24
    1dd4:	81 e0       	ldi	r24, 0x01	; 1
    1dd6:	d8 22       	and	r13, r24
    1dd8:	ee 24       	eor	r14, r14
    1dda:	ff 24       	eor	r15, r15
    1ddc:	f6 01       	movw	r30, r12
    1dde:	be 96       	adiw	r30, 0x2e	; 46
    1de0:	ec 0f       	add	r30, r28
    1de2:	fd 1f       	adc	r31, r29
    1de4:	83 81       	ldd	r24, Z+3	; 0x03
    1de6:	90 e0       	ldi	r25, 0x00	; 0
    1de8:	a0 e0       	ldi	r26, 0x00	; 0
    1dea:	b0 e0       	ldi	r27, 0x00	; 0
    1dec:	b8 2f       	mov	r27, r24
    1dee:	aa 27       	eor	r26, r26
    1df0:	99 27       	eor	r25, r25
    1df2:	88 27       	eor	r24, r24
    1df4:	cc 0e       	add	r12, r28
    1df6:	dd 1e       	adc	r13, r29
    1df8:	88 27       	eor	r24, r24
    1dfa:	99 27       	eor	r25, r25
    1dfc:	aa 27       	eor	r26, r26
    1dfe:	b0 7f       	andi	r27, 0xF0	; 240
    1e00:	48 2a       	or	r4, r24
    1e02:	59 2a       	or	r5, r25
    1e04:	6a 2a       	or	r6, r26
    1e06:	7b 2a       	or	r7, r27
    1e08:	d6 01       	movw	r26, r12
    1e0a:	9e 96       	adiw	r26, 0x2e	; 46
    1e0c:	4c 92       	st	X, r4
    1e0e:	51 82       	std	Z+1, r5	; 0x01
    1e10:	62 82       	std	Z+2, r6	; 0x02
    1e12:	73 82       	std	Z+3, r7	; 0x03
    1e14:	81 e0       	ldi	r24, 0x01	; 1
    1e16:	8c 83       	std	Y+4, r24	; 0x04
    1e18:	22 c0       	rjmp	.+68     	; 0x1e5e <put_fat+0x22a>
    1e1a:	12 e0       	ldi	r17, 0x02	; 2
    1e1c:	20 c0       	rjmp	.+64     	; 0x1e5e <put_fat+0x22a>
    1e1e:	12 e0       	ldi	r17, 0x02	; 2
    1e20:	1e c0       	rjmp	.+60     	; 0x1e5e <put_fat+0x22a>
    1e22:	12 e0       	ldi	r17, 0x02	; 2
    1e24:	1c c0       	rjmp	.+56     	; 0x1e5e <put_fat+0x22a>
    1e26:	18 2f       	mov	r17, r24
    1e28:	1a c0       	rjmp	.+52     	; 0x1e5e <put_fat+0x22a>
    1e2a:	18 2f       	mov	r17, r24
    1e2c:	18 c0       	rjmp	.+48     	; 0x1e5e <put_fat+0x22a>
    1e2e:	f4 01       	movw	r30, r8
    1e30:	f1 70       	andi	r31, 0x01	; 1
    1e32:	68 94       	set
    1e34:	13 f8       	bld	r1, 3
    1e36:	76 94       	lsr	r7
    1e38:	67 94       	ror	r6
    1e3a:	57 94       	ror	r5
    1e3c:	47 94       	ror	r4
    1e3e:	16 94       	lsr	r1
    1e40:	d1 f7       	brne	.-12     	; 0x1e36 <put_fat+0x202>
    1e42:	7d cf       	rjmp	.-262    	; 0x1d3e <put_fat+0x10a>
    1e44:	f4 01       	movw	r30, r8
    1e46:	f1 70       	andi	r31, 0x01	; 1
    1e48:	de 01       	movw	r26, r28
    1e4a:	ae 0f       	add	r26, r30
    1e4c:	bf 1f       	adc	r27, r31
    1e4e:	9e 96       	adiw	r26, 0x2e	; 46
    1e50:	9c 91       	ld	r25, X
    1e52:	90 7f       	andi	r25, 0xF0	; 240
    1e54:	85 2d       	mov	r24, r5
    1e56:	8f 70       	andi	r24, 0x0F	; 15
    1e58:	49 2e       	mov	r4, r25
    1e5a:	48 2a       	or	r4, r24
    1e5c:	70 cf       	rjmp	.-288    	; 0x1d3e <put_fat+0x10a>
    1e5e:	81 2f       	mov	r24, r17
    1e60:	df 91       	pop	r29
    1e62:	cf 91       	pop	r28
    1e64:	1f 91       	pop	r17
    1e66:	0f 91       	pop	r16
    1e68:	ff 90       	pop	r15
    1e6a:	ef 90       	pop	r14
    1e6c:	df 90       	pop	r13
    1e6e:	cf 90       	pop	r12
    1e70:	bf 90       	pop	r11
    1e72:	af 90       	pop	r10
    1e74:	9f 90       	pop	r9
    1e76:	8f 90       	pop	r8
    1e78:	7f 90       	pop	r7
    1e7a:	6f 90       	pop	r6
    1e7c:	5f 90       	pop	r5
    1e7e:	4f 90       	pop	r4
    1e80:	08 95       	ret

00001e82 <create_chain>:
    1e82:	2f 92       	push	r2
    1e84:	3f 92       	push	r3
    1e86:	4f 92       	push	r4
    1e88:	5f 92       	push	r5
    1e8a:	6f 92       	push	r6
    1e8c:	7f 92       	push	r7
    1e8e:	8f 92       	push	r8
    1e90:	9f 92       	push	r9
    1e92:	af 92       	push	r10
    1e94:	bf 92       	push	r11
    1e96:	cf 92       	push	r12
    1e98:	df 92       	push	r13
    1e9a:	ef 92       	push	r14
    1e9c:	ff 92       	push	r15
    1e9e:	0f 93       	push	r16
    1ea0:	1f 93       	push	r17
    1ea2:	cf 93       	push	r28
    1ea4:	df 93       	push	r29
    1ea6:	ec 01       	movw	r28, r24
    1ea8:	2a 01       	movw	r4, r20
    1eaa:	3b 01       	movw	r6, r22
    1eac:	41 15       	cp	r20, r1
    1eae:	51 05       	cpc	r21, r1
    1eb0:	61 05       	cpc	r22, r1
    1eb2:	71 05       	cpc	r23, r1
    1eb4:	b9 f4       	brne	.+46     	; 0x1ee4 <create_chain+0x62>
    1eb6:	8a 84       	ldd	r8, Y+10	; 0x0a
    1eb8:	9b 84       	ldd	r9, Y+11	; 0x0b
    1eba:	ac 84       	ldd	r10, Y+12	; 0x0c
    1ebc:	bd 84       	ldd	r11, Y+13	; 0x0d
    1ebe:	81 14       	cp	r8, r1
    1ec0:	91 04       	cpc	r9, r1
    1ec2:	a1 04       	cpc	r10, r1
    1ec4:	b1 04       	cpc	r11, r1
    1ec6:	59 f1       	breq	.+86     	; 0x1f1e <create_chain+0x9c>
    1ec8:	8a 89       	ldd	r24, Y+18	; 0x12
    1eca:	9b 89       	ldd	r25, Y+19	; 0x13
    1ecc:	ac 89       	ldd	r26, Y+20	; 0x14
    1ece:	bd 89       	ldd	r27, Y+21	; 0x15
    1ed0:	88 16       	cp	r8, r24
    1ed2:	99 06       	cpc	r9, r25
    1ed4:	aa 06       	cpc	r10, r26
    1ed6:	bb 06       	cpc	r11, r27
    1ed8:	30 f1       	brcs	.+76     	; 0x1f26 <create_chain+0xa4>
    1eda:	81 2c       	mov	r8, r1
    1edc:	91 2c       	mov	r9, r1
    1ede:	54 01       	movw	r10, r8
    1ee0:	83 94       	inc	r8
    1ee2:	21 c0       	rjmp	.+66     	; 0x1f26 <create_chain+0xa4>
    1ee4:	ed dc       	rcall	.-1574   	; 0x18c0 <get_fat>
    1ee6:	6b 01       	movw	r12, r22
    1ee8:	7c 01       	movw	r14, r24
    1eea:	62 30       	cpi	r22, 0x02	; 2
    1eec:	71 05       	cpc	r23, r1
    1eee:	81 05       	cpc	r24, r1
    1ef0:	91 05       	cpc	r25, r1
    1ef2:	08 f4       	brcc	.+2      	; 0x1ef6 <create_chain+0x74>
    1ef4:	96 c0       	rjmp	.+300    	; 0x2022 <create_chain+0x1a0>
    1ef6:	8f ef       	ldi	r24, 0xFF	; 255
    1ef8:	c8 16       	cp	r12, r24
    1efa:	d8 06       	cpc	r13, r24
    1efc:	e8 06       	cpc	r14, r24
    1efe:	f8 06       	cpc	r15, r24
    1f00:	09 f4       	brne	.+2      	; 0x1f04 <create_chain+0x82>
    1f02:	94 c0       	rjmp	.+296    	; 0x202c <create_chain+0x1aa>
    1f04:	8a 89       	ldd	r24, Y+18	; 0x12
    1f06:	9b 89       	ldd	r25, Y+19	; 0x13
    1f08:	ac 89       	ldd	r26, Y+20	; 0x14
    1f0a:	bd 89       	ldd	r27, Y+21	; 0x15
    1f0c:	c8 16       	cp	r12, r24
    1f0e:	d9 06       	cpc	r13, r25
    1f10:	ea 06       	cpc	r14, r26
    1f12:	fb 06       	cpc	r15, r27
    1f14:	08 f4       	brcc	.+2      	; 0x1f18 <create_chain+0x96>
    1f16:	8f c0       	rjmp	.+286    	; 0x2036 <create_chain+0x1b4>
    1f18:	53 01       	movw	r10, r6
    1f1a:	42 01       	movw	r8, r4
    1f1c:	04 c0       	rjmp	.+8      	; 0x1f26 <create_chain+0xa4>
    1f1e:	81 2c       	mov	r8, r1
    1f20:	91 2c       	mov	r9, r1
    1f22:	54 01       	movw	r10, r8
    1f24:	83 94       	inc	r8
    1f26:	75 01       	movw	r14, r10
    1f28:	64 01       	movw	r12, r8
    1f2a:	68 94       	set
    1f2c:	22 24       	eor	r2, r2
    1f2e:	21 f8       	bld	r2, 1
    1f30:	31 2c       	mov	r3, r1
    1f32:	00 e0       	ldi	r16, 0x00	; 0
    1f34:	10 e0       	ldi	r17, 0x00	; 0
    1f36:	2f ef       	ldi	r18, 0xFF	; 255
    1f38:	c2 1a       	sub	r12, r18
    1f3a:	d2 0a       	sbc	r13, r18
    1f3c:	e2 0a       	sbc	r14, r18
    1f3e:	f2 0a       	sbc	r15, r18
    1f40:	8a 89       	ldd	r24, Y+18	; 0x12
    1f42:	9b 89       	ldd	r25, Y+19	; 0x13
    1f44:	ac 89       	ldd	r26, Y+20	; 0x14
    1f46:	bd 89       	ldd	r27, Y+21	; 0x15
    1f48:	c8 16       	cp	r12, r24
    1f4a:	d9 06       	cpc	r13, r25
    1f4c:	ea 06       	cpc	r14, r26
    1f4e:	fb 06       	cpc	r15, r27
    1f50:	58 f0       	brcs	.+22     	; 0x1f68 <create_chain+0xe6>
    1f52:	82 e0       	ldi	r24, 0x02	; 2
    1f54:	88 16       	cp	r8, r24
    1f56:	91 04       	cpc	r9, r1
    1f58:	a1 04       	cpc	r10, r1
    1f5a:	b1 04       	cpc	r11, r1
    1f5c:	08 f4       	brcc	.+2      	; 0x1f60 <create_chain+0xde>
    1f5e:	70 c0       	rjmp	.+224    	; 0x2040 <create_chain+0x1be>
    1f60:	c2 2c       	mov	r12, r2
    1f62:	d3 2c       	mov	r13, r3
    1f64:	e0 2e       	mov	r14, r16
    1f66:	f1 2e       	mov	r15, r17
    1f68:	b7 01       	movw	r22, r14
    1f6a:	a6 01       	movw	r20, r12
    1f6c:	ce 01       	movw	r24, r28
    1f6e:	a8 dc       	rcall	.-1712   	; 0x18c0 <get_fat>
    1f70:	61 15       	cp	r22, r1
    1f72:	71 05       	cpc	r23, r1
    1f74:	81 05       	cpc	r24, r1
    1f76:	91 05       	cpc	r25, r1
    1f78:	99 f0       	breq	.+38     	; 0x1fa0 <create_chain+0x11e>
    1f7a:	6f 3f       	cpi	r22, 0xFF	; 255
    1f7c:	2f ef       	ldi	r18, 0xFF	; 255
    1f7e:	72 07       	cpc	r23, r18
    1f80:	82 07       	cpc	r24, r18
    1f82:	92 07       	cpc	r25, r18
    1f84:	09 f4       	brne	.+2      	; 0x1f88 <create_chain+0x106>
    1f86:	61 c0       	rjmp	.+194    	; 0x204a <create_chain+0x1c8>
    1f88:	61 30       	cpi	r22, 0x01	; 1
    1f8a:	71 05       	cpc	r23, r1
    1f8c:	81 05       	cpc	r24, r1
    1f8e:	91 05       	cpc	r25, r1
    1f90:	09 f4       	brne	.+2      	; 0x1f94 <create_chain+0x112>
    1f92:	60 c0       	rjmp	.+192    	; 0x2054 <create_chain+0x1d2>
    1f94:	c8 14       	cp	r12, r8
    1f96:	d9 04       	cpc	r13, r9
    1f98:	ea 04       	cpc	r14, r10
    1f9a:	fb 04       	cpc	r15, r11
    1f9c:	61 f6       	brne	.-104    	; 0x1f36 <create_chain+0xb4>
    1f9e:	5f c0       	rjmp	.+190    	; 0x205e <create_chain+0x1dc>
    1fa0:	8c 2c       	mov	r8, r12
    1fa2:	9d 2c       	mov	r9, r13
    1fa4:	ae 2c       	mov	r10, r14
    1fa6:	bf 2c       	mov	r11, r15
    1fa8:	0f ef       	ldi	r16, 0xFF	; 255
    1faa:	1f ef       	ldi	r17, 0xFF	; 255
    1fac:	2f ef       	ldi	r18, 0xFF	; 255
    1fae:	3f e0       	ldi	r19, 0x0F	; 15
    1fb0:	b7 01       	movw	r22, r14
    1fb2:	a6 01       	movw	r20, r12
    1fb4:	ce 01       	movw	r24, r28
    1fb6:	3e de       	rcall	.-900    	; 0x1c34 <put_fat>
    1fb8:	81 11       	cpse	r24, r1
    1fba:	2c c0       	rjmp	.+88     	; 0x2014 <create_chain+0x192>
    1fbc:	41 14       	cp	r4, r1
    1fbe:	51 04       	cpc	r5, r1
    1fc0:	61 04       	cpc	r6, r1
    1fc2:	71 04       	cpc	r7, r1
    1fc4:	51 f0       	breq	.+20     	; 0x1fda <create_chain+0x158>
    1fc6:	0c 2d       	mov	r16, r12
    1fc8:	1d 2d       	mov	r17, r13
    1fca:	2e 2d       	mov	r18, r14
    1fcc:	3f 2d       	mov	r19, r15
    1fce:	b3 01       	movw	r22, r6
    1fd0:	a2 01       	movw	r20, r4
    1fd2:	ce 01       	movw	r24, r28
    1fd4:	2f de       	rcall	.-930    	; 0x1c34 <put_fat>
    1fd6:	81 11       	cpse	r24, r1
    1fd8:	1d c0       	rjmp	.+58     	; 0x2014 <create_chain+0x192>
    1fda:	8a 86       	std	Y+10, r8	; 0x0a
    1fdc:	9b 86       	std	Y+11, r9	; 0x0b
    1fde:	ac 86       	std	Y+12, r10	; 0x0c
    1fe0:	bd 86       	std	Y+13, r11	; 0x0d
    1fe2:	8e 85       	ldd	r24, Y+14	; 0x0e
    1fe4:	9f 85       	ldd	r25, Y+15	; 0x0f
    1fe6:	a8 89       	ldd	r26, Y+16	; 0x10
    1fe8:	b9 89       	ldd	r27, Y+17	; 0x11
    1fea:	8f 3f       	cpi	r24, 0xFF	; 255
    1fec:	2f ef       	ldi	r18, 0xFF	; 255
    1fee:	92 07       	cpc	r25, r18
    1ff0:	a2 07       	cpc	r26, r18
    1ff2:	b2 07       	cpc	r27, r18
    1ff4:	c9 f1       	breq	.+114    	; 0x2068 <create_chain+0x1e6>
    1ff6:	01 97       	sbiw	r24, 0x01	; 1
    1ff8:	a1 09       	sbc	r26, r1
    1ffa:	b1 09       	sbc	r27, r1
    1ffc:	8e 87       	std	Y+14, r24	; 0x0e
    1ffe:	9f 87       	std	Y+15, r25	; 0x0f
    2000:	a8 8b       	std	Y+16, r26	; 0x10
    2002:	b9 8b       	std	Y+17, r27	; 0x11
    2004:	8d 81       	ldd	r24, Y+5	; 0x05
    2006:	81 60       	ori	r24, 0x01	; 1
    2008:	8d 83       	std	Y+5, r24	; 0x05
    200a:	6c 2d       	mov	r22, r12
    200c:	7d 2d       	mov	r23, r13
    200e:	8e 2d       	mov	r24, r14
    2010:	9f 2d       	mov	r25, r15
    2012:	33 c0       	rjmp	.+102    	; 0x207a <create_chain+0x1f8>
    2014:	81 30       	cpi	r24, 0x01	; 1
    2016:	69 f1       	breq	.+90     	; 0x2072 <create_chain+0x1f0>
    2018:	61 e0       	ldi	r22, 0x01	; 1
    201a:	70 e0       	ldi	r23, 0x00	; 0
    201c:	80 e0       	ldi	r24, 0x00	; 0
    201e:	90 e0       	ldi	r25, 0x00	; 0
    2020:	2c c0       	rjmp	.+88     	; 0x207a <create_chain+0x1f8>
    2022:	61 e0       	ldi	r22, 0x01	; 1
    2024:	70 e0       	ldi	r23, 0x00	; 0
    2026:	80 e0       	ldi	r24, 0x00	; 0
    2028:	90 e0       	ldi	r25, 0x00	; 0
    202a:	27 c0       	rjmp	.+78     	; 0x207a <create_chain+0x1f8>
    202c:	6f ef       	ldi	r22, 0xFF	; 255
    202e:	7f ef       	ldi	r23, 0xFF	; 255
    2030:	8f ef       	ldi	r24, 0xFF	; 255
    2032:	9f ef       	ldi	r25, 0xFF	; 255
    2034:	22 c0       	rjmp	.+68     	; 0x207a <create_chain+0x1f8>
    2036:	6c 2d       	mov	r22, r12
    2038:	7d 2d       	mov	r23, r13
    203a:	8e 2d       	mov	r24, r14
    203c:	9f 2d       	mov	r25, r15
    203e:	1d c0       	rjmp	.+58     	; 0x207a <create_chain+0x1f8>
    2040:	60 e0       	ldi	r22, 0x00	; 0
    2042:	70 e0       	ldi	r23, 0x00	; 0
    2044:	80 e0       	ldi	r24, 0x00	; 0
    2046:	90 e0       	ldi	r25, 0x00	; 0
    2048:	18 c0       	rjmp	.+48     	; 0x207a <create_chain+0x1f8>
    204a:	6f ef       	ldi	r22, 0xFF	; 255
    204c:	7f ef       	ldi	r23, 0xFF	; 255
    204e:	8f ef       	ldi	r24, 0xFF	; 255
    2050:	9f ef       	ldi	r25, 0xFF	; 255
    2052:	13 c0       	rjmp	.+38     	; 0x207a <create_chain+0x1f8>
    2054:	61 e0       	ldi	r22, 0x01	; 1
    2056:	70 e0       	ldi	r23, 0x00	; 0
    2058:	80 e0       	ldi	r24, 0x00	; 0
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	0e c0       	rjmp	.+28     	; 0x207a <create_chain+0x1f8>
    205e:	60 e0       	ldi	r22, 0x00	; 0
    2060:	70 e0       	ldi	r23, 0x00	; 0
    2062:	80 e0       	ldi	r24, 0x00	; 0
    2064:	90 e0       	ldi	r25, 0x00	; 0
    2066:	09 c0       	rjmp	.+18     	; 0x207a <create_chain+0x1f8>
    2068:	6c 2d       	mov	r22, r12
    206a:	7d 2d       	mov	r23, r13
    206c:	8e 2d       	mov	r24, r14
    206e:	9f 2d       	mov	r25, r15
    2070:	04 c0       	rjmp	.+8      	; 0x207a <create_chain+0x1f8>
    2072:	6f ef       	ldi	r22, 0xFF	; 255
    2074:	7f ef       	ldi	r23, 0xFF	; 255
    2076:	8f ef       	ldi	r24, 0xFF	; 255
    2078:	9f ef       	ldi	r25, 0xFF	; 255
    207a:	df 91       	pop	r29
    207c:	cf 91       	pop	r28
    207e:	1f 91       	pop	r17
    2080:	0f 91       	pop	r16
    2082:	ff 90       	pop	r15
    2084:	ef 90       	pop	r14
    2086:	df 90       	pop	r13
    2088:	cf 90       	pop	r12
    208a:	bf 90       	pop	r11
    208c:	af 90       	pop	r10
    208e:	9f 90       	pop	r9
    2090:	8f 90       	pop	r8
    2092:	7f 90       	pop	r7
    2094:	6f 90       	pop	r6
    2096:	5f 90       	pop	r5
    2098:	4f 90       	pop	r4
    209a:	3f 90       	pop	r3
    209c:	2f 90       	pop	r2
    209e:	08 95       	ret

000020a0 <dir_next>:
    20a0:	7f 92       	push	r7
    20a2:	8f 92       	push	r8
    20a4:	9f 92       	push	r9
    20a6:	af 92       	push	r10
    20a8:	bf 92       	push	r11
    20aa:	cf 92       	push	r12
    20ac:	df 92       	push	r13
    20ae:	ef 92       	push	r14
    20b0:	ff 92       	push	r15
    20b2:	0f 93       	push	r16
    20b4:	1f 93       	push	r17
    20b6:	cf 93       	push	r28
    20b8:	df 93       	push	r29
    20ba:	dc 01       	movw	r26, r24
    20bc:	14 96       	adiw	r26, 0x04	; 4
    20be:	cd 91       	ld	r28, X+
    20c0:	dc 91       	ld	r29, X
    20c2:	15 97       	sbiw	r26, 0x05	; 5
    20c4:	21 96       	adiw	r28, 0x01	; 1
    20c6:	09 f4       	brne	.+2      	; 0x20ca <dir_next+0x2a>
    20c8:	03 c1       	rjmp	.+518    	; 0x22d0 <dir_next+0x230>
    20ca:	1e 96       	adiw	r26, 0x0e	; 14
    20cc:	8d 90       	ld	r8, X+
    20ce:	9d 90       	ld	r9, X+
    20d0:	ad 90       	ld	r10, X+
    20d2:	bc 90       	ld	r11, X
    20d4:	51 97       	sbiw	r26, 0x11	; 17
    20d6:	81 14       	cp	r8, r1
    20d8:	91 04       	cpc	r9, r1
    20da:	a1 04       	cpc	r10, r1
    20dc:	b1 04       	cpc	r11, r1
    20de:	09 f4       	brne	.+2      	; 0x20e2 <dir_next+0x42>
    20e0:	f9 c0       	rjmp	.+498    	; 0x22d4 <dir_next+0x234>
    20e2:	7b 01       	movw	r14, r22
    20e4:	8c 01       	movw	r16, r24
    20e6:	6e 01       	movw	r12, r28
    20e8:	bf e0       	ldi	r27, 0x0F	; 15
    20ea:	cb 22       	and	r12, r27
    20ec:	dd 24       	eor	r13, r13
    20ee:	c1 14       	cp	r12, r1
    20f0:	d1 04       	cpc	r13, r1
    20f2:	09 f0       	breq	.+2      	; 0x20f6 <dir_next+0x56>
    20f4:	d1 c0       	rjmp	.+418    	; 0x2298 <dir_next+0x1f8>
    20f6:	ef ef       	ldi	r30, 0xFF	; 255
    20f8:	8e 1a       	sub	r8, r30
    20fa:	9e 0a       	sbc	r9, r30
    20fc:	ae 0a       	sbc	r10, r30
    20fe:	be 0a       	sbc	r11, r30
    2100:	dc 01       	movw	r26, r24
    2102:	1e 96       	adiw	r26, 0x0e	; 14
    2104:	8d 92       	st	X+, r8
    2106:	9d 92       	st	X+, r9
    2108:	ad 92       	st	X+, r10
    210a:	bc 92       	st	X, r11
    210c:	51 97       	sbiw	r26, 0x11	; 17
    210e:	1a 96       	adiw	r26, 0x0a	; 10
    2110:	4d 91       	ld	r20, X+
    2112:	5d 91       	ld	r21, X+
    2114:	6d 91       	ld	r22, X+
    2116:	7c 91       	ld	r23, X
    2118:	1d 97       	sbiw	r26, 0x0d	; 13
    211a:	41 15       	cp	r20, r1
    211c:	51 05       	cpc	r21, r1
    211e:	61 05       	cpc	r22, r1
    2120:	71 05       	cpc	r23, r1
    2122:	49 f4       	brne	.+18     	; 0x2136 <dir_next+0x96>
    2124:	ed 91       	ld	r30, X+
    2126:	fc 91       	ld	r31, X
    2128:	80 85       	ldd	r24, Z+8	; 0x08
    212a:	91 85       	ldd	r25, Z+9	; 0x09
    212c:	c8 17       	cp	r28, r24
    212e:	d9 07       	cpc	r29, r25
    2130:	08 f0       	brcs	.+2      	; 0x2134 <dir_next+0x94>
    2132:	d2 c0       	rjmp	.+420    	; 0x22d8 <dir_next+0x238>
    2134:	b1 c0       	rjmp	.+354    	; 0x2298 <dir_next+0x1f8>
    2136:	dc 01       	movw	r26, r24
    2138:	ed 91       	ld	r30, X+
    213a:	fc 91       	ld	r31, X
    213c:	22 81       	ldd	r18, Z+2	; 0x02
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	21 50       	subi	r18, 0x01	; 1
    2142:	31 09       	sbc	r19, r1
    2144:	ce 01       	movw	r24, r28
    2146:	92 95       	swap	r25
    2148:	82 95       	swap	r24
    214a:	8f 70       	andi	r24, 0x0F	; 15
    214c:	89 27       	eor	r24, r25
    214e:	9f 70       	andi	r25, 0x0F	; 15
    2150:	89 27       	eor	r24, r25
    2152:	28 23       	and	r18, r24
    2154:	39 23       	and	r19, r25
    2156:	23 2b       	or	r18, r19
    2158:	09 f0       	breq	.+2      	; 0x215c <dir_next+0xbc>
    215a:	9e c0       	rjmp	.+316    	; 0x2298 <dir_next+0x1f8>
    215c:	cf 01       	movw	r24, r30
    215e:	b0 db       	rcall	.-2208   	; 0x18c0 <get_fat>
    2160:	4b 01       	movw	r8, r22
    2162:	5c 01       	movw	r10, r24
    2164:	62 30       	cpi	r22, 0x02	; 2
    2166:	71 05       	cpc	r23, r1
    2168:	81 05       	cpc	r24, r1
    216a:	91 05       	cpc	r25, r1
    216c:	08 f4       	brcc	.+2      	; 0x2170 <dir_next+0xd0>
    216e:	b6 c0       	rjmp	.+364    	; 0x22dc <dir_next+0x23c>
    2170:	6f 3f       	cpi	r22, 0xFF	; 255
    2172:	7f 4f       	sbci	r23, 0xFF	; 255
    2174:	8f 4f       	sbci	r24, 0xFF	; 255
    2176:	9f 4f       	sbci	r25, 0xFF	; 255
    2178:	09 f4       	brne	.+2      	; 0x217c <dir_next+0xdc>
    217a:	b2 c0       	rjmp	.+356    	; 0x22e0 <dir_next+0x240>
    217c:	d8 01       	movw	r26, r16
    217e:	ed 91       	ld	r30, X+
    2180:	fc 91       	ld	r31, X
    2182:	82 89       	ldd	r24, Z+18	; 0x12
    2184:	93 89       	ldd	r25, Z+19	; 0x13
    2186:	a4 89       	ldd	r26, Z+20	; 0x14
    2188:	b5 89       	ldd	r27, Z+21	; 0x15
    218a:	88 16       	cp	r8, r24
    218c:	99 06       	cpc	r9, r25
    218e:	aa 06       	cpc	r10, r26
    2190:	bb 06       	cpc	r11, r27
    2192:	08 f4       	brcc	.+2      	; 0x2196 <dir_next+0xf6>
    2194:	70 c0       	rjmp	.+224    	; 0x2276 <dir_next+0x1d6>
    2196:	ef 28       	or	r14, r15
    2198:	09 f4       	brne	.+2      	; 0x219c <dir_next+0xfc>
    219a:	a4 c0       	rjmp	.+328    	; 0x22e4 <dir_next+0x244>
    219c:	d8 01       	movw	r26, r16
    219e:	1a 96       	adiw	r26, 0x0a	; 10
    21a0:	4d 91       	ld	r20, X+
    21a2:	5d 91       	ld	r21, X+
    21a4:	6d 91       	ld	r22, X+
    21a6:	7c 91       	ld	r23, X
    21a8:	1d 97       	sbiw	r26, 0x0d	; 13
    21aa:	cf 01       	movw	r24, r30
    21ac:	6a de       	rcall	.-812    	; 0x1e82 <create_chain>
    21ae:	4b 01       	movw	r8, r22
    21b0:	5c 01       	movw	r10, r24
    21b2:	61 15       	cp	r22, r1
    21b4:	71 05       	cpc	r23, r1
    21b6:	81 05       	cpc	r24, r1
    21b8:	91 05       	cpc	r25, r1
    21ba:	09 f4       	brne	.+2      	; 0x21be <dir_next+0x11e>
    21bc:	95 c0       	rjmp	.+298    	; 0x22e8 <dir_next+0x248>
    21be:	61 30       	cpi	r22, 0x01	; 1
    21c0:	71 05       	cpc	r23, r1
    21c2:	81 05       	cpc	r24, r1
    21c4:	91 05       	cpc	r25, r1
    21c6:	09 f4       	brne	.+2      	; 0x21ca <dir_next+0x12a>
    21c8:	91 c0       	rjmp	.+290    	; 0x22ec <dir_next+0x24c>
    21ca:	6f 3f       	cpi	r22, 0xFF	; 255
    21cc:	7f 4f       	sbci	r23, 0xFF	; 255
    21ce:	8f 4f       	sbci	r24, 0xFF	; 255
    21d0:	9f 4f       	sbci	r25, 0xFF	; 255
    21d2:	09 f4       	brne	.+2      	; 0x21d6 <dir_next+0x136>
    21d4:	8d c0       	rjmp	.+282    	; 0x22f0 <dir_next+0x250>
    21d6:	d8 01       	movw	r26, r16
    21d8:	8d 91       	ld	r24, X+
    21da:	9c 91       	ld	r25, X
    21dc:	0e 94 41 07 	call	0xe82	; 0xe82 <sync_window>
    21e0:	81 11       	cpse	r24, r1
    21e2:	88 c0       	rjmp	.+272    	; 0x22f4 <dir_next+0x254>
    21e4:	f8 01       	movw	r30, r16
    21e6:	80 81       	ld	r24, Z
    21e8:	91 81       	ldd	r25, Z+1	; 0x01
    21ea:	fc 01       	movw	r30, r24
    21ec:	be 96       	adiw	r30, 0x2e	; 46
    21ee:	82 5d       	subi	r24, 0xD2	; 210
    21f0:	9d 4f       	sbci	r25, 0xFD	; 253
    21f2:	11 92       	st	Z+, r1
    21f4:	e8 17       	cp	r30, r24
    21f6:	f9 07       	cpc	r31, r25
    21f8:	e1 f7       	brne	.-8      	; 0x21f2 <dir_next+0x152>
    21fa:	d8 01       	movw	r26, r16
    21fc:	ed 90       	ld	r14, X+
    21fe:	fc 90       	ld	r15, X
    2200:	b5 01       	movw	r22, r10
    2202:	a4 01       	movw	r20, r8
    2204:	c7 01       	movw	r24, r14
    2206:	2e db       	rcall	.-2468   	; 0x1864 <clust2sect>
    2208:	f7 01       	movw	r30, r14
    220a:	62 a7       	std	Z+42, r22	; 0x2a
    220c:	73 a7       	std	Z+43, r23	; 0x2b
    220e:	84 a7       	std	Z+44, r24	; 0x2c
    2210:	95 a7       	std	Z+45, r25	; 0x2d
    2212:	e1 2c       	mov	r14, r1
    2214:	f1 2c       	mov	r15, r1
    2216:	77 24       	eor	r7, r7
    2218:	73 94       	inc	r7
    221a:	19 c0       	rjmp	.+50     	; 0x224e <dir_next+0x1ae>
    221c:	74 82       	std	Z+4, r7	; 0x04
    221e:	d8 01       	movw	r26, r16
    2220:	8d 91       	ld	r24, X+
    2222:	9c 91       	ld	r25, X
    2224:	0e 94 41 07 	call	0xe82	; 0xe82 <sync_window>
    2228:	81 11       	cpse	r24, r1
    222a:	66 c0       	rjmp	.+204    	; 0x22f8 <dir_next+0x258>
    222c:	d8 01       	movw	r26, r16
    222e:	ed 91       	ld	r30, X+
    2230:	fc 91       	ld	r31, X
    2232:	82 a5       	ldd	r24, Z+42	; 0x2a
    2234:	93 a5       	ldd	r25, Z+43	; 0x2b
    2236:	a4 a5       	ldd	r26, Z+44	; 0x2c
    2238:	b5 a5       	ldd	r27, Z+45	; 0x2d
    223a:	01 96       	adiw	r24, 0x01	; 1
    223c:	a1 1d       	adc	r26, r1
    223e:	b1 1d       	adc	r27, r1
    2240:	82 a7       	std	Z+42, r24	; 0x2a
    2242:	93 a7       	std	Z+43, r25	; 0x2b
    2244:	a4 a7       	std	Z+44, r26	; 0x2c
    2246:	b5 a7       	std	Z+45, r27	; 0x2d
    2248:	bf ef       	ldi	r27, 0xFF	; 255
    224a:	eb 1a       	sub	r14, r27
    224c:	fb 0a       	sbc	r15, r27
    224e:	d8 01       	movw	r26, r16
    2250:	ed 91       	ld	r30, X+
    2252:	fc 91       	ld	r31, X
    2254:	82 81       	ldd	r24, Z+2	; 0x02
    2256:	90 e0       	ldi	r25, 0x00	; 0
    2258:	e8 16       	cp	r14, r24
    225a:	f9 06       	cpc	r15, r25
    225c:	f8 f2       	brcs	.-66     	; 0x221c <dir_next+0x17c>
    225e:	82 a5       	ldd	r24, Z+42	; 0x2a
    2260:	93 a5       	ldd	r25, Z+43	; 0x2b
    2262:	a4 a5       	ldd	r26, Z+44	; 0x2c
    2264:	b5 a5       	ldd	r27, Z+45	; 0x2d
    2266:	8e 19       	sub	r24, r14
    2268:	9f 09       	sbc	r25, r15
    226a:	a1 09       	sbc	r26, r1
    226c:	b1 09       	sbc	r27, r1
    226e:	82 a7       	std	Z+42, r24	; 0x2a
    2270:	93 a7       	std	Z+43, r25	; 0x2b
    2272:	a4 a7       	std	Z+44, r26	; 0x2c
    2274:	b5 a7       	std	Z+45, r27	; 0x2d
    2276:	f8 01       	movw	r30, r16
    2278:	82 86       	std	Z+10, r8	; 0x0a
    227a:	93 86       	std	Z+11, r9	; 0x0b
    227c:	a4 86       	std	Z+12, r10	; 0x0c
    227e:	b5 86       	std	Z+13, r11	; 0x0d
    2280:	b5 01       	movw	r22, r10
    2282:	a4 01       	movw	r20, r8
    2284:	80 81       	ld	r24, Z
    2286:	91 81       	ldd	r25, Z+1	; 0x01
    2288:	ed da       	rcall	.-2598   	; 0x1864 <clust2sect>
    228a:	d8 01       	movw	r26, r16
    228c:	1e 96       	adiw	r26, 0x0e	; 14
    228e:	6d 93       	st	X+, r22
    2290:	7d 93       	st	X+, r23
    2292:	8d 93       	st	X+, r24
    2294:	9c 93       	st	X, r25
    2296:	51 97       	sbiw	r26, 0x11	; 17
    2298:	f8 01       	movw	r30, r16
    229a:	d5 83       	std	Z+5, r29	; 0x05
    229c:	c4 83       	std	Z+4, r28	; 0x04
    229e:	cc 0c       	add	r12, r12
    22a0:	dd 1c       	adc	r13, r13
    22a2:	cc 0c       	add	r12, r12
    22a4:	dd 1c       	adc	r13, r13
    22a6:	cc 0c       	add	r12, r12
    22a8:	dd 1c       	adc	r13, r13
    22aa:	cc 0c       	add	r12, r12
    22ac:	dd 1c       	adc	r13, r13
    22ae:	cc 0c       	add	r12, r12
    22b0:	dd 1c       	adc	r13, r13
    22b2:	fe e2       	ldi	r31, 0x2E	; 46
    22b4:	cf 0e       	add	r12, r31
    22b6:	d1 1c       	adc	r13, r1
    22b8:	d8 01       	movw	r26, r16
    22ba:	8d 91       	ld	r24, X+
    22bc:	9c 91       	ld	r25, X
    22be:	11 97       	sbiw	r26, 0x01	; 1
    22c0:	c8 0e       	add	r12, r24
    22c2:	d9 1e       	adc	r13, r25
    22c4:	53 96       	adiw	r26, 0x13	; 19
    22c6:	dc 92       	st	X, r13
    22c8:	ce 92       	st	-X, r12
    22ca:	52 97       	sbiw	r26, 0x12	; 18
    22cc:	80 e0       	ldi	r24, 0x00	; 0
    22ce:	15 c0       	rjmp	.+42     	; 0x22fa <dir_next+0x25a>
    22d0:	84 e0       	ldi	r24, 0x04	; 4
    22d2:	13 c0       	rjmp	.+38     	; 0x22fa <dir_next+0x25a>
    22d4:	84 e0       	ldi	r24, 0x04	; 4
    22d6:	11 c0       	rjmp	.+34     	; 0x22fa <dir_next+0x25a>
    22d8:	84 e0       	ldi	r24, 0x04	; 4
    22da:	0f c0       	rjmp	.+30     	; 0x22fa <dir_next+0x25a>
    22dc:	82 e0       	ldi	r24, 0x02	; 2
    22de:	0d c0       	rjmp	.+26     	; 0x22fa <dir_next+0x25a>
    22e0:	81 e0       	ldi	r24, 0x01	; 1
    22e2:	0b c0       	rjmp	.+22     	; 0x22fa <dir_next+0x25a>
    22e4:	84 e0       	ldi	r24, 0x04	; 4
    22e6:	09 c0       	rjmp	.+18     	; 0x22fa <dir_next+0x25a>
    22e8:	87 e0       	ldi	r24, 0x07	; 7
    22ea:	07 c0       	rjmp	.+14     	; 0x22fa <dir_next+0x25a>
    22ec:	82 e0       	ldi	r24, 0x02	; 2
    22ee:	05 c0       	rjmp	.+10     	; 0x22fa <dir_next+0x25a>
    22f0:	81 e0       	ldi	r24, 0x01	; 1
    22f2:	03 c0       	rjmp	.+6      	; 0x22fa <dir_next+0x25a>
    22f4:	81 e0       	ldi	r24, 0x01	; 1
    22f6:	01 c0       	rjmp	.+2      	; 0x22fa <dir_next+0x25a>
    22f8:	81 e0       	ldi	r24, 0x01	; 1
    22fa:	df 91       	pop	r29
    22fc:	cf 91       	pop	r28
    22fe:	1f 91       	pop	r17
    2300:	0f 91       	pop	r16
    2302:	ff 90       	pop	r15
    2304:	ef 90       	pop	r14
    2306:	df 90       	pop	r13
    2308:	cf 90       	pop	r12
    230a:	bf 90       	pop	r11
    230c:	af 90       	pop	r10
    230e:	9f 90       	pop	r9
    2310:	8f 90       	pop	r8
    2312:	7f 90       	pop	r7
    2314:	08 95       	ret

00002316 <f_mount>:
    2316:	1f 93       	push	r17
    2318:	cf 93       	push	r28
    231a:	df 93       	push	r29
    231c:	00 d0       	rcall	.+0      	; 0x231e <f_mount+0x8>
    231e:	00 d0       	rcall	.+0      	; 0x2320 <f_mount+0xa>
    2320:	00 d0       	rcall	.+0      	; 0x2322 <f_mount+0xc>
    2322:	cd b7       	in	r28, 0x3d	; 61
    2324:	de b7       	in	r29, 0x3e	; 62
    2326:	9c 83       	std	Y+4, r25	; 0x04
    2328:	8b 83       	std	Y+3, r24	; 0x03
    232a:	7e 83       	std	Y+6, r23	; 0x06
    232c:	6d 83       	std	Y+5, r22	; 0x05
    232e:	14 2f       	mov	r17, r20
    2330:	7a 83       	std	Y+2, r23	; 0x02
    2332:	69 83       	std	Y+1, r22	; 0x01
    2334:	ce 01       	movw	r24, r28
    2336:	01 96       	adiw	r24, 0x01	; 1
    2338:	0e 94 0a 07 	call	0xe14	; 0xe14 <get_ldnumber>
    233c:	99 23       	and	r25, r25
    233e:	34 f1       	brlt	.+76     	; 0x238c <f_mount+0x76>
    2340:	fc 01       	movw	r30, r24
    2342:	ee 0f       	add	r30, r30
    2344:	ff 1f       	adc	r31, r31
    2346:	ef 54       	subi	r30, 0x4F	; 79
    2348:	fe 4f       	sbci	r31, 0xFE	; 254
    234a:	01 90       	ld	r0, Z+
    234c:	f0 81       	ld	r31, Z
    234e:	e0 2d       	mov	r30, r0
    2350:	30 97       	sbiw	r30, 0x00	; 0
    2352:	09 f0       	breq	.+2      	; 0x2356 <f_mount+0x40>
    2354:	10 82       	st	Z, r1
    2356:	eb 81       	ldd	r30, Y+3	; 0x03
    2358:	fc 81       	ldd	r31, Y+4	; 0x04
    235a:	30 97       	sbiw	r30, 0x00	; 0
    235c:	e9 f0       	breq	.+58     	; 0x2398 <f_mount+0x82>
    235e:	10 82       	st	Z, r1
    2360:	2b 81       	ldd	r18, Y+3	; 0x03
    2362:	3c 81       	ldd	r19, Y+4	; 0x04
    2364:	88 0f       	add	r24, r24
    2366:	99 1f       	adc	r25, r25
    2368:	fc 01       	movw	r30, r24
    236a:	ef 54       	subi	r30, 0x4F	; 79
    236c:	fe 4f       	sbci	r31, 0xFE	; 254
    236e:	31 83       	std	Z+1, r19	; 0x01
    2370:	20 83       	st	Z, r18
    2372:	23 2b       	or	r18, r19
    2374:	69 f0       	breq	.+26     	; 0x2390 <f_mount+0x7a>
    2376:	11 30       	cpi	r17, 0x01	; 1
    2378:	69 f4       	brne	.+26     	; 0x2394 <f_mount+0x7e>
    237a:	40 e0       	ldi	r20, 0x00	; 0
    237c:	be 01       	movw	r22, r28
    237e:	6b 5f       	subi	r22, 0xFB	; 251
    2380:	7f 4f       	sbci	r23, 0xFF	; 255
    2382:	ce 01       	movw	r24, r28
    2384:	03 96       	adiw	r24, 0x03	; 3
    2386:	0e 94 72 08 	call	0x10e4	; 0x10e4 <find_volume>
    238a:	0e c0       	rjmp	.+28     	; 0x23a8 <f_mount+0x92>
    238c:	8b e0       	ldi	r24, 0x0B	; 11
    238e:	0c c0       	rjmp	.+24     	; 0x23a8 <f_mount+0x92>
    2390:	80 e0       	ldi	r24, 0x00	; 0
    2392:	0a c0       	rjmp	.+20     	; 0x23a8 <f_mount+0x92>
    2394:	80 e0       	ldi	r24, 0x00	; 0
    2396:	08 c0       	rjmp	.+16     	; 0x23a8 <f_mount+0x92>
    2398:	88 0f       	add	r24, r24
    239a:	99 1f       	adc	r25, r25
    239c:	fc 01       	movw	r30, r24
    239e:	ef 54       	subi	r30, 0x4F	; 79
    23a0:	fe 4f       	sbci	r31, 0xFE	; 254
    23a2:	11 82       	std	Z+1, r1	; 0x01
    23a4:	10 82       	st	Z, r1
    23a6:	80 e0       	ldi	r24, 0x00	; 0
    23a8:	26 96       	adiw	r28, 0x06	; 6
    23aa:	0f b6       	in	r0, 0x3f	; 63
    23ac:	f8 94       	cli
    23ae:	de bf       	out	0x3e, r29	; 62
    23b0:	0f be       	out	0x3f, r0	; 63
    23b2:	cd bf       	out	0x3d, r28	; 61
    23b4:	df 91       	pop	r29
    23b6:	cf 91       	pop	r28
    23b8:	1f 91       	pop	r17
    23ba:	08 95       	ret

000023bc <f_open>:
    23bc:	2f 92       	push	r2
    23be:	3f 92       	push	r3
    23c0:	4f 92       	push	r4
    23c2:	5f 92       	push	r5
    23c4:	6f 92       	push	r6
    23c6:	7f 92       	push	r7
    23c8:	8f 92       	push	r8
    23ca:	9f 92       	push	r9
    23cc:	af 92       	push	r10
    23ce:	bf 92       	push	r11
    23d0:	cf 92       	push	r12
    23d2:	df 92       	push	r13
    23d4:	ef 92       	push	r14
    23d6:	ff 92       	push	r15
    23d8:	0f 93       	push	r16
    23da:	1f 93       	push	r17
    23dc:	cf 93       	push	r28
    23de:	df 93       	push	r29
    23e0:	cd b7       	in	r28, 0x3d	; 61
    23e2:	de b7       	in	r29, 0x3e	; 62
    23e4:	ae 97       	sbiw	r28, 0x2e	; 46
    23e6:	0f b6       	in	r0, 0x3f	; 63
    23e8:	f8 94       	cli
    23ea:	de bf       	out	0x3e, r29	; 62
    23ec:	0f be       	out	0x3f, r0	; 63
    23ee:	cd bf       	out	0x3d, r28	; 61
    23f0:	7c a3       	std	Y+36, r23	; 0x24
    23f2:	6b a3       	std	Y+35, r22	; 0x23
    23f4:	00 97       	sbiw	r24, 0x00	; 0
    23f6:	09 f4       	brne	.+2      	; 0x23fa <f_open+0x3e>
    23f8:	7a c2       	rjmp	.+1268   	; 0x28ee <f_open+0x532>
    23fa:	4d a3       	std	Y+37, r20	; 0x25
    23fc:	1c 01       	movw	r2, r24
    23fe:	dc 01       	movw	r26, r24
    2400:	1d 92       	st	X+, r1
    2402:	1c 92       	st	X, r1
    2404:	4e 71       	andi	r20, 0x1E	; 30
    2406:	be 01       	movw	r22, r28
    2408:	6d 5d       	subi	r22, 0xDD	; 221
    240a:	7f 4f       	sbci	r23, 0xFF	; 255
    240c:	ce 01       	movw	r24, r28
    240e:	01 96       	adiw	r24, 0x01	; 1
    2410:	0e 94 72 08 	call	0x10e4	; 0x10e4 <find_volume>
    2414:	81 11       	cpse	r24, r1
    2416:	fa c2       	rjmp	.+1524   	; 0x2a0c <f_open+0x650>
    2418:	ce 01       	movw	r24, r28
    241a:	47 96       	adiw	r24, 0x17	; 23
    241c:	9e 8b       	std	Y+22, r25	; 0x16
    241e:	8d 8b       	std	Y+21, r24	; 0x15
    2420:	cb a0       	ldd	r12, Y+35	; 0x23
    2422:	dc a0       	ldd	r13, Y+36	; 0x24
    2424:	f6 01       	movw	r30, r12
    2426:	80 81       	ld	r24, Z
    2428:	8f 32       	cpi	r24, 0x2F	; 47
    242a:	11 f0       	breq	.+4      	; 0x2430 <f_open+0x74>
    242c:	8c 35       	cpi	r24, 0x5C	; 92
    242e:	19 f4       	brne	.+6      	; 0x2436 <f_open+0x7a>
    2430:	ff ef       	ldi	r31, 0xFF	; 255
    2432:	cf 1a       	sub	r12, r31
    2434:	df 0a       	sbc	r13, r31
    2436:	2d a1       	ldd	r18, Y+37	; 0x25
    2438:	2f 71       	andi	r18, 0x1F	; 31
    243a:	29 a7       	std	Y+41, r18	; 0x29
    243c:	1f 82       	std	Y+7, r1	; 0x07
    243e:	18 86       	std	Y+8, r1	; 0x08
    2440:	19 86       	std	Y+9, r1	; 0x09
    2442:	1a 86       	std	Y+10, r1	; 0x0a
    2444:	d6 01       	movw	r26, r12
    2446:	8c 91       	ld	r24, X
    2448:	80 32       	cpi	r24, 0x20	; 32
    244a:	68 f4       	brcc	.+26     	; 0x2466 <f_open+0xaa>
    244c:	60 e0       	ldi	r22, 0x00	; 0
    244e:	70 e0       	ldi	r23, 0x00	; 0
    2450:	ce 01       	movw	r24, r28
    2452:	01 96       	adiw	r24, 0x01	; 1
    2454:	34 db       	rcall	.-2456   	; 0x1abe <dir_sdi>
    2456:	1c 8a       	std	Y+20, r1	; 0x14
    2458:	1b 8a       	std	Y+19, r1	; 0x13
    245a:	e1 2c       	mov	r14, r1
    245c:	f1 2c       	mov	r15, r1
    245e:	88 23       	and	r24, r24
    2460:	09 f4       	brne	.+2      	; 0x2464 <f_open+0xa8>
    2462:	88 c2       	rjmp	.+1296   	; 0x2974 <f_open+0x5b8>
    2464:	7e c2       	rjmp	.+1276   	; 0x2962 <f_open+0x5a6>
    2466:	68 94       	set
    2468:	bb 24       	eor	r11, r11
    246a:	b5 f8       	bld	r11, 5
    246c:	a1 2c       	mov	r10, r1
    246e:	71 2c       	mov	r7, r1
    2470:	68 94       	set
    2472:	66 24       	eor	r6, r6
    2474:	63 f8       	bld	r6, 3
    2476:	51 2c       	mov	r5, r1
    2478:	41 2c       	mov	r4, r1
    247a:	6a a6       	std	Y+42, r6	; 0x2a
    247c:	5e a6       	std	Y+46, r5	; 0x2e
    247e:	f6 01       	movw	r30, r12
    2480:	af 01       	movw	r20, r30
    2482:	81 91       	ld	r24, Z+
    2484:	8f 32       	cpi	r24, 0x2F	; 47
    2486:	e1 f3       	breq	.-8      	; 0x2480 <f_open+0xc4>
    2488:	8c 35       	cpi	r24, 0x5C	; 92
    248a:	d1 f3       	breq	.-12     	; 0x2480 <f_open+0xc4>
    248c:	0d 89       	ldd	r16, Y+21	; 0x15
    248e:	1e 89       	ldd	r17, Y+22	; 0x16
    2490:	f8 01       	movw	r30, r16
    2492:	c8 01       	movw	r24, r16
    2494:	0b 96       	adiw	r24, 0x0b	; 11
    2496:	b1 92       	st	Z+, r11
    2498:	e8 17       	cp	r30, r24
    249a:	f9 07       	cpc	r31, r25
    249c:	e1 f7       	brne	.-8      	; 0x2496 <f_open+0xda>
    249e:	6a 01       	movw	r12, r20
    24a0:	ea 2c       	mov	r14, r10
    24a2:	f7 2c       	mov	r15, r7
    24a4:	8a 2d       	mov	r24, r10
    24a6:	97 2d       	mov	r25, r7
    24a8:	86 2c       	mov	r8, r6
    24aa:	95 2c       	mov	r9, r5
    24ac:	74 2d       	mov	r23, r4
    24ae:	da 01       	movw	r26, r20
    24b0:	01 96       	adiw	r24, 0x01	; 1
    24b2:	6d 91       	ld	r22, X+
    24b4:	61 32       	cpi	r22, 0x21	; 33
    24b6:	08 f4       	brcc	.+2      	; 0x24ba <f_open+0xfe>
    24b8:	33 c2       	rjmp	.+1126   	; 0x2920 <f_open+0x564>
    24ba:	6f 32       	cpi	r22, 0x2F	; 47
    24bc:	09 f4       	brne	.+2      	; 0x24c0 <f_open+0x104>
    24be:	35 c2       	rjmp	.+1130   	; 0x292a <f_open+0x56e>
    24c0:	6c 35       	cpi	r22, 0x5C	; 92
    24c2:	09 f4       	brne	.+2      	; 0x24c6 <f_open+0x10a>
    24c4:	32 c2       	rjmp	.+1124   	; 0x292a <f_open+0x56e>
    24c6:	6e 32       	cpi	r22, 0x2E	; 46
    24c8:	09 f4       	brne	.+2      	; 0x24cc <f_open+0x110>
    24ca:	13 c2       	rjmp	.+1062   	; 0x28f2 <f_open+0x536>
    24cc:	e8 14       	cp	r14, r8
    24ce:	f9 04       	cpc	r15, r9
    24d0:	08 f0       	brcs	.+2      	; 0x24d4 <f_open+0x118>
    24d2:	70 c2       	rjmp	.+1248   	; 0x29b4 <f_open+0x5f8>
    24d4:	0a c0       	rjmp	.+20     	; 0x24ea <f_open+0x12e>
    24d6:	77 0f       	add	r23, r23
    24d8:	77 0f       	add	r23, r23
    24da:	ea a4       	ldd	r14, Y+42	; 0x2a
    24dc:	fe a4       	ldd	r15, Y+46	; 0x2e
    24de:	0f 2e       	mov	r0, r31
    24e0:	fb e0       	ldi	r31, 0x0B	; 11
    24e2:	8f 2e       	mov	r8, r31
    24e4:	f0 2d       	mov	r31, r0
    24e6:	91 2c       	mov	r9, r1
    24e8:	e3 cf       	rjmp	.-58     	; 0x24b0 <f_open+0xf4>
    24ea:	66 23       	and	r22, r22
    24ec:	0c f0       	brlt	.+2      	; 0x24f0 <f_open+0x134>
    24ee:	07 c2       	rjmp	.+1038   	; 0x28fe <f_open+0x542>
    24f0:	73 60       	ori	r23, 0x03	; 3
    24f2:	e6 2f       	mov	r30, r22
    24f4:	f0 e0       	ldi	r31, 0x00	; 0
    24f6:	e0 57       	subi	r30, 0x70	; 112
    24f8:	ff 4f       	sbci	r31, 0xFF	; 255
    24fa:	60 81       	ld	r22, Z
    24fc:	00 c2       	rjmp	.+1024   	; 0x28fe <f_open+0x542>
    24fe:	81 91       	ld	r24, Z+
    2500:	88 23       	and	r24, r24
    2502:	09 f4       	brne	.+2      	; 0x2506 <f_open+0x14a>
    2504:	06 c2       	rjmp	.+1036   	; 0x2912 <f_open+0x556>
    2506:	90 e0       	ldi	r25, 0x00	; 0
    2508:	48 17       	cp	r20, r24
    250a:	59 07       	cpc	r21, r25
    250c:	c1 f7       	brne	.-16     	; 0x24fe <f_open+0x142>
    250e:	86 e0       	ldi	r24, 0x06	; 6
    2510:	6e c2       	rjmp	.+1244   	; 0x29ee <f_open+0x632>
    2512:	72 60       	ori	r23, 0x02	; 2
    2514:	06 c0       	rjmp	.+12     	; 0x2522 <f_open+0x166>
    2516:	2f e9       	ldi	r18, 0x9F	; 159
    2518:	26 0f       	add	r18, r22
    251a:	2a 31       	cpi	r18, 0x1A	; 26
    251c:	10 f4       	brcc	.+4      	; 0x2522 <f_open+0x166>
    251e:	71 60       	ori	r23, 0x01	; 1
    2520:	60 52       	subi	r22, 0x20	; 32
    2522:	f8 01       	movw	r30, r16
    2524:	ee 0d       	add	r30, r14
    2526:	ff 1d       	adc	r31, r15
    2528:	60 83       	st	Z, r22
    252a:	f7 01       	movw	r30, r14
    252c:	31 96       	adiw	r30, 0x01	; 1
    252e:	7f 01       	movw	r14, r30
    2530:	bf cf       	rjmp	.-130    	; 0x24b0 <f_open+0xf4>
    2532:	ef 28       	or	r14, r15
    2534:	09 f4       	brne	.+2      	; 0x2538 <f_open+0x17c>
    2536:	3e c2       	rjmp	.+1148   	; 0x29b4 <f_open+0x5f8>
    2538:	d8 01       	movw	r26, r16
    253a:	2c 91       	ld	r18, X
    253c:	25 3e       	cpi	r18, 0xE5	; 229
    253e:	11 f4       	brne	.+4      	; 0x2544 <f_open+0x188>
    2540:	e5 e0       	ldi	r30, 0x05	; 5
    2542:	ec 93       	st	X, r30
    2544:	f8 e0       	ldi	r31, 0x08	; 8
    2546:	8f 16       	cp	r8, r31
    2548:	91 04       	cpc	r9, r1
    254a:	19 f4       	brne	.+6      	; 0x2552 <f_open+0x196>
    254c:	79 2f       	mov	r23, r25
    254e:	77 0f       	add	r23, r23
    2550:	77 0f       	add	r23, r23
    2552:	97 2f       	mov	r25, r23
    2554:	93 70       	andi	r25, 0x03	; 3
    2556:	91 30       	cpi	r25, 0x01	; 1
    2558:	09 f4       	brne	.+2      	; 0x255c <f_open+0x1a0>
    255a:	80 61       	ori	r24, 0x10	; 16
    255c:	97 2f       	mov	r25, r23
    255e:	9c 70       	andi	r25, 0x0C	; 12
    2560:	94 30       	cpi	r25, 0x04	; 4
    2562:	09 f4       	brne	.+2      	; 0x2566 <f_open+0x1aa>
    2564:	88 60       	ori	r24, 0x08	; 8
    2566:	d8 01       	movw	r26, r16
    2568:	1b 96       	adiw	r26, 0x0b	; 11
    256a:	8c 93       	st	X, r24
    256c:	6a 2d       	mov	r22, r10
    256e:	77 2d       	mov	r23, r7
    2570:	ce 01       	movw	r24, r28
    2572:	01 96       	adiw	r24, 0x01	; 1
    2574:	a4 da       	rcall	.-2744   	; 0x1abe <dir_sdi>
    2576:	81 11       	cpse	r24, r1
    2578:	e3 c1       	rjmp	.+966    	; 0x2940 <f_open+0x584>
    257a:	4f 85       	ldd	r20, Y+15	; 0x0f
    257c:	58 89       	ldd	r21, Y+16	; 0x10
    257e:	69 89       	ldd	r22, Y+17	; 0x11
    2580:	7a 89       	ldd	r23, Y+18	; 0x12
    2582:	89 81       	ldd	r24, Y+1	; 0x01
    2584:	9a 81       	ldd	r25, Y+2	; 0x02
    2586:	0e 94 aa 07 	call	0xf54	; 0xf54 <move_window>
    258a:	81 11       	cpse	r24, r1
    258c:	d9 c1       	rjmp	.+946    	; 0x2940 <f_open+0x584>
    258e:	6b 89       	ldd	r22, Y+19	; 0x13
    2590:	7c 89       	ldd	r23, Y+20	; 0x14
    2592:	fb 01       	movw	r30, r22
    2594:	80 81       	ld	r24, Z
    2596:	88 23       	and	r24, r24
    2598:	d1 f0       	breq	.+52     	; 0x25ce <f_open+0x212>
    259a:	83 85       	ldd	r24, Z+11	; 0x0b
    259c:	83 fd       	sbrc	r24, 3
    259e:	0f c0       	rjmp	.+30     	; 0x25be <f_open+0x202>
    25a0:	4d 89       	ldd	r20, Y+21	; 0x15
    25a2:	5e 89       	ldd	r21, Y+22	; 0x16
    25a4:	da 01       	movw	r26, r20
    25a6:	9b 01       	movw	r18, r22
    25a8:	25 5f       	subi	r18, 0xF5	; 245
    25aa:	3f 4f       	sbci	r19, 0xFF	; 255
    25ac:	04 c0       	rjmp	.+8      	; 0x25b6 <f_open+0x1fa>
    25ae:	e2 17       	cp	r30, r18
    25b0:	f3 07       	cpc	r31, r19
    25b2:	09 f4       	brne	.+2      	; 0x25b6 <f_open+0x1fa>
    25b4:	bf c1       	rjmp	.+894    	; 0x2934 <f_open+0x578>
    25b6:	91 91       	ld	r25, Z+
    25b8:	8d 91       	ld	r24, X+
    25ba:	98 17       	cp	r25, r24
    25bc:	c1 f3       	breq	.-16     	; 0x25ae <f_open+0x1f2>
    25be:	6a 2d       	mov	r22, r10
    25c0:	77 2d       	mov	r23, r7
    25c2:	ce 01       	movw	r24, r28
    25c4:	01 96       	adiw	r24, 0x01	; 1
    25c6:	6c dd       	rcall	.-1320   	; 0x20a0 <dir_next>
    25c8:	88 23       	and	r24, r24
    25ca:	b9 f2       	breq	.-82     	; 0x257a <f_open+0x1be>
    25cc:	b9 c1       	rjmp	.+882    	; 0x2940 <f_open+0x584>
    25ce:	ed 89       	ldd	r30, Y+21	; 0x15
    25d0:	fe 89       	ldd	r31, Y+22	; 0x16
    25d2:	93 85       	ldd	r25, Z+11	; 0x0b
    25d4:	92 fd       	sbrc	r25, 2
    25d6:	04 c2       	rjmp	.+1032   	; 0x29e0 <f_open+0x624>
    25d8:	85 e0       	ldi	r24, 0x05	; 5
    25da:	09 c2       	rjmp	.+1042   	; 0x29ee <f_open+0x632>
    25dc:	db 01       	movw	r26, r22
    25de:	1b 96       	adiw	r26, 0x0b	; 11
    25e0:	8c 91       	ld	r24, X
    25e2:	84 ff       	sbrs	r24, 4
    25e4:	ff c1       	rjmp	.+1022   	; 0x29e4 <f_open+0x628>
    25e6:	89 81       	ldd	r24, Y+1	; 0x01
    25e8:	9a 81       	ldd	r25, Y+2	; 0x02
    25ea:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <ld_clust>
    25ee:	6f 83       	std	Y+7, r22	; 0x07
    25f0:	78 87       	std	Y+8, r23	; 0x08
    25f2:	89 87       	std	Y+9, r24	; 0x09
    25f4:	9a 87       	std	Y+10, r25	; 0x0a
    25f6:	43 cf       	rjmp	.-378    	; 0x247e <f_open+0xc2>
    25f8:	81 11       	cpse	r24, r1
    25fa:	e6 c1       	rjmp	.+972    	; 0x29c8 <f_open+0x60c>
    25fc:	44 c0       	rjmp	.+136    	; 0x2686 <f_open+0x2ca>
    25fe:	60 e0       	ldi	r22, 0x00	; 0
    2600:	70 e0       	ldi	r23, 0x00	; 0
    2602:	ce 01       	movw	r24, r28
    2604:	01 96       	adiw	r24, 0x01	; 1
    2606:	5b da       	rcall	.-2890   	; 0x1abe <dir_sdi>
    2608:	81 11       	cpse	r24, r1
    260a:	fd c1       	rjmp	.+1018   	; 0x2a06 <f_open+0x64a>
    260c:	4f 85       	ldd	r20, Y+15	; 0x0f
    260e:	58 89       	ldd	r21, Y+16	; 0x10
    2610:	69 89       	ldd	r22, Y+17	; 0x11
    2612:	7a 89       	ldd	r23, Y+18	; 0x12
    2614:	89 81       	ldd	r24, Y+1	; 0x01
    2616:	9a 81       	ldd	r25, Y+2	; 0x02
    2618:	0e 94 aa 07 	call	0xf54	; 0xf54 <move_window>
    261c:	81 11       	cpse	r24, r1
    261e:	f3 c1       	rjmp	.+998    	; 0x2a06 <f_open+0x64a>
    2620:	eb 89       	ldd	r30, Y+19	; 0x13
    2622:	fc 89       	ldd	r31, Y+20	; 0x14
    2624:	80 81       	ld	r24, Z
    2626:	85 3e       	cpi	r24, 0xE5	; 229
    2628:	51 f0       	breq	.+20     	; 0x263e <f_open+0x282>
    262a:	88 23       	and	r24, r24
    262c:	41 f0       	breq	.+16     	; 0x263e <f_open+0x282>
    262e:	61 e0       	ldi	r22, 0x01	; 1
    2630:	70 e0       	ldi	r23, 0x00	; 0
    2632:	ce 01       	movw	r24, r28
    2634:	01 96       	adiw	r24, 0x01	; 1
    2636:	34 dd       	rcall	.-1432   	; 0x20a0 <dir_next>
    2638:	88 23       	and	r24, r24
    263a:	41 f3       	breq	.-48     	; 0x260c <f_open+0x250>
    263c:	e4 c1       	rjmp	.+968    	; 0x2a06 <f_open+0x64a>
    263e:	4f 85       	ldd	r20, Y+15	; 0x0f
    2640:	58 89       	ldd	r21, Y+16	; 0x10
    2642:	69 89       	ldd	r22, Y+17	; 0x11
    2644:	7a 89       	ldd	r23, Y+18	; 0x12
    2646:	89 81       	ldd	r24, Y+1	; 0x01
    2648:	9a 81       	ldd	r25, Y+2	; 0x02
    264a:	0e 94 aa 07 	call	0xf54	; 0xf54 <move_window>
    264e:	81 11       	cpse	r24, r1
    2650:	c1 c1       	rjmp	.+898    	; 0x29d4 <f_open+0x618>
    2652:	eb 89       	ldd	r30, Y+19	; 0x13
    2654:	fc 89       	ldd	r31, Y+20	; 0x14
    2656:	cf 01       	movw	r24, r30
    2658:	80 96       	adiw	r24, 0x20	; 32
    265a:	11 92       	st	Z+, r1
    265c:	e8 17       	cp	r30, r24
    265e:	f9 07       	cpc	r31, r25
    2660:	e1 f7       	brne	.-8      	; 0x265a <f_open+0x29e>
    2662:	6d 89       	ldd	r22, Y+21	; 0x15
    2664:	7e 89       	ldd	r23, Y+22	; 0x16
    2666:	4b e0       	ldi	r20, 0x0B	; 11
    2668:	50 e0       	ldi	r21, 0x00	; 0
    266a:	8b 89       	ldd	r24, Y+19	; 0x13
    266c:	9c 89       	ldd	r25, Y+20	; 0x14
    266e:	0e 94 da 06 	call	0xdb4	; 0xdb4 <mem_cpy>
    2672:	e9 81       	ldd	r30, Y+1	; 0x01
    2674:	fa 81       	ldd	r31, Y+2	; 0x02
    2676:	81 e0       	ldi	r24, 0x01	; 1
    2678:	84 83       	std	Z+4, r24	; 0x04
    267a:	b9 a5       	ldd	r27, Y+41	; 0x29
    267c:	b8 60       	ori	r27, 0x08	; 8
    267e:	b9 a7       	std	Y+41, r27	; 0x29
    2680:	eb 88       	ldd	r14, Y+19	; 0x13
    2682:	fc 88       	ldd	r15, Y+20	; 0x14
    2684:	08 c0       	rjmp	.+16     	; 0x2696 <f_open+0x2da>
    2686:	f7 01       	movw	r30, r14
    2688:	83 85       	ldd	r24, Z+11	; 0x0b
    268a:	81 71       	andi	r24, 0x11	; 17
    268c:	09 f0       	breq	.+2      	; 0x2690 <f_open+0x2d4>
    268e:	79 c1       	rjmp	.+754    	; 0x2982 <f_open+0x5c6>
    2690:	fd a1       	ldd	r31, Y+37	; 0x25
    2692:	f2 fd       	sbrc	r31, 2
    2694:	78 c1       	rjmp	.+752    	; 0x2986 <f_open+0x5ca>
    2696:	29 a5       	ldd	r18, Y+41	; 0x29
    2698:	23 ff       	sbrs	r18, 3
    269a:	d2 c0       	rjmp	.+420    	; 0x2840 <f_open+0x484>
    269c:	d7 01       	movw	r26, r14
    269e:	1e 96       	adiw	r26, 0x0e	; 14
    26a0:	1c 92       	st	X, r1
    26a2:	1e 97       	sbiw	r26, 0x0e	; 14
    26a4:	1f 96       	adiw	r26, 0x0f	; 15
    26a6:	1c 92       	st	X, r1
    26a8:	1f 97       	sbiw	r26, 0x0f	; 15
    26aa:	91 e2       	ldi	r25, 0x21	; 33
    26ac:	50 96       	adiw	r26, 0x10	; 16
    26ae:	9c 93       	st	X, r25
    26b0:	50 97       	sbiw	r26, 0x10	; 16
    26b2:	86 e4       	ldi	r24, 0x46	; 70
    26b4:	51 96       	adiw	r26, 0x11	; 17
    26b6:	8c 93       	st	X, r24
    26b8:	51 97       	sbiw	r26, 0x11	; 17
    26ba:	56 96       	adiw	r26, 0x16	; 22
    26bc:	1c 92       	st	X, r1
    26be:	56 97       	sbiw	r26, 0x16	; 22
    26c0:	57 96       	adiw	r26, 0x17	; 23
    26c2:	1c 92       	st	X, r1
    26c4:	57 97       	sbiw	r26, 0x17	; 23
    26c6:	58 96       	adiw	r26, 0x18	; 24
    26c8:	9c 93       	st	X, r25
    26ca:	58 97       	sbiw	r26, 0x18	; 24
    26cc:	59 96       	adiw	r26, 0x19	; 25
    26ce:	8c 93       	st	X, r24
    26d0:	59 97       	sbiw	r26, 0x19	; 25
    26d2:	1b 96       	adiw	r26, 0x0b	; 11
    26d4:	1c 92       	st	X, r1
    26d6:	1b 97       	sbiw	r26, 0x0b	; 11
    26d8:	5c 96       	adiw	r26, 0x1c	; 28
    26da:	1c 92       	st	X, r1
    26dc:	5c 97       	sbiw	r26, 0x1c	; 28
    26de:	5d 96       	adiw	r26, 0x1d	; 29
    26e0:	1c 92       	st	X, r1
    26e2:	5d 97       	sbiw	r26, 0x1d	; 29
    26e4:	5e 96       	adiw	r26, 0x1e	; 30
    26e6:	1c 92       	st	X, r1
    26e8:	5e 97       	sbiw	r26, 0x1e	; 30
    26ea:	5f 96       	adiw	r26, 0x1f	; 31
    26ec:	1c 92       	st	X, r1
    26ee:	c9 80       	ldd	r12, Y+1	; 0x01
    26f0:	da 80       	ldd	r13, Y+2	; 0x02
    26f2:	b7 01       	movw	r22, r14
    26f4:	c6 01       	movw	r24, r12
    26f6:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <ld_clust>
    26fa:	4b 01       	movw	r8, r22
    26fc:	5c 01       	movw	r10, r24
    26fe:	f7 01       	movw	r30, r14
    2700:	12 8e       	std	Z+26, r1	; 0x1a
    2702:	13 8e       	std	Z+27, r1	; 0x1b
    2704:	14 8a       	std	Z+20, r1	; 0x14
    2706:	15 8a       	std	Z+21, r1	; 0x15
    2708:	81 e0       	ldi	r24, 0x01	; 1
    270a:	d6 01       	movw	r26, r12
    270c:	14 96       	adiw	r26, 0x04	; 4
    270e:	8c 93       	st	X, r24
    2710:	14 97       	sbiw	r26, 0x04	; 4
    2712:	81 14       	cp	r8, r1
    2714:	91 04       	cpc	r9, r1
    2716:	a1 04       	cpc	r10, r1
    2718:	b1 04       	cpc	r11, r1
    271a:	09 f4       	brne	.+2      	; 0x271e <f_open+0x362>
    271c:	91 c0       	rjmp	.+290    	; 0x2840 <f_open+0x484>
    271e:	9a 96       	adiw	r26, 0x2a	; 42
    2720:	2d 91       	ld	r18, X+
    2722:	3d 91       	ld	r19, X+
    2724:	4d 91       	ld	r20, X+
    2726:	5c 91       	ld	r21, X
    2728:	9d 97       	sbiw	r26, 0x2d	; 45
    272a:	2a a7       	std	Y+42, r18	; 0x2a
    272c:	3b a7       	std	Y+43, r19	; 0x2b
    272e:	4c a7       	std	Y+44, r20	; 0x2c
    2730:	5d a7       	std	Y+45, r21	; 0x2d
    2732:	b2 e0       	ldi	r27, 0x02	; 2
    2734:	8b 16       	cp	r8, r27
    2736:	91 04       	cpc	r9, r1
    2738:	a1 04       	cpc	r10, r1
    273a:	b1 04       	cpc	r11, r1
    273c:	08 f4       	brcc	.+2      	; 0x2740 <f_open+0x384>
    273e:	28 c1       	rjmp	.+592    	; 0x2990 <f_open+0x5d4>
    2740:	f6 01       	movw	r30, r12
    2742:	82 89       	ldd	r24, Z+18	; 0x12
    2744:	93 89       	ldd	r25, Z+19	; 0x13
    2746:	a4 89       	ldd	r26, Z+20	; 0x14
    2748:	b5 89       	ldd	r27, Z+21	; 0x15
    274a:	88 16       	cp	r8, r24
    274c:	99 06       	cpc	r9, r25
    274e:	aa 06       	cpc	r10, r26
    2750:	bb 06       	cpc	r11, r27
    2752:	08 f0       	brcs	.+2      	; 0x2756 <f_open+0x39a>
    2754:	1f c1       	rjmp	.+574    	; 0x2994 <f_open+0x5d8>
    2756:	8d a2       	std	Y+37, r8	; 0x25
    2758:	9e a2       	std	Y+38, r9	; 0x26
    275a:	af a2       	std	Y+39, r10	; 0x27
    275c:	b8 a6       	std	Y+40, r11	; 0x28
    275e:	3f c0       	rjmp	.+126    	; 0x27de <f_open+0x422>
    2760:	4d a1       	ldd	r20, Y+37	; 0x25
    2762:	5e a1       	ldd	r21, Y+38	; 0x26
    2764:	6f a1       	ldd	r22, Y+39	; 0x27
    2766:	78 a5       	ldd	r23, Y+40	; 0x28
    2768:	c6 01       	movw	r24, r12
    276a:	aa d8       	rcall	.-3756   	; 0x18c0 <get_fat>
    276c:	2b 01       	movw	r4, r22
    276e:	3c 01       	movw	r6, r24
    2770:	61 15       	cp	r22, r1
    2772:	71 05       	cpc	r23, r1
    2774:	81 05       	cpc	r24, r1
    2776:	91 05       	cpc	r25, r1
    2778:	09 f4       	brne	.+2      	; 0x277c <f_open+0x3c0>
    277a:	40 c0       	rjmp	.+128    	; 0x27fc <f_open+0x440>
    277c:	61 30       	cpi	r22, 0x01	; 1
    277e:	71 05       	cpc	r23, r1
    2780:	81 05       	cpc	r24, r1
    2782:	91 05       	cpc	r25, r1
    2784:	09 f4       	brne	.+2      	; 0x2788 <f_open+0x3cc>
    2786:	08 c1       	rjmp	.+528    	; 0x2998 <f_open+0x5dc>
    2788:	6f 3f       	cpi	r22, 0xFF	; 255
    278a:	7f 4f       	sbci	r23, 0xFF	; 255
    278c:	8f 4f       	sbci	r24, 0xFF	; 255
    278e:	9f 4f       	sbci	r25, 0xFF	; 255
    2790:	09 f4       	brne	.+2      	; 0x2794 <f_open+0x3d8>
    2792:	04 c1       	rjmp	.+520    	; 0x299c <f_open+0x5e0>
    2794:	00 e0       	ldi	r16, 0x00	; 0
    2796:	10 e0       	ldi	r17, 0x00	; 0
    2798:	98 01       	movw	r18, r16
    279a:	4d a1       	ldd	r20, Y+37	; 0x25
    279c:	5e a1       	ldd	r21, Y+38	; 0x26
    279e:	6f a1       	ldd	r22, Y+39	; 0x27
    27a0:	78 a5       	ldd	r23, Y+40	; 0x28
    27a2:	c6 01       	movw	r24, r12
    27a4:	47 da       	rcall	.-2930   	; 0x1c34 <put_fat>
    27a6:	81 11       	cpse	r24, r1
    27a8:	fa c0       	rjmp	.+500    	; 0x299e <f_open+0x5e2>
    27aa:	f6 01       	movw	r30, r12
    27ac:	86 85       	ldd	r24, Z+14	; 0x0e
    27ae:	97 85       	ldd	r25, Z+15	; 0x0f
    27b0:	a0 89       	ldd	r26, Z+16	; 0x10
    27b2:	b1 89       	ldd	r27, Z+17	; 0x11
    27b4:	8f 3f       	cpi	r24, 0xFF	; 255
    27b6:	ff ef       	ldi	r31, 0xFF	; 255
    27b8:	9f 07       	cpc	r25, r31
    27ba:	af 07       	cpc	r26, r31
    27bc:	bf 07       	cpc	r27, r31
    27be:	59 f0       	breq	.+22     	; 0x27d6 <f_open+0x41a>
    27c0:	01 96       	adiw	r24, 0x01	; 1
    27c2:	a1 1d       	adc	r26, r1
    27c4:	b1 1d       	adc	r27, r1
    27c6:	f6 01       	movw	r30, r12
    27c8:	86 87       	std	Z+14, r24	; 0x0e
    27ca:	97 87       	std	Z+15, r25	; 0x0f
    27cc:	a0 8b       	std	Z+16, r26	; 0x10
    27ce:	b1 8b       	std	Z+17, r27	; 0x11
    27d0:	85 81       	ldd	r24, Z+5	; 0x05
    27d2:	81 60       	ori	r24, 0x01	; 1
    27d4:	85 83       	std	Z+5, r24	; 0x05
    27d6:	4d a2       	std	Y+37, r4	; 0x25
    27d8:	5e a2       	std	Y+38, r5	; 0x26
    27da:	6f a2       	std	Y+39, r6	; 0x27
    27dc:	78 a6       	std	Y+40, r7	; 0x28
    27de:	f6 01       	movw	r30, r12
    27e0:	82 89       	ldd	r24, Z+18	; 0x12
    27e2:	93 89       	ldd	r25, Z+19	; 0x13
    27e4:	a4 89       	ldd	r26, Z+20	; 0x14
    27e6:	b5 89       	ldd	r27, Z+21	; 0x15
    27e8:	2d a1       	ldd	r18, Y+37	; 0x25
    27ea:	3e a1       	ldd	r19, Y+38	; 0x26
    27ec:	4f a1       	ldd	r20, Y+39	; 0x27
    27ee:	58 a5       	ldd	r21, Y+40	; 0x28
    27f0:	28 17       	cp	r18, r24
    27f2:	39 07       	cpc	r19, r25
    27f4:	4a 07       	cpc	r20, r26
    27f6:	5b 07       	cpc	r21, r27
    27f8:	08 f4       	brcc	.+2      	; 0x27fc <f_open+0x440>
    27fa:	b2 cf       	rjmp	.-156    	; 0x2760 <f_open+0x3a4>
    27fc:	89 81       	ldd	r24, Y+1	; 0x01
    27fe:	9a 81       	ldd	r25, Y+2	; 0x02
    2800:	31 e0       	ldi	r19, 0x01	; 1
    2802:	83 1a       	sub	r8, r19
    2804:	91 08       	sbc	r9, r1
    2806:	a1 08       	sbc	r10, r1
    2808:	b1 08       	sbc	r11, r1
    280a:	dc 01       	movw	r26, r24
    280c:	1a 96       	adiw	r26, 0x0a	; 10
    280e:	8d 92       	st	X+, r8
    2810:	9d 92       	st	X+, r9
    2812:	ad 92       	st	X+, r10
    2814:	bc 92       	st	X, r11
    2816:	1d 97       	sbiw	r26, 0x0d	; 13
    2818:	4a a5       	ldd	r20, Y+42	; 0x2a
    281a:	5b a5       	ldd	r21, Y+43	; 0x2b
    281c:	6c a5       	ldd	r22, Y+44	; 0x2c
    281e:	7d a5       	ldd	r23, Y+45	; 0x2d
    2820:	0e 94 aa 07 	call	0xf54	; 0xf54 <move_window>
    2824:	88 23       	and	r24, r24
    2826:	79 f0       	breq	.+30     	; 0x2846 <f_open+0x48a>
    2828:	f1 c0       	rjmp	.+482    	; 0x2a0c <f_open+0x650>
    282a:	81 11       	cpse	r24, r1
    282c:	bf c0       	rjmp	.+382    	; 0x29ac <f_open+0x5f0>
    282e:	f7 01       	movw	r30, r14
    2830:	83 85       	ldd	r24, Z+11	; 0x0b
    2832:	84 fd       	sbrc	r24, 4
    2834:	b8 c0       	rjmp	.+368    	; 0x29a6 <f_open+0x5ea>
    2836:	fd a1       	ldd	r31, Y+37	; 0x25
    2838:	f1 ff       	sbrs	r31, 1
    283a:	02 c0       	rjmp	.+4      	; 0x2840 <f_open+0x484>
    283c:	80 fd       	sbrc	r24, 0
    283e:	b5 c0       	rjmp	.+362    	; 0x29aa <f_open+0x5ee>
    2840:	29 a5       	ldd	r18, Y+41	; 0x29
    2842:	23 ff       	sbrs	r18, 3
    2844:	03 c0       	rjmp	.+6      	; 0x284c <f_open+0x490>
    2846:	39 a5       	ldd	r19, Y+41	; 0x29
    2848:	30 62       	ori	r19, 0x20	; 32
    284a:	39 a7       	std	Y+41, r19	; 0x29
    284c:	e9 81       	ldd	r30, Y+1	; 0x01
    284e:	fa 81       	ldd	r31, Y+2	; 0x02
    2850:	82 a5       	ldd	r24, Z+42	; 0x2a
    2852:	93 a5       	ldd	r25, Z+43	; 0x2b
    2854:	a4 a5       	ldd	r26, Z+44	; 0x2c
    2856:	b5 a5       	ldd	r27, Z+45	; 0x2d
    2858:	f1 01       	movw	r30, r2
    285a:	82 8f       	std	Z+26, r24	; 0x1a
    285c:	93 8f       	std	Z+27, r25	; 0x1b
    285e:	a4 8f       	std	Z+28, r26	; 0x1c
    2860:	b5 8f       	std	Z+29, r27	; 0x1d
    2862:	f7 8e       	std	Z+31, r15	; 0x1f
    2864:	e6 8e       	std	Z+30, r14	; 0x1e
    2866:	e9 a5       	ldd	r30, Y+41	; 0x29
    2868:	d1 01       	movw	r26, r2
    286a:	14 96       	adiw	r26, 0x04	; 4
    286c:	ec 93       	st	X, r30
    286e:	14 97       	sbiw	r26, 0x04	; 4
    2870:	15 96       	adiw	r26, 0x05	; 5
    2872:	1c 92       	st	X, r1
    2874:	09 81       	ldd	r16, Y+1	; 0x01
    2876:	1a 81       	ldd	r17, Y+2	; 0x02
    2878:	b7 01       	movw	r22, r14
    287a:	c8 01       	movw	r24, r16
    287c:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <ld_clust>
    2880:	d1 01       	movw	r26, r2
    2882:	1e 96       	adiw	r26, 0x0e	; 14
    2884:	6d 93       	st	X+, r22
    2886:	7d 93       	st	X+, r23
    2888:	8d 93       	st	X+, r24
    288a:	9c 93       	st	X, r25
    288c:	51 97       	sbiw	r26, 0x11	; 17
    288e:	f7 01       	movw	r30, r14
    2890:	27 8d       	ldd	r18, Z+31	; 0x1f
    2892:	86 8d       	ldd	r24, Z+30	; 0x1e
    2894:	90 e0       	ldi	r25, 0x00	; 0
    2896:	a0 e0       	ldi	r26, 0x00	; 0
    2898:	b0 e0       	ldi	r27, 0x00	; 0
    289a:	dc 01       	movw	r26, r24
    289c:	99 27       	eor	r25, r25
    289e:	88 27       	eor	r24, r24
    28a0:	b2 2b       	or	r27, r18
    28a2:	24 8d       	ldd	r18, Z+28	; 0x1c
    28a4:	ac 01       	movw	r20, r24
    28a6:	bd 01       	movw	r22, r26
    28a8:	42 2b       	or	r20, r18
    28aa:	25 8d       	ldd	r18, Z+29	; 0x1d
    28ac:	30 e0       	ldi	r19, 0x00	; 0
    28ae:	92 2f       	mov	r25, r18
    28b0:	88 27       	eor	r24, r24
    28b2:	a0 e0       	ldi	r26, 0x00	; 0
    28b4:	b0 e0       	ldi	r27, 0x00	; 0
    28b6:	84 2b       	or	r24, r20
    28b8:	95 2b       	or	r25, r21
    28ba:	a6 2b       	or	r26, r22
    28bc:	b7 2b       	or	r27, r23
    28be:	f1 01       	movw	r30, r2
    28c0:	82 87       	std	Z+10, r24	; 0x0a
    28c2:	93 87       	std	Z+11, r25	; 0x0b
    28c4:	a4 87       	std	Z+12, r26	; 0x0c
    28c6:	b5 87       	std	Z+13, r27	; 0x0d
    28c8:	16 82       	std	Z+6, r1	; 0x06
    28ca:	17 82       	std	Z+7, r1	; 0x07
    28cc:	10 86       	std	Z+8, r1	; 0x08
    28ce:	11 86       	std	Z+9, r1	; 0x09
    28d0:	16 8a       	std	Z+22, r1	; 0x16
    28d2:	17 8a       	std	Z+23, r1	; 0x17
    28d4:	10 8e       	std	Z+24, r1	; 0x18
    28d6:	11 8e       	std	Z+25, r1	; 0x19
    28d8:	11 83       	std	Z+1, r17	; 0x01
    28da:	00 83       	st	Z, r16
    28dc:	d8 01       	movw	r26, r16
    28de:	16 96       	adiw	r26, 0x06	; 6
    28e0:	8d 91       	ld	r24, X+
    28e2:	9c 91       	ld	r25, X
    28e4:	17 97       	sbiw	r26, 0x07	; 7
    28e6:	93 83       	std	Z+3, r25	; 0x03
    28e8:	82 83       	std	Z+2, r24	; 0x02
    28ea:	80 e0       	ldi	r24, 0x00	; 0
    28ec:	8f c0       	rjmp	.+286    	; 0x2a0c <f_open+0x650>
    28ee:	89 e0       	ldi	r24, 0x09	; 9
    28f0:	8d c0       	rjmp	.+282    	; 0x2a0c <f_open+0x650>
    28f2:	e8 e0       	ldi	r30, 0x08	; 8
    28f4:	8e 16       	cp	r8, r30
    28f6:	91 04       	cpc	r9, r1
    28f8:	09 f4       	brne	.+2      	; 0x28fc <f_open+0x540>
    28fa:	ed cd       	rjmp	.-1062   	; 0x24d6 <f_open+0x11a>
    28fc:	75 c0       	rjmp	.+234    	; 0x29e8 <f_open+0x62c>
    28fe:	46 2f       	mov	r20, r22
    2900:	50 e0       	ldi	r21, 0x00	; 0
    2902:	42 32       	cpi	r20, 0x22	; 34
    2904:	51 05       	cpc	r21, r1
    2906:	09 f4       	brne	.+2      	; 0x290a <f_open+0x54e>
    2908:	71 c0       	rjmp	.+226    	; 0x29ec <f_open+0x630>
    290a:	e2 e0       	ldi	r30, 0x02	; 2
    290c:	f1 e0       	ldi	r31, 0x01	; 1
    290e:	9c 01       	movw	r18, r24
    2910:	f6 cd       	rjmp	.-1044   	; 0x24fe <f_open+0x142>
    2912:	c9 01       	movw	r24, r18
    2914:	2f eb       	ldi	r18, 0xBF	; 191
    2916:	26 0f       	add	r18, r22
    2918:	2a 31       	cpi	r18, 0x1A	; 26
    291a:	08 f4       	brcc	.+2      	; 0x291e <f_open+0x562>
    291c:	fa cd       	rjmp	.-1036   	; 0x2512 <f_open+0x156>
    291e:	fb cd       	rjmp	.-1034   	; 0x2516 <f_open+0x15a>
    2920:	c8 0e       	add	r12, r24
    2922:	d9 1e       	adc	r13, r25
    2924:	97 2f       	mov	r25, r23
    2926:	84 e0       	ldi	r24, 0x04	; 4
    2928:	04 ce       	rjmp	.-1016   	; 0x2532 <f_open+0x176>
    292a:	c8 0e       	add	r12, r24
    292c:	d9 1e       	adc	r13, r25
    292e:	97 2f       	mov	r25, r23
    2930:	84 2d       	mov	r24, r4
    2932:	ff cd       	rjmp	.-1026   	; 0x2532 <f_open+0x176>
    2934:	da 01       	movw	r26, r20
    2936:	1b 96       	adiw	r26, 0x0b	; 11
    2938:	8c 91       	ld	r24, X
    293a:	82 ff       	sbrs	r24, 2
    293c:	4f ce       	rjmp	.-866    	; 0x25dc <f_open+0x220>
    293e:	0d c0       	rjmp	.+26     	; 0x295a <f_open+0x59e>
    2940:	ed 89       	ldd	r30, Y+21	; 0x15
    2942:	fe 89       	ldd	r31, Y+22	; 0x16
    2944:	93 85       	ldd	r25, Z+11	; 0x0b
    2946:	84 30       	cpi	r24, 0x04	; 4
    2948:	09 f4       	brne	.+2      	; 0x294c <f_open+0x590>
    294a:	44 ce       	rjmp	.-888    	; 0x25d4 <f_open+0x218>
    294c:	eb 88       	ldd	r14, Y+19	; 0x13
    294e:	fc 88       	ldd	r15, Y+20	; 0x14
    2950:	9d a1       	ldd	r25, Y+37	; 0x25
    2952:	9c 71       	andi	r25, 0x1C	; 28
    2954:	09 f0       	breq	.+2      	; 0x2958 <f_open+0x59c>
    2956:	50 ce       	rjmp	.-864    	; 0x25f8 <f_open+0x23c>
    2958:	68 cf       	rjmp	.-304    	; 0x282a <f_open+0x46e>
    295a:	7b 01       	movw	r14, r22
    295c:	67 2b       	or	r22, r23
    295e:	29 f4       	brne	.+10     	; 0x296a <f_open+0x5ae>
    2960:	09 c0       	rjmp	.+18     	; 0x2974 <f_open+0x5b8>
    2962:	0d a1       	ldd	r16, Y+37	; 0x25
    2964:	0c 71       	andi	r16, 0x1C	; 28
    2966:	81 f5       	brne	.+96     	; 0x29c8 <f_open+0x60c>
    2968:	21 c0       	rjmp	.+66     	; 0x29ac <f_open+0x5f0>
    296a:	8d a1       	ldd	r24, Y+37	; 0x25
    296c:	8c 71       	andi	r24, 0x1C	; 28
    296e:	09 f0       	breq	.+2      	; 0x2972 <f_open+0x5b6>
    2970:	8a ce       	rjmp	.-748    	; 0x2686 <f_open+0x2ca>
    2972:	5d cf       	rjmp	.-326    	; 0x282e <f_open+0x472>
    2974:	0d a1       	ldd	r16, Y+37	; 0x25
    2976:	0c 71       	andi	r16, 0x1C	; 28
    2978:	51 f5       	brne	.+84     	; 0x29ce <f_open+0x612>
    297a:	e1 2c       	mov	r14, r1
    297c:	f1 2c       	mov	r15, r1
    297e:	86 e0       	ldi	r24, 0x06	; 6
    2980:	15 c0       	rjmp	.+42     	; 0x29ac <f_open+0x5f0>
    2982:	87 e0       	ldi	r24, 0x07	; 7
    2984:	01 c0       	rjmp	.+2      	; 0x2988 <f_open+0x5cc>
    2986:	88 e0       	ldi	r24, 0x08	; 8
    2988:	88 23       	and	r24, r24
    298a:	09 f4       	brne	.+2      	; 0x298e <f_open+0x5d2>
    298c:	59 cf       	rjmp	.-334    	; 0x2840 <f_open+0x484>
    298e:	3e c0       	rjmp	.+124    	; 0x2a0c <f_open+0x650>
    2990:	82 e0       	ldi	r24, 0x02	; 2
    2992:	05 c0       	rjmp	.+10     	; 0x299e <f_open+0x5e2>
    2994:	82 e0       	ldi	r24, 0x02	; 2
    2996:	03 c0       	rjmp	.+6      	; 0x299e <f_open+0x5e2>
    2998:	82 e0       	ldi	r24, 0x02	; 2
    299a:	01 c0       	rjmp	.+2      	; 0x299e <f_open+0x5e2>
    299c:	81 e0       	ldi	r24, 0x01	; 1
    299e:	88 23       	and	r24, r24
    29a0:	09 f4       	brne	.+2      	; 0x29a4 <f_open+0x5e8>
    29a2:	51 cf       	rjmp	.-350    	; 0x2846 <f_open+0x48a>
    29a4:	33 c0       	rjmp	.+102    	; 0x2a0c <f_open+0x650>
    29a6:	84 e0       	ldi	r24, 0x04	; 4
    29a8:	01 c0       	rjmp	.+2      	; 0x29ac <f_open+0x5f0>
    29aa:	87 e0       	ldi	r24, 0x07	; 7
    29ac:	88 23       	and	r24, r24
    29ae:	09 f4       	brne	.+2      	; 0x29b2 <f_open+0x5f6>
    29b0:	5a cf       	rjmp	.-332    	; 0x2866 <f_open+0x4aa>
    29b2:	2c c0       	rjmp	.+88     	; 0x2a0c <f_open+0x650>
    29b4:	eb 88       	ldd	r14, Y+19	; 0x13
    29b6:	fc 88       	ldd	r15, Y+20	; 0x14
    29b8:	86 e0       	ldi	r24, 0x06	; 6
    29ba:	d3 cf       	rjmp	.-90     	; 0x2962 <f_open+0x5a6>
    29bc:	b9 a5       	ldd	r27, Y+41	; 0x29
    29be:	b8 60       	ori	r27, 0x08	; 8
    29c0:	b9 a7       	std	Y+41, r27	; 0x29
    29c2:	eb 88       	ldd	r14, Y+19	; 0x13
    29c4:	fc 88       	ldd	r15, Y+20	; 0x14
    29c6:	f2 cf       	rjmp	.-28     	; 0x29ac <f_open+0x5f0>
    29c8:	84 30       	cpi	r24, 0x04	; 4
    29ca:	c1 f7       	brne	.-16     	; 0x29bc <f_open+0x600>
    29cc:	18 ce       	rjmp	.-976    	; 0x25fe <f_open+0x242>
    29ce:	86 e0       	ldi	r24, 0x06	; 6
    29d0:	01 c0       	rjmp	.+2      	; 0x29d4 <f_open+0x618>
    29d2:	87 e0       	ldi	r24, 0x07	; 7
    29d4:	e9 a5       	ldd	r30, Y+41	; 0x29
    29d6:	e8 60       	ori	r30, 0x08	; 8
    29d8:	e9 a7       	std	Y+41, r30	; 0x29
    29da:	eb 88       	ldd	r14, Y+19	; 0x13
    29dc:	fc 88       	ldd	r15, Y+20	; 0x14
    29de:	e6 cf       	rjmp	.-52     	; 0x29ac <f_open+0x5f0>
    29e0:	84 e0       	ldi	r24, 0x04	; 4
    29e2:	05 c0       	rjmp	.+10     	; 0x29ee <f_open+0x632>
    29e4:	85 e0       	ldi	r24, 0x05	; 5
    29e6:	03 c0       	rjmp	.+6      	; 0x29ee <f_open+0x632>
    29e8:	86 e0       	ldi	r24, 0x06	; 6
    29ea:	01 c0       	rjmp	.+2      	; 0x29ee <f_open+0x632>
    29ec:	86 e0       	ldi	r24, 0x06	; 6
    29ee:	eb 88       	ldd	r14, Y+19	; 0x13
    29f0:	fc 88       	ldd	r15, Y+20	; 0x14
    29f2:	9d a1       	ldd	r25, Y+37	; 0x25
    29f4:	9c 71       	andi	r25, 0x1C	; 28
    29f6:	41 f7       	brne	.-48     	; 0x29c8 <f_open+0x60c>
    29f8:	18 cf       	rjmp	.-464    	; 0x282a <f_open+0x46e>
    29fa:	f9 a5       	ldd	r31, Y+41	; 0x29
    29fc:	f8 60       	ori	r31, 0x08	; 8
    29fe:	f9 a7       	std	Y+41, r31	; 0x29
    2a00:	eb 88       	ldd	r14, Y+19	; 0x13
    2a02:	fc 88       	ldd	r15, Y+20	; 0x14
    2a04:	d3 cf       	rjmp	.-90     	; 0x29ac <f_open+0x5f0>
    2a06:	84 30       	cpi	r24, 0x04	; 4
    2a08:	21 f3       	breq	.-56     	; 0x29d2 <f_open+0x616>
    2a0a:	f7 cf       	rjmp	.-18     	; 0x29fa <f_open+0x63e>
    2a0c:	ae 96       	adiw	r28, 0x2e	; 46
    2a0e:	0f b6       	in	r0, 0x3f	; 63
    2a10:	f8 94       	cli
    2a12:	de bf       	out	0x3e, r29	; 62
    2a14:	0f be       	out	0x3f, r0	; 63
    2a16:	cd bf       	out	0x3d, r28	; 61
    2a18:	df 91       	pop	r29
    2a1a:	cf 91       	pop	r28
    2a1c:	1f 91       	pop	r17
    2a1e:	0f 91       	pop	r16
    2a20:	ff 90       	pop	r15
    2a22:	ef 90       	pop	r14
    2a24:	df 90       	pop	r13
    2a26:	cf 90       	pop	r12
    2a28:	bf 90       	pop	r11
    2a2a:	af 90       	pop	r10
    2a2c:	9f 90       	pop	r9
    2a2e:	8f 90       	pop	r8
    2a30:	7f 90       	pop	r7
    2a32:	6f 90       	pop	r6
    2a34:	5f 90       	pop	r5
    2a36:	4f 90       	pop	r4
    2a38:	3f 90       	pop	r3
    2a3a:	2f 90       	pop	r2
    2a3c:	08 95       	ret

00002a3e <f_write>:
    2a3e:	3f 92       	push	r3
    2a40:	4f 92       	push	r4
    2a42:	5f 92       	push	r5
    2a44:	6f 92       	push	r6
    2a46:	7f 92       	push	r7
    2a48:	8f 92       	push	r8
    2a4a:	9f 92       	push	r9
    2a4c:	af 92       	push	r10
    2a4e:	bf 92       	push	r11
    2a50:	cf 92       	push	r12
    2a52:	df 92       	push	r13
    2a54:	ef 92       	push	r14
    2a56:	ff 92       	push	r15
    2a58:	0f 93       	push	r16
    2a5a:	1f 93       	push	r17
    2a5c:	cf 93       	push	r28
    2a5e:	df 93       	push	r29
    2a60:	00 d0       	rcall	.+0      	; 0x2a62 <f_write+0x24>
    2a62:	00 d0       	rcall	.+0      	; 0x2a64 <f_write+0x26>
    2a64:	00 d0       	rcall	.+0      	; 0x2a66 <f_write+0x28>
    2a66:	cd b7       	in	r28, 0x3d	; 61
    2a68:	de b7       	in	r29, 0x3e	; 62
    2a6a:	9e 83       	std	Y+6, r25	; 0x06
    2a6c:	8d 83       	std	Y+5, r24	; 0x05
    2a6e:	4b 01       	movw	r8, r22
    2a70:	6a 01       	movw	r12, r20
    2a72:	59 01       	movw	r10, r18
    2a74:	d9 01       	movw	r26, r18
    2a76:	1d 92       	st	X+, r1
    2a78:	1c 92       	st	X, r1
    2a7a:	0e 94 4e 08 	call	0x109c	; 0x109c <validate>
    2a7e:	81 11       	cpse	r24, r1
    2a80:	c0 c1       	rjmp	.+896    	; 0x2e02 <f_write+0x3c4>
    2a82:	ed 81       	ldd	r30, Y+5	; 0x05
    2a84:	fe 81       	ldd	r31, Y+6	; 0x06
    2a86:	85 81       	ldd	r24, Z+5	; 0x05
    2a88:	81 11       	cpse	r24, r1
    2a8a:	bb c1       	rjmp	.+886    	; 0x2e02 <f_write+0x3c4>
    2a8c:	84 81       	ldd	r24, Z+4	; 0x04
    2a8e:	81 ff       	sbrs	r24, 1
    2a90:	b7 c1       	rjmp	.+878    	; 0x2e00 <f_write+0x3c2>
    2a92:	86 81       	ldd	r24, Z+6	; 0x06
    2a94:	97 81       	ldd	r25, Z+7	; 0x07
    2a96:	a0 85       	ldd	r26, Z+8	; 0x08
    2a98:	b1 85       	ldd	r27, Z+9	; 0x09
    2a9a:	ac 01       	movw	r20, r24
    2a9c:	bd 01       	movw	r22, r26
    2a9e:	4c 0d       	add	r20, r12
    2aa0:	5d 1d       	adc	r21, r13
    2aa2:	61 1d       	adc	r22, r1
    2aa4:	71 1d       	adc	r23, r1
    2aa6:	48 17       	cp	r20, r24
    2aa8:	59 07       	cpc	r21, r25
    2aaa:	6a 07       	cpc	r22, r26
    2aac:	7b 07       	cpc	r23, r27
    2aae:	08 f4       	brcc	.+2      	; 0x2ab2 <f_write+0x74>
    2ab0:	8a c1       	rjmp	.+788    	; 0x2dc6 <f_write+0x388>
    2ab2:	c1 14       	cp	r12, r1
    2ab4:	d1 04       	cpc	r13, r1
    2ab6:	09 f4       	brne	.+2      	; 0x2aba <f_write+0x7c>
    2ab8:	86 c1       	rjmp	.+780    	; 0x2dc6 <f_write+0x388>
    2aba:	b0 96       	adiw	r30, 0x20	; 32
    2abc:	fc 83       	std	Y+4, r31	; 0x04
    2abe:	eb 83       	std	Y+3, r30	; 0x03
    2ac0:	ed 81       	ldd	r30, Y+5	; 0x05
    2ac2:	fe 81       	ldd	r31, Y+6	; 0x06
    2ac4:	86 81       	ldd	r24, Z+6	; 0x06
    2ac6:	97 81       	ldd	r25, Z+7	; 0x07
    2ac8:	a0 85       	ldd	r26, Z+8	; 0x08
    2aca:	b1 85       	ldd	r27, Z+9	; 0x09
    2acc:	ac 01       	movw	r20, r24
    2ace:	bd 01       	movw	r22, r26
    2ad0:	51 70       	andi	r21, 0x01	; 1
    2ad2:	66 27       	eor	r22, r22
    2ad4:	77 27       	eor	r23, r23
    2ad6:	45 2b       	or	r20, r21
    2ad8:	46 2b       	or	r20, r22
    2ada:	47 2b       	or	r20, r23
    2adc:	09 f0       	breq	.+2      	; 0x2ae0 <f_write+0xa2>
    2ade:	32 c1       	rjmp	.+612    	; 0x2d44 <f_write+0x306>
    2ae0:	e0 80       	ld	r14, Z
    2ae2:	f1 80       	ldd	r15, Z+1	; 0x01
    2ae4:	f7 01       	movw	r30, r14
    2ae6:	22 81       	ldd	r18, Z+2	; 0x02
    2ae8:	21 50       	subi	r18, 0x01	; 1
    2aea:	ac 01       	movw	r20, r24
    2aec:	bd 01       	movw	r22, r26
    2aee:	03 2e       	mov	r0, r19
    2af0:	39 e0       	ldi	r19, 0x09	; 9
    2af2:	76 95       	lsr	r23
    2af4:	67 95       	ror	r22
    2af6:	57 95       	ror	r21
    2af8:	47 95       	ror	r20
    2afa:	3a 95       	dec	r19
    2afc:	d1 f7       	brne	.-12     	; 0x2af2 <f_write+0xb4>
    2afe:	30 2d       	mov	r19, r0
    2b00:	32 2e       	mov	r3, r18
    2b02:	34 22       	and	r3, r20
    2b04:	09 f0       	breq	.+2      	; 0x2b08 <f_write+0xca>
    2b06:	52 c0       	rjmp	.+164    	; 0x2bac <f_write+0x16e>
    2b08:	89 2b       	or	r24, r25
    2b0a:	8a 2b       	or	r24, r26
    2b0c:	8b 2b       	or	r24, r27
    2b0e:	99 f4       	brne	.+38     	; 0x2b36 <f_write+0xf8>
    2b10:	ad 81       	ldd	r26, Y+5	; 0x05
    2b12:	be 81       	ldd	r27, Y+6	; 0x06
    2b14:	1e 96       	adiw	r26, 0x0e	; 14
    2b16:	6d 91       	ld	r22, X+
    2b18:	7d 91       	ld	r23, X+
    2b1a:	8d 91       	ld	r24, X+
    2b1c:	9c 91       	ld	r25, X
    2b1e:	51 97       	sbiw	r26, 0x11	; 17
    2b20:	61 15       	cp	r22, r1
    2b22:	71 05       	cpc	r23, r1
    2b24:	81 05       	cpc	r24, r1
    2b26:	91 05       	cpc	r25, r1
    2b28:	a1 f4       	brne	.+40     	; 0x2b52 <f_write+0x114>
    2b2a:	40 e0       	ldi	r20, 0x00	; 0
    2b2c:	50 e0       	ldi	r21, 0x00	; 0
    2b2e:	ba 01       	movw	r22, r20
    2b30:	c7 01       	movw	r24, r14
    2b32:	a7 d9       	rcall	.-3250   	; 0x1e82 <create_chain>
    2b34:	08 c0       	rjmp	.+16     	; 0x2b46 <f_write+0x108>
    2b36:	ed 81       	ldd	r30, Y+5	; 0x05
    2b38:	fe 81       	ldd	r31, Y+6	; 0x06
    2b3a:	42 89       	ldd	r20, Z+18	; 0x12
    2b3c:	53 89       	ldd	r21, Z+19	; 0x13
    2b3e:	64 89       	ldd	r22, Z+20	; 0x14
    2b40:	75 89       	ldd	r23, Z+21	; 0x15
    2b42:	c7 01       	movw	r24, r14
    2b44:	9e d9       	rcall	.-3268   	; 0x1e82 <create_chain>
    2b46:	61 15       	cp	r22, r1
    2b48:	71 05       	cpc	r23, r1
    2b4a:	81 05       	cpc	r24, r1
    2b4c:	91 05       	cpc	r25, r1
    2b4e:	09 f4       	brne	.+2      	; 0x2b52 <f_write+0x114>
    2b50:	3a c1       	rjmp	.+628    	; 0x2dc6 <f_write+0x388>
    2b52:	61 30       	cpi	r22, 0x01	; 1
    2b54:	71 05       	cpc	r23, r1
    2b56:	81 05       	cpc	r24, r1
    2b58:	91 05       	cpc	r25, r1
    2b5a:	31 f4       	brne	.+12     	; 0x2b68 <f_write+0x12a>
    2b5c:	82 e0       	ldi	r24, 0x02	; 2
    2b5e:	ad 81       	ldd	r26, Y+5	; 0x05
    2b60:	be 81       	ldd	r27, Y+6	; 0x06
    2b62:	15 96       	adiw	r26, 0x05	; 5
    2b64:	8c 93       	st	X, r24
    2b66:	4d c1       	rjmp	.+666    	; 0x2e02 <f_write+0x3c4>
    2b68:	6f 3f       	cpi	r22, 0xFF	; 255
    2b6a:	bf ef       	ldi	r27, 0xFF	; 255
    2b6c:	7b 07       	cpc	r23, r27
    2b6e:	8b 07       	cpc	r24, r27
    2b70:	9b 07       	cpc	r25, r27
    2b72:	29 f4       	brne	.+10     	; 0x2b7e <f_write+0x140>
    2b74:	81 e0       	ldi	r24, 0x01	; 1
    2b76:	ed 81       	ldd	r30, Y+5	; 0x05
    2b78:	fe 81       	ldd	r31, Y+6	; 0x06
    2b7a:	85 83       	std	Z+5, r24	; 0x05
    2b7c:	42 c1       	rjmp	.+644    	; 0x2e02 <f_write+0x3c4>
    2b7e:	ad 81       	ldd	r26, Y+5	; 0x05
    2b80:	be 81       	ldd	r27, Y+6	; 0x06
    2b82:	52 96       	adiw	r26, 0x12	; 18
    2b84:	6d 93       	st	X+, r22
    2b86:	7d 93       	st	X+, r23
    2b88:	8d 93       	st	X+, r24
    2b8a:	9c 93       	st	X, r25
    2b8c:	55 97       	sbiw	r26, 0x15	; 21
    2b8e:	1e 96       	adiw	r26, 0x0e	; 14
    2b90:	4d 90       	ld	r4, X+
    2b92:	5d 90       	ld	r5, X+
    2b94:	6d 90       	ld	r6, X+
    2b96:	7c 90       	ld	r7, X
    2b98:	51 97       	sbiw	r26, 0x11	; 17
    2b9a:	45 28       	or	r4, r5
    2b9c:	46 28       	or	r4, r6
    2b9e:	47 28       	or	r4, r7
    2ba0:	29 f4       	brne	.+10     	; 0x2bac <f_write+0x16e>
    2ba2:	fd 01       	movw	r30, r26
    2ba4:	66 87       	std	Z+14, r22	; 0x0e
    2ba6:	77 87       	std	Z+15, r23	; 0x0f
    2ba8:	80 8b       	std	Z+16, r24	; 0x10
    2baa:	91 8b       	std	Z+17, r25	; 0x11
    2bac:	ad 81       	ldd	r26, Y+5	; 0x05
    2bae:	be 81       	ldd	r27, Y+6	; 0x06
    2bb0:	14 96       	adiw	r26, 0x04	; 4
    2bb2:	8c 91       	ld	r24, X
    2bb4:	14 97       	sbiw	r26, 0x04	; 4
    2bb6:	86 ff       	sbrs	r24, 6
    2bb8:	1e c0       	rjmp	.+60     	; 0x2bf6 <f_write+0x1b8>
    2bba:	56 96       	adiw	r26, 0x16	; 22
    2bbc:	2d 91       	ld	r18, X+
    2bbe:	3d 91       	ld	r19, X+
    2bc0:	4d 91       	ld	r20, X+
    2bc2:	5c 91       	ld	r21, X
    2bc4:	59 97       	sbiw	r26, 0x19	; 25
    2bc6:	ed 91       	ld	r30, X+
    2bc8:	fc 91       	ld	r31, X
    2bca:	01 e0       	ldi	r16, 0x01	; 1
    2bcc:	10 e0       	ldi	r17, 0x00	; 0
    2bce:	6b 81       	ldd	r22, Y+3	; 0x03
    2bd0:	7c 81       	ldd	r23, Y+4	; 0x04
    2bd2:	81 81       	ldd	r24, Z+1	; 0x01
    2bd4:	0e 94 b8 03 	call	0x770	; 0x770 <disk_write>
    2bd8:	88 23       	and	r24, r24
    2bda:	29 f0       	breq	.+10     	; 0x2be6 <f_write+0x1a8>
    2bdc:	81 e0       	ldi	r24, 0x01	; 1
    2bde:	ed 81       	ldd	r30, Y+5	; 0x05
    2be0:	fe 81       	ldd	r31, Y+6	; 0x06
    2be2:	85 83       	std	Z+5, r24	; 0x05
    2be4:	0e c1       	rjmp	.+540    	; 0x2e02 <f_write+0x3c4>
    2be6:	ad 81       	ldd	r26, Y+5	; 0x05
    2be8:	be 81       	ldd	r27, Y+6	; 0x06
    2bea:	14 96       	adiw	r26, 0x04	; 4
    2bec:	8c 91       	ld	r24, X
    2bee:	14 97       	sbiw	r26, 0x04	; 4
    2bf0:	8f 7b       	andi	r24, 0xBF	; 191
    2bf2:	14 96       	adiw	r26, 0x04	; 4
    2bf4:	8c 93       	st	X, r24
    2bf6:	ed 81       	ldd	r30, Y+5	; 0x05
    2bf8:	fe 81       	ldd	r31, Y+6	; 0x06
    2bfa:	01 90       	ld	r0, Z+
    2bfc:	f0 81       	ld	r31, Z
    2bfe:	e0 2d       	mov	r30, r0
    2c00:	fa 83       	std	Y+2, r31	; 0x02
    2c02:	e9 83       	std	Y+1, r30	; 0x01
    2c04:	ad 81       	ldd	r26, Y+5	; 0x05
    2c06:	be 81       	ldd	r27, Y+6	; 0x06
    2c08:	52 96       	adiw	r26, 0x12	; 18
    2c0a:	4d 91       	ld	r20, X+
    2c0c:	5d 91       	ld	r21, X+
    2c0e:	6d 91       	ld	r22, X+
    2c10:	7c 91       	ld	r23, X
    2c12:	55 97       	sbiw	r26, 0x15	; 21
    2c14:	cf 01       	movw	r24, r30
    2c16:	0e 94 32 0c 	call	0x1864	; 0x1864 <clust2sect>
    2c1a:	61 15       	cp	r22, r1
    2c1c:	71 05       	cpc	r23, r1
    2c1e:	81 05       	cpc	r24, r1
    2c20:	91 05       	cpc	r25, r1
    2c22:	29 f4       	brne	.+10     	; 0x2c2e <f_write+0x1f0>
    2c24:	82 e0       	ldi	r24, 0x02	; 2
    2c26:	ed 81       	ldd	r30, Y+5	; 0x05
    2c28:	fe 81       	ldd	r31, Y+6	; 0x06
    2c2a:	85 83       	std	Z+5, r24	; 0x05
    2c2c:	ea c0       	rjmp	.+468    	; 0x2e02 <f_write+0x3c4>
    2c2e:	2b 01       	movw	r4, r22
    2c30:	3c 01       	movw	r6, r24
    2c32:	43 0c       	add	r4, r3
    2c34:	51 1c       	adc	r5, r1
    2c36:	61 1c       	adc	r6, r1
    2c38:	71 1c       	adc	r7, r1
    2c3a:	76 01       	movw	r14, r12
    2c3c:	ef 2c       	mov	r14, r15
    2c3e:	ff 24       	eor	r15, r15
    2c40:	e6 94       	lsr	r14
    2c42:	e1 14       	cp	r14, r1
    2c44:	f1 04       	cpc	r15, r1
    2c46:	09 f4       	brne	.+2      	; 0x2c4a <f_write+0x20c>
    2c48:	4a c0       	rjmp	.+148    	; 0x2cde <f_write+0x2a0>
    2c4a:	a9 81       	ldd	r26, Y+1	; 0x01
    2c4c:	ba 81       	ldd	r27, Y+2	; 0x02
    2c4e:	12 96       	adiw	r26, 0x02	; 2
    2c50:	4c 91       	ld	r20, X
    2c52:	24 2f       	mov	r18, r20
    2c54:	30 e0       	ldi	r19, 0x00	; 0
    2c56:	c7 01       	movw	r24, r14
    2c58:	83 0d       	add	r24, r3
    2c5a:	91 1d       	adc	r25, r1
    2c5c:	28 17       	cp	r18, r24
    2c5e:	39 07       	cpc	r19, r25
    2c60:	18 f4       	brcc	.+6      	; 0x2c68 <f_write+0x22a>
    2c62:	79 01       	movw	r14, r18
    2c64:	e3 18       	sub	r14, r3
    2c66:	f1 08       	sbc	r15, r1
    2c68:	87 01       	movw	r16, r14
    2c6a:	a3 01       	movw	r20, r6
    2c6c:	92 01       	movw	r18, r4
    2c6e:	b4 01       	movw	r22, r8
    2c70:	e9 81       	ldd	r30, Y+1	; 0x01
    2c72:	fa 81       	ldd	r31, Y+2	; 0x02
    2c74:	81 81       	ldd	r24, Z+1	; 0x01
    2c76:	0e 94 b8 03 	call	0x770	; 0x770 <disk_write>
    2c7a:	88 23       	and	r24, r24
    2c7c:	31 f0       	breq	.+12     	; 0x2c8a <f_write+0x24c>
    2c7e:	81 e0       	ldi	r24, 0x01	; 1
    2c80:	ad 81       	ldd	r26, Y+5	; 0x05
    2c82:	be 81       	ldd	r27, Y+6	; 0x06
    2c84:	15 96       	adiw	r26, 0x05	; 5
    2c86:	8c 93       	st	X, r24
    2c88:	bc c0       	rjmp	.+376    	; 0x2e02 <f_write+0x3c4>
    2c8a:	ed 81       	ldd	r30, Y+5	; 0x05
    2c8c:	fe 81       	ldd	r31, Y+6	; 0x06
    2c8e:	86 89       	ldd	r24, Z+22	; 0x16
    2c90:	97 89       	ldd	r25, Z+23	; 0x17
    2c92:	a0 8d       	ldd	r26, Z+24	; 0x18
    2c94:	b1 8d       	ldd	r27, Z+25	; 0x19
    2c96:	84 19       	sub	r24, r4
    2c98:	95 09       	sbc	r25, r5
    2c9a:	a6 09       	sbc	r26, r6
    2c9c:	b7 09       	sbc	r27, r7
    2c9e:	a7 01       	movw	r20, r14
    2ca0:	60 e0       	ldi	r22, 0x00	; 0
    2ca2:	70 e0       	ldi	r23, 0x00	; 0
    2ca4:	84 17       	cp	r24, r20
    2ca6:	95 07       	cpc	r25, r21
    2ca8:	a6 07       	cpc	r26, r22
    2caa:	b7 07       	cpc	r27, r23
    2cac:	a0 f4       	brcc	.+40     	; 0x2cd6 <f_write+0x298>
    2cae:	98 2f       	mov	r25, r24
    2cb0:	88 27       	eor	r24, r24
    2cb2:	99 0f       	add	r25, r25
    2cb4:	b4 01       	movw	r22, r8
    2cb6:	68 0f       	add	r22, r24
    2cb8:	79 1f       	adc	r23, r25
    2cba:	40 e0       	ldi	r20, 0x00	; 0
    2cbc:	52 e0       	ldi	r21, 0x02	; 2
    2cbe:	8b 81       	ldd	r24, Y+3	; 0x03
    2cc0:	9c 81       	ldd	r25, Y+4	; 0x04
    2cc2:	0e 94 da 06 	call	0xdb4	; 0xdb4 <mem_cpy>
    2cc6:	ad 81       	ldd	r26, Y+5	; 0x05
    2cc8:	be 81       	ldd	r27, Y+6	; 0x06
    2cca:	14 96       	adiw	r26, 0x04	; 4
    2ccc:	8c 91       	ld	r24, X
    2cce:	14 97       	sbiw	r26, 0x04	; 4
    2cd0:	8f 7b       	andi	r24, 0xBF	; 191
    2cd2:	14 96       	adiw	r26, 0x04	; 4
    2cd4:	8c 93       	st	X, r24
    2cd6:	fe 2c       	mov	r15, r14
    2cd8:	ee 24       	eor	r14, r14
    2cda:	ff 0c       	add	r15, r15
    2cdc:	58 c0       	rjmp	.+176    	; 0x2d8e <f_write+0x350>
    2cde:	ed 81       	ldd	r30, Y+5	; 0x05
    2ce0:	fe 81       	ldd	r31, Y+6	; 0x06
    2ce2:	86 89       	ldd	r24, Z+22	; 0x16
    2ce4:	97 89       	ldd	r25, Z+23	; 0x17
    2ce6:	a0 8d       	ldd	r26, Z+24	; 0x18
    2ce8:	b1 8d       	ldd	r27, Z+25	; 0x19
    2cea:	84 15       	cp	r24, r4
    2cec:	95 05       	cpc	r25, r5
    2cee:	a6 05       	cpc	r26, r6
    2cf0:	b7 05       	cpc	r27, r7
    2cf2:	01 f1       	breq	.+64     	; 0x2d34 <f_write+0x2f6>
    2cf4:	46 81       	ldd	r20, Z+6	; 0x06
    2cf6:	57 81       	ldd	r21, Z+7	; 0x07
    2cf8:	60 85       	ldd	r22, Z+8	; 0x08
    2cfa:	71 85       	ldd	r23, Z+9	; 0x09
    2cfc:	82 85       	ldd	r24, Z+10	; 0x0a
    2cfe:	93 85       	ldd	r25, Z+11	; 0x0b
    2d00:	a4 85       	ldd	r26, Z+12	; 0x0c
    2d02:	b5 85       	ldd	r27, Z+13	; 0x0d
    2d04:	48 17       	cp	r20, r24
    2d06:	59 07       	cpc	r21, r25
    2d08:	6a 07       	cpc	r22, r26
    2d0a:	7b 07       	cpc	r23, r27
    2d0c:	98 f4       	brcc	.+38     	; 0x2d34 <f_write+0x2f6>
    2d0e:	01 e0       	ldi	r16, 0x01	; 1
    2d10:	10 e0       	ldi	r17, 0x00	; 0
    2d12:	a3 01       	movw	r20, r6
    2d14:	92 01       	movw	r18, r4
    2d16:	6b 81       	ldd	r22, Y+3	; 0x03
    2d18:	7c 81       	ldd	r23, Y+4	; 0x04
    2d1a:	a9 81       	ldd	r26, Y+1	; 0x01
    2d1c:	ba 81       	ldd	r27, Y+2	; 0x02
    2d1e:	11 96       	adiw	r26, 0x01	; 1
    2d20:	8c 91       	ld	r24, X
    2d22:	0e 94 66 03 	call	0x6cc	; 0x6cc <disk_read>
    2d26:	88 23       	and	r24, r24
    2d28:	29 f0       	breq	.+10     	; 0x2d34 <f_write+0x2f6>
    2d2a:	81 e0       	ldi	r24, 0x01	; 1
    2d2c:	ed 81       	ldd	r30, Y+5	; 0x05
    2d2e:	fe 81       	ldd	r31, Y+6	; 0x06
    2d30:	85 83       	std	Z+5, r24	; 0x05
    2d32:	67 c0       	rjmp	.+206    	; 0x2e02 <f_write+0x3c4>
    2d34:	ad 81       	ldd	r26, Y+5	; 0x05
    2d36:	be 81       	ldd	r27, Y+6	; 0x06
    2d38:	56 96       	adiw	r26, 0x16	; 22
    2d3a:	4d 92       	st	X+, r4
    2d3c:	5d 92       	st	X+, r5
    2d3e:	6d 92       	st	X+, r6
    2d40:	7c 92       	st	X, r7
    2d42:	59 97       	sbiw	r26, 0x19	; 25
    2d44:	ed 81       	ldd	r30, Y+5	; 0x05
    2d46:	fe 81       	ldd	r31, Y+6	; 0x06
    2d48:	86 81       	ldd	r24, Z+6	; 0x06
    2d4a:	97 81       	ldd	r25, Z+7	; 0x07
    2d4c:	a0 85       	ldd	r26, Z+8	; 0x08
    2d4e:	b1 85       	ldd	r27, Z+9	; 0x09
    2d50:	ac 01       	movw	r20, r24
    2d52:	51 70       	andi	r21, 0x01	; 1
    2d54:	20 e0       	ldi	r18, 0x00	; 0
    2d56:	32 e0       	ldi	r19, 0x02	; 2
    2d58:	24 1b       	sub	r18, r20
    2d5a:	35 0b       	sbc	r19, r21
    2d5c:	76 01       	movw	r14, r12
    2d5e:	2c 15       	cp	r18, r12
    2d60:	3d 05       	cpc	r19, r13
    2d62:	08 f4       	brcc	.+2      	; 0x2d66 <f_write+0x328>
    2d64:	79 01       	movw	r14, r18
    2d66:	91 70       	andi	r25, 0x01	; 1
    2d68:	aa 27       	eor	r26, r26
    2d6a:	bb 27       	eor	r27, r27
    2d6c:	80 96       	adiw	r24, 0x20	; 32
    2d6e:	a7 01       	movw	r20, r14
    2d70:	b4 01       	movw	r22, r8
    2d72:	2d 81       	ldd	r18, Y+5	; 0x05
    2d74:	3e 81       	ldd	r19, Y+6	; 0x06
    2d76:	82 0f       	add	r24, r18
    2d78:	93 1f       	adc	r25, r19
    2d7a:	0e 94 da 06 	call	0xdb4	; 0xdb4 <mem_cpy>
    2d7e:	ad 81       	ldd	r26, Y+5	; 0x05
    2d80:	be 81       	ldd	r27, Y+6	; 0x06
    2d82:	14 96       	adiw	r26, 0x04	; 4
    2d84:	8c 91       	ld	r24, X
    2d86:	14 97       	sbiw	r26, 0x04	; 4
    2d88:	80 64       	ori	r24, 0x40	; 64
    2d8a:	14 96       	adiw	r26, 0x04	; 4
    2d8c:	8c 93       	st	X, r24
    2d8e:	8e 0c       	add	r8, r14
    2d90:	9f 1c       	adc	r9, r15
    2d92:	ed 81       	ldd	r30, Y+5	; 0x05
    2d94:	fe 81       	ldd	r31, Y+6	; 0x06
    2d96:	86 81       	ldd	r24, Z+6	; 0x06
    2d98:	97 81       	ldd	r25, Z+7	; 0x07
    2d9a:	a0 85       	ldd	r26, Z+8	; 0x08
    2d9c:	b1 85       	ldd	r27, Z+9	; 0x09
    2d9e:	8e 0d       	add	r24, r14
    2da0:	9f 1d       	adc	r25, r15
    2da2:	a1 1d       	adc	r26, r1
    2da4:	b1 1d       	adc	r27, r1
    2da6:	86 83       	std	Z+6, r24	; 0x06
    2da8:	97 83       	std	Z+7, r25	; 0x07
    2daa:	a0 87       	std	Z+8, r26	; 0x08
    2dac:	b1 87       	std	Z+9, r27	; 0x09
    2dae:	d5 01       	movw	r26, r10
    2db0:	8d 91       	ld	r24, X+
    2db2:	9c 91       	ld	r25, X
    2db4:	11 97       	sbiw	r26, 0x01	; 1
    2db6:	8e 0d       	add	r24, r14
    2db8:	9f 1d       	adc	r25, r15
    2dba:	8d 93       	st	X+, r24
    2dbc:	9c 93       	st	X, r25
    2dbe:	ce 18       	sub	r12, r14
    2dc0:	df 08       	sbc	r13, r15
    2dc2:	09 f0       	breq	.+2      	; 0x2dc6 <f_write+0x388>
    2dc4:	7d ce       	rjmp	.-774    	; 0x2ac0 <f_write+0x82>
    2dc6:	ed 81       	ldd	r30, Y+5	; 0x05
    2dc8:	fe 81       	ldd	r31, Y+6	; 0x06
    2dca:	86 81       	ldd	r24, Z+6	; 0x06
    2dcc:	97 81       	ldd	r25, Z+7	; 0x07
    2dce:	a0 85       	ldd	r26, Z+8	; 0x08
    2dd0:	b1 85       	ldd	r27, Z+9	; 0x09
    2dd2:	42 85       	ldd	r20, Z+10	; 0x0a
    2dd4:	53 85       	ldd	r21, Z+11	; 0x0b
    2dd6:	64 85       	ldd	r22, Z+12	; 0x0c
    2dd8:	75 85       	ldd	r23, Z+13	; 0x0d
    2dda:	48 17       	cp	r20, r24
    2ddc:	59 07       	cpc	r21, r25
    2dde:	6a 07       	cpc	r22, r26
    2de0:	7b 07       	cpc	r23, r27
    2de2:	20 f4       	brcc	.+8      	; 0x2dec <f_write+0x3ae>
    2de4:	82 87       	std	Z+10, r24	; 0x0a
    2de6:	93 87       	std	Z+11, r25	; 0x0b
    2de8:	a4 87       	std	Z+12, r26	; 0x0c
    2dea:	b5 87       	std	Z+13, r27	; 0x0d
    2dec:	ad 81       	ldd	r26, Y+5	; 0x05
    2dee:	be 81       	ldd	r27, Y+6	; 0x06
    2df0:	14 96       	adiw	r26, 0x04	; 4
    2df2:	8c 91       	ld	r24, X
    2df4:	14 97       	sbiw	r26, 0x04	; 4
    2df6:	80 62       	ori	r24, 0x20	; 32
    2df8:	14 96       	adiw	r26, 0x04	; 4
    2dfa:	8c 93       	st	X, r24
    2dfc:	80 e0       	ldi	r24, 0x00	; 0
    2dfe:	01 c0       	rjmp	.+2      	; 0x2e02 <f_write+0x3c4>
    2e00:	87 e0       	ldi	r24, 0x07	; 7
    2e02:	26 96       	adiw	r28, 0x06	; 6
    2e04:	0f b6       	in	r0, 0x3f	; 63
    2e06:	f8 94       	cli
    2e08:	de bf       	out	0x3e, r29	; 62
    2e0a:	0f be       	out	0x3f, r0	; 63
    2e0c:	cd bf       	out	0x3d, r28	; 61
    2e0e:	df 91       	pop	r29
    2e10:	cf 91       	pop	r28
    2e12:	1f 91       	pop	r17
    2e14:	0f 91       	pop	r16
    2e16:	ff 90       	pop	r15
    2e18:	ef 90       	pop	r14
    2e1a:	df 90       	pop	r13
    2e1c:	cf 90       	pop	r12
    2e1e:	bf 90       	pop	r11
    2e20:	af 90       	pop	r10
    2e22:	9f 90       	pop	r9
    2e24:	8f 90       	pop	r8
    2e26:	7f 90       	pop	r7
    2e28:	6f 90       	pop	r6
    2e2a:	5f 90       	pop	r5
    2e2c:	4f 90       	pop	r4
    2e2e:	3f 90       	pop	r3
    2e30:	08 95       	ret

00002e32 <putc_bfd>:
    2e32:	ef 92       	push	r14
    2e34:	ff 92       	push	r15
    2e36:	0f 93       	push	r16
    2e38:	1f 93       	push	r17
    2e3a:	cf 93       	push	r28
    2e3c:	df 93       	push	r29
    2e3e:	00 d0       	rcall	.+0      	; 0x2e40 <putc_bfd+0xe>
    2e40:	cd b7       	in	r28, 0x3d	; 61
    2e42:	de b7       	in	r29, 0x3e	; 62
    2e44:	fc 01       	movw	r30, r24
    2e46:	22 81       	ldd	r18, Z+2	; 0x02
    2e48:	33 81       	ldd	r19, Z+3	; 0x03
    2e4a:	33 23       	and	r19, r19
    2e4c:	6c f1       	brlt	.+90     	; 0x2ea8 <putc_bfd+0x76>
    2e4e:	8c 01       	movw	r16, r24
    2e50:	79 01       	movw	r14, r18
    2e52:	ff ef       	ldi	r31, 0xFF	; 255
    2e54:	ef 1a       	sub	r14, r31
    2e56:	ff 0a       	sbc	r15, r31
    2e58:	fc 01       	movw	r30, r24
    2e5a:	e2 0f       	add	r30, r18
    2e5c:	f3 1f       	adc	r31, r19
    2e5e:	66 83       	std	Z+6, r22	; 0x06
    2e60:	8d e3       	ldi	r24, 0x3D	; 61
    2e62:	e8 16       	cp	r14, r24
    2e64:	f1 04       	cpc	r15, r1
    2e66:	c4 f0       	brlt	.+48     	; 0x2e98 <putc_bfd+0x66>
    2e68:	9e 01       	movw	r18, r28
    2e6a:	2f 5f       	subi	r18, 0xFF	; 255
    2e6c:	3f 4f       	sbci	r19, 0xFF	; 255
    2e6e:	a7 01       	movw	r20, r14
    2e70:	b8 01       	movw	r22, r16
    2e72:	6a 5f       	subi	r22, 0xFA	; 250
    2e74:	7f 4f       	sbci	r23, 0xFF	; 255
    2e76:	f8 01       	movw	r30, r16
    2e78:	80 81       	ld	r24, Z
    2e7a:	91 81       	ldd	r25, Z+1	; 0x01
    2e7c:	e0 dd       	rcall	.-1088   	; 0x2a3e <f_write>
    2e7e:	81 e0       	ldi	r24, 0x01	; 1
    2e80:	90 e0       	ldi	r25, 0x00	; 0
    2e82:	29 81       	ldd	r18, Y+1	; 0x01
    2e84:	3a 81       	ldd	r19, Y+2	; 0x02
    2e86:	e2 16       	cp	r14, r18
    2e88:	f3 06       	cpc	r15, r19
    2e8a:	11 f4       	brne	.+4      	; 0x2e90 <putc_bfd+0x5e>
    2e8c:	80 e0       	ldi	r24, 0x00	; 0
    2e8e:	90 e0       	ldi	r25, 0x00	; 0
    2e90:	ee 24       	eor	r14, r14
    2e92:	ff 24       	eor	r15, r15
    2e94:	e8 1a       	sub	r14, r24
    2e96:	f9 0a       	sbc	r15, r25
    2e98:	f8 01       	movw	r30, r16
    2e9a:	f3 82       	std	Z+3, r15	; 0x03
    2e9c:	e2 82       	std	Z+2, r14	; 0x02
    2e9e:	84 81       	ldd	r24, Z+4	; 0x04
    2ea0:	95 81       	ldd	r25, Z+5	; 0x05
    2ea2:	01 96       	adiw	r24, 0x01	; 1
    2ea4:	95 83       	std	Z+5, r25	; 0x05
    2ea6:	84 83       	std	Z+4, r24	; 0x04
    2ea8:	0f 90       	pop	r0
    2eaa:	0f 90       	pop	r0
    2eac:	df 91       	pop	r29
    2eae:	cf 91       	pop	r28
    2eb0:	1f 91       	pop	r17
    2eb2:	0f 91       	pop	r16
    2eb4:	ff 90       	pop	r15
    2eb6:	ef 90       	pop	r14
    2eb8:	08 95       	ret

00002eba <f_sync>:
    2eba:	0f 93       	push	r16
    2ebc:	1f 93       	push	r17
    2ebe:	cf 93       	push	r28
    2ec0:	df 93       	push	r29
    2ec2:	ec 01       	movw	r28, r24
    2ec4:	0e 94 4e 08 	call	0x109c	; 0x109c <validate>
    2ec8:	81 11       	cpse	r24, r1
    2eca:	b3 c0       	rjmp	.+358    	; 0x3032 <f_sync+0x178>
    2ecc:	8c 81       	ldd	r24, Y+4	; 0x04
    2ece:	85 ff       	sbrs	r24, 5
    2ed0:	b2 c0       	rjmp	.+356    	; 0x3036 <f_sync+0x17c>
    2ed2:	86 ff       	sbrs	r24, 6
    2ed4:	13 c0       	rjmp	.+38     	; 0x2efc <f_sync+0x42>
    2ed6:	2e 89       	ldd	r18, Y+22	; 0x16
    2ed8:	3f 89       	ldd	r19, Y+23	; 0x17
    2eda:	48 8d       	ldd	r20, Y+24	; 0x18
    2edc:	59 8d       	ldd	r21, Y+25	; 0x19
    2ede:	e8 81       	ld	r30, Y
    2ee0:	f9 81       	ldd	r31, Y+1	; 0x01
    2ee2:	01 e0       	ldi	r16, 0x01	; 1
    2ee4:	10 e0       	ldi	r17, 0x00	; 0
    2ee6:	be 01       	movw	r22, r28
    2ee8:	60 5e       	subi	r22, 0xE0	; 224
    2eea:	7f 4f       	sbci	r23, 0xFF	; 255
    2eec:	81 81       	ldd	r24, Z+1	; 0x01
    2eee:	0e 94 b8 03 	call	0x770	; 0x770 <disk_write>
    2ef2:	81 11       	cpse	r24, r1
    2ef4:	a2 c0       	rjmp	.+324    	; 0x303a <f_sync+0x180>
    2ef6:	8c 81       	ldd	r24, Y+4	; 0x04
    2ef8:	8f 7b       	andi	r24, 0xBF	; 191
    2efa:	8c 83       	std	Y+4, r24	; 0x04
    2efc:	4a 8d       	ldd	r20, Y+26	; 0x1a
    2efe:	5b 8d       	ldd	r21, Y+27	; 0x1b
    2f00:	6c 8d       	ldd	r22, Y+28	; 0x1c
    2f02:	7d 8d       	ldd	r23, Y+29	; 0x1d
    2f04:	88 81       	ld	r24, Y
    2f06:	99 81       	ldd	r25, Y+1	; 0x01
    2f08:	0e 94 aa 07 	call	0xf54	; 0xf54 <move_window>
    2f0c:	81 11       	cpse	r24, r1
    2f0e:	97 c0       	rjmp	.+302    	; 0x303e <f_sync+0x184>
    2f10:	ee 8d       	ldd	r30, Y+30	; 0x1e
    2f12:	ff 8d       	ldd	r31, Y+31	; 0x1f
    2f14:	83 85       	ldd	r24, Z+11	; 0x0b
    2f16:	80 62       	ori	r24, 0x20	; 32
    2f18:	83 87       	std	Z+11, r24	; 0x0b
    2f1a:	8a 85       	ldd	r24, Y+10	; 0x0a
    2f1c:	84 8f       	std	Z+28, r24	; 0x1c
    2f1e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f20:	85 8f       	std	Z+29, r24	; 0x1d
    2f22:	8c 85       	ldd	r24, Y+12	; 0x0c
    2f24:	86 8f       	std	Z+30, r24	; 0x1e
    2f26:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f28:	87 8f       	std	Z+31, r24	; 0x1f
    2f2a:	8e 85       	ldd	r24, Y+14	; 0x0e
    2f2c:	9f 85       	ldd	r25, Y+15	; 0x0f
    2f2e:	a8 89       	ldd	r26, Y+16	; 0x10
    2f30:	b9 89       	ldd	r27, Y+17	; 0x11
    2f32:	82 8f       	std	Z+26, r24	; 0x1a
    2f34:	93 8f       	std	Z+27, r25	; 0x1b
    2f36:	cd 01       	movw	r24, r26
    2f38:	aa 27       	eor	r26, r26
    2f3a:	bb 27       	eor	r27, r27
    2f3c:	84 8b       	std	Z+20, r24	; 0x14
    2f3e:	95 8b       	std	Z+21, r25	; 0x15
    2f40:	16 8a       	std	Z+22, r1	; 0x16
    2f42:	17 8a       	std	Z+23, r1	; 0x17
    2f44:	81 e2       	ldi	r24, 0x21	; 33
    2f46:	80 8f       	std	Z+24, r24	; 0x18
    2f48:	86 e4       	ldi	r24, 0x46	; 70
    2f4a:	81 8f       	std	Z+25, r24	; 0x19
    2f4c:	12 8a       	std	Z+18, r1	; 0x12
    2f4e:	13 8a       	std	Z+19, r1	; 0x13
    2f50:	8c 81       	ldd	r24, Y+4	; 0x04
    2f52:	8f 7d       	andi	r24, 0xDF	; 223
    2f54:	8c 83       	std	Y+4, r24	; 0x04
    2f56:	e8 81       	ld	r30, Y
    2f58:	f9 81       	ldd	r31, Y+1	; 0x01
    2f5a:	81 e0       	ldi	r24, 0x01	; 1
    2f5c:	84 83       	std	Z+4, r24	; 0x04
    2f5e:	09 90       	ld	r0, Y+
    2f60:	d8 81       	ld	r29, Y
    2f62:	c0 2d       	mov	r28, r0
    2f64:	ce 01       	movw	r24, r28
    2f66:	0e 94 41 07 	call	0xe82	; 0xe82 <sync_window>
    2f6a:	81 11       	cpse	r24, r1
    2f6c:	6a c0       	rjmp	.+212    	; 0x3042 <f_sync+0x188>
    2f6e:	88 81       	ld	r24, Y
    2f70:	83 30       	cpi	r24, 0x03	; 3
    2f72:	09 f0       	breq	.+2      	; 0x2f76 <f_sync+0xbc>
    2f74:	53 c0       	rjmp	.+166    	; 0x301c <f_sync+0x162>
    2f76:	8d 81       	ldd	r24, Y+5	; 0x05
    2f78:	81 30       	cpi	r24, 0x01	; 1
    2f7a:	09 f0       	breq	.+2      	; 0x2f7e <f_sync+0xc4>
    2f7c:	4f c0       	rjmp	.+158    	; 0x301c <f_sync+0x162>
    2f7e:	be 01       	movw	r22, r28
    2f80:	62 5d       	subi	r22, 0xD2	; 210
    2f82:	7f 4f       	sbci	r23, 0xFF	; 255
    2f84:	fb 01       	movw	r30, r22
    2f86:	ce 01       	movw	r24, r28
    2f88:	82 5d       	subi	r24, 0xD2	; 210
    2f8a:	9d 4f       	sbci	r25, 0xFD	; 253
    2f8c:	11 92       	st	Z+, r1
    2f8e:	e8 17       	cp	r30, r24
    2f90:	f9 07       	cpc	r31, r25
    2f92:	e1 f7       	brne	.-8      	; 0x2f8c <f_sync+0xd2>
    2f94:	85 e5       	ldi	r24, 0x55	; 85
    2f96:	fe 01       	movw	r30, r28
    2f98:	e4 5d       	subi	r30, 0xD4	; 212
    2f9a:	fd 4f       	sbci	r31, 0xFD	; 253
    2f9c:	80 83       	st	Z, r24
    2f9e:	8a ea       	ldi	r24, 0xAA	; 170
    2fa0:	31 96       	adiw	r30, 0x01	; 1
    2fa2:	80 83       	st	Z, r24
    2fa4:	82 e5       	ldi	r24, 0x52	; 82
    2fa6:	8e a7       	std	Y+46, r24	; 0x2e
    2fa8:	8f a7       	std	Y+47, r24	; 0x2f
    2faa:	81 e6       	ldi	r24, 0x61	; 97
    2fac:	88 ab       	std	Y+48, r24	; 0x30
    2fae:	91 e4       	ldi	r25, 0x41	; 65
    2fb0:	99 ab       	std	Y+49, r25	; 0x31
    2fb2:	22 e7       	ldi	r18, 0x72	; 114
    2fb4:	7b 97       	sbiw	r30, 0x1b	; 27
    2fb6:	20 83       	st	Z, r18
    2fb8:	31 96       	adiw	r30, 0x01	; 1
    2fba:	20 83       	st	Z, r18
    2fbc:	31 96       	adiw	r30, 0x01	; 1
    2fbe:	90 83       	st	Z, r25
    2fc0:	31 96       	adiw	r30, 0x01	; 1
    2fc2:	80 83       	st	Z, r24
    2fc4:	3e 85       	ldd	r19, Y+14	; 0x0e
    2fc6:	2f 85       	ldd	r18, Y+15	; 0x0f
    2fc8:	98 89       	ldd	r25, Y+16	; 0x10
    2fca:	89 89       	ldd	r24, Y+17	; 0x11
    2fcc:	31 96       	adiw	r30, 0x01	; 1
    2fce:	30 83       	st	Z, r19
    2fd0:	31 96       	adiw	r30, 0x01	; 1
    2fd2:	20 83       	st	Z, r18
    2fd4:	31 96       	adiw	r30, 0x01	; 1
    2fd6:	90 83       	st	Z, r25
    2fd8:	31 96       	adiw	r30, 0x01	; 1
    2fda:	80 83       	st	Z, r24
    2fdc:	3a 85       	ldd	r19, Y+10	; 0x0a
    2fde:	2b 85       	ldd	r18, Y+11	; 0x0b
    2fe0:	9c 85       	ldd	r25, Y+12	; 0x0c
    2fe2:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fe4:	31 96       	adiw	r30, 0x01	; 1
    2fe6:	30 83       	st	Z, r19
    2fe8:	31 96       	adiw	r30, 0x01	; 1
    2fea:	20 83       	st	Z, r18
    2fec:	31 96       	adiw	r30, 0x01	; 1
    2fee:	90 83       	st	Z, r25
    2ff0:	31 96       	adiw	r30, 0x01	; 1
    2ff2:	80 83       	st	Z, r24
    2ff4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2ff6:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2ff8:	ac 8d       	ldd	r26, Y+28	; 0x1c
    2ffa:	bd 8d       	ldd	r27, Y+29	; 0x1d
    2ffc:	9c 01       	movw	r18, r24
    2ffe:	ad 01       	movw	r20, r26
    3000:	2f 5f       	subi	r18, 0xFF	; 255
    3002:	3f 4f       	sbci	r19, 0xFF	; 255
    3004:	4f 4f       	sbci	r20, 0xFF	; 255
    3006:	5f 4f       	sbci	r21, 0xFF	; 255
    3008:	2a a7       	std	Y+42, r18	; 0x2a
    300a:	3b a7       	std	Y+43, r19	; 0x2b
    300c:	4c a7       	std	Y+44, r20	; 0x2c
    300e:	5d a7       	std	Y+45, r21	; 0x2d
    3010:	01 e0       	ldi	r16, 0x01	; 1
    3012:	10 e0       	ldi	r17, 0x00	; 0
    3014:	89 81       	ldd	r24, Y+1	; 0x01
    3016:	0e 94 b8 03 	call	0x770	; 0x770 <disk_write>
    301a:	1d 82       	std	Y+5, r1	; 0x05
    301c:	40 e0       	ldi	r20, 0x00	; 0
    301e:	50 e0       	ldi	r21, 0x00	; 0
    3020:	60 e0       	ldi	r22, 0x00	; 0
    3022:	89 81       	ldd	r24, Y+1	; 0x01
    3024:	0e 94 26 04 	call	0x84c	; 0x84c <disk_ioctl>
    3028:	91 e0       	ldi	r25, 0x01	; 1
    302a:	81 11       	cpse	r24, r1
    302c:	0b c0       	rjmp	.+22     	; 0x3044 <f_sync+0x18a>
    302e:	90 e0       	ldi	r25, 0x00	; 0
    3030:	09 c0       	rjmp	.+18     	; 0x3044 <f_sync+0x18a>
    3032:	98 2f       	mov	r25, r24
    3034:	07 c0       	rjmp	.+14     	; 0x3044 <f_sync+0x18a>
    3036:	90 e0       	ldi	r25, 0x00	; 0
    3038:	05 c0       	rjmp	.+10     	; 0x3044 <f_sync+0x18a>
    303a:	91 e0       	ldi	r25, 0x01	; 1
    303c:	03 c0       	rjmp	.+6      	; 0x3044 <f_sync+0x18a>
    303e:	98 2f       	mov	r25, r24
    3040:	01 c0       	rjmp	.+2      	; 0x3044 <f_sync+0x18a>
    3042:	98 2f       	mov	r25, r24
    3044:	89 2f       	mov	r24, r25
    3046:	df 91       	pop	r29
    3048:	cf 91       	pop	r28
    304a:	1f 91       	pop	r17
    304c:	0f 91       	pop	r16
    304e:	08 95       	ret

00003050 <f_close>:
    3050:	cf 93       	push	r28
    3052:	df 93       	push	r29
    3054:	ec 01       	movw	r28, r24
    3056:	31 df       	rcall	.-414    	; 0x2eba <f_sync>
    3058:	81 11       	cpse	r24, r1
    305a:	07 c0       	rjmp	.+14     	; 0x306a <f_close+0x1a>
    305c:	ce 01       	movw	r24, r28
    305e:	0e 94 4e 08 	call	0x109c	; 0x109c <validate>
    3062:	81 11       	cpse	r24, r1
    3064:	02 c0       	rjmp	.+4      	; 0x306a <f_close+0x1a>
    3066:	19 82       	std	Y+1, r1	; 0x01
    3068:	18 82       	st	Y, r1
    306a:	df 91       	pop	r29
    306c:	cf 91       	pop	r28
    306e:	08 95       	ret

00003070 <f_printf>:
int f_printf (
	FIL* fp,			/* Pointer to the file object */
	const TCHAR* fmt,	/* Pointer to the format string */
	...					/* Optional arguments... */
)
{
    3070:	2f 92       	push	r2
    3072:	3f 92       	push	r3
    3074:	4f 92       	push	r4
    3076:	5f 92       	push	r5
    3078:	6f 92       	push	r6
    307a:	7f 92       	push	r7
    307c:	8f 92       	push	r8
    307e:	9f 92       	push	r9
    3080:	af 92       	push	r10
    3082:	bf 92       	push	r11
    3084:	cf 92       	push	r12
    3086:	df 92       	push	r13
    3088:	ef 92       	push	r14
    308a:	ff 92       	push	r15
    308c:	0f 93       	push	r16
    308e:	1f 93       	push	r17
    3090:	cf 93       	push	r28
    3092:	df 93       	push	r29
    3094:	cd b7       	in	r28, 0x3d	; 61
    3096:	de b7       	in	r29, 0x3e	; 62
    3098:	cc 55       	subi	r28, 0x5C	; 92
    309a:	d1 09       	sbc	r29, r1
    309c:	0f b6       	in	r0, 0x3f	; 63
    309e:	f8 94       	cli
    30a0:	de bf       	out	0x3e, r29	; 62
    30a2:	0f be       	out	0x3f, r0	; 63
    30a4:	cd bf       	out	0x3d, r28	; 61
    30a6:	e5 96       	adiw	r28, 0x35	; 53
    30a8:	ee ac       	ldd	r14, Y+62	; 0x3e
    30aa:	ff ac       	ldd	r15, Y+63	; 0x3f
    30ac:	e5 97       	sbiw	r28, 0x35	; 53
	DWORD v;
	TCHAR c, d, s[16], *p;
	putbuff pb;


	pb.fp = fp;				/* Initialize output buffer */
    30ae:	e3 96       	adiw	r28, 0x33	; 51
    30b0:	8e ad       	ldd	r24, Y+62	; 0x3e
    30b2:	9f ad       	ldd	r25, Y+63	; 0x3f
    30b4:	e3 97       	sbiw	r28, 0x33	; 51
    30b6:	9c 8b       	std	Y+20, r25	; 0x14
    30b8:	8b 8b       	std	Y+19, r24	; 0x13
	pb.nchr = pb.idx = 0;
    30ba:	1e 8a       	std	Y+22, r1	; 0x16
    30bc:	1d 8a       	std	Y+21, r1	; 0x15
    30be:	18 8e       	std	Y+24, r1	; 0x18
    30c0:	1f 8a       	std	Y+23, r1	; 0x17

	va_start(arp, fmt);
    30c2:	2e 01       	movw	r4, r28
    30c4:	25 e7       	ldi	r18, 0x75	; 117
    30c6:	42 0e       	add	r4, r18
    30c8:	51 1c       	adc	r5, r1
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
		if (d == 'D' && (v & 0x80000000)) {
			v = 0 - v;
			f |= 8;
		}
		i = 0;
    30ca:	21 2c       	mov	r2, r1
		do {
			d = (TCHAR)(v % r); v /= r;
			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
    30cc:	0f 2e       	mov	r0, r31
    30ce:	f7 e0       	ldi	r31, 0x07	; 7
    30d0:	3f 2e       	mov	r3, r31
    30d2:	f0 2d       	mov	r31, r0
	pb.nchr = pb.idx = 0;

	va_start(arp, fmt);

	for (;;) {
		c = *fmt++;
    30d4:	d7 01       	movw	r26, r14
    30d6:	6c 91       	ld	r22, X
		if (c == 0) break;			/* End of string */
    30d8:	66 23       	and	r22, r22
    30da:	09 f4       	brne	.+2      	; 0x30de <f_printf+0x6e>
    30dc:	8c c1       	rjmp	.+792    	; 0x33f6 <f_printf+0x386>
		if (c != '%') {				/* Non escape character */
    30de:	65 32       	cpi	r22, 0x25	; 37
    30e0:	39 f0       	breq	.+14     	; 0x30f0 <f_printf+0x80>
	pb.nchr = pb.idx = 0;

	va_start(arp, fmt);

	for (;;) {
		c = *fmt++;
    30e2:	bf ef       	ldi	r27, 0xFF	; 255
    30e4:	eb 1a       	sub	r14, r27
    30e6:	fb 0a       	sbc	r15, r27
		if (c == 0) break;			/* End of string */
		if (c != '%') {				/* Non escape character */
			putc_bfd(&pb, c);
    30e8:	ce 01       	movw	r24, r28
    30ea:	43 96       	adiw	r24, 0x13	; 19
    30ec:	a2 de       	rcall	.-700    	; 0x2e32 <putc_bfd>
			continue;
    30ee:	f2 cf       	rjmp	.-28     	; 0x30d4 <f_printf+0x64>
		}
		w = f = 0;
		c = *fmt++;
    30f0:	f7 01       	movw	r30, r14
    30f2:	d1 80       	ldd	r13, Z+1	; 0x01
		if (c == '0') {				/* Flag: '0' padding */
    30f4:	f0 e3       	ldi	r31, 0x30	; 48
    30f6:	df 12       	cpse	r13, r31
    30f8:	09 c0       	rjmp	.+18     	; 0x310c <f_printf+0x9c>
			f = 1; c = *fmt++;
    30fa:	d7 01       	movw	r26, r14
    30fc:	12 96       	adiw	r26, 0x02	; 2
    30fe:	dc 90       	ld	r13, X
    3100:	f7 01       	movw	r30, r14
    3102:	33 96       	adiw	r30, 0x03	; 3
    3104:	7f 01       	movw	r14, r30
    3106:	77 24       	eor	r7, r7
    3108:	73 94       	inc	r7
    310a:	11 c0       	rjmp	.+34     	; 0x312e <f_printf+0xbe>
		} else {
			if (c == '-') {			/* Flag: left justified */
    310c:	fd e2       	ldi	r31, 0x2D	; 45
    310e:	df 16       	cp	r13, r31
    3110:	29 f0       	breq	.+10     	; 0x311c <f_printf+0xac>
		if (c != '%') {				/* Non escape character */
			putc_bfd(&pb, c);
			continue;
		}
		w = f = 0;
		c = *fmt++;
    3112:	22 e0       	ldi	r18, 0x02	; 2
    3114:	e2 0e       	add	r14, r18
    3116:	f1 1c       	adc	r15, r1
		if (c == 0) break;			/* End of string */
		if (c != '%') {				/* Non escape character */
			putc_bfd(&pb, c);
			continue;
		}
		w = f = 0;
    3118:	71 2c       	mov	r7, r1
    311a:	09 c0       	rjmp	.+18     	; 0x312e <f_printf+0xbe>
		c = *fmt++;
		if (c == '0') {				/* Flag: '0' padding */
			f = 1; c = *fmt++;
		} else {
			if (c == '-') {			/* Flag: left justified */
				f = 2; c = *fmt++;
    311c:	d7 01       	movw	r26, r14
    311e:	12 96       	adiw	r26, 0x02	; 2
    3120:	dc 90       	ld	r13, X
    3122:	f7 01       	movw	r30, r14
    3124:	33 96       	adiw	r30, 0x03	; 3
    3126:	7f 01       	movw	r14, r30
    3128:	68 94       	set
    312a:	77 24       	eor	r7, r7
    312c:	71 f8       	bld	r7, 1
			}
		}
		while (IsDigit(c)) {		/* Precision */
    312e:	80 ed       	ldi	r24, 0xD0	; 208
    3130:	8d 0d       	add	r24, r13
    3132:	8a 30       	cpi	r24, 0x0A	; 10
    3134:	f0 f4       	brcc	.+60     	; 0x3172 <f_printf+0x102>
    3136:	02 2d       	mov	r16, r2
    3138:	10 e0       	ldi	r17, 0x00	; 0
    313a:	8d 2d       	mov	r24, r13
			w = w * 10 + c - '0';
    313c:	98 01       	movw	r18, r16
    313e:	22 0f       	add	r18, r18
    3140:	33 1f       	adc	r19, r19
    3142:	00 0f       	add	r16, r16
    3144:	11 1f       	adc	r17, r17
    3146:	00 0f       	add	r16, r16
    3148:	11 1f       	adc	r17, r17
    314a:	00 0f       	add	r16, r16
    314c:	11 1f       	adc	r17, r17
    314e:	02 0f       	add	r16, r18
    3150:	13 1f       	adc	r17, r19
    3152:	08 0f       	add	r16, r24
    3154:	11 1d       	adc	r17, r1
    3156:	00 53       	subi	r16, 0x30	; 48
    3158:	11 09       	sbc	r17, r1
			c = *fmt++;
    315a:	ff ef       	ldi	r31, 0xFF	; 255
    315c:	ef 1a       	sub	r14, r31
    315e:	ff 0a       	sbc	r15, r31
    3160:	f7 01       	movw	r30, r14
    3162:	31 97       	sbiw	r30, 0x01	; 1
    3164:	80 81       	ld	r24, Z
		} else {
			if (c == '-') {			/* Flag: left justified */
				f = 2; c = *fmt++;
			}
		}
		while (IsDigit(c)) {		/* Precision */
    3166:	90 ed       	ldi	r25, 0xD0	; 208
    3168:	98 0f       	add	r25, r24
    316a:	9a 30       	cpi	r25, 0x0A	; 10
    316c:	38 f3       	brcs	.-50     	; 0x313c <f_printf+0xcc>
    316e:	d8 2e       	mov	r13, r24
    3170:	02 c0       	rjmp	.+4      	; 0x3176 <f_printf+0x106>
    3172:	02 2d       	mov	r16, r2
    3174:	10 e0       	ldi	r17, 0x00	; 0
			w = w * 10 + c - '0';
			c = *fmt++;
		}
		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
    3176:	8d 2d       	mov	r24, r13
    3178:	8f 7d       	andi	r24, 0xDF	; 223
    317a:	8c 34       	cpi	r24, 0x4C	; 76
    317c:	41 f4       	brne	.+16     	; 0x318e <f_printf+0x11e>
			f |= 4; c = *fmt++;
    317e:	27 2d       	mov	r18, r7
    3180:	24 60       	ori	r18, 0x04	; 4
    3182:	72 2e       	mov	r7, r18
    3184:	d7 01       	movw	r26, r14
    3186:	dc 90       	ld	r13, X
    3188:	f7 01       	movw	r30, r14
    318a:	31 96       	adiw	r30, 0x01	; 1
    318c:	7f 01       	movw	r14, r30
		}
		if (!c) break;
    318e:	dd 20       	and	r13, r13
    3190:	09 f4       	brne	.+2      	; 0x3194 <f_printf+0x124>
    3192:	31 c1       	rjmp	.+610    	; 0x33f6 <f_printf+0x386>
		d = c;
		if (IsLower(d)) d -= 0x20;
    3194:	8f e9       	ldi	r24, 0x9F	; 159
    3196:	8d 0d       	add	r24, r13
    3198:	8a 31       	cpi	r24, 0x1A	; 26
    319a:	18 f4       	brcc	.+6      	; 0x31a2 <f_printf+0x132>
    319c:	30 ee       	ldi	r19, 0xE0	; 224
    319e:	3d 0d       	add	r19, r13
    31a0:	01 c0       	rjmp	.+2      	; 0x31a4 <f_printf+0x134>
		}
		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
			f |= 4; c = *fmt++;
		}
		if (!c) break;
		d = c;
    31a2:	3d 2d       	mov	r19, r13
		if (IsLower(d)) d -= 0x20;
		switch (d) {				/* Type is... */
    31a4:	83 2f       	mov	r24, r19
    31a6:	90 e0       	ldi	r25, 0x00	; 0
    31a8:	fc 01       	movw	r30, r24
    31aa:	e2 54       	subi	r30, 0x42	; 66
    31ac:	f1 09       	sbc	r31, r1
    31ae:	e7 31       	cpi	r30, 0x17	; 23
    31b0:	f1 05       	cpc	r31, r1
    31b2:	08 f0       	brcs	.+2      	; 0x31b6 <f_printf+0x146>
    31b4:	57 c0       	rjmp	.+174    	; 0x3264 <f_printf+0x1f4>
    31b6:	e3 58       	subi	r30, 0x83	; 131
    31b8:	ff 4f       	sbci	r31, 0xFF	; 255
    31ba:	cd c3       	rjmp	.+1946   	; 0x3956 <__tablejump2__>
		case 'S' :					/* String */
			p = va_arg(arp, TCHAR*);
    31bc:	f2 01       	movw	r30, r4
    31be:	a0 80       	ld	r10, Z
    31c0:	b1 80       	ldd	r11, Z+1	; 0x01
    31c2:	f2 e0       	ldi	r31, 0x02	; 2
    31c4:	4f 0e       	add	r4, r31
    31c6:	51 1c       	adc	r5, r1
			for (j = 0; p[j]; j++) ;
    31c8:	d5 01       	movw	r26, r10
    31ca:	6c 91       	ld	r22, X
    31cc:	66 23       	and	r22, r22
    31ce:	09 f4       	brne	.+2      	; 0x31d2 <f_printf+0x162>
    31d0:	37 c1       	rjmp	.+622    	; 0x3440 <f_printf+0x3d0>
    31d2:	f5 01       	movw	r30, r10
    31d4:	31 96       	adiw	r30, 0x01	; 1
    31d6:	c2 2c       	mov	r12, r2
    31d8:	d1 2c       	mov	r13, r1
    31da:	bf ef       	ldi	r27, 0xFF	; 255
    31dc:	cb 1a       	sub	r12, r27
    31de:	db 0a       	sbc	r13, r27
    31e0:	81 91       	ld	r24, Z+
    31e2:	81 11       	cpse	r24, r1
    31e4:	fa cf       	rjmp	.-12     	; 0x31da <f_printf+0x16a>
    31e6:	29 c1       	rjmp	.+594    	; 0x343a <f_printf+0x3ca>
    31e8:	c2 2c       	mov	r12, r2
    31ea:	d1 2c       	mov	r13, r1
			if (!(f & 2)) {
				while (j++ < w) putc_bfd(&pb, ' ');
    31ec:	66 24       	eor	r6, r6
    31ee:	63 94       	inc	r6
    31f0:	71 2c       	mov	r7, r1
    31f2:	46 01       	movw	r8, r12
    31f4:	60 e2       	ldi	r22, 0x20	; 32
    31f6:	ce 01       	movw	r24, r28
    31f8:	43 96       	adiw	r24, 0x13	; 19
    31fa:	1b de       	rcall	.-970    	; 0x2e32 <putc_bfd>
    31fc:	ef ef       	ldi	r30, 0xFF	; 255
    31fe:	8e 1a       	sub	r8, r30
    3200:	9e 0a       	sbc	r9, r30
    3202:	80 16       	cp	r8, r16
    3204:	91 06       	cpc	r9, r17
    3206:	b0 f3       	brcs	.-20     	; 0x31f4 <f_printf+0x184>
    3208:	93 01       	movw	r18, r6
    320a:	2c 19       	sub	r18, r12
    320c:	3d 09       	sbc	r19, r13
    320e:	69 01       	movw	r12, r18
    3210:	c0 0e       	add	r12, r16
    3212:	d1 1e       	adc	r13, r17
			}
			while (*p) putc_bfd(&pb, *p++);
    3214:	d5 01       	movw	r26, r10
    3216:	6c 91       	ld	r22, X
    3218:	66 23       	and	r22, r22
    321a:	59 f0       	breq	.+22     	; 0x3232 <f_printf+0x1c2>
    321c:	bf ef       	ldi	r27, 0xFF	; 255
    321e:	ab 1a       	sub	r10, r27
    3220:	bb 0a       	sbc	r11, r27
    3222:	ce 01       	movw	r24, r28
    3224:	43 96       	adiw	r24, 0x13	; 19
    3226:	05 de       	rcall	.-1014   	; 0x2e32 <putc_bfd>
    3228:	f5 01       	movw	r30, r10
    322a:	61 91       	ld	r22, Z+
    322c:	5f 01       	movw	r10, r30
    322e:	61 11       	cpse	r22, r1
    3230:	f8 cf       	rjmp	.-16     	; 0x3222 <f_printf+0x1b2>
			while (j++ < w) putc_bfd(&pb, ' ');
    3232:	c0 16       	cp	r12, r16
    3234:	d1 06       	cpc	r13, r17
    3236:	08 f0       	brcs	.+2      	; 0x323a <f_printf+0x1ca>
    3238:	4d cf       	rjmp	.-358    	; 0x30d4 <f_printf+0x64>
    323a:	60 e2       	ldi	r22, 0x20	; 32
    323c:	ce 01       	movw	r24, r28
    323e:	43 96       	adiw	r24, 0x13	; 19
    3240:	f8 dd       	rcall	.-1040   	; 0x2e32 <putc_bfd>
    3242:	ff ef       	ldi	r31, 0xFF	; 255
    3244:	cf 1a       	sub	r12, r31
    3246:	df 0a       	sbc	r13, r31
    3248:	c0 16       	cp	r12, r16
    324a:	d1 06       	cpc	r13, r17
    324c:	b0 f3       	brcs	.-20     	; 0x323a <f_printf+0x1ca>
    324e:	42 cf       	rjmp	.-380    	; 0x30d4 <f_printf+0x64>
			continue;
		case 'C' :					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
    3250:	82 01       	movw	r16, r4
    3252:	0e 5f       	subi	r16, 0xFE	; 254
    3254:	1f 4f       	sbci	r17, 0xFF	; 255
    3256:	d2 01       	movw	r26, r4
    3258:	6c 91       	ld	r22, X
    325a:	ce 01       	movw	r24, r28
    325c:	43 96       	adiw	r24, 0x13	; 19
    325e:	e9 dd       	rcall	.-1070   	; 0x2e32 <putc_bfd>
    3260:	28 01       	movw	r4, r16
    3262:	38 cf       	rjmp	.-400    	; 0x30d4 <f_printf+0x64>
		case 'U' :					/* Unsigned decimal */
			r = 10; break;
		case 'X' :					/* Hexdecimal */
			r = 16; break;
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
    3264:	6d 2d       	mov	r22, r13
    3266:	ce 01       	movw	r24, r28
    3268:	43 96       	adiw	r24, 0x13	; 19
    326a:	e3 dd       	rcall	.-1082   	; 0x2e32 <putc_bfd>
    326c:	33 cf       	rjmp	.-410    	; 0x30d4 <f_printf+0x64>
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    326e:	72 fe       	sbrs	r7, 2
    3270:	0e c0       	rjmp	.+28     	; 0x328e <f_printf+0x21e>
			r = 2; break;
		case 'O' :					/* Octal */
			r = 8; break;
		case 'D' :					/* Signed decimal */
		case 'U' :					/* Unsigned decimal */
			r = 10; break;
    3272:	aa e0       	ldi	r26, 0x0A	; 10
    3274:	01 c0       	rjmp	.+2      	; 0x3278 <f_printf+0x208>
		case 'X' :					/* Hexdecimal */
			r = 16; break;
    3276:	a0 e1       	ldi	r26, 0x10	; 16
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    3278:	f2 01       	movw	r30, r4
    327a:	60 81       	ld	r22, Z
    327c:	71 81       	ldd	r23, Z+1	; 0x01
    327e:	82 81       	ldd	r24, Z+2	; 0x02
    3280:	93 81       	ldd	r25, Z+3	; 0x03
    3282:	b4 e0       	ldi	r27, 0x04	; 4
    3284:	4b 0e       	add	r4, r27
    3286:	51 1c       	adc	r5, r1
		if (d == 'D' && (v & 0x80000000)) {
    3288:	34 34       	cpi	r19, 0x44	; 68
    328a:	31 f5       	brne	.+76     	; 0x32d8 <f_printf+0x268>
    328c:	19 c0       	rjmp	.+50     	; 0x32c0 <f_printf+0x250>
			r = 2; break;
		case 'O' :					/* Octal */
			r = 8; break;
		case 'D' :					/* Signed decimal */
		case 'U' :					/* Unsigned decimal */
			r = 10; break;
    328e:	aa e0       	ldi	r26, 0x0A	; 10
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    3290:	34 34       	cpi	r19, 0x44	; 68
    3292:	61 f4       	brne	.+24     	; 0x32ac <f_printf+0x23c>
    3294:	f2 01       	movw	r30, r4
    3296:	60 81       	ld	r22, Z
    3298:	71 81       	ldd	r23, Z+1	; 0x01
    329a:	07 2e       	mov	r0, r23
    329c:	00 0c       	add	r0, r0
    329e:	88 0b       	sbc	r24, r24
    32a0:	99 0b       	sbc	r25, r25
    32a2:	92 01       	movw	r18, r4
    32a4:	2e 5f       	subi	r18, 0xFE	; 254
    32a6:	3f 4f       	sbci	r19, 0xFF	; 255
    32a8:	29 01       	movw	r4, r18
    32aa:	0a c0       	rjmp	.+20     	; 0x32c0 <f_printf+0x250>
    32ac:	f2 01       	movw	r30, r4
    32ae:	60 81       	ld	r22, Z
    32b0:	71 81       	ldd	r23, Z+1	; 0x01
    32b2:	80 e0       	ldi	r24, 0x00	; 0
    32b4:	90 e0       	ldi	r25, 0x00	; 0
    32b6:	92 01       	movw	r18, r4
    32b8:	2e 5f       	subi	r18, 0xFE	; 254
    32ba:	3f 4f       	sbci	r19, 0xFF	; 255
    32bc:	29 01       	movw	r4, r18
    32be:	0c c0       	rjmp	.+24     	; 0x32d8 <f_printf+0x268>
		if (d == 'D' && (v & 0x80000000)) {
    32c0:	99 23       	and	r25, r25
    32c2:	54 f4       	brge	.+20     	; 0x32d8 <f_printf+0x268>
			v = 0 - v;
    32c4:	90 95       	com	r25
    32c6:	80 95       	com	r24
    32c8:	70 95       	com	r23
    32ca:	61 95       	neg	r22
    32cc:	7f 4f       	sbci	r23, 0xFF	; 255
    32ce:	8f 4f       	sbci	r24, 0xFF	; 255
    32d0:	9f 4f       	sbci	r25, 0xFF	; 255
			f |= 8;
    32d2:	37 2d       	mov	r19, r7
    32d4:	38 60       	ori	r19, 0x08	; 8
    32d6:	73 2e       	mov	r7, r19
    32d8:	ae 01       	movw	r20, r28
    32da:	4d 5f       	subi	r20, 0xFD	; 253
    32dc:	5f 4f       	sbci	r21, 0xFF	; 255
    32de:	5a 01       	movw	r10, r20
		}
		i = 0;
    32e0:	82 2c       	mov	r8, r2
    32e2:	91 2c       	mov	r9, r1
		do {
			d = (TCHAR)(v % r); v /= r;
    32e4:	2a 2f       	mov	r18, r26
    32e6:	30 e0       	ldi	r19, 0x00	; 0
    32e8:	40 e0       	ldi	r20, 0x00	; 0
    32ea:	50 e0       	ldi	r21, 0x00	; 0
    32ec:	6d 96       	adiw	r28, 0x1d	; 29
    32ee:	2c af       	std	Y+60, r18	; 0x3c
    32f0:	3d af       	std	Y+61, r19	; 0x3d
    32f2:	4e af       	std	Y+62, r20	; 0x3e
    32f4:	5f af       	std	Y+63, r21	; 0x3f
    32f6:	6d 97       	sbiw	r28, 0x1d	; 29
    32f8:	97 01       	movw	r18, r14
    32fa:	78 01       	movw	r14, r16
    32fc:	1d 2d       	mov	r17, r13
    32fe:	69 01       	movw	r12, r18
    3300:	6d 96       	adiw	r28, 0x1d	; 29
    3302:	2c ad       	ldd	r18, Y+60	; 0x3c
    3304:	3d ad       	ldd	r19, Y+61	; 0x3d
    3306:	4e ad       	ldd	r20, Y+62	; 0x3e
    3308:	5f ad       	ldd	r21, Y+63	; 0x3f
    330a:	6d 97       	sbiw	r28, 0x1d	; 29
    330c:	02 d3       	rcall	.+1540   	; 0x3912 <__udivmodsi4>
    330e:	f6 2f       	mov	r31, r22
    3310:	e6 2f       	mov	r30, r22
    3312:	62 2f       	mov	r22, r18
    3314:	73 2f       	mov	r23, r19
    3316:	84 2f       	mov	r24, r20
    3318:	95 2f       	mov	r25, r21
			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
    331a:	fa 30       	cpi	r31, 0x0A	; 10
    331c:	30 f0       	brcs	.+12     	; 0x332a <f_printf+0x2ba>
    331e:	18 37       	cpi	r17, 0x78	; 120
    3320:	11 f0       	breq	.+4      	; 0x3326 <f_printf+0x2b6>
    3322:	e3 2d       	mov	r30, r3
    3324:	01 c0       	rjmp	.+2      	; 0x3328 <f_printf+0x2b8>
    3326:	e7 e2       	ldi	r30, 0x27	; 39
    3328:	ef 0f       	add	r30, r31
			s[i++] = d + '0';
    332a:	3f ef       	ldi	r19, 0xFF	; 255
    332c:	83 1a       	sub	r8, r19
    332e:	93 0a       	sbc	r9, r19
    3330:	e0 5d       	subi	r30, 0xD0	; 208
    3332:	d5 01       	movw	r26, r10
    3334:	ed 93       	st	X+, r30
    3336:	5d 01       	movw	r10, r26
		} while (v && i < sizeof s / sizeof s[0]);
    3338:	61 15       	cp	r22, r1
    333a:	71 05       	cpc	r23, r1
    333c:	81 05       	cpc	r24, r1
    333e:	91 05       	cpc	r25, r1
    3340:	21 f0       	breq	.+8      	; 0x334a <f_printf+0x2da>
    3342:	b0 e1       	ldi	r27, 0x10	; 16
    3344:	8b 16       	cp	r8, r27
    3346:	91 04       	cpc	r9, r1
    3348:	d9 f6       	brne	.-74     	; 0x3300 <f_printf+0x290>
    334a:	87 01       	movw	r16, r14
    334c:	76 01       	movw	r14, r12
		if (f & 8) s[i++] = '-';
    334e:	73 fe       	sbrs	r7, 3
    3350:	0c c0       	rjmp	.+24     	; 0x336a <f_printf+0x2fa>
    3352:	e3 e0       	ldi	r30, 0x03	; 3
    3354:	f0 e0       	ldi	r31, 0x00	; 0
    3356:	ec 0f       	add	r30, r28
    3358:	fd 1f       	adc	r31, r29
    335a:	e8 0d       	add	r30, r8
    335c:	f9 1d       	adc	r31, r9
    335e:	2d e2       	ldi	r18, 0x2D	; 45
    3360:	20 83       	st	Z, r18
    3362:	a4 01       	movw	r20, r8
    3364:	4f 5f       	subi	r20, 0xFF	; 255
    3366:	5f 4f       	sbci	r21, 0xFF	; 255
    3368:	4a 01       	movw	r8, r20
		j = i; d = (f & 1) ? '0' : ' ';
    336a:	70 fc       	sbrc	r7, 0
    336c:	04 c0       	rjmp	.+8      	; 0x3376 <f_printf+0x306>
    336e:	68 94       	set
    3370:	66 24       	eor	r6, r6
    3372:	65 f8       	bld	r6, 5
    3374:	04 c0       	rjmp	.+8      	; 0x337e <f_printf+0x30e>
    3376:	0f 2e       	mov	r0, r31
    3378:	f0 e3       	ldi	r31, 0x30	; 48
    337a:	6f 2e       	mov	r6, r31
    337c:	f0 2d       	mov	r31, r0
		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
    337e:	71 fc       	sbrc	r7, 1
    3380:	15 c0       	rjmp	.+42     	; 0x33ac <f_printf+0x33c>
    3382:	64 01       	movw	r12, r8
    3384:	5f ef       	ldi	r21, 0xFF	; 255
    3386:	c5 1a       	sub	r12, r21
    3388:	d5 0a       	sbc	r13, r21
    338a:	80 16       	cp	r8, r16
    338c:	91 06       	cpc	r9, r17
    338e:	08 f4       	brcc	.+2      	; 0x3392 <f_printf+0x322>
    3390:	65 c0       	rjmp	.+202    	; 0x345c <f_printf+0x3ec>
    3392:	0d c0       	rjmp	.+26     	; 0x33ae <f_printf+0x33e>
    3394:	8f ef       	ldi	r24, 0xFF	; 255
    3396:	c8 1a       	sub	r12, r24
    3398:	d8 0a       	sbc	r13, r24
    339a:	c0 16       	cp	r12, r16
    339c:	d1 06       	cpc	r13, r17
    339e:	08 f4       	brcc	.+2      	; 0x33a2 <f_printf+0x332>
    33a0:	58 c0       	rjmp	.+176    	; 0x3452 <f_printf+0x3e2>
    33a2:	68 01       	movw	r12, r16
    33a4:	9f ef       	ldi	r25, 0xFF	; 255
    33a6:	c9 1a       	sub	r12, r25
    33a8:	d9 0a       	sbc	r13, r25
    33aa:	01 c0       	rjmp	.+2      	; 0x33ae <f_printf+0x33e>
			d = (TCHAR)(v % r); v /= r;
			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
			s[i++] = d + '0';
		} while (v && i < sizeof s / sizeof s[0]);
		if (f & 8) s[i++] = '-';
		j = i; d = (f & 1) ? '0' : ' ';
    33ac:	64 01       	movw	r12, r8
    33ae:	0f 2e       	mov	r0, r31
    33b0:	f3 e0       	ldi	r31, 0x03	; 3
    33b2:	af 2e       	mov	r10, r31
    33b4:	b1 2c       	mov	r11, r1
    33b6:	f0 2d       	mov	r31, r0
    33b8:	ac 0e       	add	r10, r28
    33ba:	bd 1e       	adc	r11, r29
    33bc:	a8 0c       	add	r10, r8
    33be:	b9 1c       	adc	r11, r9
		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
		do putc_bfd(&pb, s[--i]); while (i);
    33c0:	a1 e0       	ldi	r26, 0x01	; 1
    33c2:	8a 1a       	sub	r8, r26
    33c4:	91 08       	sbc	r9, r1
    33c6:	f5 01       	movw	r30, r10
    33c8:	62 91       	ld	r22, -Z
    33ca:	5f 01       	movw	r10, r30
    33cc:	ce 01       	movw	r24, r28
    33ce:	43 96       	adiw	r24, 0x13	; 19
    33d0:	30 dd       	rcall	.-1440   	; 0x2e32 <putc_bfd>
    33d2:	81 14       	cp	r8, r1
    33d4:	91 04       	cpc	r9, r1
    33d6:	a1 f7       	brne	.-24     	; 0x33c0 <f_printf+0x350>
		while (j++ < w) putc_bfd(&pb, d);
    33d8:	c0 16       	cp	r12, r16
    33da:	d1 06       	cpc	r13, r17
    33dc:	08 f0       	brcs	.+2      	; 0x33e0 <f_printf+0x370>
    33de:	7a ce       	rjmp	.-780    	; 0x30d4 <f_printf+0x64>
    33e0:	66 2d       	mov	r22, r6
    33e2:	ce 01       	movw	r24, r28
    33e4:	43 96       	adiw	r24, 0x13	; 19
    33e6:	25 dd       	rcall	.-1462   	; 0x2e32 <putc_bfd>
    33e8:	ff ef       	ldi	r31, 0xFF	; 255
    33ea:	cf 1a       	sub	r12, r31
    33ec:	df 0a       	sbc	r13, r31
    33ee:	c0 16       	cp	r12, r16
    33f0:	d1 06       	cpc	r13, r17
    33f2:	b0 f3       	brcs	.-20     	; 0x33e0 <f_printf+0x370>
    33f4:	6f ce       	rjmp	.-802    	; 0x30d4 <f_printf+0x64>
	}

	va_end(arp);

	if (   pb.idx >= 0		/* Flush buffered characters to the file */
    33f6:	4d 89       	ldd	r20, Y+21	; 0x15
    33f8:	5e 89       	ldd	r21, Y+22	; 0x16
    33fa:	55 23       	and	r21, r21
    33fc:	ac f0       	brlt	.+42     	; 0x3428 <f_printf+0x3b8>
		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
    33fe:	9e 01       	movw	r18, r28
    3400:	2f 5f       	subi	r18, 0xFF	; 255
    3402:	3f 4f       	sbci	r19, 0xFF	; 255
    3404:	be 01       	movw	r22, r28
    3406:	67 5e       	subi	r22, 0xE7	; 231
    3408:	7f 4f       	sbci	r23, 0xFF	; 255
    340a:	8b 89       	ldd	r24, Y+19	; 0x13
    340c:	9c 89       	ldd	r25, Y+20	; 0x14
    340e:	17 db       	rcall	.-2514   	; 0x2a3e <f_write>
    3410:	81 11       	cpse	r24, r1
    3412:	0d c0       	rjmp	.+26     	; 0x342e <f_printf+0x3be>
		&& (UINT)pb.idx == nw) return pb.nchr;
    3414:	2d 89       	ldd	r18, Y+21	; 0x15
    3416:	3e 89       	ldd	r19, Y+22	; 0x16
    3418:	89 81       	ldd	r24, Y+1	; 0x01
    341a:	9a 81       	ldd	r25, Y+2	; 0x02
    341c:	28 17       	cp	r18, r24
    341e:	39 07       	cpc	r19, r25
    3420:	49 f4       	brne	.+18     	; 0x3434 <f_printf+0x3c4>
    3422:	8f 89       	ldd	r24, Y+23	; 0x17
    3424:	98 8d       	ldd	r25, Y+24	; 0x18
    3426:	52 c0       	rjmp	.+164    	; 0x34cc <f_printf+0x45c>
	return EOF;
    3428:	8f ef       	ldi	r24, 0xFF	; 255
    342a:	9f ef       	ldi	r25, 0xFF	; 255
    342c:	4f c0       	rjmp	.+158    	; 0x34cc <f_printf+0x45c>
    342e:	8f ef       	ldi	r24, 0xFF	; 255
    3430:	9f ef       	ldi	r25, 0xFF	; 255
    3432:	4c c0       	rjmp	.+152    	; 0x34cc <f_printf+0x45c>
    3434:	8f ef       	ldi	r24, 0xFF	; 255
    3436:	9f ef       	ldi	r25, 0xFF	; 255
    3438:	49 c0       	rjmp	.+146    	; 0x34cc <f_printf+0x45c>
		if (IsLower(d)) d -= 0x20;
		switch (d) {				/* Type is... */
		case 'S' :					/* String */
			p = va_arg(arp, TCHAR*);
			for (j = 0; p[j]; j++) ;
			if (!(f & 2)) {
    343a:	71 fe       	sbrs	r7, 1
    343c:	19 c0       	rjmp	.+50     	; 0x3470 <f_printf+0x400>
    343e:	ee ce       	rjmp	.-548    	; 0x321c <f_printf+0x1ac>
    3440:	71 fe       	sbrs	r7, 1
    3442:	1f c0       	rjmp	.+62     	; 0x3482 <f_printf+0x412>
		d = c;
		if (IsLower(d)) d -= 0x20;
		switch (d) {				/* Type is... */
		case 'S' :					/* String */
			p = va_arg(arp, TCHAR*);
			for (j = 0; p[j]; j++) ;
    3444:	c2 2c       	mov	r12, r2
    3446:	d1 2c       	mov	r13, r1
    3448:	f4 ce       	rjmp	.-536    	; 0x3232 <f_printf+0x1c2>
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    344a:	72 fc       	sbrc	r7, 2
    344c:	14 cf       	rjmp	.-472    	; 0x3276 <f_printf+0x206>
			r = 8; break;
		case 'D' :					/* Signed decimal */
		case 'U' :					/* Unsigned decimal */
			r = 10; break;
		case 'X' :					/* Hexdecimal */
			r = 16; break;
    344e:	a0 e1       	ldi	r26, 0x10	; 16
    3450:	2d cf       	rjmp	.-422    	; 0x32ac <f_printf+0x23c>
			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
			s[i++] = d + '0';
		} while (v && i < sizeof s / sizeof s[0]);
		if (f & 8) s[i++] = '-';
		j = i; d = (f & 1) ? '0' : ' ';
		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
    3452:	66 2d       	mov	r22, r6
    3454:	ce 01       	movw	r24, r28
    3456:	43 96       	adiw	r24, 0x13	; 19
    3458:	ec dc       	rcall	.-1576   	; 0x2e32 <putc_bfd>
    345a:	9c cf       	rjmp	.-200    	; 0x3394 <f_printf+0x324>
    345c:	66 2d       	mov	r22, r6
    345e:	ce 01       	movw	r24, r28
    3460:	43 96       	adiw	r24, 0x13	; 19
    3462:	e7 dc       	rcall	.-1586   	; 0x2e32 <putc_bfd>
    3464:	64 01       	movw	r12, r8
    3466:	96 cf       	rjmp	.-212    	; 0x3394 <f_printf+0x324>
			p = va_arg(arp, TCHAR*);
			for (j = 0; p[j]; j++) ;
			if (!(f & 2)) {
				while (j++ < w) putc_bfd(&pb, ' ');
			}
			while (*p) putc_bfd(&pb, *p++);
    3468:	d5 01       	movw	r26, r10
    346a:	6c 91       	ld	r22, X
		switch (d) {				/* Type is... */
		case 'S' :					/* String */
			p = va_arg(arp, TCHAR*);
			for (j = 0; p[j]; j++) ;
			if (!(f & 2)) {
				while (j++ < w) putc_bfd(&pb, ' ');
    346c:	63 01       	movw	r12, r6
    346e:	d6 ce       	rjmp	.-596    	; 0x321c <f_printf+0x1ac>
    3470:	36 01       	movw	r6, r12
    3472:	bf ef       	ldi	r27, 0xFF	; 255
    3474:	6b 1a       	sub	r6, r27
    3476:	7b 0a       	sbc	r7, r27
    3478:	c0 16       	cp	r12, r16
    347a:	d1 06       	cpc	r13, r17
    347c:	08 f4       	brcc	.+2      	; 0x3480 <f_printf+0x410>
    347e:	b9 ce       	rjmp	.-654    	; 0x31f2 <f_printf+0x182>
    3480:	f3 cf       	rjmp	.-26     	; 0x3468 <f_printf+0x3f8>
    3482:	01 15       	cp	r16, r1
    3484:	11 05       	cpc	r17, r1
    3486:	09 f0       	breq	.+2      	; 0x348a <f_printf+0x41a>
    3488:	af ce       	rjmp	.-674    	; 0x31e8 <f_printf+0x178>
    348a:	cc 24       	eor	r12, r12
    348c:	c3 94       	inc	r12
    348e:	d1 2c       	mov	r13, r1
    3490:	d0 ce       	rjmp	.-608    	; 0x3232 <f_printf+0x1c2>
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    3492:	f2 01       	movw	r30, r4
    3494:	60 81       	ld	r22, Z
    3496:	71 81       	ldd	r23, Z+1	; 0x01
    3498:	82 81       	ldd	r24, Z+2	; 0x02
    349a:	93 81       	ldd	r25, Z+3	; 0x03
    349c:	92 01       	movw	r18, r4
    349e:	2c 5f       	subi	r18, 0xFC	; 252
    34a0:	3f 4f       	sbci	r19, 0xFF	; 255
    34a2:	29 01       	movw	r4, r18
			while (j++ < w) putc_bfd(&pb, ' ');
			continue;
		case 'C' :					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
		case 'B' :					/* Binary */
			r = 2; break;
    34a4:	a2 e0       	ldi	r26, 0x02	; 2
    34a6:	18 cf       	rjmp	.-464    	; 0x32d8 <f_printf+0x268>
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    34a8:	72 fc       	sbrc	r7, 2
    34aa:	f3 cf       	rjmp	.-26     	; 0x3492 <f_printf+0x422>
			while (j++ < w) putc_bfd(&pb, ' ');
			continue;
		case 'C' :					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
		case 'B' :					/* Binary */
			r = 2; break;
    34ac:	a2 e0       	ldi	r26, 0x02	; 2
    34ae:	f0 ce       	rjmp	.-544    	; 0x3290 <f_printf+0x220>
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    34b0:	d2 01       	movw	r26, r4
    34b2:	6d 91       	ld	r22, X+
    34b4:	7d 91       	ld	r23, X+
    34b6:	8d 91       	ld	r24, X+
    34b8:	9c 91       	ld	r25, X
    34ba:	f2 01       	movw	r30, r4
    34bc:	34 96       	adiw	r30, 0x04	; 4
    34be:	2f 01       	movw	r4, r30
		case 'C' :					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
		case 'B' :					/* Binary */
			r = 2; break;
		case 'O' :					/* Octal */
			r = 8; break;
    34c0:	a8 e0       	ldi	r26, 0x08	; 8
    34c2:	0a cf       	rjmp	.-492    	; 0x32d8 <f_printf+0x268>
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    34c4:	72 fc       	sbrc	r7, 2
    34c6:	f4 cf       	rjmp	.-24     	; 0x34b0 <f_printf+0x440>
		case 'C' :					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
		case 'B' :					/* Binary */
			r = 2; break;
		case 'O' :					/* Octal */
			r = 8; break;
    34c8:	a8 e0       	ldi	r26, 0x08	; 8
    34ca:	f0 ce       	rjmp	.-544    	; 0x32ac <f_printf+0x23c>

	if (   pb.idx >= 0		/* Flush buffered characters to the file */
		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
		&& (UINT)pb.idx == nw) return pb.nchr;
	return EOF;
}
    34cc:	c4 5a       	subi	r28, 0xA4	; 164
    34ce:	df 4f       	sbci	r29, 0xFF	; 255
    34d0:	0f b6       	in	r0, 0x3f	; 63
    34d2:	f8 94       	cli
    34d4:	de bf       	out	0x3e, r29	; 62
    34d6:	0f be       	out	0x3f, r0	; 63
    34d8:	cd bf       	out	0x3d, r28	; 61
    34da:	df 91       	pop	r29
    34dc:	cf 91       	pop	r28
    34de:	1f 91       	pop	r17
    34e0:	0f 91       	pop	r16
    34e2:	ff 90       	pop	r15
    34e4:	ef 90       	pop	r14
    34e6:	df 90       	pop	r13
    34e8:	cf 90       	pop	r12
    34ea:	bf 90       	pop	r11
    34ec:	af 90       	pop	r10
    34ee:	9f 90       	pop	r9
    34f0:	8f 90       	pop	r8
    34f2:	7f 90       	pop	r7
    34f4:	6f 90       	pop	r6
    34f6:	5f 90       	pop	r5
    34f8:	4f 90       	pop	r4
    34fa:	3f 90       	pop	r3
    34fc:	2f 90       	pop	r2
    34fe:	08 95       	ret

00003500 <_ZN3I2CC1Ev>:
void I2C::twi_ack(){
	TWCR = (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
}
void I2C::twi_nack(){
	TWCR = (1<<TWINT) | (1<<TWEN);
	TWCR &= ~(1<<TWEA);
    3500:	82 e0       	ldi	r24, 0x02	; 2
    3502:	80 93 b8 00 	sts	0x00B8, r24
    3506:	08 95       	ret

00003508 <_ZN3I2CD1Ev>:
    3508:	08 95       	ret

0000350a <_ZN3I2C9twi_startEv>:
    350a:	84 ea       	ldi	r24, 0xA4	; 164
    350c:	80 93 bc 00 	sts	0x00BC, r24
    3510:	08 95       	ret

00003512 <_ZN3I2C8twi_stopEv>:
    3512:	84 e9       	ldi	r24, 0x94	; 148
    3514:	80 93 bc 00 	sts	0x00BC, r24
    3518:	08 95       	ret

0000351a <_ZN3I2C9twi_writeEh>:
}

void I2C::twi_write(uint8_t data){
	while(!(TWCR & (1<<TWINT)));
    351a:	ec eb       	ldi	r30, 0xBC	; 188
    351c:	f0 e0       	ldi	r31, 0x00	; 0
    351e:	80 81       	ld	r24, Z
    3520:	88 23       	and	r24, r24
    3522:	ec f7       	brge	.-6      	; 0x351e <_ZN3I2C9twi_writeEh+0x4>
	TWDR = data;
    3524:	60 93 bb 00 	sts	0x00BB, r22
	TWCR = (1<<TWINT) | (1<<TWEN);
    3528:	84 e8       	ldi	r24, 0x84	; 132
    352a:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
    352e:	ec eb       	ldi	r30, 0xBC	; 188
    3530:	f0 e0       	ldi	r31, 0x00	; 0
    3532:	80 81       	ld	r24, Z
    3534:	88 23       	and	r24, r24
    3536:	ec f7       	brge	.-6      	; 0x3532 <_ZN3I2C9twi_writeEh+0x18>
}
    3538:	08 95       	ret

0000353a <__vector_16>:

#include "Display.h"
Display oled;

volatile uint8_t Timerstat;
ISR(TIMER0_COMPA_vect){
    353a:	1f 92       	push	r1
    353c:	0f 92       	push	r0
    353e:	0f b6       	in	r0, 0x3f	; 63
    3540:	0f 92       	push	r0
    3542:	11 24       	eor	r1, r1
    3544:	0b b6       	in	r0, 0x3b	; 59
    3546:	0f 92       	push	r0
    3548:	2f 93       	push	r18
    354a:	3f 93       	push	r19
    354c:	4f 93       	push	r20
    354e:	5f 93       	push	r21
    3550:	6f 93       	push	r22
    3552:	7f 93       	push	r23
    3554:	8f 93       	push	r24
    3556:	9f 93       	push	r25
    3558:	af 93       	push	r26
    355a:	bf 93       	push	r27
    355c:	ef 93       	push	r30
    355e:	ff 93       	push	r31
	Timerstat++;
    3560:	80 91 b3 01 	lds	r24, 0x01B3
    3564:	8f 5f       	subi	r24, 0xFF	; 255
    3566:	80 93 b3 01 	sts	0x01B3, r24
	disk_timerproc();	//Timer der SD Karte
    356a:	0e 94 c2 05 	call	0xb84	; 0xb84 <disk_timerproc>
}
    356e:	ff 91       	pop	r31
    3570:	ef 91       	pop	r30
    3572:	bf 91       	pop	r27
    3574:	af 91       	pop	r26
    3576:	9f 91       	pop	r25
    3578:	8f 91       	pop	r24
    357a:	7f 91       	pop	r23
    357c:	6f 91       	pop	r22
    357e:	5f 91       	pop	r21
    3580:	4f 91       	pop	r20
    3582:	3f 91       	pop	r19
    3584:	2f 91       	pop	r18
    3586:	0f 90       	pop	r0
    3588:	0b be       	out	0x3b, r0	; 59
    358a:	0f 90       	pop	r0
    358c:	0f be       	out	0x3f, r0	; 63
    358e:	0f 90       	pop	r0
    3590:	1f 90       	pop	r1
    3592:	18 95       	reti

00003594 <main>:


int main(void)
{
    3594:	cf 93       	push	r28
    3596:	df 93       	push	r29
    3598:	cd b7       	in	r28, 0x3d	; 61
    359a:	de b7       	in	r29, 0x3e	; 62
    359c:	c2 56       	subi	r28, 0x62	; 98
    359e:	d4 40       	sbci	r29, 0x04	; 4
    35a0:	0f b6       	in	r0, 0x3f	; 63
    35a2:	f8 94       	cli
    35a4:	de bf       	out	0x3e, r29	; 62
    35a6:	0f be       	out	0x3f, r0	; 63
    35a8:	cd bf       	out	0x3d, r28	; 61
	char buffer[20];
	uint8_t buffersize;
	Timerstat = 0;
    35aa:	10 92 b3 01 	sts	0x01B3, r1
	int status;
	//init Timer
	TCCR0A	 = (1<<WGM01);		//Timer im ctc Mide
    35ae:	82 e0       	ldi	r24, 0x02	; 2
    35b0:	84 bd       	out	0x24, r24	; 36
	OCR0A	 = 38;		//ctc counter ende
    35b2:	86 e2       	ldi	r24, 0x26	; 38
    35b4:	87 bd       	out	0x27, r24	; 39
	TIMSK0	|= (1<<OCIE0A);
    35b6:	ee e6       	ldi	r30, 0x6E	; 110
    35b8:	f0 e0       	ldi	r31, 0x00	; 0
    35ba:	80 81       	ld	r24, Z
    35bc:	82 60       	ori	r24, 0x02	; 2
    35be:	80 83       	st	Z, r24
	TCCR0B	|= (1<<CS02) | (1<<CS00);	//presc=1024
    35c0:	85 b5       	in	r24, 0x25	; 37
    35c2:	85 60       	ori	r24, 0x05	; 5
    35c4:	85 bd       	out	0x25, r24	; 37
	sei();
    35c6:	78 94       	sei
	oled.clearFrame();
    35c8:	84 eb       	ldi	r24, 0xB4	; 180
    35ca:	91 e0       	ldi	r25, 0x01	; 1
    35cc:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <_ZN7Display10clearFrameEv>
	oled.sendFrame();
    35d0:	84 eb       	ldi	r24, 0xB4	; 180
    35d2:	91 e0       	ldi	r25, 0x01	; 1
    35d4:	0e 94 59 06 	call	0xcb2	; 0xcb2 <_ZN7Display9sendFrameEv>
    35d8:	14 e1       	ldi	r17, 0x14	; 20
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    35da:	2f ef       	ldi	r18, 0xFF	; 255
    35dc:	30 e7       	ldi	r19, 0x70	; 112
    35de:	82 e0       	ldi	r24, 0x02	; 2
    35e0:	21 50       	subi	r18, 0x01	; 1
    35e2:	30 40       	sbci	r19, 0x00	; 0
    35e4:	80 40       	sbci	r24, 0x00	; 0
    35e6:	e1 f7       	brne	.-8      	; 0x35e0 <main+0x4c>
    35e8:	00 c0       	rjmp	.+0      	; 0x35ea <main+0x56>
    35ea:	00 00       	nop
    35ec:	11 50       	subi	r17, 0x01	; 1
	
	for (uint8_t i = 0; i<20; i++)
    35ee:	a9 f7       	brne	.-22     	; 0x35da <main+0x46>
	{
		_delay_ms(100);
	}

	oled.draw_ASCI('1',1*charsize,0*charhighte);
    35f0:	20 e0       	ldi	r18, 0x00	; 0
    35f2:	46 e0       	ldi	r20, 0x06	; 6
    35f4:	61 e3       	ldi	r22, 0x31	; 49
    35f6:	84 eb       	ldi	r24, 0xB4	; 180
    35f8:	91 e0       	ldi	r25, 0x01	; 1
    35fa:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    35fe:	84 eb       	ldi	r24, 0xB4	; 180
    3600:	91 e0       	ldi	r25, 0x01	; 1
    3602:	0e 94 59 06 	call	0xcb2	; 0xcb2 <_ZN7Display9sendFrameEv>
	
	FATFS FATFS_Obj;
	oled.draw_ASCI('2',2*charsize,0*charhighte);
    3606:	20 e0       	ldi	r18, 0x00	; 0
    3608:	4c e0       	ldi	r20, 0x0C	; 12
    360a:	62 e3       	ldi	r22, 0x32	; 50
    360c:	84 eb       	ldi	r24, 0xB4	; 180
    360e:	91 e0       	ldi	r25, 0x01	; 1
    3610:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    3614:	84 eb       	ldi	r24, 0xB4	; 180
    3616:	91 e0       	ldi	r25, 0x01	; 1
    3618:	0e 94 59 06 	call	0xcb2	; 0xcb2 <_ZN7Display9sendFrameEv>
	
	status = disk_initialize(0);
    361c:	80 e0       	ldi	r24, 0x00	; 0
    361e:	0e 94 9e 02 	call	0x53c	; 0x53c <disk_initialize>
	buffersize=sprintf(buffer,"%i",status);
    3622:	1f 92       	push	r1
    3624:	8f 93       	push	r24
    3626:	88 ea       	ldi	r24, 0xA8	; 168
    3628:	91 e0       	ldi	r25, 0x01	; 1
    362a:	9f 93       	push	r25
    362c:	8f 93       	push	r24
    362e:	ce 01       	movw	r24, r28
    3630:	81 5b       	subi	r24, 0xB1	; 177
    3632:	9b 4f       	sbci	r25, 0xFB	; 251
    3634:	9f 93       	push	r25
    3636:	8f 93       	push	r24
    3638:	b0 d1       	rcall	.+864    	; 0x399a <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize+70,1*charhighte);}
    363a:	0f 90       	pop	r0
    363c:	0f 90       	pop	r0
    363e:	0f 90       	pop	r0
    3640:	0f 90       	pop	r0
    3642:	0f 90       	pop	r0
    3644:	0f 90       	pop	r0
    3646:	88 23       	and	r24, r24
    3648:	e1 f0       	breq	.+56     	; 0x3682 <main+0xee>
    364a:	6e 01       	movw	r12, r28
    364c:	91 eb       	ldi	r25, 0xB1	; 177
    364e:	c9 1a       	sub	r12, r25
    3650:	9b ef       	ldi	r25, 0xFB	; 251
    3652:	d9 0a       	sbc	r13, r25
    3654:	ee 24       	eor	r14, r14
    3656:	ea 94       	dec	r14
    3658:	e8 0e       	add	r14, r24
    365a:	f1 2c       	mov	r15, r1
    365c:	ef ef       	ldi	r30, 0xFF	; 255
    365e:	ee 1a       	sub	r14, r30
    3660:	fe 0a       	sbc	r15, r30
    3662:	ec 0c       	add	r14, r12
    3664:	fd 1c       	adc	r15, r13
    3666:	06 e4       	ldi	r16, 0x46	; 70
    3668:	f6 01       	movw	r30, r12
    366a:	61 91       	ld	r22, Z+
    366c:	6f 01       	movw	r12, r30
    366e:	28 e0       	ldi	r18, 0x08	; 8
    3670:	40 2f       	mov	r20, r16
    3672:	84 eb       	ldi	r24, 0xB4	; 180
    3674:	91 e0       	ldi	r25, 0x01	; 1
    3676:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
    367a:	0a 5f       	subi	r16, 0xFA	; 250
    367c:	ce 14       	cp	r12, r14
    367e:	df 04       	cpc	r13, r15
    3680:	99 f7       	brne	.-26     	; 0x3668 <main+0xd4>
	oled.draw_ASCI('3',3*charsize,0*charhighte);
    3682:	20 e0       	ldi	r18, 0x00	; 0
    3684:	42 e1       	ldi	r20, 0x12	; 18
    3686:	63 e3       	ldi	r22, 0x33	; 51
    3688:	84 eb       	ldi	r24, 0xB4	; 180
    368a:	91 e0       	ldi	r25, 0x01	; 1
    368c:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    3690:	84 eb       	ldi	r24, 0xB4	; 180
    3692:	91 e0       	ldi	r25, 0x01	; 1
    3694:	0e 94 59 06 	call	0xcb2	; 0xcb2 <_ZN7Display9sendFrameEv>
	oled.draw_ASCI('0',0*charsize,0*charhighte);
	buffersize=sprintf(buffer,"%i",status);
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,5*charhighte);}
	oled.sendFrame();
	*/
	status = f_mount(&FATFS_Obj,"",0) != 0;
    3698:	40 e0       	ldi	r20, 0x00	; 0
    369a:	6a ea       	ldi	r22, 0xAA	; 170
    369c:	71 e0       	ldi	r23, 0x01	; 1
    369e:	ce 01       	movw	r24, r28
    36a0:	01 96       	adiw	r24, 0x01	; 1
    36a2:	0e 94 8b 11 	call	0x2316	; 0x2316 <f_mount>
    36a6:	91 e0       	ldi	r25, 0x01	; 1
    36a8:	20 e0       	ldi	r18, 0x00	; 0
    36aa:	81 11       	cpse	r24, r1
    36ac:	01 c0       	rjmp	.+2      	; 0x36b0 <main+0x11c>
    36ae:	90 e0       	ldi	r25, 0x00	; 0
	buffersize=sprintf(buffer,"%i",status);
    36b0:	2f 93       	push	r18
    36b2:	9f 93       	push	r25
    36b4:	88 ea       	ldi	r24, 0xA8	; 168
    36b6:	91 e0       	ldi	r25, 0x01	; 1
    36b8:	9f 93       	push	r25
    36ba:	8f 93       	push	r24
    36bc:	ce 01       	movw	r24, r28
    36be:	81 5b       	subi	r24, 0xB1	; 177
    36c0:	9b 4f       	sbci	r25, 0xFB	; 251
    36c2:	9f 93       	push	r25
    36c4:	8f 93       	push	r24
    36c6:	69 d1       	rcall	.+722    	; 0x399a <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize+70,2*charhighte);}
    36c8:	0f 90       	pop	r0
    36ca:	0f 90       	pop	r0
    36cc:	0f 90       	pop	r0
    36ce:	0f 90       	pop	r0
    36d0:	0f 90       	pop	r0
    36d2:	0f 90       	pop	r0
    36d4:	88 23       	and	r24, r24
    36d6:	e1 f0       	breq	.+56     	; 0x3710 <main+0x17c>
    36d8:	6e 01       	movw	r12, r28
    36da:	f1 eb       	ldi	r31, 0xB1	; 177
    36dc:	cf 1a       	sub	r12, r31
    36de:	fb ef       	ldi	r31, 0xFB	; 251
    36e0:	df 0a       	sbc	r13, r31
    36e2:	ee 24       	eor	r14, r14
    36e4:	ea 94       	dec	r14
    36e6:	e8 0e       	add	r14, r24
    36e8:	f1 2c       	mov	r15, r1
    36ea:	2f ef       	ldi	r18, 0xFF	; 255
    36ec:	e2 1a       	sub	r14, r18
    36ee:	f2 0a       	sbc	r15, r18
    36f0:	ec 0c       	add	r14, r12
    36f2:	fd 1c       	adc	r15, r13
    36f4:	06 e4       	ldi	r16, 0x46	; 70
    36f6:	f6 01       	movw	r30, r12
    36f8:	61 91       	ld	r22, Z+
    36fa:	6f 01       	movw	r12, r30
    36fc:	20 e1       	ldi	r18, 0x10	; 16
    36fe:	40 2f       	mov	r20, r16
    3700:	84 eb       	ldi	r24, 0xB4	; 180
    3702:	91 e0       	ldi	r25, 0x01	; 1
    3704:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
    3708:	0a 5f       	subi	r16, 0xFA	; 250
    370a:	ce 14       	cp	r12, r14
    370c:	df 04       	cpc	r13, r15
    370e:	99 f7       	brne	.-26     	; 0x36f6 <main+0x162>
	oled.draw_ASCI('4',4*charsize,0*charhighte);
    3710:	20 e0       	ldi	r18, 0x00	; 0
    3712:	48 e1       	ldi	r20, 0x18	; 24
    3714:	64 e3       	ldi	r22, 0x34	; 52
    3716:	84 eb       	ldi	r24, 0xB4	; 180
    3718:	91 e0       	ldi	r25, 0x01	; 1
    371a:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    371e:	84 eb       	ldi	r24, 0xB4	; 180
    3720:	91 e0       	ldi	r25, 0x01	; 1
    3722:	0e 94 59 06 	call	0xcb2	; 0xcb2 <_ZN7Display9sendFrameEv>
	buffersize=sprintf(buffer,"%i",status);
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize+70,5*charhighte);}
	*/
	
	FIL fil_obj;
	oled.draw_ASCI('5',5*charsize,0*charhighte);
    3726:	20 e0       	ldi	r18, 0x00	; 0
    3728:	4e e1       	ldi	r20, 0x1E	; 30
    372a:	65 e3       	ldi	r22, 0x35	; 53
    372c:	84 eb       	ldi	r24, 0xB4	; 180
    372e:	91 e0       	ldi	r25, 0x01	; 1
    3730:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    3734:	84 eb       	ldi	r24, 0xB4	; 180
    3736:	91 e0       	ldi	r25, 0x01	; 1
    3738:	0e 94 59 06 	call	0xcb2	; 0xcb2 <_ZN7Display9sendFrameEv>
	
	status = f_open(&fil_obj, "foo.txt", FA_OPEN_ALWAYS | FA_WRITE);
    373c:	42 e1       	ldi	r20, 0x12	; 18
    373e:	60 e9       	ldi	r22, 0x90	; 144
    3740:	71 e0       	ldi	r23, 0x01	; 1
    3742:	ce 01       	movw	r24, r28
    3744:	81 5d       	subi	r24, 0xD1	; 209
    3746:	9d 4f       	sbci	r25, 0xFD	; 253
    3748:	0e 94 de 11 	call	0x23bc	; 0x23bc <f_open>
	buffersize=sprintf(buffer,"%i",status);
    374c:	1f 92       	push	r1
    374e:	8f 93       	push	r24
    3750:	88 ea       	ldi	r24, 0xA8	; 168
    3752:	91 e0       	ldi	r25, 0x01	; 1
    3754:	9f 93       	push	r25
    3756:	8f 93       	push	r24
    3758:	ce 01       	movw	r24, r28
    375a:	81 5b       	subi	r24, 0xB1	; 177
    375c:	9b 4f       	sbci	r25, 0xFB	; 251
    375e:	9f 93       	push	r25
    3760:	8f 93       	push	r24
    3762:	1b d1       	rcall	.+566    	; 0x399a <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,1*charhighte);}
    3764:	0f 90       	pop	r0
    3766:	0f 90       	pop	r0
    3768:	0f 90       	pop	r0
    376a:	0f 90       	pop	r0
    376c:	0f 90       	pop	r0
    376e:	0f 90       	pop	r0
    3770:	88 23       	and	r24, r24
    3772:	e1 f0       	breq	.+56     	; 0x37ac <main+0x218>
    3774:	6e 01       	movw	r12, r28
    3776:	f1 eb       	ldi	r31, 0xB1	; 177
    3778:	cf 1a       	sub	r12, r31
    377a:	fb ef       	ldi	r31, 0xFB	; 251
    377c:	df 0a       	sbc	r13, r31
    377e:	ee 24       	eor	r14, r14
    3780:	ea 94       	dec	r14
    3782:	e8 0e       	add	r14, r24
    3784:	f1 2c       	mov	r15, r1
    3786:	2f ef       	ldi	r18, 0xFF	; 255
    3788:	e2 1a       	sub	r14, r18
    378a:	f2 0a       	sbc	r15, r18
    378c:	ec 0c       	add	r14, r12
    378e:	fd 1c       	adc	r15, r13
    3790:	01 2f       	mov	r16, r17
    3792:	f6 01       	movw	r30, r12
    3794:	61 91       	ld	r22, Z+
    3796:	6f 01       	movw	r12, r30
    3798:	28 e0       	ldi	r18, 0x08	; 8
    379a:	40 2f       	mov	r20, r16
    379c:	84 eb       	ldi	r24, 0xB4	; 180
    379e:	91 e0       	ldi	r25, 0x01	; 1
    37a0:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
    37a4:	0a 5f       	subi	r16, 0xFA	; 250
    37a6:	ce 14       	cp	r12, r14
    37a8:	df 04       	cpc	r13, r15
    37aa:	99 f7       	brne	.-26     	; 0x3792 <main+0x1fe>
	oled.draw_ASCI('6',6*charsize,0*charhighte);
    37ac:	20 e0       	ldi	r18, 0x00	; 0
    37ae:	44 e2       	ldi	r20, 0x24	; 36
    37b0:	66 e3       	ldi	r22, 0x36	; 54
    37b2:	84 eb       	ldi	r24, 0xB4	; 180
    37b4:	91 e0       	ldi	r25, 0x01	; 1
    37b6:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    37ba:	84 eb       	ldi	r24, 0xB4	; 180
    37bc:	91 e0       	ldi	r25, 0x01	; 1
    37be:	0e 94 59 06 	call	0xcb2	; 0xcb2 <_ZN7Display9sendFrameEv>
	
	
//	UINT number = 0;
//	status = f_write(&fil_obj,"Hallo ist die Datei ueberschrieben?",5,&number);
	status = f_printf(&fil_obj, "test text %u", 1);
    37c2:	1f 92       	push	r1
    37c4:	81 e0       	ldi	r24, 0x01	; 1
    37c6:	8f 93       	push	r24
    37c8:	88 e9       	ldi	r24, 0x98	; 152
    37ca:	91 e0       	ldi	r25, 0x01	; 1
    37cc:	9f 93       	push	r25
    37ce:	8f 93       	push	r24
    37d0:	ce 01       	movw	r24, r28
    37d2:	81 5d       	subi	r24, 0xD1	; 209
    37d4:	9d 4f       	sbci	r25, 0xFD	; 253
    37d6:	9f 93       	push	r25
    37d8:	8f 93       	push	r24
    37da:	4a dc       	rcall	.-1900   	; 0x3070 <f_printf>
    37dc:	08 2f       	mov	r16, r24
    37de:	f9 2e       	mov	r15, r25
	oled.draw_ASCI('7',7*charsize,0*charhighte);
    37e0:	20 e0       	ldi	r18, 0x00	; 0
    37e2:	4a e2       	ldi	r20, 0x2A	; 42
    37e4:	67 e3       	ldi	r22, 0x37	; 55
    37e6:	84 eb       	ldi	r24, 0xB4	; 180
    37e8:	91 e0       	ldi	r25, 0x01	; 1
    37ea:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
	buffersize=sprintf(buffer,"%i",status);
    37ee:	ff 92       	push	r15
    37f0:	0f 93       	push	r16
    37f2:	88 ea       	ldi	r24, 0xA8	; 168
    37f4:	91 e0       	ldi	r25, 0x01	; 1
    37f6:	9f 93       	push	r25
    37f8:	8f 93       	push	r24
    37fa:	ce 01       	movw	r24, r28
    37fc:	81 5b       	subi	r24, 0xB1	; 177
    37fe:	9b 4f       	sbci	r25, 0xFB	; 251
    3800:	9f 93       	push	r25
    3802:	8f 93       	push	r24
    3804:	ca d0       	rcall	.+404    	; 0x399a <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,2*charhighte);}
    3806:	0f b6       	in	r0, 0x3f	; 63
    3808:	f8 94       	cli
    380a:	de bf       	out	0x3e, r29	; 62
    380c:	0f be       	out	0x3f, r0	; 63
    380e:	cd bf       	out	0x3d, r28	; 61
    3810:	88 23       	and	r24, r24
    3812:	e1 f0       	breq	.+56     	; 0x384c <main+0x2b8>
    3814:	6e 01       	movw	r12, r28
    3816:	31 eb       	ldi	r19, 0xB1	; 177
    3818:	c3 1a       	sub	r12, r19
    381a:	3b ef       	ldi	r19, 0xFB	; 251
    381c:	d3 0a       	sbc	r13, r19
    381e:	ee 24       	eor	r14, r14
    3820:	ea 94       	dec	r14
    3822:	e8 0e       	add	r14, r24
    3824:	f1 2c       	mov	r15, r1
    3826:	8f ef       	ldi	r24, 0xFF	; 255
    3828:	e8 1a       	sub	r14, r24
    382a:	f8 0a       	sbc	r15, r24
    382c:	ec 0c       	add	r14, r12
    382e:	fd 1c       	adc	r15, r13
    3830:	01 2f       	mov	r16, r17
    3832:	f6 01       	movw	r30, r12
    3834:	61 91       	ld	r22, Z+
    3836:	6f 01       	movw	r12, r30
    3838:	20 e1       	ldi	r18, 0x10	; 16
    383a:	40 2f       	mov	r20, r16
    383c:	84 eb       	ldi	r24, 0xB4	; 180
    383e:	91 e0       	ldi	r25, 0x01	; 1
    3840:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
    3844:	0a 5f       	subi	r16, 0xFA	; 250
    3846:	ce 14       	cp	r12, r14
    3848:	df 04       	cpc	r13, r15
    384a:	99 f7       	brne	.-26     	; 0x3832 <main+0x29e>
	oled.sendFrame();
    384c:	84 eb       	ldi	r24, 0xB4	; 180
    384e:	91 e0       	ldi	r25, 0x01	; 1
    3850:	0e 94 59 06 	call	0xcb2	; 0xcb2 <_ZN7Display9sendFrameEv>
	
	status = f_close(&fil_obj);
    3854:	ce 01       	movw	r24, r28
    3856:	81 5d       	subi	r24, 0xD1	; 209
    3858:	9d 4f       	sbci	r25, 0xFD	; 253
    385a:	fa db       	rcall	.-2060   	; 0x3050 <f_close>
    385c:	08 2f       	mov	r16, r24
	oled.draw_ASCI('8',8*charsize,0*charhighte);
    385e:	20 e0       	ldi	r18, 0x00	; 0
    3860:	40 e3       	ldi	r20, 0x30	; 48
    3862:	68 e3       	ldi	r22, 0x38	; 56
    3864:	84 eb       	ldi	r24, 0xB4	; 180
    3866:	91 e0       	ldi	r25, 0x01	; 1
    3868:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
	buffersize=sprintf(buffer,"%i:%i",status,Timerstat);
    386c:	80 91 b3 01 	lds	r24, 0x01B3
    3870:	1f 92       	push	r1
    3872:	8f 93       	push	r24
    3874:	1f 92       	push	r1
    3876:	0f 93       	push	r16
    3878:	85 ea       	ldi	r24, 0xA5	; 165
    387a:	91 e0       	ldi	r25, 0x01	; 1
    387c:	9f 93       	push	r25
    387e:	8f 93       	push	r24
    3880:	ce 01       	movw	r24, r28
    3882:	81 5b       	subi	r24, 0xB1	; 177
    3884:	9b 4f       	sbci	r25, 0xFB	; 251
    3886:	9f 93       	push	r25
    3888:	8f 93       	push	r24
    388a:	87 d0       	rcall	.+270    	; 0x399a <sprintf>
	for(uint8_t i=0;i<buffersize;i++){oled.draw_ASCI(buffer[i],i*charsize,3*charhighte);}
    388c:	0f b6       	in	r0, 0x3f	; 63
    388e:	f8 94       	cli
    3890:	de bf       	out	0x3e, r29	; 62
    3892:	0f be       	out	0x3f, r0	; 63
    3894:	cd bf       	out	0x3d, r28	; 61
    3896:	88 23       	and	r24, r24
    3898:	d9 f0       	breq	.+54     	; 0x38d0 <main+0x33c>
    389a:	6e 01       	movw	r12, r28
    389c:	31 eb       	ldi	r19, 0xB1	; 177
    389e:	c3 1a       	sub	r12, r19
    38a0:	3b ef       	ldi	r19, 0xFB	; 251
    38a2:	d3 0a       	sbc	r13, r19
    38a4:	ee 24       	eor	r14, r14
    38a6:	ea 94       	dec	r14
    38a8:	e8 0e       	add	r14, r24
    38aa:	f1 2c       	mov	r15, r1
    38ac:	8f ef       	ldi	r24, 0xFF	; 255
    38ae:	e8 1a       	sub	r14, r24
    38b0:	f8 0a       	sbc	r15, r24
    38b2:	ec 0c       	add	r14, r12
    38b4:	fd 1c       	adc	r15, r13
    38b6:	f6 01       	movw	r30, r12
    38b8:	61 91       	ld	r22, Z+
    38ba:	6f 01       	movw	r12, r30
    38bc:	28 e1       	ldi	r18, 0x18	; 24
    38be:	41 2f       	mov	r20, r17
    38c0:	84 eb       	ldi	r24, 0xB4	; 180
    38c2:	91 e0       	ldi	r25, 0x01	; 1
    38c4:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
    38c8:	1a 5f       	subi	r17, 0xFA	; 250
    38ca:	ce 14       	cp	r12, r14
    38cc:	df 04       	cpc	r13, r15
    38ce:	99 f7       	brne	.-26     	; 0x38b6 <main+0x322>
	oled.sendFrame();
    38d0:	84 eb       	ldi	r24, 0xB4	; 180
    38d2:	91 e0       	ldi	r25, 0x01	; 1
    38d4:	0e 94 59 06 	call	0xcb2	; 0xcb2 <_ZN7Display9sendFrameEv>
    
	f_mount(0,"",0);
    38d8:	40 e0       	ldi	r20, 0x00	; 0
    38da:	6a ea       	ldi	r22, 0xAA	; 170
    38dc:	71 e0       	ldi	r23, 0x01	; 1
    38de:	80 e0       	ldi	r24, 0x00	; 0
    38e0:	90 e0       	ldi	r25, 0x00	; 0
    38e2:	0e 94 8b 11 	call	0x2316	; 0x2316 <f_mount>
	oled.draw_ASCI('9',9*charsize,0*charhighte);
    38e6:	20 e0       	ldi	r18, 0x00	; 0
    38e8:	46 e3       	ldi	r20, 0x36	; 54
    38ea:	69 e3       	ldi	r22, 0x39	; 57
    38ec:	84 eb       	ldi	r24, 0xB4	; 180
    38ee:	91 e0       	ldi	r25, 0x01	; 1
    38f0:	0e 94 90 06 	call	0xd20	; 0xd20 <_ZN7Display9draw_ASCIEhhh>
	oled.sendFrame();
    38f4:	84 eb       	ldi	r24, 0xB4	; 180
    38f6:	91 e0       	ldi	r25, 0x01	; 1
    38f8:	0e 94 59 06 	call	0xcb2	; 0xcb2 <_ZN7Display9sendFrameEv>
	
	
    while (1) 
    {
    }
    38fc:	ff cf       	rjmp	.-2      	; 0x38fc <main+0x368>

000038fe <_GLOBAL__sub_I_oled>:
	#include "diskio.h"	
	#include "ff.h"
};

#include "Display.h"
Display oled;
    38fe:	84 eb       	ldi	r24, 0xB4	; 180
    3900:	91 e0       	ldi	r25, 0x01	; 1
    3902:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <_ZN7DisplayC1Ev>
    3906:	08 95       	ret

00003908 <_GLOBAL__sub_D_oled>:
    3908:	84 eb       	ldi	r24, 0xB4	; 180
    390a:	91 e0       	ldi	r25, 0x01	; 1
    390c:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <_ZN7DisplayD1Ev>
    3910:	08 95       	ret

00003912 <__udivmodsi4>:
    3912:	a1 e2       	ldi	r26, 0x21	; 33
    3914:	1a 2e       	mov	r1, r26
    3916:	aa 1b       	sub	r26, r26
    3918:	bb 1b       	sub	r27, r27
    391a:	fd 01       	movw	r30, r26
    391c:	0d c0       	rjmp	.+26     	; 0x3938 <__udivmodsi4_ep>

0000391e <__udivmodsi4_loop>:
    391e:	aa 1f       	adc	r26, r26
    3920:	bb 1f       	adc	r27, r27
    3922:	ee 1f       	adc	r30, r30
    3924:	ff 1f       	adc	r31, r31
    3926:	a2 17       	cp	r26, r18
    3928:	b3 07       	cpc	r27, r19
    392a:	e4 07       	cpc	r30, r20
    392c:	f5 07       	cpc	r31, r21
    392e:	20 f0       	brcs	.+8      	; 0x3938 <__udivmodsi4_ep>
    3930:	a2 1b       	sub	r26, r18
    3932:	b3 0b       	sbc	r27, r19
    3934:	e4 0b       	sbc	r30, r20
    3936:	f5 0b       	sbc	r31, r21

00003938 <__udivmodsi4_ep>:
    3938:	66 1f       	adc	r22, r22
    393a:	77 1f       	adc	r23, r23
    393c:	88 1f       	adc	r24, r24
    393e:	99 1f       	adc	r25, r25
    3940:	1a 94       	dec	r1
    3942:	69 f7       	brne	.-38     	; 0x391e <__udivmodsi4_loop>
    3944:	60 95       	com	r22
    3946:	70 95       	com	r23
    3948:	80 95       	com	r24
    394a:	90 95       	com	r25
    394c:	9b 01       	movw	r18, r22
    394e:	ac 01       	movw	r20, r24
    3950:	bd 01       	movw	r22, r26
    3952:	cf 01       	movw	r24, r30
    3954:	08 95       	ret

00003956 <__tablejump2__>:
    3956:	ee 0f       	add	r30, r30
    3958:	ff 1f       	adc	r31, r31
    395a:	00 24       	eor	r0, r0
    395c:	00 1c       	adc	r0, r0
    395e:	0b be       	out	0x3b, r0	; 59
    3960:	07 90       	elpm	r0, Z+
    3962:	f6 91       	elpm	r31, Z
    3964:	e0 2d       	mov	r30, r0
    3966:	09 94       	ijmp

00003968 <__muluhisi3>:
    3968:	09 d0       	rcall	.+18     	; 0x397c <__umulhisi3>
    396a:	a5 9f       	mul	r26, r21
    396c:	90 0d       	add	r25, r0
    396e:	b4 9f       	mul	r27, r20
    3970:	90 0d       	add	r25, r0
    3972:	a4 9f       	mul	r26, r20
    3974:	80 0d       	add	r24, r0
    3976:	91 1d       	adc	r25, r1
    3978:	11 24       	eor	r1, r1
    397a:	08 95       	ret

0000397c <__umulhisi3>:
    397c:	a2 9f       	mul	r26, r18
    397e:	b0 01       	movw	r22, r0
    3980:	b3 9f       	mul	r27, r19
    3982:	c0 01       	movw	r24, r0
    3984:	a3 9f       	mul	r26, r19
    3986:	70 0d       	add	r23, r0
    3988:	81 1d       	adc	r24, r1
    398a:	11 24       	eor	r1, r1
    398c:	91 1d       	adc	r25, r1
    398e:	b2 9f       	mul	r27, r18
    3990:	70 0d       	add	r23, r0
    3992:	81 1d       	adc	r24, r1
    3994:	11 24       	eor	r1, r1
    3996:	91 1d       	adc	r25, r1
    3998:	08 95       	ret

0000399a <sprintf>:
    399a:	0f 93       	push	r16
    399c:	1f 93       	push	r17
    399e:	cf 93       	push	r28
    39a0:	df 93       	push	r29
    39a2:	cd b7       	in	r28, 0x3d	; 61
    39a4:	de b7       	in	r29, 0x3e	; 62
    39a6:	2e 97       	sbiw	r28, 0x0e	; 14
    39a8:	0f b6       	in	r0, 0x3f	; 63
    39aa:	f8 94       	cli
    39ac:	de bf       	out	0x3e, r29	; 62
    39ae:	0f be       	out	0x3f, r0	; 63
    39b0:	cd bf       	out	0x3d, r28	; 61
    39b2:	0d 89       	ldd	r16, Y+21	; 0x15
    39b4:	1e 89       	ldd	r17, Y+22	; 0x16
    39b6:	86 e0       	ldi	r24, 0x06	; 6
    39b8:	8c 83       	std	Y+4, r24	; 0x04
    39ba:	1a 83       	std	Y+2, r17	; 0x02
    39bc:	09 83       	std	Y+1, r16	; 0x01
    39be:	8f ef       	ldi	r24, 0xFF	; 255
    39c0:	9f e7       	ldi	r25, 0x7F	; 127
    39c2:	9e 83       	std	Y+6, r25	; 0x06
    39c4:	8d 83       	std	Y+5, r24	; 0x05
    39c6:	ae 01       	movw	r20, r28
    39c8:	47 5e       	subi	r20, 0xE7	; 231
    39ca:	5f 4f       	sbci	r21, 0xFF	; 255
    39cc:	6f 89       	ldd	r22, Y+23	; 0x17
    39ce:	78 8d       	ldd	r23, Y+24	; 0x18
    39d0:	ce 01       	movw	r24, r28
    39d2:	01 96       	adiw	r24, 0x01	; 1
    39d4:	11 d0       	rcall	.+34     	; 0x39f8 <vfprintf>
    39d6:	2f 81       	ldd	r18, Y+7	; 0x07
    39d8:	38 85       	ldd	r19, Y+8	; 0x08
    39da:	f8 01       	movw	r30, r16
    39dc:	e2 0f       	add	r30, r18
    39de:	f3 1f       	adc	r31, r19
    39e0:	10 82       	st	Z, r1
    39e2:	2e 96       	adiw	r28, 0x0e	; 14
    39e4:	0f b6       	in	r0, 0x3f	; 63
    39e6:	f8 94       	cli
    39e8:	de bf       	out	0x3e, r29	; 62
    39ea:	0f be       	out	0x3f, r0	; 63
    39ec:	cd bf       	out	0x3d, r28	; 61
    39ee:	df 91       	pop	r29
    39f0:	cf 91       	pop	r28
    39f2:	1f 91       	pop	r17
    39f4:	0f 91       	pop	r16
    39f6:	08 95       	ret

000039f8 <vfprintf>:
    39f8:	2f 92       	push	r2
    39fa:	3f 92       	push	r3
    39fc:	4f 92       	push	r4
    39fe:	5f 92       	push	r5
    3a00:	6f 92       	push	r6
    3a02:	7f 92       	push	r7
    3a04:	8f 92       	push	r8
    3a06:	9f 92       	push	r9
    3a08:	af 92       	push	r10
    3a0a:	bf 92       	push	r11
    3a0c:	cf 92       	push	r12
    3a0e:	df 92       	push	r13
    3a10:	ef 92       	push	r14
    3a12:	ff 92       	push	r15
    3a14:	0f 93       	push	r16
    3a16:	1f 93       	push	r17
    3a18:	cf 93       	push	r28
    3a1a:	df 93       	push	r29
    3a1c:	cd b7       	in	r28, 0x3d	; 61
    3a1e:	de b7       	in	r29, 0x3e	; 62
    3a20:	2c 97       	sbiw	r28, 0x0c	; 12
    3a22:	0f b6       	in	r0, 0x3f	; 63
    3a24:	f8 94       	cli
    3a26:	de bf       	out	0x3e, r29	; 62
    3a28:	0f be       	out	0x3f, r0	; 63
    3a2a:	cd bf       	out	0x3d, r28	; 61
    3a2c:	7c 01       	movw	r14, r24
    3a2e:	6b 01       	movw	r12, r22
    3a30:	8a 01       	movw	r16, r20
    3a32:	fc 01       	movw	r30, r24
    3a34:	17 82       	std	Z+7, r1	; 0x07
    3a36:	16 82       	std	Z+6, r1	; 0x06
    3a38:	83 81       	ldd	r24, Z+3	; 0x03
    3a3a:	81 ff       	sbrs	r24, 1
    3a3c:	b0 c1       	rjmp	.+864    	; 0x3d9e <vfprintf+0x3a6>
    3a3e:	ce 01       	movw	r24, r28
    3a40:	01 96       	adiw	r24, 0x01	; 1
    3a42:	4c 01       	movw	r8, r24
    3a44:	f7 01       	movw	r30, r14
    3a46:	93 81       	ldd	r25, Z+3	; 0x03
    3a48:	f6 01       	movw	r30, r12
    3a4a:	93 fd       	sbrc	r25, 3
    3a4c:	85 91       	lpm	r24, Z+
    3a4e:	93 ff       	sbrs	r25, 3
    3a50:	81 91       	ld	r24, Z+
    3a52:	6f 01       	movw	r12, r30
    3a54:	88 23       	and	r24, r24
    3a56:	09 f4       	brne	.+2      	; 0x3a5a <vfprintf+0x62>
    3a58:	9e c1       	rjmp	.+828    	; 0x3d96 <vfprintf+0x39e>
    3a5a:	85 32       	cpi	r24, 0x25	; 37
    3a5c:	39 f4       	brne	.+14     	; 0x3a6c <vfprintf+0x74>
    3a5e:	93 fd       	sbrc	r25, 3
    3a60:	85 91       	lpm	r24, Z+
    3a62:	93 ff       	sbrs	r25, 3
    3a64:	81 91       	ld	r24, Z+
    3a66:	6f 01       	movw	r12, r30
    3a68:	85 32       	cpi	r24, 0x25	; 37
    3a6a:	21 f4       	brne	.+8      	; 0x3a74 <vfprintf+0x7c>
    3a6c:	b7 01       	movw	r22, r14
    3a6e:	90 e0       	ldi	r25, 0x00	; 0
    3a70:	c7 d1       	rcall	.+910    	; 0x3e00 <fputc>
    3a72:	e8 cf       	rjmp	.-48     	; 0x3a44 <vfprintf+0x4c>
    3a74:	51 2c       	mov	r5, r1
    3a76:	31 2c       	mov	r3, r1
    3a78:	20 e0       	ldi	r18, 0x00	; 0
    3a7a:	20 32       	cpi	r18, 0x20	; 32
    3a7c:	a0 f4       	brcc	.+40     	; 0x3aa6 <vfprintf+0xae>
    3a7e:	8b 32       	cpi	r24, 0x2B	; 43
    3a80:	69 f0       	breq	.+26     	; 0x3a9c <vfprintf+0xa4>
    3a82:	30 f4       	brcc	.+12     	; 0x3a90 <vfprintf+0x98>
    3a84:	80 32       	cpi	r24, 0x20	; 32
    3a86:	59 f0       	breq	.+22     	; 0x3a9e <vfprintf+0xa6>
    3a88:	83 32       	cpi	r24, 0x23	; 35
    3a8a:	69 f4       	brne	.+26     	; 0x3aa6 <vfprintf+0xae>
    3a8c:	20 61       	ori	r18, 0x10	; 16
    3a8e:	2c c0       	rjmp	.+88     	; 0x3ae8 <vfprintf+0xf0>
    3a90:	8d 32       	cpi	r24, 0x2D	; 45
    3a92:	39 f0       	breq	.+14     	; 0x3aa2 <vfprintf+0xaa>
    3a94:	80 33       	cpi	r24, 0x30	; 48
    3a96:	39 f4       	brne	.+14     	; 0x3aa6 <vfprintf+0xae>
    3a98:	21 60       	ori	r18, 0x01	; 1
    3a9a:	26 c0       	rjmp	.+76     	; 0x3ae8 <vfprintf+0xf0>
    3a9c:	22 60       	ori	r18, 0x02	; 2
    3a9e:	24 60       	ori	r18, 0x04	; 4
    3aa0:	23 c0       	rjmp	.+70     	; 0x3ae8 <vfprintf+0xf0>
    3aa2:	28 60       	ori	r18, 0x08	; 8
    3aa4:	21 c0       	rjmp	.+66     	; 0x3ae8 <vfprintf+0xf0>
    3aa6:	27 fd       	sbrc	r18, 7
    3aa8:	27 c0       	rjmp	.+78     	; 0x3af8 <vfprintf+0x100>
    3aaa:	30 ed       	ldi	r19, 0xD0	; 208
    3aac:	38 0f       	add	r19, r24
    3aae:	3a 30       	cpi	r19, 0x0A	; 10
    3ab0:	78 f4       	brcc	.+30     	; 0x3ad0 <vfprintf+0xd8>
    3ab2:	26 ff       	sbrs	r18, 6
    3ab4:	06 c0       	rjmp	.+12     	; 0x3ac2 <vfprintf+0xca>
    3ab6:	fa e0       	ldi	r31, 0x0A	; 10
    3ab8:	5f 9e       	mul	r5, r31
    3aba:	30 0d       	add	r19, r0
    3abc:	11 24       	eor	r1, r1
    3abe:	53 2e       	mov	r5, r19
    3ac0:	13 c0       	rjmp	.+38     	; 0x3ae8 <vfprintf+0xf0>
    3ac2:	8a e0       	ldi	r24, 0x0A	; 10
    3ac4:	38 9e       	mul	r3, r24
    3ac6:	30 0d       	add	r19, r0
    3ac8:	11 24       	eor	r1, r1
    3aca:	33 2e       	mov	r3, r19
    3acc:	20 62       	ori	r18, 0x20	; 32
    3ace:	0c c0       	rjmp	.+24     	; 0x3ae8 <vfprintf+0xf0>
    3ad0:	8e 32       	cpi	r24, 0x2E	; 46
    3ad2:	21 f4       	brne	.+8      	; 0x3adc <vfprintf+0xe4>
    3ad4:	26 fd       	sbrc	r18, 6
    3ad6:	5f c1       	rjmp	.+702    	; 0x3d96 <vfprintf+0x39e>
    3ad8:	20 64       	ori	r18, 0x40	; 64
    3ada:	06 c0       	rjmp	.+12     	; 0x3ae8 <vfprintf+0xf0>
    3adc:	8c 36       	cpi	r24, 0x6C	; 108
    3ade:	11 f4       	brne	.+4      	; 0x3ae4 <vfprintf+0xec>
    3ae0:	20 68       	ori	r18, 0x80	; 128
    3ae2:	02 c0       	rjmp	.+4      	; 0x3ae8 <vfprintf+0xf0>
    3ae4:	88 36       	cpi	r24, 0x68	; 104
    3ae6:	41 f4       	brne	.+16     	; 0x3af8 <vfprintf+0x100>
    3ae8:	f6 01       	movw	r30, r12
    3aea:	93 fd       	sbrc	r25, 3
    3aec:	85 91       	lpm	r24, Z+
    3aee:	93 ff       	sbrs	r25, 3
    3af0:	81 91       	ld	r24, Z+
    3af2:	6f 01       	movw	r12, r30
    3af4:	81 11       	cpse	r24, r1
    3af6:	c1 cf       	rjmp	.-126    	; 0x3a7a <vfprintf+0x82>
    3af8:	98 2f       	mov	r25, r24
    3afa:	9f 7d       	andi	r25, 0xDF	; 223
    3afc:	95 54       	subi	r25, 0x45	; 69
    3afe:	93 30       	cpi	r25, 0x03	; 3
    3b00:	28 f4       	brcc	.+10     	; 0x3b0c <vfprintf+0x114>
    3b02:	0c 5f       	subi	r16, 0xFC	; 252
    3b04:	1f 4f       	sbci	r17, 0xFF	; 255
    3b06:	ff e3       	ldi	r31, 0x3F	; 63
    3b08:	f9 83       	std	Y+1, r31	; 0x01
    3b0a:	0d c0       	rjmp	.+26     	; 0x3b26 <vfprintf+0x12e>
    3b0c:	83 36       	cpi	r24, 0x63	; 99
    3b0e:	31 f0       	breq	.+12     	; 0x3b1c <vfprintf+0x124>
    3b10:	83 37       	cpi	r24, 0x73	; 115
    3b12:	71 f0       	breq	.+28     	; 0x3b30 <vfprintf+0x138>
    3b14:	83 35       	cpi	r24, 0x53	; 83
    3b16:	09 f0       	breq	.+2      	; 0x3b1a <vfprintf+0x122>
    3b18:	57 c0       	rjmp	.+174    	; 0x3bc8 <vfprintf+0x1d0>
    3b1a:	21 c0       	rjmp	.+66     	; 0x3b5e <vfprintf+0x166>
    3b1c:	f8 01       	movw	r30, r16
    3b1e:	80 81       	ld	r24, Z
    3b20:	89 83       	std	Y+1, r24	; 0x01
    3b22:	0e 5f       	subi	r16, 0xFE	; 254
    3b24:	1f 4f       	sbci	r17, 0xFF	; 255
    3b26:	44 24       	eor	r4, r4
    3b28:	43 94       	inc	r4
    3b2a:	51 2c       	mov	r5, r1
    3b2c:	54 01       	movw	r10, r8
    3b2e:	14 c0       	rjmp	.+40     	; 0x3b58 <vfprintf+0x160>
    3b30:	38 01       	movw	r6, r16
    3b32:	f2 e0       	ldi	r31, 0x02	; 2
    3b34:	6f 0e       	add	r6, r31
    3b36:	71 1c       	adc	r7, r1
    3b38:	f8 01       	movw	r30, r16
    3b3a:	a0 80       	ld	r10, Z
    3b3c:	b1 80       	ldd	r11, Z+1	; 0x01
    3b3e:	26 ff       	sbrs	r18, 6
    3b40:	03 c0       	rjmp	.+6      	; 0x3b48 <vfprintf+0x150>
    3b42:	65 2d       	mov	r22, r5
    3b44:	70 e0       	ldi	r23, 0x00	; 0
    3b46:	02 c0       	rjmp	.+4      	; 0x3b4c <vfprintf+0x154>
    3b48:	6f ef       	ldi	r22, 0xFF	; 255
    3b4a:	7f ef       	ldi	r23, 0xFF	; 255
    3b4c:	c5 01       	movw	r24, r10
    3b4e:	2c 87       	std	Y+12, r18	; 0x0c
    3b50:	4c d1       	rcall	.+664    	; 0x3dea <strnlen>
    3b52:	2c 01       	movw	r4, r24
    3b54:	83 01       	movw	r16, r6
    3b56:	2c 85       	ldd	r18, Y+12	; 0x0c
    3b58:	2f 77       	andi	r18, 0x7F	; 127
    3b5a:	22 2e       	mov	r2, r18
    3b5c:	16 c0       	rjmp	.+44     	; 0x3b8a <vfprintf+0x192>
    3b5e:	38 01       	movw	r6, r16
    3b60:	f2 e0       	ldi	r31, 0x02	; 2
    3b62:	6f 0e       	add	r6, r31
    3b64:	71 1c       	adc	r7, r1
    3b66:	f8 01       	movw	r30, r16
    3b68:	a0 80       	ld	r10, Z
    3b6a:	b1 80       	ldd	r11, Z+1	; 0x01
    3b6c:	26 ff       	sbrs	r18, 6
    3b6e:	03 c0       	rjmp	.+6      	; 0x3b76 <vfprintf+0x17e>
    3b70:	65 2d       	mov	r22, r5
    3b72:	70 e0       	ldi	r23, 0x00	; 0
    3b74:	02 c0       	rjmp	.+4      	; 0x3b7a <vfprintf+0x182>
    3b76:	6f ef       	ldi	r22, 0xFF	; 255
    3b78:	7f ef       	ldi	r23, 0xFF	; 255
    3b7a:	c5 01       	movw	r24, r10
    3b7c:	2c 87       	std	Y+12, r18	; 0x0c
    3b7e:	2a d1       	rcall	.+596    	; 0x3dd4 <strnlen_P>
    3b80:	2c 01       	movw	r4, r24
    3b82:	2c 85       	ldd	r18, Y+12	; 0x0c
    3b84:	20 68       	ori	r18, 0x80	; 128
    3b86:	22 2e       	mov	r2, r18
    3b88:	83 01       	movw	r16, r6
    3b8a:	23 fc       	sbrc	r2, 3
    3b8c:	19 c0       	rjmp	.+50     	; 0x3bc0 <vfprintf+0x1c8>
    3b8e:	83 2d       	mov	r24, r3
    3b90:	90 e0       	ldi	r25, 0x00	; 0
    3b92:	48 16       	cp	r4, r24
    3b94:	59 06       	cpc	r5, r25
    3b96:	a0 f4       	brcc	.+40     	; 0x3bc0 <vfprintf+0x1c8>
    3b98:	b7 01       	movw	r22, r14
    3b9a:	80 e2       	ldi	r24, 0x20	; 32
    3b9c:	90 e0       	ldi	r25, 0x00	; 0
    3b9e:	30 d1       	rcall	.+608    	; 0x3e00 <fputc>
    3ba0:	3a 94       	dec	r3
    3ba2:	f5 cf       	rjmp	.-22     	; 0x3b8e <vfprintf+0x196>
    3ba4:	f5 01       	movw	r30, r10
    3ba6:	27 fc       	sbrc	r2, 7
    3ba8:	85 91       	lpm	r24, Z+
    3baa:	27 fe       	sbrs	r2, 7
    3bac:	81 91       	ld	r24, Z+
    3bae:	5f 01       	movw	r10, r30
    3bb0:	b7 01       	movw	r22, r14
    3bb2:	90 e0       	ldi	r25, 0x00	; 0
    3bb4:	25 d1       	rcall	.+586    	; 0x3e00 <fputc>
    3bb6:	31 10       	cpse	r3, r1
    3bb8:	3a 94       	dec	r3
    3bba:	f1 e0       	ldi	r31, 0x01	; 1
    3bbc:	4f 1a       	sub	r4, r31
    3bbe:	51 08       	sbc	r5, r1
    3bc0:	41 14       	cp	r4, r1
    3bc2:	51 04       	cpc	r5, r1
    3bc4:	79 f7       	brne	.-34     	; 0x3ba4 <vfprintf+0x1ac>
    3bc6:	de c0       	rjmp	.+444    	; 0x3d84 <vfprintf+0x38c>
    3bc8:	84 36       	cpi	r24, 0x64	; 100
    3bca:	11 f0       	breq	.+4      	; 0x3bd0 <vfprintf+0x1d8>
    3bcc:	89 36       	cpi	r24, 0x69	; 105
    3bce:	31 f5       	brne	.+76     	; 0x3c1c <vfprintf+0x224>
    3bd0:	f8 01       	movw	r30, r16
    3bd2:	27 ff       	sbrs	r18, 7
    3bd4:	07 c0       	rjmp	.+14     	; 0x3be4 <vfprintf+0x1ec>
    3bd6:	60 81       	ld	r22, Z
    3bd8:	71 81       	ldd	r23, Z+1	; 0x01
    3bda:	82 81       	ldd	r24, Z+2	; 0x02
    3bdc:	93 81       	ldd	r25, Z+3	; 0x03
    3bde:	0c 5f       	subi	r16, 0xFC	; 252
    3be0:	1f 4f       	sbci	r17, 0xFF	; 255
    3be2:	08 c0       	rjmp	.+16     	; 0x3bf4 <vfprintf+0x1fc>
    3be4:	60 81       	ld	r22, Z
    3be6:	71 81       	ldd	r23, Z+1	; 0x01
    3be8:	07 2e       	mov	r0, r23
    3bea:	00 0c       	add	r0, r0
    3bec:	88 0b       	sbc	r24, r24
    3bee:	99 0b       	sbc	r25, r25
    3bf0:	0e 5f       	subi	r16, 0xFE	; 254
    3bf2:	1f 4f       	sbci	r17, 0xFF	; 255
    3bf4:	2f 76       	andi	r18, 0x6F	; 111
    3bf6:	72 2e       	mov	r7, r18
    3bf8:	97 ff       	sbrs	r25, 7
    3bfa:	09 c0       	rjmp	.+18     	; 0x3c0e <vfprintf+0x216>
    3bfc:	90 95       	com	r25
    3bfe:	80 95       	com	r24
    3c00:	70 95       	com	r23
    3c02:	61 95       	neg	r22
    3c04:	7f 4f       	sbci	r23, 0xFF	; 255
    3c06:	8f 4f       	sbci	r24, 0xFF	; 255
    3c08:	9f 4f       	sbci	r25, 0xFF	; 255
    3c0a:	20 68       	ori	r18, 0x80	; 128
    3c0c:	72 2e       	mov	r7, r18
    3c0e:	2a e0       	ldi	r18, 0x0A	; 10
    3c10:	30 e0       	ldi	r19, 0x00	; 0
    3c12:	a4 01       	movw	r20, r8
    3c14:	2d d1       	rcall	.+602    	; 0x3e70 <__ultoa_invert>
    3c16:	a8 2e       	mov	r10, r24
    3c18:	a8 18       	sub	r10, r8
    3c1a:	43 c0       	rjmp	.+134    	; 0x3ca2 <vfprintf+0x2aa>
    3c1c:	85 37       	cpi	r24, 0x75	; 117
    3c1e:	29 f4       	brne	.+10     	; 0x3c2a <vfprintf+0x232>
    3c20:	2f 7e       	andi	r18, 0xEF	; 239
    3c22:	b2 2e       	mov	r11, r18
    3c24:	2a e0       	ldi	r18, 0x0A	; 10
    3c26:	30 e0       	ldi	r19, 0x00	; 0
    3c28:	25 c0       	rjmp	.+74     	; 0x3c74 <vfprintf+0x27c>
    3c2a:	f2 2f       	mov	r31, r18
    3c2c:	f9 7f       	andi	r31, 0xF9	; 249
    3c2e:	bf 2e       	mov	r11, r31
    3c30:	8f 36       	cpi	r24, 0x6F	; 111
    3c32:	c1 f0       	breq	.+48     	; 0x3c64 <vfprintf+0x26c>
    3c34:	18 f4       	brcc	.+6      	; 0x3c3c <vfprintf+0x244>
    3c36:	88 35       	cpi	r24, 0x58	; 88
    3c38:	79 f0       	breq	.+30     	; 0x3c58 <vfprintf+0x260>
    3c3a:	ad c0       	rjmp	.+346    	; 0x3d96 <vfprintf+0x39e>
    3c3c:	80 37       	cpi	r24, 0x70	; 112
    3c3e:	19 f0       	breq	.+6      	; 0x3c46 <vfprintf+0x24e>
    3c40:	88 37       	cpi	r24, 0x78	; 120
    3c42:	21 f0       	breq	.+8      	; 0x3c4c <vfprintf+0x254>
    3c44:	a8 c0       	rjmp	.+336    	; 0x3d96 <vfprintf+0x39e>
    3c46:	2f 2f       	mov	r18, r31
    3c48:	20 61       	ori	r18, 0x10	; 16
    3c4a:	b2 2e       	mov	r11, r18
    3c4c:	b4 fe       	sbrs	r11, 4
    3c4e:	0d c0       	rjmp	.+26     	; 0x3c6a <vfprintf+0x272>
    3c50:	8b 2d       	mov	r24, r11
    3c52:	84 60       	ori	r24, 0x04	; 4
    3c54:	b8 2e       	mov	r11, r24
    3c56:	09 c0       	rjmp	.+18     	; 0x3c6a <vfprintf+0x272>
    3c58:	24 ff       	sbrs	r18, 4
    3c5a:	0a c0       	rjmp	.+20     	; 0x3c70 <vfprintf+0x278>
    3c5c:	9f 2f       	mov	r25, r31
    3c5e:	96 60       	ori	r25, 0x06	; 6
    3c60:	b9 2e       	mov	r11, r25
    3c62:	06 c0       	rjmp	.+12     	; 0x3c70 <vfprintf+0x278>
    3c64:	28 e0       	ldi	r18, 0x08	; 8
    3c66:	30 e0       	ldi	r19, 0x00	; 0
    3c68:	05 c0       	rjmp	.+10     	; 0x3c74 <vfprintf+0x27c>
    3c6a:	20 e1       	ldi	r18, 0x10	; 16
    3c6c:	30 e0       	ldi	r19, 0x00	; 0
    3c6e:	02 c0       	rjmp	.+4      	; 0x3c74 <vfprintf+0x27c>
    3c70:	20 e1       	ldi	r18, 0x10	; 16
    3c72:	32 e0       	ldi	r19, 0x02	; 2
    3c74:	f8 01       	movw	r30, r16
    3c76:	b7 fe       	sbrs	r11, 7
    3c78:	07 c0       	rjmp	.+14     	; 0x3c88 <vfprintf+0x290>
    3c7a:	60 81       	ld	r22, Z
    3c7c:	71 81       	ldd	r23, Z+1	; 0x01
    3c7e:	82 81       	ldd	r24, Z+2	; 0x02
    3c80:	93 81       	ldd	r25, Z+3	; 0x03
    3c82:	0c 5f       	subi	r16, 0xFC	; 252
    3c84:	1f 4f       	sbci	r17, 0xFF	; 255
    3c86:	06 c0       	rjmp	.+12     	; 0x3c94 <vfprintf+0x29c>
    3c88:	60 81       	ld	r22, Z
    3c8a:	71 81       	ldd	r23, Z+1	; 0x01
    3c8c:	80 e0       	ldi	r24, 0x00	; 0
    3c8e:	90 e0       	ldi	r25, 0x00	; 0
    3c90:	0e 5f       	subi	r16, 0xFE	; 254
    3c92:	1f 4f       	sbci	r17, 0xFF	; 255
    3c94:	a4 01       	movw	r20, r8
    3c96:	ec d0       	rcall	.+472    	; 0x3e70 <__ultoa_invert>
    3c98:	a8 2e       	mov	r10, r24
    3c9a:	a8 18       	sub	r10, r8
    3c9c:	fb 2d       	mov	r31, r11
    3c9e:	ff 77       	andi	r31, 0x7F	; 127
    3ca0:	7f 2e       	mov	r7, r31
    3ca2:	76 fe       	sbrs	r7, 6
    3ca4:	0b c0       	rjmp	.+22     	; 0x3cbc <vfprintf+0x2c4>
    3ca6:	37 2d       	mov	r19, r7
    3ca8:	3e 7f       	andi	r19, 0xFE	; 254
    3caa:	a5 14       	cp	r10, r5
    3cac:	50 f4       	brcc	.+20     	; 0x3cc2 <vfprintf+0x2ca>
    3cae:	74 fe       	sbrs	r7, 4
    3cb0:	0a c0       	rjmp	.+20     	; 0x3cc6 <vfprintf+0x2ce>
    3cb2:	72 fc       	sbrc	r7, 2
    3cb4:	08 c0       	rjmp	.+16     	; 0x3cc6 <vfprintf+0x2ce>
    3cb6:	37 2d       	mov	r19, r7
    3cb8:	3e 7e       	andi	r19, 0xEE	; 238
    3cba:	05 c0       	rjmp	.+10     	; 0x3cc6 <vfprintf+0x2ce>
    3cbc:	ba 2c       	mov	r11, r10
    3cbe:	37 2d       	mov	r19, r7
    3cc0:	03 c0       	rjmp	.+6      	; 0x3cc8 <vfprintf+0x2d0>
    3cc2:	ba 2c       	mov	r11, r10
    3cc4:	01 c0       	rjmp	.+2      	; 0x3cc8 <vfprintf+0x2d0>
    3cc6:	b5 2c       	mov	r11, r5
    3cc8:	34 ff       	sbrs	r19, 4
    3cca:	0d c0       	rjmp	.+26     	; 0x3ce6 <vfprintf+0x2ee>
    3ccc:	fe 01       	movw	r30, r28
    3cce:	ea 0d       	add	r30, r10
    3cd0:	f1 1d       	adc	r31, r1
    3cd2:	80 81       	ld	r24, Z
    3cd4:	80 33       	cpi	r24, 0x30	; 48
    3cd6:	11 f4       	brne	.+4      	; 0x3cdc <vfprintf+0x2e4>
    3cd8:	39 7e       	andi	r19, 0xE9	; 233
    3cda:	09 c0       	rjmp	.+18     	; 0x3cee <vfprintf+0x2f6>
    3cdc:	32 ff       	sbrs	r19, 2
    3cde:	06 c0       	rjmp	.+12     	; 0x3cec <vfprintf+0x2f4>
    3ce0:	b3 94       	inc	r11
    3ce2:	b3 94       	inc	r11
    3ce4:	04 c0       	rjmp	.+8      	; 0x3cee <vfprintf+0x2f6>
    3ce6:	83 2f       	mov	r24, r19
    3ce8:	86 78       	andi	r24, 0x86	; 134
    3cea:	09 f0       	breq	.+2      	; 0x3cee <vfprintf+0x2f6>
    3cec:	b3 94       	inc	r11
    3cee:	33 fd       	sbrc	r19, 3
    3cf0:	12 c0       	rjmp	.+36     	; 0x3d16 <vfprintf+0x31e>
    3cf2:	30 ff       	sbrs	r19, 0
    3cf4:	06 c0       	rjmp	.+12     	; 0x3d02 <vfprintf+0x30a>
    3cf6:	5a 2c       	mov	r5, r10
    3cf8:	b3 14       	cp	r11, r3
    3cfa:	18 f4       	brcc	.+6      	; 0x3d02 <vfprintf+0x30a>
    3cfc:	53 0c       	add	r5, r3
    3cfe:	5b 18       	sub	r5, r11
    3d00:	b3 2c       	mov	r11, r3
    3d02:	b3 14       	cp	r11, r3
    3d04:	60 f4       	brcc	.+24     	; 0x3d1e <vfprintf+0x326>
    3d06:	b7 01       	movw	r22, r14
    3d08:	80 e2       	ldi	r24, 0x20	; 32
    3d0a:	90 e0       	ldi	r25, 0x00	; 0
    3d0c:	3c 87       	std	Y+12, r19	; 0x0c
    3d0e:	78 d0       	rcall	.+240    	; 0x3e00 <fputc>
    3d10:	b3 94       	inc	r11
    3d12:	3c 85       	ldd	r19, Y+12	; 0x0c
    3d14:	f6 cf       	rjmp	.-20     	; 0x3d02 <vfprintf+0x30a>
    3d16:	b3 14       	cp	r11, r3
    3d18:	10 f4       	brcc	.+4      	; 0x3d1e <vfprintf+0x326>
    3d1a:	3b 18       	sub	r3, r11
    3d1c:	01 c0       	rjmp	.+2      	; 0x3d20 <vfprintf+0x328>
    3d1e:	31 2c       	mov	r3, r1
    3d20:	34 ff       	sbrs	r19, 4
    3d22:	11 c0       	rjmp	.+34     	; 0x3d46 <vfprintf+0x34e>
    3d24:	b7 01       	movw	r22, r14
    3d26:	80 e3       	ldi	r24, 0x30	; 48
    3d28:	90 e0       	ldi	r25, 0x00	; 0
    3d2a:	3c 87       	std	Y+12, r19	; 0x0c
    3d2c:	69 d0       	rcall	.+210    	; 0x3e00 <fputc>
    3d2e:	3c 85       	ldd	r19, Y+12	; 0x0c
    3d30:	32 ff       	sbrs	r19, 2
    3d32:	16 c0       	rjmp	.+44     	; 0x3d60 <vfprintf+0x368>
    3d34:	31 fd       	sbrc	r19, 1
    3d36:	03 c0       	rjmp	.+6      	; 0x3d3e <vfprintf+0x346>
    3d38:	88 e7       	ldi	r24, 0x78	; 120
    3d3a:	90 e0       	ldi	r25, 0x00	; 0
    3d3c:	02 c0       	rjmp	.+4      	; 0x3d42 <vfprintf+0x34a>
    3d3e:	88 e5       	ldi	r24, 0x58	; 88
    3d40:	90 e0       	ldi	r25, 0x00	; 0
    3d42:	b7 01       	movw	r22, r14
    3d44:	0c c0       	rjmp	.+24     	; 0x3d5e <vfprintf+0x366>
    3d46:	83 2f       	mov	r24, r19
    3d48:	86 78       	andi	r24, 0x86	; 134
    3d4a:	51 f0       	breq	.+20     	; 0x3d60 <vfprintf+0x368>
    3d4c:	31 ff       	sbrs	r19, 1
    3d4e:	02 c0       	rjmp	.+4      	; 0x3d54 <vfprintf+0x35c>
    3d50:	8b e2       	ldi	r24, 0x2B	; 43
    3d52:	01 c0       	rjmp	.+2      	; 0x3d56 <vfprintf+0x35e>
    3d54:	80 e2       	ldi	r24, 0x20	; 32
    3d56:	37 fd       	sbrc	r19, 7
    3d58:	8d e2       	ldi	r24, 0x2D	; 45
    3d5a:	b7 01       	movw	r22, r14
    3d5c:	90 e0       	ldi	r25, 0x00	; 0
    3d5e:	50 d0       	rcall	.+160    	; 0x3e00 <fputc>
    3d60:	a5 14       	cp	r10, r5
    3d62:	30 f4       	brcc	.+12     	; 0x3d70 <vfprintf+0x378>
    3d64:	b7 01       	movw	r22, r14
    3d66:	80 e3       	ldi	r24, 0x30	; 48
    3d68:	90 e0       	ldi	r25, 0x00	; 0
    3d6a:	4a d0       	rcall	.+148    	; 0x3e00 <fputc>
    3d6c:	5a 94       	dec	r5
    3d6e:	f8 cf       	rjmp	.-16     	; 0x3d60 <vfprintf+0x368>
    3d70:	aa 94       	dec	r10
    3d72:	f4 01       	movw	r30, r8
    3d74:	ea 0d       	add	r30, r10
    3d76:	f1 1d       	adc	r31, r1
    3d78:	80 81       	ld	r24, Z
    3d7a:	b7 01       	movw	r22, r14
    3d7c:	90 e0       	ldi	r25, 0x00	; 0
    3d7e:	40 d0       	rcall	.+128    	; 0x3e00 <fputc>
    3d80:	a1 10       	cpse	r10, r1
    3d82:	f6 cf       	rjmp	.-20     	; 0x3d70 <vfprintf+0x378>
    3d84:	33 20       	and	r3, r3
    3d86:	09 f4       	brne	.+2      	; 0x3d8a <vfprintf+0x392>
    3d88:	5d ce       	rjmp	.-838    	; 0x3a44 <vfprintf+0x4c>
    3d8a:	b7 01       	movw	r22, r14
    3d8c:	80 e2       	ldi	r24, 0x20	; 32
    3d8e:	90 e0       	ldi	r25, 0x00	; 0
    3d90:	37 d0       	rcall	.+110    	; 0x3e00 <fputc>
    3d92:	3a 94       	dec	r3
    3d94:	f7 cf       	rjmp	.-18     	; 0x3d84 <vfprintf+0x38c>
    3d96:	f7 01       	movw	r30, r14
    3d98:	86 81       	ldd	r24, Z+6	; 0x06
    3d9a:	97 81       	ldd	r25, Z+7	; 0x07
    3d9c:	02 c0       	rjmp	.+4      	; 0x3da2 <vfprintf+0x3aa>
    3d9e:	8f ef       	ldi	r24, 0xFF	; 255
    3da0:	9f ef       	ldi	r25, 0xFF	; 255
    3da2:	2c 96       	adiw	r28, 0x0c	; 12
    3da4:	0f b6       	in	r0, 0x3f	; 63
    3da6:	f8 94       	cli
    3da8:	de bf       	out	0x3e, r29	; 62
    3daa:	0f be       	out	0x3f, r0	; 63
    3dac:	cd bf       	out	0x3d, r28	; 61
    3dae:	df 91       	pop	r29
    3db0:	cf 91       	pop	r28
    3db2:	1f 91       	pop	r17
    3db4:	0f 91       	pop	r16
    3db6:	ff 90       	pop	r15
    3db8:	ef 90       	pop	r14
    3dba:	df 90       	pop	r13
    3dbc:	cf 90       	pop	r12
    3dbe:	bf 90       	pop	r11
    3dc0:	af 90       	pop	r10
    3dc2:	9f 90       	pop	r9
    3dc4:	8f 90       	pop	r8
    3dc6:	7f 90       	pop	r7
    3dc8:	6f 90       	pop	r6
    3dca:	5f 90       	pop	r5
    3dcc:	4f 90       	pop	r4
    3dce:	3f 90       	pop	r3
    3dd0:	2f 90       	pop	r2
    3dd2:	08 95       	ret

00003dd4 <strnlen_P>:
    3dd4:	fc 01       	movw	r30, r24
    3dd6:	05 90       	lpm	r0, Z+
    3dd8:	61 50       	subi	r22, 0x01	; 1
    3dda:	70 40       	sbci	r23, 0x00	; 0
    3ddc:	01 10       	cpse	r0, r1
    3dde:	d8 f7       	brcc	.-10     	; 0x3dd6 <strnlen_P+0x2>
    3de0:	80 95       	com	r24
    3de2:	90 95       	com	r25
    3de4:	8e 0f       	add	r24, r30
    3de6:	9f 1f       	adc	r25, r31
    3de8:	08 95       	ret

00003dea <strnlen>:
    3dea:	fc 01       	movw	r30, r24
    3dec:	61 50       	subi	r22, 0x01	; 1
    3dee:	70 40       	sbci	r23, 0x00	; 0
    3df0:	01 90       	ld	r0, Z+
    3df2:	01 10       	cpse	r0, r1
    3df4:	d8 f7       	brcc	.-10     	; 0x3dec <strnlen+0x2>
    3df6:	80 95       	com	r24
    3df8:	90 95       	com	r25
    3dfa:	8e 0f       	add	r24, r30
    3dfc:	9f 1f       	adc	r25, r31
    3dfe:	08 95       	ret

00003e00 <fputc>:
    3e00:	0f 93       	push	r16
    3e02:	1f 93       	push	r17
    3e04:	cf 93       	push	r28
    3e06:	df 93       	push	r29
    3e08:	fb 01       	movw	r30, r22
    3e0a:	23 81       	ldd	r18, Z+3	; 0x03
    3e0c:	21 fd       	sbrc	r18, 1
    3e0e:	03 c0       	rjmp	.+6      	; 0x3e16 <fputc+0x16>
    3e10:	8f ef       	ldi	r24, 0xFF	; 255
    3e12:	9f ef       	ldi	r25, 0xFF	; 255
    3e14:	28 c0       	rjmp	.+80     	; 0x3e66 <fputc+0x66>
    3e16:	22 ff       	sbrs	r18, 2
    3e18:	16 c0       	rjmp	.+44     	; 0x3e46 <fputc+0x46>
    3e1a:	46 81       	ldd	r20, Z+6	; 0x06
    3e1c:	57 81       	ldd	r21, Z+7	; 0x07
    3e1e:	24 81       	ldd	r18, Z+4	; 0x04
    3e20:	35 81       	ldd	r19, Z+5	; 0x05
    3e22:	42 17       	cp	r20, r18
    3e24:	53 07       	cpc	r21, r19
    3e26:	44 f4       	brge	.+16     	; 0x3e38 <fputc+0x38>
    3e28:	a0 81       	ld	r26, Z
    3e2a:	b1 81       	ldd	r27, Z+1	; 0x01
    3e2c:	9d 01       	movw	r18, r26
    3e2e:	2f 5f       	subi	r18, 0xFF	; 255
    3e30:	3f 4f       	sbci	r19, 0xFF	; 255
    3e32:	31 83       	std	Z+1, r19	; 0x01
    3e34:	20 83       	st	Z, r18
    3e36:	8c 93       	st	X, r24
    3e38:	26 81       	ldd	r18, Z+6	; 0x06
    3e3a:	37 81       	ldd	r19, Z+7	; 0x07
    3e3c:	2f 5f       	subi	r18, 0xFF	; 255
    3e3e:	3f 4f       	sbci	r19, 0xFF	; 255
    3e40:	37 83       	std	Z+7, r19	; 0x07
    3e42:	26 83       	std	Z+6, r18	; 0x06
    3e44:	10 c0       	rjmp	.+32     	; 0x3e66 <fputc+0x66>
    3e46:	eb 01       	movw	r28, r22
    3e48:	09 2f       	mov	r16, r25
    3e4a:	18 2f       	mov	r17, r24
    3e4c:	00 84       	ldd	r0, Z+8	; 0x08
    3e4e:	f1 85       	ldd	r31, Z+9	; 0x09
    3e50:	e0 2d       	mov	r30, r0
    3e52:	09 95       	icall
    3e54:	89 2b       	or	r24, r25
    3e56:	e1 f6       	brne	.-72     	; 0x3e10 <fputc+0x10>
    3e58:	8e 81       	ldd	r24, Y+6	; 0x06
    3e5a:	9f 81       	ldd	r25, Y+7	; 0x07
    3e5c:	01 96       	adiw	r24, 0x01	; 1
    3e5e:	9f 83       	std	Y+7, r25	; 0x07
    3e60:	8e 83       	std	Y+6, r24	; 0x06
    3e62:	81 2f       	mov	r24, r17
    3e64:	90 2f       	mov	r25, r16
    3e66:	df 91       	pop	r29
    3e68:	cf 91       	pop	r28
    3e6a:	1f 91       	pop	r17
    3e6c:	0f 91       	pop	r16
    3e6e:	08 95       	ret

00003e70 <__ultoa_invert>:
    3e70:	fa 01       	movw	r30, r20
    3e72:	aa 27       	eor	r26, r26
    3e74:	28 30       	cpi	r18, 0x08	; 8
    3e76:	51 f1       	breq	.+84     	; 0x3ecc <__ultoa_invert+0x5c>
    3e78:	20 31       	cpi	r18, 0x10	; 16
    3e7a:	81 f1       	breq	.+96     	; 0x3edc <__ultoa_invert+0x6c>
    3e7c:	e8 94       	clt
    3e7e:	6f 93       	push	r22
    3e80:	6e 7f       	andi	r22, 0xFE	; 254
    3e82:	6e 5f       	subi	r22, 0xFE	; 254
    3e84:	7f 4f       	sbci	r23, 0xFF	; 255
    3e86:	8f 4f       	sbci	r24, 0xFF	; 255
    3e88:	9f 4f       	sbci	r25, 0xFF	; 255
    3e8a:	af 4f       	sbci	r26, 0xFF	; 255
    3e8c:	b1 e0       	ldi	r27, 0x01	; 1
    3e8e:	3e d0       	rcall	.+124    	; 0x3f0c <__ultoa_invert+0x9c>
    3e90:	b4 e0       	ldi	r27, 0x04	; 4
    3e92:	3c d0       	rcall	.+120    	; 0x3f0c <__ultoa_invert+0x9c>
    3e94:	67 0f       	add	r22, r23
    3e96:	78 1f       	adc	r23, r24
    3e98:	89 1f       	adc	r24, r25
    3e9a:	9a 1f       	adc	r25, r26
    3e9c:	a1 1d       	adc	r26, r1
    3e9e:	68 0f       	add	r22, r24
    3ea0:	79 1f       	adc	r23, r25
    3ea2:	8a 1f       	adc	r24, r26
    3ea4:	91 1d       	adc	r25, r1
    3ea6:	a1 1d       	adc	r26, r1
    3ea8:	6a 0f       	add	r22, r26
    3eaa:	71 1d       	adc	r23, r1
    3eac:	81 1d       	adc	r24, r1
    3eae:	91 1d       	adc	r25, r1
    3eb0:	a1 1d       	adc	r26, r1
    3eb2:	20 d0       	rcall	.+64     	; 0x3ef4 <__ultoa_invert+0x84>
    3eb4:	09 f4       	brne	.+2      	; 0x3eb8 <__ultoa_invert+0x48>
    3eb6:	68 94       	set
    3eb8:	3f 91       	pop	r19
    3eba:	2a e0       	ldi	r18, 0x0A	; 10
    3ebc:	26 9f       	mul	r18, r22
    3ebe:	11 24       	eor	r1, r1
    3ec0:	30 19       	sub	r19, r0
    3ec2:	30 5d       	subi	r19, 0xD0	; 208
    3ec4:	31 93       	st	Z+, r19
    3ec6:	de f6       	brtc	.-74     	; 0x3e7e <__ultoa_invert+0xe>
    3ec8:	cf 01       	movw	r24, r30
    3eca:	08 95       	ret
    3ecc:	46 2f       	mov	r20, r22
    3ece:	47 70       	andi	r20, 0x07	; 7
    3ed0:	40 5d       	subi	r20, 0xD0	; 208
    3ed2:	41 93       	st	Z+, r20
    3ed4:	b3 e0       	ldi	r27, 0x03	; 3
    3ed6:	0f d0       	rcall	.+30     	; 0x3ef6 <__ultoa_invert+0x86>
    3ed8:	c9 f7       	brne	.-14     	; 0x3ecc <__ultoa_invert+0x5c>
    3eda:	f6 cf       	rjmp	.-20     	; 0x3ec8 <__ultoa_invert+0x58>
    3edc:	46 2f       	mov	r20, r22
    3ede:	4f 70       	andi	r20, 0x0F	; 15
    3ee0:	40 5d       	subi	r20, 0xD0	; 208
    3ee2:	4a 33       	cpi	r20, 0x3A	; 58
    3ee4:	18 f0       	brcs	.+6      	; 0x3eec <__ultoa_invert+0x7c>
    3ee6:	49 5d       	subi	r20, 0xD9	; 217
    3ee8:	31 fd       	sbrc	r19, 1
    3eea:	40 52       	subi	r20, 0x20	; 32
    3eec:	41 93       	st	Z+, r20
    3eee:	02 d0       	rcall	.+4      	; 0x3ef4 <__ultoa_invert+0x84>
    3ef0:	a9 f7       	brne	.-22     	; 0x3edc <__ultoa_invert+0x6c>
    3ef2:	ea cf       	rjmp	.-44     	; 0x3ec8 <__ultoa_invert+0x58>
    3ef4:	b4 e0       	ldi	r27, 0x04	; 4
    3ef6:	a6 95       	lsr	r26
    3ef8:	97 95       	ror	r25
    3efa:	87 95       	ror	r24
    3efc:	77 95       	ror	r23
    3efe:	67 95       	ror	r22
    3f00:	ba 95       	dec	r27
    3f02:	c9 f7       	brne	.-14     	; 0x3ef6 <__ultoa_invert+0x86>
    3f04:	00 97       	sbiw	r24, 0x00	; 0
    3f06:	61 05       	cpc	r22, r1
    3f08:	71 05       	cpc	r23, r1
    3f0a:	08 95       	ret
    3f0c:	9b 01       	movw	r18, r22
    3f0e:	ac 01       	movw	r20, r24
    3f10:	0a 2e       	mov	r0, r26
    3f12:	06 94       	lsr	r0
    3f14:	57 95       	ror	r21
    3f16:	47 95       	ror	r20
    3f18:	37 95       	ror	r19
    3f1a:	27 95       	ror	r18
    3f1c:	ba 95       	dec	r27
    3f1e:	c9 f7       	brne	.-14     	; 0x3f12 <__ultoa_invert+0xa2>
    3f20:	62 0f       	add	r22, r18
    3f22:	73 1f       	adc	r23, r19
    3f24:	84 1f       	adc	r24, r20
    3f26:	95 1f       	adc	r25, r21
    3f28:	a0 1d       	adc	r26, r0
    3f2a:	08 95       	ret

00003f2c <__do_global_dtors>:
    3f2c:	11 e0       	ldi	r17, 0x01	; 1
    3f2e:	c0 e8       	ldi	r28, 0x80	; 128
    3f30:	d1 e0       	ldi	r29, 0x01	; 1
    3f32:	03 c0       	rjmp	.+6      	; 0x3f3a <__do_global_dtors+0xe>
    3f34:	fe 01       	movw	r30, r28
    3f36:	0f dd       	rcall	.-1506   	; 0x3956 <__tablejump2__>
    3f38:	21 96       	adiw	r28, 0x01	; 1
    3f3a:	c1 38       	cpi	r28, 0x81	; 129
    3f3c:	d1 07       	cpc	r29, r17
    3f3e:	d1 f7       	brne	.-12     	; 0x3f34 <__do_global_dtors+0x8>
    3f40:	f8 94       	cli

00003f42 <__stop_program>:
    3f42:	ff cf       	rjmp	.-2      	; 0x3f42 <__stop_program>
