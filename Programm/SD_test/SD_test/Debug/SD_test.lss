
SD_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  000031fa  0000328e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000031fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00001035  00800128  00800128  000032b6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000032b6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000032e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00003328  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000365b  00000000  00000000  000034b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006c6  00000000  00000000  00006b0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002192  00000000  00000000  000071d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008ac  00000000  00000000  00009364  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000078e  00000000  00000000  00009c10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005c65  00000000  00000000  0000a39e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000250  00000000  00000000  00010003  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	93 c0       	rjmp	.+294    	; 0x128 <__ctors_end>
       2:	00 00       	nop
       4:	b0 c0       	rjmp	.+352    	; 0x166 <__bad_interrupt>
       6:	00 00       	nop
       8:	ae c0       	rjmp	.+348    	; 0x166 <__bad_interrupt>
       a:	00 00       	nop
       c:	ac c0       	rjmp	.+344    	; 0x166 <__bad_interrupt>
       e:	00 00       	nop
      10:	aa c0       	rjmp	.+340    	; 0x166 <__bad_interrupt>
      12:	00 00       	nop
      14:	a8 c0       	rjmp	.+336    	; 0x166 <__bad_interrupt>
      16:	00 00       	nop
      18:	a6 c0       	rjmp	.+332    	; 0x166 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a4 c0       	rjmp	.+328    	; 0x166 <__bad_interrupt>
      1e:	00 00       	nop
      20:	a2 c0       	rjmp	.+324    	; 0x166 <__bad_interrupt>
      22:	00 00       	nop
      24:	a0 c0       	rjmp	.+320    	; 0x166 <__bad_interrupt>
      26:	00 00       	nop
      28:	9e c0       	rjmp	.+316    	; 0x166 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9c c0       	rjmp	.+312    	; 0x166 <__bad_interrupt>
      2e:	00 00       	nop
      30:	9a c0       	rjmp	.+308    	; 0x166 <__bad_interrupt>
      32:	00 00       	nop
      34:	98 c0       	rjmp	.+304    	; 0x166 <__bad_interrupt>
      36:	00 00       	nop
      38:	96 c0       	rjmp	.+300    	; 0x166 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	94 c0       	rjmp	.+296    	; 0x166 <__bad_interrupt>
      3e:	00 00       	nop
      40:	92 c0       	rjmp	.+292    	; 0x166 <__bad_interrupt>
      42:	00 00       	nop
      44:	90 c0       	rjmp	.+288    	; 0x166 <__bad_interrupt>
      46:	00 00       	nop
      48:	8e c0       	rjmp	.+284    	; 0x166 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8c c0       	rjmp	.+280    	; 0x166 <__bad_interrupt>
      4e:	00 00       	nop
      50:	8a c0       	rjmp	.+276    	; 0x166 <__bad_interrupt>
      52:	00 00       	nop
      54:	88 c0       	rjmp	.+272    	; 0x166 <__bad_interrupt>
      56:	00 00       	nop
      58:	86 c0       	rjmp	.+268    	; 0x166 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	84 c0       	rjmp	.+264    	; 0x166 <__bad_interrupt>
      5e:	00 00       	nop
      60:	82 c0       	rjmp	.+260    	; 0x166 <__bad_interrupt>
      62:	00 00       	nop
      64:	80 c0       	rjmp	.+256    	; 0x166 <__bad_interrupt>
      66:	00 00       	nop
      68:	7e c0       	rjmp	.+252    	; 0x166 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7c c0       	rjmp	.+248    	; 0x166 <__bad_interrupt>
      6e:	00 00       	nop
      70:	7a c0       	rjmp	.+244    	; 0x166 <__bad_interrupt>
      72:	00 00       	nop
      74:	78 c0       	rjmp	.+240    	; 0x166 <__bad_interrupt>
      76:	00 00       	nop
      78:	76 c0       	rjmp	.+236    	; 0x166 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	74 c0       	rjmp	.+232    	; 0x166 <__bad_interrupt>
      7e:	00 00       	nop
      80:	72 c0       	rjmp	.+228    	; 0x166 <__bad_interrupt>
      82:	00 00       	nop
      84:	70 c0       	rjmp	.+224    	; 0x166 <__bad_interrupt>
      86:	00 00       	nop
      88:	6e c0       	rjmp	.+220    	; 0x166 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	53 03       	mulsu	r21, r19
      8e:	5a 03       	fmul	r21, r18
      90:	a7 04       	cpc	r10, r7
      92:	ca 03       	fmulsu	r20, r18
      94:	a7 04       	cpc	r10, r7
      96:	a7 04       	cpc	r10, r7
      98:	a7 04       	cpc	r10, r7
      9a:	9f 04       	cpc	r9, r15
      9c:	a7 04       	cpc	r10, r7
      9e:	a7 04       	cpc	r10, r7
      a0:	a7 04       	cpc	r10, r7
      a2:	a7 04       	cpc	r10, r7
      a4:	a7 04       	cpc	r10, r7
      a6:	a7 04       	cpc	r10, r7
      a8:	a7 04       	cpc	r10, r7
      aa:	a7 04       	cpc	r10, r7
      ac:	a7 04       	cpc	r10, r7
      ae:	a7 04       	cpc	r10, r7
      b0:	a7 04       	cpc	r10, r7
      b2:	a7 04       	cpc	r10, r7
      b4:	a7 04       	cpc	r10, r7
      b6:	a7 04       	cpc	r10, r7
      b8:	a7 04       	cpc	r10, r7
      ba:	a7 04       	cpc	r10, r7
      bc:	a7 04       	cpc	r10, r7
      be:	a7 04       	cpc	r10, r7
      c0:	a7 04       	cpc	r10, r7
      c2:	a7 04       	cpc	r10, r7
      c4:	a7 04       	cpc	r10, r7
      c6:	a7 04       	cpc	r10, r7
      c8:	a7 04       	cpc	r10, r7
      ca:	a7 04       	cpc	r10, r7
      cc:	a7 04       	cpc	r10, r7
      ce:	a7 04       	cpc	r10, r7
      d0:	a7 04       	cpc	r10, r7
      d2:	a7 04       	cpc	r10, r7
      d4:	a7 04       	cpc	r10, r7
      d6:	a7 04       	cpc	r10, r7
      d8:	a7 04       	cpc	r10, r7
      da:	a7 04       	cpc	r10, r7
      dc:	a7 04       	cpc	r10, r7
      de:	a7 04       	cpc	r10, r7
      e0:	a7 04       	cpc	r10, r7
      e2:	a7 04       	cpc	r10, r7
      e4:	a7 04       	cpc	r10, r7
      e6:	a7 04       	cpc	r10, r7
      e8:	a7 04       	cpc	r10, r7
      ea:	a7 04       	cpc	r10, r7
      ec:	a7 04       	cpc	r10, r7
      ee:	a7 04       	cpc	r10, r7
      f0:	50 04       	cpc	r5, r0
      f2:	56 04       	cpc	r5, r6
      f4:	67 04       	cpc	r6, r7
      f6:	78 04       	cpc	r7, r8
      f8:	8d 04       	cpc	r8, r13
      fa:	5a 18       	sub	r5, r10
      fc:	2e 17       	cp	r18, r30
      fe:	3d 17       	cp	r19, r29
     100:	38 17       	cp	r19, r24
     102:	38 17       	cp	r19, r24
     104:	38 17       	cp	r19, r24
     106:	38 17       	cp	r19, r24
     108:	38 17       	cp	r19, r24
     10a:	38 17       	cp	r19, r24
     10c:	38 17       	cp	r19, r24
     10e:	38 17       	cp	r19, r24
     110:	38 17       	cp	r19, r24
     112:	38 17       	cp	r19, r24
     114:	68 18       	sub	r6, r8
     116:	38 17       	cp	r19, r24
     118:	38 17       	cp	r19, r24
     11a:	38 17       	cp	r19, r24
     11c:	e4 16       	cp	r14, r20
     11e:	38 17       	cp	r19, r24
     120:	3d 17       	cp	r19, r29
     122:	38 17       	cp	r19, r24
     124:	38 17       	cp	r19, r24
     126:	2b 18       	sub	r2, r11

00000128 <__ctors_end>:
     128:	11 24       	eor	r1, r1
     12a:	1f be       	out	0x3f, r1	; 63
     12c:	cf ef       	ldi	r28, 0xFF	; 255
     12e:	d0 e4       	ldi	r29, 0x40	; 64
     130:	de bf       	out	0x3e, r29	; 62
     132:	cd bf       	out	0x3d, r28	; 61

00000134 <__do_copy_data>:
     134:	11 e0       	ldi	r17, 0x01	; 1
     136:	a0 e0       	ldi	r26, 0x00	; 0
     138:	b1 e0       	ldi	r27, 0x01	; 1
     13a:	ea ef       	ldi	r30, 0xFA	; 250
     13c:	f1 e3       	ldi	r31, 0x31	; 49
     13e:	00 e0       	ldi	r16, 0x00	; 0
     140:	0b bf       	out	0x3b, r16	; 59
     142:	02 c0       	rjmp	.+4      	; 0x148 <__do_copy_data+0x14>
     144:	07 90       	elpm	r0, Z+
     146:	0d 92       	st	X+, r0
     148:	a8 32       	cpi	r26, 0x28	; 40
     14a:	b1 07       	cpc	r27, r17
     14c:	d9 f7       	brne	.-10     	; 0x144 <__do_copy_data+0x10>

0000014e <__do_clear_bss>:
     14e:	21 e1       	ldi	r18, 0x11	; 17
     150:	a8 e2       	ldi	r26, 0x28	; 40
     152:	b1 e0       	ldi	r27, 0x01	; 1
     154:	01 c0       	rjmp	.+2      	; 0x158 <.do_clear_bss_start>

00000156 <.do_clear_bss_loop>:
     156:	1d 92       	st	X+, r1

00000158 <.do_clear_bss_start>:
     158:	ad 35       	cpi	r26, 0x5D	; 93
     15a:	b2 07       	cpc	r27, r18
     15c:	e1 f7       	brne	.-8      	; 0x156 <.do_clear_bss_loop>
     15e:	0e 94 86 18 	call	0x310c	; 0x310c <main>
     162:	0c 94 fb 18 	jmp	0x31f6	; 0x31f6 <_exit>

00000166 <__bad_interrupt>:
     166:	4c cf       	rjmp	.-360    	; 0x0 <__vectors>

00000168 <power_off>:
}

static
void power_off (void)
{
	SPCR = 0;				/* Disable SPI function */
     168:	1c bc       	out	0x2c, r1	; 44

	DDRB  &= ~((1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4));	/* Set SCK/MOSI/CS as hi-z, INS#/WP as pull-up */
     16a:	84 b1       	in	r24, 0x04	; 4
     16c:	8f 70       	andi	r24, 0x0F	; 15
     16e:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~((1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4));
     170:	85 b1       	in	r24, 0x05	; 5
     172:	8f 70       	andi	r24, 0x0F	; 15
     174:	85 b9       	out	0x05, r24	; 5
	PORTB |=  (1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4);
     176:	85 b1       	in	r24, 0x05	; 5
     178:	80 6f       	ori	r24, 0xF0	; 240
     17a:	85 b9       	out	0x05, r24	; 5
     17c:	08 95       	ret

0000017e <xchg_spi>:
static
BYTE xchg_spi (		/* Returns received data */
BYTE dat		/* Data to be sent */
)
{
	SPDR = dat;
     17e:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR, SPIF);
     180:	0d b4       	in	r0, 0x2d	; 45
     182:	07 fe       	sbrs	r0, 7
     184:	fd cf       	rjmp	.-6      	; 0x180 <xchg_spi+0x2>
	return SPDR;
     186:	8e b5       	in	r24, 0x2e	; 46
}
     188:	08 95       	ret

0000018a <deselect>:
/*-----------------------------------------------------------------------*/

static
void deselect (void)
{
	CS_HIGH();		/* Set CS# high */
     18a:	2c 9a       	sbi	0x05, 4	; 5
	xchg_spi(0xFF);	/* Dummy clock (force DO hi-z for multiple slave SPI) */
     18c:	8f ef       	ldi	r24, 0xFF	; 255
     18e:	f7 cf       	rjmp	.-18     	; 0x17e <xchg_spi>
     190:	08 95       	ret

00000192 <select>:
/*-----------------------------------------------------------------------*/

static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();		/* Set CS# low */
     192:	2c 98       	cbi	0x05, 4	; 5
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
     194:	8f ef       	ldi	r24, 0xFF	; 255
     196:	f3 df       	rcall	.-26     	; 0x17e <xchg_spi>
)
{
	BYTE d;


	Timer2 = wt / 10;
     198:	82 e3       	ldi	r24, 0x32	; 50
     19a:	80 93 29 01 	sts	0x0129, r24
	do
	d = xchg_spi(0xFF);
     19e:	8f ef       	ldi	r24, 0xFF	; 255
     1a0:	ee df       	rcall	.-36     	; 0x17e <xchg_spi>
	while (d != 0xFF && Timer2);
     1a2:	8f 3f       	cpi	r24, 0xFF	; 255
     1a4:	41 f0       	breq	.+16     	; 0x1b6 <select+0x24>
     1a6:	80 91 29 01 	lds	r24, 0x0129
     1aa:	81 11       	cpse	r24, r1
     1ac:	f8 cf       	rjmp	.-16     	; 0x19e <select+0xc>
{
	CS_LOW();		/* Set CS# low */
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
	if (wait_ready(500)) return 1;	/* Wait for card ready */

	deselect();
     1ae:	ed df       	rcall	.-38     	; 0x18a <deselect>
	return 0;	/* Timeout */
     1b0:	80 e0       	ldi	r24, 0x00	; 0
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	08 95       	ret
static
int select (void)	/* 1:Successful, 0:Timeout */
{
	CS_LOW();		/* Set CS# low */
	xchg_spi(0xFF);	/* Dummy clock (force DO enabled) */
	if (wait_ready(500)) return 1;	/* Wait for card ready */
     1b6:	81 e0       	ldi	r24, 0x01	; 1
     1b8:	90 e0       	ldi	r25, 0x00	; 0

	deselect();
	return 0;	/* Timeout */
}
     1ba:	08 95       	ret

000001bc <rcvr_datablock>:
static
int rcvr_datablock (
BYTE *buff,			/* Data buffer to store received data */
UINT btr			/* Byte count (must be multiple of 4) */
)
{
     1bc:	0f 93       	push	r16
     1be:	1f 93       	push	r17
     1c0:	cf 93       	push	r28
     1c2:	df 93       	push	r29
     1c4:	ec 01       	movw	r28, r24
     1c6:	8b 01       	movw	r16, r22
	BYTE token;


	Timer1 = 20;
     1c8:	84 e1       	ldi	r24, 0x14	; 20
     1ca:	80 93 2a 01 	sts	0x012A, r24
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
     1ce:	8f ef       	ldi	r24, 0xFF	; 255
     1d0:	d6 df       	rcall	.-84     	; 0x17e <xchg_spi>
	} while ((token == 0xFF) && Timer1);
     1d2:	8f 3f       	cpi	r24, 0xFF	; 255
     1d4:	39 f4       	brne	.+14     	; 0x1e4 <rcvr_datablock+0x28>
     1d6:	90 91 2a 01 	lds	r25, 0x012A
     1da:	91 11       	cpse	r25, r1
     1dc:	f8 cf       	rjmp	.-16     	; 0x1ce <rcvr_datablock+0x12>
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
     1de:	80 e0       	ldi	r24, 0x00	; 0
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	1e c0       	rjmp	.+60     	; 0x220 <rcvr_datablock+0x64>
     1e4:	8e 3f       	cpi	r24, 0xFE	; 254
     1e6:	d1 f4       	brne	.+52     	; 0x21c <rcvr_datablock+0x60>
BYTE *p,	/* Data buffer */
UINT cnt	/* Size of data block (must be multiple of 2) */
)
{
	do {
		SPDR = 0xFF; loop_until_bit_is_set(SPSR,SPIF); *p++ = SPDR;
     1e8:	8f ef       	ldi	r24, 0xFF	; 255
     1ea:	8e bd       	out	0x2e, r24	; 46
     1ec:	0d b4       	in	r0, 0x2d	; 45
     1ee:	07 fe       	sbrs	r0, 7
     1f0:	fd cf       	rjmp	.-6      	; 0x1ec <rcvr_datablock+0x30>
     1f2:	9e b5       	in	r25, 0x2e	; 46
     1f4:	98 83       	st	Y, r25
		SPDR = 0xFF; loop_until_bit_is_set(SPSR,SPIF); *p++ = SPDR;
     1f6:	8e bd       	out	0x2e, r24	; 46
     1f8:	0d b4       	in	r0, 0x2d	; 45
     1fa:	07 fe       	sbrs	r0, 7
     1fc:	fd cf       	rjmp	.-6      	; 0x1f8 <rcvr_datablock+0x3c>
     1fe:	22 96       	adiw	r28, 0x02	; 2
     200:	9e b5       	in	r25, 0x2e	; 46
     202:	fe 01       	movw	r30, r28
     204:	31 97       	sbiw	r30, 0x01	; 1
     206:	90 83       	st	Z, r25
	} while (cnt -= 2);
     208:	02 50       	subi	r16, 0x02	; 2
     20a:	11 09       	sbc	r17, r1
     20c:	71 f7       	brne	.-36     	; 0x1ea <rcvr_datablock+0x2e>
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */

	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
     20e:	8f ef       	ldi	r24, 0xFF	; 255
     210:	b6 df       	rcall	.-148    	; 0x17e <xchg_spi>
	xchg_spi(0xFF);
     212:	8f ef       	ldi	r24, 0xFF	; 255
     214:	b4 df       	rcall	.-152    	; 0x17e <xchg_spi>

	return 1;						/* Return with success */
     216:	81 e0       	ldi	r24, 0x01	; 1
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	02 c0       	rjmp	.+4      	; 0x220 <rcvr_datablock+0x64>

	Timer1 = 20;
	do {							/* Wait for data packet in timeout of 200ms */
		token = xchg_spi(0xFF);
	} while ((token == 0xFF) && Timer1);
	if (token != 0xFE) return 0;	/* If not valid data token, retutn with error */
     21c:	80 e0       	ldi	r24, 0x00	; 0
     21e:	90 e0       	ldi	r25, 0x00	; 0
	rcvr_spi_multi(buff, btr);		/* Receive the data block into buffer */
	xchg_spi(0xFF);					/* Discard CRC */
	xchg_spi(0xFF);

	return 1;						/* Return with success */
}
     220:	df 91       	pop	r29
     222:	cf 91       	pop	r28
     224:	1f 91       	pop	r17
     226:	0f 91       	pop	r16
     228:	08 95       	ret

0000022a <send_cmd>:
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
     22a:	ff 92       	push	r15
     22c:	0f 93       	push	r16
     22e:	1f 93       	push	r17
     230:	cf 93       	push	r28
     232:	df 93       	push	r29
     234:	c8 2f       	mov	r28, r24
     236:	d4 2f       	mov	r29, r20
     238:	15 2f       	mov	r17, r21
     23a:	06 2f       	mov	r16, r22
     23c:	f7 2e       	mov	r15, r23
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
     23e:	88 23       	and	r24, r24
     240:	4c f4       	brge	.+18     	; 0x254 <send_cmd+0x2a>
		cmd &= 0x7F;
		res = send_cmd(CMD55, 0);
     242:	40 e0       	ldi	r20, 0x00	; 0
     244:	50 e0       	ldi	r21, 0x00	; 0
     246:	ba 01       	movw	r22, r20
     248:	87 e3       	ldi	r24, 0x37	; 55
     24a:	ef df       	rcall	.-34     	; 0x22a <send_cmd>
		if (res > 1) return res;
     24c:	82 30       	cpi	r24, 0x02	; 2
     24e:	08 f0       	brcs	.+2      	; 0x252 <send_cmd+0x28>
     250:	3c c0       	rjmp	.+120    	; 0x2ca <send_cmd+0xa0>
{
	BYTE n, res;


	if (cmd & 0x80) {	/* ACMD<n> is the command sequense of CMD55-CMD<n> */
		cmd &= 0x7F;
     252:	cf 77       	andi	r28, 0x7F	; 127
		res = send_cmd(CMD55, 0);
		if (res > 1) return res;
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
     254:	cc 30       	cpi	r28, 0x0C	; 12
     256:	f1 f0       	breq	.+60     	; 0x294 <send_cmd+0x6a>
		deselect();
     258:	98 df       	rcall	.-208    	; 0x18a <deselect>
		if (!select()) return 0xFF;
     25a:	9b df       	rcall	.-202    	; 0x192 <select>
     25c:	89 2b       	or	r24, r25
     25e:	c1 f0       	breq	.+48     	; 0x290 <send_cmd+0x66>
	}

	/* Send command packet */
	xchg_spi(0x40 | cmd);				/* Start + Command index */
     260:	8c 2f       	mov	r24, r28
     262:	80 64       	ori	r24, 0x40	; 64
     264:	8c df       	rcall	.-232    	; 0x17e <xchg_spi>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
     266:	8f 2d       	mov	r24, r15
     268:	8a df       	rcall	.-236    	; 0x17e <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
     26a:	80 2f       	mov	r24, r16
     26c:	88 df       	rcall	.-240    	; 0x17e <xchg_spi>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
     26e:	81 2f       	mov	r24, r17
     270:	86 df       	rcall	.-244    	; 0x17e <xchg_spi>
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
     272:	8d 2f       	mov	r24, r29
     274:	84 df       	rcall	.-248    	; 0x17e <xchg_spi>
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
     276:	cc 23       	and	r28, r28
     278:	29 f1       	breq	.+74     	; 0x2c4 <send_cmd+0x9a>
     27a:	21 c0       	rjmp	.+66     	; 0x2be <send_cmd+0x94>
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
     27c:	8f ef       	ldi	r24, 0xFF	; 255
     27e:	7f df       	rcall	.-258    	; 0x17e <xchg_spi>
static
BYTE send_cmd (		/* Returns R1 resp (bit7==1:Send failed) */
	BYTE cmd,		/* Command index */
	DWORD arg		/* Argument */
)
{
     280:	ca e0       	ldi	r28, 0x0A	; 10

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
	n = 10;								/* Wait for a valid response in timeout of 10 attempts */
	do
		res = xchg_spi(0xFF);
     282:	8f ef       	ldi	r24, 0xFF	; 255
     284:	7c df       	rcall	.-264    	; 0x17e <xchg_spi>
	while ((res & 0x80) && --n);
     286:	88 23       	and	r24, r24
     288:	04 f5       	brge	.+64     	; 0x2ca <send_cmd+0xa0>
     28a:	c1 50       	subi	r28, 0x01	; 1
     28c:	d1 f7       	brne	.-12     	; 0x282 <send_cmd+0x58>
     28e:	1d c0       	rjmp	.+58     	; 0x2ca <send_cmd+0xa0>
	}

	/* Select the card and wait for ready except to stop multiple block read */
	if (cmd != CMD12) {
		deselect();
		if (!select()) return 0xFF;
     290:	8f ef       	ldi	r24, 0xFF	; 255
     292:	1b c0       	rjmp	.+54     	; 0x2ca <send_cmd+0xa0>
	}

	/* Send command packet */
	xchg_spi(0x40 | cmd);				/* Start + Command index */
     294:	8c e4       	ldi	r24, 0x4C	; 76
     296:	73 df       	rcall	.-282    	; 0x17e <xchg_spi>
	xchg_spi((BYTE)(arg >> 24));		/* Argument[31..24] */
     298:	8f 2d       	mov	r24, r15
     29a:	71 df       	rcall	.-286    	; 0x17e <xchg_spi>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
     29c:	80 2f       	mov	r24, r16
     29e:	6f df       	rcall	.-290    	; 0x17e <xchg_spi>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
     2a0:	81 2f       	mov	r24, r17
     2a2:	6d df       	rcall	.-294    	; 0x17e <xchg_spi>
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
     2a4:	8d 2f       	mov	r24, r29
     2a6:	6b df       	rcall	.-298    	; 0x17e <xchg_spi>
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);
     2a8:	81 e0       	ldi	r24, 0x01	; 1
     2aa:	69 df       	rcall	.-302    	; 0x17e <xchg_spi>

	/* Receive command response */
	if (cmd == CMD12) xchg_spi(0xFF);		/* Skip a stuff byte when stop reading */
     2ac:	cc 30       	cpi	r28, 0x0C	; 12
     2ae:	31 f3       	breq	.-52     	; 0x27c <send_cmd+0x52>
     2b0:	e7 cf       	rjmp	.-50     	; 0x280 <send_cmd+0x56>
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
	xchg_spi(n);
     2b2:	87 e8       	ldi	r24, 0x87	; 135
     2b4:	64 df       	rcall	.-312    	; 0x17e <xchg_spi>
     2b6:	e4 cf       	rjmp	.-56     	; 0x280 <send_cmd+0x56>
     2b8:	81 e0       	ldi	r24, 0x01	; 1
     2ba:	61 df       	rcall	.-318    	; 0x17e <xchg_spi>
     2bc:	e1 cf       	rjmp	.-62     	; 0x280 <send_cmd+0x56>
	xchg_spi((BYTE)(arg >> 16));		/* Argument[23..16] */
	xchg_spi((BYTE)(arg >> 8));			/* Argument[15..8] */
	xchg_spi((BYTE)arg);				/* Argument[7..0] */
	n = 0x01;							/* Dummy CRC + Stop */
	if (cmd == CMD0) n = 0x95;			/* Valid CRC for CMD0(0) + Stop */
	if (cmd == CMD8) n = 0x87;			/* Valid CRC for CMD8(0x1AA) Stop */
     2be:	c8 30       	cpi	r28, 0x08	; 8
     2c0:	c1 f3       	breq	.-16     	; 0x2b2 <send_cmd+0x88>
     2c2:	fa cf       	rjmp	.-12     	; 0x2b8 <send_cmd+0x8e>
	xchg_spi(n);
     2c4:	85 e9       	ldi	r24, 0x95	; 149
     2c6:	5b df       	rcall	.-330    	; 0x17e <xchg_spi>
     2c8:	db cf       	rjmp	.-74     	; 0x280 <send_cmd+0x56>
	do
		res = xchg_spi(0xFF);
	while ((res & 0x80) && --n);

	return res;			/* Return with the response value */
}
     2ca:	df 91       	pop	r29
     2cc:	cf 91       	pop	r28
     2ce:	1f 91       	pop	r17
     2d0:	0f 91       	pop	r16
     2d2:	ff 90       	pop	r15
     2d4:	08 95       	ret

000002d6 <xmit_datablock>:
static
int xmit_datablock (
const BYTE *buff,	/* 512 byte data block to be transmitted */
BYTE token			/* Data/Stop token */
)
{
     2d6:	1f 93       	push	r17
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	ec 01       	movw	r28, r24
     2de:	16 2f       	mov	r17, r22
)
{
	BYTE d;


	Timer2 = wt / 10;
     2e0:	92 e3       	ldi	r25, 0x32	; 50
     2e2:	90 93 29 01 	sts	0x0129, r25
	do
	d = xchg_spi(0xFF);
     2e6:	8f ef       	ldi	r24, 0xFF	; 255
     2e8:	4a df       	rcall	.-364    	; 0x17e <xchg_spi>
	while (d != 0xFF && Timer2);
     2ea:	8f 3f       	cpi	r24, 0xFF	; 255
     2ec:	31 f0       	breq	.+12     	; 0x2fa <xmit_datablock+0x24>
     2ee:	90 91 29 01 	lds	r25, 0x0129
     2f2:	91 11       	cpse	r25, r1
     2f4:	f8 cf       	rjmp	.-16     	; 0x2e6 <xmit_datablock+0x10>
)
{
	BYTE resp;


	if (!wait_ready(500)) return 0;
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	26 c0       	rjmp	.+76     	; 0x346 <xmit_datablock+0x70>

	xchg_spi(token);					/* Xmit data token */
     2fa:	81 2f       	mov	r24, r17
     2fc:	40 df       	rcall	.-384    	; 0x17e <xchg_spi>
	if (token != 0xFD) {	/* Is data token */
     2fe:	1d 3f       	cpi	r17, 0xFD	; 253
     300:	01 f1       	breq	.+64     	; 0x342 <xmit_datablock+0x6c>
     302:	9e 01       	movw	r18, r28
     304:	3e 5f       	subi	r19, 0xFE	; 254
const BYTE *p,	/* Data block to be sent */
UINT cnt		/* Size of data block (must be multiple of 2) */
)
{
	do {
		SPDR = *p++; loop_until_bit_is_set(SPSR,SPIF);
     306:	88 81       	ld	r24, Y
     308:	8e bd       	out	0x2e, r24	; 46
     30a:	0d b4       	in	r0, 0x2d	; 45
     30c:	07 fe       	sbrs	r0, 7
     30e:	fd cf       	rjmp	.-6      	; 0x30a <xmit_datablock+0x34>
     310:	22 96       	adiw	r28, 0x02	; 2
     312:	fe 01       	movw	r30, r28
     314:	31 97       	sbiw	r30, 0x01	; 1
		SPDR = *p++; loop_until_bit_is_set(SPSR,SPIF);
     316:	80 81       	ld	r24, Z
     318:	8e bd       	out	0x2e, r24	; 46
     31a:	0d b4       	in	r0, 0x2d	; 45
     31c:	07 fe       	sbrs	r0, 7
     31e:	fd cf       	rjmp	.-6      	; 0x31a <xmit_datablock+0x44>
	} while (cnt -= 2);
     320:	c2 17       	cp	r28, r18
     322:	d3 07       	cpc	r29, r19
     324:	81 f7       	brne	.-32     	; 0x306 <xmit_datablock+0x30>
	if (!wait_ready(500)) return 0;

	xchg_spi(token);					/* Xmit data token */
	if (token != 0xFD) {	/* Is data token */
		xmit_spi_multi(buff, 512);		/* Xmit the data block to the MMC */
		xchg_spi(0xFF);					/* CRC (Dummy) */
     326:	8f ef       	ldi	r24, 0xFF	; 255
     328:	2a df       	rcall	.-428    	; 0x17e <xchg_spi>
		xchg_spi(0xFF);
     32a:	8f ef       	ldi	r24, 0xFF	; 255
     32c:	28 df       	rcall	.-432    	; 0x17e <xchg_spi>
		resp = xchg_spi(0xFF);			/* Reveive data response */
     32e:	8f ef       	ldi	r24, 0xFF	; 255
     330:	26 df       	rcall	.-436    	; 0x17e <xchg_spi>
		if ((resp & 0x1F) != 0x05)		/* If not accepted, return with error */
     332:	28 2f       	mov	r18, r24
     334:	2f 71       	andi	r18, 0x1F	; 31
     336:	81 e0       	ldi	r24, 0x01	; 1
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	25 30       	cpi	r18, 0x05	; 5
     33c:	21 f0       	breq	.+8      	; 0x346 <xmit_datablock+0x70>
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	02 c0       	rjmp	.+4      	; 0x346 <xmit_datablock+0x70>
		return 0;
	}

	return 1;
     342:	81 e0       	ldi	r24, 0x01	; 1
     344:	90 e0       	ldi	r25, 0x00	; 0
}
     346:	df 91       	pop	r29
     348:	cf 91       	pop	r28
     34a:	1f 91       	pop	r17
     34c:	08 95       	ret

0000034e <disk_initialize>:
/*-----------------------------------------------------------------------*/

DSTATUS disk_initialize (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
     34e:	cf 92       	push	r12
     350:	df 92       	push	r13
     352:	ef 92       	push	r14
     354:	ff 92       	push	r15
     356:	0f 93       	push	r16
     358:	1f 93       	push	r17
     35a:	cf 93       	push	r28
     35c:	df 93       	push	r29
     35e:	00 d0       	rcall	.+0      	; 0x360 <disk_initialize+0x12>
     360:	00 d0       	rcall	.+0      	; 0x362 <disk_initialize+0x14>
     362:	cd b7       	in	r28, 0x3d	; 61
     364:	de b7       	in	r29, 0x3e	; 62
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
     366:	81 11       	cpse	r24, r1
     368:	9f c0       	rjmp	.+318    	; 0x4a8 <disk_initialize+0x15a>
	power_off();						/* Turn off the socket power to reset the card */
     36a:	fe de       	rcall	.-516    	; 0x168 <power_off>
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
     36c:	80 91 00 01 	lds	r24, 0x0100
     370:	81 ff       	sbrs	r24, 1
     372:	03 c0       	rjmp	.+6      	; 0x37a <disk_initialize+0x2c>
     374:	80 91 00 01 	lds	r24, 0x0100
     378:	a2 c0       	rjmp	.+324    	; 0x4be <disk_initialize+0x170>
/* is nothing to do in these functions and chk_power always returns 1.   */

static
void power_on (void)
{
	PORTB |= (1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4);	/* Configure SCK/MOSI/CS as output */
     37a:	85 b1       	in	r24, 0x05	; 5
     37c:	80 6f       	ori	r24, 0xF0	; 240
     37e:	85 b9       	out	0x05, r24	; 5
	DDRB  |= (1<<PORTB7) | (1<<PORTB6) | (1<<PORTB5) | (1<<PORTB4);
     380:	84 b1       	in	r24, 0x04	; 4
     382:	80 6f       	ori	r24, 0xF0	; 240
     384:	84 b9       	out	0x04, r24	; 4

	SPCR = 0x52;			/* Enable SPI function in mode 0 */
     386:	82 e5       	ldi	r24, 0x52	; 82
     388:	8c bd       	out	0x2c, r24	; 44
	SPSR = 0x01;			/* SPI 2x mode */
     38a:	91 e0       	ldi	r25, 0x01	; 1
     38c:	9d bd       	out	0x2d, r25	; 45

	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
	power_off();						/* Turn off the socket power to reset the card */
	if (Stat & STA_NODISK) return Stat;	/* No card in the socket */
	power_on();							/* Turn on the socket power */
	FCLK_SLOW();
     38e:	8c bd       	out	0x2c, r24	; 44
     390:	1a e0       	ldi	r17, 0x0A	; 10
	for (n = 10; n; n--) xchg_spi(0xFF);	/* 80 dummy clocks */
     392:	8f ef       	ldi	r24, 0xFF	; 255
     394:	f4 de       	rcall	.-536    	; 0x17e <xchg_spi>
     396:	11 50       	subi	r17, 0x01	; 1
     398:	e1 f7       	brne	.-8      	; 0x392 <disk_initialize+0x44>

	ty = 0;
	if (send_cmd(CMD0, 0) == 1) {			/* Enter Idle state */
     39a:	40 e0       	ldi	r20, 0x00	; 0
     39c:	50 e0       	ldi	r21, 0x00	; 0
     39e:	ba 01       	movw	r22, r20
     3a0:	80 e0       	ldi	r24, 0x00	; 0
     3a2:	43 df       	rcall	.-378    	; 0x22a <send_cmd>
     3a4:	81 30       	cpi	r24, 0x01	; 1
     3a6:	09 f0       	breq	.+2      	; 0x3aa <disk_initialize+0x5c>
     3a8:	86 c0       	rjmp	.+268    	; 0x4b6 <disk_initialize+0x168>
		Timer1 = 100;						/* Initialization timeout of 1000 msec */
     3aa:	84 e6       	ldi	r24, 0x64	; 100
     3ac:	80 93 2a 01 	sts	0x012A, r24
		if (send_cmd(CMD8, 0x1AA) == 1) {	/* SDv2? */
     3b0:	4a ea       	ldi	r20, 0xAA	; 170
     3b2:	51 e0       	ldi	r21, 0x01	; 1
     3b4:	60 e0       	ldi	r22, 0x00	; 0
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	88 e0       	ldi	r24, 0x08	; 8
     3ba:	37 df       	rcall	.-402    	; 0x22a <send_cmd>
     3bc:	81 30       	cpi	r24, 0x01	; 1
     3be:	09 f0       	breq	.+2      	; 0x3c2 <disk_initialize+0x74>
     3c0:	3f c0       	rjmp	.+126    	; 0x440 <disk_initialize+0xf2>
     3c2:	ce 01       	movw	r24, r28
     3c4:	01 96       	adiw	r24, 0x01	; 1
     3c6:	6c 01       	movw	r12, r24
     3c8:	7e 01       	movw	r14, r28
     3ca:	95 e0       	ldi	r25, 0x05	; 5
     3cc:	e9 0e       	add	r14, r25
     3ce:	f1 1c       	adc	r15, r1
     3d0:	86 01       	movw	r16, r12
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
     3d2:	8f ef       	ldi	r24, 0xFF	; 255
     3d4:	d4 de       	rcall	.-600    	; 0x17e <xchg_spi>
     3d6:	f8 01       	movw	r30, r16
     3d8:	81 93       	st	Z+, r24
     3da:	8f 01       	movw	r16, r30
     3dc:	ee 15       	cp	r30, r14
     3de:	ff 05       	cpc	r31, r15
     3e0:	c1 f7       	brne	.-16     	; 0x3d2 <disk_initialize+0x84>
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
     3e2:	8b 81       	ldd	r24, Y+3	; 0x03
     3e4:	81 30       	cpi	r24, 0x01	; 1
     3e6:	09 f0       	breq	.+2      	; 0x3ea <disk_initialize+0x9c>
     3e8:	66 c0       	rjmp	.+204    	; 0x4b6 <disk_initialize+0x168>
     3ea:	8c 81       	ldd	r24, Y+4	; 0x04
     3ec:	8a 3a       	cpi	r24, 0xAA	; 170
     3ee:	09 f0       	breq	.+2      	; 0x3f2 <disk_initialize+0xa4>
     3f0:	62 c0       	rjmp	.+196    	; 0x4b6 <disk_initialize+0x168>
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
     3f2:	80 91 2a 01 	lds	r24, 0x012A
     3f6:	88 23       	and	r24, r24
     3f8:	41 f0       	breq	.+16     	; 0x40a <disk_initialize+0xbc>
     3fa:	40 e0       	ldi	r20, 0x00	; 0
     3fc:	50 e0       	ldi	r21, 0x00	; 0
     3fe:	60 e0       	ldi	r22, 0x00	; 0
     400:	70 e4       	ldi	r23, 0x40	; 64
     402:	89 ea       	ldi	r24, 0xA9	; 169
     404:	12 df       	rcall	.-476    	; 0x22a <send_cmd>
     406:	81 11       	cpse	r24, r1
     408:	f4 cf       	rjmp	.-24     	; 0x3f2 <disk_initialize+0xa4>
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
     40a:	80 91 2a 01 	lds	r24, 0x012A
     40e:	88 23       	and	r24, r24
     410:	09 f4       	brne	.+2      	; 0x414 <disk_initialize+0xc6>
     412:	51 c0       	rjmp	.+162    	; 0x4b6 <disk_initialize+0x168>
     414:	40 e0       	ldi	r20, 0x00	; 0
     416:	50 e0       	ldi	r21, 0x00	; 0
     418:	ba 01       	movw	r22, r20
     41a:	8a e3       	ldi	r24, 0x3A	; 58
     41c:	06 df       	rcall	.-500    	; 0x22a <send_cmd>
     41e:	81 11       	cpse	r24, r1
     420:	4a c0       	rjmp	.+148    	; 0x4b6 <disk_initialize+0x168>
     422:	76 01       	movw	r14, r12
     424:	14 e0       	ldi	r17, 0x04	; 4
     426:	1c 0d       	add	r17, r12
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
     428:	8f ef       	ldi	r24, 0xFF	; 255
     42a:	a9 de       	rcall	.-686    	; 0x17e <xchg_spi>
     42c:	f7 01       	movw	r30, r14
     42e:	81 93       	st	Z+, r24
     430:	7f 01       	movw	r14, r30
     432:	1e 13       	cpse	r17, r30
     434:	f9 cf       	rjmp	.-14     	; 0x428 <disk_initialize+0xda>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
     436:	89 81       	ldd	r24, Y+1	; 0x01
     438:	86 fd       	sbrc	r24, 6
     43a:	38 c0       	rjmp	.+112    	; 0x4ac <disk_initialize+0x15e>
     43c:	84 e0       	ldi	r24, 0x04	; 4
     43e:	37 c0       	rjmp	.+110    	; 0x4ae <disk_initialize+0x160>
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
     440:	40 e0       	ldi	r20, 0x00	; 0
     442:	50 e0       	ldi	r21, 0x00	; 0
     444:	ba 01       	movw	r22, r20
     446:	89 ea       	ldi	r24, 0xA9	; 169
     448:	f0 de       	rcall	.-544    	; 0x22a <send_cmd>
     44a:	82 30       	cpi	r24, 0x02	; 2
     44c:	18 f0       	brcs	.+6      	; 0x454 <disk_initialize+0x106>
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
     44e:	01 e0       	ldi	r16, 0x01	; 1
     450:	11 e0       	ldi	r17, 0x01	; 1
     452:	02 c0       	rjmp	.+4      	; 0x458 <disk_initialize+0x10a>
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
				}
			}
		} else {							/* SDv1 or MMCv3 */
			if (send_cmd(ACMD41, 0) <= 1) 	{
				ty = CT_SD1; cmd = ACMD41;	/* SDv1 */
     454:	02 e0       	ldi	r16, 0x02	; 2
     456:	19 ea       	ldi	r17, 0xA9	; 169
			} else {
				ty = CT_MMC; cmd = CMD1;	/* MMCv3 */
			}
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
     458:	90 91 2a 01 	lds	r25, 0x012A
     45c:	99 23       	and	r25, r25
     45e:	39 f0       	breq	.+14     	; 0x46e <disk_initialize+0x120>
     460:	40 e0       	ldi	r20, 0x00	; 0
     462:	50 e0       	ldi	r21, 0x00	; 0
     464:	ba 01       	movw	r22, r20
     466:	81 2f       	mov	r24, r17
     468:	e0 de       	rcall	.-576    	; 0x22a <send_cmd>
     46a:	81 11       	cpse	r24, r1
     46c:	f5 cf       	rjmp	.-22     	; 0x458 <disk_initialize+0x10a>
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
     46e:	80 91 2a 01 	lds	r24, 0x012A
     472:	88 23       	and	r24, r24
     474:	01 f1       	breq	.+64     	; 0x4b6 <disk_initialize+0x168>
     476:	40 e0       	ldi	r20, 0x00	; 0
     478:	52 e0       	ldi	r21, 0x02	; 2
     47a:	60 e0       	ldi	r22, 0x00	; 0
     47c:	70 e0       	ldi	r23, 0x00	; 0
     47e:	80 e1       	ldi	r24, 0x10	; 16
     480:	d4 de       	rcall	.-600    	; 0x22a <send_cmd>
     482:	81 11       	cpse	r24, r1
     484:	18 c0       	rjmp	.+48     	; 0x4b6 <disk_initialize+0x168>
				ty = 0;
		}
	}
	CardType = ty;
     486:	00 93 28 01 	sts	0x0128, r16
	deselect();
     48a:	7f de       	rcall	.-770    	; 0x18a <deselect>

	if (ty) {			/* Initialization succeded */
     48c:	00 23       	and	r16, r16
     48e:	41 f0       	breq	.+16     	; 0x4a0 <disk_initialize+0x152>
		Stat &= ~STA_NOINIT;		/* Clear STA_NOINIT */
     490:	80 91 00 01 	lds	r24, 0x0100
     494:	8e 7f       	andi	r24, 0xFE	; 254
     496:	80 93 00 01 	sts	0x0100, r24
		FCLK_FAST();
     49a:	80 e5       	ldi	r24, 0x50	; 80
     49c:	8c bd       	out	0x2c, r24	; 44
     49e:	01 c0       	rjmp	.+2      	; 0x4a2 <disk_initialize+0x154>
	} else {			/* Initialization failed */
		power_off();
     4a0:	63 de       	rcall	.-826    	; 0x168 <power_off>
	}

	return Stat;
     4a2:	80 91 00 01 	lds	r24, 0x0100
     4a6:	0b c0       	rjmp	.+22     	; 0x4be <disk_initialize+0x170>
)
{
	BYTE n, cmd, ty, ocr[4];


	if (pdrv) return STA_NOINIT;		/* Supports only single drive */
     4a8:	81 e0       	ldi	r24, 0x01	; 1
     4aa:	09 c0       	rjmp	.+18     	; 0x4be <disk_initialize+0x170>
			for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);		/* Get trailing return value of R7 resp */
			if (ocr[2] == 0x01 && ocr[3] == 0xAA) {				/* The card can work at vdd range of 2.7-3.6V */
				while (Timer1 && send_cmd(ACMD41, 1UL << 30));	/* Wait for leaving idle state (ACMD41 with HCS bit) */
				if (Timer1 && send_cmd(CMD58, 0) == 0) {		/* Check CCS bit in the OCR */
					for (n = 0; n < 4; n++) ocr[n] = xchg_spi(0xFF);
					ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;	/* SDv2 */
     4ac:	8c e0       	ldi	r24, 0x0C	; 12
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
     4ae:	80 93 28 01 	sts	0x0128, r24
	deselect();
     4b2:	6b de       	rcall	.-810    	; 0x18a <deselect>
     4b4:	ed cf       	rjmp	.-38     	; 0x490 <disk_initialize+0x142>
			while (Timer1 && send_cmd(cmd, 0));			/* Wait for leaving idle state */
			if (!Timer1 || send_cmd(CMD16, 512) != 0)	/* Set R/W block length to 512 */
				ty = 0;
		}
	}
	CardType = ty;
     4b6:	10 92 28 01 	sts	0x0128, r1
	deselect();
     4ba:	67 de       	rcall	.-818    	; 0x18a <deselect>
     4bc:	f1 cf       	rjmp	.-30     	; 0x4a0 <disk_initialize+0x152>
	} else {			/* Initialization failed */
		power_off();
	}

	return Stat;
}
     4be:	0f 90       	pop	r0
     4c0:	0f 90       	pop	r0
     4c2:	0f 90       	pop	r0
     4c4:	0f 90       	pop	r0
     4c6:	df 91       	pop	r29
     4c8:	cf 91       	pop	r28
     4ca:	1f 91       	pop	r17
     4cc:	0f 91       	pop	r16
     4ce:	ff 90       	pop	r15
     4d0:	ef 90       	pop	r14
     4d2:	df 90       	pop	r13
     4d4:	cf 90       	pop	r12
     4d6:	08 95       	ret

000004d8 <disk_status>:

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
     4d8:	81 11       	cpse	r24, r1
     4da:	03 c0       	rjmp	.+6      	; 0x4e2 <disk_status+0xa>
	return Stat;
     4dc:	80 91 00 01 	lds	r24, 0x0100
     4e0:	08 95       	ret

DSTATUS disk_status (
	BYTE pdrv		/* Physical drive nmuber (0) */
)
{
	if (pdrv) return STA_NOINIT;	/* Supports only single drive */
     4e2:	81 e0       	ldi	r24, 0x01	; 1
	return Stat;
}
     4e4:	08 95       	ret

000004e6 <disk_read>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	BYTE *buff,			/* Pointer to the data buffer to store read data */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
     4e6:	ff 92       	push	r15
     4e8:	0f 93       	push	r16
     4ea:	1f 93       	push	r17
     4ec:	cf 93       	push	r28
     4ee:	df 93       	push	r29
     4f0:	eb 01       	movw	r28, r22
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
     4f2:	81 11       	cpse	r24, r1
     4f4:	3f c0       	rjmp	.+126    	; 0x574 <disk_read+0x8e>
     4f6:	01 15       	cp	r16, r1
     4f8:	11 05       	cpc	r17, r1
     4fa:	09 f4       	brne	.+2      	; 0x4fe <disk_read+0x18>
     4fc:	3d c0       	rjmp	.+122    	; 0x578 <disk_read+0x92>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     4fe:	80 91 00 01 	lds	r24, 0x0100
     502:	80 fd       	sbrc	r24, 0
     504:	3b c0       	rjmp	.+118    	; 0x57c <disk_read+0x96>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
     506:	80 91 28 01 	lds	r24, 0x0128
     50a:	83 fd       	sbrc	r24, 3
     50c:	09 c0       	rjmp	.+18     	; 0x520 <disk_read+0x3a>
     50e:	01 2e       	mov	r0, r17
     510:	19 e0       	ldi	r17, 0x09	; 9
     512:	22 0f       	add	r18, r18
     514:	33 1f       	adc	r19, r19
     516:	44 1f       	adc	r20, r20
     518:	55 1f       	adc	r21, r21
     51a:	1a 95       	dec	r17
     51c:	d1 f7       	brne	.-12     	; 0x512 <disk_read+0x2c>
     51e:	10 2d       	mov	r17, r0

	cmd = count > 1 ? CMD18 : CMD17;			/*  READ_MULTIPLE_BLOCK : READ_SINGLE_BLOCK */
     520:	02 30       	cpi	r16, 0x02	; 2
     522:	11 05       	cpc	r17, r1
     524:	28 f4       	brcc	.+10     	; 0x530 <disk_read+0x4a>
     526:	0f 2e       	mov	r0, r31
     528:	f1 e1       	ldi	r31, 0x11	; 17
     52a:	ff 2e       	mov	r15, r31
     52c:	f0 2d       	mov	r31, r0
     52e:	04 c0       	rjmp	.+8      	; 0x538 <disk_read+0x52>
     530:	0f 2e       	mov	r0, r31
     532:	f2 e1       	ldi	r31, 0x12	; 18
     534:	ff 2e       	mov	r15, r31
     536:	f0 2d       	mov	r31, r0
	if (send_cmd(cmd, sector) == 0) {
     538:	ba 01       	movw	r22, r20
     53a:	a9 01       	movw	r20, r18
     53c:	8f 2d       	mov	r24, r15
     53e:	75 de       	rcall	.-790    	; 0x22a <send_cmd>
     540:	81 11       	cpse	r24, r1
     542:	12 c0       	rjmp	.+36     	; 0x568 <disk_read+0x82>
		do {
			if (!rcvr_datablock(buff, 512)) break;
     544:	60 e0       	ldi	r22, 0x00	; 0
     546:	72 e0       	ldi	r23, 0x02	; 2
     548:	ce 01       	movw	r24, r28
     54a:	38 de       	rcall	.-912    	; 0x1bc <rcvr_datablock>
     54c:	89 2b       	or	r24, r25
     54e:	21 f0       	breq	.+8      	; 0x558 <disk_read+0x72>
			buff += 512;
     550:	de 5f       	subi	r29, 0xFE	; 254
		} while (--count);
     552:	01 50       	subi	r16, 0x01	; 1
     554:	11 09       	sbc	r17, r1
     556:	b1 f7       	brne	.-20     	; 0x544 <disk_read+0x5e>
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
     558:	82 e1       	ldi	r24, 0x12	; 18
     55a:	f8 12       	cpse	r15, r24
     55c:	05 c0       	rjmp	.+10     	; 0x568 <disk_read+0x82>
     55e:	40 e0       	ldi	r20, 0x00	; 0
     560:	50 e0       	ldi	r21, 0x00	; 0
     562:	ba 01       	movw	r22, r20
     564:	8c e0       	ldi	r24, 0x0C	; 12
     566:	61 de       	rcall	.-830    	; 0x22a <send_cmd>
	}
	deselect();
     568:	10 de       	rcall	.-992    	; 0x18a <deselect>

	return count ? RES_ERROR : RES_OK;
     56a:	81 e0       	ldi	r24, 0x01	; 1
     56c:	01 2b       	or	r16, r17
     56e:	39 f4       	brne	.+14     	; 0x57e <disk_read+0x98>
     570:	80 e0       	ldi	r24, 0x00	; 0
     572:	05 c0       	rjmp	.+10     	; 0x57e <disk_read+0x98>
)
{
	BYTE cmd;


	if (pdrv || !count) return RES_PARERR;
     574:	84 e0       	ldi	r24, 0x04	; 4
     576:	03 c0       	rjmp	.+6      	; 0x57e <disk_read+0x98>
     578:	84 e0       	ldi	r24, 0x04	; 4
     57a:	01 c0       	rjmp	.+2      	; 0x57e <disk_read+0x98>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     57c:	83 e0       	ldi	r24, 0x03	; 3
		if (cmd == CMD18) send_cmd(CMD12, 0);	/* STOP_TRANSMISSION */
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
     57e:	df 91       	pop	r29
     580:	cf 91       	pop	r28
     582:	1f 91       	pop	r17
     584:	0f 91       	pop	r16
     586:	ff 90       	pop	r15
     588:	08 95       	ret

0000058a <disk_write>:
	BYTE pdrv,			/* Physical drive nmuber (0) */
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
     58a:	cf 92       	push	r12
     58c:	df 92       	push	r13
     58e:	ef 92       	push	r14
     590:	ff 92       	push	r15
     592:	0f 93       	push	r16
     594:	1f 93       	push	r17
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	eb 01       	movw	r28, r22
     59c:	69 01       	movw	r12, r18
     59e:	7a 01       	movw	r14, r20
	if (pdrv || !count) return RES_PARERR;
     5a0:	81 11       	cpse	r24, r1
     5a2:	51 c0       	rjmp	.+162    	; 0x646 <disk_write+0xbc>
     5a4:	01 15       	cp	r16, r1
     5a6:	11 05       	cpc	r17, r1
     5a8:	09 f4       	brne	.+2      	; 0x5ac <disk_write+0x22>
     5aa:	4f c0       	rjmp	.+158    	; 0x64a <disk_write+0xc0>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     5ac:	80 91 00 01 	lds	r24, 0x0100
     5b0:	80 fd       	sbrc	r24, 0
     5b2:	4d c0       	rjmp	.+154    	; 0x64e <disk_write+0xc4>
	if (Stat & STA_PROTECT) return RES_WRPRT;
     5b4:	80 91 00 01 	lds	r24, 0x0100
     5b8:	82 fd       	sbrc	r24, 2
     5ba:	4b c0       	rjmp	.+150    	; 0x652 <disk_write+0xc8>

	if (!(CardType & CT_BLOCK)) sector *= 512;	/* Convert to byte address if needed */
     5bc:	80 91 28 01 	lds	r24, 0x0128
     5c0:	83 fd       	sbrc	r24, 3
     5c2:	09 c0       	rjmp	.+18     	; 0x5d6 <disk_write+0x4c>
     5c4:	0b 2e       	mov	r0, r27
     5c6:	b9 e0       	ldi	r27, 0x09	; 9
     5c8:	cc 0c       	add	r12, r12
     5ca:	dd 1c       	adc	r13, r13
     5cc:	ee 1c       	adc	r14, r14
     5ce:	ff 1c       	adc	r15, r15
     5d0:	ba 95       	dec	r27
     5d2:	d1 f7       	brne	.-12     	; 0x5c8 <disk_write+0x3e>
     5d4:	b0 2d       	mov	r27, r0

	if (count == 1) {	/* Single block write */
     5d6:	01 30       	cpi	r16, 0x01	; 1
     5d8:	11 05       	cpc	r17, r1
     5da:	89 f4       	brne	.+34     	; 0x5fe <disk_write+0x74>
		if ((send_cmd(CMD24, sector) == 0)	/* WRITE_BLOCK */
     5dc:	b7 01       	movw	r22, r14
     5de:	a6 01       	movw	r20, r12
     5e0:	88 e1       	ldi	r24, 0x18	; 24
     5e2:	23 de       	rcall	.-954    	; 0x22a <send_cmd>
     5e4:	81 11       	cpse	r24, r1
     5e6:	29 c0       	rjmp	.+82     	; 0x63a <disk_write+0xb0>
			&& xmit_datablock(buff, 0xFE))
     5e8:	6e ef       	ldi	r22, 0xFE	; 254
     5ea:	ce 01       	movw	r24, r28
     5ec:	74 de       	rcall	.-792    	; 0x2d6 <xmit_datablock>
     5ee:	31 e0       	ldi	r19, 0x01	; 1
     5f0:	20 e0       	ldi	r18, 0x00	; 0
     5f2:	89 2b       	or	r24, r25
     5f4:	09 f0       	breq	.+2      	; 0x5f8 <disk_write+0x6e>
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	03 2f       	mov	r16, r19
     5fa:	12 2f       	mov	r17, r18
     5fc:	1e c0       	rjmp	.+60     	; 0x63a <disk_write+0xb0>
			count = 0;
	}
	else {				/* Multiple block write */
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
     5fe:	86 70       	andi	r24, 0x06	; 6
     600:	29 f0       	breq	.+10     	; 0x60c <disk_write+0x82>
     602:	a8 01       	movw	r20, r16
     604:	60 e0       	ldi	r22, 0x00	; 0
     606:	70 e0       	ldi	r23, 0x00	; 0
     608:	87 e9       	ldi	r24, 0x97	; 151
     60a:	0f de       	rcall	.-994    	; 0x22a <send_cmd>
		if (send_cmd(CMD25, sector) == 0) {	/* WRITE_MULTIPLE_BLOCK */
     60c:	b7 01       	movw	r22, r14
     60e:	a6 01       	movw	r20, r12
     610:	89 e1       	ldi	r24, 0x19	; 25
     612:	0b de       	rcall	.-1002   	; 0x22a <send_cmd>
     614:	81 11       	cpse	r24, r1
     616:	11 c0       	rjmp	.+34     	; 0x63a <disk_write+0xb0>
			do {
				if (!xmit_datablock(buff, 0xFC)) break;
     618:	6c ef       	ldi	r22, 0xFC	; 252
     61a:	ce 01       	movw	r24, r28
     61c:	5c de       	rcall	.-840    	; 0x2d6 <xmit_datablock>
     61e:	89 2b       	or	r24, r25
     620:	21 f0       	breq	.+8      	; 0x62a <disk_write+0xa0>
				buff += 512;
     622:	de 5f       	subi	r29, 0xFE	; 254
			} while (--count);
     624:	01 50       	subi	r16, 0x01	; 1
     626:	11 09       	sbc	r17, r1
     628:	b9 f7       	brne	.-18     	; 0x618 <disk_write+0x8e>
			if (!xmit_datablock(0, 0xFD))	/* STOP_TRAN token */
     62a:	6d ef       	ldi	r22, 0xFD	; 253
     62c:	80 e0       	ldi	r24, 0x00	; 0
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	52 de       	rcall	.-860    	; 0x2d6 <xmit_datablock>
     632:	89 2b       	or	r24, r25
     634:	11 f4       	brne	.+4      	; 0x63a <disk_write+0xb0>
				count = 1;
     636:	01 e0       	ldi	r16, 0x01	; 1
     638:	10 e0       	ldi	r17, 0x00	; 0
		}
	}
	deselect();
     63a:	a7 dd       	rcall	.-1202   	; 0x18a <deselect>

	return count ? RES_ERROR : RES_OK;
     63c:	81 e0       	ldi	r24, 0x01	; 1
     63e:	01 2b       	or	r16, r17
     640:	49 f4       	brne	.+18     	; 0x654 <disk_write+0xca>
     642:	80 e0       	ldi	r24, 0x00	; 0
     644:	07 c0       	rjmp	.+14     	; 0x654 <disk_write+0xca>
	const BYTE *buff,	/* Pointer to the data to be written */
	DWORD sector,		/* Start sector number (LBA) */
	UINT count			/* Sector count (1..128) */
)
{
	if (pdrv || !count) return RES_PARERR;
     646:	84 e0       	ldi	r24, 0x04	; 4
     648:	05 c0       	rjmp	.+10     	; 0x654 <disk_write+0xca>
     64a:	84 e0       	ldi	r24, 0x04	; 4
     64c:	03 c0       	rjmp	.+6      	; 0x654 <disk_write+0xca>
	if (Stat & STA_NOINIT) return RES_NOTRDY;
     64e:	83 e0       	ldi	r24, 0x03	; 3
     650:	01 c0       	rjmp	.+2      	; 0x654 <disk_write+0xca>
	if (Stat & STA_PROTECT) return RES_WRPRT;
     652:	82 e0       	ldi	r24, 0x02	; 2
		}
	}
	deselect();

	return count ? RES_ERROR : RES_OK;
}
     654:	df 91       	pop	r29
     656:	cf 91       	pop	r28
     658:	1f 91       	pop	r17
     65a:	0f 91       	pop	r16
     65c:	ff 90       	pop	r15
     65e:	ef 90       	pop	r14
     660:	df 90       	pop	r13
     662:	cf 90       	pop	r12
     664:	08 95       	ret

00000666 <disk_ioctl>:
DRESULT disk_ioctl (
	BYTE pdrv,		/* Physical drive nmuber (0) */
	BYTE cmd,		/* Control code */
	void *buff		/* Buffer to send/receive control data */
)
{
     666:	ef 92       	push	r14
     668:	ff 92       	push	r15
     66a:	0f 93       	push	r16
     66c:	1f 93       	push	r17
     66e:	cf 93       	push	r28
     670:	df 93       	push	r29
     672:	cd b7       	in	r28, 0x3d	; 61
     674:	de b7       	in	r29, 0x3e	; 62
     676:	60 97       	sbiw	r28, 0x10	; 16
     678:	0f b6       	in	r0, 0x3f	; 63
     67a:	f8 94       	cli
     67c:	de bf       	out	0x3e, r29	; 62
     67e:	0f be       	out	0x3f, r0	; 63
     680:	cd bf       	out	0x3d, r28	; 61
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
     682:	81 11       	cpse	r24, r1
     684:	7c c1       	rjmp	.+760    	; 0x97e <disk_ioctl+0x318>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
     686:	80 91 00 01 	lds	r24, 0x0100
     68a:	80 fd       	sbrc	r24, 0
     68c:	7a c1       	rjmp	.+756    	; 0x982 <disk_ioctl+0x31c>
     68e:	7a 01       	movw	r14, r20

	switch (cmd) {
     690:	06 2f       	mov	r16, r22
     692:	10 e0       	ldi	r17, 0x00	; 0
     694:	07 33       	cpi	r16, 0x37	; 55
     696:	11 05       	cpc	r17, r1
     698:	08 f0       	brcs	.+2      	; 0x69c <disk_ioctl+0x36>
     69a:	59 c1       	rjmp	.+690    	; 0x94e <disk_ioctl+0x2e8>
     69c:	f8 01       	movw	r30, r16
     69e:	ea 5b       	subi	r30, 0xBA	; 186
     6a0:	ff 4f       	sbci	r31, 0xFF	; 255
     6a2:	0c 94 d9 18 	jmp	0x31b2	; 0x31b2 <__tablejump2__>
	case CTRL_SYNC :		/* Make sure that no pending write process. Do not remove this or written sector might not left updated. */
		if (select()) res = RES_OK;
     6a6:	75 dd       	rcall	.-1302   	; 0x192 <select>
     6a8:	11 e0       	ldi	r17, 0x01	; 1
     6aa:	89 2b       	or	r24, r25
     6ac:	09 f4       	brne	.+2      	; 0x6b0 <disk_ioctl+0x4a>
     6ae:	64 c1       	rjmp	.+712    	; 0x978 <disk_ioctl+0x312>
     6b0:	10 e0       	ldi	r17, 0x00	; 0
     6b2:	62 c1       	rjmp	.+708    	; 0x978 <disk_ioctl+0x312>
		break;

	case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
     6b4:	40 e0       	ldi	r20, 0x00	; 0
     6b6:	50 e0       	ldi	r21, 0x00	; 0
     6b8:	ba 01       	movw	r22, r20
     6ba:	89 e0       	ldi	r24, 0x09	; 9
     6bc:	b6 dd       	rcall	.-1172   	; 0x22a <send_cmd>
     6be:	81 11       	cpse	r24, r1
     6c0:	48 c1       	rjmp	.+656    	; 0x952 <disk_ioctl+0x2ec>
     6c2:	60 e1       	ldi	r22, 0x10	; 16
     6c4:	70 e0       	ldi	r23, 0x00	; 0
     6c6:	ce 01       	movw	r24, r28
     6c8:	01 96       	adiw	r24, 0x01	; 1
     6ca:	78 dd       	rcall	.-1296   	; 0x1bc <rcvr_datablock>
     6cc:	89 2b       	or	r24, r25
     6ce:	09 f4       	brne	.+2      	; 0x6d2 <disk_ioctl+0x6c>
     6d0:	42 c1       	rjmp	.+644    	; 0x956 <disk_ioctl+0x2f0>
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
     6d2:	89 81       	ldd	r24, Y+1	; 0x01
     6d4:	82 95       	swap	r24
     6d6:	86 95       	lsr	r24
     6d8:	86 95       	lsr	r24
     6da:	83 70       	andi	r24, 0x03	; 3
     6dc:	81 30       	cpi	r24, 0x01	; 1
     6de:	31 f5       	brne	.+76     	; 0x72c <disk_ioctl+0xc6>
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
     6e0:	88 85       	ldd	r24, Y+8	; 0x08
     6e2:	8f 73       	andi	r24, 0x3F	; 63
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	a0 e0       	ldi	r26, 0x00	; 0
     6e8:	b0 e0       	ldi	r27, 0x00	; 0
     6ea:	dc 01       	movw	r26, r24
     6ec:	99 27       	eor	r25, r25
     6ee:	88 27       	eor	r24, r24
     6f0:	01 96       	adiw	r24, 0x01	; 1
     6f2:	a1 1d       	adc	r26, r1
     6f4:	b1 1d       	adc	r27, r1
     6f6:	29 85       	ldd	r18, Y+9	; 0x09
     6f8:	30 e0       	ldi	r19, 0x00	; 0
     6fa:	32 2f       	mov	r19, r18
     6fc:	22 27       	eor	r18, r18
     6fe:	4a 85       	ldd	r20, Y+10	; 0x0a
     700:	24 0f       	add	r18, r20
     702:	31 1d       	adc	r19, r1
     704:	82 0f       	add	r24, r18
     706:	93 1f       	adc	r25, r19
     708:	a1 1d       	adc	r26, r1
     70a:	b1 1d       	adc	r27, r1
				*(DWORD*)buff = csize << 10;
     70c:	07 2e       	mov	r0, r23
     70e:	7a e0       	ldi	r23, 0x0A	; 10
     710:	88 0f       	add	r24, r24
     712:	99 1f       	adc	r25, r25
     714:	aa 1f       	adc	r26, r26
     716:	bb 1f       	adc	r27, r27
     718:	7a 95       	dec	r23
     71a:	d1 f7       	brne	.-12     	; 0x710 <disk_ioctl+0xaa>
     71c:	70 2d       	mov	r23, r0
     71e:	f7 01       	movw	r30, r14
     720:	80 83       	st	Z, r24
     722:	91 83       	std	Z+1, r25	; 0x01
     724:	a2 83       	std	Z+2, r26	; 0x02
     726:	b3 83       	std	Z+3, r27	; 0x03
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
			}
			res = RES_OK;
     728:	10 e0       	ldi	r17, 0x00	; 0
     72a:	26 c1       	rjmp	.+588    	; 0x978 <disk_ioctl+0x312>
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
     72c:	89 85       	ldd	r24, Y+9	; 0x09
     72e:	82 95       	swap	r24
     730:	86 95       	lsr	r24
     732:	86 95       	lsr	r24
     734:	83 70       	andi	r24, 0x03	; 3
     736:	28 85       	ldd	r18, Y+8	; 0x08
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	f4 e0       	ldi	r31, 0x04	; 4
     73c:	2f 9f       	mul	r18, r31
     73e:	80 0d       	add	r24, r0
     740:	91 1d       	adc	r25, r1
     742:	11 24       	eor	r1, r1
     744:	9c 01       	movw	r18, r24
     746:	2f 5f       	subi	r18, 0xFF	; 255
     748:	3f 4f       	sbci	r19, 0xFF	; 255
     74a:	8f 81       	ldd	r24, Y+7	; 0x07
     74c:	83 70       	andi	r24, 0x03	; 3
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	98 2f       	mov	r25, r24
     752:	88 27       	eor	r24, r24
     754:	99 0f       	add	r25, r25
     756:	99 0f       	add	r25, r25
     758:	82 0f       	add	r24, r18
     75a:	93 1f       	adc	r25, r19
     75c:	a0 e0       	ldi	r26, 0x00	; 0
     75e:	b0 e0       	ldi	r27, 0x00	; 0
		if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {
			if ((csd[0] >> 6) == 1) {	/* SDC ver 2.00 */
				csize = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
				*(DWORD*)buff = csize << 10;
			} else {					/* SDC ver 1.XX or MMC*/
				n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
     760:	3e 81       	ldd	r19, Y+6	; 0x06
     762:	3f 70       	andi	r19, 0x0F	; 15
     764:	2b 85       	ldd	r18, Y+11	; 0x0b
     766:	22 1f       	adc	r18, r18
     768:	22 27       	eor	r18, r18
     76a:	22 1f       	adc	r18, r18
     76c:	32 0f       	add	r19, r18
     76e:	2a 85       	ldd	r18, Y+10	; 0x0a
     770:	23 70       	andi	r18, 0x03	; 3
     772:	22 0f       	add	r18, r18
     774:	23 0f       	add	r18, r19
				csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
				*(DWORD*)buff = csize << (n - 9);
     776:	27 50       	subi	r18, 0x07	; 7
     778:	04 c0       	rjmp	.+8      	; 0x782 <disk_ioctl+0x11c>
     77a:	88 0f       	add	r24, r24
     77c:	99 1f       	adc	r25, r25
     77e:	aa 1f       	adc	r26, r26
     780:	bb 1f       	adc	r27, r27
     782:	2a 95       	dec	r18
     784:	d2 f7       	brpl	.-12     	; 0x77a <disk_ioctl+0x114>
     786:	f7 01       	movw	r30, r14
     788:	80 83       	st	Z, r24
     78a:	91 83       	std	Z+1, r25	; 0x01
     78c:	a2 83       	std	Z+2, r26	; 0x02
     78e:	b3 83       	std	Z+3, r27	; 0x03
			}
			res = RES_OK;
     790:	10 e0       	ldi	r17, 0x00	; 0
     792:	f2 c0       	rjmp	.+484    	; 0x978 <disk_ioctl+0x312>
		}
		break;

	case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
		if (CardType & CT_SD2) {	/* SDv2? */
     794:	10 91 28 01 	lds	r17, 0x0128
     798:	12 ff       	sbrs	r17, 2
     79a:	2a c0       	rjmp	.+84     	; 0x7f0 <disk_ioctl+0x18a>
			if (send_cmd(ACMD13, 0) == 0) {	/* Read SD status */
     79c:	40 e0       	ldi	r20, 0x00	; 0
     79e:	50 e0       	ldi	r21, 0x00	; 0
     7a0:	ba 01       	movw	r22, r20
     7a2:	8d e8       	ldi	r24, 0x8D	; 141
     7a4:	42 dd       	rcall	.-1404   	; 0x22a <send_cmd>
     7a6:	81 11       	cpse	r24, r1
     7a8:	d8 c0       	rjmp	.+432    	; 0x95a <disk_ioctl+0x2f4>
				xchg_spi(0xFF);
     7aa:	8f ef       	ldi	r24, 0xFF	; 255
     7ac:	e8 dc       	rcall	.-1584   	; 0x17e <xchg_spi>
				if (rcvr_datablock(csd, 16)) {				/* Read partial block */
     7ae:	60 e1       	ldi	r22, 0x10	; 16
     7b0:	70 e0       	ldi	r23, 0x00	; 0
     7b2:	ce 01       	movw	r24, r28
     7b4:	01 96       	adiw	r24, 0x01	; 1
     7b6:	02 dd       	rcall	.-1532   	; 0x1bc <rcvr_datablock>
     7b8:	89 2b       	or	r24, r25
     7ba:	09 f4       	brne	.+2      	; 0x7be <disk_ioctl+0x158>
     7bc:	d0 c0       	rjmp	.+416    	; 0x95e <disk_ioctl+0x2f8>
     7be:	10 e3       	ldi	r17, 0x30	; 48
					for (n = 64 - 16; n; n--) xchg_spi(0xFF);	/* Purge trailing data */
     7c0:	8f ef       	ldi	r24, 0xFF	; 255
     7c2:	dd dc       	rcall	.-1606   	; 0x17e <xchg_spi>
     7c4:	11 50       	subi	r17, 0x01	; 1
     7c6:	e1 f7       	brne	.-8      	; 0x7c0 <disk_ioctl+0x15a>
					*(DWORD*)buff = 16UL << (csd[10] >> 4);
     7c8:	2b 85       	ldd	r18, Y+11	; 0x0b
     7ca:	22 95       	swap	r18
     7cc:	2f 70       	andi	r18, 0x0F	; 15
     7ce:	80 e1       	ldi	r24, 0x10	; 16
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	a0 e0       	ldi	r26, 0x00	; 0
     7d4:	b0 e0       	ldi	r27, 0x00	; 0
     7d6:	04 c0       	rjmp	.+8      	; 0x7e0 <disk_ioctl+0x17a>
     7d8:	88 0f       	add	r24, r24
     7da:	99 1f       	adc	r25, r25
     7dc:	aa 1f       	adc	r26, r26
     7de:	bb 1f       	adc	r27, r27
     7e0:	2a 95       	dec	r18
     7e2:	d2 f7       	brpl	.-12     	; 0x7d8 <disk_ioctl+0x172>
     7e4:	f7 01       	movw	r30, r14
     7e6:	80 83       	st	Z, r24
     7e8:	91 83       	std	Z+1, r25	; 0x01
     7ea:	a2 83       	std	Z+2, r26	; 0x02
     7ec:	b3 83       	std	Z+3, r27	; 0x03
     7ee:	c4 c0       	rjmp	.+392    	; 0x978 <disk_ioctl+0x312>
					res = RES_OK;
				}
			}
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
     7f0:	40 e0       	ldi	r20, 0x00	; 0
     7f2:	50 e0       	ldi	r21, 0x00	; 0
     7f4:	ba 01       	movw	r22, r20
     7f6:	89 e0       	ldi	r24, 0x09	; 9
     7f8:	18 dd       	rcall	.-1488   	; 0x22a <send_cmd>
     7fa:	81 11       	cpse	r24, r1
     7fc:	b2 c0       	rjmp	.+356    	; 0x962 <disk_ioctl+0x2fc>
     7fe:	60 e1       	ldi	r22, 0x10	; 16
     800:	70 e0       	ldi	r23, 0x00	; 0
     802:	ce 01       	movw	r24, r28
     804:	01 96       	adiw	r24, 0x01	; 1
     806:	da dc       	rcall	.-1612   	; 0x1bc <rcvr_datablock>
     808:	89 2b       	or	r24, r25
     80a:	09 f4       	brne	.+2      	; 0x80e <disk_ioctl+0x1a8>
     80c:	ac c0       	rjmp	.+344    	; 0x966 <disk_ioctl+0x300>
				if (CardType & CT_SD1) {	/* SDv1 */
     80e:	11 ff       	sbrs	r17, 1
     810:	20 c0       	rjmp	.+64     	; 0x852 <disk_ioctl+0x1ec>
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
     812:	8c 85       	ldd	r24, Y+12	; 0x0c
     814:	88 1f       	adc	r24, r24
     816:	88 27       	eor	r24, r24
     818:	88 1f       	adc	r24, r24
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	01 96       	adiw	r24, 0x01	; 1
     81e:	2b 85       	ldd	r18, Y+11	; 0x0b
     820:	2f 73       	andi	r18, 0x3F	; 63
     822:	82 0f       	add	r24, r18
     824:	91 1d       	adc	r25, r1
     826:	82 0f       	add	r24, r18
     828:	91 1d       	adc	r25, r1
     82a:	2e 85       	ldd	r18, Y+14	; 0x0e
     82c:	22 95       	swap	r18
     82e:	26 95       	lsr	r18
     830:	26 95       	lsr	r18
     832:	23 70       	andi	r18, 0x03	; 3
     834:	21 50       	subi	r18, 0x01	; 1
     836:	02 c0       	rjmp	.+4      	; 0x83c <disk_ioctl+0x1d6>
     838:	88 0f       	add	r24, r24
     83a:	99 1f       	adc	r25, r25
     83c:	2a 95       	dec	r18
     83e:	e2 f7       	brpl	.-8      	; 0x838 <disk_ioctl+0x1d2>
     840:	a0 e0       	ldi	r26, 0x00	; 0
     842:	b0 e0       	ldi	r27, 0x00	; 0
     844:	f7 01       	movw	r30, r14
     846:	80 83       	st	Z, r24
     848:	91 83       	std	Z+1, r25	; 0x01
     84a:	a2 83       	std	Z+2, r26	; 0x02
     84c:	b3 83       	std	Z+3, r27	; 0x03
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
				}
				res = RES_OK;
     84e:	10 e0       	ldi	r17, 0x00	; 0
     850:	93 c0       	rjmp	.+294    	; 0x978 <disk_ioctl+0x312>
		} else {					/* SDv1 or MMCv3 */
			if ((send_cmd(CMD9, 0) == 0) && rcvr_datablock(csd, 16)) {	/* Read CSD */
				if (CardType & CT_SD1) {	/* SDv1 */
					*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
				} else {					/* MMCv3 */
					*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
     852:	8c 85       	ldd	r24, Y+12	; 0x0c
     854:	28 2f       	mov	r18, r24
     856:	23 70       	andi	r18, 0x03	; 3
     858:	82 95       	swap	r24
     85a:	86 95       	lsr	r24
     85c:	87 70       	andi	r24, 0x07	; 7
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	f8 e0       	ldi	r31, 0x08	; 8
     862:	2f 9f       	mul	r18, r31
     864:	80 0d       	add	r24, r0
     866:	91 1d       	adc	r25, r1
     868:	11 24       	eor	r1, r1
     86a:	01 96       	adiw	r24, 0x01	; 1
     86c:	2b 85       	ldd	r18, Y+11	; 0x0b
     86e:	2c 77       	andi	r18, 0x7C	; 124
     870:	30 e0       	ldi	r19, 0x00	; 0
     872:	35 95       	asr	r19
     874:	27 95       	ror	r18
     876:	35 95       	asr	r19
     878:	27 95       	ror	r18
     87a:	2f 5f       	subi	r18, 0xFF	; 255
     87c:	3f 4f       	sbci	r19, 0xFF	; 255
     87e:	82 9f       	mul	r24, r18
     880:	a0 01       	movw	r20, r0
     882:	83 9f       	mul	r24, r19
     884:	50 0d       	add	r21, r0
     886:	92 9f       	mul	r25, r18
     888:	50 0d       	add	r21, r0
     88a:	11 24       	eor	r1, r1
     88c:	ca 01       	movw	r24, r20
     88e:	a0 e0       	ldi	r26, 0x00	; 0
     890:	b0 e0       	ldi	r27, 0x00	; 0
     892:	f7 01       	movw	r30, r14
     894:	80 83       	st	Z, r24
     896:	91 83       	std	Z+1, r25	; 0x01
     898:	a2 83       	std	Z+2, r26	; 0x02
     89a:	b3 83       	std	Z+3, r27	; 0x03
				}
				res = RES_OK;
     89c:	10 e0       	ldi	r17, 0x00	; 0
     89e:	6c c0       	rjmp	.+216    	; 0x978 <disk_ioctl+0x312>
		break;

	/* Following commands are never used by FatFs module */

	case MMC_GET_TYPE :		/* Get card type flags (1 byte) */
		*ptr = CardType;
     8a0:	80 91 28 01 	lds	r24, 0x0128
     8a4:	fa 01       	movw	r30, r20
     8a6:	80 83       	st	Z, r24
		res = RES_OK;
     8a8:	10 e0       	ldi	r17, 0x00	; 0
		break;
     8aa:	66 c0       	rjmp	.+204    	; 0x978 <disk_ioctl+0x312>

	case MMC_GET_CSD :		/* Receive CSD as a data block (16 bytes) */
		if (send_cmd(CMD9, 0) == 0		/* READ_CSD */
     8ac:	40 e0       	ldi	r20, 0x00	; 0
     8ae:	50 e0       	ldi	r21, 0x00	; 0
     8b0:	ba 01       	movw	r22, r20
     8b2:	89 e0       	ldi	r24, 0x09	; 9
     8b4:	ba dc       	rcall	.-1676   	; 0x22a <send_cmd>
     8b6:	81 11       	cpse	r24, r1
     8b8:	58 c0       	rjmp	.+176    	; 0x96a <disk_ioctl+0x304>
			&& rcvr_datablock(ptr, 16))
     8ba:	60 e1       	ldi	r22, 0x10	; 16
     8bc:	70 e0       	ldi	r23, 0x00	; 0
     8be:	c7 01       	movw	r24, r14
     8c0:	7d dc       	rcall	.-1798   	; 0x1bc <rcvr_datablock>
     8c2:	11 e0       	ldi	r17, 0x01	; 1
     8c4:	89 2b       	or	r24, r25
     8c6:	09 f4       	brne	.+2      	; 0x8ca <disk_ioctl+0x264>
     8c8:	57 c0       	rjmp	.+174    	; 0x978 <disk_ioctl+0x312>
     8ca:	10 e0       	ldi	r17, 0x00	; 0
     8cc:	55 c0       	rjmp	.+170    	; 0x978 <disk_ioctl+0x312>
			res = RES_OK;
		break;

	case MMC_GET_CID :		/* Receive CID as a data block (16 bytes) */
		if (send_cmd(CMD10, 0) == 0		/* READ_CID */
     8ce:	40 e0       	ldi	r20, 0x00	; 0
     8d0:	50 e0       	ldi	r21, 0x00	; 0
     8d2:	ba 01       	movw	r22, r20
     8d4:	8a e0       	ldi	r24, 0x0A	; 10
     8d6:	a9 dc       	rcall	.-1710   	; 0x22a <send_cmd>
     8d8:	81 11       	cpse	r24, r1
     8da:	49 c0       	rjmp	.+146    	; 0x96e <disk_ioctl+0x308>
			&& rcvr_datablock(ptr, 16))
     8dc:	60 e1       	ldi	r22, 0x10	; 16
     8de:	70 e0       	ldi	r23, 0x00	; 0
     8e0:	c7 01       	movw	r24, r14
     8e2:	6c dc       	rcall	.-1832   	; 0x1bc <rcvr_datablock>
     8e4:	11 e0       	ldi	r17, 0x01	; 1
     8e6:	89 2b       	or	r24, r25
     8e8:	09 f4       	brne	.+2      	; 0x8ec <disk_ioctl+0x286>
     8ea:	46 c0       	rjmp	.+140    	; 0x978 <disk_ioctl+0x312>
     8ec:	10 e0       	ldi	r17, 0x00	; 0
     8ee:	44 c0       	rjmp	.+136    	; 0x978 <disk_ioctl+0x312>
			res = RES_OK;
		break;

	case MMC_GET_OCR :		/* Receive OCR as an R3 resp (4 bytes) */
		if (send_cmd(CMD58, 0) == 0) {	/* READ_OCR */
     8f0:	40 e0       	ldi	r20, 0x00	; 0
     8f2:	50 e0       	ldi	r21, 0x00	; 0
     8f4:	ba 01       	movw	r22, r20
     8f6:	8a e3       	ldi	r24, 0x3A	; 58
     8f8:	98 dc       	rcall	.-1744   	; 0x22a <send_cmd>
     8fa:	81 11       	cpse	r24, r1
     8fc:	3a c0       	rjmp	.+116    	; 0x972 <disk_ioctl+0x30c>
     8fe:	87 01       	movw	r16, r14
     900:	f4 e0       	ldi	r31, 0x04	; 4
     902:	ef 0e       	add	r14, r31
     904:	f1 1c       	adc	r15, r1
			for (n = 4; n; n--) *ptr++ = xchg_spi(0xFF);
     906:	8f ef       	ldi	r24, 0xFF	; 255
     908:	3a dc       	rcall	.-1932   	; 0x17e <xchg_spi>
     90a:	f8 01       	movw	r30, r16
     90c:	81 93       	st	Z+, r24
     90e:	8f 01       	movw	r16, r30
     910:	ee 15       	cp	r30, r14
     912:	ff 05       	cpc	r31, r15
     914:	c1 f7       	brne	.-16     	; 0x906 <disk_ioctl+0x2a0>
			res = RES_OK;
     916:	10 e0       	ldi	r17, 0x00	; 0
     918:	2f c0       	rjmp	.+94     	; 0x978 <disk_ioctl+0x312>
		}
		break;

	case MMC_GET_SDSTAT :	/* Receive SD statsu as a data block (64 bytes) */
		if (send_cmd(ACMD13, 0) == 0) {	/* SD_STATUS */
     91a:	40 e0       	ldi	r20, 0x00	; 0
     91c:	50 e0       	ldi	r21, 0x00	; 0
     91e:	ba 01       	movw	r22, r20
     920:	8d e8       	ldi	r24, 0x8D	; 141
     922:	83 dc       	rcall	.-1786   	; 0x22a <send_cmd>
     924:	81 11       	cpse	r24, r1
     926:	27 c0       	rjmp	.+78     	; 0x976 <disk_ioctl+0x310>
			xchg_spi(0xFF);
     928:	8f ef       	ldi	r24, 0xFF	; 255
     92a:	29 dc       	rcall	.-1966   	; 0x17e <xchg_spi>
			if (rcvr_datablock(ptr, 64))
     92c:	60 e4       	ldi	r22, 0x40	; 64
     92e:	70 e0       	ldi	r23, 0x00	; 0
     930:	c7 01       	movw	r24, r14
     932:	44 dc       	rcall	.-1912   	; 0x1bc <rcvr_datablock>
     934:	11 e0       	ldi	r17, 0x01	; 1
     936:	89 2b       	or	r24, r25
     938:	f9 f0       	breq	.+62     	; 0x978 <disk_ioctl+0x312>
     93a:	10 e0       	ldi	r17, 0x00	; 0
     93c:	1d c0       	rjmp	.+58     	; 0x978 <disk_ioctl+0x312>
				res = RES_OK;
		}
		break;

	case CTRL_POWER_OFF :	/* Power off */
		power_off();
     93e:	14 dc       	rcall	.-2008   	; 0x168 <power_off>
		Stat |= STA_NOINIT;
     940:	80 91 00 01 	lds	r24, 0x0100
     944:	81 60       	ori	r24, 0x01	; 1
     946:	80 93 00 01 	sts	0x0100, r24
		res = RES_OK;
     94a:	10 e0       	ldi	r17, 0x00	; 0
		break;
     94c:	15 c0       	rjmp	.+42     	; 0x978 <disk_ioctl+0x312>

	default:
		res = RES_PARERR;
     94e:	14 e0       	ldi	r17, 0x04	; 4
     950:	13 c0       	rjmp	.+38     	; 0x978 <disk_ioctl+0x312>
	DWORD csize;


	if (pdrv) return RES_PARERR;

	res = RES_ERROR;
     952:	11 e0       	ldi	r17, 0x01	; 1
     954:	11 c0       	rjmp	.+34     	; 0x978 <disk_ioctl+0x312>
     956:	11 e0       	ldi	r17, 0x01	; 1
     958:	0f c0       	rjmp	.+30     	; 0x978 <disk_ioctl+0x312>
     95a:	11 e0       	ldi	r17, 0x01	; 1
     95c:	0d c0       	rjmp	.+26     	; 0x978 <disk_ioctl+0x312>
     95e:	11 e0       	ldi	r17, 0x01	; 1
     960:	0b c0       	rjmp	.+22     	; 0x978 <disk_ioctl+0x312>
     962:	11 e0       	ldi	r17, 0x01	; 1
     964:	09 c0       	rjmp	.+18     	; 0x978 <disk_ioctl+0x312>
     966:	11 e0       	ldi	r17, 0x01	; 1
     968:	07 c0       	rjmp	.+14     	; 0x978 <disk_ioctl+0x312>
     96a:	11 e0       	ldi	r17, 0x01	; 1
     96c:	05 c0       	rjmp	.+10     	; 0x978 <disk_ioctl+0x312>
     96e:	11 e0       	ldi	r17, 0x01	; 1
     970:	03 c0       	rjmp	.+6      	; 0x978 <disk_ioctl+0x312>
     972:	11 e0       	ldi	r17, 0x01	; 1
     974:	01 c0       	rjmp	.+2      	; 0x978 <disk_ioctl+0x312>
     976:	11 e0       	ldi	r17, 0x01	; 1

	default:
		res = RES_PARERR;
	}

	deselect();
     978:	08 dc       	rcall	.-2032   	; 0x18a <deselect>

	return res;
     97a:	81 2f       	mov	r24, r17
     97c:	03 c0       	rjmp	.+6      	; 0x984 <disk_ioctl+0x31e>
	DRESULT res;
	BYTE n, csd[16], *ptr = buff;
	DWORD csize;


	if (pdrv) return RES_PARERR;
     97e:	84 e0       	ldi	r24, 0x04	; 4
     980:	01 c0       	rjmp	.+2      	; 0x984 <disk_ioctl+0x31e>

	res = RES_ERROR;

	if (Stat & STA_NOINIT) return RES_NOTRDY;
     982:	83 e0       	ldi	r24, 0x03	; 3
	}

	deselect();

	return res;
}
     984:	60 96       	adiw	r28, 0x10	; 16
     986:	0f b6       	in	r0, 0x3f	; 63
     988:	f8 94       	cli
     98a:	de bf       	out	0x3e, r29	; 62
     98c:	0f be       	out	0x3f, r0	; 63
     98e:	cd bf       	out	0x3d, r28	; 61
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	0f 91       	pop	r16
     998:	ff 90       	pop	r15
     99a:	ef 90       	pop	r14
     99c:	08 95       	ret

0000099e <mem_cpy>:

	if (   pb.idx >= 0		/* Flush buffered characters to the file */
		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
		&& (UINT)pb.idx == nw) return pb.nchr;
	return EOF;
}
     99e:	41 15       	cp	r20, r1
     9a0:	51 05       	cpc	r21, r1
     9a2:	51 f0       	breq	.+20     	; 0x9b8 <mem_cpy+0x1a>
     9a4:	a6 2f       	mov	r26, r22
     9a6:	b7 2f       	mov	r27, r23
     9a8:	fc 01       	movw	r30, r24
     9aa:	48 0f       	add	r20, r24
     9ac:	59 1f       	adc	r21, r25
     9ae:	9d 91       	ld	r25, X+
     9b0:	91 93       	st	Z+, r25
     9b2:	e4 17       	cp	r30, r20
     9b4:	f5 07       	cpc	r31, r21
     9b6:	d9 f7       	brne	.-10     	; 0x9ae <mem_cpy+0x10>
     9b8:	08 95       	ret

000009ba <ld_clust>:
     9ba:	0f 93       	push	r16
     9bc:	1f 93       	push	r17
     9be:	dc 01       	movw	r26, r24
     9c0:	fb 01       	movw	r30, r22
     9c2:	93 8d       	ldd	r25, Z+27	; 0x1b
     9c4:	69 2f       	mov	r22, r25
     9c6:	70 e0       	ldi	r23, 0x00	; 0
     9c8:	76 2f       	mov	r23, r22
     9ca:	66 27       	eor	r22, r22
     9cc:	82 8d       	ldd	r24, Z+26	; 0x1a
     9ce:	68 2b       	or	r22, r24
     9d0:	80 e0       	ldi	r24, 0x00	; 0
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	2c 91       	ld	r18, X
     9d6:	23 30       	cpi	r18, 0x03	; 3
     9d8:	79 f4       	brne	.+30     	; 0x9f8 <ld_clust+0x3e>
     9da:	05 89       	ldd	r16, Z+21	; 0x15
     9dc:	10 e0       	ldi	r17, 0x00	; 0
     9de:	10 2f       	mov	r17, r16
     9e0:	00 27       	eor	r16, r16
     9e2:	24 89       	ldd	r18, Z+20	; 0x14
     9e4:	02 2b       	or	r16, r18
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	98 01       	movw	r18, r16
     9ec:	11 27       	eor	r17, r17
     9ee:	00 27       	eor	r16, r16
     9f0:	60 2b       	or	r22, r16
     9f2:	71 2b       	or	r23, r17
     9f4:	82 2b       	or	r24, r18
     9f6:	93 2b       	or	r25, r19
     9f8:	1f 91       	pop	r17
     9fa:	0f 91       	pop	r16
     9fc:	08 95       	ret

000009fe <get_ldnumber>:
     9fe:	cf 93       	push	r28
     a00:	df 93       	push	r29
     a02:	ec 01       	movw	r28, r24
     a04:	a8 81       	ld	r26, Y
     a06:	b9 81       	ldd	r27, Y+1	; 0x01
     a08:	10 97       	sbiw	r26, 0x00	; 0
     a0a:	f9 f0       	breq	.+62     	; 0xa4a <get_ldnumber+0x4c>
     a0c:	4c 91       	ld	r20, X
     a0e:	41 32       	cpi	r20, 0x21	; 33
     a10:	58 f0       	brcs	.+22     	; 0xa28 <get_ldnumber+0x2a>
     a12:	4a 33       	cpi	r20, 0x3A	; 58
     a14:	31 f1       	breq	.+76     	; 0xa62 <get_ldnumber+0x64>
     a16:	fd 01       	movw	r30, r26
     a18:	31 96       	adiw	r30, 0x01	; 1
     a1a:	9f 01       	movw	r18, r30
     a1c:	91 91       	ld	r25, Z+
     a1e:	91 32       	cpi	r25, 0x21	; 33
     a20:	28 f0       	brcs	.+10     	; 0xa2c <get_ldnumber+0x2e>
     a22:	9a 33       	cpi	r25, 0x3A	; 58
     a24:	d1 f7       	brne	.-12     	; 0xa1a <get_ldnumber+0x1c>
     a26:	04 c0       	rjmp	.+8      	; 0xa30 <get_ldnumber+0x32>
     a28:	94 2f       	mov	r25, r20
     a2a:	9d 01       	movw	r18, r26
     a2c:	9a 33       	cpi	r25, 0x3A	; 58
     a2e:	81 f4       	brne	.+32     	; 0xa50 <get_ldnumber+0x52>
     a30:	cd 01       	movw	r24, r26
     a32:	01 96       	adiw	r24, 0x01	; 1
     a34:	28 17       	cp	r18, r24
     a36:	39 07       	cpc	r19, r25
     a38:	71 f4       	brne	.+28     	; 0xa56 <get_ldnumber+0x58>
     a3a:	40 33       	cpi	r20, 0x30	; 48
     a3c:	79 f4       	brne	.+30     	; 0xa5c <get_ldnumber+0x5e>
     a3e:	12 96       	adiw	r26, 0x02	; 2
     a40:	b9 83       	std	Y+1, r27	; 0x01
     a42:	a8 83       	st	Y, r26
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	0e c0       	rjmp	.+28     	; 0xa66 <get_ldnumber+0x68>
     a4a:	8f ef       	ldi	r24, 0xFF	; 255
     a4c:	9f ef       	ldi	r25, 0xFF	; 255
     a4e:	0b c0       	rjmp	.+22     	; 0xa66 <get_ldnumber+0x68>
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	08 c0       	rjmp	.+16     	; 0xa66 <get_ldnumber+0x68>
     a56:	8f ef       	ldi	r24, 0xFF	; 255
     a58:	9f ef       	ldi	r25, 0xFF	; 255
     a5a:	05 c0       	rjmp	.+10     	; 0xa66 <get_ldnumber+0x68>
     a5c:	8f ef       	ldi	r24, 0xFF	; 255
     a5e:	9f ef       	ldi	r25, 0xFF	; 255
     a60:	02 c0       	rjmp	.+4      	; 0xa66 <get_ldnumber+0x68>
     a62:	9d 01       	movw	r18, r26
     a64:	e5 cf       	rjmp	.-54     	; 0xa30 <get_ldnumber+0x32>
     a66:	df 91       	pop	r29
     a68:	cf 91       	pop	r28
     a6a:	08 95       	ret

00000a6c <sync_window>:
     a6c:	8f 92       	push	r8
     a6e:	9f 92       	push	r9
     a70:	af 92       	push	r10
     a72:	bf 92       	push	r11
     a74:	cf 92       	push	r12
     a76:	df 92       	push	r13
     a78:	ef 92       	push	r14
     a7a:	ff 92       	push	r15
     a7c:	0f 93       	push	r16
     a7e:	1f 93       	push	r17
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	fc 01       	movw	r30, r24
     a86:	24 81       	ldd	r18, Z+4	; 0x04
     a88:	22 23       	and	r18, r18
     a8a:	09 f4       	brne	.+2      	; 0xa8e <sync_window+0x22>
     a8c:	44 c0       	rjmp	.+136    	; 0xb16 <sync_window+0xaa>
     a8e:	ec 01       	movw	r28, r24
     a90:	c2 a4       	ldd	r12, Z+42	; 0x2a
     a92:	d3 a4       	ldd	r13, Z+43	; 0x2b
     a94:	e4 a4       	ldd	r14, Z+44	; 0x2c
     a96:	f5 a4       	ldd	r15, Z+45	; 0x2d
     a98:	5c 01       	movw	r10, r24
     a9a:	fe e2       	ldi	r31, 0x2E	; 46
     a9c:	af 0e       	add	r10, r31
     a9e:	b1 1c       	adc	r11, r1
     aa0:	01 e0       	ldi	r16, 0x01	; 1
     aa2:	10 e0       	ldi	r17, 0x00	; 0
     aa4:	a7 01       	movw	r20, r14
     aa6:	96 01       	movw	r18, r12
     aa8:	b5 01       	movw	r22, r10
     aaa:	89 81       	ldd	r24, Y+1	; 0x01
     aac:	6e dd       	rcall	.-1316   	; 0x58a <disk_write>
     aae:	81 11       	cpse	r24, r1
     ab0:	34 c0       	rjmp	.+104    	; 0xb1a <sync_window+0xae>
     ab2:	1c 82       	std	Y+4, r1	; 0x04
     ab4:	8e 8d       	ldd	r24, Y+30	; 0x1e
     ab6:	9f 8d       	ldd	r25, Y+31	; 0x1f
     ab8:	a8 a1       	ldd	r26, Y+32	; 0x20
     aba:	b9 a1       	ldd	r27, Y+33	; 0x21
     abc:	b7 01       	movw	r22, r14
     abe:	a6 01       	movw	r20, r12
     ac0:	48 1b       	sub	r20, r24
     ac2:	59 0b       	sbc	r21, r25
     ac4:	6a 0b       	sbc	r22, r26
     ac6:	7b 0b       	sbc	r23, r27
     ac8:	8e 89       	ldd	r24, Y+22	; 0x16
     aca:	9f 89       	ldd	r25, Y+23	; 0x17
     acc:	a8 8d       	ldd	r26, Y+24	; 0x18
     ace:	b9 8d       	ldd	r27, Y+25	; 0x19
     ad0:	48 17       	cp	r20, r24
     ad2:	59 07       	cpc	r21, r25
     ad4:	6a 07       	cpc	r22, r26
     ad6:	7b 07       	cpc	r23, r27
     ad8:	10 f5       	brcc	.+68     	; 0xb1e <sync_window+0xb2>
     ada:	8b 80       	ldd	r8, Y+3	; 0x03
     adc:	91 2c       	mov	r9, r1
     ade:	82 e0       	ldi	r24, 0x02	; 2
     ae0:	88 16       	cp	r8, r24
     ae2:	91 04       	cpc	r9, r1
     ae4:	f0 f0       	brcs	.+60     	; 0xb22 <sync_window+0xb6>
     ae6:	8e 89       	ldd	r24, Y+22	; 0x16
     ae8:	9f 89       	ldd	r25, Y+23	; 0x17
     aea:	a8 8d       	ldd	r26, Y+24	; 0x18
     aec:	b9 8d       	ldd	r27, Y+25	; 0x19
     aee:	c8 0e       	add	r12, r24
     af0:	d9 1e       	adc	r13, r25
     af2:	ea 1e       	adc	r14, r26
     af4:	fb 1e       	adc	r15, r27
     af6:	01 e0       	ldi	r16, 0x01	; 1
     af8:	10 e0       	ldi	r17, 0x00	; 0
     afa:	a7 01       	movw	r20, r14
     afc:	96 01       	movw	r18, r12
     afe:	b5 01       	movw	r22, r10
     b00:	89 81       	ldd	r24, Y+1	; 0x01
     b02:	43 dd       	rcall	.-1402   	; 0x58a <disk_write>
     b04:	e1 e0       	ldi	r30, 0x01	; 1
     b06:	8e 1a       	sub	r8, r30
     b08:	91 08       	sbc	r9, r1
     b0a:	f1 e0       	ldi	r31, 0x01	; 1
     b0c:	8f 16       	cp	r8, r31
     b0e:	91 04       	cpc	r9, r1
     b10:	51 f7       	brne	.-44     	; 0xae6 <sync_window+0x7a>
     b12:	80 e0       	ldi	r24, 0x00	; 0
     b14:	07 c0       	rjmp	.+14     	; 0xb24 <sync_window+0xb8>
     b16:	80 e0       	ldi	r24, 0x00	; 0
     b18:	05 c0       	rjmp	.+10     	; 0xb24 <sync_window+0xb8>
     b1a:	81 e0       	ldi	r24, 0x01	; 1
     b1c:	03 c0       	rjmp	.+6      	; 0xb24 <sync_window+0xb8>
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	01 c0       	rjmp	.+2      	; 0xb24 <sync_window+0xb8>
     b22:	80 e0       	ldi	r24, 0x00	; 0
     b24:	df 91       	pop	r29
     b26:	cf 91       	pop	r28
     b28:	1f 91       	pop	r17
     b2a:	0f 91       	pop	r16
     b2c:	ff 90       	pop	r15
     b2e:	ef 90       	pop	r14
     b30:	df 90       	pop	r13
     b32:	cf 90       	pop	r12
     b34:	bf 90       	pop	r11
     b36:	af 90       	pop	r10
     b38:	9f 90       	pop	r9
     b3a:	8f 90       	pop	r8
     b3c:	08 95       	ret

00000b3e <move_window>:
     b3e:	8f 92       	push	r8
     b40:	9f 92       	push	r9
     b42:	af 92       	push	r10
     b44:	bf 92       	push	r11
     b46:	ff 92       	push	r15
     b48:	0f 93       	push	r16
     b4a:	1f 93       	push	r17
     b4c:	cf 93       	push	r28
     b4e:	df 93       	push	r29
     b50:	ec 01       	movw	r28, r24
     b52:	4a 01       	movw	r8, r20
     b54:	5b 01       	movw	r10, r22
     b56:	8a a5       	ldd	r24, Y+42	; 0x2a
     b58:	9b a5       	ldd	r25, Y+43	; 0x2b
     b5a:	ac a5       	ldd	r26, Y+44	; 0x2c
     b5c:	bd a5       	ldd	r27, Y+45	; 0x2d
     b5e:	84 17       	cp	r24, r20
     b60:	95 07       	cpc	r25, r21
     b62:	a6 07       	cpc	r26, r22
     b64:	b7 07       	cpc	r27, r23
     b66:	d9 f0       	breq	.+54     	; 0xb9e <move_window+0x60>
     b68:	ce 01       	movw	r24, r28
     b6a:	80 df       	rcall	.-256    	; 0xa6c <sync_window>
     b6c:	f8 2e       	mov	r15, r24
     b6e:	81 11       	cpse	r24, r1
     b70:	17 c0       	rjmp	.+46     	; 0xba0 <move_window+0x62>
     b72:	01 e0       	ldi	r16, 0x01	; 1
     b74:	10 e0       	ldi	r17, 0x00	; 0
     b76:	a5 01       	movw	r20, r10
     b78:	94 01       	movw	r18, r8
     b7a:	be 01       	movw	r22, r28
     b7c:	62 5d       	subi	r22, 0xD2	; 210
     b7e:	7f 4f       	sbci	r23, 0xFF	; 255
     b80:	89 81       	ldd	r24, Y+1	; 0x01
     b82:	b1 dc       	rcall	.-1694   	; 0x4e6 <disk_read>
     b84:	88 23       	and	r24, r24
     b86:	31 f0       	breq	.+12     	; 0xb94 <move_window+0x56>
     b88:	ff 24       	eor	r15, r15
     b8a:	f3 94       	inc	r15
     b8c:	88 24       	eor	r8, r8
     b8e:	8a 94       	dec	r8
     b90:	98 2c       	mov	r9, r8
     b92:	54 01       	movw	r10, r8
     b94:	8a a6       	std	Y+42, r8	; 0x2a
     b96:	9b a6       	std	Y+43, r9	; 0x2b
     b98:	ac a6       	std	Y+44, r10	; 0x2c
     b9a:	bd a6       	std	Y+45, r11	; 0x2d
     b9c:	01 c0       	rjmp	.+2      	; 0xba0 <move_window+0x62>
     b9e:	f1 2c       	mov	r15, r1
     ba0:	8f 2d       	mov	r24, r15
     ba2:	df 91       	pop	r29
     ba4:	cf 91       	pop	r28
     ba6:	1f 91       	pop	r17
     ba8:	0f 91       	pop	r16
     baa:	ff 90       	pop	r15
     bac:	bf 90       	pop	r11
     bae:	af 90       	pop	r10
     bb0:	9f 90       	pop	r9
     bb2:	8f 90       	pop	r8
     bb4:	08 95       	ret

00000bb6 <check_fs>:
     bb6:	cf 93       	push	r28
     bb8:	df 93       	push	r29
     bba:	ec 01       	movw	r28, r24
     bbc:	1c 82       	std	Y+4, r1	; 0x04
     bbe:	8f ef       	ldi	r24, 0xFF	; 255
     bc0:	9f ef       	ldi	r25, 0xFF	; 255
     bc2:	dc 01       	movw	r26, r24
     bc4:	8a a7       	std	Y+42, r24	; 0x2a
     bc6:	9b a7       	std	Y+43, r25	; 0x2b
     bc8:	ac a7       	std	Y+44, r26	; 0x2c
     bca:	bd a7       	std	Y+45, r27	; 0x2d
     bcc:	ce 01       	movw	r24, r28
     bce:	b7 df       	rcall	.-146    	; 0xb3e <move_window>
     bd0:	81 11       	cpse	r24, r1
     bd2:	51 c0       	rjmp	.+162    	; 0xc76 <check_fs+0xc0>
     bd4:	fe 01       	movw	r30, r28
     bd6:	e3 5d       	subi	r30, 0xD3	; 211
     bd8:	fd 4f       	sbci	r31, 0xFD	; 253
     bda:	80 81       	ld	r24, Z
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	98 2f       	mov	r25, r24
     be0:	88 27       	eor	r24, r24
     be2:	31 97       	sbiw	r30, 0x01	; 1
     be4:	20 81       	ld	r18, Z
     be6:	82 2b       	or	r24, r18
     be8:	85 35       	cpi	r24, 0x55	; 85
     bea:	9a 4a       	sbci	r25, 0xAA	; 170
     bec:	09 f0       	breq	.+2      	; 0xbf0 <check_fs+0x3a>
     bee:	45 c0       	rjmp	.+138    	; 0xc7a <check_fs+0xc4>
     bf0:	e5 5c       	subi	r30, 0xC5	; 197
     bf2:	f1 40       	sbci	r31, 0x01	; 1
     bf4:	20 81       	ld	r18, Z
     bf6:	31 97       	sbiw	r30, 0x01	; 1
     bf8:	80 81       	ld	r24, Z
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	a0 e0       	ldi	r26, 0x00	; 0
     bfe:	b0 e0       	ldi	r27, 0x00	; 0
     c00:	dc 01       	movw	r26, r24
     c02:	99 27       	eor	r25, r25
     c04:	88 27       	eor	r24, r24
     c06:	b2 2b       	or	r27, r18
     c08:	32 97       	sbiw	r30, 0x02	; 2
     c0a:	20 81       	ld	r18, Z
     c0c:	82 2b       	or	r24, r18
     c0e:	31 96       	adiw	r30, 0x01	; 1
     c10:	40 81       	ld	r20, Z
     c12:	50 e0       	ldi	r21, 0x00	; 0
     c14:	54 2f       	mov	r21, r20
     c16:	44 27       	eor	r20, r20
     c18:	60 e0       	ldi	r22, 0x00	; 0
     c1a:	70 e0       	ldi	r23, 0x00	; 0
     c1c:	84 2b       	or	r24, r20
     c1e:	95 2b       	or	r25, r21
     c20:	a6 2b       	or	r26, r22
     c22:	b7 2b       	or	r27, r23
     c24:	bb 27       	eor	r27, r27
     c26:	86 34       	cpi	r24, 0x46	; 70
     c28:	91 44       	sbci	r25, 0x41	; 65
     c2a:	a4 45       	sbci	r26, 0x54	; 84
     c2c:	b1 05       	cpc	r27, r1
     c2e:	39 f1       	breq	.+78     	; 0xc7e <check_fs+0xc8>
     c30:	7e 96       	adiw	r30, 0x1e	; 30
     c32:	80 81       	ld	r24, Z
     c34:	31 97       	sbiw	r30, 0x01	; 1
     c36:	40 81       	ld	r20, Z
     c38:	50 e0       	ldi	r21, 0x00	; 0
     c3a:	60 e0       	ldi	r22, 0x00	; 0
     c3c:	70 e0       	ldi	r23, 0x00	; 0
     c3e:	ba 01       	movw	r22, r20
     c40:	55 27       	eor	r21, r21
     c42:	44 27       	eor	r20, r20
     c44:	78 2b       	or	r23, r24
     c46:	32 97       	sbiw	r30, 0x02	; 2
     c48:	80 81       	ld	r24, Z
     c4a:	48 2b       	or	r20, r24
     c4c:	cf 57       	subi	r28, 0x7F	; 127
     c4e:	df 4f       	sbci	r29, 0xFF	; 255
     c50:	88 81       	ld	r24, Y
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	98 2f       	mov	r25, r24
     c56:	88 27       	eor	r24, r24
     c58:	a0 e0       	ldi	r26, 0x00	; 0
     c5a:	b0 e0       	ldi	r27, 0x00	; 0
     c5c:	48 2b       	or	r20, r24
     c5e:	59 2b       	or	r21, r25
     c60:	6a 2b       	or	r22, r26
     c62:	7b 2b       	or	r23, r27
     c64:	77 27       	eor	r23, r23
     c66:	81 e0       	ldi	r24, 0x01	; 1
     c68:	46 34       	cpi	r20, 0x46	; 70
     c6a:	51 44       	sbci	r21, 0x41	; 65
     c6c:	64 45       	sbci	r22, 0x54	; 84
     c6e:	71 05       	cpc	r23, r1
     c70:	39 f4       	brne	.+14     	; 0xc80 <check_fs+0xca>
     c72:	80 e0       	ldi	r24, 0x00	; 0
     c74:	05 c0       	rjmp	.+10     	; 0xc80 <check_fs+0xca>
     c76:	83 e0       	ldi	r24, 0x03	; 3
     c78:	03 c0       	rjmp	.+6      	; 0xc80 <check_fs+0xca>
     c7a:	82 e0       	ldi	r24, 0x02	; 2
     c7c:	01 c0       	rjmp	.+2      	; 0xc80 <check_fs+0xca>
     c7e:	80 e0       	ldi	r24, 0x00	; 0
     c80:	df 91       	pop	r29
     c82:	cf 91       	pop	r28
     c84:	08 95       	ret

00000c86 <validate>:
     c86:	00 97       	sbiw	r24, 0x00	; 0
     c88:	c1 f0       	breq	.+48     	; 0xcba <validate+0x34>
     c8a:	dc 01       	movw	r26, r24
     c8c:	ed 91       	ld	r30, X+
     c8e:	fc 91       	ld	r31, X
     c90:	11 97       	sbiw	r26, 0x01	; 1
     c92:	30 97       	sbiw	r30, 0x00	; 0
     c94:	a1 f0       	breq	.+40     	; 0xcbe <validate+0x38>
     c96:	20 81       	ld	r18, Z
     c98:	22 23       	and	r18, r18
     c9a:	99 f0       	breq	.+38     	; 0xcc2 <validate+0x3c>
     c9c:	26 81       	ldd	r18, Z+6	; 0x06
     c9e:	37 81       	ldd	r19, Z+7	; 0x07
     ca0:	12 96       	adiw	r26, 0x02	; 2
     ca2:	8d 91       	ld	r24, X+
     ca4:	9c 91       	ld	r25, X
     ca6:	13 97       	sbiw	r26, 0x03	; 3
     ca8:	28 17       	cp	r18, r24
     caa:	39 07       	cpc	r19, r25
     cac:	61 f4       	brne	.+24     	; 0xcc6 <validate+0x40>
     cae:	81 81       	ldd	r24, Z+1	; 0x01
     cb0:	13 dc       	rcall	.-2010   	; 0x4d8 <disk_status>
     cb2:	80 ff       	sbrs	r24, 0
     cb4:	0a c0       	rjmp	.+20     	; 0xcca <validate+0x44>
     cb6:	89 e0       	ldi	r24, 0x09	; 9
     cb8:	08 95       	ret
     cba:	89 e0       	ldi	r24, 0x09	; 9
     cbc:	08 95       	ret
     cbe:	89 e0       	ldi	r24, 0x09	; 9
     cc0:	08 95       	ret
     cc2:	89 e0       	ldi	r24, 0x09	; 9
     cc4:	08 95       	ret
     cc6:	89 e0       	ldi	r24, 0x09	; 9
     cc8:	08 95       	ret
     cca:	80 e0       	ldi	r24, 0x00	; 0
     ccc:	08 95       	ret

00000cce <find_volume>:
     cce:	2f 92       	push	r2
     cd0:	3f 92       	push	r3
     cd2:	4f 92       	push	r4
     cd4:	5f 92       	push	r5
     cd6:	6f 92       	push	r6
     cd8:	7f 92       	push	r7
     cda:	8f 92       	push	r8
     cdc:	9f 92       	push	r9
     cde:	af 92       	push	r10
     ce0:	bf 92       	push	r11
     ce2:	cf 92       	push	r12
     ce4:	df 92       	push	r13
     ce6:	ef 92       	push	r14
     ce8:	ff 92       	push	r15
     cea:	0f 93       	push	r16
     cec:	1f 93       	push	r17
     cee:	cf 93       	push	r28
     cf0:	df 93       	push	r29
     cf2:	cd b7       	in	r28, 0x3d	; 61
     cf4:	de b7       	in	r29, 0x3e	; 62
     cf6:	6d 97       	sbiw	r28, 0x1d	; 29
     cf8:	0f b6       	in	r0, 0x3f	; 63
     cfa:	f8 94       	cli
     cfc:	de bf       	out	0x3e, r29	; 62
     cfe:	0f be       	out	0x3f, r0	; 63
     d00:	cd bf       	out	0x3d, r28	; 61
     d02:	6c 01       	movw	r12, r24
     d04:	cb 01       	movw	r24, r22
     d06:	b4 2e       	mov	r11, r20
     d08:	d6 01       	movw	r26, r12
     d0a:	1d 92       	st	X+, r1
     d0c:	1c 92       	st	X, r1
     d0e:	77 de       	rcall	.-786    	; 0x9fe <get_ldnumber>
     d10:	7c 01       	movw	r14, r24
     d12:	99 23       	and	r25, r25
     d14:	0c f4       	brge	.+2      	; 0xd18 <find_volume+0x4a>
     d16:	d4 c2       	rjmp	.+1448   	; 0x12c0 <find_volume+0x5f2>
     d18:	fc 01       	movw	r30, r24
     d1a:	ee 0f       	add	r30, r30
     d1c:	ff 1f       	adc	r31, r31
     d1e:	e3 5d       	subi	r30, 0xD3	; 211
     d20:	fe 4f       	sbci	r31, 0xFE	; 254
     d22:	00 81       	ld	r16, Z
     d24:	11 81       	ldd	r17, Z+1	; 0x01
     d26:	01 15       	cp	r16, r1
     d28:	11 05       	cpc	r17, r1
     d2a:	09 f4       	brne	.+2      	; 0xd2e <find_volume+0x60>
     d2c:	cb c2       	rjmp	.+1430   	; 0x12c4 <find_volume+0x5f6>
     d2e:	f6 01       	movw	r30, r12
     d30:	11 83       	std	Z+1, r17	; 0x01
     d32:	00 83       	st	Z, r16
     d34:	d8 01       	movw	r26, r16
     d36:	8c 91       	ld	r24, X
     d38:	88 23       	and	r24, r24
     d3a:	61 f0       	breq	.+24     	; 0xd54 <find_volume+0x86>
     d3c:	11 96       	adiw	r26, 0x01	; 1
     d3e:	8c 91       	ld	r24, X
     d40:	cb db       	rcall	.-2154   	; 0x4d8 <disk_status>
     d42:	80 fd       	sbrc	r24, 0
     d44:	07 c0       	rjmp	.+14     	; 0xd54 <find_volume+0x86>
     d46:	bb 20       	and	r11, r11
     d48:	09 f4       	brne	.+2      	; 0xd4c <find_volume+0x7e>
     d4a:	be c2       	rjmp	.+1404   	; 0x12c8 <find_volume+0x5fa>
     d4c:	82 ff       	sbrs	r24, 2
     d4e:	be c2       	rjmp	.+1404   	; 0x12cc <find_volume+0x5fe>
     d50:	8a e0       	ldi	r24, 0x0A	; 10
     d52:	63 c3       	rjmp	.+1734   	; 0x141a <find_volume+0x74c>
     d54:	f8 01       	movw	r30, r16
     d56:	10 82       	st	Z, r1
     d58:	e1 82       	std	Z+1, r14	; 0x01
     d5a:	8e 2d       	mov	r24, r14
     d5c:	f8 da       	rcall	.-2576   	; 0x34e <disk_initialize>
     d5e:	80 fd       	sbrc	r24, 0
     d60:	b7 c2       	rjmp	.+1390   	; 0x12d0 <find_volume+0x602>
     d62:	bb 20       	and	r11, r11
     d64:	09 f4       	brne	.+2      	; 0xd68 <find_volume+0x9a>
     d66:	d4 c2       	rjmp	.+1448   	; 0x1310 <find_volume+0x642>
     d68:	82 fd       	sbrc	r24, 2
     d6a:	b4 c2       	rjmp	.+1384   	; 0x12d4 <find_volume+0x606>
     d6c:	d1 c2       	rjmp	.+1442   	; 0x1310 <find_volume+0x642>
     d6e:	df 01       	movw	r26, r30
     d70:	17 97       	sbiw	r26, 0x07	; 7
     d72:	8c 91       	ld	r24, X
     d74:	88 23       	and	r24, r24
     d76:	b9 f0       	breq	.+46     	; 0xda6 <find_volume+0xd8>
     d78:	14 96       	adiw	r26, 0x04	; 4
     d7a:	cc 90       	ld	r12, X
     d7c:	80 81       	ld	r24, Z
     d7e:	d1 2c       	mov	r13, r1
     d80:	e1 2c       	mov	r14, r1
     d82:	f1 2c       	mov	r15, r1
     d84:	f8 2a       	or	r15, r24
     d86:	12 96       	adiw	r26, 0x02	; 2
     d88:	8c 91       	ld	r24, X
     d8a:	e8 2a       	or	r14, r24
     d8c:	11 97       	sbiw	r26, 0x01	; 1
     d8e:	ac 91       	ld	r26, X
     d90:	b0 e0       	ldi	r27, 0x00	; 0
     d92:	ba 2f       	mov	r27, r26
     d94:	aa 27       	eor	r26, r26
     d96:	cd 01       	movw	r24, r26
     d98:	a0 e0       	ldi	r26, 0x00	; 0
     d9a:	b0 e0       	ldi	r27, 0x00	; 0
     d9c:	c8 2a       	or	r12, r24
     d9e:	d9 2a       	or	r13, r25
     da0:	ea 2a       	or	r14, r26
     da2:	fb 2a       	or	r15, r27
     da4:	04 c0       	rjmp	.+8      	; 0xdae <find_volume+0xe0>
     da6:	c8 2c       	mov	r12, r8
     da8:	d9 2c       	mov	r13, r9
     daa:	e7 2e       	mov	r14, r23
     dac:	f6 2e       	mov	r15, r22
     dae:	d9 01       	movw	r26, r18
     db0:	cd 92       	st	X+, r12
     db2:	dd 92       	st	X+, r13
     db4:	ed 92       	st	X+, r14
     db6:	fd 92       	st	X+, r15
     db8:	9d 01       	movw	r18, r26
     dba:	70 96       	adiw	r30, 0x10	; 16
     dbc:	e4 17       	cp	r30, r20
     dbe:	f5 07       	cpc	r31, r21
     dc0:	b1 f6       	brne	.-84     	; 0xd6e <find_volume+0xa0>
     dc2:	4e 01       	movw	r8, r28
     dc4:	b1 e1       	ldi	r27, 0x11	; 17
     dc6:	8b 0e       	add	r8, r27
     dc8:	91 1c       	adc	r9, r1
     dca:	68 94       	set
     dcc:	77 24       	eor	r7, r7
     dce:	71 f8       	bld	r7, 1
     dd0:	f5 01       	movw	r30, r10
     dd2:	c1 90       	ld	r12, Z+
     dd4:	d1 90       	ld	r13, Z+
     dd6:	e1 90       	ld	r14, Z+
     dd8:	f1 90       	ld	r15, Z+
     dda:	5f 01       	movw	r10, r30
     ddc:	c1 14       	cp	r12, r1
     dde:	d1 04       	cpc	r13, r1
     de0:	e1 04       	cpc	r14, r1
     de2:	f1 04       	cpc	r15, r1
     de4:	39 f0       	breq	.+14     	; 0xdf4 <find_volume+0x126>
     de6:	b7 01       	movw	r22, r14
     de8:	a6 01       	movw	r20, r12
     dea:	c8 01       	movw	r24, r16
     dec:	e4 de       	rcall	.-568    	; 0xbb6 <check_fs>
     dee:	81 11       	cpse	r24, r1
     df0:	02 c0       	rjmp	.+4      	; 0xdf6 <find_volume+0x128>
     df2:	0d c0       	rjmp	.+26     	; 0xe0e <find_volume+0x140>
     df4:	87 2d       	mov	r24, r7
     df6:	a8 14       	cp	r10, r8
     df8:	b9 04       	cpc	r11, r9
     dfa:	51 f7       	brne	.-44     	; 0xdd0 <find_volume+0x102>
     dfc:	03 c0       	rjmp	.+6      	; 0xe04 <find_volume+0x136>
     dfe:	c1 2c       	mov	r12, r1
     e00:	d1 2c       	mov	r13, r1
     e02:	76 01       	movw	r14, r12
     e04:	83 30       	cpi	r24, 0x03	; 3
     e06:	09 f4       	brne	.+2      	; 0xe0a <find_volume+0x13c>
     e08:	67 c2       	rjmp	.+1230   	; 0x12d8 <find_volume+0x60a>
     e0a:	81 11       	cpse	r24, r1
     e0c:	67 c2       	rjmp	.+1230   	; 0x12dc <find_volume+0x60e>
     e0e:	d8 01       	movw	r26, r16
     e10:	da 96       	adiw	r26, 0x3a	; 58
     e12:	8c 91       	ld	r24, X
     e14:	da 97       	sbiw	r26, 0x3a	; 58
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	98 2f       	mov	r25, r24
     e1a:	88 27       	eor	r24, r24
     e1c:	d9 96       	adiw	r26, 0x39	; 57
     e1e:	2c 91       	ld	r18, X
     e20:	82 2b       	or	r24, r18
     e22:	81 15       	cp	r24, r1
     e24:	90 41       	sbci	r25, 0x10	; 16
     e26:	09 f0       	breq	.+2      	; 0xe2a <find_volume+0x15c>
     e28:	5b c2       	rjmp	.+1206   	; 0x12e0 <find_volume+0x612>
     e2a:	f8 01       	movw	r30, r16
     e2c:	eb 5b       	subi	r30, 0xBB	; 187
     e2e:	ff 4f       	sbci	r31, 0xFF	; 255
     e30:	80 80       	ld	r8, Z
     e32:	91 2c       	mov	r9, r1
     e34:	98 2c       	mov	r9, r8
     e36:	88 24       	eor	r8, r8
     e38:	31 97       	sbiw	r30, 0x01	; 1
     e3a:	80 81       	ld	r24, Z
     e3c:	88 2a       	or	r8, r24
     e3e:	a1 2c       	mov	r10, r1
     e40:	b1 2c       	mov	r11, r1
     e42:	81 14       	cp	r8, r1
     e44:	91 04       	cpc	r9, r1
     e46:	a1 04       	cpc	r10, r1
     e48:	b1 04       	cpc	r11, r1
     e4a:	e9 f4       	brne	.+58     	; 0xe86 <find_volume+0x1b8>
     e4c:	71 96       	adiw	r30, 0x11	; 17
     e4e:	80 81       	ld	r24, Z
     e50:	31 97       	sbiw	r30, 0x01	; 1
     e52:	80 80       	ld	r8, Z
     e54:	91 2c       	mov	r9, r1
     e56:	a1 2c       	mov	r10, r1
     e58:	b1 2c       	mov	r11, r1
     e5a:	54 01       	movw	r10, r8
     e5c:	99 24       	eor	r9, r9
     e5e:	88 24       	eor	r8, r8
     e60:	b8 2a       	or	r11, r24
     e62:	32 97       	sbiw	r30, 0x02	; 2
     e64:	80 81       	ld	r24, Z
     e66:	a5 01       	movw	r20, r10
     e68:	94 01       	movw	r18, r8
     e6a:	28 2b       	or	r18, r24
     e6c:	da 01       	movw	r26, r20
     e6e:	c9 01       	movw	r24, r18
     e70:	31 96       	adiw	r30, 0x01	; 1
     e72:	80 80       	ld	r8, Z
     e74:	91 2c       	mov	r9, r1
     e76:	98 2c       	mov	r9, r8
     e78:	88 24       	eor	r8, r8
     e7a:	a1 2c       	mov	r10, r1
     e7c:	b1 2c       	mov	r11, r1
     e7e:	88 2a       	or	r8, r24
     e80:	99 2a       	or	r9, r25
     e82:	aa 2a       	or	r10, r26
     e84:	bb 2a       	or	r11, r27
     e86:	d8 01       	movw	r26, r16
     e88:	56 96       	adiw	r26, 0x16	; 22
     e8a:	8d 92       	st	X+, r8
     e8c:	9d 92       	st	X+, r9
     e8e:	ad 92       	st	X+, r10
     e90:	bc 92       	st	X, r11
     e92:	59 97       	sbiw	r26, 0x19	; 25
     e94:	de 96       	adiw	r26, 0x3e	; 62
     e96:	ac 91       	ld	r26, X
     e98:	f8 01       	movw	r30, r16
     e9a:	a3 83       	std	Z+3, r26	; 0x03
     e9c:	8f ef       	ldi	r24, 0xFF	; 255
     e9e:	8a 0f       	add	r24, r26
     ea0:	82 30       	cpi	r24, 0x02	; 2
     ea2:	08 f0       	brcs	.+2      	; 0xea6 <find_volume+0x1d8>
     ea4:	1f c2       	rjmp	.+1086   	; 0x12e4 <find_volume+0x616>
     ea6:	f3 ad       	ldd	r31, Z+59	; 0x3b
     ea8:	f9 8b       	std	Y+17, r31	; 0x11
     eaa:	2f 2f       	mov	r18, r31
     eac:	f8 01       	movw	r30, r16
     eae:	22 83       	std	Z+2, r18	; 0x02
     eb0:	22 23       	and	r18, r18
     eb2:	09 f4       	brne	.+2      	; 0xeb6 <find_volume+0x1e8>
     eb4:	19 c2       	rjmp	.+1074   	; 0x12e8 <find_volume+0x61a>
     eb6:	82 2f       	mov	r24, r18
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	9c 01       	movw	r18, r24
     ebc:	21 50       	subi	r18, 0x01	; 1
     ebe:	31 09       	sbc	r19, r1
     ec0:	82 23       	and	r24, r18
     ec2:	93 23       	and	r25, r19
     ec4:	89 2b       	or	r24, r25
     ec6:	09 f0       	breq	.+2      	; 0xeca <find_volume+0x1fc>
     ec8:	11 c2       	rjmp	.+1058   	; 0x12ec <find_volume+0x61e>
     eca:	e0 5c       	subi	r30, 0xC0	; 192
     ecc:	ff 4f       	sbci	r31, 0xFF	; 255
     ece:	80 81       	ld	r24, Z
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	98 2f       	mov	r25, r24
     ed4:	88 27       	eor	r24, r24
     ed6:	f8 01       	movw	r30, r16
     ed8:	27 ad       	ldd	r18, Z+63	; 0x3f
     eda:	1c 01       	movw	r2, r24
     edc:	22 2a       	or	r2, r18
     ede:	31 86       	std	Z+9, r3	; 0x09
     ee0:	20 86       	std	Z+8, r2	; 0x08
     ee2:	c1 01       	movw	r24, r2
     ee4:	8f 77       	andi	r24, 0x7F	; 127
     ee6:	99 27       	eor	r25, r25
     ee8:	89 2b       	or	r24, r25
     eea:	09 f0       	breq	.+2      	; 0xeee <find_volume+0x220>
     eec:	01 c2       	rjmp	.+1026   	; 0x12f0 <find_volume+0x622>
     eee:	ee 5b       	subi	r30, 0xBE	; 190
     ef0:	ff 4f       	sbci	r31, 0xFF	; 255
     ef2:	40 80       	ld	r4, Z
     ef4:	51 2c       	mov	r5, r1
     ef6:	54 2c       	mov	r5, r4
     ef8:	44 24       	eor	r4, r4
     efa:	31 97       	sbiw	r30, 0x01	; 1
     efc:	80 81       	ld	r24, Z
     efe:	48 2a       	or	r4, r24
     f00:	61 2c       	mov	r6, r1
     f02:	71 2c       	mov	r7, r1
     f04:	41 14       	cp	r4, r1
     f06:	51 04       	cpc	r5, r1
     f08:	61 04       	cpc	r6, r1
     f0a:	71 04       	cpc	r7, r1
     f0c:	d1 f4       	brne	.+52     	; 0xf42 <find_volume+0x274>
     f0e:	70 96       	adiw	r30, 0x10	; 16
     f10:	80 81       	ld	r24, Z
     f12:	31 97       	sbiw	r30, 0x01	; 1
     f14:	40 80       	ld	r4, Z
     f16:	51 2c       	mov	r5, r1
     f18:	61 2c       	mov	r6, r1
     f1a:	71 2c       	mov	r7, r1
     f1c:	32 01       	movw	r6, r4
     f1e:	55 24       	eor	r5, r5
     f20:	44 24       	eor	r4, r4
     f22:	78 2a       	or	r7, r24
     f24:	32 97       	sbiw	r30, 0x02	; 2
     f26:	80 81       	ld	r24, Z
     f28:	48 2a       	or	r4, r24
     f2a:	31 96       	adiw	r30, 0x01	; 1
     f2c:	80 81       	ld	r24, Z
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	98 2f       	mov	r25, r24
     f32:	88 27       	eor	r24, r24
     f34:	ac 01       	movw	r20, r24
     f36:	60 e0       	ldi	r22, 0x00	; 0
     f38:	70 e0       	ldi	r23, 0x00	; 0
     f3a:	44 2a       	or	r4, r20
     f3c:	55 2a       	or	r5, r21
     f3e:	66 2a       	or	r6, r22
     f40:	77 2a       	or	r7, r23
     f42:	f8 01       	movw	r30, r16
     f44:	85 ad       	ldd	r24, Z+61	; 0x3d
     f46:	e8 2f       	mov	r30, r24
     f48:	f0 e0       	ldi	r31, 0x00	; 0
     f4a:	3e 2f       	mov	r19, r30
     f4c:	22 27       	eor	r18, r18
     f4e:	f8 01       	movw	r30, r16
     f50:	84 ad       	ldd	r24, Z+60	; 0x3c
     f52:	f9 01       	movw	r30, r18
     f54:	e8 2b       	or	r30, r24
     f56:	30 97       	sbiw	r30, 0x00	; 0
     f58:	09 f4       	brne	.+2      	; 0xf5c <find_volume+0x28e>
     f5a:	cc c1       	rjmp	.+920    	; 0x12f4 <find_volume+0x626>
     f5c:	b0 e0       	ldi	r27, 0x00	; 0
     f5e:	a5 01       	movw	r20, r10
     f60:	94 01       	movw	r18, r8
     f62:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <__muluhisi3>
     f66:	6a 8f       	std	Y+26, r22	; 0x1a
     f68:	7b 8f       	std	Y+27, r23	; 0x1b
     f6a:	8c 8f       	std	Y+28, r24	; 0x1c
     f6c:	9d 8f       	std	Y+29, r25	; 0x1d
     f6e:	9f 01       	movw	r18, r30
     f70:	40 e0       	ldi	r20, 0x00	; 0
     f72:	50 e0       	ldi	r21, 0x00	; 0
     f74:	2e 8b       	std	Y+22, r18	; 0x16
     f76:	3f 8b       	std	Y+23, r19	; 0x17
     f78:	48 8f       	std	Y+24, r20	; 0x18
     f7a:	59 8f       	std	Y+25, r21	; 0x19
     f7c:	c1 01       	movw	r24, r2
     f7e:	88 0f       	add	r24, r24
     f80:	89 2f       	mov	r24, r25
     f82:	88 1f       	adc	r24, r24
     f84:	99 0b       	sbc	r25, r25
     f86:	91 95       	neg	r25
     f88:	28 0f       	add	r18, r24
     f8a:	39 1f       	adc	r19, r25
     f8c:	41 1d       	adc	r20, r1
     f8e:	51 1d       	adc	r21, r1
     f90:	da 01       	movw	r26, r20
     f92:	c9 01       	movw	r24, r18
     f94:	2a 8d       	ldd	r18, Y+26	; 0x1a
     f96:	3b 8d       	ldd	r19, Y+27	; 0x1b
     f98:	4c 8d       	ldd	r20, Y+28	; 0x1c
     f9a:	5d 8d       	ldd	r21, Y+29	; 0x1d
     f9c:	28 0f       	add	r18, r24
     f9e:	39 1f       	adc	r19, r25
     fa0:	4a 1f       	adc	r20, r26
     fa2:	5b 1f       	adc	r21, r27
     fa4:	2a 8b       	std	Y+18, r18	; 0x12
     fa6:	3b 8b       	std	Y+19, r19	; 0x13
     fa8:	4c 8b       	std	Y+20, r20	; 0x14
     faa:	5d 8b       	std	Y+21, r21	; 0x15
     fac:	42 16       	cp	r4, r18
     fae:	53 06       	cpc	r5, r19
     fb0:	64 06       	cpc	r6, r20
     fb2:	75 06       	cpc	r7, r21
     fb4:	08 f4       	brcc	.+2      	; 0xfb8 <find_volume+0x2ea>
     fb6:	a0 c1       	rjmp	.+832    	; 0x12f8 <find_volume+0x62a>
     fb8:	c3 01       	movw	r24, r6
     fba:	b2 01       	movw	r22, r4
     fbc:	62 1b       	sub	r22, r18
     fbe:	73 0b       	sbc	r23, r19
     fc0:	84 0b       	sbc	r24, r20
     fc2:	95 0b       	sbc	r25, r21
     fc4:	e9 89       	ldd	r30, Y+17	; 0x11
     fc6:	2e 2f       	mov	r18, r30
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	40 e0       	ldi	r20, 0x00	; 0
     fcc:	50 e0       	ldi	r21, 0x00	; 0
     fce:	0e 94 b7 18 	call	0x316e	; 0x316e <__udivmodsi4>
     fd2:	da 01       	movw	r26, r20
     fd4:	c9 01       	movw	r24, r18
     fd6:	21 15       	cp	r18, r1
     fd8:	31 05       	cpc	r19, r1
     fda:	41 05       	cpc	r20, r1
     fdc:	51 05       	cpc	r21, r1
     fde:	09 f4       	brne	.+2      	; 0xfe2 <find_volume+0x314>
     fe0:	8d c1       	rjmp	.+794    	; 0x12fc <find_volume+0x62e>
     fe2:	26 3f       	cpi	r18, 0xF6	; 246
     fe4:	ff e0       	ldi	r31, 0x0F	; 15
     fe6:	3f 07       	cpc	r19, r31
     fe8:	41 05       	cpc	r20, r1
     fea:	51 05       	cpc	r21, r1
     fec:	18 f0       	brcs	.+6      	; 0xff4 <find_volume+0x326>
     fee:	e2 e0       	ldi	r30, 0x02	; 2
     ff0:	e9 8b       	std	Y+17, r30	; 0x11
     ff2:	02 c0       	rjmp	.+4      	; 0xff8 <find_volume+0x32a>
     ff4:	f1 e0       	ldi	r31, 0x01	; 1
     ff6:	f9 8b       	std	Y+17, r31	; 0x11
     ff8:	86 3f       	cpi	r24, 0xF6	; 246
     ffa:	9f 4f       	sbci	r25, 0xFF	; 255
     ffc:	a1 05       	cpc	r26, r1
     ffe:	b1 05       	cpc	r27, r1
    1000:	08 f0       	brcs	.+2      	; 0x1004 <find_volume+0x336>
    1002:	9d c1       	rjmp	.+826    	; 0x133e <find_volume+0x670>
    1004:	29 01       	movw	r4, r18
    1006:	3a 01       	movw	r6, r20
    1008:	82 e0       	ldi	r24, 0x02	; 2
    100a:	48 0e       	add	r4, r24
    100c:	51 1c       	adc	r5, r1
    100e:	61 1c       	adc	r6, r1
    1010:	71 1c       	adc	r7, r1
    1012:	d8 01       	movw	r26, r16
    1014:	52 96       	adiw	r26, 0x12	; 18
    1016:	4d 92       	st	X+, r4
    1018:	5d 92       	st	X+, r5
    101a:	6d 92       	st	X+, r6
    101c:	7c 92       	st	X, r7
    101e:	55 97       	sbiw	r26, 0x15	; 21
    1020:	f8 01       	movw	r30, r16
    1022:	c2 8e       	std	Z+26, r12	; 0x1a
    1024:	d3 8e       	std	Z+27, r13	; 0x1b
    1026:	e4 8e       	std	Z+28, r14	; 0x1c
    1028:	f5 8e       	std	Z+29, r15	; 0x1d
    102a:	8e 89       	ldd	r24, Y+22	; 0x16
    102c:	9f 89       	ldd	r25, Y+23	; 0x17
    102e:	a8 8d       	ldd	r26, Y+24	; 0x18
    1030:	b9 8d       	ldd	r27, Y+25	; 0x19
    1032:	8c 0d       	add	r24, r12
    1034:	9d 1d       	adc	r25, r13
    1036:	ae 1d       	adc	r26, r14
    1038:	bf 1d       	adc	r27, r15
    103a:	86 8f       	std	Z+30, r24	; 0x1e
    103c:	97 8f       	std	Z+31, r25	; 0x1f
    103e:	a0 a3       	std	Z+32, r26	; 0x20
    1040:	b1 a3       	std	Z+33, r27	; 0x21
    1042:	4a 89       	ldd	r20, Y+18	; 0x12
    1044:	5b 89       	ldd	r21, Y+19	; 0x13
    1046:	6c 89       	ldd	r22, Y+20	; 0x14
    1048:	7d 89       	ldd	r23, Y+21	; 0x15
    104a:	4c 0d       	add	r20, r12
    104c:	5d 1d       	adc	r21, r13
    104e:	6e 1d       	adc	r22, r14
    1050:	7f 1d       	adc	r23, r15
    1052:	46 a3       	std	Z+38, r20	; 0x26
    1054:	57 a3       	std	Z+39, r21	; 0x27
    1056:	60 a7       	std	Z+40, r22	; 0x28
    1058:	71 a7       	std	Z+41, r23	; 0x29
    105a:	f9 89       	ldd	r31, Y+17	; 0x11
    105c:	f3 30       	cpi	r31, 0x03	; 3
    105e:	09 f0       	breq	.+2      	; 0x1062 <find_volume+0x394>
    1060:	44 c0       	rjmp	.+136    	; 0x10ea <find_volume+0x41c>
    1062:	23 28       	or	r2, r3
    1064:	09 f0       	breq	.+2      	; 0x1068 <find_volume+0x39a>
    1066:	4c c1       	rjmp	.+664    	; 0x1300 <find_volume+0x632>
    1068:	f8 01       	movw	r30, r16
    106a:	e3 5a       	subi	r30, 0xA3	; 163
    106c:	ff 4f       	sbci	r31, 0xFF	; 255
    106e:	20 81       	ld	r18, Z
    1070:	31 97       	sbiw	r30, 0x01	; 1
    1072:	80 81       	ld	r24, Z
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	a0 e0       	ldi	r26, 0x00	; 0
    1078:	b0 e0       	ldi	r27, 0x00	; 0
    107a:	dc 01       	movw	r26, r24
    107c:	99 27       	eor	r25, r25
    107e:	88 27       	eor	r24, r24
    1080:	b2 2b       	or	r27, r18
    1082:	32 97       	sbiw	r30, 0x02	; 2
    1084:	20 81       	ld	r18, Z
    1086:	ac 01       	movw	r20, r24
    1088:	bd 01       	movw	r22, r26
    108a:	42 2b       	or	r20, r18
    108c:	31 96       	adiw	r30, 0x01	; 1
    108e:	80 81       	ld	r24, Z
    1090:	28 2f       	mov	r18, r24
    1092:	30 e0       	ldi	r19, 0x00	; 0
    1094:	92 2f       	mov	r25, r18
    1096:	88 27       	eor	r24, r24
    1098:	a0 e0       	ldi	r26, 0x00	; 0
    109a:	b0 e0       	ldi	r27, 0x00	; 0
    109c:	84 2b       	or	r24, r20
    109e:	95 2b       	or	r25, r21
    10a0:	a6 2b       	or	r26, r22
    10a2:	b7 2b       	or	r27, r23
    10a4:	f8 01       	movw	r30, r16
    10a6:	82 a3       	std	Z+34, r24	; 0x22
    10a8:	93 a3       	std	Z+35, r25	; 0x23
    10aa:	a4 a3       	std	Z+36, r26	; 0x24
    10ac:	b5 a3       	std	Z+37, r27	; 0x25
    10ae:	44 0c       	add	r4, r4
    10b0:	55 1c       	adc	r5, r5
    10b2:	66 1c       	adc	r6, r6
    10b4:	77 1c       	adc	r7, r7
    10b6:	44 0c       	add	r4, r4
    10b8:	55 1c       	adc	r5, r5
    10ba:	66 1c       	adc	r6, r6
    10bc:	77 1c       	adc	r7, r7
    10be:	ff ef       	ldi	r31, 0xFF	; 255
    10c0:	4f 0e       	add	r4, r31
    10c2:	ff e0       	ldi	r31, 0x0F	; 15
    10c4:	5f 1e       	adc	r5, r31
    10c6:	61 1c       	adc	r6, r1
    10c8:	71 1c       	adc	r7, r1
    10ca:	03 2e       	mov	r0, r19
    10cc:	3c e0       	ldi	r19, 0x0C	; 12
    10ce:	76 94       	lsr	r7
    10d0:	67 94       	ror	r6
    10d2:	57 94       	ror	r5
    10d4:	47 94       	ror	r4
    10d6:	3a 95       	dec	r19
    10d8:	d1 f7       	brne	.-12     	; 0x10ce <find_volume+0x400>
    10da:	30 2d       	mov	r19, r0
    10dc:	84 14       	cp	r8, r4
    10de:	95 04       	cpc	r9, r5
    10e0:	a6 04       	cpc	r10, r6
    10e2:	b7 04       	cpc	r11, r7
    10e4:	08 f4       	brcc	.+2      	; 0x10e8 <find_volume+0x41a>
    10e6:	0e c1       	rjmp	.+540    	; 0x1304 <find_volume+0x636>
    10e8:	56 c1       	rjmp	.+684    	; 0x1396 <find_volume+0x6c8>
    10ea:	23 28       	or	r2, r3
    10ec:	09 f4       	brne	.+2      	; 0x10f0 <find_volume+0x422>
    10ee:	0c c1       	rjmp	.+536    	; 0x1308 <find_volume+0x63a>
    10f0:	2a 8d       	ldd	r18, Y+26	; 0x1a
    10f2:	3b 8d       	ldd	r19, Y+27	; 0x1b
    10f4:	4c 8d       	ldd	r20, Y+28	; 0x1c
    10f6:	5d 8d       	ldd	r21, Y+29	; 0x1d
    10f8:	82 0f       	add	r24, r18
    10fa:	93 1f       	adc	r25, r19
    10fc:	a4 1f       	adc	r26, r20
    10fe:	b5 1f       	adc	r27, r21
    1100:	f8 01       	movw	r30, r16
    1102:	82 a3       	std	Z+34, r24	; 0x22
    1104:	93 a3       	std	Z+35, r25	; 0x23
    1106:	a4 a3       	std	Z+36, r26	; 0x24
    1108:	b5 a3       	std	Z+37, r27	; 0x25
    110a:	f9 89       	ldd	r31, Y+17	; 0x11
    110c:	f2 30       	cpi	r31, 0x02	; 2
    110e:	29 f4       	brne	.+10     	; 0x111a <find_volume+0x44c>
    1110:	44 0c       	add	r4, r4
    1112:	55 1c       	adc	r5, r5
    1114:	66 1c       	adc	r6, r6
    1116:	77 1c       	adc	r7, r7
    1118:	6a c1       	rjmp	.+724    	; 0x13ee <find_volume+0x720>
    111a:	a3 e0       	ldi	r26, 0x03	; 3
    111c:	b0 e0       	ldi	r27, 0x00	; 0
    111e:	a3 01       	movw	r20, r6
    1120:	92 01       	movw	r18, r4
    1122:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <__muluhisi3>
    1126:	dc 01       	movw	r26, r24
    1128:	cb 01       	movw	r24, r22
    112a:	b6 95       	lsr	r27
    112c:	a7 95       	ror	r26
    112e:	97 95       	ror	r25
    1130:	87 95       	ror	r24
    1132:	21 e0       	ldi	r18, 0x01	; 1
    1134:	42 22       	and	r4, r18
    1136:	55 24       	eor	r5, r5
    1138:	66 24       	eor	r6, r6
    113a:	77 24       	eor	r7, r7
    113c:	48 0e       	add	r4, r24
    113e:	59 1e       	adc	r5, r25
    1140:	6a 1e       	adc	r6, r26
    1142:	7b 1e       	adc	r7, r27
    1144:	54 c1       	rjmp	.+680    	; 0x13ee <find_volume+0x720>
    1146:	b7 01       	movw	r22, r14
    1148:	a6 01       	movw	r20, r12
    114a:	4f 5f       	subi	r20, 0xFF	; 255
    114c:	5f 4f       	sbci	r21, 0xFF	; 255
    114e:	6f 4f       	sbci	r22, 0xFF	; 255
    1150:	7f 4f       	sbci	r23, 0xFF	; 255
    1152:	c8 01       	movw	r24, r16
    1154:	f4 dc       	rcall	.-1560   	; 0xb3e <move_window>
    1156:	81 11       	cpse	r24, r1
    1158:	96 c0       	rjmp	.+300    	; 0x1286 <find_volume+0x5b8>
    115a:	d8 01       	movw	r26, r16
    115c:	15 96       	adiw	r26, 0x05	; 5
    115e:	1c 92       	st	X, r1
    1160:	f8 01       	movw	r30, r16
    1162:	e3 5d       	subi	r30, 0xD3	; 211
    1164:	fd 4f       	sbci	r31, 0xFD	; 253
    1166:	80 81       	ld	r24, Z
    1168:	90 e0       	ldi	r25, 0x00	; 0
    116a:	98 2f       	mov	r25, r24
    116c:	88 27       	eor	r24, r24
    116e:	31 97       	sbiw	r30, 0x01	; 1
    1170:	20 81       	ld	r18, Z
    1172:	82 2b       	or	r24, r18
    1174:	85 35       	cpi	r24, 0x55	; 85
    1176:	9a 4a       	sbci	r25, 0xAA	; 170
    1178:	09 f0       	breq	.+2      	; 0x117c <find_volume+0x4ae>
    117a:	88 c0       	rjmp	.+272    	; 0x128c <find_volume+0x5be>
    117c:	f8 01       	movw	r30, r16
    117e:	21 a9       	ldd	r18, Z+49	; 0x31
    1180:	80 a9       	ldd	r24, Z+48	; 0x30
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	a0 e0       	ldi	r26, 0x00	; 0
    1186:	b0 e0       	ldi	r27, 0x00	; 0
    1188:	dc 01       	movw	r26, r24
    118a:	99 27       	eor	r25, r25
    118c:	88 27       	eor	r24, r24
    118e:	b2 2b       	or	r27, r18
    1190:	26 a5       	ldd	r18, Z+46	; 0x2e
    1192:	ac 01       	movw	r20, r24
    1194:	bd 01       	movw	r22, r26
    1196:	42 2b       	or	r20, r18
    1198:	27 a5       	ldd	r18, Z+47	; 0x2f
    119a:	30 e0       	ldi	r19, 0x00	; 0
    119c:	92 2f       	mov	r25, r18
    119e:	88 27       	eor	r24, r24
    11a0:	a0 e0       	ldi	r26, 0x00	; 0
    11a2:	b0 e0       	ldi	r27, 0x00	; 0
    11a4:	84 2b       	or	r24, r20
    11a6:	95 2b       	or	r25, r21
    11a8:	a6 2b       	or	r26, r22
    11aa:	b7 2b       	or	r27, r23
    11ac:	82 35       	cpi	r24, 0x52	; 82
    11ae:	92 45       	sbci	r25, 0x52	; 82
    11b0:	a1 46       	sbci	r26, 0x61	; 97
    11b2:	b1 44       	sbci	r27, 0x41	; 65
    11b4:	09 f0       	breq	.+2      	; 0x11b8 <find_volume+0x4ea>
    11b6:	6d c0       	rjmp	.+218    	; 0x1292 <find_volume+0x5c4>
    11b8:	f8 01       	movw	r30, r16
    11ba:	eb 5e       	subi	r30, 0xEB	; 235
    11bc:	fd 4f       	sbci	r31, 0xFD	; 253
    11be:	20 81       	ld	r18, Z
    11c0:	31 97       	sbiw	r30, 0x01	; 1
    11c2:	80 81       	ld	r24, Z
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	a0 e0       	ldi	r26, 0x00	; 0
    11c8:	b0 e0       	ldi	r27, 0x00	; 0
    11ca:	dc 01       	movw	r26, r24
    11cc:	99 27       	eor	r25, r25
    11ce:	88 27       	eor	r24, r24
    11d0:	b2 2b       	or	r27, r18
    11d2:	32 97       	sbiw	r30, 0x02	; 2
    11d4:	20 81       	ld	r18, Z
    11d6:	ac 01       	movw	r20, r24
    11d8:	bd 01       	movw	r22, r26
    11da:	42 2b       	or	r20, r18
    11dc:	31 96       	adiw	r30, 0x01	; 1
    11de:	20 81       	ld	r18, Z
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	92 2f       	mov	r25, r18
    11e4:	88 27       	eor	r24, r24
    11e6:	a0 e0       	ldi	r26, 0x00	; 0
    11e8:	b0 e0       	ldi	r27, 0x00	; 0
    11ea:	84 2b       	or	r24, r20
    11ec:	95 2b       	or	r25, r21
    11ee:	a6 2b       	or	r26, r22
    11f0:	b7 2b       	or	r27, r23
    11f2:	82 37       	cpi	r24, 0x72	; 114
    11f4:	92 47       	sbci	r25, 0x72	; 114
    11f6:	a1 44       	sbci	r26, 0x41	; 65
    11f8:	b1 46       	sbci	r27, 0x61	; 97
    11fa:	09 f0       	breq	.+2      	; 0x11fe <find_volume+0x530>
    11fc:	4d c0       	rjmp	.+154    	; 0x1298 <find_volume+0x5ca>
    11fe:	36 96       	adiw	r30, 0x06	; 6
    1200:	20 81       	ld	r18, Z
    1202:	31 97       	sbiw	r30, 0x01	; 1
    1204:	80 81       	ld	r24, Z
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	a0 e0       	ldi	r26, 0x00	; 0
    120a:	b0 e0       	ldi	r27, 0x00	; 0
    120c:	dc 01       	movw	r26, r24
    120e:	99 27       	eor	r25, r25
    1210:	88 27       	eor	r24, r24
    1212:	b2 2b       	or	r27, r18
    1214:	32 97       	sbiw	r30, 0x02	; 2
    1216:	20 81       	ld	r18, Z
    1218:	ac 01       	movw	r20, r24
    121a:	bd 01       	movw	r22, r26
    121c:	42 2b       	or	r20, r18
    121e:	31 96       	adiw	r30, 0x01	; 1
    1220:	20 81       	ld	r18, Z
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	92 2f       	mov	r25, r18
    1226:	88 27       	eor	r24, r24
    1228:	a0 e0       	ldi	r26, 0x00	; 0
    122a:	b0 e0       	ldi	r27, 0x00	; 0
    122c:	84 2b       	or	r24, r20
    122e:	95 2b       	or	r25, r21
    1230:	a6 2b       	or	r26, r22
    1232:	b7 2b       	or	r27, r23
    1234:	f8 01       	movw	r30, r16
    1236:	86 87       	std	Z+14, r24	; 0x0e
    1238:	97 87       	std	Z+15, r25	; 0x0f
    123a:	a0 8b       	std	Z+16, r26	; 0x10
    123c:	b1 8b       	std	Z+17, r27	; 0x11
    123e:	e3 5e       	subi	r30, 0xE3	; 227
    1240:	fd 4f       	sbci	r31, 0xFD	; 253
    1242:	20 81       	ld	r18, Z
    1244:	31 97       	sbiw	r30, 0x01	; 1
    1246:	80 81       	ld	r24, Z
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	a0 e0       	ldi	r26, 0x00	; 0
    124c:	b0 e0       	ldi	r27, 0x00	; 0
    124e:	dc 01       	movw	r26, r24
    1250:	99 27       	eor	r25, r25
    1252:	88 27       	eor	r24, r24
    1254:	b2 2b       	or	r27, r18
    1256:	32 97       	sbiw	r30, 0x02	; 2
    1258:	20 81       	ld	r18, Z
    125a:	ac 01       	movw	r20, r24
    125c:	bd 01       	movw	r22, r26
    125e:	42 2b       	or	r20, r18
    1260:	31 96       	adiw	r30, 0x01	; 1
    1262:	20 81       	ld	r18, Z
    1264:	30 e0       	ldi	r19, 0x00	; 0
    1266:	92 2f       	mov	r25, r18
    1268:	88 27       	eor	r24, r24
    126a:	a0 e0       	ldi	r26, 0x00	; 0
    126c:	b0 e0       	ldi	r27, 0x00	; 0
    126e:	84 2b       	or	r24, r20
    1270:	95 2b       	or	r25, r21
    1272:	a6 2b       	or	r26, r22
    1274:	b7 2b       	or	r27, r23
    1276:	f8 01       	movw	r30, r16
    1278:	82 87       	std	Z+10, r24	; 0x0a
    127a:	93 87       	std	Z+11, r25	; 0x0b
    127c:	a4 87       	std	Z+12, r26	; 0x0c
    127e:	b5 87       	std	Z+13, r27	; 0x0d
    1280:	f3 e0       	ldi	r31, 0x03	; 3
    1282:	f9 8b       	std	Y+17, r31	; 0x11
    1284:	0b c0       	rjmp	.+22     	; 0x129c <find_volume+0x5ce>
    1286:	e3 e0       	ldi	r30, 0x03	; 3
    1288:	e9 8b       	std	Y+17, r30	; 0x11
    128a:	08 c0       	rjmp	.+16     	; 0x129c <find_volume+0x5ce>
    128c:	f3 e0       	ldi	r31, 0x03	; 3
    128e:	f9 8b       	std	Y+17, r31	; 0x11
    1290:	05 c0       	rjmp	.+10     	; 0x129c <find_volume+0x5ce>
    1292:	e3 e0       	ldi	r30, 0x03	; 3
    1294:	e9 8b       	std	Y+17, r30	; 0x11
    1296:	02 c0       	rjmp	.+4      	; 0x129c <find_volume+0x5ce>
    1298:	f3 e0       	ldi	r31, 0x03	; 3
    129a:	f9 8b       	std	Y+17, r31	; 0x11
    129c:	e9 89       	ldd	r30, Y+17	; 0x11
    129e:	d8 01       	movw	r26, r16
    12a0:	ec 93       	st	X, r30
    12a2:	80 91 2b 01 	lds	r24, 0x012B
    12a6:	90 91 2c 01 	lds	r25, 0x012C
    12aa:	01 96       	adiw	r24, 0x01	; 1
    12ac:	90 93 2c 01 	sts	0x012C, r25
    12b0:	80 93 2b 01 	sts	0x012B, r24
    12b4:	17 96       	adiw	r26, 0x07	; 7
    12b6:	9c 93       	st	X, r25
    12b8:	8e 93       	st	-X, r24
    12ba:	16 97       	sbiw	r26, 0x06	; 6
    12bc:	80 e0       	ldi	r24, 0x00	; 0
    12be:	ad c0       	rjmp	.+346    	; 0x141a <find_volume+0x74c>
    12c0:	8b e0       	ldi	r24, 0x0B	; 11
    12c2:	ab c0       	rjmp	.+342    	; 0x141a <find_volume+0x74c>
    12c4:	8c e0       	ldi	r24, 0x0C	; 12
    12c6:	a9 c0       	rjmp	.+338    	; 0x141a <find_volume+0x74c>
    12c8:	80 e0       	ldi	r24, 0x00	; 0
    12ca:	a7 c0       	rjmp	.+334    	; 0x141a <find_volume+0x74c>
    12cc:	80 e0       	ldi	r24, 0x00	; 0
    12ce:	a5 c0       	rjmp	.+330    	; 0x141a <find_volume+0x74c>
    12d0:	83 e0       	ldi	r24, 0x03	; 3
    12d2:	a3 c0       	rjmp	.+326    	; 0x141a <find_volume+0x74c>
    12d4:	8a e0       	ldi	r24, 0x0A	; 10
    12d6:	a1 c0       	rjmp	.+322    	; 0x141a <find_volume+0x74c>
    12d8:	81 e0       	ldi	r24, 0x01	; 1
    12da:	9f c0       	rjmp	.+318    	; 0x141a <find_volume+0x74c>
    12dc:	8d e0       	ldi	r24, 0x0D	; 13
    12de:	9d c0       	rjmp	.+314    	; 0x141a <find_volume+0x74c>
    12e0:	8d e0       	ldi	r24, 0x0D	; 13
    12e2:	9b c0       	rjmp	.+310    	; 0x141a <find_volume+0x74c>
    12e4:	8d e0       	ldi	r24, 0x0D	; 13
    12e6:	99 c0       	rjmp	.+306    	; 0x141a <find_volume+0x74c>
    12e8:	8d e0       	ldi	r24, 0x0D	; 13
    12ea:	97 c0       	rjmp	.+302    	; 0x141a <find_volume+0x74c>
    12ec:	8d e0       	ldi	r24, 0x0D	; 13
    12ee:	95 c0       	rjmp	.+298    	; 0x141a <find_volume+0x74c>
    12f0:	8d e0       	ldi	r24, 0x0D	; 13
    12f2:	93 c0       	rjmp	.+294    	; 0x141a <find_volume+0x74c>
    12f4:	8d e0       	ldi	r24, 0x0D	; 13
    12f6:	91 c0       	rjmp	.+290    	; 0x141a <find_volume+0x74c>
    12f8:	8d e0       	ldi	r24, 0x0D	; 13
    12fa:	8f c0       	rjmp	.+286    	; 0x141a <find_volume+0x74c>
    12fc:	8d e0       	ldi	r24, 0x0D	; 13
    12fe:	8d c0       	rjmp	.+282    	; 0x141a <find_volume+0x74c>
    1300:	8d e0       	ldi	r24, 0x0D	; 13
    1302:	8b c0       	rjmp	.+278    	; 0x141a <find_volume+0x74c>
    1304:	8d e0       	ldi	r24, 0x0D	; 13
    1306:	89 c0       	rjmp	.+274    	; 0x141a <find_volume+0x74c>
    1308:	8d e0       	ldi	r24, 0x0D	; 13
    130a:	87 c0       	rjmp	.+270    	; 0x141a <find_volume+0x74c>
    130c:	8d e0       	ldi	r24, 0x0D	; 13
    130e:	85 c0       	rjmp	.+266    	; 0x141a <find_volume+0x74c>
    1310:	40 e0       	ldi	r20, 0x00	; 0
    1312:	50 e0       	ldi	r21, 0x00	; 0
    1314:	ba 01       	movw	r22, r20
    1316:	c8 01       	movw	r24, r16
    1318:	4e dc       	rcall	.-1892   	; 0xbb6 <check_fs>
    131a:	81 30       	cpi	r24, 0x01	; 1
    131c:	09 f0       	breq	.+2      	; 0x1320 <find_volume+0x652>
    131e:	6f cd       	rjmp	.-1314   	; 0xdfe <find_volume+0x130>
    1320:	9e 01       	movw	r18, r28
    1322:	2f 5f       	subi	r18, 0xFF	; 255
    1324:	3f 4f       	sbci	r19, 0xFF	; 255
    1326:	59 01       	movw	r10, r18
    1328:	f8 01       	movw	r30, r16
    132a:	e9 50       	subi	r30, 0x09	; 9
    132c:	fe 4f       	sbci	r31, 0xFE	; 254
    132e:	a8 01       	movw	r20, r16
    1330:	49 5c       	subi	r20, 0xC9	; 201
    1332:	5d 4f       	sbci	r21, 0xFD	; 253
    1334:	81 2c       	mov	r8, r1
    1336:	91 2c       	mov	r9, r1
    1338:	70 e0       	ldi	r23, 0x00	; 0
    133a:	60 e0       	ldi	r22, 0x00	; 0
    133c:	18 cd       	rjmp	.-1488   	; 0xd6e <find_volume+0xa0>
    133e:	29 01       	movw	r4, r18
    1340:	3a 01       	movw	r6, r20
    1342:	62 e0       	ldi	r22, 0x02	; 2
    1344:	46 0e       	add	r4, r22
    1346:	51 1c       	adc	r5, r1
    1348:	61 1c       	adc	r6, r1
    134a:	71 1c       	adc	r7, r1
    134c:	d8 01       	movw	r26, r16
    134e:	52 96       	adiw	r26, 0x12	; 18
    1350:	4d 92       	st	X+, r4
    1352:	5d 92       	st	X+, r5
    1354:	6d 92       	st	X+, r6
    1356:	7c 92       	st	X, r7
    1358:	55 97       	sbiw	r26, 0x15	; 21
    135a:	f8 01       	movw	r30, r16
    135c:	c2 8e       	std	Z+26, r12	; 0x1a
    135e:	d3 8e       	std	Z+27, r13	; 0x1b
    1360:	e4 8e       	std	Z+28, r14	; 0x1c
    1362:	f5 8e       	std	Z+29, r15	; 0x1d
    1364:	8e 89       	ldd	r24, Y+22	; 0x16
    1366:	9f 89       	ldd	r25, Y+23	; 0x17
    1368:	a8 8d       	ldd	r26, Y+24	; 0x18
    136a:	b9 8d       	ldd	r27, Y+25	; 0x19
    136c:	8c 0d       	add	r24, r12
    136e:	9d 1d       	adc	r25, r13
    1370:	ae 1d       	adc	r26, r14
    1372:	bf 1d       	adc	r27, r15
    1374:	86 8f       	std	Z+30, r24	; 0x1e
    1376:	97 8f       	std	Z+31, r25	; 0x1f
    1378:	a0 a3       	std	Z+32, r26	; 0x20
    137a:	b1 a3       	std	Z+33, r27	; 0x21
    137c:	8a 89       	ldd	r24, Y+18	; 0x12
    137e:	9b 89       	ldd	r25, Y+19	; 0x13
    1380:	ac 89       	ldd	r26, Y+20	; 0x14
    1382:	bd 89       	ldd	r27, Y+21	; 0x15
    1384:	8c 0d       	add	r24, r12
    1386:	9d 1d       	adc	r25, r13
    1388:	ae 1d       	adc	r26, r14
    138a:	bf 1d       	adc	r27, r15
    138c:	86 a3       	std	Z+38, r24	; 0x26
    138e:	97 a3       	std	Z+39, r25	; 0x27
    1390:	a0 a7       	std	Z+40, r26	; 0x28
    1392:	b1 a7       	std	Z+41, r27	; 0x29
    1394:	66 ce       	rjmp	.-820    	; 0x1062 <find_volume+0x394>
    1396:	8f ef       	ldi	r24, 0xFF	; 255
    1398:	9f ef       	ldi	r25, 0xFF	; 255
    139a:	dc 01       	movw	r26, r24
    139c:	f8 01       	movw	r30, r16
    139e:	86 87       	std	Z+14, r24	; 0x0e
    13a0:	97 87       	std	Z+15, r25	; 0x0f
    13a2:	a0 8b       	std	Z+16, r26	; 0x10
    13a4:	b1 8b       	std	Z+17, r27	; 0x11
    13a6:	82 87       	std	Z+10, r24	; 0x0a
    13a8:	93 87       	std	Z+11, r25	; 0x0b
    13aa:	a4 87       	std	Z+12, r26	; 0x0c
    13ac:	b5 87       	std	Z+13, r27	; 0x0d
    13ae:	80 e8       	ldi	r24, 0x80	; 128
    13b0:	85 83       	std	Z+5, r24	; 0x05
    13b2:	e1 5a       	subi	r30, 0xA1	; 161
    13b4:	ff 4f       	sbci	r31, 0xFF	; 255
    13b6:	80 81       	ld	r24, Z
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	98 2f       	mov	r25, r24
    13bc:	88 27       	eor	r24, r24
    13be:	31 97       	sbiw	r30, 0x01	; 1
    13c0:	20 81       	ld	r18, Z
    13c2:	82 2b       	or	r24, r18
    13c4:	01 97       	sbiw	r24, 0x01	; 1
    13c6:	09 f4       	brne	.+2      	; 0x13ca <find_volume+0x6fc>
    13c8:	be ce       	rjmp	.-644    	; 0x1146 <find_volume+0x478>
    13ca:	f3 e0       	ldi	r31, 0x03	; 3
    13cc:	f9 8b       	std	Y+17, r31	; 0x11
    13ce:	66 cf       	rjmp	.-308    	; 0x129c <find_volume+0x5ce>
    13d0:	8f ef       	ldi	r24, 0xFF	; 255
    13d2:	9f ef       	ldi	r25, 0xFF	; 255
    13d4:	dc 01       	movw	r26, r24
    13d6:	f8 01       	movw	r30, r16
    13d8:	86 87       	std	Z+14, r24	; 0x0e
    13da:	97 87       	std	Z+15, r25	; 0x0f
    13dc:	a0 8b       	std	Z+16, r26	; 0x10
    13de:	b1 8b       	std	Z+17, r27	; 0x11
    13e0:	82 87       	std	Z+10, r24	; 0x0a
    13e2:	93 87       	std	Z+11, r25	; 0x0b
    13e4:	a4 87       	std	Z+12, r26	; 0x0c
    13e6:	b5 87       	std	Z+13, r27	; 0x0d
    13e8:	80 e8       	ldi	r24, 0x80	; 128
    13ea:	85 83       	std	Z+5, r24	; 0x05
    13ec:	57 cf       	rjmp	.-338    	; 0x129c <find_volume+0x5ce>
    13ee:	ff ef       	ldi	r31, 0xFF	; 255
    13f0:	4f 0e       	add	r4, r31
    13f2:	ff e0       	ldi	r31, 0x0F	; 15
    13f4:	5f 1e       	adc	r5, r31
    13f6:	61 1c       	adc	r6, r1
    13f8:	71 1c       	adc	r7, r1
    13fa:	03 2e       	mov	r0, r19
    13fc:	3c e0       	ldi	r19, 0x0C	; 12
    13fe:	76 94       	lsr	r7
    1400:	67 94       	ror	r6
    1402:	57 94       	ror	r5
    1404:	47 94       	ror	r4
    1406:	3a 95       	dec	r19
    1408:	d1 f7       	brne	.-12     	; 0x13fe <find_volume+0x730>
    140a:	30 2d       	mov	r19, r0
    140c:	84 14       	cp	r8, r4
    140e:	95 04       	cpc	r9, r5
    1410:	a6 04       	cpc	r10, r6
    1412:	b7 04       	cpc	r11, r7
    1414:	08 f4       	brcc	.+2      	; 0x1418 <find_volume+0x74a>
    1416:	7a cf       	rjmp	.-268    	; 0x130c <find_volume+0x63e>
    1418:	db cf       	rjmp	.-74     	; 0x13d0 <find_volume+0x702>
    141a:	6d 96       	adiw	r28, 0x1d	; 29
    141c:	0f b6       	in	r0, 0x3f	; 63
    141e:	f8 94       	cli
    1420:	de bf       	out	0x3e, r29	; 62
    1422:	0f be       	out	0x3f, r0	; 63
    1424:	cd bf       	out	0x3d, r28	; 61
    1426:	df 91       	pop	r29
    1428:	cf 91       	pop	r28
    142a:	1f 91       	pop	r17
    142c:	0f 91       	pop	r16
    142e:	ff 90       	pop	r15
    1430:	ef 90       	pop	r14
    1432:	df 90       	pop	r13
    1434:	cf 90       	pop	r12
    1436:	bf 90       	pop	r11
    1438:	af 90       	pop	r10
    143a:	9f 90       	pop	r9
    143c:	8f 90       	pop	r8
    143e:	7f 90       	pop	r7
    1440:	6f 90       	pop	r6
    1442:	5f 90       	pop	r5
    1444:	4f 90       	pop	r4
    1446:	3f 90       	pop	r3
    1448:	2f 90       	pop	r2
    144a:	08 95       	ret

0000144c <clust2sect>:
    144c:	cf 92       	push	r12
    144e:	df 92       	push	r13
    1450:	ef 92       	push	r14
    1452:	ff 92       	push	r15
    1454:	fc 01       	movw	r30, r24
    1456:	9a 01       	movw	r18, r20
    1458:	ab 01       	movw	r20, r22
    145a:	22 50       	subi	r18, 0x02	; 2
    145c:	31 09       	sbc	r19, r1
    145e:	41 09       	sbc	r20, r1
    1460:	51 09       	sbc	r21, r1
    1462:	c2 88       	ldd	r12, Z+18	; 0x12
    1464:	d3 88       	ldd	r13, Z+19	; 0x13
    1466:	e4 88       	ldd	r14, Z+20	; 0x14
    1468:	f5 88       	ldd	r15, Z+21	; 0x15
    146a:	82 e0       	ldi	r24, 0x02	; 2
    146c:	c8 1a       	sub	r12, r24
    146e:	d1 08       	sbc	r13, r1
    1470:	e1 08       	sbc	r14, r1
    1472:	f1 08       	sbc	r15, r1
    1474:	2c 15       	cp	r18, r12
    1476:	3d 05       	cpc	r19, r13
    1478:	4e 05       	cpc	r20, r14
    147a:	5f 05       	cpc	r21, r15
    147c:	68 f4       	brcc	.+26     	; 0x1498 <clust2sect+0x4c>
    147e:	a2 81       	ldd	r26, Z+2	; 0x02
    1480:	b0 e0       	ldi	r27, 0x00	; 0
    1482:	0e 94 e2 18 	call	0x31c4	; 0x31c4 <__muluhisi3>
    1486:	c6 a0       	ldd	r12, Z+38	; 0x26
    1488:	d7 a0       	ldd	r13, Z+39	; 0x27
    148a:	e0 a4       	ldd	r14, Z+40	; 0x28
    148c:	f1 a4       	ldd	r15, Z+41	; 0x29
    148e:	6c 0d       	add	r22, r12
    1490:	7d 1d       	adc	r23, r13
    1492:	8e 1d       	adc	r24, r14
    1494:	9f 1d       	adc	r25, r15
    1496:	03 c0       	rjmp	.+6      	; 0x149e <clust2sect+0x52>
    1498:	60 e0       	ldi	r22, 0x00	; 0
    149a:	70 e0       	ldi	r23, 0x00	; 0
    149c:	cb 01       	movw	r24, r22
    149e:	ff 90       	pop	r15
    14a0:	ef 90       	pop	r14
    14a2:	df 90       	pop	r13
    14a4:	cf 90       	pop	r12
    14a6:	08 95       	ret

000014a8 <get_fat>:
    14a8:	af 92       	push	r10
    14aa:	bf 92       	push	r11
    14ac:	cf 92       	push	r12
    14ae:	df 92       	push	r13
    14b0:	ef 92       	push	r14
    14b2:	ff 92       	push	r15
    14b4:	0f 93       	push	r16
    14b6:	1f 93       	push	r17
    14b8:	cf 93       	push	r28
    14ba:	df 93       	push	r29
    14bc:	ec 01       	movw	r28, r24
    14be:	6a 01       	movw	r12, r20
    14c0:	7b 01       	movw	r14, r22
    14c2:	42 30       	cpi	r20, 0x02	; 2
    14c4:	51 05       	cpc	r21, r1
    14c6:	61 05       	cpc	r22, r1
    14c8:	71 05       	cpc	r23, r1
    14ca:	08 f4       	brcc	.+2      	; 0x14ce <get_fat+0x26>
    14cc:	cb c0       	rjmp	.+406    	; 0x1664 <get_fat+0x1bc>
    14ce:	8a 89       	ldd	r24, Y+18	; 0x12
    14d0:	9b 89       	ldd	r25, Y+19	; 0x13
    14d2:	ac 89       	ldd	r26, Y+20	; 0x14
    14d4:	bd 89       	ldd	r27, Y+21	; 0x15
    14d6:	48 17       	cp	r20, r24
    14d8:	59 07       	cpc	r21, r25
    14da:	6a 07       	cpc	r22, r26
    14dc:	7b 07       	cpc	r23, r27
    14de:	08 f0       	brcs	.+2      	; 0x14e2 <get_fat+0x3a>
    14e0:	c6 c0       	rjmp	.+396    	; 0x166e <get_fat+0x1c6>
    14e2:	88 81       	ld	r24, Y
    14e4:	82 30       	cpi	r24, 0x02	; 2
    14e6:	09 f4       	brne	.+2      	; 0x14ea <get_fat+0x42>
    14e8:	4d c0       	rjmp	.+154    	; 0x1584 <get_fat+0xdc>
    14ea:	83 30       	cpi	r24, 0x03	; 3
    14ec:	09 f4       	brne	.+2      	; 0x14f0 <get_fat+0x48>
    14ee:	73 c0       	rjmp	.+230    	; 0x15d6 <get_fat+0x12e>
    14f0:	81 30       	cpi	r24, 0x01	; 1
    14f2:	09 f0       	breq	.+2      	; 0x14f6 <get_fat+0x4e>
    14f4:	c1 c0       	rjmp	.+386    	; 0x1678 <get_fat+0x1d0>
    14f6:	8a 01       	movw	r16, r20
    14f8:	16 95       	lsr	r17
    14fa:	07 95       	ror	r16
    14fc:	04 0f       	add	r16, r20
    14fe:	15 1f       	adc	r17, r21
    1500:	c8 01       	movw	r24, r16
    1502:	89 2f       	mov	r24, r25
    1504:	99 27       	eor	r25, r25
    1506:	82 95       	swap	r24
    1508:	8f 70       	andi	r24, 0x0F	; 15
    150a:	4e 8d       	ldd	r20, Y+30	; 0x1e
    150c:	5f 8d       	ldd	r21, Y+31	; 0x1f
    150e:	68 a1       	ldd	r22, Y+32	; 0x20
    1510:	79 a1       	ldd	r23, Y+33	; 0x21
    1512:	48 0f       	add	r20, r24
    1514:	59 1f       	adc	r21, r25
    1516:	61 1d       	adc	r22, r1
    1518:	71 1d       	adc	r23, r1
    151a:	ce 01       	movw	r24, r28
    151c:	10 db       	rcall	.-2528   	; 0xb3e <move_window>
    151e:	81 11       	cpse	r24, r1
    1520:	b0 c0       	rjmp	.+352    	; 0x1682 <get_fat+0x1da>
    1522:	58 01       	movw	r10, r16
    1524:	8f ef       	ldi	r24, 0xFF	; 255
    1526:	a8 1a       	sub	r10, r24
    1528:	b8 0a       	sbc	r11, r24
    152a:	1f 70       	andi	r17, 0x0F	; 15
    152c:	fe 01       	movw	r30, r28
    152e:	e0 0f       	add	r30, r16
    1530:	f1 1f       	adc	r31, r17
    1532:	16 a5       	ldd	r17, Z+46	; 0x2e
    1534:	c5 01       	movw	r24, r10
    1536:	89 2f       	mov	r24, r25
    1538:	99 27       	eor	r25, r25
    153a:	82 95       	swap	r24
    153c:	8f 70       	andi	r24, 0x0F	; 15
    153e:	4e 8d       	ldd	r20, Y+30	; 0x1e
    1540:	5f 8d       	ldd	r21, Y+31	; 0x1f
    1542:	68 a1       	ldd	r22, Y+32	; 0x20
    1544:	79 a1       	ldd	r23, Y+33	; 0x21
    1546:	48 0f       	add	r20, r24
    1548:	59 1f       	adc	r21, r25
    154a:	61 1d       	adc	r22, r1
    154c:	71 1d       	adc	r23, r1
    154e:	ce 01       	movw	r24, r28
    1550:	f6 da       	rcall	.-2580   	; 0xb3e <move_window>
    1552:	81 11       	cpse	r24, r1
    1554:	9a c0       	rjmp	.+308    	; 0x168a <get_fat+0x1e2>
    1556:	8f e0       	ldi	r24, 0x0F	; 15
    1558:	b8 22       	and	r11, r24
    155a:	ca 0d       	add	r28, r10
    155c:	db 1d       	adc	r29, r11
    155e:	8e a5       	ldd	r24, Y+46	; 0x2e
    1560:	61 2f       	mov	r22, r17
    1562:	70 e0       	ldi	r23, 0x00	; 0
    1564:	78 2b       	or	r23, r24
    1566:	c0 fe       	sbrs	r12, 0
    1568:	09 c0       	rjmp	.+18     	; 0x157c <get_fat+0xd4>
    156a:	72 95       	swap	r23
    156c:	62 95       	swap	r22
    156e:	6f 70       	andi	r22, 0x0F	; 15
    1570:	67 27       	eor	r22, r23
    1572:	7f 70       	andi	r23, 0x0F	; 15
    1574:	67 27       	eor	r22, r23
    1576:	80 e0       	ldi	r24, 0x00	; 0
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	92 c0       	rjmp	.+292    	; 0x16a0 <get_fat+0x1f8>
    157c:	7f 70       	andi	r23, 0x0F	; 15
    157e:	80 e0       	ldi	r24, 0x00	; 0
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	8e c0       	rjmp	.+284    	; 0x16a0 <get_fat+0x1f8>
    1584:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1586:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1588:	a8 a1       	ldd	r26, Y+32	; 0x20
    158a:	b9 a1       	ldd	r27, Y+33	; 0x21
    158c:	03 2e       	mov	r0, r19
    158e:	3b e0       	ldi	r19, 0x0B	; 11
    1590:	76 95       	lsr	r23
    1592:	67 95       	ror	r22
    1594:	57 95       	ror	r21
    1596:	47 95       	ror	r20
    1598:	3a 95       	dec	r19
    159a:	d1 f7       	brne	.-12     	; 0x1590 <get_fat+0xe8>
    159c:	30 2d       	mov	r19, r0
    159e:	48 0f       	add	r20, r24
    15a0:	59 1f       	adc	r21, r25
    15a2:	6a 1f       	adc	r22, r26
    15a4:	7b 1f       	adc	r23, r27
    15a6:	ce 01       	movw	r24, r28
    15a8:	ca da       	rcall	.-2668   	; 0xb3e <move_window>
    15aa:	81 11       	cpse	r24, r1
    15ac:	72 c0       	rjmp	.+228    	; 0x1692 <get_fat+0x1ea>
    15ae:	cc 0c       	add	r12, r12
    15b0:	dd 1c       	adc	r13, r13
    15b2:	ee 1c       	adc	r14, r14
    15b4:	ff 1c       	adc	r15, r15
    15b6:	e8 94       	clt
    15b8:	c0 f8       	bld	r12, 0
    15ba:	8f e0       	ldi	r24, 0x0F	; 15
    15bc:	d8 22       	and	r13, r24
    15be:	ee 24       	eor	r14, r14
    15c0:	ff 24       	eor	r15, r15
    15c2:	fe 01       	movw	r30, r28
    15c4:	ec 0d       	add	r30, r12
    15c6:	fd 1d       	adc	r31, r13
    15c8:	66 a5       	ldd	r22, Z+46	; 0x2e
    15ca:	87 a5       	ldd	r24, Z+47	; 0x2f
    15cc:	70 e0       	ldi	r23, 0x00	; 0
    15ce:	78 2b       	or	r23, r24
    15d0:	80 e0       	ldi	r24, 0x00	; 0
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	65 c0       	rjmp	.+202    	; 0x16a0 <get_fat+0x1f8>
    15d6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    15d8:	9f 8d       	ldd	r25, Y+31	; 0x1f
    15da:	a8 a1       	ldd	r26, Y+32	; 0x20
    15dc:	b9 a1       	ldd	r27, Y+33	; 0x21
    15de:	03 2e       	mov	r0, r19
    15e0:	3a e0       	ldi	r19, 0x0A	; 10
    15e2:	76 95       	lsr	r23
    15e4:	67 95       	ror	r22
    15e6:	57 95       	ror	r21
    15e8:	47 95       	ror	r20
    15ea:	3a 95       	dec	r19
    15ec:	d1 f7       	brne	.-12     	; 0x15e2 <get_fat+0x13a>
    15ee:	30 2d       	mov	r19, r0
    15f0:	48 0f       	add	r20, r24
    15f2:	59 1f       	adc	r21, r25
    15f4:	6a 1f       	adc	r22, r26
    15f6:	7b 1f       	adc	r23, r27
    15f8:	ce 01       	movw	r24, r28
    15fa:	a1 da       	rcall	.-2750   	; 0xb3e <move_window>
    15fc:	81 11       	cpse	r24, r1
    15fe:	4d c0       	rjmp	.+154    	; 0x169a <get_fat+0x1f2>
    1600:	cc 0c       	add	r12, r12
    1602:	dd 1c       	adc	r13, r13
    1604:	ee 1c       	adc	r14, r14
    1606:	ff 1c       	adc	r15, r15
    1608:	cc 0c       	add	r12, r12
    160a:	dd 1c       	adc	r13, r13
    160c:	ee 1c       	adc	r14, r14
    160e:	ff 1c       	adc	r15, r15
    1610:	8c ef       	ldi	r24, 0xFC	; 252
    1612:	c8 22       	and	r12, r24
    1614:	8f e0       	ldi	r24, 0x0F	; 15
    1616:	d8 22       	and	r13, r24
    1618:	ee 24       	eor	r14, r14
    161a:	ff 24       	eor	r15, r15
    161c:	f6 01       	movw	r30, r12
    161e:	be 96       	adiw	r30, 0x2e	; 46
    1620:	ec 0f       	add	r30, r28
    1622:	fd 1f       	adc	r31, r29
    1624:	22 81       	ldd	r18, Z+2	; 0x02
    1626:	63 81       	ldd	r22, Z+3	; 0x03
    1628:	86 2f       	mov	r24, r22
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	a0 e0       	ldi	r26, 0x00	; 0
    162e:	b0 e0       	ldi	r27, 0x00	; 0
    1630:	b8 2f       	mov	r27, r24
    1632:	aa 27       	eor	r26, r26
    1634:	99 27       	eor	r25, r25
    1636:	88 27       	eor	r24, r24
    1638:	ac 01       	movw	r20, r24
    163a:	bd 01       	movw	r22, r26
    163c:	62 2b       	or	r22, r18
    163e:	81 81       	ldd	r24, Z+1	; 0x01
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	98 2f       	mov	r25, r24
    1644:	88 27       	eor	r24, r24
    1646:	a0 e0       	ldi	r26, 0x00	; 0
    1648:	b0 e0       	ldi	r27, 0x00	; 0
    164a:	84 2b       	or	r24, r20
    164c:	95 2b       	or	r25, r21
    164e:	a6 2b       	or	r26, r22
    1650:	b7 2b       	or	r27, r23
    1652:	fe 01       	movw	r30, r28
    1654:	ec 0d       	add	r30, r12
    1656:	fd 1d       	adc	r31, r13
    1658:	26 a5       	ldd	r18, Z+46	; 0x2e
    165a:	82 2b       	or	r24, r18
    165c:	bc 01       	movw	r22, r24
    165e:	cd 01       	movw	r24, r26
    1660:	9f 70       	andi	r25, 0x0F	; 15
    1662:	1e c0       	rjmp	.+60     	; 0x16a0 <get_fat+0x1f8>
    1664:	61 e0       	ldi	r22, 0x01	; 1
    1666:	70 e0       	ldi	r23, 0x00	; 0
    1668:	80 e0       	ldi	r24, 0x00	; 0
    166a:	90 e0       	ldi	r25, 0x00	; 0
    166c:	19 c0       	rjmp	.+50     	; 0x16a0 <get_fat+0x1f8>
    166e:	61 e0       	ldi	r22, 0x01	; 1
    1670:	70 e0       	ldi	r23, 0x00	; 0
    1672:	80 e0       	ldi	r24, 0x00	; 0
    1674:	90 e0       	ldi	r25, 0x00	; 0
    1676:	14 c0       	rjmp	.+40     	; 0x16a0 <get_fat+0x1f8>
    1678:	61 e0       	ldi	r22, 0x01	; 1
    167a:	70 e0       	ldi	r23, 0x00	; 0
    167c:	80 e0       	ldi	r24, 0x00	; 0
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	0f c0       	rjmp	.+30     	; 0x16a0 <get_fat+0x1f8>
    1682:	6f ef       	ldi	r22, 0xFF	; 255
    1684:	7f ef       	ldi	r23, 0xFF	; 255
    1686:	cb 01       	movw	r24, r22
    1688:	0b c0       	rjmp	.+22     	; 0x16a0 <get_fat+0x1f8>
    168a:	6f ef       	ldi	r22, 0xFF	; 255
    168c:	7f ef       	ldi	r23, 0xFF	; 255
    168e:	cb 01       	movw	r24, r22
    1690:	07 c0       	rjmp	.+14     	; 0x16a0 <get_fat+0x1f8>
    1692:	6f ef       	ldi	r22, 0xFF	; 255
    1694:	7f ef       	ldi	r23, 0xFF	; 255
    1696:	cb 01       	movw	r24, r22
    1698:	03 c0       	rjmp	.+6      	; 0x16a0 <get_fat+0x1f8>
    169a:	6f ef       	ldi	r22, 0xFF	; 255
    169c:	7f ef       	ldi	r23, 0xFF	; 255
    169e:	cb 01       	movw	r24, r22
    16a0:	df 91       	pop	r29
    16a2:	cf 91       	pop	r28
    16a4:	1f 91       	pop	r17
    16a6:	0f 91       	pop	r16
    16a8:	ff 90       	pop	r15
    16aa:	ef 90       	pop	r14
    16ac:	df 90       	pop	r13
    16ae:	cf 90       	pop	r12
    16b0:	bf 90       	pop	r11
    16b2:	af 90       	pop	r10
    16b4:	08 95       	ret

000016b6 <dir_sdi>:
    16b6:	af 92       	push	r10
    16b8:	bf 92       	push	r11
    16ba:	cf 92       	push	r12
    16bc:	df 92       	push	r13
    16be:	ef 92       	push	r14
    16c0:	ff 92       	push	r15
    16c2:	0f 93       	push	r16
    16c4:	1f 93       	push	r17
    16c6:	cf 93       	push	r28
    16c8:	df 93       	push	r29
    16ca:	ec 01       	movw	r28, r24
    16cc:	8b 01       	movw	r16, r22
    16ce:	7d 83       	std	Y+5, r23	; 0x05
    16d0:	6c 83       	std	Y+4, r22	; 0x04
    16d2:	ce 80       	ldd	r12, Y+6	; 0x06
    16d4:	df 80       	ldd	r13, Y+7	; 0x07
    16d6:	e8 84       	ldd	r14, Y+8	; 0x08
    16d8:	f9 84       	ldd	r15, Y+9	; 0x09
    16da:	81 e0       	ldi	r24, 0x01	; 1
    16dc:	c8 16       	cp	r12, r24
    16de:	d1 04       	cpc	r13, r1
    16e0:	e1 04       	cpc	r14, r1
    16e2:	f1 04       	cpc	r15, r1
    16e4:	09 f4       	brne	.+2      	; 0x16e8 <dir_sdi+0x32>
    16e6:	89 c0       	rjmp	.+274    	; 0x17fa <dir_sdi+0x144>
    16e8:	e8 81       	ld	r30, Y
    16ea:	f9 81       	ldd	r31, Y+1	; 0x01
    16ec:	82 89       	ldd	r24, Z+18	; 0x12
    16ee:	93 89       	ldd	r25, Z+19	; 0x13
    16f0:	a4 89       	ldd	r26, Z+20	; 0x14
    16f2:	b5 89       	ldd	r27, Z+21	; 0x15
    16f4:	c8 16       	cp	r12, r24
    16f6:	d9 06       	cpc	r13, r25
    16f8:	ea 06       	cpc	r14, r26
    16fa:	fb 06       	cpc	r15, r27
    16fc:	08 f0       	brcs	.+2      	; 0x1700 <dir_sdi+0x4a>
    16fe:	7f c0       	rjmp	.+254    	; 0x17fe <dir_sdi+0x148>
    1700:	c1 14       	cp	r12, r1
    1702:	d1 04       	cpc	r13, r1
    1704:	e1 04       	cpc	r14, r1
    1706:	f1 04       	cpc	r15, r1
    1708:	c1 f4       	brne	.+48     	; 0x173a <dir_sdi+0x84>
    170a:	80 81       	ld	r24, Z
    170c:	83 30       	cpi	r24, 0x03	; 3
    170e:	41 f4       	brne	.+16     	; 0x1720 <dir_sdi+0x6a>
    1710:	82 a1       	ldd	r24, Z+34	; 0x22
    1712:	93 a1       	ldd	r25, Z+35	; 0x23
    1714:	a4 a1       	ldd	r26, Z+36	; 0x24
    1716:	b5 a1       	ldd	r27, Z+37	; 0x25
    1718:	00 97       	sbiw	r24, 0x00	; 0
    171a:	a1 05       	cpc	r26, r1
    171c:	b1 05       	cpc	r27, r1
    171e:	59 f4       	brne	.+22     	; 0x1736 <dir_sdi+0x80>
    1720:	80 85       	ldd	r24, Z+8	; 0x08
    1722:	91 85       	ldd	r25, Z+9	; 0x09
    1724:	08 17       	cp	r16, r24
    1726:	19 07       	cpc	r17, r25
    1728:	08 f0       	brcs	.+2      	; 0x172c <dir_sdi+0x76>
    172a:	6b c0       	rjmp	.+214    	; 0x1802 <dir_sdi+0x14c>
    172c:	62 a1       	ldd	r22, Z+34	; 0x22
    172e:	73 a1       	ldd	r23, Z+35	; 0x23
    1730:	84 a1       	ldd	r24, Z+36	; 0x24
    1732:	95 a1       	ldd	r25, Z+37	; 0x25
    1734:	35 c0       	rjmp	.+106    	; 0x17a0 <dir_sdi+0xea>
    1736:	6c 01       	movw	r12, r24
    1738:	7d 01       	movw	r14, r26
    173a:	a2 80       	ldd	r10, Z+2	; 0x02
    173c:	80 e8       	ldi	r24, 0x80	; 128
    173e:	a8 9e       	mul	r10, r24
    1740:	50 01       	movw	r10, r0
    1742:	11 24       	eor	r1, r1
    1744:	0a 15       	cp	r16, r10
    1746:	1b 05       	cpc	r17, r11
    1748:	30 f1       	brcs	.+76     	; 0x1796 <dir_sdi+0xe0>
    174a:	b7 01       	movw	r22, r14
    174c:	a6 01       	movw	r20, r12
    174e:	88 81       	ld	r24, Y
    1750:	99 81       	ldd	r25, Y+1	; 0x01
    1752:	aa de       	rcall	.-684    	; 0x14a8 <get_fat>
    1754:	6b 01       	movw	r12, r22
    1756:	7c 01       	movw	r14, r24
    1758:	8f ef       	ldi	r24, 0xFF	; 255
    175a:	c8 16       	cp	r12, r24
    175c:	d8 06       	cpc	r13, r24
    175e:	e8 06       	cpc	r14, r24
    1760:	f8 06       	cpc	r15, r24
    1762:	09 f4       	brne	.+2      	; 0x1766 <dir_sdi+0xb0>
    1764:	50 c0       	rjmp	.+160    	; 0x1806 <dir_sdi+0x150>
    1766:	82 e0       	ldi	r24, 0x02	; 2
    1768:	c8 16       	cp	r12, r24
    176a:	d1 04       	cpc	r13, r1
    176c:	e1 04       	cpc	r14, r1
    176e:	f1 04       	cpc	r15, r1
    1770:	08 f4       	brcc	.+2      	; 0x1774 <dir_sdi+0xbe>
    1772:	4b c0       	rjmp	.+150    	; 0x180a <dir_sdi+0x154>
    1774:	e8 81       	ld	r30, Y
    1776:	f9 81       	ldd	r31, Y+1	; 0x01
    1778:	82 89       	ldd	r24, Z+18	; 0x12
    177a:	93 89       	ldd	r25, Z+19	; 0x13
    177c:	a4 89       	ldd	r26, Z+20	; 0x14
    177e:	b5 89       	ldd	r27, Z+21	; 0x15
    1780:	c8 16       	cp	r12, r24
    1782:	d9 06       	cpc	r13, r25
    1784:	ea 06       	cpc	r14, r26
    1786:	fb 06       	cpc	r15, r27
    1788:	08 f0       	brcs	.+2      	; 0x178c <dir_sdi+0xd6>
    178a:	41 c0       	rjmp	.+130    	; 0x180e <dir_sdi+0x158>
    178c:	0a 19       	sub	r16, r10
    178e:	1b 09       	sbc	r17, r11
    1790:	0a 15       	cp	r16, r10
    1792:	1b 05       	cpc	r17, r11
    1794:	d0 f6       	brcc	.-76     	; 0x174a <dir_sdi+0x94>
    1796:	b7 01       	movw	r22, r14
    1798:	a6 01       	movw	r20, r12
    179a:	88 81       	ld	r24, Y
    179c:	99 81       	ldd	r25, Y+1	; 0x01
    179e:	56 de       	rcall	.-852    	; 0x144c <clust2sect>
    17a0:	ca 86       	std	Y+10, r12	; 0x0a
    17a2:	db 86       	std	Y+11, r13	; 0x0b
    17a4:	ec 86       	std	Y+12, r14	; 0x0c
    17a6:	fd 86       	std	Y+13, r15	; 0x0d
    17a8:	61 15       	cp	r22, r1
    17aa:	71 05       	cpc	r23, r1
    17ac:	81 05       	cpc	r24, r1
    17ae:	91 05       	cpc	r25, r1
    17b0:	81 f1       	breq	.+96     	; 0x1812 <dir_sdi+0x15c>
    17b2:	98 01       	movw	r18, r16
    17b4:	22 0f       	add	r18, r18
    17b6:	23 2f       	mov	r18, r19
    17b8:	22 1f       	adc	r18, r18
    17ba:	33 0b       	sbc	r19, r19
    17bc:	31 95       	neg	r19
    17be:	dc 01       	movw	r26, r24
    17c0:	cb 01       	movw	r24, r22
    17c2:	82 0f       	add	r24, r18
    17c4:	93 1f       	adc	r25, r19
    17c6:	a1 1d       	adc	r26, r1
    17c8:	b1 1d       	adc	r27, r1
    17ca:	8e 87       	std	Y+14, r24	; 0x0e
    17cc:	9f 87       	std	Y+15, r25	; 0x0f
    17ce:	a8 8b       	std	Y+16, r26	; 0x10
    17d0:	b9 8b       	std	Y+17, r27	; 0x11
    17d2:	0f 77       	andi	r16, 0x7F	; 127
    17d4:	11 27       	eor	r17, r17
    17d6:	00 0f       	add	r16, r16
    17d8:	11 1f       	adc	r17, r17
    17da:	02 95       	swap	r16
    17dc:	12 95       	swap	r17
    17de:	10 7f       	andi	r17, 0xF0	; 240
    17e0:	10 27       	eor	r17, r16
    17e2:	00 7f       	andi	r16, 0xF0	; 240
    17e4:	10 27       	eor	r17, r16
    17e6:	02 5d       	subi	r16, 0xD2	; 210
    17e8:	1f 4f       	sbci	r17, 0xFF	; 255
    17ea:	88 81       	ld	r24, Y
    17ec:	99 81       	ldd	r25, Y+1	; 0x01
    17ee:	80 0f       	add	r24, r16
    17f0:	91 1f       	adc	r25, r17
    17f2:	9b 8b       	std	Y+19, r25	; 0x13
    17f4:	8a 8b       	std	Y+18, r24	; 0x12
    17f6:	80 e0       	ldi	r24, 0x00	; 0
    17f8:	0d c0       	rjmp	.+26     	; 0x1814 <dir_sdi+0x15e>
    17fa:	82 e0       	ldi	r24, 0x02	; 2
    17fc:	0b c0       	rjmp	.+22     	; 0x1814 <dir_sdi+0x15e>
    17fe:	82 e0       	ldi	r24, 0x02	; 2
    1800:	09 c0       	rjmp	.+18     	; 0x1814 <dir_sdi+0x15e>
    1802:	82 e0       	ldi	r24, 0x02	; 2
    1804:	07 c0       	rjmp	.+14     	; 0x1814 <dir_sdi+0x15e>
    1806:	81 e0       	ldi	r24, 0x01	; 1
    1808:	05 c0       	rjmp	.+10     	; 0x1814 <dir_sdi+0x15e>
    180a:	82 e0       	ldi	r24, 0x02	; 2
    180c:	03 c0       	rjmp	.+6      	; 0x1814 <dir_sdi+0x15e>
    180e:	82 e0       	ldi	r24, 0x02	; 2
    1810:	01 c0       	rjmp	.+2      	; 0x1814 <dir_sdi+0x15e>
    1812:	82 e0       	ldi	r24, 0x02	; 2
    1814:	df 91       	pop	r29
    1816:	cf 91       	pop	r28
    1818:	1f 91       	pop	r17
    181a:	0f 91       	pop	r16
    181c:	ff 90       	pop	r15
    181e:	ef 90       	pop	r14
    1820:	df 90       	pop	r13
    1822:	cf 90       	pop	r12
    1824:	bf 90       	pop	r11
    1826:	af 90       	pop	r10
    1828:	08 95       	ret

0000182a <put_fat>:
    182a:	4f 92       	push	r4
    182c:	5f 92       	push	r5
    182e:	6f 92       	push	r6
    1830:	7f 92       	push	r7
    1832:	8f 92       	push	r8
    1834:	9f 92       	push	r9
    1836:	af 92       	push	r10
    1838:	bf 92       	push	r11
    183a:	cf 92       	push	r12
    183c:	df 92       	push	r13
    183e:	ef 92       	push	r14
    1840:	ff 92       	push	r15
    1842:	0f 93       	push	r16
    1844:	1f 93       	push	r17
    1846:	cf 93       	push	r28
    1848:	df 93       	push	r29
    184a:	ec 01       	movw	r28, r24
    184c:	6a 01       	movw	r12, r20
    184e:	7b 01       	movw	r14, r22
    1850:	28 01       	movw	r4, r16
    1852:	39 01       	movw	r6, r18
    1854:	42 30       	cpi	r20, 0x02	; 2
    1856:	51 05       	cpc	r21, r1
    1858:	61 05       	cpc	r22, r1
    185a:	71 05       	cpc	r23, r1
    185c:	08 f4       	brcc	.+2      	; 0x1860 <put_fat+0x36>
    185e:	e1 c0       	rjmp	.+450    	; 0x1a22 <put_fat+0x1f8>
    1860:	8a 89       	ldd	r24, Y+18	; 0x12
    1862:	9b 89       	ldd	r25, Y+19	; 0x13
    1864:	ac 89       	ldd	r26, Y+20	; 0x14
    1866:	bd 89       	ldd	r27, Y+21	; 0x15
    1868:	48 17       	cp	r20, r24
    186a:	59 07       	cpc	r21, r25
    186c:	6a 07       	cpc	r22, r26
    186e:	7b 07       	cpc	r23, r27
    1870:	08 f0       	brcs	.+2      	; 0x1874 <put_fat+0x4a>
    1872:	d9 c0       	rjmp	.+434    	; 0x1a26 <put_fat+0x1fc>
    1874:	88 81       	ld	r24, Y
    1876:	82 30       	cpi	r24, 0x02	; 2
    1878:	09 f4       	brne	.+2      	; 0x187c <put_fat+0x52>
    187a:	65 c0       	rjmp	.+202    	; 0x1946 <put_fat+0x11c>
    187c:	83 30       	cpi	r24, 0x03	; 3
    187e:	09 f4       	brne	.+2      	; 0x1882 <put_fat+0x58>
    1880:	8d c0       	rjmp	.+282    	; 0x199c <put_fat+0x172>
    1882:	81 30       	cpi	r24, 0x01	; 1
    1884:	09 f0       	breq	.+2      	; 0x1888 <put_fat+0x5e>
    1886:	d1 c0       	rjmp	.+418    	; 0x1a2a <put_fat+0x200>
    1888:	5a 01       	movw	r10, r20
    188a:	b6 94       	lsr	r11
    188c:	a7 94       	ror	r10
    188e:	a4 0e       	add	r10, r20
    1890:	b5 1e       	adc	r11, r21
    1892:	c5 01       	movw	r24, r10
    1894:	89 2f       	mov	r24, r25
    1896:	99 27       	eor	r25, r25
    1898:	82 95       	swap	r24
    189a:	8f 70       	andi	r24, 0x0F	; 15
    189c:	4e 8d       	ldd	r20, Y+30	; 0x1e
    189e:	5f 8d       	ldd	r21, Y+31	; 0x1f
    18a0:	68 a1       	ldd	r22, Y+32	; 0x20
    18a2:	79 a1       	ldd	r23, Y+33	; 0x21
    18a4:	48 0f       	add	r20, r24
    18a6:	59 1f       	adc	r21, r25
    18a8:	61 1d       	adc	r22, r1
    18aa:	71 1d       	adc	r23, r1
    18ac:	ce 01       	movw	r24, r28
    18ae:	47 d9       	rcall	.-3442   	; 0xb3e <move_window>
    18b0:	18 2f       	mov	r17, r24
    18b2:	81 11       	cpse	r24, r1
    18b4:	d8 c0       	rjmp	.+432    	; 0x1a66 <put_fat+0x23c>
    18b6:	45 01       	movw	r8, r10
    18b8:	8f ef       	ldi	r24, 0xFF	; 255
    18ba:	88 1a       	sub	r8, r24
    18bc:	98 0a       	sbc	r9, r24
    18be:	af e0       	ldi	r26, 0x0F	; 15
    18c0:	ba 22       	and	r11, r26
    18c2:	c0 fe       	sbrs	r12, 0
    18c4:	21 c0       	rjmp	.+66     	; 0x1908 <put_fat+0xde>
    18c6:	fe 01       	movw	r30, r28
    18c8:	ea 0d       	add	r30, r10
    18ca:	fb 1d       	adc	r31, r11
    18cc:	86 a5       	ldd	r24, Z+46	; 0x2e
    18ce:	28 2f       	mov	r18, r24
    18d0:	2f 70       	andi	r18, 0x0F	; 15
    18d2:	b0 e1       	ldi	r27, 0x10	; 16
    18d4:	4b 9e       	mul	r4, r27
    18d6:	c0 01       	movw	r24, r0
    18d8:	11 24       	eor	r1, r1
    18da:	82 2b       	or	r24, r18
    18dc:	86 a7       	std	Z+46, r24	; 0x2e
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	8c 83       	std	Y+4, r24	; 0x04
    18e2:	4e 8d       	ldd	r20, Y+30	; 0x1e
    18e4:	5f 8d       	ldd	r21, Y+31	; 0x1f
    18e6:	68 a1       	ldd	r22, Y+32	; 0x20
    18e8:	79 a1       	ldd	r23, Y+33	; 0x21
    18ea:	c4 01       	movw	r24, r8
    18ec:	89 2f       	mov	r24, r25
    18ee:	99 27       	eor	r25, r25
    18f0:	82 95       	swap	r24
    18f2:	8f 70       	andi	r24, 0x0F	; 15
    18f4:	48 0f       	add	r20, r24
    18f6:	59 1f       	adc	r21, r25
    18f8:	61 1d       	adc	r22, r1
    18fa:	71 1d       	adc	r23, r1
    18fc:	ce 01       	movw	r24, r28
    18fe:	1f d9       	rcall	.-3522   	; 0xb3e <move_window>
    1900:	88 23       	and	r24, r24
    1902:	09 f4       	brne	.+2      	; 0x1906 <put_fat+0xdc>
    1904:	98 c0       	rjmp	.+304    	; 0x1a36 <put_fat+0x20c>
    1906:	93 c0       	rjmp	.+294    	; 0x1a2e <put_fat+0x204>
    1908:	fe 01       	movw	r30, r28
    190a:	ea 0d       	add	r30, r10
    190c:	fb 1d       	adc	r31, r11
    190e:	46 a6       	std	Z+46, r4	; 0x2e
    1910:	81 e0       	ldi	r24, 0x01	; 1
    1912:	8c 83       	std	Y+4, r24	; 0x04
    1914:	4e 8d       	ldd	r20, Y+30	; 0x1e
    1916:	5f 8d       	ldd	r21, Y+31	; 0x1f
    1918:	68 a1       	ldd	r22, Y+32	; 0x20
    191a:	79 a1       	ldd	r23, Y+33	; 0x21
    191c:	c4 01       	movw	r24, r8
    191e:	89 2f       	mov	r24, r25
    1920:	99 27       	eor	r25, r25
    1922:	82 95       	swap	r24
    1924:	8f 70       	andi	r24, 0x0F	; 15
    1926:	48 0f       	add	r20, r24
    1928:	59 1f       	adc	r21, r25
    192a:	61 1d       	adc	r22, r1
    192c:	71 1d       	adc	r23, r1
    192e:	ce 01       	movw	r24, r28
    1930:	06 d9       	rcall	.-3572   	; 0xb3e <move_window>
    1932:	88 23       	and	r24, r24
    1934:	09 f4       	brne	.+2      	; 0x1938 <put_fat+0x10e>
    1936:	8a c0       	rjmp	.+276    	; 0x1a4c <put_fat+0x222>
    1938:	7c c0       	rjmp	.+248    	; 0x1a32 <put_fat+0x208>
    193a:	ec 0f       	add	r30, r28
    193c:	fd 1f       	adc	r31, r29
    193e:	46 a6       	std	Z+46, r4	; 0x2e
    1940:	81 e0       	ldi	r24, 0x01	; 1
    1942:	8c 83       	std	Y+4, r24	; 0x04
    1944:	90 c0       	rjmp	.+288    	; 0x1a66 <put_fat+0x23c>
    1946:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1948:	9f 8d       	ldd	r25, Y+31	; 0x1f
    194a:	a8 a1       	ldd	r26, Y+32	; 0x20
    194c:	b9 a1       	ldd	r27, Y+33	; 0x21
    194e:	03 2e       	mov	r0, r19
    1950:	3b e0       	ldi	r19, 0x0B	; 11
    1952:	76 95       	lsr	r23
    1954:	67 95       	ror	r22
    1956:	57 95       	ror	r21
    1958:	47 95       	ror	r20
    195a:	3a 95       	dec	r19
    195c:	d1 f7       	brne	.-12     	; 0x1952 <put_fat+0x128>
    195e:	30 2d       	mov	r19, r0
    1960:	48 0f       	add	r20, r24
    1962:	59 1f       	adc	r21, r25
    1964:	6a 1f       	adc	r22, r26
    1966:	7b 1f       	adc	r23, r27
    1968:	ce 01       	movw	r24, r28
    196a:	e9 d8       	rcall	.-3630   	; 0xb3e <move_window>
    196c:	18 2f       	mov	r17, r24
    196e:	81 11       	cpse	r24, r1
    1970:	7a c0       	rjmp	.+244    	; 0x1a66 <put_fat+0x23c>
    1972:	cc 0c       	add	r12, r12
    1974:	dd 1c       	adc	r13, r13
    1976:	ee 1c       	adc	r14, r14
    1978:	ff 1c       	adc	r15, r15
    197a:	e8 94       	clt
    197c:	c0 f8       	bld	r12, 0
    197e:	3f e0       	ldi	r19, 0x0F	; 15
    1980:	d3 22       	and	r13, r19
    1982:	ee 24       	eor	r14, r14
    1984:	ff 24       	eor	r15, r15
    1986:	fe 01       	movw	r30, r28
    1988:	ec 0d       	add	r30, r12
    198a:	fd 1d       	adc	r31, r13
    198c:	46 a6       	std	Z+46, r4	; 0x2e
    198e:	fe 01       	movw	r30, r28
    1990:	ec 0d       	add	r30, r12
    1992:	fd 1d       	adc	r31, r13
    1994:	57 a6       	std	Z+47, r5	; 0x2f
    1996:	81 e0       	ldi	r24, 0x01	; 1
    1998:	8c 83       	std	Y+4, r24	; 0x04
    199a:	65 c0       	rjmp	.+202    	; 0x1a66 <put_fat+0x23c>
    199c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    199e:	9f 8d       	ldd	r25, Y+31	; 0x1f
    19a0:	a8 a1       	ldd	r26, Y+32	; 0x20
    19a2:	b9 a1       	ldd	r27, Y+33	; 0x21
    19a4:	03 2e       	mov	r0, r19
    19a6:	3a e0       	ldi	r19, 0x0A	; 10
    19a8:	76 95       	lsr	r23
    19aa:	67 95       	ror	r22
    19ac:	57 95       	ror	r21
    19ae:	47 95       	ror	r20
    19b0:	3a 95       	dec	r19
    19b2:	d1 f7       	brne	.-12     	; 0x19a8 <put_fat+0x17e>
    19b4:	30 2d       	mov	r19, r0
    19b6:	48 0f       	add	r20, r24
    19b8:	59 1f       	adc	r21, r25
    19ba:	6a 1f       	adc	r22, r26
    19bc:	7b 1f       	adc	r23, r27
    19be:	ce 01       	movw	r24, r28
    19c0:	be d8       	rcall	.-3716   	; 0xb3e <move_window>
    19c2:	18 2f       	mov	r17, r24
    19c4:	81 11       	cpse	r24, r1
    19c6:	4f c0       	rjmp	.+158    	; 0x1a66 <put_fat+0x23c>
    19c8:	cc 0c       	add	r12, r12
    19ca:	dd 1c       	adc	r13, r13
    19cc:	ee 1c       	adc	r14, r14
    19ce:	ff 1c       	adc	r15, r15
    19d0:	cc 0c       	add	r12, r12
    19d2:	dd 1c       	adc	r13, r13
    19d4:	ee 1c       	adc	r14, r14
    19d6:	ff 1c       	adc	r15, r15
    19d8:	8c ef       	ldi	r24, 0xFC	; 252
    19da:	c8 22       	and	r12, r24
    19dc:	8f e0       	ldi	r24, 0x0F	; 15
    19de:	d8 22       	and	r13, r24
    19e0:	ee 24       	eor	r14, r14
    19e2:	ff 24       	eor	r15, r15
    19e4:	f6 01       	movw	r30, r12
    19e6:	be 96       	adiw	r30, 0x2e	; 46
    19e8:	ec 0f       	add	r30, r28
    19ea:	fd 1f       	adc	r31, r29
    19ec:	83 81       	ldd	r24, Z+3	; 0x03
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	a0 e0       	ldi	r26, 0x00	; 0
    19f2:	b0 e0       	ldi	r27, 0x00	; 0
    19f4:	b8 2f       	mov	r27, r24
    19f6:	aa 27       	eor	r26, r26
    19f8:	99 27       	eor	r25, r25
    19fa:	88 27       	eor	r24, r24
    19fc:	cc 0e       	add	r12, r28
    19fe:	dd 1e       	adc	r13, r29
    1a00:	88 27       	eor	r24, r24
    1a02:	99 27       	eor	r25, r25
    1a04:	aa 27       	eor	r26, r26
    1a06:	b0 7f       	andi	r27, 0xF0	; 240
    1a08:	48 2a       	or	r4, r24
    1a0a:	59 2a       	or	r5, r25
    1a0c:	6a 2a       	or	r6, r26
    1a0e:	7b 2a       	or	r7, r27
    1a10:	d6 01       	movw	r26, r12
    1a12:	9e 96       	adiw	r26, 0x2e	; 46
    1a14:	4c 92       	st	X, r4
    1a16:	51 82       	std	Z+1, r5	; 0x01
    1a18:	62 82       	std	Z+2, r6	; 0x02
    1a1a:	73 82       	std	Z+3, r7	; 0x03
    1a1c:	81 e0       	ldi	r24, 0x01	; 1
    1a1e:	8c 83       	std	Y+4, r24	; 0x04
    1a20:	22 c0       	rjmp	.+68     	; 0x1a66 <put_fat+0x23c>
    1a22:	12 e0       	ldi	r17, 0x02	; 2
    1a24:	20 c0       	rjmp	.+64     	; 0x1a66 <put_fat+0x23c>
    1a26:	12 e0       	ldi	r17, 0x02	; 2
    1a28:	1e c0       	rjmp	.+60     	; 0x1a66 <put_fat+0x23c>
    1a2a:	12 e0       	ldi	r17, 0x02	; 2
    1a2c:	1c c0       	rjmp	.+56     	; 0x1a66 <put_fat+0x23c>
    1a2e:	18 2f       	mov	r17, r24
    1a30:	1a c0       	rjmp	.+52     	; 0x1a66 <put_fat+0x23c>
    1a32:	18 2f       	mov	r17, r24
    1a34:	18 c0       	rjmp	.+48     	; 0x1a66 <put_fat+0x23c>
    1a36:	f4 01       	movw	r30, r8
    1a38:	ff 70       	andi	r31, 0x0F	; 15
    1a3a:	68 94       	set
    1a3c:	13 f8       	bld	r1, 3
    1a3e:	76 94       	lsr	r7
    1a40:	67 94       	ror	r6
    1a42:	57 94       	ror	r5
    1a44:	47 94       	ror	r4
    1a46:	16 94       	lsr	r1
    1a48:	d1 f7       	brne	.-12     	; 0x1a3e <put_fat+0x214>
    1a4a:	77 cf       	rjmp	.-274    	; 0x193a <put_fat+0x110>
    1a4c:	f4 01       	movw	r30, r8
    1a4e:	ff 70       	andi	r31, 0x0F	; 15
    1a50:	de 01       	movw	r26, r28
    1a52:	ae 0f       	add	r26, r30
    1a54:	bf 1f       	adc	r27, r31
    1a56:	9e 96       	adiw	r26, 0x2e	; 46
    1a58:	9c 91       	ld	r25, X
    1a5a:	90 7f       	andi	r25, 0xF0	; 240
    1a5c:	85 2d       	mov	r24, r5
    1a5e:	8f 70       	andi	r24, 0x0F	; 15
    1a60:	49 2e       	mov	r4, r25
    1a62:	48 2a       	or	r4, r24
    1a64:	6a cf       	rjmp	.-300    	; 0x193a <put_fat+0x110>
    1a66:	81 2f       	mov	r24, r17
    1a68:	df 91       	pop	r29
    1a6a:	cf 91       	pop	r28
    1a6c:	1f 91       	pop	r17
    1a6e:	0f 91       	pop	r16
    1a70:	ff 90       	pop	r15
    1a72:	ef 90       	pop	r14
    1a74:	df 90       	pop	r13
    1a76:	cf 90       	pop	r12
    1a78:	bf 90       	pop	r11
    1a7a:	af 90       	pop	r10
    1a7c:	9f 90       	pop	r9
    1a7e:	8f 90       	pop	r8
    1a80:	7f 90       	pop	r7
    1a82:	6f 90       	pop	r6
    1a84:	5f 90       	pop	r5
    1a86:	4f 90       	pop	r4
    1a88:	08 95       	ret

00001a8a <create_chain>:
    1a8a:	2f 92       	push	r2
    1a8c:	3f 92       	push	r3
    1a8e:	4f 92       	push	r4
    1a90:	5f 92       	push	r5
    1a92:	6f 92       	push	r6
    1a94:	7f 92       	push	r7
    1a96:	8f 92       	push	r8
    1a98:	9f 92       	push	r9
    1a9a:	af 92       	push	r10
    1a9c:	bf 92       	push	r11
    1a9e:	cf 92       	push	r12
    1aa0:	df 92       	push	r13
    1aa2:	ef 92       	push	r14
    1aa4:	ff 92       	push	r15
    1aa6:	0f 93       	push	r16
    1aa8:	1f 93       	push	r17
    1aaa:	cf 93       	push	r28
    1aac:	df 93       	push	r29
    1aae:	ec 01       	movw	r28, r24
    1ab0:	2a 01       	movw	r4, r20
    1ab2:	3b 01       	movw	r6, r22
    1ab4:	41 15       	cp	r20, r1
    1ab6:	51 05       	cpc	r21, r1
    1ab8:	61 05       	cpc	r22, r1
    1aba:	71 05       	cpc	r23, r1
    1abc:	b9 f4       	brne	.+46     	; 0x1aec <create_chain+0x62>
    1abe:	8a 84       	ldd	r8, Y+10	; 0x0a
    1ac0:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ac2:	ac 84       	ldd	r10, Y+12	; 0x0c
    1ac4:	bd 84       	ldd	r11, Y+13	; 0x0d
    1ac6:	81 14       	cp	r8, r1
    1ac8:	91 04       	cpc	r9, r1
    1aca:	a1 04       	cpc	r10, r1
    1acc:	b1 04       	cpc	r11, r1
    1ace:	59 f1       	breq	.+86     	; 0x1b26 <create_chain+0x9c>
    1ad0:	8a 89       	ldd	r24, Y+18	; 0x12
    1ad2:	9b 89       	ldd	r25, Y+19	; 0x13
    1ad4:	ac 89       	ldd	r26, Y+20	; 0x14
    1ad6:	bd 89       	ldd	r27, Y+21	; 0x15
    1ad8:	88 16       	cp	r8, r24
    1ada:	99 06       	cpc	r9, r25
    1adc:	aa 06       	cpc	r10, r26
    1ade:	bb 06       	cpc	r11, r27
    1ae0:	30 f1       	brcs	.+76     	; 0x1b2e <create_chain+0xa4>
    1ae2:	81 2c       	mov	r8, r1
    1ae4:	91 2c       	mov	r9, r1
    1ae6:	54 01       	movw	r10, r8
    1ae8:	83 94       	inc	r8
    1aea:	21 c0       	rjmp	.+66     	; 0x1b2e <create_chain+0xa4>
    1aec:	dd dc       	rcall	.-1606   	; 0x14a8 <get_fat>
    1aee:	6b 01       	movw	r12, r22
    1af0:	7c 01       	movw	r14, r24
    1af2:	62 30       	cpi	r22, 0x02	; 2
    1af4:	71 05       	cpc	r23, r1
    1af6:	81 05       	cpc	r24, r1
    1af8:	91 05       	cpc	r25, r1
    1afa:	08 f4       	brcc	.+2      	; 0x1afe <create_chain+0x74>
    1afc:	96 c0       	rjmp	.+300    	; 0x1c2a <create_chain+0x1a0>
    1afe:	8f ef       	ldi	r24, 0xFF	; 255
    1b00:	c8 16       	cp	r12, r24
    1b02:	d8 06       	cpc	r13, r24
    1b04:	e8 06       	cpc	r14, r24
    1b06:	f8 06       	cpc	r15, r24
    1b08:	09 f4       	brne	.+2      	; 0x1b0c <create_chain+0x82>
    1b0a:	94 c0       	rjmp	.+296    	; 0x1c34 <create_chain+0x1aa>
    1b0c:	8a 89       	ldd	r24, Y+18	; 0x12
    1b0e:	9b 89       	ldd	r25, Y+19	; 0x13
    1b10:	ac 89       	ldd	r26, Y+20	; 0x14
    1b12:	bd 89       	ldd	r27, Y+21	; 0x15
    1b14:	c8 16       	cp	r12, r24
    1b16:	d9 06       	cpc	r13, r25
    1b18:	ea 06       	cpc	r14, r26
    1b1a:	fb 06       	cpc	r15, r27
    1b1c:	08 f4       	brcc	.+2      	; 0x1b20 <create_chain+0x96>
    1b1e:	8f c0       	rjmp	.+286    	; 0x1c3e <create_chain+0x1b4>
    1b20:	53 01       	movw	r10, r6
    1b22:	42 01       	movw	r8, r4
    1b24:	04 c0       	rjmp	.+8      	; 0x1b2e <create_chain+0xa4>
    1b26:	81 2c       	mov	r8, r1
    1b28:	91 2c       	mov	r9, r1
    1b2a:	54 01       	movw	r10, r8
    1b2c:	83 94       	inc	r8
    1b2e:	75 01       	movw	r14, r10
    1b30:	64 01       	movw	r12, r8
    1b32:	68 94       	set
    1b34:	22 24       	eor	r2, r2
    1b36:	21 f8       	bld	r2, 1
    1b38:	31 2c       	mov	r3, r1
    1b3a:	00 e0       	ldi	r16, 0x00	; 0
    1b3c:	10 e0       	ldi	r17, 0x00	; 0
    1b3e:	2f ef       	ldi	r18, 0xFF	; 255
    1b40:	c2 1a       	sub	r12, r18
    1b42:	d2 0a       	sbc	r13, r18
    1b44:	e2 0a       	sbc	r14, r18
    1b46:	f2 0a       	sbc	r15, r18
    1b48:	8a 89       	ldd	r24, Y+18	; 0x12
    1b4a:	9b 89       	ldd	r25, Y+19	; 0x13
    1b4c:	ac 89       	ldd	r26, Y+20	; 0x14
    1b4e:	bd 89       	ldd	r27, Y+21	; 0x15
    1b50:	c8 16       	cp	r12, r24
    1b52:	d9 06       	cpc	r13, r25
    1b54:	ea 06       	cpc	r14, r26
    1b56:	fb 06       	cpc	r15, r27
    1b58:	58 f0       	brcs	.+22     	; 0x1b70 <create_chain+0xe6>
    1b5a:	82 e0       	ldi	r24, 0x02	; 2
    1b5c:	88 16       	cp	r8, r24
    1b5e:	91 04       	cpc	r9, r1
    1b60:	a1 04       	cpc	r10, r1
    1b62:	b1 04       	cpc	r11, r1
    1b64:	08 f4       	brcc	.+2      	; 0x1b68 <create_chain+0xde>
    1b66:	70 c0       	rjmp	.+224    	; 0x1c48 <create_chain+0x1be>
    1b68:	c2 2c       	mov	r12, r2
    1b6a:	d3 2c       	mov	r13, r3
    1b6c:	e0 2e       	mov	r14, r16
    1b6e:	f1 2e       	mov	r15, r17
    1b70:	b7 01       	movw	r22, r14
    1b72:	a6 01       	movw	r20, r12
    1b74:	ce 01       	movw	r24, r28
    1b76:	98 dc       	rcall	.-1744   	; 0x14a8 <get_fat>
    1b78:	61 15       	cp	r22, r1
    1b7a:	71 05       	cpc	r23, r1
    1b7c:	81 05       	cpc	r24, r1
    1b7e:	91 05       	cpc	r25, r1
    1b80:	99 f0       	breq	.+38     	; 0x1ba8 <create_chain+0x11e>
    1b82:	6f 3f       	cpi	r22, 0xFF	; 255
    1b84:	2f ef       	ldi	r18, 0xFF	; 255
    1b86:	72 07       	cpc	r23, r18
    1b88:	82 07       	cpc	r24, r18
    1b8a:	92 07       	cpc	r25, r18
    1b8c:	09 f4       	brne	.+2      	; 0x1b90 <create_chain+0x106>
    1b8e:	61 c0       	rjmp	.+194    	; 0x1c52 <create_chain+0x1c8>
    1b90:	61 30       	cpi	r22, 0x01	; 1
    1b92:	71 05       	cpc	r23, r1
    1b94:	81 05       	cpc	r24, r1
    1b96:	91 05       	cpc	r25, r1
    1b98:	09 f4       	brne	.+2      	; 0x1b9c <create_chain+0x112>
    1b9a:	60 c0       	rjmp	.+192    	; 0x1c5c <create_chain+0x1d2>
    1b9c:	c8 14       	cp	r12, r8
    1b9e:	d9 04       	cpc	r13, r9
    1ba0:	ea 04       	cpc	r14, r10
    1ba2:	fb 04       	cpc	r15, r11
    1ba4:	61 f6       	brne	.-104    	; 0x1b3e <create_chain+0xb4>
    1ba6:	5f c0       	rjmp	.+190    	; 0x1c66 <create_chain+0x1dc>
    1ba8:	8c 2c       	mov	r8, r12
    1baa:	9d 2c       	mov	r9, r13
    1bac:	ae 2c       	mov	r10, r14
    1bae:	bf 2c       	mov	r11, r15
    1bb0:	0f ef       	ldi	r16, 0xFF	; 255
    1bb2:	1f ef       	ldi	r17, 0xFF	; 255
    1bb4:	2f ef       	ldi	r18, 0xFF	; 255
    1bb6:	3f e0       	ldi	r19, 0x0F	; 15
    1bb8:	b7 01       	movw	r22, r14
    1bba:	a6 01       	movw	r20, r12
    1bbc:	ce 01       	movw	r24, r28
    1bbe:	35 de       	rcall	.-918    	; 0x182a <put_fat>
    1bc0:	81 11       	cpse	r24, r1
    1bc2:	2c c0       	rjmp	.+88     	; 0x1c1c <create_chain+0x192>
    1bc4:	41 14       	cp	r4, r1
    1bc6:	51 04       	cpc	r5, r1
    1bc8:	61 04       	cpc	r6, r1
    1bca:	71 04       	cpc	r7, r1
    1bcc:	51 f0       	breq	.+20     	; 0x1be2 <create_chain+0x158>
    1bce:	0c 2d       	mov	r16, r12
    1bd0:	1d 2d       	mov	r17, r13
    1bd2:	2e 2d       	mov	r18, r14
    1bd4:	3f 2d       	mov	r19, r15
    1bd6:	b3 01       	movw	r22, r6
    1bd8:	a2 01       	movw	r20, r4
    1bda:	ce 01       	movw	r24, r28
    1bdc:	26 de       	rcall	.-948    	; 0x182a <put_fat>
    1bde:	81 11       	cpse	r24, r1
    1be0:	1d c0       	rjmp	.+58     	; 0x1c1c <create_chain+0x192>
    1be2:	8a 86       	std	Y+10, r8	; 0x0a
    1be4:	9b 86       	std	Y+11, r9	; 0x0b
    1be6:	ac 86       	std	Y+12, r10	; 0x0c
    1be8:	bd 86       	std	Y+13, r11	; 0x0d
    1bea:	8e 85       	ldd	r24, Y+14	; 0x0e
    1bec:	9f 85       	ldd	r25, Y+15	; 0x0f
    1bee:	a8 89       	ldd	r26, Y+16	; 0x10
    1bf0:	b9 89       	ldd	r27, Y+17	; 0x11
    1bf2:	8f 3f       	cpi	r24, 0xFF	; 255
    1bf4:	2f ef       	ldi	r18, 0xFF	; 255
    1bf6:	92 07       	cpc	r25, r18
    1bf8:	a2 07       	cpc	r26, r18
    1bfa:	b2 07       	cpc	r27, r18
    1bfc:	c9 f1       	breq	.+114    	; 0x1c70 <create_chain+0x1e6>
    1bfe:	01 97       	sbiw	r24, 0x01	; 1
    1c00:	a1 09       	sbc	r26, r1
    1c02:	b1 09       	sbc	r27, r1
    1c04:	8e 87       	std	Y+14, r24	; 0x0e
    1c06:	9f 87       	std	Y+15, r25	; 0x0f
    1c08:	a8 8b       	std	Y+16, r26	; 0x10
    1c0a:	b9 8b       	std	Y+17, r27	; 0x11
    1c0c:	8d 81       	ldd	r24, Y+5	; 0x05
    1c0e:	81 60       	ori	r24, 0x01	; 1
    1c10:	8d 83       	std	Y+5, r24	; 0x05
    1c12:	6c 2d       	mov	r22, r12
    1c14:	7d 2d       	mov	r23, r13
    1c16:	8e 2d       	mov	r24, r14
    1c18:	9f 2d       	mov	r25, r15
    1c1a:	33 c0       	rjmp	.+102    	; 0x1c82 <create_chain+0x1f8>
    1c1c:	81 30       	cpi	r24, 0x01	; 1
    1c1e:	69 f1       	breq	.+90     	; 0x1c7a <create_chain+0x1f0>
    1c20:	61 e0       	ldi	r22, 0x01	; 1
    1c22:	70 e0       	ldi	r23, 0x00	; 0
    1c24:	80 e0       	ldi	r24, 0x00	; 0
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	2c c0       	rjmp	.+88     	; 0x1c82 <create_chain+0x1f8>
    1c2a:	61 e0       	ldi	r22, 0x01	; 1
    1c2c:	70 e0       	ldi	r23, 0x00	; 0
    1c2e:	80 e0       	ldi	r24, 0x00	; 0
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	27 c0       	rjmp	.+78     	; 0x1c82 <create_chain+0x1f8>
    1c34:	6f ef       	ldi	r22, 0xFF	; 255
    1c36:	7f ef       	ldi	r23, 0xFF	; 255
    1c38:	8f ef       	ldi	r24, 0xFF	; 255
    1c3a:	9f ef       	ldi	r25, 0xFF	; 255
    1c3c:	22 c0       	rjmp	.+68     	; 0x1c82 <create_chain+0x1f8>
    1c3e:	6c 2d       	mov	r22, r12
    1c40:	7d 2d       	mov	r23, r13
    1c42:	8e 2d       	mov	r24, r14
    1c44:	9f 2d       	mov	r25, r15
    1c46:	1d c0       	rjmp	.+58     	; 0x1c82 <create_chain+0x1f8>
    1c48:	60 e0       	ldi	r22, 0x00	; 0
    1c4a:	70 e0       	ldi	r23, 0x00	; 0
    1c4c:	80 e0       	ldi	r24, 0x00	; 0
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	18 c0       	rjmp	.+48     	; 0x1c82 <create_chain+0x1f8>
    1c52:	6f ef       	ldi	r22, 0xFF	; 255
    1c54:	7f ef       	ldi	r23, 0xFF	; 255
    1c56:	8f ef       	ldi	r24, 0xFF	; 255
    1c58:	9f ef       	ldi	r25, 0xFF	; 255
    1c5a:	13 c0       	rjmp	.+38     	; 0x1c82 <create_chain+0x1f8>
    1c5c:	61 e0       	ldi	r22, 0x01	; 1
    1c5e:	70 e0       	ldi	r23, 0x00	; 0
    1c60:	80 e0       	ldi	r24, 0x00	; 0
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	0e c0       	rjmp	.+28     	; 0x1c82 <create_chain+0x1f8>
    1c66:	60 e0       	ldi	r22, 0x00	; 0
    1c68:	70 e0       	ldi	r23, 0x00	; 0
    1c6a:	80 e0       	ldi	r24, 0x00	; 0
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	09 c0       	rjmp	.+18     	; 0x1c82 <create_chain+0x1f8>
    1c70:	6c 2d       	mov	r22, r12
    1c72:	7d 2d       	mov	r23, r13
    1c74:	8e 2d       	mov	r24, r14
    1c76:	9f 2d       	mov	r25, r15
    1c78:	04 c0       	rjmp	.+8      	; 0x1c82 <create_chain+0x1f8>
    1c7a:	6f ef       	ldi	r22, 0xFF	; 255
    1c7c:	7f ef       	ldi	r23, 0xFF	; 255
    1c7e:	8f ef       	ldi	r24, 0xFF	; 255
    1c80:	9f ef       	ldi	r25, 0xFF	; 255
    1c82:	df 91       	pop	r29
    1c84:	cf 91       	pop	r28
    1c86:	1f 91       	pop	r17
    1c88:	0f 91       	pop	r16
    1c8a:	ff 90       	pop	r15
    1c8c:	ef 90       	pop	r14
    1c8e:	df 90       	pop	r13
    1c90:	cf 90       	pop	r12
    1c92:	bf 90       	pop	r11
    1c94:	af 90       	pop	r10
    1c96:	9f 90       	pop	r9
    1c98:	8f 90       	pop	r8
    1c9a:	7f 90       	pop	r7
    1c9c:	6f 90       	pop	r6
    1c9e:	5f 90       	pop	r5
    1ca0:	4f 90       	pop	r4
    1ca2:	3f 90       	pop	r3
    1ca4:	2f 90       	pop	r2
    1ca6:	08 95       	ret

00001ca8 <dir_next>:
    1ca8:	7f 92       	push	r7
    1caa:	8f 92       	push	r8
    1cac:	9f 92       	push	r9
    1cae:	af 92       	push	r10
    1cb0:	bf 92       	push	r11
    1cb2:	cf 92       	push	r12
    1cb4:	df 92       	push	r13
    1cb6:	ef 92       	push	r14
    1cb8:	ff 92       	push	r15
    1cba:	0f 93       	push	r16
    1cbc:	1f 93       	push	r17
    1cbe:	cf 93       	push	r28
    1cc0:	df 93       	push	r29
    1cc2:	dc 01       	movw	r26, r24
    1cc4:	14 96       	adiw	r26, 0x04	; 4
    1cc6:	cd 91       	ld	r28, X+
    1cc8:	dc 91       	ld	r29, X
    1cca:	15 97       	sbiw	r26, 0x05	; 5
    1ccc:	21 96       	adiw	r28, 0x01	; 1
    1cce:	09 f4       	brne	.+2      	; 0x1cd2 <dir_next+0x2a>
    1cd0:	ff c0       	rjmp	.+510    	; 0x1ed0 <dir_next+0x228>
    1cd2:	1e 96       	adiw	r26, 0x0e	; 14
    1cd4:	8d 90       	ld	r8, X+
    1cd6:	9d 90       	ld	r9, X+
    1cd8:	ad 90       	ld	r10, X+
    1cda:	bc 90       	ld	r11, X
    1cdc:	51 97       	sbiw	r26, 0x11	; 17
    1cde:	81 14       	cp	r8, r1
    1ce0:	91 04       	cpc	r9, r1
    1ce2:	a1 04       	cpc	r10, r1
    1ce4:	b1 04       	cpc	r11, r1
    1ce6:	09 f4       	brne	.+2      	; 0x1cea <dir_next+0x42>
    1ce8:	f5 c0       	rjmp	.+490    	; 0x1ed4 <dir_next+0x22c>
    1cea:	7b 01       	movw	r14, r22
    1cec:	8c 01       	movw	r16, r24
    1cee:	6e 01       	movw	r12, r28
    1cf0:	e8 94       	clt
    1cf2:	c7 f8       	bld	r12, 7
    1cf4:	dd 24       	eor	r13, r13
    1cf6:	c1 14       	cp	r12, r1
    1cf8:	d1 04       	cpc	r13, r1
    1cfa:	09 f0       	breq	.+2      	; 0x1cfe <dir_next+0x56>
    1cfc:	cd c0       	rjmp	.+410    	; 0x1e98 <dir_next+0x1f0>
    1cfe:	bf ef       	ldi	r27, 0xFF	; 255
    1d00:	8b 1a       	sub	r8, r27
    1d02:	9b 0a       	sbc	r9, r27
    1d04:	ab 0a       	sbc	r10, r27
    1d06:	bb 0a       	sbc	r11, r27
    1d08:	fc 01       	movw	r30, r24
    1d0a:	86 86       	std	Z+14, r8	; 0x0e
    1d0c:	97 86       	std	Z+15, r9	; 0x0f
    1d0e:	a0 8a       	std	Z+16, r10	; 0x10
    1d10:	b1 8a       	std	Z+17, r11	; 0x11
    1d12:	42 85       	ldd	r20, Z+10	; 0x0a
    1d14:	53 85       	ldd	r21, Z+11	; 0x0b
    1d16:	64 85       	ldd	r22, Z+12	; 0x0c
    1d18:	75 85       	ldd	r23, Z+13	; 0x0d
    1d1a:	41 15       	cp	r20, r1
    1d1c:	51 05       	cpc	r21, r1
    1d1e:	61 05       	cpc	r22, r1
    1d20:	71 05       	cpc	r23, r1
    1d22:	51 f4       	brne	.+20     	; 0x1d38 <dir_next+0x90>
    1d24:	01 90       	ld	r0, Z+
    1d26:	f0 81       	ld	r31, Z
    1d28:	e0 2d       	mov	r30, r0
    1d2a:	80 85       	ldd	r24, Z+8	; 0x08
    1d2c:	91 85       	ldd	r25, Z+9	; 0x09
    1d2e:	c8 17       	cp	r28, r24
    1d30:	d9 07       	cpc	r29, r25
    1d32:	08 f0       	brcs	.+2      	; 0x1d36 <dir_next+0x8e>
    1d34:	d1 c0       	rjmp	.+418    	; 0x1ed8 <dir_next+0x230>
    1d36:	b0 c0       	rjmp	.+352    	; 0x1e98 <dir_next+0x1f0>
    1d38:	01 90       	ld	r0, Z+
    1d3a:	f0 81       	ld	r31, Z
    1d3c:	e0 2d       	mov	r30, r0
    1d3e:	22 81       	ldd	r18, Z+2	; 0x02
    1d40:	30 e0       	ldi	r19, 0x00	; 0
    1d42:	21 50       	subi	r18, 0x01	; 1
    1d44:	31 09       	sbc	r19, r1
    1d46:	ce 01       	movw	r24, r28
    1d48:	88 0f       	add	r24, r24
    1d4a:	89 2f       	mov	r24, r25
    1d4c:	88 1f       	adc	r24, r24
    1d4e:	99 0b       	sbc	r25, r25
    1d50:	91 95       	neg	r25
    1d52:	28 23       	and	r18, r24
    1d54:	39 23       	and	r19, r25
    1d56:	23 2b       	or	r18, r19
    1d58:	09 f0       	breq	.+2      	; 0x1d5c <dir_next+0xb4>
    1d5a:	9e c0       	rjmp	.+316    	; 0x1e98 <dir_next+0x1f0>
    1d5c:	cf 01       	movw	r24, r30
    1d5e:	a4 db       	rcall	.-2232   	; 0x14a8 <get_fat>
    1d60:	4b 01       	movw	r8, r22
    1d62:	5c 01       	movw	r10, r24
    1d64:	62 30       	cpi	r22, 0x02	; 2
    1d66:	71 05       	cpc	r23, r1
    1d68:	81 05       	cpc	r24, r1
    1d6a:	91 05       	cpc	r25, r1
    1d6c:	08 f4       	brcc	.+2      	; 0x1d70 <dir_next+0xc8>
    1d6e:	b6 c0       	rjmp	.+364    	; 0x1edc <dir_next+0x234>
    1d70:	6f 3f       	cpi	r22, 0xFF	; 255
    1d72:	7f 4f       	sbci	r23, 0xFF	; 255
    1d74:	8f 4f       	sbci	r24, 0xFF	; 255
    1d76:	9f 4f       	sbci	r25, 0xFF	; 255
    1d78:	09 f4       	brne	.+2      	; 0x1d7c <dir_next+0xd4>
    1d7a:	b2 c0       	rjmp	.+356    	; 0x1ee0 <dir_next+0x238>
    1d7c:	d8 01       	movw	r26, r16
    1d7e:	ed 91       	ld	r30, X+
    1d80:	fc 91       	ld	r31, X
    1d82:	82 89       	ldd	r24, Z+18	; 0x12
    1d84:	93 89       	ldd	r25, Z+19	; 0x13
    1d86:	a4 89       	ldd	r26, Z+20	; 0x14
    1d88:	b5 89       	ldd	r27, Z+21	; 0x15
    1d8a:	88 16       	cp	r8, r24
    1d8c:	99 06       	cpc	r9, r25
    1d8e:	aa 06       	cpc	r10, r26
    1d90:	bb 06       	cpc	r11, r27
    1d92:	08 f4       	brcc	.+2      	; 0x1d96 <dir_next+0xee>
    1d94:	70 c0       	rjmp	.+224    	; 0x1e76 <dir_next+0x1ce>
    1d96:	ef 28       	or	r14, r15
    1d98:	09 f4       	brne	.+2      	; 0x1d9c <dir_next+0xf4>
    1d9a:	a4 c0       	rjmp	.+328    	; 0x1ee4 <dir_next+0x23c>
    1d9c:	d8 01       	movw	r26, r16
    1d9e:	1a 96       	adiw	r26, 0x0a	; 10
    1da0:	4d 91       	ld	r20, X+
    1da2:	5d 91       	ld	r21, X+
    1da4:	6d 91       	ld	r22, X+
    1da6:	7c 91       	ld	r23, X
    1da8:	1d 97       	sbiw	r26, 0x0d	; 13
    1daa:	cf 01       	movw	r24, r30
    1dac:	6e de       	rcall	.-804    	; 0x1a8a <create_chain>
    1dae:	4b 01       	movw	r8, r22
    1db0:	5c 01       	movw	r10, r24
    1db2:	61 15       	cp	r22, r1
    1db4:	71 05       	cpc	r23, r1
    1db6:	81 05       	cpc	r24, r1
    1db8:	91 05       	cpc	r25, r1
    1dba:	09 f4       	brne	.+2      	; 0x1dbe <dir_next+0x116>
    1dbc:	95 c0       	rjmp	.+298    	; 0x1ee8 <dir_next+0x240>
    1dbe:	61 30       	cpi	r22, 0x01	; 1
    1dc0:	71 05       	cpc	r23, r1
    1dc2:	81 05       	cpc	r24, r1
    1dc4:	91 05       	cpc	r25, r1
    1dc6:	09 f4       	brne	.+2      	; 0x1dca <dir_next+0x122>
    1dc8:	91 c0       	rjmp	.+290    	; 0x1eec <dir_next+0x244>
    1dca:	6f 3f       	cpi	r22, 0xFF	; 255
    1dcc:	7f 4f       	sbci	r23, 0xFF	; 255
    1dce:	8f 4f       	sbci	r24, 0xFF	; 255
    1dd0:	9f 4f       	sbci	r25, 0xFF	; 255
    1dd2:	09 f4       	brne	.+2      	; 0x1dd6 <dir_next+0x12e>
    1dd4:	8d c0       	rjmp	.+282    	; 0x1ef0 <dir_next+0x248>
    1dd6:	d8 01       	movw	r26, r16
    1dd8:	8d 91       	ld	r24, X+
    1dda:	9c 91       	ld	r25, X
    1ddc:	0e 94 36 05 	call	0xa6c	; 0xa6c <sync_window>
    1de0:	81 11       	cpse	r24, r1
    1de2:	88 c0       	rjmp	.+272    	; 0x1ef4 <dir_next+0x24c>
    1de4:	f8 01       	movw	r30, r16
    1de6:	80 81       	ld	r24, Z
    1de8:	91 81       	ldd	r25, Z+1	; 0x01
    1dea:	fc 01       	movw	r30, r24
    1dec:	be 96       	adiw	r30, 0x2e	; 46
    1dee:	82 5d       	subi	r24, 0xD2	; 210
    1df0:	9f 4e       	sbci	r25, 0xEF	; 239
    1df2:	11 92       	st	Z+, r1
    1df4:	e8 17       	cp	r30, r24
    1df6:	f9 07       	cpc	r31, r25
    1df8:	e1 f7       	brne	.-8      	; 0x1df2 <dir_next+0x14a>
    1dfa:	d8 01       	movw	r26, r16
    1dfc:	ed 90       	ld	r14, X+
    1dfe:	fc 90       	ld	r15, X
    1e00:	b5 01       	movw	r22, r10
    1e02:	a4 01       	movw	r20, r8
    1e04:	c7 01       	movw	r24, r14
    1e06:	22 db       	rcall	.-2492   	; 0x144c <clust2sect>
    1e08:	f7 01       	movw	r30, r14
    1e0a:	62 a7       	std	Z+42, r22	; 0x2a
    1e0c:	73 a7       	std	Z+43, r23	; 0x2b
    1e0e:	84 a7       	std	Z+44, r24	; 0x2c
    1e10:	95 a7       	std	Z+45, r25	; 0x2d
    1e12:	e1 2c       	mov	r14, r1
    1e14:	f1 2c       	mov	r15, r1
    1e16:	77 24       	eor	r7, r7
    1e18:	73 94       	inc	r7
    1e1a:	19 c0       	rjmp	.+50     	; 0x1e4e <dir_next+0x1a6>
    1e1c:	74 82       	std	Z+4, r7	; 0x04
    1e1e:	d8 01       	movw	r26, r16
    1e20:	8d 91       	ld	r24, X+
    1e22:	9c 91       	ld	r25, X
    1e24:	0e 94 36 05 	call	0xa6c	; 0xa6c <sync_window>
    1e28:	81 11       	cpse	r24, r1
    1e2a:	66 c0       	rjmp	.+204    	; 0x1ef8 <dir_next+0x250>
    1e2c:	d8 01       	movw	r26, r16
    1e2e:	ed 91       	ld	r30, X+
    1e30:	fc 91       	ld	r31, X
    1e32:	82 a5       	ldd	r24, Z+42	; 0x2a
    1e34:	93 a5       	ldd	r25, Z+43	; 0x2b
    1e36:	a4 a5       	ldd	r26, Z+44	; 0x2c
    1e38:	b5 a5       	ldd	r27, Z+45	; 0x2d
    1e3a:	01 96       	adiw	r24, 0x01	; 1
    1e3c:	a1 1d       	adc	r26, r1
    1e3e:	b1 1d       	adc	r27, r1
    1e40:	82 a7       	std	Z+42, r24	; 0x2a
    1e42:	93 a7       	std	Z+43, r25	; 0x2b
    1e44:	a4 a7       	std	Z+44, r26	; 0x2c
    1e46:	b5 a7       	std	Z+45, r27	; 0x2d
    1e48:	bf ef       	ldi	r27, 0xFF	; 255
    1e4a:	eb 1a       	sub	r14, r27
    1e4c:	fb 0a       	sbc	r15, r27
    1e4e:	d8 01       	movw	r26, r16
    1e50:	ed 91       	ld	r30, X+
    1e52:	fc 91       	ld	r31, X
    1e54:	82 81       	ldd	r24, Z+2	; 0x02
    1e56:	90 e0       	ldi	r25, 0x00	; 0
    1e58:	e8 16       	cp	r14, r24
    1e5a:	f9 06       	cpc	r15, r25
    1e5c:	f8 f2       	brcs	.-66     	; 0x1e1c <dir_next+0x174>
    1e5e:	82 a5       	ldd	r24, Z+42	; 0x2a
    1e60:	93 a5       	ldd	r25, Z+43	; 0x2b
    1e62:	a4 a5       	ldd	r26, Z+44	; 0x2c
    1e64:	b5 a5       	ldd	r27, Z+45	; 0x2d
    1e66:	8e 19       	sub	r24, r14
    1e68:	9f 09       	sbc	r25, r15
    1e6a:	a1 09       	sbc	r26, r1
    1e6c:	b1 09       	sbc	r27, r1
    1e6e:	82 a7       	std	Z+42, r24	; 0x2a
    1e70:	93 a7       	std	Z+43, r25	; 0x2b
    1e72:	a4 a7       	std	Z+44, r26	; 0x2c
    1e74:	b5 a7       	std	Z+45, r27	; 0x2d
    1e76:	f8 01       	movw	r30, r16
    1e78:	82 86       	std	Z+10, r8	; 0x0a
    1e7a:	93 86       	std	Z+11, r9	; 0x0b
    1e7c:	a4 86       	std	Z+12, r10	; 0x0c
    1e7e:	b5 86       	std	Z+13, r11	; 0x0d
    1e80:	b5 01       	movw	r22, r10
    1e82:	a4 01       	movw	r20, r8
    1e84:	80 81       	ld	r24, Z
    1e86:	91 81       	ldd	r25, Z+1	; 0x01
    1e88:	e1 da       	rcall	.-2622   	; 0x144c <clust2sect>
    1e8a:	d8 01       	movw	r26, r16
    1e8c:	1e 96       	adiw	r26, 0x0e	; 14
    1e8e:	6d 93       	st	X+, r22
    1e90:	7d 93       	st	X+, r23
    1e92:	8d 93       	st	X+, r24
    1e94:	9c 93       	st	X, r25
    1e96:	51 97       	sbiw	r26, 0x11	; 17
    1e98:	f8 01       	movw	r30, r16
    1e9a:	d5 83       	std	Z+5, r29	; 0x05
    1e9c:	c4 83       	std	Z+4, r28	; 0x04
    1e9e:	cc 0c       	add	r12, r12
    1ea0:	dd 1c       	adc	r13, r13
    1ea2:	cc 0c       	add	r12, r12
    1ea4:	dd 1c       	adc	r13, r13
    1ea6:	cc 0c       	add	r12, r12
    1ea8:	dd 1c       	adc	r13, r13
    1eaa:	cc 0c       	add	r12, r12
    1eac:	dd 1c       	adc	r13, r13
    1eae:	cc 0c       	add	r12, r12
    1eb0:	dd 1c       	adc	r13, r13
    1eb2:	fe e2       	ldi	r31, 0x2E	; 46
    1eb4:	cf 0e       	add	r12, r31
    1eb6:	d1 1c       	adc	r13, r1
    1eb8:	d8 01       	movw	r26, r16
    1eba:	8d 91       	ld	r24, X+
    1ebc:	9c 91       	ld	r25, X
    1ebe:	11 97       	sbiw	r26, 0x01	; 1
    1ec0:	c8 0e       	add	r12, r24
    1ec2:	d9 1e       	adc	r13, r25
    1ec4:	53 96       	adiw	r26, 0x13	; 19
    1ec6:	dc 92       	st	X, r13
    1ec8:	ce 92       	st	-X, r12
    1eca:	52 97       	sbiw	r26, 0x12	; 18
    1ecc:	80 e0       	ldi	r24, 0x00	; 0
    1ece:	15 c0       	rjmp	.+42     	; 0x1efa <dir_next+0x252>
    1ed0:	84 e0       	ldi	r24, 0x04	; 4
    1ed2:	13 c0       	rjmp	.+38     	; 0x1efa <dir_next+0x252>
    1ed4:	84 e0       	ldi	r24, 0x04	; 4
    1ed6:	11 c0       	rjmp	.+34     	; 0x1efa <dir_next+0x252>
    1ed8:	84 e0       	ldi	r24, 0x04	; 4
    1eda:	0f c0       	rjmp	.+30     	; 0x1efa <dir_next+0x252>
    1edc:	82 e0       	ldi	r24, 0x02	; 2
    1ede:	0d c0       	rjmp	.+26     	; 0x1efa <dir_next+0x252>
    1ee0:	81 e0       	ldi	r24, 0x01	; 1
    1ee2:	0b c0       	rjmp	.+22     	; 0x1efa <dir_next+0x252>
    1ee4:	84 e0       	ldi	r24, 0x04	; 4
    1ee6:	09 c0       	rjmp	.+18     	; 0x1efa <dir_next+0x252>
    1ee8:	87 e0       	ldi	r24, 0x07	; 7
    1eea:	07 c0       	rjmp	.+14     	; 0x1efa <dir_next+0x252>
    1eec:	82 e0       	ldi	r24, 0x02	; 2
    1eee:	05 c0       	rjmp	.+10     	; 0x1efa <dir_next+0x252>
    1ef0:	81 e0       	ldi	r24, 0x01	; 1
    1ef2:	03 c0       	rjmp	.+6      	; 0x1efa <dir_next+0x252>
    1ef4:	81 e0       	ldi	r24, 0x01	; 1
    1ef6:	01 c0       	rjmp	.+2      	; 0x1efa <dir_next+0x252>
    1ef8:	81 e0       	ldi	r24, 0x01	; 1
    1efa:	df 91       	pop	r29
    1efc:	cf 91       	pop	r28
    1efe:	1f 91       	pop	r17
    1f00:	0f 91       	pop	r16
    1f02:	ff 90       	pop	r15
    1f04:	ef 90       	pop	r14
    1f06:	df 90       	pop	r13
    1f08:	cf 90       	pop	r12
    1f0a:	bf 90       	pop	r11
    1f0c:	af 90       	pop	r10
    1f0e:	9f 90       	pop	r9
    1f10:	8f 90       	pop	r8
    1f12:	7f 90       	pop	r7
    1f14:	08 95       	ret

00001f16 <f_mount>:
    1f16:	1f 93       	push	r17
    1f18:	cf 93       	push	r28
    1f1a:	df 93       	push	r29
    1f1c:	00 d0       	rcall	.+0      	; 0x1f1e <f_mount+0x8>
    1f1e:	00 d0       	rcall	.+0      	; 0x1f20 <f_mount+0xa>
    1f20:	00 d0       	rcall	.+0      	; 0x1f22 <f_mount+0xc>
    1f22:	cd b7       	in	r28, 0x3d	; 61
    1f24:	de b7       	in	r29, 0x3e	; 62
    1f26:	9c 83       	std	Y+4, r25	; 0x04
    1f28:	8b 83       	std	Y+3, r24	; 0x03
    1f2a:	7e 83       	std	Y+6, r23	; 0x06
    1f2c:	6d 83       	std	Y+5, r22	; 0x05
    1f2e:	14 2f       	mov	r17, r20
    1f30:	7a 83       	std	Y+2, r23	; 0x02
    1f32:	69 83       	std	Y+1, r22	; 0x01
    1f34:	ce 01       	movw	r24, r28
    1f36:	01 96       	adiw	r24, 0x01	; 1
    1f38:	0e 94 ff 04 	call	0x9fe	; 0x9fe <get_ldnumber>
    1f3c:	99 23       	and	r25, r25
    1f3e:	34 f1       	brlt	.+76     	; 0x1f8c <f_mount+0x76>
    1f40:	fc 01       	movw	r30, r24
    1f42:	ee 0f       	add	r30, r30
    1f44:	ff 1f       	adc	r31, r31
    1f46:	e3 5d       	subi	r30, 0xD3	; 211
    1f48:	fe 4f       	sbci	r31, 0xFE	; 254
    1f4a:	01 90       	ld	r0, Z+
    1f4c:	f0 81       	ld	r31, Z
    1f4e:	e0 2d       	mov	r30, r0
    1f50:	30 97       	sbiw	r30, 0x00	; 0
    1f52:	09 f0       	breq	.+2      	; 0x1f56 <f_mount+0x40>
    1f54:	10 82       	st	Z, r1
    1f56:	eb 81       	ldd	r30, Y+3	; 0x03
    1f58:	fc 81       	ldd	r31, Y+4	; 0x04
    1f5a:	30 97       	sbiw	r30, 0x00	; 0
    1f5c:	e9 f0       	breq	.+58     	; 0x1f98 <f_mount+0x82>
    1f5e:	10 82       	st	Z, r1
    1f60:	2b 81       	ldd	r18, Y+3	; 0x03
    1f62:	3c 81       	ldd	r19, Y+4	; 0x04
    1f64:	88 0f       	add	r24, r24
    1f66:	99 1f       	adc	r25, r25
    1f68:	fc 01       	movw	r30, r24
    1f6a:	e3 5d       	subi	r30, 0xD3	; 211
    1f6c:	fe 4f       	sbci	r31, 0xFE	; 254
    1f6e:	31 83       	std	Z+1, r19	; 0x01
    1f70:	20 83       	st	Z, r18
    1f72:	23 2b       	or	r18, r19
    1f74:	69 f0       	breq	.+26     	; 0x1f90 <f_mount+0x7a>
    1f76:	11 30       	cpi	r17, 0x01	; 1
    1f78:	69 f4       	brne	.+26     	; 0x1f94 <f_mount+0x7e>
    1f7a:	40 e0       	ldi	r20, 0x00	; 0
    1f7c:	be 01       	movw	r22, r28
    1f7e:	6b 5f       	subi	r22, 0xFB	; 251
    1f80:	7f 4f       	sbci	r23, 0xFF	; 255
    1f82:	ce 01       	movw	r24, r28
    1f84:	03 96       	adiw	r24, 0x03	; 3
    1f86:	0e 94 67 06 	call	0xcce	; 0xcce <find_volume>
    1f8a:	0e c0       	rjmp	.+28     	; 0x1fa8 <f_mount+0x92>
    1f8c:	8b e0       	ldi	r24, 0x0B	; 11
    1f8e:	0c c0       	rjmp	.+24     	; 0x1fa8 <f_mount+0x92>
    1f90:	80 e0       	ldi	r24, 0x00	; 0
    1f92:	0a c0       	rjmp	.+20     	; 0x1fa8 <f_mount+0x92>
    1f94:	80 e0       	ldi	r24, 0x00	; 0
    1f96:	08 c0       	rjmp	.+16     	; 0x1fa8 <f_mount+0x92>
    1f98:	88 0f       	add	r24, r24
    1f9a:	99 1f       	adc	r25, r25
    1f9c:	fc 01       	movw	r30, r24
    1f9e:	e3 5d       	subi	r30, 0xD3	; 211
    1fa0:	fe 4f       	sbci	r31, 0xFE	; 254
    1fa2:	11 82       	std	Z+1, r1	; 0x01
    1fa4:	10 82       	st	Z, r1
    1fa6:	80 e0       	ldi	r24, 0x00	; 0
    1fa8:	26 96       	adiw	r28, 0x06	; 6
    1faa:	0f b6       	in	r0, 0x3f	; 63
    1fac:	f8 94       	cli
    1fae:	de bf       	out	0x3e, r29	; 62
    1fb0:	0f be       	out	0x3f, r0	; 63
    1fb2:	cd bf       	out	0x3d, r28	; 61
    1fb4:	df 91       	pop	r29
    1fb6:	cf 91       	pop	r28
    1fb8:	1f 91       	pop	r17
    1fba:	08 95       	ret

00001fbc <f_open>:
    1fbc:	2f 92       	push	r2
    1fbe:	3f 92       	push	r3
    1fc0:	4f 92       	push	r4
    1fc2:	5f 92       	push	r5
    1fc4:	6f 92       	push	r6
    1fc6:	7f 92       	push	r7
    1fc8:	8f 92       	push	r8
    1fca:	9f 92       	push	r9
    1fcc:	af 92       	push	r10
    1fce:	bf 92       	push	r11
    1fd0:	cf 92       	push	r12
    1fd2:	df 92       	push	r13
    1fd4:	ef 92       	push	r14
    1fd6:	ff 92       	push	r15
    1fd8:	0f 93       	push	r16
    1fda:	1f 93       	push	r17
    1fdc:	cf 93       	push	r28
    1fde:	df 93       	push	r29
    1fe0:	cd b7       	in	r28, 0x3d	; 61
    1fe2:	de b7       	in	r29, 0x3e	; 62
    1fe4:	af 97       	sbiw	r28, 0x2f	; 47
    1fe6:	0f b6       	in	r0, 0x3f	; 63
    1fe8:	f8 94       	cli
    1fea:	de bf       	out	0x3e, r29	; 62
    1fec:	0f be       	out	0x3f, r0	; 63
    1fee:	cd bf       	out	0x3d, r28	; 61
    1ff0:	7c a3       	std	Y+36, r23	; 0x24
    1ff2:	6b a3       	std	Y+35, r22	; 0x23
    1ff4:	00 97       	sbiw	r24, 0x00	; 0
    1ff6:	09 f4       	brne	.+2      	; 0x1ffa <f_open+0x3e>
    1ff8:	81 c2       	rjmp	.+1282   	; 0x24fc <f_open+0x540>
    1ffa:	49 a7       	std	Y+41, r20	; 0x29
    1ffc:	1c 01       	movw	r2, r24
    1ffe:	dc 01       	movw	r26, r24
    2000:	1d 92       	st	X+, r1
    2002:	1c 92       	st	X, r1
    2004:	4e 71       	andi	r20, 0x1E	; 30
    2006:	be 01       	movw	r22, r28
    2008:	6d 5d       	subi	r22, 0xDD	; 221
    200a:	7f 4f       	sbci	r23, 0xFF	; 255
    200c:	ce 01       	movw	r24, r28
    200e:	01 96       	adiw	r24, 0x01	; 1
    2010:	0e 94 67 06 	call	0xcce	; 0xcce <find_volume>
    2014:	81 11       	cpse	r24, r1
    2016:	f9 c2       	rjmp	.+1522   	; 0x260a <f_open+0x64e>
    2018:	ce 01       	movw	r24, r28
    201a:	47 96       	adiw	r24, 0x17	; 23
    201c:	9e 8b       	std	Y+22, r25	; 0x16
    201e:	8d 8b       	std	Y+21, r24	; 0x15
    2020:	cb a0       	ldd	r12, Y+35	; 0x23
    2022:	dc a0       	ldd	r13, Y+36	; 0x24
    2024:	f6 01       	movw	r30, r12
    2026:	80 81       	ld	r24, Z
    2028:	8f 32       	cpi	r24, 0x2F	; 47
    202a:	11 f0       	breq	.+4      	; 0x2030 <f_open+0x74>
    202c:	8c 35       	cpi	r24, 0x5C	; 92
    202e:	19 f4       	brne	.+6      	; 0x2036 <f_open+0x7a>
    2030:	ff ef       	ldi	r31, 0xFF	; 255
    2032:	cf 1a       	sub	r12, r31
    2034:	df 0a       	sbc	r13, r31
    2036:	29 a5       	ldd	r18, Y+41	; 0x29
    2038:	2f 71       	andi	r18, 0x1F	; 31
    203a:	2d a7       	std	Y+45, r18	; 0x2d
    203c:	1f 82       	std	Y+7, r1	; 0x07
    203e:	18 86       	std	Y+8, r1	; 0x08
    2040:	19 86       	std	Y+9, r1	; 0x09
    2042:	1a 86       	std	Y+10, r1	; 0x0a
    2044:	d6 01       	movw	r26, r12
    2046:	8c 91       	ld	r24, X
    2048:	80 32       	cpi	r24, 0x20	; 32
    204a:	68 f4       	brcc	.+26     	; 0x2066 <f_open+0xaa>
    204c:	60 e0       	ldi	r22, 0x00	; 0
    204e:	70 e0       	ldi	r23, 0x00	; 0
    2050:	ce 01       	movw	r24, r28
    2052:	01 96       	adiw	r24, 0x01	; 1
    2054:	30 db       	rcall	.-2464   	; 0x16b6 <dir_sdi>
    2056:	1c 8a       	std	Y+20, r1	; 0x14
    2058:	1b 8a       	std	Y+19, r1	; 0x13
    205a:	e1 2c       	mov	r14, r1
    205c:	f1 2c       	mov	r15, r1
    205e:	88 23       	and	r24, r24
    2060:	09 f4       	brne	.+2      	; 0x2064 <f_open+0xa8>
    2062:	87 c2       	rjmp	.+1294   	; 0x2572 <f_open+0x5b6>
    2064:	7d c2       	rjmp	.+1274   	; 0x2560 <f_open+0x5a4>
    2066:	68 94       	set
    2068:	bb 24       	eor	r11, r11
    206a:	b5 f8       	bld	r11, 5
    206c:	a1 2c       	mov	r10, r1
    206e:	71 2c       	mov	r7, r1
    2070:	68 94       	set
    2072:	66 24       	eor	r6, r6
    2074:	63 f8       	bld	r6, 3
    2076:	51 2c       	mov	r5, r1
    2078:	41 2c       	mov	r4, r1
    207a:	6e a6       	std	Y+46, r6	; 0x2e
    207c:	5f a6       	std	Y+47, r5	; 0x2f
    207e:	f6 01       	movw	r30, r12
    2080:	af 01       	movw	r20, r30
    2082:	81 91       	ld	r24, Z+
    2084:	8f 32       	cpi	r24, 0x2F	; 47
    2086:	e1 f3       	breq	.-8      	; 0x2080 <f_open+0xc4>
    2088:	8c 35       	cpi	r24, 0x5C	; 92
    208a:	d1 f3       	breq	.-12     	; 0x2080 <f_open+0xc4>
    208c:	ed 89       	ldd	r30, Y+21	; 0x15
    208e:	fe 89       	ldd	r31, Y+22	; 0x16
    2090:	fe a3       	std	Y+38, r31	; 0x26
    2092:	ed a3       	std	Y+37, r30	; 0x25
    2094:	cf 01       	movw	r24, r30
    2096:	0b 96       	adiw	r24, 0x0b	; 11
    2098:	b1 92       	st	Z+, r11
    209a:	e8 17       	cp	r30, r24
    209c:	f9 07       	cpc	r31, r25
    209e:	e1 f7       	brne	.-8      	; 0x2098 <f_open+0xdc>
    20a0:	da 01       	movw	r26, r20
    20a2:	ea 2c       	mov	r14, r10
    20a4:	f7 2c       	mov	r15, r7
    20a6:	8a 2d       	mov	r24, r10
    20a8:	97 2d       	mov	r25, r7
    20aa:	86 2c       	mov	r8, r6
    20ac:	95 2c       	mov	r9, r5
    20ae:	04 2d       	mov	r16, r4
    20b0:	ba 01       	movw	r22, r20
    20b2:	01 96       	adiw	r24, 0x01	; 1
    20b4:	1d 91       	ld	r17, X+
    20b6:	11 32       	cpi	r17, 0x21	; 33
    20b8:	08 f4       	brcc	.+2      	; 0x20bc <f_open+0x100>
    20ba:	35 c2       	rjmp	.+1130   	; 0x2526 <f_open+0x56a>
    20bc:	1f 32       	cpi	r17, 0x2F	; 47
    20be:	09 f4       	brne	.+2      	; 0x20c2 <f_open+0x106>
    20c0:	2c c2       	rjmp	.+1112   	; 0x251a <f_open+0x55e>
    20c2:	1c 35       	cpi	r17, 0x5C	; 92
    20c4:	09 f4       	brne	.+2      	; 0x20c8 <f_open+0x10c>
    20c6:	29 c2       	rjmp	.+1106   	; 0x251a <f_open+0x55e>
    20c8:	1e 32       	cpi	r17, 0x2E	; 46
    20ca:	09 f4       	brne	.+2      	; 0x20ce <f_open+0x112>
    20cc:	19 c2       	rjmp	.+1074   	; 0x2500 <f_open+0x544>
    20ce:	e8 14       	cp	r14, r8
    20d0:	f9 04       	cpc	r15, r9
    20d2:	08 f0       	brcs	.+2      	; 0x20d6 <f_open+0x11a>
    20d4:	6e c2       	rjmp	.+1244   	; 0x25b2 <f_open+0x5f6>
    20d6:	0a c0       	rjmp	.+20     	; 0x20ec <f_open+0x130>
    20d8:	00 0f       	add	r16, r16
    20da:	00 0f       	add	r16, r16
    20dc:	ee a4       	ldd	r14, Y+46	; 0x2e
    20de:	ff a4       	ldd	r15, Y+47	; 0x2f
    20e0:	0f 2e       	mov	r0, r31
    20e2:	fb e0       	ldi	r31, 0x0B	; 11
    20e4:	8f 2e       	mov	r8, r31
    20e6:	f0 2d       	mov	r31, r0
    20e8:	91 2c       	mov	r9, r1
    20ea:	e3 cf       	rjmp	.-58     	; 0x20b2 <f_open+0xf6>
    20ec:	11 23       	and	r17, r17
    20ee:	0c f4       	brge	.+2      	; 0x20f2 <f_open+0x136>
    20f0:	60 c2       	rjmp	.+1216   	; 0x25b2 <f_open+0x5f6>
    20f2:	41 2f       	mov	r20, r17
    20f4:	50 e0       	ldi	r21, 0x00	; 0
    20f6:	42 32       	cpi	r20, 0x22	; 34
    20f8:	51 05       	cpc	r21, r1
    20fa:	09 f4       	brne	.+2      	; 0x20fe <f_open+0x142>
    20fc:	70 c2       	rjmp	.+1248   	; 0x25de <f_open+0x622>
    20fe:	e2 e0       	ldi	r30, 0x02	; 2
    2100:	f1 e0       	ldi	r31, 0x01	; 1
    2102:	9c 01       	movw	r18, r24
    2104:	81 91       	ld	r24, Z+
    2106:	88 23       	and	r24, r24
    2108:	09 f4       	brne	.+2      	; 0x210c <f_open+0x150>
    210a:	00 c2       	rjmp	.+1024   	; 0x250c <f_open+0x550>
    210c:	90 e0       	ldi	r25, 0x00	; 0
    210e:	48 17       	cp	r20, r24
    2110:	59 07       	cpc	r21, r25
    2112:	c1 f7       	brne	.-16     	; 0x2104 <f_open+0x148>
    2114:	86 e0       	ldi	r24, 0x06	; 6
    2116:	6a c2       	rjmp	.+1236   	; 0x25ec <f_open+0x630>
    2118:	02 60       	ori	r16, 0x02	; 2
    211a:	06 c0       	rjmp	.+12     	; 0x2128 <f_open+0x16c>
    211c:	2f e9       	ldi	r18, 0x9F	; 159
    211e:	21 0f       	add	r18, r17
    2120:	2a 31       	cpi	r18, 0x1A	; 26
    2122:	10 f4       	brcc	.+4      	; 0x2128 <f_open+0x16c>
    2124:	01 60       	ori	r16, 0x01	; 1
    2126:	10 52       	subi	r17, 0x20	; 32
    2128:	ed a1       	ldd	r30, Y+37	; 0x25
    212a:	fe a1       	ldd	r31, Y+38	; 0x26
    212c:	ee 0d       	add	r30, r14
    212e:	ff 1d       	adc	r31, r15
    2130:	10 83       	st	Z, r17
    2132:	97 01       	movw	r18, r14
    2134:	2f 5f       	subi	r18, 0xFF	; 255
    2136:	3f 4f       	sbci	r19, 0xFF	; 255
    2138:	79 01       	movw	r14, r18
    213a:	bb cf       	rjmp	.-138    	; 0x20b2 <f_open+0xf6>
    213c:	ef 28       	or	r14, r15
    213e:	09 f4       	brne	.+2      	; 0x2142 <f_open+0x186>
    2140:	38 c2       	rjmp	.+1136   	; 0x25b2 <f_open+0x5f6>
    2142:	ad a1       	ldd	r26, Y+37	; 0x25
    2144:	be a1       	ldd	r27, Y+38	; 0x26
    2146:	2c 91       	ld	r18, X
    2148:	25 3e       	cpi	r18, 0xE5	; 229
    214a:	11 f4       	brne	.+4      	; 0x2150 <f_open+0x194>
    214c:	e5 e0       	ldi	r30, 0x05	; 5
    214e:	ec 93       	st	X, r30
    2150:	f8 e0       	ldi	r31, 0x08	; 8
    2152:	8f 16       	cp	r8, r31
    2154:	91 04       	cpc	r9, r1
    2156:	19 f4       	brne	.+6      	; 0x215e <f_open+0x1a2>
    2158:	09 2f       	mov	r16, r25
    215a:	00 0f       	add	r16, r16
    215c:	00 0f       	add	r16, r16
    215e:	90 2f       	mov	r25, r16
    2160:	93 70       	andi	r25, 0x03	; 3
    2162:	91 30       	cpi	r25, 0x01	; 1
    2164:	09 f4       	brne	.+2      	; 0x2168 <f_open+0x1ac>
    2166:	80 61       	ori	r24, 0x10	; 16
    2168:	90 2f       	mov	r25, r16
    216a:	9c 70       	andi	r25, 0x0C	; 12
    216c:	94 30       	cpi	r25, 0x04	; 4
    216e:	09 f4       	brne	.+2      	; 0x2172 <f_open+0x1b6>
    2170:	88 60       	ori	r24, 0x08	; 8
    2172:	ad a1       	ldd	r26, Y+37	; 0x25
    2174:	be a1       	ldd	r27, Y+38	; 0x26
    2176:	1b 96       	adiw	r26, 0x0b	; 11
    2178:	8c 93       	st	X, r24
    217a:	6a 2d       	mov	r22, r10
    217c:	77 2d       	mov	r23, r7
    217e:	ce 01       	movw	r24, r28
    2180:	01 96       	adiw	r24, 0x01	; 1
    2182:	99 da       	rcall	.-2766   	; 0x16b6 <dir_sdi>
    2184:	81 11       	cpse	r24, r1
    2186:	db c1       	rjmp	.+950    	; 0x253e <f_open+0x582>
    2188:	4f 85       	ldd	r20, Y+15	; 0x0f
    218a:	58 89       	ldd	r21, Y+16	; 0x10
    218c:	69 89       	ldd	r22, Y+17	; 0x11
    218e:	7a 89       	ldd	r23, Y+18	; 0x12
    2190:	89 81       	ldd	r24, Y+1	; 0x01
    2192:	9a 81       	ldd	r25, Y+2	; 0x02
    2194:	0e 94 9f 05 	call	0xb3e	; 0xb3e <move_window>
    2198:	81 11       	cpse	r24, r1
    219a:	d1 c1       	rjmp	.+930    	; 0x253e <f_open+0x582>
    219c:	6b 89       	ldd	r22, Y+19	; 0x13
    219e:	7c 89       	ldd	r23, Y+20	; 0x14
    21a0:	fb 01       	movw	r30, r22
    21a2:	80 81       	ld	r24, Z
    21a4:	88 23       	and	r24, r24
    21a6:	d1 f0       	breq	.+52     	; 0x21dc <f_open+0x220>
    21a8:	83 85       	ldd	r24, Z+11	; 0x0b
    21aa:	83 fd       	sbrc	r24, 3
    21ac:	0f c0       	rjmp	.+30     	; 0x21cc <f_open+0x210>
    21ae:	4d 89       	ldd	r20, Y+21	; 0x15
    21b0:	5e 89       	ldd	r21, Y+22	; 0x16
    21b2:	da 01       	movw	r26, r20
    21b4:	9b 01       	movw	r18, r22
    21b6:	25 5f       	subi	r18, 0xF5	; 245
    21b8:	3f 4f       	sbci	r19, 0xFF	; 255
    21ba:	04 c0       	rjmp	.+8      	; 0x21c4 <f_open+0x208>
    21bc:	e2 17       	cp	r30, r18
    21be:	f3 07       	cpc	r31, r19
    21c0:	09 f4       	brne	.+2      	; 0x21c4 <f_open+0x208>
    21c2:	b7 c1       	rjmp	.+878    	; 0x2532 <f_open+0x576>
    21c4:	91 91       	ld	r25, Z+
    21c6:	8d 91       	ld	r24, X+
    21c8:	98 17       	cp	r25, r24
    21ca:	c1 f3       	breq	.-16     	; 0x21bc <f_open+0x200>
    21cc:	6a 2d       	mov	r22, r10
    21ce:	77 2d       	mov	r23, r7
    21d0:	ce 01       	movw	r24, r28
    21d2:	01 96       	adiw	r24, 0x01	; 1
    21d4:	69 dd       	rcall	.-1326   	; 0x1ca8 <dir_next>
    21d6:	88 23       	and	r24, r24
    21d8:	b9 f2       	breq	.-82     	; 0x2188 <f_open+0x1cc>
    21da:	b1 c1       	rjmp	.+866    	; 0x253e <f_open+0x582>
    21dc:	ed 89       	ldd	r30, Y+21	; 0x15
    21de:	fe 89       	ldd	r31, Y+22	; 0x16
    21e0:	93 85       	ldd	r25, Z+11	; 0x0b
    21e2:	92 fd       	sbrc	r25, 2
    21e4:	fe c1       	rjmp	.+1020   	; 0x25e2 <f_open+0x626>
    21e6:	85 e0       	ldi	r24, 0x05	; 5
    21e8:	01 c2       	rjmp	.+1026   	; 0x25ec <f_open+0x630>
    21ea:	db 01       	movw	r26, r22
    21ec:	1b 96       	adiw	r26, 0x0b	; 11
    21ee:	8c 91       	ld	r24, X
    21f0:	84 ff       	sbrs	r24, 4
    21f2:	f9 c1       	rjmp	.+1010   	; 0x25e6 <f_open+0x62a>
    21f4:	89 81       	ldd	r24, Y+1	; 0x01
    21f6:	9a 81       	ldd	r25, Y+2	; 0x02
    21f8:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ld_clust>
    21fc:	6f 83       	std	Y+7, r22	; 0x07
    21fe:	78 87       	std	Y+8, r23	; 0x08
    2200:	89 87       	std	Y+9, r24	; 0x09
    2202:	9a 87       	std	Y+10, r25	; 0x0a
    2204:	3c cf       	rjmp	.-392    	; 0x207e <f_open+0xc2>
    2206:	81 11       	cpse	r24, r1
    2208:	de c1       	rjmp	.+956    	; 0x25c6 <f_open+0x60a>
    220a:	44 c0       	rjmp	.+136    	; 0x2294 <f_open+0x2d8>
    220c:	60 e0       	ldi	r22, 0x00	; 0
    220e:	70 e0       	ldi	r23, 0x00	; 0
    2210:	ce 01       	movw	r24, r28
    2212:	01 96       	adiw	r24, 0x01	; 1
    2214:	50 da       	rcall	.-2912   	; 0x16b6 <dir_sdi>
    2216:	81 11       	cpse	r24, r1
    2218:	f5 c1       	rjmp	.+1002   	; 0x2604 <f_open+0x648>
    221a:	4f 85       	ldd	r20, Y+15	; 0x0f
    221c:	58 89       	ldd	r21, Y+16	; 0x10
    221e:	69 89       	ldd	r22, Y+17	; 0x11
    2220:	7a 89       	ldd	r23, Y+18	; 0x12
    2222:	89 81       	ldd	r24, Y+1	; 0x01
    2224:	9a 81       	ldd	r25, Y+2	; 0x02
    2226:	0e 94 9f 05 	call	0xb3e	; 0xb3e <move_window>
    222a:	81 11       	cpse	r24, r1
    222c:	eb c1       	rjmp	.+982    	; 0x2604 <f_open+0x648>
    222e:	eb 89       	ldd	r30, Y+19	; 0x13
    2230:	fc 89       	ldd	r31, Y+20	; 0x14
    2232:	80 81       	ld	r24, Z
    2234:	85 3e       	cpi	r24, 0xE5	; 229
    2236:	51 f0       	breq	.+20     	; 0x224c <f_open+0x290>
    2238:	88 23       	and	r24, r24
    223a:	41 f0       	breq	.+16     	; 0x224c <f_open+0x290>
    223c:	61 e0       	ldi	r22, 0x01	; 1
    223e:	70 e0       	ldi	r23, 0x00	; 0
    2240:	ce 01       	movw	r24, r28
    2242:	01 96       	adiw	r24, 0x01	; 1
    2244:	31 dd       	rcall	.-1438   	; 0x1ca8 <dir_next>
    2246:	88 23       	and	r24, r24
    2248:	41 f3       	breq	.-48     	; 0x221a <f_open+0x25e>
    224a:	dc c1       	rjmp	.+952    	; 0x2604 <f_open+0x648>
    224c:	4f 85       	ldd	r20, Y+15	; 0x0f
    224e:	58 89       	ldd	r21, Y+16	; 0x10
    2250:	69 89       	ldd	r22, Y+17	; 0x11
    2252:	7a 89       	ldd	r23, Y+18	; 0x12
    2254:	89 81       	ldd	r24, Y+1	; 0x01
    2256:	9a 81       	ldd	r25, Y+2	; 0x02
    2258:	0e 94 9f 05 	call	0xb3e	; 0xb3e <move_window>
    225c:	81 11       	cpse	r24, r1
    225e:	b9 c1       	rjmp	.+882    	; 0x25d2 <f_open+0x616>
    2260:	eb 89       	ldd	r30, Y+19	; 0x13
    2262:	fc 89       	ldd	r31, Y+20	; 0x14
    2264:	cf 01       	movw	r24, r30
    2266:	80 96       	adiw	r24, 0x20	; 32
    2268:	11 92       	st	Z+, r1
    226a:	e8 17       	cp	r30, r24
    226c:	f9 07       	cpc	r31, r25
    226e:	e1 f7       	brne	.-8      	; 0x2268 <f_open+0x2ac>
    2270:	6d 89       	ldd	r22, Y+21	; 0x15
    2272:	7e 89       	ldd	r23, Y+22	; 0x16
    2274:	4b e0       	ldi	r20, 0x0B	; 11
    2276:	50 e0       	ldi	r21, 0x00	; 0
    2278:	8b 89       	ldd	r24, Y+19	; 0x13
    227a:	9c 89       	ldd	r25, Y+20	; 0x14
    227c:	0e 94 cf 04 	call	0x99e	; 0x99e <mem_cpy>
    2280:	e9 81       	ldd	r30, Y+1	; 0x01
    2282:	fa 81       	ldd	r31, Y+2	; 0x02
    2284:	81 e0       	ldi	r24, 0x01	; 1
    2286:	84 83       	std	Z+4, r24	; 0x04
    2288:	bd a5       	ldd	r27, Y+45	; 0x2d
    228a:	b8 60       	ori	r27, 0x08	; 8
    228c:	bd a7       	std	Y+45, r27	; 0x2d
    228e:	eb 88       	ldd	r14, Y+19	; 0x13
    2290:	fc 88       	ldd	r15, Y+20	; 0x14
    2292:	08 c0       	rjmp	.+16     	; 0x22a4 <f_open+0x2e8>
    2294:	f7 01       	movw	r30, r14
    2296:	83 85       	ldd	r24, Z+11	; 0x0b
    2298:	81 71       	andi	r24, 0x11	; 17
    229a:	09 f0       	breq	.+2      	; 0x229e <f_open+0x2e2>
    229c:	71 c1       	rjmp	.+738    	; 0x2580 <f_open+0x5c4>
    229e:	f9 a5       	ldd	r31, Y+41	; 0x29
    22a0:	f2 fd       	sbrc	r31, 2
    22a2:	70 c1       	rjmp	.+736    	; 0x2584 <f_open+0x5c8>
    22a4:	2d a5       	ldd	r18, Y+45	; 0x2d
    22a6:	23 ff       	sbrs	r18, 3
    22a8:	d2 c0       	rjmp	.+420    	; 0x244e <f_open+0x492>
    22aa:	d7 01       	movw	r26, r14
    22ac:	1e 96       	adiw	r26, 0x0e	; 14
    22ae:	1c 92       	st	X, r1
    22b0:	1e 97       	sbiw	r26, 0x0e	; 14
    22b2:	1f 96       	adiw	r26, 0x0f	; 15
    22b4:	1c 92       	st	X, r1
    22b6:	1f 97       	sbiw	r26, 0x0f	; 15
    22b8:	91 e2       	ldi	r25, 0x21	; 33
    22ba:	50 96       	adiw	r26, 0x10	; 16
    22bc:	9c 93       	st	X, r25
    22be:	50 97       	sbiw	r26, 0x10	; 16
    22c0:	86 e4       	ldi	r24, 0x46	; 70
    22c2:	51 96       	adiw	r26, 0x11	; 17
    22c4:	8c 93       	st	X, r24
    22c6:	51 97       	sbiw	r26, 0x11	; 17
    22c8:	56 96       	adiw	r26, 0x16	; 22
    22ca:	1c 92       	st	X, r1
    22cc:	56 97       	sbiw	r26, 0x16	; 22
    22ce:	57 96       	adiw	r26, 0x17	; 23
    22d0:	1c 92       	st	X, r1
    22d2:	57 97       	sbiw	r26, 0x17	; 23
    22d4:	58 96       	adiw	r26, 0x18	; 24
    22d6:	9c 93       	st	X, r25
    22d8:	58 97       	sbiw	r26, 0x18	; 24
    22da:	59 96       	adiw	r26, 0x19	; 25
    22dc:	8c 93       	st	X, r24
    22de:	59 97       	sbiw	r26, 0x19	; 25
    22e0:	1b 96       	adiw	r26, 0x0b	; 11
    22e2:	1c 92       	st	X, r1
    22e4:	1b 97       	sbiw	r26, 0x0b	; 11
    22e6:	5c 96       	adiw	r26, 0x1c	; 28
    22e8:	1c 92       	st	X, r1
    22ea:	5c 97       	sbiw	r26, 0x1c	; 28
    22ec:	5d 96       	adiw	r26, 0x1d	; 29
    22ee:	1c 92       	st	X, r1
    22f0:	5d 97       	sbiw	r26, 0x1d	; 29
    22f2:	5e 96       	adiw	r26, 0x1e	; 30
    22f4:	1c 92       	st	X, r1
    22f6:	5e 97       	sbiw	r26, 0x1e	; 30
    22f8:	5f 96       	adiw	r26, 0x1f	; 31
    22fa:	1c 92       	st	X, r1
    22fc:	c9 80       	ldd	r12, Y+1	; 0x01
    22fe:	da 80       	ldd	r13, Y+2	; 0x02
    2300:	b7 01       	movw	r22, r14
    2302:	c6 01       	movw	r24, r12
    2304:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ld_clust>
    2308:	4b 01       	movw	r8, r22
    230a:	5c 01       	movw	r10, r24
    230c:	f7 01       	movw	r30, r14
    230e:	12 8e       	std	Z+26, r1	; 0x1a
    2310:	13 8e       	std	Z+27, r1	; 0x1b
    2312:	14 8a       	std	Z+20, r1	; 0x14
    2314:	15 8a       	std	Z+21, r1	; 0x15
    2316:	81 e0       	ldi	r24, 0x01	; 1
    2318:	d6 01       	movw	r26, r12
    231a:	14 96       	adiw	r26, 0x04	; 4
    231c:	8c 93       	st	X, r24
    231e:	14 97       	sbiw	r26, 0x04	; 4
    2320:	81 14       	cp	r8, r1
    2322:	91 04       	cpc	r9, r1
    2324:	a1 04       	cpc	r10, r1
    2326:	b1 04       	cpc	r11, r1
    2328:	09 f4       	brne	.+2      	; 0x232c <f_open+0x370>
    232a:	91 c0       	rjmp	.+290    	; 0x244e <f_open+0x492>
    232c:	9a 96       	adiw	r26, 0x2a	; 42
    232e:	2d 91       	ld	r18, X+
    2330:	3d 91       	ld	r19, X+
    2332:	4d 91       	ld	r20, X+
    2334:	5c 91       	ld	r21, X
    2336:	9d 97       	sbiw	r26, 0x2d	; 45
    2338:	29 a7       	std	Y+41, r18	; 0x29
    233a:	3a a7       	std	Y+42, r19	; 0x2a
    233c:	4b a7       	std	Y+43, r20	; 0x2b
    233e:	5c a7       	std	Y+44, r21	; 0x2c
    2340:	b2 e0       	ldi	r27, 0x02	; 2
    2342:	8b 16       	cp	r8, r27
    2344:	91 04       	cpc	r9, r1
    2346:	a1 04       	cpc	r10, r1
    2348:	b1 04       	cpc	r11, r1
    234a:	08 f4       	brcc	.+2      	; 0x234e <f_open+0x392>
    234c:	20 c1       	rjmp	.+576    	; 0x258e <f_open+0x5d2>
    234e:	f6 01       	movw	r30, r12
    2350:	82 89       	ldd	r24, Z+18	; 0x12
    2352:	93 89       	ldd	r25, Z+19	; 0x13
    2354:	a4 89       	ldd	r26, Z+20	; 0x14
    2356:	b5 89       	ldd	r27, Z+21	; 0x15
    2358:	88 16       	cp	r8, r24
    235a:	99 06       	cpc	r9, r25
    235c:	aa 06       	cpc	r10, r26
    235e:	bb 06       	cpc	r11, r27
    2360:	08 f0       	brcs	.+2      	; 0x2364 <f_open+0x3a8>
    2362:	17 c1       	rjmp	.+558    	; 0x2592 <f_open+0x5d6>
    2364:	8d a2       	std	Y+37, r8	; 0x25
    2366:	9e a2       	std	Y+38, r9	; 0x26
    2368:	af a2       	std	Y+39, r10	; 0x27
    236a:	b8 a6       	std	Y+40, r11	; 0x28
    236c:	3f c0       	rjmp	.+126    	; 0x23ec <f_open+0x430>
    236e:	4d a1       	ldd	r20, Y+37	; 0x25
    2370:	5e a1       	ldd	r21, Y+38	; 0x26
    2372:	6f a1       	ldd	r22, Y+39	; 0x27
    2374:	78 a5       	ldd	r23, Y+40	; 0x28
    2376:	c6 01       	movw	r24, r12
    2378:	97 d8       	rcall	.-3794   	; 0x14a8 <get_fat>
    237a:	2b 01       	movw	r4, r22
    237c:	3c 01       	movw	r6, r24
    237e:	61 15       	cp	r22, r1
    2380:	71 05       	cpc	r23, r1
    2382:	81 05       	cpc	r24, r1
    2384:	91 05       	cpc	r25, r1
    2386:	09 f4       	brne	.+2      	; 0x238a <f_open+0x3ce>
    2388:	40 c0       	rjmp	.+128    	; 0x240a <f_open+0x44e>
    238a:	61 30       	cpi	r22, 0x01	; 1
    238c:	71 05       	cpc	r23, r1
    238e:	81 05       	cpc	r24, r1
    2390:	91 05       	cpc	r25, r1
    2392:	09 f4       	brne	.+2      	; 0x2396 <f_open+0x3da>
    2394:	00 c1       	rjmp	.+512    	; 0x2596 <f_open+0x5da>
    2396:	6f 3f       	cpi	r22, 0xFF	; 255
    2398:	7f 4f       	sbci	r23, 0xFF	; 255
    239a:	8f 4f       	sbci	r24, 0xFF	; 255
    239c:	9f 4f       	sbci	r25, 0xFF	; 255
    239e:	09 f4       	brne	.+2      	; 0x23a2 <f_open+0x3e6>
    23a0:	fc c0       	rjmp	.+504    	; 0x259a <f_open+0x5de>
    23a2:	00 e0       	ldi	r16, 0x00	; 0
    23a4:	10 e0       	ldi	r17, 0x00	; 0
    23a6:	98 01       	movw	r18, r16
    23a8:	4d a1       	ldd	r20, Y+37	; 0x25
    23aa:	5e a1       	ldd	r21, Y+38	; 0x26
    23ac:	6f a1       	ldd	r22, Y+39	; 0x27
    23ae:	78 a5       	ldd	r23, Y+40	; 0x28
    23b0:	c6 01       	movw	r24, r12
    23b2:	3b da       	rcall	.-2954   	; 0x182a <put_fat>
    23b4:	81 11       	cpse	r24, r1
    23b6:	f2 c0       	rjmp	.+484    	; 0x259c <f_open+0x5e0>
    23b8:	f6 01       	movw	r30, r12
    23ba:	86 85       	ldd	r24, Z+14	; 0x0e
    23bc:	97 85       	ldd	r25, Z+15	; 0x0f
    23be:	a0 89       	ldd	r26, Z+16	; 0x10
    23c0:	b1 89       	ldd	r27, Z+17	; 0x11
    23c2:	8f 3f       	cpi	r24, 0xFF	; 255
    23c4:	ff ef       	ldi	r31, 0xFF	; 255
    23c6:	9f 07       	cpc	r25, r31
    23c8:	af 07       	cpc	r26, r31
    23ca:	bf 07       	cpc	r27, r31
    23cc:	59 f0       	breq	.+22     	; 0x23e4 <f_open+0x428>
    23ce:	01 96       	adiw	r24, 0x01	; 1
    23d0:	a1 1d       	adc	r26, r1
    23d2:	b1 1d       	adc	r27, r1
    23d4:	f6 01       	movw	r30, r12
    23d6:	86 87       	std	Z+14, r24	; 0x0e
    23d8:	97 87       	std	Z+15, r25	; 0x0f
    23da:	a0 8b       	std	Z+16, r26	; 0x10
    23dc:	b1 8b       	std	Z+17, r27	; 0x11
    23de:	85 81       	ldd	r24, Z+5	; 0x05
    23e0:	81 60       	ori	r24, 0x01	; 1
    23e2:	85 83       	std	Z+5, r24	; 0x05
    23e4:	4d a2       	std	Y+37, r4	; 0x25
    23e6:	5e a2       	std	Y+38, r5	; 0x26
    23e8:	6f a2       	std	Y+39, r6	; 0x27
    23ea:	78 a6       	std	Y+40, r7	; 0x28
    23ec:	f6 01       	movw	r30, r12
    23ee:	82 89       	ldd	r24, Z+18	; 0x12
    23f0:	93 89       	ldd	r25, Z+19	; 0x13
    23f2:	a4 89       	ldd	r26, Z+20	; 0x14
    23f4:	b5 89       	ldd	r27, Z+21	; 0x15
    23f6:	2d a1       	ldd	r18, Y+37	; 0x25
    23f8:	3e a1       	ldd	r19, Y+38	; 0x26
    23fa:	4f a1       	ldd	r20, Y+39	; 0x27
    23fc:	58 a5       	ldd	r21, Y+40	; 0x28
    23fe:	28 17       	cp	r18, r24
    2400:	39 07       	cpc	r19, r25
    2402:	4a 07       	cpc	r20, r26
    2404:	5b 07       	cpc	r21, r27
    2406:	08 f4       	brcc	.+2      	; 0x240a <f_open+0x44e>
    2408:	b2 cf       	rjmp	.-156    	; 0x236e <f_open+0x3b2>
    240a:	89 81       	ldd	r24, Y+1	; 0x01
    240c:	9a 81       	ldd	r25, Y+2	; 0x02
    240e:	31 e0       	ldi	r19, 0x01	; 1
    2410:	83 1a       	sub	r8, r19
    2412:	91 08       	sbc	r9, r1
    2414:	a1 08       	sbc	r10, r1
    2416:	b1 08       	sbc	r11, r1
    2418:	dc 01       	movw	r26, r24
    241a:	1a 96       	adiw	r26, 0x0a	; 10
    241c:	8d 92       	st	X+, r8
    241e:	9d 92       	st	X+, r9
    2420:	ad 92       	st	X+, r10
    2422:	bc 92       	st	X, r11
    2424:	1d 97       	sbiw	r26, 0x0d	; 13
    2426:	49 a5       	ldd	r20, Y+41	; 0x29
    2428:	5a a5       	ldd	r21, Y+42	; 0x2a
    242a:	6b a5       	ldd	r22, Y+43	; 0x2b
    242c:	7c a5       	ldd	r23, Y+44	; 0x2c
    242e:	0e 94 9f 05 	call	0xb3e	; 0xb3e <move_window>
    2432:	88 23       	and	r24, r24
    2434:	79 f0       	breq	.+30     	; 0x2454 <f_open+0x498>
    2436:	e9 c0       	rjmp	.+466    	; 0x260a <f_open+0x64e>
    2438:	81 11       	cpse	r24, r1
    243a:	b7 c0       	rjmp	.+366    	; 0x25aa <f_open+0x5ee>
    243c:	f7 01       	movw	r30, r14
    243e:	83 85       	ldd	r24, Z+11	; 0x0b
    2440:	84 fd       	sbrc	r24, 4
    2442:	b0 c0       	rjmp	.+352    	; 0x25a4 <f_open+0x5e8>
    2444:	f9 a5       	ldd	r31, Y+41	; 0x29
    2446:	f1 ff       	sbrs	r31, 1
    2448:	02 c0       	rjmp	.+4      	; 0x244e <f_open+0x492>
    244a:	80 fd       	sbrc	r24, 0
    244c:	ad c0       	rjmp	.+346    	; 0x25a8 <f_open+0x5ec>
    244e:	2d a5       	ldd	r18, Y+45	; 0x2d
    2450:	23 ff       	sbrs	r18, 3
    2452:	03 c0       	rjmp	.+6      	; 0x245a <f_open+0x49e>
    2454:	3d a5       	ldd	r19, Y+45	; 0x2d
    2456:	30 62       	ori	r19, 0x20	; 32
    2458:	3d a7       	std	Y+45, r19	; 0x2d
    245a:	e9 81       	ldd	r30, Y+1	; 0x01
    245c:	fa 81       	ldd	r31, Y+2	; 0x02
    245e:	82 a5       	ldd	r24, Z+42	; 0x2a
    2460:	93 a5       	ldd	r25, Z+43	; 0x2b
    2462:	a4 a5       	ldd	r26, Z+44	; 0x2c
    2464:	b5 a5       	ldd	r27, Z+45	; 0x2d
    2466:	f1 01       	movw	r30, r2
    2468:	82 8f       	std	Z+26, r24	; 0x1a
    246a:	93 8f       	std	Z+27, r25	; 0x1b
    246c:	a4 8f       	std	Z+28, r26	; 0x1c
    246e:	b5 8f       	std	Z+29, r27	; 0x1d
    2470:	f7 8e       	std	Z+31, r15	; 0x1f
    2472:	e6 8e       	std	Z+30, r14	; 0x1e
    2474:	ed a5       	ldd	r30, Y+45	; 0x2d
    2476:	d1 01       	movw	r26, r2
    2478:	14 96       	adiw	r26, 0x04	; 4
    247a:	ec 93       	st	X, r30
    247c:	14 97       	sbiw	r26, 0x04	; 4
    247e:	15 96       	adiw	r26, 0x05	; 5
    2480:	1c 92       	st	X, r1
    2482:	09 81       	ldd	r16, Y+1	; 0x01
    2484:	1a 81       	ldd	r17, Y+2	; 0x02
    2486:	b7 01       	movw	r22, r14
    2488:	c8 01       	movw	r24, r16
    248a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <ld_clust>
    248e:	d1 01       	movw	r26, r2
    2490:	1e 96       	adiw	r26, 0x0e	; 14
    2492:	6d 93       	st	X+, r22
    2494:	7d 93       	st	X+, r23
    2496:	8d 93       	st	X+, r24
    2498:	9c 93       	st	X, r25
    249a:	51 97       	sbiw	r26, 0x11	; 17
    249c:	f7 01       	movw	r30, r14
    249e:	27 8d       	ldd	r18, Z+31	; 0x1f
    24a0:	86 8d       	ldd	r24, Z+30	; 0x1e
    24a2:	90 e0       	ldi	r25, 0x00	; 0
    24a4:	a0 e0       	ldi	r26, 0x00	; 0
    24a6:	b0 e0       	ldi	r27, 0x00	; 0
    24a8:	dc 01       	movw	r26, r24
    24aa:	99 27       	eor	r25, r25
    24ac:	88 27       	eor	r24, r24
    24ae:	b2 2b       	or	r27, r18
    24b0:	24 8d       	ldd	r18, Z+28	; 0x1c
    24b2:	ac 01       	movw	r20, r24
    24b4:	bd 01       	movw	r22, r26
    24b6:	42 2b       	or	r20, r18
    24b8:	25 8d       	ldd	r18, Z+29	; 0x1d
    24ba:	30 e0       	ldi	r19, 0x00	; 0
    24bc:	92 2f       	mov	r25, r18
    24be:	88 27       	eor	r24, r24
    24c0:	a0 e0       	ldi	r26, 0x00	; 0
    24c2:	b0 e0       	ldi	r27, 0x00	; 0
    24c4:	84 2b       	or	r24, r20
    24c6:	95 2b       	or	r25, r21
    24c8:	a6 2b       	or	r26, r22
    24ca:	b7 2b       	or	r27, r23
    24cc:	f1 01       	movw	r30, r2
    24ce:	82 87       	std	Z+10, r24	; 0x0a
    24d0:	93 87       	std	Z+11, r25	; 0x0b
    24d2:	a4 87       	std	Z+12, r26	; 0x0c
    24d4:	b5 87       	std	Z+13, r27	; 0x0d
    24d6:	16 82       	std	Z+6, r1	; 0x06
    24d8:	17 82       	std	Z+7, r1	; 0x07
    24da:	10 86       	std	Z+8, r1	; 0x08
    24dc:	11 86       	std	Z+9, r1	; 0x09
    24de:	16 8a       	std	Z+22, r1	; 0x16
    24e0:	17 8a       	std	Z+23, r1	; 0x17
    24e2:	10 8e       	std	Z+24, r1	; 0x18
    24e4:	11 8e       	std	Z+25, r1	; 0x19
    24e6:	11 83       	std	Z+1, r17	; 0x01
    24e8:	00 83       	st	Z, r16
    24ea:	d8 01       	movw	r26, r16
    24ec:	16 96       	adiw	r26, 0x06	; 6
    24ee:	8d 91       	ld	r24, X+
    24f0:	9c 91       	ld	r25, X
    24f2:	17 97       	sbiw	r26, 0x07	; 7
    24f4:	93 83       	std	Z+3, r25	; 0x03
    24f6:	82 83       	std	Z+2, r24	; 0x02
    24f8:	80 e0       	ldi	r24, 0x00	; 0
    24fa:	87 c0       	rjmp	.+270    	; 0x260a <f_open+0x64e>
    24fc:	89 e0       	ldi	r24, 0x09	; 9
    24fe:	85 c0       	rjmp	.+266    	; 0x260a <f_open+0x64e>
    2500:	e8 e0       	ldi	r30, 0x08	; 8
    2502:	8e 16       	cp	r8, r30
    2504:	91 04       	cpc	r9, r1
    2506:	09 f4       	brne	.+2      	; 0x250a <f_open+0x54e>
    2508:	e7 cd       	rjmp	.-1074   	; 0x20d8 <f_open+0x11c>
    250a:	6f c0       	rjmp	.+222    	; 0x25ea <f_open+0x62e>
    250c:	c9 01       	movw	r24, r18
    250e:	2f eb       	ldi	r18, 0xBF	; 191
    2510:	21 0f       	add	r18, r17
    2512:	2a 31       	cpi	r18, 0x1A	; 26
    2514:	08 f4       	brcc	.+2      	; 0x2518 <f_open+0x55c>
    2516:	00 ce       	rjmp	.-1024   	; 0x2118 <f_open+0x15c>
    2518:	01 ce       	rjmp	.-1022   	; 0x211c <f_open+0x160>
    251a:	6b 01       	movw	r12, r22
    251c:	c8 0e       	add	r12, r24
    251e:	d9 1e       	adc	r13, r25
    2520:	90 2f       	mov	r25, r16
    2522:	84 2d       	mov	r24, r4
    2524:	0b ce       	rjmp	.-1002   	; 0x213c <f_open+0x180>
    2526:	6b 01       	movw	r12, r22
    2528:	c8 0e       	add	r12, r24
    252a:	d9 1e       	adc	r13, r25
    252c:	90 2f       	mov	r25, r16
    252e:	84 e0       	ldi	r24, 0x04	; 4
    2530:	05 ce       	rjmp	.-1014   	; 0x213c <f_open+0x180>
    2532:	da 01       	movw	r26, r20
    2534:	1b 96       	adiw	r26, 0x0b	; 11
    2536:	8c 91       	ld	r24, X
    2538:	82 ff       	sbrs	r24, 2
    253a:	57 ce       	rjmp	.-850    	; 0x21ea <f_open+0x22e>
    253c:	0d c0       	rjmp	.+26     	; 0x2558 <f_open+0x59c>
    253e:	ed 89       	ldd	r30, Y+21	; 0x15
    2540:	fe 89       	ldd	r31, Y+22	; 0x16
    2542:	93 85       	ldd	r25, Z+11	; 0x0b
    2544:	84 30       	cpi	r24, 0x04	; 4
    2546:	09 f4       	brne	.+2      	; 0x254a <f_open+0x58e>
    2548:	4c ce       	rjmp	.-872    	; 0x21e2 <f_open+0x226>
    254a:	eb 88       	ldd	r14, Y+19	; 0x13
    254c:	fc 88       	ldd	r15, Y+20	; 0x14
    254e:	99 a5       	ldd	r25, Y+41	; 0x29
    2550:	9c 71       	andi	r25, 0x1C	; 28
    2552:	09 f0       	breq	.+2      	; 0x2556 <f_open+0x59a>
    2554:	58 ce       	rjmp	.-848    	; 0x2206 <f_open+0x24a>
    2556:	70 cf       	rjmp	.-288    	; 0x2438 <f_open+0x47c>
    2558:	7b 01       	movw	r14, r22
    255a:	67 2b       	or	r22, r23
    255c:	29 f4       	brne	.+10     	; 0x2568 <f_open+0x5ac>
    255e:	09 c0       	rjmp	.+18     	; 0x2572 <f_open+0x5b6>
    2560:	19 a5       	ldd	r17, Y+41	; 0x29
    2562:	1c 71       	andi	r17, 0x1C	; 28
    2564:	81 f5       	brne	.+96     	; 0x25c6 <f_open+0x60a>
    2566:	21 c0       	rjmp	.+66     	; 0x25aa <f_open+0x5ee>
    2568:	89 a5       	ldd	r24, Y+41	; 0x29
    256a:	8c 71       	andi	r24, 0x1C	; 28
    256c:	09 f0       	breq	.+2      	; 0x2570 <f_open+0x5b4>
    256e:	92 ce       	rjmp	.-732    	; 0x2294 <f_open+0x2d8>
    2570:	65 cf       	rjmp	.-310    	; 0x243c <f_open+0x480>
    2572:	19 a5       	ldd	r17, Y+41	; 0x29
    2574:	1c 71       	andi	r17, 0x1C	; 28
    2576:	51 f5       	brne	.+84     	; 0x25cc <f_open+0x610>
    2578:	e1 2c       	mov	r14, r1
    257a:	f1 2c       	mov	r15, r1
    257c:	86 e0       	ldi	r24, 0x06	; 6
    257e:	15 c0       	rjmp	.+42     	; 0x25aa <f_open+0x5ee>
    2580:	87 e0       	ldi	r24, 0x07	; 7
    2582:	01 c0       	rjmp	.+2      	; 0x2586 <f_open+0x5ca>
    2584:	88 e0       	ldi	r24, 0x08	; 8
    2586:	88 23       	and	r24, r24
    2588:	09 f4       	brne	.+2      	; 0x258c <f_open+0x5d0>
    258a:	61 cf       	rjmp	.-318    	; 0x244e <f_open+0x492>
    258c:	3e c0       	rjmp	.+124    	; 0x260a <f_open+0x64e>
    258e:	82 e0       	ldi	r24, 0x02	; 2
    2590:	05 c0       	rjmp	.+10     	; 0x259c <f_open+0x5e0>
    2592:	82 e0       	ldi	r24, 0x02	; 2
    2594:	03 c0       	rjmp	.+6      	; 0x259c <f_open+0x5e0>
    2596:	82 e0       	ldi	r24, 0x02	; 2
    2598:	01 c0       	rjmp	.+2      	; 0x259c <f_open+0x5e0>
    259a:	81 e0       	ldi	r24, 0x01	; 1
    259c:	88 23       	and	r24, r24
    259e:	09 f4       	brne	.+2      	; 0x25a2 <f_open+0x5e6>
    25a0:	59 cf       	rjmp	.-334    	; 0x2454 <f_open+0x498>
    25a2:	33 c0       	rjmp	.+102    	; 0x260a <f_open+0x64e>
    25a4:	84 e0       	ldi	r24, 0x04	; 4
    25a6:	01 c0       	rjmp	.+2      	; 0x25aa <f_open+0x5ee>
    25a8:	87 e0       	ldi	r24, 0x07	; 7
    25aa:	88 23       	and	r24, r24
    25ac:	09 f4       	brne	.+2      	; 0x25b0 <f_open+0x5f4>
    25ae:	62 cf       	rjmp	.-316    	; 0x2474 <f_open+0x4b8>
    25b0:	2c c0       	rjmp	.+88     	; 0x260a <f_open+0x64e>
    25b2:	eb 88       	ldd	r14, Y+19	; 0x13
    25b4:	fc 88       	ldd	r15, Y+20	; 0x14
    25b6:	86 e0       	ldi	r24, 0x06	; 6
    25b8:	d3 cf       	rjmp	.-90     	; 0x2560 <f_open+0x5a4>
    25ba:	bd a5       	ldd	r27, Y+45	; 0x2d
    25bc:	b8 60       	ori	r27, 0x08	; 8
    25be:	bd a7       	std	Y+45, r27	; 0x2d
    25c0:	eb 88       	ldd	r14, Y+19	; 0x13
    25c2:	fc 88       	ldd	r15, Y+20	; 0x14
    25c4:	f2 cf       	rjmp	.-28     	; 0x25aa <f_open+0x5ee>
    25c6:	84 30       	cpi	r24, 0x04	; 4
    25c8:	c1 f7       	brne	.-16     	; 0x25ba <f_open+0x5fe>
    25ca:	20 ce       	rjmp	.-960    	; 0x220c <f_open+0x250>
    25cc:	86 e0       	ldi	r24, 0x06	; 6
    25ce:	01 c0       	rjmp	.+2      	; 0x25d2 <f_open+0x616>
    25d0:	87 e0       	ldi	r24, 0x07	; 7
    25d2:	ed a5       	ldd	r30, Y+45	; 0x2d
    25d4:	e8 60       	ori	r30, 0x08	; 8
    25d6:	ed a7       	std	Y+45, r30	; 0x2d
    25d8:	eb 88       	ldd	r14, Y+19	; 0x13
    25da:	fc 88       	ldd	r15, Y+20	; 0x14
    25dc:	e6 cf       	rjmp	.-52     	; 0x25aa <f_open+0x5ee>
    25de:	86 e0       	ldi	r24, 0x06	; 6
    25e0:	05 c0       	rjmp	.+10     	; 0x25ec <f_open+0x630>
    25e2:	84 e0       	ldi	r24, 0x04	; 4
    25e4:	03 c0       	rjmp	.+6      	; 0x25ec <f_open+0x630>
    25e6:	85 e0       	ldi	r24, 0x05	; 5
    25e8:	01 c0       	rjmp	.+2      	; 0x25ec <f_open+0x630>
    25ea:	86 e0       	ldi	r24, 0x06	; 6
    25ec:	eb 88       	ldd	r14, Y+19	; 0x13
    25ee:	fc 88       	ldd	r15, Y+20	; 0x14
    25f0:	99 a5       	ldd	r25, Y+41	; 0x29
    25f2:	9c 71       	andi	r25, 0x1C	; 28
    25f4:	41 f7       	brne	.-48     	; 0x25c6 <f_open+0x60a>
    25f6:	20 cf       	rjmp	.-448    	; 0x2438 <f_open+0x47c>
    25f8:	fd a5       	ldd	r31, Y+45	; 0x2d
    25fa:	f8 60       	ori	r31, 0x08	; 8
    25fc:	fd a7       	std	Y+45, r31	; 0x2d
    25fe:	eb 88       	ldd	r14, Y+19	; 0x13
    2600:	fc 88       	ldd	r15, Y+20	; 0x14
    2602:	d3 cf       	rjmp	.-90     	; 0x25aa <f_open+0x5ee>
    2604:	84 30       	cpi	r24, 0x04	; 4
    2606:	21 f3       	breq	.-56     	; 0x25d0 <f_open+0x614>
    2608:	f7 cf       	rjmp	.-18     	; 0x25f8 <f_open+0x63c>
    260a:	af 96       	adiw	r28, 0x2f	; 47
    260c:	0f b6       	in	r0, 0x3f	; 63
    260e:	f8 94       	cli
    2610:	de bf       	out	0x3e, r29	; 62
    2612:	0f be       	out	0x3f, r0	; 63
    2614:	cd bf       	out	0x3d, r28	; 61
    2616:	df 91       	pop	r29
    2618:	cf 91       	pop	r28
    261a:	1f 91       	pop	r17
    261c:	0f 91       	pop	r16
    261e:	ff 90       	pop	r15
    2620:	ef 90       	pop	r14
    2622:	df 90       	pop	r13
    2624:	cf 90       	pop	r12
    2626:	bf 90       	pop	r11
    2628:	af 90       	pop	r10
    262a:	9f 90       	pop	r9
    262c:	8f 90       	pop	r8
    262e:	7f 90       	pop	r7
    2630:	6f 90       	pop	r6
    2632:	5f 90       	pop	r5
    2634:	4f 90       	pop	r4
    2636:	3f 90       	pop	r3
    2638:	2f 90       	pop	r2
    263a:	08 95       	ret

0000263c <f_write>:
    263c:	3f 92       	push	r3
    263e:	4f 92       	push	r4
    2640:	5f 92       	push	r5
    2642:	6f 92       	push	r6
    2644:	7f 92       	push	r7
    2646:	8f 92       	push	r8
    2648:	9f 92       	push	r9
    264a:	af 92       	push	r10
    264c:	bf 92       	push	r11
    264e:	cf 92       	push	r12
    2650:	df 92       	push	r13
    2652:	ef 92       	push	r14
    2654:	ff 92       	push	r15
    2656:	0f 93       	push	r16
    2658:	1f 93       	push	r17
    265a:	cf 93       	push	r28
    265c:	df 93       	push	r29
    265e:	00 d0       	rcall	.+0      	; 0x2660 <f_write+0x24>
    2660:	00 d0       	rcall	.+0      	; 0x2662 <f_write+0x26>
    2662:	00 d0       	rcall	.+0      	; 0x2664 <f_write+0x28>
    2664:	cd b7       	in	r28, 0x3d	; 61
    2666:	de b7       	in	r29, 0x3e	; 62
    2668:	9e 83       	std	Y+6, r25	; 0x06
    266a:	8d 83       	std	Y+5, r24	; 0x05
    266c:	4b 01       	movw	r8, r22
    266e:	6a 01       	movw	r12, r20
    2670:	59 01       	movw	r10, r18
    2672:	d9 01       	movw	r26, r18
    2674:	1d 92       	st	X+, r1
    2676:	1c 92       	st	X, r1
    2678:	0e 94 43 06 	call	0xc86	; 0xc86 <validate>
    267c:	81 11       	cpse	r24, r1
    267e:	c7 c1       	rjmp	.+910    	; 0x2a0e <f_write+0x3d2>
    2680:	ed 81       	ldd	r30, Y+5	; 0x05
    2682:	fe 81       	ldd	r31, Y+6	; 0x06
    2684:	85 81       	ldd	r24, Z+5	; 0x05
    2686:	81 11       	cpse	r24, r1
    2688:	c2 c1       	rjmp	.+900    	; 0x2a0e <f_write+0x3d2>
    268a:	84 81       	ldd	r24, Z+4	; 0x04
    268c:	81 ff       	sbrs	r24, 1
    268e:	be c1       	rjmp	.+892    	; 0x2a0c <f_write+0x3d0>
    2690:	86 81       	ldd	r24, Z+6	; 0x06
    2692:	97 81       	ldd	r25, Z+7	; 0x07
    2694:	a0 85       	ldd	r26, Z+8	; 0x08
    2696:	b1 85       	ldd	r27, Z+9	; 0x09
    2698:	ac 01       	movw	r20, r24
    269a:	bd 01       	movw	r22, r26
    269c:	4c 0d       	add	r20, r12
    269e:	5d 1d       	adc	r21, r13
    26a0:	61 1d       	adc	r22, r1
    26a2:	71 1d       	adc	r23, r1
    26a4:	48 17       	cp	r20, r24
    26a6:	59 07       	cpc	r21, r25
    26a8:	6a 07       	cpc	r22, r26
    26aa:	7b 07       	cpc	r23, r27
    26ac:	08 f4       	brcc	.+2      	; 0x26b0 <f_write+0x74>
    26ae:	91 c1       	rjmp	.+802    	; 0x29d2 <f_write+0x396>
    26b0:	c1 14       	cp	r12, r1
    26b2:	d1 04       	cpc	r13, r1
    26b4:	09 f4       	brne	.+2      	; 0x26b8 <f_write+0x7c>
    26b6:	8d c1       	rjmp	.+794    	; 0x29d2 <f_write+0x396>
    26b8:	b0 96       	adiw	r30, 0x20	; 32
    26ba:	fc 83       	std	Y+4, r31	; 0x04
    26bc:	eb 83       	std	Y+3, r30	; 0x03
    26be:	ed 81       	ldd	r30, Y+5	; 0x05
    26c0:	fe 81       	ldd	r31, Y+6	; 0x06
    26c2:	86 81       	ldd	r24, Z+6	; 0x06
    26c4:	97 81       	ldd	r25, Z+7	; 0x07
    26c6:	a0 85       	ldd	r26, Z+8	; 0x08
    26c8:	b1 85       	ldd	r27, Z+9	; 0x09
    26ca:	ac 01       	movw	r20, r24
    26cc:	bd 01       	movw	r22, r26
    26ce:	5f 70       	andi	r21, 0x0F	; 15
    26d0:	66 27       	eor	r22, r22
    26d2:	77 27       	eor	r23, r23
    26d4:	45 2b       	or	r20, r21
    26d6:	46 2b       	or	r20, r22
    26d8:	47 2b       	or	r20, r23
    26da:	09 f0       	breq	.+2      	; 0x26de <f_write+0xa2>
    26dc:	39 c1       	rjmp	.+626    	; 0x2950 <f_write+0x314>
    26de:	e0 80       	ld	r14, Z
    26e0:	f1 80       	ldd	r15, Z+1	; 0x01
    26e2:	f7 01       	movw	r30, r14
    26e4:	22 81       	ldd	r18, Z+2	; 0x02
    26e6:	21 50       	subi	r18, 0x01	; 1
    26e8:	ac 01       	movw	r20, r24
    26ea:	bd 01       	movw	r22, r26
    26ec:	03 2e       	mov	r0, r19
    26ee:	3c e0       	ldi	r19, 0x0C	; 12
    26f0:	76 95       	lsr	r23
    26f2:	67 95       	ror	r22
    26f4:	57 95       	ror	r21
    26f6:	47 95       	ror	r20
    26f8:	3a 95       	dec	r19
    26fa:	d1 f7       	brne	.-12     	; 0x26f0 <f_write+0xb4>
    26fc:	30 2d       	mov	r19, r0
    26fe:	32 2e       	mov	r3, r18
    2700:	34 22       	and	r3, r20
    2702:	09 f0       	breq	.+2      	; 0x2706 <f_write+0xca>
    2704:	52 c0       	rjmp	.+164    	; 0x27aa <f_write+0x16e>
    2706:	89 2b       	or	r24, r25
    2708:	8a 2b       	or	r24, r26
    270a:	8b 2b       	or	r24, r27
    270c:	99 f4       	brne	.+38     	; 0x2734 <f_write+0xf8>
    270e:	ad 81       	ldd	r26, Y+5	; 0x05
    2710:	be 81       	ldd	r27, Y+6	; 0x06
    2712:	1e 96       	adiw	r26, 0x0e	; 14
    2714:	6d 91       	ld	r22, X+
    2716:	7d 91       	ld	r23, X+
    2718:	8d 91       	ld	r24, X+
    271a:	9c 91       	ld	r25, X
    271c:	51 97       	sbiw	r26, 0x11	; 17
    271e:	61 15       	cp	r22, r1
    2720:	71 05       	cpc	r23, r1
    2722:	81 05       	cpc	r24, r1
    2724:	91 05       	cpc	r25, r1
    2726:	a1 f4       	brne	.+40     	; 0x2750 <f_write+0x114>
    2728:	40 e0       	ldi	r20, 0x00	; 0
    272a:	50 e0       	ldi	r21, 0x00	; 0
    272c:	ba 01       	movw	r22, r20
    272e:	c7 01       	movw	r24, r14
    2730:	ac d9       	rcall	.-3240   	; 0x1a8a <create_chain>
    2732:	08 c0       	rjmp	.+16     	; 0x2744 <f_write+0x108>
    2734:	ed 81       	ldd	r30, Y+5	; 0x05
    2736:	fe 81       	ldd	r31, Y+6	; 0x06
    2738:	42 89       	ldd	r20, Z+18	; 0x12
    273a:	53 89       	ldd	r21, Z+19	; 0x13
    273c:	64 89       	ldd	r22, Z+20	; 0x14
    273e:	75 89       	ldd	r23, Z+21	; 0x15
    2740:	c7 01       	movw	r24, r14
    2742:	a3 d9       	rcall	.-3258   	; 0x1a8a <create_chain>
    2744:	61 15       	cp	r22, r1
    2746:	71 05       	cpc	r23, r1
    2748:	81 05       	cpc	r24, r1
    274a:	91 05       	cpc	r25, r1
    274c:	09 f4       	brne	.+2      	; 0x2750 <f_write+0x114>
    274e:	41 c1       	rjmp	.+642    	; 0x29d2 <f_write+0x396>
    2750:	61 30       	cpi	r22, 0x01	; 1
    2752:	71 05       	cpc	r23, r1
    2754:	81 05       	cpc	r24, r1
    2756:	91 05       	cpc	r25, r1
    2758:	31 f4       	brne	.+12     	; 0x2766 <f_write+0x12a>
    275a:	82 e0       	ldi	r24, 0x02	; 2
    275c:	ad 81       	ldd	r26, Y+5	; 0x05
    275e:	be 81       	ldd	r27, Y+6	; 0x06
    2760:	15 96       	adiw	r26, 0x05	; 5
    2762:	8c 93       	st	X, r24
    2764:	54 c1       	rjmp	.+680    	; 0x2a0e <f_write+0x3d2>
    2766:	6f 3f       	cpi	r22, 0xFF	; 255
    2768:	bf ef       	ldi	r27, 0xFF	; 255
    276a:	7b 07       	cpc	r23, r27
    276c:	8b 07       	cpc	r24, r27
    276e:	9b 07       	cpc	r25, r27
    2770:	29 f4       	brne	.+10     	; 0x277c <f_write+0x140>
    2772:	81 e0       	ldi	r24, 0x01	; 1
    2774:	ed 81       	ldd	r30, Y+5	; 0x05
    2776:	fe 81       	ldd	r31, Y+6	; 0x06
    2778:	85 83       	std	Z+5, r24	; 0x05
    277a:	49 c1       	rjmp	.+658    	; 0x2a0e <f_write+0x3d2>
    277c:	ad 81       	ldd	r26, Y+5	; 0x05
    277e:	be 81       	ldd	r27, Y+6	; 0x06
    2780:	52 96       	adiw	r26, 0x12	; 18
    2782:	6d 93       	st	X+, r22
    2784:	7d 93       	st	X+, r23
    2786:	8d 93       	st	X+, r24
    2788:	9c 93       	st	X, r25
    278a:	55 97       	sbiw	r26, 0x15	; 21
    278c:	1e 96       	adiw	r26, 0x0e	; 14
    278e:	4d 90       	ld	r4, X+
    2790:	5d 90       	ld	r5, X+
    2792:	6d 90       	ld	r6, X+
    2794:	7c 90       	ld	r7, X
    2796:	51 97       	sbiw	r26, 0x11	; 17
    2798:	45 28       	or	r4, r5
    279a:	46 28       	or	r4, r6
    279c:	47 28       	or	r4, r7
    279e:	29 f4       	brne	.+10     	; 0x27aa <f_write+0x16e>
    27a0:	fd 01       	movw	r30, r26
    27a2:	66 87       	std	Z+14, r22	; 0x0e
    27a4:	77 87       	std	Z+15, r23	; 0x0f
    27a6:	80 8b       	std	Z+16, r24	; 0x10
    27a8:	91 8b       	std	Z+17, r25	; 0x11
    27aa:	ad 81       	ldd	r26, Y+5	; 0x05
    27ac:	be 81       	ldd	r27, Y+6	; 0x06
    27ae:	14 96       	adiw	r26, 0x04	; 4
    27b0:	8c 91       	ld	r24, X
    27b2:	14 97       	sbiw	r26, 0x04	; 4
    27b4:	86 ff       	sbrs	r24, 6
    27b6:	1e c0       	rjmp	.+60     	; 0x27f4 <f_write+0x1b8>
    27b8:	56 96       	adiw	r26, 0x16	; 22
    27ba:	2d 91       	ld	r18, X+
    27bc:	3d 91       	ld	r19, X+
    27be:	4d 91       	ld	r20, X+
    27c0:	5c 91       	ld	r21, X
    27c2:	59 97       	sbiw	r26, 0x19	; 25
    27c4:	ed 91       	ld	r30, X+
    27c6:	fc 91       	ld	r31, X
    27c8:	01 e0       	ldi	r16, 0x01	; 1
    27ca:	10 e0       	ldi	r17, 0x00	; 0
    27cc:	6b 81       	ldd	r22, Y+3	; 0x03
    27ce:	7c 81       	ldd	r23, Y+4	; 0x04
    27d0:	81 81       	ldd	r24, Z+1	; 0x01
    27d2:	0e 94 c5 02 	call	0x58a	; 0x58a <disk_write>
    27d6:	88 23       	and	r24, r24
    27d8:	29 f0       	breq	.+10     	; 0x27e4 <f_write+0x1a8>
    27da:	81 e0       	ldi	r24, 0x01	; 1
    27dc:	ed 81       	ldd	r30, Y+5	; 0x05
    27de:	fe 81       	ldd	r31, Y+6	; 0x06
    27e0:	85 83       	std	Z+5, r24	; 0x05
    27e2:	15 c1       	rjmp	.+554    	; 0x2a0e <f_write+0x3d2>
    27e4:	ad 81       	ldd	r26, Y+5	; 0x05
    27e6:	be 81       	ldd	r27, Y+6	; 0x06
    27e8:	14 96       	adiw	r26, 0x04	; 4
    27ea:	8c 91       	ld	r24, X
    27ec:	14 97       	sbiw	r26, 0x04	; 4
    27ee:	8f 7b       	andi	r24, 0xBF	; 191
    27f0:	14 96       	adiw	r26, 0x04	; 4
    27f2:	8c 93       	st	X, r24
    27f4:	ed 81       	ldd	r30, Y+5	; 0x05
    27f6:	fe 81       	ldd	r31, Y+6	; 0x06
    27f8:	01 90       	ld	r0, Z+
    27fa:	f0 81       	ld	r31, Z
    27fc:	e0 2d       	mov	r30, r0
    27fe:	fa 83       	std	Y+2, r31	; 0x02
    2800:	e9 83       	std	Y+1, r30	; 0x01
    2802:	ad 81       	ldd	r26, Y+5	; 0x05
    2804:	be 81       	ldd	r27, Y+6	; 0x06
    2806:	52 96       	adiw	r26, 0x12	; 18
    2808:	4d 91       	ld	r20, X+
    280a:	5d 91       	ld	r21, X+
    280c:	6d 91       	ld	r22, X+
    280e:	7c 91       	ld	r23, X
    2810:	55 97       	sbiw	r26, 0x15	; 21
    2812:	cf 01       	movw	r24, r30
    2814:	0e 94 26 0a 	call	0x144c	; 0x144c <clust2sect>
    2818:	61 15       	cp	r22, r1
    281a:	71 05       	cpc	r23, r1
    281c:	81 05       	cpc	r24, r1
    281e:	91 05       	cpc	r25, r1
    2820:	29 f4       	brne	.+10     	; 0x282c <f_write+0x1f0>
    2822:	82 e0       	ldi	r24, 0x02	; 2
    2824:	ed 81       	ldd	r30, Y+5	; 0x05
    2826:	fe 81       	ldd	r31, Y+6	; 0x06
    2828:	85 83       	std	Z+5, r24	; 0x05
    282a:	f1 c0       	rjmp	.+482    	; 0x2a0e <f_write+0x3d2>
    282c:	2b 01       	movw	r4, r22
    282e:	3c 01       	movw	r6, r24
    2830:	43 0c       	add	r4, r3
    2832:	51 1c       	adc	r5, r1
    2834:	61 1c       	adc	r6, r1
    2836:	71 1c       	adc	r7, r1
    2838:	76 01       	movw	r14, r12
    283a:	ef 2c       	mov	r14, r15
    283c:	ff 24       	eor	r15, r15
    283e:	e6 94       	lsr	r14
    2840:	e6 94       	lsr	r14
    2842:	e6 94       	lsr	r14
    2844:	e6 94       	lsr	r14
    2846:	e1 14       	cp	r14, r1
    2848:	f1 04       	cpc	r15, r1
    284a:	09 f4       	brne	.+2      	; 0x284e <f_write+0x212>
    284c:	4e c0       	rjmp	.+156    	; 0x28ea <f_write+0x2ae>
    284e:	a9 81       	ldd	r26, Y+1	; 0x01
    2850:	ba 81       	ldd	r27, Y+2	; 0x02
    2852:	12 96       	adiw	r26, 0x02	; 2
    2854:	4c 91       	ld	r20, X
    2856:	24 2f       	mov	r18, r20
    2858:	30 e0       	ldi	r19, 0x00	; 0
    285a:	c7 01       	movw	r24, r14
    285c:	83 0d       	add	r24, r3
    285e:	91 1d       	adc	r25, r1
    2860:	28 17       	cp	r18, r24
    2862:	39 07       	cpc	r19, r25
    2864:	18 f4       	brcc	.+6      	; 0x286c <f_write+0x230>
    2866:	79 01       	movw	r14, r18
    2868:	e3 18       	sub	r14, r3
    286a:	f1 08       	sbc	r15, r1
    286c:	87 01       	movw	r16, r14
    286e:	a3 01       	movw	r20, r6
    2870:	92 01       	movw	r18, r4
    2872:	b4 01       	movw	r22, r8
    2874:	e9 81       	ldd	r30, Y+1	; 0x01
    2876:	fa 81       	ldd	r31, Y+2	; 0x02
    2878:	81 81       	ldd	r24, Z+1	; 0x01
    287a:	0e 94 c5 02 	call	0x58a	; 0x58a <disk_write>
    287e:	88 23       	and	r24, r24
    2880:	31 f0       	breq	.+12     	; 0x288e <f_write+0x252>
    2882:	81 e0       	ldi	r24, 0x01	; 1
    2884:	ad 81       	ldd	r26, Y+5	; 0x05
    2886:	be 81       	ldd	r27, Y+6	; 0x06
    2888:	15 96       	adiw	r26, 0x05	; 5
    288a:	8c 93       	st	X, r24
    288c:	c0 c0       	rjmp	.+384    	; 0x2a0e <f_write+0x3d2>
    288e:	ed 81       	ldd	r30, Y+5	; 0x05
    2890:	fe 81       	ldd	r31, Y+6	; 0x06
    2892:	86 89       	ldd	r24, Z+22	; 0x16
    2894:	97 89       	ldd	r25, Z+23	; 0x17
    2896:	a0 8d       	ldd	r26, Z+24	; 0x18
    2898:	b1 8d       	ldd	r27, Z+25	; 0x19
    289a:	84 19       	sub	r24, r4
    289c:	95 09       	sbc	r25, r5
    289e:	a6 09       	sbc	r26, r6
    28a0:	b7 09       	sbc	r27, r7
    28a2:	a7 01       	movw	r20, r14
    28a4:	60 e0       	ldi	r22, 0x00	; 0
    28a6:	70 e0       	ldi	r23, 0x00	; 0
    28a8:	84 17       	cp	r24, r20
    28aa:	95 07       	cpc	r25, r21
    28ac:	a6 07       	cpc	r26, r22
    28ae:	b7 07       	cpc	r27, r23
    28b0:	a8 f4       	brcc	.+42     	; 0x28dc <f_write+0x2a0>
    28b2:	98 2f       	mov	r25, r24
    28b4:	88 27       	eor	r24, r24
    28b6:	92 95       	swap	r25
    28b8:	90 7f       	andi	r25, 0xF0	; 240
    28ba:	b4 01       	movw	r22, r8
    28bc:	68 0f       	add	r22, r24
    28be:	79 1f       	adc	r23, r25
    28c0:	40 e0       	ldi	r20, 0x00	; 0
    28c2:	50 e1       	ldi	r21, 0x10	; 16
    28c4:	8b 81       	ldd	r24, Y+3	; 0x03
    28c6:	9c 81       	ldd	r25, Y+4	; 0x04
    28c8:	0e 94 cf 04 	call	0x99e	; 0x99e <mem_cpy>
    28cc:	ad 81       	ldd	r26, Y+5	; 0x05
    28ce:	be 81       	ldd	r27, Y+6	; 0x06
    28d0:	14 96       	adiw	r26, 0x04	; 4
    28d2:	8c 91       	ld	r24, X
    28d4:	14 97       	sbiw	r26, 0x04	; 4
    28d6:	8f 7b       	andi	r24, 0xBF	; 191
    28d8:	14 96       	adiw	r26, 0x04	; 4
    28da:	8c 93       	st	X, r24
    28dc:	fe 2c       	mov	r15, r14
    28de:	ee 24       	eor	r14, r14
    28e0:	ff 0c       	add	r15, r15
    28e2:	ff 0c       	add	r15, r15
    28e4:	ff 0c       	add	r15, r15
    28e6:	ff 0c       	add	r15, r15
    28e8:	58 c0       	rjmp	.+176    	; 0x299a <f_write+0x35e>
    28ea:	ed 81       	ldd	r30, Y+5	; 0x05
    28ec:	fe 81       	ldd	r31, Y+6	; 0x06
    28ee:	86 89       	ldd	r24, Z+22	; 0x16
    28f0:	97 89       	ldd	r25, Z+23	; 0x17
    28f2:	a0 8d       	ldd	r26, Z+24	; 0x18
    28f4:	b1 8d       	ldd	r27, Z+25	; 0x19
    28f6:	84 15       	cp	r24, r4
    28f8:	95 05       	cpc	r25, r5
    28fa:	a6 05       	cpc	r26, r6
    28fc:	b7 05       	cpc	r27, r7
    28fe:	01 f1       	breq	.+64     	; 0x2940 <f_write+0x304>
    2900:	46 81       	ldd	r20, Z+6	; 0x06
    2902:	57 81       	ldd	r21, Z+7	; 0x07
    2904:	60 85       	ldd	r22, Z+8	; 0x08
    2906:	71 85       	ldd	r23, Z+9	; 0x09
    2908:	82 85       	ldd	r24, Z+10	; 0x0a
    290a:	93 85       	ldd	r25, Z+11	; 0x0b
    290c:	a4 85       	ldd	r26, Z+12	; 0x0c
    290e:	b5 85       	ldd	r27, Z+13	; 0x0d
    2910:	48 17       	cp	r20, r24
    2912:	59 07       	cpc	r21, r25
    2914:	6a 07       	cpc	r22, r26
    2916:	7b 07       	cpc	r23, r27
    2918:	98 f4       	brcc	.+38     	; 0x2940 <f_write+0x304>
    291a:	01 e0       	ldi	r16, 0x01	; 1
    291c:	10 e0       	ldi	r17, 0x00	; 0
    291e:	a3 01       	movw	r20, r6
    2920:	92 01       	movw	r18, r4
    2922:	6b 81       	ldd	r22, Y+3	; 0x03
    2924:	7c 81       	ldd	r23, Y+4	; 0x04
    2926:	a9 81       	ldd	r26, Y+1	; 0x01
    2928:	ba 81       	ldd	r27, Y+2	; 0x02
    292a:	11 96       	adiw	r26, 0x01	; 1
    292c:	8c 91       	ld	r24, X
    292e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <disk_read>
    2932:	88 23       	and	r24, r24
    2934:	29 f0       	breq	.+10     	; 0x2940 <f_write+0x304>
    2936:	81 e0       	ldi	r24, 0x01	; 1
    2938:	ed 81       	ldd	r30, Y+5	; 0x05
    293a:	fe 81       	ldd	r31, Y+6	; 0x06
    293c:	85 83       	std	Z+5, r24	; 0x05
    293e:	67 c0       	rjmp	.+206    	; 0x2a0e <f_write+0x3d2>
    2940:	ad 81       	ldd	r26, Y+5	; 0x05
    2942:	be 81       	ldd	r27, Y+6	; 0x06
    2944:	56 96       	adiw	r26, 0x16	; 22
    2946:	4d 92       	st	X+, r4
    2948:	5d 92       	st	X+, r5
    294a:	6d 92       	st	X+, r6
    294c:	7c 92       	st	X, r7
    294e:	59 97       	sbiw	r26, 0x19	; 25
    2950:	ed 81       	ldd	r30, Y+5	; 0x05
    2952:	fe 81       	ldd	r31, Y+6	; 0x06
    2954:	86 81       	ldd	r24, Z+6	; 0x06
    2956:	97 81       	ldd	r25, Z+7	; 0x07
    2958:	a0 85       	ldd	r26, Z+8	; 0x08
    295a:	b1 85       	ldd	r27, Z+9	; 0x09
    295c:	ac 01       	movw	r20, r24
    295e:	5f 70       	andi	r21, 0x0F	; 15
    2960:	20 e0       	ldi	r18, 0x00	; 0
    2962:	30 e1       	ldi	r19, 0x10	; 16
    2964:	24 1b       	sub	r18, r20
    2966:	35 0b       	sbc	r19, r21
    2968:	76 01       	movw	r14, r12
    296a:	2c 15       	cp	r18, r12
    296c:	3d 05       	cpc	r19, r13
    296e:	08 f4       	brcc	.+2      	; 0x2972 <f_write+0x336>
    2970:	79 01       	movw	r14, r18
    2972:	9f 70       	andi	r25, 0x0F	; 15
    2974:	aa 27       	eor	r26, r26
    2976:	bb 27       	eor	r27, r27
    2978:	80 96       	adiw	r24, 0x20	; 32
    297a:	a7 01       	movw	r20, r14
    297c:	b4 01       	movw	r22, r8
    297e:	2d 81       	ldd	r18, Y+5	; 0x05
    2980:	3e 81       	ldd	r19, Y+6	; 0x06
    2982:	82 0f       	add	r24, r18
    2984:	93 1f       	adc	r25, r19
    2986:	0e 94 cf 04 	call	0x99e	; 0x99e <mem_cpy>
    298a:	ad 81       	ldd	r26, Y+5	; 0x05
    298c:	be 81       	ldd	r27, Y+6	; 0x06
    298e:	14 96       	adiw	r26, 0x04	; 4
    2990:	8c 91       	ld	r24, X
    2992:	14 97       	sbiw	r26, 0x04	; 4
    2994:	80 64       	ori	r24, 0x40	; 64
    2996:	14 96       	adiw	r26, 0x04	; 4
    2998:	8c 93       	st	X, r24
    299a:	8e 0c       	add	r8, r14
    299c:	9f 1c       	adc	r9, r15
    299e:	ed 81       	ldd	r30, Y+5	; 0x05
    29a0:	fe 81       	ldd	r31, Y+6	; 0x06
    29a2:	86 81       	ldd	r24, Z+6	; 0x06
    29a4:	97 81       	ldd	r25, Z+7	; 0x07
    29a6:	a0 85       	ldd	r26, Z+8	; 0x08
    29a8:	b1 85       	ldd	r27, Z+9	; 0x09
    29aa:	8e 0d       	add	r24, r14
    29ac:	9f 1d       	adc	r25, r15
    29ae:	a1 1d       	adc	r26, r1
    29b0:	b1 1d       	adc	r27, r1
    29b2:	86 83       	std	Z+6, r24	; 0x06
    29b4:	97 83       	std	Z+7, r25	; 0x07
    29b6:	a0 87       	std	Z+8, r26	; 0x08
    29b8:	b1 87       	std	Z+9, r27	; 0x09
    29ba:	d5 01       	movw	r26, r10
    29bc:	8d 91       	ld	r24, X+
    29be:	9c 91       	ld	r25, X
    29c0:	11 97       	sbiw	r26, 0x01	; 1
    29c2:	8e 0d       	add	r24, r14
    29c4:	9f 1d       	adc	r25, r15
    29c6:	8d 93       	st	X+, r24
    29c8:	9c 93       	st	X, r25
    29ca:	ce 18       	sub	r12, r14
    29cc:	df 08       	sbc	r13, r15
    29ce:	09 f0       	breq	.+2      	; 0x29d2 <f_write+0x396>
    29d0:	76 ce       	rjmp	.-788    	; 0x26be <f_write+0x82>
    29d2:	ed 81       	ldd	r30, Y+5	; 0x05
    29d4:	fe 81       	ldd	r31, Y+6	; 0x06
    29d6:	86 81       	ldd	r24, Z+6	; 0x06
    29d8:	97 81       	ldd	r25, Z+7	; 0x07
    29da:	a0 85       	ldd	r26, Z+8	; 0x08
    29dc:	b1 85       	ldd	r27, Z+9	; 0x09
    29de:	42 85       	ldd	r20, Z+10	; 0x0a
    29e0:	53 85       	ldd	r21, Z+11	; 0x0b
    29e2:	64 85       	ldd	r22, Z+12	; 0x0c
    29e4:	75 85       	ldd	r23, Z+13	; 0x0d
    29e6:	48 17       	cp	r20, r24
    29e8:	59 07       	cpc	r21, r25
    29ea:	6a 07       	cpc	r22, r26
    29ec:	7b 07       	cpc	r23, r27
    29ee:	20 f4       	brcc	.+8      	; 0x29f8 <f_write+0x3bc>
    29f0:	82 87       	std	Z+10, r24	; 0x0a
    29f2:	93 87       	std	Z+11, r25	; 0x0b
    29f4:	a4 87       	std	Z+12, r26	; 0x0c
    29f6:	b5 87       	std	Z+13, r27	; 0x0d
    29f8:	ad 81       	ldd	r26, Y+5	; 0x05
    29fa:	be 81       	ldd	r27, Y+6	; 0x06
    29fc:	14 96       	adiw	r26, 0x04	; 4
    29fe:	8c 91       	ld	r24, X
    2a00:	14 97       	sbiw	r26, 0x04	; 4
    2a02:	80 62       	ori	r24, 0x20	; 32
    2a04:	14 96       	adiw	r26, 0x04	; 4
    2a06:	8c 93       	st	X, r24
    2a08:	80 e0       	ldi	r24, 0x00	; 0
    2a0a:	01 c0       	rjmp	.+2      	; 0x2a0e <f_write+0x3d2>
    2a0c:	87 e0       	ldi	r24, 0x07	; 7
    2a0e:	26 96       	adiw	r28, 0x06	; 6
    2a10:	0f b6       	in	r0, 0x3f	; 63
    2a12:	f8 94       	cli
    2a14:	de bf       	out	0x3e, r29	; 62
    2a16:	0f be       	out	0x3f, r0	; 63
    2a18:	cd bf       	out	0x3d, r28	; 61
    2a1a:	df 91       	pop	r29
    2a1c:	cf 91       	pop	r28
    2a1e:	1f 91       	pop	r17
    2a20:	0f 91       	pop	r16
    2a22:	ff 90       	pop	r15
    2a24:	ef 90       	pop	r14
    2a26:	df 90       	pop	r13
    2a28:	cf 90       	pop	r12
    2a2a:	bf 90       	pop	r11
    2a2c:	af 90       	pop	r10
    2a2e:	9f 90       	pop	r9
    2a30:	8f 90       	pop	r8
    2a32:	7f 90       	pop	r7
    2a34:	6f 90       	pop	r6
    2a36:	5f 90       	pop	r5
    2a38:	4f 90       	pop	r4
    2a3a:	3f 90       	pop	r3
    2a3c:	08 95       	ret

00002a3e <putc_bfd>:
    2a3e:	ef 92       	push	r14
    2a40:	ff 92       	push	r15
    2a42:	0f 93       	push	r16
    2a44:	1f 93       	push	r17
    2a46:	cf 93       	push	r28
    2a48:	df 93       	push	r29
    2a4a:	00 d0       	rcall	.+0      	; 0x2a4c <putc_bfd+0xe>
    2a4c:	cd b7       	in	r28, 0x3d	; 61
    2a4e:	de b7       	in	r29, 0x3e	; 62
    2a50:	fc 01       	movw	r30, r24
    2a52:	22 81       	ldd	r18, Z+2	; 0x02
    2a54:	33 81       	ldd	r19, Z+3	; 0x03
    2a56:	33 23       	and	r19, r19
    2a58:	6c f1       	brlt	.+90     	; 0x2ab4 <putc_bfd+0x76>
    2a5a:	8c 01       	movw	r16, r24
    2a5c:	79 01       	movw	r14, r18
    2a5e:	ff ef       	ldi	r31, 0xFF	; 255
    2a60:	ef 1a       	sub	r14, r31
    2a62:	ff 0a       	sbc	r15, r31
    2a64:	fc 01       	movw	r30, r24
    2a66:	e2 0f       	add	r30, r18
    2a68:	f3 1f       	adc	r31, r19
    2a6a:	66 83       	std	Z+6, r22	; 0x06
    2a6c:	8d e3       	ldi	r24, 0x3D	; 61
    2a6e:	e8 16       	cp	r14, r24
    2a70:	f1 04       	cpc	r15, r1
    2a72:	c4 f0       	brlt	.+48     	; 0x2aa4 <putc_bfd+0x66>
    2a74:	9e 01       	movw	r18, r28
    2a76:	2f 5f       	subi	r18, 0xFF	; 255
    2a78:	3f 4f       	sbci	r19, 0xFF	; 255
    2a7a:	a7 01       	movw	r20, r14
    2a7c:	b8 01       	movw	r22, r16
    2a7e:	6a 5f       	subi	r22, 0xFA	; 250
    2a80:	7f 4f       	sbci	r23, 0xFF	; 255
    2a82:	f8 01       	movw	r30, r16
    2a84:	80 81       	ld	r24, Z
    2a86:	91 81       	ldd	r25, Z+1	; 0x01
    2a88:	d9 dd       	rcall	.-1102   	; 0x263c <f_write>
    2a8a:	81 e0       	ldi	r24, 0x01	; 1
    2a8c:	90 e0       	ldi	r25, 0x00	; 0
    2a8e:	29 81       	ldd	r18, Y+1	; 0x01
    2a90:	3a 81       	ldd	r19, Y+2	; 0x02
    2a92:	e2 16       	cp	r14, r18
    2a94:	f3 06       	cpc	r15, r19
    2a96:	11 f4       	brne	.+4      	; 0x2a9c <putc_bfd+0x5e>
    2a98:	80 e0       	ldi	r24, 0x00	; 0
    2a9a:	90 e0       	ldi	r25, 0x00	; 0
    2a9c:	ee 24       	eor	r14, r14
    2a9e:	ff 24       	eor	r15, r15
    2aa0:	e8 1a       	sub	r14, r24
    2aa2:	f9 0a       	sbc	r15, r25
    2aa4:	f8 01       	movw	r30, r16
    2aa6:	f3 82       	std	Z+3, r15	; 0x03
    2aa8:	e2 82       	std	Z+2, r14	; 0x02
    2aaa:	84 81       	ldd	r24, Z+4	; 0x04
    2aac:	95 81       	ldd	r25, Z+5	; 0x05
    2aae:	01 96       	adiw	r24, 0x01	; 1
    2ab0:	95 83       	std	Z+5, r25	; 0x05
    2ab2:	84 83       	std	Z+4, r24	; 0x04
    2ab4:	0f 90       	pop	r0
    2ab6:	0f 90       	pop	r0
    2ab8:	df 91       	pop	r29
    2aba:	cf 91       	pop	r28
    2abc:	1f 91       	pop	r17
    2abe:	0f 91       	pop	r16
    2ac0:	ff 90       	pop	r15
    2ac2:	ef 90       	pop	r14
    2ac4:	08 95       	ret

00002ac6 <f_sync>:
    2ac6:	0f 93       	push	r16
    2ac8:	1f 93       	push	r17
    2aca:	cf 93       	push	r28
    2acc:	df 93       	push	r29
    2ace:	ec 01       	movw	r28, r24
    2ad0:	0e 94 43 06 	call	0xc86	; 0xc86 <validate>
    2ad4:	81 11       	cpse	r24, r1
    2ad6:	b3 c0       	rjmp	.+358    	; 0x2c3e <f_sync+0x178>
    2ad8:	8c 81       	ldd	r24, Y+4	; 0x04
    2ada:	85 ff       	sbrs	r24, 5
    2adc:	b2 c0       	rjmp	.+356    	; 0x2c42 <f_sync+0x17c>
    2ade:	86 ff       	sbrs	r24, 6
    2ae0:	13 c0       	rjmp	.+38     	; 0x2b08 <f_sync+0x42>
    2ae2:	2e 89       	ldd	r18, Y+22	; 0x16
    2ae4:	3f 89       	ldd	r19, Y+23	; 0x17
    2ae6:	48 8d       	ldd	r20, Y+24	; 0x18
    2ae8:	59 8d       	ldd	r21, Y+25	; 0x19
    2aea:	e8 81       	ld	r30, Y
    2aec:	f9 81       	ldd	r31, Y+1	; 0x01
    2aee:	01 e0       	ldi	r16, 0x01	; 1
    2af0:	10 e0       	ldi	r17, 0x00	; 0
    2af2:	be 01       	movw	r22, r28
    2af4:	60 5e       	subi	r22, 0xE0	; 224
    2af6:	7f 4f       	sbci	r23, 0xFF	; 255
    2af8:	81 81       	ldd	r24, Z+1	; 0x01
    2afa:	0e 94 c5 02 	call	0x58a	; 0x58a <disk_write>
    2afe:	81 11       	cpse	r24, r1
    2b00:	a2 c0       	rjmp	.+324    	; 0x2c46 <f_sync+0x180>
    2b02:	8c 81       	ldd	r24, Y+4	; 0x04
    2b04:	8f 7b       	andi	r24, 0xBF	; 191
    2b06:	8c 83       	std	Y+4, r24	; 0x04
    2b08:	4a 8d       	ldd	r20, Y+26	; 0x1a
    2b0a:	5b 8d       	ldd	r21, Y+27	; 0x1b
    2b0c:	6c 8d       	ldd	r22, Y+28	; 0x1c
    2b0e:	7d 8d       	ldd	r23, Y+29	; 0x1d
    2b10:	88 81       	ld	r24, Y
    2b12:	99 81       	ldd	r25, Y+1	; 0x01
    2b14:	0e 94 9f 05 	call	0xb3e	; 0xb3e <move_window>
    2b18:	81 11       	cpse	r24, r1
    2b1a:	97 c0       	rjmp	.+302    	; 0x2c4a <f_sync+0x184>
    2b1c:	ee 8d       	ldd	r30, Y+30	; 0x1e
    2b1e:	ff 8d       	ldd	r31, Y+31	; 0x1f
    2b20:	83 85       	ldd	r24, Z+11	; 0x0b
    2b22:	80 62       	ori	r24, 0x20	; 32
    2b24:	83 87       	std	Z+11, r24	; 0x0b
    2b26:	8a 85       	ldd	r24, Y+10	; 0x0a
    2b28:	84 8f       	std	Z+28, r24	; 0x1c
    2b2a:	8b 85       	ldd	r24, Y+11	; 0x0b
    2b2c:	85 8f       	std	Z+29, r24	; 0x1d
    2b2e:	8c 85       	ldd	r24, Y+12	; 0x0c
    2b30:	86 8f       	std	Z+30, r24	; 0x1e
    2b32:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b34:	87 8f       	std	Z+31, r24	; 0x1f
    2b36:	8e 85       	ldd	r24, Y+14	; 0x0e
    2b38:	9f 85       	ldd	r25, Y+15	; 0x0f
    2b3a:	a8 89       	ldd	r26, Y+16	; 0x10
    2b3c:	b9 89       	ldd	r27, Y+17	; 0x11
    2b3e:	82 8f       	std	Z+26, r24	; 0x1a
    2b40:	93 8f       	std	Z+27, r25	; 0x1b
    2b42:	cd 01       	movw	r24, r26
    2b44:	aa 27       	eor	r26, r26
    2b46:	bb 27       	eor	r27, r27
    2b48:	84 8b       	std	Z+20, r24	; 0x14
    2b4a:	95 8b       	std	Z+21, r25	; 0x15
    2b4c:	16 8a       	std	Z+22, r1	; 0x16
    2b4e:	17 8a       	std	Z+23, r1	; 0x17
    2b50:	81 e2       	ldi	r24, 0x21	; 33
    2b52:	80 8f       	std	Z+24, r24	; 0x18
    2b54:	86 e4       	ldi	r24, 0x46	; 70
    2b56:	81 8f       	std	Z+25, r24	; 0x19
    2b58:	12 8a       	std	Z+18, r1	; 0x12
    2b5a:	13 8a       	std	Z+19, r1	; 0x13
    2b5c:	8c 81       	ldd	r24, Y+4	; 0x04
    2b5e:	8f 7d       	andi	r24, 0xDF	; 223
    2b60:	8c 83       	std	Y+4, r24	; 0x04
    2b62:	e8 81       	ld	r30, Y
    2b64:	f9 81       	ldd	r31, Y+1	; 0x01
    2b66:	81 e0       	ldi	r24, 0x01	; 1
    2b68:	84 83       	std	Z+4, r24	; 0x04
    2b6a:	09 90       	ld	r0, Y+
    2b6c:	d8 81       	ld	r29, Y
    2b6e:	c0 2d       	mov	r28, r0
    2b70:	ce 01       	movw	r24, r28
    2b72:	0e 94 36 05 	call	0xa6c	; 0xa6c <sync_window>
    2b76:	81 11       	cpse	r24, r1
    2b78:	6a c0       	rjmp	.+212    	; 0x2c4e <f_sync+0x188>
    2b7a:	88 81       	ld	r24, Y
    2b7c:	83 30       	cpi	r24, 0x03	; 3
    2b7e:	09 f0       	breq	.+2      	; 0x2b82 <f_sync+0xbc>
    2b80:	53 c0       	rjmp	.+166    	; 0x2c28 <f_sync+0x162>
    2b82:	8d 81       	ldd	r24, Y+5	; 0x05
    2b84:	81 30       	cpi	r24, 0x01	; 1
    2b86:	09 f0       	breq	.+2      	; 0x2b8a <f_sync+0xc4>
    2b88:	4f c0       	rjmp	.+158    	; 0x2c28 <f_sync+0x162>
    2b8a:	be 01       	movw	r22, r28
    2b8c:	62 5d       	subi	r22, 0xD2	; 210
    2b8e:	7f 4f       	sbci	r23, 0xFF	; 255
    2b90:	fb 01       	movw	r30, r22
    2b92:	ce 01       	movw	r24, r28
    2b94:	82 5d       	subi	r24, 0xD2	; 210
    2b96:	9f 4e       	sbci	r25, 0xEF	; 239
    2b98:	11 92       	st	Z+, r1
    2b9a:	e8 17       	cp	r30, r24
    2b9c:	f9 07       	cpc	r31, r25
    2b9e:	e1 f7       	brne	.-8      	; 0x2b98 <f_sync+0xd2>
    2ba0:	85 e5       	ldi	r24, 0x55	; 85
    2ba2:	fe 01       	movw	r30, r28
    2ba4:	e4 5d       	subi	r30, 0xD4	; 212
    2ba6:	fd 4f       	sbci	r31, 0xFD	; 253
    2ba8:	80 83       	st	Z, r24
    2baa:	8a ea       	ldi	r24, 0xAA	; 170
    2bac:	31 96       	adiw	r30, 0x01	; 1
    2bae:	80 83       	st	Z, r24
    2bb0:	82 e5       	ldi	r24, 0x52	; 82
    2bb2:	8e a7       	std	Y+46, r24	; 0x2e
    2bb4:	8f a7       	std	Y+47, r24	; 0x2f
    2bb6:	81 e6       	ldi	r24, 0x61	; 97
    2bb8:	88 ab       	std	Y+48, r24	; 0x30
    2bba:	91 e4       	ldi	r25, 0x41	; 65
    2bbc:	99 ab       	std	Y+49, r25	; 0x31
    2bbe:	22 e7       	ldi	r18, 0x72	; 114
    2bc0:	7b 97       	sbiw	r30, 0x1b	; 27
    2bc2:	20 83       	st	Z, r18
    2bc4:	31 96       	adiw	r30, 0x01	; 1
    2bc6:	20 83       	st	Z, r18
    2bc8:	31 96       	adiw	r30, 0x01	; 1
    2bca:	90 83       	st	Z, r25
    2bcc:	31 96       	adiw	r30, 0x01	; 1
    2bce:	80 83       	st	Z, r24
    2bd0:	3e 85       	ldd	r19, Y+14	; 0x0e
    2bd2:	2f 85       	ldd	r18, Y+15	; 0x0f
    2bd4:	98 89       	ldd	r25, Y+16	; 0x10
    2bd6:	89 89       	ldd	r24, Y+17	; 0x11
    2bd8:	31 96       	adiw	r30, 0x01	; 1
    2bda:	30 83       	st	Z, r19
    2bdc:	31 96       	adiw	r30, 0x01	; 1
    2bde:	20 83       	st	Z, r18
    2be0:	31 96       	adiw	r30, 0x01	; 1
    2be2:	90 83       	st	Z, r25
    2be4:	31 96       	adiw	r30, 0x01	; 1
    2be6:	80 83       	st	Z, r24
    2be8:	3a 85       	ldd	r19, Y+10	; 0x0a
    2bea:	2b 85       	ldd	r18, Y+11	; 0x0b
    2bec:	9c 85       	ldd	r25, Y+12	; 0x0c
    2bee:	8d 85       	ldd	r24, Y+13	; 0x0d
    2bf0:	31 96       	adiw	r30, 0x01	; 1
    2bf2:	30 83       	st	Z, r19
    2bf4:	31 96       	adiw	r30, 0x01	; 1
    2bf6:	20 83       	st	Z, r18
    2bf8:	31 96       	adiw	r30, 0x01	; 1
    2bfa:	90 83       	st	Z, r25
    2bfc:	31 96       	adiw	r30, 0x01	; 1
    2bfe:	80 83       	st	Z, r24
    2c00:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2c02:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2c04:	ac 8d       	ldd	r26, Y+28	; 0x1c
    2c06:	bd 8d       	ldd	r27, Y+29	; 0x1d
    2c08:	9c 01       	movw	r18, r24
    2c0a:	ad 01       	movw	r20, r26
    2c0c:	2f 5f       	subi	r18, 0xFF	; 255
    2c0e:	3f 4f       	sbci	r19, 0xFF	; 255
    2c10:	4f 4f       	sbci	r20, 0xFF	; 255
    2c12:	5f 4f       	sbci	r21, 0xFF	; 255
    2c14:	2a a7       	std	Y+42, r18	; 0x2a
    2c16:	3b a7       	std	Y+43, r19	; 0x2b
    2c18:	4c a7       	std	Y+44, r20	; 0x2c
    2c1a:	5d a7       	std	Y+45, r21	; 0x2d
    2c1c:	01 e0       	ldi	r16, 0x01	; 1
    2c1e:	10 e0       	ldi	r17, 0x00	; 0
    2c20:	89 81       	ldd	r24, Y+1	; 0x01
    2c22:	0e 94 c5 02 	call	0x58a	; 0x58a <disk_write>
    2c26:	1d 82       	std	Y+5, r1	; 0x05
    2c28:	40 e0       	ldi	r20, 0x00	; 0
    2c2a:	50 e0       	ldi	r21, 0x00	; 0
    2c2c:	60 e0       	ldi	r22, 0x00	; 0
    2c2e:	89 81       	ldd	r24, Y+1	; 0x01
    2c30:	0e 94 33 03 	call	0x666	; 0x666 <disk_ioctl>
    2c34:	91 e0       	ldi	r25, 0x01	; 1
    2c36:	81 11       	cpse	r24, r1
    2c38:	0b c0       	rjmp	.+22     	; 0x2c50 <f_sync+0x18a>
    2c3a:	90 e0       	ldi	r25, 0x00	; 0
    2c3c:	09 c0       	rjmp	.+18     	; 0x2c50 <f_sync+0x18a>
    2c3e:	98 2f       	mov	r25, r24
    2c40:	07 c0       	rjmp	.+14     	; 0x2c50 <f_sync+0x18a>
    2c42:	90 e0       	ldi	r25, 0x00	; 0
    2c44:	05 c0       	rjmp	.+10     	; 0x2c50 <f_sync+0x18a>
    2c46:	91 e0       	ldi	r25, 0x01	; 1
    2c48:	03 c0       	rjmp	.+6      	; 0x2c50 <f_sync+0x18a>
    2c4a:	98 2f       	mov	r25, r24
    2c4c:	01 c0       	rjmp	.+2      	; 0x2c50 <f_sync+0x18a>
    2c4e:	98 2f       	mov	r25, r24
    2c50:	89 2f       	mov	r24, r25
    2c52:	df 91       	pop	r29
    2c54:	cf 91       	pop	r28
    2c56:	1f 91       	pop	r17
    2c58:	0f 91       	pop	r16
    2c5a:	08 95       	ret

00002c5c <f_close>:
    2c5c:	cf 93       	push	r28
    2c5e:	df 93       	push	r29
    2c60:	ec 01       	movw	r28, r24
    2c62:	31 df       	rcall	.-414    	; 0x2ac6 <f_sync>
    2c64:	81 11       	cpse	r24, r1
    2c66:	07 c0       	rjmp	.+14     	; 0x2c76 <f_close+0x1a>
    2c68:	ce 01       	movw	r24, r28
    2c6a:	0e 94 43 06 	call	0xc86	; 0xc86 <validate>
    2c6e:	81 11       	cpse	r24, r1
    2c70:	02 c0       	rjmp	.+4      	; 0x2c76 <f_close+0x1a>
    2c72:	19 82       	std	Y+1, r1	; 0x01
    2c74:	18 82       	st	Y, r1
    2c76:	df 91       	pop	r29
    2c78:	cf 91       	pop	r28
    2c7a:	08 95       	ret

00002c7c <f_printf>:
int f_printf (
	FIL* fp,			/* Pointer to the file object */
	const TCHAR* fmt,	/* Pointer to the format string */
	...					/* Optional arguments... */
)
{
    2c7c:	2f 92       	push	r2
    2c7e:	3f 92       	push	r3
    2c80:	4f 92       	push	r4
    2c82:	5f 92       	push	r5
    2c84:	6f 92       	push	r6
    2c86:	7f 92       	push	r7
    2c88:	8f 92       	push	r8
    2c8a:	9f 92       	push	r9
    2c8c:	af 92       	push	r10
    2c8e:	bf 92       	push	r11
    2c90:	cf 92       	push	r12
    2c92:	df 92       	push	r13
    2c94:	ef 92       	push	r14
    2c96:	ff 92       	push	r15
    2c98:	0f 93       	push	r16
    2c9a:	1f 93       	push	r17
    2c9c:	cf 93       	push	r28
    2c9e:	df 93       	push	r29
    2ca0:	cd b7       	in	r28, 0x3d	; 61
    2ca2:	de b7       	in	r29, 0x3e	; 62
    2ca4:	cc 55       	subi	r28, 0x5C	; 92
    2ca6:	d1 09       	sbc	r29, r1
    2ca8:	0f b6       	in	r0, 0x3f	; 63
    2caa:	f8 94       	cli
    2cac:	de bf       	out	0x3e, r29	; 62
    2cae:	0f be       	out	0x3f, r0	; 63
    2cb0:	cd bf       	out	0x3d, r28	; 61
    2cb2:	e5 96       	adiw	r28, 0x35	; 53
    2cb4:	ee ac       	ldd	r14, Y+62	; 0x3e
    2cb6:	ff ac       	ldd	r15, Y+63	; 0x3f
    2cb8:	e5 97       	sbiw	r28, 0x35	; 53
	DWORD v;
	TCHAR c, d, s[16], *p;
	putbuff pb;


	pb.fp = fp;				/* Initialize output buffer */
    2cba:	e3 96       	adiw	r28, 0x33	; 51
    2cbc:	8e ad       	ldd	r24, Y+62	; 0x3e
    2cbe:	9f ad       	ldd	r25, Y+63	; 0x3f
    2cc0:	e3 97       	sbiw	r28, 0x33	; 51
    2cc2:	9c 8b       	std	Y+20, r25	; 0x14
    2cc4:	8b 8b       	std	Y+19, r24	; 0x13
	pb.nchr = pb.idx = 0;
    2cc6:	1e 8a       	std	Y+22, r1	; 0x16
    2cc8:	1d 8a       	std	Y+21, r1	; 0x15
    2cca:	18 8e       	std	Y+24, r1	; 0x18
    2ccc:	1f 8a       	std	Y+23, r1	; 0x17

	va_start(arp, fmt);
    2cce:	2e 01       	movw	r4, r28
    2cd0:	25 e7       	ldi	r18, 0x75	; 117
    2cd2:	42 0e       	add	r4, r18
    2cd4:	51 1c       	adc	r5, r1
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
		if (d == 'D' && (v & 0x80000000)) {
			v = 0 - v;
			f |= 8;
		}
		i = 0;
    2cd6:	21 2c       	mov	r2, r1
		do {
			d = (TCHAR)(v % r); v /= r;
			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
    2cd8:	0f 2e       	mov	r0, r31
    2cda:	f7 e0       	ldi	r31, 0x07	; 7
    2cdc:	3f 2e       	mov	r3, r31
    2cde:	f0 2d       	mov	r31, r0
	pb.nchr = pb.idx = 0;

	va_start(arp, fmt);

	for (;;) {
		c = *fmt++;
    2ce0:	d7 01       	movw	r26, r14
    2ce2:	6c 91       	ld	r22, X
		if (c == 0) break;			/* End of string */
    2ce4:	66 23       	and	r22, r22
    2ce6:	09 f4       	brne	.+2      	; 0x2cea <f_printf+0x6e>
    2ce8:	8c c1       	rjmp	.+792    	; 0x3002 <f_printf+0x386>
		if (c != '%') {				/* Non escape character */
    2cea:	65 32       	cpi	r22, 0x25	; 37
    2cec:	39 f0       	breq	.+14     	; 0x2cfc <f_printf+0x80>
	pb.nchr = pb.idx = 0;

	va_start(arp, fmt);

	for (;;) {
		c = *fmt++;
    2cee:	bf ef       	ldi	r27, 0xFF	; 255
    2cf0:	eb 1a       	sub	r14, r27
    2cf2:	fb 0a       	sbc	r15, r27
		if (c == 0) break;			/* End of string */
		if (c != '%') {				/* Non escape character */
			putc_bfd(&pb, c);
    2cf4:	ce 01       	movw	r24, r28
    2cf6:	43 96       	adiw	r24, 0x13	; 19
    2cf8:	a2 de       	rcall	.-700    	; 0x2a3e <putc_bfd>
			continue;
    2cfa:	f2 cf       	rjmp	.-28     	; 0x2ce0 <f_printf+0x64>
		}
		w = f = 0;
		c = *fmt++;
    2cfc:	f7 01       	movw	r30, r14
    2cfe:	d1 80       	ldd	r13, Z+1	; 0x01
		if (c == '0') {				/* Flag: '0' padding */
    2d00:	f0 e3       	ldi	r31, 0x30	; 48
    2d02:	df 12       	cpse	r13, r31
    2d04:	09 c0       	rjmp	.+18     	; 0x2d18 <f_printf+0x9c>
			f = 1; c = *fmt++;
    2d06:	d7 01       	movw	r26, r14
    2d08:	12 96       	adiw	r26, 0x02	; 2
    2d0a:	dc 90       	ld	r13, X
    2d0c:	f7 01       	movw	r30, r14
    2d0e:	33 96       	adiw	r30, 0x03	; 3
    2d10:	7f 01       	movw	r14, r30
    2d12:	77 24       	eor	r7, r7
    2d14:	73 94       	inc	r7
    2d16:	11 c0       	rjmp	.+34     	; 0x2d3a <f_printf+0xbe>
		} else {
			if (c == '-') {			/* Flag: left justified */
    2d18:	fd e2       	ldi	r31, 0x2D	; 45
    2d1a:	df 16       	cp	r13, r31
    2d1c:	29 f0       	breq	.+10     	; 0x2d28 <f_printf+0xac>
		if (c != '%') {				/* Non escape character */
			putc_bfd(&pb, c);
			continue;
		}
		w = f = 0;
		c = *fmt++;
    2d1e:	22 e0       	ldi	r18, 0x02	; 2
    2d20:	e2 0e       	add	r14, r18
    2d22:	f1 1c       	adc	r15, r1
		if (c == 0) break;			/* End of string */
		if (c != '%') {				/* Non escape character */
			putc_bfd(&pb, c);
			continue;
		}
		w = f = 0;
    2d24:	71 2c       	mov	r7, r1
    2d26:	09 c0       	rjmp	.+18     	; 0x2d3a <f_printf+0xbe>
		c = *fmt++;
		if (c == '0') {				/* Flag: '0' padding */
			f = 1; c = *fmt++;
		} else {
			if (c == '-') {			/* Flag: left justified */
				f = 2; c = *fmt++;
    2d28:	d7 01       	movw	r26, r14
    2d2a:	12 96       	adiw	r26, 0x02	; 2
    2d2c:	dc 90       	ld	r13, X
    2d2e:	f7 01       	movw	r30, r14
    2d30:	33 96       	adiw	r30, 0x03	; 3
    2d32:	7f 01       	movw	r14, r30
    2d34:	68 94       	set
    2d36:	77 24       	eor	r7, r7
    2d38:	71 f8       	bld	r7, 1
			}
		}
		while (IsDigit(c)) {		/* Precision */
    2d3a:	80 ed       	ldi	r24, 0xD0	; 208
    2d3c:	8d 0d       	add	r24, r13
    2d3e:	8a 30       	cpi	r24, 0x0A	; 10
    2d40:	f0 f4       	brcc	.+60     	; 0x2d7e <f_printf+0x102>
    2d42:	02 2d       	mov	r16, r2
    2d44:	10 e0       	ldi	r17, 0x00	; 0
    2d46:	8d 2d       	mov	r24, r13
			w = w * 10 + c - '0';
    2d48:	98 01       	movw	r18, r16
    2d4a:	22 0f       	add	r18, r18
    2d4c:	33 1f       	adc	r19, r19
    2d4e:	00 0f       	add	r16, r16
    2d50:	11 1f       	adc	r17, r17
    2d52:	00 0f       	add	r16, r16
    2d54:	11 1f       	adc	r17, r17
    2d56:	00 0f       	add	r16, r16
    2d58:	11 1f       	adc	r17, r17
    2d5a:	02 0f       	add	r16, r18
    2d5c:	13 1f       	adc	r17, r19
    2d5e:	08 0f       	add	r16, r24
    2d60:	11 1d       	adc	r17, r1
    2d62:	00 53       	subi	r16, 0x30	; 48
    2d64:	11 09       	sbc	r17, r1
			c = *fmt++;
    2d66:	ff ef       	ldi	r31, 0xFF	; 255
    2d68:	ef 1a       	sub	r14, r31
    2d6a:	ff 0a       	sbc	r15, r31
    2d6c:	f7 01       	movw	r30, r14
    2d6e:	31 97       	sbiw	r30, 0x01	; 1
    2d70:	80 81       	ld	r24, Z
		} else {
			if (c == '-') {			/* Flag: left justified */
				f = 2; c = *fmt++;
			}
		}
		while (IsDigit(c)) {		/* Precision */
    2d72:	90 ed       	ldi	r25, 0xD0	; 208
    2d74:	98 0f       	add	r25, r24
    2d76:	9a 30       	cpi	r25, 0x0A	; 10
    2d78:	38 f3       	brcs	.-50     	; 0x2d48 <f_printf+0xcc>
    2d7a:	d8 2e       	mov	r13, r24
    2d7c:	02 c0       	rjmp	.+4      	; 0x2d82 <f_printf+0x106>
    2d7e:	02 2d       	mov	r16, r2
    2d80:	10 e0       	ldi	r17, 0x00	; 0
			w = w * 10 + c - '0';
			c = *fmt++;
		}
		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
    2d82:	8d 2d       	mov	r24, r13
    2d84:	8f 7d       	andi	r24, 0xDF	; 223
    2d86:	8c 34       	cpi	r24, 0x4C	; 76
    2d88:	41 f4       	brne	.+16     	; 0x2d9a <f_printf+0x11e>
			f |= 4; c = *fmt++;
    2d8a:	27 2d       	mov	r18, r7
    2d8c:	24 60       	ori	r18, 0x04	; 4
    2d8e:	72 2e       	mov	r7, r18
    2d90:	d7 01       	movw	r26, r14
    2d92:	dc 90       	ld	r13, X
    2d94:	f7 01       	movw	r30, r14
    2d96:	31 96       	adiw	r30, 0x01	; 1
    2d98:	7f 01       	movw	r14, r30
		}
		if (!c) break;
    2d9a:	dd 20       	and	r13, r13
    2d9c:	09 f4       	brne	.+2      	; 0x2da0 <f_printf+0x124>
    2d9e:	31 c1       	rjmp	.+610    	; 0x3002 <f_printf+0x386>
		d = c;
		if (IsLower(d)) d -= 0x20;
    2da0:	8f e9       	ldi	r24, 0x9F	; 159
    2da2:	8d 0d       	add	r24, r13
    2da4:	8a 31       	cpi	r24, 0x1A	; 26
    2da6:	18 f4       	brcc	.+6      	; 0x2dae <f_printf+0x132>
    2da8:	30 ee       	ldi	r19, 0xE0	; 224
    2daa:	3d 0d       	add	r19, r13
    2dac:	01 c0       	rjmp	.+2      	; 0x2db0 <f_printf+0x134>
		}
		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
			f |= 4; c = *fmt++;
		}
		if (!c) break;
		d = c;
    2dae:	3d 2d       	mov	r19, r13
		if (IsLower(d)) d -= 0x20;
		switch (d) {				/* Type is... */
    2db0:	83 2f       	mov	r24, r19
    2db2:	90 e0       	ldi	r25, 0x00	; 0
    2db4:	fc 01       	movw	r30, r24
    2db6:	e2 54       	subi	r30, 0x42	; 66
    2db8:	f1 09       	sbc	r31, r1
    2dba:	e7 31       	cpi	r30, 0x17	; 23
    2dbc:	f1 05       	cpc	r31, r1
    2dbe:	08 f0       	brcs	.+2      	; 0x2dc2 <f_printf+0x146>
    2dc0:	57 c0       	rjmp	.+174    	; 0x2e70 <f_printf+0x1f4>
    2dc2:	e3 58       	subi	r30, 0x83	; 131
    2dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc6:	f5 c1       	rjmp	.+1002   	; 0x31b2 <__tablejump2__>
		case 'S' :					/* String */
			p = va_arg(arp, TCHAR*);
    2dc8:	f2 01       	movw	r30, r4
    2dca:	a0 80       	ld	r10, Z
    2dcc:	b1 80       	ldd	r11, Z+1	; 0x01
    2dce:	f2 e0       	ldi	r31, 0x02	; 2
    2dd0:	4f 0e       	add	r4, r31
    2dd2:	51 1c       	adc	r5, r1
			for (j = 0; p[j]; j++) ;
    2dd4:	d5 01       	movw	r26, r10
    2dd6:	6c 91       	ld	r22, X
    2dd8:	66 23       	and	r22, r22
    2dda:	09 f4       	brne	.+2      	; 0x2dde <f_printf+0x162>
    2ddc:	37 c1       	rjmp	.+622    	; 0x304c <f_printf+0x3d0>
    2dde:	f5 01       	movw	r30, r10
    2de0:	31 96       	adiw	r30, 0x01	; 1
    2de2:	c2 2c       	mov	r12, r2
    2de4:	d1 2c       	mov	r13, r1
    2de6:	bf ef       	ldi	r27, 0xFF	; 255
    2de8:	cb 1a       	sub	r12, r27
    2dea:	db 0a       	sbc	r13, r27
    2dec:	81 91       	ld	r24, Z+
    2dee:	81 11       	cpse	r24, r1
    2df0:	fa cf       	rjmp	.-12     	; 0x2de6 <f_printf+0x16a>
    2df2:	29 c1       	rjmp	.+594    	; 0x3046 <f_printf+0x3ca>
    2df4:	c2 2c       	mov	r12, r2
    2df6:	d1 2c       	mov	r13, r1
			if (!(f & 2)) {
				while (j++ < w) putc_bfd(&pb, ' ');
    2df8:	66 24       	eor	r6, r6
    2dfa:	63 94       	inc	r6
    2dfc:	71 2c       	mov	r7, r1
    2dfe:	46 01       	movw	r8, r12
    2e00:	60 e2       	ldi	r22, 0x20	; 32
    2e02:	ce 01       	movw	r24, r28
    2e04:	43 96       	adiw	r24, 0x13	; 19
    2e06:	1b de       	rcall	.-970    	; 0x2a3e <putc_bfd>
    2e08:	ef ef       	ldi	r30, 0xFF	; 255
    2e0a:	8e 1a       	sub	r8, r30
    2e0c:	9e 0a       	sbc	r9, r30
    2e0e:	80 16       	cp	r8, r16
    2e10:	91 06       	cpc	r9, r17
    2e12:	b0 f3       	brcs	.-20     	; 0x2e00 <f_printf+0x184>
    2e14:	93 01       	movw	r18, r6
    2e16:	2c 19       	sub	r18, r12
    2e18:	3d 09       	sbc	r19, r13
    2e1a:	69 01       	movw	r12, r18
    2e1c:	c0 0e       	add	r12, r16
    2e1e:	d1 1e       	adc	r13, r17
			}
			while (*p) putc_bfd(&pb, *p++);
    2e20:	d5 01       	movw	r26, r10
    2e22:	6c 91       	ld	r22, X
    2e24:	66 23       	and	r22, r22
    2e26:	59 f0       	breq	.+22     	; 0x2e3e <f_printf+0x1c2>
    2e28:	bf ef       	ldi	r27, 0xFF	; 255
    2e2a:	ab 1a       	sub	r10, r27
    2e2c:	bb 0a       	sbc	r11, r27
    2e2e:	ce 01       	movw	r24, r28
    2e30:	43 96       	adiw	r24, 0x13	; 19
    2e32:	05 de       	rcall	.-1014   	; 0x2a3e <putc_bfd>
    2e34:	f5 01       	movw	r30, r10
    2e36:	61 91       	ld	r22, Z+
    2e38:	5f 01       	movw	r10, r30
    2e3a:	61 11       	cpse	r22, r1
    2e3c:	f8 cf       	rjmp	.-16     	; 0x2e2e <f_printf+0x1b2>
			while (j++ < w) putc_bfd(&pb, ' ');
    2e3e:	c0 16       	cp	r12, r16
    2e40:	d1 06       	cpc	r13, r17
    2e42:	08 f0       	brcs	.+2      	; 0x2e46 <f_printf+0x1ca>
    2e44:	4d cf       	rjmp	.-358    	; 0x2ce0 <f_printf+0x64>
    2e46:	60 e2       	ldi	r22, 0x20	; 32
    2e48:	ce 01       	movw	r24, r28
    2e4a:	43 96       	adiw	r24, 0x13	; 19
    2e4c:	f8 dd       	rcall	.-1040   	; 0x2a3e <putc_bfd>
    2e4e:	ff ef       	ldi	r31, 0xFF	; 255
    2e50:	cf 1a       	sub	r12, r31
    2e52:	df 0a       	sbc	r13, r31
    2e54:	c0 16       	cp	r12, r16
    2e56:	d1 06       	cpc	r13, r17
    2e58:	b0 f3       	brcs	.-20     	; 0x2e46 <f_printf+0x1ca>
    2e5a:	42 cf       	rjmp	.-380    	; 0x2ce0 <f_printf+0x64>
			continue;
		case 'C' :					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
    2e5c:	82 01       	movw	r16, r4
    2e5e:	0e 5f       	subi	r16, 0xFE	; 254
    2e60:	1f 4f       	sbci	r17, 0xFF	; 255
    2e62:	d2 01       	movw	r26, r4
    2e64:	6c 91       	ld	r22, X
    2e66:	ce 01       	movw	r24, r28
    2e68:	43 96       	adiw	r24, 0x13	; 19
    2e6a:	e9 dd       	rcall	.-1070   	; 0x2a3e <putc_bfd>
    2e6c:	28 01       	movw	r4, r16
    2e6e:	38 cf       	rjmp	.-400    	; 0x2ce0 <f_printf+0x64>
		case 'U' :					/* Unsigned decimal */
			r = 10; break;
		case 'X' :					/* Hexdecimal */
			r = 16; break;
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
    2e70:	6d 2d       	mov	r22, r13
    2e72:	ce 01       	movw	r24, r28
    2e74:	43 96       	adiw	r24, 0x13	; 19
    2e76:	e3 dd       	rcall	.-1082   	; 0x2a3e <putc_bfd>
    2e78:	33 cf       	rjmp	.-410    	; 0x2ce0 <f_printf+0x64>
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    2e7a:	72 fe       	sbrs	r7, 2
    2e7c:	0e c0       	rjmp	.+28     	; 0x2e9a <f_printf+0x21e>
			r = 2; break;
		case 'O' :					/* Octal */
			r = 8; break;
		case 'D' :					/* Signed decimal */
		case 'U' :					/* Unsigned decimal */
			r = 10; break;
    2e7e:	aa e0       	ldi	r26, 0x0A	; 10
    2e80:	01 c0       	rjmp	.+2      	; 0x2e84 <f_printf+0x208>
		case 'X' :					/* Hexdecimal */
			r = 16; break;
    2e82:	a0 e1       	ldi	r26, 0x10	; 16
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    2e84:	f2 01       	movw	r30, r4
    2e86:	60 81       	ld	r22, Z
    2e88:	71 81       	ldd	r23, Z+1	; 0x01
    2e8a:	82 81       	ldd	r24, Z+2	; 0x02
    2e8c:	93 81       	ldd	r25, Z+3	; 0x03
    2e8e:	b4 e0       	ldi	r27, 0x04	; 4
    2e90:	4b 0e       	add	r4, r27
    2e92:	51 1c       	adc	r5, r1
		if (d == 'D' && (v & 0x80000000)) {
    2e94:	34 34       	cpi	r19, 0x44	; 68
    2e96:	31 f5       	brne	.+76     	; 0x2ee4 <f_printf+0x268>
    2e98:	19 c0       	rjmp	.+50     	; 0x2ecc <f_printf+0x250>
			r = 2; break;
		case 'O' :					/* Octal */
			r = 8; break;
		case 'D' :					/* Signed decimal */
		case 'U' :					/* Unsigned decimal */
			r = 10; break;
    2e9a:	aa e0       	ldi	r26, 0x0A	; 10
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    2e9c:	34 34       	cpi	r19, 0x44	; 68
    2e9e:	61 f4       	brne	.+24     	; 0x2eb8 <f_printf+0x23c>
    2ea0:	f2 01       	movw	r30, r4
    2ea2:	60 81       	ld	r22, Z
    2ea4:	71 81       	ldd	r23, Z+1	; 0x01
    2ea6:	07 2e       	mov	r0, r23
    2ea8:	00 0c       	add	r0, r0
    2eaa:	88 0b       	sbc	r24, r24
    2eac:	99 0b       	sbc	r25, r25
    2eae:	92 01       	movw	r18, r4
    2eb0:	2e 5f       	subi	r18, 0xFE	; 254
    2eb2:	3f 4f       	sbci	r19, 0xFF	; 255
    2eb4:	29 01       	movw	r4, r18
    2eb6:	0a c0       	rjmp	.+20     	; 0x2ecc <f_printf+0x250>
    2eb8:	f2 01       	movw	r30, r4
    2eba:	60 81       	ld	r22, Z
    2ebc:	71 81       	ldd	r23, Z+1	; 0x01
    2ebe:	80 e0       	ldi	r24, 0x00	; 0
    2ec0:	90 e0       	ldi	r25, 0x00	; 0
    2ec2:	92 01       	movw	r18, r4
    2ec4:	2e 5f       	subi	r18, 0xFE	; 254
    2ec6:	3f 4f       	sbci	r19, 0xFF	; 255
    2ec8:	29 01       	movw	r4, r18
    2eca:	0c c0       	rjmp	.+24     	; 0x2ee4 <f_printf+0x268>
		if (d == 'D' && (v & 0x80000000)) {
    2ecc:	99 23       	and	r25, r25
    2ece:	54 f4       	brge	.+20     	; 0x2ee4 <f_printf+0x268>
			v = 0 - v;
    2ed0:	90 95       	com	r25
    2ed2:	80 95       	com	r24
    2ed4:	70 95       	com	r23
    2ed6:	61 95       	neg	r22
    2ed8:	7f 4f       	sbci	r23, 0xFF	; 255
    2eda:	8f 4f       	sbci	r24, 0xFF	; 255
    2edc:	9f 4f       	sbci	r25, 0xFF	; 255
			f |= 8;
    2ede:	37 2d       	mov	r19, r7
    2ee0:	38 60       	ori	r19, 0x08	; 8
    2ee2:	73 2e       	mov	r7, r19
    2ee4:	ae 01       	movw	r20, r28
    2ee6:	4d 5f       	subi	r20, 0xFD	; 253
    2ee8:	5f 4f       	sbci	r21, 0xFF	; 255
    2eea:	5a 01       	movw	r10, r20
		}
		i = 0;
    2eec:	82 2c       	mov	r8, r2
    2eee:	91 2c       	mov	r9, r1
		do {
			d = (TCHAR)(v % r); v /= r;
    2ef0:	2a 2f       	mov	r18, r26
    2ef2:	30 e0       	ldi	r19, 0x00	; 0
    2ef4:	40 e0       	ldi	r20, 0x00	; 0
    2ef6:	50 e0       	ldi	r21, 0x00	; 0
    2ef8:	6d 96       	adiw	r28, 0x1d	; 29
    2efa:	2c af       	std	Y+60, r18	; 0x3c
    2efc:	3d af       	std	Y+61, r19	; 0x3d
    2efe:	4e af       	std	Y+62, r20	; 0x3e
    2f00:	5f af       	std	Y+63, r21	; 0x3f
    2f02:	6d 97       	sbiw	r28, 0x1d	; 29
    2f04:	97 01       	movw	r18, r14
    2f06:	78 01       	movw	r14, r16
    2f08:	1d 2d       	mov	r17, r13
    2f0a:	69 01       	movw	r12, r18
    2f0c:	6d 96       	adiw	r28, 0x1d	; 29
    2f0e:	2c ad       	ldd	r18, Y+60	; 0x3c
    2f10:	3d ad       	ldd	r19, Y+61	; 0x3d
    2f12:	4e ad       	ldd	r20, Y+62	; 0x3e
    2f14:	5f ad       	ldd	r21, Y+63	; 0x3f
    2f16:	6d 97       	sbiw	r28, 0x1d	; 29
    2f18:	2a d1       	rcall	.+596    	; 0x316e <__udivmodsi4>
    2f1a:	f6 2f       	mov	r31, r22
    2f1c:	e6 2f       	mov	r30, r22
    2f1e:	62 2f       	mov	r22, r18
    2f20:	73 2f       	mov	r23, r19
    2f22:	84 2f       	mov	r24, r20
    2f24:	95 2f       	mov	r25, r21
			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
    2f26:	fa 30       	cpi	r31, 0x0A	; 10
    2f28:	30 f0       	brcs	.+12     	; 0x2f36 <f_printf+0x2ba>
    2f2a:	18 37       	cpi	r17, 0x78	; 120
    2f2c:	11 f0       	breq	.+4      	; 0x2f32 <f_printf+0x2b6>
    2f2e:	e3 2d       	mov	r30, r3
    2f30:	01 c0       	rjmp	.+2      	; 0x2f34 <f_printf+0x2b8>
    2f32:	e7 e2       	ldi	r30, 0x27	; 39
    2f34:	ef 0f       	add	r30, r31
			s[i++] = d + '0';
    2f36:	3f ef       	ldi	r19, 0xFF	; 255
    2f38:	83 1a       	sub	r8, r19
    2f3a:	93 0a       	sbc	r9, r19
    2f3c:	e0 5d       	subi	r30, 0xD0	; 208
    2f3e:	d5 01       	movw	r26, r10
    2f40:	ed 93       	st	X+, r30
    2f42:	5d 01       	movw	r10, r26
		} while (v && i < sizeof s / sizeof s[0]);
    2f44:	61 15       	cp	r22, r1
    2f46:	71 05       	cpc	r23, r1
    2f48:	81 05       	cpc	r24, r1
    2f4a:	91 05       	cpc	r25, r1
    2f4c:	21 f0       	breq	.+8      	; 0x2f56 <f_printf+0x2da>
    2f4e:	b0 e1       	ldi	r27, 0x10	; 16
    2f50:	8b 16       	cp	r8, r27
    2f52:	91 04       	cpc	r9, r1
    2f54:	d9 f6       	brne	.-74     	; 0x2f0c <f_printf+0x290>
    2f56:	87 01       	movw	r16, r14
    2f58:	76 01       	movw	r14, r12
		if (f & 8) s[i++] = '-';
    2f5a:	73 fe       	sbrs	r7, 3
    2f5c:	0c c0       	rjmp	.+24     	; 0x2f76 <f_printf+0x2fa>
    2f5e:	e3 e0       	ldi	r30, 0x03	; 3
    2f60:	f0 e0       	ldi	r31, 0x00	; 0
    2f62:	ec 0f       	add	r30, r28
    2f64:	fd 1f       	adc	r31, r29
    2f66:	e8 0d       	add	r30, r8
    2f68:	f9 1d       	adc	r31, r9
    2f6a:	2d e2       	ldi	r18, 0x2D	; 45
    2f6c:	20 83       	st	Z, r18
    2f6e:	a4 01       	movw	r20, r8
    2f70:	4f 5f       	subi	r20, 0xFF	; 255
    2f72:	5f 4f       	sbci	r21, 0xFF	; 255
    2f74:	4a 01       	movw	r8, r20
		j = i; d = (f & 1) ? '0' : ' ';
    2f76:	70 fc       	sbrc	r7, 0
    2f78:	04 c0       	rjmp	.+8      	; 0x2f82 <f_printf+0x306>
    2f7a:	68 94       	set
    2f7c:	66 24       	eor	r6, r6
    2f7e:	65 f8       	bld	r6, 5
    2f80:	04 c0       	rjmp	.+8      	; 0x2f8a <f_printf+0x30e>
    2f82:	0f 2e       	mov	r0, r31
    2f84:	f0 e3       	ldi	r31, 0x30	; 48
    2f86:	6f 2e       	mov	r6, r31
    2f88:	f0 2d       	mov	r31, r0
		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
    2f8a:	71 fc       	sbrc	r7, 1
    2f8c:	15 c0       	rjmp	.+42     	; 0x2fb8 <f_printf+0x33c>
    2f8e:	64 01       	movw	r12, r8
    2f90:	5f ef       	ldi	r21, 0xFF	; 255
    2f92:	c5 1a       	sub	r12, r21
    2f94:	d5 0a       	sbc	r13, r21
    2f96:	80 16       	cp	r8, r16
    2f98:	91 06       	cpc	r9, r17
    2f9a:	08 f4       	brcc	.+2      	; 0x2f9e <f_printf+0x322>
    2f9c:	65 c0       	rjmp	.+202    	; 0x3068 <f_printf+0x3ec>
    2f9e:	0d c0       	rjmp	.+26     	; 0x2fba <f_printf+0x33e>
    2fa0:	8f ef       	ldi	r24, 0xFF	; 255
    2fa2:	c8 1a       	sub	r12, r24
    2fa4:	d8 0a       	sbc	r13, r24
    2fa6:	c0 16       	cp	r12, r16
    2fa8:	d1 06       	cpc	r13, r17
    2faa:	08 f4       	brcc	.+2      	; 0x2fae <f_printf+0x332>
    2fac:	58 c0       	rjmp	.+176    	; 0x305e <f_printf+0x3e2>
    2fae:	68 01       	movw	r12, r16
    2fb0:	9f ef       	ldi	r25, 0xFF	; 255
    2fb2:	c9 1a       	sub	r12, r25
    2fb4:	d9 0a       	sbc	r13, r25
    2fb6:	01 c0       	rjmp	.+2      	; 0x2fba <f_printf+0x33e>
			d = (TCHAR)(v % r); v /= r;
			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
			s[i++] = d + '0';
		} while (v && i < sizeof s / sizeof s[0]);
		if (f & 8) s[i++] = '-';
		j = i; d = (f & 1) ? '0' : ' ';
    2fb8:	64 01       	movw	r12, r8
    2fba:	0f 2e       	mov	r0, r31
    2fbc:	f3 e0       	ldi	r31, 0x03	; 3
    2fbe:	af 2e       	mov	r10, r31
    2fc0:	b1 2c       	mov	r11, r1
    2fc2:	f0 2d       	mov	r31, r0
    2fc4:	ac 0e       	add	r10, r28
    2fc6:	bd 1e       	adc	r11, r29
    2fc8:	a8 0c       	add	r10, r8
    2fca:	b9 1c       	adc	r11, r9
		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
		do putc_bfd(&pb, s[--i]); while (i);
    2fcc:	a1 e0       	ldi	r26, 0x01	; 1
    2fce:	8a 1a       	sub	r8, r26
    2fd0:	91 08       	sbc	r9, r1
    2fd2:	f5 01       	movw	r30, r10
    2fd4:	62 91       	ld	r22, -Z
    2fd6:	5f 01       	movw	r10, r30
    2fd8:	ce 01       	movw	r24, r28
    2fda:	43 96       	adiw	r24, 0x13	; 19
    2fdc:	30 dd       	rcall	.-1440   	; 0x2a3e <putc_bfd>
    2fde:	81 14       	cp	r8, r1
    2fe0:	91 04       	cpc	r9, r1
    2fe2:	a1 f7       	brne	.-24     	; 0x2fcc <f_printf+0x350>
		while (j++ < w) putc_bfd(&pb, d);
    2fe4:	c0 16       	cp	r12, r16
    2fe6:	d1 06       	cpc	r13, r17
    2fe8:	08 f0       	brcs	.+2      	; 0x2fec <f_printf+0x370>
    2fea:	7a ce       	rjmp	.-780    	; 0x2ce0 <f_printf+0x64>
    2fec:	66 2d       	mov	r22, r6
    2fee:	ce 01       	movw	r24, r28
    2ff0:	43 96       	adiw	r24, 0x13	; 19
    2ff2:	25 dd       	rcall	.-1462   	; 0x2a3e <putc_bfd>
    2ff4:	ff ef       	ldi	r31, 0xFF	; 255
    2ff6:	cf 1a       	sub	r12, r31
    2ff8:	df 0a       	sbc	r13, r31
    2ffa:	c0 16       	cp	r12, r16
    2ffc:	d1 06       	cpc	r13, r17
    2ffe:	b0 f3       	brcs	.-20     	; 0x2fec <f_printf+0x370>
    3000:	6f ce       	rjmp	.-802    	; 0x2ce0 <f_printf+0x64>
	}

	va_end(arp);

	if (   pb.idx >= 0		/* Flush buffered characters to the file */
    3002:	4d 89       	ldd	r20, Y+21	; 0x15
    3004:	5e 89       	ldd	r21, Y+22	; 0x16
    3006:	55 23       	and	r21, r21
    3008:	ac f0       	brlt	.+42     	; 0x3034 <f_printf+0x3b8>
		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
    300a:	9e 01       	movw	r18, r28
    300c:	2f 5f       	subi	r18, 0xFF	; 255
    300e:	3f 4f       	sbci	r19, 0xFF	; 255
    3010:	be 01       	movw	r22, r28
    3012:	67 5e       	subi	r22, 0xE7	; 231
    3014:	7f 4f       	sbci	r23, 0xFF	; 255
    3016:	8b 89       	ldd	r24, Y+19	; 0x13
    3018:	9c 89       	ldd	r25, Y+20	; 0x14
    301a:	10 db       	rcall	.-2528   	; 0x263c <f_write>
    301c:	81 11       	cpse	r24, r1
    301e:	0d c0       	rjmp	.+26     	; 0x303a <f_printf+0x3be>
		&& (UINT)pb.idx == nw) return pb.nchr;
    3020:	2d 89       	ldd	r18, Y+21	; 0x15
    3022:	3e 89       	ldd	r19, Y+22	; 0x16
    3024:	89 81       	ldd	r24, Y+1	; 0x01
    3026:	9a 81       	ldd	r25, Y+2	; 0x02
    3028:	28 17       	cp	r18, r24
    302a:	39 07       	cpc	r19, r25
    302c:	49 f4       	brne	.+18     	; 0x3040 <f_printf+0x3c4>
    302e:	8f 89       	ldd	r24, Y+23	; 0x17
    3030:	98 8d       	ldd	r25, Y+24	; 0x18
    3032:	52 c0       	rjmp	.+164    	; 0x30d8 <f_printf+0x45c>
	return EOF;
    3034:	8f ef       	ldi	r24, 0xFF	; 255
    3036:	9f ef       	ldi	r25, 0xFF	; 255
    3038:	4f c0       	rjmp	.+158    	; 0x30d8 <f_printf+0x45c>
    303a:	8f ef       	ldi	r24, 0xFF	; 255
    303c:	9f ef       	ldi	r25, 0xFF	; 255
    303e:	4c c0       	rjmp	.+152    	; 0x30d8 <f_printf+0x45c>
    3040:	8f ef       	ldi	r24, 0xFF	; 255
    3042:	9f ef       	ldi	r25, 0xFF	; 255
    3044:	49 c0       	rjmp	.+146    	; 0x30d8 <f_printf+0x45c>
		if (IsLower(d)) d -= 0x20;
		switch (d) {				/* Type is... */
		case 'S' :					/* String */
			p = va_arg(arp, TCHAR*);
			for (j = 0; p[j]; j++) ;
			if (!(f & 2)) {
    3046:	71 fe       	sbrs	r7, 1
    3048:	19 c0       	rjmp	.+50     	; 0x307c <f_printf+0x400>
    304a:	ee ce       	rjmp	.-548    	; 0x2e28 <f_printf+0x1ac>
    304c:	71 fe       	sbrs	r7, 1
    304e:	1f c0       	rjmp	.+62     	; 0x308e <f_printf+0x412>
		d = c;
		if (IsLower(d)) d -= 0x20;
		switch (d) {				/* Type is... */
		case 'S' :					/* String */
			p = va_arg(arp, TCHAR*);
			for (j = 0; p[j]; j++) ;
    3050:	c2 2c       	mov	r12, r2
    3052:	d1 2c       	mov	r13, r1
    3054:	f4 ce       	rjmp	.-536    	; 0x2e3e <f_printf+0x1c2>
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    3056:	72 fc       	sbrc	r7, 2
    3058:	14 cf       	rjmp	.-472    	; 0x2e82 <f_printf+0x206>
			r = 8; break;
		case 'D' :					/* Signed decimal */
		case 'U' :					/* Unsigned decimal */
			r = 10; break;
		case 'X' :					/* Hexdecimal */
			r = 16; break;
    305a:	a0 e1       	ldi	r26, 0x10	; 16
    305c:	2d cf       	rjmp	.-422    	; 0x2eb8 <f_printf+0x23c>
			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
			s[i++] = d + '0';
		} while (v && i < sizeof s / sizeof s[0]);
		if (f & 8) s[i++] = '-';
		j = i; d = (f & 1) ? '0' : ' ';
		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
    305e:	66 2d       	mov	r22, r6
    3060:	ce 01       	movw	r24, r28
    3062:	43 96       	adiw	r24, 0x13	; 19
    3064:	ec dc       	rcall	.-1576   	; 0x2a3e <putc_bfd>
    3066:	9c cf       	rjmp	.-200    	; 0x2fa0 <f_printf+0x324>
    3068:	66 2d       	mov	r22, r6
    306a:	ce 01       	movw	r24, r28
    306c:	43 96       	adiw	r24, 0x13	; 19
    306e:	e7 dc       	rcall	.-1586   	; 0x2a3e <putc_bfd>
    3070:	64 01       	movw	r12, r8
    3072:	96 cf       	rjmp	.-212    	; 0x2fa0 <f_printf+0x324>
			p = va_arg(arp, TCHAR*);
			for (j = 0; p[j]; j++) ;
			if (!(f & 2)) {
				while (j++ < w) putc_bfd(&pb, ' ');
			}
			while (*p) putc_bfd(&pb, *p++);
    3074:	d5 01       	movw	r26, r10
    3076:	6c 91       	ld	r22, X
		switch (d) {				/* Type is... */
		case 'S' :					/* String */
			p = va_arg(arp, TCHAR*);
			for (j = 0; p[j]; j++) ;
			if (!(f & 2)) {
				while (j++ < w) putc_bfd(&pb, ' ');
    3078:	63 01       	movw	r12, r6
    307a:	d6 ce       	rjmp	.-596    	; 0x2e28 <f_printf+0x1ac>
    307c:	36 01       	movw	r6, r12
    307e:	bf ef       	ldi	r27, 0xFF	; 255
    3080:	6b 1a       	sub	r6, r27
    3082:	7b 0a       	sbc	r7, r27
    3084:	c0 16       	cp	r12, r16
    3086:	d1 06       	cpc	r13, r17
    3088:	08 f4       	brcc	.+2      	; 0x308c <f_printf+0x410>
    308a:	b9 ce       	rjmp	.-654    	; 0x2dfe <f_printf+0x182>
    308c:	f3 cf       	rjmp	.-26     	; 0x3074 <f_printf+0x3f8>
    308e:	01 15       	cp	r16, r1
    3090:	11 05       	cpc	r17, r1
    3092:	09 f0       	breq	.+2      	; 0x3096 <f_printf+0x41a>
    3094:	af ce       	rjmp	.-674    	; 0x2df4 <f_printf+0x178>
    3096:	cc 24       	eor	r12, r12
    3098:	c3 94       	inc	r12
    309a:	d1 2c       	mov	r13, r1
    309c:	d0 ce       	rjmp	.-608    	; 0x2e3e <f_printf+0x1c2>
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    309e:	f2 01       	movw	r30, r4
    30a0:	60 81       	ld	r22, Z
    30a2:	71 81       	ldd	r23, Z+1	; 0x01
    30a4:	82 81       	ldd	r24, Z+2	; 0x02
    30a6:	93 81       	ldd	r25, Z+3	; 0x03
    30a8:	92 01       	movw	r18, r4
    30aa:	2c 5f       	subi	r18, 0xFC	; 252
    30ac:	3f 4f       	sbci	r19, 0xFF	; 255
    30ae:	29 01       	movw	r4, r18
			while (j++ < w) putc_bfd(&pb, ' ');
			continue;
		case 'C' :					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
		case 'B' :					/* Binary */
			r = 2; break;
    30b0:	a2 e0       	ldi	r26, 0x02	; 2
    30b2:	18 cf       	rjmp	.-464    	; 0x2ee4 <f_printf+0x268>
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    30b4:	72 fc       	sbrc	r7, 2
    30b6:	f3 cf       	rjmp	.-26     	; 0x309e <f_printf+0x422>
			while (j++ < w) putc_bfd(&pb, ' ');
			continue;
		case 'C' :					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
		case 'B' :					/* Binary */
			r = 2; break;
    30b8:	a2 e0       	ldi	r26, 0x02	; 2
    30ba:	f0 ce       	rjmp	.-544    	; 0x2e9c <f_printf+0x220>
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    30bc:	d2 01       	movw	r26, r4
    30be:	6d 91       	ld	r22, X+
    30c0:	7d 91       	ld	r23, X+
    30c2:	8d 91       	ld	r24, X+
    30c4:	9c 91       	ld	r25, X
    30c6:	f2 01       	movw	r30, r4
    30c8:	34 96       	adiw	r30, 0x04	; 4
    30ca:	2f 01       	movw	r4, r30
		case 'C' :					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
		case 'B' :					/* Binary */
			r = 2; break;
		case 'O' :					/* Octal */
			r = 8; break;
    30cc:	a8 e0       	ldi	r26, 0x08	; 8
    30ce:	0a cf       	rjmp	.-492    	; 0x2ee4 <f_printf+0x268>
		default:					/* Unknown type (pass-through) */
			putc_bfd(&pb, c); continue;
		}

		/* Get an argument and put it in numeral */
		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_arg(arp, unsigned int));
    30d0:	72 fc       	sbrc	r7, 2
    30d2:	f4 cf       	rjmp	.-24     	; 0x30bc <f_printf+0x440>
		case 'C' :					/* Character */
			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
		case 'B' :					/* Binary */
			r = 2; break;
		case 'O' :					/* Octal */
			r = 8; break;
    30d4:	a8 e0       	ldi	r26, 0x08	; 8
    30d6:	f0 ce       	rjmp	.-544    	; 0x2eb8 <f_printf+0x23c>

	if (   pb.idx >= 0		/* Flush buffered characters to the file */
		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
		&& (UINT)pb.idx == nw) return pb.nchr;
	return EOF;
}
    30d8:	c4 5a       	subi	r28, 0xA4	; 164
    30da:	df 4f       	sbci	r29, 0xFF	; 255
    30dc:	0f b6       	in	r0, 0x3f	; 63
    30de:	f8 94       	cli
    30e0:	de bf       	out	0x3e, r29	; 62
    30e2:	0f be       	out	0x3f, r0	; 63
    30e4:	cd bf       	out	0x3d, r28	; 61
    30e6:	df 91       	pop	r29
    30e8:	cf 91       	pop	r28
    30ea:	1f 91       	pop	r17
    30ec:	0f 91       	pop	r16
    30ee:	ff 90       	pop	r15
    30f0:	ef 90       	pop	r14
    30f2:	df 90       	pop	r13
    30f4:	cf 90       	pop	r12
    30f6:	bf 90       	pop	r11
    30f8:	af 90       	pop	r10
    30fa:	9f 90       	pop	r9
    30fc:	8f 90       	pop	r8
    30fe:	7f 90       	pop	r7
    3100:	6f 90       	pop	r6
    3102:	5f 90       	pop	r5
    3104:	4f 90       	pop	r4
    3106:	3f 90       	pop	r3
    3108:	2f 90       	pop	r2
    310a:	08 95       	ret

0000310c <main>:
#include "ffconf.h"
#include "ff.h"
};

int main(void)
{
    310c:	cf 93       	push	r28
    310e:	df 93       	push	r29
    3110:	cd b7       	in	r28, 0x3d	; 61
    3112:	de b7       	in	r29, 0x3e	; 62
    3114:	c0 52       	subi	r28, 0x20	; 32
    3116:	d0 41       	sbci	r29, 0x10	; 16
    3118:	0f b6       	in	r0, 0x3f	; 63
    311a:	f8 94       	cli
    311c:	de bf       	out	0x3e, r29	; 62
    311e:	0f be       	out	0x3f, r0	; 63
    3120:	cd bf       	out	0x3d, r28	; 61
	static FATFS FATFS_Obj;
	
	disk_initialize(0);
    3122:	80 e0       	ldi	r24, 0x00	; 0
    3124:	0e 94 a7 01 	call	0x34e	; 0x34e <disk_initialize>
	f_mount(&FATFS_Obj,"/",1);
    3128:	41 e0       	ldi	r20, 0x01	; 1
    312a:	60 e1       	ldi	r22, 0x10	; 16
    312c:	71 e0       	ldi	r23, 0x01	; 1
    312e:	8f e2       	ldi	r24, 0x2F	; 47
    3130:	91 e0       	ldi	r25, 0x01	; 1
    3132:	0e 94 8b 0f 	call	0x1f16	; 0x1f16 <f_mount>
	
	FIL fil_obj;
	
	f_open(&fil_obj, "foo.txt", FA_WRITE);
    3136:	42 e0       	ldi	r20, 0x02	; 2
    3138:	62 e1       	ldi	r22, 0x12	; 18
    313a:	71 e0       	ldi	r23, 0x01	; 1
    313c:	8e 01       	movw	r16, r28
    313e:	0f 5f       	subi	r16, 0xFF	; 255
    3140:	1f 4f       	sbci	r17, 0xFF	; 255
    3142:	c8 01       	movw	r24, r16
    3144:	0e 94 de 0f 	call	0x1fbc	; 0x1fbc <f_open>
	
	f_printf(&fil_obj, "test text %u", 1);
    3148:	1f 92       	push	r1
    314a:	81 e0       	ldi	r24, 0x01	; 1
    314c:	8f 93       	push	r24
    314e:	8a e1       	ldi	r24, 0x1A	; 26
    3150:	91 e0       	ldi	r25, 0x01	; 1
    3152:	9f 93       	push	r25
    3154:	8f 93       	push	r24
    3156:	1f 93       	push	r17
    3158:	0f 93       	push	r16
    315a:	90 dd       	rcall	.-1248   	; 0x2c7c <f_printf>
	
	f_close(&fil_obj);
    315c:	c8 01       	movw	r24, r16
    315e:	7e dd       	rcall	.-1284   	; 0x2c5c <f_close>
    3160:	0f 90       	pop	r0
    3162:	0f 90       	pop	r0
    3164:	0f 90       	pop	r0
    3166:	0f 90       	pop	r0
    3168:	0f 90       	pop	r0
    316a:	0f 90       	pop	r0
	
	
	
    while (1) 
    {
    }
    316c:	ff cf       	rjmp	.-2      	; 0x316c <main+0x60>

0000316e <__udivmodsi4>:
    316e:	a1 e2       	ldi	r26, 0x21	; 33
    3170:	1a 2e       	mov	r1, r26
    3172:	aa 1b       	sub	r26, r26
    3174:	bb 1b       	sub	r27, r27
    3176:	fd 01       	movw	r30, r26
    3178:	0d c0       	rjmp	.+26     	; 0x3194 <__udivmodsi4_ep>

0000317a <__udivmodsi4_loop>:
    317a:	aa 1f       	adc	r26, r26
    317c:	bb 1f       	adc	r27, r27
    317e:	ee 1f       	adc	r30, r30
    3180:	ff 1f       	adc	r31, r31
    3182:	a2 17       	cp	r26, r18
    3184:	b3 07       	cpc	r27, r19
    3186:	e4 07       	cpc	r30, r20
    3188:	f5 07       	cpc	r31, r21
    318a:	20 f0       	brcs	.+8      	; 0x3194 <__udivmodsi4_ep>
    318c:	a2 1b       	sub	r26, r18
    318e:	b3 0b       	sbc	r27, r19
    3190:	e4 0b       	sbc	r30, r20
    3192:	f5 0b       	sbc	r31, r21

00003194 <__udivmodsi4_ep>:
    3194:	66 1f       	adc	r22, r22
    3196:	77 1f       	adc	r23, r23
    3198:	88 1f       	adc	r24, r24
    319a:	99 1f       	adc	r25, r25
    319c:	1a 94       	dec	r1
    319e:	69 f7       	brne	.-38     	; 0x317a <__udivmodsi4_loop>
    31a0:	60 95       	com	r22
    31a2:	70 95       	com	r23
    31a4:	80 95       	com	r24
    31a6:	90 95       	com	r25
    31a8:	9b 01       	movw	r18, r22
    31aa:	ac 01       	movw	r20, r24
    31ac:	bd 01       	movw	r22, r26
    31ae:	cf 01       	movw	r24, r30
    31b0:	08 95       	ret

000031b2 <__tablejump2__>:
    31b2:	ee 0f       	add	r30, r30
    31b4:	ff 1f       	adc	r31, r31
    31b6:	00 24       	eor	r0, r0
    31b8:	00 1c       	adc	r0, r0
    31ba:	0b be       	out	0x3b, r0	; 59
    31bc:	07 90       	elpm	r0, Z+
    31be:	f6 91       	elpm	r31, Z
    31c0:	e0 2d       	mov	r30, r0
    31c2:	09 94       	ijmp

000031c4 <__muluhisi3>:
    31c4:	09 d0       	rcall	.+18     	; 0x31d8 <__umulhisi3>
    31c6:	a5 9f       	mul	r26, r21
    31c8:	90 0d       	add	r25, r0
    31ca:	b4 9f       	mul	r27, r20
    31cc:	90 0d       	add	r25, r0
    31ce:	a4 9f       	mul	r26, r20
    31d0:	80 0d       	add	r24, r0
    31d2:	91 1d       	adc	r25, r1
    31d4:	11 24       	eor	r1, r1
    31d6:	08 95       	ret

000031d8 <__umulhisi3>:
    31d8:	a2 9f       	mul	r26, r18
    31da:	b0 01       	movw	r22, r0
    31dc:	b3 9f       	mul	r27, r19
    31de:	c0 01       	movw	r24, r0
    31e0:	a3 9f       	mul	r26, r19
    31e2:	70 0d       	add	r23, r0
    31e4:	81 1d       	adc	r24, r1
    31e6:	11 24       	eor	r1, r1
    31e8:	91 1d       	adc	r25, r1
    31ea:	b2 9f       	mul	r27, r18
    31ec:	70 0d       	add	r23, r0
    31ee:	81 1d       	adc	r24, r1
    31f0:	11 24       	eor	r1, r1
    31f2:	91 1d       	adc	r25, r1
    31f4:	08 95       	ret

000031f6 <_exit>:
    31f6:	f8 94       	cli

000031f8 <__stop_program>:
    31f8:	ff cf       	rjmp	.-2      	; 0x31f8 <__stop_program>
